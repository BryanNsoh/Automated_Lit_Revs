- analysis: '>'
  authors:
  - Ribeiro Junior F.M.
  - Kamienski C.A.
  citation_count: '0'
  description: In fog-based IoT systems, every fog can behave differently due to context
    and vulnerabilities. In smart irrigation systems, some fog nodes use more or fewer
    computing resources to analyze the data according to sensor location, soil moisture,
    plant species, or seasons. Therefore, fog behavior should consider distinct contexts.
    Federated learning support fog-based IoT systems to detect faster the behavior
    of fog nodes as it enables them to perceive previous behaviors from their peer
    nodes. We develop and assess an unsupervised federated learning system to identify
    fog anomalies. We consider experiments with seven rounds of four minutes, executing
    K-Means in every node to obtain local centroids, and the system merges them in
    the cloud to calculate global centroids, sending them back to the fog nodes. This
    paper evaluates the accuracy and time a fog node needs to predict a behavior already
    identified by another fog node. We assess the CPU usage and the time the cloud
    takes to compute global centroids using thousands of local cluster centers and
    measure the prediction time for different fog hardware. We observe that the cloud
    CPU usage and time to obtain the global centroids vary according to the number
    of fog nodes and the number of fog behaviors. Our results also show that, in the
    worst case, our system predicts a behavior by around 50 ms. In contrast, a non-federated
    approach must wait for the current round to end, as 51.3 s in our results. Therefore,
    our approach shows promising results for time-sensitive IoT systems.
  doi: 10.1016/j.iot.2024.101078
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Background 3. Related work 4. FL-means
    system 5. Methodology 6. Results 7. Discussion 8. Conclusion CRediT authorship
    contribution statement Declaration of competing interest Data availability References
    Show full outline Figures (15) Show 9 more figures Tables (2) Table 1 Table 2
    Internet of Things Volume 25, April 2024, 101078 Research article Federated learning
    for performance behavior detection in a fog-IoT system Author links open overlay
    panel Franklin Magalhães Ribeiro Junior a b, Carlos Alberto Kamienski a Show more
    Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2024.101078 Get rights
    and content Abstract In fog-based IoT systems, every fog can behave differently
    due to context and vulnerabilities. In smart irrigation systems, some fog nodes
    use more or fewer computing resources to analyze the data according to sensor
    location, soil moisture, plant species, or seasons. Therefore, fog behavior should
    consider distinct contexts. Federated learning support fog-based IoT systems to
    detect faster the behavior of fog nodes as it enables them to perceive previous
    behaviors from their peer nodes. We develop and assess an unsupervised federated
    learning system to identify fog anomalies. We consider experiments with seven
    rounds of four minutes, executing K-Means in every node to obtain local centroids,
    and the system merges them in the cloud to calculate global centroids, sending
    them back to the fog nodes. This paper evaluates the accuracy and time a fog node
    needs to predict a behavior already identified by another fog node. We assess
    the CPU usage and the time the cloud takes to compute global centroids using thousands
    of local cluster centers and measure the prediction time for different fog hardware.
    We observe that the cloud CPU usage and time to obtain the global centroids vary
    according to the number of fog nodes and the number of fog behaviors. Our results
    also show that, in the worst case, our system predicts a behavior by around 50
    ms. In contrast, a non-federated approach must wait for the current round to end,
    as 51.3 s in our results. Therefore, our approach shows promising results for
    time-sensitive IoT systems. Previous article in issue Next article in issue Keywords
    Intelligent edgeFederated learningFog computingInternet of ThingsUnsupervised
    learning 1. Introduction Fog computing can reduce the volume of data transferred
    to the cloud and decrease the IoT system response time [1,2] as it is physically
    located near the end devices, like sensors and actuators [3]. Besides these advantages,
    fog nodes are vulnerable to attacks and anomalous behaviors [4], which is not
    feasible to monitor manually [5], due to their massive numbers and distinct performance
    behaviors during execution. Cook et al. [6] ratify that detecting anomalies using
    supervised learning algorithms may cause adversities because the system cannot
    perceive new unknown behaviors on the fly. The heterogeneity of fog nodes considers
    the diversity of hardware resources, security policies, data analysis duration,
    and demands CPU and RAM usage [28]. Therefore, each fog node may have different
    expected performance behaviors. Let us consider, for example, two fog nodes with
    the same hardware configurations, where the expected behavior of the first one
    is receiving 200 packets per minute and 60 % CPU usage, but the second one expects
    1000 packets per minute and 20 % CPU usage. Therefore, each fog node can have
    distinct and unlabeled anomalous behaviors, which makes it appropriate to use
    unsupervised learning [14] to detect new behaviors. Knowing every fog behavior
    is essential because the expected behavior can vary according to context features.
    For example, in a smart hospital, a fog node can demand more or less hardware
    and network resources to store and analyze data because the data analysis frequency
    and duration depend on attributes like the number of patients, seasonality, and
    specific sickness endemic peaks. The same happens in a smart irrigation system,
    where some fog nodes use more or fewer computing resources to analyze the data
    according to sensor location, soil moisture, plant species, or annual seasons.
    This paper proposes the FL-Means system that uses unsupervised federated learning
    [7] to streamline the detection of fog node performance behavior (where one behavior
    is a single data cluster). FL-Means addresses the fog node''s veracity challenge
    (detection of expected and unexpected performance behaviors), preliminarily introduced
    by the TW-IoT framework [9]. However, TW-IoT focuses on general concepts without
    proposing or evaluating fog behavior veracity. Here, we consider that the same
    IoT system can have many fog nodes demanding different levels of computing resources
    (behaving differently). Our system can detect every fog node''s expected and anomalous
    performance behaviors, regardless of context variations. Also, it perceives these
    behaviors faster because it uses federated learning. Our system executes an unsupervised
    learning K-Means algorithm [8,31] in every fog node to recognize its performance
    behaviors individually. It also transmits these behaviors as local cluster centroids
    to the cloud side, and the cloud calculates global centroids, sending them to
    all fog nodes. Therefore, all fog nodes use global centroids to identify behaviors
    that occurred previously in other fog nodes and can make accurate predictions.
    Our system also preserves data privacy among fog nodes and the cloud because it
    only transmits data centroids [10], improving the IoT data trustworthiness [9].
    We assess FL-Means in three scenarios, using simulated sensors: (1) agility: evaluate
    FL-Means against a non-federated baseline approach, simulating several behaviors
    in two fog nodes, (2) scalability: explore the system scalability by varying the
    number of fog nodes sending local centroids to the cloud, and (3) heterogeneity:
    analyze the heterogeneity using different fog node hardware to verify the sample
    prediction time, the time to compute local centroids, and the time to receive
    the global centroids. In Scenario 1, we observe two situations where FL-Means
    predicts the fog node behaviors from 1710 to 8043 times faster than the baseline
    approach. Our approach also shows that FL-Means presents higher prediction accuracy
    for these cases but has similar accuracy to the baseline for other situations.
    In Scenario 2, we perceive that the number of behaviors and fog nodes affects
    the CPU usage and time to compute global centroids. When we test 100 local centroids
    for 12 cluster centers, the cloud calculates the global centroids in 1.02 ± 0.01
    s, and for 1000 fog nodes, this computation took less than seven seconds. Finally,
    in Scenario 3, we observe that even in the worst case, using Jetson Nano CPU computation,
    the fog node obtains the local centroids in 2.46 ± 0.02 s, it receives the global
    centroids in 3.18 ± 0.15 s (considering 100 fog nodes), and executes sample predictions
    in 46.77 ± 0.41 ms. We also have evidence that the FL-Means system may support
    the cloud in monitoring all fog node behaviors because the cloud receives the
    behaviors'' centroids from every fog node, decreasing IoT management costs. This
    paper unfolds the sections as follows: Section 2 details the background, Section
    3 covers the related work, Section 4 explains our unsupervised federated learning
    system, Section 5 reports the used methodology, Section 6 reveals our results,
    Section 7 presents the discussion, and finally Section 8 presents the conclusions
    and future work. 2. Background This section clarifies concepts about IoT Stages,
    clustering (unsupervised learning), and federated learning. 2.1. IoT stages This
    paper considers a fog-based IoT system unfolding four computing stages, three
    (thing, mist, and fog) at the edge and a fourth stage at the cloud side. The thing
    stage [11] perceives a context by sensors and executes the system''s decisions
    using actuators. The mist stage [12] can pre-process data before transmitting
    it to the fog stage [3], which can perform system decisions, and may reduce network
    traffic between the edge and the cloud. The cloud stage [13] has more computing
    power than fog and can analyze historical data to improve and make robust decisions.
    2.2. Clustering Unsupervised machine learning, also known as clustering, can cluster
    data samples without prior knowledge of any data category [14,35]. Clustering
    algorithms identify similarities between data samples to generate clusters through
    different strategies, like data density or distance between samples. Consequently,
    these algorithms use the data to create a data model that represents the found
    clusters. Some clustering algorithms only group data samples but do not predict
    which group a new data sample belongs. The algorithms K-Means, Mean-Shift, and
    BIRCH do not have this prediction limitation, also, it is well-known that K-Means
    compute predictions faster than Mean-Shift and BIRCH [14,31,36]. K-Means also
    is faster than other algorithms, according to the results in [36], which evaluated
    data reduction based on machine learning algorithms for fog computing in agriculture.
    The K-Means algorithm begins by randomly defining values for K clusters centroids.
    After that, K-Means iteratively calculates the arithmetic mean distance between
    the centroid and the cluster data points, assigning the computed mean values to
    each K centroid until the data points stay in the same cluster. The Mean-Shift
    algorithm uses the density-based clustering strategy to iteratively search the
    centroids of regions with the highest data points density. Then, Mean-Shift assigns
    these regions as the final clusters. BIRCH is a hierarchical algorithm that builds
    a data tree with leaves corresponding to subclusters and has a threshold value
    that limits each subcluster radius. BIRCH also groups subclusters at the ending
    of execution to obtain a K number of clusters. For K-Means, we mandatory need
    to determine the number of K clusters to generate a data model. However, it is
    impossible to speculate the number of K that obtains the best model. Therefore,
    we can evaluate it by calculating a validation index like Calinski–Harabasz [15].
    The Calinski–Harabasz index can decide the optimal number of clusters, revealing
    the best clustering when the index reaches the highest possible value. 2.3. Federated
    learning Federated learning (FL) is a distributed machine learning technique that
    enables a computing system to train models from decentralized data sources [7].
    In other words, the federated learning approach supports an IoT system to collaboratively
    join different information from distinct edge nodes, enhancing the system''s decisions.
    In IoT, for example, the cloud can create a global model by aggregating individual
    local models of edge nodes. Imteaj et al. [16] and Hosseinalipour et al. [17]
    describe an FL approach in which the edge nodes collect data, generate a local
    model, and send the local gradients to the cloud. When the cloud receives these
    gradients, it runs a federated averaging algorithm to create a global model and
    transmit the global model gradient to edge nodes [7,10]. In IoT, using federated
    learning can also preserve local data privacy because it does not require exposing
    raw data records through the network [10]. 3. Related work Cook et al. [6] expose
    the challenge of detecting anomalies in IoT systems, considering contextual information,
    prior knowledge, scalability, and resource constraints. They also suggest that
    using a classifier for anomaly detection may pose difficulties in perceiving unexplored
    anomalies. Li et al. [18] present a literature review for federated learning,
    and they mention that “existing FL frameworks construct based on supervised learning
    method.” Moreover, they mention federated training for unsupervised machine learning
    as a new research frontier. Sater and Hamza [19] present a federated learning
    approach called FSLSTM to detect sensor energy consumption anomalies in smart
    buildings. They tested the FSLSTM against deep learning models with three types
    of sensors and observed that their proposal presented higher accuracy for detecting
    these anomalies. Yadav et al. [20] propose a federated unsupervised deep learning
    approach. Their approach uses autoencoders to learn unlabeled data and generate
    its own feature set. They evaluate their proposal using a dataset named CICIDS
    without the data labels, obtaining an accuracy of 97.75 % after 100 training rounds.
    Servetnyk, Fung, and Han [21] present an unsupervised federated learning approach
    for unbalanced data that combines the weight computation strategy with an algorithm
    like K-Means. They artificially generate a dataset with 16 clusters and 50 data
    points per cluster. In experiments, they observed that their proposal clustered
    the data better than centralized K-Means, and their results only focused on measuring
    clustering performance metrics. Ahmad et al. [32] proposed a streaming anomaly
    detection algorithm named HTM and evaluated their approach against other techniques
    using a benchmark called NAB. In the evaluation, they mainly measured latency
    and the NAB score. The study considered sensor temporal noise anomalies but did
    not concern a fog-based scenario. Sivanathan et al. [33] categorized the behavior
    of different IoT devices and developed an unsupervised clustering method to identify
    each device''s normal network traffic behavior. The authors also considered retraining
    models for detecting behavior changes due to a firmware upgrade of devices and
    obtained 94.7 % accuracy. Kumar, Karthik, and Nair [22] present a federated K-Means
    clustering that uses K-Means models as local models and calculates the cluster''s
    centroids average in the cloud. The authors assessed their proposal using well-known
    MNIST and EMNIST datasets. However, the study only focused on measuring the model''s
    accuracy. They also do not consider the continuous changeability of the optimal
    number of clusters for every single edge node. Examining the related work, the
    authors do not consider an IoT scenario containing thousands of fog nodes with
    distinct expected behaviors that can individually change according to the seasonality
    (such as the period of the day, month, or season of the year). Therefore, the
    main contribution of this paper is to present a system that can iteratively identify
    new behaviors of fog nodes using a clustering approach to predict the expected
    behavior of individual nodes, also considering the temporal features for distinct
    contexts, like in a smart irrigation system, where some fog nodes use more or
    fewer computing resources to analyze the data according to sensor location, soil
    moisture, plant species, or annual seasons, for example. Our system can also select
    the best model and identify all the fog node behaviors, which may favor diagnosing
    future faults of each node behavior. 4. FL-means system In this paper, we propose
    a system named FL-Means [34] that uses unsupervised federated learning to discover
    new unlabeled fog node behaviors during system execution, also enabling a fog
    node to identify the other fog nodes’ behaviors. FL-Means has a component executing
    on fog nodes and another on the cloud side, respectively named Fog-FL and Cloud-FL
    (Fig. 1, Fig. 2, Fig. 3). Fog-FL and Cloud-FL only transmit clusters centroids
    between fog nodes and the cloud side. In other words, these components do not
    transfer raw data; thus, our system enhances data privacy because it does not
    expose any collected information. Download : Download high-res image (375KB) Download
    : Download full-size image Fig. 1. FL-means system: Fog-FL component. Download
    : Download high-res image (473KB) Download : Download full-size image Fig. 2.
    Fog-FL: Example for execution using WorkingDB and SamplesDB. Download : Download
    high-res image (329KB) Download : Download full-size image Fig. 3. FL-means system:
    cloud-FL component. Fog-FL collects a dataset named workingDB (Figs. 1 and 2),
    which has data samples such as CPU and RAM usage (%), packet delay among sensors
    and fog node (in milliseconds), throughput (Kbps), and the number of packets arriving
    in fog node by every T seconds. Before loop1 execution (Fig. 1), we feed the WorkingDB
    with a few data samples to obtain the known behaviors. During loop1 running, the
    Fog-FL continues to collect these data samples, inserting them in another dataset
    named samplesDB. On the fog side (Fig. 1), the FL-Means system executes five steps
    iteratively: (i) it uses WorkingDB as input to train different K-Means data models
    by varying K values, and it utilizes the Calinski–Harabasz index to decide the
    best model to select (ii) it extracts the clusters centroids of the selected model
    and sends it to the cloud, (iii) it receives new global centroids from the cloud,
    (iv) predicts each sample behavior (cluster) calculating the Euclidean distance
    of these samples from the global centroids and decide if the sample behavior is
    anomalous or not (we consider the expected behavior as the cluster that has more
    data points occurrences in workingDB), and (v) it updates workingDB by inserting
    the data samples of samplesDB in workingDB, because, during Fog-FL execution,
    samplesDB may have new behaviors that are not already stored in workingDB. Additionally,
    the FL-Means system normalizes every input data sample before generating a model
    or predicting its clusters. The Fig. 2 example details the steps presented in
    Fig. 1 and the interaction between the model generated from workingDB and the
    samplesDB. In the Fig. 2 example, the system contains a model from workingDB with
    two known behaviors (A0 and A1). Initially, the system generates a local model
    from workingDB and receives the global model from the cloud. During loop2 execution
    (step 4), it predicts every sample (line) of samplesDB as A0 or A1 behavior. After
    round 1 (all steps''s first execution), the system creates a new workingDB (by
    joining it with samplesDB). In rounds 2 and 3, the system uses the new workingDB
    formed after rounds and repeats the steps mentioned in Fig. 1. However, after
    round 3, the new workingDB model learns a new behavior A2, and now the system
    can detect it when it occurs in any fog node. Therefore, the system joins the
    initial workingDB with the subsequents samplesDB because it can generate models
    from data that appeared during execution time. The system receives each fog''s
    local centroids on the cloud side (Fig. 3). It computes the Euclidean distance
    between every local centroid to verify if it is lower than a threshold value and,
    in turn, marks the centroids that obey this condition. After that, the cloud merges
    the marked centroids by calculating these centroids’ arithmetic mean, and then
    we obtain new centroids values, which refer to combining similar fog node clusters
    centroids. Then, FL-Mean obtains the global centroids being: all the centroids
    of the fog node clusters that Cloud-FL did not merge and the merged fog node centroids.
    Finally, it sends global centroids to all fog nodes. In Fig. 3, the word pass
    means that there is no action for the algorithm execute. 5. Methodology We explore
    three Scenarios: (1) FL-Means against a baseline approach (without global centroids),
    (2) system scalability with thousand local centroids, and (3) FL-Means heterogeneity,
    using different fog node hardware configurations. In the experiments, we use CrateDB
    [23] to support workingDB and samplesDB and run the SenSE simulator [24] to generate
    a dataflow of thousands of packets (which contains the timestamp of the packet
    creation time). We also employ a naïve Linux stress-ng tool to overload the fog
    node CPU and RAM. For Fog-FL (Fig. 1), we configure T = 5 s and i = 48, and for
    Cloud-FL (Fig. 3), we set the threshold value = 0.2. In the experiments, we also
    use the dataset collected by Fog-FL in reference [25]. In the experimental environment
    (Fig. 4), we include the four IoT stages (Section 2.1): SenSE represents the thing
    and mist stages, while Fog-FL and Cloud-FL play the role of the fog and cloud
    stages, respectively. For every scenario, we assess all the distinct time metrics
    with 30 replications, from which we calculate the arithmetic mean, the standard
    deviation, and the 95 % asymptotic confidence intervals. Download : Download high-res
    image (270KB) Download : Download full-size image Fig. 4. Experimental environment
    (for scenario 3, the fog runs SQLite3 [27] instead of CrateDB). Our simulated
    environment data flow (Fig. 4) is based on the real scenario developed for the
    SWAMP project [29,30], which developed an IoT smart water management system focused
    in high-precision smart irrigation. The project had four pilots: (i) MATOPIBA
    Pilot, in Luís Eduardo Magalhães - Brazil, (ii) Guaspari Pilot, in Espírito Santo
    do Pinhal - Brazil, (iii) Intercrop Pilot, Cartagena - Spain, and (iv) CBEC Pilot,
    San Michele/Fosdondo - Italy. In our experiment, we use time-driven sensors because
    we considered the environment for smart irrigation, as shown in [11]. Zyrianoff
    et al. [11] presented and evaluated a 5-layer IoT architecture with different
    configurations for smart agriculture and smart cities applications. In the investigation,
    the authors explained that real smart cities applications can use more event-driven
    sensors, in contrast to real smart agriculture applications that focus on time-driven
    sensors. 5.1. Scenario 1: accuracy and prediction time We use the Mosquitto MQTT
    Broker [26] to intercommunicate all IoT stages, and every stage runs on the Linux
    Ubuntu 18.04 operating system with an Intel Xeon E5620 processor with 2.4 GHz
    and 4 GB RAM. In Scenario 1, we compare our FL-Means system against a baseline
    approach, which is a system that only relies on the fog side. Therefore, the baseline
    does not include steps 2 and 3, mentioned in Fig. 1, without any federation learning
    technique. It also predicts samples (see step 4 of Fig. 1) using the naïve prediction
    method of the K-Means algorithm. 5.1.1. Performance behaviors for fog A We first
    simulate behavior A0 for 10 min and A1 for 20 min, and in subsequent rounds, execute
    behaviors A2 and A3 [25]. • A0: Null packet load (no network traffic). • A1: 1000
    packets per minute and CPU load by 70 %. • A2: 1500 packets per minute, CPU load
    by 100 %, and RAM by 50 %. • A3: 200 packets per minute and CPU load by 40 %.
    5.1.2. Performance behaviors for fog B We initially run behavior B0 for 10 min,
    B1 for 20 min, and B2 for 10 min. In subsequent rounds, execute behaviors B3,
    B4, and B5 [25]. • B0: similar to behavior A0. • B1: 500 packets per minute. •
    B2: 500 packets per minute and CPU load by 80 %. • B3: similar to behavior A1.
    • B4: similar to behavior A2. • B5: similar to behavior A3. 5.1.3. Timeline of
    behavior simulation We execute the experiments in 7 rounds (4 min each), using
    two fog nodes, Fog A and Fog B. As mentioned in Sections 5.1.1 and 5.1.2, before
    starting the experiments, the workingDB of Fog A has data records of behaviors
    A0 and A1, and the workingDB of Fog B has samples of behaviors B0, B1, and B2.
    Fig. 5 shows the occurrence of behaviors during the seven rounds and highlights
    the behaviors B3, B4, and B5 with a red outline when they appear for the first
    time in Fog B. Note that we run B3, B4, and B5 in Fog B after executing them in
    Fog A (as A1, A2, and A3). Download : Download high-res image (231KB) Download
    : Download full-size image Fig. 5. Occurrence of behaviors in timeline. 5.2. Scenario
    2: scalability We explore Cloud-FL scalability considering Fog A and Fog B with
    the local centroids of rounds 1 and 7 (see Sections 5.1.1, 5.1.2, and Fig. 4).
    We also evaluate both fog nodes with 12 local centroids. Our experiments simulate
    fog nodes sending 2, 10, 100, 500, 1000, 5000, 10,000, 20,000, 30,000, and 40,000
    local centroids to the cloud (half Fog A and half Fog B). The cloud runs on Linux
    Ubuntu 18.04 operating system with an Intel Xeon E5620 processor with 2.4 GHz
    and 4 GB RAM. We consider three configurations: • Conf.1: Fog A uses two local
    centroids from round 1 (Sections 5.1.1 and 5.1.3), and Fog B uses three centroids
    from round 7 (Sections 5.1.2 and 5.1.3). • Conf.2: Fog A uses five local centroids,
    and Fog B uses six centroids from round 7. • Conf.3: Fog A uses 12 distinct clusters,
    and Fog B uses the same 12 centroids. 5.3. Scenario 3: heterogeneity We explore
    the FL-Means heterogeneity executing the Fog-FL component using different hardware
    devices. We assess Fog-FL in a Raspberry Pi 4, a Jetson Nano developer kit, and
    a personal computer (PC) with an Intel Core i7 processor. The cloud runs on the
    Linux Ubuntu 18.04 operating system with an Intel Xeon E5620 processor with 2.4
    GHz and 4 GB RAM. We consider three configurations for the fog node hardware:
    • Raspberry: Raspberry Pi 4 Computer Model B running Linux 20.04 operating system
    with Quad-core ARM A72, 1.5 GHz, and 4GB memory. • Jetson: Jetson Nano Developer
    Kit running Linux 20.04 operating system with a Quad-core ARM A57, 1.43 GHz, and
    4 GB memory. • PC: A physical personal computer using an Intel Core i7-5500U processor
    with 2.4 GHz, 8GB RAM, and running Linux 20.04 operating system. 5.4. Metrics
    In scenario 1, we analyze the following metrics: (i) the Calinski–Harabasz index
    for every round; (ii) the number of clusters (it suggests the number of groups
    that fit better according to the Calinski–Harabasz validation index); (iii) the
    confusion matrix (assesses the K-Means data model accuracy); (iv) Accuracy of
    predictions (we evaluate the FL-Means system against baseline); (v) Euclidean
    distance between centroids of Fog A and B behaviors to identify which behaviors
    are similar; (vi) Time BDF, as the time that a fog node needs to correctly predict
    behaviors already learned by other fog nodes (FL-Means against baseline); (vii)
    Time to predict a known behavior in a single sample, where we assess FL-Means
    against a baseline. In scenario 2, we analyze the following metrics: (i) time
    to compute the global centroids and (ii) CPU usage of the Cloud-FL component.
    In scenario 3, we evaluate the (i) Time-Local as the time to compute the local
    centroids, (ii) Time-Global as the time to compute local centers and receive the
    global centroids, considering that a fog node is the first of 100 fog nodes to
    send the local centroids and the last to receive, (iii) Time-Pred-Fog as the time
    to K-Means sample prediction in a fog node (without federated learning) and (iv)
    Time-Pred-FL as the time of sample prediction using the global centroids. 6. Results
    In this section, we reveal our experiment results. 6.1. Results of scenario 1
    Scenario 1 presents the results for individual fog nodes (A and B), and we report
    the results for the FL-Means system against the baseline approach (see Section
    5.1). 6.1.1. Results for each fog node individual behaviors Before each round,
    the Fog-FL component (Fig. 1) runs the Calinski–Harabasz validation to select
    the best clustering model, varying the number of clusters by two up to 10, where
    we obtained the results shown in Fig. 6, Fig. 7. After Fog-FL decides the number
    of clusters, we observe that it corresponds to the number of simulated behaviors
    for Fog A and B (as shown in Table 1 and Fig. 5), except for rounds 6 and 7 of
    Fog A. Download : Download high-res image (295KB) Download : Download full-size
    image Fig. 6. Calinski–Harabasz index to decide the number of clusters for every
    model of fog A (at starting and during the round''s execution). Download : Download
    high-res image (272KB) Download : Download full-size image Fig. 7. Calinski–Harabasz
    index to decide the number of clusters for every model of fog B (at starting and
    during the round''s execution). Table 1. Number of clusters of the selected model
    (Number of behaviors fog A and B learned individually). Fog node During the rounds
    1 2 3 4 5 6 7 A 2 2 2 3 3 5 5 B 3 3 4 4 5 5 6 In Table 1, we verify that the system
    finds the exact number of simulated behaviors for all rounds of Fog B. For rounds
    6 and 7 of Fog A, the Calinski–Harabasz validation suggests four clusters (Section
    5.1.1) but also identifies one more behavior (A4). After analyzing the A4 data
    points, we perceive that the system correctly identifies this new behavior because
    the delay of its samples is twice the value of behavior A1 records. Therefore,
    considering 5 clusters for the models in the last two rounds of Fog A is valid.
    Then, in these rounds, Fog A correctly perceives behaviors A0, A1, A2, A3, and
    A4. We generate a confusion matrix for the last selected models of Fog A and Fog
    B (Fig. 8). The confusion matrix presents the main diagonal tending to approximately
    98 % accuracy for Fog A and 100 % accuracy for Fog B (on a scale of 0.0–1.0),
    where rows and columns symbolize the simulated behaviors and the found clusters.
    Therefore, we perceive that the models are appropriate when comparing the clusters
    with the simulated behaviors (including found behavior A4). Download : Download
    high-res image (182KB) Download : Download full-size image Fig. 8. Confusion matrix
    for last round model of (a) fog A and (b) fog B. 6.1.2. Results of FL-means against
    the baseline We observe that during single sample predictions in Fog A (Fig. 9),
    the FL-Means system and the baseline approach present an accuracy lower than 80
    % for round 3 and equal to 0 % for round 5. The system generates these results
    because it does not immediately recognize the new behaviors A2 during round 3
    and A3 during round 5 (see timeline in Fig. 5). Download : Download high-res image
    (261KB) Download : Download full-size image Fig. 9. Accuracy of predictions for
    fog A. We can observe that behavior A3 never happened before round 5, for Fog
    A or Fog B (see Fig. 5). Therefore, the both systems (federated and non-federated)
    cannot perceive A3 until round 5 finishes, when will be generated a model created
    by a new workingDB with characteristics of behavior A3 (as mentioned in explanation
    of Fig. 2). In Fog A, the correct prediction of these new behaviors will only
    happen when the next round starts; in other words when Fog A generates a new k-means
    model that includes these behaviors as new clusters (see Table 1). During round
    3, for example, Fog A only knows the behaviors A0 and A1 (and behaviors B0, B1,
    B2, and B3 of Fog B if using the FL-Means system). However, no fog node has identified
    A2 yet (see Fig. 5), and it needs to wait until the next round to recognize this
    behavior because A2 is unprecedented for the entire system. In round 5, for example,
    the accuracy is 0 % (Fig. 9) because A3 is the only simulated in this round (see
    Fig. 5). However, the system can identify this behavior in the subsequent round
    6 because, after round 5, Fog A generates new models containing the most recent
    samples and identifies new clusters. In rounds 1, 2, 6, and 7, we observe an accuracy
    of 100 % for both approaches. In round 4, the FL-Means system presented an accuracy
    of 93.8 % against 100 % for baseline. In Fog B, we observe that the baseline does
    not correctly predict the behaviors B4 during round 4 and B5 during round 6 but
    that the FL-Means system detects these behaviors correctly and reveals the most
    accurate prediction values for all assessed rounds (Fig. 10). Therefore, the FL-Means
    system is most advantageous than the baseline because, in rounds 4 and 6, it detects
    the behaviors B4 (identical to A2) and B5 (like A3) without the Fog B needing
    to wait for the next round (to generate a new data model). Therefore, the FL-Means
    system identified B4 and B5 correctly in Fog B because the system previously learned
    them as Fog A behaviors (see timeline in Fig. 5 and Table 1). Download : Download
    high-res image (269KB) Download : Download full-size image Fig. 10. Accuracy of
    predictions for fog B. During round 4, the Fog B individually only knows 4 clusters:
    B0, B1, B2, and B3 (see Table 1), but using the FL-Means system, it also knows
    that the behavior B4 is similar to A2 because Fog A model already knows the three
    clusters: A0, A1, and A2 (see Table 1 and Fig. 5). Analyzing Table 2, we also
    observe that the FL-Means system merged the behaviors B4 and A2 because the Euclidean
    distance between their centroids is lower than 0.2 (our threshold value). Table
    2. Euclidean distances between the clusters centroids of fog A and B (threshold
    value = 0.2). FCa Rounds 1 2 3 4 5 6 7 A0 and B0 0.068 0.054 0.068 0.022 0.023
    0.018 0.018 A1 and B3 0.425 1.012 0.084 0.092 0.092 0.095 A2 and B4 0.163 0.163
    0.163 0.111 A3 and B5 0.048 0.051 a FC = fog clusters. In Fog B, we perceive that
    the non-federated baseline approach presents a 0 % accuracy prediction during
    round 6 (Fig. 10) because we only simulate behavior B5 during this round. During
    round 2, even when Fog B uses FL-Means, it cannot identify the behavior B3 (identical
    to A1) because the Euclidean distance between B3 and A1 is higher than 0.2 (see
    Table 2). Therefore, in this case, FL-Means has an accuracy near the baseline
    approach (Fig. 10). The FL-Means system computes the Euclidean distances between
    similar behaviors above the threshold value for A1 and B3 until round 3 (Table
    2). However, in the following rounds, the distances of A1 and B3 decrease, and
    the system recognizes these behaviors as similar (Table 2). We also verify that
    FL-Means correctly recognizes and merges all other identical behaviors A0 and
    B0, A2 and B4, and A3 and B5 since their first occurrences because the distances
    between their centroids are lower than the threshold value (Table 2). The FL-Means
    system reveals an enormous gain considering the time BDF metric (Fig. 11) because
    it was 1710 times faster in round 4 and 8043 times faster in round 6 than the
    baseline approach, which needs to wait for the next round to identify the new
    behavior correctly. However, FL-Means and baseline are statistically tied in round
    2 because the distance between the behaviors A1 and B3 is not lower than 0.2 at
    this moment (see Table 2), and it needs to wait for the next round to detect the
    behavior B3 individually (see Table 1). In typical situations, we verify that
    both approaches present similar time costs to predict a known behavior in a single
    sample, around 30 ± 2 ms. Download : Download high-res image (175KB) Download
    : Download full-size image Fig. 11. Time BDF: time that fog B needs to correctly
    predict a behavior already identified by fog A (logarithmic scale). 6.2. Results
    of scenario 2 In Scenario 2, we analyze the system scalability, where we send
    two up to 40,000 local centroids to the Cloud-FL component. In our experiment,
    each local centroid refer to the number of fog nodes that send cluster centroids
    to Cloud-FL to generate global centroids (see Section 5.2). Fig. 12 shows that
    the time to compute global centroids for 100 fog nodes is, on average, 0.19 ±
    0.01, 0.35 ± 0.03, and 1.02 ± 0.01 s for Conf.1, Conf.2, and Conf.3, respectively.
    We also note that Conf.3 takes 6.82 ± 0.02 s for 1000 fog nodes, and Conf.3 takes
    31.08 ± 0.02 s with 5000 fog nodes to compute global centroids. Besides, these
    times present a correlation coefficient of 0.99996, 0.99991, and 0.99989 for Conf.1,
    Conf.2, and Conf.3, respectively. Download : Download high-res image (219KB) Download
    : Download full-size image Fig. 12. Time to compute global centroids on the cloud
    side. Our results show that the time to compute the global centroids is linearly
    proportional to the number of clusters and fog nodes sending local cluster centers
    to the cloud. We also observe that cloud CPU usage increases when the number of
    fog nodes expands (Fig. 13), with a correlation coefficient of 0.92724. Download
    : Download high-res image (229KB) Download : Download full-size image Fig. 13.
    CPU usage (%) of the cloud-FL component. 6.3. Results of scenario 3 Scenario 3
    explores the heterogeneity of fog nodes by using three different hardware configurations:
    Jetson, Raspberry, and PC (see Section 5.3). In this scenario, the fog node generates
    and selects one data model to extract the local centroids (Fig. 1.). For the Time-Local
    metric, we observe that the PC configuration takes 5.85 times lower than Jetson
    and 2.28 times lower than Raspberry (Fig. 14). Download : Download high-res image
    (155KB) Download : Download full-size image Fig. 14. Time for the fog node to
    generate local centroids (Time-Local) and for the fog node to obtain global centroids
    with 100 fog nodes (Time-Global). We also measure the Time-Global metric, which
    consists of a fog node calculating local centroids, sending them to the cloud,
    and receiving the cloud centroids (after the cloud sends the same global centroids
    to another 99 fog nodes). Therefore, the time to obtain the global centroids (Time-Global)
    is formed by the time to compute local fog node centroids, the time for the cloud
    to calculate the global centroids, and the time to receive the centroids from
    the cloud. For the Time-Global, we perceive that PC presents the lowest values
    and that Raspberry takes 1.81 times lower than Jetson for this metric (Fig. 14).
    In Fig. 14, we also discovered that Raspberry demands less time to process local
    centroids than Jetson because the FL-Means code runs on a CPU of 1.43 GHz against
    1.5 GHz of Raspberry Pi 4. In Fig. 15, we note that Time-Pred-FL elapses faster
    for every hardware configuration than Time-Pred-Fog. For Time-Pred-Fog, we observe
    that the PC configuration demands, on average, 7.27 less time to predict a sample
    against the Jetson and 3.76 times less than the Raspberry. We also perceive that
    even using the Jetson configuration, the Time-Pred-FL takes less than 47 ms to
    decide a sample cluster. Download : Download high-res image (157KB) Download :
    Download full-size image Fig. 15. Time (milliseconds) to compute a single sample
    prediction using K-Means (Time-Pred-Fog) and the FL-Means system (Time-Pred-FL).
    7. Discussion Based on the results, we observed that FL-Means presents accuracy
    and time gains for predicting unknown fog node behaviors. In an IoT scenario where
    at least one fog node has already learned a new behavior, the FL-Means system
    saves other fog nodes time to predict the same behavior when it appears to them
    for the first time. We also highlight that our system can detect new fog node
    behaviors by continuously training local models with the appropriate number of
    behaviors because it uses Calinski–Harabasz validation every round. Scenario 1
    shows that FL-Means does not merge the behaviors A1 and B3 when B3 appears in
    round 2 because the distance between them is higher than 0.2. In round 3, Fog
    B already learns B3 but does not recognize B3 as the same as A1. The distances
    between B3 and A1 only reduce when the behavior B4 appears at the end of round
    4 because B4 has data samples with the highest RAM and CPU usage, changing the
    cluster centroid of B3. We observe that the threshold for behaviors A1 and B3
    is higher than 0.2 in rounds 1 and 2, delaying the system to perceive that behaviors
    A1 and B3 are similar. Also, supposing we set the threshold to 0.1, the FL-Means
    will not detect that behaviors A2 and B4 are similar. Therefore, it is essential
    to report that the threshold value impacts the prediction time and accuracy results.
    Scenario 2 evidences that the cloud side demands more CPU usage and time to compute
    global centroids when the number of fog nodes increases. Scenario 3 shows that
    FL-Means executed correctly for the three different fog node hardware tested.
    We advise using a cloud component to compute the global centroids for fog nodes
    with the same hardware. For example, one Cloud-FL should calculate data from Raspberry
    fog nodes, and the other should receive data from Jetson fog nodes. The FL-Means
    system enhances IoT trustworthiness by enabling every fog node to learn all other
    fog node behaviors faster without sending any local raw data, only transmitting
    the centroids of the clusters, preserving privacy. Also, the FL-Means system supports
    the cloud in monitoring all expected and anomalous fog node behaviors because
    the cloud always receives the behaviors'' centroids from fog nodes. 8. Conclusion
    This paper presents an unsupervised federated learning system (FL-Means). The
    FL-Means system enables a fog-based IoT application to recognize fog node behaviors
    faster when they have already occurred in different fog nodes. It can also detect
    new behaviors by grouping them in clusters using the K-Means algorithm. We assess
    the FL-Means in three Scenarios: (1) when it identifies each fog node behavior
    individually and against a baseline approach (without the federated learning technique),
    (2) testing scalability, and (3) exploring heterogeneity. In Scenario 1, we execute
    the experiments in seven rounds of four minutes each, using a cloud server and
    two fog nodes that we call A and B. The FL-Means system correctly clustered all
    simulated behaviors for both fog nodes individually. In Scenario 1, we evidence
    that using FL-Means, Fog B adequately predicts the unknown behaviors only Fog
    A previously knew. FL-Means reveal 95.8 % accuracy against 79.2 % of the baseline
    in round 4 and 100 % against 0 % of the baseline in round 6. In the same situation,
    the FL-Means system predicts the behaviors in Fog B faster in rounds 4 and 6 than
    in the baseline approach. Examining Scenarios 2 and 3, with 100 fog nodes, we
    observe that the fog node needs to generate the local model and that our federated
    system only requires milliseconds or at least one second more to calculate a global
    model. We also have evidence that predicting a sample behavior using federated
    learning is faster than not using it. Therefore, our approach shows promising
    results for time-critical IoT applications. A complete system to detect anomalies
    and network attacks can be built on top of FL-Means, but we focused on detecting
    performance anomalies related to context. In future work, we intend to reduce
    FL-Means time response and explore fog nodes with distinct kinds of datasets,
    including network attacks. CRediT authorship contribution statement Franklin Magalhães
    Ribeiro Junior: Conceptualization, Investigation, Methodology, Software, Writing
    – original draft, Writing – review & editing. Carlos Alberto Kamienski: Methodology,
    Supervision, Writing – original draft, Writing – review & editing. Declaration
    of competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Data availability The authors do not have permission
    to share data.FL-Means dataset References [1] A. Kumari, S. Tanwar, S. Tyagi,
    N. Kumar Fog computing for healthcare 4.0 environment: opportunities and challenges
    Comput. Electr. Eng., 72 (2018), pp. 1-13 View PDFView articleView in ScopusGoogle
    Scholar [2] F.M. Ribeiro Junior, C.A. Kamienski Data resilience system for fog
    computing Comput. Netw., 195 (2021), Article 108218, 10.1016/j.comnet.2021.108218
    View PDFView articleView in ScopusGoogle Scholar [3] A. Yousefpour, C. Fung, T.
    Nguyen, K. Kadiyala, F. Jalali, A. Niakanlahiji, J. Kong, J.P. Jue All one needs
    to know about fog computing and related edge computing paradigms: a complete survey
    J. Syst. Archit., 98 (2019) ISSN 1383-7621 Google Scholar [4] M. Chiang, T. Zhang
    Fog and IoT: an overview of research opportunities IEEE Internet Things J., 3
    (6) (2016), pp. 854-864, 10.1109/JIOT.2016.2584538 View in ScopusGoogle Scholar
    [5] R. Kumar, M. Swarnkar, G. Singal, N. Kumar IoT network traffic classification
    using machine learning algorithms: an experimental analysis IEEE Internet Things
    J., 9 (2) (2022) Google Scholar [6] A.A. Cook, G. Mısırlı, Z. Fan Anomaly detection
    for IoT time-series data: a survey IEEE Internet Things J., 7 (2020) Google Scholar
    [7] W.Y.B. Lim, et al. Federated learning in mobile edge networks: a comprehensive
    survey IEEE Commun. Surv. Tutor., 22 (3) (2020), pp. 2031-2063 thirdquarter CrossRefView
    in ScopusGoogle Scholar [8] A.K. Jain, “Data clustering: 50 years beyond K-means,
    pattern recognition letters”, Volume 31, Issue 8, 2010, Pages 651–666. Google
    Scholar [9] F.M.R. Junior, C.A. Kamienski A survey on trustworthiness for the
    Internet of Things IEEE Access, 9 (2021), pp. 42493-42514, 10.1109/ACCESS.2021.3066457
    View in ScopusGoogle Scholar [10] D.C. Nguyen, M. Ding, P.N. Pathirana, A. Seneviratne,
    J. Li, H. Vincent Poor Federated learning for Internet of Things: a comprehensive
    survey IEEE Commun. Surv. Tutor., 23 (3) (2021), pp. 1622-1658 thirdquarter CrossRefView
    in ScopusGoogle Scholar [11] I. Zyrianoff, et al. Architecting and deploying IoT
    smart applications: a performance–oriented approach Sensors, 20 (1) (2020), p.
    84, 10.3390/s20010084 View in ScopusGoogle Scholar [12] M. Asif-Ur-Rahman, et
    al. Toward a heterogeneous mist, fog, and cloud-based framework for the internet
    of healthcare things IEEE Internet Things J., 6 (3) (2019), pp. 4049-4062 CrossRefView
    in ScopusGoogle Scholar [13] M. Armbrust, A. Fox, R. Griffith, A.D. Joseph, R.
    Katz, A. Konwinski, G. Lee, D. Patterson, A. Rabkin, I. Stoica, M. Zaharia A view
    of cloud computing Commun. ACM, 53 (4) (2010), pp. 50-58 CrossRefView in ScopusGoogle
    Scholar [14] D. Soni, N. Kumar Machine learning techniques in emerging cloud computing
    integrated paradigms: a survey and taxonomy J. Netw. Comput. Appl., 205 (2022)
    Google Scholar [15] R. Ünlü, P. Xanthopoulos Estimating the number of clusters
    in a dataset via consensus clustering Expert Syst. Appl., 125 (2019), pp. 33-39
    ISSN 0957-4174 View PDFView articleView in ScopusGoogle Scholar [16] A. Imteaj,
    U. Thakker, S. Wang, J. Li, M.H. Amini A survey on federated learning for resource-constrained
    IoT devices IEEE Internet Things J., 9 (1) (2022), pp. 1-24 CrossRefView in ScopusGoogle
    Scholar [17] S. Hosseinalipour, C.G. Brinton, V. Aggarwal, H. Dai, M. Chiang From
    federated to fog learning: distributed machine learning over heterogeneous wireless
    networks IEEE Commun. Mag., 58 (12) (2020), pp. 41-47 CrossRefView in ScopusGoogle
    Scholar [18] L. Li, Y. Fan, M. Tse, K.-Y. Lin A review of applications in federated
    learning Comput. Ind. Eng., 149 (2020) Google Scholar [19] R.A. Sater, A.B. Hamza
    A federated learning approach to anomaly detection in smart buildings ACM Trans.
    Internet Things, 2 (2021), p. 4 Google Scholar [20] K. Yadav, B.B. Gupta, C.-H.
    Hsu, K.T. Chui Unsupervised federated learning based IoT intrusion detection 2021
    IEEE 10th Global Conference on Consumer Electronics (GCCE) (2021), pp. 298-301
    CrossRefView in ScopusGoogle Scholar [21] M. Servetnyk, C.C. Fung, Z. Han Unsupervised
    federated learning for unbalanced data GLOBECOM 2020 - 2020 IEEE Global Communications
    Conference (2020), pp. 1-6 CrossRefGoogle Scholar [22] H.H. Kumar, K. VR, M.K.
    Nair Federated K-means clustering: a novel edge AI based approach for privacy
    preservation 2020 IEEE International Conference on Cloud Computing in Emerging
    Markets (CCEM) (2020), pp. 52-56, 10.1109/CCEM50674.2020.00021 View in ScopusGoogle
    Scholar [23] CrateDB, https://www.crate.io, accessed: January 2022. Google Scholar
    [24] I. Zyrianoff, F. Borelli, C. Kamienski, SenSE–Sensor Simulation Environment:
    Uma ferramenta para geração de tráfego IoT em larga escala, Salão de Ferramentas,
    Simpósio Brasileiro de Redes de Computadores e Sistemas Distribuídos (2017) 1–8
    (written in Portuguese), tool available in: https://github.com/ivanzy/SenSE-Sensor-Simulation-Environment.
    Google Scholar [25] Dataset of our experiments, https://github.com/FranklinMRJ/FL-Means,
    2022. Google Scholar [26] Eclipse mosquitto, An open source mqtt broker, https://mosquitto.org,
    accessed: May 2022. Google Scholar [27] SQLite3, https://docs.python.org/3/library/sqlite3.html,
    accessed September 2022. Google Scholar [28] H. Atlam, R. Walters, G. Wills Fog
    computing and the Internet of Things: a review Big Data Cogn. Comput., 2 (2) (2018),
    p. 10 CrossRefGoogle Scholar [29] C. Kamienski, J.-P. Soininen, M. Taumberger,
    R. Dantas, A. Toscano, T. Salmon Cinotti, R. Filev Maia, A Torre Neto Smart water
    management platform: IoT-based precision irrigation for agriculture Sensors, 19
    (2) (2019), p. 276, 10.3390/s19020276 View in ScopusGoogle Scholar [30] SWAMP
    Project, Available in: http://swamp-project.org/. Accessed in December 2023. Google
    Scholar [31] Scikit-learn, Machine learning in Python, Available in https://scikit-learn.org/stable/,
    2023. Google Scholar [32] S. Ahmad, A. Lavin, S. Purdy, Z. Agha Unsupervised real-time
    anomaly detection for streaming data Neurocomputing, 262 (2017), pp. 134-147,
    10.1016/j.neucom.2017.04.070 ISSN 0925-2312 View PDFView articleView in ScopusGoogle
    Scholar [33] A. Sivanathan, H.H. Gharakheili, V. Sivaraman Detecting behavioral
    change of IoT devices using clustering-based network traffic modeling IEEE Internet
    Things J., 7 (8) (2020), pp. 7295-7309, 10.1109/JIOT.2020.2984030 View in ScopusGoogle
    Scholar [34] FL-Means''s code, https://github.com/FranklinMRJ/FL-Means/tree/main/implementation,
    2023. Google Scholar [35] D. Xu, Y. Tian A comprehensive survey of clustering
    algorithms Ann. Data Sci., 2 (2015), pp. 165-193, 10.1007/s40745-015-0040-1 Google
    Scholar [36] F.M. Ribeiro Junior, R.A.C. Bianchi, R.C. Prati, K. Kolehmainen,
    J.-P. Soininen, C.A. Kamienski Data reduction based on machine learning algorithms
    for fog computing in IoT smart agriculture Biosys. Eng., 223 (2022), pp. 142-158,
    10.1016/j.biosystemseng.2021.12.021 View PDFView articleView in ScopusGoogle Scholar
    Cited by (0) View Abstract © 2024 Elsevier B.V. All rights reserved. Recommended
    articles IfNot: An approach towards mitigating interest flooding attacks in Named
    Data Networking of Things Internet of Things, Volume 25, 2024, Article 101076
    Sedat Bilgili, …, Shahid Alam View PDF Intelligent healthcare system for IoMT-integrated
    sonography: Leveraging multi-scale self-guided attention networks and dynamic
    self-distillation Internet of Things, Volume 25, 2024, Article 101065 Muhammad
    Usman, …, Junaid Qadir View PDF Federated learning for IoT devices: Enhancing
    TinyML with on-board training Information Fusion, Volume 104, 2024, Article 102189
    M. Ficco, …, S. Russo View PDF Show 3 more articles Article Metrics Captures Readers:
    4 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Federated learning for performance behavior detection in a fog-IoT system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kalyani Y.
  - Vorster L.
  - Whetton R.
  - Collier R.
  citation_count: '0'
  description: In the last decade, digital twin (DT) technology has received considerable
    attention across various domains, such as manufacturing, smart healthcare, and
    smart cities. The digital twin represents a digital representation of a physical
    entity, object, system, or process. Although it is relatively new in the agricultural
    domain, it has gained increasing attention recently. Recent reviews of DTs show
    that this technology has the potential to revolutionise agriculture management
    and activities. It can also provide numerous benefits to all agricultural stakeholders,
    including farmers, agronomists, researchers, and others, in terms of making decisions
    on various agricultural processes. In smart crop farming, DTs help simulate various
    farming tasks like irrigation, fertilisation, nutrient management, and pest control,
    as well as access real-time data and guide farmers through ‘what-if’ scenarios.
    By utilising the latest technologies, such as cloud–fog–edge computing, multi-agent
    systems, and the semantic web, farmers can access real-time data and analytics.
    This enables them to make accurate decisions about optimising their processes
    and improving efficiency. This paper presents a proposed architectural framework
    for DTs, exploring various potential application scenarios that integrate this
    architecture. It also analyses the benefits and challenges of implementing this
    technology in agricultural environments. Additionally, we investigate how cloud–fog–edge
    computing contributes to developing decentralised, real-time systems essential
    for effective management and monitoring in agriculture.
  doi: 10.3390/fi16030100
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Future Internet All Article Types Advanced   Journals
    Future Internet Volume 16 Issue 3 10.3390/fi16030100 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Subscribe SciFeed Recommended
    Articles Related Info Link More by Authors Links Article Views 589 Table of Contents
    Abstract Introduction Background Related Work High Level Architecture for Proposed
    Digital Twin Use Cases in Agriculture Possible Application Scenarios with Digital
    Twin Discussion and Future Work Author Contributions Funding Data Availability
    Statement Conflicts of Interest Abbreviations References Altmetric share Share
    announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up
    Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle
    Application Scenarios of Digital Twins for Smart Crop Farming through Cloud–Fog–Edge
    Infrastructure by Yogeswaranathan Kalyani 1,*, Liam Vorster 1, Rebecca Whetton
    2 and Rem Collier 1,* 1 School of Computer Science, University College Dublin,
    D04 V1W8 Dublin, Ireland 2 School of Biosystems and Food Engineering, University
    College Dublin, D04 V1W8 Dublin, Ireland * Authors to whom correspondence should
    be addressed. Future Internet 2024, 16(3), 100; https://doi.org/10.3390/fi16030100
    Submission received: 23 February 2024 / Revised: 12 March 2024 / Accepted: 14
    March 2024 / Published: 16 March 2024 Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract In the last decade, digital twin (DT) technology
    has received considerable attention across various domains, such as manufacturing,
    smart healthcare, and smart cities. The digital twin represents a digital representation
    of a physical entity, object, system, or process. Although it is relatively new
    in the agricultural domain, it has gained increasing attention recently. Recent
    reviews of DTs show that this technology has the potential to revolutionise agriculture
    management and activities. It can also provide numerous benefits to all agricultural
    stakeholders, including farmers, agronomists, researchers, and others, in terms
    of making decisions on various agricultural processes. In smart crop farming,
    DTs help simulate various farming tasks like irrigation, fertilisation, nutrient
    management, and pest control, as well as access real-time data and guide farmers
    through ‘what-if’ scenarios. By utilising the latest technologies, such as cloud–fog–edge
    computing, multi-agent systems, and the semantic web, farmers can access real-time
    data and analytics. This enables them to make accurate decisions about optimising
    their processes and improving efficiency. This paper presents a proposed architectural
    framework for DTs, exploring various potential application scenarios that integrate
    this architecture. It also analyses the benefits and challenges of implementing
    this technology in agricultural environments. Additionally, we investigate how
    cloud–fog–edge computing contributes to developing decentralised, real-time systems
    essential for effective management and monitoring in agriculture. Keywords: digital
    twin; crop farming; smart agriculture; cloud–fog–edge computing; multi-agent systems
    1. Introduction Agriculture, the primary source of the majority of the globe’s
    food, is one of civilisation’s most challenging issues. To match the growing population’s
    demand for food, advancements in agricultural production need to be sustainable;
    with increasing environmental variability due to climate change and the unsustainable
    dependency on agrochemicals, this is an increasingly difficult task. Technology
    advancement and increasing availability of low-cost sensors have led to a rise
    in the popularity of precision agriculture and smart farming to address the food
    production concerns [1]. Precision agriculture and innovative farming technologies
    enable farmers to be better informed and more adaptive in their response to changing
    weather conditions. Furthermore, the increased data help farmers to move away
    from traditional approaches of broadcasting agrochemicals towards target applications,
    which has both financial and environmental benefits. The latest technologies,
    including sensors, computing edge devices, monitoring devices, smart agricultural
    equipment, and cloud services, are essential for enabling smart agriculture [2],
    precision agriculture, and Agriculture 4.0/5.0 [3,4]. These technologies have
    enabled the rapid adoption of advanced techniques in agriculture, such as cloud–fog–edge
    computing [2], digital twin [5], the Internet of Things (IoT) [6], big data analytics
    [7], machine learning [8], augmented reality [9], and robotics [10]. By utilising
    these technologies, farmers can improve sustainability, enhance productivity,
    and optimise resource utilisation. As these technologies continue to develop and
    become more accessible, we can expect to see more significant advancements in
    smart agriculture in the future. Digital twin is an evolving technology that is
    gaining more attention in all domains. DT can be defined as a digital equivalent
    of a real-life object that mirrors its behaviour and states over its lifetime
    in a virtual space [11]. Although there are a number of studies available in other
    domains using the concept of a DT, it is still in the early stages in agriculture
    [5]. In recent years, agriculture has also received a lot of interest; development
    and implementation are still in progress as stakeholders and researchers work
    to find sustainable and efficient methods to produce food while also reducing
    the impact on the environment. Farming can be generally categorised into two types:
    Open Environment Agriculture (OEA) and Closed Environment Agriculture (CEA). The
    implementation of DT in CEA is relatively easier because of the controlled nature
    of environmental factors. However, implementing DT in OEA is challenging because
    it involves unpredictable natural weather conditions and various other external
    factors. While a significant amount of research focuses on CEA, with studies exploring
    its application in greenhouse [12], aquaponics [13], vertical farming [14], hydroponics
    [15], studies on OEA are comparatively fewer. DT in agriculture is an emerging
    topic that has the potential to bring about significant change. Since a few studies
    are available for OEA, it is clear that there is a need for customised DT frameworks
    specifically for OEA. This gap has motivated us to propose architecture and application
    scenarios for open-environment crop farming. The detailed related work on DT for
    agriculture is discussed in Section 3. This research introduces a novel architecture
    for a DT by integrating multi-agent systems and cloud–fog–edge computing. This
    is designed to rapidly provide necessary decision-making information to farmers
    for “what-ifs” scenarios. It also directs farmers in critical areas and offers
    a dynamic list of prioritised actions that adapt to evolving environmental conditions.
    Moreover, the proposed architecture has the capability to automate certain farm
    tasks based on farmer inputs. Therefore, it enhances overall farm productivity
    and effectively manages various tasks. Additionally, the paper explores a few
    detailed use cases, demonstrating the practical application of DT technology through
    integrated architecture in agricultural environments. The remainder of this work
    is structured as follows: In Section 2 we describe smart crop farming (Section
    2.1), digital twin technology (Section 2.2), and cloud–fog–edge computing (Section
    2.3) as the background of this work. Section 3 discusses related works on Digital
    Twins in the agricultural domain. A high-level architecture for the proposed DT
    agricultural use cases is presented in Section 4. Section 5 explores possible
    application scenarios with digital twins, consisting of the overall scenario for
    agriculture (Section 5.1) and then describing specific scenarios, such as irrigation
    systems in Section 5.2 early alerts on fields in Section 5.3, nutrient management
    recommendations in Section 5.4, and nutrient deficiency risk identification in
    Section 5.5. Finally, Section 6 concludes the discussion and discusses future
    work. 2. Background 2.1. Smart Crop Farming Agriculture plays a crucial role in
    today’s world, as it is essential for feeding the global population. With a growing
    global population and limited resources [16], it is crucial to find innovative
    solutions to maximise crop yield and ensure food security. One such solution is
    the application of smart agriculture techniques, which utilise advanced technologies
    such as satellite imaging and remote sensing, drones and Unmanned Aerial Vehicles
    (UAVs), artificial intelligence, the Internet of Things (IoT), and robotics. Smart
    agriculture, often referred to as precision farming, digital farming, or agriculture
    5.0 [4], aims to optimise agricultural practices by utilising the power of data
    and technology. Smart agriculture, also known as precision farming or digital
    farming [17] or agriculture 5.0 [4], aims to optimise the farming process by increasing
    accuracy and customisation for specific fields or crops. Using these technologies,
    farmers can collect real-time data on soil moisture, temperature, nutrient levels,
    and pest infestations. These data can then be analysed and used to make data-driven
    decisions about irrigation, fertiliser application, pest control, and crop management.
    By integrating smart technologies into agriculture, farmers can not only increase
    crop yields but also reduce resource wastage. Crop farming is generally complex
    and relies heavily on various factors such as weather conditions, soil quality,
    irrigation management, fertiliser and nutrient availability, and pest control.
    In the past, farmers had to rely on traditional methods and intuition to make
    informed decisions [18]. However, with the introduction of smart agriculture or
    smart farming, farmers now have access to real-time data and accurate weather
    forecasts compared to the past. This helps them make timely decisions regarding
    when to plant, irrigate, or harvest their crops to optimise yield. To address
    this challenge, farming now demands a decision support system and monitoring system
    [19]. This is where the IoT plays a crucial role. The IoT refers to the connection
    of physical objects, devices, and sensors through the internet to gather data
    for decision-making [20]. By implementing IoT technology in agriculture, farmers
    can collect data from various sensors and devices placed throughout their fields.
    This data can then be analysed using artificial intelligence algorithms to provide
    insights and recommendations for improving crop production. Other technologies,
    such as machine learning, blockchain, and robotics, can also be integrated into
    smart agriculture systems to automate tasks, reduce labour costs, and improve
    efficiency. Digital twin technology in agriculture is another emerging concept
    that holds great potential in smart agriculture. Overall, smart crop farming is
    transforming traditional methods of farming, bringing about a new era of efficiency
    and productivity in the agricultural sector. 2.2. Digital Twin In recent years,
    the DT concept has garnered global attention. It involves creating a virtual or
    digital replica of a physical object, such as machinery, buildings, farms, fields,
    plants or even human beings, using real-time data from these physical entities.
    This approach allows for comprehensive analysis, simulation, and optimisation.
    The term digital twin, introduced by Grieves in a 2003 presentation and later
    elaborated in a white paper [21], has provided the foundation for its development
    across various domains. Digital models are created by collecting real-time data
    from IoT solutions, such as sensors and other sources. DT systems are different
    from other systems as they not only simulate predicted futures but also provide
    real-time insights. Unlike simulations [22], DTs use real-time data and can provide
    quick and valuable information by incorporating the latest available data. Although
    DT technology originated in manufacturing [23], its application has broadened
    to sectors such as healthcare [24], energy [25], urban planning [26], and recently
    in agriculture [27]. In agriculture, digital twins have revolutionised practices
    by simulating farming cycles such as soil conditions, weather patterns, crop growth,
    and pest infestations and utilising real-time data for decision-making. This approach
    allows for customised recommendations, optimising crop yields, efficient resource
    use, and minimising environmental impacts. Digital twins improve precision farming
    by creating accurate digital replicas of farms, enabling remote monitoring and
    management. Farmers can customise irrigation and fertilisation plans and accurately
    predict harvesting times. As advanced predictive tools, these models help manage
    risks like crop diseases and pest infestations effectively. Integrating artificial
    intelligence and machine learning [28] further provides advanced analytics and
    predictive insights essential for sustainable food production and climate change
    adaptation. Even though introducing DTs in agriculture offers many benefits, adopting
    this technology faces challenges [29], including the need for significant initial
    investment, a robust technological infrastructure, and concerns regarding data
    privacy. Despite these limitations, the future of DTs in agriculture and beyond
    looks promising, with potential advancements such as enhanced integration with
    advanced technologies. 2.3. Cloud–Fog–Edge Computing Cloud–fog–edge computing
    is a paradigm that combines the power of cloud computing, fog computing, and edge
    computing to create a distributed and collaborative computing platform. At its
    core, cloud–fog–edge aims to optimise the processing and storage of data by leveraging
    the strengths of each computing model. Utilising cloud computing, this architecture
    can benefit from its vast resources and scalability for handling large-scale data
    processing and storage [30]. Fog computing, on the other hand, brings the computational
    power closer to the data source, reducing latency and improving real-time processing
    capabilities [31]. Edge computing enables processing and storage to be performed
    at or near the edge devices themselves, reducing the need for data transmission
    and thus improving efficiency. This combination of cloud, fog, and edge computing
    addresses the limitations and challenges of traditional centralised computing
    models. As the agriculture domain evolves with the integration of cloud, fog,
    and edge computing, a powerful architecture emerges that significantly impacts
    farming practices. Edge computing, situated closer to on-field devices, ensures
    fast data processing and minimal latency, which is essential for real-time decision-making
    [32]. However, fog computing plays a pivotal role in this integration, not only
    seamlessly connecting with edge devices but also conducting intelligent analysis
    [33,34]. The unique capability of fog computing to extend its reach to both the
    edge and the cloud makes it an indispensable component of agricultural systems.
    The introduction of mobile fog zones, actively gathering data from the fields,
    and static fog zones, providing localised storage and computing capabilities for
    immediate data analysis, marks a crucial transformation [35]. This cloud–fog–edge
    combination architecture not only optimises data processing and decision support
    at the field level but also leverages cloud resources for comprehensive analysis.
    The importance of fog computing in agriculture is underscored by its role in bridging
    the gap between on-field operations and broader cloud-based insights, thereby
    enhancing the efficiency, scalability, and adaptability of agricultural practices.
    3. Related Work Recent reviews show that interest in DTs in agriculture has notably
    increased in the last few years. For instance, the authors of [27] presented an
    extensive literature survey on DTs in agriculture, establishing a foundational
    understanding of the topic. The authors of [36] examined the application of the
    DT paradigm in assessing soil quality, highlighting the technology’s potential
    to revolutionise traditional practices. Further, Ref. [13] introduced a pioneering
    case study on urban farming technology. This study explored how a cyber-physical
    aquaponics system, augmented with a DT and machine learning, could gain adaptive
    capabilities, showcasing the practical implementation and benefits of DTs in enhancing
    agricultural systems. Verdouw et al. [11] analysed how DTs could advance smart
    farming. The authors defined the concept of a DT, developed a typology of different
    types of DTs, and proposed a conceptual framework for their design and implementation.
    The authors mentioned that DTs in agriculture include six distinct types: imaginary,
    monitoring, predictive, autonomous, and recollection DTs, each serving different
    control purposes. The authors also proposed a framework and applied and validated
    it in five smart farming use cases in the European IoF2020 project, covering arable
    farming, dairy farming, greenhouse horticulture, organic vegetable farming, and
    livestock farming. The case studies have offered valuable insights into how DTs
    can improve and optimise smart farming systems. In 2021, Pylianidis et al. [27]
    published a literature review on digital twins in agriculture from 2017 to 2020.
    The authors identified 28 use cases and compared them with other domains’ use
    cases. The authors compared reported benefits, service categories, and technology
    readiness levels to assess the level of digital twin adoption in agriculture.
    The authors also proposed a roadmap inspired by other domains of DT applications.
    This paper concluded by identifying distinctive characteristics of agricultural
    DTs. However, this paper did not provide specific examples of implemented DT applications
    in agriculture or the latest advancements in this field. It also did not cover
    potential benefits in detail or the latest advancements in DT applications in
    agriculture. Nasirahmadi et al. [5] presented a general framework of DTs in soil
    irrigation, robotics, farm machinery, and food post-harvest processing in the
    agricultural field. The authors emphasised the need to develop DT systems further
    in the agricultural context. These systems should be able to monitor, record,
    and analyse data to predict and prescribe the best decision for digital farming
    management. Also, the authors identified the need for further research and development
    in applying DT concepts in agriculture, particularly in addressing practical challenges,
    integrating advanced technologies, and developing robust DT models for different
    aspects of agricultural operations. Few other studies are available that apply
    the concepts of DTs to smart agriculture. For example, Ref. [37] proposed a DTs-based
    smart agriculture framework utilising LoRaWAN for sensor networks in farm fields
    and the intelligent processing of aerial imagery to detect plant diseases and
    nutrient deficiencies. The authors of [13] have proposed a framework for a decision
    support system to coordinate decentralised urban agricultural production units.
    The authors of [38] discussed the principles of developing a multi-agent DT of
    plants using broccoli as an example. The results of the reviews clearly show that
    the concept of DTs in agriculture is still in its early stages and has not been
    fully explored in research. Although the agricultural sector presents numerous
    opportunities for the application of DT technology, its development and implementation
    are still in progress. Therefore, this paper proposes a set of DT use cases designed
    for the agricultural domain. The aim is to bridge the current research gap and
    contribute to sustainable agriculture and enhanced production goals. This paper
    focuses on applying the innovative DT concept to real-world scenarios in smart
    agriculture. Our goal is to tackle key challenges in this field, with the promise
    of revolutionising efficiency and yield through this approach. 4. High Level Architecture
    for Proposed Digital Twin Use Cases in Agriculture Figure 1 illustrates the proposed
    architecture of a DT system for smart agriculture that integrates cloud, fog,
    and edge computing layers and multi-agent systems. Farmers or users can access
    a DT system through a farm management GUI (Graphical User Interface). The overall
    architecture consists of three layers: Cloud, Fog, and Edge. Figure 1. Proposed
    Architecture for Digital Twins in Smart Agriculture. The Cloud layer plays multiple
    roles, including accessing external services like growth stage estimators, weather
    services, routing services, and disease identification tools. It also offers data
    storage and anonymisation services for farm data and supports machine learning
    and data analysis. Additionally, data collected from satellites that help with
    growth stage estimation, weather prediction, and disease identification are stored
    in this layer. This layer is also responsible for handling complex processing
    tasks that are not time-sensitive and can utilise the vast resources of cloud
    computing. The Fog layer consists of two sub-zones: the Static Fog Zone and the
    Mobile Fog Zone. In a smart or precision farming setup, an array of sensors and
    actuators are employed, along with machinery like harvesters, tractors, and innovative
    devices such as drones and agricultural robots. These devices function as mobile
    fog nodes, gathering data directly from the fields. Located at the field level,
    the Static Fog Zone hosts agents, microservices, and digital twins, providing
    localised data storage and computing capabilities for immediate analysis of farm
    data. The mobile fog nodes serve to extend the reach of the Fog network, ensuring
    data collection and processing capabilities in parts of the farm that may have
    intermittent or no internet access. Furthermore, the Fog layer incorporates a
    collection of microservices, which facilitate access to both internal APIs for
    farm data retrieval and third-party APIs (Application Programming Interfaces)
    for extended functionality. It also houses various agents, such as the Farm Manager
    and Field Agents, who are tasked with resource scheduling, task management, and
    the execution of field plans. These components function seamlessly within both
    the static and mobile zones of the Fog layer. The Edge layer comprises various
    devices with embedded sensors and actuators utilised in agricultural environments.
    These devices can include soil moisture sensors located directly in the field
    or NDVI sensors mounted on farm machinery such as tractors. These Edge devices
    connect to the static Fog layer to transmit data when internet connectivity is
    present. In the absence of connectivity, mobile Fog nodes provide data collection
    services, gathering information from the Edge devices either opportunistically
    or upon request. This allows for continuous data acquisition and integration into
    the farm’s DT system, ensuring that the farm management has access to the most
    updated information for decision-making. Additionally, the overall architecture
    incorporates MAMS (Multi-agent Micro-services) [39] as illustrated in Figure 2.
    In this setup, microservices are tasked with ongoing activities like weather monitoring
    and are engaged in the continuous processing of data. The system’s flexibility
    allows seamless transitions between different data sources, like switching from
    one weather station to another, by simply re-configuring the appropriate microservice.
    This adaptability level is a fundamental feature of DT technology and is further
    enhanced by the integrated multi-agent system. In this interconnected environment,
    actions in one field can influence outcomes in another. The DT plays a crucial
    role in fine-tuning these decisions, utilising data-centric simulations. At the
    core of this architecture is the utilisation of established agricultural guidelines,
    such as the RB209 recommendations, providing a solid foundation. These guidelines
    are not just followed; they are dynamically adapted to suit the real-time conditions
    of the farm, ensuring the advice provided is both reliable and contextually relevant.
    Figure 2. Cloud–Fog–Edge and MAMS Overview. On the other hand, agents play a crucial
    role in the DT framework, particularly in decision-making, task allocation, and
    resource management. These intelligent agents utilise the data gathered by microservices
    to make not only decisions but also recommendations. A comprehensive knowledge
    graph is built by a variety of microservices, such as those collecting weather
    data, nutrient recommendations, and decision-making services. This interconnected
    data representation enables agents to coordinate system activities effectively.
    This ensures the maintenance of the most accurate model of the field’s state.
    The agents are focused on developing an efficient plan for the field. Although
    this plan is not a built-in feature of the DT, it is significantly influenced
    by the data collected and analysis from the DT. This field plan directly impacts
    nutrient levels, which in turn affects the growth stages of the crops. Efficient
    management of the DT, coupled with the use of intelligent agents for decision
    support, enables us to recommend strategies that maintain optimal field conditions,
    enhancing both the productivity and efficiency of agricultural practices. The
    agents can also analyse patterns, predict outcomes, and allocate tasks efficiently
    across the farming operation. Their capabilities include assessing the best planting
    strategies, optimising irrigation schedules, and managing resource allocation
    to maximise yield and efficiency. Overall, the proposed architecture depicted
    in Figure 2 enables farmers to utilise a DT that integrates cloud computing, fog
    computing, and edge computing, thereby simplifying and improving farm management.
    This approach significantly enhances farm management and decision-making through
    a comprehensive, multi-layered computational framework. The incorporation of agents
    in this architecture allows for autonomous data collection and processing, ensuring
    timely and accurate information. Microservices, meanwhile, offer modular and scalable
    solutions, facilitating the flexible integration of various farm data sources
    and services. The combined use of cloud, fog, and edge computing layers ensures
    efficient data processing: cloud computing handles complex, non-time-sensitive
    tasks; fog computing provides localised data analysis; and edge computing enables
    real-time data capture directly from farm devices. Collectively, these technologies
    form a digital replica of the farm that includes all important factors, thereby
    streamlining decision-making. In this way, the proposed architecture offers numerous
    advantages in overall farming processes compared to the existing agricultural
    systems. 5. Possible Application Scenarios with Digital Twin In the labour-intensive
    field of agriculture, many interrelated and variable factors play a role in daily
    farming decisions. Despite being well-planned with expertise, unforeseen circumstances
    often cause plans to be changed or abandoned in cases such as unexpected rainfalls
    or the emergence of crop diseases. In these circumstances, an adaptive approach,
    a fast decision, and good organisation are essential to maintain efficiency and
    prevent yield losses (subsequently financial losses) and environmental damage.
    This section discusses example use cases using DTs. 5.1. Overall Scenario of Digital
    Twin in Agriculture The proposed DT model of agriculture includes a digital representation
    of farms, fields and other related factors. This complex model dynamically integrates
    various data sources to replicate the current state of the farm. This model is
    also continuously updated with real-time data, allowing it to reflect current
    conditions and predict future states accurately. For instance, if we consider
    a farm with n fields, the DT model would have the exact representation with details
    such as: Farm: Farm ID, Farm Name, Number of Fields, Field IDs. Field: Field ID,
    Farm ID, Field Name, Crop Info, Soil Info, Historical Information such as Last
    Cropping Date. Zone: Zone ID, Zone Name, Field ID, Farm ID, Weather Data. As illustrated
    in Figure 3, digital twins assist in decision-making and predictions based on
    historical and real-time data analysis and provide recommendations and suggestions
    to farmers and other stakeholders. Figure 3. Digital Twin for Agriculture. Digital
    twins can be applied to various aspects of agriculture in order to help farmers,
    including: Real-time Monitoring and Prediction [5]: DTs can monitor crop health
    and growth in real-time and predict future outcomes based on data such as weather
    patterns, soil moisture, and nutrient levels. This information can help farmers
    make informed decisions about irrigation, fertilisation, and other factors that
    impact crop growth. Enhanced Productivity and Efficiency: By simulating various
    scenarios, farmers can identify the most efficient use of resources, such as water
    and fertilisers, and optimise crop yields [5,12]. As new data are collected and
    analysed continuously, farmers can continuously refine their practices, adapting
    to changing conditions and incorporating the latest insights for ongoing improvements
    in productivity and efficiency. Resource optimisation and management: DTs can
    optimise farmers’ use of resources like water, fertilisers, and pesticides by
    providing real-time data on their application and effectiveness. It also helps
    in task scheduling and management of farm equipment, including tractors, harvesters,
    and other agricultural machinery. This can help farmers reduce waste and improve
    efficiency. Quality control: It can monitor crop quality and identify potential
    issues, such as pests or diseases, before they become significant problems. This
    can help farmers take proactive measures to protect their crops and maintain high-quality
    yields. Collaboration: DTs can facilitate collaboration among farmers, researchers,
    agronomists, and other stakeholders, allowing them to share real-time data and
    insights. This can accelerate the development of new techniques and technologies
    in smart crop farming. Data-Driven Decision-Making: DTs offer farmers a comprehensive
    perspective of their agricultural operations. This enables data-driven decision-making,
    as farmers can analyse soil conditions, weather patterns, and crop health data
    to make informed choices toward improving yields. Continuous data collection and
    analysis enable better management of agricultural processes, leading to more informed
    decisions [5]. The implementation of a DT in agriculture is a powerful step towards
    more efficient and sustainable practices. This approach offers a holistic overview
    of the farm, enabling farmers to optimise processes throughout the entire agricultural
    cycle, from planting to harvesting. The DT also has features for predicting the
    future and a comprehensive understanding of farm processes. Farmers can more efficiently
    use resources like water, fertilisers, and pesticides. As a result, this reduces
    waste and operational costs and addresses the specific needs of crops at different
    growth stage levels at the right time. These all help in maximise yields. Integrating
    data from diverse sources and analysing them are significant features of DT. This
    integration includes real-time data from IoT devices distributed across the farm,
    which monitor key factors such as soil moisture and nutrient levels. Weather patterns
    are important in making decisions about farming activities. The data coming from
    local weather stations can offer valuable insights in terms of how the weather
    patterns could change. Additionally, the DT utilises high-resolution satellite
    imagery to monitor larger-scale changes in crop health and environmental conditions.
    The DT improves its predictive accuracy by accessing agricultural databases to
    collect data on crop varieties, pest/disease patterns, and historical data. This
    can result in guiding farmers towards more informed decision-making in modern
    agriculture. The DT not only simulates and predicts the outcomes of different
    farming strategies under varying environmental conditions but also continuously
    updates its model to reflect real-time changes on the farm. This dynamic model
    ensures that the virtual farm environment is always in sync with the actual farm,
    allowing farmers to visualise the consequences of their actions before implementing
    them. By acting as a decision-support tool, the DT enables farmers to efficiently
    manage risks, such as pest infestations or disease outbreaks, and test different
    scenarios, including best and worst-case situations. Ultimately, this approach
    supports sustainable and environmentally friendly farming practices, empowering
    farmers with the tools needed for success in the ever-evolving world of agriculture.
    In the following section, we will explore a few use cases that demonstrate the
    potential of DTs in agriculture: irrigation systems and early disease detection.
    Specifically, we will compare the processes for these use cases with and without
    DT technology. Figure 4 and Figure 5 illustrate these processes and highlight
    the benefits of using a DT. Figure 4. Irrigation Systems. Figure 5. Early Alters
    on Fields. It is worth noting that with DTs, it is necessary to consider all related
    factors before making a decision instead of only considering a single factor.
    This feature enables farmers to make more accurate decisions that consider the
    potential future effects of the decision rather than simply deciding whether to
    irrigate or manually identify diseases. This is one of the key advantages of DTs
    compared to other modern digital systems. 5.2. Scenario 1: Irrigation Systems
    Agricultural irrigation systems are frequently closed systems, which require the
    farmer to turn the irrigation system on or off. More advanced systems are available
    on the market, which utilise either soil moisture sensors [40] or rainfall sensors
    [41] to automate irrigation and reduce water usage. The sensors for automated
    irrigation systems are typically expensive. As technology advances, progressively
    more straightforward, low-cost sensors capable of sensing soil moisture and rainfall
    are entering the market. Connecting these simple sensors to nodes would create
    an affordable irrigation management system. This would lower the cost barrier
    and allow greater access to precision technologies, particularly for smaller farms
    [40]. A DT for an irrigation system in agriculture is a digital replica of the
    physical irrigation system used in the field. It is created by collecting data
    from sensors and other sources such as weather forecasts, soil moisture sensors,
    and crop growth models. Using this data, the DT replicates the functioning of
    the irrigation setup and the behaviour of the crops under irrigation. This enables
    farmers and other stakeholders to monitor system performance, optimise irrigation
    schedules, and make better decisions to maximise crop yield while minimising water
    usage. For example, the DT can help farmers decide when and how much water to
    apply to their crops based on weather conditions, soil moisture levels, and other
    factors (harvest date, fertiliser plans). It can also help farmers identify potential
    issues with the irrigation system, such as leaks or malfunctions, and take required
    action before they impact crop yield. Farmers who do not have access to DT technology
    must rely on traditional methods such as visual inspection and manual measurement
    to make irrigation decisions. These methods are often based on intuition and experience
    rather than hard data, which could lead to inefficient and suboptimal irrigation
    practices. While there are modern irrigation systems that use technologies such
    as soil moisture sensors and temperature gauges to inform decision-making [42],
    these systems may not take into account other important factors such as crop growth
    stage, nutrient levels, and fertiliser use. Digital twin technology, on the other
    hand, can integrate and analyse a wide range of data points, making it a more
    advanced tool for decision-making in agriculture. A DT for an irrigation system
    of crop fields can provide farmers with a valuable tool to improve their irrigation
    practices and ultimately achieve more sustainable and efficient crop production.
    Additionally, the fog processing feature outlined in this paper’s architecture,
    as illustrated in Figure 1, allows for the utilisation of weather forecasts in
    conjunction with simple sensor data. This integration helps to reduce water usage
    further. Reducing water consumption is crucial for countries experiencing water
    scarcity. Due to climate change-induced water shortages, agricultural security
    concerns are increasing [43]. Therefore, utilising DT in irrigation systems presents
    an effective solution for this issue. 5.3. Scenario 2: Early Alerts on Fields
    Vegetation indexes used in earth observations are related to crop stress, such
    as drought or disease [44,45]. The field management system in the outlined architecture
    would prioritise an inspection made in a specific area in response to earth observations
    processed through the cloud. This guidance-based approach would rapidly reduce
    the time spent inspecting the field for stress symptoms, increasing efficiency
    and helping maintain crop health. This is illustrated in Figure 6, where the traditional
    approach of crop inspection requires walking through each field as highlighted
    on the left image with red lines; the guidance-based system reduces this need
    and can direct a farmer straight to the areas of risk. Whilst in the field, any
    map-based information could be updated through the static fog, and the farmer
    could record a diagnostic for the stress (e.g., the presence of a disease). In
    addition, whilst in areas of poor connectivity, sensors would benefit from the
    presence of a passing smartphone to create an ad-hoc connection to upload data.
    At the point of updating the system to diagnose a crop disease, the architecture
    will be able to respond to this new information, check the weather forecast, and,
    if weather conditions are favourable could prioritise new actions of fungicide
    applications (part of the recommendation system of the architecture). Figure 6.
    Crop Inspection Traditional Approach (left) vs. Modern Approach (right). Additionally,
    the system could automate the shutoff of irrigation of the field/neighbouring
    fields of the same crop. This automation will (1) help reduce the spread of disease
    from water droplets and (2) provide the most time for the area to dry, which is
    necessary for fungicide applications. The dynamic nature of the architecture will
    provide the best outcome for a rapid response. In this scenario, the system minimises
    the time spent by the farmer inspecting fields, collecting relevant information
    (i.e., weather forecast), deciding on the best course of action and allowing more
    time for the farmer to respond to the crop disease threat, preventing potential
    yield reduction from crop disease spread. Without the system, most of the day
    could have been spent inspecting each field for symptoms of stress. When there
    is a deviation from the farm management plan, the DT field feature will be able
    to simulate the impacts of the change and provide advice on future management
    decisions. If an event occurs in a field or management deviates from the management
    plan, the digital twin field will be able to simulate the impacts of the changes
    and advise alternative management decisions. For example, if the drilling of a
    field is delayed due to adverse weather events, the DT will recommend increasing
    the seed rate, helping to negate any reduced tillering. Furthermore, the DT model
    will be able to apply these variations, along with growth modelling and external
    data such as weather forecasting, to adapt the expected timing of future management
    actions, e.g., nitrogen applications. The DT will be able to suggest amendments
    to agrochemical applications in response to events occurring in the field/farm
    while also helping to automate certain processes. In addition to this, if yield
    reduction is predicted for a field in the DT, the system may suggest reducing
    future nitrogen applications in that field, which will help improve nitrogen use
    efficiency, reduce environmental damage, and maximise profits. 5.4. Scenario 3:
    Nutrient Management Recommendations Nutrient management is crucial in crop farming
    for several reasons. It ensures the optimal growth of crops by providing them
    with the right balance of nutrients [46]. Effective nutrient management not only
    boosts crop yield [47] and quality but also minimises the environmental impact
    by reducing fertiliser overuse and runoff, which can lead to soil degradation
    and water pollution [46]. Various factors are considered in nutrient management
    for crops, including soil conditions, crop nutrient requirements, deficiency symptoms,
    previous crop information, and environmental conditions [48]. Conventional smart
    agriculture [49] employs technologies such as IoT sensors, drones, and satellite
    imagery to gather data for informed fertiliser application, improving crop growth,
    and minimising waste. However, these systems face challenges in terms of connectivity
    and internet access in remote agricultural areas, impacting the real-time monitoring
    capabilities of these technologies. Another problem is scalability when new services
    need to be introduced to the systems. Generally, the conventional smart agriculture
    method of nutrient application involves uniform practices across fields. In contrast,
    the proposed architecture customises nutrient guidance based on the unique needs
    of each field or zone level, as identified through real-time data processing.
    This is because the DT supports farm level, field level, and zone level granularity.
    The adaptability of the DT is evident in its responsiveness to dynamic environmental
    factors. In instances of adverse weather conditions or changes in soil composition,
    the system can promptly adjust nutrient recommendations to accommodate the evolving
    needs of the crops. This agility ensures that nutrient applications are modified
    with the current state of the field, maximising the effectiveness of the entire
    nutrient management process. Additionally, the system facilitates seamless communication
    between various stakeholders involved in nutrient management. Farmers receive
    clear and actionable recommendations through user-friendly interfaces, improving
    their ability to implement precise nutrient applications. The recommendation system
    also integrates with other components of the agricultural architecture, such as
    weather forecasting, to provide comprehensive insights for decision-making. Another
    key feature of the nutrient management recommendation system using DT architecture
    is its continuous learning capability. Over time, the system refines its recommendations
    based on historical data, crop responses, and evolving soil conditions. This iterative
    process ensures that nutrient management strategies are continually optimised,
    leading to improved crop health and overall agricultural productivity. Furthermore,
    integrating cloud, fog, edge computing, agents, and microservices transforms nutrient
    management to the next level. The fog layer instantly analyses real-time data
    collected by edge devices, overcoming connectivity limitations. Microservices
    provide flexible and scalable solutions, while the cloud layer enhances computational
    capabilities with machine learning. Autonomous agents streamline decision-making,
    making nutrient management more efficient and reducing the need for continuous
    human intervention. The whole approach of the DT architecture ensures a seamless
    and optimised nutrient management process in agriculture. 5.5. Scenario 4: Nutrient
    Deficiency Risk Identification Nutrient deficiency risk identification is a traditionally
    onerous task in which farmers may heavily rely on experience and generational
    knowledge [4]. Identifying a nutrient deficiency is often done through visual
    inspection of crops, as nutrient deficiencies result in symptoms appearing on
    the plant [4]. If visual symptoms are missed, a farmer may only realise the potential
    for nutrient deficiencies when observing a reduced yield and/or poor plant quality.
    Problematic crops may prompt a soil test, which serves as the most accurate representation
    of soil pH and key nutrient levels. However, when a deficiency has manifested,
    it is often too late to treat it effectively. Therefore, due to the variable nutrient
    requirements of different crops, farmers often utilise strategies such as crop
    rotation and intercropping to maintain a balanced soil nutrient profile. Conventional
    smart agriculture techniques have been developed to identify nutrient deficiencies
    in soils and crops. This is primarily achieved through satellite imagery [50],
    machine learning [51], and IoT sensors [52]. Some techniques relying on imagery
    may prove insufficient in some scenarios, as treating nutrient deficiencies can
    be ineffective by the time it is visually present. IoT sensor solutions facilitate
    rapid data collection, thereby enhancing decision-making efficiency [52]. The
    adoption of IoT sensors has proven to improve the quantity and quality of yield
    [52]. An implemented DT architecture offers a basis to integrate heterogeneous,
    dynamic, and disparate data sources into a homogenous system. This uniform system
    can underpin mechanisms that proactively monitor for coinciding and compounding
    risk factors for key nutrients, such as a field of a particular soil being waterlogged
    during the winter months. The result of this could be a notification to a farmer
    that a field is exposed to a greater risk of certain nutrient deficiencies. The
    use of edge services, as in the proposed DT, ensures the integration of real-time
    data into risk identification processes. The DT transforms the approach to nutrient
    deficiency, as the seamless integration of interoperable data enables holistic
    techniques for risk identification in real-time. Furthermore, this strategy is
    enhanced by being employed by a multi-agent system. The distributed nature of
    agents allows for simultaneous monitoring of multiple fields in parallel. The
    autonomous aspect of agents ensures a proactive risk identification process. This
    transitions a farm’s nutrient deficiency management strategy from being reactive
    to preventative, as actions can be taken to mitigate risk as the dynamic data
    is updated in the DT. 6. Discussion and Future Work In conclusion, the DT concept
    is a powerful innovation with promising applications in agriculture, particularly
    when integrated with other cutting-edge technologies such as multi-agent systems
    (MAS), cloud–fog–edge computing, and microservices. The rapid advancement in sensing,
    communication, and computing technologies has sped up the development of DT models.
    These models replicate real-world conditions with real-time data, improving farm
    operations and allowing for better planning by offering suggestions for different
    ’what-if’ scenarios. This paper introduces a DT architecture and explains its
    components. While this architecture holds potential for numerous applications
    in agriculture, our current focus is on practical implementations, such as developing
    irrigation systems for crops, early disease detection, nutrient management recommendations,
    and identifying nutrient deficiency risks. The proposed structure uses agents
    and microservices to create and develop a cloud–fog–edge infrastructure, establishing
    the foundation for promising research in sustainable smart crop farming. The possible
    expected challenge would be accessing all the required data in the field. This
    data can be collected from sensors and third-party APIs for weather and other
    data. Implementing DT in agriculture demands solid technological infrastructure,
    including sensors, IoT devices, and cloud–fog–edge infrastructure. In addition,
    to apply this in the real world, the initial cost to install the required devices
    and technologies must be higher if it is not a smart farm. However, the proposed
    architecture is most suitable for smart agriculture. Thus, most smart farms already
    use smart agricultural devices such as drones, sprayers, sensors, etc. Regarding
    this architecture, cloud hosting and accessing accurate data from third-party
    APIs such as satellite data may also be expensive. Agriculture is generally a
    highly complex domain influenced by various unpredictable variables such as weather
    conditions and patterns, soil conditions, and other environmental factors. Although
    we get these predicted data from sensors and weather stations, it might still
    be unreliable. Nowadays, most farms are already using some level of technology
    and devices. Therefore, integrating with the existing systems in DT may be challenging.
    Implementing DTs involves collecting and analysing vast amounts of data, raising
    concerns about data privacy, ownership, and security. In addition to this, well-written
    documents and manuals should be prepared for use by agricultural stakeholders.
    From our perspective, the proposed architecture can be validated in several ways.
    For instance, it can be simulated with historical data, applied to a small-scale
    farm, and seen in the field without applying a digital twin. Additionally, it
    is possible to do qualitative testing based on farmers’ feedback based on the
    user experience. Another possible way would be to check how the DT reacts to the
    real-time data. However, further research is needed to analyse the real challenges
    and benefits of the proposed architecture. We are in the process of implementing
    the proposed use cases. For our future work, we plan to concentrate on several
    areas, investigating the design constraints involved in implementing DTs with
    cloud–fog–edge computing and identifying the challenges and potential solutions
    in the domain of agricultural DTs. In addition to this, we are also planning to
    propose a framework to implement a DT for agriculture domain. The future work
    will be also focusing on how these DT can be evaluated in the real world. Author
    Contributions Conceptualization, Y.K., R.W. and R.C.; Methodology, Y.K. and L.V.;
    Writing—original draft, Y.K.; Writing—review and editing, Y.K., L.V., R.W. and
    R.C.; Supervision, R.C. All authors have read and agreed to the published version
    of the manuscript. Funding CONSUS is funded under the SFI Strategic Partnership
    Programme (16/SPP/3296) and is co-funded by Origin Enterprises plc. (Dublin, Ireland).
    Data Availability Statement No new data were created or analyzed in this study.
    Data sharing is not applicable to this article. Conflicts of Interest The authors
    declare no conflicts of interest. Abbreviations The following abbreviations are
    used in this manuscript: API Application programming interfaces CEA Closed Environment
    Agriculture DT Digital twin GUI Graphical User Interface IoT Internet of Things
    MAS Multi-agent systems MAMS Multi-agent Micro-services OEA Open Environment Agriculture
    NDVI Normalized Difference Vegetation Index UAV Unmanned Aerial Vehicles References
    Dagar, R.; Som, S.; Khatri, S.K. Smart farming–IoT in agriculture. In Proceedings
    of the 2018 International Conference on Inventive Research in Computing Applications
    (ICIRCA), Coimbatore, India, 11–12 July 2018; IEEE: Piscataway, NJ, USA, 2018;
    pp. 1052–1056. [Google Scholar] Kalyani, Y.; Collier, R. A systematic survey on
    the role of cloud, fog, and edge computing combination in smart agriculture. Sensors
    2021, 21, 5922. [Google Scholar] [CrossRef] [PubMed] Rose, D.C.; Chilvers, J.
    Agriculture 4.0: Broadening responsible innovation in an era of smart farming.
    Front. Sustain. Food Syst. 2018, 2, 87. [Google Scholar] [CrossRef] Saiz-Rubio,
    V.; Rovira-Más, F. From smart farming towards agriculture 5.0: A review on crop
    data management. Agronomy 2020, 10, 207. [Google Scholar] [CrossRef] Nasirahmadi,
    A.; Hensel, O. Toward the next generation of digitalization in agriculture based
    on digital twin paradigm. Sensors 2022, 22, 498. [Google Scholar] [CrossRef] Farooq,
    M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of IoT in
    Agriculture for the Implementation of Smart Farming. IEEE Access 2019, 7, 156237–156271.
    [Google Scholar] [CrossRef] Osinga, S.A.; Paudel, D.; Mouzakitis, S.A.; Athanasiadis,
    I.N. Big data in agriculture: Between opportunity and solution. Agric. Syst. 2022,
    195, 103298. [Google Scholar] [CrossRef] Liakos, K.G.; Busato, P.; Moshou, D.;
    Pearson, S.; Bochtis, D. Machine learning in agriculture: A review. Sensors 2018,
    18, 2674. [Google Scholar] [CrossRef] Hurst, W.; Mendoza, F.R.; Tekinerdogan,
    B. Augmented reality in precision farming: Concepts and applications. Smart Cities
    2021, 4, 1454–1468. [Google Scholar] [CrossRef] Lytridis, C.; Kaburlasos, V.G.;
    Pachidis, T.; Manios, M.; Vrochidou, E.; Kalampokas, T.; Chatzistamatis, S. An
    overview of cooperative robotics in agriculture. Agronomy 2021, 11, 1818. [Google
    Scholar] [CrossRef] Verdouw, C.; Tekinerdogan, B.; Beulens, A.; Wolfert, S. Digital
    twins in smart farming. Agric. Syst. 2021, 189, 103046. [Google Scholar] [CrossRef]
    Chaux, J.D.; Sanchez-Londono, D.; Barbieri, G. A digital twin architecture to
    optimize productivity within controlled environment agriculture. Appl. Sci. 2021,
    11, 8875. [Google Scholar] [CrossRef] Ghandar, A.; Ahmed, A.; Zulfiqar, S.; Hua,
    Z.; Hanai, M.; Theodoropoulos, G. A decision support system for urban agriculture
    using digital twin: A case study with aquaponics. IEEE Access 2021, 9, 35691–35708.
    [Google Scholar] [CrossRef] Monteiro, J.; Barata, J.; Veloso, M.; Veloso, L.;
    Nunes, J. A scalable digital twin for vertical farming. J. Ambient. Intell. Humaniz.
    Comput. 2023, 14, 13981–13996. [Google Scholar] [CrossRef] Sreedevi, T.; Kumar,
    M.S. Digital Twin in Smart Farming: A categorical literature review and exploring
    possibilities in hydroponics. In Proceedings of the 2020 Advanced Computing and
    Communication Technologies for High Performance Applications (ACCTHPA), Cochin,
    India, 2–4 July 2020; pp. 120–124. [Google Scholar] Le Mouël, C.; Forslund, A.
    How can we feed the world in 2050? A review of the responses from global scenario
    studies. Eur. Rev. Agric. Econ. 2017, 44, 541–591. [Google Scholar] [CrossRef]
    Honc, D.; Merta, J. Smart, precision or digital agriculture and farming-current
    state of technology. In Proceedings of the 15th International Conference on Soft
    Computing Models in Industrial and Environmental Applications (SOCO 2020) 15,
    Burgos, Spain, 16–18 September 2020; Springer: Berlin/Heidelberg, Germany, 2021;
    pp. 245–254. [Google Scholar] Abdalla, Z.F.; El-Ramady, H. Applications and Challenges
    of Smart Farming for Developing Sustainable Agriculture. Environ. Biodivers. Soil
    Secur. 2022, 6, 81–90. [Google Scholar] [CrossRef] Zhai, Z.; Martínez, J.F.; Beltran,
    V.; Martínez, N.L. Decision support systems for agriculture 4.0: Survey and challenges.
    Comput. Electron. Agric. 2020, 170, 105256. [Google Scholar] [CrossRef] Tien,
    J.M. Internet of things, real-time decision making, and artificial intelligence.
    Ann. Data Sci. 2017, 4, 149–178. [Google Scholar] [CrossRef] Grieves, M. Digital
    twin: Manufacturing excellence through virtual factory replication. White Pap.
    2014, 1, 1–7. [Google Scholar] Liu, M.; Fang, S.; Dong, H.; Xu, C. Review of digital
    twin about concepts, technologies, and industrial applications. J. Manuf. Syst.
    2021, 58, 346–361. [Google Scholar] [CrossRef] Kritzinger, W.; Karner, M.; Traar,
    G.; Henjes, J.; Sihn, W. Digital Twin in manufacturing: A categorical literature
    review and classification. Ifac-PapersOnline 2018, 51, 1016–1022. [Google Scholar]
    [CrossRef] Erol, T.; Mendi, A.F.; Doğan, D. The digital twin revolution in healthcare.
    In Proceedings of the 2020 4th International Symposium on Multidisciplinary Studies
    and Innovative Technologies (ISMSIT), Istanbul, Turkey, 22–24 October 2020; IEEE:
    Piscataway, NJ, USA, 2020; pp. 1–7. [Google Scholar] Sleiti, A.K.; Kapat, J.S.;
    Vesely, L. Digital twin in energy industry: Proposed robust digital twin for power
    plant and other complex capital-intensive large engineering systems. Energy Rep.
    2022, 8, 3704–3726. [Google Scholar] [CrossRef] Schrotter, G.; Hürzeler, C. The
    digital twin of the city of Zurich for urban planning. PFG–J. Photogramm. Remote
    Sens. Geoinf. Sci. 2020, 88, 99–112. [Google Scholar] [CrossRef] Pylianidis, C.;
    Osinga, S.; Athanasiadis, I.N. Introducing digital twins to agriculture. Comput.
    Electron. Agric. 2021, 184, 105942. [Google Scholar] [CrossRef] Skobelev, P.;
    Laryukhin, V.; Simonova, E.; Goryanin, O.; Yalovenko, V.; Yalovenko, O. Developing
    a smart cyber-physical system based on digital twins of plants. In Proceedings
    of the 2020 Fourth World Conference on Smart Trends in Systems, Security and Sustainability
    (WorldS4), London, UK, 27–28 July 2020; IEEE: Piscataway, NJ, USA, 2020; pp. 522–527.
    [Google Scholar] Purcell, W.; Neubauer, T.; Mallinger, K. Digital Twins in agriculture:
    Challenges and opportunities for environmental sustainability. Curr. Opin. Environ.
    Sustain. 2023, 61, 101252. [Google Scholar] [CrossRef] Sunyaev, A. Cloud computing.
    In Internet Computing: Principles of Distributed Systems and Emerging Internet-Based
    Technologies; Springer: Cham, Switzerland, 2020; pp. 195–236. [Google Scholar]
    Basir, R.; Qaisar, S.; Ali, M.; Aldwairi, M.; Ashraf, M.I.; Mahmood, A.; Gidlund,
    M. Fog computing enabling industrial internet of things: State-of-the-art and
    research challenges. Sensors 2019, 19, 4807. [Google Scholar] [CrossRef] Zhang,
    R.; Li, X. Edge computing driven data sensing strategy in the entire crop lifecycle
    for smart agriculture. Sensors 2021, 21, 7502. [Google Scholar] [CrossRef] [PubMed]
    Hazra, A.; Rana, P.; Adhikari, M.; Amgoth, T. Fog computing for next-generation
    internet of things: Fundamental, state-of-the-art and research challenges. Comput.
    Sci. Rev. 2023, 48, 100549. [Google Scholar] [CrossRef] Kalyani, Y.; Bermeo, N.V.;
    Collier, R. Digital twin deployment for smart agriculture in Cloud-Fog-Edge infrastructure.
    Int. J. Parallel Emergent Distrib. Syst. 2023, 38, 461–476. [Google Scholar] [CrossRef]
    Sethi, V.; Pal, S. FedDOVe: A Federated Deep Q-learning-based Offloading for Vehicular
    fog computing. Future Gener. Comput. Syst. 2023, 141, 96–105. [Google Scholar]
    [CrossRef] Silva, L.; Rodríguez-Sedano, F.; Baptista, P.; Coelho, J.P. The Digital
    Twin Paradigm Applied to Soil Quality Assessment: A Systematic Literature Review.
    Sensors 2023, 23, 1007. [Google Scholar] [CrossRef] Angin, P.; Anisi, M.H.; Göksel,
    F.; Gürsoy, C.; Büyükgülcü, A. AgriLoRa: A digital twin framework for smart agriculture.
    J. Wirel. Mob. Netw. Ubiquitous Comput. Dependable Appl. 2020, 11, 77–96. [Google
    Scholar] Skobelev, P.; Simonova, E.; Tabachinskiy, A.; Kudryakov, E.; Strizhakov,
    A.; Goryanin, O.; Ermakov, V.; Chan, Y.K.; Lee, T.R.; Sung, Y. Concept and Development
    of a Multi-Agent Digital Twin of Plant Focused on Broccoli. In Proceedings of
    the 2023 7th International Conference on Intelligent Systems, Metaheuristics &
    Swarm Intelligence, Virtual Event, Malaysia, 23–24 April 2023; pp. 132–138. [Google
    Scholar] Collier, R.W.; O’Neill, E.; Lillis, D.; O’Hare, G. MAMS: Multi-Agent
    MicroServices. In Proceedings of the Companion Proceedings of the 2019 World Wide
    Web Conference, Montreal, QC, Canada, 25–31 May 2019; pp. 655–662. García, L.;
    Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz, P. IoT-based smart irrigation systems:
    An overview on the recent trends on sensors and IoT systems for irrigation in
    precision agriculture. Sensors 2020, 20, 1042. [Google Scholar] [CrossRef] [PubMed]
    Arumugam, S.S.; Ganeshmurthi, M.; Annadurai, R.; Ravichandran, V. Internet of
    things based smart agriculture. Int. J. Adv. Comput. Electron. Eng. 2018, 33,
    8–17. [Google Scholar] Rao, R.N.; Sridhar, B. IoT based smart crop-field monitoring
    and automation irrigation system. In Proceedings of the 2018 2nd International
    Conference on Inventive Systems and Control (ICISC), Coimbatore, India, 19–20
    January 2018; IEEE: Piscataway, NJ, USA, 2018; pp. 478–483. [Google Scholar] Iglesias,
    A.; Santillán, D.; Garrote, L. On the barriers to adaption to less water under
    climate change: Policy choices in Mediterranean countries. Water Resour. Manag.
    2018, 32, 4819–4832. [Google Scholar] [CrossRef] Kundu, R.; Dutta, D.; Chakrabarty,
    A.; Nanda, M.K. Spatial growth pattern of potato in West Bengal using multi-temporal
    MODIS NDVI Data. Int. J. Comput. Sci. Eng. 2018, 6, 52–59. [Google Scholar] [CrossRef]
    Peters, A.J.; Walter-Shea, E.A.; Ji, L.; Vina, A.; Hayes, M.; Svoboda, M.D. Drought
    monitoring with NDVI-based standardized vegetation index. Photogramm. Eng. Remote
    Sens. 2002, 68, 71–75. [Google Scholar] Shankar, T.; Banerjee, M.; Malik, G.C.;
    Dutta, S.; Maiti, D.; Maitra, S.; Alharby, H.; Bamagoos, A.; Hossain, A.; Ismail,
    I.A.; et al. The productivity and nutrient use efficiency of rice–rice–black gram
    cropping sequence are influenced by location specific nutrient management. Sustainability
    2021, 13, 3222. [Google Scholar] [CrossRef] Dhakal, C.; Lange, K. Crop yield response
    functions in nutrient application: A review. Agron. J. 2021, 113, 5222–5234. [Google
    Scholar] [CrossRef] Sanjuan-Delmás, D.; Josa, A.; Muñoz, P.; Gassó, S.; Rieradevall,
    J.; Gabarrell, X. Applying nutrient dynamics to adjust the nutrient-water balance
    in hydroponic crops. A case study with open hydroponic tomato crops from Barcelona.
    Sci. Hortic. 2020, 261, 108908. [Google Scholar] [CrossRef] Agrahari, R.K.; Kobayashi,
    Y.; Tanaka, T.S.T.; Panda, S.K.; Koyama, H. Smart fertilizer management: The progress
    of imaging technologies and possible implementation of plant biomarkers in agriculture.
    Soil Sci. Plant Nutr. 2021, 67, 248–258. [Google Scholar] [CrossRef] Inoue, Y.
    Satellite-and drone-based remote sensing of crops and soils for smart farming—A
    review. Soil Sci. Plant Nutr. 2020, 66, 798–810. [Google Scholar] [CrossRef] Shaikh,
    T.A.; Rasool, T.; Lone, F.R. Towards leveraging the role of machine learning and
    artificial intelligence in precision agriculture and smart farming. Comput. Electron.
    Agric. 2022, 198, 107119. [Google Scholar] [CrossRef] Dhanaraju, M.; Chenniappan,
    P.; Ramalingam, K.; Pazhanivelan, S.; Kaliaperumal, R. Smart farming: Internet
    of Things (IoT)-based sustainable agriculture. Agriculture 2022, 12, 1745. [Google
    Scholar] [CrossRef] Disclaimer/Publisher’s Note: The statements, opinions and
    data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2024 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Kalyani, Y.; Vorster, L.; Whetton, R.; Collier, R. Application
    Scenarios of Digital Twins for Smart Crop Farming through Cloud–Fog–Edge Infrastructure.
    Future Internet 2024, 16, 100. https://doi.org/10.3390/fi16030100 AMA Style Kalyani
    Y, Vorster L, Whetton R, Collier R. Application Scenarios of Digital Twins for
    Smart Crop Farming through Cloud–Fog–Edge Infrastructure. Future Internet. 2024;
    16(3):100. https://doi.org/10.3390/fi16030100 Chicago/Turabian Style Kalyani,
    Yogeswaranathan, Liam Vorster, Rebecca Whetton, and Rem Collier. 2024. \"Application
    Scenarios of Digital Twins for Smart Crop Farming through Cloud–Fog–Edge Infrastructure\"
    Future Internet 16, no. 3: 100. https://doi.org/10.3390/fi16030100 Note that from
    the first issue of 2016, this journal uses article numbers instead of page numbers.
    See further details here. Article Metrics Citations No citations were found for
    this article, but you may check on Google Scholar Article Access Statistics Article
    access statistics Article Views 16. Mar 18. Mar 20. Mar 22. Mar 24. Mar 26. Mar
    28. Mar 30. Mar 1. Apr 3. Apr 5. Apr 0 200 400 600 800 For more information on
    the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Future Internet, EISSN 1999-5903, Published by MDPI
    RSS Content Alert Further Information Article Processing Charges Pay an Invoice
    Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers
    For Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Future Internet
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Application Scenarios of Digital Twins for Smart Crop Farming through Cloud–Fog–Edge
    Infrastructure
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bera S.
  - Dey T.
  - Mukherjee A.
  - De D.
  citation_count: '0'
  description: This paper proposes a federated learning-based decision making framework
    for sustainable irrigation using IoT and dew-edge-cloud paradigm. The federated
    learning is used to prevent the sharing of user identities and raw data for data
    privacy protection. Further, gradient encryption is used to prevent the leakage
    of gradient information. Long short-term memory (LSTM) network and deep neural
    network (DNN) are used for data analysis in local and global models. Edge computing
    is used to reduce energy consumption and latency. The cache-based dew computing
    is used to provide temporary holding of the data when network connectivity is
    not available. The results present that the proposed framework achieves ~99% prediction
    accuracy at ~50% lower latency and energy consumption than the conventional edge-cloud
    framework.
  doi: 10.1109/TCE.2024.3370373
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Consumer...
    >Early Access FLAG: Federated Learning for Sustainable Irrigation in Agriculture
    5.0 Publisher: IEEE Cite This PDF Somnath Bera; Tanushree Dey; Anwesha Mukherjee;
    Debashis De All Authors 27 Full Text Views Abstract Authors Keywords Metrics Abstract:
    This paper proposes a federated learning-based decision making framework for sustainable
    irrigation using IoT and dew-edge-cloud paradigm. The federated learning is used
    to prevent the sharing of user identities and raw data for data privacy protection.
    Further, gradient encryption is used to prevent the leakage of gradient information.
    Long short-term memory (LSTM) network and deep neural network (DNN) are used for
    data analysis in local and global models. Edge computing is used to reduce energy
    consumption and latency. The cache-based dew computing is used to provide temporary
    holding of the data when network connectivity is not available. The results present
    that the proposed framework achieves ~99% prediction accuracy at ~50% lower latency
    and energy consumption than the conventional edge-cloud framework. Published in:
    IEEE Transactions on Consumer Electronics ( Early Access ) Page(s): 1 - 1 Date
    of Publication: 26 February 2024 ISSN Information: DOI: 10.1109/TCE.2024.3370373
    Publisher: IEEE Authors Keywords Metrics More Like This Capacitance-Based Soil
    Moisture Sensor for Irrigation Scheduling Application 2018 3rd International Conference
    on Computer and Communication Systems (ICCCS) Published: 2018 Design and Construction
    of Soil Moisture Content Sensor for an Automatic Irrigation System 2022 2nd International
    Conference on Intelligent Technologies (CONIT) Published: 2022 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Transactions on Consumer Electronics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'FLAG: Federated Learning for Sustainable Irrigation in Agriculture 5.0'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bhattacharjee S.
  - Chandra Pandey A.
  - Garg R.D.
  citation_count: '1'
  description: All glaciers are subject to mass fluctuations in the current context
    of climate change. For daily requirements like food, drink, irrigation, and the
    generation of hydroelectric power, these glaciers provide water to important basins
    including the Indus, Ganga, and Brahmaputra. Changes in glacier patterns are a
    blatant sign of local climate variability. Monitoring of glaciers requires long-term
    studies on glacier dynamics. Himalayan glaciers, because of their disposition
    in a complex topographic setting and inaccessible terrain render difficulty in
    the glacier observations in a continuous mode. Glacier mass fluctuations can be
    associated with glacier area shrinkage or expansion and concomitant snout shift.
    In the current study, two adjoining glaciers of different sizes, Pensilungpa and
    Drang Drung glaciers in the Zanskar Valley, Ladakh, India are selected. The period
    of the study was taken between the years 2000–2022. Earlier studies used a single
    day per year Accumulation Area Ratio (AAR) method to compute mass balance, which
    had limitations due to snow cover variability. The present study calculated and
    averaged all the AAR values for cloud-free images per year during the peak ablation
    period (mid-July to early September). Digital Elevation Model (DEM) difference
    technique was also employed for computing the mass budget between 2000 and 2021
    b y utilizing two-time period DEMs. It was revealed that in the case of the AAR
    method, the Pensilungpa glacier showed 7 years of positive and 16 years of negative
    mass balance. The years 2003–2005 and 2011 to 2016 were depicted with negative
    mass balance with the highest value up to −0.752-m water equivalent (m.w.e.) for
    the year 2015. It has negligible areal fluctuations ranging from 0.01 to 0.6 km2.
    Drang Drung Glacier has shown 12 years of positive and 11 years of negative mass
    balance. The years 2002–2004 and 2009 to 2012 were depicted with positive mass
    balance with the highest value up to 0.305 m. w.e. Except, for the year 2009–2012
    (areal increment ∼ 2.65 km2), years 2013–2015 showed a negative mass balance with
    negligible areal fluctuations. Mass balance estimation using DEM differencing
    method revealed an average estimated mass balance of −0.03 m. w.e. For Pensilungpa
    glacier though, it is 0.08 m. w.e. For Drang Drung glacier which shows good matches
    with the mass balance estimated using AAR method in m. w.e. Such contrasting behavior
    of mass balance suggests higher sensitivity of smaller glaciers to climate change.
  doi: 10.1016/j.qsa.2023.100118
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Study area 3. Data and platforms
    4. Methodology 5. Results & discussions 6. Conclusions Declaration of competing
    interest Data availability References Show full outline Cited by (1) Figures (6)
    Tables (3) Table 1 Table 2 Table 3 Quaternary Science Advances Volume 12, October
    2023, 100118 Long-term estimation of glacier mass balance using geospatial techniques
    in Western Himalayas, Ladakh, India Author links open overlay panel Shubham Bhattacharjee
    a, Arvind Chandra Pandey b, Rahul Dev Garg a Show more Add to Mendeley Share Cite
    https://doi.org/10.1016/j.qsa.2023.100118 Get rights and content Under a Creative
    Commons license open access Abstract All glaciers are subject to mass fluctuations
    in the current context of climate change. For daily requirements like food, drink,
    irrigation, and the generation of hydroelectric power, these glaciers provide
    water to important basins including the Indus, Ganga, and Brahmaputra. Changes
    in glacier patterns are a blatant sign of local climate variability. Monitoring
    of glaciers requires long-term studies on glacier dynamics. Himalayan glaciers,
    because of their disposition in a complex topographic setting and inaccessible
    terrain render difficulty in the glacier observations in a continuous mode. Glacier
    mass fluctuations can be associated with glacier area shrinkage or expansion and
    concomitant snout shift. In the current study, two adjoining glaciers of different
    sizes, Pensilungpa and Drang Drung glaciers in the Zanskar Valley, Ladakh, India
    are selected. The period of the study was taken between the years 2000–2022. Earlier
    studies used a single day per year Accumulation Area Ratio (AAR) method to compute
    mass balance, which had limitations due to snow cover variability. The present
    study calculated and averaged all the AAR values for cloud-free images per year
    during the peak ablation period (mid-July to early September). Digital Elevation
    Model (DEM) difference technique was also employed for computing the mass budget
    between 2000 and 2021 b y utilizing two-time period DEMs. It was revealed that
    in the case of the AAR method, the Pensilungpa glacier showed 7 years of positive
    and 16 years of negative mass balance. The years 2003–2005 and 2011 to 2016 were
    depicted with negative mass balance with the highest value up to −0.752-m water
    equivalent (m.w.e.) for the year 2015. It has negligible areal fluctuations ranging
    from 0.01 to 0.6 km2. Drang Drung Glacier has shown 12 years of positive and 11
    years of negative mass balance. The years 2002–2004 and 2009 to 2012 were depicted
    with positive mass balance with the highest value up to 0.305 m. w.e. Except,
    for the year 2009–2012 (areal increment ∼ 2.65 km2), years 2013–2015 showed a
    negative mass balance with negligible areal fluctuations. Mass balance estimation
    using DEM differencing method revealed an average estimated mass balance of −0.03
    m. w.e. For Pensilungpa glacier though, it is 0.08 m. w.e. For Drang Drung glacier
    which shows good matches with the mass balance estimated using AAR method in m.
    w.e. Such contrasting behavior of mass balance suggests higher sensitivity of
    smaller glaciers to climate change. Previous article in issue Next article in
    issue Keywords Mass balanceAccumulation area ratio (AAR)Digital elevation model
    (DEM) differencingAreal fluctuationsSatellite imagery 1. Introduction The Himalayas,
    commonly known as the “Water Tower of Asia,” are home to one of the world''s greatest
    mountain glacier networks (Bolch et al., 2012). The Himalayan glaciers, which
    have a wide range of topographical and morphological characteristics, are distinct
    from the Inner Asian and European Alpine glaciers in that they have fewer condensed
    valleys, slopes that can cause avalanches, and ablation zones that are heavily
    covered in debris (Benn and Lehmkuhl, 2000; Scherler et al., 2011). For daily
    requirements like food, drink, irrigation, and the generation of hydroelectric
    power, these glaciers provide water to important basins including the Indus, Ganga,
    and Brahmaputra (Immerzeel et al., 2012; Tawde et al., 2017). According to Lepparanta
    and Granberg (2010), changes in glacier patterns are a blatant sign of local climate
    variability and climate change. Along with meteorological influences, geography,
    and morphometric traits also control changes in glacier systems (Ghosh and Pandey,
    2013). The Hindu Kush-Karakoram-Himalayan range has seen retreating glacier fronts
    since the middle of the 19th century (Bolch et al., 2012; Dehecq et al., 2019).
    Approximately 17% of the Himalayan mountain area is covered by glaciers (Ahmad
    et al., 2004). The climate change impact on the glacier system is the focal key
    for understanding and forecasting the global environment (Dehecq et al., 2019).
    Climate change directly influences the overall health (width, area, and mass)
    of the glaciers (Poddar and Pandey, 2014). Therefore, to understand the impact
    of climate change, the study of glaciated regions is of major concern (Bahuguna
    et al., 2014). Overall cumulative river basin runoff from the Himalayan catchment
    reflects the contribution from rivers and glacier melting (Immerzeel et al., 2009).
    During the last century on account of climate change, around 12.5% of the Himalayan
    glaciers have retreated (Bahuguna et al., 2014; Bhambri and Bolch, 2009; Prasad
    et al., 2009) with annual snout fluctuations between 16 and 35 m (Dobhal and Thayyen,
    2004). During the years 1962–2001, parts of Zanskar Valley, Ladakh, India depicted
    with glacier areal retreat of 18.16% with a snout retreat of 6–33 m/year (Nathawat
    et al., 2008). According to recent studies, the Himalayas, the Alps, the Andes,
    and the Rocky Mountains have shown wide-scale retreats (Kulkarni et al., 2002).
    Mass balance estimation is imperative to understand the spatiotemporal changes
    in the glacier area, length, and volume. In order to map the impact of changing
    climate, studies related to growth/shrinkage, motion, thickness as well as the
    mass exchange of glaciers are important (Bhattacharjee and Pandey, 2023; Kaser
    et al., 2003). All glaciers signify climate change by indicating their mass fluctuations,
    which can be either decreasing or increasing (Lepparanta and Granberg, 2010).
    The position of the glacier snout and glacier area can be reflected by mass fluctuations.
    Studies of long-term mass balance are required for monitoring the health of any
    glacier (Bolch et al., 2012). Remote sensing methods have been used extensively
    to map glacial patterns in regions with rugged terrain conditions, rough weather,
    and logistic issues like the Himalayan glaciers (Racoviteanu et al., 2008; Li
    et al., 2014; Yang et al., 2010). In general, the mass budget of a valley glacier
    is calculated using the stratigraphic/glaciological method, the hydrological method,
    and the geodetic method (Ostrem and Stanley, 1969). In India, in-situ glaciological
    mass balance observations are confined to a few glaciers and are limited to a
    few years which makes satellite-based remote sensing techniques more reliable
    (Azam et al., 2018; Kulkarni, 1992; Macgregor et al., 2005; Wagnon et al., 2007).
    The utility of Equilibrium line altitude (ELA) and AAR methods to compute glacier
    mass balance over the Himalayas is well documented (Bhattacharjee and Pandey,
    2021; Pandey et al., 2011; Poddar and Pandey, 2014; Kulkarni, 1992). Kulkarni
    (1992) showed the best fit AAR method by establishing regression relations between
    AAR and mass balance developed by field glaciological observations for the Himalayan
    range. The use of the AAR approach in a recent study by Bhattacharjee and Pandey
    (2021) in the Himalayan-Karakoram region on select 13 glaciers between 1996 and
    2021 demonstrated an increasing trend of mass loss as the glaciers moved from
    the Karakoram Range to the Eastern Himalayas. The hydrological method was used
    for computing the mass balance of the Siachen glacier of Nubra Valley (Bhutiyani,
    1999). Another traditional method is called DEM differencing which uses remote
    sensing and surveying imagery to compute mass balance estimates. It is an indirect
    approach for estimating mass balance that computes the difference between surface
    elevations from DEMs developed from historical topographic data and remotely sensed
    products such as Satellite pour l''Observation de la Terre (SPOT), Shuttle Radar
    Topography Mission (SRTM), and Advanced Spaceborne Thermal Emission and Reflection
    Radiometer (ASTER) (Berthier et al., 2007). Glacier mass changes were studied
    on select six glaciers in parts of Zanskar Valley, Ladakh, India using AAR-ELA
    methods over a continuous period from 2000 to 2010 with Landsat and Indian Remote
    Sensing (IRS) satellite images revealed that glaciers experienced negative mass
    balance for years 2000, 2001, 2004, and 2008. For the remaining years, glaciers
    gained mass which indicated as compared to the mass gain, mass loss was marginal
    (Poddar and Pandey, 2014). In Jammu & Kashmir (Greater Himalayan range), India,
    patterns of temporal glacier variability of 34 glaciers during 3 periods of observation
    based on IRS and Landsat satellite datasets were carried out. The results showed
    an area shrinkage of 1.5% for all glaciers during the first period (1975–1992)
    with a snout retreat rate of 3–42 m per year which further rose to 4% with a snout
    retreat rate of 0–88 m per year in the second period (1992–2001). The third period
    (2001–2007) has shown similar behavior to the second. (Pandey et al., 2011). A
    study using the AAR-ELA method in the parts of Zanskar Valley revealed a transition
    of mass balance measurements from positive (∼42.61 cm) to negative (∼−13.17 cm)
    between the years 1980–2000 and 2000–2011 (Ali et al., 2014). A study on glacier
    mass balance using the DEM differencing method over the central Nyainqentanglha
    Range for the duration of 1968–2013 using topographical maps, TanDEM-X and SRTM
    DEM revealed a significant mass loss of 0.46 ± 0.04 m. w.e. Per annum since 1968,
    with exceedingly more diminishing/thinning at the debris-covered part than the
    smoothened clean ice (Kunpeng et al., 2019). Mass balance estimates of glaciers
    of the Pamir mountains in central Asia shown by Zhou et al. (2019) using KH-9
    imagery and SRTM DEM during the study period (1975–1999) revealed values of −0.03
    ± 0.24 m. w.e. Per annum. The present study focuses on analyzing two adjoining
    glaciers of different sizes: Pensilungpa and Durung Drung glaciers in the Zanskar
    Valley, Ladakh, India. Mass balance was modeled over a continuous period from
    the years 2000–2022 using the AAR and DEM differencing methods for comparison.
    2. Study area The study area (Fig. 1) incorporates Zanskar Valley (elevation ∼
    3700–6400 m), in the south of Ladakh, Greater Himalayan range, India. During extensively
    long winter periods (November to late April), most of the precipitation occurs
    as snowfall. The Zanskar Valley''s southwestern and northeastern halves are where
    the highest and lowest relief regions exist. During the winter, which typically
    lasts from mid-October to May, nearly the whole valley is blanketed in a thick
    layer of snow. In the Zanskar Valley, the wintertime temperature hovers around
    −20° Celsius. May marks the start of the summer season, and temperatures rise
    pretty quickly. In comparison to other regions of Ladakh, the summer season lasts
    comparatively longer, till August. Heavy snowfall occurs in the more northern
    and western mountains during the winter, with moisture provided by mid-latitude
    westerlies (Owen and Benn, 2005). Although a good crop thrives in the broad valley
    of the Padam area throughout the summer, the high slope lacks any tree cover.
    Download : Download high-res image (1MB) Download : Download full-size image Fig.
    1. Location map showing Pensilungpa and Drang Drung glaciers in Zanskar Valley,
    Ladakh, India. There are a series of glaciers in Zanskar Valley that can be easily
    mapped using satellite imagery. Two adjoining glaciers, Pensilungpa and Durung
    Drung have been selected at the northwest corner of the valley with longitudinal
    extensions from 76⁰12′E−76⁰26′E and latitudinal extensions from 33⁰41′N-33⁰51′N.
    Pensilungpa glacier is a small glacier (area = 15 km2) with the majority of its
    ablation zone being debris-covered (Table 1). The glacier is 8.34 km long which
    lies in an average relief of 5178 m. River Suru originates from the snout (altitude
    ∼ 4700 m) of this glacier. Drang Drung Glacier is a larger glacier (area = 71.5
    km2) and is mostly debris-free (Table 1). The glacier is about 21 km long which
    lies in an average relief of 5185 m. River Stod originates from the snout (altitude
    ∼ 4160 m) of this glacier and flows in the opposite direction to the Suru River.
    Details on the morphometric parameters for both glaciers were presented in Table
    1. Table 1. Parameterization of selected glaciers. Glaciers Area (km2) Perimeter
    (km) Length (km) Snout Altitude (m) Average Relief (m) Pensilungpa 15.2 42.91
    8.34 4700 5178 Drang Drung 71.44 108.58 20.25 4160 5185 3. Data and platforms
    Landsat satellite data (resolution ∼ 30 m) acquired from the United States Geological
    Survey (USGS) Earth Explorer was used based on satellite scene availability and
    clarity with reference to snow cover, cloud, and shadow. Two-time period DEMs
    were also used. NASA-SRTM Global DEM v003 (horizontal resolution ∼ 30 m) for the
    year 2000 and ASTER DEM (ASTER 14 DMO) of resolution 30 m for the year 2021 was
    obtained from NASA Earth Data Explorer. Global air temperature data for the months
    of July and August from the National Centre for Atmospheric Research (NCAR) (resolution
    ∼ 0.5 × 0.5°) was used for temperature analysis. The datasets used in the present
    study, their resolution, purpose, and sources were given in Table 2. Table 2.
    Dataset procured in the present study. Satellite data Resolutions Time Period
    Purpose Source Landsat series (5 TM, 8 OLI) 30 m 2000–2022 Glacier mapping, extraction
    of accumulation/ablation zones USGS Earth Explorer (https://earthexplorer.usgs.gov/)
    SRTM DEM v003 30 m 2000 Reference DEM for elevation differencing USGS Earth Explorer
    ASTER DEM (14 DMO) 30 m 2021 Associated DEM for elevation differencing NASA Earthdata
    (https://search.earthdata.nasa.gov/) Air temperature 0.5 × 0.5° 2000–2022 Temperature
    variability National Centre for Atmospheric Research (NCAR) (https://rda.ucar.edu/)
    4. Methodology 4.1. Mass balance 4.1.1. AAR method In the present study, Landsat
    satellite images (Fig. 2) from the period 2000 to 2022 were used to delineate
    and map glacier boundaries. For obtaining minimum snow cover and exposed glacier
    i.e. for the peak ablation period, images from mid-July to early September were
    preferred. Glacier boundaries have been mapped using a SWIR-red-green band combination.
    Before mapping glacier boundaries, the Normalized Difference Snow Index (NDSI)
    (equation (1)) was computed using visible (high reflectance of snow) and SWIR
    (total absorption) bands for effective differentiation of snow from bright soil,
    rock, and clouds, etc. (Hall et al., 1995). (1) NDSI = (Green – SWIR) / (Green
    + SWIR) Download : Download high-res image (299KB) Download : Download full-size
    image Fig. 2. Methodological flowchart for the present study. After obtaining
    the proper glacier boundary and respective atmospheric corrections, the satellite
    image was draped over the DEM for understanding the topographic variability. Indices
    like NDSI and band ratio (NIR/SWIR) have been used to distinguish accumulation
    from ablation zone. To minimize the effect of errors, digital image processing
    techniques such as adaptive (for detecting edges), crisp (for enhancing slope
    variability), and morphological (for smoothening) filters have been used. Unsupervised
    classification has also been performed for segregating accumulation with ablation
    areas. Earlier studies have used a single day per year AAR value for computing
    mass balance which can induce a lot of error due to the variability of snow cover
    (Kulkarni et al., 2004; Poddar and Pandey, 2014). For addressing this issue, AAR
    values were computed for all the cloud-free images between mid-July to early September
    and then averaged for discarding this single-day-per-year induced error. Calculation
    of accumulation area ratio was performed using the expression (equation (2)):
    (2) AAR = (Accumulation area) / (Total area) Kulkarni et al. (2004) developed
    a regression relationship (equation (3)) between in-situ-based mass balance data
    and AAR estimates for Shaune Garang and Gor Garang glaciers in the western Himalayas,
    yielding a correlation of 0.8. (3) Specific Mass balance (in cm.w.e) = 243.01*AAR-120.187
    According to equation (3), there should be a neutral or almost zero mass balance
    when AAR equals 0.5, for the western Himalayas. Hence due to similar climatic
    patterns of the western Himalayas, the same equation was used to compute the long-term
    mass balance of both the adjoining glaciers of Zanskar Valley, as the field-based
    long-term mass balance is not available for the region. 4.1.2. DEM differencing
    method Ice, Cloud, and land Elevation Satellite (ICESat) altimetry data downloaded
    from National Snow and Ice Data Centre (NSIDC) for the same area was used for
    penetration bias correction. Generally, SRTM C-band penetrates through the medium
    which introduces penetration biases (Nuth and Kaab, 2011). Non-glaciated terrain
    is stable and cannot move. Thus, stable terrain was selected with the help of
    the slope. Over the stable terrain, SRTM elevation values were extracted into
    the ICESat points for computing absolute accuracy and discarding the penetration
    biases. The precision of the product produced by DEM differencing is hampered
    by the horizontal and vertical offsets associated with both DEMs as a result of
    their capture at different times by different satellites in distinct datums. Therefore,
    elevation-dependent bias was discarded after co-registering both DEMs to eliminate
    registration-oriented errors (Nuth and Kaab, 2011). First, non-stable topography
    (i.e. glaciers) was removed from both DEMs. Then, using the universal co-registration
    model (equation (4)), which considers terrain slope and aspect, the planimetric
    adjustment/co-registration of both DEMs for stable (non-glacierized) terrain was
    carried out (Nuth and Kaab, 2011). (4) dh = a.cos(b - ᴪ).tan.α + dH Where dh is
    the independent elevation difference, α is the terrain slope, and ᴪ is the terrain
    aspect. The cosine function''s (a, b, and dH) parameters stand for shifts in the
    horizontal direction of the dh, a directional shift vector, and an overall elevation
    bias. These parameters were solved using the least-squares approach. The shift
    in the orientations of the horizontal (a) and directional vector (b) are negligible
    because both DEMs had the same spatial resolution (30 m), while the bias in elevation
    (dH) was adjusted using equation (4). In this scenario, three iterations were
    completed before the bias in elevation was close to zero. Elevation-dependent
    biases result from the spatially asymmetric distribution of GCPs in 3-D coordinate
    planes. The height-dependent bias was eliminated using a second-order polynomial
    correlation (equation (5)) provided by Nuth and Kaab (2011) that depicts the link
    between elevation and elevation difference over terrain without glaciers. Agarwal
    et al. (2017) also employed this trend correction. (5) dh = Σ kn.Zn + τ Where
    dh is the elevation difference, Z is the elevation, k, and τ are regression parameters
    and the order of the polynomial is represented by n (in this case 2). Some points
    in the stable terrain were collected and uncertainty in elevation difference was
    ascertained by computing Mean Absolute Deviation (MAD) (Xu et al., 2022). By subtracting
    the elevation of the years 2021 and 2000, the elevation change was calculated.
    Equation (6) (Cogley, 2011) was used to determine the glacier mass balance utilizing
    elevation change, glacier area, and glacial ice density: (6) Where is the mean
    glacier area for years 2000 and 2021, B is the glacier mass balance in m. w.e.,
    is the change in glacier volume (calculated using elevation change), and and are
    the densities of the ice (∼850 kg/m3) and water (∼997 kg/m3). Uncertainty in mass
    balance has been carried out using equation (7) which is obtained by differentiating
    equation (6): (7) Uncertainty in the volume change can be obtained by using uncertainties
    in the ice thickness change and glacier boundary area. Uncertainty in the ice
    density was taken as ±60 kg/m3 and uncertainty in the mean glacier area can be
    computed using the method suggested by Pfeffer et al. (2014). 5. Results & discussions
    5.1. Mass balance 5.1.1. AAR method Mapping of both Pensilungpa and Drang Drung
    glaciers was performed for the period 2000–2022. After obtaining accumulation
    areas of both glaciers (using the methodology detailed in Section 4), the study
    found that Pensilungpa glacier (Fig. 3a) observed 7 years of positive and 16 years
    of negative mass balance. The years 2003–2005 and 2011 to 2016 were depicted with
    negative mass balance with the highest value up to −75.23-cm water equivalent
    (cm.w.e.) for the year 2015. Additionally, the consistency of negative mass balance
    from the year 2020–2022 was also witnessed. The year 2008 shows a higher negative
    mass balance value up to 80 cm. w. e. Between positive mass balance years 2006,
    2007, 2009, and 2010. Drang Drung glacier (Fig. 3b) shows 12 years of positive
    and 11 years of negative mass balance. The years 2002–2004 and 2009 to 2012 were
    depicted with positive mass balance with the highest value up to 30.5 cm. w. e.
    Except, for the years 2009–2012 (areal increment ∼ 2.65 km2), years 2013–2015
    showed a negative mass balance with negligible areal fluctuations However, the
    consistency of negative mass balance from the year 2020–2022 was observed as was
    for the Pensilungpa Glacier. Download : Download high-res image (565KB) Download
    : Download full-size image Fig. 3. Mass balance of (a) Pensilungpa (b) Drang Drung
    glaciers during 2000–2022. Both glaciers witnessed similar mass balance patterns
    for some of the same years viz. 2000–2001, 2006–2007, 2013–2015, and 2020–2022
    due to snowfall variability in the peak ablation period. After converting the
    specific mass balance from cm. w.e. To m. w.e., the results have been validated
    with field-based mass balance data of the Chotta Shigri glacier (Table 3) of Himachal
    Pradesh in Western Himalaya computed by Wagnon et al. (2007); JNU-SAC (2008);
    JNU-IFCPAR (2009); Jnu Dst (2011) for years 2008, 2009 and 2010. Table 3. Comparison
    of computed mass balance data with field-based data. Years Chhota Shigri glacier
    (Field based mass balance in m.w.e.) Pensilungpa glacier (in m.w.e.) Drang Drung
    glacier (in m.w.e.) 2008 −0.93 −0.813 −0.172 2009 0.13 0.499 0.305 2010 0.33 0.038
    0.123 5.1.2. DEM differencing method The elevation difference map (Fig. 4) was
    generated from temporal DEMs along with the corresponding mass balance estimates.
    High elevation difference indicates an increase in elevation at that particular
    pixel due to snowfall, or avalanche. Over that time period, whereas negative elevation
    difference indicates a decrease in height due to melting, and deformation. Therefore,
    a positive elevation difference indicates positive mass balance and a negative
    elevation difference represents negative mass balance. The study revealed that
    the glacier elevation differences ranged from < −40 to 46 m. Average elevation
    changes for Pensilungpa glacier lay in the range from −11 to 15 m. Negative changes
    at the junction of the tributary glacier to the main glacier represent thinning
    and which leads to fragmentation of the glacier (Vijay and Braun, 2018). Drang
    Drung glacier (average elevation changes ∼ −18 to 17 m) depicted the dominance
    of positive elevation changes with negative changes near the snout region reflecting
    glaciation of the snout zone. Radiation absorption by clean ice and the higher
    temperature at lower altitudes seemed to be the possible reason for the maximum
    thinning at the terminus of the Drang Drung Glacier (Vijay and Braun, 2018). These
    elevation differences were validated by the results obtained for the Pensilungpa
    glacier shown by Pandey et al. (2012). They used the Survey of India (SOI) toposheet
    and ASTER DEM during the study period (1962–2007) which revealed an increment
    of 30–90 m of glacier elevation in the accumulation zone and a similar decrement
    in the ablation zone was witnessed. Download : Download high-res image (2MB) Download
    : Download full-size image Fig. 4. Elevation difference and mass balance estimation
    between 2000 and 2021. 5.1.3. Comparison of mass balance estimates Average values
    of mass balance over accumulation and ablation zones were extracted and compared
    with the calculated mass balance using the AAR method. AAR-based mass balance
    has given average values of −0.09 and 0.16 m. w.e. For Pensilungpa and Drang Drung
    glaciers. Average values of mass balance over the glaciers obtained from the DEM
    differencing method have shown −0.03 m. w.e. For Pensilungpa and 0.09 m. w.e.
    For Durung Drung glacier holding a good correlation with the values obtained by
    the AAR method. These results are validated by the mass balance results of glaciers
    of the Pamir mountains in central Asia shown by Zhou et al. (2019) using KH-9
    imagery and SRTM DEM during the study period (1975–1999) which revealed values
    of −0.03 ± 0.24 m. w.e. Per annum. The results are also validated by the elevation
    difference of the glaciers in the Zanskar region shown by Vijay and Braun (2018)
    using interferometric SRTM and bistatic TanDEM-X DEMs during the study period
    (2000–2012) which revealed values of −0.19 ± 0.22 m/yr. The study also revealed
    that while computing height difference, some traces of a major height gap is observed
    in the range of −40 to −25 m in the lower accumulation reaches of Pensilungpa
    glacier and nearby snout areas of Drang Drung glacier which represents the development
    of longitudinal crevasses and supraglacial erosional features (Dobreva et al.,
    2017; Vijay and Braun, 2018). The crevasses can be considered an indicator of
    glacial deformation and future glacial lake formation. 5.2. Glacial dynamics Pensilungpa
    glacier area (Fig. 5a) increased during 2005 (∼15.6 km2), 2006 (∼15.58 km2), 2016
    (∼15.15 km2), and 2017 (∼15.2 km2) and was mostly stable from 2000 to 2003 (∼14.65
    km2), 2007 to 2015 (∼14.7 km2), and from 2018 to 2020 (∼14.57 km2). During the
    years 2000–2005, area change ranged between 0 and 0.6 km2 with snout fluctuation
    of 1 m/yr. The snout retreated up to 4.3 m/yr with a net areal retreat of 1 km2
    between the years 2005 and 2019. The area change for Drang Drung Glacier (Fig.
    5b) is small and varied between 71.8 and 71.2 km2. Glacier was stable from the
    year 2000–2009 (71.75–71.85 km2) with the snout retreating up to 2.8 m/yr. A net
    areal fluctuation of 0.6 km2 with an increased snout shift of 6 m/yr was observed
    between the years 2009 and 2019. Download : Download high-res image (806KB) Download
    : Download full-size image Fig. 5. Glacier area changes (a) Pensilungpa (b) Drang
    Drung glaciers during 2000–2022. During the years 2000–2003, the Pensilungpa Glacier
    area was stagnant and the mass balance increased a little. The mass balance increased
    incredibly in the year 2002 (∼22.32 cm. w.e.) due to the snowfall in the acquisition
    month of the satellite (Ghosh and Pandey, 2013). Glacier area increased during
    the period 2004–2006 and so did the mass balance (−40.5 to 21.42 cm. w.e.). Mass
    balance decreased rapidly between 2006 and 2008 (21.42 to −79.55 cm. w.e.) which
    was due to the rapid rate of glacier areal thinning. The year 2009 depicted a
    rapid rise in mass balance (∼36.22 cm. w.e.) due to the snowfall in the acquisition
    month of the satellite. During the years 2009–2011, the Pensilungpa Glacier area
    decreased so did the mass balance (36.22 to −3.42 cm. w.e.). An increasing-decreasing
    behavior in glacier area and mass balance was observed between the years 2011–2015.
    The mass balance increased incredibly between 2015 and 2017 (−72.42 to 9.92 cm.
    w.e.) due to the rapid rate of glacier areal increment. Glacier area decreased
    during the period 2017–2018 and so did the mass balance (9.92 to −70.62 cm. w.e.).
    Continuous series of negative mass balances were observed during the years 2020–2022
    (−54.33 to −44.32 cm. w.e.) due to glacier areal thinning. The study by Rana et
    al. (2023) for Parkachik Glacier, Zanskar Valley also observed a major glacial
    retreat after the year 2015. During the years 2000–2006, the Drang Drung Glacier
    area was stagnant and the mass balance increased (−43.42 to 29.67 cm. w.e.). A
    similar pattern of areal fluctuations and mass balance was observed between the
    period 2006–2009. Glacier area decreased rapidly during the period 2009–2013 but
    the glacier maintained a stagnant mass balance (∼15.96 cm. w.e.) during 2009–2012
    and further decreased (∼– 17.42 cm. w.e.) in the year 2013. The glacier area was
    stagnant during the period 2013–2015 and so did the mass balance (−17.42 to −18.76
    cm. w.e.). The mass balance increased incredibly between 2015 and 2017 (−21.47
    to 19.97 cm. w.e.) due to the rapid rate of glacier areal increment. An increasing-decreasing
    behavior in glacier area and mass balance was observed between the years 2017–2020.
    Years between 2020 and 2022 were depicted with an area decrement but the mass
    balance increased (−33.33 to −8.48 cm. w.e.). There was a decrement in the glacier
    mass balance after the year 2009 which is possibly linked with the areal shrinkage
    of the glacier. The linkages between glacial dynamics and mass balance indicated
    a direct relationship. Meanwhile, Pensilungpa Glacier due to its smaller size
    was more sensitive to glacier areal fluctuations. The sensitivity of small glaciers
    of Zanskar Valley to areal fluctuations was also observed by Rana et al. (2023).
    As Pensilungpa Glacier is partially debris-covered, hence the reason can also
    be attributed to the fact that glacier melting is also triggered by variable debris
    thickness (Mehta et al., 2021, 2023). 5.3. Air temperature Temperature conditions
    over both the glaciers (Fig. 6) in the lower ablation zone or glacier snout were
    analyzed, for the period of study (2000–2022) in the month of August. A temperature
    of around −6 °C was recorded in the years 2001, 2002, 2005, 2006, 2007, 2013,
    2015, 2016, and 2020. An average temperature of −2 °C was mostly recorded during
    the study period and the years 2003 and 2017 recorded high-temperature up to 2
    °C. The years 2003 and 2017 witnessed a sudden increase in temperature from −6
    °C to 2 °C and then between the years 2003–2005, the temperature further decreased
    to −7 °C. The years 2020–2022 depicted a rise in temperature. Download : Download
    high-res image (386KB) Download : Download full-size image Fig. 6. Specific mass
    balance Vs Average Air Temperature. During the years 2000–2002, the air temperature
    decreased and the mass balance of the glaciers increased. The temperature increased
    from 2002 to 2004 but both glaciers have shown variable behavior. The Pensilungpa
    Glacier was depicted with a negative mass balance whereas Drang Drung Glacier
    was stagnant during 2002–2004. The years 2004–2007 have shown a similar pattern
    as the years 2000–2002 viz. A decrement in air temperature and an increment in
    mass balance of both the glaciers. But the increment was more prominent for Drang
    Drung Glacier as compared to Pensilungpa Glacier. It is interesting to note that
    between the years 2008–2012, the temperature shows increasing-decreasing behavior.
    Drang Drung Glacier mainly showed near positive mass balance between the years
    2009–2012 and Pensilungpa Glacier showed negative mass balance between 2010 and
    2012. Between the years 2012–2016, the temperature was depicted with an increasing-decreasing
    pattern but the variability in mass balance during the period for Pensilungpa
    Glacier was more negative as compared to Drang Drung Glacier. A cumulative increment
    in air temperature was observed between 2016 and 2020 but both glaciers have shown
    an increasing-decreasing behavior. But again, the increment in mass balance was
    more prominent for Drang Drung Glacier as compared to Pensilungpa Glacier. Between
    the years 2020–2022, the temperature rose continuously but the variability in
    mass balance during the period for Pensilungpa Glacier was more negative as compared
    to Drang Drung Glacier. The linkages between air temperature and mass balance
    mostly indicated an inverse relationship. Meanwhile, Pensilungpa Glacier was more
    sensitive to climate forcing. The sensitivity of small glaciers of Zanskar Valley
    to areal and temperature fluctuations was also observed by Ghosh and Pandey (2013).
    Possible limitations of the study are the absence of high-resolution DEMs for
    recent years, cloud hindrance issues for optical remote sensing images, resolution
    of the Landsat imagery (which hindered detailed glacier mapping) and air temperature
    dataset, and lack of field-based measurements for validations. Some possible recommendations
    and future aspects could be using Synthetic Aperture Radar (SAR) images for resolving
    the resolution and cloud cover constrain, and a detailed relationship of estimated
    mass balance with climate factors (temperature, precipitation/snowfall, etc).
    Exploring energy balance models for computing mass can also form future scope
    to check the accountability of radiation budgets of the glaciers. 6. Conclusions
    The present study demonstrates a methodology for comparative assessment of glacier
    mass balance using satellite data-based techniques suited for areas where in-situ
    data is not available. Mass balance results indicates the contrasting relationship
    between smaller and larger glaciers in the Zanskar Valley, Ladakh, India. Pensilungpa
    Glacier was depicted with more negative mass balane years as compared to Drang
    Drung Glacier. DEM differencing method indicates its reliability in elevation
    change aspects. These elevation changes uncover long-term glacier thinning, mass
    changes, and the evolution of glacial erosional landforms. Relationship with areal
    fluctuations and air temperature proves higher sensitivity of small glaciers to
    glacial dynamics and climate forcing. Declaration of competing interest The authors
    declare that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Data availability
    Data will be made available on request. References Agarwal et al., 2017 V. Agarwal,
    T. Bolch, T.H. Syed, T. Pieczonka, T. Strozzi, R. Nagaich Area and mass changes
    of Siachen glacier (east Karakoram) J. Glaciol., 63 (2017), pp. 148-163 CrossRefView
    in ScopusGoogle Scholar Ahmad et al., 2004 S. Ahmad, S. Hasnain, M. Selvan Morpho-metric
    characteristics of glaciers in the Indian Himalayas Asian J. Water Environ. Pollut.,
    1 (1&2) (2004), pp. 109-118 CrossRefGoogle Scholar Ali et al., 2014 I. Ali, A.
    Shukla, J. Qadir Monitoring glacial parameters in parts of zanskar basin, Jammu
    and Kashmir Book: Geostatistical and Geospatial Approaches for the Characterization
    of Natural Resources in the Environment: Challenges, Processes and Strategies
    Geostatistical and Geospatial Approaches for the Characterization of Natural Resources
    in the Environment Edition, Springer International Publishing, N. Janardhana Raju
    (2014), p. 1 Chapter: 138 Publisher Google Scholar Azam et al., 2018 M.F. Azam,
    P. Wagnon, E. Berthier, C. Vincent, K.O.J.I. Fujita, J.S. Kargel Review of the
    status and mass changes of Himalayan–Karakoram glaciers J. Glaciol., 64 (243)
    (2018), pp. 61-64 CrossRefView in ScopusGoogle Scholar Bahuguna et al., 2014 I.M.
    Bahuguna, B.P. Rathore, R. Brahmbhatt, M.C. Sharma, S. Dhar, S.S. Randhawa, K.
    Kumar, S.A. Romshoo, R.D. Shah, R.K. Ganjoo, A. Prof Are the himalayan glaciers
    retreating? Curr. Sci., 106 (7) (2014), pp. 1008-1013 View in ScopusGoogle Scholar
    Benn and Lehmkuhl, 2000 D.I. Benn, F. Lehmkuhl Mass balance and equilibrium-line
    altitudes of glaciers in high-mountain environments Quat. Int., 65–66 (2000),
    pp. 15-29 View PDFView articleView in ScopusGoogle Scholar Berthier et al., 2007
    E. Berthier, Y. Arnaud, R. Kumar, S. Ahmad, P. Wagnon, P. Chevallier Remote sensing
    estimates of glacier mass balances in the Himachal Pradesh (Western Himalayas,
    India) Remote Sens. Environ., 108 (2007), pp. 327-338 View PDFView articleView
    in ScopusGoogle Scholar Bhambri and Bolch, 2009 R. Bhambri, T. Bolch Glacier Mapping:
    a review with special reference to the Indian Himalaya Prog. Phys. Geogr. (2009),
    pp. 672-704 CrossRefView in ScopusGoogle Scholar Bhattacharjee and Pandey, 2021
    S. Bhattacharjee, A.C. Pandey Contrasting behaviour of temporal glacier changes
    and long term estimation of glacier mass balance across himalayan- Karakoram range
    Geocarto Int. (2021), 10.1080/10106049.2021.1923832 Google Scholar Bhattacharjee
    and Pandey, 2023 S. Bhattacharjee, A.C. Pandey Estimating thickness of Zemu glacier,
    Sikkim (India) using ice-flow velocity approach: a geoinformatics based perspective
    Spat. Inf. Res. (2023), 10.1007/s41324-023-00515-3 Google Scholar Bhutiyani, 1999
    M.R. Bhutiyani Mass-balance studies on Siachen glacier in the Nubra Valley, Karakoram
    Himalaya, India J. Glaciol. (1999), pp. 1112-1118 Google Scholar Bolch et al.,
    2012 T. Bolch, A.V. Kulkarni, A. Kaab, C. Huggel, F. Paul, J.G. Cogley, H. Frey,
    J.S. Kargel, K. Fujita, M. Scheel, S. Bajracharya, M. Stoffel The state and fate
    of himalayan glaciers Science, 336 (6079) (2012), pp. 310-314 CrossRefView in
    ScopusGoogle Scholar Cogley, 2011 J.G. Cogley Present and future states of Himalaya
    and Karakoram glaciers Ann. Glaciol., 52 (2011), p. 69, 10.3189/172756411799096277
    View in ScopusGoogle Scholar Dehecq et al., 2019 A. Dehecq, N. Gourmelen, A.S.
    Gardner, F. Brun, D. Goldberg, P.W. Nienow, E. Berthier, C. Vincent, P. Wagnon,
    E. Trouve Twenty-first century glacier slowdown driven by mass loss in High Mountain
    Asia Nat. Geosci., 12 (2019), pp. 22-27 CrossRefView in ScopusGoogle Scholar Dobhal
    and Thayyen, 2004 D.P. Dobhal, R. Thayyen Recession and morphogeometrical changes
    of dokriani glacier (1962 – 1995), garhwal Himalaya India Curr. Sci., 85 (6) (2004),
    pp. 692-696 View in ScopusGoogle Scholar Dobreva et al., 2017 I.D. Dobreva, M.P.
    Bishop, A.B.G. Bush Climate-glacier dynamics and topographic forcing in the Karakoram
    Himalaya: concepts, issues and research directions Water, 9 (2017), p. 405 CrossRefView
    in ScopusGoogle Scholar Ghosh and Pandey, 2013 S. Ghosh, A.C. Pandey Estimating
    the Variation in Glacier Area over the Last 4 Decade and Recent Mass Balance Fluctuations
    over the Pensilungpa Glacier, J&K, India. Global Perspective in Geography American
    Society of Science and Engineering (2013) ISSN:2328-2320 Google Scholar Hall et
    al., 1995 D.K. Hall, G.A. Riggs, V.V. Salomonson Development of methods for mapping
    global snow cover using Moderate Resolution Imaging Spectroradiometer (MODIS)
    data Remote Sens. Environ., 54 (1995), pp. 127-140 View PDFView articleView in
    ScopusGoogle Scholar Immerzeel et al., 2009 W.W. Immerzeel, Peter Droogers, Michael
    De Jong, B. Steven Large scale monitoring of snow cover and runoff simulation
    in Himalayan river basins using remote sensing Remote Sens. Environ., 113 (1)
    (2009), pp. 40-49 View PDFView articleView in ScopusGoogle Scholar Immerzeel et
    al., 2012 I.W. Immerzeel, L.P.H. Beek, M. Konz, A.B. Shrestha, M.F.P. Bierkens
    Hydrological response to climate change in a glacierized catchment in the Himalayas
    Clim. Change, 110 (3–4) (2012), pp. 721-736 CrossRefView in ScopusGoogle Scholar
    JNU-SAC, 2008 JNU-SAC Mass Balance Monitoring of Chhota Shigri Glacier, Annual
    Technical Report Submitted to SAC, ISRO Jawaharlal Nehru University, New Delhi
    (2008) Google Scholar JNU-IFCPAR, 2009 JNU-IFCPAR Mass Balance, Energy Balance
    and Hydrological Balance of Chhota Shigri Glacier, Himachal Pradesh, Technical
    Field Report Submitted to IFCPAR Jawaharlal Nehru University, New Delhi (2009)
    Google Scholar Jnu Dst, 2011 Jnu Dst Monitoring Studies on Chhota Shigri Glacier,
    Himachal Pradesh Progress Report submitted to Department of Science and Technology,
    Jawaharlal Nehru University, New Delhi (2011) Google Scholar Kaser et al., 2003
    G. Kaser, A. Fountain, P. Jansson A manual for monitoring the mass balance of
    mountain glaciers Technical documents in Hydrology, 59 (2003) (Paris: UNESCO)
    Google Scholar Kulkarni et al., 2004 A.V. Kulkarni, B.P. Rathore, S. Alex Monitoring
    of glacier mass balance in the Baspa Basin using accumulation area ratio method
    Curr. Sci., 86 (1) (2004) Google Scholar Kulkarni et al., 2002 A.V. Kulkarni,
    J. Srinivasulu, S.S. Manjul, P. Mathur Field-based spectral reflectance to develop
    NDSI method for snow cover monitoring Journal of the Indian Society of Remote
    Sensing, 30 (2002), pp. 73-80 View in ScopusGoogle Scholar Kulkarni, 1992 A.V.
    Kulkarni Mass balance of Himalayan glaciers using AAR and ELA methods J. Glaciol.,
    38 (128) (1992), pp. 101-104 View in ScopusGoogle Scholar Kunpeng et al., 2019
    W Kunpeng, L Shiyin, J Zongli, J Xu Glacier mass balance over the central Nyainqentanglha
    range during recent decades derived from remote sensing data J. Glaciol. (2019),
    pp. 422-439, 10.1017/jog.2019.20 Google Scholar Lepparanta and Granberg, 2010
    M. Lepparanta, H.B. Granberg Physics of glacier remote sensing Remote Sensing
    of Glaciers, Taylor & Francis (2010) Google Scholar Li et al., 2014 X. Li, T.B.
    Yang, Q. Ji Study on glacier variations in the gangrigabu range Res. Soil Water
    Conserv., 21 (4) (2014), pp. 233-237 (in Chinese with English summary) Google
    Scholar Macgregor et al., 2005 K.R. Macgregor, C.A. Riihimaki, R.S. Anderson Spatial
    and temporal evolution of rapid basal sliding on Bench Glacier, Alaska, USA J.
    Glaciol., 51 (2005), pp. 49-63 CrossRefView in ScopusGoogle Scholar Mehta et al.,
    2021 M. Mehta, V. Kumar, S. Garg, A. Shukla Little Ice Age glacier extent and
    temporal changes in annual mass balance (2016–2019) of Pensilungpa Glacier. Zanskar
    Himalaya Reg. Environ. Change, 21 (38) (2021), pp. 1-18, 10.1007/s10113-021-01766
    Google Scholar Mehta et al., 2023 M. Mehta, V. Kumar, P. Kumar, K. Sain Response
    of the thick and thin debris-covered glaciers between 1971 and 2019 in Ladakh
    Himalaya, India – a case study from Pensilungpa and Durung-Drung glaciers Sustainability,
    15 (5) (2023), pp. 1-21 CrossRefGoogle Scholar Nathawat et al., 2008 M.S. Nathawat,
    A.C. Pandey, P.K. Rai, S. Ahmad, I.M. Bahuguna Spatio-temporal Dynamics of Glaciers
    in Doda Valley, Zanskar Range, Jammu & Kashmir, India. In Proceedings of the International
    Workshop on Snow, Ice Glacier and Avalanches, IIT Bombay (2008), pp. 256-264 Google
    Scholar Nuth and Kaab, 2011 C. Nuth, A. Kaab Co-registration and bias corrections
    of satellite elevation data sets for quantifying glacier thickness change Cryosphere,
    5 (2011), pp. 271-290 CrossRefView in ScopusGoogle Scholar Ostrem and Stanley,
    1969 G. Ostrem, A. Stanley Glacier Mass Balance Measurement: a Manual for Field
    and Office Work. Ottance, Ont., Department of Energy, Mines and Resource Water
    Resources and Electricity Board, Oslo, Norwegian (1969) Google Scholar Owen and
    Benn, 2005 L.A. Owen, D.I. Benn Equilibrium line altitude of the last glacial
    maxima for the Himalaya and Tibet: an assessment and evaluation of results Quat.
    Int., 138–139 (2005), pp. 55-78 View PDFView articleView in ScopusGoogle Scholar
    Pandey et al., 2011 A.C. Pandey, S. Ghosh, M.S. Nathawat Evaluating patterns of
    temporal glacier changes in greater himalayan range, jammu & Kashmir, India Geocarto
    Int., 26 (4) (2011), pp. 321-338 2011 CrossRefView in ScopusGoogle Scholar Pandey
    et al., 2012 A.C. Pandey, S. Ghosh, M.S. Nathawat, R.K. Tiwari Area change and
    thickness variation over Pensilungpa Glacier (J&K) using remote sensing Journal
    of Indian Society of Remote Sensing, 40 (2) (2012), pp. 245-255 CrossRefView in
    ScopusGoogle Scholar Pfeffer et al., 2014 W.T. Pfeffer, A. Arendt, A. Bliss, T.
    Bolch, J.G. Cogley, A.S. Gardner, J. Hogan, R. Hock, G. Kaser, C. Kienhdz, E.S.
    Miles, G. Moholdt, N. Molg, F. Paul, V. Radic, P. Rastner, B.H. Raup, J. Rich,
    M.J. Sharp The Randolph glacier inventory: a globally complete inventory of glaciers
    J. Glaciol., 60 (221) (2014), pp. 537-552 View in ScopusGoogle Scholar Poddar
    and Pandey, 2014 J. Poddar, A.C. Pandey Estimating the impact of changes in mass
    balance on variations in Glacier area and snout fluctuations in western Himalaya,
    J & K, India 2014 IGARSS, 978 (2014) 1- 4799-5775-0/14 Google Scholar Prasad et
    al., 2009 A.K. Prasad, K.H.S. Yand, H.M. El-Askary, M. Kafatos Melting of major
    Glaciers in the Western Himalayas: evidence of climatic changes from long term
    MSU derived tropospheric temperature trend (1979 – 2008) Ann. Geophys., 27 (2009),
    pp. 4505-4519 CrossRefView in ScopusGoogle Scholar Racoviteanu et al., 2008 A.
    Racoviteanu, M. Williams, R. Barry Optical remote sensing of glacier characteristics:
    a review with focus on Himalaya Remote Sens. Environ., 8 (2008), pp. 3355-3383
    CrossRefView in ScopusGoogle Scholar Rana et al., 2023 A.S. Rana, P. Kunmar, M.
    Mehta, V. Kumar Glacier retreat, dynamics and bed overdeepenings of Parkachik
    Glacier, Ladakh Himalaya, India Ann. Glaciol. (2023), pp. 1-14, 10.1017/aog.2023.50
    Google Scholar Scherler et al., 2011 D. Scherler, B. Bookhagen, M.R. Strecker
    Spatially variable response of Himalayan glaciers to climate change affected by
    debris cover Nat. Geosci., 4 (2011), pp. 156-159 CrossRefView in ScopusGoogle
    Scholar Tawde et al., 2017 S.A. Tawde, A.V. Kulkarni, G. Bala An estimate of glacier
    mass balance for the Chandra Basin, Western Himalaya, for the period 1984–2012
    Ann. Glaciol., 58 (75pt2) (2017), pp. 99-109 CrossRefView in ScopusGoogle Scholar
    Vijay and Braun, 2018 S. Vijay, M. Braun Early 21st century spatially detailed
    elevation changes of Jammu & Kashmir glaciers (Karakoram-Himalaya) Global Planet.
    Change, 165 (April) (2018), pp. 137-146, 10.1016/j.gloplacha.2018.03.014 View
    PDFView articleView in ScopusGoogle Scholar Wagnon et al., 2007 P. Wagnon, A.
    Linda, Y. Arnaud, R. Kumar, P. Sharma, C. Vincent, J.G. Pottakkal, E. Berthier,
    A. Ramanathan, S.I. Hasnain, P. Chevallier Four years of mass balance on Chhota
    Shigri Glacier, Himachal Pradesh, India, a new benchmark glacier in the western
    Himalaya J. Glaciol., 53 (2007), pp. 603-611 CrossRefView in ScopusGoogle Scholar
    Xu et al., 2022 S. Xu, Y. Wang, Y. Wang, S. Qi, M. Zhou Glacier mass balance changes
    over the turgen daban range, western qilian Shan, from 1966/75 to 2020 Front.
    Earth Sci., 10 (2022), 10.3389/feart.2022.848895 Google Scholar Yang et al., 2010
    W. Yang, T. Yao, B. Xu, L. Ma, Z. Wang, M. Wan Characteristics of recent temperate
    glacier fluctuations in the parlung zangbo river basin, southeast Tibetan plateau
    Chin. Sci. Bull., 55 (20) (2010), pp. 2097-2102 CrossRefView in ScopusGoogle Scholar
    Zhou et al., 2019 Y. Zhou, Z. Li, J. Li, R. Zhao, X. Ding Geodetic glacier mass
    balance (1975-1999) in the Central Pamir using SRTM DEM and KH-9 imagery J. Glaciol.
    (2019), 10.1017/jog.2019.8 Google Scholar Cited by (1) Two Decades of Glacier
    and Glacial Lake Change in the Dhauladhar Mountain Range, Himachal Himalayas,
    India (2000–2020) 2024, Journal of the Indian Society of Remote Sensing © 2023
    The Authors. Published by Elsevier Ltd. Recommended articles Characteristics of
    earthquake swarm activity observed in the Palghar region of Indian Peninsula from
    January 2019 to October 2020 Quaternary Science Advances, Volume 12, 2023, Article
    100099 Varun Sharma, …, Prasanta Chingtham View PDF Bone weathering in an Atlantic
    environment: preliminary results of the Global Weathering Project in Spain Quaternary
    Science Advances, Volume 12, 2023, Article 100112 A.B. Marín-Arroyo, …, Manuel
    R. González Morales View PDF Could facing techniques be compatible with optimal
    bone preservation surface? Quaternary Science Advances, Volume 12, 2023, Article
    100105 Noé Valtierra, …, Andrea Díaz-Cortés View PDF Show 3 more articles Article
    Metrics Captures Readers: 7 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Quaternary Science Advances
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Long-term estimation of glacier mass balance using geospatial techniques
    in Western Himalayas, Ladakh, India
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ngoc T.T.H.
  - Khanh P.T.
  - Pramanik S.
  citation_count: '6'
  description: Information that is current and accurate is essential for resource
    optimization. Sensors in agriculture identify the soil's nutrients, moisture,
    organic matter, and clay. Different technologies are used to link sensors located
    in diverse places. Without a connection to the internet, its data will be spontaneously
    communicated to the cloud. Utilizing WiFi, LPWAN, LoRa, Bluetooth, and other technologies,
    sensors broadcast data to nearby local base stations at varying distances before
    sending it to a distant central base station (CBS). It has a good environmental
    effect while lowering agricultural costs related to labor, water use, and other
    expenses. Information is more exact when it is integrated with additional data,
    such as weather predictions. IoT is fueled by the fusion of technologies like
    sensors, cloud computing, automation, etc. without human contact. This chapter's
    goal is to develop an embedded system for soil monitoring and irrigation that
    will replace manual field inspection with a mobile application.
  doi: 10.4018/978-1-6684-9231-4.ch011
  full_citation: '>'
  full_text: '>

    "Login Register Language: English Welcome to the InfoSci Platform University of
    Nebraska - Lincoln Database Search Research Tools User Resources Reference Hub13
    Smart Agriculture Using a Soil Monitoring System Tran Thi Hong Ngoc, Phan Truong
    Khanh, Sabyasachi Pramanik Source Title: Handbook of Research on AI-Equipped IoT
    Applications in High-Tech Agriculture Copyright: © 2023 |Pages: 21 ISBN13: 9781668492314|ISBN10:
    1668492318|EISBN13: 9781668492338 DOI: 10.4018/978-1-6684-9231-4.ch011 Cite Chapter
    Favorite View Full Text HTML View Full Text PDF Abstract Information that is current
    and accurate is essential for resource optimization. Sensors in agriculture identify
    the soil''s nutrients, moisture, organic matter, and clay. Different technologies
    are used to link sensors located in diverse places. Without a connection to the
    internet, its data will be spontaneously communicated to the cloud. Utilizing
    WiFi, LPWAN, LoRa, Bluetooth, and other technologies, sensors broadcast data to
    nearby local base stations at varying distances before sending it to a distant
    central base station (CBS). It has a good environmental effect while lowering
    agricultural costs related to labor, water use, and other expenses. Information
    is more exact when it is integrated with additional data, such as weather predictions.
    IoT is fueled by the fusion of technologies like sensors, cloud computing, automation,
    etc. without human contact. This chapter''s goal is to develop an embedded system
    for soil monitoring and irrigation that will replace manual field inspection with
    a mobile application. Request access from your librarian to read this chapter''s
    full text. Full Text Preview Introduction The world''s population is projected
    to increase dramatically by 2050, reaching 8.7 billion people, up from 6.9 billion
    in 2016. People are adding more protein to their diets as a result of an increase
    in wealth. According to a study from the United Nations'' Food and Agriculture
    Organization (FAO), agriculturists should boost their output by 65% above present
    levels. To feed the expanding global population, food producers must increase
    their output. The demand for food will rise by about 50% as compared to 2013 with
    the population increase. Urbanization (Mall, P. K. et al., 2023) growth is predicted
    to increase another 2.4 billion people live in urban areas. Even if there is a
    growing need for food, growing urbanization reduces the number of people residing
    in village regions, which results in a shrinking agricultural workforce. In addition,
    rural residents are quickly ageing, which will result in a severe manpower shortage
    in the future. The world''s agriculture is becoming unsustainable as a result
    of population development and urbanization, and 25% of the world''s arable land
    is already damaged. Nearly 40% of the world''s rural population experiences water
    shortages, indicating that water resources are already at an extreme level of
    use. To increase production, unbalanced fertilizers are utilized, which affects
    the amount of soil nutrients. The major soil nutrients are nitrogen (N), phosphorus
    (P), and potassium (K), whereas iron, manganese, zinc, boron, and chlorine are
    the insignificant ones. The development of the plant and excellent yields depend
    on the proper balance of these nutrients. Amino acids are produced by macronutrients
    like nitrogen, whereas phosphorus and potassium aid in the development of plant
    growths, photosynthesis, and disease resistance. Due to improper irrigation timing
    and unbalanced fertilizer application without knowledge of a certain crop''s real
    nutritional needs, soil fertility is reduced. With advancements in science and
    technology, agriculture''s traditional methods are changing. Technology in agriculture
    advances, responds to customers'' genuine needs, and maintains the balance between
    supply and demand for food. Because of the advancements in automation like sensors,
    gadgets, equipment, information technologies, and quick transmission networks,
    modern farms and agricultural operations operate differently. Robots (Alam, A.,
    2022), sensors, aerial photographs, and GPS (Samanta, D. et al., 2021) technology
    are all used. Modern technology helps farmers to utilize water, fertilizers, and
    other resources efficiently. The efficiency and production of agriculture are
    predicted to rise with technological advancements as larger and miniature farmlands
    are closing and becoming more integrated in comparison with earlier years. Data
    collection is crucial for identifying trends, and it is anticipated that there
    would be 4 million more data points than on a typical farm. The IoT (Reepu, S.
    Kumar, et. al., 2023) enables the analysis of both structured and unstructured
    data to provide additional information about food production (Kumari, M., et al.,
    2022). IoT platforms are converting agricultural frameworks into true AI frameworks
    by using machine learning, AI, etc. to data from field sensors (Ghosh, R. et al.,
    2020). Farmers may make better judgments by studying and connecting data on the
    weather, seeds, soil, disease likelihood, and insect assaults. Continue Reading
    References Follow Reference Alam A. (2022). Employing Adaptive Learning and Intelligent
    Tutoring Robots for Virtual Classrooms and Smart Campuses: Reforming Education
    in the Age of Artificial Intelligence. In ShawR. N.DasS.PiuriV.BianchiniM. (Eds.),
    Advanced Computing and Intelligent Technologies. Lecture Notes in Electrical Engineering
    (Vol. 914). Springer. 10.1007/978-981-19-2980-9_32 Follow Reference Anand R. Singh
    J. Pandey D. Pandey B. K. Nassa V. K. Pramanik S. (2022). Modern Technique for
    Interactive Communication in LEACH-Based Ad Hoc Wireless Sensor Network. In GhongeM.
    M.PramanikS.PotgantwarA. D. (Eds.), Software Defined Networking for Ad Hoc Networks.
    Springer. 10.1007/978-3-030-91149-2_3 Follow Reference Bansal R. Obaid A. J. Gupta
    A. Singh R. Pramanik S. (2021). Impact of Big Data on Digital Transformation in
    5G Era. 2nd International Conference on Physics and Applied Sciences.10.1088/1742-6596/1963/1/012170
    Follow Reference Choudhary S. Narayan V. Faiz M. Pramanik S. (2022). Fuzzy Approach-Based
    Stable Energy-Efficient AODV Routing Protocol in Mobile Ad hoc Networks. In GhongeM.
    M.PramanikS.PotgantwarA. D. (Eds.), Software Defined Networking for Ad Hoc Networks.
    Springer. 10.1007/978-3-030-91149-2_6 Follow Reference Dehghani A. Setare M. R.
    Zarepour S. (2022). Self-energy problem, vacuum polarization, and dual symmetry
    in Born–Infeld-type U(1) gauge theories.The European Physical Journal Plus, 137(7),
    859. 10.1140/epjp/s13360-022-03066-y Follow Reference Ghosh R. Mohanty S. Pramanik
    S. (2020). A Novel Approach towards Selection of Role Model Cluster Head for Power
    Management in WSN: Selection of Role Model Cluster Head for Power Management in
    WSN. In BoseG.PainP. (Eds.), Machine Learning Applications in Non-Conventional
    Machining Processes (pp. 235–249). IGI Global. 10.4018/978-1-7998-3624-7.ch015
    Follow Reference Gupta A. Asad A. Meena L. Anand R. (2023). IoT and RFID-Based
    Smart Card System Integrated with Health Care, Electricity, QR and Banking Sectors.
    In GuptaM.GhatakS.GuptaA.MukherjeeA. L. (Eds.), Artificial Intelligence on Medical
    Data. Lecture Notes in Computational Vision and Biomechanics (Vol. 37). Springer.
    10.1007/978-981-19-0151-5_22 Follow Reference Hussain, S. M., Yusof, K. M., Asuncion,
    R., Hussain, S. A., & Ahmad, A. (2022). An Integrated Approach of 4G LTE and DSRC
    (IEEE 802.11p) for Internet of Vehicles (IoV) by Using a Novel Cluster-Based Efficient
    Radio Interface Selection Algorithm to Improve Vehicular Network (VN) Performance.
    In Sustainable Advanced Computing. Lecture Notes in Electrical Engineering (vol.
    840). Springer. 10.1007/978-981-16-9012-9_46 Follow Reference Kumari M. Kumar
    V. Kaur R. Kumar S. Sharma R. (2022). Process Optimization for the Development
    of Nutritionally Enhanced Nuggets using Ficus geniculata: A Nutritional Approach.Plant
    Foods for Human Nutrition (Dordrecht, Netherlands), 77(2), 241–249. 10.1007/s11130-022-00967-235583708
    Follow Reference Mall P. K. Pramanik S. Srivastava S. Faiz M. Sriramulu S. Kumar
    M. N. (2023). FuzztNet-Based Modelling Smart Traffic System in Smart Cities Using
    Deep Learning Models. In Data-Driven Mathematical Modeling in Smart Cities. IGI
    Global. 10.4018/978-1-6684-6408-3.ch005 Follow Reference Novick K. A. Ficklin
    D. L. Baldocchi D. Davis K. J. Ghezzehei T. A. Konings A. G. MacBean N. Raoult
    N. Scott R. L. Shi Y. Sulman B. N. Wood J. D. (2022). Confronting the water potential
    information gap.Nature Geoscience, 15(3), 158–164. 10.1038/s41561-022-00909-235300262
    Follow Reference Patwa D. Bharat T. V. (2023). Influence of Hydraulic Response
    Time of Tensiometer in Hydraulic Characteristics Estimation for Riverbank Sand.Geotechnical
    and Geological Engineering, 41(1), 413–427. 10.1007/s10706-022-02283-7 Follow
    Reference Pramanik S. (2022). An Effective Secured Privacy-Protecting Data Aggregation
    Method in IoT. In Achieving Full Realization and Mitigating the Challenges of
    the Internet of Things. 10.4018/978-1-7998-9312-7.ch008 Reepu, K. S., Chaudhary,
    M. G., Gupta, K. G., Pramanik, S., & Gupta, A. (2023). Information Security and
    Privacy on IoT. In Handbook of Research in Advancements in AI and IoT Convergence
    Technologies. IGI Global. Follow Reference Samanta, D., Dutta, S., Galety, M.
    G., & Pramanik, S. (2021). A Novel Approach for Web Mining Taxonomy for High-Performance
    Computing. The 4th International Conference of Computer Science and Renewable
    Energies (ICCSRE''2021).10.1051/e3sconf/202129701073 Follow Reference Sinha M.
    Chacko E. Makhija P. Pramanik S. (2021). Energy Efficient Smart Cities with Green
    IoT. In ChakrabartyC. (Ed.), Green Technological Innovation for Sustainable Smart
    Societies: Post Pandemic Era. Springer. 10.1007/978-3-030-73295-0_16 Follow Reference
    Sweety, T. J., Rithika, Arun, T.R., Sajith, K., Jose, J., Reeha, K.R. (2023).
    CBCPW-Fed ADFD Shape On-Body Antenna for ISM Band and Sub-6 GHz 5G Applications.
    In Optical and Wireless Technologies. OWT 2021. Lecture Notes in Electrical Engineering
    (vol. 892). Springer. https://doi.org/10.1007/978-981-19-1645-8_36 Follow Reference
    Tauqeer H. M. Turan V. Iqbal M. (2022). Production of Safer Vegetables from Heavy
    Metals Contaminated Soils: The Current Situation, Concerns Associated with Human
    Health and Novel Management Strategies. In MalikJ. A. (Ed.), Advances in Bioremediation
    and Phytoremediation for Sustainable Soil Management. Springer. 10.1007/978-3-030-89984-4_19
    Follow Reference Taviti Naidu G. Ganesh K. V. B. Vidya Chellam V. Praveenkumar
    S. Dhabliya D. Pramanik S. Gupta A. (2023). Technological Innovation Driven by
    Big Data. In Advanced Bioinspiration Methods for Healthcare Standards, Policies,
    and Reform. IGI Global. 10.4018/978-1-6684-5656-9 Follow Reference Zhang H. Shukla
    M. K. Larson S. Rajendran A. M. Jiang S. (2022). Molecular dynamics study of anisotropic
    shock responses in oriented α-quartz single crystal.Journal of Materials Science,
    57(12), 6688–6705. 10.1007/s10853-022-07076-0 Request Access You do not own this
    content. Please login to recommend this title to your institution''s librarian
    or purchase it from the IGI Global bookstore. Username or email:   Password:   Log
    In   Forgot individual login password? Create individual account Research Tools
    Database Search | Help | User Guide | Advisory Board User Resources Librarians
    | Researchers | Authors Librarian Tools COUNTER Reports | Persistent URLs | MARC
    Records | Institution Holdings | Institution Settings Librarian Resources Training
    | Title Lists | Licensing and Consortium Information | Promotions Policies Terms
    and Conditions     Copyright © 1988-2024, IGI Global - All Rights Reserved"'
  inline_citation: '>'
  journal: Handbook of Research on AI-Equipped IoT Applications in High-Tech Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart agriculture using a soil monitoring system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 60 papers. The special focus in this conference
    is on Soft Computing and Signal Processing. The topics include: A Hybrid Approach
    on Lexical Indian Sign Language Recognition; defining the Convergence of Artificial
    Intelligence and Cyber Security with a Case Study of Email Spam Detection; determining
    the Attribute Priority Among the Maintenance and Support Phases in Software Development
    Phases Using Intuitionistic Fuzzy Analytical Hierarchy Process; Impact of COVID-19
    on Energy Generation in India; decentralized Payment Architecture for E-Commerce
    and Utility Transactions with Government Verified Identities; a Machine Learning-Based
    Approach for Enhancing Student Learning Experiences; book Genre Classification
    System Using Machine Learning Approach: A Survey; a New Method for Imbalanced
    Data Reduction Using Data Based Under Sampling; Resource-Based Prediction in Cloud
    Computing Using LSTM with Autoencoders; Arduino UNO-Based COVID Smart Parking
    System; low-Cost Smart Plant Irrigation Control System Using Temperature and Distance
    Sensors; a Novel Approach to Universal Egg Incubator Using Proteus Design Tool
    and Application of IoT; dynamic Resource Allocation Framework in Cloud Computing;
    Region-Wise COVID-19 Vaccination Distribution Modelling in Tamil Nadu Using Machine
    Learning; detection of Phishing Websites Using Machine Learning; detection of
    Phishing Website Using Intelligent Machine Learning Classifiers; computational
    Learning Model for Prediction of Parkinson’s Disease Using Machine Learning; eliminating
    Environmental Context for Fall Detection Based on Movement Traces; performance
    Analysis of Regression Models in Stock Price Prediction; review on the Image Encryption
    with Hyper-Chaotic Systems; Object Detection Using Mask R-CNN on a Custom Dataset
    of Tumbling Satellite; decentralized Blockchain-Based Infrastructure for Numerous
    IoT Setup; Sentiment Analysis Toward COVID-19 Vaccination Based on Twitter Posts.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Smart Innovation, Systems and Technologies
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 5th International Conference on Soft Computing and Signal Processing, ICSCSP
    2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 43 papers. The special focus in this conference
    is on ASOCA, AI-PA, FMCIoT, WESOACS. The topics include: SASH: Safe Autonomous
    Self-Healing; trusted Smart Irrigation System Based on Fuzzy IoT and Blockchain;
    smart Edge Service Update Scheduler: An Industrial Use Case; Energy-Aware Placement
    of Network Functions in Edge-Based Infrastructures with Open Source MANO and Kubernetes;
    people Counting in the Times of Covid-19; a Service-Oriented Middleware Enabling
    Decentralised Deployment in Mobile Multihop Networks; Towards Engineering AI Planning
    Functionalities as Services; data Product Metadata Management: An Industrial Perspective;
    image Data Augmentation and Convolutional Feature Map Visualizations in Computer
    Vision Applications; FUSPAQ: A Function Selection Platform to Adjust QoS in a
    FaaS Application; Specification-Driven Code Generation for Inter-parameter Dependencies
    in Web APIs; bizDevOps Support for Business Process Microservices-Based Applications;
    towards Real-Time Monitoring of Blockchain Networks Through a Low-Code Tool; data-Aware
    Application Placement and Management in the Cloud-IoT Continuum; towards a Context-Aware
    Framework for Internet of Things and Smart Everything; simulating IoT Systems
    from High-Level Abstraction Models for Quality of Service Assessment; internet
    of Things Semantic-Based Monitoring of Infrastructures Using a Microservices Architecture;
    on Balancing Flexibility and Compliance of Business Processes: Functional Constraints
    Modeling and Verification; change Recommendation in Business Processes; object-Centric
    Predictive Process Monitoring; board Miner: A Tool to Analyze the Use of Board-Based
    Collaborative Work Management Tools; a Tool for Business Processes Diagnostics;
    Node4Chain: Extending Node-RED Low-Code Tool for Monitoring Blockchain Networks;
    service-Oriented Integration of SuperTuxKart; Using Open API for the Development
    of Hybrid Classical-Quantum Services; quokka: A Service Ecosystem for Workflow-Based
    Execution of Variational Quantum Algorithms; SENSEI: Scraper for ENhanced AnalySis
    to Evaluate Illicit Trends; PRES3 : Private Record Linkage Using Services, Spark
    and Soundex; towards Peer-to-Peer Sharing of Wireless Energy Services; IoT System
    for Occupational Risks Prevention at a WWTP; Testing of RESTful Web APIs; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Computer Science (including subseries Lecture Notes in
    Artificial Intelligence and Lecture Notes in Bioinformatics)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Workshops on ASOCA, AI-PA, FMCIoT, WESOACS 2022, held in Conjunction with
    the 20th International Conference on Service-Oriented Computing, ICSOC 2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sakthivel S.
  - Vivekanandhan V.
  - Manikandan M.
  citation_count: '2'
  description: Irrigation plays a significant role in various agricultural cropping
    methods deployed in semiarid and arid regions where valuable water applications
    and managing are considered crucial concerns. Multiple factors such as weather,
    soil, water, and crop data need to be considered for irrigation maintenance in
    an efficient besides uniform manner from multifaceted and different information-based
    systems. A Multi-Agent System (MAS) has been proposed recently based on diverse
    agent subsystems with definite objectives for attaining global MAS objective and
    is deployed on Cloud Computing paradigm capable of gathering information from
    Wireless Sensor Networks (WSNs) positioned in rice, cotton, cassava crops for
    knowledge discovery and decision making. The radial basis function network has
    been used for irrigation prediction. However, in recent work, the security of
    data has not focused on where intruder involvement might corrupt the data at the
    time of data transferring to the cloud, which would affect the accuracy of decision
    making. To handle the above mentioned issues, an efficient method for irrigation
    prediction is used in this work. The factors considered for decision making are
    soil moisture, temperature, plant height, root depth. The above-mentioned data
    will be gathered from the sensors that are attached to the crop field. Sensed
    data will be forwarded to the local server, where data encryption will be performed
    using Adaptive Elliptic Curve Cryptography (AECC). After the encryption process,
    the data will be forwarded to the cloud. Then the data stored in the cloud will
    be decrypted key before being given to the deci-sion-making module. Finally, the
    uniform distribution-based fuzzy neural network is formulated based on the received
    data information in the decision-making mod-ule. The final decision regarding
    the level of water required for crop fields would be taken. Based on this outcome,
    the water volve opening duration and the level of fertilizers required will be
    considered. Experimental results demonstrate the effectiveness of the proposed
    model for the United States Geological Survey (USGS) database in terms of precision,
    accuracy, recall, and packet delivery ratio.
  doi: 10.32604/iasc.2023.026289
  full_citation: '>'
  full_text: '>

    "Submit LOGIN REGISTER Home Academic Journals Books & Monographs Conferences Language
    Service News & Announcements About Home/ Journals/ IASC/ Vol.35, No.1, 2023/ 10.32604/iasc.2023.026289
    Submit a Paper Propose a Special lssue Table of Content Abstract Introduction
    Literature Review Proposed Methodology Results and Discussion Conclusion and Future
    Work References Open Access ARTICLE Automated Irrigation System Using Improved
    Fuzzy Neural Network in Wireless Sensor Networks S. Sakthivel1, V. Vivekanandhan2,*,
    M. Manikandan2 1 Department of Computer Science and Engineering, Sona College
    of Technology, Salem 636005, Tamilnadu, India 2 Department of Computer Science
    and Engineering, Adhiyamaan College of Engineering, Hosur 635109, Tamilnadu, India
    * Corresponding Author: V. Vivekanandhan. Email: Intelligent Automation & Soft
    Computing 2023, 35(1), 853-866. https://doi.org/10.32604/iasc.2023.026289 Received
    21 December 2021; Accepted 19 February 2022; Issue published 06 June 2022 View
    Full Text Download PDF Abstract Irrigation plays a significant role in various
    agricultural cropping methods deployed in semiarid and arid regions where valuable
    water applications and managing are considered crucial concerns. Multiple factors
    such as weather, soil, water, and crop data need to be considered for irrigation
    maintenance in an efficient besides uniform manner from multifaceted and different
    information-based systems. A Multi-Agent System (MAS) has been proposed recently
    based on diverse agent subsystems with definite objectives for attaining global
    MAS objective and is deployed on Cloud Computing paradigm capable of gathering
    information from Wireless Sensor Networks (WSNs) positioned in rice, cotton, cassava
    crops for knowledge discovery and decision making. The radial basis function network
    has been used for irrigation prediction. However, in recent work, the security
    of data has not focused on where intruder involvement might corrupt the data at
    the time of data transferring to the cloud, which would affect the accuracy of
    decision making. To handle the above mentioned issues, an efficient method for
    irrigation prediction is used in this work. The factors considered for decision
    making are soil moisture, temperature, plant height, root depth. The above-mentioned
    data will be gathered from the sensors that are attached to the crop field. Sensed
    data will be forwarded to the local server, where data encryption will be performed
    using Adaptive Elliptic Curve Cryptography (AECC). After the encryption process,
    the data will be forwarded to the cloud. Then the data stored in the cloud will
    be decrypted key before being given to the decision-making module. Finally, the
    uniform distribution-based fuzzy neural network is formulated based on the received
    data information in the decision-making module. The final decision regarding the
    level of water required for crop fields would be taken. Based on this outcome,
    the water volve opening duration and the level of fertilizers required will be
    considered. Experimental results demonstrate the effectiveness of the proposed
    model for the United States Geological Survey (USGS) database in terms of precision,
    accuracy, recall, and packet delivery ratio. Keywords Irrigation; multi-agent
    system; precision irrigation; accuracy; elliptic curve cryptography; encryption;
    wireless sensor networks; fertilizers Cite This Article S. Sakthivel, V. Vivekanandhan
    and M. Manikandan, \"Automated irrigation system using improved fuzzy neural network
    in wireless sensor networks,\" Intelligent Automation & Soft Computing, vol. 35,
    no.1, pp. 853–866, 2023. BibTex EndNote RIS    This work is licensed under a Creative
    Commons Attribution 4.0 International License , which permits unrestricted use,
    distribution, and reproduction in any medium, provided the original work is properly
    cited. We recommend DeepQ Based Automated Irrigation Systems Using Deep Belief
    WSN E. Gokulakannan, Intelligent Automation & Soft Computing, 2022 An Energy-Efficient
    Protocol Using an Objective Function & Random Search with Jumps for WSN Mohammed
    Kaddi et al., CMC-Computers, Materials & Continua Chaotic Krill Herd with Fuzzy
    Based Routing Protocol for Wireless Networks Dutta Ashit et al., Intelligent Automation
    & Soft Computing, 2022 Greenhouse; wireless sensor network; deep learning; Internet
    of Things; strategic crops monitoring; smart irrigation CMC-Computers, Materials
    & Continua An Interpretable Artificial Intelligence Based Smart Agriculture System
    Fariza Sabrina et al., CMC-Computers, Materials & Continua, 2022 Farmers can save
    water with wireless technologies, but there are challenges, like transmitting
    data through mud by Abdul Salam et al., TechXplore.com, 2022 Design of precision
    irrigation system based on wireless sensor network and fuzzy control Zhang Wei
    et al., Transactions of the Chinese Society of Agricultural Engineering, 2009
    Design of the networked precision irrigation system for paddy field crops in intelligent
    agriculture Lu Xutao et al., Transactions of the Chinese Society of Agricultural
    Engineering, 2021 Two approaches for optimizing water productivity Phys.org, 2013
    Crops watering by phone Phys.org, 2013 Powered by Downloads Citation Tools 1328
    View 632 Download 0 Like 2 Related articles Vermicompost and water stress effects
    on dry beans (Phaseolus vulgaris L.): productive parameters and water relations
    Aguilar-Benítez G, CB Peña-Valdivia,... Physiological traits during ripening showing
    the appropriate timing for harvest to improve the organoleptic quality of “Flavorcrest”
    peach (Prunus persica... Altube HA, MG Ontivero Urquiza,... Nocturnal accumulation
    of titratable acidity in Tillandsia makoyana (Bromeliaceae), epiphytic bromeliad
    of the tropical dry forest Díaz-Álvarez EA, AP Rojas-Cortés,... Evapotranspiration
    and energy balance measurements over a soybean field in the semiarid sowthwestern
    region of Buenos Aires province (Argentina) Cargnel MD, AL Orchansky, RE Brevedan,...
    Genetic analysis for quantitative traits in bread wheat exposed to irrigated and
    drought stress conditions Ataei R, M Gholamhoseini, M Kamalizadeh"'
  inline_citation: '>'
  journal: Intelligent Automation and Soft Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Automated Irrigation System Using Improved Fuzzy Neural Network in Wireless
    Sensor Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Yang Y.
  - Gu T.
  - Wu D.
  - Long A.
  - Qiu J.
  - Liu H.
  citation_count: '1'
  description: Currently, statistical investigation is the main approach to derive
    irrigated area, with limited timeliness and accuracy, while the information on
    actual irrigated area alongside its spatial distribution and dynamic changes are
    urgently demanded in water management within the irrigated area. In this regard,
    an optical and microwavebased method is proposed for detecting irrigation signal
    and extracting actual irrigated area. First, simulations were performed using
    water cloud model combined with insitu soil moisture measurements to quantify
    the changes in backscatter coefficients due to irrigation events. Then, using
    backscatter coefficients from Sentinel-1 with high revisit frequency, a method
    based on time-series difference and local threshold is proposed, and conducted
    for extraction of irrigated area in Ciyou irrigation area of Lingshou County,
    North China Plain. The results show that irrigation events in spring wheat plots
    can lead to fluctuation of radar backscatter coefficients in C band by more than
    1 dB, thus irrigation signals can be detected by radar satellites with an absolute
    accuracy superior to 1 dB. Timeseries of radar backscatter coefficients analysis
    indicates that due to irrigation events, significant increase of C-band radar
    backscatter coefficients will be followed by obvious decrease. Unlike precipitation
    event, local features are prominent in irrigation-induced radar backscatter coefficients
    variation. Through field survey sample validation, the proposed method showed
    overall accuracy of 76.6% in extracting actual irrigated area. The areas of first
    canal irrigation during the wheat seedling establishment period and during elongation
    period are about 92,000 and 106,400 acres respectively. In addition, due to the
    obvious time difference between well irrigation area and canal irrigation area,
    the irrigation area of different water sources can be detected based on radar
    remote sensing, and the well irrigation area in the study area is about 39,000
    acres. The proposed method can provide technical support for applications such
    as regional irrigation area surveys and basin water resource management.
  doi: 10.13243/j.cnki.slxb.20211104
  full_citation: '>'
  full_text: '>

    "多重解析地址选择页面 题名：基于光学和雷达遥感信息的灌溉信号分析及灌溉面积提取方法研究—以华北平原灵寿县磁右灌区为例 作者：杨永民;顾涛;吴迪;龙爱华;邱建秀;刘宏鑫;
    来源： 出版机构：同方知网（北京）技术有限公司 出版年: DOI码：10.13243/j.cnki.slxb.20211104 注册时间：2022-07-29
    13:37:49 以下是您获得的URL地址： https://link.cnki.net/doi/10.13243/j.cnki.slxb.20211104(境内)
    https://link.oversea.cnki.net/doi/10.13243/j.cnki.slxb.20211104(境外)"'
  inline_citation: '>'
  journal: Shuili Xuebao/Journal of Hydraulic Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Irrigation signal analysis and irrigated area extraction based on optical
    and radar remote sensing:A case study of Ciyou irrigation area, Lingshou County,
    North China Plain
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Loukatos D.
  - Lygkoura K.A.
  - Maraveas C.
  - Arvanitis K.G.
  citation_count: '11'
  description: The digital transformation of agriculture is a promising necessity
    for tackling the increasing nutritional needs of the population on Earth and the
    degradation of natural resources. Focusing on the “hot” area of natural resource
    preservation, the recent appearance of more efficient and cheaper microcontrollers,
    the advances in low-power and long-range radios, and the availability of accompanying
    software tools are exploited in order to monitor water consumption and to detect
    and report misuse events, with reduced power and network bandwidth requirements.
    Quite often, large quantities of water are wasted for a variety of reasons; from
    broken irrigation pipes to people’s negligence. To tackle this problem, the necessary
    design and implementation details are highlighted for an experimental water usage
    reporting system that exhibits Edge Artificial Intelligence (Edge AI) functionality.
    By combining modern technologies, such as Internet of Things (IoT), Edge Computing
    (EC) and Machine Learning (ML), the deployment of a compact automated detection
    mechanism can be easier than before, while the information that has to travel
    from the edges of the network to the cloud and thus the corresponding energy footprint
    are drastically reduced. In parallel, characteristic implementation challenges
    are discussed, and a first set of corresponding evaluation results is presented.
  doi: 10.3390/s22134874
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 22 Issue 13 10.3390/s22134874 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Sigfredo Fuentes
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 2645 Citations 11 Table of Contents Abstract Introduction Background
    and Design Overview Implementation Details Results and Evaluation Conclusions
    Author Contributions Funding Institutional Review Board Statement Informed Consent
    Statement Data Availability Statement Acknowledgments Conflicts of Interest References
    Altmetric share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle Enriching IoT Modules with Edge AI Functionality to
    Detect Water Misuse Events in a Decentralized Manner by Dimitrios Loukatos *,
    Kalliopi-Agryri Lygkoura , Chrysanthos Maraveas and Konstantinos G. Arvanitis
    Department of Natural Resources Management and Agricultural Engineering, Agricultural
    University of Athens, 75 Iera Odos Str., Botanikos, 11855 Athens, Greece * Author
    to whom correspondence should be addressed. Sensors 2022, 22(13), 4874; https://doi.org/10.3390/s22134874
    Submission received: 10 May 2022 / Revised: 22 June 2022 / Accepted: 27 June 2022
    / Published: 28 June 2022 (This article belongs to the Special Issue APRAS-AI-Empowered
    Self-Adaptive Federation of Platforms for Efficient Economic Collaboration in
    Rural Areas) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract
    The digital transformation of agriculture is a promising necessity for tackling
    the increasing nutritional needs of the population on Earth and the degradation
    of natural resources. Focusing on the “hot” area of natural resource preservation,
    the recent appearance of more efficient and cheaper microcontrollers, the advances
    in low-power and long-range radios, and the availability of accompanying software
    tools are exploited in order to monitor water consumption and to detect and report
    misuse events, with reduced power and network bandwidth requirements. Quite often,
    large quantities of water are wasted for a variety of reasons; from broken irrigation
    pipes to people’s negligence. To tackle this problem, the necessary design and
    implementation details are highlighted for an experimental water usage reporting
    system that exhibits Edge Artificial Intelligence (Edge AI) functionality. By
    combining modern technologies, such as Internet of Things (IoT), Edge Computing
    (EC) and Machine Learning (ML), the deployment of a compact automated detection
    mechanism can be easier than before, while the information that has to travel
    from the edges of the network to the cloud and thus the corresponding energy footprint
    are drastically reduced. In parallel, characteristic implementation challenges
    are discussed, and a first set of corresponding evaluation results is presented.
    Keywords: water resource preservation; Internet of Things; Edge Computing; Machine
    Learning; Edge AI; Smart Sensing; Precision Agriculture; Arduino; Raspberry; Edge
    Impulse 1. Introduction The degradation of natural resources in quality and quantity
    has a direct impact on the global food production numbers. According to FAO [1],
    the agricultural sector should increase its productivity by 60 per cent to counterbalance
    the depletion of natural resources and the population growth on Earth. The utilization
    of innovative technologies seems to be a key factor for addressing these issues.
    In this regard, toward a successful digital transformation of agriculture, it
    is promising that the rapid development of the electronics industry has managed
    to increase the production numbers and the quality of several components, such
    as microcontroller units (MCUs), single board computers, sensors, and radio transceivers,
    at very affordable cost levels. More specifically, the recently appeared new generation
    of microcontrollers, apart from orchestrating typical sensing and acting tasks,
    can support composite operations at reduced execution times, as they have faster
    and more efficient processors and larger memory. In parallel, the advances in
    radio technology deliver low-power modules capable of long-range communication
    at reduced energy levels. These high-end components are not only widely available
    but are also accompanied by very fluent documentation and software tools that
    facilitate their programming, leading to improved implementations. These characteristics
    can lead to a more efficient approach regarding serious problems, such as the
    preservation of natural resources. Nevertheless, any fusion of software and hardware
    elements has first to address potential implementation bottlenecks, prior to the
    delivery of any effective solution. Indeed, as the world will be populated by
    billions of connected devices [2] of limited resources, interacting with the surrounding
    environment and users, the bottleneck will be the increased amount of data traffic
    that could congest the network and generate several latency, reliability and privacy
    problems [3,4]. The deployment of enhanced processing features on Internet of
    Things (IoT) devices, for example Machine Learning (ML), reduces the network congestion
    by allowing computations to be performed close to the data sources, and thus it
    preserves privacy in uploading data, and reduces power consumption for wireless
    transmission to gateways or cloud servers [4]. In this regard, one of the options
    is to run the intelligent algorithms locally on the end devices (e.g., on the
    sensor nodes hardware). If the tasks are performed by smaller devices, less power
    will be required to keep them running and more flexible energy management will
    be applied, compared with the typical central system case. Small devices can operate
    on batteries for months or even for years, while a diverse set of energy harvesting
    options is offered for elongated operation duration. Thankfully, the recent technological
    advances delivered end devices with improved hardware characteristics (i.e., processing
    capabilities and memory size), thus making it possible for these devices to execute
    machine learning algorithms in an efficient and cost-effective manner. Not only
    do the microcontrollers become better performing, but the application of machine
    learning techniques on them, such as the artificial neural networks (ANNs), have
    also become more efficient, due to the improvement of the corresponding software
    platforms and tools. In greater detail, the execution/utilization phase of an
    ANN requires less computational power than its training phase. In fact, during
    the training, a large amount of data is used to calculate the weights and biases
    of the network, and thus a quite powerful machine is needed. Once the learning
    has been completed and the network has been trained, the model can be used for
    inference actions with lower computational requirements [4]. Consequently, the
    AI algorithms can more likely be run on devices with less resources, as microcontrollers,
    allowing local data processing. Nevertheless, as the trained models may still
    remain comparatively heavy for the in situ MCUs, tools such as TensorFlow Lite
    [5], in the context of TinyML [6], make possible the creation of trimmed-down
    versions that can be fit safely in the improved generation of MCUs, but still
    of limited computational and memory capacity. Finally, the improved transmission
    range characteristics of the low power wide area network (LPWAN) technologies,
    such as LoRa, perfectly fit to the reduced network traffic profiles [7]. The balanced
    utilization of the discussed technological innovations can deliver applications
    that can be very helpful for solving real-world problems, e.g., the preservation
    of water resources. Water is one of the most critical resources on the Earth as,
    apart from humans, both plants and animals depend on it, while many processes
    from irrigation to washing or food preparation, cannot be accomplished without
    it. Despite its necessity, large amounts of water are being wasted due to a variety
    of reasons, from water pipe or valve failures to human inattention. It is noteworthy
    that according to the World Bank [8], the non-revenue water (NRW) level in developing
    countries ranges from 40% to 50% of the water pumped into the distribution systems.
    Furthermore, 80 per cent of wastewater in the world flows back into the ecosystem
    without being treated or reused, and 70 per cent of the world’s natural wetland
    extent has been lost [9]. Sustainable Development Goal 6 (SDG 6) [9] on water
    and sanitation, adopted by United Nations (UN) Member States as part of the 2030
    Agenda for Sustainable Development [10], highlights in practice the importance
    of the proper water resource management, from both quantitative and qualitative
    perspective. As agriculture remains the largest consumer of water globally, the
    significance of water for keeping the food produce to satisfactory levels is crucial.
    Targeted at the preservation of water resources with emphasis on their impact
    on agriculture, in this work, the pilot implementation of a smart water usage
    alerting system is presented. The whole approach exploits the findings of the
    approach described in [11] toward the delivery of a more compact and efficient
    solution with artificial intelligence (AI) capabilities. The latter task is addressed
    by utilizing recently-appeared, cost effective but powerful microcontroller boards
    and software, for supporting the in situ machine learning operations, and a low-power
    and long-range radio network technology based on the LoRa protocol. The combination
    of these elements results in reduced power consumption and in less network traffic
    and processing load for the central entities of the network, as the water usage
    classification decisions are taken locally, at the edges of the network, and only
    notification messages have to travel toward the end user. Response times are also
    reduced, while privacy is better preserved. The water usage episodes that the
    smart system had been trained to intercept were of comparatively short duration,
    but the methods being used and the accuracy being achieved make the proposed arrangements,
    only with minor modifications, to be applicable for supporting a wide variety
    of water preservation/misuse detection scenarios. Apart from this introductory
    section, in order to better highlight the main objectives of this research, the
    rest of this paper is organized as follows: Section 2 highlights the motives and
    the challenges behind this work and the design directions being necessary. Section
    3 provides interesting implementation details. Section 4 is dedicated to evaluation
    results and discussion. Finally, Section 5 contains important concluding remarks.
    2. Background and Design Overview 2.1. Motives and Challenges for Agriculture
    Internet of things (IoT) is an emerging technology that includes devices connected
    to the Internet equipped with sensors, transducers, radio transceivers, and actuators
    comprising a functioning of the whole that gathers, interchanges and responds
    to information [12]. In this regard, the IoT makes agricultural automation more
    efficient, and thus fosters production [13]. Recent works emphasize the contribution
    of the IoT technologies in critical agricultural operations [14,15], including
    precision farming, livestock, and greenhouses, with the irrigation and water management
    activities to be of among the open issues of growing interest [16]. Machine Learning
    (ML) is a very welcome companion for any IoT solution and provides multiple solutions
    to problems that were among the most difficult to be tacked without, some years
    ago. The exploitation of the ML potential by agriculture is a necessity that follows
    several directions [17], even beyond Agriculture 4.0 [18]. The most significant
    advantage of machine learning techniques is that they can provide generally applicable
    solutions, with minor human intervention and in a way that does not require meticulous
    a priori knowledge of the idiosyncracies of the system the solution is being tailored
    for. This makes satisfactorily-working solutions to be generated easily and quickly
    by people with less expertise in a specific area. Apparently, the role of the
    “experts” of the sector cannot be overlooked, but their involvement into the whole
    process remains consulting and supervising, as they do not have to inject “magic”
    threshold values into conventional and difficult to maintain blocks of code. The
    Edge Computing (EC) is a newcomer to the equation of tackling modern problems
    more efficiently using IoT and ML. Indeed, a traditional IoT solution (a few years
    ago) typically required a large amount of real-time sensor data to be destined
    to a central computer entity in the cloud which in its turn had to process this
    increased amount of data, to take the necessary decisions and probably had to
    deliver the corresponding responses back to the appropriate nodes. This organization
    had to tackle high communication and processing loads, while any potential failure
    of the central entity would result in total system collapse. Furthermore, data
    privacy concerns were also very reasonable, as third-party communication, storage
    and/or decision entities had to get involved in the whole process. On the contrary,
    by increasing the intelligence at the edges of the network (i.e., on or nearby
    the sensor nodes), decisions and any potential action are addressed locally, in
    a faster, cheaper and more private way, thus leaving considerably less (or none
    at all) work for the central entity [4,19]. Typically, only sporadic metadata
    information updates are necessary toward the central entity, mainly for supervision
    purposes. The enrichment of IoT with Edge Computing and Machine Learning functionality
    is often referred as Edge Artificial Intelligence (Edge AI) and tries to exploit
    the advantages of these technologies, for serving a wide set of applications in
    a better manner, with the agricultural sector not to be an exception [20]. In
    this regard, the approach being presented is trying to highlight how these elements
    of innovation can be combined to ease the intense problem of water resource waste.
    Demographics continue changing and unsustainable economic practices are affecting
    the quantity and quality of the water being available, thus making it an increasingly
    scarce and expensive resource [9]. Inevitably, water is at the core of sustainable
    development and is closely linked to poverty reduction and climate change. As
    agriculture remains the largest consumer of water globally and irrigation is responsible
    for 70% of its use worldwide, water is the most valuable resource for keeping
    the quality and the quantity of plant and animal production to satisfactory levels.
    The way water is utilized for both urban and rural use directly impacts its future
    availability and thus, emphasis must be placed on water management and irrigation
    efficiency and make sure clean water can be provided for all people. Apart from
    the more conventional bare IoT solutions for water resource management and utilization,
    mainly with focus on agriculture, there is a growing interest for the exploitation
    of ML in order to achieve better results [21,22,23,24]. The fusion with Edge AI
    functionality has yet a lot to offer. The potential exploitation of modern microcontrollers
    for water usage related applications with embedded ML functionality has already
    started delivering interesting outcomes [25], in neighboring scientific areas,
    with the selection of devices and functions for communication between sensor appliances
    to remain a key challenge [26] for success. On the other hand, recent studies
    show that farmers are still facing concerns for adopting the IoT technologies
    in their everyday activities. This skepticism is attributed to a variety of reasons,
    from privacy concerns due the cloud-based nature of many solutions to fears for
    job cuts and for high purchase and maintenance costs [27,28], while it is really
    hard to find experts having the necessary set of talents at a satisfactory degree
    and being available for fluent cooperation, at the same time. Furthermore, while
    the machine learning methods seem to provide accurate and less expensive solutions
    [23] for water misuse detection events such as leaks, there is enough room for
    further improvements. Indeed, due to the very recent character of the innovative
    hardware and software components supporting in situ (i.e., on-device node) machine
    learning techniques, in the agricultural sector for water utilization report/classification
    purposes, few works combine these assets toward the delivery of a cost effective
    and efficient solution with Edge AI characteristics. There are research contributions
    that exploit IoT infrastructures for water monitoring purposes, but without incorporating
    AI functionality [29] or there are contributions that exploit machine learning
    methods that either require central processing of the data being collected [30,31]
    or that they are not optimized to be executed by the new low-cost and high-efficiency
    microcontrollers [32]. These remarks are in line with recent review findings in
    agriculture [24] and reflect a problem already specified in the wider IoT area
    [4,33]. Trying to bridge this gap, the proposed solution indicates that, for water
    usage characterization/report delivery, a quite accurate model can now be trained,
    using flexible tools, be executed on the end device and communicate its classification
    reports using almost negligible power and bandwidth resources. Combining decentralized
    intelligence and low-cost design, provision is made for reduced to null amount
    of information to travel toward the cloud. These arrangements are addressing data
    privacy and reliability issues as well. 2.2. Functionality Overview and Component
    Selection This section reports briefly on the components being selected as well
    as on their role, in order to develop a system capable of intercepting and characterizing
    water usage events. This system includes sensor nodes, placed in situ, at the
    edge points where the water is actually being used, as well as the suitable sink/gateway
    node(s) able to collect the reports delivered by the aforementioned peripheral
    nodes. The “key” point of the approach being presented is that the edge (sensor)
    nodes, apart from collecting time series corresponding to events containing the
    instantaneous water consumption data, are “smart” enough to classify these events
    into categories of proper or improper use of water, without assistance from external
    entities. Thus, via this “filtering”, only the classification reports have to
    travel toward the gateway and the cloud (if the latter is necessary). The analytical
    (low quality and high volume) information of the instantaneous water consumption
    might flood the network infrastructures and exhaust the batteries of the edge
    nodes. The user can easily monitor the operation of the whole system via their
    portable equipment (e.g., their tablet, smart phone, or laptop) using conventional
    connectivity options (e.g., Wi-Fi or 3G/4G), either locally or remotely (e.g.,
    via a virtual private networking (VPN) service). The proposed architecture is
    depicted in Figure 1. Figure 1. Functionality overview of the proposed water usage
    event characterization solution. The proposed implementation exploited the experience
    gained during the activities described in [11] with the excellent Arduino Nano
    33 BLE Sense [34] microcontroller that offers plenty of sensors and connectivity
    options, but utilized an even newer generation of cheaper microcontroller modules
    that were able to host and to execute composite machine learning algorithms, at
    the same price levels with the “traditional” units. For this reason, the Raspberry
    Pi Pico [35] microcontroller board (that costs about 6€) was selected, which,
    apart from its very attractive price, has fluent processing power and memory (due
    to its new RP2040 chip). More specifically, the Raspberry Pi Pico unit, grace
    at its new RP2040 chip, has fluent processing power and memory, that allows for
    larger and faster program execution compared to the typical Arduino Uno [36] standard,
    as it exhibits 64 times more flash memory (i.e., program memory), 128 times more
    random access memory (RAM) and a much faster dual-core processor. Consequently,
    the Raspberry Pi Pico board was able to support, apart from the basic water consumption
    metering process, the necessary machine learning functionality to invoke the corresponding
    water usage alert message generation. For the final deployment, the absence of
    a radio interface on the Raspberry Pi Pico unit was counterbalanced by the adoption
    of a cost effective microcontroller board, running at 8 MHz and equipped with
    a LoRa radio, namely a LoRa32u4 unit [37]. For programming both systems, the preferred
    option was the well-supported Arduino IDE [38] environment. During the implementation
    and testing stages, an ESP8266 based module [39], namely an ESP-01 unit, offering
    Wi-Fi connectivity, was utilized. The water flow meter device is a Hall-effect
    counter sensor (YF-S201 [40] model), which can detect the flow changes as the
    water passes through it and the rotor rolls. Furthermore, the MIT App Inventor
    cloud-based programming environment [41] was selected for the easy creation of
    a mobile application for inspecting the water usage activity, via the smart phone/tablet
    device of the user. To add machine learning functionality, it was necessary to
    prepare and incorporate a trained artificial neural network (ANN) model into the
    software running on the Raspberry Pi Pico. An artificial neural network is based
    on the operation of neurons in the human brain. This structure has one input layer,
    one or more hidden layers, being interconnected, and an output layer for delivering
    the results. A very simple and efficient manner to prepare (i.e., to train and
    to extract/compile) a suitable ANN model was the Edge Impulse [42] cloud environment.
    The latter processing environment incorporates the functionality of the TensorFlow
    Lite engine for training neural networks. More specifically, it is equipped with
    fluent graphical interface and network connectivity options for importing sensor
    data, designing the ANN model, applying assistive processing blocks, for creating,
    testing and deploying the final version of it. Finally, the coefficients describing
    the ANN are stored in the memory of the Raspberry Pi Pico microcontroller, and
    thus the AI algorithm can be executed on a device with comparatively low but enough
    capacity, in terms of processing power and RAM. The Edge Impulse platform, from
    February of 2022, provides full support from the Raspberry Pi Pico board. The
    gateway node, gathers the classification decision information from the peripheral
    (edge) sensor nodes, stores and makes it available for the end device (e.g., smart
    phone, tablet or laptop) of the user, via common network services installed on
    it, or posts the information to the cloud, for better visualization and post-processing.
    Details referred to the latter choice are beyond the scope of this research work.
    3. Implementation Details In accordance with the design and functionality directions
    provided in Section 2.2, Section 3 is dedicated in presenting characteristic details
    of the implementation process. The analytic steps being followed for the training
    are illustrated in Figure 2. Figure 2. The analytic steps being necessary for
    the training of the proposed water usage event characterization solution. More
    specifically, the basic water flow sensing unit connection and programming arrangements
    are highlighted, in order to gather efficient data for training the ANN model
    (step 1), and thus, to add machine learning capabilities to the whole system.
    The details for this training are also explained (steps 2 and 3), as well as the
    incorporation of the trained ANN model into the microcontroller of the flow-metering
    system (step 4) for enhancing its functionality. In parallel, the corresponding
    network node(s) arrangements are discussed, as well as the characteristics of
    a pairing end-user mobile application, for the delivery of a fluently working
    solution. 3.1. Initial Sensor Node Preparation The Raspberry Pi Pico is a 3.3
    V level unit, for this reason, the flow sensor was connected to its 3.3 V supply
    pin, in order to generate 3.3 V logic compatible pulse signals to its output.
    The 3.3 V level was adequate for the operation of the specific flow metering device
    being selected. Furthermore, the output of the latter sensor was connected with
    an interrupt (input) digital pin of the microcontroller, and the ground pins of
    both components were also wired together. The sensor was connected to a testing
    tap via a pipe, and thus, it could be exposed to a variety of water consumption
    scenarios potentially being invoked by human, according to empirical assumptions.
    The Arduino IDE environment was customized properly by downloading and installing
    the necessary libraries corresponding to the Raspberry Pi Pico, according to the
    instructions of the its official page, for facilitating the programming process
    of the microcontroller, via a computer through a USB port connection. The pulses
    that the flow sensor was generating correspond to the rotations of its blades
    and thus to the water flow passing through it. More specifically, according to
    the basic algorithm, as the flow sensor signal generated a pulse signal any time
    2.22 mL water quantity, approximately, passed through it, the Raspberry Pi Pico
    intercepted these pulses as interrupt triggers to be counted and, in turn, calculated
    an one-second average value corresponding to the water flow (in mL). The sequence
    of these flow values was output to the serial port of the microcontroller. After
    compiling the program (sketch) and uploading it to the Raspberry Pi Pico board,
    the sequence of the flow measurements was acquired via the USB cable. The latter
    measurements were fed into the machine learning platform, in order to train the
    suitable ANN model, as the Edge Impulse environment offers options for automated
    uploading of the values being measured. 3.2. Training the Neural Network The corresponding
    ANN model to be generated had to be simple and lightweight enough for the microcontroller’s
    potential but still precise enough. In this regard, the system was trained to
    recognize three characteristic kinds of water utilization profiles: the Normal
    Use or NU, Water Leak or WL and Water Waste or WW. The proper training of an ANN
    requires data series corresponding to each of these categories to be collected
    and to be uploaded to the Edge Impulse engine. The total data length was 5 h 55
    min 47 s (148 files) for all three cases. According to Edge Impulse platform requirements,
    the duration of the data length had to be approximately the same for all categories,
    in order for the final model to be more accurate. Nevertheless, the number of
    profiles for each case may differ (NU: 69, WL: 44, WW: 44 profiles). During the
    profile collection process, the lowest flow value that the flow sensor could record
    was about 10–15 mL/s, while the maximum flow being recorded was in the range between
    250 and 280 mL/s. The network was trained using empirical data based on human
    observations for classifying samples (water usage episodes) into categories. In
    general, NU profiles were created so as to contain low to moderate flow values
    and having duration below 180 s, making the training pattern hypothesis that a
    non-WL water usage scenario would last for 3 min at maximum. Similarly, it was
    assumed that WL profiles exhibited continuous flow duration of more than 180 s
    and that most WW profiles had flow consumption over 160 mL/s and duration of more
    than 160 s, as it would be more likable for the classification experiment, during
    the episodes to use water for shorter time and at lower flow rate. Some typical
    profiles for each category are given in Figure 3, where the water flow was measured
    in ml/s and the time was measured in seconds (s). For each category, there is
    a diversification among the profiles being recorded and fed to the training system.
    This diversification results in increased accuracy under real-world conditions.
    Figure 3. (a,b) Normal Use profiles; (c,d) Water Leak profiles; (e,f) Water Waste
    profiles. In the next stage, the water flow data (raw data) were uploaded to the
    Edge Impulse cloud platform, via the Data Acquisition menu category, and were
    split into training and testing data, automatically, while the data labelling
    was performed manually. For training of the ANN model, the window size was set
    at 200,000 ms (i.e., 200 s), according to the profiles that were fed into the
    training system and by taking into consideration the maximum time that a person
    might use the tap. Similarly, the window increase was set at 1000 ms (i.e., at
    1 s) and the frequency at 1 Hz (i.e., for 1 sps sampling rate). Furthermore, “Raw
    Data” was selected as the preferred processing block and “Classification (Keras)”
    as the ANN learning block. The option “Raw Data” means that no additional prepossessing
    was made (e.g., a spectral characteristics extraction) before using the original
    data for the training process. This option does not reduce the number of features
    to be fed to the input layer of the network, but also preserves as many characteristics
    of the initial data as possible and, as it is explained right below, it fits easily
    in the microcontroller being selected. Furthermore, the number of training cycles
    was set to the moderate value of 50, to avoid overfitting, and the learning rate
    at 0.0005, via the NN Classifier configuration section, as the Edge Impulse suggests.
    The final neural network structure has an input layer with 200 features (window
    size), two hidden layers, with the first one to have 20 neurons and the second
    one 10 neurons, and an output layer with 3 classes (NU, WL, WW). This architecture
    for the NN provided an optimal combination between performance and computer resource
    allocation (i.e., model accuracy versus time needed for a decision to be made
    and memory size needed for hosting the program in the flash and for executing
    it in RAM). For the specific model, in the quantized version, the RAM usage was
    1.9 KB and the flash memory usage was 22.5 KB, values that are far below the capacity
    limit of the Raspberry Pi Pico unit. It must be noted though that during the actual
    operation of the microcontroller, more memory will be needed as along with the
    NN model coexist several variables and code parts dedicated to other tasks. The
    Edge Impulse platform allows for easy experimentation with various candidate settings
    and for saving the model with the best performance after the end of the training
    process. Finally, there is the option to download the model from the Edge Impulse
    cloud platform, via the “Deployment” section of Edge Impulse menu category, as
    code that includes library and sketches to be compiled and uploaded to the microcontroller
    via the Arduino IDE environment. 3.3. Sensor Node Software Enhancement As explained
    in Section 3.2, the code generated by the Edge Impulse platform, in the form of
    a generic Arduino library, provides customizable examples (sketches) for the Arduino
    environment, with the Raspberry Pi Pico board to be among the models being supported,
    and thus, being compatible with the generated model parameters. The selection
    of the “Arduino library” option (instead of the tailored firmware output one)
    provides freedom to combine the machine learning engine with further algorithmic
    behaviors being necessary to be executed by the hosting microcontroller. In this
    regard, the final software running on the microcontroller had to be updated so
    as to be able to perform (almost simultaneously) some simple but sharp calculations/tasks
    of different time granularity: Intercept the interrupt signals corresponding to
    the rotor roll pulses of the water flow sensor module; Calculate the instantaneous
    water consumption, at a fixed and specific rate, typically 1 or 2 times per second,
    update the aggregate metrics, and trigger the classification process every time
    the predefined number of samples (i.e., 200) was gathered; Deliver system status
    data and water usage reports via USB to the hosting computer, or wirelessly to
    a gateway node or to the operator’s smart phone/tablet; As expected, the above
    tasks had to be performed without blocking or delaying each other, constraints
    that required meticulous programming (e.g., using timer events) to achieve fluent
    operation. Optimally, the delivery of information toward the gateway had to take
    place once, after the end of each classification process utilizing the 200 consecutive
    samples. Nevertheless, for debugging or training purposes, all 200 values had
    to be transmitted toward the gateway node. Communication with the LoRa32u4 radio
    module was achieved through the serial TTL level port of the microcontroller.
    3.4. Gateway Node and User-End Software For the reception (and the inspection)
    of the remote alerts through Wi-Fi, an android smart phone or a tablet device,
    which most modern people are familiar with, was a satisfactory solution. The MIT
    App Inventor environment was utilized in order to deploy a simple monitoring application.
    The necessary programming was completed using visual blocks, based on the information
    provided in [43,44]. The initial deployment involved direct connection between
    the smart water sensor node and the end user equipment (e.g., a tablet device),
    typically through a Wi-Fi connection link. This solution is not optimal if multiple
    sensors units exist and deliver water usage reports in parallel. Furthermore,
    the latter sensors may be placed at comparatively long distances from the user.
    These facts made necessary the development of a gateway/sink node to gather the
    corresponding data and the migration to LoRa radio links. For implementing the
    latter gateway node, a Raspberry Pi 3 Model A+ had been selected [45], due to
    its reduced size and energy footprint and its fluent programming and interfacing
    options. The Raspberry Pi Model 3 A+ unit allows for fast implementation of code
    that intercepts the data reports from the peripheral smart sensor nodes, storing
    them into files or a simple database, and making them available via the proper
    TCP/IP based service. This request could be either asynchronous or periodic (i.e.,
    generated by a proper application running on the user’s mobile phone). These tasks
    are served using python and Linux shell scripts, inter process communication (IPC)
    techniques exploiting IP sockets, and the activation of preexisting applications
    such as the Apache web server, the SSH server and/or a Virtual Private Networking
    (VPN) service. Furthermore, the gateway node, properly combined with VPN networking
    techniques, assured monitoring functions from distant locations, based on the
    availability of Wide Area Network (WAN) wired or wireless technologies (i.e.,
    3G/4G, DSL, etc.). 3.5. Summary of IoT Deployment Steps The Edge AI tasks had
    to be performed fluently, while deployment in open-field environments using long-range
    radios, such as LoRa, was an important priority. The final functionality being
    implemented can be summarized in the following steps/cases: Use a Wi-Fi radio
    transceiver (e.g., an ESP-01 module), attached to the sensor node, to provide
    communication between the sensor node and the user’s smart phone/tablet, for testing
    purposes, during the initial deployment; Use a Raspberry Pi Model 3 A+ and a LoRa
    radio module as a LoRa gateway/web server, in conjunction with the LoRa radio
    transceiver modules being attached to the (preferably more than one) smart sensor
    nodes; Increase user-friendliness by adding services using the Raspberry Pi Model
    3 A+ unit of the gateway node and well-known web-based applications. Case 1 was
    suitable for verifying the basic wireless connectivity potential of the sensor
    node via the tablet/smart phone device of the user, being nearby the sensor. This
    arrangement made easy for the user to inspect the status of the water activity
    characterization system for one smart sensor and from short distances. The need
    to have a more complete on-demand view of the status of more than one water use
    points, at increased distance, was favoring the adoption of a local gateway node
    facilitating the whole monitoring process, as explained in case 2. The sensor
    nodes were sending water usage notifications toward this local gateway, over LoRa.
    It must be noted though that the TCP/IP technology, as a solution for the delivery
    of data (i.e., the sporadic metadata) from the sensors to the gateway, is not
    optimal, in terms of energy consumption, complexity and range coverage. Indeed,
    in a typical application scenario, the distance between the sensor nodes and the
    gateway node is limited to a hundred meters, approximately. If willing to extend
    this distance to the kilometer range or beyond, without special and expensive
    equipment, transceivers utilizing technologies such as LoRa are more suitable.
    In case of the LoRa solution, the LoRa32u4 board, as a transceiver, was the optimal
    selection for both the sensor and gateway nodes, due to its low cost and its easy
    programming. The RadioHead software package [46] is a very efficient library that
    supports several critical LoRa protocol functions, and thus, it was adopted for
    adjusting the LoRa32u4 modules. These modules were programmed easily via the Arduino
    IDE environment. Consequently, the microcontroller of each sensor node was connected
    (typically via its hardware serial TTL interface) with a LoRa32u4 board in order
    to relay the water usage information from the machine learning engine toward the
    gateway node. A Lora32u4 board was also connected via USB with the Raspberry Pi
    3 Model A+ unit implementing the gateway functions. The necessary code was written
    in python to bridge the serial port of the LoRa32u4 board with an IP socket service
    running on the gateway node. Characteristic deployment arrangements are depicted
    in Figure 4a,b. More specifically, Figure 4a depicts the smart water sensor node
    implementation using a Raspberry Pi Pico unit and a LoRa radio, while in Figure
    4b the gateway/sink node implementation is depicted using a Raspberry Pi 3 Model
    A+ and a LoRa radio. The information exchanged between the LoRa radios was packetized
    and encrypted using the RadioHead library and the Arduino Cryptography Library
    [47], in order to hide the sensitive data from non-authorized users. Figure 4.
    (a) Smart water sensor node deployment using Raspberry Pi Pico and LoRa radio;
    (b) Gateway/sink node implementation using Raspberry Pi 3 Model A+ and LoRa radio.
    Initial experiments were performed using USB powering via the hosting computer
    and/or power banks. Later updates included LiPo or Li-ion batteries, mainly of
    18650 type which are cheap and robust, as well as small photovoltaic panels (e.g.,
    2 W units). It must be noted though that the absence of a permanent power supply
    source nearby is not always the rule, and thus the operation of the alerting system
    was facilitated. 4. Results and Evaluation This work is putting emphasis on intercepting
    water usage events and on characterizing them properly. Via fluently-working machine
    learning techniques, applied at the edges of the network, the amount of information
    that needs to travel from the peripheral nodes to the central node and the cloud
    is minimized. This fact signifies reduced communication load and energy consumption,
    and better autonomy and privacy. The adoption of simple, long-range and low-energy
    radios facilitates the whole process. Relevant details are given into the following
    Section 4.1, Section 4.2, Section 4.3 and Section 4.4. 4.1. Testing the Acuracy
    of the Model For classification evaluation algorithms, accuracy is the most frequently
    used indicator, and it is defined as the proportion of the correctly classified
    samples to the total number of samples. After the training process, based on the
    testing data, the system generated the right outcome for the NU category with
    77.8% accuracy. Similarly, for the WW and WL categories, 100% success was achieved,
    according to Edge Impulse cloud environment. These performance results made the
    final model to have a 98.5% expected accuracy, using the testing data set, in
    the Quantized (int8) version. At next stage, actual water consumption episodes
    of known type (i.e., NU, WW or WL) had to be invoked, by rotating the tap head
    properly, thus letting the proposed machine learning engine to perform classification
    according to the flow data being collected (i.e., in chunks of 200 consecutive
    values). The corresponding results were recorded. Figure 5 depicts the proposed
    sensor node connected in-line with a water tap. This process was matching the
    steps being followed during the training stage of the system. Figure 5. The proposed
    sensor node connected in-line with a water tap. It must be noted that the in-parallel
    visual inspection of the ongoing process was drastically facilitating the experiments.
    More specifically, further arrangements were made in order for the whole sequence
    of the analytical flow readings to arrive to the smart phone/tablet device, using
    a modified version of the application created for the end user (as presented in
    Section 3.4). This application variant provided detailed real-time graphs (into
    the form of histograms) reflecting the instantaneous water consumption during
    each episode, for direct comparison and adjustments. Figure 6a–f illustrate indicative
    smart phone screenshots reflecting typical water usage characterization decisions
    during the actual testing process, corresponding to the NU, WL and WW categories,
    respectively. Figure 6. (a–f) Indicative smart phone screenshots during the in
    situ testing process, reflecting typical water usage characterization decisions
    for the categories NU, WL and WW, respectively. The combination of the trained
    ANN model implementation with simple more conventional programming techniques
    was improving the accuracy and the response times of the system being presented.
    For instance, the in situ module logic was modified so as to ignore the zero-flow
    events, as an episode (i.e., event) started being recorded only after the arrival
    of the first non-zero flow value. Table 1 contains the confusion matrix that corresponds
    to the testing of the real system, after classifying 100 water consumption episodes.
    The processing of the data being collected revealed that the actual accuracy was
    91% (i.e., 91 over 100 samples were classified correctly), after testing the model
    with user-generated water consumption profiles, using the proposed smart flow
    metering system. It is important to mention that the model could clearly recognise
    the undesirable WL profiles, achieving accuracy values reaching 100%. On the other
    hand, there were some incorrect predictions, where the neural model was classifying
    an actual WW scenario as NU or WL (with percentages 5.1% and 7.7%, respectively).
    In fewer cases, the model was classifying an NU as WW or WL (with percentages
    equal to 2.8%). These failures can be attributed to the fact that there was a
    small area where the borders of those categories were overlapped, thus confusing
    the neural network classifier. An additional 0.4 certainty threshold was programmed
    on the microcontroller for more reliable characterizations. This performance is
    close to the one expected according to the testing of the model. The overall performance
    is lower than the one achieved by other machine learning approaches [23] using
    more composite systems, but remains high and can be easily achieved by the proposed
    low-cost equipment. The accuracy can be further improved by using more extensive
    training and samples. Table 1. The confusion matrix corresponding to the trained
    neural network model, created by classifying 100 water consumption episodes, of
    specific (and known) type each. 4.2. Networking and Power Consumption Issues According
    to the specifications of the experimental system being presented, although 200
    consecutive samples had to be recorded before a classification decision to be
    make, this decision was taken locally, and thus only the (final) characterization
    message had to travel toward the gateway (and to the end user) instead of 200
    messages containing the corresponding analytical flow values. The packet payload
    information needed to travel from the peripheral sensor nodes toward the gateway
    node did not exceed 10 bytes in binary format, thus resulting in a bellow 50-byte
    description per episode in textual format, in the final log files on the Raspberry
    Pi Model 3 A+ unit of the gateway. The size requirements of the analytical data
    would be roughly 200 times higher. In addition to that, the cost for performing
    the classification at the central node was not necessary any more. Figure 7 provides
    indicative details of the water flow episode/event specific information as stored
    into the log files on the Raspberry Pi Model 3 A+ unit implementing the gateway
    node functionality. These files were directly available through the Apache web
    server and typically contained an arrival timestamp, node address, episode type
    (i.e., NU/WW/WL), flow value per each sample into a specific episode (in debug
    mode only), total water consumption per episode, as well as sensor battery voltage
    and RSSI indicator. Figure 7. Characteristic details of the water flow episode/event
    specific information as stored into the log files on the Raspberry Pi Model 3
    A+ unit implementing the gateway node. Some stability problems were experienced
    when using the highest baud rate (i.e., the 115,200 bps value) between the Raspberry
    Pi Pico and the LoRa32u4 module. For this reason the data rate was set to the
    “safe” 38,400 bps value. The techniques being followed for testing the effective
    communication range of the proposed system were utilizing the methods presented
    in [7,48]. The gateway node, apart from the water flow specific information, for
    each node, was collecting assistive data, such as sensor battery status and received
    signal strength indicator (RSSI). The latter information was collected for sensor
    nodes being at various distances from the gateway node, for both Wi-Fi and LoRa
    radio cases. The left part of Figure 8 depicts a LoRa radio transceiver during
    the in situ radio coverage experiments. According to results being gathered, by
    using ESP-01 Wi-Fi transceivers, the maximum range coverage was at about 100 m,
    while by using LoRa modules with custom wire antennas the communication distance
    was extended to 300 m in free space. By using standard but still cheap antennas,
    the LoRa link scenario was easily achieving communication coverage of above 1
    km. These results are justified by the fact that the receiver sensitivity limit
    for nodes equipped with Wi-Fi radios was around −90 dBm, while for the LoRa, the
    sensitivity being achieved was reaching the −130 dBm level. Figure 8. Experiments
    for testing the range coverage (left) and the energy consumption (right) of the
    prototype sensor nodes. In order to better capture and study the short-scale dynamics
    of the smart sensor modes, a measuring circuit was built, according to the directions
    provided in [49]. More specifically, an Arduino Uno board was utilized to calculate
    the voltage drops over a resistor of known value, connected in series with the
    load of interest (i.e., the smart water sensor node); the right part of Figure
    8 depicts the corresponding experimental setup. The actual measuring process was
    performed via a separate ADC module (namely an ADS1015 unit) capable of true differential
    measurements, of satisfactory resolution (i.e., of 12 bits) and of adjustable
    gain. The communication of this module with the hosting Arduino board was completed
    using an I2C interface. The presence of the Arduino Uno unit allowed for the additional
    processing of data and quick graphical inspection. Consequently, for the system
    under testing, amperage consumption traces could be easily captured, at a typical
    time resolution of 100 sps and at an approximate amperage resolution of 1 mA,
    via the Serial Monitor or the Serial Plotter component of the Arduino IDE environment.
    By using the specific measuring setup, several results were collected. The behavior
    of the sensor nodes was on the focus of this study, as, typically, the gateway
    node was considered of having fixed power supply and its consumption was around
    250 mA. More specifically, the consumption of a bare node, equipped only with
    a Raspberry Pi Pico unit was 27 mA, approximately, with the water flow metering
    unit to absorb 3–4 mA of this quantity. When activating the radio modules on the
    system and letting them transmit information, further data were collected. For
    debugging purposes, apart from the standard settings where only the water usage
    decision was reported, the analytical flow data could also be transmitted toward
    the gateway, limited only by the maximum data rate being supported by the selected
    radio modules. Referring to the Wi-Fi communication case, Figure 9 provides characteristic
    details of the short time dynamics of the scanning and connection establishment
    stages that were mandatory before the utilization of the radio modules. The inspection
    of the results revealed that the scanning process was extremely energy-consuming,
    reaching the level of 90 mA (in total) with additional and non-negligible sporadic
    spikes exceeding that level. The whole scanning process lasted for 2 to 3 s, and
    after that, the overall consumption was stabilized to the 40 mA level, with peaks
    of additional 50 mA corresponding to the water flow event reports toward the gateway.
    The high cost for the Wi-Fi initialization link (especially in optimized radio
    sleep/wakeup scenarios), along with its limited range coverage were favoring the
    assessment of other communication alternatives, such as LoRa. Figure 9. Short
    time dynamics of the mandatory scanning and connection establishment stages, following
    the activation of the Wi-Fi radio module that smart sensors were equipped with.
    Similarly, Figure 10 depicts characteristic short-time dynamics for the LoRa communication
    alternative. Namely, from the LoRa module activation (left) to the energy peaks
    reflecting the water usage notification packet transmission events (top right)
    and to the corresponding textual information content as intercepted by the gateway
    (bottom right). The LoRa32u4 LoRa board consumed 12–13 mA, approximately, at idling,
    with the radio enabled, while the transmission events at the standard radio parameter
    settings (i.e., having Coding Rate—CR set to 4/5, Bandwidth—BW to 128 kHz, Spreading
    Factor—SF set to 7) and with the transmit power at 15 dBm, resulted in spikes
    of 70 mA (at 3.3 V), having an approximate duration of 50 ms, thus requiring around
    12 mJ each. It must be noted that the whole process lacked the high connection
    establishment cost (in both time and energy) characterizing the Wi-Fi case. The
    tradeoff of LoRa was the far lower communication rate, which was not an issue
    for the specific application case that only a few bytes had to be transmitted
    per sensor unit, every 2 to 3 min, at the fastest utilization activity scenario.
    Figure 10. Characteristic short-time dynamics for the LoRa communication alternative:
    From the LoRa module activation (left) to the energy peaks reflecting the packet
    transmission events (top right) and to the corresponding textual information content
    as intercepted by the gateway (bottom right). According to the overall performance
    description presented herein, it can be inferred that typically, the benefits
    of the pilot implementation being discussed were maximized in application cases
    where many water consumption check points were needed, spread into an area of
    a few kilometres. 4.3. Node Cost Issues The total cost of each of the discussed
    nodes, after adding the 6€ for the Raspberry Pi Pico unit, the 15€ for the LoRa
    equipped module, the 8€ for the YF-S201 flow sensor, the 8€ for LiPo batteries
    and the 5€ needed for a good-quality plastic enclosure box, was around 42€. The
    utilization of a LoRa transceiver instead of a typical Wi-Fi radio saved energy
    and offered improved distance coverage. The decision of using the LoRa32u4 board
    added some extra cost (of about 5€, compared with a bare LoRa chip) but provided
    further GPIO pins and connectivity options, as well as fast programming and testing
    of the diverse communication and arithmetic processing variants, thus counterbalancing
    the almost 15 min of time required for the compilation of the code containing
    the trained neural network model destined for the Raspberry Pi Pico unit. The
    gateway node needed 30€ for a Raspberry Pi Model 3 A+, 15€ for the LoRa32u4 board,
    5€ for a plastic enclosure box, and 5€ for a power supply, resulting in cost below
    60€. 4.4. Further Discussion This work presented a pilot implementation targeted
    at intercepting water usage events and characterizing them properly, with the
    emphasis to be put on misuse cases, such as leakages or wastes. The rapid growth
    of electronics and of the pairing software allowed for very cost-effective but
    efficient solutions, with cutting-edge features. Indeed, the adoption of machine
    learning techniques at the edge points (i.e., where the water sensors are) was
    drastically reducing the amount of information that needed to travel from the
    peripheral nodes to the central node and the cloud. This fact resulted in reduced
    communication load and energy consumption, while it increased autonomy and privacy.
    The focus was put on the in situ processing and the pairing with simple, long-range
    and low-energy radios, e.g., the LoRa technology ones. The water usage episodes
    the experimental system was trained to intercept were of comparatively short duration,
    but the software and hardware methods being used, and the accuracy being achieved,
    make the proposed arrangements, only with minor configuration modifications, to
    be applicable for supporting a wide variety of water preservation/misuse detection
    scenarios. Apparently, several issues are still open, requiring more elaboration
    for the delivery of an out-of-the-box solution. The time interval between the
    fixed, in number (e.g., 200), consecutive flow data required for a characterization
    decision, was set to 1 s during the training. The same trained model, can still
    be valid considering intervals of much longer value (e.g., of 30 s instead of
    1 s), provided that the proper normalization in flow values will be made and that
    the activity will be classified in following the same pattern. Nevertheless, gathering
    richer data sets, reflecting further realistic use cases, can train the model
    more accurately, and is an apparent priority for wider applicability. This training
    can follow the same generic principles and methods described herein. The option
    of using a bare LoRa chip with the Raspberry Pi Pico unit is amongst the future
    priorities toward a more commercially-friendly version of the prototype presented
    herein. While the adoption of the LoRa protocol allows for better flexibility,
    the LoRaWAN solution is also feasible, either via implementing the necessary protocol
    stack, via software on the 32u4 LoRa board, or by utilizing native LoRaWAN chips.
    Furthermore, these processes can become more efficient by introducing a sleep/wakeup
    energy management schema which will allow the Raspberry Pi Pico to wake up (via
    interrupts) whenever water flow activity is intercepted by the flow sensor. The
    task of the efficient powering the system at the absence of permanent power supply
    nearby is also quite challenging. Indeed, more than one alternative can be adopted,
    from using solar panels or a tiny wind generator, to pairing the rotating blades
    of the flow sensor unit with a tiny electric generator [50]. Finally, as the adoption
    of a Raspberry Pi Model 3 A+ as a central/gateway node was providing an adequate
    but poor level of functionality, via elementary web and archiving or database
    services, linking with well-known and more user-friendly cloud services is also
    a case worth investigating in the future. 5. Conclusions In this paper, the synergy
    between several innovative and low-cost electronic components and software was
    exploited, in order to monitor and remotely report characteristic water consumption/misuse
    events. The whole approach introduces modern Edge AI techniques (i.e., combining
    IoT, ML and Edge Computing principles) that up until recently was not possible
    to be executed with traditional low-cost microcontrollers. The challenges for
    the delivery of a generally applicable and inexpensive alerting system for either
    urban or rural water resource usage were further highlighted. The system being
    presented can work in a decentralized manner as the amount of information that
    has to travel from the edges to the cloud is drastically reduced, or becomes practically
    unnecessary, thus resulting in energy requirement minimization and increased privacy.
    Only the final decision (water usage characterization) information has to be transmitted
    to the final user (e.g., the farmer), and the cloud is necessary only in case
    that the latter user is not nearby or asks for sophisticated information post
    processing. As for the future, more optimized variants of the proposed system
    will be assessed, in terms of hardware selection (e.g., of flow sensor units),
    neural network model accuracy, networking options and energy autonomy. Great companies,
    such as Arduino, Raspberry, ESP or Adafruit, during their noble competition, will
    continue to produce excellent parts with leveraged application support potential.
    Finally, an out-of-the box version of the functionality being presented, of commercial
    standards, exploiting additional well-known services, and thus exhibiting increased
    user-friendliness, will be a significant future priority. Author Contributions
    Conceptualization, D.L.; methodology, D.L. and K.-A.L.; software, D.L.; validation,
    D.L., K.-A.L., C.M. and K.G.A.; investigation, D.L., K.-A.L. and C.M.; data curation,
    K.-A.L.; writing—original draft preparation, D.L. and K.-A.L.; writing—review
    and editing, D.L., K.-A.L., C.M. and K.G.A.; visualization, D.L. and K.-A.L.;
    supervision, K.G.A. All authors have read and agreed to the published version
    of the manuscript. Funding This research received no external funding. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement Available upon request. Acknowledgments The authors
    would like to thank the personnel and the students of the Dept. of Natural Resources
    Management & Agricultural Engineering of the Agricultural University of Athens,
    Greece, for their assistance in the deployment and testing of the discussed system.
    Conflicts of Interest The authors declare no conflict of interest. References
    FAO. Climate-Smart Agriculture Sourcebook. 2013. Available online: http://www.fao.org/3/i3325e/i3325e.pdf
    (accessed on 25 March 2022). Statista. IoT: Number of Connected Devices Worldwide
    2012–2025. Available online: https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/
    (accessed on 8 June 2022). Dastjerdi, A.V.; Buyya, R. Fog Computing: Helping the
    Internet of Things Realize Its Potential. IEEE Comput. Soc. 2016, 49, 112–116.
    [Google Scholar] [CrossRef] Merenda, M.; Porcaro, C.; Iero, D. Edge machine learning
    for AI-Enabled IoT devices: A review. Sensors 2020, 20, 2533. [Google Scholar]
    [CrossRef] [PubMed] TensorFlow Lite. Available online: https://www.tensorflow.org/lite
    (accessed on 8 June 2022). TinyML. Available online: https://www.tensorflow.org/lite
    (accessed on 8 June 2022). Loukatos, D.; Arvanitis, K.G. Multi-Modal Sensor Nodes
    in Experimental Scalable Agricultural IoT Application Scenarios; Springer: Berlin/Heidelberg,
    Germany, 2021; pp. 101–128. [Google Scholar] [CrossRef] Kingdom, B.; Liemberger,
    R.; Marin, P. The Challenge of Reducing Non-Revenue (NRW) Water in Developing
    Countries. How the Private Sector Can Help: A Look at Performance-Based Service
    Contracting; Water Supply and Sanitation (WSS) Sector Board Discussion Paper N.
    8; The World Bank: Washington, DC, USA, 2006. [Google Scholar] United Nations
    SDG6. Available online: https://sdgs.un.org/goals/goal6 (accessed on 20 February
    2022). Sustainable Development Goals. Available online: https://sdgs.un.org/goals
    (accessed on 20 February 2022). Loukatos, D.; Lygkoura, K.-A.; Misthou, S.; Arvanitis,
    K.G. Internet of Things Meets Machine Learning: A Water Usage Alert Example. In
    Proceedings of the 2022 IEEE Global Engineering Education Conference (EDUCON),
    Tunis, Tunisia, 28–31 March 2022. [Google Scholar] Singh, D.; Tripathi, G.; Jara,
    A.J. A survey of internet-of-things: Future vision, architecture, challenges,
    and services. In Proceedings of the IEEE World Forum on Internet of Things, Seoul,
    Korea, 6–8 March 2014; pp. 287–292. [Google Scholar] [CrossRef] Lova Raju, K.;
    Vijayaraghavan, V. IoT Technologies in Agricultural Environment: A Survey. Wirel.
    Pers. Commun. 2020, 113, 2415–2446. [Google Scholar] [CrossRef] Farooq, M.S.;
    Riaz, S.; Abid, A.; Umer, T.; Zikria, Y.B. Role of IoT Technology in Agriculture:
    A Systematic Literature Review. Electronics 2020, 9, 319. [Google Scholar] [CrossRef]
    [Green Version] Zude-Sasse, M.; Akbari, E.; Tsoulias, N.; Psiroukis, V.; Fountas,
    S.; Ehsani, R. Sensing in Precision Horticulture. In Sensing Approaches for Precision
    Agriculture; Kerry, R., Escolà, A., Eds.; Progress in Precision Agriculture; Springer:
    Cham, Switzerland, 2021. [Google Scholar] [CrossRef] Islam, N.; Rashid, M.M.;
    Pasandideh, F.; Ray, B.; Moore, S.; Kadel, R. A Review of Applications and Communication
    Technologies for Internet of Things (IoT) and Unmanned Aerial Vehicle (UAV) Based
    Sustainable Smart Farming. Sustainability 2021, 13, 1821. [Google Scholar] [CrossRef]
    Liakos, K.G.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning
    in Agriculture: A Review. Sensors 2018, 18, 2674. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Ahmad, L.; Nabi, F. Agriculture 5.0: Artificial Intelligence,
    IoT, and Machine Learning, 1st ed.; CRC Press: Boca Raton, FL, USA, 2021. [Google
    Scholar] [CrossRef] Garcia Lopez, P.; Montresor, A.; Epema, D.; Datta, A.; Higashino,
    T.; Iamnitchi, A.; Barcellos, M.; Felber, P.; Riviere, E. Edge-centric computing:
    Vision and challenges. ACM SIGCOMM Comput. Commun. Rev. 2015, 45, 37–42. [Google
    Scholar] [CrossRef] Gia, T.N.; Qingqing, L.; Queralta, J.P.; Zou, Z.; Tenhunen,
    H.; Westerlund, T. Edge AI in Smart Farming IoT: CNNs at the Edge and Fog Computing
    with LoRa. In Proceedings of the 2019 IEEE AFRICON, Accra, Ghana, 25–27 September
    2019; pp. 1–6. [Google Scholar] [CrossRef] Bu, F.; Wang, X. A smart agriculture
    IoT system based on deep reinforcement learning. Future Gener. Comput. Syst. 2019,
    99, 500–507. [Google Scholar] [CrossRef] Huang, R.; Ma, C.; Ma, J.; Huangfu, X.;
    He, Q. Machine learning in natural and engineered water systems. Water Res. 2021,
    15, 117666. [Google Scholar] [CrossRef] [PubMed] Mashhadi, N.; Shahrour, I.; Attoue,
    N.; El Khattabi, J.; Aljer, A. Use of Machine Learning for Leak Detection and
    Localization in Water Distribution Systems. Smart Cities 2021, 4, 1293–1315. [Google
    Scholar] [CrossRef] Ramachandran, V.; Ramalakshmi, R.; Kavin, B.P.; Hussain, I.;
    Almaliki, A.H.; Almaliki, A.A.; Elnaggar, A.Y.; Hussein, E.E. Exploiting IoT and
    Its Enabled Technologies for Irrigation Needs in Agriculture. Water 2022, 14,
    719. [Google Scholar] [CrossRef] Roy, A.; Dutta, H.; Griffith, H.; Biswas, S.
    An On-Device Learning System for Estimating Liquid Consumption from Consumer-Grade
    Water Bottles and Its Evaluation. Sensors 2022, 22, 2514. [Google Scholar] [CrossRef]
    [PubMed] Slama, S.-B. Prosumer in smart grids based on intelligent edge computing:
    A review on Artificial Intelligence Scheduling Techniques. Ain Shams Eng. J. 2022,
    13, 101504. [Google Scholar] [CrossRef] Gaspar, P.D.; Fernandez, C.M.; Soares,
    V.N.G.J.; Caldeira, J.M.L.P.; Silva, H. Development of Technological Capabilities
    through the Internet of Things (IoT): Survey of Opportunities and Barriers for
    IoT Implementation in Portugal’s Agro-Industry. Appl. Sci. 2021, 11, 3454. [Google
    Scholar] [CrossRef] McCaig, M.; Rezania, D.; Dara, R. Is the Internet of Things
    a helpful employee? An exploratory study of discourses of Canadian farmers. Internet
    Things 2022, 17, 100466. [Google Scholar] [CrossRef] Nkosi, S.H.; Chowdhury, S.P.D.
    Automated Irrigation and Water Level Management System Using Raspberry PI. In
    Proceedings of the 2018 IEEE PES/IAS PowerAfrica, Cape Town, South Africa, 26–29
    June 2018; pp. 804–809. [Google Scholar] [CrossRef] Gosavi, G.; Gawde, G.; Gosavi,
    G. Smart water flow monitoring and forecasting system. In Proceedings of the 2017
    2nd IEEE International Conference on Recent Trends in Electronics, Information
    & Communication Technology (RTEICT), Bangalore, India, 19–20 May 2017; pp. 1218–1222.
    [Google Scholar] [CrossRef] Glória, A.; Dionisio, C.; Simões, G.; Cardoso, J.;
    Sebastião, P. Water Management for Sustainable Irrigation Systems Using Internet-of-Things.
    Sensors 2020, 20, 1402. [Google Scholar] [CrossRef] [Green Version] Attallah,
    N.A.; Horsburgh, J.S.; Beckwith, A.S., Jr.; Tracy, R.J. Residential Water Meters
    as Edge Computing Nodes: Disaggregating End Uses and Creating Actionable Information
    at the Edge. Sensors 2021, 21, 5310. [Google Scholar] [CrossRef] Neto, A.R.; Soares,
    B.; Barbalho, F.; Santos, L.; Batista, T.; Delicato, F.C.; Pires, P.F. Classifying
    Smart IoT Devices for Running Machine Learning Algorithms. In Anais do XLV Seminário
    Integrado de Software e Hardware; SBC: Nashville, TN, USA, 2018. [Google Scholar]
    Arduino Nano 33 BLE Sense. Overview of the Arduino Nano 33 BLE Sense Microcontroller
    Unit. 2022. Available online: https://store.arduino.cc/products/arduino-nano-33-ble-sense
    (accessed on 25 February 2022). Raspberry Pi Pico. Overview of the Raspberry Pi
    Pico Microcontroller Unit. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-pico/
    (accessed on 25 March 2022). Arduino Uno. Arduino Uno Board Description on the
    Official Arduino Site. 2022. Available online: https://store.arduino.cc/arduino-uno-rev3
    (accessed on 20 February 2022). LoRa32u4. The LoRa32u4 Module Description. 2022.
    Available online: https://www.diymalls.com/LoRa32u4-II-Lora-Development-Board-868mhz-915mhz-Lora-Module
    (accessed on 25 March 2022). Arduino Software IDE. 2022. Available online: https://www.arduino.cc/en/Guide/Environment
    (accessed on 20 February 2022). ESP8266. The ESP8266 Low-Cost Wi-Fi Microchip.
    2022. Available online: https://en.wikipedia.org/wiki/ESP8266 (accessed on 20
    February 2022). Twinschip. Water Flow Meter. 2022. Available online: https://www.twinschip.com/Water-Flow%20Sensor-Control-Effect-Flowmeter-Hall--YF-S201
    (accessed on 20 February 2022). MIT App Inventor Programming Environment. Available
    online: http://appinventor.mit.edu/explore/ (accessed on 20 February 2022). EdgeImpulse.
    2022. Available online: https://www.edgeimpulse.com/ (accessed on 20 March 2022).
    TCP/IP Extension. Description of the TCP Extension for the MIT App Inventor Environment.
    2022. Available online: https://community.appinventor.mit.edu/t/tcp-ip-extension/7142
    (accessed on 20 March 2022). UDP/IP Extension. Description of the UDP Extension
    for the MIT App Inventor Environment. 2022. Available online: https://ullisroboterseite.de/android-AI2-UDP-en.html
    (accessed on 20 March 2022). Raspberry Pi 3 Model A+. Raspberry Pi 3 Model A+
    Board Description on the Official Raspberry Site. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-3-model-a-plus/
    (accessed on 25 March 2022). RadioHead. The RadioHead Library to Support LoRa
    Modules. 2022. Available online: https://www.airspayce.com/mikem/arduino/RadioHead/
    (accessed on 25 February 2022). Arduino Cryptography Library. Description of the
    Arduino Cryptography Library. 2022. Available online: https://www.arduino.cc/reference/en/libraries/crypto/
    (accessed on 25 February 2022). Loukatos, D.; Fragkos, A.; Arvanitis, K. Experimental
    Performance Evaluation Techniques of LoRa Radio Modules and Exploitation for Agricultural
    Use. In Information and Communication Technologies for Agriculture—Theme I: Sensors;
    Bochtis, D.D., Lampridi, M., Petropoulos, G.P., Ampatzidis, Y., Pardalos, P.,
    Eds.; Springer International Publishing: Cham, Switzerland, 2022; pp. 101–120.
    [Google Scholar] [CrossRef] Loukatos, D.; Dimitriou, N.; Manolopoulos, I.; Kontovasilis,
    K.; Arvanitis, K.G. Revealing Characteristic IoT Behaviors by Performing Simple
    Energy Measurements via Open Hardware/Software Components. In Proceedings of the
    Sixth International Congress on Information and Communication Technology—ICICT
    2021, London, UK, 25–26 February 2021; Springer: Singapore, 2022; pp. 1045–1053.
    [Google Scholar] [CrossRef] Micro Water Turbine—Hydroelectric Generator. Description
    of the 5V DC water turbine miniature electric generator. Available online: https://www.seeedstudio.com/Micro-Water-Tubine-Generator-DC-5V-p-4512.html
    (accessed on 19 June 2022). Publisher’s Note: MDPI stays neutral with regard to
    jurisdictional claims in published maps and institutional affiliations.  © 2022
    by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Loukatos, D.; Lygkoura, K.-A.; Maraveas, C.; Arvanitis, K.G.
    Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events
    in a Decentralized Manner. Sensors 2022, 22, 4874. https://doi.org/10.3390/s22134874
    AMA Style Loukatos D, Lygkoura K-A, Maraveas C, Arvanitis KG. Enriching IoT Modules
    with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner.
    Sensors. 2022; 22(13):4874. https://doi.org/10.3390/s22134874 Chicago/Turabian
    Style Loukatos, Dimitrios, Kalliopi-Agryri Lygkoura, Chrysanthos Maraveas, and
    Konstantinos G. Arvanitis. 2022. \"Enriching IoT Modules with Edge AI Functionality
    to Detect Water Misuse Events in a Decentralized Manner\" Sensors 22, no. 13:
    4874. https://doi.org/10.3390/s22134874 Note that from the first issue of 2016,
    this journal uses article numbers instead of page numbers. See further details
    here. Article Metrics Citations Crossref   10 Web of Science   6 Scopus   11 ads   3
    PubMed   2 PMC   2 Google Scholar   [click to view] Article Access Statistics
    Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb
    27. Feb 8. Mar 18. Mar 28. Mar 0k 1k 2k 3k For more information on the journal
    statistics, click here. Multiple requests from the same IP address are counted
    as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content Alert Further
    Information Article Processing Charges Pay an Invoice Open Access Policy Contact
    MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians
    For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum
    MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series
    Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications
    and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel,
    Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events
    in a Decentralized Manner
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Polpanich O.U.
  - Bhatpuria D.
  - Santos Santos T.F.
  - Krittasudthacheewa C.
  citation_count: '2'
  description: The limited availability of high-resolution monitoring systems for
    the drought phenomena and water dynamics affected by weather anomalies hinders
    policy decisions in a multitude of ways. This paper introduces the availability
    of the high-resolution Water Monitoring System (WMS) developed from a mix of sophisticated
    multi-spectral satellite imageries, analytic and data sciences, and cloud computing,
    for monitoring the changes in water levels and vegetation water stress at the
    local scale. The WMS was tested in the Lower Mekong Region (LMR) case basin, Thailand’s
    Chi River Basin, in the period from January 2021 to April 2021, the dry season.
    The overall quality of the VHI, VCI, TCI, and NDVI drought simulation results
    showed a statistically positive Pearson correlation with the reservoir and dam
    water volume data (ranged between 0.399 and 0.575) but demon-strated a strong
    negative correlation with the groundwater level data (between −0.355 and −0.504).
    Further investigation and more detailed analysis of the influence of different
    physical environmental conditions related to change in groundwater level should
    be considered to increase scientific knowledge and understanding about the changing
    nature of the local system from local perspectives with the alternative use of
    drought indices in data-poor areas. Our result suggests that the WMS can provide
    quantitative spatiotemporal variations of localized and contextualized surface
    water changes as a preliminary analysis. The WMS results can offer guidance for
    finding a better smaller unit management that suits the local conditions, such
    as water resource management, disaster risk reduction measures (i.e., drought
    and flood), irrigation practice, land use planning, and crop management. The existing
    WMS is geared toward the early warning of water and agricultural development,
    progress on the SDGs, utilization of digital innovation, and improved abilities
    of de-cision-makers to monitor and foresee extreme weather events earlier and
    with high spatial accuracy.
  doi: 10.3390/su14031739
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all        Journals Topics Information Author Services Initiatives About
    Sign In / Sign Up Submit   Search for Articles: Sustainability All Article Types
    Advanced   Journals Sustainability Volume 14 Issue 3 10.3390/su14031739 Submit
    to this Journal Review for this Journal Propose a Special Issue Article Menu Academic
    Editors Andrzej Wałęga Anastasios Michailidis Subscribe SciFeed Recommended Articles
    Related Info Link More by Authors Links Article Views 1690 Citations 2 Table of
    Contents Abstract Introduction Materials and Methods Results Discussion Conclusions
    Author Contributions Funding Institutional Review Board Statement Informed Consent
    Statement Data Availability Statement Acknowledgments Conflicts of Interest References
    Altmetric share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle Leveraging Multi-Source Data and Digital Technology
    to Support the Monitoring of Localized Water Changes in the Mekong Region by Orn-uma
    Polpanich 1, Dhyey Bhatpuria 2,*, Tania Fernanda Santos Santos 3 and Chayanis
    Krittasudthacheewa 2 1 Natural Resources and Sustainable Development, Department
    of Earth Sciences, Uppsala University, Villavägen 16, 752 36 Uppsala, Sweden 2
    Stockholm Environment Institute, 10th Floor, Kasem Uttayanin Building, 254 Chulalongkorn
    University, Henri Dunant Road, Pathumwan, Bangkok 10330, Thailand 3 Stockholm
    Environment Institute, Latin America, Calle 71, #11-10, Edificio Corecol, Oficina
    801, Bogotá 110231, Colombia * Author to whom correspondence should be addressed.
    Sustainability 2022, 14(3), 1739; https://doi.org/10.3390/su14031739 Submission
    received: 22 November 2021 / Revised: 25 January 2022 / Accepted: 29 January 2022
    / Published: 2 February 2022 (This article belongs to the Special Issue Prospects
    in Sustainable Water Management) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract The limited availability of high-resolution monitoring
    systems for the drought phenomena and water dynamics affected by weather anomalies
    hinders policy decisions in a multitude of ways. This paper introduces the availability
    of the high-resolution Water Monitoring System (WMS) developed from a mix of sophisticated
    multi-spectral satellite imageries, analytic and data sciences, and cloud computing,
    for monitoring the changes in water levels and vegetation water stress at the
    local scale. The WMS was tested in the Lower Mekong Region (LMR) case basin, Thailand’s
    Chi River Basin, in the period from January 2021 to April 2021, the dry season.
    The overall quality of the VHI, VCI, TCI, and NDVI drought simulation results
    showed a statistically positive Pearson correlation with the reservoir and dam
    water volume data (ranged between 0.399 and 0.575) but demonstrated a strong negative
    correlation with the groundwater level data (between −0.355 and −0.504). Further
    investigation and more detailed analysis of the influence of different physical
    environmental conditions related to change in groundwater level should be considered
    to increase scientific knowledge and understanding about the changing nature of
    the local system from local perspectives with the alternative use of drought indices
    in data-poor areas. Our result suggests that the WMS can provide quantitative
    spatiotemporal variations of localized and contextualized surface water changes
    as a preliminary analysis. The WMS results can offer guidance for finding a better
    smaller unit management that suits the local conditions, such as water resource
    management, disaster risk reduction measures (i.e., drought and flood), irrigation
    practice, land use planning, and crop management. The existing WMS is geared toward
    the early warning of water and agricultural development, progress on the SDGs,
    utilization of digital innovation, and improved abilities of decision-makers to
    monitor and foresee extreme weather events earlier and with high spatial accuracy.
    Keywords: drought; localized water; monitoring system; SDGs; Lower Mekong Basin;
    web data scraping; Google Earth Engine; Chi River Basin 1. Introduction Recurrent
    severe droughts seriously threaten food security, socio-economic condition, and
    ecosystems in the Lower Mekong Region (LMR) [1,2,3]. The 2019/20 drought in many
    locations of Thailand [4] and Vietnam’s Mekong delta [5,6] are the recent example,
    where fragmented institutional mandates and varying technical capabilities to
    monitor these extreme events led to a significantly to delayed response [7,8].
    Meanwhile, climate change has magnified drought in both frequency and severity
    [9,10]. It aggravates the insecurity of water resources that causes a serious
    disparity between water supply and demand in the region [2,11,12]. The effects
    of the water imbalances have created inequalities in the distribution, allocation
    across competing users, and extensive use of groundwater, which could be a cause
    of institutional arrangement and political targeting for many countries [13].
    These cascading socioeconomic and ecosystem impacts have disrupted efforts to
    achieve the target sets in at least 4 different Sustainable Development Goals
    (SDGs), particularly relating to SDG 6 Clean water and sanitation, SDG 11 Sustainable
    cities and communities, SDG 13 Climate actions, and SDG 14 Life on land. This
    increased risk of both drought and water security was profoundly notified by six
    riparian countries (China, Cambodia, Lao PDR, Myanmar, Thailand, and Vietnam)
    under the Joint Working Group (JWG) on Water Resources of the Lancang Mekong Cooperation
    (LMC) during the 2019 Second Special Meeting in Nong Khai, Thailand [14]. They
    initially agreed to undertake joint research on the 2019 drought to gain a more
    thorough understanding of the physical processes leading to the drought and their
    impacts. Decision-makers and water managers are aware of frequent extreme weather
    events, specifically increasing worse droughts and their intensifying impacts
    [14,15]. They, however, find it difficult to measure drought onsets and endings,
    even in water-rich countries because droughts are not weather or climatic anomalies
    [16]. Recent advances in data innovation and digital technologies are making their
    way into a wide range of applications for water resources management, for instance,
    [17,18,19,20,21,22,23,24,25,26,27,28]. Specifically, satellite data at varying
    spatial scales are likely being used as an alternative or complementary source
    of information to in situ monitoring networks in data-poor regions [29,30]. In
    many parts of the Lower Mekong Basin (LMB), satellite data is seemingly the only
    feasible source [31,32] that can provide critical information in support of managing
    water resources and monitoring the evolution of droughts, other hazards, and their
    impacts [30,33,34]. In response to the growing attention and need from decision-makers
    in the LMR, several satellite-based operational near-real-time systems for drought
    and water monitoring have been developed to provide static maps at a weekly drought
    condition with single meteorological or a few agricultural drought indicators
    at the national and regional scales. A few examples of such systems are The Thai
    Geo-Informatics and Space Technology Development Agency (https://drought.gistda.or.th/
    accessed on 4 October 2021), SERVIR-Mekong (https://mdcw-servir.adpc.net/; https://rdcyis-servir.adpc.net/map
    accessed on 4 October 2021), and Mekong River Commission (http://droughtforecast.mrcmekong.org/maps
    accessed on 4 October 2021). At the global scale, the Center for Spatial Information
    Science and Systems/George Mason University (http://gis.csiss.gmu.edu/GADMFS/
    accessed on 4 October 2021), the University of California, Irvine (http://drought.eng.uci.edu/
    accessed on 4 October 2021), and the Food and Agriculture Organization of the
    United Nations (https://www.fao.org/giews/earthobservation/asis/index_1.jsp?lang=en#uvhi
    accessed on 4 October 2021) have a near real-time drought assessment products
    at the larger spatial scales (500 m to 11 km). Those existing drought monitoring
    systems are too coarse and have a limited operation period of satellite sensors
    to capture detailed spatial coverage conditions, due to complex topography and
    heterogeneity [35,36,37,38]. They are unfortunately unable to provide essential
    information in decision-making at the sub-national or basin scales [29,36]. As
    drought can be localized and increasingly take place on smaller scales [39,40].
    This highlights the important need for a local understanding of the behavior of
    water movement, the vulnerability of crops under drought, and other climate and
    water problems, rather than global or regional levels. A high-resolution near
    real-time drought monitoring tool with more accurate measures of specific drought
    indices is, thus, required for decision-making and adaptation at the local scale.
    Nevertheless, tackling the challenges of drought needs an integrated approach
    to support water resource management and sustainable development [41]. In addition,
    developing any system usually requires considerable time, effort, and resources
    [28,42]. While observational data are individually collected and managed through
    very sparse agro-hydrometeorological monitoring networks by several agencies,
    a few are publicly available online at Thailand’s Hydro-Informatics Institute
    (https://www.thaiwater.net/v3/ accessed on 7 November 2021), Mekong River Commission
    (https://portal.mrcmekong.org/monitoring/river-monitoring-telemetry accessed on
    7 November 2021), for instance, this identifies a strong need for better coordinated
    multi-source observational data across departments within a country [7]. Thus,
    we believe that an affordable development of an integrated system for drought
    monitoring can provide situational information to gain an improved understanding
    of the behavior of water movement, the vulnerability of crops under drought, and
    other climate and water problems at the local scale. The study, therefore, develops
    a web-based open-source system that will be of great help in reducing task duplication
    and to further enhance the ability of water managers and policymakers to achieve
    better water resource management, support concrete actions in timely responses,
    and catalyzing progress in achieving the listed SDGs and SDG 4 Digital innovation.
    Other users can also benefit from the WMS. Here, we announce the availability
    of the high-resolution Water Monitoring System (WMS) and demonstrate its value
    for water and drought monitoring using the multi-source data and Google Earth
    Engine (GEE). We, therefore, describe and discuss the details of the workflow,
    web-based service, key processes of the proposed system, and testbed for Thailand’s
    river basin case study implementation. We anticipate that this freely available
    web-based monitoring tool will provide evidence of the state and changes in surface
    and groundwater over time and inform water management decision-making and the
    enforcement of extreme event preparedness, mitigation, and emergency measures
    at the local level. 2. Materials and Methods The Water Monitoring System (WMS)
    was developed by the Stockholm Environment Institute (SEI) cross-center researchers
    (Asia and Latin America) between 2020 and 2021. The WMS entered a digital universe,
    where day-to-day decisions need to be based on empirical data and analytics, rather
    than past practice. By embracing new tools and technologies to better understand
    their complex operations, today’s stakeholders and decision-makers can save time
    and money, reduce water related risks, and become more efficient. To succeed with
    the data-driven approach, we need to start with accurate information that requires
    powerful monitoring tools backed by robust analytic capacities. That is where
    the WMS comes in. We are taking physical monitoring to new levels with our advanced
    data innovation, which provides unparalleled real-time visibility into local drought
    and water resource management. Using a combination of sophisticated multi-spectral
    sensors, which provides high resolution satellite imageries, data science analytics,
    and cloud computing, the WMS delivers unprecedented insights into how lower water
    resources and vegetation are observed. This is achieved by web-scraped multi-source
    data to accurately estimate water deficits or inundation and support timely decisions
    for managing climate-change-related water resource management, with a potential
    reduction of damages and investment costs and benefits for irrigation development,
    adaptation measures, and mitigation. Our proposed system is easily scalable and
    can be used to develop a monitoring system of individual surface and groundwater
    resources or entire local drought areas. The edge computing technology allows
    us to deploy them in situations where observational data are unavailable and unreliable.
    It all adds up to better control over local water resources and a deeper understanding
    of how to manage it, and that means healthier water systems, better management,
    and efficient operation. 2.1. Water Monitoring System (WMS) The schematic of the
    WMS is demonstrated in Figure 1. It comprises: (1a) a near real-time simulation
    framework using the Google Earth Engine (GEE) to monitor the evolution of drought
    and water conditions; (1b) an automated web data scraping and extraction in Python
    that is an archive of the publicly available surface and groundwater observation
    data from government websites; (1c) PostgreSQL, a relational database management
    system to store and process the input data of surface and groundwater as a foundation
    of the WMS database; and (1d) a web-based service that connects all modules and
    hosts the resultant archive of the GEE, a system database and a high-resolution
    spatial maps of drought indices. The WMS allows technical users who are highly
    trained in the fields of physical environment, geosciences, and water sciences
    to interact, communicate, and share our results in a non-scientific language with
    different interest groups, thus reaching a much wider audience. It also aims to
    provide evidence-based scientific support to the policymaking process for sub-national
    and local drought assessments, as well as changes of water conditions. Major modules
    are described in the subsections. Figure 1. Schematic overview of the configuration
    for the Water Monitoring System (WMS). 2.1.1. Near Real-Time Simulation in Google
    Earth Engine (GEE) The WMS is built on top of the GEE cloud-based platform for
    sub-national scale geospatial analysis. The freely available Landsat 8 (L8), with
    a 16-day revisit time [43], provided by the United States Geological Survey (https://www.usgs.gov/core-science-systems/nli/landsat/landsat-8?qt-science_support_page_related_con=0#
    accessed on 28 October 2021) and the Sentinel 2A/B (S2) from the European Space
    Agency (https://sentinel.esa.int/web/sentinel/missions/sentinel-2 accessed on
    28 October 2021) images with a 5-day repeat period [44] are utilized and have
    been routinely downloaded since its inception in January 2021. Although the two
    images are atmospherically corrected and geo-referenced, based on the global position
    system (GPS) tier points [45], cloud contaminations and topographic effects produced
    by the presence of shadow noises remain the issues in the result of earth’s surface
    mapping and change analysis [46,47]. We implemented the cloud masking algorithm
    within GEE, which enables us to resolve the effects by removing pixels having
    cloud presence to meet crucial data use and can yield a higher composite of the
    satellite imagery. Estimates of drought and other environmental events have received
    enhanced attention over the last 30 years [48]. The visible (VIS) and near-infrared
    (NIR) wavebands calculating Vegetation Health Index (VHI) [48,49,50], Vegetation
    Condition Index (VCI) [51,52], Temperature Condition Index (TCI) [48], Normalised
    Difference Vegetation Index (NDVI) [53], and Normalised Difference Water Index
    (NDWI) [54,55] have been used in designing local drought monitoring techniques
    in the WMS. Vegetation Health Index (VHI) 𝑉𝐻𝐼= 𝛼∗𝑉𝐶𝐼+(1+𝛼)∗𝑇𝐶𝐼;𝑤ℎ𝑒𝑟𝑒 𝛼=0.5 Vegetation
    Condition Index (VCI) 𝑉𝐶𝐼= 𝑁𝐷𝑉 𝐼 𝑐𝑢𝑟𝑟𝑒𝑛𝑡  −𝑁𝐷𝑉 𝐼 𝑚𝑖𝑛 𝑁𝐷𝑉 𝐼 𝑚𝑎𝑥 −𝑁𝐷𝑉 𝐼 𝑚𝑖𝑛 ×100
    Temperature Condition Index (TCI) 𝑇𝐶𝐼= 𝐿𝑆 𝑇 𝑚𝑎𝑥 −𝐿𝑆 𝑇 𝑐𝑢𝑟𝑟𝑒𝑛𝑡 𝐿𝑆 𝑇 𝑚𝑎𝑥 −𝐿𝑆 𝑇 𝑚𝑖𝑛
    ×100 Normalized Difference Vegetation Index (NDVI) 𝑁𝐷𝑉𝐼=  𝑁𝐼𝑅−𝑅𝑒𝑑 𝑁𝐼𝑅+𝑅𝑒𝑑 where,
    LST is the land surface temperature, Red is the red band (0.64–0.67 µm), and NIR
    is the near infrared band (0.85–0.88 µm) of Landsat 8. These have been selected
    as the four indices for maintaining local drought monitoring [56]. An additional
    surface water analysis, the normalized difference water index (NDWI), is used
    to delineate the spatial distribution of open water areas. Rivers and rice fields
    were excluded from the layer using thresholding over multi-temporal and seasonally
    aggregated images. The data we processed include reservoirs, lakes, and other
    water bodies and its temporal changes from surface water data that are stored
    in the system database of the WMS. NDWI = (Green − NIR)/(Green + NIR) where, Green
    is the green band (0.543–0.578 µm) and NIR is the NIR band (0.855–0.875 µm) of
    Sentinel 2. For the current development, S2-based surface water area extraction
    was estimated. Cloud-masking was carried out based on the quality assessment (QA)
    band and cloud-pixel percentage. Metadata images that had less than 20 percent
    pixels with the presence of clouds were selected by filtering out clouds using
    the QA bands. Following the NDWI calculation, thresholding was applied to extract
    pixels with water presence. Rivers and inundated agricultural fields were removed
    using an assigned custom mask. The results of the GEE-based processing are a collection
    of the VHI, VCI, TCI, NDVI, and NDWI anomalies, which are stored in the Google
    cloud and presented in the form of maps at 10 to 30 spatial resolutions and graphical
    images. It provides near real-time monitoring of open water area dynamics and
    agriculture ecosystems, which is very useful to study of the irrigation, early
    warning, natural environmental health, agriculture, and river ecosystems and to
    understand the impact of the spatial distribution of the water stress on vegetation
    and its temporal evolution over longer time periods. 2.1.2. Automated Web Data
    Scraping and Extraction in Python Data scraped from multiple websites cannot be
    directly used by an analysis tool without human intervention. We therefore developed
    a custom web scraper program based on Python that is installed on the back-end
    system of the WMS to automatically read the code of a web page and decode it to
    extract the required data. Since there was a large amount of continuous observational
    data, we decided to use Python [57] in the development of the web scraper program.
    Our decision, therefore, was specifically made for the following reasons: it is
    a free, open-source programming language with a wide active developer base with
    several supporting packages and an application programming interface (API) to
    support the handling of large data, support system development, and connect with
    the preferred database PostgreSQL for data processing pipelines and to connect
    with GEE platform. We added the custom-developed scraper program to log in to
    daily updated public access environmental data, including open water level data
    and groundwater level data, that are disseminated from databases of national and
    international official sources. The web scraping program was oriented to collect
    observational data from the agro-hydrometeorological stations for point locations
    within the national agencies, focusing mainly on rivers, reservoirs, and groundwater
    well data from the LMR, and thereafter the collected data are stored in the WMS
    database in accordance with the design schema attributes and formats. 2.1.3. System
    Database in PostgreSQL Additionally, a back-end relational database management
    system was developed in the PostgreSQL that stores the web scraped data with the
    input format of comma-separated values (CSV; Figure 2). The PostgreSQL (https://www.postgresql.org/
    accessed on 28 October 2021) was selected for the system because it is an advanced
    open-source object relational database management system that applies SQL language.
    The PostGIS extension of the PostgreSQL enhances its capabilities in storage and
    handing spatial datasets [58,59], thus allowing us to store large and sophisticated
    data safely and steadily that help to build the most complex database, run administrative
    tasks, and create integral environments to the WMS. Figure 2. The back-end database
    management system of the WMS. In the current development, the daily web-scraped
    data from each source are stocked in the system database in the web server. The
    data retrieval, including river, reservoir, and groundwater levels, has been processed
    to derive the spatial and temporal structure and the changing characteristics
    of open water areas. Since groundwater level data were from more than 100,000
    points of observations scattered across the tested basin, it was more feasible
    to convert them to a finer regular grid using interpolation techniques for the
    analysis of changes in data over time. We, hence, adopted the inverse distance
    to power or inverse distance weighted (IDW) algorithm [60,61,62,63,64,65], which
    is found to give best results for interpolating the continuous earth’s surface.
    This was executed in Python using GDAL [66] grid functionalities. To calculate
    value Z at each grid node, the following formula was used. 𝑍= ∑ 𝑛 𝑖=1 𝑍 𝑖 𝑟 𝑝
    𝑖 ∑ 𝑛 𝑖=1 1 𝑟 𝑝 𝑖 where 𝑍 𝑖 is a known value at a point i, ri is a distance from
    the grid node to point i, p is weighted power, and n is number of points in Search
    Ellipse. For the current study, p is 3 and both radii of the Search Ellipse are
    5. The resulting interpolated raster is transferred to the Google cloud platform
    to enable its access through the GEE. 2.1.4. Web-Based Water Monitoring System
    We automated user access and the output processes of the WMS through a web-based
    interface to assess a suite of drought characteristics at the multiple timescales,
    from daily to annual, at a 10 to 30 m spatial resolution. The web-based interface
    has been designed to be user-friendly and easily visualize the results, while
    the processing chain is essentially a computational routine in the back-end system.
    Our real-time web-based water monitoring system is accessible over the web at
    the following URL: https://thailand-water-monitor.more-rivers.com/ (accessed date
    on 4 November 2021). Figure 3 depicts the interface with two highlighted parts.
    First (3a), a list of input variables is in the contents pane where users can
    specify a river basin, a time-series for monitoring water and drought conditions,
    a water index, and a vegetation drought index of interest to derive conditions
    of the open water areas and the evolution of droughts. This includes the reservoir
    usable water status, a collection of vegetation indices (VHI, VCI, TCI, and NDVI)
    and the groundwater level changes. The interaction is conducted via the clicking
    of choices, while moving of sliders allows users to see more or less of the underlying
    maps. The transparency, or opacity, of any index can be adjusted from 0% to 100%.
    The more transparent a layer is, the less visible it appears on the resultant
    map and the more visible the other layers appear. By default, the base map is
    0% transparent which means it is fully visible. If users want to focus attention
    on a specific result of the index map layer, they might consider making it fully
    visible and adding transparency to the other layers. Second (3b), the right pane
    is the output window, where it shows an interactive global map for displaying
    spatially varying responses of open water area changes and drought conditions.
    The outputs can also be shown as an interactive time-series plot for the changes
    by switching between the Controls tab and Charts tab in the contents pane. Figure
    3. (a) The right-hand pane contains available input variables of the current version
    of the web-based WMS interface for users. (b) The left-hand pane shows the base
    map and the results of spatiotemporal distribution of drought from simulations
    with the WMS. All figures and time-series plots are the output of the simulated
    spatial and temporal extents of areas vulnerable to potential extreme weather
    events at a selected location and overall statistics, respectively. Users can
    further evaluate the simulated results in the spirit of a data-driven decision-making
    processes. Specifically, they can access the current condition of open water areas
    and droughts, respond to hazards or early warnings more effectively, and provide
    a comparison of the current water and drought events to past events. The users
    can obtain a daily vegetation index map and an analysis of open water area changes,
    and these illustrate the spatial extent and index variation of drought and water
    through the web-based interface of the WMS. The system can be used by decision-makers
    and technical users to assess drought and water warning conditions and facilitate
    the management of actionable drought mitigation measures through near real-time
    monitoring of drought dynamics, in terms of both hydrological and vegetation variables.
    On the back-end system, the web-based application processes users’ inputs and
    triggers a simulation of water and drought assessment at a high spatial resolution.
    It can easily become an overwhelming task if one wants to simulate all indices
    at one time. Instead, in this case, the WMS prepares input files, calls the system
    executable program, and then retrieves outputs for producing spatial and temporal
    maps and time-series plots. It is, therefore, worth nothing that for a large-scale
    basin study with a selection of multiple indices, the latency between users’ inputs
    and output display can be large, due to the longer simulation time. Therefore,
    the WMS was designed to process users’ requests into the input files and quickly
    retrieve outputs after simulation for displaying results on the front-end user
    interface. 2.2. Testing the WMS in the Case Study Area Here, we present a case
    study in which we applied the WMS to Thailand’s river basins (Figure 4a). The
    case study provides a lens for the understanding of the WMS’s performance and
    reliability through the practical experience of functionalities, computation time,
    the simulated results, and the potential development for additional functionalities
    to deepen and broaden the results in the future. The results and discussions of
    the case study are presented in the next section, focusing on the highlighted
    application and utility of the WMS. Figure 4. (a) Map of the 25 major basins in
    Thailand and the territory of the Lower Mekong Basin. (b) Map of the Chi River
    Basin in northeastern Thailand reprinted from the web-based WMS interface. Specifically,
    the WMS was tested in the Chi River Basin (Figure 4b), which is located in northeastern
    Thailand. The basin has a population of around 6.6 million people in the total
    land area of 49,131.22 square kilometers (km2). It is composed of mountainous
    terrain where it forms the border between the Mun Basin in the south, the Mekong
    and Mun Basins in the east, and the Pasak watershed in the west. The topographic
    terrain varies between 170 m and 300 m with mountain ranges between 500 m and
    1000 m, situated between 15°30′ and 17°30′ N latitude and 101°30′ and 104°30′
    NE longitude and influenced by the tropical monsoon. The annual average temperature
    is 26.9 °C, and the mean annual precipitation is approximately 1170 millimeters
    (mm), increasing from west to east with a monthly average of 2.3–243.7 mm. Most
    of the basin population engages in agriculture on the 60% arable land where there
    are rice fields (41%), forest (31%), urban (2.9%), water bodies (2.5%) and other
    lands (3.5%). Rice farming is found in the middle and downstream of the Chi River
    Basin. Most rainfed rice is grown during the rainy season (June-December) and
    the second crop of rice is commonly planted under irrigation during the dry season
    (January-April). Cassava and sugarcane are harvested all year. The main cassava
    growing region is in the southwest and north basin, while sugarcane is produced
    in the northwestern, north, and southwest basins. The Chi River Basin is naturally
    prone to droughts and floods, due to the influence of the quite irregular and
    unreliable rainfall, and that makes the basin vulnerable to such hazards. The
    basin has experienced extensive rice growing and spatial land cover changes with
    a rapid urban transformation. These changes have resulted in the increased competition
    of water resources in different sectors. Climate change has already happened at
    a much faster rate and its devastating impacts have unintended consequences on
    the local natural systems and people living in poor and marginal conditions. Thus,
    the lack of a leading edge of knowledge on the local vulnerability and exposures
    to climate change, the observed impacts, future climate risks, and the associated
    potential limits adaptation and management at the sub-national levels [67,68,69].
    2.3. Correlation Analysis of the Simulated Drought Indices To compare how well
    the drought indices can assess the near real-time water dynamics and drought evolution
    in the present, we used two approaches. First, we snapped the simulated drought
    indices of the NDVI, VHI, VCI, and TCI to the same extent of the tested Chi River
    Basin. Every data layer contained different values of active pixels representing
    the tested basin. Within the GEE environment, we generated 300 random points across
    the Chi River Basin (Figure 5) and marked them as the agriculture or non-agriculture
    for training points, based on the LandCover data [70]. Areas with no clear determination
    were omitted from the correlation coefficient assessments. These points were further
    used to extract the pixel values of the drought indices stored in the GEE assets.
    For datasets in the database, a spatial query was executed to extract values of
    the groundwater level, reservoir water volume, and dam water volume. The values
    of the same point locations from different drought indices and database queried
    data were aggregated in a tabular format, providing simultaneous values of parameters,
    such as point number, date time, NDVI, VHI, etc. These data were aggregated to
    a 16-day time steps for each date stamp (n = 24) at the basin. Figure 5. Training
    data of the 300 random points across the tested Chi River Basin. As the second
    approach, we used the ggpairs function of the GGally R Package (https://cran.r-project.org/web/packages/GGally/index.html
    accessed on 10 January 2022) to evaluate the correlations between the groundwater
    level, reservoir water volume, and dam water volume data and the corresponding
    values of each index. A matrix of twenty-eight scatter plots was drawn and the
    Pearson correlation coefficients were calculated for visualizing the intercomparison
    between the eight variables at bi-weekly scale (16-days composite data) in the
    tested basin. Due to the first-year implementation of the WMS, we only sought
    to test whether vegetation greenness varied with groundwater level, reservoir
    water volume, and dam water volume from 1 January 2021 to 31 December 2021 across
    the Chi River Basin. 3. Results As Figure 6 shows, there was strong positive correlation
    between VHI with VCI (r = 0.908), with TCI (r = 0.802), and with NDVI (r = 0.772)
    for 2021. This implies that VHI is considered a good indicator, as it provides
    better comprehension between the relative effects of temperature changes (TCI)
    and vegetation responses (VCI). Figure 6 also demonstrates a positive correlation
    with a high statistical significance between the dam and reservoir water volume
    variations. The overall positive correlations were generally stronger between
    VHI and the changes of annual reservoir water volumes (RID_Resv; r = 0.498) than
    EGAT dam water volumes (r = 0.442) and RID_Dam water volumes (r = 0.399). The
    spatiotemporal patterns were very similar to the correlation obtained with the
    VCI, which had higher positive significance with the changes of annual RID_Resv
    (r = 0.501) than EGAT dam water volumes (r = 0.483) and RID_Dam water volumes
    (0.471). Generally, NDVI showed a statistically significant positive relationship
    with the surface water volume datasets of EGAT (r = 0.575), RID_Dam (r = 0.566),
    and RID_Resv (r = 0.520), accordingly. These demonstrate the advantage of using
    NDVI over the other drought indices, due to its capacity in identifying and exploring
    the variations and changes of surface water and vegetation. Figure 6. Correlation
    coefficient assessments of the drought indices with groundwater level, reservoir
    water volume, and dam water volume in the Chi River Basin in 2021. The scatter
    plots are the average of the outputs of the WMS, based on a 16-day time step.
    *, **, and *** denote statistically significant correlation at the p ≤ 0.05, ≤
    0.01, and ≤ 0.001 levels of probability, respectively. In contrast to the surface
    water changes, groundwater level (GW) had a statistically significant negative
    correlation with NDVI (r = −0.355), TCI (r = −0.391), VCI (r = −0.504), and VHI
    (r = −0.534). This means that a further analysis with long time-series of in-situ
    data and hydrologically and meteorologically sensitive parameters could help in
    forging their intercomparison. Figure 7 presents the WMS simulation results, showing
    the observational data (a) and the multi-temporal trend of the drought indices
    for the dry season in the Chi River Basin (b–f). To reduce the wait time for the
    WMS users to switch between datasets in real time to intercompare, datasets are
    preloaded, based on the user query. This usually takes 4 to 7 s, depending on
    the number of user requests and total number of active users on the application.
    The data points presented in (a) are the total number of reservoirs and dams sparsely
    located across the Chi River Basin and operated by the national departments in
    Thailand, named specifically the Electricity Generating Authority of Thailand
    (EGAT), the Royal Irrigation Departments (RID) and the international government
    agency the Mekong River Commission (MRC). Once these data points appear and upon
    hovering over a data point on the display map, it shows information on the station
    name, the usable water volume in million cubic meters (MCM), the storage capacity
    (MCM), and the percent (%) of usable water volume. Figure 7. The simulated outputs
    of (a) Usable water storage capacity over time, High resolution drought monitoring
    information based on (b) VHI, (c) VCI, (d) TCI, and (e) NDVI; and (f) Spatial
    groundwater-surface analysis based on IDW in the tested basin. The monitoring
    was conducted in the drier season between 28 January 2021, and 30 April 2021.
    The three bars on the left corner of the contents pane provide a reference for
    usable water (%; left), drought index variation (middle), and quantitative changes
    in groundwater levels (right). Across most of the Chi River Basin, drought is
    one of the major natural disasters affecting dimensional economies. The agriculture
    and its products of this basin play an important role for food security in the
    country, and this agricultural food production is highly affected by drought,
    which is associated with water deficits. It depends mostly on the arrival time
    and location of the Intertropical Convergence Zone (ITCZ). Overall, in (b–e),
    the results of the 4-month monitoring maps obtained from the 16-day composite
    data show that the basin was not suffering severe agricultural drought during
    the 2021 dry season when it was evaluated by scientifically accepted thresholds
    (scale from 0 to 1; of which >0.5 demonstrates no drought phenomena) [71,72].
    The 2021 dry season observed a moderate agricultural drought period across the
    basin, where the bi-weekly VHI values were averaged over each of the total provinces
    in the Chi River Basin with a range between 0.32 and 0.43 (b). This responded
    to the varying color ramps of the data points at a specific location, for which
    red is the usable water surplus and brown is the water deficits. As (c) shows,
    the VCI did not show vegetation water stress in most regions, and only slightly
    below normal vegetation conditions (VCI ranged between 0.37 and 0.66) at the end
    of April 2021 were observed in the northwestern and southeastern Chi River Basin,
    mostly due to temperature stress (see also the TCI spatial distribution map in
    (d). Following the consideration, the largest TCI values during the 2021 dry season
    were calculated from the 16-day composite data of the 15 weeks. It was noticeable
    that the vegetation amount developed healthily during the dry season with more
    favorable weather (TCI valued between 0.59 and 0.80) for crop growth and successful
    farming. The main zones included vary favorable weather in the southwestern, north,
    and northeastern basin. Similarly, no disturbances were observed on the spatial
    distribution of the NDVI productivity, showing a good NDVI coverage range. In
    (e), the NDVI values ranged between 0.56 and 0.78. These indices characterizing
    VCI (moisture), TCI (thermal), VHI (vegetation health) and NDVI (vegetation condition)
    demonstrated healthy vegetation, which was associated with favorable moisture
    and thermal conditions, corresponding with a study showing no 2020/21 drought
    in Thailand so far. The interpolation map in (f) is displayed with a brown to
    blue color ramp map, which indicates deep to shallow groundwater areas. This result
    was obtained by using the complete sounding groundwater level data in the basin
    using IDW. It is visually evident that the spatial distribution of daily groundwater
    levels was located around the central parts of the Chi River Basin. These results
    are also given in the form of time-series plots, as shown in Figure 8. The Charts
    tab in the contents pane (a) controls the opening of the output window and takes
    users to multiple time-series plots of the open water areas and vegetation water
    stress estimates. The analytics in the graphical image make it easier for users
    to observe and gain a broad understanding of the statistics of the drought monitoring
    information and the multi-temporal trend of the surface waters in different point
    or pixel locations. However, it is worth nothing that the NDWI values obtained
    from the daily surface water data are only presented in the form of a time-series
    plot under the Usable Water plot (b), while ground water IDW interpolation, which
    is presented in maps, is yet included and displayed in the Vegetation Index plot
    (c). Figure 8. (a) Time-series comparison graph between observational data of
    the RID reservoir water volume, RID dam water volume, and EGAT dam water volume
    for 2021, and (b) between drought simulation of VHI, VCI, TCI, and NDVI indices.
    (c) The simulated results of high-resolution spatiotemporal map derived from the
    WMS. 4. Discussion The WMS has marked the first attempt in the development of
    near real-time monitoring system that integrates multi-source observational data
    scraping, GEE cloud computing, remote sensing technology, and user intuitive feedback
    for the monitoring of water changes and drought evolution in the LMR. This development
    has also laid a solid foundation for integrating accelerating progress on the
    SDGs. The methodological approach is implemented in an automated processing chain,
    which makes the products available through a dynamic web-based interface. We have
    concluded that there is no relevant research on the combination of water and drought
    monitoring at a 10–30 m spatial resolution in the region and it is still very
    limited in most parts of the world [36]. Moreover, the methodological approach
    for treating the establishing goals is believed to be the innovative aspect of
    the research, with potential scalability and operationality to other case studies.
    The promotion of this conceptualized methodology for an open-access high-resolution
    near real-time drought monitoring web-based platform is considered a merit of
    the current research and future development work. 4.1. Monitoring Information
    and Potential Limitations of Drought and Water Indices The WMS has been developed
    for drought simulation and changes in open water area information and offered
    several remotely sensed agricultural drought indices (VHI, VCI, TCI, NDVI, and
    NDWI) at a 10–30 m spatial resolution in the data poor region of the LMR (Figure
    7). However, the current development of the study has not yet offered near real-time
    drought monitoring information using hydrological and meteorological drought indices.
    These could limit the capacity of drought simulation and incompletely characterize
    and monitor the spatial and temporal patterns of drought incidences in depth [71].
    Different indices for drought monitoring have their limitations. For instance,
    NDVI is very sensitive to the atmospheric scattering effects directly on the earth’s
    surface [73]. NDWI has, thus, been suggested to use as a complementary index of
    open water area monitoring to in situ monitoring data and NDVI that can help improve
    the understanding of its useful and reduced limitations, giving better results
    and reducing the sensitivity of vegetation stress and open water area estimates
    [73,74,75]. Several different simulated drought indices, hence, provide different
    index variations, varying with the temporal and spatial patterns and revealing
    better drought characteristics [76,77]. 4.2. Practicality and Legality of Web
    Data Scraping Here, the web data scraper program proved very useful for delivering
    big data and facilitating the automatic harvesting of a plethora of environmental
    data [25,42], i.e., river depths, groundwater levels, reservoir and dam waters,
    on a daily basis, publicly and constantly published on the internet. Although
    the web scraping stands out as a significant advantage over traditional copy and
    paste approach by leveraging multi-source data and reducing task duplication,
    one of the bottlenecks in applying this approach is that it is not always easy
    to keep track of website structure of the national or international official sources.
    Each website has a particular structure, which may be subject to changes, i.e.,
    graphical user interface (GUI), anytime, and that directly affected the scraping
    process of the program. Consequently, the back end of the WMS often requires few
    lines of code for tackling such changes and is periodically updated. This issue
    would be solved if there was a collaborative agreement for data or service sharing
    with the national and or international official sources to grant direct access
    to their database via HTTPs or FTP [78]. Controversially, the web data scraping
    approach remains a topic of debate and is strictly restricted in some parts of
    the world, despite environmental data being publicly provided on the internet.
    It is, therefore, essential to check for licensing or copyright restrictions on
    the extracted data and to share the custom-made scraper code with the scientific
    community. We, therefore, will publish the codes in Github so that others can
    discover, study, and build on what we have done. This was one of the establishing
    goals for the scalability of the WMS development in other regions. 4.3. Output
    Validation The correlation matrices revealed that dam and reservoir water volumes
    were positively correlated with the drought indices, but the overall TCI correlation
    values did not give a strong indication of the changes of surface water volumes
    and groundwater levels. This indicates the overall accuracy and validity of the
    WMS performance in multiple ways. First, the observational data we web-scraped
    from the national and international official sources can guide the appropriate
    remote sensing indices to best represent current and past events. Second, spatiotemporal
    distribution mapping services help the monitoring from point-based to region-based.
    Third, long-term series of hydrological and meteorological data can enrich the
    short time-series of remotely sensed data through simulation [79,80]. In our assessment,
    the WMS supplements existing knowledge of drought coherence in the LMR by assessing
    and providing quantitatively spatiotemporal variations (10–30 m) of local surface
    water changes and local drought evolution. Moreover, the WMS also highlights that
    the gridded drought datasets can be a reasonable alternative to observational
    station data for surface water change and drought assessments where observed data
    is not readily available. There was a negative correlation between the different
    drought indices, NDVI, TCI, VCI, VHI, and groundwater levels. This suggests that
    further investigation and more detailed analyses of the influence of different
    drought types on groundwater condition should consider other in-situ factors,
    such as precipitation, soil moisture, wind speed, temperature, clouds, vegetation
    coverage, and other weather variables. The particular attention should be paid
    to the physical properties of land cover in the adjacent areas of the groundwater
    wells, the hydraulic properties of aquifers, and human interventions. Comprehensive
    data and information on various parameters of the groundwater drought are needed
    for operational decision-making and planning, policy development, and infrastructure
    design at national and basin levels [21]. 4.4. Limitations of Optical Remote Sensing
    Imageries In the case application, there were gaps in the spatiotemporal information
    appearing in some parts of the Chi River Basin, due to a cloud contamination issue.
    This is especially a known issue for optical remote sensing imageries, such as
    Landsat 8 and Sentinel 2. Specifically, these imageries are subject to data loss
    due to cloud coverage hindering the retrieval of spatiotemporal information when
    using them from the visible to infrared optical spectrum [80,81,82,83]. It is,
    therefore, necessary to detect and remove clouds while pre-processing of the imageries
    to avoid inclusion of cloud-contaminated composite pixels into image processing
    [84]. Strong seasonal changes of rainfall and atmospheric patterns is a dominant
    feature of the intertropical convergence zone (ITCZ) in the LMR and leads to the
    formation of different cloud patterns throughout the year [85,86]. This, consequently,
    has a high determining impact in the region to acquire cloud-free imageries. Hence,
    it is essential to remove cloudy pixels from the imageries to have a reasonably
    consistent coverage over a location, preserving a non-cloudy patch of image while
    there is loss of data in the other areas. This is particularly exemplified in
    the monsoon months (June–November) when entire scenes are covered by clouds, rendering
    images useless for the generation of remote sensing indices and causing a gap
    in the analysis. It is a caveat that must considered when building an operational
    system. There have been few effective approaches of reducing the cloud issue when
    using Landsat-Sentinel 2 fusion or Optical-SAR fusion imageries, which have different
    overpass time-dates and, thus, can increase the number of cloud-free pixels [86,87,88].
    4.5. User Interface and Future Work At the moment, actual processing and visualization
    of vegetation water stress simulation within the developed WMS is assembled in
    a very simple and a user-friendly interface (i.e., sliders, study basin, vegetation
    index, etc.; see Figure 3). WMS allows user feedbacks on interface inputs and
    the core functions for creating drought and water monitoring information that
    allow the participation of users (mainly focusing on water managers and decision-makers),
    so they can evaluate the system performance and provide feedback from their direct
    experience. This is, thus, the beta version WMS, which is a fully functional system
    and will evolve into a fully designed graphical user interface in the future version.
    4.6. Utilization and Maintenance of the WMS There is a continuous endeavor to
    create a resourceful WMS, with the goal of enhancing local vegetation water stress
    monitoring and generating timely and accurate drought information and characteristics
    of water dynamics. This development is highly scalable and provides tools, databases,
    and networking services that give government agencies an unprecedented opportunity
    to harness useful, real-time information about water and drought simulation. However,
    the government often lack the dedicated expertise and resources to collect, analyze,
    and create scientific information or products that can inform decision-making
    processes and assist multi-level policymakers to navigate the potential risks
    associated with water changes and drought evolution. Thus, the products are available
    to different interest groups for visualization and exploration [21,31]. The practical
    solution would be engaging the government with a team of developers in the development
    process. To utilize WMS and interpret its output, user requires a good knowledge
    about the variables in different drought algorithms, for instance, the correlation
    of vegetation and temperature dynamics during the annual cycle (NDVI) and the
    contributing factors of temperature and soil saturation affecting vegetation health
    (VCI and TCI) [16,48,56,75,76], that will help gain a more thorough understanding
    of the bio-physical processes and their relationships, causing potential impacts
    of vegetation water stress. 4.7. Supporting Water Management Decisions and the
    SDGs The WMS of this paper validated the usefulness of multi-source data and advanced
    digital technology for monitoring water dynamics and assessing vegetation water
    stress at the local scale. The WMS currently provides more readily and simplified
    drought simulation information about the complex and slow evolution of drought
    phenomena at a 10–30 m spatial resolution. The WMS can be used in a participatory
    process in order to improve effective communication and transparency with end-user
    decision makers, water managers, and the general public. The simulation information
    of the WMS can be taken as a primary analysis of drought and water level changes.
    Further, it can be used to quantify potential changes and their cascading impacts
    in agricultural production, irrigation, and water resources management. This level
    of information provides changes in scale and, over time, guides ways of dealing
    with an alarming situation, such as drought, flood, irrigation scheduling, land
    use planning, and crop management. This is considered to be an innovative methodological
    framework that enables it to fully explore the feedback of human decisions on
    the environmental dynamics and vice versa. The drought simulation information
    can be used to establish benchmarks or trigger points as a quantitative basis
    for making critical decisions, to design disaster risk reduction policies, and
    to monitor the effectiveness of the policies. It will also be important to have
    an indicator for preparedness and recovery time fitted in to the local environments.
    Given these demonstrations, they can enhance the methodological and developmental
    framework to support evidence-based policy making towards achieving the SDGs,
    formalizing coordinated multi-source observational data and digital technologies
    (remote sensing, GEE cloud computing, and user interface) for supporting national
    and local governments to improve the quality of their decision-making, and assisting
    the governments to increase efficiency and effectiveness in drought and water
    resource management. 5. Conclusions This paper shows that we have begun the development
    of the high-resolution drought monitoring system to provide evidence-based information
    to support decision-makers at the local scales (10–30 m). The WMS outputs can
    help establish or prepare proactive measures for water, agriculture, and drought
    management strategies on a near real-time basis. Using the developed WMS, local
    drought evolution and changes of small-scale river basins (<10,000 km2) can be
    practically assessed within 2 weeks. The results obtained from the WMS drought
    indices are useful for the primary analysis and can be further used to study different
    drought types and monitor the effects of droughts on vegetation growth (NDVI),
    vegetation moisture condition (VCI), land surface temperature (TCI), and vegetation
    health (VHI). This is a vital step for local food security, land and water management,
    and beyond. We anticipate that the beta version of the current WMS development
    will bring more progress in the application of high-resolution operational and
    research communities. We will continue to enhance the performance of water monitoring
    and drought hazards at the high spatial resolution, improve graphical visualization
    in the front-end interface, increase functionalities in the back- and front-end
    systems, and better assess spatial and temporal drought monitoring index variations.
    This newly developed WMS is geared toward the early warning of water and agricultural
    development and progress on the SDGs. Utilization of digital innovation and capacity
    development will be aggressively pursued with target users in the tested basin.
    The WMS will also widen the abilities of decision-makers to monitor and foresee
    extreme weather events earlier and with high spatial accuracy. The new high-resolution
    capacity of the WMS enables us to help with precision water and agriculture and
    the ability to move from the problem of detection to the mitigation of negative
    consequences due to water and drought anomalies. Continuously advancing digital
    technologies (GEE, remote sensing, and data sciences) will strengthen the ability
    to estimate the potential effectiveness of applied technology to optimize adverse
    impacts in a more proactive way. Author Contributions Conceptualization, O.-u.P.;
    methodology, O.-u.P., D.B. and T.F.S.S.; software D.B.; validation, O.-u.P. and
    D.B.; formal analysis, O.-u.P. and D.B.; investigation, O.-u.P. and D.B.; resources,
    O.-u.P. and D.B.; data curation, O.-u.P. and D.B.; writing—original draft preparation,
    O.-u.P.; writing—review and editing, O.-u.P., D.B., T.F.S.S. and C.K.; visualization,
    O.-u.P. and D.B.; supervision, O.-u.P. and C.K.; project administration, O.-u.P.
    and D.B.; funding acquisition, O.-u.P. and D.B. All authors have read and agreed
    to the published version of the manuscript. Funding The “an open source toolbox
    for integrated monitoring and assessment of droughts in developing countries”,
    Stockholm Environment Institute, Seed and Innovation Fund’s project number 10030500”
    funded the development of the WMS beta version and financed the preparation of
    the manuscript (June 2020–October 2021). Institutional Review Board Statement
    Not applicable. Informed Consent Statement Not applicable. Data Availability Statement
    Not applicable. Acknowledgments The authors thank the Stockholm Environment Institute
    (SEI) for their financial and administration support throughout the implementation
    of the project and the WMS development. We are grateful to the SEI GRC peers and
    the SEI Asia Centre seniors for comments and suggestions. We sincerely thank the
    project team for this successful development of the WMS beta version. Conflicts
    of Interest The authors declare no conflict of interest. References Singh, A.;
    Mishra, S.; Hoffpauir, R.J.; Marsh Lavenue, A.; Deeds, N.E.; Jackson, C.S. Final
    Analyzing Uncertainty and Risk in the Management of Water Resources for the State
    of Texas; Texas Water Development Board: Austin, TX, USA, 2010. [Google Scholar]
    Lovgren, S. Mekong River at its Lowest in 100 Years, Threatening Food Supply.
    Available online: https://www.nationalgeographic.com/environment/article/mekong-river-lowest-levels-100-years-food-shortages
    (accessed on 4 October 2021). Manorom, K. Thailand’s Big Water Challenge. Diplomat
    2020. Southeast Asia. Available online: https://thediplomat.com/2020/03/thailands-big-water-challenge/
    (accessed on 21 November 2021). Arunmas, P.; Apisitniran, L.; Kasemsuk, N. Falling
    water levels deliver a taste of things to come. Bangkok Post Newspaper 2020, Business.
    Available online: https://www.bangkokpost.com/business/1834279/falling-water-levels-deliver-a-taste-of-things-to-come
    (accessed on 21 November 2021). Saigoneer Serious Drought Expected to Hit Lower
    Mekong Countries through Early 2020. Available online: https://saigoneer.com/asia-news/17837-serious-drought-expected-to-hit-lower-mekong-countries-through-early-2020
    (accessed on 4 October 2021). Taylor, M. Severe drought predicted for Thailand
    and neighbouring countries | The Thaiger. 2019. Available online: https://thethaiger.com/
    (accessed on 30 October 2021). Polpanich, O.; Krittasudthacheewa, C.; Pumchawsaun,
    P.; Piman, T. Enhancing Data-Sharing Mechanism in the Mekong-Lancang River Basin:
    Opportunities and Challenges; Stockholm Environment Institute: Bangkok, Thailand,
    2019. [Google Scholar] Friend, R.; Thinphanga, P. Urban Water Crises under Future
    Uncertainties: The Case of Institutional and Infrastructure Complexity in Khon
    Kaen, Thailand. Sustainability 2018, 10, 3921. [Google Scholar] [CrossRef] [Green
    Version] Van Loon, A.F.; Van Lanen, H.A.J. Making the distinction between water
    scarcity and drought using an observation-modeling framework. Water Resour. Res.
    2013, 49, 1483–1502. [Google Scholar] [CrossRef] Li, Y.; Lu, H.; Yang, K.; Wang,
    W.; Tang, Q.; Khem, S.; Yang, F.; Huang, Y. Meteorological and hydrological droughts
    in Mekong River Basin and surrounding areas under climate change. J. Hydrol. Reg.
    Stud. 2021, 36, 100873. [Google Scholar] [CrossRef] United Nations Office for
    Disaster Risk Reduction (UNDRR). GAR Special Report on Drought 2021; UNDRR: Geneva,
    Switzerland, 2021. [Google Scholar] Yuan, L.; He, W.; Liao, Z.; Degefu, D.M.;
    An, M.; Zhang, Z.; Wu, X. Allocating Water in the Mekong River Basin during the
    Dry Season. Water 2019, 11, 400. [Google Scholar] [CrossRef] [Green Version] Payus,
    C.; Ann Huey, L.; Adnan, F.; Besse Rimba, A.; Mohan, G.; Kumar Chapagain, S.;
    Roder, G.; Gasparatos, A.; Fukushi, K. Impact of Extreme Drought Climate on Water
    Security in North Borneo: Case Study of Sabah. Water 2020, 12, 1135. [Google Scholar]
    [CrossRef] Mekong River Commission Secretariat (MRCS) Landmark MRC-China’s Joint
    Study Approved for Implementation, New Indicative Ending Date for Sanakham Dam
    Set. Available online: https://www.mrcmekong.org/news-and-events/news/pr-20210921/
    (accessed on 20 October 2021). ASEAN. ASEAN Regional Plan of Action for Adaptation
    to Drought 2021–2025; ASEAN Secretariat: Jakarta, Indonesia, 2021; ISBN 978-623-6945-64-3.
    [Google Scholar] World Meteorological Organization (WMO); Global Water Partnership
    (GWP). Benefits of Action and Costs of Inaction: Drought Mitigation and Preparedness-a
    Literature Review (N. Gerber and A. Mirzabaev); Integrated Drought Management
    Programme (IDMP): Stockholm, Sweden, 2017. [Google Scholar] Chen, W.; He, B.;
    Ma, J.; Wang, C. A WebGIS-based flood control management system for small reservoirs:
    A case study in the lower reaches of the Yangtze River. J. Hydroinformatics 2016,
    19, 299–314. [Google Scholar] [CrossRef] Jung, Y.; Shin, Y.; Won, N.-I.; Lim,
    K.J. Web-Based BFlow System for the Assessment of Streamflow Characteristics at
    National Level. Water 2016, 8, 384. [Google Scholar] [CrossRef] [Green Version]
    Zhang, D.; Chen, X.; Yao, H. Development of a Prototype Web-Based Decision Support
    System for Watershed Management. Water 2015, 7, 780–793. [Google Scholar] [CrossRef]
    Nam, W.-H.; Choi, J.-Y.; Yoo, S.-H.; Engel, B.A. A Real-Time Online Drought Broadcast
    System for Monitoring Soil Moisture Index. KSCE J. Civ. Eng. 2012, 13, 357–365.
    [Google Scholar] [CrossRef] Leb, C. Data Innovations for Transboundary Freshwater
    Resources Management: Are Obligations Related to Information Exchange Still Needed?
    Brill Res. Perspect. Int. Water Law 2020, 4, 3–78. [Google Scholar] [CrossRef]
    Mcdonald, S.; Mohammed, I.; Bolten, J.; Pulla, S.; Meechaiya, C.; Markert, A.;
    Nelson, J.; Srinivasan, R.; Lakshmi, V. Web-based decision support system tools:
    The Soil and Water Assessment Tool Online visualization and analyses (SWATOnline)
    and NASA earth observation data downloading and reformatting tool (NASAaccess).
    Environ. Model. Softw. 2019, 120, 104499. [Google Scholar] [CrossRef] [PubMed]
    Nijssen, B.; Shukla, S.; Lin, C.; Gao, H.; Zhou, T.; Ishottama; Sheffield, J.;
    Wood, E.F.; Lettenmaier, D.P. A Prototype Global Drought Information System Based
    on Multiple Land Surface Models. J. Hydrometeorol. 2014, 15, 1661–1676. [Google
    Scholar] [CrossRef] Savic, D.A.; Morley, M.S.; Khoury, M. Serious Gaming for Water
    Systems Planning and Management. Water 2016, 8, 456. [Google Scholar] [CrossRef]
    [Green Version] Sazib, N.; Mladenova, I.; Bolten, J. Leveraging the Google Earth
    Engine for Drought Assessment Using Global Soil Moisture Data. Remote Sens. 2018,
    10, 265. [Google Scholar] [CrossRef] [Green Version] Shrestha, M.; Matheswaran,
    K.; Polapanich, O.-P.; Piman, T.; Krittasudthacheewa, C. A Stakeholder-Centric
    Tool for Implementing Water Management Strategies and Enhancing Water Cooperation
    (SDG 6.5) in the Lower Mekong Region. In Water, Climate Change, and Sustainability;
    Wiley Online Books; Pandey, V.P., Shrestha, S., Wiberg, D., Eds.; John Wiley &
    Sons, Inc.: Hoboken, NJ, USA, 2021; pp. 239–256. ISBN 9781119564522. [Google Scholar]
    Van Hoek, M.; Zhou, J.; Jia, L.; Lu, J.; Zheng, C.; Hu, G.; Menenti, M. A prototype
    web-based analysis platform for drought monitoring and early warning. Int. J.
    Digit. Earth 2020, 13, 817–831. [Google Scholar] [CrossRef] Zhang, D.; Fu, W.;
    Lin, Q.; Chen, X. WOF-SWAT: A Web-Based Open-Source Framework for Investigating
    the Hydrological Impacts of Climate Change and Human Activities Through Online
    Simulation and Visualization of SWAT Models. ISPRS Int. J. Geo-Inf. 2019, 8, 368.
    [Google Scholar] [CrossRef] [Green Version] Cammalleri, C.; Barbosa, P.; Vogt,
    J. V Evaluating simulated daily discharge for operational hydrological drought
    monitoring in the Global Drought Observatory (GDO). Hydrol. Sci. J. 2020, 65,
    1316–1325. [Google Scholar] [CrossRef] Sheffield, J.; Wood, E.F.; Pan, M.; Beck,
    H.; Coccia, G.; Serrat-Capdevila, A.; Verbist, K. Satellite Remote Sensing for
    Water Resources Management: Potential for Supporting Sustainable Development in
    Data-Poor Regions. Water Resour. Res. 2018, 54, 9724–9758. [Google Scholar] [CrossRef]
    [Green Version] Polpanich, O.; Ghilmire, U.; Chuthong, J.; Piman, T. Country Modelling
    Baseline Data Report: Regional Survey of Water Modelling Capacity and Policy Impacts;
    Stockholm Environment Institute and Food and Agriculture Organization: Bangkok,
    Thailand, 2021. [Google Scholar] Du, T.L.T.; Bui, D.D.; Nguyen, M.D.; Lee, H.
    Satellite-Based, Multi-Indices for Evaluation of Agricultural Droughts in a Highly
    Dynamic Tropical Catchment, Central Vietnam. Water 2018, 10, 659. [Google Scholar]
    [CrossRef] [Green Version] Saha, T.R.; Shrestha, P.K.; Rakovec, O.; Thober, S.;
    Samaniego, L. A drought monitoring tool for South Asia. Environ. Res. Lett. 2021,
    16, 54014. [Google Scholar] [CrossRef] Wang, X.; Xie, H. A Review on Applications
    of Remote Sensing and Geographic Information Systems (GIS) in Water Resources
    and Flood Risk Management. Water 2018, 10, 608. [Google Scholar] [CrossRef] [Green
    Version] Jung, H.C.; Kang, D.-H.; Kim, E.; Getirana, A.; Yoon, Y.; Kumar, S.;
    Peters-lidard, C.D.; Hwang, E. Towards a soil moisture drought monitoring system
    for South Korea. J. Hydrol. 2020, 589, 125176. [Google Scholar] [CrossRef] Kooistra,
    L.; Bergsma, A.; Chuma, B.; de Bruin, S. Development of a Dynamic Web Mapping
    Service for Vegetation Productivity Using Earth Observation and in situ Sensors
    in a Sensor Web Based Approach. Sensors 2009, 9, 2371–2388. [Google Scholar] [CrossRef]
    [Green Version] Rojas, O.; Vrieling, A.; Rembold, F. Assessing drought probability
    for agricultural areas in Africa with coarse resolution remote sensing imagery.
    Remote Sens. Environ. 2011, 115, 343–352. [Google Scholar] [CrossRef] Trnka, M.;
    Hlavinka, P.; Možný, M.; Semerádová, D.; Štěpánek, P.; Balek, J.; Bartošová, L.;
    Zahradníček, P.; Bláhová, M.; Skalák, P.; et al. Czech Drought Monitor System
    for monitoring and forecasting agricultural drought and drought impacts. Int.
    J. Climatol. 2020, 40, 5941–5958. [Google Scholar] [CrossRef] Aadhar, S.; Mishra,
    V. High-resolution near real-time drought monitoring in South Asia. Sci. Data
    2017, 4, 170145. [Google Scholar] [CrossRef] [Green Version] Cumbie-Ward, R.V.;
    Boyles, R.P. Evaluation of a High-Resolution SPI for Monitoring Local Drought
    Severity. J. Appl. Meteorol. Climatol. 2016, 55, 2247–2262. [Google Scholar] [CrossRef]
    Zhang, X.; Chen, N.; Sheng, H.; Ip, C.; Yang, L.; Chen, Y.; Sang, Z.; Tadesse,
    T.; Lim, T.P.Y.; Rajabifard, A.; et al. Urban drought challenge to 2030 sustainable
    development goals. Sci. Total Environ. 2019, 693, 133536. [Google Scholar] [CrossRef]
    Gomes, V.C.F.; Queiroz, G.R.; Ferreira, K.R. An Overview of Platforms for Big
    Earth Observation Data Management and Analysis. Remote Sens. 2020, 12, 253. [Google
    Scholar] [CrossRef] [Green Version] Chander, G.; Markham, B.L.; Helder, D.L. Summary
    of current radiometric calibration coefficients for Landsat MSS, TM, ETM+, and
    EO-1 ALI sensors. Remote Sens. Environ. 2009, 113, 893–903. [Google Scholar] [CrossRef]
    Fletcher, K. Sentinel-2: ESA’s Optical High-Resolution Mission for GMES Operational
    Services (ESA SP-1322/2 March 2012); European Space Agency: Leiden, The Netherlands,
    2012. [Google Scholar] Williamson, A.G.; Banwell, A.F.; Willis, I.C.; Arnold,
    N.S. Dual-satellite (Sentinel-2 and Landsat~8) remote sensing of supraglacial
    lakes in Greenland. Cryosph. 2018, 12, 3045–3065. [Google Scholar] [CrossRef]
    [Green Version] Gorelick, N.; Hancher, M.; Dixon, M.; Ilyushchenko, S.; Thau,
    D.; Moore, R. Google Earth Engine: Planetary-scale geospatial analysis for everyone.
    Remote Sens. Environ. 2017, 202, 18–27. [Google Scholar] [CrossRef] Mutanga, O.;
    Kumar, L. Google Earth Engine Applications. Remote Sens. 2019, 11, 591. [Google
    Scholar] [CrossRef] [Green Version] Kogan, F.N. Global Drought Watch from Space.
    Bull. Am. Meteorol. Soc. 1997, 78, 621–636. [Google Scholar] [CrossRef] Kogan,
    F.N. Operational Space Technology for Global Vegetation Assessment. Bull. Am.
    Meteorol. Soc. 2001, 82, 1949–1964. [Google Scholar] [CrossRef] Kogan, F.N. Remote
    sensing of weather impacts on vegetation in non-homogeneous areas. Int. J. Remote
    Sens. 1990, 11, 1405–1419. [Google Scholar] [CrossRef] Kogan, F.N. Droughts of
    the Late 1980s in the United States as Derived from NOAA Polar-Orbiting Satellite
    Data. Bull. Am. Meteorol. Soc. 1995, 76, 655–668. [Google Scholar] [CrossRef]
    [Green Version] Kogan, F.N. Application of vegetation index and brightness temperature
    for drought detection. Adv. Sp. Res. 1995, 15, 91–100. [Google Scholar] [CrossRef]
    Liu, W.T.; Kogan, F.N. Monitoring regional drought using the Vegetation Condition
    Index. Int. J. Remote Sens. 1996, 17, 2761–2782. [Google Scholar] [CrossRef] Du,
    Y.; Zhang, Y.; Ling, F.; Wang, Q.; Li, W.; Li, X. Water Bodies’ Mapping from Sentinel-2
    Imagery with Modified Normalized Difference Water Index at 10-m Spatial Resolution
    Produced by Sharpening the SWIR Band. Remote Sens. 2016, 8, 354. [Google Scholar]
    [CrossRef] [Green Version] McFeeters, S.K. The use of the Normalized Difference
    Water Index (NDWI) in the delineation of open water features. Int. J. Remote Sens.
    1996, 17, 1425–1432. [Google Scholar] [CrossRef] World Meteorological Organization
    (WMO); Global Water Partnership (GWP). Handbook of Drought Indicators and Indices;
    Svoboda, M., Fuchs, B.A., Eds.; Integrated Drought Management Tools and Guidelines
    Series 2; WMO and GWP: Geneva, Switzerland, 2016. [Google Scholar] Van Rossum,
    G. Python Reference Manual. 1995, 59. Available online: https://ir.cwi.nl/pub/5008/05008D.pdf
    (accessed on 4 October 2021). Holl, S.; Plum, H. PostGIS Version Geoinformatics
    03/2009, 34–36. Available online: http://fluidbook.microdesign.nl/geoinformatics/03-2009/?page=34
    (accessed on 4 October 2021). Nguyen, T. Indexing PostGIS databases and spatial
    Query performance evaluations. Int. J. Geoinformatics 2009, 5, 1–9. [Google Scholar]
    Fuentes, I.; Padarian, J.; Van Ogtrop, F.; Vervoort, R.W. Comparison of Surface
    Water Volume Estimation Methodologies that Couple Surface Reflectance Data and
    Digital Terrain Models. Water 2019, 11, 780. [Google Scholar] [CrossRef] [Green
    Version] Lee, H.; Kang, K. Interpolation of missing precipitation data using kernel
    estimations for hydrologic modeling. Adv. Meteorol. 2015, 2015, 935868. [Google
    Scholar] [CrossRef] [Green Version] Eischeid, J.K.; Pasteris, P.A.; Diaz, H.F.;
    Plantico, M.S.; Lott, N.J. Creating a serially complete, national daily time series
    of temperature and precipitation for the western United States. J. Appl. Meteorol.
    2000, 39, 1580–1591. [Google Scholar] [CrossRef] Ferraguti, M.; Martínez-de la
    Puente, J.; Roiz, D.; Ruiz, S.; Soriguer, R.; Figuerola, J. Effects of landscape
    anthropization on mosquito community composition and abundance. Sci. Rep. 2016,
    6, 29002. [Google Scholar] [CrossRef] [PubMed] [Green Version] Teegavarapu, R.S.;
    Chandramouli, V. Improved weighting methods, deterministic and stochastic data-driven
    models for estimation of missing precipitation records. J. Hydrol. 2005, 312,
    191–206. [Google Scholar] [CrossRef] Xia, Y.; Fabian, P.; Stohl, A.; Winterhalter,
    M. Forest climatology: Estimation of missing values for Bavaria, Germany. Agric.
    For. Meteorol. 1999, 96, 131–144. [Google Scholar] [CrossRef] [Green Version]
    GDAL/OGR. Contributors GDAL/OGR Geospatial Data Abstraction software Library;
    Open Source Geospatial Foundation: Chicago, IL, USA, 2021. [Google Scholar] Kiguchi,
    M.; Takata, K.; Hanasaki, N.; Archevarahuprok, B.; Champathong, A.; Ikoma, E.;
    Jaikaeo, C.; Kaewrueng, S.; Kanae, S.; Kazama, S.; et al. A review of climate-change
    impact and adaptation studies for the water sector in Thailand. Environ. Res.
    Lett. 2021, 16, 23004. [Google Scholar] [CrossRef] Li, R.; Shi, J.; Ji, D.; Zhao,
    T.; Plermkamon, V.; Moukomla, S.; Kuntiyawichai, K.; Kruasilp, J. Evaluation and
    Hydrological Application of TRMM and GPM Precipitation Products in a Tropical
    Monsoon Basin of Thailand. Water 2019, 11, 818. [Google Scholar] [CrossRef] [Green
    Version] Prakongsri, P.; Santiboon, T. Effective Water Resources Management for
    Communities in the Chi River Basin in Thailand. Environ. Claims J. 2020, 32, 323–348.
    [Google Scholar] [CrossRef] Buchhorn, M.; Lesiv, M.; Tsendbazar, N.-E.; Herold,
    M.; Bertels, L.; Smets, B. Copernicus Global Land Cover Layers—Collection 2. Remote
    Sens. 2020, 12, 1022. [Google Scholar] [CrossRef] [Green Version] Gidey, E.; Dikinya,
    O.; Sebego, R.; Segosebe, E.; Zenebe, A. Analysis of the long-term agricultural
    drought onset, cessation, duration, frequency, severity and spatial extent using
    Vegetation Health Index (VHI) in Raya and its environs, Northern Ethiopia. Environ.
    Syst. Res. 2018, 7, 13. [Google Scholar] [CrossRef] [Green Version] Zhang, L.;
    Jiao, W.; Zhang, H.; Huang, C.; Tong, Q. Studying drought phenomena in the Continental
    United States in 2011 and 2012 using various drought indices. Remote Sens. Environ.
    2017, 190, 96–106. [Google Scholar] [CrossRef] Qu, C.; Hao, X.; Qu, J.J. Monitoring
    Extreme Agricultural Drought over the Horn of Africa (HOA) Using Remote Sensing
    Measurements. Remote Sens. 2019, 11, 902. [Google Scholar] [CrossRef] [Green Version]
    Gao, B. NDWI—A normalized difference water index for remote sensing of vegetation
    liquid water from space. Remote Sens. Environ. 1996, 58, 257–266. [Google Scholar]
    [CrossRef] Mishra, A.K.; Singh, V.P. A review of drought concepts. J. Hydrol.
    2010, 391, 202–216. [Google Scholar] [CrossRef] Zhang, J.; Mu, Q.; Huang, J. Assessing
    the remotely sensed Drought Severity Index for agricultural drought monitoring
    and impact analysis in North China. Ecol. Indic. 2016, 63, 296–309. [Google Scholar]
    [CrossRef] Wang, F.; Wang, Z.; Yang, H.; Zhao, Y.; Li, Z.; Wu, J. Capability of
    Remotely Sensed Drought Indices for Representing the Spatio–Temporal Variations
    of the Meteorological Droughts in the Yellow River Basin. Remote Sens. 2018, 10,
    834. [Google Scholar] [CrossRef] [Green Version] Skoulikaris, C.; Krestenitis,
    Y. Cloud Data Scraping for the Assessment of Outflows from Dammed Rivers in the
    EU. A Case Study in South Eastern Europe. Sustainability 2020, 12, 7926. [Google
    Scholar] [CrossRef] Chen, Y.; Huang, C.; Ticehurst, C.; Merrin, L.; Thew, P. An
    Evaluation of MODIS Daily and 8-day Composite Products for Floodplain and Wetland
    Inundation Mapping. Wetlands 2013, 33, 823–835. [Google Scholar] [CrossRef] Huang,
    C.; Chen, Y.; Zhang, S.; Wu, J. Detecting, Extracting, and Monitoring Surface
    Water From Space Using Optical Sensors: A Review. Rev. Geophys. 2018, 56, 333–360.
    [Google Scholar] [CrossRef] Whitcraft, A.K.; Vermote, E.F.; Becker-Reshef, I.;
    Justice, C.O. Cloud cover throughout the agricultural growing season: Impacts
    on passive optical earth observations. Remote Sens. Environ. 2015, 156, 438–447.
    [Google Scholar] [CrossRef] Tahsin, S.; Medeiros, S.C.; Hooshyar, M.; Singh, A.
    Optical Cloud Pixel Recovery via Machine Learning. Remote Sens. 2017, 9, 527.
    [Google Scholar] [CrossRef] [Green Version] Frantz, D.; Haß, E.; Uhl, A.; Stoffels,
    J.; Hill, J. Improvement of the Fmask algorithm for Sentinel-2 images: Separating
    clouds from bright surfaces based on parallax effects. Remote Sens. Environ. 2018,
    215, 471–481. [Google Scholar] [CrossRef] Zhu, Z.; Woodcock, C.E. Object-based
    cloud and cloud shadow detection in Landsat imagery. Remote Sens. Environ. 2012,
    118, 83–94. [Google Scholar] [CrossRef] Sudmanns, M.; Tiede, D.; Augustin, H.;
    Lang, S. Assessing global Sentinel-2 coverage dynamics and data availability for
    operational Earth observation (EO) applications using the EO-Compass. Int. J.
    Digit. earth 2019, 13, 768–784. [Google Scholar] [CrossRef] [Green Version] Nguyen,
    M.D.; Baez-Villanueva, O.M.; Bui, D.D.; Nguyen, P.T.; Ribbe, L. Harmonization
    of Landsat and Sentinel 2 for Crop Monitoring in Drought Prone Areas: Case Studies
    of Ninh Thuan (Vietnam) and Bekaa (Lebanon). Remote Sens. 2020, 12, 281. [Google
    Scholar] [CrossRef] [Green Version] Chastain, R.; Housman, I.; Goldstein, J.;
    Finco, M.; Tenneson, K. Empirical cross sensor comparison of Sentinel-2A and 2B
    MSI, Landsat-8 OLI, and Landsat-7 ETM+ top of atmosphere spectral characteristics
    over the conterminous United States. Remote Sens. Environ. 2019, 221, 274–285.
    [Google Scholar] [CrossRef] Meraner, A.; Ebel, P.; Zhu, X.X.; Schmitt, M. Cloud
    removal in Sentinel-2 imagery using a deep residual neural network and SAR-optical
    data fusion. ISPRS J. Photogramm. Remote Sens. 2020, 166, 333–346. [Google Scholar]
    [CrossRef] [PubMed] Publisher’s Note: MDPI stays neutral with regard to jurisdictional
    claims in published maps and institutional affiliations.  © 2022 by the authors.
    Licensee MDPI, Basel, Switzerland. This article is an open access article distributed
    under the terms and conditions of the Creative Commons Attribution (CC BY) license
    (https://creativecommons.org/licenses/by/4.0/). Share and Cite MDPI and ACS Style
    Polpanich, O.-u.; Bhatpuria, D.; Santos Santos, T.F.; Krittasudthacheewa, C. Leveraging
    Multi-Source Data and Digital Technology to Support the Monitoring of Localized
    Water Changes in the Mekong Region. Sustainability 2022, 14, 1739. https://doi.org/10.3390/su14031739
    AMA Style Polpanich O-u, Bhatpuria D, Santos Santos TF, Krittasudthacheewa C.
    Leveraging Multi-Source Data and Digital Technology to Support the Monitoring
    of Localized Water Changes in the Mekong Region. Sustainability. 2022; 14(3):1739.
    https://doi.org/10.3390/su14031739 Chicago/Turabian Style Polpanich, Orn-uma,
    Dhyey Bhatpuria, Tania Fernanda Santos Santos, and Chayanis Krittasudthacheewa.
    2022. \"Leveraging Multi-Source Data and Digital Technology to Support the Monitoring
    of Localized Water Changes in the Mekong Region\" Sustainability 14, no. 3: 1739.
    https://doi.org/10.3390/su14031739 Note that from the first issue of 2016, this
    journal uses article numbers instead of page numbers. See further details here.
    Article Metrics Citations Crossref   2 Scopus   2 Web of Science   1 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 8.
    Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 500 1000 1500
    2000 For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sustainability, EISSN 2071-1050,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sustainability (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Leveraging Multi-Source Data and Digital Technology to Support the Monitoring
    of Localized Water Changes in the Mekong Region
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '9'
  description: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the application of precise and exact amount of input level of
    water and fertilizer to the crop at the required time for increasing the yield.
    Since agriculture relies on direct rainfall than irrigation and the prediction
    of rainfall date is easily available from web source, the integration of rainfall
    prediction with precision agriculture helps to regulate the water consumption
    in farms. In this work, an edge computing model is developed for predicting soil
    moisture in real time and managing the water usage in accordance with rain prediction.
    A soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-making techniques with live environmental parameters including
    weather parameters for the prediction of soil moisture through the impact of precipitation.
    Numerous algorithms with the combination of regression + clustering are estimated,
    and it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage.
  doi: 10.1515/jisys-2022-0046
  full_citation: '>'
  full_text: '>

    "Skip to content Authenticated with University of Nebraska - Lincoln What does
    this mean? $ USD € EUR - Euro £ GBP - Pound $ USD - Dollar EN 0 University of
    Nebras... SUBJECTS FOR AUTHORS SERVICES PUBLICATIONS ABOUT Open Access Published
    by De Gruyter May 27, 2022 IoT-enabled edge computing model for smart irrigation
    system S. Premkumar and AN. Sigappi From the journal Journal of Intelligent Systems
    https://doi.org/10.1515/jisys-2022-0046 Cite this Share this 11 Abstract Precision
    agriculture is a breakthrough in digital farming technology, which facilitates
    the application of precise and exact amount of input level of water and fertilizer
    to the crop at the required time for increasing the yield. Since agriculture relies
    on direct rainfall than irrigation and the prediction of rainfall date is easily
    available from web source, the integration of rainfall prediction with precision
    agriculture helps to regulate the water consumption in farms. In this work, an
    edge computing model is developed for predicting soil moisture in real time and
    managing the water usage in accordance with rain prediction. A soil moisture prediction
    hybrid algorithm (SMPHA) has been developed that revolves around the decision-making
    techniques with live environmental parameters including weather parameters for
    the prediction of soil moisture through the impact of precipitation. Numerous
    algorithms with the combination of regression + clustering are estimated, and
    it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage. Keywords: smart irrigation; edge-based irrigation; edge computing;
    precision agriculture; soil moisture prediction; irrigation management system;
    IoT; offloading mechanism 1 Introduction It is evident that agriculture always
    has a specialized role in the anthrophonic evolution and has been serving as an
    important economic factor for the growth of a country [1]. Around 58% of the population
    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural products have declined over these years as several
    factors have influenced the crop productivity both directly and indirectly. Some
    major factors that affect the crop production are climatic changes, global warming,
    and water scarcity [2]. The agricultural land’s productivity is affected by the
    direct and indirect changes in climate [3,4]. The crop growth has been already
    affected by the changes in climate incurred by global warming. The nutrition quality
    of soil, ground water level, sea, and ocean are affected by the modifications
    in average temperature, rainfall, and extreme weather conditions such as hail
    storms, dust storms, heatwaves, etc. due to global warming [5,6]. Degradation
    of soil is primarily created by various methods including 93.7% by water erosion,
    9.5% by wind erosion, 5.9% by salinity and alkalinity, etc. Further changes in
    climate would influence adversely the crop production [7]. Since water is an indispensable
    requirement for plants and cultivation, the high level of soil is eroded and thereby
    the fertility is also declined. Due to the ever-changing climate, water scarcity
    has become a huge problem. Drought-like conditions is already formed in several
    areas and thereby the present and conventional farming practices are not suitable.
    New and unique environment preserving techniques are the need of the hour [8].
    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in technology [9]. These new improved methodologies ensure optimized
    utilization of resources, accurate forecast of water needs and environmental parameters,
    reduction of human intervention, etc. [10]. Consequently, the outcomes of crops
    in terms of yield and quality are higher with cost-effective methods. One such
    booming technology is the Internet of things (IoT) [11]. IoT is the collection
    of components embedded in the sensor for measuring and transferring data via network
    devices as sensed from pumps and tractors to weather stations. Primarily, IoT
    deals with the transmission and reception of data related to farms through devices
    using the Internet for prediction and providing decisions to the farmers. IoT-based
    methodologies has brought a changeover in agricultural patterns and farming approaches
    [12]. IoT devices can gather information about soil moisture, chemical properties,
    dam levels, livestock health, and weather details in real time. The information
    acquired from IoT devices facilitates the farmers in tracking farms periodically.
    Farmers can save time and money by responding faster to farm conditions. Cloud
    computing models integrated with on-field agricultural sensors need to be incorporated
    for tackling the issue of processing huge voluminous data. One of the major challenges
    of IoT is the processing of huge datasets in a sequential way. Some of the key
    factors that need to be focused on this process are as follows: information about
    the type and nature of data, the way of acquiring the data, etc. The preliminary
    stage comprises acquiring the data and ingesting the data to the system. Substantial
    cognizance of data are achieved as the data pass through all the gateways where
    it is cleansed and transformed before entering into the system. In the near future,
    dynamic prediction of soil moisture and precipitation techniques are to be developed
    for smart irrigation systems. Therefore, a system is developed for efficient and
    optimal utilization of fresh water in irrigation along with drip irrigation system.
    It aids in finding which one of the plants fails to get sufficient water. When
    the water supply is provided the next day, this delay should not disturb the system.
    It becomes important for the farmers to understand the optimal usage of water
    and fertilizers to bring out sustenance in the agricultural industry. Therefore,
    processing must be done for analyzing the data, so that patterns can be analyzed
    and planning can be done for the long term, accordingly. Hence, it gives a broad
    vision in deciding where the processing is to be done exactly. Therefore, it is
    obvious that not all data are crucial, and it provides a clear view of which data
    need to be stored, discarded, and retained for both long-term and short-term purposes.
    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are actually highlighted. The poor quality of Internet access in
    developing nations makes the implementation quite challenging. An applicable solution
    to solve this problem is through edge computing where the essential data could
    be offloaded from the cloud over the edge of the cloud, and this is the exact
    point where the approach of smart sensing with edge computing gets in. With the
    purpose of broadening the potential of edge computing and using it in the agriculture
    domain, a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the IoT devices deployed at the farm. Here, the data acquired
    from IoT components undergo preprocessing and ML models on the edge nodes to analyze
    and assess the appropriate results for providing the best instructions for controlling
    the actuators (e.g., light, pumps at different locations) in the farms. This article
    presents an automated system, as shown in Figure 1, to predict the soil moisture
    using the field information acquired from the self-designed sensor node deployed
    at the field and the forecast information of weather via Internet. A unique algorithm
    has been developed that revolves around the machine learning techniques for the
    prediction of soil moisture. Here, many algorithms with the combination of regression
    + clustering was estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic combinations, and therefore, it is deployed for the prediction
    of soil moisture in the proposed work. The proposed algorithm makes effective
    irrigation decisions with optimized usage of water in a more accurate and reliable
    manner. The effective decision-making refers to the process of predicting the
    rainfall, thereby reducing the water usage in advance by the proposed algorithm
    in accordance with the predicted rainy days. Through this automatic decision-making,
    over watering is avoided by saving the soil. The server-side software is developed
    with node-side connectivity using the information for visualization and decision
    support features. This proposed algorithm is implemented in edge to prove the
    efficiency of the edge server handling the automated system better than the cloud
    control. The performance of the decentralized edge-based architecture has been
    evaluated for downloading the hybrid algorithm from cloud in real time execution.
    The performance can be enhanced by adopting edge computing architecture and measured
    with the help of network parameters like latency, bandwidth, and response time.
    Edge computing capacity is also estimated using the CPU processor and memory consumption
    while executing the proposed algorithm with irrigation scheduling. Figure 1 Architecture
    of the proposed system. 2 Related work In ref. [13], a smart irrigation system
    not affected by communication disconnection and delay is developed using edge
    nodes deployed at the farms. Environmental parameters have an intricate impact
    on the plant growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation environment for comparing AI models under the same conditions.
    Due to the working of existing irrigation systems on the cloud, communication
    is instable in the concurrent evaluation of AI models. However, the instability
    does not induce an edge node in its performance. The factors such as type of plant,
    soil, climate, humidity, temperature, and soil moisture need to be considered
    for the irrigation system packed with potential smart decisions. The nature and
    type of plant, soil, and climate are queried by ontology (branch of metaphysics
    dealing with the nature of being), whereas other factors such as temperature,
    humidity, and soil moisture are sensed by the sensor network. The trained ML model
    predicts the watering decisions based on ontology and other factors as mentioned
    earlier. Smart irrigation has three modules: (i) sensor network modules that sense
    the parameters impacting the water requirement by using sensors DHT22, light sensor
    BH1750, and HL-69 hygrometer for sensing the temperature, soil moisture, light,
    and humidity in air. (ii) Edge and IoT server’s module to send and receive data
    through HTTP requests. (iii) Training module in which KNN is applied on the sample
    dataset for training and decision-making regarding the water needs. Based on the
    input values, the trained model categorizes the input into five possible classes:
    highly not needed, not needed, average, needed, and highly needed [14]. A decentralized
    smart irrigation approach is proposed for strawberry greenhouses in contrast to
    conventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale smart irrigation system in an actual strawberry greenhouse
    environment is developed after a small-scale smart irrigation networking prototype
    system and a reference architecture targeting edge data distribution for strawberry
    greenhouse applications are framed. A three-step industrial approach is formed
    for designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and keeping the corresponding data at the edge of the network at
    the same time: (i) A small-scale smart irrigation prototype solution with off-the-shelf
    hardware and software equipment is tested and evaluated on various types of plants
    for gaining useful insights for deployments on a large scale. (ii) A reference
    network architecture is designed for targeting smart irrigation and edge data
    distribution specifically for strawberry greenhouses. (iii) A large-scale system
    in an actual strawberry greenhouse environment is developed in Greece, incorporating
    the proposed reference architecture [15]. Edge computing is proposed for addressing
    the issues by taking advantage of computing resources in the edge of the network.
    The issues such as an edge mobile device make it easier to achieve low end-to-end
    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the privacy policies of its owner prior to the release of
    the data to the cloud through edge analytics. If a cloud service becomes unavailable
    due to network failure, cloud failure, or a denial-of-service attack, a fallback
    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control functions are extended to the edge nodes from the cloud
    data center. Edge nodes facilitate the timely monitoring of sensors in smart farming
    by the reduced latency and enhanced data transmission. Due to these factors, edge
    computing is applied through farming [16,17]. A three-tier open-source software
    platform we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge computing and fog computing. An network functions virtualization
    (NFV)-based approach is deployed for performing the local operational decisions
    at the edge level for mitigating the influence of network failures while using
    cloud data centers [18]. For control processing in smart farming, a platform enabling
    cost-effective sensor/actuator network based on IoT, utilizes edge computing [19,20].
    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the values given by a sensor matrix on the ground. Due to the huge
    interval in measurements (10 minutes), the model presented estimated error by
    more than 10%. This methodology has incorporated the online approach by making
    the sensors to send data every minute to edge devices without time-based interruption.
    The authors of ref. [22] applied a combinative approach of using field sensor
    network’s data along with weather forecast station’s data for the management of
    optimality in water conditions for the enhanced growth of grapes. The generated
    data are forwarded to a web server, which displays graphics without statistical
    analysis of such data. The analysis must be performed a posteriori by the user.
    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation model without acquiring any pre-processed data. A prototype application
    is developed, which gets adapted to the parameters needed in irrigation after
    a couple of human-made irrigations. With the usage of various ML algorithms, several
    tests are devised for manual and automated irrigations for the performance evaluation.
    After the evaluation using four different ML algorithms such as logistic regression
    (LR), K-nearest neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting
    regression trees (GBRT), it is found that GBRT outperforms other algorithms. To
    analyze the overall performance, a test bed for the sensor edge, mobile client,
    and the decision service on the cloud is established. Two different indoor species
    are selected as test items for the prototype, namely, Peace lily and Sardinia.
    The outcomes were quite good, and it is inferred that the prototype has learned
    the patterns of irrigation and making decisions automatically with a high rate
    of accuracy [23]. The authors from ref. [24] adopted the deep learning methodology
    for detecting the type and the category of the plant using an automated plant
    irrigation system. The water necessity of the plant is determined using the recognition
    of predefined set of plant images and data set acquired from farm. It utilizes
    the database for fetching the irrigation information after the recognition process
    is completed. Modeling the training processes are time consuming as voluminous
    set of images needs to be stored. The authors in refs [25,26] incorporated ML
    methods in the irrigation decision support model using a pre-processed irrigation
    data set. A model is developed for learning the irrigation needs of any plants
    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their precision for concluding the irrigation decisions. Manual
    irrigations are performed two times before making precise decisions. Due to the
    dynamicity in model, data processing is done progressively, and it can be applied
    to several plants having varying irrigation conditions. There is a need for the
    learning model that can be trained by itself using a comparatively lighter learning
    process using environmental parameters that do not need larger storage in the
    system but need higher computation. From the aforementioned survey for making
    a precise decision with instant computation locally, edge computing needs to be
    integrated into the irrigation system. This article is directed towards presenting
    a platform that implies IoTs and edge computing in monitoring soil moisture via
    sensors, data communication between sensors and edge devices, and an Analytics-as-a-Service
    cloud. It analyzes the collected data in the form of a density map of soil moisture
    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to the geographical point data by satellite mapping,
    and it actually denotes the point of dry area and watery area through soil moisture
    detection point. This point is averaged among areas of irrigation to be done and
    the irrigation process is controlled with prediction of rainfall using the proposed
    system. 3 The proposed system The proposed learning model for irrigation is implemented
    in a prototype IoT system that has four components: (i) Edge node layer – This
    layer consists of sensors, actuator, and two microcontrollers. In this layer,
    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water pumps to start irrigation. (ii) Edge server layer – This layer
    consists of Raspberry Pi that act as edge server and capable of multitask processing.
    Here, edge server controls the edge nodes for sending signal and receiving data
    at regular interval of time. It is also connected to the cloud server for receiving
    developed and trained machine learning model to be deployed and make irrigation
    decision for controlling edge nodes. (iii) Edge service layer – This layer is
    deployed in the edge server and it is responsible for controlling the whole system
    through a developed web dashboard. The dashboard has live feed data, control of
    edge nodes, and cloud services access. This service layer also has the control
    access of the proposed machine learning model. (iv) Cloud server layer – This
    layer composed of cloud services and cloud storage where its role is to train
    the machine learning model and store the data in database. It sends the trained
    proposed model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive interconnections in the system are shown in Figure 2. The proposed
    IoT-based smart irrigation system includes five major components: field deployed
    module, Web-based interface, Web API weather input, soil moisture prediction mechanism,
    and edge communication model. Figure 2 Components of the proposed system. 3.1
    Field deployed module In the field requirements, a wireless sensor network of
    the sensor nodes needs to be deployed as shown in Figure 3. Here, field data collection
    device accommodates four different sensors: Capacitive Soil Moisture Sensor V2.0,
    DS18B20 Water Proof Temperature Sensor Probe for soil temperature, ultraviolet
    (UV) Light Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511
    Analog Output Ultra-Violet Light Sensor Module. An Arduino Mega connected to Raspberry
    Pi 4 Model-B read, the output of these sensors where the program is developed
    in Python for the Pi model to fetch the hourly data from sensors and store the
    data in MongoDB [27] database. It is then synchronized with the server database
    using the developed web service. A Wi-Fi-enabled Arduino controls the water pump
    connected to a relay switch. Figure 3 Real-time prototype of the proposed edge
    model. For the real time monitoring, a trigger is made for controlling the web
    service from the responsive web-based interface. The irrigation decisions are
    checked periodically by the proposed model performed in the server. The water
    pump is actuated, and irrigation process is started only if the server makes any
    irrigation decision. A wireless sensor network (WSN) [28] scenario with ZigBee
    [29] technology can be implemented for a large farming area in which several sensor
    nodes can be affixed in the specified area and every sensor node possesses sensors
    similar to a standalone device. Then, the Arduino Mega reads the sensor output
    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it in MongoDB locally and also for transferring the
    data via web service to the edge server. 3.2 Web-based interface The proposed
    framework consists of a web-based application to allow farmers visualize the growing
    data and interacting with the garden in real time. In addition, users can also
    be able to examine and analyze the historical growing data, if needed, through
    functionalities such as irrigation control, motor control prediction model deployment,
    and manual data entry implemented in this web application. Here, Node.js was chosen
    for developing the web application [30,31], while MongoDB [27] was utilized as
    the database system. Data stored in the database, which is deployed in the cloud,
    will be used for further data analysis in the future. The web application’s functions
    are designed following a software design pattern called model-view-controller
    (MVC) as shown in Figure 4. In the frontend, ChartJS is used to represent data
    through dynamic charts. The web application is also used as an interface to manage
    all the physical devices/actuators in the garden. To deploy the web-server to
    the cloud, a cloud platform as a service (PaaS), namely, Heroku, had been utilized.
    Heroku is a cloud platform that provides platform as a service (PaaS), facilitates
    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and functionality by integrating several add-on services.
    The field data are sent to the server by Raspberry Pi using this web service.
    This web service manages the network outage/fluctuation during data synchronization
    from the field device to the server by taking the help of flag settings at the
    database level. The interface facilitates the scheduling of irrigation along with
    visualizing real time sensors and predicted soil moisture for upcoming days and
    precipitation information. By using the denoted threshold value of soil moisture
    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold value depending on the predicted pattern of soil moisture
    and precipitation information. The process of irrigation is initiated automatically
    and stopped after the specified threshold value generated from the proposed algorithm
    of soil moisture when it is reached. Figure 4 Web interface for the irrigation
    system. 3.3 Web API weather input The weather prediction data are collected by
    a web service developed in Python. The forecast data such as humidity, temperature,
    ultra violet index, precipitation, and cloudiness of web forecasting portals like
    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted information in HTML, XML, or JSON format. The predicted
    data with JSON format are read by the developed web and stored in database at
    the edge server, which is concerned in the prediction algorithm. Also, these data
    are utilized as testing dataset in the ML model for predicting the soil moisture.
    3.4 Soil moisture prediction mechanism An algorithm for predicting the soil moisture
    based on data derived from field sensors and weather forecasting using the combination
    of supervised and unsupervised machine learning techniques has been developed
    underpinned by regression algorithms and k-means clustering for estimating the
    difference/change in soil moisture owing to weather conditions. Many regression
    algorithms are compared against each other and infusing each of them with k-means
    to check the preciseness in mean square error (MSE), R2, accuracy and mean absolute
    percentage error (MAPE) for prediction of soil moisture of upcoming days with
    the help of sensor data and weather forecasting days. The information about soil
    moisture for the upcoming days and suggestions for irrigation in accordance with
    the prescribed levels of soil moisture and predicted precipitation values, thereby
    saving energy and water, is presented by the algorithm. The information generated
    from the device and the predicted values from the algorithm soil moisture prediction
    hybrid algorithm (SMPHA) are stored in the server. 3.5 Edge communication model
    The communication protocols in the proposed framework are flexible and transparent
    in nature for accepting both wired and wireless methodologies. For the maximum
    utilization of potentiality in edge computing components, the communication among
    various components in the edge-IoT system requires intense probing by using the
    versatility among the devices in network edges. For transferring the data gathered
    from pivot sensors, a communication technology such as Zigbee [35] is needed for
    the irrigation systems. Therefore, the communication component in the proposed
    work is classified into three main areas as shown in Figure 5. The Message Query
    Telemetry Transport (MQTT) protocol is used for the communication in the proposed
    system. The analysis in ref. [36] presented seven IoT messaging protocols (MQTT,
    CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols that
    play a major role in smart farming. The authors have concluded that MQTT proved
    to be the most secure protocol after probing all the protocols with respect to
    latency, energy and bandwidth requirements, throughput, reliability, and security.
    Moreover, MQTT is secure in both end-to-end architecture and gateway server architecture.
    In an MQTT setup, a MQTT server termed as MQTT broker executes on the IoT solution
    [37]. Under a common identifier, a “publisher” and a “subscriber” link among themselves
    to this broker. In the IoT solution, publishers and subscribers are the IoT devices
    and IoT hubs or control devices, respectively. When the publishers have new data
    for recording, the data are published to the broker. The broker then flags that
    it has new publisher data, and the corresponding data are read by the subscriber.
    Then, the subscriber analyzes the data and reacts accordingly. Figure 5 Proposed
    edge communication model. The first level accomplishes with connecting the end
    users to system with the help of mobile or web-based applications through the
    Internet. The next level (cloud computing server) deals with the connection of
    web server and MQTT broker for directing the user requests and other components
    at the edge landscape or from the farms to the right cloud-based services like
    displaying the real time status of the farm for the users, triggering a new deployment
    of the updated ML model to the corresponding edge node. The third level (farming
    area) is directed toward the deployment of sensors and IoT devices (actuators)
    for communicating with other components in the entire system. 4 Deployment of
    soil moisture prediction hybrid algorithm The watering mechanism of the plant
    has different approaches in the proposed model. Primarily, the system is trained
    with manual irrigations datasets during the process of learning with respect to
    suggestions defined by agronomists. The model is trained to learn the needs of
    irrigation in the first level of deployment in cloud without the inclusion of
    pre-processed data. After acquiring the required data and training, the proposed
    system is initiated to grasp the plant’s watering needs by undergoing plenty of
    manual irrigations. Thereafter, manual irrigation is not required and the system
    makes automated decisions in watering using the gathered data and the application
    of ML methods. The proposed model then decides the irrigation strategies automatically
    using ML methods without the need including collected datasets in the automatic
    irrigation process. The proposed model can be improved through the learning process
    when the number of precise irrigation inputs is provided to the model at each
    stage of training. The decision-making procedure is developed with two modules
    for irrigation strategies according to the soil moisture prediction for upcoming
    days. The first module deals with training the model in cloud with manual irrigation
    datasets through steps such as data collection, data preprocessing, training,
    and model development. The system acquires values of air temperature (TH), soil
    temperature (SMT), soil moisture (SM), humidity (HU), and ultraviolet rays (UV)
    periodically from the physical environment in the data collection stage, which
    is essentially required for arriving at the watering decisions. Also, the time
    of performing the manual irrigation is recorded in the database. These data are
    timestamped and stored in as datasets to aid in making decisions for knowing the
    time of irrigation. In the next step of pre-processing, inconsistencies are eliminated
    and outliers caused by sensor errors are detected from the irrigation dataset,
    thereby helping in the removal of broken data. The training stage involves the
    application of supervised machine learning (ML) algorithms. Here the regression
    algorithms such as support vector regression (SVR), multiple linear regression
    (MLR), lasso regression (LR), decision tree regressor (DTR), random forest regressor
    (RF), and XG-boost regressor (XB) techniques are used for the deployment. The
    regression algorithms are trained using the collected datasets. Finally, through
    training, regression models are created, namely, SVR model, MLR model, LR model,
    DTR model, RF model, and XB model that are been combined with the second module
    for decision-making. The second module caters to the prediction of irrigation
    for upcoming days by infusing the weather data as an input to the regression trained
    models. The live datasets from the weather API for future prediction of soil moisture
    variable are used. The dependent variables from weather forecast data like temperature
    (TH), humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the
    aforementioned model for soil moisture prediction. Then, the regression trained
    model is evaluated and deployed using the weather testing data for the prediction
    of soil moisture in accordance with the precipitation. After the prediction of
    data for the upcoming days, these developed regression models are combined with
    unsupervised ML algorithm named k-means clustering for estimating the changes
    incurred in soil moisture prediction due to the impact of weather conditions.
    Further, each regression models with k-means algorithm are evaluated for performances
    in terms of irrigation decision-making process as shown in Table 1. The combined
    algorithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The estimation and computation of these parameters are detailed
    by the authors in ref. [38]. Table 1 Comparison of performance metrices obtained
    from various ML algorithms Algorithms used Accuracy R 2 MSE MAPE (%) Execution
    time Power (J) SVR + k-means 0.96 0.96 0.25 1.98 0.06078 1164.85 MLR + k-means
    0.94 0.88 0.31 2.15 0.02075 429.30 LR + k-means 0.95 0.94 0.32 2.23 0.02482 351.35
    DTR + k-means 0.93 0.95 0.29 1.62 0.15687 914.70 RF + k-means 0.95 0.91 0.27 1.57
    0.16745 1475.13 XB + k-means 0.97 0.98 0.20 1.08 0.03547 537.87 XGBoost + k-means
    (XB+k-means) approach provides more accuracy with less MSE comparatively and also
    the R2 with 98% in soil moisture prediction using combined approach is given in
    Table 1. It is evident that the proposed combination performs better when compared
    to other regression + k-means-based approaches. XB + k-means-based hybrid machine
    learning algorithm is applied in irrigation planning module on account of aforementioned
    performance metrices of ML. Although it performs moderately in terms of execution
    time and power usage, it is selected for the deployment in edge computing as it
    has better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil moisture for the upcoming days from the proposed algorithm
    (XB+k-means) is nearer to the actual value as shown in Table 2, and hence, XB+k-means
    is selected for the implementation of SMPHA in edge-based irrigation scheduling.
    Table 2 Comparison of predicted SM value with actual SM value Date Average SM
    value from sensor Average predicted SM value (XB+k-means) 28-09-2021 35.23 34.04
    29-09-2021 36.41 37.20 30-09-2021 31.57 30.46 01-10-2021 34.66 33.15 02-10-2021
    36.73 37.12 03-10-2021 32.88 33.01 4.1 Hardware setup IoT system is crucial to
    handle, collect, and transfer the data to the computing nodes at the edge or in
    the cloud. These devices are connected to the edge nodes through wireless communication
    protocols like ZigBee. It is used in reducing the latency and loss of data. An
    Arduino micro-control unit controls the combined IoT sensors and actuators at
    the same part of a field into a cluster, each connected to a Raspberry Pi that
    acts as an edge node in processing the gathered data and controlling the actuators.
    For example, Figure 2 shows an edge architecture with a Raspberry Pi connected
    to two components: Arduino Uno and Arduino Mega units via ZigBee connection. The
    first Arduino Mega node is responsible for collecting data from sensors and the
    second one is for controlling the actuators in the field. Depending on the sensor
    type with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling Arduino uno joins with actuators in the field and controls
    (turn on/off) them in accordance with upper layers (from the edge web server).
    The trained (cloud) and deployed ML model in edge nodes provides the necessary
    instructions to the edge nodes. 4.2 Web layer setup The deployment of web server
    assists the user in planning and managing the irrigation system. It visualizes
    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live irrigation with real time updates in the form of various
    charts. In accordance with the selected field, the web application redirects the
    user to the field’s dashboard as shown in Figure 4. The dashboard consists of
    field parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer. These signals are denoted as switch buttons, and each switch
    controls (turn on/off) a particular kind of actuator (for instance, water pump
    to start and stop the irrigation). The user interface facilitates remote controlling
    of the field by just clicking on the buttons as shown in Figure 4. 4.3 Edge layer
    setup The edge node acts as a computing center where incoming data are analyzed
    and fed as the input vector to the ML model for processing and to return the control
    signals for activating or deactivating the actuators placed at the farm. Edge
    node processes the physical data (real time) at every end device such as the collected
    and processed data via the Raspberry Pi nodes presented in the proposed scheme.
    The prediction model is designed using TensorFlow API and trained, tested on Google
    Colab in this work. Amazon Web Service (AWS) offers a library named Boto3 having
    many APIs to upload and download objects. After the development of model, it is
    transferred to Amazon S3, a service provided by AWS. The edge node utilizes the
    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is delivered based on real time data analysis at the edge node and
    transmitted to Arduino nodes in the fields landscape immediately for controlling
    the actuators. In another flow, the data collected from sensors are filtered so
    as to keep only the modified data at the edge node before being sent back for
    mitigating the communication cost to the database in the cloud. These data are
    used in the updation of the ML model to enhance its efficiency. 4.4 Analytics
    setup The main goal of this experiment lies in gathering the various physical
    parameters of a farming land via sensors and utilizing the fetched data along
    with weather forecast information for developing an algorithm using hybrid machine
    learning approach to infuse higher accuracy in predicting the soil moisture for
    the upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation, the algorithm provides a predictable estimate of soil moisture
    with the assistance of various statistical measures as shown in Table 1. The measures
    are adopted for estimating the appropriateness and error rate of the proposed
    algorithm. It is inferred from the experiment that, optimal irrigation is feasible
    using a good estimation (close to the actual value) of the soil moisture (Table
    2), with the support of field data and forecast information, thereby utilizing
    the natural rain efficiently. The SMPHA ML model is interdependent on dynamic
    changes in weather environment where the models deployed on edge nodes need to
    change the controls accordingly after model gets trained continuously. For the
    process of retraining, the trained model needs to be updated. The parameters such
    as TM, HU, ST, UV, SM about grown plants are logged for the training purpose,
    and these generated datasets are recorded from the already developed manual mode
    system [39]. The growth of the Indian Mundu Chilli [40] is taken for the observation
    from the first stage to the last grown stage for 95 days. While retraining the
    model, the training is carried in cloud without causing effect to the functionalities
    at edge nodes. A signal is transferred to the corresponding edge server for triggering
    the task of updating the SMPHA model from the web server. At that time, the newly
    trained model is downloaded to replace the existing one at the considering edge
    server. From then, the ML model at the edge server is called to be updated with
    the real-world knowledge and is ready for its garden controlling tasks (to apply
    in the next farming season). 4.5 Work flow The flowchart in Figure 6 depicts the
    working of the proposed system based on the decision support system that is beneficial
    for irrigation needed for the growth of vegetables. The chilli plant is grown
    in a growbag attached with sensors and Pi as shown in Figure 3 and monitored for
    95 days of data collection. To bring out optimality in the irrigation system,
    features relating to climate, soil, crop, and field infrastructure are to be considered.
    To provide several recommendations in the production of vegetables, decision support
    systems (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of soil moisture differences (SMD) model [41] developed
    for soil moisture prediction. The threshold values of soil moisture are used in
    the SMD model where the system schedules the irrigation date based on the predicted
    soil moisture and weather forecast (precipitation) information automatically using
    SVR+ k-means modeling. Therefore, in the extension of the aforementioned work,
    further more number of sensors are used to log soil moisture value, which is averaged
    in the proposed model. This model is developed in two divisions of flowchart as
    shown in Figure 7, where both are interconnected. It is observed that the prediction
    of XB + k-mean approach provides better results as presented in Table 2. Figure
    6 Flow chart of the proposed edge model. Figure 7 Average response time with 10
    test scenarios. The first phase of the flowchart describes the hybrid algorithm
    for the soil moisture prediction (SMPHA) using the combination of XB + k-means
    algorithm. During the data collection step, the sensor data for the parameters,
    namely, TM, HU, ST, UV, and SM, are collected. During preprocessing, null values
    and outliers are removed and the preprocessed data are used to train the XG-Boost
    model. The developed model is then trained with variables of live weather features
    (TM, HU, UV, PC) obtained from Weather API for the prediction of SM data. These
    data are given as input to k-means clustering algorithm to predict the soil moisture,
    which is defined as SMPHA value to be infused in the next phase of the flowchart.
    The second phase of the flowchart defines the automatic irrigation planning setup.
    The setup starts obtaining the soil moisture maximum (SMMax) and soil moisture
    minimum (SMMin) values in the dashboard for setting the maximum and minimum level
    of soil moisture. Then, the current soil moisture (CuSM) is sensed and compared
    against the threshold SMMin. If the resulting value is less than SMMin, the process
    proceeds with SMPHA. On the contrary, it stops the irrigation process by sending
    0 to the relay. In SMPHA, the nearest precipitation date is selected and it is
    assigned to the predicted soil moisture (PSM). The SMMax is decided by finding
    the minimum of (PSM + SMMin, SMMax), and the predicted SMMax is further checked
    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start irrigation. If the condition fails, then it sends
    0 to stop irrigation. The process of automatic irrigation ends by forecasting
    the irrigation schedule in accordance with the live weather parameters. 5 Experimental
    setup and evaluation The test bed is developed and deployed, and the data are
    collected for the analysis in irrigation management. Here, Heroku cloud platform
    is used to deploy the cloud web server. The same cloud is also installed at a
    local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n connections
    to denote the edge nodes. JMeter application is used to get sequential accesses
    to the web page from various users for evaluating the network parameters. The
    specification of these servers is given in Tables 3 and 4. Table 3 Configuration
    of raspberry Pi CPU Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC
    @ 1.5 GHz RAM 8 GB LPDDR4-3200 SDRAM Network 2.4 GHz and 5.0 GHz IEEE 802.11ac
    wireless, Bluetooth 5.0, BLE, Gigabit Ethernet Pinboard 8 GB LPDDR4-3200 SDRAM
    Operating system, language Raspbian , Python 3 Table 4 Configuration of Heroku
    cloud Country United states Service Amazon web service S3 Processor 2.4 GHz Intel
    Xeon E5-2676 v3 Processor CPU Power 8 GB Virtual CPUs 3–5 We evaluated the performance
    of the proposed IoT-based smart farm on two different platforms, namely, in the
    cloud and on the local computer to show the feasibility and the benefit of the
    edge computing scheme. Further many parameters are considered for evaluation and
    discussed in the next section to show that edge deployment is better than cloud.
    5.1 Evaluation A hybrid machine learning methodology is used in evaluating the
    first stage of the proposed model. The predicted value of the soil moisture is
    better in terms of their accuracy and error rate. From the comparison of the other
    ML algorithms as shown in Table 2, XB + k-means performs better and taken further
    to be deployed in edge and cloud to check its efficiency with each other. Therefore,
    for analyzing the efficiency of the edge server in accordance with the proposed
    hybrid algorithm SMPHA is evaluated in terms of the time taken to train the ML
    model in edge and cloud. In this experiment Raspberry Pi is used to train the
    SMPHA model with 196,400 rows, that is, input data sample size and takes around
    1,710,000 ms (approximately 28.5 min). The same model when it is trained in Google
    Colab cloud environment, it takes 204,000 ms (approximately 3.4 min) as depicted
    in Table 5. The main purpose is to run the trained model on edge not to train
    the model at edge. So due to the lack of computing capability at the edge, it
    takes more time to train the model, but it can be ignored as it does not affect
    the purpose of the proposed model. Here, edge is introduced to obtain the task
    of computing from the cloud (i.e., offloading the task) by making the system more
    edge-oriented deployment. It can be accomplished rapidly as it requires only 14
    s to download a trained SMPHA model from the cloud to the edge node with a size
    of 3,101 kb as given in Table 5. The time to download varies according to the
    size of the trained model. So, from this process it can be inferred that downloading
    the trained model saves time when compared to training the model at the edge.
    Through this in real time, deployment of the trained SMPHA model in edge is better
    compared to deployment in cloud services. Furthermore, network parameters like
    latency, throughput, bandwidth, and response time are adopted to measure the performance
    improvements in edge computing. Table 5 Comparison of model training time Edge
    Cloud Model training time 28.4 min 3.4 min Downloading time Not applicable 14
    s The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The latency of an application is the product of two factors: computing
    latency and transmission latency. The time spent on data processing and transmission
    between end devices to cloud servers is termed as computing latency and transmission
    latency, respectively. The computational capacity of the system decides the computing
    latency as the network servers possess a considerable amount of capacity to make
    the data processing faster, whereas the sensors come with limited computing capacity.
    The latency in transmission is increased by the end devices and cloud servers.
    Bandwidth: As large number of sensors are deployed in IoT, data generated would
    be huge that consumes an intense range of bandwidth and leads to several problems
    such as delay in transmission and loss of packets. It becomes unacceptable for
    the data to be transferred directly to cloud servers without applying compression.
    Therefore, data preprocessing and aggregation are needed for IoT gateways before
    redirecting them to remote cloud servers. Then, the issue to be confronted is
    to control the traffic flow by migrating data processing and aggregation tasks
    optimally to decrease the bandwidth needs of the end users while maintaining the
    data quality. Response time: The total response time is calculated by adding up
    transmission and processing time. The local deployment of the proposed model for
    controlling IoT-based irrigation are deployed on two modes: (i) Cloud mode: The
    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to manage the irrigation process. The data are stored and processed
    at the cloud server itself where it uses Heroku platform. (ii) Edge mode – Raspberry
    Pi is deployed as an edge server that involves in processing of the SMPHA model
    controlling the IoT sensor nodes. Here, the data are stored and processed locally
    within the edge servers. This SMPHA model from both the edge and cloud does the
    job of controlling the actuators to initiate and quit the working of water flow
    motors. Through this deployment in both the environments, performance of edge
    server and cloud server can be checked in terms of latency, throughput, bandwidth,
    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is not feasible to calculate while deploying in real time,
    so the aforementioned scenarios of two modes are virtually created by generating
    many request and response threads between the servers. This sampling, load test,
    and distributed testing are conducted through JMeter application [43] and also
    verified with Wireshark [44] in cloud servers. The test scenario is created here
    by data of sending and receiving sampling data between cloud to IoT sensors and
    between Edge to IoT sensors. The sampling data considered in this work refer to
    the approximate number of requests generated by Arduino to cloud and Arduino to
    Raspberry Pi that are calculated in real time. The test scenario is divided into
    10 days of sampling data collected for each day. The evaluation results are depicted
    for latency and response times in 10 days perspective. In latency parameter, edge
    service has decreased by an average of 77.85% time compared to the with cloud.
    In the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud service. In throughput calculation, sampling data are calculated
    for an hourly basis for the 10 hours data in a day. From the hourly comparisons
    of throughput value, edge outperforms with 67.17% high Mbps usage. Through this
    analysis as shown in Table 6, it is evident that the proposed edge computing methodology
    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach. Figure 8 Average latency with 10 test scenarios. Figure 9 Average throughput
    value with 10 h test scenarios. Table 6 Performance metrices for cloud and edge
    services Performance metrices Cloud service Edge service Throughput (Mbps) 0.04944
    0.08265 Latency (ms) 1415.8 313.6 Response time (ms) 1519.6 393.8 Bandwidth (bps)
    86 1,365 Finally, to illustrate the efficiency of resource management in edge
    computing, CPU and memory utilization are considered for the analysis as both
    factors rely on the service execution model and the computational needs of the
    services being fired from off-loaders. Figure 10 depicts the utilization of CPU
    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of SMPHA model on it. As shown in Figure 10, the SMPHA model affects
    the CPU of the Raspberry Pi node significantly as it consumed around 41.2% of
    the CPU compared to only 3.5% when it does not host the SMPHA model. However,
    the memory (RAM) utilization in both the cases (with and without deployment of
    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have much difference in with and without SMPHA. It is worthwhile to note
    that, the CPU utilization is still much lower than the 50% of total CPU capacity
    in Raspberry Pi. Therefore, it becomes feasible for adopting edge server implementation
    in the proposed irrigation system. Figure 10 CPU and memory utilization with and
    without SMPHA. 6 Conclusion This article proposed a novel approach to edge-based
    irrigation system to facilitate decision-making on watering the plants on scheduled
    time. The proposed approach applying IoT with an edge computing framework enables
    the farming system to adapt to the changes in environmental conditions automatically
    and efficiently. The process of automatic irrigation regulates irrigation according
    to the live weather parameters for forecasting the irrigation process. Soil moisture
    prediction was performed using major regression algorithms that are again combined
    with k-means clustering for estimating the changes incurred in soil moisture prediction.
    These techniques were compared through metrics such as MAPE, MSE, speed, and power
    consumption from which XB + k-means was found to perform better. The XB + k-means
    algorithm was further used for the implementation of decision mechanism on the
    developed edge computing model. The proposed edge model saves the data communication
    cost and reduces the response time of IoT services. It can be deployed on existing
    devices on the network edges serving as edge nodes, thereby reducing the overall
    implementation cost of a large-scale IoT system. The edge-based approach was found
    to perform better than the cloud-based approach in terms of response time, latency,
    throughput, and bandwidth usage. Finally, the edge model was analyzed through
    CPU and memory usage while running with and without the algorithm. In both cases,
    the memory utilization is almost lower to total available resource of the edge
    device. From this, edge device can allocate its remaining resource for other computing
    services, which increases the efficiency of edge computing device. The number
    of end edge nodes can be increased according to the field area and then to check
    the potency of the system. Conflict of interest: The authors declare no conflict
    of interest. Data availability statement: All data that support the findings of
    this study are included within the article. References [1] India: Issues and Priorities
    for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/2012/05/17/india-agriculture-issues-priorities.Search
    in Google Scholar [2] India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.Search
    in Google Scholar [3] Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR,
    Baylis M, et al. Scientists’ warning to humanity: Microorganisms and climate change.
    Nature Rev Microbiol. 2019;17(9):569–86. 10.1038/s41579-019-0222-5. Search in
    Google Scholar PubMed PubMed Central [4] Huong NTL, Bo YS, Fahad S. Economic impact
    of climate change on agriculture using Ricardian approach: A case of Northwest
    Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. 10.1016/j.jssas.2018.02.006.
    Search in Google Scholar [5] Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A,
    Malyan SK. Global warming impacts of nitrogen use in agriculture: An assessment
    for India since 1960. Carbon Management. 2020;11(3):291–301. 10.1080/17583004.2020.1752061.
    Search in Google Scholar [6] Sarkar S, Chatterjee S, Misra S. Assessment of the
    suitability of fog computing in the context of internet of things. IEEE Trans
    Cloud Comput. 2018;6(1):46–59. 10.1109/TCC.2015.2485206. Search in Google Scholar
    [7] Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food
    security and food production systems. In: Field CB, Barros VR, Dokken DJ, Mach
    KJ, Mastrandrea MD, Bilir TE, et al., editors. Climate Change 2014: Impacts, Adaptation,
    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of the Intergovernmental Panel on Climate
    Change Cambridge, United Kingdom: Cambridge University Press and New York, NY,
    USA; 2014. p. 485–533.Search in Google Scholar [8] Lal R. Adaptation and mitigation
    of climate change by improving agriculture in India. In: S. SherazMahdi (Ed.),
    Climate Change and Agriculture in India: Impact and Adaptation. Cham: Springer
    International Publishing; 2019. p. 217–27. 10.1007/978-3-319-90086-5_17Search
    in Google Scholar [9] Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research
    on implementation and deployment of IoT projects in smart cities. Hershey: IGI
    global, 2019. 10.4018/978-1-5225-9199-3Search in Google Scholar [10] Baylis A.
    Advances in precision farming technologies for crop protection. Outlooks Pest
    Manag. 2017;28(4):158–61. 10.1564/v28_aug_04Search in Google Scholar [11] Mulla
    D, Khosla R. Historical evolution and recent advances in precision farming. Soil-Specific
    Farming Precision Agriculture. Boca Raton: CRC Press; 2015. 10.1201/b18759-2Search
    in Google Scholar [12] Dutta L, and Basu TK. Extraction and optimization of leaves
    images of mango tree and classification using ANN. IJRAET 2013;1(3):46–51. Search
    in Google Scholar [13] Kawai T, Mineno H. Evaluation environment using edge computing
    for artificial intelligence-based irrigation system. 2020 16th International Conference
    on Mobility, Sensing and Networking (MSN). Tokyo, Japan: IEEE; 2020. p. 214–9.
    10.1109/MSN50589.2020.00046Search in Google Scholar [14] Munir MS, Bajwa IS, Ashraf
    A, Anwar W, Rashid R. Intelligent and smart irrigation system using edge computing
    and IoT. Complexity. 2021;2021:1–16. 10.1155/2021/6691571Search in Google Scholar
    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in strawberry greenhouses. Comput
    Netw. 2020;167:107039. 10.1016/j.comnet.2019.107039Search in Google Scholar [16]
    Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.
    10.1109/MC.2017.9Search in Google Scholar [17] Shi W, Dustdar S. The promise of
    edge computing. Computer. 2016;49(5):78–81. 10.1109/MC.2016.145Search in Google
    Scholar [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha
    Rodrigues G, Saquette LR, et al. Low-cost fog computing platform for soil moisture
    management. In: 2020 International Conference on Information Networking (ICOIN).
    Barcelona, Spain: IEEE; 2020. p. 499–504. 10.1109/ICOIN48656.2020.9016572Search
    in Google Scholar [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M,
    Mora-Pascual, J, Mora-Martínez, J. Developing ubiquitous sensor network platform
    using internet of things: application in precision agriculture. Sensors. 2016;16(7):1141.
    10.3390/s16071141Search in Google Scholar PubMed PubMed Central [20] Xu X, Liu
    X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement for smart
    cities in edge computing. IEEE Internet Things J. 2020;7(5):4084–91. 10.1109/JIOT.2019.2959124Search
    in Google Scholar [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement
    scheduling and estimation using compressive sensing. In: 2012 ACM/IEEE 11th International
    Conference on Information Processing in Sensor Networks (IPSN). Beijing, China:
    IEEE; 2012. p. 1–11. 10.1145/2185677.2185679Search in Google Scholar [22] Kameoka
    T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart sensing in
    a Vineyard for advanced viticultural management. In: Proceedings of the 2014 International
    Workshop on Web Intelligence and Smart Sensing. Saint Etienne France; 2014. p.
    1–4. 10.1145/2637064.2637091Search in Google Scholar [23] Cagri Serdaroglu K,
    Onel C, Baydere S. IoT-based smart plant irrigation system with enhanced learning.
    In: 2020 IEEE Computing, Communications and IoT Applications (ComComAp.) Beijing,
    China: IEEE; 2020. p. 1–6. 10.1109/ComComAp51192.2020.9398892Search in Google
    Scholar [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated
    plant recognition using deep learning. In: Proceedings of the 10th International
    Conference on Computer Modeling and Simulation - ICCMS2018. Sydney, Australia:
    ACM Press; 2018. p. 87–91. 10.1145/3177457.3177506Search in Google Scholar [25]
    Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying machine
    learning on sensor data for irrigation recommendations: Revealing the agronomist’s
    tacit knowledge. Precision Agricult. 2018;19(3):421–44. 10.1007/s11119-017-9527-4Search
    in Google Scholar [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A.
    IoT and machine learning approaches for automation of farm irrigation system.
    Proc Comput Sci. 2020;167:1250–7. 10.1016/j.procs.2020.03.440Search in Google
    Scholar [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases.
    Int J Scientific Eng Res. 2016;7(5):1035–7. Search in Google Scholar [28] Ojha
    T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture: The state-of-the-art
    in practice and future challenges. Comput Electr Agricult. 2015;118:66–84. 10.1016/j.compag.2015.08.011Search
    in Google Scholar [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara
    MA. Automated irrigation system using a wireless sensor network and GPRS module.
    IEEE Trans Instrument Measurement. 2014;63(1):166–76. 10.1109/TIM.2013.2276487Search
    in Google Scholar [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT
    system design with real time stream processing and data flow integration. In:
    2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok, Thailand: IEEE;
    2019. p. 1–5. 10.1109/RI2C48728.2019.8999968Search in Google Scholar [31] Lv H,
    Wang S. Design and application of IoT microservices based on Seneca. USA: DEStech
    Transactions on Computer Science and Engineering, (icte.). 2016. 10.12783/dtcse/icte2016/4814Search
    in Google Scholar [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing
    using AES under HEROKU cloud. In: 2018 27th Wireless and Optical Communication
    Conference (WOCC). Hualien: IEEE; 2018. p. 1–5. 10.1109/WOCC.2018.8372705Search
    in Google Scholar [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural
    model for a high-performance fog/edge/cloud IoT platform. In: 2019 IEEE 5th world
    forum on internet of things (WF-IoT.) Limerick, Ireland: IEEE; 2019. p. 633–8.
    10.1109/WF-IoT.2019.8767282Search in Google Scholar [34] Weather API. Retrieved
    from https://openweathermap.org/api.Search in Google Scholar [35] Drew Gislason.
    Zigbee wireless networking, 1st ed. Newnes, London: Elsevier Publisher; 2008.
    Search in Google Scholar [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing
    for MQTT applications. In: Virvou M, Nakagawa H, Jain LC. (Eds.), Knowledge-Based
    Software Engineering: 2020. Cham: Springer International Publishing; 2020. p.
    47–59. 10.1007/978-3-030-53949-8_5Search in Google Scholar [37] Babun L, Denney
    K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms: Communication,
    security, and privacy perspectives. Comput Netw. 2021;192:108040. 10.1016/j.comnet.2021.108040Search
    in Google Scholar [38] Rastogi K, Lohani D. Edge computing-based internet of things
    framework for indoor occupancy estimation. Int J Ambient Comput Intell. 2020;11(4):16–37.
    10.4018/978-1-6684-5700-9.ch031Search in Google Scholar [39] Premkumar S, Sigappi
    AN. Functional framework for edge-based agricultural system. In: AI, Edge and
    IoT-based Smart Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.
    10.1016/B978-0-12-823694-9.00029-3Search in Google Scholar [40] Phani Kumar J,
    Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan K. Genetic divergence
    among Ramnad mundu chilli (Capsicum annuum L.) genotypes for yield and quality.
    Electr J Plant Breeding. 2021;12(1):228–34. Search in Google Scholar [41] Goap
    A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation management
    system using Machine learning and open source technologies. Comput Electronic
    Agricult. 2018;155:41–9. 10.1016/j.compag.2018.09.040Search in Google Scholar
    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy, benchmarks and standards for future
    research. Internet Things. 2020;12:100273. 10.1016/j.iot.2020.100273Search in
    Google Scholar [43] Sunardi A, Suharjito MVC architecture: a comparative study
    between Laravel framework and slim framework in freelancer project monitoring
    system web based. Proc Comput Sci. 2019;157:134–41. 10.1016/j.procs.2019.08.150Search
    in Google Scholar [44] Robert Shimonski. The wireshark field guide, 1st ed. New
    York: Syngress Press, Elsevier; 2013. 10.1016/B978-0-12-410413-6.00001-2Search
    in Google Scholar Received: 2022-01-10 Revised: 2022-02-28 Accepted: 2022-03-16
    Published Online: 2022-05-27 © 2022 S. Premkumar and AN. Sigappi, published by
    De Gruyter This work is licensed under the Creative Commons Attribution 4.0 International
    License. Download article (PDF) From the journal Journal of Intelligent Systems
    Volume 31 Issue 1 Submit manuscript Journal and Issue This issue All issues Articles
    in the same Issue Research Articles Construction of 3D model of knee joint motion
    based on MRI image registration Evaluation of several initialization methods on
    arithmetic optimization algorithm performance Application of visual elements in
    product paper packaging design: An example of the “squirrel” pattern Deep learning
    approach to text analysis for human emotion detection from big data Cognitive
    prediction of obstacle''s movement for reinforcement learning pedestrian interacting
    model The application of neural network algorithm and embedded system in computer
    distance teach system Machine translation of English speech: Comparison of multiple
    algorithms Automatic control of computer application data processing system based
    on artificial intelligence A secure framework for IoT-based smart climate agriculture
    system: Toward blockchain and edge computing Application of mining algorithm in
    personalized Internet marketing strategy in massive data environment On the correction
    of errors in English grammar by deep learning Research on intelligent interactive
    music information based on visualization technology Extractive summarization of
    Malayalam documents using latent Dirichlet allocation: An experience Conception
    and realization of an IoT-enabled deep CNN decision support system for automated
    arrhythmia classification Masking and noise reduction processing of music signals
    in reverberant music Cat swarm optimization algorithm based on the information
    interaction of subgroup and the top-N learning strategy State feedback based on
    grey wolf optimizer controller for two-wheeled self-balancing robot Research on
    an English translation method based on an improved transformer model Short-term
    prediction of parking availability in an open parking lot PUC: parallel mining
    of high-utility itemsets with load balancing on spark Image retrieval based on
    weighted nearest neighbor tag prediction A comparative study of different neural
    networks in predicting gross domestic product A study of an intelligent algorithm
    combining semantic environments for the translation of complex English sentences
    A study on automatic correction of English grammar errors based on deep learning
    A novel fingerprint recognition method based on a Siamese neural network A hidden
    Markov optimization model for processing and recognition of English speech feature
    signals Crime reporting and police controlling: Mobile and web-based approach
    for information-sharing in Iraq CRNet: Context feature and refined network for
    multi-person pose estimation Improving the efficiency of intrusion detection in
    information systems Research on reform and breakthrough of news, film, and television
    media based on artificial intelligence An optimized solution to the course scheduling
    problem in universities under an improved genetic algorithm An adaptive RNN algorithm
    to detect shilling attacks for online products in hybrid recommender system Computing
    the inverse of cardinal direction relations between regions An improved Jaya optimization
    algorithm with ring topology and population size reduction Review Articles A review
    on voice pathology: Taxonomy, diagnosis, medical procedures and detection techniques,
    open challenges, limitations, and recommendations for future directions An extensive
    review of state-of-the-art transfer learning techniques used in medical imaging:
    Open issues and challenges Special Issue: Explainable Artificial Intelligence
    and Intelligent Systems in Analysis For Complex Problems and Systems Tree-based
    machine learning algorithms in the Internet of Things environment for multivariate
    flood status prediction Evaluating OADM network simulation and an overview based
    metropolitan application Radiography image analysis using cat swarm optimized
    deep belief networks Comparative analysis of blockchain technology to support
    digital transformation in ports and shipping IoT network security using autoencoder
    deep neural network and channel access algorithm Large-scale timetabling problems
    with adaptive tabu search Eurasian oystercatcher optimiser: New meta-heuristic
    algorithm Trip generation modeling for a selected sector in Baghdad city using
    the artificial neural network Trainable watershed-based model for cornea endothelial
    cell segmentation Hessenberg factorization and firework algorithms for optimized
    data hiding in digital images The application of an artificial neural network
    for 2D coordinate transformation A novel method to find the best path in SDN using
    firefly algorithm Systematic review for lung cancer detection and lung nodule
    classification: Taxonomy, challenges, and recommendation future works Special
    Issue on International Conference on Computing Communication & Informatics Edge
    detail enhancement algorithm for high-dynamic range images Suitability evaluation
    method of urban and rural spatial planning based on artificial intelligence Writing
    assistant scoring system for English second language learners based on machine
    learning Dynamic evaluation of college English writing ability based on AI technology
    Image denoising algorithm of social network based on multifeature fusion Automatic
    recognition method of installation errors of metallurgical machinery parts based
    on neural network An FCM clustering algorithm based on the identification of accounting
    statement whitewashing behavior in universities Emotional information transmission
    of color in image oil painting College music teaching and ideological and political
    education integration mode based on deep learning Behavior feature extraction
    method of college students’ social network in sports field based on clustering
    algorithm Evaluation model of multimedia-aided teaching effect of physical education
    course based on random forest algorithm Venture financing risk assessment and
    risk control algorithm for small and medium-sized enterprises in the era of big
    data Interactive 3D reconstruction method of fuzzy static images in social media
    The impact of public health emergency governance based on artificial intelligence
    Optimal loading method of multi type railway flatcars based on improved genetic
    algorithm Special Issue: Evolution of Smart Cities and Societies using Emerging
    Technologies Data mining applications in university information management system
    development Implementation of network information security monitoring system based
    on adaptive deep detection Face recognition algorithm based on stack denoising
    and self-encoding LBP Research on data mining method of network security situation
    awareness based on cloud computing Topology optimization of computer communication
    network based on improved genetic algorithm Implementation of the Spark technique
    in a matrix distributed computing algorithm Construction of a financial default
    risk prediction model based on the LightGBM algorithm Application of embedded
    Linux in the design of Internet of Things gateway Research on computer static
    software defect detection system based on big data technology Study on data mining
    method of network security situation perception based on cloud computing Modeling
    and PID control of quadrotor UAV based on machine learning Simulation design of
    automobile automatic clutch based on mechatronics Research on the application
    of search algorithm in computer communication network Special Issue: Artificial
    Intelligence based Techniques and Applications for Intelligent IoT Systems Personalized
    recommendation system based on social tags in the era of Internet of Things Supervision
    method of indoor construction engineering quality acceptance based on cloud computing
    Intelligent terminal security technology of power grid sensing layer based upon
    information entropy data mining Deep learning technology of Internet of Things
    Blockchain in distribution network faults Optimization of shared bike paths considering
    faulty vehicle recovery during dispatch The application of graphic language in
    animation visual guidance system under intelligent environment Iot-based power
    detection equipment management and control system Estimation and application of
    matrix eigenvalues based on deep neural network Brand image innovation design
    based on the era of 5G internet of things Special Issue: Hybrid Fuzzy Systems
    for Mobile Robots and Their Applications IoT-enabled edge computing model for
    smart irrigation system Convex optimization for additive noise reduction in quantitative
    complex object wave retrieval using compressive off-axis digital holographic imaging
    Special Issue: Cognitive Cyber-Physical System with Artificial Intelligence for
    Healthcare 4.0. Auxiliary diagnosis study of integrated electronic medical record
    text and CT images A hybrid particle swarm optimization with multi-objective clustering
    for dermatologic diseases diagnosis An efficient recurrent neural network with
    ensemble classifier-based weighted model for disease prediction Design of metaheuristic
    rough set-based feature selection and rule-based medical data classification model
    on MapReduce framework Special Issue: Human-Centred Artificial Intelligence for
    Web 4.0 Construction of an IoT customer operation analysis system based on big
    data analysis and human-centered artificial intelligence for web 4.0 Human-centered
    artificial intelligence-based ice hockey sports classification system with web
    4.0 Subjects Architecture and Design Arts Asian and Pacific Studies Business and
    Economics Chemistry Classical and Ancient Near Eastern Studies Computer Sciences
    Cultural Studies Engineering General Interest Geosciences History Industrial Chemistry
    Islamic and Middle Eastern Studies Jewish Studies Law Library and Information
    Science, Book Studies Life Sciences Linguistics and Semiotics Literary Studies
    Materials Sciences Mathematics Medicine Music Pharmacy Philosophy Physics Social
    Sciences Sports and Recreation Theology and Religion Services For Journal Authors
    For Book Authors For Librarians Rights & Permissions Publications Publication
    types Open Access About Contact Career About De Gruyter Partnerships Press FAQs
    Social Facebook Instagram LinkedIn X / Twitter YouTube Winner of the OpenAthens
    Best Publisher UX Award 2022  Help/FAQ Privacy policy Cookie Policy Accessibility
    Terms & Conditions Legal Notice © Walter de Gruyter GmbH 2024 Cookie information
    We only use necessary cookies to be able to offer you our web services to the
    full extent. In our Cookie Policy you can find more details about all cookies
    we use and for what purposes. Close"'
  inline_citation: '>'
  journal: Journal of Intelligent Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Naboureh A.
  - Li A.
  - Ebrahimy H.
  - Bian J.
  - Azadbakht M.
  - Amani M.
  - Lei G.
  - Nan X.
  citation_count: '20'
  description: Irrigated agricultural expansion is one of the main reasons for water
    scarcity in the Lake Urmia basin. Although previous studies have analyzed the
    impact of cropland expansion on the Lake Urmia Shrinkage, there is a lack of comprehensive
    annual assessment of historical irrigation expansion in the Lake Urmia basin and
    its impact on water resources of this region. In this study, we developed an automatic
    and efficient workflow using Landsat and Gravity Recovery and Climate Experiment
    (GRACE) data, GRACE Follow-On (GRACE-FO) data, and a sample migration technique
    within the Google Earth Engine cloud computing platform to comprehensively investigate
    the impact of irrigated agricultural expansion on the shrinkage of Lake Urmia,
    as one of the most severe environmental crisis in the world. Additionally, using
    the global surface water data, we proposed a fully automatic procedure to obtain
    reference samples from water bodies. The Lake Urmia basin was first classified
    into the water, irrigated, and Non-Water/Irrigated classes using the random forest
    algorithm. The average overall accuracy of the produced annual land cover maps
    during 1987–2020 was 92.2%, representing the great potential of the developed
    method for land cover mapping. We found that the irrigated lands expanded by nearly
    890 km2 during the study period. Coincident with this change, although the area
    of water bodies in Lake Urmia partially recovered after 2015 (reached from 1,050
    km2 in 2015 to 3,370 km2 in 2020), it is currently far beyond its original condition
    (i.e., ∼5,400 km2, average record during 1987–2000). Moreover, the information
    of the Terrestrial Water Storage (TWS) from the GRACE and GRACE-FO data between
    2003 and 2020 showed a dramatic decrease in TWS level (∼−11.5 cm). The findings
    of this research will assist the local stakeholders and authorities to better
    understanding the environmental costs of irrigation expansion in the Lake Urmia
    basin.
  doi: 10.1016/j.jag.2021.102607
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Study area and materials
    3. Methodology 4. Results and discussion 5. Conclusion Declaration of Competing
    Interest Acknowledgment Appendix A. Supplementary material References Show full
    outline Cited by (22) Figures (8) Show 2 more figures Tables (5) Table 1 Table
    2 Table 3 Table 4 Table 5 Extras (1) Supplementary Data 1 International Journal
    of Applied Earth Observation and Geoinformation Volume 105, 25 December 2021,
    102607 Assessing the effects of irrigated agricultural expansions on Lake Urmia
    using multi-decadal Landsat imagery and a sample migration technique within Google
    Earth Engine Author links open overlay panel Amin Naboureh a b, Ainong Li a, Hamid
    Ebrahimy c, Jinhu Bian a, Mohsen Azadbakht c, Meisam Amani d, Guangbin Lei a,
    Xi Nan a Show more Share Cite https://doi.org/10.1016/j.jag.2021.102607 Get rights
    and content Under a Creative Commons license open access Highlights • We assessed
    the impact of irrigation expansions on water resources in Lake Urmia. • We adopted
    a reference sample migration technique for historical LC monitoring. • We presented
    an automatic sample reference extraction technique for water class. • We found
    that excessive irrigation expansions can cause environmental issues. Abstract
    Irrigated agricultural expansion is one of the main reasons for water scarcity
    in the Lake Urmia basin. Although previous studies have analyzed the impact of
    cropland expansion on the Lake Urmia Shrinkage, there is a lack of comprehensive
    annual assessment of historical irrigation expansion in the Lake Urmia basin and
    its impact on water resources of this region. In this study, we developed an automatic
    and efficient workflow using Landsat and Gravity Recovery and Climate Experiment
    (GRACE) data, GRACE Follow-On (GRACE-FO) data, and a sample migration technique
    within the Google Earth Engine cloud computing platform to comprehensively investigate
    the impact of irrigated agricultural expansion on the shrinkage of Lake Urmia,
    as one of the most severe environmental crisis in the world. Additionally, using
    the global surface water data, we proposed a fully automatic procedure to obtain
    reference samples from water bodies. The Lake Urmia basin was first classified
    into the water, irrigated, and Non-Water/Irrigated classes using the random forest
    algorithm. The average overall accuracy of the produced annual land cover maps
    during 1987–2020 was 92.2%, representing the great potential of the developed
    method for land cover mapping. We found that the irrigated lands expanded by nearly
    890 km2 during the study period. Coincident with this change, although the area
    of water bodies in Lake Urmia partially recovered after 2015 (reached from 1,050
    km2 in 2015 to 3,370 km2 in 2020), it is currently far beyond its original condition
    (i.e., ∼5,400 km2, average record during 1987–2000). Moreover, the information
    of the Terrestrial Water Storage (TWS) from the GRACE and GRACE-FO data between
    2003 and 2020 showed a dramatic decrease in TWS level (∼−11.5 cm). The findings
    of this research will assist the local stakeholders and authorities to better
    understanding the environmental costs of irrigation expansion in the Lake Urmia
    basin. Previous article in issue Next article in issue Keywords Land coverIrrigation
    expansionsLake UrmiaGoogle Earth EngineSample migrationLandsat 1. Introduction
    Water and food scarcity, which are interlinked with each other, have been extensively
    exacerbated by global warming and world population growth during past decades
    (Rosa et al., 2020). It also has been reported that rain-fed cropping systems
    could not meet agricultural commodities’ needs because the demand for food has
    increased in recent decades (Ayala et al., 2016). As such, expansion of irrigated
    cropping systems through exploiting surface water and groundwater has been adopted
    to respond to this issue in many areas of the world (Ayala et al., 2016, de Moraes
    et al., 2017). However, irrigated agricultural extensions can increase the pressure
    on water resources, particularly in arid and semi-arid areas, including the Lake
    Urmia basin in Iran. Lake Urmia, as one of the United Nations Educational, Scientific
    and Cultural Organization (UNESCO) biosphere reserves, has experienced an environmental
    tragedy in recent years (Khazaei et al., 2019). This lake has become an endangered
    ecosystem and experienced a dramatic decline in the area and water level due to
    both climatic change and anthropogenic interventions (Panahi et al., 2020, Chaudhari
    et al., 2018, Jaberizadeh, H., 2020, Wurtsbaugh et al., 2017). Among many consequences
    of the Lake Urmia shrinkage, the appearance of salt dust storms that threatens
    the lives of humans and species (Feizizadeh et al., 2021) is a serious threat
    that can directly damage agriculture, livestock, and cause significant loss of
    property and life. Salt dust storms can also bring indirect costs. For instance,
    it can lead to a loss of business, and increase or cause health issues. An increase
    in water salinization and a decrease in the quality of the natural environment
    are other negative side effects of intensive dust storms in this region. So far,
    several studies have been devoted to examine the roles of human activities and
    climate change on the shrinkage of Lake Urmia. For example, multiple studies assessed
    the role of climate variability on the shrinkage of Lake Urmia (Alborzi et al.,
    2018, Fathian et al., 2015), while some others compared the similarity of this
    disaster with other cases around the world (Destouni et al., 2013, Aghakouchak
    et al., 2015). The environmental impacts of Lake Urmia shrinkage (Feizizadeh et
    al., 2021, Garajeh et al., 2021), over extraction of groundwater (Amiri et al.,
    2016), and infrastructures developments were also broadly discussed in different
    studies (Sabbagh-Yazdi et al., 2020). Although there is no exact consensus on
    reporting the most influential driver of this issue, it is widely reported that
    the role of human intervention was more significant than climate change (Saemian
    et al., 2020, Sabbagh-Yazdi et al., 2020, Khazaei et al., 2019, Chaudhari et al.,
    2018). As an example of human intervention, the substantial impact of irrigated
    area expansion on the shrinkage of the lake has been reported (Balkanlou et al.,
    2020, Shirmohammadi et al., 2020). However, previous studies rather did not extract
    annual changes in irrigated agricultural and water areas and/or failed to extract
    small-scale changes. Moreover, previous studies mostly focused on cropland expansion
    (both rain-fed and irrigation), hence leaving a gap in the comprehensive analysis
    of the impact of irrigation expansion on the Lake Urmia tragedy. For example,
    Khazaei et al. (2019) and Saemian et al. (2020) assessed the role of agricultural
    area expansion on the water shrinkage of the basin using the yearly LC products
    of MODerate Resolution Imaging Spectrometer (MODIS) satellite. However, due to
    the coarse resolution of the MODIS products (250 m or 500 m), the estimated locations
    of small irrigated lands are fairly uncertain, and it is hard to extract changes
    at fine-scale from their results. In another study, Shirmohammadi et al. (2020)
    analyzed the impact of irrigation expansion on water scarcity in the Mordagh Chay
    basin, one of the Lake Urmia’s sub-basins between 1993 and 2015. Since the Mordagh
    Chay basin covers relatively a small area of Lake Urmia basin, it may not be accurate
    to extend the results of this study to the entire basin. In this regard, LC mapping
    by classification of the freely available Landsat collection (Landsat-5, 7, and
    8), which provide long time-series satellite images from 1985 to present, can
    be a viable alternative to thoroughly investigate agricultural changes at fine
    scale around the world. When the objective is LC change analysis, it is important
    to have reliable reference data to train and validate machine learning algorithms
    (Stehman and Foody, 2019, Naboureh et al., 2020a). However, sufficient and reliable
    reference sample data are not always available especially in long-term LC change
    analyses (Chen et al., 2019, Naboureh et al., 2021). In this regard, the reference
    sample migration technique has been proposed as an effective solution to address
    this obstacle (Huang et al., 2020). In this manner, sample migration methods,
    which mostly try to transfer reference sample data from a specific reference time
    to another desired time, have been employed for LC mapping in different studies.
    For example, an automatic approach for LC mapping in a rapidly urbanizing state
    was introduced based on migrating data from the GlobeLand30 data (Lin et al.,
    2019). Moreover, a sample dataset (30-m resolution) collected in 2015 was used
    to produce a global LC map at 10-m resolution in 2017 (Chen et al., 2019). However,
    the migration of reference samples in LC mapping, in particular for long-term
    LC change monitoring, is in its infancy yet and needs more investigation from
    scholars. Timely and accurate information on irrigated agricultural areas and
    their spatial changes can help decision-makers at various disciplines, such as
    food security management, hydrologic modeling, and sustainable development (Deines
    et al., 2017). As a result, several studies have been devoted to characterize
    and investigate the impacts of the spatiotemporal changes of irrigated areas in
    different parts of the world (Demarez et al., 2019, Peña-Arancibia et al., 2014).
    In the case of Lake Urmia, although a few studies have so far examined the effects
    of agricultural activities on the shrinkage of the Lake Urmia basin, the impact
    of irrigated agricultural expansion on surface and groundwater levels of this
    Lake has not been well documented and presented. To this end, historical consistent
    field data along with powerful machine learning and cloud computing algorithms/platforms
    are required. Therefore, we proposed an efficient and robust workflow within the
    GEE platform to extract annual surface water bodies and irrigated agricultural
    areas and their changes in the Lake Urmia basin from 1987 to 2020 through an efficient
    sample migration framework. Moreover, we investigated the impacts of the irrigated
    agricultural expansion on TWS changes derived from the GRACE and GRACE-FO data.
    We also presented an automatic sample reference extraction technique for water
    class. 2. Study area and materials 2.1. Study area The Lake basin (Fig. 1), which
    covers an area of nearly 54,000 km2, is one of the main hydrological basins located
    in the North-West of Iran. As the second-largest inland salt lake worldwide, Lake
    Urmia receives water from 29 rivers and 39 floodways. The basin is home to more
    than 5 million people, where the economy of most people is largely dependent on
    agricultural production. The average water discharge into Lake Urmia declined
    from 2112 million cubic meters to 750 million cubic meters between 1960 and 2010,
    and the water level significantly decreased from 1278 m in 1995 to 1270 m in 2014
    (Khazaei et al., 2019). Download : Download high-res image (276KB) Download :
    Download full-size image Fig. 1. The location of the study area. a) The elevation
    map of the Lake Urmia basin. b) Location of the Lake Urmia Basin in North-West
    of Iran. c) Changes in Lake water level elevation during 1987–2019. 2.2. Data
    collection and image pre-processing For the period of 1987 to 2020, all available
    Landsat (TM/ETM+/OLI) surface reflectance products between June 26th and October
    1st (dry season), where most of rain-fed agricultural areas were already harvested
    and shared similar spectral reflectance to barren areas, were acquired to extract
    irrigated areas. Since the available Landsat-5 could not cover the whole study
    area in 2003, 2005, and 2008 (Fig. 2.a), on the one hand, and Landsat-7 from June
    2003 to December 2011 were reported unsuitable for extracting water bodies due
    to scan line corrector failure issue (Tulbure and Broich, 2013), on the other
    hand, we discarded the mentioned years from our analyses. Overall, 1,733 Landsat
    images, including 1,112 Landsat-5, 104 Landsat-7, and 517 Landsat-8 images were
    processed to analyze the annual changes in three classes of water, irrigated,
    and Non-Water/Irrigated (NWI) from 1987 to 2020 (Fig. 2.c). The FMASK algorithm,
    which is available in the GEE platform, was applied to each image to remove snow,
    clouds, and cloud-shadows (Gorelick et al., 2017, Bian et al., 2020). Then, for
    each year, a stacked layer of the acquired Landsat images for the given year was
    generated. Finally, the 50th percentile (i.e., median) of the Landsat bands were
    calculated to create the mosaic images for LC classification. Download : Download
    high-res image (294KB) Download : Download full-size image Fig. 2. The Landsat
    image collection for study. a) Distribution of Landsat-5 images for the years
    2003, 2005, and 2008. b) Number of the processed Landsat 5, 7, and 8 images (from
    June 26th and October 1st during 1987–2020). C) Path/raw coverage of the study
    area. 3. Methodology The proposed method has four main steps, which are illustrated
    in Fig. 3 and are briefly described below. More details of each step are also
    provided in the following subsections. Download : Download high-res image (266KB)
    Download : Download full-size image Fig. 3. Overall workflow of the employed methodology
    in this study. (1) Generating input features (i.e., cloud-free Landsat stacks,
    spectral indices, and topographic data) for annual LC classifications. (2) Producing
    reference sample datasets via fieldwork for the irrigated class, fieldwork and
    visual interpretation of very high-resolution images for the NWI class, and an
    automatic procedure for the water class. This step also contains extracting robust
    samples during two epochs of 1987–2008 and 2009–2020 based on a simple reference
    migration technique. (3) Implementing the Random Forest (RF) classifier for generating
    LC maps and validating the produced LC maps based on three well-known accuracy
    evaluation metrics. (4) Analyzing the TWS condition in the study area using the
    GRACE and GRACE-FO datasets. 3.1. Input features In this study, along with main
    spectral bands of Landsat, five spectral indices (Table 1) of the Normalized Difference
    Vegetation Index (NDVI), Enhanced Vegetation Index (EVI), Normalized Difference
    Water Index (NDWI), Modified Normalized Difference Water Index (MNDWI), and Soil-Adjusted
    Vegetation Index (SAVI) were also generated from the cloud-free Landsat stacks
    (see Section 2.2) to be used in the classification procedure. Moreover, we employed
    the topographic products of the elevation, aspect, and slope, which were generated
    using the Shuttle Radar Topography Mission data. Overall, we used six Landsat
    bands (Blue, Green, Red, Near-infrared, Short-wave infrared 1, and Short-wave
    infrared 2), five spectral indices, and three topographic products for LC classification
    of each year. Table 1. List of produced spectral indices (SWIR = short-wave infrared
    and NIR = near infrared). Index Formula Reference NDVI (NIR – Red)/(NIR + Red)
    (Rouse et al., 1974) EVI 2.5 × ((NIR-RED)/(NIR + 6 × Red-7.5 × Blue + 1)) (Carlson
    and Ripley, 1997) NDWI (Green – NIR)/(Green + NIR) (Mcfeeters, 1996) MNDWI (Green
    – SWIR1)/(Green + SWIR1) (Xu, 2006) SAVI ((NIR – Red)/(NIR + Red + 1.5)) × (1.5)
    (Huete, 1988) 3.2. Producing reference samples In the present study, three different
    procedures were used to generate high-quality reference sample data. For the water
    class, a fully Automatic Water Sample Generation (AWSG) method was developed using
    the yearly water maps provided by the Joint Research Center (JRC) (Pekel et al.,
    2016). Within the proposed method, a pixel had to meet two criteria to be included
    in the samples of the water class. First, it should be classified as water in
    all the annual JRC LC products of the examined epoch (1987–2008 or 2009–2020).
    Second, based on the suggestion of (Wang et al., 2020), we considered three spectral
    indices (i.e., MNDWI, NDVI, and EVI) for achieving better results. Accordingly,
    a given candidate pixel should also meet the following condition. (1) ((MNDWI
    > NDVI or MNDWI > EVI) and EVI less than 0.1) After these two steps, the obtained
    samples were visually double-checked to remove possible errors. The code for AWSG
    is available in the Supplementary data (part 1). Since it is very difficult to
    precisely distinguish irrigated areas from natural vegetated regions using the
    visual interpretation method, reference sample data for this class was collected
    by fieldwork during summer 2020. Moreover, sample data for the NWI class were
    collected using both fieldwork (summer 2020) and visual interpretation of very
    high spatial resolution satellite images. 3.2.1. Reference sample migration A
    sample migration workflow inspired by Huang et al. (2020) was designed to generate
    annual reference sample data of irrigated and NWI classes for previous years (2019–1987).
    To this end, first, the spectral information of candidate sample data (Spectral
    Angle Distance (SAD) and Euclidean Distance (ED)) from different spectral bands
    in the given reference year (e.g., 2020) and target years (e.g., 2019) were extracted
    from the generated final cloud-free mosaic images. Then, spectral differences
    of candidate sample data in the reference year and target year were calculated
    and those data that showed small spectral differences (i.e., less than a predefined
    threshold) were marked as unchanged samples. The predefined threshold value of
    each class was obtained based on a trial-and-error procedure. Furthermore, only
    spectrally unchanged sample data during 1987–2008 and 2009–2020 were extracted
    for further analysis. Finally, after a visual interpretation by raw Landsat images
    of the target year, spectrally unchanged sample data in two classes (irrigated
    and NWI) were identified in two separate sample datasets in epoch 1987–2008 (dataset-1)
    and 2009–2020 (dataset-2) (Table 2). Consequently, dataset-1 and dataset-2 were
    used to generate annual LC maps for the periods of 1987–2008 and 2009–2020, respectively.
    Table 2. The number of reference samples for different LC classes in different
    time periods Empty Cell Water Irrigated NWI Dataset-1 (1987–2008) 400 581 750
    Dataset-2 (2009–2020) 250 581 750 Based on a detailed visual interpretation of
    very high-resolution satellite images and local knowledge, we selected 80 unchanged
    reference samples and 20 changed samples of irrigated class during the 2015–2020
    period to obtain the optimal threshold value for spectral similarity checking
    as well as evaluating the efficiency of the sample reference technique. Accordingly,
    to maintain a fair analysis, three experiments were conducted for the years 2017,
    2016, and 2015. As randomly splitting reference samples can lead to a low bias
    performance assessment of a classifier, each reference dataset was randomly divided
    into two equal groups (50–50%) of independent training and test samples. The training
    data were used for training the RF classifier and the test data were used for
    assessing the accuracy of the produced LC maps. 3.3. LC classification and accuracy
    assessment The training reference samples and the generated features were ingested
    into a RF classifier to produce the LC maps. RF was selected in this study due
    to its high performance in different LC mapping tasks (Rodriguez-Galiano et al.,
    2012). RF, as an ensemble of multiple independent individual decision trees, is
    an enhanced form of the bagging method (Breiman, 1996). It resamples the input
    datasets until the model reaches a stable situation which also declines the over-fitting
    risk. Obtaining the high classification accuracy using an RF classifier depends
    on optimization of two parameters, namely the number of variables (input features)
    for splitting at each tree node (mtry) and the number of produced trees (ntree)
    (Rodriguez-Galiano et al., 2012). Accordingly, after a trial-and-error procedure,
    mtry and ntree were set to 4 and 500, respectively. The test samples were utilized
    for the statistical accuracy assessment of the LC maps. To this end, the three
    well-known accuracy evaluation metrics, extracted from the confusion matrix (Foody,
    2002), were employed. These metrics were the Overall Accuracy (OA), User Accuracy
    (UA), and Producer Accuracy (PA). The code for applying the proposed classification
    scheme is available in the Supplementary data (part 2). 3.4. TWS analysis In this
    study, the 5° GRACE Tellus monthly data was used to calculate annual TWS between
    2003 and 2016. Since the GRACE Tellus data is provided by three different centers,
    namely Geo Forschungs Zentrum Potsdam (GFZ), U. Texas/Center for Space Research
    (CSR), and NASA Jet Propulsion Laboratory (JPL), a mean value of all three datasets
    was calculated following the recommendations in Forootan et al. (2017). Additionally,
    the GRACE-FO data from the CSR and JPL centers were used to estimate annual TWS
    for 2019 and 2020. It should be noted that since the GRACE-FO data are available
    for the winter and spring seasons of 2017 and 2018 (not the whole year), we discarded
    2017 and 2018 from our analyses. Then, the annually averaged TWS data for 2003–2020
    were used to explore the relationship among the changes of surface water, irrigated
    areas, and TWS data in the Lake Urmia basin. 4. Results and discussion 4.1. Reference
    sample generation The AWSG method was proposed to automatically generate water
    samples in this study. Within the AWSG method, a total of 400 samples for each
    year between 1987 and 2008 and 250 samples for each year between 2009 and 2020
    were acquired. Since the presented methodology relies on the freely and publicly
    available JRC data and the GEE platform, the high cost and difficulty of traditional
    reference sample collection approaches for water class are obviated by AWSG. Another
    advantage of the proposed method is that the AWSG method not only can generate
    samples of water class for each year from 1985 to the present but also is able
    to produce stable samples of water class since 1985. On the other hand, after
    analyzing the spectral differences (SAD and ED) of the candidate samples and visual
    interpretation of raw Landsat images, we generated 581 and 750 samples for the
    irrigated and NWI classes, respectively, as unchanged samples during 1987–2020.
    We also picked 100 samples that are labeled as irrigated in 2020 and migrated
    them to the years 2017, 2016, and 2015 to thoroughly evaluate the efficiency of
    the adopted sample migration technique. The obtained high accuracies (Table 3)
    over three experiments revealed that the designed sample migration technique is
    a robust approach in dealing with the shortage of high-quality reference samples
    in LC mapping. The visual assessment illustrated that less than 5% of the candidate
    samples (5 samples in 2017, 3 samples in 2016, and 4 samples in 2015) were removed
    due to spectral differences between reference (i.e., 2020) and target year (i.e.,
    2017,2016, and 2015) while those samples did not experience LC changes. In general,
    the success of the proposed reference sample migration methodology was mostly
    attributed to the combination of spectral differences and visual interoperation,
    as their vital importance in sample migration had been reported (Ghorbanian et
    al., 2020). Overall, integration of the proposed sample migration methodology
    and AWSG can be considered as a robust practice to deal with the shortage of high-quality
    reference sample in long-term LC change analysis. Table 3. Accuracy evaluation
    of the adopted sample migration techniques for the irrigated class. Experiment
    1 (2017) Experiment 2 (2016) Experiment 3 (2015) Empty Cell Stable changed Empty
    Cell Stable Changed Empty Cell Stable Changed Stable 75 5 Stable 77 3 Stable 76
    4 Changed 0 20 Changed 0 20 Changed 0 20 OA = 95% OA = 97% OA = 96% 4.2. Land
    cover classification results and analysis To comprehensively evaluate the outcomes,
    the accuracies of the generated LC maps using the migrated reference samples were
    initially assessed using a visual interpretation with the available very high-resolution
    satellite images in Google Earth. Visually, it was observed that the final LC
    maps were noise-free and provide satisfactory depictions of all three classes.
    As demonstrated in Fig. 4, the proposed method was not only capable of precisely
    extracting water bodies but also properly discriminated the irrigated and NWI
    classes from each other. Download : Download high-res image (299KB) Download :
    Download full-size image Fig. 4. Visual assessment of the generated LC maps. a)
    An example of generated map along with satellite image for 2020. b) Three zoomed
    areas of the generated LC maps and corresponding satellite images. Regarding spatial
    changes from 1987 to 2020, most shrinkage occurred in the south part of the lake
    while the north part had the largest share of the stable surface water bodies
    (Fig. 5). As the 16-km Shahid Kalanatri causeway divides these two parts (Fig.
    5-D), it was reported that the construction of this causeway in the early 1990s
    disrupted water circulation between the north part (lower salinity) and the south
    part (higher salinity) of the lake that increased the salinity and evaporation
    in the south part (Sabbagh-Yazdi et al., 2020). We also found that several dams
    have been constructed in the basin over the study period (the year of the construction
    for the major dams is presented in Fig. 5) where irrigated areas mostly expanded
    around these dams. Download : Download high-res image (300KB) Download : Download
    full-size image Fig. 5. Spatial distribution of changes in water and irrigated
    areas between 1978 and 2020. Moreover, three statistical accuracy metrics (i.e.,
    OA, UA, and PA) were calculated for all the produced LC maps. Over the examined
    period, OA values of the LC maps varied between 90.1% and 94.2%, achieving an
    average OA of 92.2 % for all generated LC maps (Table 4). Regarding individual
    LC classes, the water class showed the highest average PA and UA. This can be
    explained twofold: the spectral response of the water class is more distinguishable
    than the other two LC classes, and the water spectral index (i.e. NDWI) has a
    high ability in extracting water class (Mcfeeters, 1996, Naboureh et al., 2020b).
    In general, all the assessed accuracy metrics of the classified LC maps were reasonably
    good considering the long-term change analysis performed using Landsat imagery
    (Zhu, 2017, Zhu and Woodcock, 2014). Table 4. Average values of user accuracy
    and producer accuracy of all generated maps during 1987–2020. Metrics Water Irrigated
    NWI User accuracy (%) 99.8 91.2 90.6 Producer accuracy (%) 99.7 85.2 94.5 4.3.
    Change in irrigated and water areas In this part, we assessed the changes in the
    areas of water and irrigated lands. Overall, as shown in Fig. 6 (a), the area
    of the irrigated class experienced an upward trend reaching 8,300 km2 in 2020
    from 7,410 km2 in 1987. By further investigation, it was observed that the irrigated
    class slightly expanded until 2009 and, then, there was a sharp rise in 2010 (∼700
    km2 increase), where the area reached 8,210 km2. Finally, it peaked at 8,300 km2
    in 2020 after witnessing some fluctuations during 2010–2020. In contrast, there
    was a dramatic decrease in the area of water class, where the total water areas
    dropped from 5,390 km2 to 3,370 km2 during the period of 1987–2020. Download :
    Download high-res image (550KB) Download : Download full-size image Fig. 6. Irrigated
    and water land area change in the Lake Urmia basin. A) Annual changes in areas
    of water and irrigated lands between 1987 and 2020. B) Spatiotemporal variations
    of water and irrigated classes during 1987–2020. After a decade of fluctuations
    in the area of water class, the highest coverage of water area was recorded in
    1998 (5,600 km2) covering approximately 11% of the whole basin (Fig. 6 (b)). Then,
    the lake started to substantially shrink, where in 2014 the area of the water
    class was around 1,050 km2 (∼2% of the whole basin). Despite a moderate expansion
    in the area of the water class after 2015 and reaching 3,370 km2 in 2020, Lake
    Urmia still needs a rise of nearly 2,000 km2 to return to its primary state in
    1987 (5,400 km2). The moderate recovery of the lake after 2015 can be explained
    as the outcome of the Lake Urmia Restoration Program (LURP), which was established
    by the Iran government to revive the lake in 2013 based on a 10-year program (Saemian
    et al., 2020), and a substantial increase in precipitation in this area (Ghale
    et al., 2019). 4.4. Changes in TWS level By analysing the mean values of TWS from
    the three centers during the 2003–2016 period, it was observed that there was
    a remarkable drop in the TWS level in the study area (Table 5). The TWS level
    experienced an upward trend and reached from +2.2 cm to +5.1 cm between 2003 and
    2004. Furthermore, there was a downward trend during the period of 2004 to 2009
    (drop to −7 cm) which was followed by a sudden increase (with an increase of +1.5
    cm, reached to −5.5 cm) in the amount of TWS in 2010. However, from 2010 to 2016,
    the level of TWS considerably declined and reached −16.4 cm at the end of the
    period. The lowest point of TWS was −17.5 cm in 2014, while the highest point
    was 5.1 cm in 2015. Finally, as shown in Table 5, the mean values of TWS experienced
    substantial growth for the years 2019 (−8.4) and 2020 (−9.3). Table 5. Mean annual
    values of TWS in the Lake Urmia basin between 2003 and 2016. Year 2003 2004 2005
    2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2019 2020 Mean +2.2 +5.1
    +4.7 +2.7 +0.6 −6.0 −7.0 −5.5 −10.6 −11.5 −11.2 −17.5 −17.4 −16.4 −8.4 −9.3 4.5.
    Investigating driving factors on Lake Urmia shrinkage It is generally accepted
    that the warming climate can exacerbate water scarcity (Rosa et al., 2020). In
    the case of Lake Urmia, Chaudhari et al. (2018) reported weak correlations on
    annual Lake water level with temperature (R2 = −0.36) and precipitation (R2 =
    0.15) from 1980 to 2010. Khazaei et al. (2019) also argued that climate change
    cannot properly explain the Lake Urmia crisis and the impacts of human activities
    are more dominant. Moreover, the two neighbor lakes of this lake, namely Lake
    Van and Lake Sevan, with less than 200 km distance and almost similar size and
    climate conditions, have witnessed stabilized situations during the last decades
    (Fig. 7). Taravat et al., 2016, Sabbagh-Yazdi et al., 2020 reported only about
    30 and 35 km2 reduction in surface water areas between 1975 and 2015 for the Lake
    Sevan and Lake Van, respectively. All these imply that the impact of anthropogenic
    activities on the Lake Urmia crisis is likely higher than the impact of climate
    change and variability. Download : Download high-res image (331KB) Download :
    Download full-size image Fig. 7. Satellite view and location of Lake Urmia, Lake
    Van, and Lake Sevan in 1987, 1997, and 2014. To investigate the impact of irrigated
    expansions on the Lake Urmia crisis, as an example on human activities, we analyzed
    the changes in irrigated lands, water areas, and TWS values in the basin. We also
    used Lake water level information obtained from the Iranian Water Resources Management
    (2019) during 1987–2019 where there was an over 5 m drop in water level of the
    lake (Fig. 1 (c)). It was observed that irrigated expansions negatively affected
    the surface and underground water levels in the Lake Urmia basin (Fig. 8). The
    expansion in the irrigated area and a decreasing trend in water area showed a
    moderate relationship (R2 = 0.52) during 1987–2020. Meanwhile, water level with
    R2 = 0.49 (during 1987–2019) and TWS with R2 = 0.44 (during 2003–2020) also moderately
    reacted to the expansions of the irrigated area in the Lake Urmia basin. Download
    : Download high-res image (184KB) Download : Download full-size image Fig. 8.
    The impact of irrigated agricultural expansions on the Lake Urmia crisis. a) Water
    area, (b) TWS, and (c) water level. During the last decades, consistent growth
    in population and investments in the agricultural sector have been reported in
    the Lake Urmia basin (Balkanlou et al., 2020). Based on the Statistical Center
    of Iran (2016), the population of the basin significantly increased from approximately
    5 million to about 7.2 million from 1985 to 2016. All these changes and the growing
    food requirements in the region have led to irrigation expansion. As a result,
    extensive water abstraction, well drilling, and dam construction have been reported.
    Based on a report published by the Iranian Water Resources Management in 2019,
    nearly 60 dams have been built in the Lake Urmia basin during the last four decades
    which corresponds well with our results (Fig. 6). Jaberizadeh (2020) reported
    these constructions not only could not help to compensate for the water shortage
    in the Lake Urmia basin but also have led to deforestation and ecological transformations.
    It was also reported that the number of wells in the Lake Urmia basin has increased
    from 55,199 in 1984 to 106,200 in 2017 (Bashirian et al., 2020), which stressed
    the pressure on underground water. In this regard, Ghale et al. (2019) reported
    that the annual inflow from rivers to the lake has declined in the basin because
    of growing discharge water from dams and wells during the 1975–2019 period. Therefore,
    the Lake Urmia crisis was intensified by the expansion of irrigated agricultural
    lands and its associated issues (e.g., constructions of dams, drilling wells,
    river diversion/damming, and excessive water abstractions). This was in agreement
    with the findings of different studies where human activities have been introduced
    as one of the main driving factors of the Lake Urmia crisis (Ghale et al., 2019,
    Khazaei et al., 2019, Schulz et al., 2020, Chaudhari et al., 2018). However, it
    does not mean that the impacts of global warming and severe droughts are negligible.
    5. Conclusion During recent years, the water crisis of Lake Urmia enormously damaged
    its ecosystem and socio-economic activities of the surrounding areas. Here, we
    presented the long-term annual LC changes based on Landsat images and the GEE
    platform to investigate the impact of irrigated agricultural expansion on water
    resources in the Lake Urmia basin. We also examined the feasibility of automatic
    generation of reference samples for the water class from the JRC data. Although
    this was the first attempt at long-term annual LC monitoring using a reference
    sample migration technique, the high OA of 92.2 % (on average) for all generated
    LC maps showed the efficiency of the proposed workflow. Through the performed
    analysis, it was observed that surface water, underground water, and the Lake
    water level were moderately impacted by the irrigated expansions. From 1987 to
    2020, the irrigated lands of the basin increased by 890 km2 while surface water
    areas experienced a 2,020 km2 reduction. During 1987–2019, there was also nearly
    a 5 m drop in the Lake water level. Furthermore, an 11.5 cm reduction in TWS level
    witnessed during 2003–2020. In general, to set better environmental management
    policies, decision-makers and authorities should take into account the fact that
    irrigation expansion can cause serious environmental costs. CRediT authorship
    contribution statement Amin Naboureh: Conceptualization, Methodology, Software,
    Data curation, Writing – original draft, Funding acquisition. Ainong Li: Conceptualization,
    Supervision, Funding acquisition, Writing – review & editing. Hamid Ebrahimy:
    Conceptualization, Software, Investigation, Data curation, Writing – original
    draft. Jinhu Bian: Validation, Formal analysis, Funding acquisition. Mohsen Azadbakht:
    Data curation, Formal analysis, Writing – review & editing. Meisam Amani: Formal
    analysis, Writing – review & editing. Guangbin Lei: Formal analysis. Xi Nan: Formal
    analysis. Declaration of Competing Interest The authors declare that they have
    no known competing financial interests or personal relationships that could have
    appeared to influence the work reported in this paper. Acknowledgment We thank
    the Editor, Associate Editor, and the anonymous reviewers for providing constructive
    comments, by which the current manuscript improved considerably. This research
    was jointly funded by the National Key Research and Development Program of China
    (2020YFA0608700), the Strategic Priority Research Program of CAS (XDA19030303),
    the National Natural Science Foundation project of China (41801370, 42090015),
    the Youth Innovation Promotion Association CAS (Grant 2019365), and the CAS-TWAS
    president’s fellowship for international doctoral students. Appendix A. Supplementary
    material The following are the Supplementary data to this article: Download :
    Download Word document (26KB) Supplementary Data 1. References Aghakouchak et
    al., 2015 A. Aghakouchak, H. Norouzi, K. Madani, A. Mirchi, M. Azarderakhsh, A.
    Nazemi, N. Nasrollahi, A. Farahmand, A. Mehran, E. Hasanzadeh Aral Sea syndrome
    desiccates Lake Urmia: call for action J. Great Lakes Res., 41 (2015), pp. 307-311
    View PDFView articleView in ScopusGoogle Scholar Alborzi et al., 2018 A. Alborzi,
    A. Mirchi, H. Moftakhari, I. Mallakpour, S. Alian, A. Nazemi, E. Hassanzadeh,
    O. Mazdiyasni, S. Ashraf, K. Madani Climate-informed environmental inflows to
    revive a drying lake facing meteorological and anthropogenic droughts Environ.
    Res. Lett., 13 (2018), Article 084010 CrossRefView in ScopusGoogle Scholar Amiri
    et al., 2016 V. Amiri, M. Nakhaei, R. Lak, M. Kholghi Geophysical, isotopic, and
    hydrogeochemical tools to identify potential impacts on coastal groundwater resources
    from Urmia hypersaline Lake, NW Iran Environ. Sci. Pollut. Res., 23 (2016), pp.
    16738-16760 CrossRefView in ScopusGoogle Scholar Ayala et al., 2016 L.M. Ayala,
    M. van Eupen, G. Zhang, M. Pérez-Soba, L.G. Martorano, L.S. Lisboa, N.E. Beltrao
    Impact of agricultural expansion on water footprint in the Amazon under climate
    change scenarios Sci. Total Environ., 569 (2016), pp. 1159-1173 Google Scholar
    Balkanlou et al., 2020 K.R. Balkanlou, B. Müller, A.F. Cord, F. Panahi, A. Malekian,
    M. Jafari, L. Egli Spatiotemporal dynamics of ecosystem services provision in
    a degraded ecosystem: a systematic assessment in the Lake Urmia basin, Iran Sci.
    Total Environ., 716 (2020), Article 137100 View PDFView articleView in ScopusGoogle
    Scholar Bashirian et al., 2020 F. Bashirian, D. Rahimi, S. Movahedi, R. Zakerinejad
    Water level instability analysis of Urmia Lake Basin in the northwest of Iran
    Arabian J. Geosci., 13 (2020), pp. 1-14 Google Scholar Bian et al., 2020 J. Bian,
    A. Li, G. Lei, Z. Zhang, X. Nan Global high-resolution mountain green cover index
    mapping based on Landsat images and Google Earth Engine ISPRS J. Photogramm. Remote
    Sens., 162 (2020), pp. 63-76 View PDFView articleView in ScopusGoogle Scholar
    Breiman, 1996 L. Breiman Bagging predictors Mach. Learn., 24 (1996), pp. 123-140
    Google Scholar Carlson and Ripley, 1997 T.N. Carlson, D.A. Ripley On the relation
    between NDVI, fractional vegetation cover, and leaf area index Remote Sens. Environ.,
    62 (1997), pp. 241-252 View PDFView articleView in ScopusGoogle Scholar Chaudhari
    et al., 2018 S. Chaudhari, F. Felfelani, S. Shin, Y. Pokhrel Climate and anthropogenic
    contributions to the desiccation of the second largest saline lake in the twentieth
    century J. Hydrol., 560 (2018), pp. 342-353 View PDFView articleView in ScopusGoogle
    Scholar Chen et al., 2019 B. Chen, B. Xu, Z. Zhu, C. Yuan, H.P. Suen, J. Guo,
    N. Xu, W. Li, Y. Zhao, J. Yang Stable classification with limited sample: Transferring
    a 30-m resolution sample set collected in 2015 to mapping 10-m resolution global
    land cover in 2017 Sci. Bull., 64 (2019), pp. 370-373 View in ScopusGoogle Scholar
    de Moraes et al., 2017 M.C.P. de Moraes, K. de Mello, R.H. Toppa Protected areas
    and agricultural expansion: Biodiversity conservation versus economic growth in
    the Southeast of Brazil J. Environ. Manage., 188 (2017), pp. 73-84 Google Scholar
    Deines et al., 2017 J.M. Deines, A.D. Kendall, D.W. Hyndman Annual irrigation
    dynamics in the US Northern High Plains derived from Landsat satellite data Geophys.
    Res. Lett., 44 (2017), pp. 9350-9360 View in ScopusGoogle Scholar Demarez et al.,
    2019 V. Demarez, F. Helen, C. Marais-Sicre, F. Baup In-season mapping of irrigated
    crops using Landsat 8 and Sentinel-1 time series Remote Sens., 11 (2019), p. 118
    CrossRefView in ScopusGoogle Scholar Destouni et al., 2013 G. Destouni, F. Jaramillo,
    C. Prieto Hydroclimatic shifts driven by human water use for food and energy production
    Nat. Clim. Change, 3 (2013), pp. 213-217 CrossRefView in ScopusGoogle Scholar
    Fathian et al., 2015 F. Fathian, S. Morid, E. Kahya Identification of trends in
    hydrological and climatic variables in Urmia Lake basin, Iran Theoret. Appl. Climatol.,
    119 (2015), pp. 443-464 CrossRefView in ScopusGoogle Scholar Feizizadeh et al.,
    2021 B. Feizizadeh, M.K. Garajeh, T. Lakes, T. Blaschke A deep learning convolutional
    neural network algorithm for detecting saline flow sources and mapping the environmental
    impacts of the Urmia Lake drought in Iran Catena, 207 (2021), Article 105585 View
    PDFView articleView in ScopusGoogle Scholar Foody, 2002 G.M. Foody Status of land
    cover classification accuracy assessment Remote Sens. Environ., 80 (2002), pp.
    185-201 View PDFView articleView in ScopusGoogle Scholar Forootan et al., 2017
    E. Forootan, A. Safari, A. Mostafaie, M. Schumacher, M. Delavar, J.L. Awange Large-scale
    total water storage and water flux changes over the arid and semiarid parts of
    the Middle East from GRACE and reanalysis products Surv. Geophys., 38 (3) (2017),
    pp. 591-615 CrossRefView in ScopusGoogle Scholar Garajeh et al., 2021 M.K. Garajeh,
    F. Malakyar, Q. Weng, B. Feizizadeh, T. Blaschke, T. Lakes An automated deep learning
    convolutional neural network algorithm applied for soil salinity distribution
    mapping in Lake Urmia, Iran Sci. Total Environ., 778 (2021), Article 146253 View
    PDFView articleView in ScopusGoogle Scholar Ghale et al., 2019 Y.A.G. Ghale, M.
    Baykara, A. Unal Investigating the interaction between agricultural lands and
    Urmia Lake ecosystem using remote sensing techniques and hydro-climatic data analysis
    Agric. Water Manag., 221 (2019), pp. 566-579 Google Scholar Ghorbanian et al.,
    2020 A. Ghorbanian, M. Kakooei, M. Amani, S. Mahdavi, A. Mohammadzadeh, M. Hasanlou
    Improved land cover map of Iran using Sentinel imagery within Google Earth Engine
    and a novel automatic workflow for land cover classification using migrated training
    samples ISPRS J. Photogram. Remote Sens., 167 (2020), pp. 276-288 View PDFView
    articleView in ScopusGoogle Scholar Gorelick et al., 2017 N. Gorelick, M. Hancher,
    M. Dixon, S. Ilyushchenko, D. Thau, R. Moore Google Earth Engine: Planetary-scale
    geospatial analysis for everyone Remote Sens. Environ., 202 (2017), pp. 18-27
    View PDFView articleView in ScopusGoogle Scholar Huang et al., 2020 H. Huang,
    J. Wang, C. Liu, L. Liang, C. Li, P. Gong The migration of training samples towards
    dynamic global land cover mapping ISPRS J. Photogramm. Remote Sens., 161 (2020),
    pp. 27-36 View PDFView articleGoogle Scholar Huete, 1988 A. Huete A soil-adjusted
    vegetation index (SAVI) Remote Sens. Environ., 25 (1988), pp. 295-309 View PDFView
    articleView in ScopusGoogle Scholar iranian Water Resources Management, 2019 Iranian
    Water Resources Management 2019. Dams of Urmia Lake basin. http://daminfo.wrm.ir/fa/dam/tabularview.
    Google Scholar Jaberizadeh, H., 2020 Jaberizadeh, H. 2020. Investigating Water
    Crisis in Iran. Google Scholar Khazaei et al., 2019 Bahram Khazaei, Sina Khatami,
    Seyed Hamed Alemohammad, Lida Rashidi, Changshan Wu, Kaveh Madani, Zahra Kalantari,
    Georgia Destouni, Amir Aghakouchak Climatic or regionally induced by humans? Tracing
    hydro-climatic and land-use changes to better understand the Lake Urmia tragedy
    J. Hydrol., 569 (2019), pp. 203-217 View PDFView articleView in ScopusGoogle Scholar
    Lin et al., 2019 C. Lin, P. Du, A. Samat, E. Li, X. Wang, J. Xia Automatic Updating
    of Land Cover Maps in Rapidly Urbanizing Regions by Relational Knowledge Transferring
    from GlobeLand30 Remote Sens., 11 (2019), p. 1397 Google Scholar Mcfeeters, 1996
    S.K. Mcfeeters The use of the Normalized Difference Water Index (NDWI) in the
    delineation of open water features Int. J. Remote Sens., 17 (1996), pp. 1425-1432
    CrossRefView in ScopusGoogle Scholar Naboureh et al., 2020a Amin Naboureh, Ainong
    Li, Jinhu Bian, Guangbin Lei, Meisam Amani A Hybrid Data Balancing Method for
    Classification of Imbalanced Training Data within Google Earth Engine: Case Studies
    from Mountainous Regions Remote Sens., 12 (20) (2020), p. 3301, 10.3390/rs12203301
    Google Scholar Naboureh et al., 2021 A. Naboureh, J. Bian, G. Lei, A. Li A review
    of land use/land cover change mapping in the China-Central Asia-West Asia economic
    corridor countries Big Earth Data, 5 (2021), pp. 237-257 CrossRefView in ScopusGoogle
    Scholar Naboureh et al., 2020b A. Naboureh, H. Ebrahimy, M. Azadbakht, J. Bian,
    M. Amani RUESVMs: An Ensemble Method to Handle the Class Imbalance Problem in
    Land Cover Mapping Using Google Earth Engine Remote Sens., 12 (2020), p. 3484
    CrossRefGoogle Scholar Panahi et al., 2020 D.M. Panahi, Z. Kalantari, N. Ghajarnia,
    S. Seifollahi-Aghmiuni, G. Destouni Variability and change in the hydro-climate
    and water resources of iran over a recent 30-year period Sci. Rep., 10 (2020),
    pp. 1-9 Google Scholar Pekel et al., 2016 J.-F. Pekel, A. Cottam, N. Gorelick,
    A.S. Belward High-resolution mapping of global surface water and its long-term
    changes Nature, 540 (7633) (2016), pp. 418-422 CrossRefView in ScopusGoogle Scholar
    Peña-Arancibia et al., 2014 J.L. Peña-Arancibia, T.R. McVicar, Z. Paydar, L. Li,
    J.P. Guerschman, R.J. Donohue, D. Dutta, G.M. Podger, A.I. van Dijk, F.H. Chiew
    Dynamic identification of summer cropping irrigated areas in a large basin experiencing
    extreme climatic variability Remote Sens. Environ., 154 (2014), pp. 139-152 View
    PDFView articleView in ScopusGoogle Scholar Rodriguez-Galiano et al., 2012 V.F.
    Rodriguez-Galiano, B. Ghimire, J. Rogan, M. Chica-Olmo, J.P. Rigol-Sanchez An
    assessment of the effectiveness of a random forest classifier for land-cover classification
    ISPRS J. Photogramm. Remote Sens., 67 (2012), pp. 93-104 View PDFView articleView
    in ScopusGoogle Scholar Rosa et al., 2020 L. Rosa, D.D. Chiarelli, M. Sangiorgio,
    A.A. Beltran-Peña, M.C. Rulli, P. D’Odorico, I. Fung Potential for sustainable
    irrigation expansion in a 3° C warmer climate Proc. Natl. Acad. Sci., 117 (2020),
    pp. 29526-29534 CrossRefView in ScopusGoogle Scholar Rouse et al., 1974 J.W. Rouse,
    R.H. Haas, J.A. Schell, D.W. Deering Monitoring vegetation systems in the Great
    Plains with ERTS NASA Spec. Public., 351 (1974), p. 309 View in ScopusGoogle Scholar
    Sabbagh-Yazdi et al., 2020 S. Sabbagh-Yazdi, L. Ghelichkhany, K. Kalhor Numerical
    investigation of the effects of causeway opening configurations on horizontal
    currents of Lake Urmia Int. J. Environ. Sci. Technol., 17 (2020), pp. 1885-1898
    CrossRefView in ScopusGoogle Scholar Saemian et al., 2020 P. Saemian, O. Elmi,
    B. Vishwakarma, M. Tourian, N. Sneeuw Analyzing the Lake Urmia restoration progress
    using ground-based and spaceborne observations Sci. Total Environ., 739 (2020),
    Article 139857 View PDFView articleView in ScopusGoogle Scholar Schulz et al.,
    2020 S. Schulz, S. Darehshouri, E. Hassanzadeh, M. Tajrishy, C. Schüth Climate
    change or irrigated agriculture–what drives the water level decline of Lake Urmia
    Sci. Rep., 10 (2020), pp. 1-10 View in ScopusGoogle Scholar Shirmohammadi et al.,
    2020 Bagher Shirmohammadi, Arash Malekian, Ali Salajegheh, Bahram Taheri, Hossein
    Azarnivand, Ziga Malek, Peter H. Verburg Scenario analysis for integrated water
    resources management under future land use change in the Urmia Lake region, Iran
    Land Use Policy, 90 (2020), p. 104299, 10.1016/j.landusepol.2019.104299 View PDFView
    articleView in ScopusGoogle Scholar Statistical center of iran, 2016 Statistical
    Center of Iran, 2016. Iran statistical yearbook. Google Scholar Stehman and Foody,
    2019 S.V. Stehman, G.M. Foody Key issues in rigorous accuracy assessment of land
    cover products Remote Sens. Environ., 231 (2019), Article 111199 View PDFView
    articleView in ScopusGoogle Scholar Taravat et al., 2016 Alireza Taravat, Masih
    Rajaei, Iraj Emadodin, Hamidreza Hasheminejad, Rahman Mousavian, Ehsan Biniyaz
    A spaceborne multisensory, multitemporal approach to monitor water level and storage
    variations of lakes Water, 8 (11) (2016), p. 478, 10.3390/w8110478 View in ScopusGoogle
    Scholar Tulbure and Broich, 2013 M.G. Tulbure, M. Broich Spatiotemporal dynamic
    of surface water bodies using Landsat time-series data from 1999 to 2011 ISPRS
    J. Photogramm. Remote Sens., 79 (2013), pp. 44-52 View PDFView articleView in
    ScopusGoogle Scholar Wang et al., 2020 X. Wang, X. Xiao, Z. Zou, J. Dong, Y. Qin,
    R.B. Doughty, M.A. Menarguez, B. Chen, J. Wang, H. Ye Gainers and losers of surface
    and terrestrial water resources in China during 1989–2016 Nat. Commun., 11 (1)
    (2020), pp. 1-12 Google Scholar Wurtsbaugh et al., 2017 W.A. Wurtsbaugh, C. Miller,
    S.E. Null, R.J. Derose, P. Wilcock, M. Hahnenberger, F. Howe, J. Moore Decline
    of the world''s saline lakes Nat. Geosci., 10 (2017), pp. 816-821 CrossRefView
    in ScopusGoogle Scholar Xu, 2006 H. Xu Modification of normalised difference water
    index (NDWI) to enhance open water features in remotely sensed imagery Int. J.
    Remote Sens., 27 (2006), pp. 3025-3033 CrossRefView in ScopusGoogle Scholar Zhu,
    2017 Z. Zhu Change detection using landsat time series: A review of frequencies,
    preprocessing, algorithms, and applications ISPRS J. Photogrammetry Remote Sens.,
    130 (2017), pp. 370-384 View PDFView articleView in ScopusGoogle Scholar Zhu and
    Woodcock, 2014 Z. Zhu, C.E. Woodcock Continuous change detection and classification
    of land cover using all available Landsat data Remote Sens. Environ., 144 (2014),
    pp. 152-171 View PDFView articleView in ScopusGoogle Scholar Cited by (22) A scenario-based
    food security analysis and halophyte crop suitability assessment in dying lake
    environments impacted by climate change 2023, International Journal of Applied
    Earth Observation and Geoinformation Show abstract Evolution and use of remote
    sensing in ecological vulnerability assessment: A review 2023, Ecological Indicators
    Show abstract An integrated approach of deep learning convolutional neural network
    and google earth engine for salt storm monitoring and mapping 2023, Atmospheric
    Pollution Research Show abstract What is going on within google earth engine?
    A systematic review and meta-analysis 2023, Remote Sensing Applications: Society
    and Environment Citation Excerpt : This category clearly shows a wider use of
    Sentinel 2 imagery as outlier (Fig. 7), indicating a requirement for higher spectral
    and spatial accuracy compared to Landsat Series (Table 4). A growing topic under
    investigation is the mapping and monitoring of irrigated crops in arid environments
    (Yao et al., 2022; Han et al., 2022), including the effect of increasing irrigated
    area in the environment (Naboureh et al., 2021). An additional topic is related
    to crop detection, using several methods, such as RF machine learning algorithm
    embedded in GEE to retrieve pixels screening, training samples generation, analyses
    of Leaf Area Index and fraction of photosynthetically active radiation (Sun et
    al., 2022), ANN algorithm and Sentinel 1, Sentinel 2 images to produce an object-based
    ACI map (Amani et al., 2020b), or cropland mapping based on phenological metrics,
    environmental covariates, and machine learning (Htitiou et al., 2021; Cao et al.,
    2021). Show abstract Long-term detection and spatiotemporal variation analysis
    of open-surface water bodies in the Yellow River Basin from 1986 to 2020 2022,
    Science of the Total Environment Citation Excerpt : Fortunately, Google Earth
    Engine (GEE) can expedite a wide variety of remote sensing calculations in a way
    that has already benefited scholars who have needed to conduct this type of research
    in recent year. The superiority and convenience of using GEE has already been
    demonstrated by a variety of scientific studies (Naboureh et al., 2021; Ahady
    and Kaplan, 2022; Dong et al., 2016; Hird et al., 2017; Liu et al., 2018; Luo
    et al., 2022; Oliphant et al., 2019; Prasai et al., 2021; Tang et al., 2016; Zhang
    et al., 2017), which have verified that GEE can certainly provide powerful support
    for our research. Therefore, after comprehensively considering the cost and effect
    of the calculations and operations, a combination rule considering multiple indices
    was selected for conducting water detection in GEE. Show abstract Distinction
    of driver contributions to wetland decline and their associated basin hydrology
    around Iran 2022, Journal of Hydrology: Regional Studies Citation Excerpt : As
    expected, from the overall insignificant (γ = 0.95) P trends, wetland area correlations
    with T emerge as mostly somewhat stronger than those with P, except for the Maharloo
    & Bakhtegan basin. The very weak correlations of both T and P with Lake Urmia
    area likely reflected particularly dominant non-climate (and mainly human) drivers
    of wetland decline, which was consistent with previous findings for this basin
    (Khazaei et al., 2019; Naboureh et al., 2021). As changes in LULC could also affect
    landscape hydrology (Destouni et al., 2013; Song et al., 2018; Zhang et al., 2018a,
    2018b; Trang et al., 2017), we investigated correlations of LULC with wetland
    decline, using ESA-CCI data for each wetland site reclassified to seven main LULC
    classes based on Chen et al. (2019) (see Table S2 in SM). Show abstract View all
    citing articles on Scopus © 2021 The Authors. Published by Elsevier B.V. Part
    of special issue Remote Sensing of Inland, Coastal and Oceanic Waters Edited by
    Hongtao Duan, Steven Loiselle, Lydia Olaka, Paolo Villa, Zhigang Cao View special
    issue Recommended articles Explicit and stepwise models for spatiotemporal fusion
    of remote sensing images with deep neural networks International Journal of Applied
    Earth Observation and Geoinformation, Volume 105, 2021, Article 102611 Yaobin
    Ma, …, Rongxin Tang View PDF Calving cycle of Ninnis Glacier over the last 60
    years International Journal of Applied Earth Observation and Geoinformation, Volume
    105, 2021, Article 102612 Yuan Cheng, …, Da Lv View PDF Increasing control of
    climate warming on the greening of alpine pastures in central Asia International
    Journal of Applied Earth Observation and Geoinformation, Volume 105, 2021, Article
    102606 Lilin Zheng, …, Debin Lu View PDF Show 3 more articles Article Metrics
    Citations Citation Indexes: 19 Captures Readers: 41 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: International Journal of Applied Earth Observation and Geoinformation
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Assessing the effects of irrigated agricultural expansions on Lake Urmia
    using multi-decadal Landsat imagery and a sample migration technique within Google
    Earth Engine
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kelly T.D.
  - Foster T.
  citation_count: '23'
  description: Crop-growth models are powerful tools for supporting optimal planning
    and management of agricultural water use globally. However, use of crop models
    for this purpose often requires advanced programming expertize and computational
    resources, limiting the potential uptake in integrated water management research
    by practitioners such as water managers, policymakers, and irrigation service
    providers. In this article, we present AquaCrop-OSPy (ACOSP), an open source,
    Python implementation of the crop-water productivity model AquaCrop. The model
    provides a user friendly, flexible and computationally efficient solution to support
    agricultural water management, which can be readily integrated with other Python
    modules or code bases and run instantly via a web browser using the cloud computing
    platform Google Colab without the need for local installation. This article describes
    how to run basic simulations using AquaCrop-OSPy, along with more advanced analyses
    such as optimizing irrigation schedules and evaluating climate change impacts.
    Each use case is paired with a Jupyter Notebook, which offer an interactive learning
    environment for users and can be readily adapted to address a range of common
    irrigation planning and management challenges faced by researcher, policymakers
    and businesses in both developed and developing countries (https://github.com/thomasdkelly/aquacrop).
  doi: 10.1016/j.agwat.2021.106976
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Getting started: running
    your first simulation with AquaCrop-OSPy (Notebook 1) 3. Irrigation planning and
    management use cases 4. Outlook Declaration of Competing Interest Acknowledgments,
    samples, and data Appendix A. Example comparison of AquaCrop-OSPy with FAO GUI
    and Matlab versions References Show full outline Cited by (26) Figures (5) Agricultural
    Water Management Volume 254, 1 August 2021, 106976 Short communication AquaCrop-OSPy:
    Bridging the gap between research and practice in crop-water modeling Author links
    open overlay panel T.D. Kelly, T. Foster Show more Add to Mendeley Share Cite
    https://doi.org/10.1016/j.agwat.2021.106976 Get rights and content Under a Creative
    Commons license open access Highlights • AquaCrop-OSPy is an open-source python
    implementation of the FAO AquaCrop model. • Can be run in a web environment and
    linked with cloud computing via Google Colab. • Easily integrated into python
    code bases and libraries to support water management. Abstract Crop-growth models
    are powerful tools for supporting optimal planning and management of agricultural
    water use globally. However, use of crop models for this purpose often requires
    advanced programming expertize and computational resources, limiting the potential
    uptake in integrated water management research by practitioners such as water
    managers, policymakers, and irrigation service providers. In this article, we
    present AquaCrop-OSPy (ACOSP), an open source, Python implementation of the crop-water
    productivity model AquaCrop. The model provides a user friendly, flexible and
    computationally efficient solution to support agricultural water management, which
    can be readily integrated with other Python modules or code bases and run instantly
    via a web browser using the cloud computing platform Google Colab without the
    need for local installation. This article describes how to run basic simulations
    using AquaCrop-OSPy, along with more advanced analyses such as optimizing irrigation
    schedules and evaluating climate change impacts. Each use case is paired with
    a Jupyter Notebook, which offer an interactive learning environment for users
    and can be readily adapted to address a range of common irrigation planning and
    management challenges faced by researcher, policymakers and businesses in both
    developed and developing countries (https://github.com/thomasdkelly/aquacrop).
    Previous article in issue Next article in issue Keywords IrrigationOptimizationPythonSimulation
    1. Introduction Agriculture is the largest sectoral user of water globally, and
    thus at the heart of debates about how to efficiently and sustainably manage use
    of limited freshwater resources (Molden, 2013). Satisfying growing demands for
    irrigation water as a result of population growth and climate change, while simultaneously
    ensuring sufficient water remains available to support other human and environmental
    needs, will require significant improvements in the water use efficiency of food
    production over the coming decades (Adeyemi et al., 2017, Evans and Sadler, 2008,
    Morison et al., 2008). Crop-water models are powerful tools, which can be used
    to help design and identify strategies to enhance the productivity of water use
    in crop production and address increasing competition over scarce freshwater resources.
    Applications include the prediction of climate change impacts on agricultural
    yields and crop-water demands (Lehmann et al., 2013, Rosenzweig et al., 2014,
    Semenov, 2009), evaluating the potential effects of irrigation management strategies
    such as deficit irrigation on production risks (Attia et al., 2016, Geerts et
    al., 2010), as well as the optimization of irrigation strategies in order to maximize
    yields or profit while minimizing demands on water supplies from surface and groundwater
    sources (Foster et al., 2019, Jamal et al., 2019, Li et al., 2019, Linker et al.,
    2018, Wisser et al., 2008). While applications of crop-water models in the agricultural
    water management and planning research are now widespread, the ability of practitioners
    in government, policy or business to leverage these approaches for real-world
    irrigation planning and management is limited by a number of factors. For example,
    implementing more advanced applications of crop-water models, such as optimization
    of irrigation scheduling rules or heuristics, often requires a high level of programming
    and data analytics expertize that may not be readily available in end user organizations.
    This issue is compounded by the tendency of many novel research applications of
    crop-water models to not provide transparent access to source code necessary to
    reproduce the specific applications of these models (Kloss et al., 2014, Linker
    et al., 2018), which themselves are commonly released only as closed-source software
    packages (Jones et al., 2003, Steduto et al., 2009), further limiting bespoke
    applications to real-world challenges around panning and management of irrigation
    water use. Many of the intended users (e.g., irrigation planners, agronomists,
    farmers, etc.) of crop models such as AquaCrop cannot be expected to be expert
    programmers or computer scientists which would be required to reproduce complex
    coding routines integrating GUI’s and optimization algorithms in languages they
    are unfamiliar with. In this paper, we present AquaCrop-OSPy (ACOSP), a fully
    open source Python implementation of the U.N Food and Agriculture Organization’s
    (FAO) widely utilized crop-water productivity model known as AquaCrop (Raes et
    al., 2009). ACOSP builds on existing implementations of AquaCrop in Matlab/Octave
    (Foster et al., 2017) and R (Rodriguez, 2019). ACOSP includes several novel features
    that address key end user application challenges outlined above, and is up to
    date with the most recent version of AquaCrop (v6.1) released by FAO (one example
    comparison is shown in Appendix A, with others available on the ACOSP documentation).
    Specifically, ACOSP provides an environment to enable a user with even basic Python
    programming experience to rapidly conduct advanced crop-water management and policy
    analyses. The growing popularity of Python – fueled by its flexibility, interoperability,
    extensive ecosystem and learning resources – has led to Python becoming one of
    the most popular programming languages globally for environmental simulation,
    including modeling of agro-hydrological systems. The model is fully self-contained,
    with a modular design and interactive environment that enables users to flexibly
    adjust model inputs and integrate with other Python modules (e.g., optimization
    algorithms). ACOSP source code is accompanied by a series of Jupyter Notebooks
    (Kluyver et al., 2016) to enable users to learn and develop new applications of
    the model for different aspects of agricultural water management and planning.
    The source code – developed using the nbdev framework (https://nbdev.fast.ai)
    – and notebook tutorials leverage the cloud computing platform Google Colab (https://colab.research.google.com)
    to enable users to run the model in a web browser without the need to locally
    install, including via mobile devices that are increasingly being used to support
    agricultural and irrigation decision-making in both developed and developing countries
    (Adeyemi et al., 2017, Bartlett et al., 2015, Vaishali et al., 2018). In doing
    so, ACOSP greatly expands the potential user base and applications of the already
    widely adopted AquaCrop model, enabling users to flexibly test, adapt and extend
    the model to address diverse agricultural water management problems globally while
    still maintaining an interactive learning and application environment through
    use of Jupyter notebooks. Users can also freely implement AquaCrop source code
    and packages outside of the notebook environment in any Python IDE should that
    be preferred. In the following sections, we demonstrate a series of key use cases
    of ACOSP in the context of agricultural water planning and management. First,
    we summarize how a user can run a model simulation for a selected crop-soil-climate
    system. Next, we demonstrate a number of important applications of the model,
    including how a user can apply the model interactively to: (i) evaluate crop-water
    requirements for a number of irrigation management strategies, (ii) identify optimal
    (yield maximizing) irrigation strategies given different water use constraints
    through linkage to Python optimization libraries, and (iii) assessing impacts
    of climate change scenarios on irrigation water demands and crop yields. Use cases
    are accompanied by a series of Jupyter Notebooks (available at https://github.com/thomasdkelly/aquacrop),
    containing more explicit tutorials on how to use the model to reproduce the analysis
    presented in this article. The reader is encouraged to run these notebooks in
    combination with this article to better understand the application of ACOSP as
    a tool for irrigation management and policy. These notebooks can also be used
    as a basis for development of further customized applications of the code to address
    local, regional and global agricultural challenges. 2. Getting started: running
    your first simulation with AquaCrop-OSPy (Notebook 1) In order to setup and run
    a simulation using ACOSP, the user must first define a range of parameters and
    inputs to characterize the cropping system being simulated. These include daily
    weather time-series, along with parameters specifying the crop, soil, management
    practices and initial conditions for the simulation. For the vast majority of
    crop simulation models, these inputs and parameters are defined either interactively
    through graphical user interfaces (GUIs) or through externally modified input
    files (Foster et al., 2017, Jones et al., 2003, Raes et al., 2009, Ragab, 2002,
    Rodriguez, 2019). However, this approach makes it difficult for models to be integrated
    into larger code bases or optimization packages. This approach also limits flexibility
    to conduct large batch simulations of field-scale crop models where many different
    combinations of input files must be considered (e.g., to reflect spatial heterogeneity
    in cropping practices across an agricultural landscape or changes in climate variability
    over time). The approach for setting up and running simulations in ACOSP has been
    designed to overcome these issues, and make it easier to simply and flexibly execute
    simulations for complex and heterogeneous agricultural production systems. After
    importing ACOSP into a python editor or notebook, the user is able to interactively
    define each of the main input types of the model (climate, soil, crop, management
    practices, and initial soil water and groundwater conditions). In each case, defaults
    have been predefined such that the number of required user inputs are minimized,
    but at the same time allowing any of them to be edited by the user as needed.
    All of these component defaults are specified in the class definitions and can
    be inspected in the source code. For notebook environments, functions exist that
    enable the user to directly inspect the source code from the notebook, further
    streamlining the experience for the user and enabling them to quickly customize
    simulations without the need for a GUI interface that constrains wider model uses.
    Modifying each of these default components is done when creating the component
    object and full details are shown in Notebook 1. As an example the user could
    create the default Maize crop by running maize=CropClass(‘Maize’, PlantingDate=’05/01′),
    or create a Maize crop with an adjusted Canopy Growth Coefficient by running maize2=CropClass(‘Maize’,
    PlantingDate=’05/01′, CGC=0.001). Similarly for the other model components, users
    are able to modify the default input classes and develop new customized classes.
    Fig. 1 shows an example of the initial setup of crop and soil classes along with
    initial soil moisture conditions in Notebook 1. The user is able to specify climate
    input data – the other key requirement by AquaCrop – by either selecting one of
    the predefined inbuilt climate time series, or by importing external data files
    using custom helper functions such as prepare_weather (Fig. 1). Download : Download
    high-res image (847KB) Download : Download full-size image Fig. 1. The creation
    of a SoilClass, CropClass and InitWCClass object using built-in soil and crop
    types, and the initial water content in layer 1 set to Field Capacity. These components
    are then passed into an AquaCropModel which is initialized and run till the end
    of the simulation, after which, model outputs can then be inspected. Once the
    user has defined all input classes and data, these components along with user
    specified start date and end date for the simulation, are passed into the AquaCropModel
    object (Fig. 1). The model is then initialized using model.initialize(), following
    which the user can choose to execute the model to run forwards N days using model.step(N),
    or until the end of the specified simulation period using model.step(till_termination=True).
    These two options provide flexibility to users, allowing planting, harvesting
    or irrigation decisions to be made dynamically based on either internal model
    variables or external data. As an example, irrigation decisions can be made on
    each day from a separate code base which could include groundwater information,
    weather forecasts, or machine learning models (Adeyemi et al., 2018, Linker and
    Sylaios, 2016, Sun et al., 2017). This feature enables users to define their own
    custom irrigation strategies (incorporating any external code or data or management
    rules), which is either extremely difficult or impossible in other crop-water
    models that incorporate only a fixed set of pre-defined irrigation management
    heuristics. Once the simulation has finished, four different output files will
    be produced comparable with outputs provided by the original AquaCrop model. The
    Flux output shows daily water flux variables simulated by or inputted to the model,
    such as total water storage in the crop root zone and precipitation. The WaterContent
    output file provides more granular information about the water storage in each
    compartment on each day of the simulation period. The Growth output reports daily
    simulated crop growth state variables such as canopy cover and rooting depth.
    The Final output lists the final yield and total irrigation applied for each simulated
    season. Full details on the output files can be found in Notebook 1, which can
    also be further customized by users if additional outputs from the model are required.
    3. Irrigation planning and management use cases 3.1. Estimating irrigation water
    demands under different irrigation strategies (Notebook 2) A common use case for
    crop-water models such as ACOSP is estimating irrigation water demands in order
    to support on-farm and regional scale planning and allocation of limited freshwater
    resources (Araya et al., 2017, Jiang et al., 2016). One of the main strengths
    of ACOSP is the ability to rapidly evaluate and compare both simple and complex
    irrigation strategies, which the user can run as batch simulations specified interactively
    via the IrrMngtClass during model setup. ACOSP can be used to simulate a range
    of irrigation strategies such as soil-moisture thresholds, set time intervals,
    pre-defined calendars and net irrigation that are common to many other crop-water
    models. ACOSP also contains two features that enables arbitrarily complex irrigation
    strategies to be defined. First, the model can be run on a daily timestep, and
    second, any model variables can be extracted or edited before the next day is
    run. This means that irrigation application decisions can be determined outside
    the model, using information from weather forecasts, water availability (e.g.,
    hydrological model), or other external databases or models. The chosen depth can
    then be passed back into the model and applied on the next day. This ability to
    represent the complex rules, heuristics and behavioral norms that are used by
    farmers in a given region is not typically available in other crop-water models,
    and is essential to the accurate estimation of plot-level and regional irrigation
    water demands to support sustainable and efficient agricultural water management.
    An example of this feature is shown in Appendix A of Notebook 2 which also showcases
    examples of more traditional irrigation strategies such as set time intervals
    and pre-defined irrigation calendars. To demonstrate the use of ACOSP in this
    context, we apply the model to evaluate crop yields and irrigation water use over
    multiple irrigation scheduling strategies. This analysis is done for a case study
    setup of Maize production in western Nebraska in the United States for the period
    1982–2018 summarized in Foster et al. (2015). The strategies contrasted include
    seasonal soil-moisture thresholds which determine the proportion of total soil
    water holding capacity at which irrigation is triggered, ranging from 0% to 100%.
    Constant thresholds such as these are commonly used in modeling studies of irrigation
    management, as part of irrigation advisories provided by soil-moisture sensor
    manufacturers, and by farmers themselves (Blonquist et al., 2006, Gutierrez et
    al., 2014). This test therefore provides a realistic example of the capabilities
    of ACOSP to support evaluation of crop yield responses to variable irrigation
    management decisions. The results show that in the absence of irrigation, yields
    are highly variable and often fail completely (Fig. 2). This dramatic impact of
    added irrigation illustrates why Nebraska has the largest number of irrigated
    acres in the United States (USDA-NASS, 2018), reflecting the significant drought
    risks experienced by many farmers within the state (Hoerling et al., 2014, Wilhelmi
    and Wilhite, 2002). However, the relationship between soil moisture target strategy,
    irrigation and crop yields is non-linear, demonstrating a typical pattern of diminishing
    returns to water beyond approximately a soil moisture target of 40%. These results
    – and those in Appendix A of Notebook 2 – also show the significant differences
    in yield and total irrigation between strategies, meaning that correctly specifying
    how farmers make irrigation decisions is essential for accurately estimating irrigation
    water demands – a challenge given the lack of baseline data on water use in many
    farming regions worldwide (Closas and Molle, 2018, Foster et al., 2020, Foster
    et al., 2019, Montginoul et al., 2016). Download : Download high-res image (321KB)
    Download : Download full-size image Fig. 2. A comparison of seasonal (a) yield
    [tonne/ha], (b) irrigation [ha-mm], for a range of constant soil-moisture thresholds
    (expressed as a percentage of total soil water holding capacity) over 37 seasons
    for a maize crop grown in SW Nebraska, United States. 3.2. Developing and optimizing
    irrigation strategies (Notebook 3) In the previous section, we demonstrated how
    ACOSP could be used to compare yields and water use for different pre-specified
    irrigation thresholds. However, it is often the case that farmers and water managers
    lack information apriori about which irrigation strategy will produce the maximum
    yield for a given level of water use (Adeyemi et al., 2017). Determining these
    optimal strategies in practice would require considerable time and investment
    and so crop-water models are often used in their place. Often this determination
    is done via brute force search over possible strategies or leveraging optimization
    algorithms which can be either time consuming or difficult when using a GUI or
    input file based crop-water models (Araya et al., 2017, Foster and Brozović, 2018,
    García-Vila and Fereres, 2012, Jamal et al., 2019, Linker et al., 2018). In this
    example use case, we show how optimal irrigation schedules can be identified by
    linking ACOSP with one of the many optimization modules available in the Python
    ecosystem. Specifically, using the implementation of the model described in Section
    3.1, we show how ACOSP can be linked to the optimization library scipy.optimize
    (Virtanen et al., 2020) to identify optimal yield-maximizing soil moisture target
    thresholds over three seasons (2016–2018) for different seasonal water supply
    constraints (i.e. the maximum amount of water that can be applied in a given season).
    The results highlight again the non-linear relationships between crop yields and
    irrigation water use, along with changes in the distribution of water use within
    seasons characterized by variations in the optimized soil moisture thresholds
    (Fig. 3). In response to increasing water availability the optimal thresholds
    generally increase (i.e. it becomes optimal to irrigate at lower levels of soil
    moisture depletion), with water prioritized to mid- and late-season growth stages
    when overall supply is scarce, as these are the most sensitive periods of crop
    development for Maize (the example crop used in this Notebook). It should be noted
    that these optimal thresholds have been found with a local optimizer and so re-running
    the analysis in Notebook 3 may produce slightly different results than those presented
    in Fig. 3. Download : Download high-res image (269KB) Download : Download full-size
    image Fig. 3. Crop water production function showing total maize yield as a function
    of irrigation water use for an example application in SW Nebraska, United States.
    The optimization process found irrigation thresholds that maximize yield given
    a maximum seasonal irrigation limits of [0, 50,…,400, 450 mm]. Optimal irrigation
    thresholds (expressed as a percentage of total soil water holding capacity) for
    each water use constraint are also displayed, where each point has four soil moisture
    target values corresponding each of the main crop growth stages in ACOSP. This
    example analysis shows how ACOSP can be used to support optimization of irrigation
    scheduling and water allocation in the context of rising constraints over freshwater
    availability facing farmers in many regions worldwide (Mekonnen and Hoekstra,
    2016). For example, outputs from this type of analysis can be used to provide
    advice to farmers about how to effectively optimize water use in the context of
    hydrologic, technical or regulatory supply constraints, including selection of
    efficient and profitable intraseasonal irrigation management rules and heuristics.
    Data can also be used to automate and simplify the development of crop-water production
    functions such as shown in Fig. 3, which can be used by policymakers to evaluate
    expected crop yield responses to different levels of irrigation water supply and
    make decisions about efficient allocation of water within the agricultural sector
    and between agriculture and other water users (Foster and Brozović, 2018, Igbadun
    et al., 2007, Martínez-Romero et al., 2019). Users could expand this analysis
    in a number of ways. Our example of ACOSP’s optimization integration capabilities
    was performed for the simple case of a single cropped field with a uniform soil
    type and uniform weather, however this does not reflect the reality for a farmer
    irrigating larger and more diverse farms and plots. The example code provided
    in Notebook 3 could be easily adapted by users to consider more complex optimization
    problems such as this, treating each individual plot (or sub-plot if considering
    sub-field level decision making) as an individual instance of ACOSP and optimizing
    over all plot instances simultaneously. Moreover, as the season unfolds there
    may be a desire to re-optimize the irrigation thresholds for a given plot or location
    to better reflect the current climate condition. This again can be implemented
    in ACOSP simply by saving the current state of the model at day D, and optimizing
    yield starting from that point using historical data or forecasts. This ability
    to customize irrigation scheduling rules to accurately reflect real-world decisions,
    as well as expand the space of potential optimal irrigation strategies, is a key
    benefit of ACOSP compared to previous crop-water models. 3.3. Irrigation demands
    under different climate change scenarios (Notebook 4) Irrigation is used by farmers
    to buffer crops against drought and rainfall variability. Climate change is therefore
    likely to affect irrigation water demands in many regions, and the ability to
    predict these changes is essential to support sustainable management of agricultural
    water use and crop production risks (Molden, 2013). Climate change impact assessments
    are a common use case for crop-water models as they allow researchers and policy
    makers to estimate the potential vulnerabilities or future problems for a producing
    region (Dale et al., 2017, Lehmann et al., 2013, Rosenzweig et al., 2014, Semenov,
    2009). These can focus more directly on how climate changes will impact rainfed
    production, as well as secondary effects such as water use changes for irrigated
    production. These secondary factors will also impact wider issues such as groundwater
    depletion (McGuire, 2017) and so it is essential that policy makers and researchers
    can easily conduct climate change impact assessments using crop-water models like
    ACOSP. Building on this need, Notebook 4 guides users through the process of applying
    ACOSP for a simple analysis of irrigation water demands and crop yields under
    a range of future climate change scenarios. ACOSP includes inbuilt functionality
    to directly read and format weather time series for future climate scenarios generated
    externally using the LARS-WG stochastic weather generator (https://sites.google.com/view/lars-wg)
    – a widely applied weather generator for agricultural climate impact assessments
    (Qian et al., 2005, Semenov, 2009, Sha et al., 2019). Conversion of weather data
    is achieved using the prepare_lars_weather function, which includes functionality
    to calculate reference evapotranspiration inputs required by AquaCrop. Important
    to note is that as long as the final weather DataFrame passed into the AquaCropModel
    object is in the correct format, the source of the generated data, or the equations
    used to calculate reference evapotranspiration are arbitrary. This flexibility
    allows users to generate weather time series offline using alternative weather
    generators to LARS-WG or other climate datasets/models. To demonstrate this model
    application, we use ACOSP to simulate crop yields and irrigation water demands
    for the same case study of Maize production in western Nebraska considered in
    the previous notebooks. Our analysis uses weather time series generated by LARS-WG
    for different future climate time periods (2030, 2050, 2070) and emissions scenario
    (RCP4.5, RCP8.5) from the EC-Earth climate model (Hazeleger et al., 2012). This
    analysis assumes that farmers maintain to the same planting calendar and the same
    Maize variety, as well as a constant irrigation threshold of 70% total available
    water throughout all years. These simplifications are made for illustrative purposes
    of batch climate runs with the model, but could be easily relaxed to consider
    additional variations in management practices, crop characteristics, etc. to support
    comprehensive analyses of climate impacts and adaptations on crop yields and irrigation
    water demands. The results show that yields increase under these future climate
    scenarios as a result of higher CO2 concentrations, which translate into higher
    water productivity within ACOSP (Fig. 4). Irrigation water use decreases slightly
    in the climate change scenarios compared to the baseline years, a result that
    can be explained by the predicted increase in seasonal (i.e. summer) precipitation
    in Nebraska and the central United States under most future climate change scenarios
    (Notebook 4). Download : Download high-res image (478KB) Download : Download full-size
    image Fig. 4. Comparison of (a) yields and (b) total irrigation for maize crop
    in SW Nebraska, United States for baseline climate conditions (1982–2018) and
    a range of future climate scenarios. Analysis assumes farmers follow a fixed soil
    moisture target strategy (irrigate once soil water depletion exceeds 30% of soil
    water holding capacity) in all years and climate scenarios. Users could extend
    this analysis in many ways, for example by performing a batch analysis over a
    wide range of climate scenarios, or running ACOSP over a gridded domain to capture
    spatial heterogeneities or uncertainties (Dale et al., 2017). By linking these
    gridded model outputs directly to one of Python’s many geospatial visualization
    libraries (e.g. cartopy, geopandas), regional to global climate change impacts
    on agricultural production and water use can now be easily performed inside a
    single Jupyter Notebook. Computation efficiency of such analysis can be further
    improved by parallelizing over multiple processers, with users able to install
    and run ACOSP on any cloud computing service (e.g. Google Colab). An example of
    how ACOSP simulations can be run in parallel is shown in Notebook 3. 4. Outlook
    AquaCrop-OSPy (ACOSP) is a free and fully open-source tool that allows researchers,
    industry and policy makers to rapidly leverage crop-water simulation to support
    irrigation planning and management at farm to regional scales. The model features
    a user friendly interactive code design, and provides an interface to platforms
    such as Google Colab to enable a user to quickly conduct simulations via their
    web browser and leverage cloud computing resources. The extensive Python ecosystem
    means ACOSP can be easily integrated with the latest machine learning, web development,
    statistical and data analysis libraries, as well as any other python code base.
    ACOSP also enables users to bypass the licensing and operating system constrains
    associated with previous widely used versions of AquaCrop. Uptake of the model
    by users conducting applied research and teaching on agricultural water management
    and policy is supported through development of extensive documentation, including
    a series of Jupyter Notebooks (https://github.com/thomasdkelly/aquacrop) containing
    tutorials for a range of common use cases of the model related to irrigation planning,
    management and climate adaptation. These notebooks are also accompanied by an
    online forum for users (https://forum.aquacroposforum.com), which will provide
    a space for the user community to discuss bugs, share example applications and
    contribute to future development of AquaCrop. For example, opportunity exists
    for users to contribute to refinement of internal model routines (e.g. more advanced
    soil moisture flow or nutrient cycle algorithms) or novel applications of the
    model (e.g. satellite data assimilation and automated parameter calibration) that
    would be impossible to implement in a scalable or efficient manner with closed-source
    software. Through these innovations, we expect that ACOSP will help address a
    number of the issues that have constrained the use of crop-water models in both
    policy, practise and applied research surrounding agricultural water management
    at field, catchment and global scales. Future work will support the maintenance
    of core model source code in line with future AquaCrop developments, while spurring
    and enabling new innovations and adaptations to help address global challenges
    of food and water security facing the agricultural sector. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgments, samples, and data Thomas Kelly was supported by
    the National Environmental Research Council’s Understanding the Earth, Atmosphere,
    and Ocean Doctoral Training Programme, Grant NE/L002469/1. Appendix A. Example
    comparison of AquaCrop-OSPy with FAO GUI and Matlab versions See Fig. A1. Download
    : Download high-res image (557KB) Download : Download full-size image Fig. A1.
    Comparison of yields between AquaCrop-OSPy (python – blue), AquaCrop-OS v6.0 (Matlab
    – green) and AquaCrop v6.0 (Windows GUI – red dotted) for rainfed Wheat production
    in Tunis. Also presented is the mean-absolute-error (MAE) in seasonal yields between
    these versions demonstrating the extremely close agreement between simulated yield
    outputs from the Python and original FAO (MAE of 0.02 tonne/ha) and Matlab (MAE
    of 0.003 tonne/ha) model versions. Example taken from AquaCrop reference manual.
    Other example comparisons can be found on the AquaCrop-OSPy documentation (https://thomasdkelly.github.io/aquacrop/comparison.html).
    (For interpretation of the references to colour in this figure legend, the reader
    is referred to the web version of this article.). References Adeyemi et al., 2018
    O. Adeyemi, I. Grove, S. Peets, Y. Domun, T. Norton Dynamic neural network modelling
    of soil moisture content for predictive irrigation scheduling Sensors (Basel Switzerland),
    18 (2018), p. 3408, 10.3390/s18103408 View in ScopusGoogle Scholar Adeyemi et
    al., 2017 O. Adeyemi, I. Grove, S. Peets, T. Norton Advanced monitoring and management
    systems for improving sustainability in precision irrigation Sustainability, 9
    (2017), p. 353, 10.3390/su9030353 View in ScopusGoogle Scholar Araya et al., 2017
    A. Araya, I. Kisekka, P.V. Vara Prasad, P.H. Gowda Evaluating optimum limited
    irrigation management strategies for corn production in the ogallala aquifer region
    J. Irrig. Drain. Eng., 143 (2017), Article 04017041, 10.1061/(asce)ir.1943-4774.0001228
    View in ScopusGoogle Scholar Attia et al., 2016 A. Attia, N. Rajan, Q. Xue, S.
    Nair, A. Ibrahim, D. Hays Application of DSSAT-CERES-Wheat model to simulate winter
    wheat response to irrigation management in the Texas High Plains Agric. Water
    Manag., 165 (2016), pp. 50-60, 10.1016/j.agwat.2015.11.002 View PDFView articleView
    in ScopusGoogle Scholar Bartlett et al., 2015 A.C. Bartlett, A.A. Andales, M.
    Arabi, T.A. Bauder A smartphone app to extend use of a cloud-based irrigation
    scheduling tool Comput. Electron. Agric., 111 (2015), pp. 127-130, 10.1016/j.compag.2014.12.021
    View PDFView articleView in ScopusGoogle Scholar Blonquist et al., 2006 J.M. Blonquist,
    S.B. Jones, D.A. Robinson Precise irrigation scheduling for turfgrass using a
    subsurface electromagnetic soil moisture sensor Agric. Water Manag., 84 (2006),
    pp. 153-165, 10.1016/j.agwat.2006.01.014 View PDFView articleView in ScopusGoogle
    Scholar Closas and Molle, 2018 A. Closas, F. Molle Chronicle of a demise foretold:
    state vs. local groundwater management in Texas and the High Plains aquifer system
    Water Alter., 11 (2018), pp. 511-532 View in ScopusGoogle Scholar Dale et al.,
    2017 A. Dale, C. Fant, K. Strzepek, M. Lickley, S. Solomon Climate model uncertainty
    in impact assessments for agriculture: a multi-ensemble case study on maize in
    sub-Saharan Africa Earth’s Future, 5 (2017), pp. 337-353, 10.1002/2017EF000539
    View in ScopusGoogle Scholar Evans and Sadler, 2008 R.G. Evans, E.J. Sadler Methods
    and technologies to improve efficiency of water use Water Resour. Res., 44 (2008),
    10.1029/2007WR006200 Google Scholar Foster and Brozović, 2018 T. Foster, N. Brozović
    Simulating crop-water production functions using crop growth models to support
    water policy assessments Ecol. Econ., 152 (2018), pp. 9-21, 10.1016/j.ecolecon.2018.05.019
    View PDFView articleView in ScopusGoogle Scholar Foster et al., 2015 T. Foster,
    N. Brozović, A.P. Butler Analysis of the impacts of well yield and groundwater
    depth on irrigated agriculture J. Hydrol., 523 (2015), pp. 86-96, 10.1016/j.jhydrol.2015.01.032
    View PDFView articleView in ScopusGoogle Scholar Foster et al., 2017 T. Foster,
    N. Brozović, A.P. Butler, C.M.U. Neale, D. Raes, P. Steduto, E. Fereres, T.C.
    Hsiao AquaCrop-OS: an open source version of FAO’s crop water productivity model
    Agric. Water Manag., 181 (2017), pp. 18-22, 10.1016/j.agwat.2016.11.015 View PDFView
    articleView in ScopusGoogle Scholar Foster et al., 2019 T. Foster, I.Z. Gonçalves,
    I. Campos, C.M.U. Neale, N. Brozović Assessing landscape scale heterogeneity in
    irrigation water use with remote sensing and in situ monitoring Environ. Res.
    Lett., 14 (2019), Article 024004, 10.1088/1748-9326/aaf2be View in ScopusGoogle
    Scholar Foster et al., 2020 T. Foster, T. Mieno, N. Brozović Satellite‐based monitoring
    of irrigation water use: assessing measurement errors and their implications for
    agricultural water management policy Water Resour. Res., 56 (2020), 10.1029/2020WR028378
    Google Scholar García-Vila and Fereres, 2012 M. García-Vila, E. Fereres Combining
    the simulation crop model AquaCrop with an economic model for the optimization
    of irrigation management at farm level Eur. J. Agron., 36 (2012), pp. 21-31, 10.1016/j.eja.2011.08.003
    View PDFView articleView in ScopusGoogle Scholar Geerts et al., 2010 S. Geerts,
    D. Raes, M. Garcia Using AquaCrop to derive deficit irrigation schedules Agric.
    Water Manag., 98 (2010), pp. 213-216, 10.1016/j.agwat.2010.07.003 View PDFView
    articleView in ScopusGoogle Scholar Gutierrez et al., 2014 J. Gutierrez, J.F.
    Villa-Medina, A. Nieto-Garibay, M.A. Porta-Gandara Automated irrigation system
    using a wireless sensor network and GPRS module IEEE Trans. Instrum. Meas., 63
    (2014), pp. 166-176, 10.1109/TIM.2013.2276487 View in ScopusGoogle Scholar Hazeleger
    et al., 2012 W. Hazeleger, X. Wang, C. Severijns, S. Ştefǎnescu, R. Bintanja,
    A. Sterl, K. Wyser, T. Semmler, S. Yang, B. van den Hurk, T. van Noije, E. van
    der Linden, K. van der Wiel EC-earth V2.2: description and validation of a new
    seamless earth system prediction model Clim. Dyn., 39 (2012), pp. 2611-2629, 10.1007/s00382-011-1228-5
    View in ScopusGoogle Scholar Hoerling et al., 2014 M. Hoerling, J. Eischeid, A.
    Kumar, R. Leung, A. Mariotti, K. Mo, S. Schubert, R. Seager Causes and predictability
    of the 2012 great plains drought Bull. Am. Meteorol. Soc., 95 (2014), pp. 269-282,
    10.1175/BAMS-D-13-00055.1 View in ScopusGoogle Scholar Igbadun et al., 2007 H.E.
    Igbadun, A.K.P.R. Tarimo, B.A. Salim, H.F. Mahoo Evaluation of selected crop water
    production functions for an irrigated maize crop Agric. Water Manag., 94 (2007),
    pp. 1-10, 10.1016/j.agwat.2007.07.006 View PDFView articleView in ScopusGoogle
    Scholar Jamal et al., 2019 A. Jamal, R. Linker, M. Housh Optimal irrigation with
    perfect weekly forecasts versus imperfect seasonal forecasts J. Water Resour.
    Plan. Manag., 145 (2019), Article 06019003, 10.1061/(ASCE)WR.1943-5452.0001066
    View in ScopusGoogle Scholar Jiang et al., 2016 Y. Jiang, L. Zhang, B. Zhang,
    C. He, X. Jin, X. Bai Modeling irrigation management for water conservation by
    DSSAT-maize model in arid northwestern China Agric. Water Manag., 177 (2016),
    pp. 37-45, 10.1016/j.agwat.2016.06.014 View PDFView articleView in ScopusGoogle
    Scholar Jones et al., 2003 J.W. Jones, G. Hoogenboom, C.H. Porter, K.J. Boote,
    W.D. Batchelor, L.A. Hunt, P.W. Wilkens, U. Singh, A.J. Gijsman, J.T. Ritchie
    The DSSAT cropping system model European Journal of Agronomy, Elsevier (2003),
    pp. 235-265, 10.1016/S1161-0301(02)00107-7 View PDFView articleView in ScopusGoogle
    Scholar Kloss et al., 2014 S. Kloss, J. Grundmann, S.J. Seidel, S. Werisch, J.
    Trümmner, U. Schmidhalter, N. Schütze Investigation of deficit irrigation strategies
    combining SVAT-modeling, optimization and experiments Environ. Earth Sci., 72
    (2014), pp. 4901-4915, 10.1007/s12665-014-3463-7 View in ScopusGoogle Scholar
    Kluyver et al., 2016 Kluyver, T., Ragan-Kelley, B., Pérez, F., Granger, B., Bussonnier,
    M., Frederic, J., Kelley, K., Hamrick, J., Grout, J., Corlay, S., Ivanov, P.,
    Avila, D., Abdalla, S., Willing, C., 2016. Jupyter Notebooks—a publishing format
    for reproducible computational workflows, in: Proceedings of the 20th International
    Conference on Electronic Publishing, Positioning and Power in Academic Publishing:
    Players, Agents and Agendas - ELPUB 2016. IOS Press BV, pp. 87–90. https://doi.org/10.3233/978–1-61499–649-1–87.
    Google Scholar Lehmann et al., 2013 N. Lehmann, S. Briner, R. Finger The impact
    of climate and price risks on agricultural land use and crop management decisions
    Land Use Policy, 35 (2013), pp. 119-130, 10.1016/j.landusepol.2013.05.008 View
    PDFView articleView in ScopusGoogle Scholar Linker and Sylaios, 2016 R. Linker,
    G. Sylaios Efficient model-based sub-optimal irrigation scheduling using imperfect
    weather forecasts Comput. Electron. Agric., 130 (2016), pp. 118-127, 10.1016/j.compag.2016.10.004
    View PDFView articleView in ScopusGoogle Scholar Linker et al., 2018 R. Linker,
    G. Sylaios, I. Tsakmakis, T. Ramos, L. Simionesei, F. Plauborg, A. Battilani Sub-optimal
    model-based deficit irrigation scheduling with realistic weather forecasts Irrig.
    Sci., 36 (2018), pp. 349-362, 10.1007/s00271-018-0592-x View in ScopusGoogle Scholar
    Li et al., 2019 F. Li, D. Yu, Y. Zhao Irrigation scheduling optimization for cotton
    based on the AquaCrop model Water Resour. Manag., 33 (2019), pp. 39-55, 10.1007/s11269-018-2087-1
    Google Scholar Martínez-Romero et al., 2019 A. Martínez-Romero, A. Domínguez,
    G. Landeras Regulated deficit irrigation strategies for different potato cultivars
    under continental Mediterranean-Atlantic conditions Agric. Water Manag., 216 (2019),
    pp. 164-176, 10.1016/j.agwat.2019.01.030 View PDFView articleView in ScopusGoogle
    Scholar McGuire, 2017 V.L. McGuire Water-level and recoverable water in storage
    changes, High Plains aquifer, predevelopment to 2015 and 2013-15 U. S. Geol. Surv.
    Sci. Investig. Rep., 2017–5040 (2017), p. 14, 10.3133/sir20175040 Google Scholar
    Mekonnen and Hoekstra, 2016 M.M. Mekonnen, A.Y. Hoekstra Four billion people facing
    severe water scarcity Sci. Adv., 2 (2016), Article 1500323, 10.1126/sciadv.1500323
    Google Scholar Molden, 2013 D. Molden Water for Food Water for Life International
    Water Management Institute. Routledge,, London (2013), 10.4324/9781849773799 Google
    Scholar Montginoul et al., 2016 M. Montginoul, J.D. Rinaudo, N. Brozović, G. Donoso
    Controlling groundwater exploitation through economic instruments: current practices,
    challenges and innovative approaches Integrated Groundwater Management: Concepts,
    Approaches and Challenges, Springer International Publishing (2016), pp. 551-581,
    10.1007/978-3-319-23576-9_22 View in ScopusGoogle Scholar Morison et al., 2008
    J.I. Morison, N. Baker, P. Mullineaux, W. Davies Improving water use in crop production
    Philos. Trans. R. Soc. B Biol. Sci., 363 (2008), pp. 639-658, 10.1098/rstb.2007.2175
    Google Scholar Qian et al., 2005 B. Qian, H. Hayhoe, S. Gameda Evaluation of the
    stochastic weather generators LARS-WG and AAFC-WG for climate change impact studies
    Clim. Res., 29 (2005), pp. 3-21, 10.3354/cr029003 View in ScopusGoogle Scholar
    Raes et al., 2009 D. Raes, P. Steduto, T.C. Hsiao, E. Fereres AquaCrop - the FAO
    crop model to simulate yield response to water: II. Main algorithms and software
    description Agron. J., 101 (2009), pp. 438-447, 10.2134/agronj2008.0140s View
    in ScopusGoogle Scholar Ragab, 2002 R. Ragab A holistic generic integrated approach
    for irrigation, crop and field management: the SALTMED model Environ. Model. Softw.,
    17 (2002), pp. 345-361 View PDFView articleGoogle Scholar Rodriguez, 2019 Ober
    Rodriguez AquaCropR: crop growth model for R Agronomy, 9 (2019), p. 378, 10.3390/agronomy9070378
    Google Scholar Rosenzweig et al., 2014 C. Rosenzweig, J. Elliott, D. Deryng, A.C.
    Ruane, C. Müller, A. Arneth, K.J. Boote, C. Folberth, M. Glotter, N. Khabarov,
    K. Neumann, F. Piontek, T.A.M. Pugh, E. Schmid, E. Stehfest, H. Yang, J.W. Jones
    Assessing agricultural risks of climate change in the 21st century in a global
    gridded crop model intercomparison Proc. Natl. Acad. Sci. U.S.A., 111 (2014),
    pp. 3268-3273, 10.1073/pnas.1222463110 View in ScopusGoogle Scholar Semenov, 2009
    M.A. Semenov Impacts of climate change on wheat in England and Wales J. R. Soc.
    Interface, 6 (2009), pp. 343-350, 10.1098/rsif.2008.0285 View in ScopusGoogle
    Scholar Sha et al., 2019 J. Sha, X. Li, Z.L. Wang Estimation of future climate
    change in cold weather areas with the LARS-WG model under CMIP5 scenarios Theor.
    Appl. Climatol., 137 (2019), pp. 3027-3039, 10.1007/s00704-019-02781-4 View in
    ScopusGoogle Scholar Steduto et al., 2009 P. Steduto, T.C. Hsiao, D. Raes, E.
    Fereres AquaCrop—the FAO crop model to simulate yield response to water: I. Concepts
    and underlying principles Agron. J., 101 (2009), pp. 426-437 CrossRefGoogle Scholar
    Sun et al., 2017 Sun, L., Yang, Y., Hu, J., Porter, D., Marek, T., Hillyer, C.,
    2017. Reinforcement Learning Control for Water-Efficient Agricultural Irrigation,
    in: 2017 IEEE International Symposium on Parallel and Distributed Processing with
    Applications and 2017 IEEE International Conference on Ubiquitous Computing and
    Communications (ISPA/IUCC). IEEE, pp. 1334–1341. https://doi.org/10.1109/ISPA/IUCC.2017.00203.
    Google Scholar USDA-NASS, 2018 USDA-NASS, 2018. 2018 Irrigation and Water Management
    Survey 3. Google Scholar Vaishali et al., 2018 Vaishali, S., Suraj, S., Vignesh,
    G., Dhivya, S., Udhayakumar, S., 2018. Mobile integrated smart irrigation management
    and monitoring system using IOT, in: Proceedings of the 2017 IEEE International
    Conference on Communication and Signal Processing, ICCSP 2017. Institute of Electrical
    and Electronics Engineers Inc., pp. 2164–2167. https://doi.org/10.1109/ICCSP.2017.8286792.
    Google Scholar Virtanen et al., 2020 P. Virtanen, R. Gommers, T.E. Oliphant, M.
    Haberland, T. Reddy, D. Cournapeau, E. Burovski, P. Peterson, W. Weckesser, J.
    Bright, S.J. van der Walt, M. Brett, J. Wilson, K.J. Millman, N. Mayorov, A.R.J.
    Nelson, E. Jones, R. Kern, E. Larson, C.J. Carey, İ. Polat, Y. Feng, E.W. Moore,
    J. VanderPlas, D. Laxalde, J. Perktold, R. Cimrman, I. Henriksen, E.A. Quintero,
    C.R. Harris, A.M. Archibald, A.H. Ribeiro, F. Pedregosa, P. van Mulbregt SciPy
    1.0: fundamental algorithms for scientific computing in Python Nat. Methods, 17
    (2020), pp. 261-272, 10.1038/s41592-019-0686-2 View in ScopusGoogle Scholar Wilhelmi
    and Wilhite, 2002 O.V. Wilhelmi, D.A. Wilhite Assessing vulnerability to agricultural
    drought: a Nebraska case study Nat. Hazards, 25 (2002), pp. 37-58, 10.1023/A:1013388814894
    View in ScopusGoogle Scholar Wisser et al., 2008 D. Wisser, S. Frolking, E.M.
    Douglas, B.M. Fekete, C.J. Vörösmarty, A.H. Schumann Global irrigation water demand:
    variability and uncertainties arising from agricultural and climate data sets
    Geophys. Res. Lett., 35 (2008), Article L24408, 10.1029/2008GL035296 View in ScopusGoogle
    Scholar Cited by (26) Assessing the value of deep reinforcement learning for irrigation
    scheduling 2024, Smart Agricultural Technology Show abstract Development of a
    novel framework for agriculture simulation model for food-energy-water nexus analysis
    in watershed-scale 2023, Journal of Cleaner Production Show abstract Long-term
    regional groundwater responses and their ecological impacts under agricultural
    water saving in an arid irrigation district, upper Yellow River basin 2023, Agricultural
    Water Management Show abstract SimET: An open-source tool for estimating crop
    evapotranspiration and soil water balance for plants with multiple growth cycles
    2023, Crop Journal Show abstract Is irrigation water an overlooked source of nitrogen
    in agriculture? 2023, Agricultural Water Management Show abstract Assessing the
    value of adapting irrigation strategies within the season 2023, Agricultural Water
    Management Show abstract View all citing articles on Scopus © 2021 The Authors.
    Published by Elsevier B.V. Recommended articles Addressing potential drought resiliency
    through high-resolution terrain and depression mapping Agricultural Water Management,
    Volume 254, 2021, Article 106961 Tomasz Oberski, …, Paul A. Arp View PDF Assessing
    the vulnerability and risk of maize to drought in China based on the AquaCrop
    model Agricultural Systems, Volume 189, 2021, Article 103040 Xiufang Zhu, …, Lingyi
    Chen View PDF Calibration of the AquaCrop model for winter wheat using MODIS LAI
    images Agricultural Water Management, Volume 164, Part 2, 2016, pp. 304-316 Andrea
    Trombetta, …, Francesco Gentile View PDF Show 3 more articles Article Metrics
    Citations Citation Indexes: 21 Captures Readers: 85 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Agricultural Water Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AquaCrop-OSPy: Bridging the gap between research and practice in crop-water
    modeling'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '5'
  description: Over the past decade, there has been sustained research in the Internet
    of Things (IoT), significantly contributing to health, retail, transport, logistics,
    security, and agriculture. Device-enabling platforms have an incredibly strategic
    advantage of enabling related IoT growth. This technology is largely handled through
    cloud computing, where the raw generated data from IoT sensors are stored and
    computed for decision making, irrespective of the application areas. The adoption
    of IoT in agriculture faces numerous challenges such as latency, energy, bandwidth,
    and storage cost. These issues will affect sustainable agricultural activities
    such as live decision making, prediction, monitoring, and controlling of farming
    activities. These issues can be addressed by integrating edge computing technology
    with IoT-enabled monitoring devices. The edge computing framework needs to be
    designed for the rapid identification of methods for deployment in the field.
    The edge computing agricultural framework will act as middleware between the cloud
    and IoT sensors; it would serve as a medium to fulfill the demands of a real-time
    monitoring system. In the proposed framework, an edge server is designed to predict
    the rainfall locally using the microcomputer Raspberry Pi through the analysis
    of the local environmental and weather parameters. The system is constructed with
    two edge nodes, where one handles the monitoring of the live data such as soil
    moisture, soil temperature, air temperature, humidity, and wind. The other node
    takes care of artificial irrigation according to the local and global weather
    data controlled by the edge server. The edge server stores live data locally and
    sends the average daily analysis data to the ThingSpeak server. Data stored in
    the edge and cloud can be used in the future to increase plant growth, leading
    to increased yield. The proposed framework helps in accurate watering considering
    the local environmental conditions, leading to the sequential evolution of plants
    until the vegetables are fully grown and available for harvest. In this way, an
    edge-based framework for an agricultural system can be used to fill the gaps in
    precision agriculture.
  doi: 10.1016/B978-0-12-823694-9.00029-3
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln Access through another institution
    University of Nebraska-Lincoln Libraries does not subscribe to this content on
    ScienceDirect. Article preview Abstract Cited by (5) AI, Edge and IoT-based Smart
    Agriculture Intelligent Data-Centric Systems 2022, Pages 71-100 Chapter 5 - Functional
    framework for edge-based agricultural system Author links open overlay panel S.
    Premkumar, A.N. Sigappi Show more Share Cite https://doi.org/10.1016/B978-0-12-823694-9.00029-3
    Get rights and content Abstract Over the past decade, there has been sustained
    research in the Internet of Things (IoT), significantly contributing to health,
    retail, transport, logistics, security, and agriculture. Device-enabling platforms
    have an incredibly strategic advantage of enabling related IoT growth. This technology
    is largely handled through cloud computing, where the raw generated data from
    IoT sensors are stored and computed for decision making, irrespective of the application
    areas. The adoption of IoT in agriculture faces numerous challenges such as latency,
    energy, bandwidth, and storage cost. These issues will affect sustainable agricultural
    activities such as live decision making, prediction, monitoring, and controlling
    of farming activities. These issues can be addressed by integrating edge computing
    technology with IoT-enabled monitoring devices. The edge computing framework needs
    to be designed for the rapid identification of methods for deployment in the field.
    The edge computing agricultural framework will act as middleware between the cloud
    and IoT sensors; it would serve as a medium to fulfill the demands of a real-time
    monitoring system. In the proposed framework, an edge server is designed to predict
    the rainfall locally using the microcomputer Raspberry Pi through the analysis
    of the local environmental and weather parameters. The system is constructed with
    two edge nodes, where one handles the monitoring of the live data such as soil
    moisture, soil temperature, air temperature, humidity, and wind. The other node
    takes care of artificial irrigation according to the local and global weather
    data controlled by the edge server. The edge server stores live data locally and
    sends the average daily analysis data to the ThingSpeak server. Data stored in
    the edge and cloud can be used in the future to increase plant growth, leading
    to increased yield. The proposed framework helps in accurate watering considering
    the local environmental conditions, leading to the sequential evolution of plants
    until the vegetables are fully grown and available for harvest. In this way, an
    edge-based framework for an agricultural system can be used to fill the gaps in
    precision agriculture. References (0) Cited by (5) Reshaping agriculture using
    intelligent edge computing 2024, Advances in Computers Show abstract Integrated
    machine learning approach for healthcare disabilities tracing and detection: Applied
    intelligent techniques 2023, Applications of Synthetic Biology in Health, Energy,
    and Environment Energy monitoring and control in the smart grid: Integrated intelligent
    IoT and ANFIS 2023, Applications of Synthetic Biology in Health, Energy, and Environment
    Applications of synthetic biology in health, energy, and environment 2023, Applications
    of Synthetic Biology in Health, Energy, and Environment IoT-enabled edge computing
    model for smart irrigation system 2022, Journal of Intelligent Systems View full
    text Copyright © 2022 Elsevier Inc. All rights reserved. Recommended articles
    Offline: COVID-19 as culture war The Lancet, Volume 399, Issue 10322, 2022, p.
    346 Richard Horton Decision-making system for crop selection based on soil AI,
    Edge and IoT-based Smart Agriculture, 2022, pp. 449-475 Jitendra Singh, …, P.K.
    Pandey Climate condition monitoring and automated systems AI, Edge and IoT-based
    Smart Agriculture, 2022, pp. 437-447 Kingsley Eghonghon Ukhurebor, …, Daniel Ingo
    Hefft Show 3 more articles Article Metrics Citations Citation Indexes: 5 Captures
    Readers: 28 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: AI, Edge and IoT-based Smart Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Functional framework for edge-based agricultural system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ayuningsih E.
  - Suryono S.
  - Gunawan V.
  citation_count: '4'
  description: Greenhouse technology is very effective in increasing food resilience
    in various countries. In this study, greenhouse technology was implemented in
    chili plants. Chili was chosen because it is included in food security commodities
    that had to be improved, especially in Central Java, Indonesia. Control and monitoring
    systems need to be implemented to control the condition of greenhouse environment.
    Greenhouse control systems in previous studies used cloud computing technology
    and fuzzy methods. However, cloud computing has several disadvantages, one of
    them is the more devices connected to the application, the greater the probability
    of latency is encountered. Therefore, this study proposed fuzzy rule-based to
    control the growth parameters in greenhouses by using fog network. Fuzzy rule
    based is used to determine the length of drip watering time and fog network as
    a platform to overcome network latency problems when conducting data collection
    processes. The greenhouse control system with sensor nodes is built by connecting
    the system with the Microcontroller ESP8266-WIFI chip to carry out data acquisition
    and transmission of sensor data for temperature, soil moisture, air humidity,
    and intensity using WIFI networks to the fog server. In this study, the calibration
    of the accuracy of fuzzy rule-based manual calculation and system calculation
    is compared. From the tests performed, the Mean Absolute Percent Error (MAPE)
    between the calculation and using the MAPE is 0%.
  doi: 10.1109/ICIC47613.2019.8985857
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 Fourth International Con...
    Fuzzy Rule-Based Systems for Controlling Plant Growth Parameters in Greenhouses
    Using Fog Networks Publisher: IEEE Cite This PDF Ekatri Ayuningsih; Suryono Suryono;
    Vincencius Gunawan All Authors 2 Cites in Papers 71 Full Text Views Abstract Document
    Sections I. Introduction II. Related Work III. Realization Fuzzy Rule-Based for
    System Controlling Plant Growth Parameters in Greenhouse Using Fog IV. Result
    and Discussion V. Conclusion Authors Figures References Citations Keywords Metrics
    Abstract: Greenhouse technology is very effective in increasing food resilience
    in various countries. In this study, greenhouse technology was implemented in
    chili plants. Chili was chosen because it is included in food security commodities
    that had to be improved, especially in Central Java, Indonesia. Control and monitoring
    systems need to be implemented to control the condition of greenhouse environment.
    Greenhouse control systems in previous studies used cloud computing technology
    and fuzzy methods. However, cloud computing has several disadvantages, one of
    them is the more devices connected to the application, the greater the probability
    of latency is encountered. Therefore, this study proposed fuzzy rule-based to
    control the growth parameters in greenhouses by using fog network. Fuzzy rule
    based is used to determine the length of drip watering time and fog network as
    a platform to overcome network latency problems when conducting data collection
    processes. The greenhouse control system with sensor nodes is built by connecting
    the system with the Microcontroller ESP8266-WIFI chip to carry out data acquisition
    and transmission of sensor data for temperature, soil moisture, air humidity,
    and intensity using WIFI networks to the fog server. In this study, the calibration
    of the accuracy of fuzzy rule-based manual calculation and system calculation
    is compared. From the tests performed, the Mean Absolute Percent Error (MAPE)
    between the calculation and using the MAPE is 0%. Published in: 2019 Fourth International
    Conference on Informatics and Computing (ICIC) Date of Conference: 16-17 October
    2019 Date Added to IEEE Xplore: 10 February 2020 ISBN Information: DOI: 10.1109/ICIC47613.2019.8985857
    Publisher: IEEE Conference Location: Semarang, Indonesia SECTION I. Introduction
    Greenhouse is a building which aims to modify the climate to meet the plants need.
    Greenhouse is generally used to produce crops outside the normal season [1]. The
    type of cover material in a greenhouse aims to make solar radiation easily absorbed
    by plants. Greenhouse cultivation method aims to make plants'' growth out of the
    natural environment and to make the environment control more optimal [2]. Greenhouse
    technology is used to provide a controlled microenvironment for optimal plant
    growth so that it can protect plants from unfavorable weather conditions [3].
    The control system needs to be done to control the environmental conditions of
    the greenhouse. The previous research which has been carried out by [4], in 2016
    on the greenhouse control system used fuzzy logic type Mamdani. Fuzzy logic type
    Mamdani is implemented to regulate the duration drip of plants to be more dynamic
    based on the the input values of greenhouse temperature and humidity [4]. The
    Mamdani control system is carried out to adjust the temperature and humidity in
    the greenhouse which refers to climate factors presented by the sigmoid curve
    [4]. Fuzzy logic type Mamdani is usually suited to intuitive problems rather that
    to handle control systems. The sigmoid curve has a weakness where the membership
    value range is equal to one shorter by [5] using cloud computing technology. Greenhouse
    automation systems controls temperature, humidity, soil moisture effectively [5].
    The system retrieve sensor acquisition data and send data to users through the
    cloud [5]. Cloud computing was designed using remote servers on the internet to
    manage, store and process data using a personal computer. Cloud computing has
    briefly transformed information technology dramatically by providing some enormous
    benefits for users of information technology, including eliminating information
    technology investments, scalability, proportional costs. However, cloud computing
    has a weakness: the more devices connected, the more network latency problems
    is experienced by the application [6]. Based on previous researches, [4] and [5],
    this study builds an information system using fuzzy rule-based to control and
    monitor climate parameters in fog-based greenhouses. Rule-based systems have benefit:
    the created rules can imitate human thinking and reasoning to facts that are known
    based on expert knowledge about the problems of a domain [7]. Fuzzy logic and
    rule based system can be combined to create rules that are very similar to natural
    languages, thus fuzzy rule-based can make information extracted from rules so
    that they are easier to understand [8]. Fuzzy rule-based systems can work in fog
    network and can provide problem information from the input provided [9]. The fuzzy
    rule-based system type Tsukamoto has the advantage of having high accuracy and
    high interpretation of data [10]. Fog computing is used as a computing paradigm
    between cloud data centers and IoT devices [11]. Fog uses a network device called
    fog node to process data collection form IoT so that it doesn''t experience network
    latency problems. Fog computing is a promising computing technology that is able
    to overcome network latency problems during the process of collecting data form
    IoT [6]. In this study, the fog network is able to handle network latency problems
    in real-time while sensor data acquisition, and bandwidth is more efficient compared
    to cloud networks. Fuzzy rule-based is implemented to determine the proper rule
    for trip duration which is appropriate with the data of temperature variable,
    soil moisture, humidity and intensity variable. The data of variables was obtained
    from the result of the greenhouse observation. Thus, the controlling system in
    greenhouse is more efficient and more superior that the previous research. SECTION
    II. Related Work A. Fuzzy Rule-Based Fuzzy rule-based basically comes from fuzzy
    logic and fuzzy set theory [12]. Fuzzy logic and rule-based system are combined
    into fuzzy rule-based. Three are three popular types of fuzzy rule-based, they
    are Mamdani, Sugeno, and Tsukamoto. Fuzzy rule-based generally applied to problems
    classification, such as output or discrete values. Fuzzy rule-based system are
    a classic rule system that is one of the most important fields of fuzzy set application
    and fuzzy logic [8]. Fuzzy rule-based systems are successfully applied to various
    problem in different domains in the uncertainty and obscurity of problems [10].
    Several forms of membership function are used in fuzzy rule-based, such as trapezoid,
    triangular and rectangular [8]. Trapezoid membership function can be seen as a
    generalizing triangle and rectangular membership function. At the testing stage,
    fuzzy classification involves five important steps namely fuzzification, application,
    implication, aggregation, and defuzzification. Triangle Fuzzy A[x], can be presented
    by A (a, b, c; 1) with the membership function μ [x] shown in Figure 1 [12]. Fig.
    1. Triangle fuzzy membership function [12]. Show All The formula for the triangle
    membership function is as follows [12]. μ[x]= ⎧ ⎩ ⎨ ⎪ ⎪ ⎪ ⎪ 0, (x−a)/(b−a), 1,
    (c−x)/(c−b),   x≤a or x≥c;         a≤x≤b;                x=b;         b≤x≤c. (1)
    View Source Trapezoid fuzzy shown in Figure 2. Fig. 2. Trapezoid fuzzy membership
    function [13]. Show All The formula for the trapezoid membership function is as
    follows [13]. f T (x)= ⎧ ⎩ ⎨ ⎪ ⎪ ⎪ ⎪ 0, (x−a)/(b−a), 1, (d−x)/(d−c), x≤a or x≥d;          a<x<b;           b≤x≤c;            c<x<d.
    (2) View Source B. Fog Computing As a new computing paradigm, fog computing is
    able to expand cloud computing and services to the network edge. Fog computing
    has several advantages dealing with computation, communication, control, storage
    and service on the edge of the network. The fact is that computational computing
    is an extension of cloud computing, not as a substitute for cloud computing [14].
    There are two categories of fog nodes namely Fog Gateway Nodes (FNG) and Fog Computational
    Nodes (FCN), as shown in Figure 3 [11]. Fig. 3. Fog organization [11]. Show All
    C. Greenhouse A greenhouse is a building that function to modify the climate based
    on plants'' need. Greenhouse is used to produce food crops and flowers outside
    the normal season. Greenhouses has similar structures with conservatories: the
    rooms that usually attached to houses provide living space for plants and humans
    [1]. The shape of a greenhouse is characterized into five different types. Greenhouses
    are most commonly used in hot and arid environments, namely Quonsets, arch-tunnels,
    even-span and uneven-span [17]. D. Chilies Chilies require temperature, soil moisture,
    air humidity, and optimal intensity. Chili plants can growth well at temperature
    of 20–30 °C, Soil moisture of 60-80%, air humidity from 50 to 70 and intensity
    of 3,000-10,000 [18]. SECTION III. Realization Fuzzy Rule-Based for System Controlling
    Plant Growth Parameters in Greenhouse Using Fog A. Instrumentation The instruments
    used in this study consist of hardware and software. The hardware used to support
    the system building are computer and an Acer Aspire laptop. The specifications
    of Acer are intel processor core i3327U, Windows 10 Pro, and RAM 4.0 Gb. The other
    hardwares used to support the design of fog network architecture''s building are
    sensors of SHT-11, YL-39, BH-1750, Microcontroller WIFI ESP8266, DAQ-SYSTEM, WIFI
    Router, and internet modem. The software is used to support the function of hardware
    system. The sofwares used in this study are PHP, Arduino IDE, Node JS, MySQL,
    Sublime Text 3, and Xampp. The data used for the study is the result of acquisition
    data from sensors SHT-11, YL-39, and BH-1750 B. Greenhouse Greenhouses are made
    using lightweight steel frames and on the roof using paranet with a size of 2
    x 2 meters shown in Figure 4. Fig. 4. The design of the roof of a greenhouse.
    Show All Fig. 5. The design of the framework of the greenhouse. Show All C. Application
    of Fog Model The system for controlling plant growth parameters in a greenhouse
    uses a fog network consisting of sensor nodes and fog servers. The data needed
    in this study are temperature, humidity, soil moisture and intensity. The control
    system is built using an ESP8255 Microcontroller which has connected the sensor
    data acquisition system and data communication system using WIFI. The design of
    the fog network system for the greenhouse control system in this study is shown
    in Figure 4. This study uses three sensors, namely temperature and humidity sensors
    (SHT-11), soil moisture sensors (YL-39) and intensity sensors (BH-1750). The ESP8266
    Microcontroller is programmed to read SHT-11 sensors, YL-39 sensors and BH-1750
    sensors with the TWI protocol. The design of the fog network system for a climate
    control system in a greenhouse is shown in Figure 6. Fig. 6. Fog network system
    design in greenhouses. Show All In this study using two gateways, namely WIFI
    network for data communication in the fog area and internet network in the cloud
    area. Climate parameter data obtained from sensor data acquisition using the fog
    network. In this study Arduino IDE is set to produce data acquisition every once
    a minute. Message Queuing Telemetry Transport (MQTT) as a publisher block sends
    sensor acquisition data. After the sensor acquisition data is obtained, it is
    then stored in the database on the local monitor. Sensor acquisition data is sent
    by a cloud server to interface user for processing fuzzy rule-based using web-based
    programming. The system framework for controlling plant growth parameters in a
    greenhouse using fog networks are shown in Figure 7. Fig. 7. Control system framework.
    Show All D. Application of Fuzzy Rule-Based Fuzzy rule-based has four main stages,
    namely: fuzzification, application, implication, and aggregation. The rule based
    consists of 5 ∗ 5 ∗ 5 ∗ 5=625 rules, 5 rule for each variable: temperature, moisture,
    humidity, and intensity. The domain for the temperature variable is shown in TABLE
    I. Table I. Temperature variable The temperature variable is divided into five
    fuzzy sets, namely very cold, cold, normal, hot, and very hot. Those are presented
    uses a trapezoid and triangular curve with [0 50] [19]. The fuzzy sets of the
    temperature variable are shown in Figure 8. Fig. 8. Fuzzy sets of the temperature
    variable. Show All The domain for soil moisture variables is shown in Table II.
    Table II. Variable moisture The soil moisture variable is divided into five fuzzy
    sets, namely: very dry, dry, normal, wet, and very wet with [0 100] universal
    set which are presented using trapezoid and triangular curves [19]. The fuzzy
    sets of soil moisture variable are shown in Figure 9. Fig. 9. Fuzzy sets of soil
    moisture variable. Show All The domain for the humidity variable is shown in Table
    III. Table III. Variable humidity Humidity variable is divided into five fuzzy
    sets, namely: very low, low, normal, high, and very high with [0 100] [20] universal
    set. The fuzzy sets of humidity variable are shown in Figure 10. Fig. 10. Fuzzy
    sets of humidity variable. Show All The domain for the intensity variable is shown
    in Table IV. Table IV. Variable intensity The intensity variable is divided into
    5 fuzzy sets, namely dark, rather dim, normal, bright, and very bright which are
    presented using trapezoid and triangular curves. Intensity variable with [0 60,000]
    [19] universal set. The fuzzy sets of intensity variable are shown in Figure 11.
    Fig. 11. Fuzzy sets of intensity variable. Show All The function of fuzzy membership
    for linguistic term are x 1 (Temperature), x 2 (soil moisture), x 3 (humidity),
    X 4 (intensity) which shown in Figure 8, Figure 9, Figure 10 and Figure 11. Fuzzy
    rules are used as follows. Rule 393: if x 1 is Hot and x 2 is Very Dry and x 3
    is High and x 4 is Normal then duration drip = Very Long; Rule 418: i x 1 is Hot
    and x 2 is Dry and x 3 is High and x 4 is Normal then duration drip = Long; If
    x 1 =30.110001, x 2 =37, x 3 =76.273178 , and x 4 =: 5,192, then the steps is
    carried out as follows: Fuzzification Rule 393: f Hot (30.110001)=0.3, f Very
    Dry (37)=0.15, f High (76.273178)=0.87, f Normal (5,192)=0.63; Rule 418: f Hot
    (30.110001)=0.3, f Dry (37)=0.76, f High (76.273178)=0.87, f Normal (5,192)=0.63;
    View Source Application Rule 393: f Hot (30.110001)∧ f Very Dry (37)∧ f High (76.273178)∧
    f Normal (5,192)=Min (0.3,0.15,0.87,0.63)=0.15; Rule 418: f Hot (30.110001)∧ f
    Dry (37)∧ f High (76.273178) ∧ f Normal (5,192)=Min(0.3,0.76,0.87,0.63)=0.3; View
    Source Implication Rule 393:fRule393 → Very Long (30.110001,37,76.273178, 5,192)=0.15;
    Rule418:fRule418 → Long (30.110001,37,76.273178, 5,192)=0.29; View Source Aggregation
    f Very Long (30.110001,37,76.273178,5,192)= fRule393 → Very Long (30.110001,37,76.273178,5,192)∨
    fRule268 → Long (30.110001,37,76.273178,5,192) =Max(0.15)=0.15 fLong(30.110001,37,76.273178,5,192)=
    fRule418→Long(30.110001,37,76.273178,5,192)∨ fRule293→(30.110001,37,76.273178,5,192)
    =Max(0.3)=0.3 View Source Defuzzification Long The result of fuzzy rule-based
    calculation using system are x 1 =30.110001, x 2 =37, x 3 =76.273178, x 4 =5,192
    show in Figure 12, Figure 13, Figure 14 and Figure 15. Fig. 12. Calculation of
    fuzzification stage from fuzzy rule-based. Show All Fig. 13. Calculation of application
    stage from fuzzy rule-based. Show All Fig. 14. Calculation of implication stage
    from fuzzy rule-based. Show All Fig. 15. Calculation aggregation and defuzzitication
    stage from fuzzy rule-based. Show All SECTION IV. Result and Discussion This research
    produces a software that is able to present output in the feature of sensor acquisition
    data which displayed on the web-based application dashboard and watering control.
    The controlling plant growth parameters system in greenhouses uses the fuzzy rule-based
    method based on fog network. Based on the result of calculations with fuzzy rule-based,
    the duration development is done using the PHP programming language with Arduino
    IDE, MQTT, Node Js. MySQL, and Sublime Text 3. Coding the application is done
    using the Google chrome web browser. A. Sensor Testing Testing the temperature
    and humidity sensors (SHT-11), soil moisture sensors (YL-39), intensity sensors
    (BH-1750) is carried out in a scenario where the sensor is placed in a greenhouse.
    The measurement results obtained after the SHT-11 sensor, YL-39 and BH-1750, tested
    are shown in Table V. Table V. Sensor testing B. Fuzzy Rule-Based Testing In this
    study, MAPE accuracy analysis was used to measure errors and calculate the presentation
    deviations of calculation using both manually and MAPE system. The MAPE formula
    [21] is as follows. MAPE=100 x  1 n Σ n t=1 ∣ ∣ ∣ At−Pt At ∣ ∣ ∣ (3) View Source
    Testing of mathematical calculation of fuzzy rule-based was done manually and
    systematically using MAPE analysis by entering the value of input temperature,
    soil moisture, humidity, and intensity. The result is shown in TABLE 17. Table
    17. Mape accuracy analysis C. Control System Work Testing The TABLE 18 is the
    result of testing the drip watering devices. Table 18. The result of testing the
    success of the system work D. The Testing of Cloud and Fog Network Performance
    The result of transmission time shows that using fog network is faster that cloud
    network. The average of data''s speed for fog network is 471 ms, while the speed
    of data transmission for cloud network is up to 1349 ms. The speed is affected
    by the network architecture, such as the using of fog network, the measurement
    data of object from sensors in the shorter range network. SECTION V. Conclusion
    The controlling system parameters of growing plants in greenhouse using fog network
    technology has been improved successfully. The system does not experience the
    latency problem during the collecting data in a real-time. The controlling systems
    in greenhouse is more efficient because it is supported by fog network technology.
    The simulation using fuzzy rule-based algorithm in PHP programming language obtained
    watering control can be done remotely and the duration of watering is also adjusted
    to the climate conditions in the greenhouse so that it can reduce the risk of
    dead plants due to the influence of uncertain climate factors. Authors Figures
    References Citations Keywords Metrics More Like This Evolving Fuzzy-Rule-Based
    Classifiers From Data Streams IEEE Transactions on Fuzzy Systems Published: 2008
    Fuzzy Rule-Based Bayesian Reasoning Approach for Prioritization of Failures in
    FMEA IEEE Transactions on Reliability Published: 2008 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of 2019 4th International Conference on Informatics and Computing,
    ICIC 2019
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Fuzzy Rule-Based Systems for Controlling Plant Growth Parameters in Greenhouses
    Using Fog Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ogidan O.K.
  - Afia K.R.
  citation_count: '8'
  description: In order to eliminate the drudgery associated with irrigation practice,
    a smart irrigation system with an Android-based mobile application and control
    system is developed and tested under the local and cloud server architectures.
    The system uses four sensors (moisture content, temperature, humidity and ultrasonic)
    to acquire real-time data from the irrigation site which are fed to the central
    controller. Wi-Fi device is used to provide Internet connectivity to a local and
    cloud server. A mobile application is developed to display the four sensor measurements
    on a user-friendly graphically interface in real-time as received from the server.
    The system automatically starts/stop irrigation pumps based on measurements received
    from the soil moisture content sensor after attaining certain threshold values.
    Its remote logging capability makes it possible for users to view on their mobile
    phone the status of their farmland such as atmospheric temperature, humidity,
    level of water in the reservoir and soil moisture content from any location, provided
    Internet access is . It also gives the user the flexibility of starting a pump
    on the farmland remotely using his mobile device. Experimental results reveal
    that the local server is more stable than the cloud server architecture.
  doi: 10.1109/AFRICON46755.2019.9133953
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 IEEE AFRICON Smart irrigation
    system with an Android-based remote logging and control Publisher: IEEE Cite This
    PDF Olugbenga Kayode Ogidan; Kennedy Richmond Afia All Authors 10 Cites in Papers
    287 Full Text Views Abstract Authors Citations Keywords Metrics Abstract: In order
    to eliminate the drudgery associated with irrigation practice, a smart irrigation
    system with an Android-based mobile application and control system is developed
    and tested under the local and cloud server architectures. The system uses four
    sensors (moisture content, temperature, humidity and ultrasonic) to acquire real-time
    data from the irrigation site which are fed to the central controller. Wi-Fi device
    is used to provide Internet connectivity to a local and cloud server. A mobile
    application is developed to display the four sensor measurements on a user-friendly
    graphically interface in real-time as received from the server. The system automatically
    starts/stop irrigation pumps based on measurements received from the soil moisture
    content sensor after attaining certain threshold values. Its remote logging capability
    makes it possible for users to view on their mobile phone the status of their
    farmland such as atmospheric temperature, humidity, level of water in the reservoir
    and soil moisture content from any location, provided Internet access is available.
    It also gives the user the flexibility of starting a pump on the farmland remotely
    using his mobile device. Experimental results reveal that the local server is
    more stable than the cloud server architecture. Published in: 2019 IEEE AFRICON
    Date of Conference: 25-27 September 2019 Date Added to IEEE Xplore: 07 July 2020
    ISBN Information: ISSN Information: DOI: 10.1109/AFRICON46755.2019.9133953 Publisher:
    IEEE Conference Location: Accra, Ghana Authors Citations Keywords Metrics More
    Like This Demand bound server: Generalized resource reservation for hard real-time
    systems 2011 Proceedings of the Ninth ACM International Conference on Embedded
    Software (EMSOFT) Published: 2011 Exploiting Aperiodic Server to Improve Aperiodic
    Responsiveness for LET-Based Real-Time Systems 2017 IEEE International Symposium
    on Parallel and Distributed Processing with Applications and 2017 IEEE International
    Conference on Ubiquitous Computing and Communications (ISPA/IUCC) Published: 2017
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE AFRICON Conference
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart irrigation system with an Android-based remote logging and control
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Guo J.
  - Liu J.
  - Ning J.
  - Han W.
  citation_count: '17'
  description: As an important component of the earth ecosystem, soil moisture is
    of great significance in the fields of crop growth monitoring, crop yield estimation,
    variable irrigation and other related agricultural applications. With the rapid
    development of the technology and theory of microwave remote sensing, soil moisture
    retrieval with remote sensing data has been widely used at home and abroad. The
    multi-source remote sensing data used in this study was acquired from Sentinel-1
    radar and Sentinel-2 optical satellites which belong to ESA's Sentinel series
    and there are great advantages in space, time and data registration in monitoring
    soil moisture. The study area is located in Yangling Demonstration Zone, Shanxi
    Province and 45 sampling sites were selected and measured to validate the soil
    moisture retrieval model. Firstly, to deal with the problem that soil moisture
    retrieval was greatly affected by surface vegetation covers, this study applied
    Oh model to retrieve soil moisture after removing the influence of vegetation
    by water cloud model. Secondly, taking the great advantages of machine learning
    algorithms into account, the study selected support vector regression (SVR) and
    generalized regression neural network (GRNN) models to retrieve soil moisture,
    and the models were constructed with different combinations of characteristic
    parameters including VH polarization radar backward scattering coefficient and
    VV polarization radar backward scattering coefficient altitude (H0), local incident
    angle (LIA) which were calculated out with Sentinel-1 radar remote sensing data
    and vegetation indexes (normalized difference vegetation index, NDVI; modified
    soil adjusted vegetation index, MSAVI and difference vegetation index, DVI) which
    were calculated out with Sentinel-2 optical remote sensing data. Finally, this
    study defined the equivalent number of occurrences to evaluate the quantitative
    influence of each characteristic parameter because different parameters had different
    effect on farmland soil moisture retrieval. The results showed that the soil moisture
    retrieval accuracy of Oh model was increased after removing vegetation influence
    by water cloud model. The retrieval accuracies of SVR and GRNN models with MSAVI
    and NDVI were higher than that of Oh model. The optimal input combination of SVR
    model composed of five characteristic parameters, including VH polarization radar
    backward scattering coefficient, VV polarization radar backward scattering coefficient,
    H0, LIA, and MSAVI had the best retrieval accuracy with correlation coefficient
    of 0.903 and root mean square error of 0.014cm3/cm3 respectively. The optimal
    SVR model was used to retrieve the soil moisture in study area and the results
    were consistent with local rainfall events. The equivalent numbers of occurrences
    of characteristic parameters from high to low were VH polarization radar backward
    scattering coefficient, H0, VV polarization radar backward scattering coefficient,
    LIA, MSAVI, NDVI, DVI. For radar backward scattering coefficients from different
    polarized channel, VH polarization radar backward scattering coefficient is more
    sensitive to soil moisture than VV polarization radar backward scattering coefficient.
    Among the three vegetation indexes, the counting results indicated MSAVI had the
    strongest correlation with soil moisture content, followed by NDVI and DVI was
    the weakest. The experimental results showed that the fusion of radar and optical
    data had great potential in soil moisture retrieval in farmlands. The performances
    of the constructed model in other farmland types would be further investigated
    in the future.
  doi: 10.11975/j.issn.1002-6819.2019.14.009
  full_citation: '>'
  full_text: '>

    "EI CSA CABI 卓越期刊 CA Scopus CSCD 核心期刊 首页 关于我刊 编委会 投稿指南 期刊浏览 获奖文章 农业工程期刊 期刊订阅 联系我们
    EI收录本刊数据 English 文章导航 >  农业工程学报  > 2019  >  35(14) : 71-78.  > DOI: 10.11975/j.issn.1002-6819.2019.14.009
    引用本文: 郭交, 刘健, 宁纪锋, 韩文霆. 基于Sentinel多源数据的农田地表土壤水分反演模型构建与验证[J]. 农业工程学报, 2019, 35(14):
    71-78. DOI: 10.11975/j.issn.1002-6819.2019.14.009 Citation: Guo Jiao, Liu Jian,
    Ning Jifeng, Han Wenting. Construction and validation of soil moisture retrieval
    model in farmland based on Sentinel multi-source data[J]. Transactions of the
    Chinese Society of Agricultural Engineering (Transactions of the CSAE), 2019,
    35(14): 71-78. DOI: 10.11975/j.issn.1002-6819.2019.14.009 基于Sentinel多源数据的农田地表土壤水分反演模型构建与验证
    郭交1,2,  刘健1,2,  宁纪锋3,  韩文霆4 1. 西北农林科技大学机械与电子工程学院，杨凌 712100 2. 陕西省农业信息感知与智能服务重点实验室，杨凌
    712100 3. 西北农林科技大学信息工程学院，杨凌 712100 4. 西北农林科技大学水土保持研究所，杨凌 712100 基金项目: 国家自然科学基金资助项目（41301450）、\"十三五\"国家重点研发计划课题（2017YFC0403203）、杨凌示范区产学研用协同创新重大项目（2018CXY-23）和中央高校基本科研业务费专项资金资助项目（2452019180）
    Construction and validation of soil moisture retrieval model in farmland based
    on Sentinel multi-source data Guo Jiao1,2,  Liu Jian1,2,  Ning Jifeng3,  Han Wenting4
    1. College of Mechanical and Electronic Engineering, Northwest A&F University,
    Yangling 712100 China 2. Shaanxi Key Laboratory of Agricultural Information Perception
    and Intelligent Service, Yangling 712100, China 3. College of Information Engineering,
    Northwest A&F University, Yangling, 712100, China 4. Institute of Soil and Water
    Conservation, Northwest A&F University, Yangling 712100, China 摘要 摘要 HTML全文 图(0)
    表(0) 参考文献(28) 相关文章 施引文献(43) 资源附件(0) 摘要: 土壤水分是影响水文、生态和气候等环境过程的重要参数，而微波遥感是农田地表土壤水分测量的重要手段之一。针对微波遥感反演农田地表土壤水分受植被覆盖影响较大的问题，该文基于Sentinel-1和Sentinel-2多源遥感数据，利用Oh模型、支持向量回归（support
    vector regression，SVR）和广义神经网络（generalized regression neural Network，GRNN）模型对土壤水分进行定量反演，以减小植被影响，提高反演精度。结果表明：通过水云模型去除植被影响后的Oh模型反演精度有所提高。加入不同植被指数的SVR和GRNN模型的反演效果总体优于Oh模型，基于SVR模型的多特征参数组合（双极化雷达后向散射系数、海拔高度、局部入射角、修改型土壤调整植被指数）反演效果最优，其测试集相关系数和均方根误差分别达到了0.903和0.015
    cm3/cm3，为利用多源遥感数据反演农田地表土壤水分提供了参考。   关键词: 土壤水分  /  模型  /  遥感  /  反演  /  多源数据  /  Sentinel   Abstract:
    As an important component of the earth ecosystem, soil moisture is of great significance
    in the fields of crop growth monitoring, crop yield estimation, variable irrigation
    and other related agricultural applications. With the rapid development of the
    technology and theory of microwave remote sensing, soil moisture retrieval with
    remote sensing data has been widely used at home and abroad. The multi-source
    remote sensing data used in this study was acquired from Sentinel-1 radar and
    Sentinel-2 optical satellites which belong to ESA''s Sentinel series and there
    are great advantages in space, time and data registration in monitoring soil moisture.
    The study area is located in Yangling Demonstration Zone, Shanxi Province and
    45 sampling sites were selected and measured to validate the soil moisture retrieval
    model. Firstly, to deal with the problem that soil moisture retrieval was greatly
    affected by surface vegetation covers, this study applied Oh model to retrieve
    soil moisture after removing the influence of vegetation by water cloud model.
    Secondly, taking the great advantages of machine learning algorithms into account,
    the study selected support vector regression (SVR) and generalized regression
    neural network (GRNN) models to retrieve soil moisture, and the models were constructed
    with different combinations of characteristic parameters including VH polarization
    radar backward scattering coefficient and VV polarization radar backward scattering
    coefficient altitude (H0), local incident angle (LIA) which were calculated out
    with Sentinel-1 radar remote sensing data and vegetation indexes (normalized difference
    vegetation index, NDVI; modified soil adjusted vegetation index, MSAVI and difference
    vegetation index, DVI) which were calculated out with Sentinel-2 optical remote
    sensing data. Finally, this study defined the equivalent number of occurrences
    to evaluate the quantitative influence of each characteristic parameter because
    different parameters had different effect on farmland soil moisture retrieval.
    The results showed that the soil moisture retrieval accuracy of Oh model was increased
    after removing vegetation influence by water cloud model. The retrieval accuracies
    of SVR and GRNN models with MSAVI and NDVI were higher than that of Oh model.
    The optimal input combination of SVR model composed of five characteristic parameters,
    including VH polarization radar backward scattering coefficient, VV polarization
    radar backward scattering coefficient, H0, LIA, and MSAVI had the best retrieval
    accuracy with correlation coefficient of 0.903 and root mean square error of 0.014cm3/cm3
    respectively. The optimal SVR model was used to retrieve the soil moisture in
    study area and the results were consistent with local rainfall events. The equivalent
    numbers of occurrences of characteristic parameters from high to low were VH polarization
    radar backward scattering coefficient, H0, VV polarization radar backward scattering
    coefficient, LIA, MSAVI, NDVI, DVI. For radar backward scattering coefficients
    from different polarized channel, VH polarization radar backward scattering coefficient
    is more sensitive to soil moisture than VV polarization radar backward scattering
    coefficient. Among the three vegetation indexes, the counting results indicated
    MSAVI had the strongest correlation with soil moisture content, followed by NDVI
    and DVI was the weakest. The experimental results showed that the fusion of radar
    and optical data had great potential in soil moisture retrieval in farmlands.
    The performances of the constructed model in other farmland types would be further
    investigated in the future.   Keywords: soil moisture  /  models  /  remote sensing  /  retrieval  /  multi-source
    data  /  Sentinel   We recommend Farmland soil moisture retrieval using PROSAIL
    and water cloud model Cai Qingkong et al., Transactions of the Chinese Society
    of Agricultural Engineering, 2018 Retrieval of soil moisture at returning green
    stage of winter wheat using MODIS drought index and RBFNN Huang Youxin et al.,
    Transactions of the Chinese Society of Agricultural Engineering, 2018 Estimation
    of total yield of different grassland types in Tianshan pastoral area based on
    vegetation index Liu Yan et al., Transactions of the Chinese Society of Agricultural
    Engineering, 2017 Soil moisture monitoring based on measured hyperspectral index
    and HSI image index Li Xiang et al., Transactions of the Chinese Society of Agricultural
    Engineering, 2015 Inversion and distribution of soil moisture in belly of Maowusu
    sandy land based on comprehensive drought index Wang Sinan et al., Transactions
    of the Chinese Society of Agricultural Engineering, 2018 Remote sensing moisture
    model could aid farmers Phys.org, 2014 Application of generalized regression neural
    network and support vector regression for monthly rainfall forecasting in western
    Jilin Province, China Lu, Wenxi et al., Journal of Water Supply: Research and
    Technology - Aqua, 2014 Characterizing forest properties and microclimate using
    numerical modelling and remote sensing Phys.org, 2013 Estimating evapotranspiration
    over vegetated surfaces based on wet patch patterns Peiyuan Li et al., Hydrology
    Research, 2019 Improving remote estimation of winter crops gross ecosystem production
    by inclusion of leaf area index in a spectral model PeerJ Powered by PDF下载 ( 5472
    KB) XML下载 导出引用 点击查看大图 计量 文章访问数:  1309 HTML全文浏览量:  0 PDF下载量:  531 被引次数: 43 出版历程
    收稿日期:  2019-01-22 修回日期:  2019-06-29 发布日期:  2019-07-14 分享 友情链接> Industrial Crops
    and Products Biomass & Bioenergy Biosystems Engineering Aquacultural Engineering
    International Journal of Agricultural and Biological Engineering 版权所有 © 农业工程学报
    京ICP备06025802号-3 地址：北京朝阳区麦子店街41号（100125） 电话：010-59197078/7077/7076 邮箱：tcsae@tcsae.org
    邮件订阅 RSS 今日头条 抖音号 视频号 淘宝 微店 本系统由北京仁和汇智信息技术有限公司开发  "'
  inline_citation: '>'
  journal: Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural
    Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Construction and validation of soil moisture retrieval model in farmland
    based on Sentinel multi-source data
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Meher C.P.
  - Sahoo A.
  - Sharma S.
  citation_count: '6'
  description: In a peninsular country like India, agriculture contributes about 16%
    of total GDP, so irrigation system has been given a high priority in economic
    development. With the advancement of wireless sensor network, cloud computing
    and IoT in the field of irrigation, this paper aims at conventional usage of water
    by providing adequate amount of water to the crops at the right time and conserving
    the excess run-off water from the farmlands. The excess runoff water will be saved
    in a tank for future use. As in coastal belts of India there remains a heavy scarcity
    of water during the month of March to May the farmlands remains as barren lands.
    By using this method, crop rotation becomes possible, as water will be supplied
    from the water stored from run-off water. It aims at automation the irrigation
    process by surveillance of soil moisture, humidity and temperature. Arduino Uno
    is the micro-controller, which monitors the sustainability conditions of the crops
    ensuring adequate water supply and better crop yield. It also helps the farmer
    to control the farmland remaining in far away from that place also. By using IoT
    the farmer can also make a predictive study of the amount of water requirement
    in the upcoming days. Humidity sensor, temperature sensor and moisture sensor
    are deployed in the peripherals of the field which will sense the environmental
    conditions and send those data to an local wireless server and the recorded data
    will be stored on cloud.
  doi: 10.1109/ViTECoN.2019.8899396
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 International Conference...
    IoT based Irrigation and Water Logging monitoring system using Arduino and Cloud
    Computing Publisher: IEEE Cite This PDF Chandra Prakash Meher; Adyasha Sahoo;
    Suraj Sharma All Authors 4 Cites in Papers 325 Full Text Views Abstract Document
    Sections I. INTRODUCTION II. MAIN PART III. SYSTEM ARCHITECTURE IV. Working Proposal
    V. Future Works Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: In a peninsular country like India, agriculture contributes
    about 16% of total GDP, so irrigation system has been given a high priority in
    economic development. With the advancement of wireless sensor network, cloud computing
    and IoT in the field of irrigation, this paper aims at conventional usage of water
    by providing adequate amount of water to the crops at the right time and conserving
    the excess run-off water from the farmlands. The excess runoff water will be saved
    in a tank for future use. As in coastal belts of India there remains a heavy scarcity
    of water during the month of March to May the farmlands remains as barren lands.
    By using this method, crop rotation becomes possible, as water will be supplied
    from the water stored from run-off water. It aims at automation the irrigation
    process by surveillance of soil moisture, humidity and temperature. Arduino Uno
    is the micro-controller, which monitors the sustainability conditions of the crops
    ensuring adequate water supply and better crop yield. It also helps the farmer
    to control the farmland remaining in far away from that place also. By using IoT
    the farmer can also make a predictive study of the amount of water requirement
    in the upcoming days. Humidity sensor, temperature sensor and moisture sensor
    are deployed in the peripherals of the field which will sense the environmental
    conditions and send those data to an local wireless server and the recorded data
    will be stored on cloud. Published in: 2019 International Conference on Vision
    Towards Emerging Trends in Communication and Networking (ViTECoN) Date of Conference:
    30-31 March 2019 Date Added to IEEE Xplore: 14 November 2019 ISBN Information:
    DOI: 10.1109/ViTECoN.2019.8899396 Publisher: IEEE Conference Location: Vellore,
    India SECTION I. INTRODUCTION Agriculture plays a vital role in Indian economy.
    Over 70% of the rural households depend on agriculture. Indian agriculture sector
    accounts for 16% of India’s gross domestic product (GDP) and provides employment
    to 50% of the countries workforce. But due to uneven distribution of rainfall
    in our country various challenges come in the farming conditions. During some
    months of the year there is scarcity of rainfall as a result of which proper growth
    of crops gets hampered which results in loss of some plants in its juvenile stage
    itself.And sometimes due to excessive unseasonal rainfall the crops gets rotten
    up which creates an environment for the breeding of various insects. Several manual
    technologies had been implemented to tackle the situation but it requires a lot
    of man power as a result every time investment is high.So,automated system will
    be economical and efficient way for tackling the problems. Due to uneven distribution
    of rainfall, it becomes difficult for a farmer to irrigate the whole field manually
    by making efficient use of water,so some technical irrigation facility is required
    to efficiently distribute the water to the whole farm land for better crop production.
    India is blessed with a large acreage of land for cultivation but due to poor
    irrigation facilities and inadequate water supply its does not provide a sufficient
    output for the country’s GDP[1]. The manual method of watering the crops leaves
    the land uncultivated due to scarcity of water during arid seasons which results
    in decrease of crop retainability. In India,as rice is the staple food of most
    of the coastal regions so maximum area of peninsular part is cultivated with rice
    but due to lack of proper irrigation system there is an inadequate crop yield.
    Also due to retreating monsoon and unseasonable rainfall water logging comes into
    an issue as the result the lands gets logged with rain water which results in
    rotting away of crops[2]. In this proposed model, sensors will play the main role
    in collecting the data of the atmosphere and using the values of sensors it will
    provide an estimated quantity of water required to the crops according to the
    environment. Valves will also play important role providing a pathway for inlet
    and outlet of water into the field.Depending on the appropriate instruction sent
    by the user the valve will follow the action. By implementing this technique a
    huge amount of water can be saved and excessive watering of plants can be avoided[3].
    The humidity, temperature and moisture sensors will deployed near the peripheral
    of the crops and the data collected from it will be sent to the nearest gateway.
    The gateway then transfers the data to the cloud where it will be linked to a
    database system that will store the recorded data sequentially. During the installation
    a predetermined threshold value is set according to the average climatic condition
    of the area. If the sensed value exceeds the threshold value then the Arduino
    will send an alert message or notification to the user to perform the desired
    action depending on the condition to water the land or not. The notification will
    be sent to the user through the web app[4]. As soon as the owner performs the
    desired action it immediately sends response to the database which in turn provides
    request to the Arduino and the valves gets opened up for the inlet or outlet of
    water into the fields until the moisture content receives a threshold value.Thus
    the surplus outlet water can be stored to be used during dry season. Hence,water
    harvesting can be done with efficient usage of water The database can be also
    beneficial in providing precision agriculture data. A detailed study of the sensor
    values can also predict the yield percent. This can also prove beneficial in suggest
    the farmer to put extra manure or fertilizer for meeting its demand. SECTION II.
    MAIN PART A. Challenges of IoT in Agriculture 1. Customers Prospective The final
    information that is collected from the server by detailed study sensors is not
    properly utilized by the rural based farmers due to lack using high end technology
    based application. To provide better reliability on data more emphasis must be
    given to software than hardware so the end user must be capable enough to make
    the information notable. So there is not sufficient institutional capacity to
    deliver farmers specific services[5]. 2. Connectivity and Storage The battery
    life span of the module may be limited to an extent so proper inspection is required
    every time to avoid the connectivity losses.Sometimes due to poor signal connection
    the data may be lost on its way to the database server so every time it must be
    ensured to have a good connectivity signal[6].If there may be any interruption
    in the user end application then also the data may be interrupted resulting in
    poor decisions. The storage capacity of the IoT devices has low memory so it cannot
    hold much of its capacity.The application used may not have much memory space
    to store all the data through out the year thereby creating data losses for analysis[7].
    Fig. 1 Integration of sensor(s) with Arduino UNO. Show All 3. Hardware Specifications
    Standards of the devices are important in order to work on new technologies.If
    any component needs to be replaced and if it posses some different standard then
    the interoperability creates problem as a result the system becomes complicated.
    And the issues with integration as shown in the Fig. 1 arises[5]. B. System Devices
    Arduino Uno : The Arduino Uno shown in the Fig. 2 is a development board with
    ATMega328 micro-controller used in the broad.It has 14 digital pins which allow
    user to interface input / output with the board. Besides that it provide 6 analog
    inputs, 16 MHz ceramic resonator, USB connection for data transfer and power supply
    from laptops or PCs[13]. Also it has power jack , an ICSP header, and a reset
    button to clear the memory. It consists of all the things,required by the user.
    Thus it can be simply connected to the power using AC-to-DC adapter or else using
    battery to start the board. Thus the table:1 shows the board summary. TABLE I
    Arduino board’s Summary Fig. 2 Arduino UNO Show All nRF24L01: It is small integrated
    RF transceiver chip of frequency band of 2.4-2.5 Ghz.The main importance of this
    integrated chip is that it posses ShockBrust technology so that it can also communicate
    with microprocessor at low speed . Without activating also it can access FIFO
    register both in power-down mode and standby mode, MCU can also access FIFO register
    without activation, which also reduces the average power consumption[8].Thus nRF24L01,Fig.
    3 wireless module can transmit data even by consuming less power[9]. Fig. 3 Pin
    Configuration of nRF24L01 Show All Moisture Sensor : The increase in productivity
    of the crops, water is the important source so keeping a track of the amount of
    water in the soil is necessary[10]. Soil moisture Fig. 4 is used to measure the
    water retaining capacity of the soil.The voltage between two probes of the moisture
    sensor will measure dielectric permittivity of the surrounding medium using a
    capacitance.In soil, dielectric permittivity is a function of the water content,
    and therefore the water content of the soil is measured. The sensor predicts the
    water content by calculating the average over the entire length of the sensor[11].
    Fig. 4 Soil Moisture Sensor Show All DHT11-(Humidity and Temperature sensor):
    It is a digital compound temperature & humidity sensor that gives a digital output
    previously calibrated. It uses a acquisition technology in digital mode for temperature
    & humidity sensor technology in order to have long term stability[9]. This single-chip
    micro-controller (Fig. 5) with a a 8-bit connection provides quick response and
    better output quality ,thus makes it cost-effective.A single bus data format acts
    as both input/output transmission or two way communication. One single unit of
    data is 5 Byte (40 Bit). The communication time of transmitting and receiving
    is maximum 3 ms. The format single unit of output contains 40 bits. Output format:
    16 bit of Humidity(8 bit integer data + 8 bit decimal data) and 16 bit of Temperature(8
    bit integer data + 8 bit decimal data) and 8 bit calibration.The calibration is
    the sum of the first four bytes[12]. The power consumption is quite low i.e.,supply
    voltage of about 5V and the maximum current(average) of about 0.5 mA . Fig. 5
    DHT11 sensor to measure humidity and temp. of the area Show All ESP8266: It is
    a system on chip, highly integrated and cost effective module with TCP/IP stack
    which allows microcontroller to connect to WiFi.The ESP8266 in Fig. 6 is efficient
    to host an application.The storage and processing capacity is much higher which
    helps the module integrate via GPIO ports of the sensors with least loading during
    run-time[13].It has an integrated RF that allows it to work on the operating condition
    without any external RF parts. The input voltage being 3.3 V, with 8 pins, consisting
    of 1 Transmitter and 1 Receiver, 2 General purpose input output pins i.e. GPIO
    0 and GPIO 2, Reset , VCC and Ground. ESP has faster transmission and processing
    as it handles the information on both the ways, one as sensor interface unit and
    other as the Wireless Communication Unit[14]. Fig:6 ESP8266 Module Show All SECTION
    III. SYSTEM ARCHITECTURE Fig:7 IoT Architecture Diagram Show All In this architecture,
    shown in the Fig. 7 basically three components used are Hardware Module,IoT Gateway
    and Cloud. These basic components forms the architecture of the proposed model.
    The Hardware Module contains sensors i.e. DHT11(for temperature and moisture sensing),
    Soil moisture sensor(measuring the moisture contain of the soil).For transmitting
    the sensor data(s) from micro controller to the gateway using nRF24L01 (a trans-receiver
    module). In the gateway there is a setup of WiFi Module(ESP8266), a nRF24L01 and
    a Micro-controller. These elements forms the core gateway of the system. The gateway
    sets path of communication between the transmitter and receiver end.It is highly
    authenticated and secured pathway where leakage of data is least[15]. Finally,
    the Cloud which plays an decision part in IoT . Cloud serves as an environment
    for storage,user interaction, handling real time database and others analytic
    work for project implementation[16]. Use of cloud in the proposed model will help
    to analyzed the data from the real time database i.e Firebase or AWS. Use of these
    database helps to build end user applications such as Web app or Mobile app. SECTION
    IV. Working Proposal The working proposal as shown in the Fig. 8 is based on the
    automation in the agriculture.It checks for two major conditions i.e overflow
    of water and underflow of water with other required conditions. As discussed above,
    the hardware module (sensors,nRF and MCU) which need to be setup making a chain
    of networks among the other hardware modules in the fields (crop fields). These
    chains of network forms a single transmission end from different parts of the
    field to the IoT gateway. In the field, sensors with data from different parts,
    transmits to their respective MCU(s) and thus MCU(s) transmits the collected data
    from sensors to the nRF. With network protocol nRF from different module forms
    a hub to make a single transmission end and hence the final collected data is
    being transmitted to the Gateway. Fig:8 Working Model Show All In the Gateway,
    transmitted data are being received by the nRF module which works as a receiver.
    Further these data are being passed to the MCU which enables WiFi ESP8266 to connect
    to the provided Cloud (AWS or Firebase). MCU with the help of ESP8266 connects
    to the local router and on successful connection, provides an IP address which
    contain the received data. Further the network connects to the cloud for storing
    the data and analyzing them. In the cloud data get stored in the real time database
    which provides APIs to access the stored data directly. It also provide an admin
    panel for end user interaction with the hardware and store data. As mention these
    module works for certain condition, lets discuss the shortage of water in field.In
    the cloud few analysis and prediction models shown in flowchart Fig. 9 are used
    to set threshold data for different conditions which would state the requirement
    of irrigation or control water logging. Based on the requirements a trigger or
    notification will create in the admin panel mentioning as: \"Please switch ON
    motor for irrigation\" \"Please OPEN the pipelines to remove excess water from
    field.\" This alert or notification from cloud enable user at the end point to
    send command to the hardware to perform certain action i.e to remove water using
    pipeline when overflow of water in the field or to irrigate the field in time
    intervals. Irrigation- The method of supplying of water to the fields at an interval
    of time is called Irrigation. In our model, we have also discussed the process
    of irrigation in our model to show the utilization of pipelines and storage of
    water. Connection of pipes in the fields and storage tanks serve the major advantage
    for irrigation during the hot seasons. In those days when the crops like legumes
    and other crops that grow in the fields require water during the cultivation.
    In the tropic region, the sun rays are stronger, which cause plants to die. To
    overcome this problem we have used the same model to irrigate the field. Since
    the connection of sensors measure the humidity, temperature and moisture of the
    soil, which is send to the server as it did earlier. A notification is send to
    the user through server, which enable the user to send back the command to open
    up the gates and switch on the motor to fetch water from tank to the field through
    pipelines. These enable irrigation process in the field. On reaching the optimum
    level the sensor send back the data to the gateways to stop the motor and closes
    the gate to stop the flow of water to the fields. Fig. 9 Flowchart of proposed
    model Show All SECTION V. Future Works This proposed model can be further extended
    to include pH sensor to know the quality and type of soil. Further to have better
    cloud management system we can use Firebase or Amazon Web Services which will
    provide real time data as well as analysis of the data. We can use machine learning
    approach to predict the amount of water required in further time span which will
    prove beneficial for the user.This will surely prove a new revolution in the field
    of agriculture that will increase the productivity. SECTION VI. Conclusion The
    proposed model may definitely be a new era of technical advancement which would
    prove the increase in productivity of the crops.When the things will be set up
    to the cloud and the internet of things set up will be successful then the whole
    agricultural sector can be digitally able to handle the field on their requirement
    basis. The harvesting of excess run off water helps saving some amount of water
    for for the benefit of the farm lands during summer seasons. The above future
    works will also prove profitable to add further new advancements and innovation
    on agricultural field and hence increase the GDP contribution of the country.
    Authors Figures References Citations Keywords Metrics More Like This Arduino-based
    smart irrigation using water flow sensor, soil moisture sensor, temperature sensor
    and ESP8266 WiFi module 2016 IEEE Region 10 Humanitarian Technology Conference
    (R10-HTC) Published: 2016 Automatic irrigation system using soil moisture sensor
    and temperature sensor with microcontroller AT89S52 2017 International Conference
    on Signal Processing and Communication (ICSPC) Published: 2017 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - International Conference on Vision Towards Emerging Trends
    in Communication and Networking, ViTECoN 2019
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT based Irrigation and Water Logging monitoring system using Arduino and
    Cloud Computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Subathra M.S.P.
  - Blessing C.J.
  - Thomas George S.
  - Thomas A.
  - Dhibak Raj A.
  - Ewards V.
  citation_count: '5'
  description: The aim of this work is to address the water scarcity prevalent in
    our country through smart irrigation practices. In this work we take certain environmental
    factors such as soil moisture content into consideration for creating a sustainable
    and smart irrigation system. The models proposed here for the day to day estimation
    of evapotranspiration are derived by using the daily data parameters such as temperature,
    solar radiation, wind speed and humidity for a period of 4 years (2009–2013) from
    Karunya University’s meteorological station, at Coimbatore, Tamil Nadu, India.
    An Artificial Neural Network approach is adopted to run the software part using
    the environmental parameters and the output obtained from the ANN method with the
    least RMSE error is taken into account for the ETo value. The reliability of the
    computational models used are done based on the results achieved through two prominent
    empirical methods. These include Penman-Monteith equation and Hargreaves equation
    and comparing their respective Mean Square Errors (MSE) and also the Root Mean
    Square Errors (RMSE). Hargreaves method is suitable with the least RMSE error.
    In the hardware approach Hargreaves method has been implemented using Raspberry
    PI controller. The real-time data from the field controller is relayed to a hardware
    setup at the local base station. This is done through a wireless ZigBee protocol
    which eventually transmits the necessary data via a GPRS link to the remote station.
    The output volumetric water content was calculated using Crop coefficient ETC. Solenoid
    valves are remotely controlled to release a calculated value of water based on
    the data acquired at the local base station. This method of automated irrigation
    will mitigate the problems usually associated with farming and will finally result
    in generating greater yields of crop production.
  doi: 10.1007/978-981-13-1882-5_49
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Advances in Big Data and
    Cloud Computing Conference paper Automated Intelligent Wireless Drip Irrigation
    Using ANN Techniques Conference paper First Online: 12 December 2018 pp 555–568
    Cite this conference paper Access provided by University of Nebraska-Lincoln Download
    book PDF Download book EPUB Advances in Big Data and Cloud Computing M. S. P.
    Subathra, Chinta Joyson Blessing, S. Thomas George, Abel Thomas, A. Dhibak Raj
    & Vinodh Ewards  Part of the book series: Advances in Intelligent Systems and
    Computing ((AISC,volume 750)) 889 Accesses 2 Citations Abstract The aim of this
    work is to address the water scarcity prevalent in our country through smart irrigation
    practices. In this work we take certain environmental factors such as soil moisture
    content into consideration for creating a sustainable and smart irrigation system.
    The models proposed here for the day to day estimation of evapotranspiration are
    derived by using the daily data parameters such as temperature, solar radiation,
    wind speed and humidity for a period of 4 years (2009–2013) from Karunya University’s
    meteorological station, at Coimbatore, Tamil Nadu, India. An Artificial Neural
    Network approach is adopted to run the software part using the environmental parameters
    and the output obtained from the ANN method with the least RMSE error is taken
    into account for the ETo value. The reliability of the computational models used
    are done based on the results achieved through two prominent empirical methods.
    These include Penman-Monteith equation and Hargreaves equation and comparing their
    respective Mean Square Errors (MSE) and also the Root Mean Square Errors (RMSE).
    Hargreaves method is suitable with the least RMSE error. In the hardware approach
    Hargreaves method has been implemented using Raspberry PI controller. The real-time
    data from the field controller is relayed to a hardware setup at the local base
    station. This is done through a wireless ZigBee protocol which eventually transmits
    the necessary data via a GPRS link to the remote station. The output volumetric
    water content was calculated using Crop coefficient ETC. Solenoid valves are remotely
    controlled to release a calculated value of water based on the data acquired at
    the local base station. This method of automated irrigation will mitigate the
    problems usually associated with farming and will finally result in generating
    greater yields of crop production. Keywords Evapotranspiration ETo Artificial
    neural network (ANN) ZigBee Access provided by University of Nebraska-Lincoln.
    Download conference paper PDF Similar content being viewed by others Automated
    Drip Irrigation System Using Neural Network Chapter © 2021 Intelligent Irrigation
    System Using Machine Learning Technologies and Internet of Things (IoT) Chapter
    © 2021 Automatic Smart Irrigation Method for Agriculture Data Chapter © 2023 1
    Introduction Agriculture is man’s oldest known profession. Even in the Indian
    Economy Agriculture output is an important component in calculating the GDP growth
    apart from providing sustenance to the entire population. In rural India, agriculture
    acts as a primary source of employment and trade. With globalization and exponential
    rise in population, the agriculture industry is facing a lot of more pressure
    than ever before. In the agricultural sector, according to statistics estimates
    that 60% of all the water taken for irrigation is taken from reservoirs, lakes
    and rivers alone. With the revolution in technology farmers and agriculturists
    across the globe have taken to more mechanized ways of irrigation to ensure judicious
    use of water. Even though we have many ways of irrigation the onus is always on
    to find the most efficient way to use water. The primary goal of agriculture is
    to provide safe, fresh food and staples to the public at the most reasonable price
    possible. The day to day demand on the agricultural sector makes it necessary
    to automate the overall irrigation process. This type of automated irrigation
    considers factors such as temperature, humidity and also the topography of the
    surrounding environment are taken into consideration. Therefore, to achieve a
    successful and high quality harvest it is necessary to design an irrigation system
    which takes all these factors into consideration. The main objective of irrigation
    is to provide plants with sufficient water to prevent stress that may reduce the
    yield. The frequency and quantity of water needed depends upon local climatic
    conditions, crop and stage of growth, and soil moisture plant characteristics.
    The quantity of water required can be determined in different ways which do not
    require the knowledge of “Evapotranspiration (ET)” rates. By using the reference
    Evapotranspiration (ETo), the Evapotranspiration (ET) rates can be calculated.
    Though the number of equations available to estimate ETo are available in abundance,
    the FAO-56 Penman-Monteith (FAO-56 PM) [1] equation along with Hargreaves equation
    are used for this work. Soft computing methods have proved to be superior and
    reliable in forecasting and estimating ETo [2]. The primary aim of this study
    is to study and select from different evapotranspiration methods such as Penman
    Monteith and Hargreaves method, the best method to estimate the daily reference
    evapotranspiration by running it through Artificial Neural Network (ANN) model.
    The data used for these methods is sourced from a meteorological station situated
    in the southern part of India. The results achieved above are compared with the
    reference values calculated through the Penman Monteith method. The product achieved
    by multiplying the reference evapotranspiration (ETo) and the crop coefficient
    (Kc) forms the term crop evapotranspiration (ETc) [3]. In the hardware approach
    drip irrigation has been laid for 4 rows and sensors has been placed. Using wireless
    sensor network in a real-time field for tomato plant has been demonstrated using
    raspberry pi controller by considering the best technique (MLP) using Hargreaves
    method was used. The real-time data in order to calculate the water required for
    irrigation based on the respective crop’s ‘Evapotranspiration’ coefficient. 2
    Drip Irrigation Drip irrigation is a process through which water and fertilizers
    used could be saved by allowing the aforementioned quantities to drip slowly,
    through a network of valves, pipes, tubes and emitters, thus reducing wastage
    of water and nutrients therefore improving the application efficiency in certain
    cases even up to 90%. The components involved include Pump, pipelines, fittings,
    lateral pipe, emitters, end cap, tee connector, straight connector. 3 Evapotranspiration
    3.1 Evapotranspiration Both the processes of Evaporation and transpiration tend
    to occur simultaneously and it isn’t easy to differentiate between both. The amount
    of solar radiation, reaching the soil surface is primarily used to determine the
    evaporation from a cropped soil. As the crop grows, the amount of solar radiation
    received by the plant reduces due to the increase in canopy shade area. In the
    initial part of crop development, the primary loss of water is due to soil evaporation
    whereas in the later stages it is due to transpiration. The FAO Penman-Monteith
    method based on expert consultation was recommended as the sole standard method
    for computing the reference evapotranspiration. This method requires certain parameter
    such as sunshine hours, solar radiation air humidity, air temperature and wind
    speed data. 3.2 Penman-Monteith Equation The FAO Penman-Monteith equation determines
    the evapotranspiration from the hypothetical grass reference surface and [1] provides
    a standard to which evapotranspiration in different periods of the year or in
    other regions can be compared and to which the evapotranspiration from other crops
    can be related $$ {\\text{ETo}} = \\frac{{0 \\cdot 408\\Delta \\left( {R_{\\text{n}}
    - G} \\right) + \\gamma \\frac{900}{T + 273}U_{2} \\left( {e_{\\text{s}} - e_{\\text{a}}
    } \\right)}}{{\\Delta + \\gamma \\left( {1 + 0 \\cdot 34U_{2} } \\right)}} $$
    (1) where, ETo reference evapotranspiration [mm day−1], Rn net radiation at the
    crop surface [MJ m−2 day−1], G soil heat flux density [MJ m−2 day−1], T air temperature
    at 2 m height [°C], u2 wind speed at 2 m height [m s−1], es saturation vapour
    pressure [kPa], ea actual vapour pressure [kPa], es–ea saturation vapour pressure
    deficit [kPa], D slope vapour pressure curve [kPa °C−1], g psychometric constant
    [kPa °C−1]. 3.3 Hargreaves Equation As [4] an alternative when solar radiation
    data, relative humidity data and/or wind speed data are missing, reference evapotranspiration,
    ETo (mm d-1), can be estimated using the Hargreaves equation [5]. The FAO-56 Hargreaves
    equation [3] for daily computation is given by: $$ {\\text{ETo}} = C_{H} (T_{{\\max}
    } {-}T_{{\\min} } )^{\\text{Eh}} \\left( {{\\text{T}}_{\\rm mean} + 17.8} \\right){\\text{Ra}}
    $$ (2) where Tmaxmaximum day temperature Tmin minimum day temperature, Ra extraterrestrial
    solar radiation, Environment constants Eh, CH 3.4 Crop Coefficient (ETc) The reference
    evapotranspiration rates are multiplied by a crop coefficient to calculate the
    crop evapotranspiration. Here the crop coefficient expresses the difference in
    evapotranspiration between the cropped and reference grass surface. The differences
    achieved with respect to the evaporation and transpiration between both the surfaces
    can be combined into a single coefficient or described separately [6]. Certain
    factors which determine the selection approach are the climatic data available,
    the time at which the calculations are executed, also the accuracy required, play
    a pivotal role. $$ {\\text{ET}}_{\\text{Crop}} = {\\text{ ETo}} *{\\text{Kc}}\\quad
    {\\text{mm}}/{\\text{day}} $$ (3) where ETo—Evapotranspiration, Kc-Crop Coefficient.
    The crop coefficient for tomato plant is given in Table 1. Table 1 Crop coefficient
    for tomato plant Full size table 4 Artificial Neural Network (ANN) ANN architecture
    is based on the structure and function of biological neural network. Similar to
    neurons in the brain ANN also consists of neurons which are arranged in various
    layers [7]. The popular neural network namely multilayer perceptron (MLP) consists
    of input layer to receive the external data to perform pattern recognition, output
    layer which gives the problem solution and hidden layer is an intermediate layer
    which separates the other layers. The adjacent neurons from input layer to output
    layer are connected through acyclic arcs. The MLP uses training algorithm to learn
    (Fig. 1). Fig. 1 Multilayer perceptron Full size image The datasets which modifies
    the neuron weights depending on the error rate between target and actual output.
    First, for model establishment, various networks like generalized regression neural
    network, radial basis function neural network, probabilistic neural network and
    multilayer perceptron network were selected because of its wide application and
    high accuracy [8]. Total 4 years of data of Karunya (Karunya University weather
    station) was taken and 3 years were considered for training and 1 year was considered
    for testing using different models of Artificial Neural Network. The statistical
    error was calculated for a given area and equation to predict the better model
    for evapotranspiration calculations. For a given data, the neural network acquires
    the data and generates an ETo value which is referenced with the one calculated
    by equations such as Penman and Hargreaves. The model with the least RMSE error
    is chosen and implemented (Fig. 2; Table 2). Fig. 2 Results for hargreaves equation
    Full size image Table 2 Statistical error achieved through penman and hargreaves
    model Full size table From the above table it is evident that among Generalized
    Regression Neural Network (GRNN), Probabilistic Neural Network, Radial Basis Function
    (RBF), the Root Mean Square Error (RMSE) is the least for the Multi-layer Perceptron
    Neutral Network model. Generalized Regression Neural Network (GRNN) is generally
    used extensively for function approximation and consists of layers such as radial
    basis layer and special linear layer. There is no need for an iterative training
    procedure here. It internally consists of four layers. Radial Basis Function Neural
    Network (RBF) has the abilities of quick training and generalization ability.
    The approximation of a non-linear object is done through RBF neural network. Multilayer
    Perceptron (MLP) is widely chosen for its ability ti solve tough and various issues.
    The output is influenced by several parameters to get the desired results. Probabilistic
    Neural Network (PNN) is a feed forward neural network, is used in pattern recognition
    problems and classification problems. This method ensures that mis-classification
    is minimized to a greater extent. 5 Study Area and Data The study area involves
    an agricultural plot rectangular in size amounting to 11 square yards, with 30
    tomato plants and 30 inline emitters. These plants are supplied by LDPE (Low Density
    Polyethylene) tubes which are 12 mm in diameter. The data such as temperature,
    solar radiation, wind speed and humidity are acquired for a period of 5 years
    from the meteorological station of Karunya University at Coimbatore (Latitude
    of 10.9397487° and Longitude of 76.7458484°), Tamilnadu, India. It is located
    in the Western Ghats in southern part of India which is surrounded by high mountains.
    6 Hardware Block Diagram 6.1 Hardware Implementation The hardware requirements
    for this setup require a Solar panel. Through the concept of photovoltaic effect,
    solar panels are used to generate electricity from the sun. A Lead Acid battery
    is used in this setup, this is dependable and inexpensive when calculated on a
    cost-per-watt base. Most common types of Lead Acid battery used are the gel type
    also known as Valve-Regulated Lead Acid (VRLA). The battery used in this system
    is Sealed Lead Acid battery to prevent the batteries from overcharging, a charge
    controller is used. This is basically a voltage cum current regulator which regulates
    the voltage and current coming from the solar panels to the battery. Charge controller
    used here is a 3 A controller for a Lead-acid Battery. In the area of sensor networks,
    devices such as Tran’s receivers play a very important role. It is necessary for
    sensor networks to use wireless modules to communicate and relay data. This setup
    uses one of the easiest modules named XBee wireless module. The Co-coordinator
    XBee is connected to the micro-controller board for transferring the data to processor.
    These are connected to the Transmitter and Receiver pins of the controller. An
    electronic component, model or subsystem whose primary aim is to act as a detector
    for detecting changes in the environment surrounding it and to further transmit
    the information to another processor or a data base is termed as a sensor. In
    Base station sensors used are Temperature, Humidity and Water Flow Sensor. The
    data of each sensor is logged in a coma separated value (csv) file in the system
    after a time interval. The first sensor used in this setup is a temperature and
    humidity sensor. This uses components such as a capacitive humidity sensor and
    thermistor to measure the surrounding air and transmits the digital signal on
    a data pin. One main disadvantage of this sensor is that the new data gets transmitted
    only once every 2 s. The temperature and humidity sensor used here works in the
    power range of 3–5 V and has maximum Input and Output current of 2.5 mA. The water
    flow sensor consists of parts such as a water rotor, valve body made out of plastic
    and a hall effect sensor. It works when the water flows through the rotor and
    the rotor rolls. The Hall Effect sensor further generates a consequent output
    based on the rotor rotation. This sensor was connected at the outlet-valve of
    the pump to measure the actual water applied to the plants each day. This sensor
    has a minimum dc working voltage of 4.5 V and a maximum working current of 15
    mA. It has a DC working voltage of 5–24 V. Soil Moisture sensor is used to sense
    the moisture content in the soil at a particular place. It gives out the analog
    signal which is connected to the ADC of the XBee [9]. Their range ranges from
    0 to 45% if volumetric water content in soil and has an accuracy of ±4% and power
    rating of 3 mA and 5 V DC supply. A relay circuit plays a crucial role in the
    hardware setup at the base station. A relay switch is used in this setup and the
    it has a coil which is driven by an NPN transistor switch. This switch acts in
    the cut-off region when base voltage of the transistor is zero. In such a condition
    no collector current flows into the base and no current flows through the relay
    coil too. Remote Sensor Node plays an important role in the whole system. This
    device is used to sense the soil moisture in the field and send the data to the
    base station. These are low power consuming unit with solar power and rechargeable
    Lithium ion battery for usage at time of inadequate solar radiation. These features
    include a programmable Charge Current Up to 1000 mA/Pre-set 4.2 V Charge Voltage
    with 1.5% Accuracy. A Raspberry pi is used as here which has a quad core ARMv8
    processor with 1.2 GHz clock speed. This is preferred for systems which require
    multitasking with high [10] speed and memory, for processing and storing the data
    obtained from remote sensor nodes. The programming language used in raspberry
    pi is Python. Python is versatile and provides multi-threading, hence two or more
    programs can run at same time using CPU time sharing. Both the equations are run
    through python and the results are noted (Figs. 3 and 4). Fig. 3 Overall block
    diagram of system Full size image Fig. 4 Overall setup of the system Full size
    image 7 Working The working of the system all starts with the deployment of remote
    sensor node in the field near to the tomato plant root at 20 mm safe distance.
    It reads the soil moisture content for every pre-set time interval and sends it
    to the base station, where the packets of data received by the co-coordinator
    XBee are decrypted and data is obtained. The obtained values are Remote Node Battery
    Voltage and soil moisture with the node address. Upon receiving this, base station
    senses the environment temperature and Humidity and then logs the data into a
    CSV file and at the same time to the cloud server. The data upon reaching a certain
    count are then imported into a new program and the required parameters are calculated
    for finding the ETc required for the tomato plant. The calculations and crop parameters
    are given in Table 1. Then the water required is calculated and the pump is turned
    ON, post this operation the water flow from the laterals are continuously monitored
    using water flow sensor, and upon reaching the calculated amount of water needed
    the pump will be turned OFF. All these process details are updated to the server,
    upon which a user can view in their personal devices in the form of a webpage.
    The volumetric analysis performed allows an average of 9.1(L)/day of water for
    the tomato crop on a daily basis. The calculations are achieved by applying the
    formulas below [11]. $$ {\\text{ETo}} = C_{H} \\left( {T_{ {\\max} } - T_{ {\\min}
    } } \\right)^{\\text{Eh}} \\left( {{\\text{T}}_{\\rm mean} + 17.8} \\right){\\text{Ra}}
    $$ (4) Final Volume $$ v = \\left( {{\\text{Kc}}} {{\\text{ETo}}} - {\\text{rm}}
    \\right)(1 \\div 1 - {\\text{Lf}}(1 - {\\text{LR}}) \\div {\\text{Lf}}(1 - {\\text{LR}})
    $$ (5) where rm: The average monthly rain volume (mm) Lf: Leaching efficiency
    coefficient as a function of the irrigation water applied LR: Leaching fraction
    given by the Humidity that remains in the soil $$ {\\text{LR}} = {\\text{ECw}}
    \\div (5{\\text{ECe}} - {\\text{ECw}}) $$ (6) ECw: the electrical conductivity
    of the irrigation water \\( ({\\text{ds }} . {\\text{ m}}^{( - 1)} ) \\) and ECe:
    the crop salt tolerance \\( ({\\text{ds }} . {\\text{ m}}^{( - 1)} ) \\). 7.1
    Database Server A data base server is generally a computer program which is tasked
    with providing database services for other computer programs and computers. Several
    DBMS softwares provide database-server functionality and some exclusively rely
    on a client-server model in order to access the database (Fig. 5). Fig. 5 Flowchart
    representing the working of the system Full size image 7.2 Cloud Computing Cloud
    computing is a recently developed type of computing which is based on the concept
    of sharing computer re sources rather than having other network related hardware
    to handle applications. Cloud computing is offered by various companies either
    as open source or a licensed version, for example IBM’s Blue Cloud. Cloud computing
    is used in this setup to make the data acquired by the local base station accessible
    for anyone anywhere (Fig. 6). Fig. 6 Cloud connected system Full size image 8
    Results and Discussion Results shown in the below figures are plotted from the
    data obtained or stored in the database after testing it for 24 h. Figure 7 shows
    the temperature variation for a day. Figure 8 Humidity variation for a day and
    Fig. 9. Soil Moisture variation for a day. Fig. 7 Temperature variation for a
    day Full size image Fig. 8 Humidity variation for a day Full size image Fig. 9
    Soil moisture variation for a day Full size image 9 Conclusion In this work Information
    and Communication Technologies (ICT) are used extensively. The foremost concern
    in the Indian Agricultural sector is the lack of efficient irrigation techniques.
    Drip irrigation to a certain extent solves this issue. By considering cum monitoring
    environmental parameters such as temperature, relative humidity, sunshine hours,
    the water required can be calculated. This enables us to efficiently use the natural
    resources available to us ensures that a high yield is achieved. The work done
    here highlights the need for a Multi-layer Perceptron (MLP) enables irrigation
    network. The most relevant input variables for predicting the evapotranspiration
    are found to be Minimum Temperature, Maximum Temperature, and Minimum Humidity,
    Maximum Humidity, Wind Speed and Sunshine hours. The Penman and Hargreaves equation
    are used to calculate the Evapotranspiration rates and these models are run in
    a python program which is fed into the Raspberry pi. The Raspberry pi acts as
    an interface between the soil and the computations involved. It is found that
    wind speed has minimum effect on evapotranspiration prediction. From the trained
    models for P-M and Hargreaves equation, Hargreaves equation was more accurate.
    For Karunya data, Hargreaves equations the root mean square error (RMSE) and Mean
    square error (MSE) obtained were 6 and 2.5%, showing, high accuracy for MLP which
    utilizes the most relevant input variables. The developed MLP model can be used
    for prediction of evapotranspiration rates for particular location depending on
    the environmental factors. Also, the hardware model was tested in the real time
    under an experimental setup in university premises. Thus, in conclusion, the proposed
    ANN technique increases the irrigation efficiency, which ultimately results in
    reducing the labor cost thus saving water and electricity. References Pandey,
    P.K., Dabral, P.P., Pandey, V.: Evaluation of reference evapotranspiration methods
    for the northeastern region of India. Elsevier J. Int. Soil Water Conservation
    Res. 4, 52–63 (2016) Google Scholar   Shamshirband, S., Amirmojahedi, M., Goci,
    M., Akib, S., Petkovi, D., Piri, J., Trajkovic, S.: Estimation of reference evapotranspiration
    using neural networks and cuckoo search algorithm. Elsevier, J. Irrigation Drainage
    Eng. (2015) Google Scholar   Allen, R.G., Pereira, L.S. Raes, D., Smith, M., et
    al.: Crop evapotranspiration-guidelines for computing crop water requirements-FAO
    irrigation and drainage paper 56, vol. 300. FAO, Rome (1998) Google Scholar   www.rasberrypi.org
    Hargreaves, G.H., Samani, Z.A.: Reference crop evapotranspiration from temperature.
    Applied Engineering in Agriculture, American Society of Agricultural and Biological
    Engineers (1985) Google Scholar   Kim, S., Hung, S.K.: Neural networks and genetic
    algorithm approach for nonlinear evaporation and evapotranspiration modeling.
    J. Hydrol. 351, 299–317 (2008) Google Scholar   Antonopoulos, V.Z., Antonopoulos,
    A.V.: Daily reference evapotranspiration estimates by artificial neural networks
    technique and empirical equations using limited input climate variables. Elsevier
    J. Comput. Electron. Agric. 132, 86–96 (2017) Google Scholar   Huo, Z., Feng,
    S., Kang, S., Dai, X.: Artificial neural network models for reference evapotranspiration
    in an arid area of northwest China. Elsevier, J. Arid Env. (2012) Google Scholar   Gutiérrez,
    J., Villa-Medina, J.F. Nieto-Garibay, A., Porta, M.: Automated irrigation system
    using a wireless sensor network and GPRS module. IEEE Transactions on Instrumentation
    and Measurement (2014) Google Scholar   Cobaner, M.: Evapotranspiration estimation
    by two different neuro-fuzzy inference systems. Elsevier J. Hydrol. 398, 292–302
    (2011) Google Scholar   Yahyaoui, I., Tadeo, F., Segatto, M.V.: Energy and water
    management for drip-irrigation of tomatoes in a semi-arid district. Elsevier,
    Agric. Water Manage (2017) Google Scholar   Download references Author information
    Authors and Affiliations Department of Electrical Sciences, Karunya Institute
    of Technology and Sciences, Coimbatore, 641114, Tamil Nadu, India M. S. P. Subathra,
    Chinta Joyson Blessing, S. Thomas George, Abel Thomas & A. Dhibak Raj Faculty
    of Computer Sciences and Technology, Karunya Institute of Technology and Sciences,
    Coimbatore, 641114, Tamil Nadu, India Vinodh Ewards Corresponding author Correspondence
    to M. S. P. Subathra . Editor information Editors and Affiliations Department
    of Computer Sciences Technology, Karunya Institute of Technology & Sciences, Coimbatore,
    Tamil Nadu, India J. Dinesh Peter Department of Civil and Environmental Engineering,
    University of Missouri, Columbia, MO, USA Amir H. Alavi School of Computing, Engineering
    and Mathematics, University of Western Sydney, Sydney, NSW, Australia Bahman Javadi
    Rights and permissions Reprints and permissions Copyright information © 2019 Springer
    Nature Singapore Pte Ltd. About this paper Cite this paper Subathra, M.S.P., Blessing,
    C.J., Thomas George, S., Thomas, A., Dhibak Raj, A., Ewards, V. (2019). Automated
    Intelligent Wireless Drip Irrigation Using ANN Techniques. In: Peter, J., Alavi,
    A., Javadi, B. (eds) Advances in Big Data and Cloud Computing. Advances in Intelligent
    Systems and Computing, vol 750. Springer, Singapore. https://doi.org/10.1007/978-981-13-1882-5_49
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-13-1882-5_49
    Published 12 December 2018 Publisher Name Springer, Singapore Print ISBN 978-981-13-1881-8
    Online ISBN 978-981-13-1882-5 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the
    following link with will be able to read this content: Get shareable link Provided
    by the Springer Nature SharedIt content-sharing initiative Publish with us Policies
    and ethics Sections Figures References Abstract Introduction Drip Irrigation Evapotranspiration
    Artificial Neural Network (ANN) Study Area and Data Hardware Block Diagram Working
    Results and Discussion Conclusion References Author information Editor information
    Rights and permissions Copyright information About this paper Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Advances in Intelligent Systems and Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Automated Intelligent Wireless Drip Irrigation Using ANN Techniques
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Gulati A.
  - Thakur S.
  citation_count: '18'
  description: Automation in agriculture system is very important these days. This
    paper proposes an automated system for irrigating the fields. ESP-8266 WIFI module
    chip is used to connect the system to the internet. Various types of sensors are
    used to check the content of moisture in the soil, and the water is supplied to
    the soil through the motor pump. IOT is used to inform the farmers of the supply
    of water to the soil through an android application. Every time water is given
    to the soil, the farmer will get to know about that.
  doi: 10.1109/CONFLUENCE.2018.8442928
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2018 8th International Confer...
    Smart Irrigation Using Internet of Things Publisher: IEEE Cite This PDF Anubhav
    Gulati; Sanjeev Thakur All Authors 13 Cites in Papers 490 Full Text Views Abstract
    Document Sections I. Introduction II. Literature Review III. Proposed Methadology
    Sensors IV. Conclusion Authors Figures References Citations Keywords Metrics Abstract:
    Automation in agriculture system is very important these days. This paper proposes
    an automated system for irrigating the fields. ESP-8266 WIFI module chip is used
    to connect the system to the internet. Various types of sensors are used to check
    the content of moisture in the soil, and the water is supplied to the soil through
    the motor pump. IOT is used to inform the farmers of the supply of water to the
    soil through an android application. Every time water is given to the soil, the
    farmer will get to know about that. Published in: 2018 8th International Conference
    on Cloud Computing, Data Science & Engineering (Confluence) Date of Conference:
    11-12 January 2018 Date Added to IEEE Xplore: 23 August 2018 ISBN Information:
    DOI: 10.1109/CONFLUENCE.2018.8442928 Publisher: IEEE Conference Location: Noida,
    India SECTION I. Introduction India is a country of agriculture and farmers. Around
    70% of the total population rely on agriculture for their sustenance. And as the
    population of the country is increasing, the total cultivation has to be increased.
    As the total cultivation will increase, the total amount of water usage will also
    increase. Currently agriculture accounts for 83 % of the total usage of the water
    in the country. So, some system has to be found to reduce the wastage of water
    and reduce the pressure on the farmers. Irrigation is the most important part
    of agriculture. There are two things that are need to be kept in mind while doing
    agriculture, to acquire information about the soil fertility and to measure content
    of moisture in soil. This paper proposes not only to measure the soil content
    in the soil, but also to provide the required water to the soil automatically,
    when the moisture content is below the threshold value. Figure 1 shows the basic
    architecture of IOT. IOT is the big revolution for the next generation. It plays
    a very vital role in every field. A network which enables various physical devices,
    vehicles, home appliances or various electronic items embedded with software,
    sensors, actuators, to connect and exchange data is referred to as Internet of
    Things (IOT). Remote sensing and controlling of objects in an existing infrastructure
    is done with the help of IOT. With the help of this, more opportunities are created
    for integrating the physical world directly, into the computer based systems which
    results in increase in the efficiency, accuracy and economic benefits. IOT strengthens
    with the use of sensors and actuators, and these sensors help in connecting the
    physical systems remotely. It includes technologies like, smart grid, smart homes,
    intelligent transportation and smart cities. IOT can be referred as an architecture
    that consists of specialized hardware boards, Software systems, web APIs, protocols
    with the help of which an ideal environment is created, and smart embedded devices
    can be connected to the internet and can be controlled remotely. Figure 1: Basic
    architecture of IoT Show All SECTION II. Literature Review In [1] Li Da Xu et
    al., have mainly discussed about IOT and its current researches, its key enabling
    techniques. It throws light on major IOT application in the industry, and various
    research trend and challenges are identified. In [2] Zhao Liqiang et al, has worked
    on wireless field monitoring using IOT. There is an image sensing node which takes
    the images of the crops and various parameters such as temperature, humidity,
    are used for conclusion. Low power consumption and stable running with high precision
    environment makes it a very good option for crop monitoring. In [3] Keerthi.v
    et al, discussed about greenhouse monitoring system based on iot. A number of
    parameters are monitored effectively with the help of various sensors such as
    temperature, light, relative humidity, and soil moisture. In very 30 secs, the
    coordinator node collects he information from the crop and is stored on cloud.
    This helps the user to check the details anytime. In [4] Joaquin Gutiérrez has
    developed a smart irrigation sensor. In this paper, designing and implementation
    of an automated irrigation is used in the crop field. In this process, digital
    images of the nearby soil and the root of the crop are captured, with the help
    of a smartphone. This helps in optically estimating the water content. In [5]
    Nikesh Gondchawar et al, discussed about IOT based smart agricultural system.
    In this project, a GPS based robot is used. A smart irrigation with smart control
    and intelligent decision making and smart warehouse management system is presented
    in this paper. In [6] Baltej Kaur et al, has developed a drip irrigation system.
    It is a completely automated system which helps in reducing the human effort by
    remotely controlling the drip irrigation using an android mobile application.
    The irrigation system is controlled based on the values from the different sensors
    deployed in the field to monitor the environmental conditions. In [7] Indu Gautam
    and S.R.N Reddyet al, has worked on a GSM/Bluetooth technology which has been
    implemented in an embedded system which can be controlled remotely. By collecting
    data from the sensors like temperature and humidity, the system sets the irrigation
    time and irrigate the crop field automatically. Table 1: Components required SECTION
    III. Proposed Methadology In this paper, a conceptual model for smart irrigation
    has been proposed. Table 1 tells about the components required in this model.
    The basic proposed system consists of irrigating the field automatically with
    the help of soil sensors. Figure 2 depicts the flow chart for the proposed system.
    Figure 2: Flow chart for the proposed system Show All So, the process will be
    done in steps: Initially, the content of moisture in the soil is checked with
    the soil sensor which has been placed in the agricultural field. If the humidity
    content is not less than the threshold value, then the system will go back to
    the initial state. If the humidity value is lower than the threshold value, then
    the water motor is started and water is given to the soil. If the humidity value
    is more than or equal to the threshold value, then the water pump is stopped,
    and if its not then, the system will go back to the previous stage. This basic
    model can be a little modified with some changes. The modified model will have
    3 soil moisture sensors instead of only one. These three sensors will be interconnected
    and will be put into the soil at three different levels. When the top sensor detects
    the moisture, water will not be given to the soil. If the top sensor won''t detect
    the moisture but the second sensor detects moisture, then the system will be off.
    If both the top and the middle sensor will not detect moisture, the system will
    go on, and water will be given to the soil, even if the last sensor detects some
    moisture. Whenever the soil will be given water by the motor pump, a notification
    will be sent to the android application with the help of the WIFI module chip
    ESP8266, which helps the user to know about the status of the irrigation. In this
    project, an Arduino uno board is used on which all the components, like the WIFI
    module, the dc motor pump, led indicator will be attached and the required commands
    will be coded and will be sent to the ESP 8266 wifi module. Another advanced system
    of automated irrigation can also be used. In this proposed system, various other
    parameters such as soil temperature, soil moisture, relative humidity, air temperature
    are also considered for irrigation of the field. In this system, two sensor nodes
    are placed in the soil. The placement of the sensor nodes in the soil is very
    important, as on this only, the irrigation of the soil is dependent. For the sensor
    nodes to work best, they should be placed where they are easily accessible and
    are away from the edges. Also, damaged plants or crops will require less water
    than healthy plants. So, the sensor nodes should not be placed near damaged plants.
    There can be various types of soil in a field, having different water holding
    capacities. Some soil may have great water holding capacity, but some have very
    low capacity. The sensor nodes should be placed in low holding capacity soils,
    so that these soils never have water stress, and the field is irrigated frequently,
    but in smaller amounts. Another important thing that is very important for irrigation
    is the deepness of the sensor nodes. Ideally, the sensor should be placed where
    all the active roots of the plant or the crop are. Majorly, all the active roots
    are near the surface of the soil, where there can be depletion of water too due
    to evaporation and transpiration of plants. So, this soil sees the most dryness
    and wetness cycles. From this soil, the sensors can help the user to know when
    to irrigate the soil. And, the sensors located deep in soil helps with the knowledge
    of water depletion and lets the user know how much to irrigate. So, in this system,
    two sensor nodes are located according to the soil, and programming is done such
    that the soil parameters are sent to the node which acts as the coordinator node
    every minute using wireless communication protocol. There is a transceiver and
    database in the coordinate node, which is responsible for collecting the data
    from the sensor continuously, and storing it in the MYSQL database. The data cannot
    be simultaneously transmitted by two sensor nodes because there is a collision
    detection mechanism. The data is read from the database then, and is matched with
    the threshold values. The moisture present in the soil is captured after combinations
    of various other parameters present such as temperature, humidity etc. If the
    moisture value will be less than the threshold value, then the buzzer will go
    on and LED light will start blinking. And as soon as the water will be flown to
    the soil, a notification will be sent to the famer through an android application.
    All the data of the soil captured from various sensors will be stored on the cloud
    server and the user can view them anytime from anywhere. Another very important
    concept of irrigation is Evapotranspiration. It is the sum of the evaporation
    and transpiration from the crops or the plants. Control is evapotranspiration
    is huge requirement because it helps in saving approx. 47% of the amount of water
    used in irrigation of the fields. In this concept, the evapotranspiration controllers
    schedule the irrigation according to the weather data such as wind speed, air
    temperature, solar radiation and relative humidity. Other various parameters that
    are required are root depth, soil type, irrigation efficiency. Table 2: Threshold
    values of various crops [11] The controller can use the weather data from the
    weather station remotely or use the long term climatic data or use the on-site
    weather measurements. Thus, optimum irrigation can be obtained through simple
    water balance concept with the help of ET water scheduling. Table 2 shows the
    water requirements of various crops in India. These values represented in millimeter
    tells about the total water requirement of the crop in its whole production. These
    values can be used as the threshold values while irrigating the fields. The value
    of the moisture sensor is set according to these values so that the water requirements
    are met properly. Sensors A. Soil Moisture Sensor Figure 3 depicts a soil mositure
    sensor. It has a detection probe and a sesnor board. It has three output modes
    i.e. serial, analog, and digital. The amount of water present in the soil, i.e.
    the moisture content will be detected by the sensor. Low water content gives high
    output value, otherwise a neutral value is returned. There are two probes in the
    moisture sensor which are used to first pass the current in the soil, and then
    read the resistance between the two probes in order to get the moisture content.
    Greater the water content, easier will be the conduction of electricity and lower
    will be the resistance, whereas dry soil with less water content will conduct
    the electricity poorly, and therefore more resistance. Figure 3: Soil moisture
    sensor Show All Figure 4: Temperature sensor Show All B. Temperature Sensor Figure
    4 shows the temperature sensor. This sensor is mostly preferred because of its
    output voltage and is linear with Celsius scaling temperature. It has a maximum
    output of 5V and a wide operating range. There are three terminals in this sensor.
    It is a user friendly sensor as it consumes minimum amount of electricity and
    is energy efficient. SECTION IV. Conclusion With the technologies of IOT, agriculture
    can be made more efficient and more accurate. Water is the most important thing
    a person needs and is very important for agriculture. Water wastage due to poor
    irrigation system, or in efficient methods will cost us a lot in the future. The
    proposed system automates the whole process of irrigation, which is a huge time-consuming
    process. Thus saving, time money and water wastage too. From this project it can
    be concluded that there can be huge development in agriculture with the help of
    IOT platform. Thus, it can be said that this system is a potential solution of
    the problems faced by the farmers in manual execution of the irrigation process
    and thus utilizing the water resources to their best. Authors Figures References
    Citations Keywords Metrics More Like This Arduino-based smart irrigation using
    water flow sensor, soil moisture sensor, temperature sensor and ESP8266 WiFi module
    2016 IEEE Region 10 Humanitarian Technology Conference (R10-HTC) Published: 2016
    IoT-Dependent Intelligent Irrigation System with ML-Dependent Soil Moisture Prediction
    2023 3rd International Conference on Technological Advancements in Computational
    Sciences (ICTACS) Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the 8th International Conference Confluence 2018 on Cloud
    Computing, Data Science and Engineering, Confluence 2018
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart Irrigation Using Internet of Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dutta R.
  - Mueller H.
  - Liang D.
  citation_count: '5'
  description: According to wiki definition, there are four design principles in Industry
    4.0. These principles support companies in identifying and implementing Industry
    4.0 scenarios, namely, Interoperability, Information transparency, Technical assistance,
    Decentralized decisions. In this paper we have discussed our work on an implementation
    of a machine learning based interactive architecture for industrial scale prediction
    for dynamic distribution of water resources across the continent, keeping the
    four corners of Industry 4.0 in place. We report the possibility of producing
    most probable high resolution estimation regarding the water balance in any region
    within Australia by implementation of an intelligent system that can integrate
    spatial-temporal data from various independent sensors and models, with the ground
    truth data produced by 250 practitioners from the irrigation industry across Australia.
    This architectural implementation on a cloud computing platform linked with a
    freely distributed mobile application, allowing interactive ground truthing of
    a machine learning model on a continental scale, shows accuracy of 90% with 85%
    sensitivity of correct surface soil moisture estimation with end users at its
    complete control. Along with high level of information transparency and interoperability,
    providing on-demand technical supports and motivating users by allowing them to
    customize and control their own local predictive models, show the successfulness
    of principles in Industry 4.0 in real environmental issues in the future adaptation
    in various industries starting from resource management to modern generation soft
    robotics.
  doi: 10.1109/SYSCON.2018.8369547
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2018 Annual IEEE Internationa...
    An interactive architecture for industrial scale prediction: Industry 4.0 adaptation
    of machine learning Publisher: IEEE Cite This PDF Ritaban Dutta; Heiko Mueller;
    Daniel Liang All Authors 3 Cites in Papers 532 Full Text Views Abstract Document
    Sections I. Motivation II. Interactive Platform: I-EKbase III. Interactive Ground
    Truthing IV. Unsupervised Knowledge Representation V. Predictive Analytics Experiments
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    According to wiki definition, there are four design principles in Industry 4.0.
    These principles support companies in identifying and implementing Industry 4.0
    scenarios, namely, Interoperability, Information transparency, Technical assistance,
    Decentralized decisions. In this paper we have discussed our work on an implementation
    of a machine learning based interactive architecture for industrial scale prediction
    for dynamic distribution of water resources across the continent, keeping the
    four corners of Industry 4.0 in place. We report the possibility of producing
    most probable high resolution estimation regarding the water balance in any region
    within Australia by implementation of an intelligent system that can integrate
    spatial-temporal data from various independent sensors and models, with the ground
    truth data produced by 250 practitioners from the irrigation industry across Australia.
    This architectural implementation on a cloud computing platform linked with a
    freely distributed mobile application, allowing interactive ground truthing of
    a machine learning model on a continental scale, shows accuracy of 90% with 85%
    sensitivity of correct surface soil moisture estimation with end users at its
    complete control. Along with high level of information transparency and interoperability,
    providing on-demand technical supports and motivating users by allowing them to
    customize and control their own local predictive models, show the successfulness
    of principles in Industry 4.0 in real environmental issues in the future adaptation
    in various industries starting from resource management to modern generation soft
    robotics. Published in: 2018 Annual IEEE International Systems Conference (SysCon)
    Date of Conference: 23-26 April 2018 Date Added to IEEE Xplore: 31 May 2018 ISBN
    Information: Electronic ISSN: 2472-9647 DOI: 10.1109/SYSCON.2018.8369547 Publisher:
    IEEE Conference Location: Vancouver, BC, Canada SECTION I. Motivation Australia
    has an uneven distribution of water resources across the continent. There is a
    relative abundance in the north where few people resides whereas in the densely
    populated southern regions water scarcity has been a long-lasting issue for the
    past decades, especially in the agricultural sector where irrigation is the lifeline
    of the industry. This paper proposes and investigates a novel approach of using
    data-driven machine learning based interactive architecture to overcome the drawbacks
    of conventional water balance modelling approaches due to the fact that the spatial
    and temporal resolution are limited as well as relying highly on condition-specified
    field experiments as a control group. Machine learning based approaches always
    require ground truthing to achieve a desirable predictive model and prediction
    accuracy, bringing significant limitations in industry scale adaptation. It requires
    continuous human intervention and interaction. Convention of Industry 4.0 Workgroups,
    namely, WG2, WG3, and WG4, tell us the principal expectation and motivation behind
    an adaptation of Industry 4.0 in The Real Environment, The Economic Environment
    and Human Beings and Work; whereas cyber-physical systems, the Internet of things,
    cloud computing, predictive analytics and cognitive computing are at core. We
    aim to expand the adaptation of Industry 4.0 standards from the world of manufacturing
    to a broad range of complex predictive decision making problems, by introducing
    an architecture that allows users to interact directly with ground truthing of
    predictive models to improve accuracy in a standardized manner [1]–[4]. SECTION
    II. Interactive Platform: I-EKbase Intelligent Environmental Knowledgebase (i-ekbase)
    is an autonomous Big Data Analytics Engine running a CLOUD system. i-ekbase is
    an easy to use fully automated geographic information system (GIS), primarily
    focussing on precision agricultural and biodiversity monitoring applications,
    automatically integrating data from various satellites with local weather data,
    farmers'' knowledge and applying Machine Learning techniques to create a Data
    Driven Future for global Agriculture. i-ekbase is regularising satellite remote
    sensing for all purpose precision agricultural monitoring on a mobile device,
    for greater benefit to global Agri-community and to increase Agri-business profitability.
    i-ekbase services provide weekly/daily large area wise resource management map
    products, including normalised vegetation index (NDVI), soil moisture, biomass,
    surface temperature, vegetation landscape maps for supporting remote digital scouting,
    large area wise farm monitoring and decision support system and rapid intervention
    of a management issue. Fig. 1. Snapshot of the i-EKbase visual interactive system
    based on big data integration over large farming areas. Show All Fig. 2. Snapshot
    of the i-EKbase visual mobile application based interactive system based on industry
    4.0 concepts. Show All Initially heterogeneous data sources, namely, Bureau of
    Meteorology-Long Paddock (SILO), Australian Water Availability Project (AWAP),
    Australian Soil Resource Information System (ASRIS), Australian Cosmic Ray Soil
    Moisture Sensor Network (CosmOz), and Australian Digital Elevation (DED) databases
    were integrated along with NASA''s LANDSAT and European Space Agency''s Sentinel-satellite
    based data, to develop the regularized visual systems (base map products are being
    delivered to Cloud based Web and Mobile applications simultaneously) to start
    with the proposed interaction with the end users to create a truly Industry 4.0
    environment [3]. SECTION III. Interactive Ground Truthing We report the possibility
    of producing most probable high resolution estimation regarding the water balance
    in any region within Australia by implementation of an intelligent system that
    can integrate spatial-temporal data from various independent sensors and models,
    with the ground truth data produced by 250 practitioners from the irrigation industry
    across Australia. During the experimental period, participating farmers used i-ekbase
    mobile app to interact with their farm maps, took real measurement of biomass,
    NDVI, soil moisture and surface temperature, before drawing polygons on touch
    screen and entering values to create ground truth profiles on the cloud system.
    These profiles were used as primary integrated observed knowledge about the farm
    to create the probabilistic hot-spot map. Each pixel on the Google earth represents
    15m-resolution analytical outcome from the big data integration. Soil moisture,
    soil surface temperature, water consumption and NDVI values of each pixel were
    used to train a simple data driven model to train a supervised knowledge predictor.
    The refined threshold of these variables was modeled based on the ground truth
    collected and also by close consultation with farm manager. This predictive system
    was trained based on farm''s historical records and hyperspectral ground truth
    data as training targets. Fig. 3. User defined ground truthing via interactive
    architecture (called fieldnote), transfering the power of data to the users. Show
    All Ground Truth data profile created by the users were then stored and displayed
    instantaneously on all i-ekbase system for future reference, machine learning
    model adaptation and improvement of overall accuracy of the resource management
    maps. There was no other way to interact such a large number of real time users
    and adapt ground truth data, than through a cloud based efficient interactive
    architecture [4]. Fig. 4. System design was focused and justified as an industry
    4.0 adaptation, as this system continuously adapting the four pillars of industry
    4.0, interoperability, information transparency, technical assistance. Show All
    Fig. 5. Illustrates the recommended application flow, which can be simplified
    as a two stage process: Stage 1, Google maps overview of all available stations
    in australia as an overlay layer representation; stage 2, traffic light style
    indication of irrigation water balance status of the user-specified station. On
    the mobile app, the user is able to locate the point of interest on the google
    map and correct the status of environmental resource with actual physical sensor
    based reading and local knowledge, hence updating the predictive classification
    paradigm dynamically and interactively. Show All SECTION IV. Unsupervised Knowledge
    Representation Clustering algorithms based on Principal Component Analysis (PCA),
    Fuzzy-C-Means (FCM) were used to process integrated data. The objective of this
    analysis was to establish a list of least correlated attributes which were contributing
    towards the most data variance. In the PCA method each orthogonal (principal)
    vector accounts for a certain amount of variance in the data, with a decreasing
    degree of importance. FCM clustering provided partitioning results with additional
    information sup-plied by the cluster membership values indicating the degrees
    of belongingness, where ‘C’ was the total number of clusters. FCM was applied
    on the selected least correlated attributes from PCA to estimate the natural grouping
    of the data. Fig. 6. Representation of the knowledge recommendation layer. PCA-FCM-SOM
    based knowledge recommendations stored as RDF along with the existing RDF based
    i-EKbase. Show All World Wide Web Consortium (W3C) introduced a format called
    Resource description framework (RDF) which is now a standard model for machine
    readable data presentation. It decomposes data into the pieces (subject, object
    and predicate) and gives a uniform resource identifier (URI) for each resource
    or object. Through the URIs, it is possible to read the information about the
    particular resource on the web by using the HTTP access. The RDF has features
    that facilitate data integration even if the underlying schema differs, and it
    specially supports the evaluation of schemas over time without requiring the entire
    data consumer to be changed. This dynamic data analysis provided ranked attributes
    (according to their importance) which were effectively a valuable recommendation
    (Fig. 6) about the whole integrated data set for any future application design.
    PCA–FCM Clustering outputs and final membership function outputs were used to
    design and initialize the SOM. The SOM algorithm was developed by Kohonen to transform
    an incoming signal pattern of arbitrary dimension into a one or two-dimensional
    discrete map. Analyses carried out using Kohonen''s Artificial Neural Network
    (ANN) fall into the category of “unsupervised learning”, in which the relevant
    multivariate algorithms seek “clusters” in the data. PCA and FCM analysis were
    used to guide the SOM clustering in terms of initializing the weights. A SOM of
    [36 × 1] network size was created to capture the natural grouping [5]–[10]. SECTION
    V. Predictive Analytics Experiments An comparison study of various supervised
    machine learning methods (including Linear Regression, Bayesian Ridge Regression,
    Logistic Regression, Linear Discriminant Analysis (LDA), Adaptive neuro-Fuzzy
    Inference System (ANFIS), Multi-Layer Perceptron (MLP), and Radial basis Function
    network (RBFN)), that exploits the class labels of the samples to identify feature
    projections that potentially maximize class discrimination, was conducted to showcase
    some parametric evaluation of the i-EKbase system (Table 1). Supervised learning
    algorithms were trained and tested against the ground truth provided by the participating
    users, showcasing the possibility of Industry 4.0 Adaptation of Machine Learning.
    Table I. Predictive learners performance A conventional 10-fold cross-validation
    was performed using the 50% randomized holdout to have a better estimation of
    the classifier performance. Best result shows that from this particular data set
    up to 90% prediction accuracy is achievable with 85% specificity and 79% sensitivity.
    This was a combination of unsupervised feature selection and supervised classification
    to test the generalisation capability of the selected features from the actual
    environmental data set increasing dynamically every day on the cloud system [1]–[10].
    SECTION VI. Adaptation in Industry 4.0 Pivot Irrigation Sustainable pivot irrigation
    based cropping and water resource management in a catchment with very limited
    water, are heavily dependent on catchments water balance model. I-EKbase was applied
    for an expert agricultural decision support system related to the catchment water
    balance model. The purpose of applying SOM on the database was to provide visual
    recommendations about the soil moisture variability on paddock, by combining user
    provided ground truth data with environmental data, applying machine learning
    techniques for predictive solution on a large area with full interoperability
    and information transparency. In this was power, control and quality of the modelling
    and associated services were passed on to the end user in a very much decentralized
    manner, respecting the four pillars of Industry 4.0 [5]–[14]. Fig 7(a). A typical
    example of pivot irrigation with robotic water spraying pivot. Show All Fig. 7(b).
    Depicts a SOM layer showing neurons as gray-blue patches and their direct neighbor
    relations with red lines. The neighbor patches are colored from black to yellow
    to show how close each neuron''s weight vector is to its neighbors, while various
    machine learning techniques were applied on the industry 4.0 compliant i-EKbase
    platform. Show All Fig. 7(c). Final outcome of a preditive irrigation map of the
    pivot based on provided point based ground truth. This spatial variation provides
    optimized assistance to guide and control the water spraying to imporve efficiency
    of water management. Show All SECTION VII. Future Adaptation in Material Industry
    In future we aim to expand theme of Industry 4.0 adaptation of machine learning
    and the newly developed architectural framework in our other projects and completely
    different industries, especially in modern manufacturing and material optimization
    for soft-robotics. Newly discovered and experimented Shape memory polymers (SMPs)
    are increasingly being used for application solutions in automotive, aerospace,
    construction and commercial field. But being a nascent field there is little knowledge
    on the shape recovery behaviour of laminates with a SMP film and there are only
    methods reported in literature for quantifying the material behaviour. Through
    various experimental data gathering and analysis, influences of different variables
    that affect the recovery behaviour of thermoplastic shape memory polyurethanes
    based laminates including ambient temperature (45 °C and 65 °C), material modulus,
    and adhesive strength have been investigated to develop a physical model to formulate
    the recovery behaviour of the material. It has been identified that a fundamental
    optimization problem that needs to be solved is to maximize the final angle recovery
    ratios and recovery rates of a material to increase the overall efficiency of
    a targeted SMP material [15]–[18]. In this future study we aim to develop a state-of-the-art
    test rig facility to conduct various experiments on a targeted SMP and capture
    useful behavioural changes by collecting contributing variables. On the other
    hand we will employ digital imaging technology to capture visual recovery related
    footprint of the material''s recovery phenomenon as a ground truth of the desired
    behavioural aspect with full interoperability and information transparency to
    make it compliant with Industry 4.0 standards. In the modelling phase, various
    machine learning techniques will be tried and tested based on the experimental
    datasets to develop an optimized and predictive data driven model to emulate the
    SMP recovery behaviour. The novel model could be adapted for various SMPs and
    accurate predictability could help to discover a new class of decorative films
    capable of improved formability and shape recovery in polymer laminates. ACKNOWLEDGMENT
    The authors would like to acknowledge Commonwealth Scientific and Industrial Research
    Organisation, Australia for supporting of these research and case study projects.
    Authors Figures References Citations Keywords Metrics More Like This Package Proposal
    for Data Pre-Processing for Machine Learning Applied to Precision Irrigation 2023
    6th Conference on Cloud and Internet of Things (CIoT) Published: 2023 A Novel
    Methodology for Modeling Ground Water Changes in Irrigation using Machine Learning
    Techniques 2020 2nd International Conference on Innovative Mechanisms for Industry
    Applications (ICIMIA) Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 12th Annual IEEE International Systems Conference, SysCon 2018 - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'An interactive architecture for industrial scale prediction: Industry 4.0
    adaptation of machine learning'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Debauche O.
  - El Moulat M.
  - Mahmoudi S.
  - Manneback P.
  - Lebeau F.
  citation_count: '29'
  description: Irrigation, particularly pivot-center, is widely used around the world
    to fill the need of crop watering. This method of irrigation has a low efficiency
    compared to other methods of irrigation such as drip systems and generally they
    use water without consider the real need of plants. In this paper we propose an
    automation system based on the Internet of Things (IoT), Geographic Information
    System (GIS) and quasi real-time in the cloud of water requirements to improve
    the efficiency of water use. Indeed, each segment of the pivot-center moves at
    a different speed compared to others; thus, must be individually controlled to
    optimize the yield of irrigation. Moreover, it necessary to integrate factors
    such as stage of crops' development, heterogeneity of soil, runoff, drainage,
    soil components, nutrients and moisture content. In this paper we develop a complete
    system integrating sensors, GIS, Internet of Things and cloud computing. This
    approach allows to automate fine-grained the consumption of water without decreasing
    the yield. In addition to that, the collect of data and the soil moisture measurement
    will allow to adapt coefficient of evapotranspiration to local weather without
    having to resort to lysimetric measures. The proposed architecture allows to store
    and treat real-time, time series data and low-priority data such as 3D images
    used in digital phenotyping field which are treated with batch processing.
  doi: 10.1109/COMMNET.2018.8360259
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2018 International Conference...
    Irrigation pivot-center connected at low cost for the reduction of crop water
    requirements Publisher: IEEE Cite This PDF Olivier Debauche; Meryem El Moulat;
    Saïd Mahmoudi; Pierre Manneback; Frédéric Lebeau All Authors 21 Cites in Papers
    405 Full Text Views Abstract Document Sections I. Introduction II. Literature
    Review III. Calculation of Water Requirements IV. Material V. Proposed System
    and Archttecture Show Full Outline Authors Figures References Citations Keywords
    Metrics Footnotes Abstract: Irrigation, particularly pivot-center, is widely used
    around the world to fill the need of crop watering. This method of irrigation
    has a low efficiency compared to other methods of irrigation such as drip systems
    and generally they use water without consider the real need of plants. In this
    paper we propose an automation system based on the Internet of Things (IoT), Geographic
    Information System (GIS) and quasi real-time in the cloud of water requirements
    to improve the efficiency of water use. Indeed, each segment of the pivot-center
    moves at a different speed compared to others; thus, must be individually controlled
    to optimize the yield of irrigation. Moreover, it necessary to integrate factors
    such as stage of crops'' development, heterogeneity of soil, runoff, drainage,
    soil components, nutrients and moisture content. In this paper we develop a complete
    system integrating sensors, GIS, Internet of Things and cloud computing. This
    approach allows to automate fine-grained the consumption of water without decreasing
    the yield. In addition to that, the collect of data and the soil moisture measurement
    will allow to adapt coefficient of evapotranspiration to local weather without
    having to resort to lysimetric measures. The proposed architecture allows to store
    and treat real-time, time series data and low-priority data such as 3D images
    used in digital phenotyping field which are treated with batch processing. Published
    in: 2018 International Conference on Advanced Communication Technologies and Networking
    (CommNet) Date of Conference: 02-04 April 2018 Date Added to IEEE Xplore: 17 May
    2018 ISBN Information: DOI: 10.1109/COMMNET.2018.8360259 Publisher: IEEE Conference
    Location: Marrakech, Morocco SECTION I. Introduction The demand of food production
    and fiber increase with de world population. The irrigation management is important
    particularly in context where the fresh water resources are limited. The aim of
    the irrigation is to give to plants the adequate amount of water to ensure their
    water requirements. The use of Water Production Function (WPF) allows to estimate
    the production in terms of dry matter or marketable yield, evapotranspiration
    ore the amount of applied water during irrigation (IW). According to the different
    production functions of IW may also include different components in addition to
    Crop Water Requirement (CWR), such as pre-planting irrigation to prepare the seeding,
    leaching requirement to decrease the salinity, rise of water table by capillarity
    and rainfall. The estimation of water requirement is a stone corner which you
    can calculate the correct irrigation doses. Indeed, the water available for the
    crop is an indicator of the texture of soil, precipitations, previous irrigations,
    state of development of crop and the amount of water already present in the soil.
    Center-Pivot of irrigation are usually reserved to irrigate large areas from 3.5
    to 65 ha because of the costs; but, the nutrients, fertilizer, herbicide, insecticide
    and pesticide can be directly applied on the canopy of crop [1]. Center-Pivot
    irrigation systems require up to 40% less water application than traditional and
    conventional gravity (furrow) or surface irrigation methods, where a part of water
    is lost by percolation or runoff. But Center-pivot irrigation stays less effective
    than the drip systems that are the most economical in term of water. The main
    challenge is related to the exact estimation of both the evapotranspiration of
    the crop and how to bring the water (frequency and quantity). Traditional hand-feel
    soil measurement methods do not provide quantitative soil water and real-time
    data. The use of sensors in precision agriculture is becoming widespread, especially
    in irrigation and open the field of irrigation management in order to establish
    an optimal timing and amount of irrigation water for greatest effectiveness. Indeed,
    an optimal irrigation management avoid water deficiency and use too much water
    that reduces the potential for profitability of the crop. The supply of an optimal
    amount of water allows also to maximize the yield response to other management
    practices, optimize yield per unit of water applied, reduce the potential runoff,
    reduce soil erosion and pesticide movement into the surface and ground water [1].
    To optimize the yield and soil water in the crop, plants should not pass the wilting
    point. This means the minimum soil moisture required by a plant not to wilt. At
    this point, any decrease in soil moisture will result in wilting. When a plant
    wilts, its leaves dry out, droop, and wither. The coupling of the irrigation system
    with a soil moisture monitoring and an accurate evapotranspiration calculation
    has a significant advantage in term of water consumption. Precision agriculture
    (PA) uses the Internet of Things and allows real-time control measure and automation
    of pivot-center irrigation systems. Furthermore, Wireless Sensors Network (WSN)
    is affordable and the wide availability of Low Power Wide Area (LPWA) protocol
    such as LoRa, SigFox and Ingenu coupling with cloud IoT platforms pave the way
    of high precision and realtime irrigation management systems. In this paper, we
    combine agronomic and computer science expertise to propose a cloud IoT architecture
    and a network of sensors using LPWA to control, monitor and optimize the crop
    production at quasi real-time. The low-cost sensor network measure on one hand
    the weather data required to calculate potential evapotranspiration of the crop,
    and on other hand the soil moisture at different depths. The proposed architecture
    calculates water requirements of plants and actuate solenoids to open and close
    water individually each sprinkler. SECTION II. Literature Review The main challenges
    in the elaboration of an automated irrigation system for irrigation pivot-center
    are vital; on one hand to choose an adapted evaluation method of water requirements,
    and on other hand to identify a correct cloud IoT platform essential for data
    storage and treatment. The following paragraph focuses on these aspects and on
    reviewing existing works. A. Related Works Classical Water Production Functions
    (WPF) are useful tools for irrigation management and economic analysis of yield
    reduction due to deficit irrigation which is usually based on linear regression
    and don''t give a representation of nonlinear behaviors of complex ecological
    systems. To fix this issue recent research are investigated. We list the use of
    more robust and nonlinear techniques such as machine learning, Artificial Neural
    Network (ANN) and data-mining tools (e.g. Fortin et al in 2010 [2], Dai et al.
    in 2011 [3], Haghverdi et al. in 2014 [4] and Elnesr et al., in 2016 [5]). In
    this study we follow two different controls. The first model consists to control
    the speed of travelling of the central-pivot for a constant flow rate. The second
    uses an electronic control to adapt flow rate in the nozzles. The speed of travelling
    of the central-pivot is maintained constant. The variable rate irrigation (VRI)
    allows to save 9-19% of irrigation water and to address field-level spatio-temporal
    heterogeneity in terms of soil water holding capacity and depth of soil [6]. According
    to Pan et al in 2013 [7] VRI allows also to enhance water-use efficiency, improve
    productivity, reduce fuel consummation and reduce nutrient leaching. The choice
    of sprinkler package, the pressure of working, meteorological conditions and tower
    dynamics affect the irrigation water distribution pattern [8]. Moreover, variations
    in micro-meteorological and technical conditions can modify the water application
    depth and irrigation uniformity at different lateral positions with flow control
    nozzles or pressure regulators at each head [8]. Wind speed and direction don''t
    significantly modify the uniformity of water applicatIon but impact the absolute
    application depth of zones under VRI management [9]. To adapt flow of irrigation
    soils moisture measure must be done. Traditional soil moisture sensors need to
    be installed early in the growing season and must be removed before the harvesting.
    Dong et al in 2013 [1] has proposed a cyber-physical system based on underground
    sensors to monitor soil moisture but this approach do not monitor soil on only
    one depth [1]. The interest of the coupling of Geographic Information System (GIS)
    and Remote Sensing (RS) with Internet of Things (IoT) has been demonstrated by
    different authors such as Li et al. in 2012 [10] Ye et al. in 2013 [11] Wang et
    al., 2013 [12]. B. Estimations of Water Requirements The estimation of water requirements
    of crop (ETc) can be estimated from a simple soil water balance (SSWB) model.
    A general form of the soil water balance is done by the following equation: ETc=I+P+F+R+ΔS
    (1) View Source Where I is the irrigation dose [mm], P is the precipitation [mm],
    F is the net subsurface flow into the control volume [mm], R is net runoff or
    runon to the control volume surface [mm] and ΔS is the net change in soil water
    stored in the control volume [mm]. The potential evapotranspiration (PET) can
    be calculated by using different methods. A common one requires several weather
    data that are not all the time available. Among these methods, we mention Penman-Monteith
    [13] FAO56 PM) which ranked as the best method for estimating daily and monthly
    ET for all climates. Penman [14] (FAO24), Penman [15] (FAO-ppp-17), Kimberly-Penman
    [16], Hamon [17], Hargreaves [18], Haude [19], Penman [20], Penman-Monteith [21],
    Priestley-Taylor [22], Makkink [23], McCl [24], De Bruin-Keijman [25] (DK), Jensen-Haise
    [16], Blaney-Criddle [26] (BC), Blaney-Criddle [14] (FAO 24 BC), FAO 24 Radiation
    [14], Turc [27], Wendling [28], Valiantzas [29]. Nevertheless, modern technologies
    such as the use of Wireless Infrared Thermometers (IRT) appear to measure surface
    temperature and determine the ETc [30]. A comparison of 16 among the models mentioned
    above has been carried out by Liu et al. in 2017 [31] and have shown that FAO-ppp-17,
    Pen-63 and FAO-24 BC are the better results in semi-arid climate. Therefore, we
    notice that a poor calibration between all the aforementioned researchers lead
    to inconsistent results of existing studies on weighting lysimeter. Indeed, Jensen
    et al. report that FA024BC is better [32]. While Yoder et al. in 2005 [33] and
    Lépez-Urrea et al. in 2006 [34] find that FA056 PM is the better formula. Otherwise
    some authors such as Berengena et al. in 2005 [35], Howell et al. in 1998 [36]
    have proven that the adjustment of the Penman formula coefficients at local scale
    shows significantly performing results. To conclude, we assume that FA056 PM or
    FA024 BC can be tested as a first approach in the evaluation of the evapotranspiration
    and a precise evaluation can be obtained locally by adjusting the parameters of
    the original Penman equation. The local adjustment of coefficient of the Penman
    formula need the use of lysimeters and a long experimentation which is not always
    achievable out of research centres. The Maximal Evapotranspiration (MET) of a
    crop can be calculated at different vegetative stage when amount of water is sufficiently
    available and agronomic condition are optimal. The MET can be calculated by model
    but in real conditions, and the Real Evapotranspiration (RE) is inferior in amount
    calculated by model. By consequence, it''s important to measure accurately real
    evapotranspiration by mean of sensors to provide the necessary quantities of water
    and to avoid percolation losses related to excessive intake linked in particular
    to an overestimation of the actual evapotranspiration. C. Choice of Sensors Both
    approaches can be followed. The first one uses commercial sensing solutions which
    natively provide a wide range of features directly and allows researchers to focus
    on the developments of algorithms and meta-processing, etc. The second one uses
    open hardware solutions which are programmable and flexible allowing to developers
    to have the full control of the behaviors of the nodes [37] The first approach
    is particularly interesting to develop proof of concept but makes researchers
    dependent of one provider and the availability of sensors used for development.
    Moreover, the rapid turnover of product of high technology renders this science
    stream especially risked for long term developments. The second way although requiring
    further development is more sustainable and is generally supported by a large
    community of developers. The choice of sensors is crucial because nodes can move
    over time that causes considerable interferences in the communication between
    nodes. Moreover, the influence of temperature, humidity, rainfall, sandstorm and
    high solar radiation greatly affect the links and communication quality among
    the nodes, particularly in harsh environmental conditions. The high temperature
    encountered in semiarid environments affects significantly the received signal
    strength (RSS). The humidity linked to the irrigation system and the heavy rainfall
    intensely affects the propagation of radio waves. The choice of the wireless transceiver
    and the transmission protocol must take into account the number of nodes, the
    distances between them, the height of antenna and the operating frequency based
    on the desired size of payload [37]. D. Cloud IoT Platform The correct choice
    of the IoT Platform to build a solution can affect the overall success of the
    project [37]. Both explorable approaches acquire and manage the underlying hardware
    and software layers or use a commercial offering which provides all needed services
    to propose an integrative solution. A review proposed by Ray PP in 2016 compare
    the 26 most popular IoT cloud platforms based on the following parameters: deployment
    service, device management, system management, heterogeneity management, data
    management, tools for analysis, deployment, monitoring, visualization and research.
    According to Ray in 2016 [38], they should have at least 49 IoT cloud platforms
    present in the actual global market. Nowadays, any commercial or open source cloud
    platform allows to deploy, and hosts applications or models elaborated on different
    framework on the same cloud architecture. SECTION III. Calculation of Water Requirements
    The soil characterization has been achieved on basis of samples taken in situ
    by BNEDER (National Technical Studies Office for Rural Development) located at
    Alger (Algeria). 96 samples were taken following a systematic grid of 30 × 30
    m over the area covered by the pivot (one by layer of soil). The parameters evaluated
    were bulk density, texture and the soil water holding capacity. Then, parameters
    measured on each of the 32 sampling points for three layers of soil has been interpolated
    to obtain a high-resolution map. The software ArcMap 10.5.1 was used to interpolate
    data measured in order to generate a grid by layer of 5m × 5m (25m2 area per cell)
    for each kind of measure. Moreover, each layer of soil has also been interpolate
    using 3D spline method to obtain a 3D model of soil layer. This 3D model and the
    spatial interpolation of soil water holding capacity allows to calculate the plant
    available in function of the depth of rooting. As shown on Fig. 1. The first layer
    is a mix of one or more existing layers which have been homogenized from a textural
    point of view and the salt content by successive plowing on a height of 25 to
    30 cm. The water available for plant is also function of roots development which
    offers the possibility to explore a more and more large part of soil. The available
    water is obtained by a weighted mean of the depth of all layers explored by the
    root system at each stage of development. A day by day amount of water irrigation
    can be calculated from (1). Fig. 1 Different stages of crop development Show All
    The FAO Penman-Monteith method (2) is used to estimate the potential evapotranspiration
    (PET) and the evapo-transpiration of the crop (ETc), also named MET which takes
    into account the stage of vegetative growth of the crop by weighting the potential
    evapotranspiration by the coefficient Kc [13]. The Kc coefficient allows to modulate
    the PET in function of the crop envisaged and the stage of its stage of development.
    ETP= 0.408Δ( R n −G)+γ(900/T+273) U 2 ( e s − e a ) Δ+γ(1+0.34 U 2 ) (2) View
    Source Fig. 2 Cutting of irrigated perimeters in 6 zones and positioning of the
    soil moisture sensors Show All Where PET is the reference evapotranspiration [mm.day
    1], Rn is the net radiation at the crop surface [MJ.m2.day-l], G is the soil heat
    flux density [MJ.m-2.day-l], T is the mean daily air temperature at 2m height
    of soil [°C], U 2 is the wind speed at 2m height of soil [m.s-1], e s − e a is
    the saturation vapor pressure [kPa], Δ is the slope of the vapor pressure curve
    [kPa.°C-1], γ is the psychrometric constant [kPa.°C-1]. The evapotranspiration
    of the crop is calculated with (3). ETc= PET ∗ Kc (3) View Source Where ETc is
    the crop evapotranspiration [mm.day''], PET is the reference evapotranspiration
    [mm.day−1] and Kc is a ponderation coefficient variating between 0.3 to 1.2 depending
    of the crop stage of development [8], see Fig 1. SECTION IV. Material The application
    is tested on a pivot-center irrigation and a crop of soft wheat implanted in Ain
    Salah located in the heart of the Sahara Desert region in the center of Algeria.
    This region is characterized by a hot desert climate where the temperature in
    the summer reach 47 to 50°C. The irrigation pivot-center is composed of 6 spans
    with a total length of 308m. The revolution time of the pivot is 24h, it means
    that every hour an angle of 15° is traveled. As shown in the Fig. 2, the cover
    area is increasing from the center to the outside. The sensors must stay functional
    with important temperature variation from 20 to 65 degrees and remained functional
    also in presence of rate of humidity close to 80%. Fig. 3 The proposed system
    and architecture Show All SECTION V. Proposed System and Archttecture We have
    chosen to follow the open hardware way as part of our developments. The proposed
    system is composed locally of a weather station. Several multi-depth moisture
    sensors distributed on the irrigate area at the middle on each span measure the
    amount of water at different depths and solenoid placed on sprinkler. Data are
    transmitted by LoRa modulation to a gateway which relay data to The Things Network
    using a 4G connection. A cloud architecture collects, treats and stores data received
    from the weather station and soil moisture sensor, and calculates in real-time
    needs in irrigation water. A. Weather Station The weather data are acquired by
    a micro weather station which uses a LoRa transmission system. This low-cost protocol
    has been chosen for its easiness of deployment, its ability to resist interference
    with the spread spectrum technology and the area that can be covered by a single
    gateway. The micro weather station is based on a Weather Sensor (Argent Data Systems)
    which contains an anemometer, a vane direction and a pluviometer. The weather
    station contains a temperature / humidity sensor AM2315 (Aosong) with an error
    of 0.1°C for the temperature and 2% for the relative humidity. The net solar radiation
    is measured by a digital net radiometer SN-500, Apogee Instruments. All sensors
    are connected on a LoPy which collect data and send them on LoRa / 4G gateway
    (see Fig. 3). B. Sensors and Actuators Soil moisture nodes based on LoPy using
    soil moisture underground sensors measure the rate of humidity at different soil
    depths. The humidity is measured at different depth (20, 30 and 50 cm) with Watermark
    Soil Moisture Irrometer sensor model 200SS. The measure of humidity at different
    depth allow to control if amount of water calculate are correct or if they must
    be adjusted. As show on Fig. 2, the 24 sensors are implanted in the middle of
    each ring, the water requirements are controlled 8 times per day (one just before
    the irrigation and one hour just after the irrigation) on each of the four control
    lines of sensors. Solenoid valves are implanted on the sprinkler feed pipes and
    allows them to be operated individually and thus finely control the water supply.
    The fine control of the sprinklers allows to have a same amount of water per unit
    area at each of the 6 zones traveled at the level of each of the different segments
    each hour. C. Cloud Architecture We use our own architecture based on a Cloud
    IoT platform and a share/hosting application platform. This architecture has already
    been tested with cattle behavior [39], digital phenotyping [40] and monitoring
    of bee health [41]. Time-related Data are transmitted to the Cloud IoT platform
    by LPWA network while images, videos and sound are transmitted by Wi-Fi network,
    see Fig. 3. 1) The Cloud IoT Platform The platform is composed of two parts. The
    first one is based on one hand on Apache Kafka, Apache Samza, Druid, to treat
    stream and time-related data. The second one uses an Apache Hadoop, Apache Spark
    are associate to store and treat images, sound and video. a) Time Related-Data
    Data are received by Apache Kafka which transfer them to Apache Samza to be processed
    before the ingesting by Druid. Druid is a distributed column -oriented fault-tolerant
    data store presenting real-time analytical capabilities. The data processing allows
    to increase the speed of ingestion 10 times by elimination of bad formed package,
    inconsistent and incomplete data. Redis Caching accelerate the speed of recurrent
    queries. The data are stored in units of few millions of lines named ‘segments’
    composed of 5 to 10 million of times-stamped events compressed by LZ4. Old segments
    are locally stored on HDFS. Both external dependencies are used: PostgreSQL and
    ZooKeeper to respectively store meta data and monitor the four kinds of nodes
    present in the cluster. These four types of nodes coordinate, broke, store in
    real-time or archive data in the distributed data store. b) Sound, Images and
    Video These kinds of data are independently treated and stored by a second structure
    based on Hadoop and Apache Spark. These kinds of data are also locally stored
    on HDFS. This structure offers better performance than an Hadoop, MapReduce, HiPi.
    Camera placed on the pivot center can make 3D-pictures of same plant every day
    in order to model their development and compare the impact of agricultural practices
    and weather conditions on the growth of the crop. The analysis of sound allows
    to detect any dysfunction may occur of critical parts of pivot-center and program
    a preventive maintenance (PM) to avoid the immobilization of the pivot over a
    long period. But both features are not yet implemented. 2) The Application Sharing
    and Hosting Platform Druid powers high performances application with low query
    latencies. To better exploit this performance and don''t be dependent of one SDK,
    we propose a cloud architecture able to host application developed on principal
    framework. This cloud platform authorizes elaboration of the model by researchers
    and also host endpoint applications of third party adapted to different kinds
    of material allowing to monitor and automate the pivot-center irrigation while
    optimizing crop yields. SECTION VI. Results We compare water requirements calculated
    by the cloud architecture with the one calculated by CropWat [42] decision support
    tool. This tool is developed by the Land and Water Development Division for the
    calculation of crop water requirements and irrigation requirements based on soil,
    climate and crop data. The calculation procedure is described in [8], the response
    of different yield is explained in [43] and the coupling between CropWat and climatic
    data of ClimWat is explicated step by step in [44]. Remarkably values calculated
    by CropWat assume that only water can change and other factors such as agricultural
    practices, fertilization, etc. are at optimal level. Table 1 gives results obtained
    with CropWat 8.0 for a wheat with a planting date of 25 November at In Salah,
    Algeria and total development in 180 days. Water requirements are calculated on
    basis of real daily weather data. Table I. Water requirements calculated with
    cropwat The Fig. 4 shows the comparison between measured and calculated with CropWat
    Potential Evapotranspiration (ETP). Both approach gives similar results. SECTION
    VII. Conclusion and Future Works We have outlined an architecture based on soil
    characteristics interpolate by mean of GIS, soil moisture measured, and weather
    data transmitted by LoRaWan to calculate in quasi real-time the water requirements
    of the crop. The LoRaWan is particularly adapted to transmit data in harsh conditions.
    In the end, the comparison of first approach performed with CropWat has allowed
    to calculate maximal evapotranspiration and verify that these are never exceeded.
    Fig. 4 Comparison between CropWat and measured average daily ETP Show All In order
    to validate the water requirements calculated using the CropWat model, we compared
    them with a precise model called AquaCrop [45]. This model considers more parameters
    affecting the vegetative and reproductive growth of crop. The implementation of
    3D Camera in specific areas places on the pivot, will open a new research path
    in the field of digital phenotyping. In addition to this, the continuous analysis
    of sound from microphones implemented in chosen places will quickly detect signs
    of failure and prevent downtime that can be expensive in term of crop profitability.
    As future work, we plan to exploit GPU Tegra Mobile Processors 1 that offers high
    computation power thanks to the exploitation of GPU processors in parallel [46]
    [47]. In addition to the high performance, these cards provide the possibility
    to exploit artificial intelligence algorithms for a better training and prediction
    of collected data. ACKNOWLEDGMENT We would like to thank our colleagues from Biosystems
    Dynamics and Exchanges Axis, Biosystem Engineering Department, Gembloux Agro-Bio
    Tech (ULiégc) without whom this work would not have been possible. We would especially
    like to thank Mr Rudy Schartz and Mr Adriano Guttadauria for their technical support
    and for setting up all the electronic systems and computing systems necessary
    for carrying out this research. Authors Figures References Citations Keywords
    Metrics Footnotes More Like This Capacitance-Based Soil Moisture Sensor for Irrigation
    Scheduling Application 2018 3rd International Conference on Computer and Communication
    Systems (ICCCS) Published: 2018 Zirconia Coatings as Efficient Soil Moisture Sensors
    for Water Irrigation IEEE Sensors Journal Published: 2021 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 2018 International Conference on Advanced Communication Technologies
    and Networking, CommNet 2018
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Irrigation pivot-center connected at low cost for the reduction of crop water
    requirements
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mekala M.
  - Viswanathan P.
  citation_count: '70'
  description: Internet of Things (IoT) is one of the fastest developing technologies
    throughout the India. But, most of the population (70%) in India depending on
    agriculture. This situation is one of the reason, that hindering the development
    of country. in order to solve this problem only one solution that, smart agriculture
    by adding new technological methods instead of present traditional agriculture
    methods. Hence we proposed new IoT technology with cloud computing and Li-Fi.
    Wi-Fi is great for general wireless coverage within buildings, whereas Li-Fi[10]
    is wireless data coverage with high density in confined area. Li-Fi provides better
    bandwidth, efficiency, availability and security than Wi-Fi and has already achieved
    blisteringly high speed in the lab. First this project includes remote controlled
    process to perform tasks like spraying, weeding, bird and animal scaring, keeping
    vigilance, moisture sensing, etc. Secondly it includes smart warehouse management
    which includes temperature maintenance, humidity maintenance and theft detection
    in the warehouse. Thirdly, intelligent decision making based on accurate real
    time field data for smart irrigation with smart control. Controlling of all these
    operations will be through any remote smart device or computer connected to Internet
    and the operations will be performed by interfacing cameras, sensors, Li-Fi or
    ZigBee modules.
  doi: 10.1109/I-SMAC.2017.8058280
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2017 International Conference...
    A novel technology for smart agriculture based on IoT with cloud computing Publisher:
    IEEE Cite This PDF Mahammad Shareef Mekala; P. Viswanathan All Authors 54 Cites
    in Papers 2201 Full Text Views Abstract Document Sections I. Introduction(Heading
    1) II. Aricultural Monitoring System Based on Sensors III. Sensor-Based Agriculture
    Monitoring Systems in Developing Countries IV. Proposed Sensor-Based Agricultural
    Monitoring System V. Practical Results Show Full Outline Authors Figures References
    Citations Keywords Metrics Abstract: Internet of Things (IoT) is one of the fastest
    developing technologies throughout the India. But, most of the population (70%)
    in India depending on agriculture. This situation is one of the reason, that hindering
    the development of country. in order to solve this problem only one solution that,
    smart agriculture by adding new technological methods instead of present traditional
    agriculture methods. Hence we proposed new IoT technology with cloud computing
    and Li-Fi. Wi-Fi is great for general wireless coverage within buildings, whereas
    Li-Fi[10] is wireless data coverage with high density in confined area. Li-Fi
    provides better bandwidth, efficiency, availability and security than Wi-Fi and
    has already achieved blisteringly high speed in the lab. First this project includes
    remote controlled process to perform tasks like spraying, weeding, bird and animal
    scaring, keeping vigilance, moisture sensing, etc. Secondly it includes smart
    warehouse management which includes temperature maintenance, humidity maintenance
    and theft detection in the warehouse. Thirdly, intelligent decision making based
    on accurate real time field data for smart irrigation with smart control. Controlling
    of all these operations will be through any remote smart device or computer connected
    to Internet and the operations will be performed by interfacing cameras, sensors,
    Li-Fi or ZigBee modules. Published in: 2017 International Conference on I-SMAC
    (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC) Date of Conference: 10-11
    February 2017 Date Added to IEEE Xplore: 05 October 2017 ISBN Information: DOI:
    10.1109/I-SMAC.2017.8058280 Publisher: IEEE Conference Location: Palladam, India
    SECTION I. Introduction(Heading 1) All most all countries population is depending
    on agriculture by using water and land resources optimally. Still most of the
    countries depending on labor work and they do not use proper pest/disease control,
    crop management and quality management systems. Hence in addition to that, still
    in traditional agriculture they don''t use proper optimal uniform water distribution
    in field''s. Hence, a novel IoT [1] technology based agricultural monitoring system
    is greatly required for IT people, farmers in developing countries. It is predicted
    that 87% world''s using fresh water for irrigation and 33% of world''s population
    produced food uses irrigation at every year. Hence, per capita fresh water is
    declining. On the other hand, world global warming increases. Fig. 1. Sensor-based
    machine communication networks. Show All The above diagram shows Hundreds of energy,
    low cost and computational power wireless sensor nodes are mostly used as agricultural
    monitoring system. IoT[2] devices are included in M2M area networks since cameras;
    sensors can be deployed easily, monitored remotely and controlled automatically.
    26% of world population depends on irrigation for present food production. Soil
    nutrients and food production dependent on each other. Because, soil nutrients
    of agriculture fields are decreased than food production also decreased of the
    developing countries. Hence, a new technology based agricultural monitoring system
    is greatly required. Machine to machine (M2M) communication [2], [12] is a new
    g technological framework in which daily human life use machines such as micro-oven,
    refrigerator, laptop, cell phone, smart phone, tablet, electric meter can communicate
    with each other when they are included with internet network and send data to
    the cloud central server or cloud through agriculture area networks (e.g., Li-Fi,
    sensor, Bluetooth, RFID) and core networks (e.g., WiMAX, 3GPP, IP, Li-Fi, WLAN).
    Agriculture monitoring systems mainly focus on monitoring and controlling the
    growth of crops, irrigation systems, monitoring and control of animals disturbance.
    Fig. 2. Low level agriculture monitoring system Show All The IoT refers to the
    coverage area with networked interconnection of everyday tools, devices, objects,
    or computers. These things may be vary with respect to place and time and they
    may be large or small. The idea is to tag every object using a related sensor
    or RFID or electronic technology such as GPS. Cloud computing refers an Internet
    cloud of resources can be either a distributed or a centralized computing system.
    The cloud applies parallel or distributed computing, or both. Clouds can be built
    with virtualized or physical resources over large data centers that are distributed
    or centralized. Li-Fi stands for Light-Fidelity. Li-Fi technology, proposed by
    the German physicist-Harald Haas, provides transmission of data through light
    illumination by sending data through an light bulb LED that varies in fast intensity
    when compared with human eye can follow. The proposed system focuses on developing
    a Li-Fi based system and analyzes its performance with respect to existing technology.
    Wi-Fi is better useful for general wireless coverage within buildings, whereas
    Li-Fi is high density wireless data coverage in confined area interference issues.
    Li-Fi provides greater bandwidth, availability, efficiency and security than Wi-Fi
    and it has already proved with high speed in the lab. Basically low-cost is the
    nature of LEDs and with lighting units they has many opportunities to prove this
    medium, from general public internet access through street light lamps to auto-light
    fitted cars that communicate through their headlights. SECTION II. Aricultural
    Monitoring System Based on Sensors A. Precision Agricultural Precision agriculture
    (PA)[l] is playing a vital role mainly in developing countries. In PA, there are
    many types of the agriculture related parameters such as humidity, temperature,
    rainfall, soil moisture among different fields are considered. Based on these
    parameters we can analyzed how far these required resource efficiently utilized
    like utilizing water, fertilizer, pesticides, seeds etc in fields. Hence, it is
    used to increase the profit, maintain quality products and reduce waste. Though,
    GPS and GIS are used for PA, but they are costly. Wireless communication cameras,
    sensor networks provide a low cost technological solution for PA, for instance,
    in field crop management [12] where wireless cameras, sensor networks monitor
    crop conditions/growth for a longer period of time without fail and they also
    made a decision remotely and generate or evaluate the potential of new crops.
    Moreover, using the data collected from wireless cameras and sensors, it is possible
    to create a new related database or knowledge base of in-fields crops. Graphical
    user interfaces are integrated and adopted with the wireless camera and sensor
    network in these monitoring systems. The PA can evaluate agriculture area fields
    differently based on the ground level of water, saline, area field structure etc.
    The prototype maps of the fields help to manage the fields and design the relevant
    topology of wireless camera and sensor network (e.g., grid architecture). In this
    connection, different agriculture area field management zones can be defined based
    on the humidity, temperature, sand quantity and water availability etc.”. B. Field
    Assessment Agriculture farmers are follows traditional methods that require the
    state of the crop field to decide about the irrigation, applying required fertilizers
    and pesticides. Farmers mostly rely on their mental models (traditional methods)
    for this purpose; however, mental models might not always be perfect optimal.
    Hence we propose wireless camera and sensor network based area field management
    and monitoring system for this purpose, in which uses solar powered moisture nodes
    and low resolution camera for long of use. Hence, the collected information from
    cameras and sensors are in two different sources are available for assessment,
    comparison and analysis. Self-powered, self contained low resolution, long performance
    sensor, camera nodes send the height, coverage and greenness information of the
    agriculture area field grass through wireless sensor and camera networks to the
    base server or BS. Then the BS allocates time for these wireless camera nodes
    to send images. The camera, sensor nodes can also be used to observe cattle position
    and behavior C. Cattle Monitoring and Behavior Control Observing and monitoring
    the behavior of animals or cattle that is, how they interact to destroy in area
    field each other and movements towards to the field are very important in order
    to utilize properly the limited field resources (e.g. grass). For this purpose,
    Wark et al. propose wireless sensor network based cattle monitoring system [11]
    where Fleck-2 cattle nodes (sensors) are contained in a plastic box before putting
    into the collars(protection component) that the animals wear into neck. GPS, radio
    antenna and two batteries are also placed in the collar. The design of the collars
    (protection component) is very important so that animals cannot damage it easily.
    Authors propose placing the radio frequency antenna horizontal on top of the collar.
    Zebranet [10] is a related project to monitor zebras using GPS positioning data.
    Controlling animals from craft is a challenge in the agricultural monitoring systems
    because their mental and positional state (e.g., stress, desire, mood) are very
    difficult to calculate or measure. Moreover, the animal''s behavior depends on
    many factors such as season, age, temperature, food availability etc. Sensor-based
    M2M networks can play a vital role in behavior measure/control. In [9], Wark et
    al. focus on modeling cattle behavior based on their inertial and position data.
    Hence, adjusting the inertial or position of sensors is very important to get
    needful information. A sensor calibration/monitoring model is developed based
    on the distribution of inertial or position data. For example, during day time,
    the activities of animals are a lot more than that of during night time. Hence,
    their ruminating, sleeping, grazing, (behavioral) data will have different time
    in different shape (e.g., day and night). Calibration model is based on comparing
    these dataset to different parameters. From inertial sensors can collecting data
    about the speed, movement energy and turning rate of cattle. These collected information
    help identifying cattle behavior. Wark et al. [11] also propose to integrate radio
    frequency identification tag (RFID) with wireless camera, sensor networks to record/track
    the amount of food each animal takes and send this information through the wireless
    network communication. SECTION III. Sensor-Based Agriculture Monitoring Systems
    in Developing Countries This sensor based agriculture monitoring system should
    include a decision support system to maximize production, optimize resource utilization
    and can decrease environmental hazards. Moreover, this system should be autonomous,
    affordable (by poor farmers), accurate and remotely controllable. The lifetime
    of this sensor based agriculture monitoring system should be at least one crop
    season (4 −6 months) in developing countries. Though sensor-based agriculture
    monitoring systems had a high potential in traditional agriculture in developing
    countries, only a few project have been implemented in developing regions, which
    are still in evaluation, iteration or exploratory phase. A. Design Challenges
    in Developing Countries As sensor based agriculture monitoring networks are application
    specific, designing a sensor network for each application leads to the problem
    with limited resources and cost. Designing sensor-based agriculture monitoring
    communication[12] framework to use in multiple applications can optimize these
    problems. On the other hand, sensor-based agriculture systems used in the precision
    agriculture of developed countries are not suitable in developing countries because
    almost throughout world 87% farmers are depending on labor. It is different in
    developing countries to collect required data as eeconomic conditions and information
    of field to the farmers. Thus, the existing sensor-based M2M agriculture monitoring
    systems[12] are required to be modified in this context. Cost-is the most important
    factor in the case of developing countries. Cost can be reduced by using sensor-based
    agriculture monitoring communication networks in which it is not currently being
    used in agricultural monitoring systems. Moreover, this single framework of sensor-based
    agriculture monitoring network can be used in multiple applications and also in
    precision agriculture in which require densely deployed camera, sensor nodes.
    Reliability-in all most developing countries, sensor and camera nodes are climates
    extreme and scarce. Hence, important point those sensor nodes must be covered
    to protect from outdoor conditions including heat and moisture. One important
    challenge is availability and reliability of telecommunications and wireless infrastructure
    in rural areas of developing countries are very difficult. Resource-throughout
    world most of poor farmers are relying on rain fed farming for production of food.
    Moreover, traditional irrigation methodology is not efficient in semiarid areas
    in developing countries. Hence, a sensor-based agriculture monitoring irrigation
    systems with a decision support system is required to maximize food production
    of irrigation while minimize the intake of good water. A limited number of node
    deployments prevent a novel sensor agriculture monitoring network management scheme
    that uses alternate node scheduling. It also limits the usage of a power aware
    multi-hop routing that requires more camera and sensor nodes. B. Technical Frameworks
    of Sensor-Based Monitoring Systems Topology-one of the important primary requirement
    of this sensor based agriculture monitoring network fields in developing countries
    are homogeneous in terms of soil type, crop and structure type, one preferable
    method is zone-based topology can be used, which requires less number of sensor-based
    MTC devices. However, the zone-based topology suffers from network coverage problem
    and reliability (i.e., how the system works when a node in a zone fails). In [5],
    Kabashi and Elmirghani propose a dynamic zone-based topology for the VESEL project.
    Initially, nodes are distributed to the zones based on the optimized condition
    that each node remains within the range of the nodes of at least two zones. Hence,
    this overcomes the problem of node isolation. Then, each node identifies their
    neighboring nodes by broadcasting node/zone ID that is assigned by the gateway/coordinator
    nodes. Each zone node elects nodes in the neighboring zones to which they can
    connect with a minimum transceiver power. This generates several connected graphs,
    and the graph that requires minimum transmission power is selected for routing.
    Task Scheduling-This is another important basic requirement for better performance.
    Task scheduling considers or includes the parameters for sensing data, environmental
    factors (that affect sensing and network operations) and energy of the resources.
    This mechanism effectively schedules three system parameters: frequency of transmission,
    sampling rate and bit resolution. Initially, all values of these parameters are
    optimized for assigned or scheduled and then, adaptively rescheduled by a trigger
    from another neighbor environmental sensor (as agriculture parameters are inter-dependent).
    For example, rainfall or humidity sensors are triggered with soil moisture sensors.
    On other hand to adjust the parameters is based on the profile of the parameters.
    available node energy is the based on depending of System parameters. For instance,
    when the energy is crucial, the bit resolution can be decreased to save the energy
    in conversion process and analog-to-digital converter. Task scheduling is done
    at application layer by coordinator nodes and external server. Routing-Kabashi
    and Elmirghani [5] propose a delay back-link/storage aware and tolerant multi-sink
    architecture routing protocol for the VESEL project. Multiple sinks provide more
    distributed data collection and storage capabilities. several sink nodes have
    a aggregated data. at the edge of a field located with Sinks and thus, it supports
    automatic data logging when some hand-held community devices such as PDA (with
    wireless communication capabilities) pass by the sinks. In back-link/storage aware
    routing protocol, sinks and other nodes broadcast available memory/storage capacity.
    balances or optimizes memory usage. SECTION IV. Proposed Sensor-Based Agricultural
    Monitoring System Based on the design challenges and existing technical framework
    of the agriculture monitoring systems we identify and present differences in sensor-based
    agriculture monitoring systems of developed and developing countries. Considering
    all these challenges and technical frameworks, we propose a novel agriculture
    monitoring systems (with improved Li-Fi technology, topology and routing protocol)
    for farmers in developing countries. In this proposed technology is proved with
    the below mentioned results. Usually low level network system was fixed in with
    IoT devices. Like sensors, relevant object and cameras are covered with communication
    network i.e Li-Fi technology which is clearly mentioned in above phases. A. Block
    Diagram of Praposed System Architechture The below mentioned diagram represents
    with new technology. At first relevant fields data are collected from relative
    sensors and that data/information sends to data collection server. This communication
    done with new Li-Fi technology because that area was fixed with topology based
    on area structure. Actually lot of technologies is present with previous methods.
    But lack of communication leakage we are forwarded to this present technology
    for better performance. Fig. 3. System architecture Show All After receiving data
    from sensors that information must transfer to cloud server with the help of GPRS
    and WImax technologies. Than cloud server take a responsible to analysis the data
    based on requirement. Based on collected data sever will take a decision and that
    decision need to distribute over the subscribed users. Mean while any disturbance
    are accrued than that notification must received through mobile. This process
    is called alarm with beep sound. B. Flowchart for Process Management This proposed
    method can be explained with step by step process like flow of sequentional process
    with the below figure (4). Fig. 4. Flow chart of proposed method Show All The
    proposed system starts and first executed by user validation weather that user
    is authorized or not. If user valid that all connected sensors are activated than
    that collected information send to cloud server. That will take an action regarding
    that query. Actually that data is two types compared and assessed. at last if
    the problem solved that the process terminated otherwise recycle that execution
    process. 1): Tempareture SensorA temperature sensor refer a device, usually an
    RTD (resistance temperature detector) that recived the data about temperature
    from a particular source sensors and make a convertion of the data into human
    understandable form for an observer or a device. Temperature sensors are used
    in many more applications like HVand AC system food processing units, environmental
    controls, medical devices, automotive and chemical handling under the food monitoring
    and controlling systems, etc. One of the most commonly used temperature sensor
    is a thermometer, in which temperature can measure of solids, liquids and gases.
    This sensor is mostly used for nonscientific purposes because it is not so accurate.
    Different types of temperature sensors are as follows: Thermocouples Resistor
    temperature detectors Thermistors Now we explained briefly about each and every
    sensor in detailed manner. •: ThermocouplesOne of the most commonly used temperature
    sensor is a thermocouple and it is abbreviated as TC.TC is used for long distance
    because it is extremely rugged, low-cost. There are many types of temperature
    sensors that have a wide range of applications. Fig. 5. Thermocouple sensor Show
    All A thermocouple can be used as a voltage device because it indicates temperature
    by measuring a change in the voltage. It consists of two different metals: opened
    and closed. The principle used for working of these metals is thermoelectric effect.
    When two dissimilar metals produce a voltage, a thermal difference exists between
    the two metals. Thermocouple voltage rises when the temperature rises. •: Resistor
    Temperature DetectorsRTD is one of the most commonly used accurate sensors. In
    a resistor temperature detector, the resistance is proportional to the temperature.
    Platinum, nickel & copper is used for preparing this sensor\\cdot Fig. 6. RTD
    sensor Show All RTD can be used for measuring a wide range of temperature. It
    can be used to measure a temperature between 270oC to +850oC. To function properly
    it requires an external current source. The current produces heat in a resistive
    element causing an error in the temperature measurements. The error is calculated
    by this formula: DeltaT= P ∗ S View Source Where, ‘T’ is temperature, ‘P’ is I
    squared power produced and‘S’ is a degree C/mill watt. •: ThermistorsThe other
    type of temperature sensor is a thermistor. It is relatively inexpensive, adaptable,
    and easy to use. When the temperature changes like RTD sensor it changes its resistance.
    Oxides of manganese &nickel are used in the manufacture of thermistor because
    they are susceptible to damages. So, these materials are called ceramic materials.
    Thermistor offers high sensitivity compared to resistor temperature detectors.
    In the thermistors temperature increases when the resistance decreases. so, thermistor
    has a negative temperature coefficient. Fig. 7. Thermistor temperature sensor
    Show All 2): Soil Moisture SensorIn the life of plant Soil moisture plays a key
    role. Nutrients in the soil solution provide the plant with the food it needs
    to grow. By using transpiration, water is the essential element for regulating
    the temperature. when growing in moist soil plant root elements are well developed.
    Excessive levels of soil moisture, however, can lead to anaerobic conditions that
    can promote the growth of plant and soil pathogens. Fig. 8. Soil moisture sensor
    Show All For measuring soil moisture tensiometric and volumetric are the two primary
    sensor types. Tensiometric sensors measure soil moisture tension. Tensiometers
    are sensitive to soil properties by measuring how tightly a particular soil type
    retains water. The actual volume of water in the soil is measured by volumetric
    sensor. Soil moisture sensors work with irrigation system by signaling the need
    for water and turning on the system. Soil moisture sensors can prevent sprinklers
    from coming on if there''s enough moisture in the soil. 3): Water Level SensorBased
    on the specific application of sensor wide spectrum of sensors is available in
    the market. Fig. 9. Water level sensor Show All Sensor is also called as humidity
    sensor because it is used for measuring humidity. It is also called as pressure
    sensor, because it is used for measuring pressure. sensor used for measurement
    of displacement is called position sensor and the principle used is sensing principle.
    The sensor used for measurement of fluid levels is called a level sensor. Base
    server/station-A base station is a wireless communication station. A base station
    is used to communicate and is installed at a fixed location. It is also called
    as a push-to-talk two-way radio system Data Analysis Table 1 Different agriculture
    values SECTION V. Practical Results End users can analyze output result in things
    peak application. That the below figure shows practical representation. This involved
    a lot of IoT devices. Fig. 10. Experimental setup Show All The below figure shows
    optimized results of temperature value of soil in the area field. Fig. 11. Analysis
    of temperature value Show All Fig. 12. Analysis of light value Show All The above
    figure shows optimized output value for light which is related to IoT devices.
    The below graph shows the moisture value of weather and that value is used to
    take decision about pesticides etc. that is also discussed with table (1) about
    agriculture related calculations and necessary action for better food production.
    Fig. 13. Analysis of moisture value Show All The beside below mentioned graph
    for calculating the requirement of rain fall water. Because, overall 33% of world
    population depends on rain water for irrigation. Fig. 14. Analysis of rain fall
    value Show All Conclusion Better improvement of production in crop is a major
    challenge in well developing countries like India should take novel smart technologies
    under agriculture stream that leads to green population country. so in order to
    reach we proposed a new agriculture technology based on IoT association with cloud
    computing. Here Li-Fi technology was introduced for fixed area structure topology
    for better performance. Usually GPRS technology was used for better results within
    low cost. This system made with ability for further improvement by incorporating
    new self learning techniques in which easy deployment in to cloud to understand
    behavior of sensor collected data and can take individual or autonomous decisions
    Authors Figures References Citations Keywords Metrics More Like This Adaptive
    wireless sensor networks for high-definition monitoring in sustainable agriculture
    2014 IEEE Topical Conference on Wireless Sensors and Sensor Networks (WiSNet)
    Published: 2014 Wireless Sensor Network for Precise Agriculture Monitoring 2011
    Fourth International Conference on Intelligent Computation Technology and Automation
    Published: 2011 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the International Conference on IoT in Social, Mobile, Analytics
    and Cloud, I-SMAC 2017
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A novel technology for smart agriculture based on IoT with cloud computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhang L.
  - Wang X.
  - Jin M.
  - Huang J.
  - Wu H.
  - Gao P.
  citation_count: '0'
  description: Surface soil moisture (SSM) is a significant component in the modeling
    of climatological, hydrological and ecological systems. In this study, an approach
    is presented and validated for combining the water cloud and Change Detection
    models to invert surface soil moisture using ENVISAT ASAR Global Monitor mode
    images (ASAR-GM data). A total of 25 images were selected in HH polarization.
    We have used parameters of the water cloud model best suited for eliminating the
    influence of vegetation cover on ASAR-GM and MOD15A2 LAI data in the Jiangsu Province.
    In our algorithm, Leaf Area Index (LAI) was used to substitute Vegetation Water
    Content (VWC). Relative soil moisture was calculated using the Change Detection
    method which eliminates the influence of surface roughness. Due to the relatively
    high rainfall and efficient irrigation system in this area as observed from in-situ
    measurement data, the lowest relative soil moisture (degree of duration) is about
    30%. Therefore, the formula for the Change Detection method should apply a gain
    of 0.7, and an offset of 0.3, and thereafter converting the results to volumetric
    soil moisture (mv) in accordance with local soil parameters. Finally, the retrieved
    volumetric soil moisture was validated with in-situ data, determination coefficient
    (R2) is 0.348 and a root mean square error (RMSE) in 0.087 cm3/cm3 was recorded,
    based on the method involving the combination of water cloud and Change Detection
    models. Compared with the conventional Change Detection method, the R2 of 0.104
    was increased and the RMSE of 0.014 cm3/cm3 was reduced, indicating the robustness
    of our proposed soil moisture retrieval algorithm.
  doi: 10.1109/Agro-Geoinformatics.2017.8047013
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2017 6th International Confer...
    Inversion of surface soil moisture based on ASAR-GM data: Combining water cloud
    and change detection models Publisher: IEEE Cite This PDF Lijie Zhang; Xiuzhen
    Wang; Mengting Jin; Jingfeng Huang; Hongyan Wu; Ping Gao All Authors 95 Full Text
    Views Abstract Document Sections I. Introduction II. Study Area and Data Set III.
    Methodology IV. Result and Analysis V. Conclusion Authors Figures References Keywords
    Metrics Abstract: Surface soil moisture (SSM) is a significant component in the
    modeling of climatological, hydrological and ecological systems. In this study,
    an approach is presented and validated for combining the water cloud and Change
    Detection models to invert surface soil moisture using ENVISAT ASAR Global Monitor
    mode images (ASAR-GM data). A total of 25 images were selected in HH polarization.
    We have used parameters of the water cloud model best suited for eliminating the
    influence of vegetation cover on ASAR-GM and MOD15A2 LAI data in the Jiangsu Province.
    In our algorithm, Leaf Area Index (LAI) was used to substitute Vegetation Water
    Content (VWC). Relative soil moisture was calculated using the Change Detection
    method which eliminates the influence of surface roughness. Due to the relatively
    high rainfall and efficient irrigation system in this area as observed from in-situ
    measurement data, the lowest relative soil moisture (degree of duration) is about
    30%. Therefore, the formula for the Change Detection method should apply a gain
    of 0.7, and an offset of 0.3, and thereafter converting the results to volumetric
    soil moisture (m v ) in accordance with local soil parameters. Finally, the retrieved
    volumetric soil moisture was validated with in-situ data, determination coefficient
    (R2) is 0.348 and a root mean square error (RMSE) in 0.087 cm3/cm3 was recorded,
    based on the method involving the combination of water cloud and Change Detection
    models. Compared with the conventional Change Detection method, the R2 of 0.104
    was increased and the RMSE of 0.014 cm3/cm3 was reduced, indicating the robustness
    of our proposed soil moisture retrieval algorithm. Published in: 2017 6th International
    Conference on Agro-Geoinformatics Date of Conference: 07-10 August 2017 Date Added
    to IEEE Xplore: 21 September 2017 ISBN Information: DOI: 10.1109/Agro-Geoinformatics.2017.8047013
    Publisher: IEEE Conference Location: Fairfax, VA, USA SECTION I. Introduction
    Surface soil moisture (SSM) is a significant component in climatological, hydrological,
    and ecological systems. Information on the distribution of soil moisture has been
    proven useful for watershed management to determine the allocation of limited
    resources during times of drought and in the mitigation of water-logging conditions
    [1]. Retrieval of surface soil moisture using active microwave data is becoming
    the most potential method due to the all-weather imaging capabilities of microwave
    sensors. However, it is complicated by the scattering from rough surfaces and
    vegetation whose geometries are unknown. Large-scale of soil moisture mapping
    often relies on empirical radiative transfer (RT) models such as the Oh [2] and
    Dubois models [3], or on change detection approaches. The Oh model and Dubois
    model have been proven to be effective in the retrieval of surface soil moisture
    in specific regions. A change detection method was presented in 1999 by Wagner
    [4]–[6], which assumes that the surface roughness and vegetation effects on the
    scattering are time-invariant for the ERS, therefore the changes in surface soil
    moisture is the only factor that changes the value of the backscattering coefficient.
    It describes radar backscatter in terms of empirical backscatter parameters and
    the relative surface soil moisture. The empirical backscatter parameters define
    the variation of radar backscatter between dry surface soil moisture conditions
    at wilting point level and saturated conditions at field capacity. The change
    detection method was utilized to retrieve surface soil moisture in large amount
    of regions in Ukraine, North American, Canada, the Iberian Peninsula, Mekong Basin
    and so on [4]–[11]. However, when the same method is applied to ASAR-GM data at
    different spatial resolution of ERS, the effects of vegetation may be different
    to the value of the backscattering coefficient. Several previous researches firmly
    believe that the changes in backscatter due to vegetation growth are, in general,
    much smaller than changes due to soil moisture. Even though scholars like M. Zribi
    [12] analyzed the effect of vegetation on radar signals, but there is not yet
    a practical approach due to the lack of validated satellite products such as optical
    thickness or LAI. As a consequence, in our research, we take advantage of the
    Water Cloud Model [13], [14] by using MOD15A2 LAI product to eliminate the effects
    on the backscattering coefficient from the vegetation, and suppose that the surface
    roughness is stable in the time series. The combination of water cloud and Change
    Detection models is expected to provide a better retrieval result. SECTION II.
    Study Area and Data Set A. Study Area Jiangsu Province is located in China''s
    eastern monsoon region, see Fig. 1. It is one of the 13 major grain producing
    areas in China. This region belongs to the temperate to subtropical transition
    climate (mild climate). The climate has obvious transition from south to north,
    and the annual precipitation ranges from 600 to 1617 mm. Being located in a flat
    terrain, Jiangsu always suffer from both drought and waterlogging. Fig. 1 Location
    of study area Show All B. Satellite Data ENVISAT was launched on 1 march 2002.
    It images the earth surface at an altitude about 800km, and has a revisit cycle
    of 35 days. The Advanced Synthetic Aperture Radar (ASAR) onboard ENVISAT is able
    to collect C-band (5.331GHz) σ 0 measurements in several imaging modes. Dostalova
    [11] compared different types of ASAR data, and illustrated that the ASAR-GM was
    the most suitable data for retrieving the SSM in regional scales due to its high
    temporal resolution and large spatial coverage. The MOD15A2 is the level-4 MODIS
    product which is composited every 8 days at 1-kilometer resolution on a Sinusoidal
    grid. Dabrowska [15] compared 3 kinds of different index to calculate the Vegetation
    water content (VWC), and asserted that the LAI have the obvious positive correlation
    with VWC. Therefore, in this research we choose the LAI data that closest with
    the time of the ASAR-GM to substitute VWC. The parameters of the selected data
    are shown in table 1. Table 1 Dates of ASAR-GM and MOD15A2 The land cover products
    of China, the WESTDC, which were derived from the Cold and Arid Regions Science
    Data Center, were used to mask out the cropland, see Fig 2. Fig. 2 Simplified
    land cover map of jiangsu province Show All The ERS1/2 AMI 50km Soil Moisture
    Time Series Product from Vienna University of Technology(TU Wien) was used to
    find out the probabilities of wet and dry reference of the research area [6],
    [16]. In-situ volumetric soil moisture of croplands was obtained from the Agricultural
    Meteorological Automatic Observatory of the Jiangsu Meteorological Bureau. SECTION
    III. Methodology A. Preprocessing of the Data The pre-processing of ASAR-GM was
    done in the software developed by European Space Agency (ESA), the NEST4C. Preprocessing
    included radiation correction, geographic correction, and filtering. The ASAR-GM
    scenes were transferred from DN data into backscattering coefficient in σ 0 (
    m 2 / m 2 σ 0 ( m 2 / m 2 )= D N 2 K ⋅sinθ (1) View Source In the above formula,
    K is the absolute calculation factor. After Speckled Filtering, the images were
    reprojected to the UTM WGS84-Zone 51. The MOD15A2 LAI product data were mosaicked
    and reprojected using MODIS Reprojection Tools (MRT) and croplands were figured
    out through WESTDC. B. Water Cloud Model The simple approach to eliminate the
    effect of the backscattering coefficient from vegetation, water-cloud model, was
    first developed by Ulaby in 1978[13], who proposed to represent the canopy in
    a radiative transfer model as a uniform cloud whose spherical droplets are held
    in place structurally by dry matter. The original model was modified by various
    authors. In water cloud model, the canopy is represented by “bulk” variables such
    as LAI or VWC. The water cloud model represent the power backscattered by the
    whole canopy σ 0 as the incoherent sum of the contribution of the vegetation σ
    o veg and the contribution of the underlying soil σ o soil , which need to be
    attenuated by the vegetation layer twice. The interaction between the vegetation
    canopy and the soil are neglected in the water cloud model, therefore: σ o ( m
    2 / m 2 )= σ o veg ( m 2 / m 2 )+ τ 2 ⋅ σ o soil ( m 2 / m 2 ) (2) View Source
    Where τ 2 is the two-way vegetation transmissivity. σ 0 veg ( m 2 / m 2 )=A⋅VWC⋅cosθ(1−
    τ 2 ) τ 2 =exp(−2B⋅VWC/cosθ) (3) (4) View Source C. Change Detection The so called
    TU Wien change detection algorithm assumes a linear relationship between changes
    in volumetric soil moisture and changes of backscatter expressed in decibels.
    The degree of saturation in a given pixel is estimated by relating each backscattering
    value to the wet and dry soil conditions. Wet and dry conditions refer to a completely
    dry soil (0%) and saturation of the soil (100%), respectively, that is: m s (%)=
    σ 0 soil (dB)− σ 0 dry (dB) σ 0 wet (dB)− σ 0 dry (dB) (5) View Source Where m
    5 is the saturation of soil moisture, σ 0 dry (dB) and σ 0 wet (dB) is the smallest
    and largest value of the backscattering coefficient in the time series. Here,
    the backscattering coefficient was transferred into dB mode in the following formula:
    σ o (dB)=10⋅log( σ o ( m 2 / m 2 )) (6) View Source In the research of C. Path
    [8], due to high noise level in the ASAR GM data and uncertainty connected with
    the question, if the ASAR GM time series data for one location really captured
    the lowest and highest radar backscatter, the estimation of the reference values
    σ 0 dry (dB) and σ 0 wet (dB) is not straight forward. The estimation of reference
    values is based on the assumption that the probabilities P dry and P wet of acquiring
    backScatter measurements during dry and wet conditions are known. To calculate
    the number of measurements N taken during dry and wet conditions in the followed
    formulas: N dry =N⋅ P dry N wet =N⋅ P wet (7) (8) View Source Then, the reference
    values of σ 0 dry (dB) and σ 0 wet (dB) can be calculated by averaging the driest
    and wettest measurements: σ o dry ≈ 1 N dry ∑ N dry i=1 σ o i σ o wet ≈ 1 N wet
    ∑ N wet i=1 σ o i (9) (10) View Source The probabilities P dry and P wet depend
    on the climatic conditions and other properties of the land surface. In this study,
    the 50km spatial resolution ERS soil moisture product was chosen as an ancillary
    data to figure up the probabilities. Fig. 3 and Fig4. shows the reference value
    of σ 0 wet (dB) and σ 0 dry (dB) respectively. Fig 3. The wet reference of ASAR-GM
    data Show All Fig 4. The dry reference of ASAR-gm Show All SECTION IV. Result
    and Analysis A set of 25 ENVISAT ASAR GM scenes has been processed and analyzed.
    Maps showing the surface soil moisture conditions covering the study area were
    matched with the climate type of our research area, Jiangsu Province. Fig. 5 shows
    the saturation degree of SSM, during the growing season of winter crops. From
    late December to early March, it is relatively dry, and from early March to December,
    it is relatively wet. This soil moisture trend is consistent with the precipitation
    data provided by the Jiangsu province meteorological bureau. Fig. 5 Temporal V.
    Of surface soil moisture of jiangsu province Show All In-situ data from several
    Agricultural Meteorological Automatic Observatory were used to validate the inversion
    results, recorded in volumetric soil water content. Therefore, a conversion from
    degree of saturation (%) to absolute units (cm3/cm3) is possible by multiplying
    by the porosity: m v =(1− ρ S ρ r )⋅ m s 100 (11) View Source ms is the volumetric
    soil moisture in cm3/cm3 p s is the soil dry bulk density, p r is soil specific
    gravity which usually values as 2.65g/cm3, and m s is degree of saturation. As
    it can be seen in this equation, the accuracy of soil porosity is as important
    as the relative soil moisture content. The comparison between measurements and
    estimations shown in Fig. 6(a) is found to have an RMSE equal to 0.087 V. This
    is slightly larger than the RMSE recorded in previous studies. This is attributable
    to the relatively higher soil water content in our research area. But compare
    to the original change detection methods, see Fig. 6(b), the process in combining
    water cloud and change detection models has reduced RMSE by 0.014cm3/cm3, and
    increased R2 by 0.104. Fig. 6 Comparison of retrieval results from different methods
    Show All SECTION V. Conclusion Many studies [4]–[8] have demonstrated that the
    change detection methods can successfully be applied to active microwave satellite
    images such as ERS and ASAR-GM to retrieve surface soil moisture. But, none of
    them applied water cloud model to eliminate the effect from the vegetation. In
    our research, we make use of the MOD15A2 LAI data to remove the disturbing factor
    from the vegetation through water cloud model. And the result shows a coefficient
    of determination (R2) between volumetric soil moisture and in-situ data of 0.348
    and a root mean square error (RMSE) in volumetric water content of 0.087 cm3/cm3
    was recorded based on the method involving the combination of water cloud and
    Change Detection models. Compared with the conventional Change Detection method,
    the increase in R2 of 0.104 and the decrease in RMSE of 0.014cm3/cm3 indicates
    the robustness of our proposed soil moisture retrieval algorithm. ACKNOWLEDGES
    This study was supported by the Special Fund for Meteorological Research in the
    Public Interest, China (Project No. GYHY20140628) and Natural Science Foundation
    of China (Project No.41371412-D010702). We thank the Jiangsu meteorological bureau
    to provide the in-situ data. We would also like to express our sincere thanks
    to the anonymous reviewers for their constructive comments. Authors Figures References
    Keywords Metrics More Like This Sentinel-1 Backscatter Assimilation Using Support
    Vector Regression or the Water Cloud Model at European Soil Moisture Sites IEEE
    Geoscience and Remote Sensing Letters Published: 2022 Simulation of Radar Backscattering
    Coefficients Using IEM - A Tool for Surface Soil Moisture Retrieval 2007 3rd International
    Conference on Recent Advances in Space Technologies Published: 2007 Show More
    IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2017 6th International Conference on Agro-Geoinformatics, Agro-Geoinformatics
    2017
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Inversion of surface soil moisture based on ASAR-GM data: Combining water
    cloud and change detection models'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
