- analysis: '>'
  authors:
  - Guruprasad S.M.
  - Leiding B.
  citation_count: '0'
  description: The digital transformation of apiculture initially encompasses Internet
    of Things (IoT) systems, incorporating sensor technologies to capture and transmit
    bee-centric data. Subsequently, data analysis assumes a vital role by establishing
    correlations between the collected data and the biological conditions of beehives,
    often leveraging artificial intelligence (AI) approaches. The field of precision
    bee monitoring has witnessed a surge in the collection of large volumes of diverse
    data, ranging from the hive weight and temperature to health status, queen bee
    presence, pests, and overall hive activity. Further, these datasets’ heterogeneous
    nature and lack of standardization present challenges in applying machine learning
    techniques directly to extract valuable insights. To address this issue, the envisioned
    ecosystem serves as an open and collaborative information platform, facilitating
    the exchange and utilization of bee monitoring datasets. The data storage architecture
    can process a large variety of data at high frequency, e.g., images, videos, audio,
    and time series data. The platform serves as a repository, providing crucial information
    about the condition of beehives, health assessments, pest attacks, swarming patterns,
    and other relevant data. Notably, this information portal is managed through a
    citizen scientist initiative. By consolidating data from various sources, including
    beekeepers, researchers, and monitoring systems, the platform offers a holistic
    view of the bee population’s status in any given area.
  doi: 10.3390/agriculture14030470
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agriculture All Article Types Advanced   Journals
    Agriculture Volume 14 Issue 3 10.3390/agriculture14030470 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editors
    Francesco Marinello Xiongzhe Han Tianyi Wang Subscribe SciFeed Related Info Link
    More by Authors Links Article Views 555 Table of Contents Abstract Introduction
    Challenges of Data Sharing and Collaboration in Apiculture An Open (Data) Marketplace
    Ecosystem Advantages for Modern Apiculture Conclusions Author Contributions Funding
    Institutional Review Board Statement Data Availability Statement Conflicts of
    Interest References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessOpinion BeeOpen—An Open Data Sharing Ecosystem for
    Apiculture by Shreyas M. Guruprasad 1,† and Benjamin Leiding 2,*,† 1 August-Wilhelm
    Scheer Institut für Digitale Produkte und Prozesse gGmbH, 66123 Saarbrücken, Germany
    2 Institute for Software and Systems Engineering, Clausthal University of Technology,
    38678 Clausthal-Zellerfeld, Germany * Author to whom correspondence should be
    addressed. † These authors contributed equally to this work. Agriculture 2024,
    14(3), 470; https://doi.org/10.3390/agriculture14030470 Submission received: 8
    December 2023 / Revised: 11 March 2024 / Accepted: 13 March 2024 / Published:
    14 March 2024 (This article belongs to the Special Issue Sensor-Based Precision
    Agriculture) Download keyboard_arrow_down     Browse Figure Versions Notes Abstract
    The digital transformation of apiculture initially encompasses Internet of Things
    (IoT) systems, incorporating sensor technologies to capture and transmit bee-centric
    data. Subsequently, data analysis assumes a vital role by establishing correlations
    between the collected data and the biological conditions of beehives, often leveraging
    artificial intelligence (AI) approaches. The field of precision bee monitoring
    has witnessed a surge in the collection of large volumes of diverse data, ranging
    from the hive weight and temperature to health status, queen bee presence, pests,
    and overall hive activity. Further, these datasets’ heterogeneous nature and lack
    of standardization present challenges in applying machine learning techniques
    directly to extract valuable insights. To address this issue, the envisioned ecosystem
    serves as an open and collaborative information platform, facilitating the exchange
    and utilization of bee monitoring datasets. The data storage architecture can
    process a large variety of data at high frequency, e.g., images, videos, audio,
    and time series data. The platform serves as a repository, providing crucial information
    about the condition of beehives, health assessments, pest attacks, swarming patterns,
    and other relevant data. Notably, this information portal is managed through a
    citizen scientist initiative. By consolidating data from various sources, including
    beekeepers, researchers, and monitoring systems, the platform offers a holistic
    view of the bee population’s status in any given area. Keywords: precision agriculture;
    data marketplace; apiculture; AI 1. Introduction Changes in temperature, humidity,
    illumination, and solar radiation can significantly affect honeybees, making them
    highly sensitive to fluctuations in environmental parameters [1,2]. Recent studies
    show that bees suffer from increasing stress factors, leading managed and unmanaged
    bee colonies to die or be less productive. In order to keep track of the health
    of their hives, beekeepers have traditionally depended on inspecting them manually
    and visually, a process that is both time-consuming and disruptive to colonies,
    resulting in infrequent assessments. Typically, beekeepers conduct hive inspections
    every two weeks during pollination or honey-production periods, with a reduced
    frequency during winter months [3]. However, with the advent of the Internet of
    Things (IoT) sensors and devices, passive monitoring of honey bee colonies has
    become feasible, giving rise to precision beekeeping applications [4]. These applications
    include monitoring hive health and colony strength through sensors measuring parameters
    like temperature, humidity, and CO2 levels [5]. Additionally, audio and vibration
    monitoring has emerged as an effective alternative for remote hive surveillance,
    further expanding the options available to beekeepers [3]. The role of data in
    precision bee monitoring is pivotal for gaining insights into the behavior, health,
    and overall well-being of bee colonies [6,7]. Data collected from sensors and
    observations provide valuable information about bee behavior, such as foraging
    patterns [8], hive activity levels [9], and swarming tendencies [10]. With the
    large-scale and heterogeneous nature of data, advanced data analysis techniques,
    such as machine learning algorithms, are required to recognize patterns, trends,
    and anomalies in bee behavior and health. Predictive modeling based on historical
    data can forecast potential hive issues, allowing beekeepers to implement preventive
    measures and optimize hive management strategies. Both, the idea of digitizing
    apiculture [3,11], e.g., smart weight scales, acoustic sensors, temperature/humidity
    measurements and many more, as well as the application of AI in the field of apiculture
    [12,13] have been around for some time. Even industrial/commercial solutions have
    begun to emerge (https://amohive.com/, https://apic.ai/, https://bee-sensing.com/,
    accessed 8 December 2023). Similarly, apiary datasets and closed or (semi-)open
    data platforms for apiary data in general, as well as bee health in particular,
    exist. Even an EU-funded open data platform for bee health exists (https://bee-ppp.eu/,
    accessed 8 December 2023). However, the platform seems to be dysfunctional, and
    its dataset is very limited. Additional datasets exist, such as BeeInformed and
    others (https://beeinformed.org/, https://www.kaggle.com/datasets/se18m502/bee-hive-metrics,
    https://data.ontario.ca/dataset/honey-bee-pests-and-pathogens-in-ontario-apiaries,
    accessed 8 December 2023). However, none of them are updated regularly or allow
    collaboratively generating/curating/updating/sharing apiculture data. Moreover,
    the datasets are limited in size and variety, e.g., different sensors in combination
    with audio and or video material. One possible solution to the challenge of sharing
    and reusing valuable yet scarce information is the use of data marketplaces [14,15].
    However, this approach also has limitations, particularly when it comes to dealing
    with the issue of property claims erosion in a selling platform for data sets
    and models. Why do the stakeholders of the apiculture industry—and agriculture
    in a broader sense—hesitate to exchange data or work together to collect, share,
    collaboratively, and utilize data? What is needed is an ecosystem that focuses
    on data acquisition, curation, and processing. This would enable the collaborative
    processing and sharing of diverse and broadly applicable AI models for apiculture,
    addressing the previously described needs. We advocate for a cooperative strategy
    that involves all stakeholders in the collection and analysis of apiculture-related
    data sets, along with the development of suitable AI models. This approach should
    be implemented within an ecosystem that offers incentives to all participants.
    The goal is to create a system that is transparent, secure, and incentivizes participation,
    while ensuring data integrity and accessibility. This manuscript describes the
    limitations of state-of-the-art collaborative data processing and sharing approaches
    to develop AI-driven applications for apiculture. Additionally, it explores the
    potential of utilizing a blockchain-based smart contracts. 2. Challenges of Data
    Sharing and Collaboration in Apiculture The heterogeneous nature of these datasets
    and their lack of standardization present challenges in applying machine learning
    techniques directly to extract valuable insights. One of the primary obstacles
    in data collection within apiculture pertains to bias, as analyzing only a limited
    number of beehives over a fraction of bees’ life cycles often yields insufficient
    insights [16,17,18]. To comprehensively understand bees, data collection must
    span an entire year, considering the significant variations in their behavior
    between seasons, especially between summer and winter, and even within the high
    season’s onset and conclusion [19]. Consequently, amalgamating data from diverse
    apiaries and research initiatives becomes imperative to establish a robust dataset.
    This dataset enables model training on one subset and independent testing on another,
    mitigating the limitations of single-source data [18]. Ensuring the accuracy and
    reliability of data is essential for drawing valid conclusions. Inconsistent data
    collection procedures, sensor inaccuracies, and human errors can introduce noise
    and impact the quality of analyses. The field of apiculture needs more standardized
    routines for data acquisition, curation, and processing, for the data itself and
    related metadata. In their work, Ugochukwu and Phillips [20] highlighted additional
    concerns that researchers have regarding data sharing in the field of plant phenotyping,
    which are also applicable to apiculture. These concerns include the potential
    risk of property claims being undermined, data misuse, and the absence of data
    harmonization. An additional hurdle arises from the absence of publicly accessible
    datasets, codes, and trained models across many of the studies surveyed, impeding
    the ability to build upon prior findings. Consequently, there is a pressing demand
    for the establishment of a platform that facilitates standardized data collection
    and sharing within the research community. Such a platform would aggregate annotated
    data from diverse geographic locations, hive types, and honeybee sub-species,
    encompassing various recording conditions and quality standards. By advocating
    for harmonized data practices, this platform would drive advancements in precision
    beekeeping research and facilitate the benchmarking of results, thereby fostering
    collaboration and dissemination of knowledge within the field [17]. In [21], the
    authors list a collection of challenges that prevent participants of an ecosystem
    from openly sharing data. Thus far, the unresolved challenge lies in mitigating
    the risk of data loss through unauthorized duplication, misuse, or an inadequately
    incentivized system. Primarily, the willingness to exchange data is constrained
    by a lack of accountability regarding handling shared data by unfamiliar entities,
    such as competitors, as well as ambiguous legal circumstances concerning copyright-related
    matters. Ultimately, the exchange of digital information through collaboration
    often results in the formation of a participant network where a small number of
    individuals contribute the majority of the input. On the contrary, a significant
    majority of participants primarily derive advantages from the network without
    actively contributing to its maintenance and growth, exhibiting what can be referred
    to as a “free-rider” phenomenon [22]. Finally, little thought has been given to
    how to use the data in the context of AI-driven applications for apiculture, e.g.,
    the relation between sharing data and contributing to the well-being of an ecosystem
    and benefiting from ML/AI applications utilizing the very same dataset as an incentive
    structure for collaborative open apiculture platforms. 3. An Open (Data) Marketplace
    Ecosystem Recent years have seen an increase in the use of data marketplaces for
    sharing, exchanging, selling, and profiting from data, services, and goods, e.g.,
    [14,15,23]—some of them operate on distributed-ledger technology and others without.
    The primary reason for this is primarily a result of their capacity to hinder
    unapproved entry to distributed data, responsibility within the framework of sharing
    and/or gaining access to data, and a range of motivation systems for data sharing
    with a focus on establishing shared and often decentralized records. Smart contracts
    can automate data transactions, access rights, and rewards distribution to data
    users and data collectors. By treating data as a tradable asset, each dataset
    can be tokenized, representing ownership or access rights. This also enables small-scale
    (micro-) transactions, allowing users to buy or sell portions of datasets. Rather
    than a singular marketplace that could result in monopolies or oligopolies, such
    as the Android or iOS marketplaces [24], we suggest implementing a network of
    interoperable, open, and decentralized marketplaces, such as the InterPlanetary
    File System (IPFS) (https://ipfs.tech/, accessed on 8 December 2023), to store
    data off-chain and reducing storage overheads. The stored data are fragmented
    and encrypted across multiple nodes to improve security. Within this framework,
    stakeholders can select any marketplace while enjoying full access to the entire
    ecosystem. Stakeholders engage in spot trades to acquire or sell data and models,
    or opt for a subscription-based model to ensure continuous access. There are various
    market mechanisms that can be utilized to motivate individuals to participate
    in environmental preservation efforts through managing datasets or creating new
    AI/ML models. Therefore, we suggest developing an open and collaborative framework
    to manage apiculture data sets, as demonstrated in Figure 1. The ecosystem’s stakeholders
    consist of individuals and entities engaged in the utilization, provision, curation,
    and development of data, as well as creators of AI/ML models. A decentralized
    autonomous organization (DAO) governance model for the platform enables decision-making
    processes, allowing the stakeholders to also vote on critical issues. This helps
    create transparent policies for usage, contributions and rewards governed by community
    consensus. Data providers procure data and transmit them to the established data
    repositories. It should be noted that users have the capability to serve as data
    providers through the utilization of applications that utilize an artificial intelligence
    and ML model, simultaneously augmenting the existing data pool with newly added
    information. Data curators are responsible for the systematic handling of incoming
    data, including the elimination of substandard input and the incorporation of
    relevant metadata and labels as appropriate. Data curators conduct quality assurance
    assessments on data provided by fellow curators. Data curators validate the quality
    and authenticity of data. Figure 1. Main components of BeeOpen, enabling a collaborative
    and interactive open data sharing ecosystem, considering efficient data flow,
    user engagement, and incentive structure. Further, the AI/ML trainers leverage
    ecosystem datasets to effectively facilitate the development, training, testing,
    and evaluation of AI/ML models, subsequently delivering them to the ecosystem.
    Customers have the option to perform single, non-recurring transactions (purchase/sale)
    of data or opt for a subscription-based model that provides ongoing access to
    a meticulously updated dataset and an artificial intelligence/machine learning
    model. Users can engage with a marketplace either through direct interaction or
    by utilizing an external user interface that leverages AI/ML model predictions
    derived from the underlying datasets. 4. Advantages for Modern Apiculture In the
    context of apiculture, this pertains to the identification of a disease, such
    as American foulbrood, varroa mites, or colony collapse disorder, the prediction
    of honey production, or swarming activities, taking into account appropriately
    curated datasets based on the relevant geographical location. The data marketplace
    implements advanced search algorithms and filters to facilitate easy discovery
    of relevant datasets and a user-friendly interface for (non-)technical users.
    With regards to disease prediction, data providers indicate occurrences of diseases
    in certain areas, thus allowing for ML-based predictions on how they spread and
    advising nearby beekeepers on how to react appropriately. Other sensor inputs,
    e.g., audio or weight, to not only detect but also predict swarming behavior.
    Similarly, to the disease use-case, nearby beekeepers benefit from either nearby
    swarming activities or swarming activities in regions/scenarios that closely resemble
    the conditions of individual beekeepers. There are four distinct roles that have
    been identified, namely the collector, the ML modeler, the model user (such as
    the API of a mobile phone application), and the beekeeper. The data collector
    is responsible for compiling and organizing the datasets in accordance with established
    standards, metainformation, and data harmonization protocols before transmitting
    them to the designated data storage system. The model user compensates the data
    collector every time the ML model is utilized, either in whole or in part. The
    user model furnishes information to the beekeeper, for which compensation is rendered.
    Beekeepers contribute to data collection efforts by offering valuable reference
    data, such as disease information encompassing the position, incidence, and severity.
    Subsequently, the impact on modern apiculture can be classified as the emergence
    of a potential role for beekeepers as providers of machine learning training data.
    By enhancing the availability and quality of training data, it is possible to
    enhance the effectiveness of forecast and prediction tools. Consequently, this
    improvement facilitates the enhancement of the dependability of apiculture forecast
    systems. As a result, beekeeping practitioners can effectively adjust their management
    routines and make informed decisions. The objective is to cultivate an engaged
    community within the ecosystem, supported by dynamic forums, assistance centers,
    and a wealth of educational materials. 5. Conclusions We present an ecosystem-approach
    that facilitates scientists and industry stakeholders in the field of apiculture
    to enhance data accessibility. This approach introduces an open-data ecosystem
    that offers diverse incentives to its various stakeholders. It presents a potential
    approach for addressing the fragmented data storage and sharing across multiple
    islands, by establishing connectivity between modified datasets and metadata sourced
    from diverse stakeholders. It assists in addressing the existing limitation of
    machine learning models, whereby significant improvements in accuracy can be achieved
    by leveraging extensive sets of labeled training data. The roles and responsibilities
    of those involved in data collection, modeling, and the use of the model have
    been clearly outlined. Author Contributions All authors contributed equally to
    the writing of the manuscript. All authors have read and agreed to the published
    version of the manuscript. Funding We acknowledge financial support by Open Access
    Publishing Fund of Clausthal University of Technology. Institutional Review Board
    Statement Not applicable. Data Availability Statement No new data were created
    or analyzed in this study. Data sharing is not applicable to this article. Conflicts
    of Interest The authors declare no conflicts of interest. References Abrol, D.
    Foraging in honeybees Apis cerana indica F. and A. dorsata F.(Hymenoptera: Apidae)-activity
    and weather conditions. J. Indian Inst. Sci. 1992, 72, 395. [Google Scholar] Chen,
    W.S.; Wang, C.H.; Jiang, J.A.; Yang, E.C. Development of a Monitoring System for
    Honeybee Activities. In Proceedings of the 2015 9th International Conference on
    Sensing Technology (ICST), Auckland, New Zealand, 8–10 December 2015; pp. 745–750.
    [Google Scholar] Abdollahi, M.; Giovenazzo, P.; Falk, T.H. Automated Beehive Acoustics
    Monitoring: A Comprehensive Review of the Literature and Recommendations for Future
    Work. Appl. Sci. 2022, 12, 3920. [Google Scholar] [CrossRef] Meikle, W.; Holst,
    N. Application of Continuous Monitoring of Honeybee Colonies. Apidologie 2015,
    46, 10–22. [Google Scholar] [CrossRef] Cecchi, S.; Spinsante, S.; Terenzi, A.;
    Orcioni, S. A Smart Sensor-based Measurement System for Advanced Bee Hive Monitoring.
    Sensors 2020, 20, 2726. [Google Scholar] [CrossRef] [PubMed] Zacepins, A.; Brusbardis,
    V.; Meitalovs, J.; Stalidzans, E. Challenges in the Development of Precision Beekeeping.
    Biosyst. Eng. 2015, 130, 60–71. [Google Scholar] [CrossRef] Zacepins, A.; Stalidzans,
    E.; Meitalovs, J. Application of Information Technologies in Precision Apiculture.
    In Proceedings of the 13th International Conference on Precision Agriculture (ICPA
    2012), St. Louis, MI, USA, 31 July–3 August 2012. [Google Scholar] Baensch, S.;
    Tscharntke, T.; Ratnieks, F.L.; Haertel, S.; Westphal, C. Foraging of honey bees
    in agricultural landscapes with changing patterns of flower resources. Agric.
    Ecosyst. Environ. 2020, 291, 106792. [Google Scholar] [CrossRef] Arribas, F.A.;
    Hortelano, M.R. An Internet of Living Things based device for a better understanding
    of the state of the honey bee population in the hive during the winter months.
    Comput. Electron. Agric. 2023, 212, 108026. [Google Scholar] [CrossRef] Zgank,
    A. IoT-based bee swarm activity acoustic classification using deep neural networks.
    Sensors 2021, 21, 676. [Google Scholar] [CrossRef] [PubMed] Bourouis, A.; Benahmed,
    T.; Mokeddem, K.A.M.; Benahmed, K.; Lairedj, A.S. IoT for Smart Apiculture: Issues
    and Solutions. In Proceedings of the 2022 3rd International Conference on Embedded
    & Distributed Systems (EDiS), Oran, Algeria, 2–3 November 2022; pp. 61–66. [Google
    Scholar] Catania, P.; Vallone, M. Application of a Precision Apiculture System
    to Monitor Honey Daily Production. Sensors 2020, 20, 2012. [Google Scholar] [CrossRef]
    [PubMed] Grammalidis, N.; Stergioulas, A.; Avramidis, A.; Karystinakis, K.; Partozis,
    A.; Topaloudis, A.; Kalantzi, G.; Tananaki, C.; Kanelis, D.; Liolios, V.; et al.
    A Smart Beekeeping Platform Based on Remote Sensing and Artificial Intelligence.
    In Proceedings of the Ninth International Conference on Remote Sensing and Geoinformation
    of the Environment, Ayia Napa, Cyprus, 3–5 April 2023; Volume 12786, pp. 92–99.
    [Google Scholar] Ramachandran, G.S.; Radhakrishnan, R.; Krishnamachari, B. Towards
    a Decentralized Data Marketplace for Smart Cities. In Proceedings of the 2018
    IEEE International Smart Cities Conference (ISC2), Kansas City, MO, USA, 16–19
    September 2018; pp. 1–8. [Google Scholar] Lawrenz, S.; Sharma, P.; Rausch, A.
    Blockchain Technology as an Approach for Data Marketplaces. In Proceedings of
    the 2019 International Conference on Blockchain Technology, Honolulu, HI, USA,
    15–18 March 2019; pp. 55–59. [Google Scholar] Sledevič, T. The Application of
    Convolutional Neural Network for Pollen Bearing Bee Classification. In Proceedings
    of the The Application of Convolutional Neural Network for Pollen Bearing Bee
    Classification, Vilnius, Lithuania, 8–10 November 2018; pp. 55–59. [Google Scholar]
    [CrossRef] Uthoff, C.; Homsi, M.N.; von Bergen, M. Acoustic and Vibration Monitoring
    of Honeybee Colonies for Beekeeping-relevant Aspects of Presence of Queen Bee
    and Swarming. Comput. Electron. Agric. 2023, 205, 107589. [Google Scholar] [CrossRef]
    Hadjur, H.; Ammar, D.; Lefèvre, L. Toward an Intelligent and Efficient Beehive:
    A Survey of Precision Beekeeping Systems and Services. Comput. Electron. Agric.
    2022, 192, 106604. [Google Scholar] [CrossRef] Zacepins, A. Application of bee
    hive temperature measurements for recognition of bee colony state. In Applied
    Information and Communication Technologies; Latvia University of Agriculture:
    Jelgava, Latvia, 2012; pp. 16–221. [Google Scholar] Ugochukwu, A.I.; Phillips,
    P.W.B. Data sharing in plant phenotyping research: Perceptions, practices, enablers,
    barriers and implications for science policy on data management. Plant Phenome
    J. 2022, 5, e20056. [Google Scholar] [CrossRef] Paulus, S.; Leiding, B. Can Distributed
    Ledgers Help to Overcome the Need of Labeled Data for Agricultural Machine Learning
    Tasks? Plant Phenomics 2023, 5, 0070. [Google Scholar] [CrossRef] [PubMed] Hales,
    D. From Selfish Nodes to Cooperative Networks-emergent Link-based Incentives in
    Peer-to-Peer Networks. In Proceedings of the Fourth International Conference on
    Peer-to-Peer Computing, Zürich, Switzerland, 27 August 2004; pp. 151–158. [Google
    Scholar] Leiding, B.; Sharma, P.; Norta, A. The Machine-to-Everything (M2X) Economy:
    Business Enactments, Collaborations, and e-Governance. Future Internet 2021, 13,
    319. [Google Scholar] [CrossRef] Mason, P. PostCapitalism: A Guide to Our Future;
    Penguin: London, UK, 2015. [Google Scholar] Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2024 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Guruprasad, S.M.; Leiding, B. BeeOpen—An Open Data
    Sharing Ecosystem for Apiculture. Agriculture 2024, 14, 470. https://doi.org/10.3390/agriculture14030470
    AMA Style Guruprasad SM, Leiding B. BeeOpen—An Open Data Sharing Ecosystem for
    Apiculture. Agriculture. 2024; 14(3):470. https://doi.org/10.3390/agriculture14030470
    Chicago/Turabian Style Guruprasad, Shreyas M., and Benjamin Leiding. 2024. \"BeeOpen—An
    Open Data Sharing Ecosystem for Apiculture\" Agriculture 14, no. 3: 470. https://doi.org/10.3390/agriculture14030470
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations No citations
    were found for this article, but you may check on Google Scholar Article Access
    Statistics Article access statistics Article Views 14. Mar 16. Mar 18. Mar 20.
    Mar 22. Mar 24. Mar 26. Mar 28. Mar 30. Mar 1. Apr 3. Apr 5. Apr 7. Apr 0 200
    400 600 800 For more information on the journal statistics, click here. Multiple
    requests from the same IP address are counted as one view.   Agriculture, EISSN
    2077-0472, Published by MDPI RSS Content Alert Further Information Article Processing
    Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines
    For Authors For Reviewers For Editors For Librarians For Publishers For Societies
    For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit
    SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agriculture (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: BeeOpen—An Open Data Sharing Ecosystem for Apiculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kumar R.
  - Kumar P.
  - Aljuhani A.
  - Islam A.K.M.N.
  - Jolfaei A.
  - Garg S.
  citation_count: '9'
  description: The recent development of Internet of Things (IoT) and unmanned aerial
    vehicles (UAVs) has revolutionized traditional agriculture with intelligence and
    automation. In a typical intelligent agriculture (IA) ecosystem, massive and real-time
    data are generated, analyzed, and sent to the cloud server (CS) for the purpose
    of addressing complex agricultural issues, such as yield prediction, water feed
    calculation, and so on. This helps farmer and associated stakeholders to take
    correct decision that improves the yield and quality of agricultural product.
    However, the distributed nature of IA entities and the usage of insecure wireless
    communication open various challenges related to data sharing, monitoring, storage,
    and further makes the entire IA ecosystem vulnerable to various potential attacks.
    In this article, we exploit deep learning and smart contract to propose a new
    IoT-enabled IA framework for enabling secure data sharing among its various entities.
    Specifically, first we develop new authentication and key management scheme to
    ensure secure data transmission in IoT-enabled IA. The encrypted transactions
    are then used by the CS to analyze and further detect intrusions by a novel deep
    learning architecture. In CS, the smart contract (SC)-based consensus mechanism
    is executed on legitimate transactions that verifies and adds the formed blocks
    into blockchain by a peer-to-peer CSs network. In comparison to existing competing
    security solutions, a rigorous comparative research demonstrates that the proposed
    approach provides greater security and more utility characteristics.
  doi: 10.1109/MIS.2022.3201553
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Intelligent Systems
    >Volume: 38 Issue: 4 Deep Learning and Smart Contract-Assisted Secure Data Sharing
    for IoT-Based Intelligent Agriculture Publisher: IEEE Cite This PDF Randhir Kumar;
    Prabhat Kumar; Ahamed Aljuhani; A. K. M. Najmul Islam; Alireza Jolfaei; Sahil
    Garg All Authors 19 Cites in Papers 2879 Full Text Views Open Access Under a Creative
    Commons License Abstract Document Sections System Models Proposed Framework Security
    Analysis Performance Analysis Conclusion Authors Figures References Citations
    Keywords Metrics Abstract: The recent development of Internet of Things (IoT)
    and unmanned aerial vehicles (UAVs) has revolutionized traditional agriculture
    with intelligence and automation. In a typical intelligent agriculture (IA) ecosystem,
    massive and real-time data are generated, analyzed, and sent to the cloud server
    (CS) for the purpose of addressing complex agricultural issues, such as yield
    prediction, water feed calculation, and so on. This helps farmer and associated
    stakeholders to take correct decision that improves the yield and quality of agricultural
    product. However, the distributed nature of IA entities and the usage of insecure
    wireless communication open various challenges related to data sharing, monitoring,
    storage, and further makes the entire IA ecosystem vulnerable to various potential
    attacks. In this article, we exploit deep learning and smart contract to propose
    a new IoT-enabled IA framework for enabling secure data sharing among its various
    entities. Specifically, first we develop new authentication and key management
    scheme to ensure secure data transmission in IoT-enabled IA. The encrypted transactions
    are then used by the CS to analyze and further detect intrusions by a novel deep
    learning architecture. In CS, the smart contract (SC)-based consensus mechanism
    is executed on legitimate transactions that verifies and adds the formed blocks
    into blockchain by a peer-to-peer CSs network. In comparison to existing competing
    security solutions, a rigorous comparative research demonstrates that the proposed
    approach provides greater security and more utility characteristics. Published
    in: IEEE Intelligent Systems ( Volume: 38, Issue: 4, July-Aug. 2023) Page(s):
    42 - 51 Date of Publication: 31 August 2022 ISSN Information: DOI: 10.1109/MIS.2022.3201553
    Publisher: IEEE CCBY - IEEE is not the copyright holder of this material. Please
    follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain
    full-text articles and stipulations in the API documentation. According to a UN
    study, the world’s population will reach 9.8 billion people by 2050. This rise
    in population demands nearly 70% increase in current food production rate. Agriculture
    is the world’s most important industry, contributing significantly to social stability
    and economic progress.[1] The transition from traditional agriculture (also known
    as Agriculture 1.0) to intelligent agriculture (IA) (also known as Agriculture
    4.0) is the only alternative to meet the growing demand efficiently.[2] IA is
    a new approach that uses the current information and communication technologies
    in conjunction with conventional farming practices to improve the quality and
    quantity of agricultural products.[3] The IA helps in intelligent decision making
    and provides various personalized services through different key technologies
    including, Internet of Things (IoT), unmanned aerial vehicles (UAVs), cloud computing,
    and artificial intelligence.[4] In a typical IA ecosystem, several data acquisition
    technologies, such as IoT devices and actuators are deployed to collect both field
    and crop growth information. In addition, UAVs are used to gather data from IoT
    devices and, in certain cases, they may collect data directly from particular
    flying zones (FZ). The data acquired are forwarded to cloud servers (CSs) for
    the purpose of addressing complex agricultural issues, such as yield prediction,
    water feed calculation, and so on, assisting farmers and other stakeholders in
    making smart decisions that increase agricultural production and quality.[5] However,
    the distributed nature of IA entities (including IoT devices, UAVs, and CSs),
    and the usage of insecure wireless communication open various challenges related
    to data sharing, monitoring, storage, and further makes the entire IA ecosystem
    vulnerable to various potential attacks including impersonation, replay, man-in-the-middle,
    data poisoning, brute-force, physical smart devices, and UAVs capture attacks.[6]
    In the literature, several key management mechanisms, blockchain- and SC-based
    authentication strategies for enhancing security of IoT-enabled IA have been put
    forth. For instance, works presented in Bera et al.[7] Vangala et al.[8] Rahman
    et al.,[9] and Vangala et al.[10] were mainly based on user authentication/authorization
    and session key management. However, all abovementioned solution used blockchain
    as a distributed storage mechanism to store entire agricultural transactions.
    Unfortunately, blockchain becomes inefficient when complete transaction are offloaded
    to the distributed ledger but works better with data hashes.[11] Furthermore,
    we believe that all of the abovementioned authorization and authentication techniques
    are insufficient for addressing security issues in IoT-enabled IA networks since
    they only ensure that data transmission is secure but do not guarantee or check
    the type of data (attack or normal) before it is added to blockchain.[12],[13]
    Motivated from the aforementioned challenges, we exploit deep learning and SC
    to propose a new IoT-enabled IA framework for enabling secure data sharing among
    its various entities. Specifically, first we develop new authentication and key
    management scheme to ensure secure data transmission in IoT-enabled IA. The encrypted
    transactions are then used by the CS to analyze and further detect intrusions
    by a novel deep learning architecture. The latter is a novel architecture that
    is designed using a contractive sparse autoencoder (CSAE), gated recurrent unit
    (GRU) networks, multilayer perceptrons (MLPs), and softmax classifier for attack
    detection. In CS, the SC-based proof of authority (PoA-Aura) consensus mechanism
    is executed on legitimate transactions that verifies and adds the formed blocks
    into interplanetary file system (IPFS) by a peer-to-peer (P2P) CSs network. The
    returned crypographic hash if further stored on blockchain. System Models We introduce
    a network model in this part, followed by a threat model, both of which were used
    in the design of the proposed framework. Network Model The network model of the
    proposed framework is illustrated in Figure 1. In this model, we have mainly eight
    entities, trusted authority (TA), IoT device (IoT D ), UAV, intrusion detection
    system (IDS), CS, IPFS, SC, and blockchain network (BN). In IoT-enabled IA, the
    TA is responsible to register IoT D , UAV, and CS prior to their deployment. Initially,
    the authentication and key management phase includes mutual authentication and
    key agreement between two IoT D , between IoT D and its associated UAV, and between
    UAV and CS using the established session keys. This phase ensures secure communication
    among the participating entities. Once the communications starts, the IoT D placed
    in each FZ has the capability to extract crop readings from its zone. Each FZ
    is associated with a UAV that collects the readings from Io T D . These data or
    transactions include the status of standing crops, quantity of chemicals used
    as pesticides at various locations, and so on. These transactions are forwarded
    to CS , where the proposed IDS checks and marks the transaction as normal and
    abnormal based on the behavior. The valid transaction are then used by each CS
    for mining using SC. Specifically, each CS mines and stores the valid transactions
    into IPFS, keeping the returned transaction hash into the global BN . Figure 1.
    Network model of proposed framework. Show All The IPFS hashes of the verified
    transactions are packed into the current block by each miner, who also creates
    the merkle root and block hash while calculating the subsequent block. If C S
    A calculates a block hash that satisfies the difficulty, it will be broadcast
    to miners C S B , C S C , and C S D , and so on. After receiving the block, miners
    C S B , C S C , and C S D must check the transactions and block hash. The majority
    of transactions received by miners C S B , C S C , and C S D throughout the mining
    process are similar to those received by miner C S A . They only alter a small
    number of transactions in their transaction pool because of network transmission
    delays. As a consequence, the vast majority of IPFS hashes for transactions in
    the new block match those in miner C S B , C S C , and C S D ’s personal transaction
    pool. If the local transaction pools of miners C S B , C S C , and C S D include
    the IPFS hash of a transaction in a block delivered by miner C S A , then the
    transaction has already been confirmed by these miners and does not require downloading
    from IPFS. The IPFS network must be accessed using the proper IPFS hashes in order
    to receive the data for the remaining transactions. The authenticity of the block
    and the transactions would then be verified. The BN could then be updated with
    the new block. Threat Model The “Dolev-Yao” threat model, often known as the DY
    model, is the first one we employ in this article.[14] This theory states that
    an adversary designated as A has the ability to not only intercept, alter, or
    delete communication messages between any two participants, but also to introduce
    harmful messages into the channel. (TA) stands for trusted authority, which is
    meant to be a totally trustworthy organization. Io T D and UAV are regarded as
    untrusted entities, although CS are regarded as semitrusted. The Canetti and Krawczyk
    adversary model (also known as CK-adversary), which is another threat model, is
    also used.[15] An attacker A in this scenario has the ability to hijack the session
    key/state on a live session between two network users, and steal confidential
    credentials. Proposed Framework Deep Learning Module In this section, a deep learning
    model is proposed that is used to detect intrusion in the IoT-enabled IA ecosystem.
    When dealing with large amounts of data in IoT-enabled IA, deep learning models
    surpass conventional statistical or machine learning techniques. This phenomenon
    has been discovered and validated in a number of research articles and publications.[1],[11]
    As a consequence, when compared to other statistical or machine learning methodologies,
    deep learning is a better option. This article introduces a novel deep learning
    architecture for developing a better IDS for IoT-enabled IA. In this approach,
    we have combined CSAE, GRU network, MLPs, and softmax classifier. Each of them
    are explained in the following. Contractive Sparse AutoEncoder Layer The autoencoder
    (AE) is a technique for unsupervised learning that consists of two components:
    the encoder and decoder. As seen here, the encoder uses a deterministic affine
    transformation matrix with nonlinearity to transform the input D T into a hidden
    representation Y T [4] Y T =F( Ł 1 D T + ß 1 ) (1) View Source where Lstrok; 1
    is the weight between the input D T , and the hidden representation Y T and ß
    1 denotes the bias. The Y T variable is used by the decoder to recreate the output
    D T ˆ D T ˆ = F ′ ( Ł 2 Y T + ß 2 ) (2) View Source where the weight of the hidden
    representations Y T , and D T ˆ is denoted by Ł 2 and bias is represented by ß
    2 . D T ˆ is the name given to the reconstruction of D T . The purpose of AE is
    to minimize the reconstruction error for a given training set, which is performed
    by decreasing the following cost function while learning the AE parameters Ł 1
    ˆ , Ł 2 ˆ , ß 1 ˆ , ß 2 ˆ : { Ł 1 ˆ , Ł 2 ˆ , ß 1 ˆ , ß 2 ˆ } = argmin Ł 1 , Ł
    2 , ß 1 , ß 2 { L AE (Ł,ß)} = argmin Ł 1 , Ł 2 , ß 1 , ß 2 { 1 2N ∑ T=1 N L( D
    T , D T ˆ ) + λ 2 ∑ r=1 2 ∥ D T ∥ 2 F }. (3) View Source The training sample and
    its reconstruction output are represented by D T and D T ˆ , respectively. N is
    the total number of training samples, and L( D T , D T ˆ ) represents the loss
    function. Using square error or cross entropy, this can be decreased. λ stands
    for regularization term, which aids model generalization. From the original dataset,
    the sparse autoencoder (SAE) attempts to learn sparse yet inherent features. The
    SAE loss function is stated as, and it is produced by adding a sparsity penalty
    term to the AE loss function[16] L SAE ( Ł 1 ˆ , Ł 2 ˆ , ß 1 ˆ , ß 2 ˆ )= L AE
    (Ł,ß)+η ∑ J=1 M KL(ϱ∥ ϱ ^ J ) (4) View Source where η determines the weight of
    the sparse penalty item To produce a fairly sparse representation, it is typical
    to use a small value, such as 0.05. Most nodes in the hidden layer are suppressed
    by SAE using the KL divergence. The following formula is used to determine the
    KL divergence: ∑ J=1 M KL(ϱ∥ ϱ ^ J )= ∑ J=1 M {(1−ϱ)log( 1−ϱ 1− ϱ ˆ )+ϱlog ϱ ϱ
    ˆ j }. (5) View Source The average activation value of all the training samples
    on the j th neuron in the hidden layer is ϱ ^ J , and the sparsity parameter is
    ϱ . As a result, we may write the SAE loss function as { Ł 1 ˆ , Ł 2 ˆ , ß 1 ˆ
    , ß 2 ˆ } = argmin Ł 1 , Ł 2 , ß 1 , ß 2 { L SAE (Ł,ß)} = argmin Ł 1 , Ł 2 , ß
    1 , ß 2 { 1 2N ∑ T=1 N L( D T , D T ˆ ) + λ 2 ∑ r=1 2 ∥ D T ∥ 2 F +η ∑ J=1 M KL(ϱ∥
    ϱ ^ J )}. (6) View Source Finally, the input data D T of the aforementioned cost
    function is given an explicit regularizer in the form of a Jacobian matrix J F
    ( D T ) . The model becomes less sensitive to modest changes in the input values
    as a result of this process. It simply instructs the neurons to ignore little
    data changes and respond only to larger, more meaningful ones. This “penalty”
    is only applied during the training of the model; therefore, it has no bearing
    when the network is employed. As a result, the cost function of the CSAE can be
    written as follows: { Ł 1 ˆ , Ł 2 ˆ , ß 1 ˆ , ß 2 ˆ } = argmin Ł 1 , Ł 2 , ß 1
    , ß 2 { L CSAE (Ł,ß)} = argmin Ł 1 , Ł 2 , ß 1 , ß 2 { 1 2N ∑ T=1 N L( D T , D
    T ˆ ) + λ 2 ∑ r=1 2 ∥ J F ( D T ) ∥ 2 F . +η ∑ J=1 M KL(ϱ∥ ϱ ^ J )} (7) View Source
    where ∥ J F ( D T ) ∥ 2 F represents the square of the Jacobian matrix’s Frobenius
    norm. For attack detection, the acquired features are fed into the following module,
    which combines GRU+MLP+softmax classifiers. GRU Network Layer The GRU network
    receives the low-dimensional feature vector from CSAE layer. The GRU can be single-layered
    or multilayered (stacked), depending on the hyperparameter optimization. The D
    T is the input for a given time step T , and the computations are R T =σ( D T
    Ł R + H T−1 Ł R + ß R ) Z T =σ( D T Ł Z + H T−1 Ł Z + ß Z ) C T =tanh( D T Ł C
    + H T−1 Ł C ⊙ R T + ß C ) H T = Z T ⊙ H T−1 +(1− Z T ⊙ C T ). (8) View Source
    The previous time-hidden step’s state is H T−1 , the reset gate is R T , the update
    gate is Z T , the weight parameters are Ł R and Ł Z , and the biases are ß R and
    ß Z . C T is the hidden candidate state, whereas H T is the new state. ReLU function
    is denoted by the letter ⊙ , which stands for Hadamard product. The output of
    a multilayered GRU network is the hidden state H T of the preceding layer, and
    there is no dropout between the layers. MLPs Layer The dense layer of MLP uses
    the output vector of the GRU layer H T to represent the output activation of its
    node in the following way: D 1 (α) D 2 (M) =f( Ł T 1 H T + ß 1 ) =f( Ł T 2 D 1
    (α)+ ß 2 ). (9) (10) View Source The weight matrix Ł 1 connects the output of
    the GRU layer with the first hidden layer, and the bias vector ß 1 is connected
    with that layer. where Ł 2 is the weight matrix linking the first and last hidden
    layers, and ß 2 is the bias associated with the weight matrices. Softmax Classifier
    Layer Finally, the softmax classifier is integrated with the proposed deep learning
    architecture to determine the likelihood that the projected type belongs to each
    category. We use (11) to compute it, where M is the previous layer’s output and
    softmax’s input, C is its dimension, and k is the probability of the projected
    type belonging to a certain class. Equation (12) is used to compute the loss function
    f( M k ) LOSS(y,M) = e M k ∑ C j=1 e M j ,k=1,…,C =− ∑ k=0 C y k log(f( M k ))).
    (11) (12) View Source SC Module In this section, we have discussed the steps used
    by the proposed SC-based authentication and key management module. Initialization
    Phase This phase explores, how TA chooses the parameters to register the entities
    of framework. The detailed process is discussed in the following. First, nonsingular
    elliptic curve is selected by the TA , i.e., E t (β , γ ) S 2 = T 3 + αT + γ (mod
    W n ), where W n is a large prime value and β , γ ∈ V ∗ = {1,2,3, … , W n } are
    the two points, i.e, infinity point and zero point ZO . Further, the TA chooses
    a base point BP ∈ E t (β , γ ) of order U as bigger as W n . Furthermore, TA chooses
    a cryptographic hash function (HF) (.) using SHA-512. In addition, TA chooses
    an identity I D T A , and picks a private key T A P R ∈ V ∗ and evaluates a public
    key T A P B = T A P R * BP . Finally, the TA preserve a private key ( T A P R
    ) secret and disseminates public parameters{( E t (β , γ ), BP , (HF)(.) , T A
    P B )}. Registration Phase This phase describes a registration process of each
    entities and shares the communication parameters. a)Io T D Registration: The TA
    registers an IoT nodes IoT D , where IoT D ={1,2, …, IoT D } Step-1: The TA chooses
    an unique identity I D I oT for registration of IoT devices. Further, TA evaluates
    a pseudoidentity PSI D I oT D = H( I D I oT D || C IoT PR || TST P I oT D ), where
    TST P I oT D is a registration time of IoT D and generates a certificate CR T
    I oT D =T A P R+ H( PSI D I oT D || C IoT PB || T A P B ) * C IoT PR mod ( W n
    ). Step-2: TA chooses a random number RN IoT D ∈ V ∗ , and evaluates a partial
    private key, i.e., PP R I oT D = H( T A P R || C IoT PR || RN IoT D ), and evaluates
    a public key P B I oT D = PP R I oT D * B for each IoT D and preserves registration
    information ( PSI D I oT D , PP R I oT D , CR T I oT D ) on board units OBU D
    of IoT devices IoT D . Finally, TA deletes a partial private key PP R I oT D and
    disseminates the public key P B I oT D for communication. b) UAV Registration:
    The TA registers a UAV UAV t , where UAV t ={1,2, …, UAV t }. Step-1: The TA chooses
    an unique identity I D U AV for registration of UAV. Further, TA evaluates a pseudoidentity
    PSI D U AV t H( I D U AV t || C UAV PR || TST P U AV t ), where TST P U AV t is
    a registration time UAV r and produces certificate CR T U AV t = T A P R + H(
    PSI D U AV t || C UAV PB || T A P B ) * C UAV PR mod ( W n ). Step-2: TA chooses
    a random number RN UAV t ∈ V ∗ , and evaluates a partial private key PP R U AV
    t = H( T A P R || C UAV PR || RN UAV t ), and evaluates a public key P B U AV
    t = PP R U AV t * B for each UAV t preserves a registration information ( PSI
    D U AV t , PP R U AV t , CR T U AV t ) on its borad unit OBU t of UAV UAV t .
    Finally, TA deletes partial private key PP R U AV t and disseminates a public
    key P B U AV t for communication. The detail of UAV, i.e., ( CR T U AV t , P B
    U AV t , PSI D U AV t , I D U AV t ) are disseminated to CS l . c) CS Registration:
    The TA register CS l , where CS l ={1,2, …, CS l }. Step-1: The TA chooses a unique
    identity I D C S for individual CS l registration. Next, TA it evaluates pseudo
    identity PSI D C S l H( I D C S l || C CS PR || TST P C S l ), where TST P C S
    l is a time of registration of cloud severs CS l and produces a certificate CR
    T C S l = T A P R + H( PSI D C S l || C CS PB || T A P B ) * C CS PR mod ( W n
    ). Step-2: A random number is chosen by TA, i.e., RN CS l ∈ V ∗ , and evaluates
    a partial private key, i.e., PP R C S l = H( T A P R || C CS PR || RN CS l ),
    and evaluates a public key P B C S l = PP R C S l * B for each CS l and preserves
    a registration information ( PSI D C S l , PP R C S l , CR T C S l ) on its borad
    unit OBU l of cloud CS l . Finally, TA deletes a partial private key PP R C S
    l and disseminates a public key P B C S l for communication. Key Agreement and
    Authentication Phase We have discussed various steps used in key agreement and
    authentication. i) IoT nodes to UAV Authentication Step-1: IoT D chooses an unique
    random number d r 1 ∈ Z q with valid timestamp TST P 1 and evalautes L 1 = h (
    PSI D I oT D || PP R I oT D || d r 1 || TST P 1 ). Further, IoT D encrypt the
    L 1 as L 2 = E P B U AV ( L 1 ). Furthermore, IoT D evaluates the L 3 = h( L 2
    || CR T I oT D || PSI D I oT D || PP R I oT D || TST P 1 ) and makes a request
    message M 1 ={ PSI D I oT D , PP R I oT D , TST P 1 , L 2 , L 3 } and transmit
    to UAV through open channel. Step-2: After receiving successful message M 1 timestamp
    gets validated TSTP ∗ 1 , using UAV | TSTP ∗ 1 – TST P 1 | < ΔT . After successful
    verification of timestamp, UAV checks certificates using CR T I oT D . B = P B
    T A + h( P B I oT D || P B T A ) if it matches successful then UAV receives PSI
    D I oT D respect to PP R I oT D from the database and evaluates L ∗ 3 = h ( L
    2 || PSI D I oT D || PP R I oT D || CR T I oT D ) to verify whether L ∗ 3 = L
    3 . If it matches successful then UAV uses decryption L 2 as L 1 = D PR UAV (
    L 2 ). Step-3: Further, UAV picks a unique random number UAV r 1 ∈ Z q and valid
    timestamp gets recorded TST P 2 and generates a temporary identity PP R I oT new
    D and evalautes UA V 1 = h( PSI D I oT D || PSI D U AV || UAV r 1 || TST P 2 )
    and uses encryption UA V 1 as UA V 2 = E P B I oT D (UA V 1 ). Next, UAV evaluates
    a session key SE S U AV = h( PP R I oT new D || L 1 || UA V 1 || TST P 1 || TST
    P 2 ), PP R I oT ∗ D = PP R I oT new D ⊕ h( PSI D U AV || PP R I oT D || TST P
    2 ), and UA V 3 =h( PP R I oT ∗ D || UA V 1 || CR T U AV || PSI D U AV || TST
    P 2 ) and creates reply message M 2 = { PP R I oT ∗ D , UA V 2 , UA V 2 , CR T
    U AV , PSI D U AV , TST P 2 } and transmit to IoT D through open channel. Step-4:
    After successful recieve of reply message ( M 2 ) timestamp gets validated TSTP
    ∗ 2 by IoT D whether | TSTP ∗ 2 – TST P 2 | < ΔT is denoting correct timestamp
    if it matches successful, then IoT D checks certificate by CR T U AV . B = P B
    T A + h( P B U AV || P B T A ). Further, IoT D uses decryption, the UA V 2 computes
    UA V 1 = D PR IoT D (UA V 2 ). Next, IoT D evaluates UAV ∗ 3 = h( PP R I oT ∗
    D || UA V 1 || CR T U AV || PSI D U AV || TST P 2 ) and verify, if UAV ∗ 3 = UA
    V 3 then IoT D evaluates PP R I oT new D = PP R I oT ∗ D ⊕ h( PSI D U AV || PP
    R I oT D || TST P 2 ) and evaluates a session key SE S I oT D = h( PP R I oT new
    D || L 1 || UA V 1 || TST P 1 || TST P 2 ) and disseminates to UAV . Further,
    IoT D chooses a valid timestamp TST P 3 and verify session key SES V I oT D by
    SES V I oT D = h( SE S I oT D || TST P 3 ) and makes changes to PP R I oT D and
    PP R I oT new D in the database. Furthermore, IoT D generates acknowledgment message
    M 3 ={ SES V I oT D , TST P 3 } and transmit to UAV through open channel. Step-5:
    After successfully receiving the acknowledgement message M 3 timestamp gets validated
    TSTP ∗ 3 , by UAV | TSTP ∗ 3 – TST P 3 | < ΔT is denoting correct timestamp. Next
    UAV checks SES V I oT D = h ( SES V U AV || TST P 3 ). After successful match,
    the UAV makes establishment of the session key SES V I oT D (= SES V U AV ) by
    IoT D . Finally, UAV makes changes with PP R I oT D and PP R I oT new D in database.
    ii) UAV to CS Authentication Step-1: UAV t chooses a unique random number d r
    1 ∈ Z q and valid timestamp TST P 1 and evalautes L 1 = h ( PSI D U AV t || PP
    R U AV t || d r 1 || TST P 1 ). Further, UAV t makes encryption L 1 as L 2 = E
    P B C S ( L 1 ). Furthermore, UAV t evaluates L 3 = h( L 2 || CR T U AV t || PSI
    D U AV t || PP R U AV t || TST P 1 ) and creates message request for access M
    1 ={ PSI D U AV t , PP R U AV t , TST P 1 , L 2 , L 3 } and transmit to CS through
    open channel. Algorithm 1. Proof-of-Authority (Aura Algorithm) for Block Verification
    and Addition 1: State: CS ∈ I D s Set of miners, 2: C i = ( A i , F i ) A i local
    blockchain of node F i is a DAG of block A i and pointer F i 3: b denotes Block
    records 4: parent, preceding node of b 5: miners, who mines and sign block b 6:
    step, new block added to the network 7: duration, each step takes time to validate
    and added 8: function propose k 9: while True do 10: step ← CT / duration, CT
    → clock time 11: if k ∈ CS l ∧ step mod | CS l | == k then 12: b.parent ← lb(
    C i ), lb → last block 13: b.CS ← F i 14: b.step ← step 15: C i ← ( A i ∪ b, F
    i ∪ b.parent ) 16: disseminate ( C i ) 17: sleep(duration) 18: end if 19: end
    while 20: end Function 21: function Score A j , F j 22: return UNIT256-MAX * height(
    A j , F j ) - step-num( A i , F i ) 23: end Function 24: function Deliver A j
    , F j 25: if Score( A j , F j ) > Score( A i , F i ) then 26: Score( A i , F i
    ) ← Score( A j , F j ) 27: end if 28: end Function 29: function isDecidedb k 30:
    V ← {b i.UAV | b i ∈ A i ∧ b i.step >= b.step } return ( |V| * 2 > | CS l | )
    31: end Function Step-2: After successfully receiving the message M 1 timestamp
    gets validated TSTP ∗ 1 by CS | TSTP ∗ 1 – TST P 1 | < ΔT . If timestamp validated
    successfully, then CS checks certificate by CR T U AV t . B = P B T A + h( P B
    U AV t || P B T A ) if it matches successfully, then CS receives PSI D U AV t
    with respect to PP R U AV t from the database and evaluate L ∗ 3 = h ( L 2 ||
    PSI D U AV t || PP R U AV t || CR T U AV t ) to verify whether L ∗ 3 = L 3 . If
    it matches successfully, then CS uses decryption L 2 as L 1 = D PR CS ( L 2 ).
    Step-3: Further, CS picks a unique random number CS r 1 ∈ Z q and valid timestamp
    TST P 2 and generates temporary identity PP R U AV new t and evaluates C S 1 =
    h( PSI D U AV t || PSI D C S || CS r 1 || TST P 2 ) and uses encryption C S 1
    as C S 2 = E P B U AV t (C S 1 ). Furthermore, CS generates a session key SE S
    C S = h( PP R U AV new t || L 1 || C S 1 || TST P 1 || TST P 2 ), PP R U AV ∗
    t = PP R U AV new t ⊕ h( PSI D C S || PP R U AV t || TST P 2 ), and C S 3 = h(
    PP R U AV ∗ t || C S 1 || CR T C S || PSI D C S || TST P 2 ) and generates reply
    message M 2 = { PP R U AV ∗ t , C S 2 , C S 2 , CR T C S , PSI D C S , TST P 2
    } and transmit to UAV t through open channel. Step-4: After successfully receiving
    the reply message ( M 2 ) from CS, timestamp gets validated TSTP ∗ 2 by UAV t
    , i.e., | TSTP ∗ 2 – TST P 2 | < ΔT is denoting valid timestamp or invalid timestamp.
    If matches successfully, then UAV t checks for certificate using CR T C S . B
    = P B T A + h( P B C S || P B T A ). Further, UAV t uses decryption C S 2 to C
    S 1 = D PR UAV t (C S 2 ). Furthermore, UAV t evaluates CS ∗ 3 = h( PP R U AV
    ∗ t || C S 1 || CR T C S || PSI D C S || TST P 2 ) and verify CS ∗ 3 = C S 3 then
    UAV t evaluates PP R U AV new t = PP R U AV ∗ t ⊕ h( PSI D C S || PP R U AV t
    || TST P 2 ) and generates a session key SE S U AV t = h( PP R U AV new t || L
    1 || C S 1 || TST P 1 || TST P 2 ) and disseminates to CS . Furthermore, UAV t
    chooses valid timestamp TST P 3 and verify session key SES V U AV t by SES V U
    AV t = h( SE S U AV t || TST P 3 ) and makes changes with PP R U AV t and PP R
    U AV new t in the database. Finally, UAV t generates an acknowledgment message
    M 3 ={ SES V U AV t , TST P 3 } and transmit to CS through open channel. Step-5:
    After successfully receiving the acknowledgment message M 3 timestamp gets validated
    TSTP ∗ 3 by CS , i.e.; | TSTP ∗ 3 – TST P 3 | < ΔT is denoting valid timestamp
    or invalid timestamp. Further, CS checks SES V U AV t = h ( SES V C S || TST P
    3 ). If it is valid, then CS makes the establishment of session key SES V U AV
    t (= SES V C S ) to UAV t . Finally, CS makes changes PP R U AV t and PP R U AV
    new t in the database. Consensus Phase In this phase, the block verification and
    creation in the P2P network is discussed. IoT devices are authorized to create
    transactions in the network after a successful session verification, and after
    successful verification of transactions using consensus mechanism a block is created
    by the miners ( CS ) and added into the network. The block C i consists of two
    parameters, such as local blockchain of peer, i.e., A i and block pointer, i.e.,
    F i . The blocks are created after voting process, when more than 50% of voting
    is done by the peer nodes ( CS l ). The verification and block creations is illustrated
    in the Algorithm 1. Security Analysis This phase describes security analysis of
    the proposed model. It includes the formal verification to prevent various attacks.
    The detailed security analysis is summarized in the following. 1) Impersonation
    attack: An attacker can generate temporary identity IoT D , pseudoidentity PSI
    D I oT D , and partial private key PP R I oT D to perform operation as a legitimate
    user. Further, timestamp TST P I oT D can be generated for access permissions
    in the framework. However, session-based approach is applied to verify the unique
    identity of the devices IoT D . If all credential is matched then access permissions
    granted, else connections terminated immediately. Thus, this approach prevents
    from impersonation attack. 2) Insider attack: The attackers are privileged (can
    be insider) and can sniff all the credential, such as IoT device identification
    IoT D , pseudoidentity PSI D I oT D , and timestamp TST P I oT D . However, the
    access can only be permitted after session-based verification of the entities.
    Thus, the approach does not allow access without permissions and prevents from
    insider attack. 3) MITM and replay attack: The attacker may get the details of
    the IoT devices from insecure channel and communications, such as IoT D and timestamp
    TST P I oT D of registration. The attackers may send the details to the UAVs for
    making certain operations. However, the UAVs checks for the timestamp and verifies
    the session. However, it is difficult to compute all the credential at certain
    interval of time from id generation to session verification. Performing all the
    required evaluation at perfect time edge is difficult. Thus, the attacker cannot
    perform the MITM and replay attack. Performance Analysis The experiments were
    executed on a Tyrone PC with two 2.20 GHz Intel CPUs and 128 GB of RAM. The IDS
    was developed using the TensorFlow package Keras. The Ethereum Rinkeby network
    was used to create the SC module. The CSAE layer was trained for 10 epochs using
    two hidden layers containing (64,32) neurons, whereas GRU used two hidden layers
    with (64,32) neurons, MLP used two hidden layers with (16,8) and last layer has
    softmax classifier, Adam optimizer, ReLU activation, categorical cross-entropy
    as loss function, and 100 batch size for 10 epochs. The intrusion performance
    was evaluated using the CICIDS-2017 dataset, which contains 390,222 attack and
    2,035,505 normal instances.[17] We preprocessed both datasets using the techniques
    outlined in Kumar et al.’s[18] work with 70% training and 30% testing sets. This
    article employs a variety of performance metrics, such as, accuracy, detection
    rate, precision score, F1 score, and false alarm rate. However, to calculate these
    values, various parameters are used, such as, true positive ( α ), true negative
    ( γ ), false positive ( β ), and false negative ( δ ) determines correct classified
    attack instances, correct classified normal instances, normal observations classified
    as attack instances, and attack observations classified as normal instances, respectively;[1]
    Accuracy (AC): The percentage of all correctly identified regular and attack instances
    is determined by AC that is; AC= α+γ γ+δ+α+β . Detection rate (DR): The appropriate
    proportion of attacks identified is determined by DR or recall (RC) that is, DR=
    α δ+α . Precision (PR): PR is calculated by dividing the number of attack behaviors
    observed by the total number of observations classified as an attack, PR= α α+β
    . F1 Score: The weighted average of PR and DR/RC is determined by the F1 score,
    that is, F1=2∗ PR∗RC PR+RC . False alarm rate (FAR): FAR identifies cases of attack
    that were incorrectly identified, that is, FAR= β β+γ . Deep Learning Module Analysis
    The performance of DL approach is evaluated using a variety of assessment metrics.
    The proposed CSAE technique’s accuracy versus loss is depicted in Figure 2. Despite
    being employed to extract low-dimensional features, the CSAE method learned the
    dataset effectively, with a validation accuracy of 87.92% and a validation loss
    of 0.0546%. Table 1 shows the classwise performance of the proposed model. It
    is observed that the values for PR, DR, and F1 score is high, and FAR is close
    to 0%. We have also compared the DR of the proposed model with other baseline
    techniques in Table 2. It is seen that the proposed model outperformed these baselines
    for the majority of the vectors present in the dataset. Finally, as shown in Figure
    3, the overall performance of proposed model is compared with traditional approach.
    It is seen that the proposed model has achieved higher values and outperformed
    RF, DT, and NB. TABLE 1 Classwise performance analysis of proposed IDS TABLE 2
    Comparison of multivector DR (%) with some commonly used baseline techniques Figure
    2. Accuracy versus loss computed for CSAE technique. Show All Figure 3. Comparison
    against baseline algorithms. Show All SC Module Analysis The SC study shown in
    Figures 4 and 5 evaluate transaction upload time, block mining, block formation,
    and off-chain storage. The Figure 4(a), shows the upload time over IPFS storage
    layer for different transactions. Figures 4(b) and 5(a), show block mining and
    block creation time with different number of nodes (NS) and transactions (Tx).
    It can be observed that the execution time linearly increasing as peers increasing
    in the network. The Figure 5(b), shows off-chain storage size inn KB over IPFS
    for varying number of Tx. It can be observed that, storage size is increasing
    as the number of Tx increasing in the network. Figure 4. Analysis of SC module.
    (a) Tx Upload Time over IPFS. (b) Block Mining Time. Show All Figure 5. Analysis
    of SC module. (a) Block Creation Time. (b) Transaction size in KB over IPFS. Show
    All Conclusion In this article, we designed a DL and SC-assisted secure data sharing
    framework for IoT-based IA. Specifically, a novel DL module was designed that
    combined CSAE with GRU, MLPs, and softmax classifier to detect intrusion in the
    network. In SC module, first authentication, key management scheme was proposed.
    The, normal transactions received from DL-based IDS were mined by CS using SC-based
    PoA (aura algorithm) consensus technique. The validated transactions were added
    to the IPFS-based storage layer and returned cryptographic hash was stored on
    blockchain ledger. Experimental analysis of DL and SC module proves the effectiveness
    of the proposed framework. The future work includes the performance evaluation
    in terms of scalability and latency using different real-world datasets. Authors
    Figures References Citations Keywords Metrics More Like This Artificial Intelligence
    and Internet of Things for Sustainable Farming and Smart Agriculture IEEE Access
    Published: 2023 Enhanced Black Widow Optimization With Hybrid Deep Learning Enabled
    Intrusion Detection in Internet of Things-Based Smart Farming IEEE Access Published:
    2024 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Intelligent Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Learning and Smart Contract-Assisted Secure Data Sharing for IoT-Based
    Intelligent Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Emmi L.
  - Fernández R.
  - Gonzalez-de-Santos P.
  - Francia M.
  - Golfarelli M.
  - Vitali G.
  - Sandmann H.
  - Hustedt M.
  - Wollweber M.
  citation_count: '5'
  description: Autonomous robots in the agri-food sector are increasing yearly, promoting
    the application of precision agriculture techniques. The same applies to online
    services and techniques implemented over the Internet, such as the Internet of
    Things (IoT) and cloud computing, which make big data, edge computing, and digital
    twins technologies possible. Developers of autonomous vehicles understand that
    autonomous robots for agriculture must take advantage of these techniques on the
    Internet to strengthen their usability. This integration can be achieved using
    different strategies, but existing tools can facilitate integration by providing
    benefits for developers and users. This study presents an architecture to integrate
    the different components of an autonomous robot that provides access to the cloud,
    taking advantage of the services provided regarding data storage, scalability,
    accessibility, data sharing, and data analytics. In addition, the study reveals
    the advantages of integrating new technologies into autonomous robots that can
    bring significant benefits to farmers. The architecture is based on the Robot
    Operating System (ROS), a collection of software applications for communication
    among subsystems, and FIWARE (Future Internet WARE), a framework of open-source
    components that accelerates the development of intelligent solutions. To validate
    and assess the proposed architecture, this study focuses on a specific example
    of an innovative weeding application with laser technology in agriculture. The
    robot controller is distributed into the robot hardware, which provides real-time
    functions, and the cloud, which provides access to online resources. Analyzing
    the resulting characteristics, such as transfer speed, latency, response and processing
    time, and response status based on requests, enabled positive assessment of the
    use of ROS and FIWARE for integrating autonomous robots and the Internet.
  doi: 10.3390/agriculture13051005
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agriculture All Article Types Advanced   Journals
    Agriculture Volume 13 Issue 5 10.3390/agriculture13051005 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editors
    Jin Yuan Wei Ji Qingchun Feng Show more... Subscribe SciFeed Recommended Articles
    Related Info Link More by Authors Links Article Views 2039 Citations 7 Table of
    Contents Abstract Introduction Materials and Methods Experimental Assessment System
    Assessment and Discussion Conclusions Author Contributions Funding Institutional
    Review Board Statement Data Availability Statement Conflicts of Interest References
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle Exploiting the Internet Resources for Autonomous Robots in Agriculture
    by Luis Emmi 1,*, Roemi Fernández 1, Pablo Gonzalez-de-Santos 1, Matteo Francia
    2, Matteo Golfarelli 2, Giuliano Vitali 3, Hendrik Sandmann 4, Michael Hustedt
    4 and Merve Wollweber 4 1 Centre for Automation and Robotics (UPM-CSIC), 28500
    Arganda del Rey, Madrid, Spain 2 Department of Computer Science and Engineering
    (DISI), Alma Mater Studiorum-University of Bologna, 40127 Bologna, Italy 3 Department
    of Agricultural and Food Sciences (DISTAL), Alma Mater Studiorum-University of
    Bologna, 40127 Bologna, Italy 4 Laser Zentrum Hannover e.V., Hollerithallee 8,
    30419 Hannover, Germany * Author to whom correspondence should be addressed. Agriculture
    2023, 13(5), 1005; https://doi.org/10.3390/agriculture13051005 Submission received:
    16 March 2023 / Revised: 17 April 2023 / Accepted: 29 April 2023 / Published:
    2 May 2023 (This article belongs to the Special Issue Robots and Autonomous Machines
    for Agriculture Production) Download keyboard_arrow_down     Browse Figures Review
    Reports Versions Notes Abstract Autonomous robots in the agri-food sector are
    increasing yearly, promoting the application of precision agriculture techniques.
    The same applies to online services and techniques implemented over the Internet,
    such as the Internet of Things (IoT) and cloud computing, which make big data,
    edge computing, and digital twins technologies possible. Developers of autonomous
    vehicles understand that autonomous robots for agriculture must take advantage
    of these techniques on the Internet to strengthen their usability. This integration
    can be achieved using different strategies, but existing tools can facilitate
    integration by providing benefits for developers and users. This study presents
    an architecture to integrate the different components of an autonomous robot that
    provides access to the cloud, taking advantage of the services provided regarding
    data storage, scalability, accessibility, data sharing, and data analytics. In
    addition, the study reveals the advantages of integrating new technologies into
    autonomous robots that can bring significant benefits to farmers. The architecture
    is based on the Robot Operating System (ROS), a collection of software applications
    for communication among subsystems, and FIWARE (Future Internet WARE), a framework
    of open-source components that accelerates the development of intelligent solutions.
    To validate and assess the proposed architecture, this study focuses on a specific
    example of an innovative weeding application with laser technology in agriculture.
    The robot controller is distributed into the robot hardware, which provides real-time
    functions, and the cloud, which provides access to online resources. Analyzing
    the resulting characteristics, such as transfer speed, latency, response and processing
    time, and response status based on requests, enabled positive assessment of the
    use of ROS and FIWARE for integrating autonomous robots and the Internet. Keywords:
    precision agriculture; autonomous robots; artificial intelligence; IoT; cloud
    computing 1. Introduction The year 2022 ended with more than 8 billion inhabitants
    of the world. Most governments understand that feeding this vast and growing population
    is one of the significant challenges they must face in the coming years. Some
    associations have predicted that food production will need to increase by 70%
    to feed the entire population in 2050 [1]. In developed countries, cultivated
    land is close to its maximum output; therefore, the solution is oriented toward
    optimizing the available resources. Many different cultural and technological
    methods for increasing crop yield are being used. Some improve crop yields, but
    at the extra cost of increasing environmental pollution and the carbon footprint.
    These side effects are unacceptable in many industrialized nations, such as those
    in the European Union, which is committed to using sustainable methods. Precision
    agriculture leverages technologies to achieve those objectives and avoids undesired
    effects. PA is a concept for farm management founded on observation, measurement,
    and response to crop variability [2]. It assembles different methods to manage
    variations in a farm to enhance crop yield, improve commercial profit, and guarantee
    eco-environmental sustainability. PA uses current information and communication
    technologies (ICT), automation, and robotics to monitor crop growth, predict the
    weather accurately, perform optimal irrigation, apply fertilizers smartly, manage
    weeds and pests accurately, test soil quality precisely, etc. Since the late 1980s,
    precision agriculture techniques have been introduced step by step in the agricultural
    production sector, integrating the following: Sensors to acquire geolocated biodata
    of crops and soil, e.g., nitrogen sensors, vision cameras, global navigation satellite
    systems (GNSS), etc. Computers for analyzing those data and running simple algorithms
    to help farmers make simple decisions (applying or not applying a given process,
    modifying a process application map, etc.). Actuators in charge of executing the
    decisions (opening/closing valves, altering a trajectory, etc.) for modifying
    crops. As an actuator, we consider the agricultural tool, also called the agricultural
    implement, and the vehicle, manually or automatically driven, to move the tool
    throughout the working field and apply the farming process. The integration of
    subsystems onboard robotic vehicles started in the late 1990s. Some illustrative
    examples, based on retrofitting conventional vehicles, are the autonomous agricultural
    sprayer [3], which focuses on achieving a pesticide spraying system that is cheap,
    safe, and friendly to the environment, and the autonomous orchard vehicles for
    mowing, tree pruning, and training, spraying, blossoming, and fruit thinning,
    fruit harvesting, and sensing [4], both deployed in the USA. In Europe, we can
    find the RHEA fleet (see Figure 1a), consisting of a fleet of three tractors that
    cooperate and collaborate in the application of pesticides [5]. Regarding robotic
    systems based on specific structures designed for agriculture (see Figure 1b),
    we can remark on LadyBird in Australia, intended for the valuation of crops using
    thermal and infrared detecting systems, hyperspectral cameras, stereovision cameras,
    LIDAR, and GPS [6], and Vibro Crop Robotti in Europe, built for accurate seeding
    and mechanical row crop cleaning [7]. These robots were integrated around computing
    systems based on centralized or elementary distributed architectures to handle
    a few sensors and control unsophisticated agricultural tools. Figure 1. (a) Agricultural
    robots based on retrofitted conventional vehicles (RHEA fleet); (b) agricultural
    robots designed on purpose (Courtesy of AgreenCulture SaS). In addition to those
    developments, related technologies have evolved drastically in recent years, and
    now sensors can be spread throughout the field and communicate with each other.
    This is possible because of the Internet of Things (IoT). This computing concept
    describes how to cluster and interconnect objects and devices through the Internet,
    where all are visible and can interact with each other. IoT defines physical objects
    with devices (mainly sensors) and includes processing power, software applications,
    and other technologies to exchange data with other objects through the Internet.
    Moreover, computers can run artificial intelligence (AI) algorithms, considering
    AI as the ability of a machine (computer) to emulate intelligent human actions.
    The application of AI to agriculture has been focused on three primary AI techniques:
    expert systems, artificial neural networks, and fuzzy systems, with significant
    results in the management of crops, pests, diseases, and weeds, as well as the
    monitoring of agricultural production, store control, and yield prediction, for
    example [8]. AI techniques are also applied to provide vehicles with autonomy;
    therefore, autonomous agricultural robots leverage this technology. AI-based vision
    systems can fulfill the following roles: Detecting static or dynamic objects in
    their surroundings. Detecting row crops for steering purposes. Identifying plants
    and locating their positions for weeding are clear examples of the current use
    of AI techniques in agricultural robotics [9]. Another technology that has evolved
    in the last decade is cloud computing, defined as the on-demand delivery of computing
    services, mainly data storage and computing power, including servers, storage,
    databases, networking, software applications, artificial intelligence methods,
    and analytics algorithms over the Internet. The main objective of cloud computing
    systems is to provide flexible resources at adapted prices. A cloud computing
    system allows the integration of data of different types, loaded from many sources
    in batch and real-time. In particular, the integration can be based on georeferenced
    data in the precision farming area. Data can range from trajectory data to images
    and videos related to fields and missions and any sensors installed on the autonomous
    robot. Cloud computing allows the use of services available in the cloud (computing,
    storing, etc.), with increasing advantages provided by big data techniques. Many
    agricultural applications of big data technologies have already been introduced
    in agriculture [10] and should be present in future robotic systems. This article
    presents an architecture to integrate new technologies and Internet trends in
    agricultural autonomous robotic systems and has two main objectives. The first
    objective is to provide an example of designing control architectures to connect
    autonomous robots to the cloud. It is oriented toward robot designers and gives
    significant technical details. The second objective is to disclose to farmers
    the advantages of integrating the new technologies in autonomous robots that can
    provide farmers with significant advantages regarding (i) data storage, which
    is a secure and efficient way to store, but also access and share, data, eliminating
    the need of physical storage and, thus, reducing the risk of data loss; (ii) scalability,
    which allow the farmers to expand or reduce their storage needs, efficiently optimizing
    their resources, and (iii) analytics services, which allow a farmer to analyze
    their own data to make informed decisions taking advantage of the AI tools available
    on the cloud. These are general advantages of using the cloud, but autonomous
    robots have great potential for collecting data and must facilitate communicating
    those data to the cloud. To base the architecture on a specific example, the integration
    of a laser-based system for weed management is considered. Thus, Section 2 presents
    the material, defining the robot’s components, and the methodology, detailing
    the system’s architecture. Section 3 then introduces the experiments to be assessed
    and discussed in Section 4. Finally, Section 5 summarizes the conclusions. 2.
    Materials and Methods This section first describes the components and equipment
    integrated for building the autonomous robot used to validate and assess the proposed
    integration methodology. Second, the methods for the integration of components
    are detailed. 2.1. System Components 2.1.1. Main Process Loop in PA Autonomous
    Robots The autonomous systems used for precision agriculture generally follow
    the structure of an automatic control loop that consists of the following (see
    Figure 2): Selecting the references for the magnitudes to be controlled, i.e.,
    defining the desired plan. Measuring the magnitudes of interest. Making decisions
    based on the measured and desired values of the magnitudes (control strategy).
    Executing the decided actions Figure 2. Components of a precision agriculture
    robotic system and main information flow. In our application, the selecting references
    are made with the smart navigation manager (mission planner), the measures of
    the magnitudes of interest are performed with the perception system and the IoT
    sensor network, the decisions are made with the smart navigation manager (smart
    operation manager), and the actions are executed with the agricultural tool and
    the autonomous robot that move the implement throughout the mission field. In
    addition, our system also takes care of the interaction with the cloud and the
    operator. In our proposed integration method, these components are grouped into
    modules, as illustrated in Figure 2 and Figure 3. These modules are as follows.
    Figure 3. Computing architecture. 2.1.2. Agricultural Robot A manually driven
    or autonomous vehicle is essential in agricultural tasks to perform the necessary
    actions throughout the working field. In this case, we use a compact mobile platform
    based on a commercial vehicle manufactured by AgreenCulture SaS, France. This
    is a tracked platform, and, thus, it operates as a skid-steer mechanism. The track
    distance can be adapted to the crop row space. Equipped with an engine or batteries,
    the platform can follow predefined trajectories at 6 km/h with a position accuracy
    of ±0.015 m using a global positioning system (GPS) based on the real-time kinematic
    (RTK) technique. This mobile platform is illustrated in Figure 4a. Figure 4. (a)
    Mobile platform (AgreenCulture SaS) and (b) autonomous laser weeding system. 2.1.3.
    Perception System A perception system is based on computer vision algorithms that
    obtain, process, analyze, and understand images and data from the environment.
    With these inputs, the system produces numerical and symbolic information for
    making decisions. The perception system for this study consists of the following
    systems: Guiding vision system: This system aims to detect static and dynamic
    obstacles in the robot’s path to prevent the robot tracks from stepping on the
    crops during the robot’s motion. Furthermore, it is also used to detect crop rows
    in their early growth stage to guide the robot in GNSS-denied areas [8]. The selected
    perception system consisted of a red–green–blue (RGB) wavelength vision camera
    and a time-of-flight (ToF) camera attached to the front of the mobile platform
    using a pan-tilt device, which allows control of the camera angle with respect
    to the longitudinal axis of the mobile platform, x. Figure 4 illustrates both
    cameras and their locations onboard the robot. Weed–meristem vision system: The
    system is based on 3D vision cameras to provide the controller with data on crops
    and weeds. These data are used to carry out the main activity of the tool for
    which it has been designed: weed management, in this case. For example, the perception
    system used in this study consists of an AI vision system capable of photographing
    the ground and discriminating crops from weeds in a first step using deep learning
    algorithms. In the second step, the meristems of the detected weeds are identified.
    Figure 3 sketches this procedure. 2.1.4. Agricultural Tools Agricultural tools
    focus on direct action on the crop and soil and rely on physical (mechanical,
    thermal, etc.) or chemical (pesticides, fertilizers, etc.) foundations. This study
    used a thermal weeding tool based on a high-power laser source that provided lethal
    laser doses to be deployed on the weed meristems using scanners. An AI video system
    provided the positions of the weed meristems. Indeed, this specific solution physically
    integrated the AI vision system, the laser scanner, and the high-power laser source
    into the laser-based weeding tool component. The video frames acquired with this
    system were sent to the central controller at a rate of 4 frames/s. After the
    mission, all stored images were sent to the cloud. 2.1.5. The Smart Navigation
    Manager (SNM) This manager is a distributed software application responsible for
    driving the autonomous robot and coordinating all other modules and systems. The
    SNM is split into (i) the smart operation manager and (ii) the central manager,
    which also includes the human–machine interface (HMI). Smart Operation Manager
    (SoM) The smart operation manager is a human–computer interaction module that
    can acquire, process, and deliver information based on computer algorithms and
    is devoted to assisting farmers in making accurate, evidence-based decisions.
    The SoM is specialized for laser weeding technology, the tool selected for this
    study. Data management is performed through the Internet using FIWARE. Data access
    control is provided via a virtual private network (VPN) to secure data transfer
    to/from the cloud. The visual dashboard will also be available on the HMI for
    field operations. Through the dashboard, the operator will also interact with
    the robot. The smart operation manager is allocated in the cloud. It contains
    the global mission planner and supervisor, the map builder, and the module for
    managing the IoT and cloud computing system (see Figure 3 and Figure 5). The hardware
    of the SoM relies on a cluster of 10 servers. Figure 5. Cloud computing modules/containers.
    (a) Global Mission Planner A planner is a software tool responsible for computing
    the trajectories of the vehicle and an a priori known treatment map. The planner
    obtains some types of information from the Internet, including the following:
    Map information according to the data models on the Internet; Other information
    provided by third parties, such as weather forecasts; Data models to create maps
    for accessing already known treatment maps (sets of points in the field) which
    commonly originate from third-party map descriptions (Google Earth; Geographic
    Information System (GIS); GeoJSON.io, an open standard format to represent geographical
    features with nonspatial qualities). Regarding robot location, two types of systems
    are envisaged, as follows: Absolute location based on GNSS: GNSS integrates several
    controllers for line tracking and is based on Dubins paths [11]; ○ Relative location
    based on RGB and ToF cameras, LIDAR, and IoT sensors: These methods are based
    on different techniques for navigation in the field and navigation on the farm,
    such as hybrid topological maps, semantic localization and mapping, and identification/detection
    of natural and artificial elements (crops, trees, people, vehicles, etc.) through
    machine learning techniques. (b) Global Mission Supervisor A supervisor is a computational
    tool responsible for overseeing and monitoring the execution of the mission plan
    while helping the farmer (operator) manage potential failures. Most supervisor
    systems are designed around two actions: fault detection and fault diagnosis.
    The supervisor executes the following actions: Receiving alarms from the system
    components (vehicle, sensors, weeding tool, etc.). Detecting faults in real-time.
    Executing diagnosis protocols. Collecting all available geo-referred data generated
    by every module onboard the robot. The data are stored in both the robot and the
    cloud. (c) Map Builder A map builder is an application used to convert maps based
    on GeoJSON into FIWARE entities. Its main function is to support farmers in using
    the robotic system in a simple, reliable, and robust way by giving the robot enough
    information a priori (e.g., farm schema and boundaries, field locations and shapes,
    crop types, and status). This module takes advantage of the data models created
    by the FIWARE community to represent the farm and other environments digitally,
    where they have been conditioned to be adapted to robotic systems and especially
    oriented to navigation [12]. The design of the Map Builder allows the user to
    accomplish the following: Select the field in GeoJSON.IO, an open-source geographic
    mapping tool that allows maps and geospatial data to be created, visualized, and
    shared in a simple and multiformat way. Assign essential attributes to comply
    with FIWARE. These attributes are those based on the farmer’s knowledge. They
    can include static (i.e., location, type, category) and dynamic (i.e., crop type
    and status, seeding date, etc.) attributes. Export in * GeoJSON format. The map
    obtained will be imported for extracting the information required to fill in the
    FIWARE templates, which include the farms and parcel data models, and other elements
    in a farm, such as buildings and roads. This conversion makes it easier to connect
    the robot to the cloud by standardizing data. These data, after processing, constitute
    a source for the design of processes with the robot, and its storage and subsequent
    analysis can provide forecasts of future events in the field or behavior of the
    robot. (d) IoT System This study integrates an IoT sensor network to collect data
    from the following: The autonomous vehicle: The data and images acquired with
    IoT sensors onboard the vehicle are used to monitor and evaluate performances
    and efficiency and to identify the effects of treatments and traffic on surfaces.
    The environment: Data acquired with IoT sensors deployed on the cropland are used
    to (i) monitor crop development and (ii) collect weather and soil information.
    Two IoT sets of devices are used in our study, as follows: Robot–IoT set: It consists
    of two WiFi high-definition cameras installed onboard the autonomous robot (IoT-R1
    and IoT-R2 in Figure 3). The cameras are triggered from the cloud or the central
    controller to obtain a low frame rate (approximately 1/5 sec). The pictures are
    stored in the cloud and are used to monitor the effects of the passage of the
    autonomous vehicle; therefore, they should include the robot’s tracks. Field–IoT
    set: It consists of the following (see Figure 3): ○ Two multispectral cameras
    (IoT-F1 and IoT-F2) placed at the boundary of cropped areas to obtain hourly pictures
    of crops. ○ A weather station (IoT-F3) to measure precipitation, air temperature
    (Ta), relative humidity (RH), radiation, and wind. ○ Three soil multi-depth probes
    (IoT-F4) for acquiring moisture (Ts) data and three respiration probes (IoT-F5)
    to measure CO2 and H2O. Every one of these components or nodes exchanges messages
    with the Message Queuing Telemetry Transport (MQTT) protocol, carrying JavaScript
    Object Notation (JSON) serialized information from node sensors/cameras interpreted
    as the entity. While metering nodes (weather, soil probe, and respirometer) communicate
    by MQTT messages, camera nodes have to transmit images (maximum of 100 pictures/day
    for periodic snapshots of the area or alarms), and the use of FTP made a wide-band
    networking solution, such as WiFi, mandatory instead of narrowband solutions.
    (e) Cloud Computing System This study sets up a cloud-based data platform, which
    is an ecosystem that incorporates data acquired in the field. The data platform
    supports end-to-end data needs, such as ingestion, processing, and storage, to
    provide the following: A data lake repository for storing mission data to be downloaded
    in batches for post-mission analysis. A web interface for post-mission data analysis
    based on graphical dashboards, georeferenced visualizations, key performance indicators,
    and indices. A container framework for implementing “Decision Support System”
    functionalities that define missions to be sent to the robot. These functionalities
    (e.g., the mission planner) can be implemented and launched from the cloud platform.
    A soft real-time web interface for missions. The interface visualizes real-time
    robot activities and performances or sends high-level commands to the robot (e.g.,
    start, stop, change mission). These functionalities are ordered based on the strictness
    of real-time constraints. The cloud-computing platform is based on the Hadoop
    stack and is powered by FIWARE. We adopted an open-source solution with well-known
    components that can be imported into different cloud service providers if no on-premises
    hardware is available. The core component of the platform is the (FIWARE) Orion
    Context Broker (OCB) from Telefonica [13], a publish/subscribe context broker
    that also provides an interface to query contextual information (e.g., obtain
    all images from the cameras in a specific farm), update context information (e.g.,
    update the images), and be notified when the context is updated (e.g., when a
    new image is added into the platform). The images and raw data are stored in the
    HDFS (Hadoop distributed file system), while the NoSQL (not only structured query
    language) MongoDB database is used to collect the contextual data from FIWARE
    and further metadata necessary to manage the platform [14]. Additionally, we use
    Apache KAFKA, an open-source distributed event bus, to distribute context updates
    from FIWARE to all the modules/containers hosted on the cloud platform. The different
    cloud computing modules/containers used in this study are illustrated in Figure
    5. Central Manager This central manager is an application that is divided into
    the following: Obstacle detection system. This module acquires visual information
    from the front of the robot (robot vision system) to detect obstacles based on
    machine vision techniques. Local mission planner and supervisor. The planner plans
    the motion of the robot near its surroundings. The local mission supervisor oversees
    the execution of the mission and reports malfunctions to the operator (see Section
    2.1.5). Guidance system. This system is responsible for steering the mobile platform
    to follow the trajectory calculated by the planner. It is based on the GNSS if
    its signal is available. Otherwise, the system uses the information from the robot
    vision system to extract the crop row positions and follow them without harming
    the crop. Human–machine interface A human–machine interface (HMI) is a device
    or program enabling a user to communicate with another device, system, or machine.
    In this study, a HMI using portable devices (android tablets) is addressed to
    allow farmers to perform the following: - Supervise the mission. - Monitor and
    control the progress of agricultural tasks. - Identify and solve operational problems.
    - Obtain real-time in-field access in an ergonomic, easy-to-use, and robust way.
    - Maintain the real-time safety of the entire system. To achieve these characteristics,
    a graphic device was integrated with the portable/remote controller of the mobile
    platform. This controller provides manual and remote vehicle control and integrates
    an emergency button. 2.1.6. Sequence of Actions The relationships among these
    components and modules and the information flow are illustrated in Figure 2 and
    Figure 3. The process is a repeated sequence of actions (A0 to A6), defined as
    follows: A0 The system is installed in the field, The operator/farmer defines
    or selects a previously described mission using the HMI and starts the mission.
    A1 The sensors of the perception module (M1) installed onboard the autonomous
    robot (M2) extract features from the crops, soil, and environment in the area
    of interest in front of the robot. A2 The data acquired in action A1 are sent
    to the smart operation manager, determining the consequent instructions for the
    robots and the agricultural tool. A3 The required robot motions and agricultural
    tool actions are sent to the robot controller, which generates the signal to move
    the robot to the desired positions. A4 The robot controller forwards the commands
    sent by the smart navigation manager or generates the pertinent signals for the
    agricultural tool to carry out the treatment. A5 The treatment is applied, and
    the procedure is repeated from action A1 to action A5 until field completion (A6).
    A6 End of mission. 2.2. Integration Methods Integrating all of the components
    defined in the previous section to configure an autonomous robot depends on the
    nature of the applications the robot is devoted to and the connections and communication
    among the different components that must be precisely defined. Thus, this section
    first describes the computing architecture of the controller, which integrates
    the different subsystems and modules. Second, the interfaces between subsystems
    are precisely defined. Finally, the operation procedure is defined. 2.2.1. Computing
    Architecture A distributed architecture based on an open-source Robot Operating
    System (ROS) is proposed to integrate the system’s main components onboard the
    mobile platform in this study. ROS is the operating system most widely accepted
    by software developers to create robotics applications. It consists of a set of
    software libraries and tools that include drivers and advanced algorithms to help
    developers build robot applications [15]. In this study, ROS, installed in the
    central controller, is used as a meta-operating system for the testing prototype.
    The necessary interfaces (bridges) are developed to establish communication with
    the autonomous vehicle, the perception system, and the laser-based weeding tool.
    Because of ROS versatility and its publisher/subscriber communication model, it
    is possible to adapt the messages to protocols commonly used in IoT, such as Message
    Queuing Telemetry Transport (MQTT). ROS supports software developers in creating
    robotics functionalities to monitor and control robot components connected to
    a local network. However, this solution is not extendible to a wider network,
    such as the Internet. Fortunately, there exist some ROS modules that solve the
    problem. One is ROSLink, a protocol for extensions defining an asynchronous communication
    procedure between the users and the robots through the cloud [16]. ROSLink performance
    has been shown to be efficient and reliable, and it is widely accepted by the
    robotics software community [17]. Although ROSLink has been widely used to connect
    robotic systems with the cloud, it is oriented toward transmitting low-level messages.
    There is no convention to define standard data models that allow intelligent robotics
    systems to be scalable. One alternative to a more internet-oriented communication
    framework is FIWARE, which offers interaction with the cloud using cloud services
    that provide well-known benefits, such as (a) cost and flexibility, (b) scalability,
    (c) mobility, and (d) disaster recovery [18]. FIWARE is an open software curated
    platform fostered by the European Commission and the European Information and
    Communication Technology (ICT) industry for the development and worldwide deployment
    of Future Internet applications. It attempts to provide a completely open, public,
    and free architecture and a collection of specifications that allows organizations
    (designers, service providers, businesses, etc.) to develop open and innovative
    applications and services on the Internet that fulfill their needs [19]. In this
    study, a cloud-based communication architecture has been implemented using FIWARE
    as the core, which allows messages between the edge and the cloud to be transferred
    and stored. The selection was made because this is an open-source platform that
    provides free development modules and has many enablers already developing and
    integrating solutions for smart agriculture. In addition to FIWARE, we use KAFKA,
    a robust distributed framework for streaming data (see Section 2.1.5) that allows
    producers to send data and for consumers to subscribe to and process such updates.
    KAFKA enables the processing of streams of events/messages in a scalable and fault-tolerant
    manner, and decouples producers and consumers (i.e., a consumer can process data
    even after a producer has gone offline). For historic data, HDFS allows the download
    of batches of data at any time and replicates each data in three copies to prevent
    data loss. The visual dashboard will also be available on the HMI for the field
    operations. Through the dashboard, the operator will also interact with the robot.
    FIWARE smart data models do not suffice to represent our application domain or
    to integrate the agricultural and robotic domains; therefore, we have extended
    the existing models and updated some existing entities. Since smart data models
    from FIWARE are overlapping and sometimes inconsistent, we had to envision a unified
    model to integrate and reconcile the data. To connect the robotic system with
    the cloud, specific data models were developed to represent the different robotic
    elements, following the guidelines of FIWARE and its intelligent data models [12].
    The IoT devices deployed in the field must be able to establish connections through
    WiFi and LoRa technologies. WiFi is a family of wireless network protocols. These
    protocols are generally used for Internet access and communication in local area
    networks, allowing nearby electronic devices to exchange data using radio waves.
    LoRa technology is a wireless protocol designed for long-range connectivity and
    low-power communications and is primarily targeted for the Internet of Things
    (IoT) and M2M networks. LoRa tolerates noise, multipath signals, and the Doppler
    effect. The cost of achieving this is a very low bandwidth compared to other wireless
    technologies. This study uses a 4G LTE-M modem to connect to the Internet. At
    a lower level of communication, CANbus or ISOBUS is generally used to control
    and monitor the autonomous vehicle. This study uses CANbus and its communication
    protocol CANopen. Autonomous vehicles and agricultural tools typically contain
    their own safety controllers. The first behaves as a master and, in the case of
    a risky situation, it commands the tool to stop. The human–machine interface (HMI)
    will include a synchronous remote procedure call-style communication over the
    services protocol and asynchronous communications to ensure the robot’s safety.
    In addition to these ROS-based protocols, the HMI has a safety control connected
    to the low-level safety system (by radiofrequency) for emergency stops and manual
    control. Figure 6 illustrates the overall architecture, indicating the following:
    The modules (Mi), presented in the previous sections. The interconnection between
    modules, presented in the next section. The communication technologies and protocols
    to configure agricultural robotic systems that integrate IoT and cloud computing
    technologies. The main characteristics of this architecture are summarized in
    Table 1. Figure 6. Experimental fields. Table 1. Architecture components. 2.2.2.
    Interfaces between System Components This architecture considers four main interfaces
    between systems and modules, as follows: Smart Navigation Manager (M4)/Perception
    System (M1) interface To receive the raw information from the perception system
    (sensors, cameras, etc.), the central manager uses direct connections via the
    transmission control protocol/Internet protocol (TCP/IP) for sensors and the universal
    serial bus (USB) for RGB and ToF cameras. All IoT devices use the available wireless
    communication technologies (WiFi and LoRa) to access the Internet and the cloud.
    To guide the robot, the obstacle detection system obtains data from the guiding
    vision system (RGB and ToF cameras) through the Ethernet that communicates the
    central manager with the perception system. This communication is stated using
    the ROS manager and the perception–ROS bridge (see Figure 3). Smart Navigation
    Manager (M4)/Agricultural Tool (M3) interface These systems can communicate through
    ROS messaging protocols, where the publisher/subscriber pattern is preferred.
    This interface exchanges simple test messages to verify the communication interface.
    It is worth mentioning that the perception system and the agricultural tool are
    connected directly in some specific applications. This solution decreases the
    latency of data communication but demands moving a portion of the decision algorithms
    from the smart navigation manager to the tool controller; therefore, the tool
    must exhibit computational features. This scheme is used in the weeding system
    to test the proposed architecture. Smart Navigation Manager (M4)/Autonomous Robot
    (M2) interface Initially, these systems communicate via CANbus with the CANopen
    protocol. The central manager uses this protocol to receive information on the
    status of the autonomous vehicle and basic information from the onboard sensors
    (GNSS, IMU, safety system, etc.). A CANbus–ROS bridge is used to adapt the communication
    protocols. Autonomous Robot (M2)/Agricultural Tool (M3) interface Usually, it
    is not necessary for the vehicle to directly communicate with the tool because
    the smart navigation manager coordinates them. However, as autonomous vehicles
    and agricultural tools usually have safety controllers, there is wired communication
    between the two safety controllers. In such a case, the autonomous vehicle safety
    controller works as a master and commands the tool safety controller to stop the
    tool if a dangerous situation appears. Perception System (M1)/Agricultural Tool
    (M3) This communication is required to inform the agricultural tools about the
    crop status. In weeding applications, the information is related to the positions
    of the weeds. In this specific application, the perception system (weed meristem
    detection module) sends the weed meristem positions to the laser scanner module
    of the agricultural tool. This communication is carried out using a conventional
    Ethernet connection. The metadata generated via the detection system are made
    available in the existing ROS network and sent to the smart navigation manager.
    Smart Navigation Manager internal/cloud communications The smart navigation manager
    is a distributed system that consists of three main modules: The central manager
    running on the central controller. The smart operation manager running on the
    cloud. The HMI running in a portable device. The central manager and the smart
    operation manager communicate via NGSI v2, a FIWARE application programming interface,
    using a FIWARE–ROS bridge to adapt ROS protocols to NGSI v2 messages. In contrast,
    the HMI communicates with the central manager via WiFi and Internet, directly
    accessing the web services hosted in the cloud. The HMI exhibits a panic button
    connected via radiofrequency to the safety systems of the autonomous robot and
    the agricultural tool. IoT system/Cloud There is a direct link from the IoT system
    to the cloud using MQTT. 2.2.3. Operation Procedure To use the proposed architecture
    and method, the user must follow the method below. Creating the map: The user
    creates the field map following the procedure described in the MapBuilder module
    (see Section 2.1.5). Creating the mission: The user creates the mission by selecting
    the mission’s initial point (home garage) and destination field (study site).
    Sending the mission: The user selects the mission to be executed with the HMI
    (all defined missions are stored in the system) and sends it to the robot using
    the cloud services (see Section Smart Operation Manager (SoM)). Executing the
    mission: The mission is executed autonomously following the sequence of actions
    described in Section 2.1.6. The user does not need to act except for when alarms
    or collision situations are detected and warned of by the robot. Applying the
    treatment: When the robot reaches the crop field during the mission, it sends
    a command to activate the weeding tool, which works autonomously. The tool is
    deactivated when the robot performs the turns at the headland of the field and
    is started again when it re-enters. The implement was designed to work with its
    own sensory and control systems, only requiring the mobile platform for mobility
    and information when it must be activated/deactivated. Supervising the mission:
    When the robotic system reaches the crop field, it also sends a command to the
    IoT sensors, warning that the treatment is in progress. Throughout the operation,
    the mission supervisor module analyzes all the information collected by the cloud
    computing system, generated by both the robotic system and the IoT sensors. It
    evaluates if there is a possible deviation from the trajectory or risk of failure.
    Ending the mission: The mission ends when the robot reaches the last point in
    the field map computed by the MapBuilder. Optionally, the robot can stay in the
    field or return to the home garage. During the mission execution, the user can
    stop, resume, and abort the mission through the HMI. 3. Experimental Assessment
    This section states the characteristics of the described autonomous robot with
    IoT and cloud computing connectivity. To achieve this purpose, the experimental
    field for this study is first described. Then, a test mission is defined to acquire
    data from the different subsystems. Finally, the system characteristics are analyzed
    and assessed. The characteristics obtained are not compared with similar robotic
    systems due to the lack of such information in the literature. There are no published
    results in weeding applications; therefore, it is difficult to compare, and the
    indicators have been geared towards general cloud computing and mobile robotics
    characteristics. Therefore, cross-validation has been carried out, comparing the
    features of the autonomous robot with the general performance of the robot and
    cloud communication. Productivity, cost, and other indicators of the presented
    architecture are those of the general use of cloud computing. 3.1. Study Site
    The system developed for this study was tested in an experimental field located
    in Madrid, Spain (40°18′45.166″, −3°28′51.096″). The climate of the study site
    is classified as a hot summer Mediterranean climate with an average annual temperature
    of 14.3 °C and precipitation of 473 mm. The experimental field consisted of two
    areas of 60 × 20 m2 that grew wheat (Triticum aestivum L.), with crop rows at
    a distance of 0.10 m, and maize (Zea mays L.), with crop rows at a distance of
    0.50 m, respectively. Each area was divided into three sections of 20 × 20 m2.
    The sections in one area were seeded in consecutive weeks, allowing us to conduct
    experiments in three-week windows. Figure 6 shows the experimental field and the
    distribution of the areas and sections. 3.2. Description of the Test Mission Tests
    were conducted to assess the performance and quality of integrating new technologies
    in autonomous robots for agriculture. First, the testing prototype was integrated
    with the components introduced in Section 2; then, several IoT devices were disseminated
    throughout the field (RGB and multispectral cameras, weather stations, soil probes,
    etc.); finally, a mission was defined to acquire data in the study site to perform
    quantitative analyses. The mission consisted of covering sections of 20 × 20 m2
    with wheat and maize crops while the following occurred: Acquiring data from the
    IoT sensor network. Taking pictures of the crop. Acquiring data from the guidance
    system. Sending all the acquired information to the cloud. The mission proposed
    by the planner is illustrated in Figure 7. The robot tracked the path autonomously,
    and the following procedures were carried out. Figure 7. Robot’s path from the
    home garage to the study site. The planner provides the mission for covering the
    study site. Perception system procedure Guiding vision system: This experiment
    was conducted in the treatment stage, where the crop was detected to adjust the
    errors derived from planning and the lack of precision of the maps. YOLOv4 [20],
    a real-time object detector based on a one-stage object detection network, was
    the base model for detecting early-stage growth in maize [8], a wide-row crop.
    The model was trained using a dataset acquired in an agricultural season before
    these tests using the same camera system [21]. Moreover, in the case of wheat,
    which is a narrow-row crop, a different methodology was applied through the use
    of segmentation models, such as MobileNet, a convolutional neural network for
    mobile vision applications [22], trained using a dataset acquired in an agricultural
    season before these tests [23], with the same camera system. The detection of
    both crops was evaluated with regard to the GNSS positions collected manually
    for the different crop lines. The maize and wheat datasets were built with 450
    and 125 labeled images, respectively. Data augmentation techniques (rotating,
    blurring, image cropping, and brightness changes) were used to increase the size
    of the datasets. For both crops, 80% of the data was destined for training, 10%
    for validation, and 10% for testing. The AI vision system: This system uses data
    from the installed RGB cameras to enable robust automated plant detection and
    discrimination. For this purpose, the state-of-the-art object detection algorithm
    Yolov7 is used in combination with the Nvidia framework DeepStream. Tracking the
    detected plants is performed in parallel by a pretrained DeepSort algorithm [24].
    The reliability of the object detection algorithm is evaluated using test datasets
    with the commonly used metrics “intersection over union” (IoU) and “mean average
    precision” (mAP). This system works cooperatively with laser scanners as a stand-alone
    system. The information is not stored in the cloud. The dataset used for training
    weed/crop discrimination was generated in fields in several European countries.
    It contains 4000 images, 1000 of which are fully labeled. Distinctions are made
    according to the processing steps to be applied: weeds, grasses, and crops. In
    addition, the dataset was expanded to three times its original size through augmentation
    measures. As well as generating new training data, this enables robustness against
    changing environmental influences, such as changing color representation, motion
    blur, and camera distortion. The YoloV7 network achieved a mean average precision
    (mAP) of 0.891 after 300 epochs of training. The dataset was divided into 80%,
    10%, and 10% for training, validation, and testing subsets, respectively. Autonomous
    robot procedure The navigation controller: Given a set of trajectories based on
    RTK-GNSS, the performance of the guidance controller was evaluated by measuring
    lateral and angular error through the incorporation of colored tapes on the ground
    and using the onboard RGB camera and ToF to extract the tape positions to compute
    the errors concerning the robot’s pace. Smart Navigation Manager procedure: Smart
    operation manager: The processing time, latency, success rate, response time,
    and response status based on requests of the mission planner, IoT sensors, and
    cloud computing services were evaluated using ROS functionalities that provide
    statistics related to the following: ○ The period of messages by all publishers.
    ○ The age of messages. ○ The number of dropped messages. ○ Traffic volume to be
    measured in real-time. Central manager: The evaluation is similar to that used
    for the navigation controller. Obstacle detection system: YOLOv4 and a model already
    developed based on the COCO database were introduced to detect common obstacles
    in agricultural environments and were also used for evaluation. YOLOv4 is a one-stage
    object detection model, and COCO (common objects in context) is a large-scale
    object detection, segmentation, and captioning dataset. 4. System Assessment and
    Discussion The mission described in the previous section produced crop images,
    sensor data, and traffic information with the following characteristics: Crop
    images: During the robot’s motion, images are acquired at a rate of 4 frames/s
    to guide the robot. The RGB images are 2048 × 1536 pixels with a weight of 2.2
    MB (see Figure 8 and Figure 9), and the ToF images feature 352 × 264 points (range
    of 300–5000 mm) (see Figure 10). The images are sent to the guiding and obstacle
    detection system through the Ethernet using ROS (perception–ROS bridge in the
    perception system and ROS manager in the central manager). A subset of these images
    is stored in the cloud for further analysis. Using a FIWARE–ROS bridge with the
    NGSI application programming interface, the system sends up to 4 frames/s. Sensor
    data: IoT devices send the acquired data using 2.4 GHz WiFi with the MQTT protocol
    and JSON format. Traffic information: The ROS functionalities mentioned above
    revealed that during a field experiment (10 min duration), the total number of
    delivered messages was 2,395,692, with a rate of only 0.63% dropped messages (messages
    that were dropped due to not having been processed before their respective timeout),
    with average traffic of 10 MB/s and maximum traffic of 160 MB at any instant of
    time. No critical messages (command messages) were lost, demonstrating robustness
    within the smart navigation manager. Regarding cloud traffic, during a period
    of time of approximately 3 h, the messages sent to the cloud were monitored, where
    the number of messages received by the cloud was measured; the delay time of the
    transmission of the messages between the robot (edge) and the OCB, and between
    the robot and the KAFKA bus (see Figure 3), were also measured. During this interval
    of time, around 4 missions were executed, and a total of 14,368 messages were
    sent to the cloud, mainly the robot status and the perception system data. An
    average delay of about 250 ms was calculated between the moment the message is
    sent from the robot and the moment it is received in the OCB (see Figure 11a).
    Moreover, the KAFKA overhead, i.e., the time it takes for a message received by
    the OCB to be forwarded to the KAFKA bus and eventually processed by a KAFKA consumer,
    was approximately 1.24 ms, demonstrating that the internal communications within
    the server and hosted cloud services are robust (see Figure 11b). Figure 8. Example
    of a wheat image acquired with the guiding vision system and uploaded to the cloud.
    Figure 9. Example of a maize image acquired with the guiding vision system and
    uploaded to the cloud. Figure 10. Example of a ToF intensity image acquired with
    the guidance system and uploaded to the cloud. Figure 11. Example of a ToF intensity
    image acquired with the guidance system and uploaded to the cloud. (a) Message
    delay and (b) Kafka overhead. The system has been tested in a field with two different
    crops. Data related to cloud communication and robot guidance algorithms have
    been collected. The communication performance is similar to that obtained using
    conventional mechanisms, so we benefit from using ROS and FIWARE without compromising
    performance. 5. Conclusions An architecture is presented to configure autonomous
    robots for agriculture with access to cloud technologies. This structure takes
    advantage of new concepts and technologies, such as IoT and cloud computing, allowing
    big data, edge computing, and digital twins to be incorporated into modern agricultural
    robots. The architecture is based on ROS, the most universally accepted collection
    of software libraries and tools for building robotic applications, and FIWARE,
    an open architecture that enables the creation of new applications and services
    on the Internet. ROS and FIWARE provide attractive advantages for developers and
    farmers. ROS and FIWARE offer powerful tools for developers to build control architectures
    for complex robots with cloud computing/IoT features, making development easier
    and leveraging open-source frameworks. ROS and FIWARE, as in the proposed integration,
    provide reusability, scalability, and maintenance using the appropriate hardware
    resources. In addition, integrating the robot controller into the Internet allows
    the exploitation of autonomous robot services for agriculture through the Internet.
    On the other hand, the use of this type of architecture reveals to farmers the
    advantages of communicating autonomous robots with the cloud, providing them with
    leading benefits to storing data safely and efficiently, eliminating physical
    storage, and, thus, reducing the risk of data loss. Data stored in the cloud makes
    it easy to access data from anywhere and share it with other farmers or platforms.
    In addition, the services offered in the cloud are very flexible to contract the
    actual storage needed at all times, optimizing the farmer’s resources. Finally,
    farmers can use the analysis tools available in the cloud to make their own decisions.
    In any case, working in the cloud requires an initial investment, which is usually
    recovered quickly. The different components of the robot, particularized for a
    laser-based weeding robot, are described, and the general architecture is presented,
    indicating the specific interfaces. Based on these components, the article presents
    the action sequence of the robot and the operating procedure to illustrate how
    farmers can use the system and what benefits they can obtain. Several experiments
    with two crops were conducted to evaluate the proposed integration based on the
    data communication characteristics, demonstrating the system’s capabilities. The
    crop row detection system works correctly for both crops, tracking the rows with
    an accuracy of ±0.02 m. The evaluation concluded that the system could send image
    frames to the cloud at 4 frames/s; messages between subsystems and modules can
    be passed with a 0.63% rejection rate. Regarding the traffic of the information
    exchanged, an average delay of 250 ms was detected in the messages between the
    robot and the OCB. In contrast, the OCB and the KAFKA bus measured an average
    message of 1.24 ms. This indicates the robustness of internal communications within
    the server and hosted cloud services. This performance is in the range obtained
    when a system communicates with the cloud using conventional methods, so ROS and
    FIWARE facilitate communication with the cloud without compromising performance.
    Future work will focus on extending cloud computing architecture to integrate
    digital twins, orchestrate big data ensembles, and facilitate the work of robots
    with edge computing performance. Author Contributions Conceptualization, L.E.,
    R.F., P.G.-d.-S., M.F., M.G., G.V., H.S., M.H. and M.W.; methodology, L.E. and
    R.F.; software, L.E., M.F., H.S. and M.W.; validation, L.E., M.F., G.V. and H.S.;
    investigation, L.E., R.F., P.G.-d.-S., M.F., M.G., G.V., H.S., M.H. and M.W.;
    writing—original draft preparation, P.G.-d.-S.; writing—review and editing, L.E.,
    P.G.-d.-S. and R.F.; supervision, L.E. and P.G.-d.-S.; funding acquisition, P.G.-d.-S.,
    G.V., M.G. and M.W. All authors have read and agreed to the published version
    of the manuscript. Funding This article is part of a project that has received
    funding from the European Union’s Horizon 2020 research and innovation program
    under grant agreement No 101000256. Institutional Review Board Statement The study
    was conducted in accordance with the Declaration of Helsinki, and approved by
    the Ethics Committee of CSIC. Data Availability Statement Herrera-Diaz, J.; Emmi,
    L.A.; Gonzalez de Santos, P. Maize Dataset. 2022. Available online: http://doi.org/10.20350/digitalCSIC/14566
    (accessed on 1 April 2023). Herrera-Diaz, J.; Emmi, L.; Gonzalez de Santos, P.
    Wheat Dataset. 2022. Available online: http://doi.org/10.20350/digitalCSIC/14567
    (accessed on 1 April 2023). Conflicts of Interest The authors declare no conflict
    of interest. References Ghose, B. Food security and food self-sufficiency in China:
    From past to 2050. Food Energy Secur. 2014, 3, 86–95. [Google Scholar] [CrossRef]
    Zhang, N.; Wang, M.; Wang, N. Precision agriculture—A worldwide overview. Comput.
    Electron. Agric. 2002, 36, 113–132. [Google Scholar] [CrossRef] Stentz, A.; Dima,
    C.; Wellington, C.; Herman, H.; Stager, D. A System for Semi-Autonomous Tractor
    Operations. Auton. Robot. 2002, 13, 87–104. [Google Scholar] [CrossRef] Bergerman,
    M.; Maeta, S.M.; Zhang, J.; Freitas, G.M.; Hamner, B.; Singh, S.; Kantor, G. Robot
    Farmers: Autonomous Orchard Vehicles Help Tree Fruit Production. IEEE Robot. Autom.
    Mag. 2015, 22, 54–63. [Google Scholar] [CrossRef] Gonzalez-De-Santos, P.; Ribeiro,
    A.; Fernandez-Quintanilla, C.; Lopez-Granados, F.; Brandstoetter, M.; Tomic, S.;
    Pedrazzi, S.; Peruzzi, A.; Pajares, G.; Kaplanis, G.; et al. Fleets of robots
    for environmentally-safe pest control in agriculture. Precis. Agric. 2017, 18,
    574–614. [Google Scholar] [CrossRef] Underwood, J.P.; Calleija, M.; Taylor, Z.;
    Hung, C.; Nieto JFitch, R.; Sukkarieh, S. Real-time target detection and steerable
    spray for vegetable crops. In Proceedings of the International Conference on Robotics
    and Automation: Robotics in Agriculture Workshop, Seattle, WA, USA, 9–11 May 2015.
    [Google Scholar] Kongskilde. New Automated Agricultural Platform—Kongskilde Vibro
    Crop Robotti. 2017. Available online: http://conpleks.com/robotech/new-automated
    (accessed on 14 December 2022). Emmi, L.; Herrera-Diaz, J.; Gonzalez-De-Santos,
    P. Toward Autonomous Mobile Robot Navigation in Early-Stage Crop Growth. In Proceedings
    of the 19th International Conference on Informatics in Control, Automation and
    Robotics (ICINCO 2022), Lisbon, Portugal, 14–16 July 2022; pp. 411–418. [Google
    Scholar] [CrossRef] Bannerjee, G.; Sarkar, U.; Das, S.; Ghosh, I. Artificial Intelligence
    in Agriculture: A Literature Survey. Int. J. Sci. Res. Comput. Sci. Appl. Manag.
    Stud. 2018, 7, 3. [Google Scholar] Osinga, S.A.; Paudel, D.; Mouzakitis, S.A.;
    Athanasiadis, I.N. Big data in agriculture: Between opportunity and solution.
    Agric. Syst. 2021, 195, 103298. [Google Scholar] [CrossRef] Yang, D.; Li, D.;
    Sun, H. 2D Dubins Path in Environments with Obstacle. Math. Probl. Eng. 2013,
    2013, 291372. [Google Scholar] [CrossRef] Emmi, L.; Parra, R.; González-de-Santos,
    P. Digital representation of smart agricultural environments for robot navigation.
    In Proceedings of the 10th International Conference on ICT in Agriculture, Food
    & Environment (HAICTA 2022), Athens, Greece, 22–25 September 2022; pp. 1–6. [Google
    Scholar] Orion Context Broker. Telefonica. Available online: https://github.com/telefonicaid/fiware-orion
    (accessed on 22 February 2023). Francia, M.; Gallinucci, E.; Golfarelli, M.; Leoni,
    A.G.; Rizzi, S.; Santolini, N. Making data platforms smarter with MOSES. Futur.
    Gener. Comput. Syst. 2021, 125, 299–313. [Google Scholar] [CrossRef] ROS—The Robot
    Operating System. 2023. Available online: https://www.ros.org/ (accessed on 24
    April 2020). ROSLink. 2023. Available online: https://github.com/aniskoubaa/roslink
    (accessed on 5 January 2023). Koubaa, A.; Alajlan, M.; Qureshi, B. ROSLink: Bridging
    ROS with the Internet-of-Things for Cloud Robotics. In Robot Operating System
    (ROS); Koubaa, A., Ed.; Studies in Computational Intelligence; Springer: Cham,
    Switzerland, 2017; Volume 707. [Google Scholar] [CrossRef] Fiware Community Fiware:
    The Open Source Platform for Our Smart Digital Future. Available online: https://www.fiware.org/
    (accessed on 5 January 2023). López-Riquelme, J.; Pavón-Pulido, N.; Navarro-Hellín,
    H.; Soto-Valles, F.; Torres-Sánchez, R. A software architecture based on FIWARE
    cloud for Precision Agriculture. Agric. Water Manag. 2017, 183, 123–135. [Google
    Scholar] [CrossRef] Bochkovskiy, A.; Wang, C.Y.; Liao, H.Y.M. YOLOv4: Optimal
    speed and accuracy of object detection. arXiv 2020, arXiv:2004.10934. [Google
    Scholar] Herrera-Diaz, J.; Emmi, L.A.; Gonzalez de Santos, P. Maize Dataset. 2022.
    Available online: https://digital.csic.es/handle/10261/264581 (accessed on 1 April
    2023). Howard, A.G.; Zhu, M.; Chen, B.; Kalenichenko, D.; Wang, W.; Weyand, T.;
    Andreetto, M.; Adam, H. MobileNets: Efficient Convolutional Neural Networks for
    Mobile Vision Applications. arXiv 2017, arXiv:1704.04861. [Google Scholar] Herrera-Diaz,
    J.; Emmi, L.; Gonzalez de Santos, P. Wheat Dataset. 2022. Available online: https://digital.csic.es/handle/10261/264622
    (accessed on 1 April 2023). Wojke, N.; Bewley, A.; Paulus, D. Simple Online and
    Realtime Tracking with a Deep Association Metric. In Proceedings of the IEEE International
    Conference on Image Processing (ICIP), Beijing, China, 17–20 September 2017. [Google
    Scholar]     Disclaimer/Publisher’s Note: The statements, opinions and data contained
    in all publications are solely those of the individual author(s) and contributor(s)
    and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility
    for any injury to people or property resulting from any ideas, methods, instructions
    or products referred to in the content.  © 2023 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Emmi, L.; Fernández, R.; Gonzalez-de-Santos,
    P.; Francia, M.; Golfarelli, M.; Vitali, G.; Sandmann, H.; Hustedt, M.; Wollweber,
    M. Exploiting the Internet Resources for Autonomous Robots in Agriculture. Agriculture
    2023, 13, 1005. https://doi.org/10.3390/agriculture13051005 AMA Style Emmi L,
    Fernández R, Gonzalez-de-Santos P, Francia M, Golfarelli M, Vitali G, Sandmann
    H, Hustedt M, Wollweber M. Exploiting the Internet Resources for Autonomous Robots
    in Agriculture. Agriculture. 2023; 13(5):1005. https://doi.org/10.3390/agriculture13051005
    Chicago/Turabian Style Emmi, Luis, Roemi Fernández, Pablo Gonzalez-de-Santos,
    Matteo Francia, Matteo Golfarelli, Giuliano Vitali, Hendrik Sandmann, Michael
    Hustedt, and Merve Wollweber. 2023. \"Exploiting the Internet Resources for Autonomous
    Robots in Agriculture\" Agriculture 13, no. 5: 1005. https://doi.org/10.3390/agriculture13051005
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   7
    Web of Science   3 Scopus   4 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 9. Jan 19. Jan 29. Jan 8. Feb
    18. Feb 28. Feb 9. Mar 19. Mar 29. Mar 0 500 1000 1500 2000 2500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Agriculture, EISSN 2077-0472, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agriculture (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Exploiting the Internet Resources for Autonomous Robots in Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Aydin S.
  - Nafiz Aydin M.
  citation_count: '6'
  description: It is essential to keep honey bees healthy for providing a sustainable
    ecological balance. One way of keeping honey bees healthy is to be able to monitor
    and control the general conditions in a beehive and also outside of a beehive.
    Monitoring systems offer an effective way of accessing, visualizing, sharing,
    and managing data that is gathered from performed agricultural and livestock activities
    for domain stakeholders. Such systems have recently been implemented based on
    wireless sensor networks (WSN) and IoT to monitor the activities of honey bees
    in beehives as well. Scholars have shown considerable interests in proposing IoT-
    and WSN-based beehive monitoring systems, but much of the research up to now lacks
    in proposing appropriate architecture for open data driven beehive monitoring
    systems. Developing a robust monitoring system based on a contemporary software
    architecture such as microservices can be of great help to be able to control
    the activities of honey bees and more importantly to be able to keep them healthy
    in beehives. This research sets out to design and implementation of a sustainable
    WSN-based beehive monitoring platform using a microservice architecture. We pointed
    out that by adopting microservices one can deal with long-standing problems with
    heterogeneity, interoperability, scalability, agility, reliability, maintainability
    issues, and in turn achieve sustainable WSN-based beehive monitoring systems.
  doi: 10.1016/j.compag.2022.106897
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related work 3. System
    architecture and developed WSN-based beehive monitoring platform 4. Evaluating
    performance of the proposed system 5. Discussion Funding Declaration of Competing
    Interest Acknowledgments Appendix A. Appendix B. Appendix C. References Show full
    outline Cited by (7) Figures (13) Show 7 more figures Tables (18) Table 1 Table
    2 Table 3 Table 4 Table 5 Table 6 Show all tables Computers and Electronics in
    Agriculture Volume 196, May 2022, 106897 Design and implementation of a smart
    beehive and its monitoring system using microservices in the context of IoT and
    open data Author links open overlay panel Sahin Aydin a, Mehmet Nafiz Aydin b
    Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2022.106897
    Get rights and content Highlights • It is essential to keep honey bees healthy
    for providing a sustainable ecological balance. • One way of keeping honey bees
    healthy is to be able to control the general conditions in a beehive and also
    outside of a beehive. • Monitoring systems have recently been implemented based
    on WSN and IoT to monitor the activities of honey bees in beehives as well. •
    Microservices-based monitoring system can be of great help to be able to control
    the activities of honey bees and more importantly to be able to keep them healthy
    in beehives. • We design and implement of a sustainable WSN-based beehive monitoring
    platform using microservice architecture in this paper. Abstract It is essential
    to keep honey bees healthy for providing a sustainable ecological balance. One
    way of keeping honey bees healthy is to be able to monitor and control the general
    conditions in a beehive and also outside of a beehive. Monitoring systems offer
    an effective way of accessing, visualizing, sharing, and managing data that is
    gathered from performed agricultural and livestock activities for domain stakeholders.
    Such systems have recently been implemented based on wireless sensor networks
    (WSN) and IoT to monitor the activities of honey bees in beehives as well. Scholars
    have shown considerable interests in proposing IoT- and WSN-based beehive monitoring
    systems, but much of the research up to now lacks in proposing appropriate architecture
    for open data driven beehive monitoring systems. Developing a robust monitoring
    system based on a contemporary software architecture such as microservices can
    be of great help to be able to control the activities of honey bees and more importantly
    to be able to keep them healthy in beehives. This research sets out to design
    and implementation of a sustainable WSN-based beehive monitoring platform using
    a microservice architecture. We pointed out that by adopting microservices one
    can deal with long-standing problems with heterogeneity, interoperability, scalability,
    agility, reliability, maintainability issues, and in turn achieve sustainable
    WSN-based beehive monitoring systems. Previous article in issue Next article in
    issue Keywords Smart beehiveMicroservices in beehiveOpen data in beehiveBeehive
    monitoring systemMicroservices in agriculture and livestock 1. Introduction Internet
    of Things (IoT) has been widely used in many domains. The most important two domains
    which utilize the pertinent characteristics of IoT for increasing efficiency,
    productivity, precision, and ease in their particular activities are agriculture
    and livestock. The way in which the IoT helps such domains is to use the sensor
    technology. The sensor technology, which is widely used by IoT, is of great help
    in collecting essential data from the nature for precision agriculture and livestock.
    It is important to bear in mind that processing the collected data, transforming
    it into information, and extracting information from the data are the essential
    operations before the data is monitored. In addition, it is crucial to provide
    users with functions that will process and make sense of the data in terms of
    making the platforms attractive for users. Monitoring systems offer an effective
    way of accessing, visualizing, sharing, managing data that is gathered from performed
    agricultural and livestock activities for domain stakeholders (Eitzinger et al.,
    2019, Montoya et al., 2013, Osroosh et al., 2018, Mahan et al., 2010, Ahmed Khattab
    et al., 2019, Popović et al., 2017). Such systems have recently been implemented
    based on wireless sensor networks (WSN) and IoT to monitor the activities of honey
    bees in beehives as well. Honey bees are miraculous creatures that play an important
    role as pollinators in global crop production, and also, they are in charge of
    producing special and healthy foods such as wax, royal jelly, bee venom, honey,
    pollen and propolis (Souza Cunha et al., 2020, José M. Flores et al., 2021, Kasiotis
    et al., 2021, Abd-El-Samie et al., 2021, Ullah et al., 2021). It is essential
    to keep honey bees healthy for providing a sustainable ecological balance. One
    way of keeping honey bees healthy is to be able to control the general conditions
    in a beehive and also outside of a beehive. Developing a robust monitoring system
    based on a contemporary software architecture such as microservices can be of
    great help to be able to control the activities of honey bees and more importantly
    to be able to keep them healthy in beehives. Therefore, the major objective of
    this study is to show how to design and implement a smart beehive and its monitoring
    system using microservices in the context of IoT and open data. A considerable
    amount of research has been conducted on wireless sensor network (WSN)-based beekeeping
    monitoring systems by utilizing IoT. However, much of the research up to now lacks
    in terms of effective architecture for open data. Whilst some research has been
    carried out on beehive monitoring systems that adopt Service Oriented Architecture
    (SOA), there is not much study that recommends a system that adopts a microservices
    architecture. On the other hand, the proposed WSN-based beehive monitoring platform
    has been developed by adopting fully SOA-based architecture to provide sustainability
    in beekeeping activities. While there have been many studies focus on implementing
    WSN-based beehive monitoring systems, very little was found in the literature
    addressing heterogeneity, interoperability, scalability, extensibility, performance,
    maintainability, agility, reliability, availability, and interoperability issues
    in WSN-based beehive monitoring systems. Eliminating such issues have to be considered
    as key factors play a vital role in making WSN-based beehive monitoring systems
    robust. On this occasion, it is important to bear in mind that robust monitoring
    systems can be quite important to provide sustainability in beekeeping activities
    and also to keep honey bees healthy. This study aims to provide that sustainability
    by pointing out likely heterogeneity, interoperability, scalability, extensibility,
    performance, maintainability, agility, reliability, availability, and interoperability
    issues in WSN-based beehive monitoring systems and demonstrates how to solve them
    by using microservices architecture. This paper is organized as follows. Section
    2 reviews the literature on WSN-based beehive monitoring systems and microservices
    architecture. The proposed architecture and developed WSN-based beehive monitoring
    platform have been introduced and detailed in Section 3. Section 4 provides the
    load test results of microservices. Finally, Section 5 includes the discussion
    of the findings and future work. 2. Related work Thus far a great deal of research
    has been carried out on IoT-based beekeeping monitoring systems. Table 1 presents
    relevant studies and it compares these studies according to nine different criteria.
    Although most of these systems have been established as typical wireless sensor
    networks (WSN) for the purpose of gathering various kinds of data, they have been
    named in different ways. They can be categorized as WSN-based Audio Events Monitoring
    (Murphy et al., 2015), WSN-based Beehive Monitoring (Edwards Murphy et al., 2015,
    Fiona Edwards-Murphy et al., 2016, Kridi et al., 2016, Vidrascu and Svasta, 2017aa;
    Yusof et al., 2019, Ochoa et al., 2019, Zabasta et al., 2019, Tymoteusz Cejrowski
    et al., 2020); IoT-Gateway Design for Beehive Monitoring (Vidrascu and Svasta,
    2017b), Cloud-based Data Storage Architecture for Monitoring Bee''s Behaviors
    (Debauche et al., 2018), IoT-based Intelligent Beehive and Intelligent Factory
    (jiangyi et al., 2019); IoT-based Bee Colony Monitoring (Mahamud et al., 2019),
    AI-based Assistance System (Johannsen et al., 2020); IoT-based Bee Colony Monitoring
    (Hong et al., 2020) and Bee Colony Real-Time Monitoring (Komasilovs et al., 2019).
    Despite the proposed system is a typical WSN-based beehive monitoring system,
    there are a number of significant differences between this work and the others
    when its principal characteristics have been considered. Table 1. Literature Review
    Summary. References Protocol Monitored Metrics Includes an Architecture/Model?
    Context Providing Open Data Use of Open Data Use of SOA-based Approach Database
    Used Use of Micro Services Architecture (Murphy et al., 2015) ZigBee T, H, and
    S NO WSN-based Audio Events Monitoring NO NO NO N/A NO (Edwards Murphy et al.,
    2015) ZigBee and 3G/GSM T, O2,CO2,NO2, and pollutants NO WSN-based Beehive Colony
    Monitoring NO NO NO N/A NO (Murphy et al., 2016) ZigBee and 3G/GSM CO2, O2, Pollutants,
    T,  RH, A YES WSN-based Beehive Monitoring NO NO NO N/A NO (Kridi et al., 2016)
    Digi Mesh T NO WSN-based Beehive Monitoring and In-Hive Thermal Patterns Detection
    NO NO NO N/A NO (Vidrascu et al., 2017) Wi-Fi T and RH NO WSN-based Beehive Monitoring
    NO NO NO N/A NO (Vidrascu et al., 2017) Wi-Fi, 3G, and 4G T, H, R, D, VGC, UV,
    IR, and LI. NO IoT-Gateway Design for Beehive Monitoring NO NO N/A N/A NO (Debauche
    et al., 2018) LoRa T, H, A, and AC YES Cloud-based Data Storage Architecture for
    Monitoring Bee''s Behaviours N/A NO NO Redis/PostgreSQL/  Druid NO (jiangyi et
    al., 2019) Wi-Fi T, IMG and L YES IoT-based Intelligent Beehive and Intelligent
    Factory NO NO NO N/A NO (Yusof et al., 2019) Wi-Fi T, H, SG, and W YES WSN-based
    Beehive Monitoring NO NO NO N/A NO (Ochoa et al., 2019) Wi-Fi T, H, and W YES
    WSN-based Beehive Monitoring NO NO NO N/A NO (Zabasta et al., 2019) Wi-Fi and
    4G/GSM T, H, W, and V YES WSN-based Beehive Monitoring NO NO YES MySQL NO (Mahamud
    et al., 2019) Wi-Fi T, H, W, VGC, and S NO IoT-based Bee Colony Monitoring NO
    NO NO MQTT local database NO (Johannsen et al., 2020) Wi-Fi H, T, W, and S NO
    AI-based Assistance System NO YES NO N/A NO (Cejrowski et al., 2020) 3G/GSM T,
    H, and S NO WSN-based Beehive Monitoring NO NO YES N/A NO (Hong et al., 2020)
    Wi-Fi T, H, W, S, and EC YES IoT-based Bee Colony Monitoring NO NO NO MySQL NO
    (Komasilovs et al., 2019) Wi-Fi, GSM T, H, W, and AP YES Bee Colony Real-Time
    Monitoring NO NO YES MongoDB YES Proposed Work Wi-Fi and ZigBee In Beehive: T,
    H, P, AL, CO, NO2, and W Outside Beehive: T, H, HC, LPG, CO, ALC, PC YES WSN-based
    Beehive Monitoring Platform Using Micro Service Architecture YES YES YES MS SQL,
    Neo4J YES T: Temperature, H: Humidity, S: Sound, RH: Relative Humidity, A: Acceleration,
    R: Rainfall, D: Dust, LI: Light Intensity, AC: Air Contaminants, IMG: Image, L:
    Light, SG: Smoke Gas, W: weight, V: Video, VGC: Various Gases Concentration, EC:
    Entrance Counts, P: Pressure, AL: Altitude, CO: Carbon Monoxide, NO2: Nitrogen
    dioxide, HC: Hydrogen Concentration, ALC: Alcohol Concentration, PC: Propane Concentration,
    O2: Oxygen , CO2: Carbon dioxide, UV: Ultraviolet, IR: Infrared Light , LPG: Liquefied
    Petroleum Gas, AP: Acoustic Parameters. When one looks at the measurement data
    types in the studies, one can see that temperature is the frequently measured
    one in whole studies (Murphy et al., 2015, Edwards Murphy et al., 2015, Fiona
    Edwards-Murphy et al., 2016, Kridi et al., 2016, Vidrascu and Svasta, 2017a, Vidrascu
    et al., 2017b, Debauche et al., 2018, jiangyi et al., 2019, Yusof et al., 2019,
    Ochoa et al., 2019, Zabasta et al., 2019, Mahamud et al., 2019, Johannsen et al.,
    2020, Tymoteusz Cejrowski et al., 2020, Hong et al., 2020, Komasilovs et al.,
    2019). The humidity, which is the other frequently measured data type, has been
    considered as noteworthy in terms of beehive monitoring in thirteen studies (Murphy
    et al., 2015, Fiona Edwards-Murphy et al., 2016, Vidrascu and Svasta, 2017a, Vidrascu
    et al., 2017b, Debauche et al., 2018, Yusof et al., 2019, Ochoa et al., 2019,
    Zabasta et al., 2019, Mahamud et al., 2019, Johannsen et al., 2020, Tymoteusz
    Cejrowski et al., 2020, Hong et al., 2020, Komasilovs et al., 2019). Monitoring
    the weight change of a beehive can help the beekeepers about the general health
    situation of the bees. Therefore, the weight change of a beehive has been measured
    and monitored in seven different studies (Yusof et al., 2019, Ochoa et al., 2019,
    Zabasta et al., 2019, Márquez et al., 2021, Johannsen et al., 2020, Hong et al.,
    2020, Komasilovs et al., 2019). Just as monitoring weight change can help beekeepers
    to obtain information about the health status of bees, recording and monitoring
    the sounds of bees can also provide information about the general health status
    of bees. This explanation has been considered in six different studies and bee
    sounds have been recorded and measured in these studies (Murphy et al., 2015,
    Mahamud et al., 2019, Johannsen et al., 2020, Tymoteusz Cejrowski et al., 2020,
    Hong et al., 2020, Komasilovs et al., 2019). Similarly, monitoring air pollutants
    can help the beekeepers about health situation of the bee colonies. One can see
    that in five studies air pollutants have been measured and monitored (Edwards
    Murphy et al., 2015, Fiona Edwards-Murphy et al., 2016, Vidrascu et al., 2017b,
    Debauche et al., 2018, Yusof et al., 2019). Acceleration (Fiona Edwards-Murphy
    et al., 2016, Debauche et al., 2018), light intensity (Vidrascu et al., 2017b,
    jiangyi et al., 2019), rainfall (Vidrascu and Svasta, 2017b), UV (Vidrascu and
    Svasta, 2017b), IR (Vidrascu and Svasta, 2017b), image (jiangyi et al., 2019),
    video (Zabasta et al., 2019) and entrance counts (Hong et al., 2020) are the other
    data types which have been measured exclusive of temperature, humidity, weight,
    sound and pollutants. In the proposed work, inside the beehives the following
    data types have been measured: temperature, humidity, pressure, carbon monoxide
    concentration, nitrogen dioxide concentration. Furthermore, outside the beehives
    the following data types have been measured: temperature, humidity, carbon monoxide
    concentration, hydrogen concentration, alcohol concentration, propane concentration,
    and liquefied petroleum gas (LPG) concentration. Lastly, altitude in the location
    of the beehive and weight of the beehive are the other data types which have been
    measured and monitored in the proposed work. As well as the proposed system is
    a typical monitoring system, it also has a feature to notify beekeepers in accordance
    with the measurement values of sensors. Due to the fact that this requires elaborate
    research on defining intervals and rules for the parameters such as atmospheric
    pressure, altitude, and weight measurements, these measurements are only used
    to obtain general information about the location of beekeeping activities and
    also honey production rather than giving notifications to the beekeepers within
    the scope of this research. However, another possible area of future research
    can be to investigate what and how rules can be created for these parameters in
    the context of beekeeping domain. On the other hand, some measurements such as
    temperature, humidity, carbon monoxide concentration, and nitrogen dioxide concentration
    have interval values for beekeeping activities and these values are of great importance.
    The normal range of temperature within a honey bee colony is between 33 and 36
    ℃ (Kleinhenz et al., 2003, Petz et al., 2004). Relative humidity is another important
    measurement parameter for honey bee activities. Optimum relative humidity value
    range for normal hatching is from 90% to 95% and relative humidity value below
    50% is not convenient for egg hatching (Abou-Shaara et al., 2017). Atmospheric
    pressure affects flight frequencies of honey bees and therefore, it is important
    to measure the atmospheric pressure of beehives and their location along with
    the purpose of gaining insight concerning the honey bees flight behaviors (Burrill
    and Dietz, 1981). Altitude of the beehive location can have an impact on honeybee
    colonies’ productivity and behavioral characteristics because altitude differences
    in geography cause differences in flowering stages and durations of plants, allowing
    bees to benefit from these resources for a longer period of time (Abejew and Zeleke,
    2017, Yılmaz et al., 2021). The air pollutants nitrogen dioxide (limiting value
    for Turkey 220 µg/m3 / 1-hour average) and carbon monoxide (limiting value for
    Turkey 10 mg/m3 / 8-hour average) are being measured by the proposed system due
    to the fact that they can degrade flower signals and alter flower recognition
    (Lusebrink et al., 2015). Detecting the existence of combustible gases such as
    LPG, Propane and Hydrogen and also existence of combustible steam such as Methane
    is important to prevent any fire and other problems at the location of beehives.
    The proposed work differentiates from others in terms of an open data aspect;
    that is, providing open data for domain stakeholders or end users of the system.
    When one looks at the relevant studies, one can see that there is a lack of an
    emphasis on open data from the perspective of domain stakeholders including beekeepers,
    scientists, data analysts, software developers, and entrepreneurs. Conversely,
    the proposed work has been focused on openness in terms of sharing IoT data. The
    collected data from IoT devices have been published in different types of open
    formats such as RDF/JSON, RDF/XML, Notation 3, N-Triples, Turtle, XML, JSON, HTML,
    and CSV by the specialized components of the system which has been developed within
    the scope of the proposed work. In addition to these open formats, the data can
    be published in Excel format as well. It is essential that if systems adopt the
    openness term in the context of data sharing, domain stakeholders can overcome
    the frequently encountered issues in the relevant domain. Therefore, when examining
    the existing studies usage of open data by the systems have been identified as
    a criterion. However, as it can be seen from Table 1, only one study (Johannsen
    et al., 2020) uses open data. Different components of the proposed system use
    open data in RDF format. Thus, the proposed work differs with this feature from
    the other studies. Implementing SOA-based approach to WSN-based beehive monitoring
    systems is of great help in terms of providing syntactic interoperability between
    the subsystems or different software components of the systems. As a result of
    this, the usage of SOA-based approach has taken place as another criterion in
    Table 1. It is apparent from this table that only three studies (Zabasta et al.,
    2019, Tymoteusz Cejrowski et al., 2020, Komasilovs et al., 2019) adopt this approach.
    On the other hand, the WSN-based beehive monitoring platform developed within
    the scope of this study is completely SOA-based. One of the major focus areas
    of this study is on demonstrating how to use microservices architecture for WSN-based
    monitoring systems in agriculture and livestock domains. Use of microservices
    is needed as one needs to adopt a contemporary software architecture approach
    in the context of agriculture and livestock applications. Therefore, usage of
    microservices architecture is one of the most important criteria in terms of comparing
    the proposed work with the existing studies. As can be seen in Table 1, existing
    studies lack adoption of microservices architecture, only three of them (Zabasta
    et al., 2019, Tymoteusz Cejrowski et al., 2020, Komasilovs et al., 2019) use a
    SOA-based approach. We have examined the existing studies that include a model
    or an architecture of the proposed system. One can find that their models or architectures
    mainly focus on hardware infrastructure (Fiona Edwards-Murphy et al., 2016, jiangyi
    et al., 2019, Yusof et al., 2019, Ochoa et al., 2019, Zabasta et al., 2019, Hong
    et al., 2020). It is apparent that these studies have not included microservice
    and open data layers as well. Another study that has a system architecture does
    not include microservice layer clearly, but also does not include an open data
    layer (Debauche, 2018). Although the last study, which includes a system architecture
    (Komasilovs et al., 2019), includes the microservices layer, it does not have
    the open data layer as in other studies. It would be appropriate to state that
    the two most important aspects which distinguish our study from other studies
    are that it is a system built entirely on a microservice architecture; (ii) it
    offers open data in different formats to the stakeholders. The adopted microservice
    architecture in the proposed work is a contemporary one and frequently used in
    various domains. There are a variety of reasons why microservices architecture
    has been adopted by the developed system within the scope of this study. Each
    microservice within the developed system has only one single responsibility. Having
    only one responsibility of a microservice provides the modularity for a microservices
    architecture and thus, the deployment processes of the microservices can be performed
    in a quick and easy way (Gan and Delimitrou, 2018). It also supports agility and
    rapid development (Márquez et al., 2021). The microservices within the proposed
    system have been implemented by using only one type of programming language, framework,
    and database management system; however, it should be noted that the microservices
    architecture supports technology heterogeneity, simple correctness and performance
    debugging (Gan and Delimitrou, 2018). As well as microservices architecture supports
    technology heterogeneity which means not being depended on a particular hardware
    or software platform (Raji et al., 2020), it is an organizing method for combining
    IoT and various domain information (Mena et al., 2019). Another major reason for
    adopting microservices architecture in the proposed system is that microservices
    architecture is for scalability and flexibility of software components (Dai, 2019).
    When the total number of beehives increase, the workload of the wireless sensor
    network client applications will increase as well. This can cause performance
    fluctuations. However, the microservices architecture helps the system to overcome
    such difficulties by supporting and improving scalability (Lewis and Fowler, 2014,
    Aksakalli et al., 2021). Another feature of the microservices architecture is
    decentralized governance and data management (Lewis and Fowler, 2014). This feature
    is a significant factor that contributes to the scalability of microservices-based
    applications (Lyu et al., 2020). There is no doubt that the motivation behind
    developing a proposed system based on microservices architecture is not only its
    aforementioned characteristics. Besides these robust characteristics, various
    motivations such as reusability, resiliency, technology stack, replaceability,
    and maintainability (Cebeci and Korçak, 2020) have driven us to use this architecture.
    Lastly, the existing studies have been examined in terms of data storage types
    and communications protocols used as well. As can be seen from Table 1, the communications
    protocols used in current studies are not very different from each other. In some
    of the studies the combination of different protocols has been used. Wi-Fi is
    the most frequently used protocol in current studies (Vidrascu and Svasta, 2017a,
    Vidrascu et al., 2017b, jiangyi et al., 2019, Yusof et al., 2019, Ochoa et al.,
    2019, Zabasta et al., 2019, Mahamud et al., 2019, Johannsen et al., 2020, Hong
    et al., 2020, Komasilovs et al., 2019). There is only one study each using the
    Lora (Debauche et al., 2018) and DigiMesh (Kridi et al., 2016) protocols. The
    second frequently used protocol is 3G/4G. It has been used by five different studies
    (Edwards Murphy et al., 2015, Fiona Edwards-Murphy et al., 2016, Vidrascu et al.,
    2017b, Zabasta et al., 2019, Tymoteusz Cejrowski et al., 2020, Komasilovs et al.,
    2019). The ZigBee protocol has been used in three studies (Murphy et al., 2015,
    Edwards Murphy et al., 2015, Fiona Edwards-Murphy et al., 2016). In the proposed
    work, ZigBee has been used to transmit the data from routers to the coordinators
    and the Wi-Fi has been used to submit data from coordinators to the server via
    microservices. In most of the studies, it has not been possible to identify which
    database or storage option has been used. However, Redis (Debauche et al., 2018),
    PostgreSQL (Debauche et al., 2018), Druid (Debauche et al., 2018), MySQL (Zabasta
    et al., 2019, Hong et al., 2020), MongoDB (Komasilovs et al., 2019) and MQTT local
    database (Mahamud et al., 2019) have been determined as used data storage options
    in current studies. In the proposed work, MS SQL Server as a relational database
    management system and Neo4j Graph Database Management System as a NoSQL database
    system have been used. 3. System architecture and developed WSN-based beehive
    monitoring platform 3.1. System architecture In this study, a WSN-based beehive
    monitoring platform, which has been established to monitor inside the beehives
    and the changes in weather conditions of the beehive’s location, has been developed
    based on a multi-layered microservices-based architecture as represented in Fig.
    1. The system architecture consists of five different layers: physical layer,
    microservices layer, open data layer, applications layer, and domain stakeholder
    layer. The layers of the system architecture are interrelated with each other.
    The flow of data is from physical layer through the applications layer. In other
    words, the data is being generated by the sensors in physical layer and transmitted
    via microservices to the applications. Download : Download high-res image (534KB)
    Download : Download full-size image Fig. 1. System Architecture. The physical
    layer is the wireless sensor network that consists of sensors, routers, and coordinators.
    There can be different types of sensors which are plugged inside the beehives
    or established into external devices with the purpose of monitoring the weather
    conditions. The plugged sensors can measure various data types represented in
    Table 1. The collected data from sensors has been transmitted to the coordinators
    via routers. Different communication protocols such as 802.15.4, ZigBee, DigiMesh,
    and LoRaWAN can be used while the process of data transmission has been performed
    from routers to coordinators. As in the developed system in this work, coordinators
    which are responsible to transmit the data received from routers to the server
    can be tiny and single-board computers such as Raspberry Pi, Orange Pi, and BeagleBone.
    The microservices layer consists of a set of microservices which are responsible
    to manage entire data transactions. The microservices in the relevant layer can
    be interrelated with each other and can have its own database or data models.
    However, it is worth bearing mind that each one of the microservices should have
    only one responsibility in the proposed system. Besides one of the responsibilities
    of the microservices layer is to transmit data collected from physical layer to
    the server, another responsibility of the microservices is to expose functionality
    by accepting and returning data to the client applications. Furthermore, the microservices
    layer is responsible to drive the interoperability between the components of the
    proposed system. There can be different types of software applications which use
    collected data in accordance with the proposed architecture. It has been foreseen
    that desktop, mobile, and web applications can be developed to manage entire processes
    of the proposed system. The open data layer provides sharing collected data in
    RDF/JSON, RDF/XML, Notation 3, N-Triples, Turtle, XML, JSON, HTML, CSV, and Excel
    formats. Sample data generated by the system in XML, JSON, RDF/XML, RDF/JSON,
    N-Triples, and Turtle formats have been provided in Table B1, Table B2, Table
    B3, Table B4, Table B5, and Table B6 respectively. Due to this study focuses on
    open data concept in the context of beekeeping, the open data layer is one of
    the most significant layers of the proposed architecture. What really matters
    is that to share the data in any open formats or frequently used other formats
    rather than in which platform the data is being shared for the stakeholders or
    end users. The last layer is the stakeholder layer which consists of different
    actors who use the shared open data by the system with the aim of solving issues
    in beekeeping domain. Each actor in proposed system plays a vital role in demonstrating
    that the functionalities of the proposed system are worthwhile for beekeeping
    activities. Even if one of the most significant objective of this study is to
    publish and share collected data in open formats, it is much more important to
    generate beneficial information for beekeepers and other domain stakeholders.
    Therefore, each one of stakeholders bears tremendous responsibility within the
    system. 3.2. The developed smart beehive monitoring system The proposed WSN-based
    beehive monitoring platform has been developed pertinent to a multi-layered microservices-based
    architecture. It has been comprised of a typical WSN, a set of microservices,
    a web-based platform which is in charge of managing whole IoT devices and open
    data generation, and a mobile-based software application. We have examined the
    existing systems such as hiveeyes.org, which is a flexible beehive monitoring
    infrastructure platform and toolkit based on affordable hardware, wireless telemetry
    and modern software (The Hiveeyes Developers, n.d.). One can see that the system
    provides only data in JSON and CSV formats. On the other hand, our research provides
    the measured environmental conditions data in XML, JSON, RDF/XML, RDF/JSON, N-Triples,
    Turtle, Notation 3, HTML, CSV, and Excel Spreadsheet. The sample data generated
    by the system in XML, JSON, RDF/XML, RDF/JSON, N-Triples, and Turtle formats have
    been provided in Table B1, Table B2, Table B3, Table B4, Table B5, and Table B6
    respectively. Furthermore, the present paper proposes a WSN-based monitoring system
    based on open data concept using microservice architecture for the beehives. The
    objective of adopting microservices architecture for the proposed system is to
    be able to deal with long-standing problems with heterogeneity, interoperability,
    scalability, agility, reliability, maintainability issues, and in turn achieve
    sustainable WSN-based beehive monitoring systems. There are one coordinator and
    two routers in the established WSN. The first one of the routers has been established
    with the aim of measuring temperature, humidity, pressure, carbon monoxide concentration,
    and nitrogen dioxide concentration data types inside the beehive. In addition,
    it detects the altitude of the beehive’s location and also measures the weight
    of the beehive. BME 280, MICS-4514 sensors and a HX711 amplifier module with the
    load cells have been plugged in Arduino Uno microcontroller of the first router
    which has been described as the router inside of the beehive. The front, side,
    and interior views of the first router which has been designed and created as
    a part of the beehive are shown in Fig. 2. Download : Download high-res image
    (283KB) Download : Download full-size image Fig. 2. The designed and developed
    smart beehive, in other words Router 1: (a) Front view of the beehive; (b) The
    left side view of the beehive; (c) The interior view of the beehive. The second
    router has been established outside of the beehive because of measuring the weather
    temperature, weather humidity, hydrogen concentration, LPG concentration, carbon
    monoxide concentration, alcohol concentration, and propane concentration data
    types. DHT21 AM2301 and the grove - gas sensor (MQ2) module have been plugged
    in Arduino Mega 2560 R3 microcontroller of the second router. The second has been
    shown in Fig. 3a. Download : Download high-res image (266KB) Download : Download
    full-size image Fig. 3. The designed and developed devices: (a) Router 2 device;
    (b) Coordinator device. Each one of the routers has XBee Pro S2C Zigbee RF modules
    to transmit measured data to the coordinator device. The XBee modules have been
    communicated with each other using Application Programming Interface (API) operations,
    which mean that the communication into the wireless sensor network is being carried
    out with a structured interface, in other words API frames (Digi, 2020). The collected
    data is transmitted in hexadecimal format and then, it is converted to ASCII format
    that comprises of key-value pairs (Aydin and Aydin, 2020). Every character is
    represented as hex bytes in the API frame. Routers and sensor have been represented
    with “RID” and “SID”. Each measurement data type has been represented as particular
    keys that were generated by considering its abbreviation (e.g. WT: Weather Temperature,
    Weather Humidity: WH, Beehive Weight: BW, and AL: Altitude). According to representation
    format of the transmitted data, for instance, weather temperature data type with
    26.50 °C can be encoded as “RID:105;SID:1000;WT:26.50” and all bytes are represented
    in hex format (Fig. 4). Download : Download high-res image (147KB) Download :
    Download full-size image Fig. 4. API data frame structure in hex format. The coordinator
    device (Fig. 3b) in WSN consists of an Arduino UNO microcontroller board and a
    Raspberry Pi 3 Model B, which is a tiny, single-board, and low-cost computer.
    Raspberry Pi OS, the official operating system supported by the Raspberry Pi Foundation,
    is installed on the Raspberry Pi computer and also, a Python program that receives
    the collected data from routers through the serial port runs on this computer.
    The received data by reading serial port is transmitted to the server via microservices
    with the aim of storing in database management systems. There are nine different
    services, Coordinators Service (CS), Frames Service (FS), Identity Service (IS),
    Location Service (LS), Log Management Service (LMS), Routers Service (RS), Sensor
    Measurement Service (SMS), Sensors Service (SS), and Wireless Sensor Network Service
    (WSNS). Table 2 provides the summary definition of each microservice. Table 2.
    Microservices of proposed system. Service Name Service Description Coordinators
    Service Includes general operations that perform CRUD functions for coordinators.
    Frames Service Includes operations that translate the structured data packets
    (called frames) in XBee API mode from HEX to ASCII. In addition, includes another
    operation that decomposes the translated data into three parts consisting of router,
    sensor, and measurement information. Identity Service Includes authentication
    and authorization operations for web, mobile, and other client applications, which
    have been used to monitor the beehives. Location Service Includes operations that
    provide to list countries, cities, counties, and districts, which have been used
    for defining the location information of the beehives. Log Management Service
    Includes operations that save and retrieve the exceptions occurred during the
    execution of microservices. Routers Service Includes general operations that perform
    CRUD functions for routers. Sensor Measurement Service Includes general operations
    that perform CRUD functions for sensor measurements. Sensors Service Includes
    general operations that perform CRUD functions for sensors. WSN Service Includes
    general operations that perform CRUD functions for wireless sensor networks. CRUD:
    Create, Read, Update, and Delete; HEX: Hexadecimal; ASCII: American Standard Code
    for Information Interchange; API: Application Programming Interface. One approach
    for constructing the communication architecture between client applications and
    microservices is to use the API gateway pattern. On the other hand, the client
    applications can use direct client-to-microservice communication architecture.
    It has been favored to use direct client-to-microservice communication architecture
    due to the proposed system is not so large. Furthermore, the general requirements
    of the client applications in the system are similar with each other. When it
    is considered that the protocols used by microservices do not differ from each
    other, it has not been favored using API gateway pattern as a communication architecture.
    However, it is a well-known fact that API gateway patterns can be very convenient
    for microservice-based applications and can solve various issues such as coupling,
    too many round trips, security, and cross-cutting concerns (de la Torre et al.,
    2020). The microservices have been developed in Visual Studio integrated development
    environment with C# programming language using Windows Communication Foundation
    (WCF) which supports lots of commonly-accepted styles and standards, inclusive
    of SOAP, XML, and JSON (Sharp, 2010). The endpoint bindings of the developed microservices
    have been configured with WebHttpBinding to implement the Representational State
    Transfer (REST) model with the objective of exposing functionalities directly
    via HTTP requests. The data collected from sensors and transmitted via microservices
    to the server are stored in Microsoft SQL Server relational database management
    system. Furthermore, Neo4j Graph Database as NoSQL database option has been added
    to the proposed system due to avoid uncertainties in the data structure. With
    the use of a graphical database, increasing performance of the system, providing
    much more flexible data model, and developing much more agile system have been
    aimed. Graph of nodes and relationships with properties and labels have been represented
    in Fig. A.4. Each one of the microservices is responsible to operate only one
    domain. For instance, RS is in charge of performing and managing create, read,
    update, and delete operations for the router model.) The microservices and their
    data models have been presented on Fig. 5. Download : Download high-res image
    (768KB) Download : Download full-size image Fig. 5. Microservices and their data
    models. It is necessary to emphasize that the microservices represented in Fig.
    5 provide an efficient way to improve the sustainability of the proposed WSN-based
    beehive monitoring system. Furthermore, considering decentralized data management
    and flexible deployment characteristics of microservices architecture, adopting
    that in the context of beehive monitoring systems eases the processes of system
    maintenance. The data models represented on Fig. 5 have been designed and created
    considering the requirements of the client applications of the proposed system.
    The most important point here is that the entire monitoring system has been developed
    in compliance with the proposed architecture. There are four different client
    applications; a web-based IoT Hub application, a mobile-based Android application,
    a Python application, and a Universal Windows Platform (UWP) application in the
    proposed system. IoT Hub is a web-based application, which has been implemented
    with the aim of managing whole operations concerning the physical components of
    WSN-based systems in the context of agriculture and livestock domains. It has
    been developed with C# programming language using ASP .NET MVC Framework in Visual
    Studio. A sample UI that is for monitoring the WSN devices can be seen in Fig.
    A1. The mobile-based client application represented in Fig. A2 is an Android application
    which has been developed to monitor collected data through physical devices with
    Kotlin programming language in Android Studio IDE. Another client application
    is in charge of managing serial communication between the coordinator device and
    Raspberry Pi computer. It has been developed with Python programming language
    to read incoming sensor data via the coordinator device which is an Arduino Uno
    microcontroller and plugged to the serial port of Raspberry Pi computer. The last
    client application represented in Fig. A3 has been built as a UWP app to monitor
    sensor data on Windows devices such as tablets and PCs. Regarding the requirements
    of stakeholders in the beekeeping domain, it can be published to the Windows Store
    for making available for them. UWP app and Android Mobile App are also responsible
    for generating warning messages for the domain stakeholders when unusual sudden
    changes in weather and environmental conditions happen. Thus, domain stakeholders,
    particularly beekeepers have an important opportunity to take the necessary precautions
    to keep the bees healthy. There are ten different file formats supported by the
    proposed system to provide open data for stakeholders in the beekeeping domain.
    eXtensible markup language (XML) allows data sharing between different software
    systems regardless of software and hardware (Introduction to XML, 2021). JavaScript
    Object Notation (JSON) which is the frequently used file format (What is JSON,
    2021) and Hypertext Markup Language (HTML) which is the standard markup language
    for Web pages (What is HTML, 2021) are also supported file formats by the proposed
    system. Comma-separated values (CSV) and Excel spreadsheets have been supported
    by the system to provide powerful analyzing capabilities and calculating operations.
    One of the most significant capabilities of the proposed system is to include
    the semantic web features by supporting different types of resource description
    framework (RDF) file types. In this context, RDF/XML that is standard model for
    data interchange on the Web (Framework, 2021); RDF/JSON that is an RDF graph to
    be written in a form compatible with JSON (Davis et al., 2021); N-triples that
    is a line-based, plain text format for encoding RDF graph (David, 2021); and Notation
    3 that is an assertion and logic language, superset of RDF (Tim and Dan, 2021)
    have been supported file formats by the system. Terse RDF triple language (Turtle),
    which is an RDF graph to be written in a compact and natural text form (David
    et al., 2021), is the last file format supported by the proposed system. One of
    the major objectives of the proposed system is to publish open data through client
    applications for the stakeholders in the beekeeping domain by providing robust
    and sustainable software infrastructure to be able to solve issues related to
    the beekeeping domain. It should not be noted that the sustainability of the proposed
    system can only be achieved with the active participation of stakeholders in data
    processing activities in the field of beekeeping. The beekeepers, scientists,
    data analyst, software developers, and entrepreneurs can be considered as the
    domain stakeholders to achieve this objective in the initial release of the proposed
    system. 4. Evaluating performance of the proposed system 4.1. Load testing of
    microservices Each one of the microservices of the proposed system have been tested
    with the aim of measuring their responses towards a certain number of requests.
    However, only the test results of the most critical and frequently consumed ones
    have been included in this section. Other test results have been added to the
    Appendix C section. The open source software Apache JMeter has been used to perform
    the load tests of the microservices. The microservices have been published on
    a Virtual Private Server (VPS) installed 64-bit Windows Server 2016 Datacenter.
    The processor of the server is Intel® Xeon® CPU E5-2630 v4 @ 2.20 GHz and the
    installed memory (RAM) is 8 GB. The routers send data to the coordinator every
    5 min. The sent data is in the following format “RID:[ROUTER ID];SID:[SENSOR ID];[MEASUREMENT
    DATA TYPE]:[MEASURED VALUE]”. For example, in the proposed system, assume that
    weather temperature (WT = 26.50) value is being collected through BME 280 Sensor
    (ID = 1000) plugged on the Beehive Inner Router 1 (ID = 105). In this case the
    sent data is represented in ASCII format as “RID:105;SID:1000;WT:26.50”, and also
    it is represented in HEX format as “7E 00 27 10 01 00 00 00 00 00 00 00 00 FF
    FE 00 00 52 49 44 3A 31 30 35 3B 53 49 44 3A 31 30 30 30 3B 57 54 3A 32 36 2E
    35 30 11”. The coordinator transmits such gathered data from routers through the
    relevant microservices. The proposed system has only two routers and one coordinator.
    On the other hand, it is worth bearing in mind that there is going to be hundreds
    of beehives in real-world scenario. Therefore, the behaviors of microservices
    have been monitored with six different test plans. Even though the data is submitted
    to the server every 5 min, the test scenarios have been planned to be performed
    within one minute with different number of requests. Thus, the performance of
    microservices has been tested under more than expected load, in other words, the
    requests of client applications that are expected to increase continuously. The
    behaviors of SMS, FS, and LMS microservices have been monitored with a different
    number of six HTTP requests test plans. In the test cases, 500, 1000, 2000, 3000,
    4000, and 5000 requests have been submitted to the server in 60-seconds periods
    via SMS, FS, and LMS microservices. On the other hand, the behaviors of CS, IS,
    LS, RS, SS, and WSNS have been examined with five different test plans that send
    10, 50, 100, 250, and 500 requests, respectively. Table 3 shows the experimental
    data which includes average response time, minimum response time, maximum response
    time, and the throughput measured in Kilobytes per second while load testing is
    being performed for SMS microservice. Table 3. Sensor measurement service load
    test results. Total Number of HTTP Requests Average Min Max Received (KB/sec)
    Sent (KB/sec) 500 296 245 1301 7.54 3.72 1000 306 247 1200 15.05 7.43 2000 277
    217 1267 30.10 14.85 3000 261 216 562 45.16 22.27 4000 280 217 1398 60.22 29.70
    5000 329 217 1379 74.52 36.75 Average: average response time (millisecond); Min:
    minimum response time (millisecond); Max: maximum response time (millisecond);
    Received and Send: The throughput measured in Kilobytes per second. According
    to the test results, under 500 requests, SMS microservice responses to the client
    at average 296 ms, and the minimum and maximum response time are 245 ms and 1301 ms,
    respectively. On the other hand, average, minimum, and maximum response times
    are 329 ms, 217 ms, and 1379 ms of SMS microservice for 5000 requests. Fig. 6
    compares the average, minimum, and maximum response times. Download : Download
    high-res image (263KB) Download : Download full-size image Fig. 6. Average, minimum,
    and maximum elapsed time in milliseconds for Sensor Measurement Service. The results
    obtained from the load testing process of SMS show that even if the number of
    clients in other words, the number of routers both inside of beehives or outside
    of beehives increases and reach at 5000, the system will be able to collect and
    store data properly. The second most frequently consumed microservice is FS. As
    mentioned in the section that introduces the microservices in this study, FS is
    in charge of converting API frame data into key-value pairs. This shows a need
    for FS microservice to be consumed by the coordinator devices when every request
    and response actions are being performed with the aim of storing collected sensor
    data. Therefore, it is essential to run load test cases for FS and evaluate the
    test results in terms of providing important insights into the robustness of the
    proposed system. The load test results of FS microservice have been presented
    in Table 4. For the maximum number of requests, the average, minimum, and maximum
    response times are 186 ms, 138 ms, and 1473 ms, respectively. Table 4. Frames
    service load test results. Total Number of HTTP Requests Average Min Max Received
    (KB/sec) Sent (KB/sec) 500 183 146 469 7.44 3.12 1000 182 143 1171 14.91 6.25
    2000 177 140 1179 29.74 12.47 3000 175 143 1295 44.59 18.70 4000 178 141 1206
    59.45 24.93 5000 186 138 1473 81.18 31.28 Average: average response time; Min:
    minimum response time; Max: maximum response time; Received and Send: The throughput
    measured in Kilobytes per second. Fig. 7 shows the comparison of average, minimum,
    and maximum response time of FS microservice. As total number of HTTP requests
    increase, maximum response time shows a gradual rise because of the increase of
    the total amount of the throughput measured in Kilobytes per second. These results
    indicate that the performance of the proposed system will not be negatively affected
    with the increase of total number of router devices. Download : Download high-res
    image (277KB) Download : Download full-size image Fig. 7. Average, minimum, and
    maximum elapsed time in milliseconds for Frames Service. The third most frequently
    consumed microservice is LMS. LMS, which is responsible handling the exceptions
    occurred at the operational level in microservices, is consumed by each microservice
    as loosely-coupled within the system. Thus, monitoring the performance of LMS
    is quite important in terms of providing the sustainability of proposed system.
    Table 5 shows the load test results of LMS microservice. Under total number of
    maximum requests in the test plans average response, minimum response, and maximum
    response elapsed times are 200 ms, 163 ms, and 1295 ms, respectively. The received
    and sent throughput have been measured as 74.50 KB/sec and 42.68 KB/sec, respectively.
    Table 5. Log Management Service Load Test Results. Total Number of HTTP Requests
    Average Min Max Received (KB/sec) Sent (KB/sec) 500 204 168 447 7.47 4.27 1000
    213 170 691 14.90 8.54 2000 235 198 571 29.80 17.07 3000 213 164 1240 44.68 25.60
    4000 203 165 1248 59.62 34.15 5000 220 163 1295 74.50 42.68 Average: average response
    time; Min: minimum response time; Max: maximum response time; Received and Send:
    The throughput measured in Kilobytes per second. Fig. 8 presents the comparison
    of average, minimum, and maximum response times of LMS microservice under the
    certain total number of HTTP requests in 60 s. Download : Download high-res image
    (279KB) Download : Download full-size image Fig. 8. Average, minimum, and maximum
    elapsed time in milliseconds for Log Management Service. Minimum and maximum response
    times should be as low as possible, ideally less than 1 s (1000 ms). However,
    they can be different up to the internet connection quality, bandwidth, client
    computer’s features, and server computer’s features. When one looks at the results
    of average response times represented in Table 3, Table 4, and Table 5, one can
    see that the average response time for each case is less than 1000 ms. This means
    that the proposed system can operate smoothly under current conditions. In this
    section of the study, we shall present the load test results of frequently consumed
    microservices which play critical roles in working of the entire system with high
    performance. It does not mean that the other six microservices which are CS, IS,
    LS, RS, SS, and WSNS are not important for the proposed system. Since they have
    not been consumed as frequently as SMS, FS, and LMS microservices, the test results
    of the relevant microservices were not demonstrated within this section in spite
    of their load tests having been performed within the scope of the study. Instead,
    the test results of CS, IS, LS, RS, SS, and WSNS have been provided in Table C1
    Table C2, Table C3, Table C4, Table C5, and Table C6, respectively. 4.2. Load
    testing of IoT Hub The behavior of IoT Hub has been monitored with five HTTP requests
    test plans. Considering the likely users who monitor the data collected by their
    beehives using IoT Hub, the total numbers of users for each test case have been
    determined as 10, 50, 100, 250, and 500, respectively. Similar within the microservices
    test cases, the requests have been submitted to the server in 60-seconds periods.
    The results obtained from the load tests of IoT Hub are presented in Table 6.
    It can be seen from the data that under the likely total number of maximum requests
    in the test plans, the average response elapsed times are 169, 158, 157, 178,
    and 178, respectively. The performance of the IoT Hub is satisfying due to each
    of the measured average response elapsed times are less than 1000 ms. Table 6.
    IoT Hub Load Test Results. Total Number of HTTP Requests Average Min Max Received
    Data (KB/sec) Sent Data (KB/sec) 10 169 104 234 6.39 0.55 50 158 89 315 29.42
    2.51 100 157 87 1217 58.23 4.97 250 178 88 1254 144.67 12.34 500 178 86 1683 289.02
    24.65 Fig. 9 presents the comparison of average, minimum, and maximum response
    times of IoT Hub under the certain total number of HTTP requests in 60 s. Download
    : Download high-res image (258KB) Download : Download full-size image Fig. 9.
    Average, minimum, and maximum elapsed time in milliseconds for IoT Hub. 5. Discussion
    A WSN-based beehive monitoring platform has been developed using microservices
    architecture within the scope of this paper. There are a great deal of motivations
    behind adopting microservices architecture in the developed system. Despite there
    are many useful characteristics of microservices architecture, we shall point
    out how to utilize its essential characteristics for the proposed beehive monitoring
    systems and discuss how we contribute to the body of knowledge. Microservices
    architecture has been adopted to the WSN-based Beehive Monitoring Platform to
    overcome heterogeneity, interoperability, scalability, extensibility, performance
    and maintainability issues due to its flexibility, lightweight and loose coupling
    (Benayache et al., 2019, Sun et al., 2017, Valdivia et al., 2019). Furthermore,
    it has been considered that microservices architecture can make the WSN-based
    Beehive Monitoring Platform agile and reliable (Hasselbring and Steinacker, 2017).
    The developed WSN-based Beehive Monitoring Platform is heterogeneous in respect
    to operating systems, programming languages, frameworks, data storage options,
    communication protocols, and client applications. For instance, four different
    operating systems (OS), three different programming languages, and two database
    systems have been used within the developed system. A particular server operating
    system (Windows Server 2016) has been used for hosting the microservices and web
    applications. A desktop-oriented operating system (Windows 10 OS) which supports
    universal apps has been used for running universal windows client application.
    A specialized operating system for single-board computers (Raspberry Pi OS) has
    been installed on the coordinator device which is a Raspberry Pi in the system.
    A mobile operating system (Android OS) has been used for running mobile-based
    client application which has been developed to monitor the beehives with mobile
    phones. Furthermore, C# for developing microservices and universal windows client
    application, Python for developing serial port reader application, and Kotlin
    for developing mobile-based client application have been used within the system
    respectively. Lastly, a relational database management system (Microsoft SQL Server
    2017) and Neo4j Graph Database Management System have been used to store collected
    data. It also should be noted that various libraries and frameworks have been
    used while developing the components of the system. Despite the fact that such
    technology heterogeneity is not only inevitable and but also necessary for such
    systems, it is quite challenging to get whole system components to work in harmony.
    On the other hand, the aforementioned challenge has been eliminated using microservices
    architecture for the developed system. Microservices architecture is found to
    be very useful to overcome such heterogeneity (Mena et al., 2019, Ma and Fan,
    2019, Fernández-García et al., 2018, Cherradi and Bouziri, 2017). Considering
    the changing requirements of stakeholders, system needs, and technology heterogeneity,
    it is quite important that the developed system should be agile to incorporate
    required changes. In other words, the developed system should be able to adapt
    to the new situations and quickly meet the new requirements. Therefore, being
    agile is the fate of WSN-based and IoT-based systems. Two brief examples for the
    developed system might clarify this concept. In the developed system, there are
    a universal windows application, an Android mobile application, and a Python application.
    However, new requirements may arise for monitoring sensor data in iOS mobile applications
    or web-based applications developed with PHP, Java, Python or other programming
    languages. On the other hand, the coordinator device and its OS can be changed
    with another device and OS. It should be noted that, in both cases, the data needs
    to be transmitted to the server or requested from the server. One of the most
    important reasons for adopting microservices architecture in the developed system
    is that it facilitates agility (Bogner et al., 2019) and solves these problems
    by enabling efficient integration and interoperability. In the developed system,
    there is only one beehive that has been developed as a pilot practice. However,
    the system is going to generate much more data collected from the hundreds of
    beehives. This means that total number of requests to the microservices will increase
    and also there will be a need to implement each operation performed by one beehive
    for the included new ones. While expanding the developed system by including new
    beehives, it is worth bearing in mind that scalability issues can arise and these
    issues have to be resolved. One of the other motivations behind using microservices
    is to solve such scalability issues (Morabito et al., 2018, Krämer et al., 2019,
    Wan et al., 2018, Roca et al., 2020) that might be appeared in the system by designing
    them to handle many concurrent requests. As can be seen from the Table 3;Table
    4 , and Table 5, when the system is extended to be able to be handled 5000 of
    HTTP requests, performance of proposed system will not be adversely affected with
    the increase of total number of router devices. Non-intrusive monitoring beehive
    and outer weather conditions are quite important for beekeepers to keep the bees
    healthy. The reliability and availability issues of services are the case that
    cannot be tolerated by the domain stakeholders, particularly beekeepers. Given
    the fact that microservices architecture have variety of processes that prevent
    the performance and connectivity problems, it has been adopted in the proposed
    system with the aim of providing the reliability and availability (Xia et al.,
    2018, Muhammad Waseem et al., 2020, Soldani and Tamburri, 2018). Several operations
    within the developed system are executed by different components of the system.
    For instance, the conversion of API frame data from hexadecimal to decimal values
    can be used by both a Python application running on the Raspberry Pi OS and a
    C# application running on the Windows IoT Core OS. Software applications developed
    with different programming languages and frameworks running on different operating
    systems use this operation. Creating a software library based on a single language
    to perform such operation will negatively affect the development process. Furthermore,
    it will also have a negative effect on providing the system agility and also will
    not be convenient approach to the decentralized governance characteristic of microservices
    architecture, which provides services being independent (Di Francesco et al.,
    2019). In order to eliminate this unsuitability, these libraries have been developed
    as microservices by taking into account the componentization feature of the microservice
    architecture within the developed system. Since data streaming from sensors to
    the coordinators is an ongoing process within the developed system, it is critical
    that the system is able to deploy only one part of the applications without updating
    entire application. For instance, while updating the routers or coordinators operations,
    generating, transmitting, and interpreting API frame data cannot be interrupted.
    Therefore, the deployment operation should be performed flexibly. Thus, microservices
    architecture solves the inflexible deployment problems (Soldani and Tamburri,
    2018, Foutse Khomh and Abtahizadeh, 2018, Cherradi et al., 2017, Taibi and Lenarduzzi,
    2018) in the context of beehive monitoring systems. Each microservice has been
    developed as autonomous services or APIs based on REST architectural style that
    utilizes the HTTP protocol and based on GET, PUT, POST, and DELETE HTTP verbs.
    The motivation behind using a REST architectural style is to ease the interoperability
    between the systems and also to implement the smart endpoints and dumb pipes characteristic
    of microservices architecture. It is essential to isolate each API or service
    from entire system while test cases are being run. For instance, while running
    the load test cases of sensor measurement, frames, and log management services,
    the other components and services of the system have not been affected. This is
    also a robust feature of the architecture improving the productivity of the entire
    system. Considering that beekeeping activities are carried out with tens or even
    hundreds of beehives, maintainability is a quite significant for smooth extension
    of the developed WSN-based Beehive Monitoring Platform. Extending the system can
    also reveal performance issues. Due to microservices architecture provides simple
    distributed development and high maintainability in such systems where performance
    is important (Taibi et al., 2017, Knoche and Hasselbring, 2018, Wang and Fahmi,
    2018, Jayawardana et al., 2018), it has been adopted to the developed system.
    It has been preferred adopting microservices architecture which has provided an
    opportunity to eliminate some of common challenges encountered while developing
    WSN and IoT-based monitoring system with the aforementioned reasons. Although
    the study has successfully demonstrated how to adopt microservices architecture
    to WSN-based Beehive Monitoring Platform, it has certain limitations in terms
    of making use of generated data in different open formats for different stakeholders.
    Stakeholder and user perspectives are utmost importance to any system which exhibits
    new features like the proposed system. As such, the stakeholder perspective can
    be addressed as a matter of an appropriate business model, platform strategy,
    or open platform governance model. Regarding the user perspectives, one needs
    to examine further an extent to which the proposed system is adopted in real-world
    settings. More specifically, it would be valuable to compare experiences of application
    developers in handling collected and published sensor data in different open formats.
    Considerably more work will be needed to adjust and visualize the open sensor
    data to provide a compact system architecture for the beekeeping domain. A greater
    focus on analyzing open sensor data could generate interesting findings that contribute
    more to the solution of common issues concerning the beekeeping domain. Funding
    “This research received no external funding” or “This research was funded by NAME
    OF FUNDER, grant number XXX” and “The APC was funded by XXX”. CRediT authorship
    contribution statement Sahin Aydin: Conceptualization, Methodology, Software,
    Validation, Formal analysis, Investigation, Resources, Writing – original draft,
    Writing – review & editing, Visualization, Project administration, Funding acquisition.
    Mehmet Nafiz Aydin: Validation, Investigation, Resources, Writing – review & editing,
    Supervision, Project administration, Funding acquisition. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgments We thank to Ahmet Bozkan who helped us in developing
    Android mobile application. We also thank to Fatih Ozturk for helping us in testing
    microservices. Lastly we thank to Mert Sezer and Umutcan Ates for helping us in
    lab studies. Appendix A. See Fig. A1, Fig. A2, Fig. A3, Fig. A4. Download : Download
    high-res image (175KB) Download : Download full-size image Fig. A1. IoT Hub Web
    Application Wireless Sensor Monitoring UI. Download : Download high-res image
    (794KB) Download : Download full-size image Fig. A2. Mobile Application UI Samples.
    Download : Download high-res image (183KB) Download : Download full-size image
    Fig. A3. Data Monitoring UI of UWP Client Application. Download : Download high-res
    image (164KB) Download : Download full-size image Fig. A4. Graph of Nodes and
    Relationships with Properties and Labels. Appendix B. See Table B1, Table B2,
    Table B3, Table B4, Table B5, Table B6. Table B1. XML Data Sample Generated by
    the System. <?xml version=“1.0″?> <SensorData xmlns:xsd=”https://www.w3.org/2001/XMLSchema“
    xmlns:xsi=”https://www.w3.org/2001/XMLSchema-instance“> <SensorDataResult>  <SensorTypeId > 1000</SensorTypeId>  <SensorTypeName > BME
    280 Temperature Humidity Barometric Pressure Sensor</SensorTypeName>  <DataTypeId > 3</DataTypeId>  <TypeName > Weather
    Humidity</TypeName>  <TypeDef > WH</TypeDef>  <SensorDataValue > 51.0064</SensorDataValue>  <SensorDataAddedDatetime > 2021–06–30 T00:24:39.65</SensorDataAddedDatetime>
    </ SensorDataResult> Table B2. JSON data sample generated by the system. [ {  “SensorTypeId”:
    1000,  “SensorTypeName”: “BME 280 Temperature Humidity Barometric Pressure Sensor”,  “DataTypeId”:
    3,  “TypeName”: “Weather Humidity”,  “TypeDef”: “WH”,  “SensorDataValue”: “51.0094″,  ”SensorDataAddedDatetime“:
    ”2021-06-30 T00:19:36.727″ } ] Table B3. RDF/XML Data Sample Generated by the
    System. <?xml version=“1.0″ encoding=”utf-8″?> <!DOCTYPE rdf:RDF [   <!ENTITY
    rdf ''https://www.w3.org/1999/02/22-rdf-syntax-ns#''>   <!ENTITY rdfs ''https://www.w3.org/2000/01/rdf-schema#''>   <!ENTITY
    xsd ''https://www.w3.org/2001/XMLSchema#''>   <!ENTITY sensorData ''https://www.opendatainagriculture.com/sensors#''>
    ]> <rdf:RDF xml:base=“https://www.opendatainagriculture.com/sensors” xmlns:rdfs=“https://www.w3.org/2000/01/rdf-schema#”
    xmlns:xsd=“https://www.w3.org/2001/XMLSchema#” xmlns:sensorData=“https://www.opendatainagriculture.com/sensors#”
    xmlns:rdf=“https://www.w3.org/1999/02/22-rdf-syntax-ns#”> <rdf:Description rdf:about=“https://www.opendatainagriculture.com/sensors/beekeeping#BME280″>  <sensorData:DataTypeId > 3</sensorData:DataTypeId>  <sensorData:Datetime > 10/11/2021
    9:20:17 AM</sensorData:Datetime>  <sensorData:SensorTypeId > 1000</sensorData:SensorTypeId>  <sensorData:SensorTypeName > BME
    280 Temperature Humidity Barometric Pressure Sensor</sensorData:SensorTypeName>  <sensorData:TypeDef > WH</sensorData:TypeDef>  <sensorData:TypeName > Weather
    Humidity</sensorData:TypeName>  <sensorData:Value > 57.1016 </sensorData:Value>
    </rdf:Description> </rdf:RDF> Table B4. RDF/JSON Data Sample Generated by the
    System. { “https://www.opendatainagriculture.com/sensors/beekeeping#BME280″: {  ”https://www.opendatainagriculture.com/sensors#DataTypeId“:
    [   {   ”value“: ”3″,    “type”: “literal”   } ],  “https://www.opendatainagriculture.com/sensors#Datetime”:
    [  {   “value”: “10/11/2021 9:20:17 AM”,   “type”: “literal”  } ],    “https://www.opendatainagriculture.com/sensors#SensorTypeId”:
    [  {   “value”: “1000″,   ”type“: ”literal“  } ],   ”https://www.opendatainagriculture.com/sensors#SensorTypeName“:
    [  {   ”value“: ”BME 280 Temperature Humidity Barometric Pressure Sensor“,   ”type“:
    ”literal“  } ],   ”https://www.opendatainagriculture.com/sensors#TypeDef“: [  {   ”value“:
    ”WH“,   ”type“: ”literal“  } ],   ”https://www.opendatainagriculture.com/sensors#TypeName“:
    [  {   ”value“: ”Weather Humidity“,   ”type“: ”literal“  } ],   ”https://www.opendatainagriculture.com/sensors#Value“:
    [  {   ”value“: ”57.1016 “,   ”type“: ”literal“   }  ]  } } Table B5. N-triples
    data sample generated by the system. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#DataTypeId> “3″. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#SensorTypeId> ”1000″. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#SensorTypeName> “BME 280 Temperature
    Humidity Barometric Pressure Sensor”. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#TypeName> “Weather Humidity”. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#TypeDef> “WH”. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#Value> “57.1016″. <https://www.opendatainagriculture.com/sensors/beekeeping#BME280>
    <https://www.opendatainagriculture.com/sensors#Datetime> ”10/11/2021 9:20:17 AM“.
    Table B6. Turtle Data Sample Generated by the System. @base < https://www.opendatainagriculture.com/sensors >.
    @prefix rdf: <https://www.w3.org/1999/02/22-rdf-syntax-ns#>. @prefix rdfs: <https://www.w3.org/2000/01/rdf-schema#>.
    @prefix xsd: <https://www.w3.org/2001/XMLSchema#>. @prefix sensorData: <https://www.opendatainagriculture.com/sensors#>.  <https://www.opendatainagriculture.com/   sensors/beekeeping#BME280 > sensorData:DataTypeId
    “3″;   sensorData:Datetime ”10/11/2021 9:20:17 AM“;   sensorData:SensorTypeId
    ”1000″;   sensorData:SensorTypeName “BME 280 Temperature Humidity Barometric Pressure
    Sensor”;   sensorData:TypeDef “WH”;   sensorData:TypeName “Weather Humidity”;   sensorData:Value
    “57.1016″; Appendix C. See Table C1, Table C2, Table C3, Table C4, Table C5, Table
    C6. Table C1. Coordinator service load test results. Total Number of HTTP Requests
    Average Min Max Received Data (KB/sec) Sent Data (KB/sec) 10 157 147 169 0.19
    0.07 50 153 113 188 0.89 0.31 100 148 123 460 1.76 0.62 250 156 103 702 4.34 1.52
    500 139 110 458 8.71 3.06 Table C2. Identity service load test results. Total
    Number of HTTP Requests Average Min Max Received Data (KB/sec) Sent Data (KB/sec)
    10 134 111 197 0.14 0.06 50 118 98 133 0.65 0.27 100 115 84 234 1.29 0.54 250
    110 84 302 3.21 1.34 500 115 81 569 6.39 2.68 Table C3. Location service load
    test results. Total Number of HTTP Requests Average Min Max Received Data (KB/sec)
    Sent Data (KB/sec) 10 115 99 158 0.91 0.04 50 135 93 189 4.17 0.17 100 195 84
    1207 8.25 0.34 250 239 83 1831 20.51 0.84 500 220 75 2260 40.57 1.67 Table C4.
    Routers service load test results. Total Number of HTTP Requests Average Min Max
    Received Data (KB/sec) Sent Data (KB/sec) 10 248 151 313 0.19 0.07 50 193 111
    491 0.88 0.30 100 181 116 284 1.74 0.59 250 175 107 279 4.32 1.48 500 177 104
    1233 8.62 2.95 Table C5. Sensors service load test results. Total Number of HTTP
    Requests Average Min Max Received Data (KB/sec) Sent Data (KB/sec) 10 175 126
    234 0.18 0.07 50 279 113 1264 0.82 0.30 100 284 114 3538 1.63 0.60 250 250 109
    4302 4.05 1.48 500 277 109 2267 8.03 2.94 Table C6. WSN service load test results.
    Total Number of HTTP Requests Average Min Max Received Data (KB/sec) Sent Data
    (KB/sec) 10 329 198 1216 0.19 0.06 50 337 168 1492 0.86 0.28 100 285 186 1249
    1.74 0.57 250 383 186 2284 4.31 1.42 500 362 183 2256 8.65 2.84 References Abd-El-Samie
    et al., 2021 Emtithal M. Abd-El-Samie, Nasr K. Basuny, Heba Seyam Molecular characterization
    of viruses found in honeybee (Apis mellifera) colonies infested with Varroa destructor
    and Nosema cerana in Egypt Mol. Cell. Probes, 57 (2021), 10.1016/j.mcp.2021.101731
    ISSN 0890-8508 Google Scholar Abejew and Zeleke, 2017 Tessema Aynalem Abejew,
    Zeleke Mekuriaw Zeleke Study on the beekeeping situation, the level of beekeepers
    knowledge concerning local honeybee subspecies, their productive characteristics,
    and behavior in Eastern Amhara Region, Ethiopia Adv. Agric. (2017), p. 6, 10.1155/2017/6354250
    Article ID 6354250 Google Scholar Abou-Shaara et al., 2017 H.F. Abou-Shaara, A.A.
    Owayss, Y.Y. Ibrahim, et al. A review of impacts of temperature and relative humidity
    on various activities of honey bees Insect. Soc., 64 (2017), pp. 455-463, 10.1007/s00040-017-0573-8
    View in ScopusGoogle Scholar Aksakalli et al., 2021 I.K. Aksakalli, T. Celik,
    A.B. Can, B. Tekinerdogan Systematic approach for generation of feasible deployment
    alternatives for microservices IEEE Access, 9 (2021), pp. 29505-29529, 10.1109/ACCESS.2021.3057582
    View in ScopusGoogle Scholar Aydin and Aydin, 2020 S. Aydin, M.N. Aydin Semantic
    and syntactic interoperability for agricultural open-data platforms in the context
    of IoT using crop-specific trait ontologies Appl. Sci., 10 (2020), p. 4460, 10.3390/app10134460
    View in ScopusGoogle Scholar Benayache et al., 2019 Ayoub Benayache, Azeddine
    Bilami, Sami Barkat, Pascal Lorenz, Hafnaoui Taleb MsM: A microservice middleware
    for smart WSN-based IoT application J. Netw. Comput. Appl., 144 (2019), pp. 138-154,
    10.1016/j.jnca.2019.06.015 ISSN 1084-8045 View PDFView articleView in ScopusGoogle
    Scholar Bogner et al., 2019 Bogner, J., Fritzsch, J., Wagner, S., Zimmermann,
    A., 2019. Microservices in industry: insights into technologies, characteristics,
    and software quality. In: 2019 IEEE International Conference on Software Architecture
    Companion (ICSA-C), Hamburg, Germany, pp. 187–195, doi: 10.1109/ICSA-C.2019.00041.
    Google Scholar Burrill and Dietz, 1981 R.M. Burrill, A. Dietz The response of
    honey bees to variations in solar radiation and temperature Apidologie, Springer
    Verlag, 12 (4) (1981), pp. 319-328 CrossRefGoogle Scholar Cebeci and Korçak, 2020
    K. Cebeci, Ö. Korçak design of an enterprise level architecture based on microservices
    Bilişim Teknolojileri Dergisi, 13 (4) (2020), pp. 357-371, 10.17671/gazibtd.558392
    Google Scholar Tymoteusz Cejrowski et al., 2020 Tymoteusz Cejrowski, Julian Szymański,
    Doina Logofătu Buzz-based recognition of the honeybee colony circadian rhythm
    Comput. Electron. Agric., 175 (2020), 10.1016/j.compag.2020.105586 ISSN 0168-1699
    Google Scholar Cherradi et al., 2017 Ghyzlane Cherradi, Adil El Bouziri, Azedine
    Boulmakoul, Karine Zeitouni Real-time HazMat environmental information system:
    A micro-service based architecture Procedia Comput. Sci., 109 (2017), pp. 982-987,
    10.1016/j.procs.2017.05.457 ISSN 1877-0509 View PDFView articleView in ScopusGoogle
    Scholar Cherradi and Bouziri, 2017 Ghyzlane Cherradi, Adil E.L. Bouziri, Azedine
    Boulmakoul, Karine Zeitouni Real-time microservices based environmental sensors
    system for hazmat transportation networks monitoring Transp. Res. Procedia, 27
    (2017), pp. 873-880, 10.1016/j.trpro.2017.12.087 ISSN 2352-1465 View PDFView articleView
    in ScopusGoogle Scholar Dai, 2019 W. Dai, et al. Semantic integration of plug-and-play
    software components for industrial edges based on microservices IEEE Access, 7
    (2019), pp. 125882-125892, 10.1109/ACCESS.2019.2938565 View in ScopusGoogle Scholar
    David et al., 2021 David, B., Tim, B.-L., Eric, P., Gavin, C., 2021. RDF 1.1 Turtle.
    Available online: https://www.w3.org/TR/turtle/ (accessed on 3 March 2021). Google
    Scholar David, 2021 David, B., 2021. RDF 1.1 N-Triples. Available online: https://www.w3.org/TR/n-triples/
    (accessed on 3 March 2021). Google Scholar Davis et al., 2021 Davis, I.; Thomas
    Steiner, T.; Arnaud, J.L.H., 2021 RDF 1.1 JSON Alternate Serialization (RDF/JSON).
    Available online: https://www.w3.org/TR/rdf-json/ (accessed on 3 March 2021).
    Google Scholar de la Torre et al., 2020 de la Torre, C., Wagner, B., Rousos, M.,
    2020. .NET Microservices: Architecture for Containerized .NET Applications. (Editors:
    Pope, M., Hoag, S.). (Edition v3.1.1). Microsoft Developer Division, .NET and
    Visual Studio product teams. Google Scholar Debauche et al., 2018 Olivier Debauche,
    Meryem El Moulat, Saïd Mahmoudi, Slimane Boukraa, Pierre Manneback, Frédéric Lebeau
    Web monitoring of bee health for researchers and beekeepers based on the internet
    of things Procedia Comput. Sci., 130 (2018), pp. 991-998, 10.1016/j.procs.2018.04.103
    ISSN 1877-0509 View PDFView articleView in ScopusGoogle Scholar Di Francesco et
    al., 2019 Paolo Di Francesco, Patricia Lago, Ivano Malavolta Architecting with
    microservices: A systematic mapping study J. Syst. Softw., 150 (2019), pp. 77-97,
    10.1016/j.jss.2019.01.001 ISSN 0164-1212 View PDFView articleView in ScopusGoogle
    Scholar Digi, 2020 Digi, 2020. XBee/XBee-PRO S2C Zigbee RF Module User Guide,
    2020 Digi International Inc. [Online]. Available: https://www.digi.com/resources/documentation/digidocs/pdfs/90002002.pdf
    (accessed on 03/12/2021). Google Scholar Edwards Murphy et al., 2015 Edwards Murphy,
    F., Popovici, E., Whelan, P., Magno, M., 2015. Development of an heterogeneous
    wireless sensor network for instrumentation and analysis of beehives. In: 2015
    IEEE International Instrumentation and Measurement Technology Conference (I2MTC)
    Proceedings, Pisa, Italy, pp. 346–351, doi: 10.1109/I2MTC.2015.7151292. Google
    Scholar Fiona Edwards-Murphy et al., 2016 Fiona Edwards-Murphy, Michele Magno,
    Pádraig M. Whelan, John O’Halloran, Emanuel M. Popovici b+WSN: Smart beehive with
    preliminary decision tree analysis for agriculture and honey bee health monitoring
    Comput. Electron. Agric., 124 (2016), pp. 211-219, 10.1016/j.compag.2016.04.008
    ISSN 0168-1699 View PDFView articleView in ScopusGoogle Scholar Eitzinger et al.,
    2019 Anton Eitzinger, James Cock, Karl Atzmanstorfer, Claudia R. Binder, Peter
    Läderach, Osana Bonilla-Findji, Mona Bartling, Caroline Mwongera, Leo Zurita,
    Andy Jarvis GeoFarmer: A monitoring and feedback system for agricultural development
    projects Comput. Electron. Agric., 158 (2019), pp. 109-121, 10.1016/j.compag.2019.01.049
    ISSN 0168-1699 View PDFView articleView in ScopusGoogle Scholar Fernández-García
    et al., 2018 Antonio Jesús Fernández-García, Luis Iribarne, Antonio Corral, Javier
    Criado, James Z. Wang A flexible data acquisition system for storing the interactions
    on mashup user interfaces Comput. Stand. Interf., 59 (2018), pp. 10-34, 10.1016/j.csi.2018.02.002
    ISSN 0920-5489 View PDFView articleView in ScopusGoogle Scholar José M. Flores
    et al., 2021 José M. Flores, Victoria Gámiz, Ángeles Jiménez-Marín, Alicia Flores-Cortés,
    Sergio Gil-Lebrero, Juan J. Garrido, María Dolores Hernando Impact of Varroa destructor
    and associated pathologies on the colony collapse disorder affecting honey bees
    Res. Vet. Sci., 135 (2021), pp. 85-95, 10.1016/j.rvsc.2021.01.001 ISSN 0034-5288
    View PDFView articleView in ScopusGoogle Scholar Framework, 2021 Resource Description
    Framework (RDF). 2021. Available online: https://www.w3.org/RDF/ (accessed on
    3 March 2021). Google Scholar Gan and Delimitrou, 2018 Y. Gan, C. Delimitrou The
    architectural implications of cloud microservices IEEE Comput. Archit. Lett.,
    17 (2) (2018), pp. 155-158, 10.1109/LCA.2018.2839189 View in ScopusGoogle Scholar
    Hasselbring and Steinacker, 2017 Hasselbring, W., Steinacker, G., 2017. Microservice
    architectures for scalability, agility and reliability in E-Commerce. In: 2017
    IEEE International Conference on Software Architecture Workshops (ICSAW), Gothenburg,
    Sweden, pp. 243–246, doi: 10.1109/ICSAW.2017.11. Google Scholar Hong et al., 2020
    W. Hong, B. Xu, X. Chi, X. Cui, Y. Yan, T. Li Long-Term and extensive monitoring
    for bee colonies based on internet of things IEEE Internet Things J., 7 (8) (2020),
    pp. 7148-7155, 10.1109/JIOT.2020.2981681 View in ScopusGoogle Scholar Introduction
    to XML, 2021 Introduction to XML, 2021. Available online: https://www.w3schools.com/xml/xml_whatis.asp
    (accessed on 3 March 2021). Google Scholar Mahan et al., 2010 R. James MahanField
    performance in agricultural settings of a wireless temperature monitoring system
    based on a low-cost infrared sensor Comput. Electron. Agric., 71 (2) (2010), pp.
    176-181, 10.1016/j.compag.2010.01.005 ISSN 0168-1699 View in ScopusGoogle Scholar
    Jayawardana et al., 2018 Jayawardana, Y., Fernando, R., Jayawardena, G., Weerasooriya,
    D., Perera, I., 2018. A full stack microservices framework with business modelling.
    In: 2018 18th International Conference on Advances in ICT for Emerging Regions
    (ICTer), Colombo, Sri Lanka, pp. 78–85, doi: 10.1109/ICTER.2018.8615473. Google
    Scholar jiangyi et al., 2019 jiangyi, Z., danhong, C., yu, Y.t., 2019. Design
    of intelligent hive and intelligent bee farm based on internet of things technology.
    In: 2019 Chinese Control And Decision Conference (CCDC), Nanchang, China, pp.
    2432–2435, doi: 10.1109/CCDC.2019.8832493. Google Scholar Johannsen et al., 2020
    Johannsen, C., Senger, D., Kluss, T., 2020. A DIY sensor kit, Gaussian Processes
    and a multi-agent system fused into a smart beekeeping assistant. In: 2020 16th
    International Conference on Intelligent Environments (IE), Madrid, Spain, pp.
    92–99, doi: 10.1109/IE49459.2020.9154974. Google Scholar Kasiotis et al., 2021
    Konstantinos M. Kasiotis, Effrosyni Zafeiraki, Eleftheria Kapaxidi, Elektra Manea-Karga,
    Spyridon Antonatos, Pelagia Anastasiadou, Panagiotis Milonas, Kyriaki Machera
    Pesticides residues and metabolites in honeybees: A Greek overview exploring Varroa
    and Nosema potential synergies Sci. Tot. Environ., 769 (2021), 10.1016/j.scitotenv.2021.145213
    ISSN 0048-9697 Google Scholar Ahmed Khattab et al., 2019 Ahmed Khattab, Serag
    E.D. Habib, Haythem Ismail, Sahar Zayan, Yasmine Fahmy, Mohamed M. Khairy An IoT-based
    cognitive monitoring system for early plant disease forecast Comput. Electron.
    Agric., 166 (2019), p. 105028, 10.1016/j.compag.2019.105028 ISSN 0168-1699 View
    PDFView articleView in ScopusGoogle Scholar Foutse Khomh and Abtahizadeh, 2018
    Foutse Khomh, S. Amirhossein Abtahizadeh Understanding the impact of cloud patterns
    on performance and energy consumption J. Syst. Softw., 141 (2018), pp. 151-170,
    10.1016/j.jss.2018.03.063 ISSN 0164-1212 View PDFView articleView in ScopusGoogle
    Scholar Kleinhenz et al., 2003 M. Kleinhenz, B. Bujok, S. Fuchs, J. Tautz Hot
    bees in empty broodnest cells: heating from within J. Exp. Biol., 206 (Pt 23)
    (2003), pp. 4217-4231, 10.1242/jeb.00680 PMID: 14581592 View in ScopusGoogle Scholar
    Knoche and Hasselbring, 2018 H. Knoche, W. Hasselbring Using microservices for
    legacy software modernization IEEE Softw., 35 (3) (2018), pp. 44-49, 10.1109/MS.2018.2141035
    View in ScopusGoogle Scholar Komasilovs et al., 2019 V. Komasilovs, A. Zacepins,
    A. Kviesis, S. Fiedler, S.M. Kirchner Modular sensory hardware and data processing
    solution for implementation of the precision beekeeping Agron. Res., 17 (2019),
    pp. 509-517 View in ScopusGoogle Scholar Krämer et al., 2019 Michel Krämer, Sven
    Frese, Arjan Kuijper Implementing secure applications in smart city clouds using
    microservices Fut. Gen. Comput. Syst., 99 (2019), pp. 308-320, 10.1016/j.future.2019.04.042
    ISSN 0167-739X View PDFView articleView in ScopusGoogle Scholar Kridi et al.,
    2016 Douglas S. Kridi, Carlos Giovanni N. de Carvalho, Danielo G. Gomes Application
    of wireless sensor networks for beehive monitoring and in-hive thermal patterns
    detection Comput. Electron. Agric., 127 (2016), pp. 221-235, 10.1016/j.compag.2016.05.013
    ISSN 0168-1699 View PDFView articleView in ScopusGoogle Scholar Lewis and Fowler,
    2014 Lewis, J., Fowler, M., 2014. Microservices. [Online]. Available: https://martinfowler.com/articles/microservices.html.
    Google Scholar Lusebrink et al., 2015 I. Lusebrink, R.D. Girling, E. Farthing,
    et al. The effects of diesel exhaust pollution on floral volatiles and the consequences
    for honey bee olfaction J. Chem. Ecol., 41 (2015), pp. 904-912, 10.1007/s10886-015-0624-4
    View in ScopusGoogle Scholar Lyu et al., 2020 Z. Lyu, H. Wei, X. Bai, C. Lian
    Microservice-based architecture for an energy management system IEEE Syst. J.,
    14 (4) (2020), pp. 5061-5072, 10.1109/JSYST.2020.2981095 View in ScopusGoogle
    Scholar Ma and Fan, 2019 Shang-Pin Ma, Chen-Yuan Fan, Yen Chuang, I-Hsiu Liu,
    Ci-Wei Lan Graph-based and scenario-driven microservice analysis, retrieval, and
    testing Fut. Gen. Comput. Syst., 100 (2019), pp. 724-735, 10.1016/j.future.2019.05.048
    ISSN 0167-739X View PDFView articleView in ScopusGoogle Scholar Mahamud et al.,
    2019 Mahamud, M.S., Al Rakib, M.A., Faruqi, T.M., Haque, M., Rukaia, S.A., Nazmi,
    S., 2019. Mouchak - An IoT basted smart beekeeping system using MQTT. In: 2019
    4th International Conference on Robotics and Automation Engineering (ICRAE), Singapore,
    pp. 84–88, doi: 10.1109/ICRAE48301.2019.9043815. Google Scholar Márquez et al.,
    2021 G. Márquez, C. Taramasco, H. Astudillo, V. Zalc, D. Istrate Involving stakeholders
    in the implementation of microservice-based systems: a case study in an ambient-assisted
    living system IEEE Access, 9 (2021), pp. 9411-9428, 10.1109/ACCESS.2021.3049444
    View in ScopusGoogle Scholar Mena et al., 2019 M. Mena, A. Corral, L. Iribarne,
    J. Criado A progressive web application based on microservices combining geospatial
    data and the internet of things IEEE Access, 7 (2019), pp. 104577-104590, 10.1109/ACCESS.2019.2932196
    View in ScopusGoogle Scholar Montoya et al., 2013 Francisco G. Montoya, Julio
    Gómez, Alejandro Cama, Antonio Zapata-Sierra, Felipe Martínez, José Luis De La
    Cruz, Francisco Manzano-Agugliaro A monitoring system for intensive agriculture
    based on mesh networks and the android system Comput. Electron. Agric., 99 (2013),
    pp. 14-20, 10.1016/j.compag.2013.08.028 ISSN 0168-1699 View PDFView articleView
    in ScopusGoogle Scholar Morabito et al., 2018 Roberto Morabito, Riccardo Petrolo,
    Valeria Loscrì, Nathalie Mitton LEGIoT: A lightweight edge gateway for the internet
    of things Fut. Gen. Comput. Syst., 81 (2018), pp. 1-15, 10.1016/j.future.2017.10.011
    ISSN 0167-739X View PDFView articleView in ScopusGoogle Scholar Murphy et al.,
    2015 Murphy, F.E., Srbinovski, B., Magno, M., Popovici, E.M., Whelan, P.M., 2015.
    An automatic, wireless audio recording node for analysis of beehives. In: 2015
    26th Irish Signals and Systems Conference (ISSC), Carlow, Ireland, pp. 1–6, doi:
    10.1109/ISSC.2015.7163753. Google Scholar Ochoa et al., 2019 Ochoa, I.Z., Gutierrez,
    S., Rodríguez, F., 2019. Internet of things: low cost monitoring BeeHive system
    using wireless sensor network. In: 2019 IEEE International Conference on Engineering
    Veracruz (ICEV), Boca del Rio, Veracruz, Mexico, pp. 1–7, doi: 10.1109/ICEV.2019.8920622.
    Google Scholar Osroosh et al., 2018 Yasin Osroosh, Lav R. Khot, R. Troy Peters
    Economical thermal-RGB imaging system for monitoring agricultural crops Comput.
    Electron. Agric., 147 (2018), pp. 34-43, 10.1016/j.compag.2018.02.018 ISSN 0168-1699
    View PDFView articleView in ScopusGoogle Scholar Petz et al., 2004 M. Petz, A.
    Stabentheiner, K. Crailsheim Respiration of individual honeybee larvae in relation
    to age and ambient temperature J. Comp. Physiol. B, 174 (7) (2004), pp. 511-518,
    10.1007/s00360-004-0439-z Epub 2004 Jul 22 PMID: 15278398 View in ScopusGoogle
    Scholar Popović et al., 2017 Tomo Popović, Nedeljko Latinović, Ana Pešić, Žarko
    Zečević, Božo Krstajić, Slobodan Djukanović Architecting an IoT-enabled platform
    for precision agriculture and ecological monitoring: A case study Comput. Electron.
    Agric., 140 (2017), pp. 255-265, 10.1016/j.compag.2017.06.008 ISSN 0168-1699 View
    PDFView articleView in ScopusGoogle Scholar Raji et al., 2020 M. Raji, A. Hota,
    T. Hobson, J. Huang Scientific visualization as a microservice IEEE Trans. Visual
    Comput. Graphics, 26 (4) (2020), pp. 1760-1774, 10.1109/TVCG.2018.2879672 View
    in ScopusGoogle Scholar Roca et al., 2020 Surya Roca, Jorge Sancho, José García,
    Álvaro Alesanco Microservice chatbot architecture for chronic patient support
    J. Biomed. Inform., 102 (2020), 10.1016/j.jbi.2019.103305 ISSN 1532-0464 Google
    Scholar Sharp, 2010 Sharp, J., 2010. Windows Communication Foundation 4 Step by
    Step. (Editor: Jones, R.). O’Reilly Media, Inc. Google Scholar Soldani and Tamburri,
    2018 Jacopo Soldani, Damian Andrew Tamburri, Willem-Jan Van Den Heuvel The pains
    and gains of microservices: A Systematic grey literature review J. Syst. Softw.,
    146 (2018), pp. 215-232, 10.1016/j.jss.2018.09.082 ISSN 0164-1212 View PDFView
    articleView in ScopusGoogle Scholar Souza Cunha et al., 2020 A.E. Souza Cunha,
    J. Rose, J. Prior, H.M. Aumann, N.W. Emanetoglu, F.A. Drummond A novel non-invasive
    radar to monitor honey bee colony health Comput. Electron. Agric., 170 (2020),
    10.1016/j.compag.2020.105241 ISSN 0168-1699 Google Scholar Sun et al., 2017 L.
    Sun, Y. Li, R.A. Memon An open IoT framework based on microservices architecture
    China Commun., 14 (2) (2017), pp. 154-162, 10.1109/CC.2017.7868163 View in ScopusGoogle
    Scholar Taibi et al., 2017 D. Taibi, V. Lenarduzzi, C. Pahl Processes, motivations,
    and issues for migrating to microservices architectures: an empirical investigation
    IEEE Cloud Comput., 4 (5) (2017), pp. 22-32, 10.1109/MCC.2017.4250931 View in
    ScopusGoogle Scholar Taibi and Lenarduzzi, 2018 D. Taibi, V. Lenarduzzi On the
    definition of microservice bad smells IEEE Softw., 35 (3) (2018), pp. 56-62, 10.1109/MS.2018.2141031
    View in ScopusGoogle Scholar The Hiveeyes Developers, n.d. The Hiveeyes Developers,
    n.d. The Hiveeyes Project. Retrieved March 13, 2022, from https://www.hiveeyes.org/.
    Google Scholar Tim and Dan, 2021 Tim, B.-L., Dan, C., 2021. Notation3 (N3): A
    Readable RDF Syntax. Available online: https://www.w3.org/TeamSubmission/n3/ (accessed
    on 3 March 2021). Google Scholar Ullah et al., 2021 Amjad Ullah, Ivana Tlak Gajger,
    Arnold Majoros, Showket Ahmad Dar, Sanaullah Khan, Kalimullah, Ayesha Haleem Shah,
    Muhammad Nasir Khabir, Riaz Hussain, Hikmat Ullah Khan, Mehwish Hameed, Syed Ishtiaq
    Anjum Viral impacts on honey bee populations: A review Saudi J. Biol. Sci., 28
    (1) (2021), pp. 523-530, 10.1016/j.sjbs.2020.10.037 ISSN 1319-562X View PDFView
    articleView in ScopusGoogle Scholar Valdivia et al., 2019 Valdivia, J.A., Limón,
    X., Cortes-Verdin, K., 2019. Quality attributes in patterns related to microservice
    architecture: a Systematic Literature Review. In: 2019 7th International Conference
    in Software Engineering Research and Innovation (CONISOFT), Mexico City, Mexico,
    pp. 181–190, doi: 10.1109/CONISOFT.2019.00034. Google Scholar Vidrascu and Svasta,
    2017a Vidrascu, M.G., Svasta, P.M., 2017a. Embedded software for IOT bee hive
    monitoring node. In: 2017 IEEE 23rd International Symposium for Design and Technology
    in Electronic Packaging (SIITME), Constanta, pp. 183–188, doi: 10.1109/SIITME.2017.8259887.
    Google Scholar Vidrascu et al., 2017b Vidrascu, M.G., Svasta, P.M., 2017b. Maintenance-free
    IOT gateway design for bee hive monitoring. In: 2017 IEEE 23rd International Symposium
    for Design and Technology in Electronic Packaging (SIITME), Constanta, pp. 189-193,
    doi: 10.1109/SIITME.2017.8259886. Google Scholar Wan et al., 2018 Xili Wan, Xinjie
    Guan, Tianjing Wang, Guangwei Bai, Baek-Yong Choi Application deployment using
    Microservice and Docker containers: Framework and optimization J. Netw. Comput.
    Appl., 119 (2018), pp. 97-109, 10.1016/j.jnca.2018.07.003 ISSN 1084-8045 View
    PDFView articleView in ScopusGoogle Scholar Wang and Fahmi, 2018 Wang, F., Fahmi,
    F., 2018. Constructing a service software with microservices. In: 2018 IEEE World
    Congress on Services (SERVICES), San Francisco, CA, USA, pp. 43–44, doi: 10.1109/SERVICES.2018.00035.
    Google Scholar Muhammad Waseem et al., 2020 Muhammad Waseem, Peng Liang, Mojtaba
    Shahin A systematic mapping study on microservices architecture in DevOps J. Syst.
    Softw., 170 (2020), 10.1016/j.jss.2020.110798 ISSN 0164-1212 Google Scholar What
    is HTML, 2021 What is HTML? 2021. Available online: https://www.w3schools.com/whatis/whatis_html.asp
    (accessed on 3 March 2021). Google Scholar What is JSON?, 2021 What is JSON? 2021.
    Available online: https://www.w3schools.com/whatis/whatis_json.asp (accessed on
    3 March 2021). Google Scholar Xia et al., 2018 Chongkun Xia, Yunzhou Zhang, Lei
    Wang, Sonya Coleman, Yanbo Liu Microservice-based cloud robotics system for intelligent
    space Rob. Auton. Syst., 110 (2018), pp. 139-150, 10.1016/j.robot.2018.10.001
    ISSN 0921-8890 View PDFView articleView in ScopusGoogle Scholar Yılmaz et al.,
    2021 E. Yılmaz, F.A. Sesli, Ö.F. Uzun Arıcılık Faaliyetleri İçin Uygun Yerlerin
    Coğrafi Bilgi Sistemleri İle Belirlenmesi: Şavşat İlçesi Örneği Black Sea J. Eng.
    Sci., 4 (3) (2021), pp. 111-116, 10.34248/bsengineering.948181 Google Scholar
    Yusof et al., 2019 Yusof, Z.M., Billah, M.M., Kadir, K., Ali, A.M.M., Ahmad, I.,
    2019. Improvement of honey production: a smart honey bee health monitoring system.
    In: 2019 IEEE International Conference on Smart Instrumentation, Measurement and
    Application (ICSIMA), Kuala Lumpur, Malaysia, pp. 1–5, doi: 10.1109/ICSIMA47653.2019.9057336.
    Google Scholar Zabasta et al., 2019 Zabasta, A., Kunicina, N., Kondratjevs, K.,
    Ribickis, L., 2019. IoT approach application for development of autonomous beekeeping
    system. In: 2019 International Conference in Engineering Applications (ICEA),
    Sao Miguel, Portugal, pp. 1–6, doi: 10.1109/CEAP.2019.8883460. Google Scholar
    Cited by (7) BHiveSense: An integrated information system architecture for sustainable
    remote monitoring and management of apiaries based on IoT and microservices 2023,
    Journal of Open Innovation: Technology, Market, and Complexity Show abstract LEI:
    Livestock Event Information Schema for Enabling Data Sharing 2023, SSRN Analog
    Pyroelectric Infrared Sensor for Non-Invasive Beehive Monitoring 2023, Proceedings
    of IEEE Sensors Microservices-based systems for animal production: A systematic
    mapping study 2023, Iberian Conference on Information Systems and Technologies,
    CISTI Services Orchestration at the Edge and in the Cloud for Energy-Aware Precision
    Beekeeping Systems 2023, 2023 IEEE International Parallel and Distributed Processing
    Symposium Workshops, IPDPSW 2023 Multi-robot resource intelligent cloud service
    platform based on microservice 2022, Jisuanji Jicheng Zhizao Xitong/Computer Integrated
    Manufacturing Systems, CIMS View all citing articles on Scopus View Abstract ©
    2022 Elsevier B.V. All rights reserved. Recommended articles Prototyping a system
    for detection and notification of damage or theft in beehives Ecological Informatics,
    Volume 75, 2023, Article 102015 Antonio Rafael Braga, …, Jefferson de Carvalho
    Silva View PDF A method for mining combined data from in-hive sensors, weather
    and apiary inspections to forecast the health status of honey bee colonies Computers
    and Electronics in Agriculture, Volume 169, 2020, Article 105161 Antonio Rafael
    Braga, …, Joseph A. Cazier View PDF MobiWise: Eco-routing decision support leveraging
    the Internet of Things Sustainable Cities and Society, Volume 87, 2022, Article
    104180 Ana Aguiar, …, Susana Sargento View PDF Show 3 more articles Article Metrics
    Citations Citation Indexes: 6 Captures Readers: 53 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and implementation of a smart beehive and its monitoring system using
    microservices in the context of IoT and open data
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sarramia D.
  - Claude A.
  - Ogereau F.
  - Mezhoud J.
  - Mailhot G.
  citation_count: '15'
  description: This article presents a platform for environmental data named “Environmental
    Cloud for the Benefit of Agriculture” (CEBA). The CEBA should fill the gap of
    a regional institutional platform to share, search, store and visualize heterogeneous
    scientific data related to the environment and agricultural researches. One of
    the main features of this tool is its ease of use and the accessibility of all
    types of data. To answer the question of data description, a scientific consensus
    has been established around the qualification of data with at least the information
    “when” (time), “where” (geographical coordinates) and “what” (metadata). The development
    of an on-premise solution using the data lake concept to provide a cloud service
    for end-users with institutional authentication and for open data access has been
    completed. Compared to other platforms, CEBA fully supports the management of
    geographic coordinates at every stage of data management. A comprehensive JavaScript
    Objet Notation (JSON) architecture has been designed, among other things, to facilitate
    multi-stage data enrichment. Data from the wireless network are queried and accessed
    in near real-time, using a distributed JSON-based search engine.
  doi: 10.3390/s22072733
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 22 Issue 7 10.3390/s22072733 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Raffaele Bruno
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 3354 Citations 15 Table of Contents Abstract Introduction Data Lake
    Architecture Review and Requirements The Elastic Stack CEBA Architecture CEBA
    in Action Conclusions Author Contributions Funding Institutional Review Board
    Statement Informed Consent Statement Data Availability Statement Acknowledgments
    Conflicts of Interest Abbreviations References Altmetric share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    CEBA: A Data Lake for Data Sharing and Environmental Monitoring by David Sarramia
    1,*, Alexandre Claude 1, Francis Ogereau 2, Jérémy Mezhoud 2 and Gilles Mailhot
    3 1 Laboratoire de Physique de Clermont, Université Clermont Auvergne, CNRS/IN2P3,
    63000 Clermont-Ferrand, France 2 Mésocentre, DSI, Projet I-Site CAP 20-25, Université
    Clermont Auvergne, 63000 Clermont-Ferrand, France 3 Institut de Chimie de Clermont-Ferrand,
    Université Clermont Auvergne, CNRS, Clermont Auvergne INP, 63000 Clermont-Ferrand,
    France * Author to whom correspondence should be addressed. Sensors 2022, 22(7),
    2733; https://doi.org/10.3390/s22072733 Submission received: 29 December 2021
    / Revised: 14 February 2022 / Accepted: 30 March 2022 / Published: 2 April 2022
    (This article belongs to the Special Issue IoT Sensor Networks for Environment
    Monitoring: From Sensor to Cloud) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract This article presents a platform for environmental data
    named “Environmental Cloud for the Benefit of Agriculture” (CEBA). The CEBA should
    fill the gap of a regional institutional platform to share, search, store and
    visualize heterogeneous scientific data related to the environment and agricultural
    researches. One of the main features of this tool is its ease of use and the accessibility
    of all types of data. To answer the question of data description, a scientific
    consensus has been established around the qualification of data with at least
    the information “when” (time), “where” (geographical coordinates) and “what” (metadata).
    The development of an on-premise solution using the data lake concept to provide
    a cloud service for end-users with institutional authentication and for open data
    access has been completed. Compared to other platforms, CEBA fully supports the
    management of geographic coordinates at every stage of data management. A comprehensive
    JavaScript Objet Notation (JSON) architecture has been designed, among other things,
    to facilitate multi-stage data enrichment. Data from the wireless network are
    queried and accessed in near real-time, using a distributed JSON-based search
    engine. Keywords: data lake; indexes; data visualization; internet of things;
    data management; environmental sensors 1. Introduction Climate change and human
    activities have an increasing impact on ecosystems [1,2], and the documentation
    of global change patterns has been identified as a first step to face the changing
    environment to understand the global loss of biodiversity [3] leading to the need
    of a quick, reliable access to high-quality data. It draws the importance of standards
    in data and metadata, for example in ecology [4] without being completely defined
    yet. In this domain, even if a number of repositories to store shared data have
    been created and on going developments are trying to define common data and metadata
    standards [5], existing data are not exposed in a standard, machine-readable format
    using a common vocabulary. Common to all fields, this problem has for example
    been addressed by the biodiversity community with the creation of the Darwin Core
    [3]. As Deligiannis et al. explain in [6], many stakeholders are lacking the resources
    for infrastructure and/or computing expertise, and still rely on outdated approaches
    such as (i) storing their data in spreadsheets or raw files, (ii) sharing their
    data with colleagues through email, cloud uploads of zip files, or even by snail
    mailing electronic copies in removable media, and (iii) analyzing the data via
    sub-standard tools and trial software. They also mentioned that the proposed data
    storage solutions usually require significant computing infrastructure and need
    the constant support and active involvement of Information Technology (IT) experts
    even for trivial tasks such as incorporating new data. Managing the data heterogeneity
    and interoperability are still common challenges [7]. For example, Ciampittiello
    et al. [8] identify that the specific needs of research in the environmental field
    are among others the collection of high-frequency data that are not readily available
    in commercial instruments, a data processing software and interoperability. As
    it is the case in many domains, they also indicate that the sensors used are both
    commercially produced and built by the individual research groups, according to
    their different specific needs [9], generating even more heterogeneity. The data
    formats of different sensors are often incompatible, complicating data processing
    [10]. Thus, Retamar et al. [11] highlight that the sharing, the exchange and the
    interoperability of environmental information, individual data, or boundary information
    constitute the basis for an in-depth knowledge of a territory. Hossain et al.
    [12] argue that data should not be captive by its producers but need to be freely
    accessible while Shadbolt et al. [13] explain that knowledge [14] and new services
    can be drown from data. However, this implies the development of infrastructures
    such as data repositories allowing data to be shared and valued [15]. Regarding
    this, ontologies and Findable, Accessible, Interoperable, and Reusable (FAIR)
    systems are presently able to handle these challenges effectively [16]. As Wilkinson
    et al. [16] explain in the basis of FAIR principles, there are numerous and diverse
    stakeholders and have much to gain that researchers wanting to share, obtain credit,
    and reuse each other’s data and interpretations; funding agencies (private and
    public) are increasingly concerned with long-term data stewardship; and the data
    science community is interested in mining, integrating and analyzing new and existing
    data to advance discovery. According to Murray-Rust [17], full open access is
    the simplest solution to share and reuse data, and it can also increase the quality
    of data. This open data movement has its roots in academic circles over the past
    50 years [18]. At the same time, Internet of Things (IoT) has become a common
    technology for large deployment with multiple applications [19] such as smart
    health care [20], environment monitoring [8,21,22,23], smart cities [24], industrial
    control [10,25] and agriculture [26,27,28]. The number of connected devices is
    estimated at the horizon of 2022 at 42.5 billion and at the horizon of 2025 at
    75.5 billion with a data volume created by IoT connections projected to reach
    a massive total of 79.4 zettabytes (https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/
    (accessed on 1 December 2021)). This kind of systems is well suited for environmental
    studies and smart agriculture by deploying a monitoring system in a remote area
    when a high data rate is not required and where minimal power consumption is sufficient
    [29], making possible a long-term monitoring (see for example [23,30] for environment
    applications and [26] for smart agriculture application). From the end-user point
    of view, the IoT seems to make real-time uses possible. Ciampittiello et al. [8]
    explain, real-time processing requires continual input, constant processing, and
    steady output of data. For some applications, the near real-time is sufficient,
    and has become an hot-topic with the widespread adoption of IoT (see for example
    the applications to smart agriculture [26,31]). In near real-time processing the
    frequency of transmission is important, but the whole processing time (from acquisition
    to visualization) can be in minutes (up to 10), particularly if environmental
    process under study is stable [32]. In the environmental domain, a spatial analysis
    and representation are commonly implemented [32], by at least georeferencing with
    GPS WSG84 latitude and longitude combined with an UTC timestamp. A lot of work
    on the issue of monitoring the environment using wireless technologies have been
    conducted [33,34,35], but often the solutions proposed are theoretical, on a particular
    domain or for short term experiments. New telecommunication technologies such
    Long Range (LoRa (https://lora-alliance.org/ (accessed on 1 December 2021))) or
    SigFox (https://www.sigfox.com/en (accessed on 1 December 2021)) appliance with
    low velocity can transmit data over kilometers with small infrastructure and tiny
    power sources, which perfectly fit the need for large deployment in the environment.
    In consequence, a lot of research is conducted on data storage in the cloud, but
    few works take into account the complete integration of the data from the sensor
    to the cloud for long term with various types of sensors and on several sites.
    Nevertheless, there are works on the collection of long-term data in large national
    data centers or data hubs. In France, such centers are among others Pôle National
    de Données de Biodiversité (PNDB) (https://www.pndb.fr/pages/fr/portail-pndb (accessed
    on 1 December 2021)) and data terra (https://www.data-terra.org/en/accueil/ (accessed
    on 1 December 2021)), which are able to process large amount of data with large
    resources (human and computational). Along with the new technologies enabling
    data analysis, storage and processing architecture play also a key role in the
    big data ecosystem [7]. Whatever the architectures proposed [26], they aim to
    facilitate the storing, manipulating, analyzing and accessing for structured and
    unstructured data [36]. Among those modern architectures, data lakes are of main
    interest as their design aims to store a large volume of data in any format and
    structure, and to provide services for data access and analysis [37,38]. They
    are particularity relevant in the context of environmental monitoring and agriculture
    as they can manage raw data structured or not. According to Fang [39], a data
    lake is a cost-efficient data storage system that can improve data analyzing process
    from ingestion, storage, exploration and exploitation of data in their native
    format. In this paper, we present the “Cloud Environnemental au Bénéfice de l’Agriculture”
    or “An Environmental Cloud for the Benefit of Agriculture” (CEBA) which is one
    deliverable of the Challenge 1 “Sustainable agroecosystems in a context of global
    change” of the the Initiatives Science–Innovation–Territories–Economy (I-Site)
    Clermont CAP 20-25 Projet [40]. By proposing an on-premise data lake, the CEBA
    aims to fill the gap of a regional tool in Auvergne (France) to store, visualize,
    analyze and share heterogeneous data (structured or not) collected from research
    programs and studies related to the environment and agriculture, whether these
    data come from files, databases or sensor networks with an authentication service
    and ensuring data ownership. The geographical area covered by the CEBA is the
    former Auvergne region, with near twenty sites identified covering a large scope
    of data and analysis to manage (see Figure 1). Figure 1. Geographical area and
    sites covered by the CEBA. The CEBA proposes an innovative architecture for research
    teams that do not have IT computer staff to (i) record, organize and manage collected
    data with a metadata description for datafiles up to several gigabyte with a simple
    normative metadata management; (ii) collect IoT data with free format and structure
    for low output sensors networks such as LoRa or SigFox; (iii) access and visualize
    IoT (hot) data in near real-time, access and query historical (cold) data, extract
    in several formats; (iv) perform bounding box spatial query on data; (v) search
    for data and dataset in a data catalog according to keywords and geographical
    GPS WSG84 coordinates; (vi) share whole datasets and datafile with authenticated
    users and public; (vii) perform basic and advanced user management tasks (such
    as user permissions, data and metadata access). The contributions of the work
    performed in the CEBA is an innovative on-premise data lake with the following
    features: a data catalogue managing spatially referenced resources, an ingestion
    platform to collect IoT data regardless of its format and structure, a storage
    platform to upload and store any type of data files with query solutions, a visualization
    platform to access hot data in near real-time, some spatial and temporal query
    functionalities. To achieve these objectives, an efficient storage architecture
    and data management pipeline are proposed to provide a robust, scalable and extensible
    solution. In addition, these elements can allow data enrichment for sensor networks
    or if some metadata are lacking. All services are designed for usage by non-IT
    experts. The article is organized as follows. In Section 2 and Section 3, we present
    a review of data lake architecture focusing on the requirements that led us to
    choose a data lake architecture. In Section 4, we propose a design and an architecture
    for data storage with PostgreSql databases [41] and Simple Storage Service (S3)
    storage as main elements, with a full JavaScript Objet Notation (JSON) architecture
    for the IoT data. We will detail the design of data flows management from sensor
    networks by using the Elastic Stack for a near real-time visualization, the management
    of metadata by the implementation of a data catalog and the different tools to
    manage metadata and the design and implementation of the web site which is the
    entry and exit point for the end user of the data and metadata. In Section 5,
    different use cases will be shown. We conclude and propose some directions for
    future research. 2. Data Lake Architecture Review and Requirements While it was
    still theoretical a few years ago, the concept of data lake used today in the
    academic and private sector has become a target of large infrastructure on a countrywide
    scale [42] or is evaluated in a large research infrastructure such as high energy
    physics and astronomy [43]. Data lake is also identified as a new trend in data
    management for agriculture [26]. Different definitions of the concept can be found
    in the literature over time. The data lake concept has existed since 2010 [36]
    and is described as a large storage system for raw and heterogeneous data, fed
    by multiple data sources, and allows users to explore, extract and analyze all
    the existing data. A data lake has multiple synonyms now, such as data hub [44]
    or data reservoir [45]. Furthermore, the growing up of big data technical solution
    such as HADOOP [39,44] and more recently with proprietary solutions such as Azure
    [46], IBM [45] and Cloudera [47] have also introduced some confusion in people’s
    minds as they propose a fully technical operational solution with their own architecture.
    Following the limitations of this concept highlighted in various scientific papers
    [39,45,48], Madera and Laurent [37] propose an enhanced definition to embrace
    scientific and vendors data lake definitions and pointed out three main challenges
    including Data Governance and Metadata Management and Enhancement. Sawadogo et
    al. [49] modify Madera and Laurent’s definition of users (giving access to any
    type of user), of the logical view (modifying the handling of external data sources),
    and include scalability (which is a main requirements for a data lake for [36,50,51]).
    They also identify interesting features including indexing of data using direct
    or reverse indices, semantic enrichment and versioning of data. Ravat and Zhao
    [52] propose to include input, process, output and data governance features in
    the data lake definition. They restrict access to the data lake to less users
    and include external data sources in the data lake (such as in Fang paper [39]).
    They make it clear that data ingestion is a process-free phase and that the raw
    data is stored in its native format for later use. Sawadogo and Darmont in their
    review [53] adjust the definition and give new insights to manage and generate
    metadata. They also indicate that the management of unstructured datasets is not
    comprehensively globally thought, that the exploitation of unstructured data (such
    as text) is not taken into account, and that the possibility to cross-analyse
    data induces serious security problems. Finally, Hai et al. [54] propose a new
    definition: “A data lake is a flexible and scalable data storage and management
    system that ingests and stores raw data from heterogeneous sources in its original
    format, and provides query processing and data analysis on the fly.” A data lake
    is not considered only as a storage system and must support on-demand data processing
    and querying. Furthermore, data indexing should only be performed if necessary
    at the time of data access, ingestion of data sources could be light, as there
    is no need to force schema definitions and mappings beforehand. Hai et al. agree
    that the metadata of the data lakes will evolve over time in an incremental way.
    Whatever the definition, data lake can be simply defined as a schemaless architecture
    [50,55,56] using a schema-on-read global approach (even such a definition can
    be considered not precise enough for some computer scientists according to the
    literature given above), in contrast to the schema-on-write approach in warehouses.
    Although the lack of a real consensus on data lake definition is true, we can
    resume that a data lake should keep data in its raw format and provides: Services
    to ingest any kind of data; Data access and use to various kind of users; A catalog
    service to make data findable by their metadata according to standards; A data
    governance; A logical and physical design; Some scalability possibilities. When
    talking about data lake architectures, existing studies [52,57] generally distinguish
    between pond and zone or layer architectures. Zone architectures generally consider
    three [58] to four zones [52] up to six zones [59]. In addition to this, several
    classifications of the data lake architecture have been implemented. Ravat and
    Zhao [52] propose to distinguish functional architecture from technical architecture
    while Sawadogo et al. [49] propose to classify the architectures into three groups
    (maturity-based, hybrid, functional). According to Sawadogo et al. [49], functional
    architectures include a data ingestion function to connect to data sources, a
    data storage function to hold raw and refined data, a data processing function,
    and a data access function to allow querying of raw and refined data. The components
    of data maturity-based architectures are defined according to the level of data
    refinement, while the components of hybrid architectures depend on both data lake
    functions and data refinement. Giebler et al. [60] consider that defining data
    ingestion, storage and organization is not sufficient for a data lake, and then
    propose a framework based on nine aspects to define a complete data lake architecture
    not tailored to specific use cases. Hai et al. [54] identify three examples of
    real applications of data lakes. Our project is of the type “multiple entries
    of heterogeneous raw data” with additions on: Managing geographic coordinates;
    Having a full JSON architecture for data querying; Considering a data valid for
    the infrastructure as soon as it has a “what, where, when” information; Combining
    relational and not only SQL (NoSQL) storage and querying systems; Giving the access
    to the data to any kind of users, including open data users; Furthermore, finally
    managing metadata with a catalogue managing spatially referenced resources. 3.
    The Elastic Stack The Elastic Stack, initially designed to manage system log with
    a full text search approach is currently used to manage IoT data in several domains
    such as medicine [61,62], building monitoring [63]. The Elastic Stack [64] is
    composed of four main open and free projects: Beats, Logstash, Elasticsearch [65],
    and Kibana. Beats are data shippers. Logstash is a data processing pipeline. Elasticsearch
    is a document-oriented database. Kibana is a user interface tool of Elasticsearch
    for administration and queries. We are going present each tools in the next subsections.
    3.1. Beats and Logstash Beats are lightweight data shippers. They mainly ship
    data from the source, such as files, to Logstash. Logstash is a processing pipeline
    engine with real-time pipelines. It ingests data from multiple sources, and transforms
    and ships the transformed data to the configured destination, such as Elasticsearch.
    3.2. Elasticsearch Elasticsearch is the heart of the Elastic Stack. It is a free
    and open search engine with real-time and full-text searching. It is also a document-oriented
    and distributed database. The documents are JSON objects that are stored within
    an Elasticsearch index. An index field can be of many different types, e.g., a
    string or a number. The mapping of an index defines the types of the fields, and
    how the fields should be indexed and stored in Elasticsearch. Elasticsearch is
    a distributed database storage. It extends the concept of relationship between
    clusters, nodes, indexes and shards: A cluster can have one or several nodes.
    An Elasticsearch index can be divided into one or several shards (partitions).
    Shards of an index can be populated in one or several nodes in the same cluster.
    One advantage of Elasticsearch in terms of storage is scalability and availability:
    Scalability: means that Elasticsearch can easily increase the size of storage,
    e.g., adding new nodes by configuring them in the same cluster, or adding new
    shards for an existing index without suspending this index. Reliability: means
    that if some nodes stop working, others in the same cluster can take the workload
    of the failing one. Elasticsearch supports a varying number of field datatypes
    in a document [66]. There are core datatypes (e.g., string, numeric, date, boolean),
    complex datatypes (e.g., object for single JSON objects), geo datatypes, and specialized
    datatypes (e.g., Interne Protocol address). Elasticsearch supports two groups
    of spatial data types which are of great interest for our platform: geo-point
    and geo-shape. Geo-point is a pair of latitude and longitude data. Geo-shape includes
    a point or set of points (e.g., point, linestring, polygon, multipoint, multilinestring,
    envelope, and circle). Elasticsearch supports a query Domain Specific Language
    based on JSON data where a query structure combines three parts: Application Programming
    Interface (API) method; address that includes Uniform Resource Locator, index,
    type, and method; and the query body. 3.3. Kibana Kibana [67] is an application
    used with Elasticsearch. An interesting visualization functionality of Kibana
    is the dashboard, as it supports Elasticsearch aggregation queries. We use Grafana
    instead of Kibana in the CEBA because it is more relevant for the main usages
    we have actually. 4. CEBA Architecture Actual CEBA architecture has been designed
    according to the data flows it was funded to manage and the services it should
    give with the main hypothesis that it should tackle any data flow with no prerequisite.
    The CEBA has been designed as a data lake with very few analysis functionalities
    as the main requirements were focused on data storage and sharing. According to
    the data management, the design is build upon the four main functionalities a
    data lake should provide on data (ingestion, storage, processing and access) with
    a metadata management at high level (at least, the datasets must have metadata).
    As the CEBA can become in the future a big data platform for Auvergne Region,
    the storage layer has been designed to enable this (see Section 4.2, Section 4.3,
    Section 4.4) by using JSON as a common storage format. Thus, the CEBA is composed
    of the following layers: An ingestion layer for streaming data sources using Beats;
    A dual data storage layer for near real-time visualization and data querying using
    Logstash, Elasticsearch, Grafana and PostgreSql; A long term data storage layer
    provided by PostgreSql and a S3 Mesocentre service; A data access and discovering
    layer by a website and a data catalog. The CEBA architecture, displayed in Figure
    2, is composed of several servers, each of them hosting one to several services.
    Each service is hosted by its own server. Specifically, the sensor network data
    part has one server for transport/transformation and a cluster of three Elasticsearch
    servers for indexing and retrieval. Figure 2. Global architecture of CEBA. Regarding
    the functionalities, Figure 3 describes the different global functionalities of
    the CEBA, with the different possibilities of (i) depositing data and metadata,
    (ii) how they are stored with a unification of solutions, (iii) how they can be
    managed (indexing, enrichment, catalog), (iv) and finally how they can be manipulated
    and visualized. All features support at least GPS coordinates (GPS WSG84 latitude
    and longitude), even at the project level where the associated sites are described
    with a bounding box. Of course, all datasets and associated data can be made available
    in open data if they are declared as such. Figure 3. Global functionalities of
    CEBA (in blue IoT features, in orange web features and in green common features).
    The ConnecSens project from the European Regional Development Fund program of
    European Union (https://ec.europa.eu/regional_policy/en/funding/erdf/ (accessed
    on 1 December 2021)) has designed and implemented a collecting platform fully
    open source and proprietary, and is one of our main partner for the development
    of the IoT part [68]. In the next subsections, we are going to explain how data
    governance and management are set up and the design of several layers. We will
    start by describing the ingestion layer and the pipeline we set up. Then, we present
    the storage layer by describing the database and S3 components and how they are
    designed. We then finally describe the access layer composed of a web site and
    a the Grafana tool. 4.1. Data Governance and Management Findable, Accessible,
    Interoperable, Reusable (FAIR) principles, open data and open science have driven
    data management as it was a clear issue to propose an open access to any data
    produced by public funds, applying the principle “as open as possible, as closed
    as necessary”. Data governance in the CEBA is not supported by a unique software
    solution but represented by good practices, requirements and choices for each
    software component. One main issue is the metadata management as any datafile
    to be uploaded must be associated with a dataset in order to make it findable
    and accessible on the CEBA, along with data coming from wireless sensor networks.
    As some partners are being part of Long Term Research infrastructures and national
    observatories such as INEE LTSER ZA (Long Term Socio-Ecological Research Zones
    Ateliers), OSU (Observatories of Sciences of the Universe) and OZCAR-RI (Critical
    Zone Observatories, applications et research) where data are mainly georeferenced,
    and linked to environmental studies, we are compliant with the Infrastructure
    for Spatial Information in the European Community (INSPIRE) directive. So, the
    metadata management is performed using INSPIRE [69], and more details are given
    in Section 4.1.1. As multiple projects will use the CEBA platform and as the datafiles
    will be stored a quite long time (at least 5 years), a Data Management Plan (DMP)
    has been designed. It will also participate to the future Open Science initiative
    of University of Clermont Auvergne. This DMP model has been designed with the
    help of France Grilles Scientific Interest Group (www.france-grilles.fr/home/
    (accessed on 1 December 2021)) staff and of INIST OPIDoR team (Optimiser le Partage
    et l’Interopérabilité des Données de la Recherche—Optimising Research Data Sharing
    and Interoperability). A draft of this model is being developed in the DMP OPIDoR
    platform, and needs to be finalized. Considering the data stored, three cases
    can be considered: datafiles associated with datasets and data stored in the database,
    datafiles associated with wireless network and indexed data. For the first set,
    the life duration is the same as the dataset. They will be stored until the owner
    decide to delete it, and they will be accessible online anytime. For the second
    set, they will be stored until the owner decides to delete it, but are inaccessible
    unless specific use is needed. For the last set, we will consider a hot data subset
    and a cold data subset. They are distinguished by way they are accessible. Hot
    data are accessible via indexes, in near real-time meanwhile cold data are only
    accessible via database queries. The duration they are kept online, meaning accessible
    for visualization, is decided with the owner, and is generally adjusted to one
    year. For dataset and datafile naming, we have proposed a naming convention with
    the main following elements: the producer identification, the production date,
    the geographical location of the data (city or region) and one or two words describing
    the data. With regard to data governance, the choice was made to clearly distinguish
    between what data producers consider to be test and production streams. Although
    it may seem odd to keep test data, many CEBA users have stated that they have
    a real interest in keeping this data as it often contains good metrics. This way
    of distinguishing between test and production indices nevertheless allows many
    test indices to be removed to improve the performance of the elastic cluster.
    For long-term resource management, the following organization was chosen: for
    one experiment, the current year’s data is stored in 12 monthly indexes to speed
    up indexing and querying, while the indexes from previous years will be merged
    into one by reindexing as we assume that the old data will need less frequent
    access. 4.1.1. Metadata Management We use Geometa [70] which provides facilities
    to manipulate geographic metadata defined with Open Geospatial Consoritum (OGC)
    ISO 19115 and 19139 eXxtensible Markup Language (XML) standards, to create representations
    of geographic metadata using R language, according the above standards, and write
    it in XML. To ingest dataset’s metadata, we use the excel file designed by the
    collective project “Banking the Data Together” (BED) in charge of the data management
    within the Zones Ateliers network (RZA) (http://www.za-inee.org/en/node/804 (accessed
    on 1 December 2021)) and it enables the datasets ingest to respect the INSPIRE
    Directive [69]. RZA belongs to International Long Term Ecological Research network
    (ILTER) (https://www.ilter.network/ (accessed on 1 December 2021)). As mentioned
    above, metadata and data are visible at three levels: public, private or embargoed.
    Open data: Anyone can access the metadata and associated data. Private: The metadata
    and data are only visible to members of the project. However, they are findable
    but not clickable from the search bar. If a user wishes to obtain more information,
    they should contact one of the metadata’s contacts. Embargo: Metadata is only
    visible to members of the project. It does not appear in a search. By default,
    they become open-data after one year. Visibility also depends on how the metadata
    is deposited. By web form, it is possible to choose between these three modes,
    while by “drag and drop”, the games are automatically open data. The metadata
    fields used in the CEBA are derived from the INSPIRE standard, in accordance with
    the FAIR principle. Some fields are mandatory in order to be compliant with the
    INSPIRE initiative (v1.3 currently) and to be as FAIR as possible in the first
    instance. We have twelve fields to describe the metadata itself (eight are mandatory),
    nineteen fields to describe the data (nine are mandatory), one mandatory field
    describing the quality of the data, one mandatory field describing the license
    for redistribution and reuse, and two optional fields describing access to the
    data. A contact (at least one author, one principal investigator and one point
    of contact are required) is described by fourteen mandatory fields. In terms of
    semantics, four fields can be used to semantically annotate the data. The first
    three are mandatory and correspond to INSPIRE topics, INSPIRE themes and GEneral
    Multilingual Environmental Thesaurus (GEMET) concepts that best describe the dataset.
    The fourth allows the use of any other semantic resource such as a controlled
    vocabulary, taxonomy, thesaurus or ontology (as long as the concept name and a
    Uniform Resource Identifier (URI) describing it are available). Some optional
    fields are strongly recommended (such as geographic information and online access
    by URI to data) to be as FAIR as possible. 4.1.2. Data Catalog To make the available
    data visible and accessible, one solution is to use a data catalog that allows
    users to explore and understand their content through metadata. The goal is to
    store and redistribute data and metadata while respecting the FAIR principle (Findable,
    Accessible, Interoperable, Reusable). After a comparison of several data catalogs
    (Dataverse https://dataverse.org/ (accessed on 1 December 2021), Ckan https://ckan.org/
    (accessed on 1 December 2021), Zenodo https://zenodo.org/) (accessed on 1 December
    2021), we chose GeoNetwork https://geonetwork-opensource.org/ (accessed on 1 December
    2021), because it provides: The management of spatial, vector and grid referenced
    resources. Powerful editing and search functions for ISO 19115 or 19139 geographic
    standard. The management of metadata on reports or articles, with online access
    to digitized resources (e.g., Portable Document Format or via Digital Object Identifier
    (DOI)). Multilingual metadata editing, validation system (e.g., for INSPIRE recommendation)
    and geopublishing of layers in OGC services (e.g., GeoServer) exist. Harvesting
    from many sources, including: OGC Catalogue Services for the Web (CSW) 2.0.2 ISO
    profile, Open Archives Initiative Protocol for Metadata Harvesting (OAI-PMH) (http://www.openarchives.org/pmh/
    (accessed on 1 December 2021)), Z39.50 protocols, web-accessible folders, ESRI
    GeoPortal and other GeoNetwork nodes. Furthermore, it is currently used in many
    Spatial Data Infrastructure initiatives around the world, for example the ISRIC
    soil datahub (https://data.isric.org/geonetwork/srv/eng/catalog.search#/home (accessed
    on 1 December 2021)) or the FAO GeoNetwork (https://data.apps.fao.org/map/catalog/srv/eng/catalog.search#/home
    (accessed on 1 December 2021)). This choice was confirmed after exchanges with
    the Centre Régional Auvergne-Rhône-Alpes de l’Information Géographique (https://www.craig.fr/
    (accessed on 1 December 2021)). The current production version in our infrastructure
    is the 3.8.1.0 version on a dedicated server. 4.2. Ingesting the Data Data ingestion
    is the process of importing data from sources outside the system and storing it.
    For the sake of an instantaneous data visualization and to manage the different
    possible use cases, an ingestion multi-pipeline near real-time architecture has
    been designed in a generic way (see Figure 4). This pipeline is capable of handling
    data inputs of various sources: files, databases and data flow. For data coming
    from sensor network deployments, ingestion can be achieved by reading files created
    daily and fed continuously throughout the day. On the technical side, once the
    data file is created or updated with a new measure, a lightweight shipper, called
    Filebeat [64], forwards data to a data collector called Logstash [64]. This tool
    acts as a data streaming pipeline, that is, an Input–Filter–Output process that
    can ingest a multitude of data sources (Input), clean and enrich each event with
    some relevant information (Filter) and route data into the data lake (Output).
    Figure 4. Schematic representation of generic ingestion pipeline. The routing
    of each measurement to the right storage location is conducted at indexing using
    an index naming convention in which the name of the experiment, the name of the
    node and finally the date of the measurement are used. This way, variables can
    be easily isolated and queried to generate time series. This strategy offers the
    dual advantage of storing and retaining raw data through files and presenting
    it to the user in real-time through indexing. Filebeat is a robust tool with capabilities
    to stop and resume data transmission in the event of a network failure and can
    slow down transmission in the event of ingestion problems with Logstash. Logstash,
    on the other hand, has data resilience capabilities through persistent queues
    that protect against data loss by storing each line of incoming data in an internal
    queue on disk. Together, these tools provide reliable, near real-time data management.
    Interestingly, it provides a visualization of the data allowing, for example,
    immediate verification of the installation of a sensor or node in situ. Ingestion
    can also be performed using sources such as databases using a Java DataBase Connectivity
    plugin from Logstash, while Filebeat is able to ingest Message Queuing Telemetry
    Transport (MQTT) streams [71]. 4.3. Storing the Data: Database PostgreSQL is an
    opensource Database Management System (DBMS) versatile that allows to store a
    large number of different datatypes, frequently updated and has a very active
    community. It offers powerful tools (such as replication), being able to manage
    JSON data. However, as a relational DBMS, it lacks functionalities provided by
    NoSQL DBMSs to work on unstructured data. In addition, Postgres has multiple extensions
    such as Postgis [72] to handle and to query geographic data. The first paragraph
    details the database design, then we explain how dataflows are ingested in the
    database. Then the proposed database schema is given, on which we then detail
    the data enrichment process, the stored queries and the data safety. 4.3.1. Database
    Design The sensor database is structured around the associated sensor networks.
    Several schemas have been set up according to the structure of data received.
    We currently have two schemas: one for delimited files and one for ConnecSens
    network with JSON files. Since JSON is the chosen format for IoT data management
    in our platform, so it is in our database. It is thus sometimes necessary to transform
    raw data files into JSON files. Within PostgreSQL, JSON and JavaScript Objet Notation
    Binaries (JSONB) are available to store the raw JSON data. We chose JSONB which
    currently has more query and comparison tools than JSON. JSONB combines the flexibility
    of NoSQL solution with the querying power of Relational Database Management System
    (direct query of the JSON attributes contained, such as listing values or listing
    keys, comparisons, selection between 2 dates…). However, inserting JSONB into
    a database takes a little bit longer than inserting JSON due to the conversion.
    It is also possible to create indexes on attributes of a JSONB row which improve
    the speed of repetitive queries. Between Binary Tree (BTREE), HASH and Generalized
    Inverted Index (GIN) index types we have chosen BTREE because it is the most commonly
    used index in relational databases and the lightest, comparison operations are
    faster when associated with a key-value pair, unlike the HASH index which is more
    rigid. We may move towards GIN indexes if the queries to be provided become more
    complex as it is heavier but offers additional search and comparison operators
    in JSON, as well as speeding up searches such as a classical index. Using JSONB
    has other advantages because, unlike traditional JSON which stores its data in
    plain text, JSONB stores the data in a decomposed binary form. This makes query
    processing more efficient and faster. As each sensor network sends JSON lines
    configured differently, each schema has its own indexes. 4.3.2. Database Ingestion
    Forgetting the authentication steps, all the data coming from sensor networks
    reach on our storage servers located at the Mesocentre in Clermont-Ferrand, and
    are inserted into the database via a daily running script to insure that the data
    stored into the database is correct (see Figure 5). Figure 5. Dataflow for sensors
    database ingestion. If the data received is not in JSON, another script transforms
    it. Once the data is in the database, it is then possible to query it from the
    web site by the CEBA users. 4.3.3. Database Schema As the data we received are
    schemaless, we have designed the database in a generic way, in order to be able
    to store, isolate and query easily any sensor network. We have chosen to use PostgreSQL
    schema to represent a type of sensor network (Figure 6). Within a schema, we find
    sensor networks having this same type. Actually, we are managing semi-structured
    JSON format and delimited files. In order to distinguish them, we give them an
    application name ($APPNAME). Each deployed sensor network then has its own storage
    table. It is possible to have as many tables as we want within a schema. As sensors
    networks can be modified during the time, we can follow all the changes this way,
    as a new table can be added whenever it is needed to not mixed data coming from
    various deployments. In order to insure data management, the file name and the
    insertion date are stored (see table Json_file in Figure 6). With this information,
    it is possible to quickly identify data transmission or data corruption problems.
    Figure 6. Schema of the database. 4.3.4. Data Enrichment Sometimes, sensor networks
    do not return enough information to be properly queried. In this case, complementary
    information tables are filled with additional data such as GPS coordinates (in
    case of static deployment), the list of sensors or the list of measurement types.
    This allows to enrich the data inserted in the database during the retrieval and
    to allow a more efficient querying. For example, a network of sensors is linked
    to a buoy on the Lake of Aydat, autonomous in energy. This system sends very small
    delimited files with no header by text message, without GPS coordinates (GPS WSG84
    latitude and longitude) or information on the type of data recovered or the unit.
    We have then automated two tasks for this network: transforming the received files
    into .json files before inserting them into the database, as well as enriching
    the information during this same transformation with sensors names, units and
    GPS coordinates. This is conducted by using rows of tables Schema_jsonfields,
    Schema_sensors and Field_descriptors in Figure 7. Figure 7. Converting and enrichment
    flow. 4.3.5. Stored Queries For the user side on the web site, stored queries
    have been designed and implemented on the database server side. These queries
    are “generic” ones, as they can query any JSONB content of any sensor network
    (as the database structure has been design to enable this). However, the number
    of fields returned differs depending on which has been transmitted. As a result,
    more accurate and powerful queries have been implemented for ConnecSens’ sensor
    networks since the network returns a lot of information. For example, Figure 8
    shows a query to display the evolution of the number of frames per node (DevEUI)
    per day, for a specific $APPNAME. Figure 8. Stored query example. The “->>” sign
    allows one to access a specific key in the JSON and to obtain values. It is possible
    to cast its type or to perform tests on the value, such as any PostgreSQL attribute.
    To understand this request, here is some information on how a JSON file is generated
    from a ConnecSens sensor network. Each JSON line contains a “DevEUI” key. Counting
    this key is a way to count every frame sent. Then, casting the “ServerTimestampUTC”
    key to the date format allows one to obtain only the date without the time. Such
    a simple request has two types of exploitation: a technical exploitation because
    it allows the rapid identification of transmission or power supply problems, and
    a scientific exploitation because if the transmission is linked to a particular
    expected event, it can allow the rapid detection of the appearance of a phenomenon
    to be studied. 4.3.6. Data Safety Several types of data backup are performed.
    The Postgres database, which includes data from the website and sensor network,
    is replicated in real-time on a second server, which identically reproduces the
    transactions that take place on the main server. The entire server is backed up
    every day in order to be able to perform full restorations. Finally, the data
    of the sensor network database and the structure of the tables are exported and
    archived in the S3 every week. 4.4. Storing the Datafiles: S3 To store the datafiles
    within the CEBA, we use a local session of an S3 provided by the Mesocentre. On
    the backup side, the data deposited in a bucket is replicated three times. We
    have chosen S3 as it is a solid storage solution because: It is scalable because
    there is no fixed limit in terms of storage capacity or data transfer. The versioning
    function allows one to store several versions of the same object in the same Bucket.
    It is secure thanks to the numerous encryption and data management functions.
    On the server side, encryption can be performed with three key management options
    and client side encryption. Due to its low latency and high throughput, S3 Standard
    is suitable for dynamic websites, content distribution and Big Data analysis.
    4.5. Accessing the Data Allowing different users to deposit, discover, access,
    visualize, extract and query data are part of the functionalities that a data
    lake must offer (see Section 2), while guaranteeing a sufficient level of security.
    The design of the corresponding tools and services must also ensure a scientific
    exploitation of the data by their producers while ensuring a sufficient level
    of description via metadata to allow scientific discovery and reuse of the data.
    To this end, we have designed a single entry point for the user in the form of
    a website, and a real-time consultation service for sensor network data using
    the Grafana tool. These two access points are interconnected, secure, and provide
    access to all data, regardless of format and storage. We will now detail the proposed
    website in terms of its operation and design. Then we will describe the configurations
    made on Grafana to ensure the real-time visualization of the sensor network data.
    4.5.1. Web Site In the following, we will first describe the design and security,
    the project-based structuring of the data repository and management, the management
    of the metadata repository and access, and finally the access to the sensor network
    data. Symfony Update and Security The website is developed with the Symfony framework
    (https://symfony.com/ (accessed on 1 December 2021)) version 4.4; this version
    is checking security patches until November 2023. Moreover, the updates of the
    framework are made fluid thanks to the notion of “future compatible”. In terms
    of security, Symfony provides many tools to secure the application: secure session
    cookies by default in Hypertext Transfer Protocol (HTTP), Cross-Site Request Forgery
    (CSRF) protection. Testing To perform tests, we used standard tools such as the
    PHPUnit framework (https://phpunit.de/ (accessed on 1 December 2021)) for unit
    tests and also OWASP Zed Attack Proxy (https://owasp.org/www-project-zap/ (accessed
    on 1 December 2021)) to test the software security. Deployment In order to easily
    deploy and maintain the CEBA web solution, some parts of the CEBA such as R server
    are docked using Docker (see Figure 2) and the source code of the website is stored,
    backed up and versioned thanks to the code management software “Git” on a dedicated
    space of the university. Security Aspects We have used the Fédération Éducation-Recherche
    (a service provided by Groupement d’Intérêt Public RENATER (https://www.renater.fr/
    (accessed on 1 December 2021)) to enable a trusted connection to our website in
    order to foster nationwide collaborations. At first, we installed and configured
    the Shibboleth software (https://www.shibboleth.net/ (accessed on 1 December 2021))
    to connect the CEBA website to the federation of authentication authorities. As
    no version of Shibboleth was implemented with the version of the Symfony Framework
    we used, we then developed and validated the interconnection of these services.
    If the user is not a member of a trusted organization, we can create a local account.
    Examples of local accounts are the Chamber of Agriculture or private partners.
    Users Management The CEBA site offers three levels of roles for users: “super
    administrator” reserved only for CEBA computer specialists, “administrator” to
    manage projects and “user” to allow connection but has no rights by default. Unlike
    public access, the “user” role allows you to be included in a project and to have
    full access to the associated resources. Project Structure The steering committee
    asked for the website to be structured structured around the notion of “project”.
    This notion has been broken down into two levels: structuring and standard. A
    project can be “structuring”, i.e., it can contain other projects or not. A project
    is defined by a name, a status, a funding, a creation date, a supporting organization,
    a website (by default the organization’s website), whether it is of a ConnecSens
    nature or not, an image, a summary, a description, a project owner, affiliated
    users or a geographical site, whether it is structuring or not. A project is created
    by a user with the administrator role. A project contains the following headings:
    experiment, site, sensor network and dataset. An experiment is characterized by
    an instrument, a study object and a method in a project and can be linked to several
    sites. A site is a geographic location defined by a longitude, latitude and a
    name to identify the location of the project. Sensor networks of any type can
    be connected to the project (see Section 4.2, Section 4.3 and Section 4.5.2 for
    more details). Finally, datasets can be created in two ways: by form (unitary
    deposit), or by “drag and drop” from a tabular file to the INSPIRE standard (dataset
    deposit) Section 4.1.1. In order to properly manage the life cycle of metadata
    and data, it is possible to restrict the visibility of a dataset by applying a
    “public”, “private” or “embargoed” status. The dataset file can be downloaded
    in XML format. Once the dataset is created on the CEBA, a data file can be uploaded
    in any format with a limit of three gigabytes and associated with the dataset.
    It is stored on the S3 Mesocentre. A web feature checks that the data file names
    are unique to avoid accidentally overwriting an old file. Deleting a data file
    on the website implies a permanent deletion on the S3. Project Management Rights
    It is possible to distribute the authorizations to edit the different parts of
    the project between the users affiliated (user role) to a project. A user can
    be assigned from zero to several permissions by the project owner to manage (Create,
    Edit, Delete) the associated part of the project. Five categories have been created:
    project management, sensor network management, create an experiment, declare a
    site, declare datasets. The Project Management permission (grant the same rights
    as project administrator on the project data) allows one to edit a project, manage
    all the metadata related to the project, manage the sensor networks and give rights
    to the project users. The Manage Sensor Network permission allows one to connect
    a sensor network to the project. The Create Experiment permission allows one to
    add experiments to the project. The Declare Site permission allows one to add
    a geographic site already entered in the CEBA to the project. The Declare Datasets
    permission allows one to deposit datasets into the project and manage them by
    modifying or deleting them. All user permissions in a project are summarized in
    a table located in the project and visible only to the project owner or administrator.
    Data Catalog Flows For security reasons, the data catalog is not publicly exposed.
    The website and GeoNetwork communicate (see Figure 9) with two technologies: Representational
    State Transfer (REST) API provided by Geonetwork, CSW protocol. The REST API allows
    us to view/delete datasets from our website for the queries that do not require
    an extraction or an XML file. The second one, the CSW protocol, allows to expose
    catalog records via HTTP. Figure 9. Flows between website and data catalog. We
    are now going to detail the creation, edition deletion and visualization of a
    dataset. To deposit and therefore create a dataset from the website, all the variables
    of the form (web or excel) are retrieved and two Comma-separated values (CSV)
    files are created. The first one contains all the metadata information while the
    second one contains the contact information (by drag and drop, the information
    is already in CSV format). These CSVs are injected into our processing chain consisting
    of an R tool called Geometa [70] which creates an XML from the two tabular files,
    using the ISO 19115 standard. Then the XML is sent via the CSW 2.0 protocol to
    the GeoNetwork. Once the process is finished, the status of the operation is retrieved
    to know if there was an error or not and to display the result. To edit a dataset,
    a request via the REST API is used to retrieve the metadata record of the dataset,
    then the previous processing chain is used. It is possible to add data files to
    the form, which are saved on the S3 in buckets dedicated to the project where
    the dataset is located. The dataset deletion is also performed by request with
    the REST API according to the same principle. All the resources (form and associated
    data files) are then deleted. The REST API can be used to obtain the desired form
    in ISO 19115 XML format, which is then displayed on the website. Searching into
    the Metadata As requested by the steering committee, the CEBA website has a metadata
    search function powered by a search bar. Currently based on an Structured Query
    Language query, it returns open data datasets (ignoring embargoed datasets, and
    private datasets are returned but remain inaccessible) by searching multiple fields
    (title, abstract, gemet_keywords, INSPIRE_keywords, other_keywords, and lineage).
    In the future, we plan to improve our search capabilities by dedicating a web
    page and an API to search the index. In addition, it will be possible to search
    by date, area (geographic query), resource type, status, format and representation
    type, such as sensor network data. Sensor Network Access From the website, depending
    on the richness of the data transmitted (at least “what”, “when”, “where” in a
    native or enriched way), it is possible to execute temporal or spatial queries,
    or even complete extractions of more or less complete raw data downloadable in
    json or CSV format (see Section 4.3). The user will be able, according to his
    rights in the CEBA and in the project, to access the Grafana interface to consult
    the data in real-time on the Grafana dashboards (see Section 4.5.2). 4.5.2. Grafana
    Data visualization is conducted through time series generated by queries on quantities
    (variables). From the CEBA side, we only provide a data source with which users
    (scientists and IT) can design their own dashboard. It is striking to note that
    the simplicity of the queries allows all users to create their own graphs. The
    secure access through the use of a personal account and the Hypertext Transfer
    Protocol Secure protocol allows to isolate the data, i.e., to provide each user
    with access only to the data he/she needs and is authorized to access. This is
    possible thanks to the combined use of group and organization with the data source
    in Grafana. An interesting point is the ability to create data sources for particular
    events by reindexing existing data reduced to defined variables, time interval
    or material. This reindexed source can then be deleted once the event is over.
    Finally, although focused on the real-time aspect, dashboards can also be used
    for more sophisticated queries, such as cross-referencing or historical data.
    In this case, these charts retrieve data from sources built on PostgreSQL databases.
    5. CEBA in Action In this section, the use of the CEBA for several projects is
    shown, and some numbers of CEBA data hosting are given. 5.1. Etna Use Case The
    Laboratoire de Physique de Clermont (LPC) and the Laboratoire Magmas et Volcans
    (LMV) of the University of Clermont Auvergne have led a scientific project to
    continuously monitor atmospheric radon on Etna in 2019. In parallel with the development
    of new radon probes, they used the ConnecSens project technology to deploy a network
    of sensors. Prior to on-site deployment, autonomy and data transfer were tested
    to validate the design and configure data transmission. The CEBA was involved
    in this step to find the right ratio between energy consumption, management and
    data analysis. During the deployment on Etna, the CEBA was very helpful as people
    on the volcano were able to check the data transmitted in real-time on their smartphones,
    and thus validated the deployment and configuration of the wireless network within
    a week. Since 2019, in parallel with the different deployments and with the addition
    of new sensors, the collected data are stored in the CEBA. For project users,
    real-time data is displayed and accessible via grafana, and data can be queried
    from the website (see Figure 10). Monitoring the wireless network is also very
    useful because it allows the IT staff to verify that it is functioning properly
    and to prepare upgrade and repair tasks for the next mission on Etna. In this
    case, the CEBA was the key technology point that enabled real-time aerial radon
    monitoring on Etna for the first time [68]. Figure 10. Extract of the dashboard
    of weather station at Mt. Etna (courtesy of LPC and LMV). 5.2. ZATU Use Case The
    CEBA can be used to share, make visible and store the analysis and results obtained
    by a science project. ZATU has been a member of the French LTSER network (Réseau
    des Zones-Ateliers) since January 2015, and this long-term socio-ecological research
    observatory studies the relationships between ecology, society and radioactivity.
    The ZATU LTER observatory is located in a geographic area northeast of Clermont-Ferrand
    on the border of the Limagne Valley and the Bourbonnais Mountains in France. The
    members are from twenty-two laboratories or institutes, producing numerous data
    from sampling, analysis, models and results on soil, air and water. The data come
    from the three main themes focused on humanities and social sciences, radio- and
    geochemistry, and biology and ecology, respectively. ZATU uses the CEBA for two
    primary purposes: data repository and dataset catalog. ZATU users share the data
    they are working on through the data catalog and storage features. ZATU data managers
    have created several datasets, to which they are currently adding the datafiles
    to be shared. This makes the data produced by the members and the projects around
    the ZATU visible, accessible, and findable. One of ZATU’s projects was to design
    a stand-alone wireless radon sensor. In order to test the quality of measurements,
    data transmission and autonomy, one of these systems has been deployed on the
    university campus and is currently sending data. The CEBA assisted in the discussions
    and validation of the prototype designed in collaboration with a company. In early
    2022, the observatory will be equipped with several wireless sensor networks measuring
    many variables such as radon in the air, water level and flow, and weather that
    will be uploaded and stored in the CEBA. 5.3. Aydat Monitoring Aydat lake, located
    in the French Massif Central, has a total area of 60 hectares, a small watershed
    of around 16.8 hectares and a maximum depth of 15 m. It is a eutrophic lake with
    recurrent proliferation of cyanobacteria. This lake belongs to the “Observatoire
    des Lacs” (OLA) network which contributes largely to research on lake ecosystems
    in France. The research programs concern the global understanding of the hydro-ecological
    processes of the lake in order to better predict its responses to current and
    future changes, with the aim of monitoring and reducing the proliferation of cyanobacteria
    (which has a great impact on the local economy, on the functioning of ecosystems
    and reduces biodiversity). Three main types of sensors systems are deployed on
    the lake (one HYDROLAB HL7 multiparameter sonde, three Aquatroll 200 data logger,
    eight HOBO temperature data loggers) with different transmission technologies
    (LoRa using ConnecSens technology with a gateway connected to the internet for
    Aquatroll, Short Message Service for HYDROLAB HL7 and Bluetooth for HOBO data
    loggers) sending at least datapoint hourly, each managed by different projects.
    HYDROLAB HL7 multiparameter sonde comprises eight sensors (a conductivity sensor,
    Hach LDO® Dissolved Oxygen Sensor, temperature sensor, turbidity Sensor, chlorophyll-a
    sensor, blue and green algae sensor, rhodamine sensor, and finally a pressure
    sensor for water depth measurement). For the Aquatroll, the water level measurement
    is based on a piezoresistive sensor whereas the water temperature and the specific
    conductivity, the salinity and the total dissolved solids (TDS) is monitored using
    a balanced 4-electrode cell. The HOBO data loggers record temperature with high-frequency
    acquisition (i.e., 5 min). The Aquatroll and HYDROLAB HL7 systems are currently
    sending their data hourly to the CEBA, and reference datasets have been created
    by the projects around this observatory. The CEBA allows all partners to access
    all data produced (in real-time, on historical data and on analysis). For data
    visualization, dedicated interfaces have been built for each data collection project
    (see Figure 11 for example). A project can range from a group of sensors in the
    same area or in different areas to a specific monitoring site. Figure 11. Extract
    of the dashboard of one system—courtesy of Aydat Observatory. These interfaces
    allow to compare the measurements of several nodes equipped with the same sensors.
    This makes it possible to compare different areas or experimental deployment conditions
    (using a graph for a quick overview or a table for a more complete analysis).
    We also demonstrated that by using the features of Elasticsearch and Grafana explained
    in Section 4.5.2 (notably with the ability to reindex), with the agreement of
    the owners, the CEBA is able to give access to independent data sources (Elasticsearch
    indexes or PostgreSql tables) to gather all the data produced on the same geographical
    site or on the same theme (see Figure 12). Figure 12. Extract of the dashboard
    of multiple independent sources—courtesy of Aydat Observatory. 5.4. CEBA in Numbers
    Eleven projects are hosted by CEBA website, but several projects are under construction.
    Nine wireless sensor networks are sending data, some for more than three years,
    for around five millions records in the database and more than four millions in
    the elastic cluster. All these records weight from 3 GB to 5 GB in the database
    and in the elastic cluster, respectively. More details are given in Table 1 and
    Table 2. The number of records has increased from a factor of 4.5 between 2020
    and 2021. In the same time, the indexing duration has been kept good going from
    0.9 ms in 2020 to 1.5 ms in 2021. The query duration is 0.3 ms for the current
    use. These figures must be taken with care because they take into account the
    various evolutions carried out on the cluster such as the limitation to one year
    of hot data in the indexes is conducted to optimize the performances. Table 1.
    Table describing the number of records and the size in the database. Table 2.
    Table describing the number of records and the size in elastic cluster. 6. Conclusions
    This paper presents proposals and operational responses to a set of requirements
    arising from the CEBA project, which led to the design and implementation of an
    eponymous platform. The first requirement is to manage geographic coordinates
    throughout the data management process, from ingestion to visualization and querying.
    This has been achieved by implementing various elements such as a catalog to manage
    spatially referenced resources with Geonetwork, a database storing geographically
    extended data in JSONB using PostgreSQL and the PostGIS extension. Data enrichment
    during ingestion, when GPS coordinates cannot be transmitted, is performed both
    in the database and in the indexing pipeline. This allows hot and cold data to
    be queried in the database and index with almost the same complexity as geographic
    queries. From a normative point of view, the ISO 19115 and 19139 standards are
    managed and the INSPIRE directive is used, to be compatible with other infrastructures.
    Secondly, the “what, where, when” information was needed. For this purpose, the
    corresponding metadata are managed in all components of the platform and can be
    queried, allowing data and datasets to be found using this information. Third,
    to manage the ingestion of any kind of data stream from IoT networks, we proposed
    and designed an ingestion pipeline based on the Elastic Stack. This pipeline feeds
    an Elasticsearch cluster providing near real-time data access, which in our experience
    has proven to be scalable and responsive to the increasing amount of data. Fourth,
    the entire storage and indexing infrastructure was designed in JSON to facilitate
    data querying and enriching (especially from sensor networks). This functionality
    allowed data that would normally be isolated from each other to be retrieved and
    queried on demand. Finally, in terms of additional functionality, we proposed
    and designed a unique data management system in the form of a website that allows
    data to be uploaded, downloaded, queried and viewed. It also allows for the creation
    and management of datasets for which data files can be deposited. Users can thus
    use a single tool for open data purposes and for managing the data produced by
    scientific projects with secured access. This reliability of the CEBA platform
    has been validated by several projects such as the monitoring of radon in the
    air on Mt Etna [68], the global monitoring of Aydat Lake and some new collaborations
    with industry. CEBA also hosts the datasets and data files of long-term research
    infrastructures and their projects, such as the ZATU workshop. Currently only
    available in French, an English option will be added in the next version of the
    web site. In order to improve the query and analysis capabilities of the CEBA,
    which are currently quite limited and to reach a level similar to that of data
    warehouses, research is underway [73] to build a query engine on top of the CEBA
    (with Elastic Stack or Apache Spark SQL [74]). The focus will be on spatial queries
    with time series criteria. In order to be able to tackle the IoT network at higher
    speeds, we are testing other stream processing platforms such as Apache Kafka
    [75] and Apache Spark. Author Contributions Conceptualization: D.S.; Formal analysis:
    J.M.; Software: D.S., A.C., F.O. and J.M.; Supervision: D.S. and G.M.; Visualization:
    A.C. and F.O.; Validation: all authors, Writing—review and editing: All authors.
    All authors have read and agreed to the published version of the manuscript. Funding
    This research was financed by the French government IDEX-ISITE initiative 16-IDEX-0001
    (CAP 20-25). The “Fédération des Recherches en Environnement” laboratory also
    contributes to this study. Institutional Review Board Statement Not applicable.
    Informed Consent Statement Not applicable. Data Availability Statement No new
    data were created or analyzed in this study. Publicly available datasets shown
    in this paper can be found here: https://ceba.uca.fr. Some data presented in this
    study are available on request from the corresponding author. Acknowledgments
    The authors would like to thank Antoine Mahul and David Grimbichler, both members
    of the Mesocentre Auvergne, for their active support, as well as the whole team
    of the DOSI of the University Clermont Auvergne. We would also like to thank the
    people who worked on the ConnecSens project for the constructive interactions
    for the definition of some CEBA functionalities. Conflicts of Interest The authors
    declare no conflict of interest. Abbreviations The following abbreviations are
    used in this manuscript: API Application Programming Interface BTREE Binary Tree
    CEBA Cloud Environnemental au Bénéfice de l’Agriculture Environmental Cloud for
    the Benefit of Agriculture CSRF Cross-Site Request Forgery CSV Comma-separated
    values CSW Catalogue Services for the Web DBMS Database Management System DMP
    Data Management Plan DOI Digital Object Identifier FAIR Findable, Accessible,
    Interoperable, Reusable GEMET GEneral Multilingual Environmental Thesaurus GIN
    Generalized Inverted Index HTTP Hypertext Transfert Protocol I-Site Initiatives
    Science–Innovation–Territoires–Economie Initiatives Science–Innovation–Territories–Economy
    INSPIRE Infrastructure for Spatial Information in the European Community IoT Internet
    of Things IT Information technology JSON JavaScript Objet Notation JSONB JavaScript
    Objet Notation Binaries LoRa Long Range MQTT Message Queuing Telemetry Transport
    NoSQL not only SQL OAI-PMH Open Archives Initiative Protocol for Metadata Harvesting
    OGC Open Geospatial Consoritum REST Representational State Transfer S3 Simple
    Storage Service URI Uniform Resource Identifier XML eXtensible Markup Language
    References Castillo Osorio, E.; Kang, S.; Kim, B.S.; Lim, J.; Kim, K.H.; Kim,
    K.I. Development of data collecting system for forecasting with meteorological
    sensors. In Proceedings of the 2017 International Conference on Information Networking
    (ICOIN), Da Nang, Vietnam, 11–13 January 2017; pp. 453–456. [Google Scholar] [CrossRef]
    Ukhurebor, K.; Azi, S.; Aigbe, U.; Onyancha, R.; Emegha, J. Analyzing the uncertainties
    between reanalysis meteorological data and ground measured meteorological data.
    Measurement 2020, 165, 108110. [Google Scholar] [CrossRef] Wieczorek, J.; Bloom,
    D.; Guralnick, R.; Blum, S.; Döring, M.; Giovanni, R.; Robertson, T.; Vieglais,
    D. Darwin Core: An Evolving Community-Developed Biodiversity Data Standard. PLoS
    ONE 2012, 7, e0029715. [Google Scholar] [CrossRef] [PubMed] Sequeira, A.M.M.;
    O’Toole, M.; Keates, T.R.; McDonnell, L.H.; Braun, C.D.; Hoenner, X.; Jaine, F.R.A.;
    Jonsen, I.D.; Newman, P.; Pye, J.; et al. A standardisation framework for bio-logging
    data to advance ecological research and conservation. Methods Ecol. Evol. 2021,
    12, 996–1007. [Google Scholar] [CrossRef] Urbano, F.; Cagnacci, F. Euromammals
    Collaborative Initiative. Data Management and Sharing for Collaborative Science:
    Lessons Learnt from the Euromammals Initiative. Front. Ecol. Evol. 2021, 9, 577.
    [Google Scholar] [CrossRef] Deligiannis, K.; Raftopoulou, P.; Tryfonopoulos, C.;
    Platis, N.; Vassilakis, C. Hydria: An Online Data Lake for Multi-Faceted Analytics
    in the Cultural Heritage Domain. Big Data Cogn. Comput. 2020, 4, 7. [Google Scholar]
    [CrossRef] [Green Version] Derakhshannia, M.; Gervet, C.; Hajj-Hassan, H.; Laurent,
    A.; Martin, A. Data Lake Governance: Towards a Systemic and Natural Ecosystem
    Analogy. Future Internet 2020, 12, 126. [Google Scholar] [CrossRef] Ciampittiello,
    M.; Manca, D.; Dresti, C.; Grisoni, S.; Lami, A.; Saidi, H. Meteo-Hydrological
    Sensors within the Lake Maggiore Catchment: System Establishment, Functioning
    and Data Validation. Sensors 2021, 21, 8300. [Google Scholar] [CrossRef] Weathers,
    K.; Hanson, P.C.; Arzberger, P.; Brentrup, J.; Brookes, J.D.; Carey, C.C.; Gaiser,
    E.; Hamilton, D.P.; Hong, G.S.; Ibelings, B.W.; et al. The Global Lake Ecological
    Observatory Network (GLEON): The evolution of grassroots network science. Limnol.
    Oceanogr. Bull. 2013, 22, 71–73. [Google Scholar] [CrossRef] Xu, Z.; Ran, Y.;
    Rao, Z. Design and integration of air pollutants monitoring system for emergency
    management in construction site based on BIM and edge computing. Build. Environ.
    2022, 211, 108725. [Google Scholar] [CrossRef] Retamar, A.E.; Guba, G.; Lopez,
    G.V.; Paler, H.B.; Javier, J.; Garcia, F.C.C.; Badong-Carlos, J.; Capito, J.;
    Mosquera, I.C.; de Paz, M.; et al. HydroMet: Deployment of a large scale nationwide
    hydrometeorological sensor network for flood warning and monitoring. In Proceedings
    of the 2017 IEEE Global Humanitarian Technology Conference (GHTC), San Jose, CA,
    USA, 19–22 October 2017; pp. 1–10. [Google Scholar] Hossain, M.; Dwivedi, Y.;
    Rana, N. State of the Art in Open Data Research: Insights from Existing Literature
    and a Research Agenda. J. Organ. Comput. Electron. Commer. 2015, 26, 14–40. [Google
    Scholar] [CrossRef] [Green Version] Shadbolt, N.; O’Hara, K.; Berners-Lee, T.;
    Gibbins, N.; Glaser, H.; Hall, W.; Schraefel, M. Linked Open Government Data:
    Lessons from Data.gov.uk. IEEE Intell. Syst. 2012, 27, 16–24. [Google Scholar]
    [CrossRef] [Green Version] Cerrillo-i Martínez, A. Fundamental interests and open
    data for re-use1. Int. J. Law Inf. Technol. 2012, 20, 203–222. [Google Scholar]
    [CrossRef] Gewin, V. Data sharing: An open mind on open data. Nature 2016, 529,
    117–119. [Google Scholar] [CrossRef] Wilkinson, M.D.; Dumontier, M.; Aalbersberg,
    I.J.; Appleton, G.; Axton, M.; Baak, A.; Blomberg, N.; Boiten, J.W.; da Silva
    Santos, L.B.; Bourne, P.E.; et al. The FAIR Guiding Principles for scientific
    data management and stewardship. Sci. Data 2016, 3, 160018. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Murray-Rust, P. Open Data in Science. Serials Rev. 2008,
    34, 52–64. [Google Scholar] [CrossRef] Estermann, B. Diffusion of Open Data and
    Crowdsourcing among Heritage Institutions: Results of a Pilot Survey in Switzerland.
    J. Theor. Appl. Electron. Commer. Res. 2014, 9, 15–31. [Google Scholar] [CrossRef]
    [Green Version] Chen, S.; Xu, H.; Liu, D.; Hu, B.; Wang, H. A Vision of IoT: Applications,
    Challenges, and Opportunities with China Perspective. IEEE Internet Things J.
    2014, 1, 349–359. [Google Scholar] [CrossRef] Svertoka, E.; Bălănescu, M.; Suciu,
    G.; Pasat, A.; Drosu, A. Decision Support Algorithm Based on the Concentrations
    of Air Pollutants Visualization. Sensors 2020, 20, 5931. [Google Scholar] [CrossRef]
    Azmi Ali, N.; Abdul Latiff, N.A. Environmental Monitoring System Based on LoRa
    Technology in Island. In Proceedings of the 2019 IEEE International Conference
    on Signals and Systems (ICSigSys), Bandung, Indonesia, 16–18 July 2019; pp. 160–166.
    [Google Scholar] [CrossRef] Majidi Nezhad, M.; Neshat, M.; Piras, G.; Astiaso
    Garcia, D.; Sylaios, G. Marine Online Platforms of Services to Public End-Users—The
    Innovation of the ODYSSEA Project. Remote Sens. 2022, 14, 572. [Google Scholar]
    [CrossRef] Manzano, L.G.; Boukabache, H.; Danzeca, S.; Heracleous, N.; Murtas,
    F.; Perrin, D.; Pirc, V.; Alfaro, A.R.; Zimmaro, A.; Silari, M. An IoT LoRaWAN
    Network for Environmental Radiation Monitoring. IEEE Trans. Instrum. Meas. 2021,
    70, 1–12. [Google Scholar] [CrossRef] Basford, P.; Bulot, F.; Apetroaie-Cristea,
    M.; Cox, S.; Ossont, S. LoRaWAN for smart city IoT deployments: A long term evaluation.
    Sensors 2020, 20, 648. [Google Scholar] [CrossRef] [PubMed] [Green Version] Zhao,
    Y.; Cao, C.; Liu, Z.; Mu, E. Intelligent Control Method of Hoisting Prefabricated
    Components Based on Internet-of-Things. Sensors 2021, 21, 980. [Google Scholar]
    [CrossRef] [PubMed] Debauche, O.; Mahmoudi, S.; Manneback, P.; Lebeau, F. Cloud
    and distributed architectures for data management in agriculture 4.0: Review and
    future trends. J. King Saud Univ. Comput. Inf. Sci. 2021; in press. [Google Scholar]
    [CrossRef] Bates, H.; Pierce, M.; Benter, A. Real-Time Environmental Monitoring
    for Aquaculture Using a LoRaWAN-Based IoT Sensor Network. Sensors 2021, 21, 7963.
    [Google Scholar] [CrossRef] [PubMed] Farooq, M.S.; Riaz, S.; Abid, A.; Abid, K.;
    Naeem, M.A. A Survey on the Role of IoT in Agriculture for the Implementation
    of Smart Farming. IEEE Access 2019, 7, 156237–156271. [Google Scholar] [CrossRef]
    Khutsoane, O.; Isong, B.; Abu-Mahfouz, A.M. IoT devices and applications based
    on LoRa/LoRaWAN. In Proceedings of the IECON 2017—43rd Annual Conference of the
    IEEE Industrial Electronics Society, Beijing, China, 29 October–1 November 2017;
    pp. 6107–6112. [Google Scholar] [CrossRef] Srivastava, M.; Kumar, R. Smart Environmental
    Monitoring Based on IoT: Architecture, Issues, and Challenges. In Advances in
    Intelligent Systems and Computing; Springer Nature: Cham, Switzerland, 2021; pp.
    349–358. [Google Scholar] [CrossRef] Fastellini, G.; Schillaci, C. Chapter 7—Precision
    farming and IoT case studies across the world. In Agricultural Internet of Things
    and Decision Support for Precision Smart Farming; Castrignanò, A., Buttafuoco,
    G., Khosla, R., Mouazen, A.M., Moshou, D., Naud, O., Eds.; Academic Press, 2020;
    pp. 331–415. [Google Scholar] [CrossRef] Iurcev, M.; Pettenati, F.; Diviacco,
    P. Improved automated methods for near real-time mapping -application in the environmental
    domain. Bull. Geophys. 2021; in print. [Google Scholar] [CrossRef] Jaladi, A.R.;
    Khithani, K.; Pawar, P.; Malvi, K.; Sahoo, G. Environmental monitoring using wireless
    sensor networks (WSN) based on IOT. Int. Res. J. Eng. Technol 2017, 4, 1371–1378.
    [Google Scholar] Chi, Q.; Yan, H.; Zhang, C.; Pang, Z.; Da Xu, L. A reconfigurable
    smart sensor interface for industrial WSN in IoT environment. IEEE Trans. Ind.
    Inform. 2014, 10, 1417–1425. [Google Scholar] Abraham, S.; Beard, J.; Manijacob,
    R. Remote environmental monitoring using Internet of Things (IoT). In Proceedings
    of the 2017 IEEE Global Humanitarian Technology Conference (GHTC), San Jose, CA,
    USA, 19–22 October 2017; pp. 1–6. [Google Scholar] Dixon, J. Pentaho, Hadoop,
    and Data Lakes. 2010. Available online: https://jamesdixon.wordpress.com/2010/10/14/pentaho-hadoop-and-data-lakes/
    (accessed on 1 December 2021). Madera, C.; Laurent, A. The next Information Architecture
    Evolution: The Data Lake Wave. In Proceedings of the 8th International Conference
    on Management of Digital EcoSystems, Biarritz, France, 1–4 November 2016; Association
    for Computing Machinery: New York, NY, USA, 2016; pp. 174–180. [Google Scholar]
    [CrossRef] Russom, P. Data Lakes: Purposes, Practices, Patterns, and Platforms;
    TDWI White Paper; TDWI: Talend Redwood City, CA, USA, 2017. [Google Scholar] Fang,
    H. Managing data lakes in big data era: What’s a data lake and why has it became
    popular in data management ecosystem. In Proceedings of the 2015 IEEE International
    Conference on Cyber Technology in Automation, Control, and Intelligent Systems
    (CYBER), Shenyang, China, 8–12 June 2015; pp. 820–824. [Google Scholar] [CrossRef]
    I-Site Clermont. Cap 2025. 2021. Available online: https://cap2025.fr/en (accessed
    on 1 December 2021). PostgreSQL. Available online: http://www.postgresql.org/
    (accessed on 1 December 2021). Alekseev, A.; Espinal, X.; Jezequel, S.; Kiryanov,
    A.; Klimentov, A.; Korchuganova, T.; Mitsyn, V.; Oleynik, D.; Smirnov, A.; Smirnov,
    S.; et al. Prototype of the Russian Scientific Data Lake. EPJ Web Conf. 2021,
    251, 02031. [Google Scholar] [CrossRef] Di Maria, R.; Dona, R.; on behalf of the
    ESCAPE project. ESCAPE Data Lake—Next-generation management of cross-discipline
    Exabyte-scale scientific data. EPJ Web Conf. 2021, 251, 02056. [Google Scholar]
    [CrossRef] Ganor, P. Introduction to the Concept of Data Lake and Its Benefits.
    2015. Available online: https://www.esds.co.in/blog/introduction-to-the-concept-of-data-lake-and-its-benefits/
    (accessed on 1 December 2021). IBM. Governing and Managing Big Data for Analytics
    and Decision Makers. 2014. Available online: https://www.redbooks.ibm.com/abstracts/redp5120.html?Open
    (accessed on 1 December 2021). Sirosh, J. The Intelligent Data Lake. 2016. Available
    online: https://azure.microsoft.com/en-us/blog/the-intelligent-data-lake/ (accessed
    on 1 December 2021). Turn Your Data Lake into an Enterprise Data Hub. 2014. Available
    online: https://fr.cloudera.com/products/enterprise-data-hub.html (accessed on
    1 December 2021). Gartner. Gartner Says Beware of the Data Lake Fallacy. 2014.
    Available online: http://www.gartner.com/newsroom/id/2809117 (accessed on 1 December
    2021). Sawadogo, P.N.; Scholly, É.; Favre, C.; Ferey, É.; Loudcher, S.; Darmont,
    J. Metadata Systems for Data Lakes: Models and Features. In New Trends in Databases
    and Information Systems; Welzer, T., Eder, J., Podgorelec, V., Wrembel, R., Ivanović,
    M., Gamper, J., Morzy, M., Tzouramanis, T., Darmont, J., Kamišalić Latifić, A.,
    Eds.; Springer International Publishing: Cham, Switzerland, 2019; pp. 440–451.
    [Google Scholar] Khine, P.P.; Wang, Z.S. Data lake: A new ideology in big data
    era. ITM Web Conf. 2018, 17, 03025. [Google Scholar] [CrossRef] Miloslavskaya,
    N.; Tolstoy, A. Big Data, Fast Data and Data Lake Concepts. Procedia Comput. Sci.
    2016, 88, 300–305. [Google Scholar] [CrossRef] [Green Version] Ravat, F.; Zhao,
    Y. Data Lakes: Trends and Perspectives. In Database and Expert Systems Applications;
    Hartmann, S., Küng, J., Chakravarthy, S., Anderst-Kotsis, G., Tjoa, A.M., Khalil,
    I., Eds.; Springer International Publishing: Cham, Switzerland, 2019; pp. 304–313.
    [Google Scholar] Sawadogo, P.; Darmont, J. On data lake architectures and metadata
    management. J. Intell. Inf. Syst. 2021, 56, 97–120. [Google Scholar] [CrossRef]
    Hai, R.; Quix, C.; Jarke, M. Data lake concept and systems: A survey. arXiv 2021,
    arXiv:2106.09592. [Google Scholar] Couto, J.; Borges, O.; Ruiz, D.; Marczak, S.;
    Prikladnicki, R. A Mapping Study about Data Lakes: An Improved Definition and
    Possible Architectures. In Proceedings of the 31st International Conference on
    Software Engineering and Knowledge Engineering, Lisbon, Portugal, 10–12 July 2019;
    pp. 453–458. [Google Scholar] [CrossRef] Mathis, C. Data Lakes. Datenbank-Spektrum
    2017, 17, 289–293. [Google Scholar] [CrossRef] Giebler, C.; Gröger, C.; Hoos,
    E.; Schwarz, H.; Mitschang, B. Leveraging the Data Lake: Current State and Challenges.
    In Big Data Analytics and Knowledge Discovery; Ordonez, C., Song, I.Y., Anderst-Kotsis,
    G., Tjoa, A.M., Khalil, I., Eds.; Springer International Publishing: Cham, Switzerland,
    2019; pp. 179–188. [Google Scholar] Munshi, A.A.; Mohamed, Y.A.R.I. Data Lake
    Lambda Architecture for Smart Grids Big Data Analytics. IEEE Access 2018, 6, 40463–40471.
    [Google Scholar] [CrossRef] Thusoo, A.; Sharma, B. Architecting Data Lakes: Data
    Management Architectures for Advanced Business Use Cases; O’Reilly Media: Sebastopol,
    CA, USA, 2016. [Google Scholar] Giebler, C.; Gröger, C.; Hoos, E.; Eichler, R.;
    Schwarz, H.; Mitschang, B. The Data Lake Architecture Framework: A Foundation
    for Building a Comprehensive Data Lake Architecture. In Proceedings of the BTW21,
    Online, 19 April–21 June 2021. [Google Scholar] [CrossRef] Tewtia, H.K.; Singh,
    D. COVID-19 Insightful Data Visualization and Forecasting Using Elasticsearch.
    In Computational Intelligence Methods in COVID-19: Surveillance, Prevention, Prediction
    and Diagnosis; Studies in Computational Intelligence, Volume 923; Raza, K., Ed.;
    Springer: Singapore, 2021; pp. 191–205. [Google Scholar] [CrossRef] Priambodo,
    R.; Kadarina, T.M. Monitoring Self-isolation Patient of COVID-19 with Internet
    of Things. In Proceedings of the 2020 IEEE International Conference on Communication,
    Networks and Satellite (Comnetsat), Batam, Indonesia, 17–18 December 2020; pp.
    87–91. [Google Scholar] [CrossRef] Bajer, M. Building an IoT Data Hub with Elasticsearch,
    Logstash and Kibana. In Proceedings of the 2017 5th International Conference on
    Future Internet of Things and Cloud Workshops (FiCloudW), Prague, Czech Republic,
    21–23 August 2017; pp. 63–68. [Google Scholar] [CrossRef] ELK Stack. What Is ELK
    Stack. 2021. Available online: https://www.elastic.co/what-is/elk-stack (accessed
    on 1 December 2021). Elasticsearch Engine. Elasticsearch. 2021. Available online:
    https://www.elastic.co/elasticsearch/ (accessed on 1 December 2021). Elasticsearch
    Engine Scalability. Elasticsearch. 2021. Available online: https://www.elastic.co/guide/en/elasticsearch/reference/current/scalability.html
    (accessed on 1 December 2021). Kibana. Your Window into the Elastic Stack. 2021.
    Available online: https://www.elastic.co/kibana/ (accessed on 1 December 2021).
    Terray, L.; Royer, L.; Sarramia, D.; Achard, C.; Bourdeau, E.; Patrick, C.; Claude,
    A.; Fuchet, J.; Gauthier, P.J.; Grimbichler, D.; et al. From Sensor to Cloud:
    An IoT Network of Radon Outdoor Probes to Monitor Active Volcanoes. Sensors 2020,
    20, 2755. [Google Scholar] [CrossRef] EU. INSPIRE Metadata Implementing Rules:
    Technical Guidelines Based on EN ISO 19115 and EN ISO 19119. 2013. Available online:
    https://inspire.ec.europa.eu/documents/inspire-metadata-implementing-rules-technical-guidelines-based-en-iso-19115-and-en-iso-1
    (accessed on 1 December 2021). Geometa. Geometa: Tools for Reading and Writing
    ISO/OGC Geographic Metadata in R. Available online: https://zenodo.org/record/5512147#.YkUtvDURWUk
    (accessed on 1 December 2021). MQTT: The Standard for IoT Messaging. Available
    online: https://mqtt.org/ (accessed on 1 December 2021). PostGIS. Available online:
    http://postgis.net/ (accessed on 1 December 2021). Ngo, T.T.T.; Sarramia, D.;
    Kang, M.; Pinet, F. An Analytical Tool for Georeferenced Sensor Data based on
    ELK Stack. In Proceedings of the 7th International Conference on Geographical
    Information Systems Theory, Applications and Management, GISTAM 2021, Online Streaming,
    23–25 April 2021; Grueau, C., Laurini, R., Ragia, L., Eds.; SCITEPRESS: Setúbal,
    Portugal, 2021; pp. 82–89. [Google Scholar] [CrossRef] Apache Spark. Available
    online: https://spark.apache.org/ (accessed on 1 December 2021). Apache Kafka.
    Available online: https://kafka.apache.org/ (accessed on 1 December 2021). Publisher’s
    Note: MDPI stays neutral with regard to jurisdictional claims in published maps
    and institutional affiliations.  © 2022 by the authors. Licensee MDPI, Basel,
    Switzerland. This article is an open access article distributed under the terms
    and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Sarramia, D.; Claude, A.; Ogereau, F.; Mezhoud,
    J.; Mailhot, G. CEBA: A Data Lake for Data Sharing and Environmental Monitoring.
    Sensors 2022, 22, 2733. https://doi.org/10.3390/s22072733 AMA Style Sarramia D,
    Claude A, Ogereau F, Mezhoud J, Mailhot G. CEBA: A Data Lake for Data Sharing
    and Environmental Monitoring. Sensors. 2022; 22(7):2733. https://doi.org/10.3390/s22072733
    Chicago/Turabian Style Sarramia, David, Alexandre Claude, Francis Ogereau, Jérémy
    Mezhoud, and Gilles Mailhot. 2022. \"CEBA: A Data Lake for Data Sharing and Environmental
    Monitoring\" Sensors 22, no. 7: 2733. https://doi.org/10.3390/s22072733 Note that
    from the first issue of 2016, this journal uses article numbers instead of page
    numbers. See further details here. Article Metrics Citations Crossref   15 ads   5
    Web of Science   10 PMC   4 Scopus   15 PubMed   4 Google Scholar   [click to
    view] Article Access Statistics Article access statistics Article Views 9. Jan
    19. Jan 29. Jan 8. Feb 18. Feb 28. Feb 9. Mar 19. Mar 29. Mar 0k 1k 2k 3k 4k For
    more information on the journal statistics, click here. Multiple requests from
    the same IP address are counted as one view.   Sensors, EISSN 1424-8220, Published
    by MDPI RSS Content Alert Further Information Article Processing Charges Pay an
    Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For
    Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'CEBA: A Data Lake for Data Sharing and Environmental Monitoring'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Agrawal K.
  - Aggarwal M.
  - Tanwar S.
  - Sharma G.
  - Bokoro P.N.
  - Sharma R.
  citation_count: '11'
  description: Many security standards and cryptographic solutions exist for different
    applications such as agriculture, aircraft, banking systems and etc. but a more
    effective and efficient solution can be given by combining existing technologies
    with blockchain. This work addresses the problems of previous works such as scalability,
    immutability, robustness, network latency, auditability, and traceability. Satoshi
    Nakamoto introduced Blockchain (BC) to tackle the Address Resolution Protocol
    (ARP) spoofing attacks, Distributed Denial of Service (DDoS), phishing problems
    and various security issues. Blockchain is a technology that stores the data using
    a chain of blocks in an encrypted form with hashing algorithms. It uses the decentralized
    architecture to store the information that helps users and customers to have transparency
    on records. The data is stored in a distributed ledger that is tamperproof and
    immutable. To amalgamate the research done so far, this paper presents a systematic
    review of ten different applications and tools used in blockchain. The applications
    include academics and education, agriculture, aircraft, banking, car sharing,
    e-voting, healthcare, Internet of Things (IoT), Intellectual Property Rights (IPR),
    and Supplychain (SC). Moreover, this paper presented a taxonomy for these applications
    and analyzed the implementation of tools used in different domains. Different
    open issues and challenges and key takeaways of blockchain technology were also
    highlighted. Hence, this paper helps give a new insight into working with blockchain
    and deciding on appropriate tools and approaches for a particular application.
  doi: 10.1109/ACCESS.2022.3219160
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 10
    An Extensive Blockchain Based Applications Survey: Tools, Frameworks, Opportunities,
    Challenges and Solutions Publisher: IEEE Cite This PDF Kanika Agrawal; Mayank
    Aggarwal; Sudeep Tanwar; Gulshan Sharma; Pitshou N. Bokoro; Ravi Sharma All Authors
    12 Cites in Papers 3098 Full Text Views Open Access Comment(s) Under a Creative
    Commons License Abstract Document Sections I. Introduction II. Blockchain Overview
    III. Research Methodology IV. Adoption of Blockchain in Different Applications:
    a Solution Taxonomy V. Tools/Frameworks Used to Build Up Decentralized Systems
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    Many security standards and cryptographic solutions exist for different applications
    such as agriculture, aircraft, banking systems and etc. but a more effective and
    efficient solution can be given by combining existing technologies with blockchain.
    This work addresses the problems of previous works such as scalability, immutability,
    robustness, network latency, auditability, and traceability. Satoshi Nakamoto
    introduced Blockchain (BC) to tackle the Address Resolution Protocol (ARP) spoofing
    attacks, Distributed Denial of Service (DDoS), phishing problems and various security
    issues. Blockchain is a technology that stores the data using a chain of blocks
    in an encrypted form with hashing algorithms. It uses the decentralized architecture
    to store the information that helps users and customers to have transparency on
    records. The data is stored in a distributed ledger that is tamperproof and immutable.
    To amalgamate the research done so far, this paper presents a systematic review
    of ten different applications and tools used in blockchain. The applications include
    academics and education, agriculture, aircraft, banking, car sharing, e-voting,
    healthcare, Internet of Things (IoT), Intellectual Property Rights (IPR), and
    Supplychain (SC). Moreover, this paper presented a taxonomy for these applications
    and analyzed the implementation of tools used in different domains. Different
    open issues and challenges and key takeaways of blockchain technology were also
    highlighted. Hence, this paper helps give a new insight into working with blockchain
    and deciding on appropriate tools and approaches for a particular application.
    Features of decentralized system. Published in: IEEE Access ( Volume: 10) Page(s):
    116858 - 116906 Date of Publication: 03 November 2022 Electronic ISSN: 2169-3536
    DOI: 10.1109/ACCESS.2022.3219160 Publisher: IEEE CCBY - IEEE is not the copyright
    holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction With the technological advancement and increasing uses of the
    internet, online communication systems are becoming a priority for different users.
    As the flow of data is continuous, the threats to privacy and security have increased
    tremendously [1]. Hackers and attackers usually attack the communication channel
    to disrupt or steal the information. Hence, it is required to consider security
    and privacy concerns actively along with data integrity, heterogeneity, and redundancy.
    Security and privacy are the important concerns to be taken care of in any organization
    [2], [3]. The information leakage and unauthorized data breaching lead to financial
    losses and wastage of resources. In the absence of a secure and robust model,
    the system faces many attacks such as data rate alteration, DDoS, manipulation,
    ARP spoofing attacks, network congestion, config threats, noise interference,
    and phishing. These attacks affect confidentiality and harm the integrity of data.
    With the increasing cyber-attacks, confidentiality, access control, integrity,
    authorization, and data availability are the primary concerns to deal with. Many
    client-server and centralized-based architectures were introduced to mitigate
    the aforementioned threats. But, the problem with these architectures was that
    when the central server fails to survive cyber-attacks and failures, the entire
    system used to crash down. Advanced Encryption Standard (AES) and Data Encryption
    Standard (DES) security mechanisms were also used to secure the system, but they
    faced high communication overhead and significant computation power. The revolution
    came up with the introduction of the blockchain (BC) and bitcoin concept [4].
    Unlike the usual traditional models, the decentralized and secured BC technique
    enables peer-to-peer (P2P) transference of digital assets without the support
    of any intermediate party [5]. Initially, BC was developed to help and support
    the bitcoin cryptocurrency. In the year 2008, the concept of BC was proposed for
    the first time, and later, it was implemented by Nakamoto in the year 2009. The
    decentralized BC is a technology of connected blocks or nodes chained together
    that stores all the committed transactions in a public ledger [6]. As the transactions
    increases, the new blocks are created and thus appended to the chain, thereby
    increasing the chain growth. The decentralized technology of BC comprises several
    cores and important technologies such as cryptographic hash, digital signatures,
    and distributed consensus algorithms. The decentralization property of BC thus
    removes the need for any intermediate party to verify and validate the transactions
    [7]. A few important BC key characteristics are transparency, trustworthiness,
    decentralized, auditability, and immutability [8]. Because of its trust and secured
    societal impact, BC is applied to various applications worldwide. A. Comparison
    of Survey With Existing Surveys The possibility of dealing and integrating BC
    with different domains such as academics and education, agriculture, aircraft,
    banking, car sharing, e-voting, healthcare, IoT, IPR, and SC has always been a
    topic for investigation and analysis. Many researchers have investigated applications
    and frameworks of BC, but it lacks comprehensive and concrete work in different
    domains. The recent surveys such as [9], [10], and [11] have reviewed different
    application domains and architecture of BC such as healthcare, IoT, IPR etc. However,
    the papers lack the in-depth analysis, tools used and taxonomies of BC. Motivated
    by the aforementioned facts, in the proposed survey, this paper reviews various
    applications of BC and their taxonomy, tools, and frameworks used for BC applications
    and deals in-depth analysis of various open issues and challenges of BC. TABLE
    1 shows the comparison of the proposed survey with the existing surveys that various
    researchers carried out. It highlights the year, primary objective, key contributions,
    applications, taxonomy, tabular discussion, tools and limitations, and open issues
    of the paper, which ought to be useful for beginners interested in doing research
    in this emerging field of BC. The survey deals with the ten different applications
    of BC and their taxonomy, along with a detailed description of the tools and frameworks
    used. It also analyzes various open issues and challenges faced by different applications
    and their related taxonomy. TABLE 1 Comparison Between Existing Surveys With Proposed
    Survey The authors in [9] discussed the evolution of blockchain architecture and
    details of consensus protocols but lacked a tabular discussion of applications.
    Papers [10] and [11] presented a classification of BC-based applications across
    diverse sectors. However, papers have shortcomings and lack taxonomy for open
    issues and challenges faced. The authors in [11] had only discussed eight applications
    and lacks the details of different tools and frameworks that are used in BC applcations.
    The authors in [12] carried out a systematic literature review of 69 articles
    and discussed current BC issues of scalability, incentivization, privacy, and
    regulations as future opportunities. The authors in [13] analyzed the tradeoffs
    of blockchain and explained the concept of architecture and taxonomy of blockchain.
    However paper lacks an in-depth analysis of many applications. Authors of [14]
    discussed the following applications of healthcare records management, verifiable
    electronic voting, decentralized notary, identity management systems, access control
    systems, and supply chain management. Authors in [15] discussed the concepts of
    confidence and trust for BC. However, both the papers lack the details of tools
    used for BC. The authors in [16] showed the usage of BC for healthcare data management
    and discussed various features of BC with the significant benefits in the healthcare
    department, major opportunities offered, case studies, open research challenges,
    and future recommendations. Reference [17] suggested possible opportunities related
    to the future of IP law that BC offered and discussed the impact on the management,
    registration, and enforcement of intellectual property rights. However, the paper
    lacks taxonomy and discusses only the IP law. The authors in [18] presented a
    comparative analysis of BC consensus algorithms with respect to different type
    of applications. Different challenges faced as well as platforms are also discussed.
    However paper lacks taxonomy for different applications and the relative comparison
    of BC applications. B. Problem Statement For every business relationship, trust
    is the basic foundation to be laid down. After trust, success is built on it.
    Different intermediaries participate in business and create trust among stakeholders
    such as banks help to ensure the correct transactions for the correct amounts.
    But these traditional systems led to a very costly, time-consuming, and insecure
    system. These systems develop trust using intermediary service platforms that
    demand fees. Hence trust demands a price. Therefore BC technology came into existence
    that helped improve trust and security in different business relationships. For
    example, in the supplychain management system earlier, it wasn’t easy to track
    products. But BC allowed it to follow the process and store each detail in BC.
    Many creative works of various musicians often travel through a complicated path
    from an artist to the buyer. Various intermediaries involved want their cut in
    this complete process. In addition, there are licenses and various complex rights
    management of online platforms. But BC helps build trust through a direct connection
    between consumer and artist, reducing the fee. In academics and the education
    system, BC builds trust by securing data from any attack and thus provides transaction
    transparency. This helps in providing a reliable and cooperative working environment.
    In the e-voting system, BC helps to secure the ballot system and the count of
    votes that helps to build trust among people. Motivated by the aforementioned
    facts, the authors review ten different applications that use BC technology to
    help build trust among them. C. Motivation In 2008, various business parties faced
    an economic crisis due to the lack of trust among stakeholders. Due to the heavy
    losses, there was an urge to bring the businesses back on track. This need resulted
    in the evolution of bitcoin and BC. From 2008 to 2018, BC was used for cryptocurrency.
    In 2018, BC started being used for different applications such as academics and
    education, agriculture, aircraft, banking, car sharing, e-voting, healthcare,
    IoT, IPR, and SC systems. Many surveys have been carried out on BC and its applications,
    but not a single paper has covered all the significant applications and tools
    used in BC. The existing research focused on the particular application, while
    the need was to get an end-to-end solution for different domains that use blockchain
    technology (BT). Motivated by these facts, this paper reviews all the possible
    ten applications that adopt BC and discusses the various tools used in different
    applications. D. Scope of the Survey This paper provides taxonomy solutions for
    different applications. This survey identifies ten different applications: ride-sharing
    system, IPR management, SC management, agricultural system, aircraft system, IoT,
    e-voting system, academics, education system, healthcare system, and banking system.
    It also provides a relative comparison of different state-of-the-art approaches
    to these applications. It highlights different tools and frameworks used for research,
    open issues, challenges, and future trends of BC to help beginners finalize their
    research domain and application. The articles reviewed so far are summarized as
    follows. Kim et al. [19] showed the usage of BC technology to design a decentralized
    car-sharing system that ensures the data integrity, security, and decentralized
    nature for the legitimate users. Zhu et al. [20] introduced BC architecture to
    protect the originality effectively and also enhance the information trackability.
    The proposed architecture used the core functions of BC technology that included
    consensus mechanisms, encryption algorithms, distributed data storage, and peer-to-peer
    transmissions. Ahmad et al. [21] proposed a decentralized BC-based answer for
    computerized forward supplychain network measures for the Coronavirus disease
    (COVID)-19 clinical gear and empowered data trade among every one of the stakeholders
    engaged with their waste administration in a way that is completely secure, straightforward,
    detectable and reliable. Liu et al. [22] reviewed literature from years 2011 to
    2020 on BC Technologies (BTs) and Information and Communications Technologies
    (ICTs) in agriculture. Kuhle et al. [23] analyzed the shortcomings of methods
    and operational processes in the aircraft industry. Based on the analysis, mapping
    the BC capabilities and commercial aircraft leasing. The authors in [24] introduced
    distributed knowledge graph problem in IoT 5G setting. They solved the problem
    and developed an end-to-end solution by exploring intelligent method and the blockchain
    management for better matching of the relations knowledge graphs set. Pasha et
    al. [25] addressed and identified GST implementation and proposed, GSTChain, as
    a solution using blockchain network technology. The main objective behind such
    innovation was to make tax collection transparent and efficient for the government.
    Huo et al. [26] presented a comprehensive survey on blockchain technology using
    industrial IoT. Authors discussed benefits, motivations and explored the technical
    requirements of different BC platforms in industrial IoT applications. Panja et
    al. [27] proposed a secure technique for an end-to-end verifiable, authenticated
    and secret ballot election. The proposed system provided a verifiable and secure
    voter registration and authentication framework. Jaramillo et al. [28] proposed
    a proposal for academic certification in Higher education and showed different
    applications of BC technology. The features of BC, such as immutability and traceability,
    helped track various steps performed during each transaction, thereby making it
    more secure. Iqbal et al. [29] used machine learning techniques and smart contract
    and proposed a BC-based Reliable and Intelligent Veterinary Information Management
    System (RIVIMS). Cucari et al. [30] discussed a BC related case study on the problems
    faced by Italian banking sector. They showed the Interbank Spunta project’s relevance
    to interbank processes to provide faster execution, greater data visibility, transparency,
    etc. The reason why the BC is being used and adopted was because of certain features
    like decentralization, transparency, immutability, irreversibility, anonymity,
    open-source, etc. [31]. With wide variety of features in BC and their importance,
    the authors in [32] presented survey of Blockchain technology’s architecture,
    evolution, security issues and development frameworks. They provided an analysis
    of various security risks and cryptographic primitives that have been used in
    BC for safety measures. Despite BC’s great potential and advantages, it faced
    technical constraints too. In Bitcoin, the major concerns for scalability included
    the frequency of the blocks and the limited size with the total transactions that
    the network can handle and process were considered to be the problem of scalability
    [33]. In bitcoin, the network throughput was constrained by the mean block development
    time of 10 minutes, and the size of a block up to 1 megabyte was considered [34].
    Bitcoin’s scalability varied with the node’s size and was limited to the mathematical
    puzzle complexity in the network, which was not dependent on the nodes. Hence
    the transaction processing capacity for bitcoin lies between 3.3 to 7 transactions
    per second [35]. However, the efficiency and throughput were affected due to the
    increased size of generated blocks. Different issues of BC, such as congestion
    problems and transaction delays, etc., had led to the result that BC could not
    be effectively used for big business trading. BC faces various challenges regarding
    privacy, interoperability, selfish mining, energy consumption, security and regulation
    policy [13] etc. Also, an algorithm such as Proof of Work (PoW) consumes a large
    amount of electrical energy due to the ability of miners to solve a complex mathematical
    problem for creating blocks [36]. In Proof of Stake (PoS), the rich become richer
    as the winner strategy depends on the highest stake made by the miners [37]. Another
    drawback includes selfish mining, where miners keep the block private with themselves
    to gain better revenue [38]. Also, the chain sometimes suffers from a 51 percent
    attack, where some node gains the majority in the network and then works accordingly.
    Also, as believed, the BC technology may not be accepted on a large scale by various
    stakeholders due to the uncertainties with government regulations [39]. Hence,
    to eradicate such issues related to BC, certain steps need to be taken to make
    it efficient and be utilized all around the work. E. Research Contribution of
    This Survey This research paper reviews more than 150 papers that discuss the
    BC technology used in ten different domains. This research mainly focuses on the
    previous five-year developments done in BC applications to give readers a brief
    overview. Moreover, this paper also highlights the limitations and the future
    scopes for each paper. The major contributions of this paper are: A detailed taxonomy
    for BC-based application is presented along with tools used, objectives, limitations,
    and future scopes. Ten different BC-based applications such as academics and education,
    agriculture, aircraft, banking, car sharing, e-voting, healthcare, Internet of
    Things (IoT), Intellectual Property Rights (IPR), and Supplychain (SC) are covered
    in detail. To the best of our knowledge, no survey has covered all the ten applications
    to date. The tools and frameworks used for various researches are also explained
    and explored with graphical representation using a piechart. The percentage of
    the papers that uses different simulation tools for their work is also evaluated.
    A detailed taxonomy of BC-based applications’ open issues and challenges is shown.
    In addition, the key takeaways are also discussed so that the readers can get
    a deeper insight into the technology and carry the further investigation. F. Organization
    and Reading Map TABLE 2 lists the abbreviations used in this paper. FIGURE 1 shows
    the definite structure of survey. This survey paper deals with the different state-of-art
    approaches and is further organized in different sections. Section II deals with
    the details of BC and its architecture. Section III gives details of different
    sources of information collection and the selection criteria. Section IV gives
    information about the different BC applications present around the world. Section
    V details different tools/frameworks used to build up decentralized systems. Section
    VI discusses open issues and challenges faced by BC and its applications. Section
    VII briefs about the key takeaways with a conclusion and future scope. TABLE 2
    List of Abbreviations FIGURE 1. Structure of survey. Show All FIGURE 2 provides
    a reading map for better understanding of this research paper. Readers interested
    in the basics of BC and its overview can focus on Sections I, II, and VIII. Section
    III gives the in-detail knowledge of steps taken for writing a research paper.
    The solution taxonomy proposed by the authors for adopting BC in different applications
    is given in Sections I and IV. Moreover, the details of different tools used in
    BC are given in Sections IV and V. Finally, Sections I, II, VI, VII, and VIII
    are recommended for further knowledge about the topic and include open issues
    and key takeaways too. FIGURE 2. Reading map of the proposed survey. Show All
    SECTION II. Blockchain Overview BC technology came into existence much later after
    developing a centralized and decentralized system. Initially, the centralized
    system provided storing the data on one node, big data management, large network
    access, processing, availability, and on-demand self-service. But the main disadvantage
    was that if the data storing node gets corrupted, then full data gets lost [40].
    Hence to overcome the disadvantage of a centralized system, the decentralized
    system came into existence. FIGURE 3 highlights various features of decentralized
    system. Thus with the advancement of a decentralized system, the need for a secure
    distributed system also led to the evolution of BC technology. FIGURE 3. Features
    of decentralized system. Show All A. Blockchain BC is a technology that consists
    of a chain of blocks. The data cannot be tampered with and is stored in a safe
    noncentral ledger, which helps to synchronize the environment, thus helping to
    invalidate all the transactions and making them traceable [41]. It creates a decentralized
    environment, thereby helping all network users to interact securely. BC is a series
    of connected blocks where all the history related to transactions can easily be
    traced using previous nodes, making it trustworthy and transparent. Each node
    has its unique Identification and the previous block’s hash [42]. All transactions
    are time-stamped and are arranged chronologically to the previous node. Consensus
    algorithms make BC secure, trusted, and transparent. These algorithms help in
    adding a new node to the noncentral BC system [43]. FIGURE 4 shows brief BC architectural
    perspective used for different applications. FIGURE 4. A bird-eye blockchain architecture.
    Show All B. Blockchain Architecture BC architecture has five modules [43], [44]
    and a brief description of all of these is as follows: Data module: It is used
    for creating the BC system in the “shared and distributed databases. Transaction
    module: It manages and monitors the transactions in the BC system. Block creation
    module: Blocks are developed by miners and contain a description of transactions
    present all over the network nodes. Consensus module: Consensus algorithms example,
    PoS, and PoW helps to validate and maintains the consistency of the transactions.
    Connection and interface module: It tracks the transactions and deals in real-time
    data on smart contracts. C. Blockchain Consensus Mechanisms Consensus mechanisms
    [45] are the procedures used in the blockchain system where different participating
    nodes conclude about a problem. Different consensus mechanisms used in BC are
    discussed below: Proof of Work: Satoshi Nakamoto, in 2008, suggested Proof-of-Work(PoW),
    where each participating block solves a given complex mathematical problem. Finally,
    the node which solves the problem gets the chance to generate the block. However,
    there is a huge loss of energy and resources here in this process. Proof-of-Stake(PoS):
    It preserves the non-centralized nature of the blockchain system. In the PoS mechanism,
    the node gets n percent time opportunity for creating a new block only if it has
    n percent resources. This mechanism saves resources and time for a blockchain
    system. Byzantine Fault Tolerance(BFT): In this algorithm, the validators are
    present, electing the next node randomly. Proof of Authority(PoA): It is designed
    to designate some set of nodes as the authority that validates the transactions
    and hence creates new nodes. Proof of Space(PoS): It is also known as Proof of
    Capacity(PoC), an algorithm that gives the nodes proof of their storage and capacity
    to solve complex problems to generate and validate the next block in a blockchain.
    Practical Byzantine Fault Tolerance(PBFT): This protocol has 3 phases to reach
    consensus.PBFT algorithms use fewer resources and tolerate big message complexities.
    Due to this reason, it is used in small networks of blockchain. D. Blockchain
    Characteristics TABLE 3 tabulates different characteristics [43] of non central
    BC system that are used in different applications. Liu et al. [46] showed the
    transparency characteristics used in the supplychain management system that helped
    the customers to track and gain knowledge about the product lifecycle from its
    manufacture till its distribution. It helped to track the product source as well
    as any adulteration, if it occurred, in between the process till product supply
    [47]. Guo et al. [48] used decentralized characteristics of BC in academics and
    the education system to develop an online education platform of ELMarket (ELM)
    for better future development and more participation and interaction among students.
    Garg et al. [49] explored the immutability characteristic in the banking system
    to keep a check on every transaction with a timestamp to keep a record of every
    detail. With the advancement in the healthcare sector, Iqbal et al. [29] used
    the open-source accessibility feature in the healthcare system to provide future
    prescriptions to patients by saving every detail of previous appointments and
    prescriptions of patients [50]. Goyal et al. [51] used irreversible nature in
    e-voting mechanism that helped to save each transaction or vote and cannot be
    altered by anyone. Smart contracts are the small functions that help in executing
    small operations. Iqbal et al. [29] in the healthcare management system used smart
    contracts to operate operations such as scheduling appointments of patients with
    doctors, paying bills, etc., to ease the burden of healthcare data management.
    TABLE 3 Blockchain Characteristics SECTION III. Research Methodology A systematic
    study is carried out for the proposed survey, which aims to provide an extensive
    and systematic literature review of BC adoption in ten different applications.
    The study proposed the analyses of different state-of-art approaches for ten different
    applications such as academics and education, agriculture, aircraft, banking,
    car sharing, e-voting, healthcare, IoT, IPR, and SC are carried out. Also, the
    survey highlights open issues and challenges, along with key takeaways associated
    with the technology. A. Data Sources For this research paper, the focus was to
    include high-quality research and peer-reviewed articles from the reputed databases
    such as IEEE, Wiley, Elsevier, ACM, Science Direct, Taylor Francis, Google Scholar,
    etc. The inclusion and exclusion criteria for the selection of papers were chosen
    from Kitchenham et al. [52], and [53]. Four filtration steps were used to filter
    629 articles using the search terms, removing papers published before 2017, exclusion
    based on title, abstract, and full text to collect 171 papers for this survey.
    B. Search Criteria Along With Criteria of Inclusion and Exclusion The last five
    year papers were considered to get the current research trend in BC technology.
    Keywords, title, abstract and full text were the steps considered for paper selection
    criteria in the proposed work. Extensive work was done in choosing the papers
    and removing duplicacy from searched items. Many white papers, books about the
    topic, and websites related to the existing surveys were explored. In this criteria,
    papers were searched using keywords like BC, SC, and application to collect 629
    papers. The first filtration removed publications until 2017, and 415 articles
    were shortlisted. The second filtration was done based on the title to get the
    required 367 papers based on BC’s different applications, tools used in BC, open
    issues, and challenges of BC. While the search still led to many unwanted papers,
    the third filtration was applied based on the abstract, and a total of 253 appropriate
    lists of papers were collected. The fourth filtration was applied finally based
    on full text to include the final list of 171 papers for this research. FIGURE
    5 highlights step by step filtration result and study selection procedure that
    deals with the inclusion of relevant papers for the study and exclusion criteria.
    FIGURE 5. Proposed study selection procedure with inclusion and exclusion criteria
    for papers. Show All FIGURE 6 explores the year wise distribution of BC based
    research papers in ten different domains for previous five years. It highlights
    18 papers from year 2017, 27 papers from year 2018, 29 papers from year 2019,
    27 papers from year 2020, 47 papers from year 2021 and 10 papers from year 2022.
    FIGURE 6. Year-wise distribution of research papers. Show All SECTION IV. Adoption
    of Blockchain in Different Applications: a Solution Taxonomy This section covers
    work done by researchers in specifically ten different applications, namely academics
    and education, agriculture, aircraft, banking, car sharing, e-voting, healthcare,
    IoT, IPR, and SC systems. The work done summarized below shows that how BC technology
    has built trust in these applications and among different stakeholders. Yadav
    et al. [54] used BC technology as an opportunity to optimize working of land registry
    records and thus helped built trust. The paper Gupta et al. [45] described the
    BC mechanism in detail. The article Yadav et al. [55] proposed a framework based
    on BC that helped in reducing risks related to documents and protected it from
    any unwanted access. The paper Gupta et al. [56] described the usage of distributed
    large scale databases that are used to support cloud-based and commercial applications.
    The paper Yuan et al. [57] aimed at resolving a few problems in the current consensus
    algorithms such as less transaction per second (TPS) rates, issues related to
    scalability, and poor node reliability and proposed an Efficient Byzantine Reputation-based
    Consensus (EBRC) framework. The paper Kosiba et al. [58] clearly described the
    usage of smart contracts that allows people to communicate safely and transact
    without even knowing the third party. Rupa et al. [59] used the Remix platform
    to create a BC application to manage certificates related to the medical field
    for Industry 5.0. Sravan et al. [60] proposed a model that helps in insurance
    claims validation. Shanker et al. [61] aimed at the development of smart contract
    and BC network for specific fields of real estate for solving issues of Brokerage
    service, non-involvement of third-parties, trusty transaction, etc. Han et al.
    [62] presented a special type of Proof of Stake (PoS) algorithm known as the proof
    of credit (PoC) algorithm. They explained how the PoC protocol could resist selfish
    mining attacks and double-spending attacks. Xu et al. [63] proposed a BC-based
    remote arbitrable non-centralized data auditing model for network storage facility.
    Panja et al. [64] clearly described the problems faced during the e-voting system.
    The article proposed an e-voting scheme consisting of two rounds for self-tallying
    Borda count. Gupta et al. [65] presented a land administration system known as
    LandLedger, which is based on BC and provided the following characteristics such
    as transparency, security, accountability, efficiency, and scalability. Alkhodre
    et al. [66] presented the idea for developing a BC-based Value-Added Tax (VAT)
    system for Saudi Arabia. Dhall et al. [67] proposed a Bc based framework that
    helped in reducing vicious news spread on social media platforms. Kaushik et al.
    [68] elaborates the role of BC in forestalling the pandemics future. Below are
    discussed a summary of ten different applications that use BC technology. Tables
    are formulated below to brief about different papers that use the BC for a particular
    application. FIGURE 7 shows the detailed taxonomy in real-time applications of
    blockchain deployment in academics and education, agriculture, aircraft, banking,
    car/ride sharing, e-voting, healthcare, IoT, IPR, and SC. FIGURE 7. Blockchain
    applications to build trust in society: A solution taxonomy. Show All A. Academics
    and Education System Establishing trust in the academics and education system
    is one of the major problems faced by the institutions. The involvement of intermediaries
    often results in data breaches and influences the student’s privacy. In such scenarios,
    BC is used to prevent tampering with data and build trust among the institute,
    faculty, parents, and students. They help provide distributed storage systems,
    student data safety, tamperproof data, and accuracy to help students and parents
    trust the institution. BC removes the involvement of any third party, thus securing
    the student’s information and hence helps build trust among them. Table 4 shows
    the relative comparison of state-of-the-art approaches for academics and the education
    system that helped to build a trusted and secure system. It contains the reputed
    journals and conferences from the last five years (2017-till date). The summary
    below elaborates how each paper helped build trust in students and institutions
    in the academic system by either creating a new proposal for the higher education
    system or by helping make the system anonymous by not revealing their original
    identity. Thus all this made the system secure and safe from being attacked or
    tampered with by malicious users. TABLE 4 Relative Comparison of State-of-Art
    Approaches for Academics and Education System Dai et al. [69] proposed a BC-based
    system architecture and method for student status information management. The
    model provided an interactive interface for users and the data to complete the
    query functions. The research provided theoretical and practical results for the
    application of BC in student status management. Guo et al. [48] proposed ELM,
    a decentralized system that aimed to solve the problems of online existing educational
    platforms. It solved the participant’s non-interaction and protected the educational
    resources’ copyrights. It used cryptographic measures for safe access of data
    and distributed storage system along with improved data sharing mechanisms that
    helps in building trust and efficient collaboration. ELM used Ethereum to build
    an “Intelligence Chain.” Authors released tokens called ELStone(ELS) on the “Intelligence
    Chain” to provide an incentive to users. The system also proposed a “Smart Market.”
    Authors also included several mechanisms of review of users’ behavior, credits
    exchange, and originality detection. In addition, to store large data, the authors
    combined relational databases and IPFS. The proposed ELM established a transparent,
    safe, non-tamper, and efficient online education ecosystem. Menon et al. [70]
    presented the paper by explaining the idea of BTs. They expounded on the importance
    of marketing applications of the technology and the no need for intermediaries
    in BC that helped in developing trust and reduced cost.They also illustrated with
    the details of marketing facility that could incorporate the application and concepts
    in the market. Deenmahomed et al. [71] designed and implemented an examination,
    certificate, and transcript system using BC. It provided an effective examination
    and award system that can be used to replace the traditional system. The proposed
    system is secured, immutable, decentralized, easy to use, provides anonymous trust
    without revealing his/her identity, scalable and modular. With highly encouraging
    results, the system faces certain weaknesses too. The proposed system only supports
    multiple-choice questions. Open-ended and structured questions were not supported.
    The performance declined with the increasing number of users and smart contracts
    were more often prone to attacks leading to a decline in the performance of the
    system. Jaramillo et al. [28] suggested a proposal for academic certification
    in Higher education and discussed different applications of BC technology. Due
    to its decentralized nature, it helped eliminate the involvement of intermediaries,
    thereby building trust between students and others and make it fit perfectly for
    digital transformations in various educational firms. The features of BC, such
    as immutability and traceability, helped track various steps performed during
    each transaction, making it more secure. Also, the transactions’ encryptions were
    done to reduce the level of risk. The paper also identified the actors taking
    part in the process and discussed the process in detail. The benefits and the
    various challenges regarding the technology used in academic certification were
    also explained. Alammary et al. [72] presented a systematic review of 31 articles
    of educational applications based on BC technology. The paper dealt with the educational
    applications developed using BC technology. It provided benefits to the educational
    field using BC features and discussed challenges and limitations in education
    using BC technology. Detailed analysis and discussion were done for all the topics,
    respectively. Firstly, it helped in issuing and verifying academic student certificates,
    shared students’ learning achievements and competencies and also helped to evaluate
    one’s professional ability. Secondly, BC brought significant benefits to education,
    such as lowering costs, secure sharing of students’ information, and enhanced
    transparency and to build trust among various participants. Third, it showed that
    BC technology is full of challenges. Before using the technology, policymakers
    and managers should consider challenges related to security, availability, privacy,
    scalability, and cost. The review done helped in giving an insight into other
    educational fields that could progress and benefit from BC technology. Mohan et
    al. [73] summarized the extent and nature of the academic misconduct problem.
    A model is constructed in academia to enlighten the presence of the potential
    for a Prisoners’ Dilemma, where scholars indulge in the academic dilemma. The
    paper examined the failure of centralized regulatory solutions in the current
    system and analyzed the features of a decentralized architecture such as anonymity
    and immutability so as to build trust to use the current system. The paper also
    highlighted the importance of recent advancements and new technologies in Open
    Science for misconduct. The paper Arenas et al. [74] suggested ’CredenceLedger’
    as a solution to describe the usage of the BC concept on to a specific educational
    use case using the permission version of BC for non-centralized verification of
    academic records. The system stores the data related to academics in the BC ledger
    that can easily be verified by any third party or any of the educational stakeholders.
    It uses cryptocurrency and without any transaction using BC, the system easily
    awards a digital version of any student. It allowed other parties, such as employers,
    and other stakeholders, to privately and independently check the credentials.
    Secondly, the decentralized part of the permissioned BC made it an effective distribution
    system for verifying the data in the shared ledger. Also, managing the academic
    credentials concerning resources consumption, low cost, and high transaction throughputs
    made permissioned BC an efficient system. Capetillo et al. [75] discussed the
    various opportunities for the development of the academic sector. The advancement
    of BC technology aims to make academic institutions decentralized in nature. Due
    to the property of ease of access and reliability in BC, innovators wanted to
    use it for the better upbringing of students and the advancement of the institutions.
    Few applications had affected “New pedagogy” and “Educational Costs” methods but
    could not be done due to a lack of technological advancements. Hence many types
    of research and experiments were being done to use full features of BC technology
    including trust and safety so as to build an effective and efficient system to
    protect student’s data from manipulating in the educational field. Williams et
    al. [76] examined implications in academia by convergence of artificial intelligence,
    data analytics and BC technology. The system made the universities remain competitive
    by outsourcing the delivery of courses and assessments. The authors of this paper
    also examined a mission strategy to move away from narrow academics towards an
    authentic learning discipline to focus on the overall development of students.
    B. Agricultural System Earlier, the agricultural system faced many problems in
    its execution. Due to improper facilities and less knowledge, farmers could not
    build trust among their consumers. The details regarding product production from
    scratch and its supply chain were unclear. The involvement of intermediaries often
    results in increased costs of production and data breaches. In such scenarios,
    BC is used to protect and store the supply chain data, thus building trust between
    producer and consumer. They help provide agricultural supply chain data directly
    to the buyer and also help in reducing agricultural transaction costs. Table 5
    shows the relative comparison of state-of-the-art approaches for an agricultural
    system that helped to build a trusted and secure system. It contains the reputed
    journals and conferences from the last five years (2017-till date). The summary
    below for each paper shows each paper’s contribution toward building trust in
    the agricultural sector by either deploying a new system of food supplychain or
    by helping make the system traceable and trackable at any point in time. Thus
    all this made the system secure and safe from being attacked or tampered with
    by malicious users. TABLE 5 Relative Comparison of State of Art Approaches for
    Agricultural System Khan et al. [77] investigated BT for agricultural SC during
    the COVID-19 pandemic. Many solutions and benefits are identified for the smooth
    working of agricultural SC. The study used interviews from Pakistan with agricultural
    companies. The work discovered the seven important benefits of applying BT and
    four main challenges and their promising solutions. Liu et al. [22] reviewed literature
    from years 2011 to 2020 on BTs and ICTs in agriculture. The review provided a
    good basis for learning the combination of BTs and ICTs in agriculture. The review
    helps to build a sense of security and trust among users to use BC for agriculture
    purpose as it’s distributed storage system and shared ledger helps to find any
    information of any stage at any time. Mainly the trust in agriculture is build
    in supplychains where the consumer can verify the details of the product being
    travelled from different places. The authors in this work had used Institute for
    Scientific Information (ISI) Web of Science only. Mavilia et al. [78] analyzed
    the effect of BC applications in the food supply chain and agriculture by surveying
    the literature review. They provided key technologies and new tools to different
    agriculture value chain stakeholders to increase production and improve distribution
    processes. They demonstrated the importance of BC technology regarding safety
    and effectiveness in agriculture and also examined South Africa’s case. The findings
    indicated that BC could reshape the agricultural sector by building a sense of
    security and preventing a food crisis. Moreover, the proposed work also discussed
    the overall implications, challenges, limitations, and potentials of the applications
    to be used to build trust in agricultural food supply chains by using BC. Leduc
    et al. [79] highlighted the importance of the design of digital marketplaces to
    support the agricultural goods trading between third party stakeholders and farmers.
    Thus, the authors proposed FarMarketplace, a farming marketplace platform based
    on BC, to build trust among users to trace and track the food details at any point
    of time and developed a methodology to help software solution integrates better
    measure and check the influence of the overall quality of service performance.
    Bai et al. [80] designed a Bayesian formula-based scientific game theory model
    and proposed a green supply chain framework that integrates past experiences with
    the current scenarios. The model is reliable and trustworthy and inputs data from
    sensors available. The authors proposed a green data supply chain and developed
    a trust management system to record the trust values of sensors which improved
    the trust and transparency of the system. Finally, simulations were conducted
    to evaluate the performances. Patel et al. [81] proposed a BC-based system, KRanTi,
    which helped to promote the supply chain of agricultural food across the 5G network.
    The authors presented an efficient credit system that helped farmers buy higher-quality
    raw agriculture products without instant payments. Moreover, a farm-food quality
    score-based assurance system is also proposed that guarantees optimum quality
    grading. Transparency, trust and traceability were achieved by creating smart
    contracts using public ethereum BC. The trust was build by influencing the consumers
    and buyers to get the knowledge of food product without tampering. The data storage
    service was facilitated through the usage of the shared storage IPFS that holds
    all the data from different stakeholders. Thus, results showed that the efficiency
    of KRanTi was improved from the traditional scheme compared with scalability,
    Long Term Evolution (LTE) with 5G, packet failure ratio, cost-quality ratio, BC
    performance and data storage contrast. Song et al. [82] presented a relay-aided
    BC-enabled wireless network for e-agriculture system. It considered signal-to-noise
    ratio/signal to interference ratio (SNR/SIR) for the best relay selection scheme.
    Authors evaluated Transmission Successful Rate (TSR) and Overall Communication
    Throughput (OCT) for the best relay performance. The results showed that OCT and
    TSR performance ameliorated with the increase in the number of potential relay
    nodes. Moreover, the correctness of the work was validated with numerical simulations.
    Orjuela et al. [83] proposed the development and design of a platform using BC
    technologies to provide a solution for agriculture supply chain management and
    control by considering the study case of Colombian agriculture negotiation process.
    The proposed solution eliminated the third-party involvement thus building trust
    to improve the control over products. The time to time analysis and verification
    increase more trust among users to use BC for agriculture SC. Also, the developed
    open platform helped farmers involved and emerging companies to negotiate the
    goods in an open market. Moreover, the proposed platform was robust, scalable
    in a horizontal way and could handle a large amount of transactions per second.
    Hang et al. [84] proposed a fish farm platform based on BC to provide agriculture
    data integrity and trust among farmers. The designed platform aimed to provide
    a tamperproof storage system to fish farmers for storing large amounts of agriculture
    data so as to reduce the risk of any manipulations for diverse processes of the
    fish farms by using smart contracts to execute automatically. A proof of concept
    with the Hyperledger Fabric BC to integrate a legacy fish farm system was implemented
    on top of the proposed architecture. The usability and efficiency of the proposed
    system were demonstrated using various metrics through a series of experiments.
    Antonucci et al. [85] reviewed the BC usage in the agri-food sector. However,
    the reviewed study mainly focused on architecture and smart contracts that helped
    to build trust among farmers for BC in agriculture. The study involved in the
    paper focused on 2019 papers and hence required more in-depth analysis. Kamilaris
    et al. [86] examined the impact of BC technology in the food supply chain and
    agriculture and presented existing initiatives and ongoing projects. It discussed
    overall implications, potential and challenges. The findings indicated that BC
    is the most promising technology for trusted supply chains for food. However,
    many challenges and barriers exist, such as technical aspects, policies, education,
    and regulatory frameworks that hinder the popularity among systems and farmers.Lin
    et al. [87] proposed an ecological, self-organized, trusted and open food traceability
    system based on IoT and BTs that involved all parties in a smart agriculture ecosystem.
    Authors reduced the human intervention by replacing manual verification and recording
    through the usage of IoT devices for system efficiency. Furthermore, smart contract
    technology usage helped the law-executor find problems timely thus building trust
    to get the knowledge or any detail at any time safely. Papa et al. [88] explored
    the possibilities of usage of BC technology in agribusinesses. The authors showed
    that the agricultural sector has a great need for information traceability. Different
    parameters of BC were also studied on the part of agribusiness. C. Aircraft System
    The aircraft systems are developing daily to comfort their passengers. The aviation
    industry faced many problems, including inaccurate digital payments and tracking
    cargo and spare parts. In such scenarios, BC improves the flying experience and
    prevents data tampering. They help provide distributed storage and safe digital
    payment systems to help passengers trust aircraft systems. BC removes the involvement
    of any third party, thus reducing the traveler’s expenses and securing the passenger’s
    information. Table 6 shows the relative comparison of state-of-the-art aircraft
    system approaches that helped build a trusted and secure system. It contains the
    reputed journals and conferences from the last five years (2017-till date). The
    summary below for each paper shows the author’s contribution towards building
    trust in the aviation sector by deploying a new platform for airlines or aviation,
    logistics, helping make the quick credit transaction, tourism, or handling luggage
    over the cloud using BC. The reviews discussed help researchers gather the overall
    impact along with features provided by BC in aviation. Thus all this made the
    system trustworthy to be used for future purposes. TABLE 6 Relative Comparison
    of State of Art Approaches for Aircraft System Yadav et al. [89] BT has revolutionised
    a lot in data storage and encryption systems. The aviation industry has adapted
    to BT, but still, there is a need for advancement in technology. Yadav et al.
    [89] discussed various situations related to transaction in the aviation industry
    using BT. Kuhle et al. [23] analyzed the shortcomings of methods and operational
    processes in the aircraft industry. Based on the analysis, mapped the BC capabilities,
    trust and commercial aircraft leasing. The authors analyzed and proposed a BC
    application design that focused both on the business and regulatory needs and
    the implementation from a technological perspective. The PoC proposed to help
    commercial aircraft leasing in asset management. Ho et al. [90] proposed a BC-based
    managerial platform using Hyperledger Composer and Fabric that accurately records
    data about spare parts traceability with organizational validation and consensus
    to help build trust among users. A data model based on Aircraft Spare Parts inventory
    Management (ASPM) was determined that help integrate information during transactions.
    The channel yielded a trustful and useful data-sharing platform to enhance information
    security and visibility for operational and logistics arrangements between each
    contracting organization. The BC-based system proposed to improve the quality
    of traceable and reliable data sharing in the spare parts supply chain. Lopes
    et al. [91] identified the impact of BC and its various features such as anonymity,
    trackability and trust on aviation industry. The study presented results from
    18 interviews conducted with industry experts. A thematic data analysis and text
    mining concepts were combined to illustrate the likelihood of technology in the
    aviation industry that affected various stakeholders and replaced current platforms.
    The overall impact of BC on aviation was analyzed, which helped the industry build
    trust in BC technology for its users to safeguard the records and distributed
    data storage facility. The five major topics that determined the adoption of BC
    by the aviation industry were customer loyalty, specific adoption factors, adoption
    barriers, the need to replace centralized platforms, and a general lack of awareness.
    All topics were discussed, and future academic research was also put forward.
    The smart tourism concept remained tough to be implemented due to a lack of clarity
    on the responsibilities and roles of stakeholders. Furthermore, the security of
    data generated posed huge challenges. Hence, Yadav et al. [92] proposed a solution
    using distributed ledger feature of BC technology using Ostrom’s action arena
    to examine contractually, information and monetary exchanges between various stakeholders
    to enable smart tourism and trust.The rapid deployment made the cellular-connected
    Unmanned Aircraft System (UAS). Severe effects of malicious Base Stations (BSs)
    depleted 5G New Radio (5G NR). Poor connections between cellular stations and
    UAS brought unpredictable losses for the public properties. However, Wang et al.
    [93] leveraged BC to detect the malicious BSs that degraded the performance of
    5G NR. Authors implemented Practical Byzantine Fault Tolerance (PBFT) to detect
    malicious BSs in the BC. The approach improved the efficiency of the cellular-connected
    UAS that access the network efficiently. Authors recommend that they will optimize
    the efficiency of consensus algorithms and extend the verification efficiency
    of UAS soon. Syed et al. [94] provided a survey of optimal techniques that were
    used for Unmanned aerial vehicles (UAVs) security applications in terms of Machine
    learning (ML), BC, and watermarking [101]. Furthermore, the authors introduced
    each technique’s advantages and suitability for securing and trusting UAVs applications.
    Also, the survey discussed various opportunities and challenges of subject applications
    [102]. The most important activity of the International Air Transport Association
    (IATA) was to reduce baggage mishandling. Hence smart technologies such as IoT,
    BC, and cloud were adopted to reduce baggage mishandling. Alagiah et al. [95]
    designed a system with Radio-Frequency Identification (RFID) tags with proper
    management reporting systems to deal with the situation to improve the mishandling
    of baggage. Authors devised a system framework that allowed the passenger to track
    their luggage over the cloud in a live manner and from any part of the cloud.
    Thus with trackable efficient system used in aviation the passengers can easily
    handle their luggage and hence helps to create a sense of trust in passengers.
    Choi et al. [96] reviewed on air-logistics and its strategic decisions. The authors
    explored risk measures of operations disruption and identified the main areas
    that needed risk analysis to be dealt. They examined different characteristics
    in the risk management of the mean-variance (MV) theory of air-logistics operations
    and studied demand management. They highlighted different models related to lead
    time reduction, explored analytical models, reviewed supply management, explored
    supply-demand coordination, and discussed the role played by air logistics. Hence
    for each of the four major areas, the authors discussed the application of BC
    technology in “demand management,” “air-logistics related operations,” “supply
    management,” and “supply-demand coordination. Thus authors believed that the paper
    provided all useful information to both academics and practitioners on MV theory
    application to conduct risk analysis with air logistics for global supply chain
    operations. Tourism destinations seek new ways to increase tourism revenues and
    market tourism offerings. To highlight a future tourism marketing trend Mofokeng
    et al. [97] used virtual environments (VE) with BC and provided additional revenue.
    They suggested that the technology can also be used in the growth of the tourism
    wildlife market. Lim et al. [98] provided an overview of BC technology applied
    on Logistics. The authors showed the impact of BC on various air cargo business
    model through decentralized data and financial transactions, smart contracts,
    peer-to-peer (P2P) networks, development of trustworthiness for digital records,
    and real-time data proceeding and exchange. V. et al. [99] gave an overview of
    BC with the potential to change the traditional travel industry working. The authors
    presented a detailed architecture of BC, explaining the working and its key components.
    Also, they discussed the diverse changes brought in the travel industry in terms
    of fraud prevention, data protection, and trustful quick credit transactions with
    the usage of BC. Ebarefimia et al. [100] enhanced customer loyalty programs by
    understanding the impact of BC in airline business. A survey was conducted to
    collect data from the sample population using literature and contextualized based
    research instruments to achieve the goal. A total of 450 Questionnaires were distributed
    to managers and customers of surveyed airlines. The respondents had different
    educational, social, and occupational backgrounds. The research instrument showed
    positive evidence of validity and reliability. Data were analyzed using percentages,
    descriptive statistics, and t-test analysis. Hence authors observed the impact
    on airlines operators in Nigeria, the effective usage of customer loyalty program
    goals and objectives. D. Banking System The banking system is one of the most
    important sectors that constitutes our country’s financial development. Banks
    help people to transfer and save money for the betterment of the future. But initially,
    the system was unsafe as it involved many intermediaries, often resulting in data
    breaches and losses. Hence with time, BC came into existence that helped in the
    easy and safe movement of money among its users. It avoids the need for any middlemen
    during the transaction and allows people to communicate through a shared ledger
    directly. This prevents tampering with data and thus builds trust among users.
    Table 7 shows the relative comparison of the state-of-the-art approaches for a
    banking system that helped to build a trusted and secure method. It contains the
    reputed journals and conferences from the last five years (2017-till date). The
    summary below for each paper shows the author’s contribution toward building trust
    in the banking industry by deploying a new system for safe digital transactions
    and a reward system for people doing social services. The survey and reviews conducted
    by authors help researchers gather the overall impact along with features provided
    by BC in banks. Thus all this made the system trustworthy to be used for future
    purposes. TABLE 7 Relative Comparison of State of Art Approaches for Banking System
    Ramchandra et al. [103] assessed the impact of BT in the banking domain. Infrastructure,
    platforms, channels, and scenarios are the four pillars for successful internet
    finance. BT ensured a secure and transparent business system. Saheb et al. [104]
    examined the barriers and organizational values of BC in the banking industry.
    The authors tried to explain the BC adoption relationships and conducted a mixed-method
    qualitative study. The study included semi-structured interviews, a two-panel
    Delphi study, and a systematic literature review to uncover the business values
    of BC. The study showed that environmental and organizational variables significantly
    impact the hindrance of adopting BC in the banking industry. The study provided
    guiding insights to implement BC for managers more effectively in their enterprises
    to maximize the output. Earlier users remain largely unaware of BC’s privacy protection
    feature. Building on the Health Belief Model (HBM), Raddatz et al. [105] include
    privacy inertia and concerns to influence consumers’ perceptions of BC database
    benefits. They tried a sample of 304 respondents by incorporating the factors
    to test the theoretical model. The study revealed that threat susceptibility,
    threat severity, awareness, and inertia significantly impact the benefits of BC.
    Cucari et al. [30] discussed a BC-related case study on the problems faced by
    the Italian banking sector. They showed the Interbank Spunta project’s relevance
    to interbank processes to provide trust, faster execution, greater data visibility
    and transparency, etc. The authors also discussed new challenges various bankers
    face and developed several propositions on the topic to guide future research.
    Garg et al. [49] aimed to measure the business benefits in the banking sector
    of BC technology. Data were collected from 291 respondents, including BC marketing
    experts, BC consultants, or business heads of banks who advise, consult, or implement
    BC technology. To check the proposed instrument’s validity and reliability, Confirmatory
    Factor Analysis (CFA) was carried out. The study indicated a good degree of validity
    and reliability in each construct. The societal and scientific significance of
    the study based on its theoretical and practical applications was also presented.
    Xu et al. [106] proposed a provenance-provided data-sharing model PPM for the
    requirement of open banking. The model employed the programmable smart contracts
    between third-party services and users and provided the modifications on the application
    layer, smart contract layer (logic), and data layer (data content, transaction
    structure). The proposed PPM model possessed trust, privacy-provided control,
    transparent authentication, and auditable provenance. The authors showed that
    the model was an achievable secure system for open banking. Karajovic et al. [107]
    presented the circumspect analysis of BC technology in accounting and its broader
    industry. The analysis began with a summary of early developers using BC technology
    to improve business practices. Finally, the paper discussed technology’s long-term
    implications on work. Criticisms were raised throughout the paper to address concerns
    regarding BC’s widespread usage. Apart from utilizing FinTech and BC, another
    promising accounting method, triple-entry accounting came into existence. Cai
    et al. [108] explored triple-entry accounting using three case studies. They highlighted
    that business entities perform a single entry internally and record opposite entries
    in a shared public ledger for some accounts in the BC ecosystem. Also, triple-entry
    accounting ensures trust and transparency for current accounting systems. Authors
    ensured they improved accounting with proper implementation of BC with triple-entry
    accounting. Dozier et al. [109] studied 12 financial service organizations by
    utilizing grounded theory approach. To create the proof-of-value model, organizations
    applied a specific process of organizing, understanding, and testing to determine
    the value of BC. The author’s findings had implications for both practitioners
    and innovation researchers to evaluate BC technology. Hassani et al. [110] summarized
    the challenges and opportunities from a banker’s perspective and reviewed the
    impact of BC technology in the banking sector. In addition, the authors also discussed
    the impact of big data on banking data analytics soon. They showed the importance
    of signal extraction and filtering for the banking industry. Since selected banks
    adopted BC technology in small groups or isolation, the authors found the need
    for extensive research on BC adoption in several aspects of banking to overcome
    challenges. Xu et al. [111] suggested the construction of trustworthy communities
    based on a BC Enabled Social credits System (BLESS). The system rewarded residents
    who committed socially beneficial activities. The BLESS system focused on enhancing
    the communities and regulating private and business behaviors. The BLESS system
    leveraged the decentralized nature of the BC network, which allowed individuals
    in a social credit system (SCS) and provided a tamper-proof network environment.
    The anonymity in BC records protected individuals from being targeted by powerful
    enterprises. The usage of smart helped prevent any unauthorized access to the
    credit system. The BLESS scheme offered a transparent, trustworthy,secure and
    decentralized SCS. Larios-Hernández et al. [112] studied decentralized BC entrepreneurship
    opportunity in practices of the unbanked. The authors discussed the importance
    of BC entrepreneurship for financial inclusion and summarized many results related
    to the financial and BC-based banking sector. E. Car Sharing System Establishing
    trust in the car-sharing system is one of the major problems faced by the passengers.
    The involvement of third parties and intermediaries often results in data breaches
    and influences the passenger’s privacy. In such scenarios, BC is used to prevent
    tampering with data and build trust [19] among riders by using the P2P protocol.
    They help provide rental cabs, personal cabs, bike rides, carpooling, and luxury
    cab services to ease customer life. This protocol allows passengers to book their
    cabs via an online platform and directly make payments. This removes the involvement
    of any third party, thus securing the customer’s information and hence helps build
    trust among them. Table 8 shows the relative comparison of state-of-the-art approaches
    for the car-sharing system that helped to build a trusted and secure system. It
    contains the reputed journals and conferences from the last five years (2017-till
    date). The summary below for each paper shows the author’s contribution toward
    building trust in the car-sharing system using BC. Privacy, anonymity or hiding
    passengers’ details, maintaining location privacy, and calculating profit by the
    drivers of their ride are some of the significant factors that contribute to the
    usage of BC in the car-sharing system to build trust among users in society. TABLE
    8 Relative Comparison of State-of-the-Art Approaches for Car Sharing System Auer
    et al. [113] explored the effect of BC and IoT together on shared mobility. The
    authors presented an architecture for a BC-IoT-based platform that combined car
    leasing and car-sharing. The work also demonstrated that the design of car-sharing
    platforms depends on the right balance of authenticity, security, privacy, scalability,
    traceability, reliability, and interoperability factors. These days, ride-sharing
    or car-sharing systems have helped urban people resolve their transportation problems
    [125]. However, the traditional systems were exposed to many security issues earlier
    due to the unavailability of decentralized systems via a public channel. Kim et
    al. [19] used BC technology to develop decentralized car-sharing system that ensured
    the data integrity, security,trust and decentralized nature for the legitimate
    users. It helped in the authentication of the various participants randomly. The
    user’s privacy was also guaranteed using the user’s pseudonym, thereby hiding
    the real identity and helping develop trust among passengers and users. The car
    system prevented many attacks and provided authentication and security using automated
    validation of internet security protocols and applications (AVISPA) simulation,
    informal analysis, and BAN logic analysis. The proposed rule gave security against
    offline password guessing, impersonation, replay, and stolen mobile devices. It
    also provided mutual authentication, anonymity, and confidentiality regarding
    the information. Finally, the scheme’s communication and computation costs were
    also calculated. Manjunath et al. [114] proposed a distributed ride-sharing system
    with a multi-objective optimization problem and solved it with the Ant Colony
    optimization technique. Authors defined novel performance metrics and analyzed
    the Spatio-temporal challenges of the ride-sharing system. In-depth experimentation
    from Chicago showed the proposed solution success rate upto 79.65 percent for
    ride-sharing. The results were shown better during light traffic hours due to
    less contention. Furthermore, ride-sharing always reduced the number of taxis
    available on the road and the total distance traveled by all the taxis. Finally,
    the results were obtained, and a revenue framework was proposed that analyzed
    nuances in the operating environment. Wang et al. [115] proposed a BC-based secure
    ride-sharing service that not only provided a decentralized structure of ride
    sharing system but also ensured security, privacy and confidentiality of the information
    among drivers and riders. It helped in the proper distribution of data among the
    driver and the customer and kept a check on illegal transfer of the user data.
    Based on the attributes set for the driver, the proxy re-encryption formula or
    algorithm was used to depict the correct driver for the passenger, thereby ensuring
    verifiability, unidirectionality, and confidentiality. This type of system helped
    in the proper maintenance of data, thereby reducing the risk of customer data
    leakage. To ensure tamperproof property and data integrity, the improved Delegated
    Proof of Stake (DPoS) consensus mechanism made car-sharing transactions or records
    stored in the block. The stored data on BC was used for verification if any dispute
    occurred between rider and driver. The system ensured the credibility of the users
    and drivers, thus providing a secure and reliable interaction environment. Furthermore,
    the system’s performance measures and the security analysis made it realize that
    the system was more secure than any other existing system. Hence, the suggested
    scheme gave certain theories and research value that other researchers could further
    use to improve the quality of the existing ride-sharing systems. Jabbar et al.
    [116] suggested new concept named DISV which meant Decentralized IoT Solution
    for Vehicles communication. The technique incorporated three basic layers for
    vehicle communication and BC usage on the Internet of Vehicles (IoV). It also
    created the smart contracts that were deployed on the Testnet of Ethereum for
    its feasibility. The study considered several properties like availability, security,
    and integrity for testing the BC’s efficiency and security. The final results
    displayed DISV as a solution for Vehicle-to-X (V2X) communication challenges such
    as security, lack of privacy and centralization. It also facilitated the cooperation
    between cars and their infrastructure and data exchange and involved intelligent
    transportation system’s other actors. Furthermore, DISV also acted as an important
    part of the Advanced Driver Assistance Systems (ADAS) that helped improve transportation
    mobility and safety. Yu et al. [117] proposed distributed ride-sharing algorithm
    that used asynchronous localized communication and highlighted the dynamics of
    taxi topology between taxis and passengers. Empirical analysis using Chicago’s
    large-scale single-user taxi ride records showed that the algorithm proposed ensured
    a success rate of 76 percent in the ride-sharing system and a 97.5 percent as
    the taxi occupancy rate during peak working hours. Astarita et al. [118] presented
    a review about the different applications of BC-based system used in transportation.
    The important aim of this research was to find the main gaps in the research done
    so far, current trends and possible future scope. Initially, an analysis was done
    to overview the topics related to BC and its usage. Regarding the road traffic
    management and smart cities [126] and the supply chain and logistics, the analysis
    was done in-depth. Being a new technology, BC found its importance in various
    fields such as regulatory compliance, supply-demand matching, food track and trace
    and smart vehicles’ security. Moreover, the topic of sustainability with BC was
    analyzed to reduce exhaust gas emissions, limit the food waste, improve the quality
    of life and thus favor correct urban development. Baza et al. [119] proposed a
    new concept of B-Ride, which was a non-centralized public BC-based ride-sharing
    service. With the help of BC’s feature, B-ride in rideshare service used the property
    of non-dependency on a third party. Both drivers and riders preserved their journey
    data in the system, including travel price, arrival/departure date, and pick-up
    and drop-off location. However, to have a better price and offer for the trip,
    a customer could make various ride requests and not commit to any single offer,
    thus making it unreliable. B-Ride used a zero-knowledge set membership proof and
    a protocol of time-locked deposit by using a smart contract for a ride-sharing
    system. Hence, both rider and driver had to commit to a booking by sending a deposit
    to the BC. In this system, a driver must agree upon the departure time that he
    has arrived at the pick-up location. Using the zero-knowledge set membership proof,
    the privacy of the data of driver and rider of their pick up location was maintained.
    Moreover, the pay-as-you-derive method was proposed based on a distance between
    the rider and driver to ensure fair payment. Also, researchers proposed a trust
    model that helped the riders to predict the correct driver for their trip by analyzing
    their past journey details without involving any third party. The system was deployed
    on the test net of Ethereum to implement the protocol and the results were calculated
    and summarized. Bothos et al. [120] presented a progress paper and discussed about
    BC technology role for enabling seamless mobility for MaaS. The authors provided
    a brief background on MaaS and BC technology and identified the main contributions
    of BC in MaaS based on the existed works. Kato et al. [121] showed a scheme that
    used BC technology for rideshare systems. The paper used a de-centralized authority
    of BC that matched riders and drivers with the concept that helped the drivers
    be miners simultaneously. The suggested system tried to benefit the drivers and
    find their least probability matching. If a driver mined generously and obtained
    the least matching probability is less than a matching probability, then the BC
    rideshare system provided him a great price than does the centralized and conventional
    rideshare service. Furthermore, the paper used the Markov chain to establish a
    mathematical formula for drivers’ stationary arrangement. It provided the equation
    that helped the drivers calculate their profit and analyze whether they should
    be a part of the rideshare system or not. Singh et al. [122] introduced BC technology
    to provide trust and security in Intelligent vehicle (IV) similar topologies communication.
    The authors proposed a BC-enabled IV communication use case. The proposed method
    comprises the main BC and local dynamic BC (LDB), enabled with a unique and secure
    crypto ID called intelligent vehicle trust point (IVTP). IVTP ensured the trustworthiness
    of vehicles. The LDB with IVTP was used by vehicles to communicate with other
    vehicles. The proposed IV communication was simulated in a common intersection
    deadlock use case. With an emphasis on real-time traffic, the performance of the
    traditional BC was evaluated. The authors also introduced LDB branching for IV
    communication to automate the branching process. Initially, the trust in the rideshare
    systems was less due to its less security. Hence to avail trust and secure rides,
    Kanza et al. [123] introduced cryptotransport, a ride-hailing service along with
    cryptocurrency and BC service for passengers, which helps passengers to easily
    and truly choose the origin and destination of their ride by preserving location
    privacy. Also, the decentralized nature of BC made Cryptotransport riders not
    rely on any organization and company to manage the system. Chanson et al. [124]
    presented an odometer fraud prevention system that records Global Positioning
    System (GPS) and mileage data of cars and saves data on BC. The suggested system
    users control and own their data with ensured data integrity, thus facilitating
    data certification. The authors also compared the proposed and the current system
    and stated the approach’s advantages. They also highlighted the limitations of
    the architecture. F. E-Voting System The traditional voting mechanisms were cumbersome,
    time-consuming, and lacked trust. The inaccuracy led in these systems often results
    in inefficiency. Hence for an effective and efficient e-voting mechanism, BC was
    used to provide accurate outcomes. It mainly helped in end-to-end verification
    and counting of votes. It does not allow the involvement of third parties, often
    resulting in data breaches, and prevents tampering with data. It helps provide
    the facility to vote from wherever the place has an internet connection and reduces
    the organizational cost. All these characteristics help in building trust in e-voting
    systems among different users. Table 9 shows the relative comparison of the state-of-the-art
    approaches for the e-voting system that helped to build a trusted and secure system.
    It contains the reputed journals and conferences from the last five years (2017-till
    date). The summary below shows the paper’s contribution toward building trust
    in an e-voting system using BC. Privacy, anonymity in casting votes, preventing
    ballot stuffing, end-to-end verification, and casting votes from any place are
    the major factors that contribute to building a trustworthy and safe e-voting
    system. TABLE 9 Relative Comparison of State-of-the-Art Approaches for E-Voting
    System Divya et al. [127] incorporated BC with online e-voting system. The method
    helped to save the voters’ votes into a secure BC. It allowed voters to vote and
    register for any candidate that they desired. All other voter information, such
    as the voters’ city, name and vote count, was accessible via the website to anyone.
    The system developed a sense of trust among voters to vote in a safe and secure
    manner. It also provided a sense of security and denied duplication of votes [141].
    The authors in [27] proposed a secure technique for an end-to-end verifiable,
    authenticated and secret ballot election. The proposed system provided a verifiable
    and secure voter registration and authentication framework, which thus prevented
    ballot stuffing attacks. Authors modified the Direct-Recording Electronic with
    integrity and enhanced privacy (DRE-ip) system so that no adversary can create
    and post on the public bulletin board a valid ballot without detection. The authors
    proposed a way of publishing the final tally using non-interactive zero-knowledge
    (NIZK) proof and secure multi-party computation. Two methods to store these ballots
    were also proposed using a cloud server and BC. The authors also provided security
    proofs for the proposed scheme to prove the security properties. Malkawi et al.
    [128] presented a BC-based voting system (BBVS) in the country of Jordan for the
    parliamentary elections system. The proposed system is a centralized and private
    BC implemented hierarchically, where a voter votes at two levels. The first level
    is for a group, and the second level is for distinct group members. The authors
    provided a novel yet secure BC-based e-Voting system that measures the election
    process’s performance, integrity, and accuracy. The research implemented new algorithms
    to maintain acceptable performance both when creating and casting votes for voters
    and candidates. Goyal et al. [51] proposed an e-voting system that the Indian
    Government can use to host the whole election procedure on the digital platform.
    Authors suggested that all the elections organized by the Election Commission
    of India would be done through Decentralized Application (dApp). Candidates, too,
    would file their nominations as per their choice. Organizers had the freedom to
    accept or reject the request. The voting process’s availability made it easier
    for voters to cast their votes from any place. Also, it allowed voters from other
    countries to participate, thus increasing the total voting percentage. Since the
    authors used BC technology for this system, it ensured ease of use, transparency,
    security, portability, reliability and Trustability. Huang et al. [129] presented
    a comprehensive review of voting systems based on BC and classified them based
    on the consensus approaches used, types of BC and the scale of participants. The
    authors systematically compared the different voting systems and identified several
    research opportunities and limitations. The survey gave an in-depth insight into
    the utility of BC in voting systems and suggested future research agenda. Khan
    et al. [130] investigated the BC-based e-voting system to identify the settings
    for transaction malleability attacks within the system. The authors tried to highlight
    the conditions that cause an attack on the system to help develop appropriate
    protection measures. In particular, the successful execution of a transaction
    malleability attack was presented on a BC testbed hosting an e-voting application.
    To successfully operate transaction malleability attacks, the experiments identified
    the significance of block generation rate and network delay and highlighted the
    directions for future research. Dimitriou et al. [131] proposed a secure, scalable
    and practical BC-based voting system that achieved properties expected from large
    scale elections without requiring much from the voters. Receipt-freeness and coercion
    resistance were ensured by using a randomizer token for constructing the ballot
    that acts as a black box for the user. The append-only structure ensured universal
    verifiability, too, due to BC. Dhulavvagol et al. [132] developed a setup for
    a private BC network that shares the data among peer blocks within the network.
    The authors developed a democratic voting application that used BC technology
    to process and store data and execute transactions; smart contracts were deployed
    too. Also, the performance analysis of ethereum clients Parity and Geth were carried
    out by considering consistency, time, and scalability parameters. Electoral fraud
    has been a major issue for the voting mechanism for ages. E-voting and e-governance
    are now being used in many countries. Baudier et al. [133] highlighted the major
    contributions of BC in a trustworthy and secure voting system to provide peace
    globally. Unfortunately, the technology was tedious and complex and generated
    conflict between different actors in the election mechanism. Thus, the authors
    did a qualitative analysis by interviewing BC experts and election observers to
    identify the technology’s weaknesses and strengths. The results depicted the importance
    of human factors and trust in the voting system. Abuidris et al. [134] proposed
    (PSC-B chain), a hybrid consensus model that comprised of Proof of Credibility
    (PoC) and Proof of Stake (PoS). The proposed model addressed the scalability,
    efficiency, and latency problems of an e-voting system. Smart contracts were deployed
    to provide a trustworthy and secure computing environment to ensure the accuracy
    and safety of the ballot customs. The authors combined the PSC-B chain with the
    sharding mechanism to ensure the scalable performance of the e-voting system based
    on BC. Furthermore, discussion on the execution of attacks on the proposed hybrid
    BC and classical BC were done to analyze the security factor. Pawlak et al. [135]
    described the use of a multi-agent and intelligent agent system for ABVS, which
    was based on BC with e-voting process to integrate into a supervised internet
    non-remote voting system to make it end-to-end verifiable. The system was so developed
    to enhance safety and security at the polling stations and to generate a sense
    of non-dependability on client applications for voting. Suralkar et al. [136]
    developed a secure e-voting system by using BC technology with fingerprint authentication
    and ring signature. The system developed doesn’t require too many individuals
    at every level, thus making it more verifiable and secured. Zeadally et al. [137]
    evaluated quantitative perspective of BC’s suitability.Zeadally et al. [137] evaluated
    quantitative perspective of BC’s suitability. Authors explored and considered
    different applications that didn’t receive BC attention. This was done to find
    the potential of applications to reach the customers for their benefits and market
    production. With the development of BC, digital services are growing rapidly.
    BC has gained professional expertise in legal and technical aspects of digital
    services. Digital services work well, but there has always been a risk to security
    and privacy. Desai et al. [138] studied this problem of safety and security and
    resolved it by the usage of BC technology. The availability of the transparent
    and fair voting system increased only due to BC-based e-voting services. This
    helped people to transport, cast, and count votes for singing competitions on
    national television. Moura et al. [139] explored the possibility of solving confidence
    and transparency problems of a voting mechanism using BC. First, the authors overviewed
    BC and elaborated on societal issues and analysis. Then, they analyzed the consequences
    of adopting BC in the digital government repertoire. They also examined the contribution
    of technology to matters related to the e-voting mechanism, promoted election
    transparency and voter confidence, and helped strengthen democracy. Finally, the
    benefits and potential risks of the technology adoption were also elaborated.
    AboSamra et al. [140] proposed a secure and auditable cryptographic e-voting system
    to replace the conventional voting methods of the Middle East and North Africa
    (MENA) regions to build trust among people and voters towards the voting system.
    The proposed system is based on a paper ballot Prêt à Voter method e-voting scheme.
    The scheme used mixed servers to generate anonymous channels. Mixnets needed complex
    protocols for maintaining shared mix keys. Moreover, Mixnets were vulnerable to
    corruption and were complex to implement on a large scale. The authors proposed
    a scheme that eliminated the need to anonymize the votes using anonymous channels
    in Mixnet-based e-voting. The proposed scheme used paper ballots with strong cryptographic
    and proven security algorithm features that provided trust, ballot secrecy, security,
    and verifiability. Threat and security analysis was also conducted to prove the
    system’s resistance to known attacks. G. Healthcare System Trust establishment
    in the healthcare system is one of the important factors to be satisfied. The
    involvement of third parties often results in data breaches and hacking and influences
    the patient’s privacy. In such scenarios, BC prevents tampering with data and
    builds trust among hospitals, doctors, and patients. They help provide distributed
    storage systems, patient data safety, tamperproof data, and accuracy to help patients
    and doctors trust the healthcare management system. BC helps direct communication
    among patients and doctors, thus removing the involvement of any third party and
    hence helps in building trust among them. Table 10 shows the relative comparison
    of the state-of-the-art approaches for the healthcare system that helped to build
    a trusted and secure system. It contains the reputed journals and conferences
    from the last five years (2017-till date). The summary below for each paper shows
    the researcher’s contribution toward building trust in the healthcare system using
    BC. Patient data management and storage, clinical trials, privacy, etc., are the
    significant factors that contribute to a better healthcare system and are protected
    using BC. The tamper-resistant records and shared ledger helps the hospitals to
    store data safely and preserve anonymity, immutability, and consensus mechanisms
    that allow people to trust BC in healthcare. The authors proposed a new architecture
    for deploying trusted and safe healthcare and reviewed articles to gain in-depth
    knowledge of BC in healthcare to date. TABLE 10 Relative Comparison of State-of-the-Art
    Approaches for Healthcare System Azbeg et al. [142] proposed BlockMedCare, a secure
    healthcare system integrated with BC and IoT. The system helped monitor remote
    patients and their chronic diseases regularly. The authors ensured three important
    factors: scalability, security, and system processing time. The security was ensured
    using the re-encryption proxy and BC, which helped store hash data. IPFS was used
    to store data in the off-chain database for BC scalability. The data storage process
    gained speed using Ethereum BC-based PoA. The authors applied the system to diabetes
    management and showed improved healthcare system results. Yaqoob et al. [143]
    showed the usage of BC for healthcare data management. The authors discussed various
    features of BC, such as immutability, decentralization, data provenance, trust,
    transparency, distributed ledger and consensus, and programmability, along with
    the significant benefits in the healthcare department. They also discussed BC’s
    benefits in the healthcare field, such as accuracy, security, interoperability,
    sharing, handling cost, and global healthcare data audit. The major opportunities
    offered in the healthcare sector like improved drug traceability, maintaining
    consistent permissions, patient record management, precision medicine and clinical
    trials, optimized health insurance coverage, protecting telehealth systems and
    medical billing systems using BC helped build trust among patients, doctors and
    hospitals were also discussed. It also discussed several case studies such as
    the Estonian e-health system, BC for healthcare and pharma data in UAE, permissioned
    BC for medical device tracking in Swiss hospitals, and patiently DApp solution
    in healthcare systems. The paper also elaborated on open research challenges like
    scalability, interoperability, navigation regulation uncertainty, integration
    of BC with existing healthcare systems, irreversibility and quantum computing,
    tokenization, ensuring the accuracy of healthcare data, culture adoption, and
    BC developers. It also outlined several future recommendations like plugging BC
    technology into legacy healthcare systems, combining BC and artificial intelligence,
    developing secure smart contracts, IoT-based healthcare systems, and establishing
    BC policies, latency, and throughput bottlenecks. Shynu et al. [144] proposed
    proficient secure medical care services based on BC for prediction of disease
    using fog computing. For this research, cardio and diabetic diseases were considered.
    Fog nodes collected patient data and then saved it on a BC [161]. To collect the
    health records of the patients, the clustering algorithm based on the rule was
    used. Using Feature Selection based Adaptive Neuro-Fuzzy Inference System (FS-ANFIS),
    cardio disease and diabetics of the patients were predicted. To assess the performance
    of the work, experimentation and analysis were done on the healthcare data. Normalized
    Mutual Information (NMI) metrics and Purity helped calculate the results. For
    predicting the experiment’s performance, accuracy was calculated for the work
    that efficiently predicted the disease. Iqbal et al. [29] used machine learning
    techniques and smart contract and proposed a Reliable and Intelligent Veterinary
    Information Management System (RIMS) based on BC. Using Hyperledger Fabric, a
    reliable and secure BC-based veterinary clinic system was framed. Secondly, using
    permissioned - BC technology, predictive analytics modules and smart contract
    enabled data were developed. To build a prediction model and to uncover the data
    patterns of the veterinary clinic patient’s appointments data, the paper used
    machine learning algorithms [162]. The prediction helped the veterinary management
    with future business decisions for better services to their patients. The important
    tool Hyperledger Caliper was used for working. The overall result of the model
    was determined by certain machine learning performance measures such as Mean Absolute
    Error (MAE), R-squared (R2) score, and root-mean-square error (RMSE). Finally,
    the experimental observations showed the robustness and effectiveness of the designed
    RIVIMS. Ray et al. [145] described BC, followed by the discussion on developed
    consensus algorithms used in BC for e-health. The paper also reviewed different
    BC platforms for their appropriate use in IoT-based e-healthcare. Finally, the
    use cases were shown that showed the usage of IoT and BC features in healthcare
    ecosystems and services. Authors also proposed a data-flow architecture called
    IoBHealth, which combined BC with IoT, which can be used for storing, managing
    and accessing e-healthcare data in a more trusted, transparent, secure, and efficient
    manner. The data stored in shared ledger with tamperproof facility helps in building
    trust among users. A reliable and secure identity is relevant to providing user
    services. The traditional centralized identity systems had less security and did
    not support user control. Thus to provide a secure model for identity, Self-Sovereign
    Identity (SSI) was proposed. Shuaib et al. [146] reviewed SSI solution based on
    BC in healthcare, advantages and requirements. Moreover, the authors demonstrated
    a model use case for SSI applications in healthcare. Omar et al. [147] presented
    a survey and provided insights for clinical trials (CTs) to adopt BC technology.
    The authors classified and categorized the literature using taxonomy based on
    indispensable parameters. Furthermore, the authors provided detailed knowledge
    of developments toward the deployment of BC in CTs. Finally, the authors discussed
    several challenges that hindered the implementation of BC in CTs. Tanwar et al.
    [148] explored solutions for improving limitations in BC-based healthcare systems
    that included various tools and frameworks such as Docker Container, Hyperledger
    Fabric, Composer, Hyperledger Caliper and the Wireshark capture engine. Furthermore,
    to improve data accessibility between healthcare members, the paper proposed an
    Access Control Policy Algorithm using chaincode to implement EHRs sharing system
    based on hyperledger. Finally, various performance metrics such as throughput,
    latency, and Round Trip Time (RTT) were also optimized to obtain enhanced results.
    Bhavin et al. [149] applied Quantum Computing (QC) to the earlier developed encryption
    systems and studied various security architectures to secure EHRs. Authors proposed
    architecture based on BC for the healthcare system that allowed users of defined
    roles to access the database’s data easily. Furthermore, during the block creation,
    the Quantum blind signature was used to protect from quantum attacks of the traditional
    encryption system using Hyperledger Fabric BC. Finally, results showed the efficacy
    of resource consumption, transaction throughput and network traffic of the proposed
    scheme compared to the state-of-the-art schemes. Soltanisehat et al. [150] conducted
    a systematic review of 64 articles based on BC healthcare systems. The articles
    reviewed were published between the years 2016 and 2020. The authors tried to
    find the different BC applications and challenges faced in the healthcare scheme.
    The temporal, technical, and spatial aspects of developed BC applications were
    also found for different healthcare systems. Also, various future research directions
    in implementing and designing healthcare BC systems were found. Finally, future
    research directions, such as integrating the BC in cloud-computing solutions,
    artificial intelligence-based solutions, and parallel BC architecture, were also
    discussed. Saha et al. [151] attempted to address the need for security for IoT-enabled
    healthcare applications. The authors designed an access control mechanism to share
    confidential data using private BC technology within a group of trusted hospitals.
    The proposed mechanism used the elliptic-curve cryptography (ECC)-based signature.
    The system’s security depended on solving the “collision-resistant one-way hash
    function” and Elliptic Curve Discrete Logarithm Problem (ECDLP). The proposed
    scheme protects from different known attacks and preserves “untraceability” and
    “user anonymity” properties, thus providing a trustworthy system. Finally, the
    proposed scheme for IoT-based healthcare applications showed better safety and
    security and required low computational overheads. The decentralized nature of
    BC was useful to maintain integrity. But somehow, this feature lacks in maintaining
    the security of patient-centric systems. Hence, Alomar et al. [152] presented
    a patient-centric healthcare system to attain security and privacy using BC technology
    as storage. Various cryptographic functions were used to ensure pseudonymity and
    encrypt patient data. The authors analyzed the cost-effectiveness and data processing
    procedures of the smart contracts used in the system. Zhang et al. [153] highlighted
    a few main consensus protocols belonging to two different categories of the absolute-finality
    and the probabilistic-finality consensus protocols. The paper analyzed the strengths,
    weaknesses, and applicability of consensus mechanisms through comparison and analysis.
    Finally, the authors concluded and suggested that a good protocol should not only
    be fault-tolerant but should also be used appropriately for a particular application.
    Agbo et al. [154] compared the popular general BC frameworks for healthcare systems
    that helped health informatics practitioners and researchers to select the viable
    platform for healthcare applications. The authors highlighted that the Hyperledger
    Fabric BC framework had complete features for healthcare applications. Also, they
    suggested testing the framework in terms of latency, scalability, and throughput.
    Bhuiyan et al. [155] reviewed papers and proposed a solution to manage to share
    of cross-institutional as well as to maintain the security and privacy of individual
    health data. The solution was aimed to increase clinical effectiveness and included
    various stakeholders such as clinics and hospitals, providers, insurance companies,
    and patients. The system proposed allowed the data owner to be secure and brought
    trust among different participants. To increase the effectiveness and accuracy
    of diagnosis and treatment, Wang et al. [156] proposed a framework for PHS. This
    system was based on the artificial systems + computational experiments + parallel
    execution (ACP) approach. The artificial healthcare system was used to model patients’
    diagnoses, conditions, and treatment processes. The computational experiments
    implemented parallel execution and evaluated various therapeutic regimens for
    real-time optimization and decision-making support in healthcare processes. In
    addition, the authors combined the PHS with BC technology to link hospitals, patients,
    health bureaus, and healthcare communities for healthcare medical records review,
    data sharing, and care auditability. Finally, a prototype parallel gout diagnosis
    and treatment system was built to demonstrate and verify the efficiency of the
    PHS framework. Sravan et al. [157] proposed a framework that provided a fraud-free
    solution to validate insurance claims. The usage of smart contracts helped in
    transparent transaction system interaction with BC. The authors designed a framework
    for processing health insurance-related transactions on ethereum using the technology
    of BC. They used the interoperability concept across different applications using
    IPFS. For future research, the authors suggested expanding and implementing the
    model on R3 Corda. Koshechkin et al. [158] highlighted the importance of closed
    BC technology in the electronic form to improve the quality of public services
    quality. The example described of an electronic register of medicines did not
    require significant costing and was implemented soon. The authors suggested the
    importance of developing specific application solutions and their usage in the
    regulatory and production process. Authors seemed to get significant results in
    data processing by registration and licensing (in CTs), maintenance of specialized
    registers, quality control of treatment, accounting for medical care provided,
    drug turnover, arrangement of mutual payments, remote monitoring of health status,
    support for decision making, distance consultations, etc. Liang et al. [159] proposed
    a BC-based user-centric health data sharing solution using a channel formation
    scheme to protect the privacy of identity management by utilizing the membership
    service. The health data was collected from manual inputs and personal wearable
    devices. The data was synchronized to the cloud for sharing with health insurance
    companies and healthcare providers. For all this work, the authors deployed a
    mobile application and preserved health data integrity. Moreover, a tree-based
    data processing and batching method was adopted and uploaded by the mobile platform
    to handle large and complex data. For a society to make progress, it is important
    to have access to universal education and healthcare systems. Raju et al. [160]
    presented a data management approach called data bank that helped to track an
    individual’s education and health in a personal specified data account. Right
    to data privacy and right to data portability was placed equally important by
    the bank design. Authors also believed in developing a proof-of-principle prototype
    to study the various challenges in real-world implementation to find a link between
    healthcare and education and the role of smart contracts. H. Internet of Things
    IOT always allows the transfer and exchange of data over the internet for communication.
    Hence it became extremely important to have a safe and secure IoT. Thus BC technology
    is used to protect the data over the internet, thus building trust among users.
    It helps in executing safe machine-to-machine transactions. It helps in creating
    a tamper-resistant record for the shared ledger. BC helps direct communication
    among users, thus removing the involvement of any third party and hence helps
    build trust among them. Table 11 shows the relative comparison of state-of-the-art
    approaches for IoT systems that helped to create a trusted and secure method.
    It contains the reputed journals and conferences from the last five years (2017-till
    date). The summary below for each paper shows the researcher’s contribution toward
    building trust in IoT systems using BC. Transactions over the internet, tamper-resistant
    records, and shared ledger used to store data help people to trust BC in IoT.
    The authors created new prototypes containing new layers for data protection,
    discussed e-commerce, and reviewed articles to get an in-depth knowledge of BC
    affecting IoT to date. Thus, this made sense of trust for the system to be used
    for future purposes. TABLE 11 Relative Comparison of State-of-the-Art Approaches
    for IoT System Pal et al. [163] reviewed the critical needs and recent trends
    for IoT access control solutions based on BC. The work identified many important
    aspects of BC: secure storage, decentralized control, and sharing information
    for IoT access control in a trustless manner, along with limitations, benefits,
    and some future research scopes. Ali et al. [164] presented the importance of
    BC-based IoT systems. Firstly authors highlighted the privacy issues of the systems
    and then presented the techniques for privacy prevention. Secondly, federated
    learning (FL) application was introduced in IoT systems, devised taxonomy, and
    then highlighted the privacy threats in FL. Finally, IoT-based use cases were
    presented and introduced the traceability functions based on BC to improve privacy.
    Also, various open research gaps were addressed for future related work. Weerasinghe
    et al. [165] showed different modular functions based on BC, which were utilized
    for deploying Local L5GOs. These included bidding techniques, service rating systems,
    and selection functions used to deploy different features of L5GOs. The exploitation
    of BC technology ensured secure transfer payments, trust among users, availability,
    non-dependency on trusted third parties, and many such advantages. Using codes
    and simulations and then the analysis helped in their proper implementation. 5G
    is the most viable and secure technology, but L5GOs were the most powerful among
    5G technology. Authors in the research elaborated that BC was the most secure
    technology that helped consider future media transmission requests. As L5GO was
    a secure and trusted technology, BC was used using its key features to fulfill
    the requirements and needs. Authors expanded the L5GOs requirements and various
    opportunities of BC for the L5GO environment. Challenges along with their solutions
    were also outlined and suggested. The research proposed BC as a Service (BaaS)
    architecture simulated on MATLAB tool and Rinkeby Testnet. With the simulations,
    it was clear that the model was practical, with improved Quality of Service (QoS)
    contrasted to the real-world framework. Using the web3.js library, a DApp was
    created, which helped the system measure its functional performance. Upon seeing
    the results of various performance measures of cost-effectiveness and latency
    for the suggested system, the research showed that the model was cost-effective
    and yielded a lower latency. Mohammed et al. [166] addressed the issues faced
    by BC-based eCommerce in terms of consumers’ satisfaction, supply chain management,
    payments, retailers’ satisfaction, data security, transparent marketplace, new
    BC business model, efficient management systems, and other related platforms.
    Authors elaborated 11 submissions accepted and presented guidelines and ideas
    to provide a valuable resource for eCommerce specialists and educators and stimulate
    further research. Wang et al. [167] proposed a novel ATLB that helped industrial
    applications in privacy preservation. For a specific region and to train the user
    authentication model, ATLB employed a deep deterministic policy gradient algorithm.
    It was transferred either locally for foreign user authentication or cross-regionally
    for other regions’ user authentication to reduce model training time. Experimental
    results showed low latency, high throughput, and accurate authentications for
    Industrial Internet of Things (IIoT) applications. Alfa et al. [168] did an SLR
    of 85 articles and showed the importance of security and privacy solutions for
    IoT. Authors investigated security concerns of IoT concerning pertinent challenges,
    current trends, applications, security methodologies and research gaps for future
    directions. Scalable and high-performance cryptographic schemes were suggested
    to deal with BC-based IoT systems with privacy and data security. Thus, the study
    provided the basis for evolving decentralized and secure applications in several
    domains. Hassan et al. [169] discussed various privacy issues and five strategies
    of privacy preservation in IoT systems based on BC. These preservation strategies
    include private contract, anonymization, encryption, and differential and mixing
    privacy. Finally, the authors discussed future directions and challenges faced
    in BC based privacy preservation of IoT systems and served as a base to develop
    privacy preservation strategies in the near future. Dorri et al. [170] proposed
    a LSB that provided end-to-end security and was optimized for IoT requirements.
    The decentralized BC was achieved through an overlay network of high-resource
    devices. The overlay had distinct clusters and a cluster head that managed the
    public BC to reduce overhead. The authors proposed a Distributed Time-based Consensus
    (DTC) algorithm that reduced processing delay and overhead. LSB incorporated Distributed
    Throughput Management (DTM) algorithm that ensured BC throughput does not deviate
    significantly in the network from the cumulative transaction load. The approach
    proposed was resilient from several security attacks, as demonstrated by qualitative
    arguments. Also, the simulations showed that delay and packet overhead were decreased
    and scalability was increased compared to relevant baselines. Dedeoglu et al.
    [171] proposed a layered architecture for BC-based IoT applications to improve
    trust between endpoints. The architecture evaluated trustworthiness at the data
    layer for sensor observations and at the BC layer adapted block verification through
    the proposed gateway reputation and data trust modules. Finally, the performance
    evaluation of the data trust module was presented using the gateway reputation
    module and simulated indoor target localization by qualitative security analysis
    and end-to-end BC implementation for the architecture. In IoT, different entities
    exchange and process data without any human intervention. Therefore, to provide
    authenticity and avoid being the target of malicious users, the entities needed
    to be recognized. Hence, Hammi et al. [172] proposed bubbles of trust, which was
    an original decentralized system that ensured robust authentication and identification
    of devices. Furthermore, it protected data availability, integrity and thus helped
    in building trust. The proposed approach created secure virtual zones (bubbles),
    which made entities trust and identify each other. The authors also implemented
    the mechanism using Ethereum BC and C++ language. Qian et al. [173] introduced
    three layers of IoT for limiting security risks generated by the technology. These
    layers were the perception layer, network layer and application layer, and security
    problems corresponding to three layers were elaborated. Moreover, a BC-based high-level
    security management scheme for different IoT devices was presented in a full life
    cycle. The deployment of IoT required end-to-end security less severe. Various
    IoT applications included video surveillance, Smart Grid, Intelligent Transportation
    Systems, e-health, insurance, banking, logistics, and contract law. But all these
    applications needed the support of security in the IoT. Hence, several security
    approaches and techniques were proposed. The major role for security basis was
    deployed using BC mechanisms (BCMs) in IoT applications. Minoli et al. [174] highlighted
    about BCMs and their only part in IoT Security (IoTSec) solution and also presented
    some important IoT environments where they had their major role to play. For industry
    and researchers, IoT appeared to have extraordinary benefits with BC features.
    However, the participation of IoT devices in shared public transactions enabled
    various limitations. The problems associated with IoT devices were related to
    storage capabilities and low computational power. Buccafurri et al. [175] proposed
    a way to simulate a public ledger that enhanced the suitability of IoT applications.
    To ensure transaction security, the protocol leveraged twitter and worked by creating
    a meshed chain of tweets. Shafagh et al. [176] presented a design for IoT based
    on BC that brought data management and distributed access control. The design
    suggested empowering the users with the capability of data ownership and secure
    data sharing. Authors utilized BC as distributed access control and auditable
    layer that enabled a resilient and secure access control management to the storage
    layer. Using a decentralized storage locality-aware system, the authors facilitated
    the storage of IoT time-series data managed with BC technology at the network’s
    edge. The system proposed was agnostic of the physical storage supports and nodes
    and cloud storage nodes. Initially, LoRaWAN was mainly operated by private organizations
    or companies that brought trust issues between network operations and application
    customers. Lin et al. [177] proposed a solution and built a trusted,tamper-proof,
    open and decentralized BC-based LoRaWAN. The architecture proposed helped any
    server to join the system so as to expand and increase data processing capacity
    of the system as much as it can.The authors recommended that their work be the
    first to integrate BC technology and LoRaWAN IoT technology. I. Intellectual Property
    Rights Management Establishing trust in the IPR system is one of the users’ major
    problems. The involvement of intermediaries and third party often results in the
    loss of original data. In such scenarios, BC provides rights to the owner of the
    content or property and stores in BC using hashing techniques. This helps to prevent
    tampering with data and hence build trust among users. Digital copyright data
    is also stored in blockchain. Table 12 shows the relative comparison of the state-of-the-art
    approaches for the IPR management system that helped to build a trusted and secure
    system. It contains the reputed journals and conferences from the last five years
    (2017-till date). The summary below for each paper shows the author’s contribution
    toward building trust in the IPR management system. Various intellectual properties
    such as copyright trademarks and patents need protection for further usage and
    development of society. Thus BC helps to protect the original content of the writers,
    images, etc., which helps to build trust among participants. The authors created
    new prototypes for IPR management by using hashing algorithms to increase security
    against attacks. Thus, this made the system safe and tamperproof to be used for
    future purposes. TABLE 12 Relative Comparison of State-of-the-Art Approaches for
    IPR Management System Denter et al. [178] conducted a SLR in certain steps. Authors
    selected 52 articles as relevant ones out of 714 articles and classified them
    accordingly to 7D Patent Management Maturity Model. The study contributed to management
    and scholarship and showed BT mitigated the behavioral and environmental uncertainty.
    Earlier, the most important achievement was to protect the original documents
    such as patents and copyrights from hackers and thieves worldwide. Zhu et al.
    [20] introduced a BC architecture that protected the originality effectively and
    enhanced the trust and information trackability. The design used four important
    layers: data, logic, application, and contract. The proposed architecture used
    BC technology’s core functions, including consensus mechanisms, encryption algorithms,
    distributed data storage, and P2P transmissions. BC’s traceability mechanism helped
    secure records, trace originality transactions and validate the documents. The
    experiment used an incentive rewarding mechanism to create and protect the content’s
    originality that helped build trust, traceability, and trackability. Moreover,
    the comparative analysis and performance analysis showed that the method proposed
    was more advantageous than other methods. With the advancement of technology in
    multimedia and big data, the problems regarding the information, such as data
    tampering and information leakage, were becoming the major problems. The major
    problem regarding image security was one of the most typical multimedia problems
    around the world. Li et al. [179] proposed a BC-watermarking scheme that combined
    BC technology, compressed sensing, multimedia watermarking, and IPFS. It helped
    protect the integrity, privacy, and compressed sensed images availability. The
    scheme helped secure storage of IPFS, confidentiality protection of compressed
    sensing, and provided tamperproof image protection in big data for data protection
    and privacy. The compressive sensing was used to protect the images’ actual content,
    and the watermarking process was done in the encrypted domain. The tampered or
    the changed areas on the compressive images were detected by the watermark, too.
    Jing et al. [180] proposed a code copyright BC-based management system. Firstly,
    an originality verification model based on abstract syntax tree code was constructed.
    The similarity with the original codes of an uploaded code was used to determine
    the originality. Secondly, the original code copyright information was stored
    using the designed Peer-to-Peer BC network. Using the code originality verification
    model, the originality of the code was verified by the nodes in the BC network.
    The code copyright management structure was built through legitimacy validation,
    blocks’ construction, and blocks’ linking. The whole process guaranteed traceability
    and tamperproof copyright information. The experiments show the processing time
    and accuracy of the code originality verification model were shown by the experiments.
    The experiment showed code fingerprint’s best storage type of code copyright information;
    a 256bits hash value converted from code eigenvalues. It performed better for
    both response storage and speed efficiency. Moreover, due to the irreversibility
    and uniqueness of the result from the Secure Hash Algorithm 256-bit (SHA256) algorithm,
    the code fingerprint storage yielded a better level of storage security. Soni
    et al. [181] addressed the biomedical and healthcare industry with BC impact for
    privacy and security purposes. Based on BC, the authors elaborated on an exhaustive
    literature review in the biomedical sector. The results showed that the research
    on biomedical BC applications is an emerging field. The publications published
    so far confirmed that the research work for the mentioned fields started in 2016
    and doubled in 2018 in the first eight months. Integrity, integration, and monitoring
    of associated patient data and health records for the first three years were highly
    relevant. Hence, the authors believed that the study would serve as a framework
    for demonstration, future research, and in the biomedical field evaluated using
    BC and will guide for systemic analysis on daily purpose for research associated
    progress. Garriga et al. [182] presented a framework to help software developers,
    architects and decision-makers to make the right decision about the adoption of
    BC. By gaining knowledge from existing academic-industrial products, literature,
    experts’ feedback and technical forums/blogs, the framework highlighted the relation
    between architectural features and technological decisions. By dissecting the
    platforms used behind bitcoin and other top 10 cryptocurrencies, authors showed
    the framework applicability, a focus group aided by industry practitioners and
    researchers. Four real-world BC case studies were analyzed from academia and industry
    by leveraging the framework with the method of architectural tradeoff analysis.
    Results showed ultimate cutting costs, deeper understanding of the architectural
    tradeoffs, reduction in time-to-market, allowed more objectively assess of technologies
    and selection the best to fit developers’ needs, and accelerated return on investment.
    Digital Twins were the assets of complex digital representations used by different
    organizations in the Industry 4.0 value chain. With time Digital Twins became
    widespread and as a result, the need to develop secure data sharing models arose.
    Decentralized Applications ensured data integrity, availability, and confidentiality
    but avoided a single trust point. Hence, to minimize the issue of decentralized
    sharing of Digital Twin data, Putz et al. [183] proposed a decentralized and trustworthy
    owner-centric sharing model. They developed the prototype using encryption to
    provide data confidentiality to ensure users’ trust. The prototypical implementation,
    EtherTwin, showed how to overcome implementation challenges of decentralized data
    sharing, enabling the management of Digital Twin components and their information.
    The prototype was studied for validation based on semi-structured expert interviews
    and industry use cases. Li et al. [184] analyzed BC privacy protection mechanism
    of the application layer, transaction layer and network layer that included encryption
    technology in transaction layer, mixed currency technology and access restriction
    technology and malicious node detection in network layer simultaneously. BC security
    system was built using multimedia data security and distributed communicable network
    technologies. The authors designed an efficient system for information protection
    and accurately analyzed the data. The results showed a better data security guarantee
    in the proposed method. Esmaeilian et al. [185] discussed various opportunities
    in protecting Intellectual Property using BC technology in the manufacturing and
    design areas. The paper suggested a framework for an advanced digital platform
    and did a survey study to find out why to develop the platforms for product design
    and to protect intellectual property. The study discussed three main steps of
    designing purposes: (1) designing specialized utility tokens, (2) defining terms
    and the smart contracts included in the code, and (3) determining the incentives
    for every stakeholder using the platform. Moreover, using a questionnaire, the
    respondents gave their suggestions about the more affected industry. They explained
    the role of BC-based intellectual property systems on the development and growth
    of innovation. Designing an effective, efficient and secure distributed ledger,
    like Visa, was very challenging. One needed both the security and the speed to
    work, but it became difficult to implement both properties simultaneously. So
    to increase the speed and number of transactions occurring in one second, users
    either break or partition the BC or adjust security. Makkes et al. [186] presented
    a hierarchical distributed system of ledger called Apex that increased the performance
    of the system by 1) grouping certain nodes into parallel distributed ledgers 2)
    limiting the transaction flow system and ensuring security 3) amalgamating blocks
    of every partition into a separate non-central ledger. System Apex was specially
    designed for use-cases related to intellectual property rights of the music industry
    that required transparent and public accounting. An experimental prototype evaluation
    showed that Apex’s speedup scaled linearly in terms of several transactions per
    second using the tree constructs, thereby declining computing verification cost
    and latency per node. Halloush et al. [187] proposed a hybrid model that combined
    private BC and consortium BC properties that helped to preserve intellectual property
    practice and law and had the required attribute-based access control mechanism.
    Using the BC concept, the proposed hybrid model helped solve problems detected,
    such as authenticity and provenance in Intellectual Property management. The authors
    also discussed the model in detail and analyzed its benefits and correctness.
    Bhowmik et al. [188] proposed a framework for JPEG-BC and presented the proof
    of concept and summarized the infrastructural development for trusted media transaction.
    The new tamperproof model aided emerging JPEG security and privacy standards.
    The BC framework helped record the media transactions with important information
    related to content signature, intellectual property rights, and access control
    rules. The content signatures were used to verify the image authenticity and integrity
    generated by low-resolution or compressed sensed samples and low bit-rate compression.
    The authors proposed that each BC record was connected to a unique hash enclosed
    in the metadata, contained in a JPEG box-type structure hence building trust among
    users. They used the case of the Galleries, Libraries, Archives, and Museums (GLAM)
    sector in their work. The authors maintained the forward and backward compatibility
    with JPEG and showed that the BC transaction hash is easily mixed within the family
    standardized by the JPEG committee. 3D printing technology was used as one of
    the most important innovations worldwide. It became necessary to differentiate
    between the original and the copied printed components. Based on the complexities
    and the security of the product, the license became the utmost important criteria
    in digital media and software. Engelmann et al. [189] used an important technology
    of digital rights management for the protection of intellectual property and the
    transition to Additive Manufacturing methods in its commercial usage implementation.
    Moreover, risks were identified, and the solutions were presented while developing
    an 8-partner project named Secure Additive Manufacturing Platform (SAMPL). Gürkaynak
    et al. [190] suggested possible opportunities related to the future of IP law
    that BC offered and discussed the impact on the management, registration, and
    enforcement of intellectual property rights. Authors, too, proceeded with the
    solutions based on BC to detect counterfeit products to reinforce customs procedures,
    foster the operation of IP offices and enhance the efficiency of IP rights management.
    The authors also provided suggestions for BC technology advancement. They provided
    the way to make technology reach more people with its successful integration into
    various transaction/registration channels and services. Savelyev et al. [191]
    focused on legal-related aspects of copyright in the application of BC technology.
    The challenges in the digital environment for the distribution of copyrighted
    works, their solution and associated issues that needed to be addressed were outlined.
    Ishmaev et al. [192] argued about the practical implementation of BC technology
    that could be considered a property similar to legal institutions. Invoking Hegel’s
    system of property rights and Penner’s theory of property and using the bitcoin
    example made it possible to depict that BC efficiently implemented all-sufficient
    and necessary criteria for a property without relying on legal means. BCs helped
    enforce exclusion rights and provided universal access to discoverability and
    knowledge about property rights and system functionality by eliminating third-party
    authority. The work highlighted that BC models can replace traditional property
    relations in society and can be used to be implemented in new domains. Microfilms
    were popular due to their low cost of production. However, the IP rights of microfilms
    were violated as they could easily be copied and transmitted through mobile devices.Tsai
    et al. [193] proposed for microfilms, a BC-based IP protection model. Information
    registered was tamperproof and provided IP protection thus build trust among participants.
    The work done was based on BC for microfilms in china. J. Supplychain Trust in
    the SC management system became an important issue to be resolved. The involvement
    of intermediaries and third parties in the SC, from raw material production to
    final product development, often results in data breaches. In such scenarios,
    BC is used to prevent tampering with data and build trust among users and the
    system. They help provide a shared ledger with complete transparency and visibility,
    tamperproof data, and timestamped transactions to help companies query anything
    at any time. Table 13 shows the relative comparison of the state-of-the-art approaches
    for supply chain systems that helped to build a trusted and secure system. It
    contains the reputed journals and conferences from the last five years (2017-till
    date). The summary below for each paper shows the author’s contribution towards
    building trust in supplychain management systems such as rice sc, medical equipment
    sc, etc. The authors had created a new architecture for sc to trace and track
    the products at any location at any point in time. The shared ledger use of hashing
    algorithms increased security against attack, and the anonymity helped different
    participants to trust the system. Thus, this made the system safe and tamperproof
    to be used for future purposes. TABLE 13 Relative Comparison of State-of-the-Art
    Approaches for Supplychain System Agrawal et al. [194] presented a BC based network
    that allowed manufacturers to monitor the drug effectively in SC with trust, improved
    transparency and security throughout the process. The study proposed forward and
    backward SC mathematical models to help minimize the time and cost to transfer
    the drug by the manufacturing company to the end-users. Specifically, a reliable
    transport model in the forward chain helped drug delivery from the manufacturer
    to the customer in less time developing trust among users. The backward SC model
    focussed on reducing the extra cost and time of the manufacturer to recall the
    defective drug. Moreover, a real-time implementation using Hyperledger Composer
    was done to depict the system’s transparency. In Kouhizadeh et al. [195] research,
    the innovative structures were used to judge BC appropriation hindrances. A far-reaching
    outline of barriers to adapting BC innovation to manage maintainable supply chains
    was given. The hindrances were investigated utilizing environmental, technology
    and organizational supply chain and external structure, followed by contributions
    from industry and academics experts, and analyzed using the DEMATEL tool. Outcomes
    showed that the technological barriers and supply chain were the basic obstructions
    for the two specialists. The authors further decided on the differences and similarities
    among scholastics and professionals in seeing the boundaries. The exploratory
    examination uncovered intriguing relative significance and interrelationships
    of important, practical and theoretical boundaries. The principal key result of
    this research was that the authors examined the hindrances using causality and
    accuracy. This helped them to manage both resources and time available to them.
    Besides, the examination fostered a few recommendations proposing significant
    links between technological and external concepts and ideas for BC selection.
    Thirdly, the work endeavored to systematically research and focus on the barriers
    to technology adoption in feasible supply chains. Significant attention has been
    gained by BC technology in the food industry; however, the steps to implement
    food supply chains (FSCs) using were still missing. Vu et al. [12] did a systematic
    literature review of 69 articles and discussed current BC issues of scalability,
    incentivization, privacy and regulations as future opportunities for research.
    The authors developed a three-stage conceptual framework for FSCs based on BC.
    The proposed framework established the suitability of BC for the wider supply
    network to benefit food chain managers. Identified implementation stages, influential
    factors, and case examples were expected to develop a roadmap to adopt BC in the
    food industry to guide practitioners. Liu et al. [46] conducted an industrial
    investigation and a comprehensive literature review to clear the current status,
    challenges and problems of the BMSCS. The authors proposed an integrated BMSCS
    and constructed new operation mode management for a maritime supply chain that
    was expected to be suitable for global economic development. Moreover, the main
    aim was to accelerate the application of BC, achieve better coordination among
    members, and gradually realize the intelligent operations of the maritime supply
    chain was mainly based on a comparison of the current research results and suggestions
    put forward. Collart et al. [196] reviewed applications of BC to help address
    major challenges faced by the US fresh produce industry across different directions.
    The challenges included food-related factors such as food loss and waste, food
    safety, food fraud, and the need for better traceability systems. The authors
    highlighted the challenges and limitations of various stakeholders and discussed
    the utility of BC technologies to enhance the resilience of the produce supply
    chain. Using Cross-Impact Matrix Multiplication Applied to Classification (MICMAC)
    and Total Interpretive Structural Modelling (TISM), Mathivathanan et al. [197]
    examined their interrelationships for the adoption of BC and identified the adoption
    barriers for the need to revolutionize supply chains. The TISM technique was used
    to identify the influential barriers and support the development of a structural
    model based on contextual relationships. Based on dependence and strength, MICMAC
    classified the barriers to BC adoption. The results indicated the most influential
    barriers, lack of knowledge for familiarity with BC and business awareness, impeded
    BC adoption for future supply chains. Ahmad et al. [21] proposed a decentralized
    BC-based answer for computerized forward supply chain network measures for the
    COVID-19 clinical gear and empowered data trade among every one of the stakeholders
    engaged with their waste administration in a way that was completely secure, straightforward,
    detectable, and reliable. They created four smart contracts and proposed five
    algorithms to execute all functionalities and trigger events and notices. They
    coordinated the ethereum BC with IPFS to safely get, store, and offer the information
    identified with the forward supply chain network of COVID-19 clinical equipment
    and the waste administration. They created algorithms to characterize association
    rules regarding COVID-19 waste dealing with and punishments to be forced on the
    partners in the event of an infringement. They suggested a framework plan alongside
    its full execution details to assess the performance utilizing an analysis of
    cost. The analysis done for the security purpose was to confirm the dependability
    of the smart contract to present the solution from an application point of view.
    They additionally thought about the proposed approach in contrast to realized
    weaknesses utilizing the SmartCheck programming. The suggested approach was nonexclusive
    and pertinent to different use case situations with negligible changes. Omar et
    al. [198] talked about the impact of the COVID-19 pandemic on medical services
    inventory network activities, especially in following and overseeing Personal
    Protective Equipment (PPE). To manage transactions and orders in a decentralized
    network, they introduced BC-based PPE solutions using Ethereum smart contracts
    to build trust. The focus was on the PPE supply chains and suggested that the
    proposed framework could also be adjusted to address detectability needs in other
    business areas. Utilizing Ethereum intelligent functions could be used to accomplish
    obvious mechanization and decrease data unevenness and different failures in the
    supply chain measures. Author’s coded in the Remix environment and made it freely
    accessible on Github. The assessment, cost, and security examination of the proposed
    framework have featured its practicality in a real-time environment, tending to
    detectability challenges efficiently. It also clarified the partners, consequently
    expanding their correspondence and trust. Receiving a BC-based answer for PPE
    supply chains was monetarily practical and gave a secure, trusted, and straightforward
    method of post among different partners. Dutta et al. [31] studied 178 articles
    and examined the research done in supply chain (SC) operations with BC technology.
    Major current state-of-the-art technologies, corresponding opportunities, and
    possible societal impacts were highlighted, along with major challenges and trends.
    Several industrial sectors such as manufacturing, healthcare, shipping, automotive,
    finance, aviation, e-commerce, technology, agriculture and food, energy, and education
    were examined to revamp BC technologies through business process management and
    visibility successfully. A future research agenda was also established for further
    studies that laid the foundation for the emerging research area. Durach et al.
    [199] discussed BC application areas (BAAs) in SC transactions with their relevance
    in businesses. The study combined a Delphi study, an extant literature review,
    and a survey of 151 equipment sector business managers and German machinery. The
    results extended the study of SC transactions with BCs’ business opportunities
    and extended Iansiti and Lakhani’s (Harvard Business Review 2017; 95: 118) BC
    framework. The most important BC usages in SC transactions were product quality
    certification and verified customer reviews. Interestingly, authors anticipated
    less adoption of BCs for document-signing processes. Delivery and logistics systems
    and token-curated registries were ranked among the topmost relevant. The study
    of BAAs advanced theory and affected business strategies of when, where, and why
    the businesses should participate in networks of BC. Wang et al. [200] showed
    the BC innovation impact on future supply chains and arrangements. The work distinguished
    the fundamental drivers of BC organizations inside supply chains. It exhibited
    a portion of the innovation’s most recent applications and a scope of organizational,
    technological, and operational challenges that probably influenced its further
    dissemination. The supply chain procedure was especially keen on the BC feature
    that helped control the method without using any centralized authority. This component
    was of extraordinary interest since it worked to resolve issues related to the
    inter-organizational trust. The research was quick to inspect the present status
    of BC usage inside supply chains. The authors tried to combine the generally incoherent
    studies distributed on BCs to clarify their relevance to the supplychains discipline.
    The research not just pinpoints regions where BC innovation may disturb existing
    supply chain arrangements but also features certain difficulties and obstructions
    to the technical deployment. Authors offered the experts and researchers significant
    bits of knowledge into distinguishing a utilization case that tended to a supply
    chain issue, operationalizing the ideal BC supply chain model. They focused on
    lawful and administration issues for long-term manageability. The discoveries
    alarmed administrators, especially the organizational members, of the need to
    support network connections among individuals and foster a common worth among
    all individuals. Schmidt et al. [201] utilized transaction cost theory to find
    BC influence on relations of supply chain. With the set of eight propositions,
    two primary findings were yielded. First, BC reduced governance and transaction
    costs for supply chain transactions. Specifically, it was found that BC reduced
    information and search costs. Second, a BC-based economy significantly pushed
    many transactions into governance and market-oriented structures. More ad-hoc
    partnerships and short-term dynamic relationships challenged already established
    findings of supply chain processes and structures. Also, the authors explored
    future research areas for how BC built a supply chain management system. Leng
    et al. [202] proposed a public BC based on the architecture of a double chain
    for agricultural supply chain system to solve the challenges faced in the Chinese
    public service platform. The study mainly focused on the storage mode and dual
    chain structure, consensus algorithm, matching, and resource rent-seeking mechanism.
    The results showed that the chain proposed helped in security and openness for
    transaction information privacy and adaptively completed matching of resources
    and rent-seeking, and enhanced the overall efficiency and credibility of the public
    service platforms for the system. Kim et al. [203] elaborated the need of ontologies
    to BC design. The work analyzed the traceable ontology and translated its few
    representations into smart contracts that helped enforce traceability constraints
    and executed provenance trace on the Ethereum BC platform. As a proof of concept,
    the source code on Ethereum BC was written and assessed. The data models and the
    excerpted assumptions of the TOVE Traceability Ontology were analyzed and were
    used on BC to develop the distributed ledger. Also, the authors translated TOVE
    Traceability Ontology axioms into smart contracts used in first-order logic that
    helped enforce traceability constraints and executed provenance trace on the Ethereum
    BC platform. Kshetri [204] examined the impact of BC on the various objectives
    of supply chain management, such as cost, flexibility, speed, quality, risk reduction,
    dependability, and sustainability. The authors presented evidence linking BC with
    supply chain activities to increase accountability and transparency. For diverse
    purposes and at various phases of development, the case studies of BC projects
    were discussed. The study evaluated the mechanisms adopted by which supply chain
    objectives were achieved using BC. To validate assets’ and individuals’ identities,
    the authors also emphasized incorporating IoT with BC and its deployment. Kumar
    et al. [205] presented a theoretical study on the BC technology and evaluated
    the benefits in the business practices. An example demonstrated the utility of
    BC technology on product safety in supply chain management. The example dealt
    with the rice supply chain. It showed the increase in the efficiency of the rice
    supply chain with a traceability system that helped record the events that happened
    and monitored the security and quality of rice. Hence the BC system helped to
    fight fraud, ensured integral traceability, and minimized the system errors. O’Leary
    et al. [206] investigated different BC architectures with alternative configurations
    to process and gather transactions for accounting, supply chain, auditing, etc.
    Apart from public versions and peer-to-peer BC, authors primarily focused on private
    configuration and cloud-based versions of BCs. The work investigated the advantages,
    use configurations, and limitations as firms bring market mechanisms based on
    BC into the organizations. In addition, some emerging issues were investigated
    based on the usage of BC in consortium settings. Finally, the research related
    a few proposed uses of BC in transaction processing with other different technologies
    of databases and data warehouses. Supply chains were treated as cyber-physical
    networks grounded on object tracking and identification. A valuable and novel
    trust approach was introduced by BC, while semantic technologies permitted the
    things described. Ruta et al. [207] introduced flexible object discovery using
    semantic-enhanced BC platform. It adopted semantic matchmaking and was based on
    validation by consensus of smart contracts between object annotations and queries
    expressed concerning ontology models. Also, the early experiments assessed the
    good behavior for the proposed framework efficiently. SECTION V. Tools/Frameworks
    Used to Build Up Decentralized Systems Different researchers have used different
    tools and frameworks to build the BC systems. For example, Guo et al. [48] used
    Ethereum and IPFS system to build a private and secure academics and education
    system. The IPFS system was used to store large files to reduce the burden of
    handling big files on local databases. Jmeter and BigchainDB were used to design
    and develop the platform for agriculture SC management system [83]. The JMeter
    tool helped test the system’s load and performance to ensure the QoS and bigchainDB
    provided a scalable blockchain database for work. Hyperledger fabric and composer
    were used by Ho et al. [90] to record spare parts traceability data using the
    managerial platform. The tools helped to design a business network framework and
    ensured transaction validation. Garg et al. [49] used SPSS for factor analysis
    and AMOS version 26 to measure the benefits of BC in the banking sector. Other
    tools such as MATLAB, Amazon EC2, and Ethereum were used by the authors in [27],
    [51], [134] to implement an electronic voting system. Ethereum provided a private
    and secure BC system, Matlab provided a numeric computing environment and performance
    evaluation, and amazon ec2 provided scalable deployment of applications. The healthcare
    system network used Wireshark, which was used to measure performance and round
    trip time of the BC network, and spyder IDE, which helped to evaluate statistical
    data [148]. Thus, this section discusses various tools used in detail in different
    applications. 1) Hyperledger Fabric Hyperledger Fabric helps in developing applications
    using a modular architecture [208]. It allows components, such as membership services
    and consensus, to be plug-and-play. It is an open-source project from the Linux
    Foundation. It has a permissioned architecture with an open smart contract model
    written in chaincode. It supports different languages such as Go, Java, and JavaScript.
    It ensures confidential transactions with channel technology and makes it easy
    to get started. It is used in banking, IoT, healthcare, finance, manufacturing,
    etc. Besides many advantages, it also has disadvantages. It has a complex architecture
    and has got minimum SDKs and APIs. It is not a Network fault-tolerant and lacks
    skilled programmers [209]. 2) Hyperledger Sawtooth Hyperledger Sawtooth is a platform
    that helps in building scalable distributed ledgers. It is used to deploy and
    run the ledgers [210]. It is a BC-as-a-service and an open-source platform that
    helps deploy customized smart contracts without any underlying design knowledge
    of the core system. It is sponsored by various organizations and firms like IBM,
    Linux Project, Intel, and SAP. It supports Proof of Elapsed Time (PoET) and Practical
    Byzantine Fault Tolerance (PBFT) consensus mechanisms. It is used in aircraft
    systems in [23] that are used to scale up the size of the BC network by allowing
    any number of nodes to join and work in the network. It is energy-efficient and
    supports parallel scheduling and multi-languages and tolerance to byzantine faults.
    3) Ethereum Ethereum [211] is an open-source, decentralized BC that uses smart
    contract functionality. Ether (ETH) is used as the native cryptocurrency of this
    platform. It is designed to work in public network [212]. It supports distributed
    ledger technology and is open source. The tool implements programs with the help
    of smart contracts that act as small codes. It helps to manage and track currency.
    It uses the PoW mechanism and creates chains of blocks for BC. Due to the continuous
    changes in the tool, it is unstable. Also, it faces hard forks and dependability
    issues. Apart from certain limitations, it ensures scalability, better performance,
    privacy in transactions, data coordination, and rapid deployment. 4) Interplanetary
    File System (IPFS) The IPFS [213] is a protocol that helps in sharing and storing
    data in a distributed file system. It uses content-addressing in a global namespace
    that is usually connected to every computing device to identify every file. Using
    gateways replaces protocols used for static webpage delivery, which are accessible
    with HTTP. It can be used for academics and education systems, healthcare, and
    e-voting systems. It helps the local network users communicate with each other
    even if a wide area network is blocked, helps the creators distribute their work,
    and provides higher bandwidth. But for some instances, IPFS is not user-friendly,
    consumes a lot of bandwidth, etc. 5) Ganache It is a personal BC for rapid Corda
    and Ethereum distributed application development. It is used in the entire development
    cycle and enables testing, developing, and deploying dApps in a safe environment.
    It has two flavors as User Interface and Command Line Interface. It is used to
    test solidity contracts by setting up a personal Ethereum BC. It has more features
    as compared to Remix [214]. 6) BC Testnet A testnet is an instance of a BC which
    is used for experimentation and testing without risk to the main chain and real
    funds. Testnet coins are distinct and seperate from the mainnet coins that don’t
    have value for themselves and are from faucets for free. While in use they can
    be reset at any time. It provides the advantage for analyzing blockchain data
    on a smaller scale compared to the public network. Also before the official release,
    it provides the early access to blockchain. The testnet can be used in car sharing
    systems etc [215]. 7) IROHA It is a business design of BC framework incorporated
    in infrastructure projects using DLT [216]. The distributed ledger feature allows
    data in BC to be shared publicly. Hyperledger Iroha is easily integrated and is
    mainly used in interbank settlement systems and payments. The three important
    roles of Iroha are Architecture, Functional/Logical Flow and Consensus Mechanism.
    It was launched in May 2019 and is permissioned and is hosted by the Linux Foundation.
    It is used to build national identities, allows access to financial services,
    and helps merchants buy goods. It also provides the facility of multiple signatures
    for transactions and plug in modular design for BC running. Due to it’s various
    advantages, it is used in supplychain management system that helped in flexible
    object discovery in semantic enhanced BC platform [207]. 8) Yahoo! Cloud Serving
    Benchmark (YCSB) It is a program suite and an open-source specification that helps
    in evaluating maintenance capabilities and retrieval of computer programs [217].
    It is an open source, easily install benchmark that manages big data. Also it
    helps to compare relative performance of NoSQL database management systems as
    required. 9) Transaction Processing Performance Council Benchmark C (TPC-C) It
    is an OnLine Transaction Processing (OLTP) benchmark. It came into existence in
    July of 1992 and is more complex than earlier developed OLTP benchmarks [218].
    It has complex database, multiple transaction types and overall execution structure.
    It is measured in transactions per minute and is not limited to any particular
    business part [219]. 10) GETH Go Ethereum is one of the original implementations
    of the Ethereum protocol. It is an open source and is written in Go [220]. It
    is a standalone client that can be installed on any operating system or as a library
    that can be used by embedding in Go, iOS or android project. Geth serves as a
    node and mines Ether to help users create software for Ethereum Virtual Machine
    (EVM). It helps to join ethereum network and transfers ether. It is used in e-voting
    and IPR management systems in [188] that helped to build personal BC network for
    communication and privacy. 11) Hyperledger Composer It is an open development
    toolset and framework that helps in easy making of BC applications. It is a set
    of open source tools that aims at improving operational efficiencies and helps
    in solving business problems. It is an example of BaaS. The Linux Foundation hosts
    it with corporate members in collaboration. It is now part of Hyperledger Fabric
    platform. It uses JavaScript language and uses built-in libraries to make the
    utilities more reusable and scalable. It is used in agriculture and supplychain
    management system. It supports scalability, sharing, reusability of components
    across organizations and helps to generate the required APIs and scripts required
    for business implementation [221]. 12) BigchainDB It allows enterprise and developers
    to deploy BC proof-of-concepts, platforms and applications with scalable BC database.
    It offers various characteristics of immutability, decentralization and native
    assets. It deploys in various use cases of IOT, IPR and SC management system.
    It is built on open-source, large pre-existing database codebase that has been
    used in enterprise for many years and is Byzantine Fault Tolerant (BFT) that offers
    low latency [222]. 13) Virtual Trusted Trade BC Network Cloud Platform It is a
    virtually trusted trade BC network cloud platform that is used in agriculture
    system [87] that helps to establish a self-organized, trusted, ecological and
    open BC smart agriculture application system. 14) Truffle It is a testing framework,
    development environment and asset pipeline for BC that uses Ethereum Virtual Machine
    (EVM) [223]. It is the most popular tool used for blockchain application with
    over 1.5 million downloads. It manages smart contract lifecycle, automated contract
    testing, network, interactive console, etc. SC management system [203] used truffle
    to generate interface to interact with deployed smart contracts in BC network.
    15) Hyperledger Caliper It is a BC framework that helps users measure the performance
    of a specific BC implementation using a set of predefined use cases to get the
    performance test results. In blockchain system application it used to deal with
    healthcare and IPR system for their management [224]. 16) Parity Ethereum An open-source
    software solution allows an individual to run a node on the public Ethereum network
    using ethereum protocol. It is an alternative to the Geth Ethereum client. The
    tool is flexible to execute and adds interesting features for enterprise solutions
    and consortium blockchains. It is written in Rust and is modular which helps it
    to connect with different types of blockchain networks based on Ethereum. It is
    used in IPR management system [225]. 17) Swarm 0.5.7 It is a communication system
    and decentralized storage for a sovereign digital society [226]. It is used in
    IPR management system in [183] for improving security of BC system. 18) Dematel
    It is a technique that helps in proper evaluation of problem thereby making it
    easy for researchers to do research. It helps to identify the cause-effect chain
    components in complex system [227]. It evalautes interdependent relationships
    in factors and finds the critical ones using visual structural model. It is used
    for SC management system in [195] to develop secure BC system. Table 14 shows
    the percentage of the papers using different simulation tools for their evaluation
    in the systematic literature review. It shows that most researchers have used
    Ethereum, about 30%, for their work on BC. Hyperledger Fabric, IPFS, and MATLAB
    are used by 12%, 11%, and 4%, respectively. Figure also shows other tools that
    researchers use. These tools help researchers in the backend process and the evaluation
    of the results. TABLE 14 Table Showing Percentage of the Papers Using Different
    Simulation Tools SECTION VI. Open Issues and Challenges The section highlights
    different open challenges in various application domains such as academics and
    education, agriculture, aircraft, banking, car/ride sharing, e-voting, healthcare,
    IoT, IPR, and SC systems. FIGURE 8 gives a detailed taxonomy of open issues in
    ten different application domains. FIGURE 8. Taxonomy of open issues in Blockchain
    applications. Show All A. Blockchain Open Issues and Challenges The future of
    BC is decided by its safety, smart contract, robustness, security tokens, database
    technology, and changing regulatory environment. However, to achieve the target,
    the implementation and design of the BC need to provide safety, reliability, and
    scalability that rely on the main technologies of consensus, shared ledger, immutability,
    provenance, and smart contract. This section outlines the implementation and challenges
    faced by the traditional systems and shows the possible solutions provided by
    BT. 1) Scalability The major concerns for scalability, especially in the traditional
    system, include the frequency of the blocks and their limited size with the total
    transactions that the network can handle. In today’s scenario, millions of transactions
    are executed and many transactions are executed in one second. BC technology helps
    scale up the network, thus removing the scalability issue from the network. 2)
    Privacy The main reason behind the privacy concern of the traditional system is
    that it is vulnerable to information leakage. The systems were easily hacked and
    attacked by intruders. Thus BC technology uses algorithms such as SHA256 for privacy
    and public and private keys to help secure the information system. The detail
    of the private key is not transparent to anyone present in the network and hence
    is secure against attack. 3) Centralization The major hurdle for the traditional
    system lies in its centralized mechanism. Such systems are complex and large for
    organizations. If the centralized system gets attacked or hacked, all the data
    gets lost. In addition, these systems require higher computing power and face
    network delay. The central authority usually has the privileges of the system.
    Thus, it can be replaced with the BC decentralized system, which helps store the
    data in all the system nodes, thus making the network secure against data loss
    and attacks. 4) Trust Establishing trust was the major problem the users faced
    in the traditional systems. Data breaches and attacks made it difficult for anyone
    to trust these systems. In such scenarios, the BC can be used to establish trust.
    It uses cryptographic techniques for building BC and helps in the immutable nature
    of the ledger. 5) Transparency Different companies have different regulations,
    policies, and tracking systems. This leads to a less visible and poor connection
    between the businesses and customers. The decentralized and distributed nature
    of the BC transactions helps to make them verifiable and public to every user
    in the network with transparency. B. Open Issues and Challenges in Academics and
    Education System Some of the open issues and challenges of academics and the education
    system are discussed below. 1) Lacks Incentive Strategies Since 2020 with the
    rise of COVID, various online education platforms have received much attention
    and importance in academics and the education system. The online platforms fulfill
    the need to protect and save a life along with education. However, emerging online
    education faces many challenges. One of the major issues is that the students
    become lazy and lack interest in digital content. As a result, the seriousness
    toward education started lacking in students. Hence to overcome the situation,
    BC provides an incentive strategy to reward the student for their achievements
    and helps support the academics and education system to help fulfill the desire
    of students, teachers and parents [48]. 2) Non-Transparency Schools and colleges
    have their own rules and management systems. The funds-related data is very important
    for the management to run their college. Also, the students’ details and results
    need transparency for the parents to have a precise analysis of their child. Hence
    to achieve this vision, BC provides transparency in academics, and the education
    system [71] with full parental involvement to track their child records and also
    helps the management to get a clear idea about funds and expenditure. 3) Student
    Identity Management The school administration and offices usually store the data
    related to every school student. But sometimes, due to a large amount of data
    and mismanagement, school lose their data resulting in a bad impact. Hence to
    overcome this situation, BC offers a safe and secure storage solution that helps
    the school store a vast amount of data with full security. This helps students
    gain their data, if lost, whenever needed for usage and reduces the burden of
    manual management of the records. C. Open Issues and Challenges in Agriculture
    System Some of the open issues and challenges of the agriculture system are discussed
    below. 1) Inefficiency The agriculture sector is falling behind in food safety,
    food traceability, changing consumer trends, and transaction costs. The increased
    usage of pesticides and fertilizers led to a major concern in food safety. Hence
    the demand for safe agricultural food and a need to track an efficient food supplychain
    came into consideration. BC helps in providing an efficient solution for food
    detail management from production to their supply and transaction management [81].
    The details are easily saved on the BC and cannot be tampered and thus helping
    to improve the efficiency of the agriculture system. The sensor tracking system
    based on BC is a viable possible solution. 2) Non-Scalable Food Supplychain Earlier,
    the data related to agriculture and their supplychains were stored in centralized
    databases. But its limitation for data complexities and management led to the
    need for decentralized and simple systems. With the advancement in technology,
    BC came into existence, and the data related to the food supplychain started storing
    in decentralized databases. This helps in easy computation and provides scalability,
    transparency, trust, and less energy consumption for data management. With the
    BC usage, more number of transaction processes in a short time, thus providing
    higher throughput for the agriculture food supplychains [79]. D. Open Issues and
    Challenges in Aircraft System Some of the open issues and challenges of the aircraft
    system are discussed below. 1) Throughput Asset management and record-keeping
    were the main issues in aircraft systems to handle. With the advancement in technology,
    BC helped drastically in asset management and record-keeping. In real-time, the
    information about a plane’s usage, makeup, and maintenance can easily be stored
    and updated using BT, which greatly impacts the aircraft system. Thus less time
    is required to handle backend data and thus results in high input of time and
    management in the aerial industry, resulting in higher throughput and an efficient
    system for the customers and the system. 2) Security and Privacy Security and
    privacy are the major concerns in aircraft systems. The security challenges include
    unauthorized access, the impact of attacks, cloud configuration monitoring, mobile
    carriers’ vulnerability, and modification of data by intruders. The BC helps record
    the transactions in blocks linked together and encrypted using cryptographic keys.
    The immutable ledger of the aircraft system thus makes it very difficult for intruders
    to delete or modify the transactions [93]. 3) Centralized Asset Management A centralized
    database has limited storage capacity and computing power. It is always a time-consuming
    task to manage assets on a centralized database. The centralized databases usually
    lead to an increase in the computational and cost requirements. In the distributed
    BC system, multiple nodes have duplicate data stored so that if data once corrupted
    can be retrieved back from another node. This makes the aircraft system more safe
    and reliable to use for asset management [90]. E. Open Issues and Challenges in
    Banking System Some of the open issues and challenges of the banking system are
    discussed below. 1) Consensus Mechanism The banking system provides financial
    services to all its customers around the world. The most important function of
    a bank is to provide transparency and maintain every detail of the transaction.
    BC provides all these facilities, which helps in proper storage and record management
    of the transaction details using a consensus mechanism. These mechanisms help
    add new transactions to the blocks and link the new block to the chain of blocks.
    They help in more secure with less time and energy consumption transaction banking
    system, allowing customers to rely on banks for their financial services. 2) Privacy
    Data privacy in today’s era is one of the key challenges in the banking domain.
    It encounters leaks of personal information, data breaches, unauthorized monitoring,
    breach of access control rights, data leaking, and stealing. With the distributed
    ledger system of BC, data is stored in an immutable system with a secure time-stamp,
    public consensus, and audit that helps makes the system robust and secure [105]
    to use. 3) Cost Inefficient In the banking system, various intermediaries and
    different agencies mostly include commission charges, fraud, and duplication of
    products. The BC eliminates the need for a third party and thus results in fewer
    costs and fees. The self-executing smart contracts help in data execution and
    store on the blockchains. Due to the decentralized and tamperproof nature of the
    system, each party involved can trust its validity. Because of its immutable nature
    and high level of automation, the banking companies that adopted the BT experienced
    huge cost savings [49]. F. Open Issues and Challenges in Car/Ride Sharing System
    Some of the open issues and challenges of the car/ride-sharing system are discussed
    below. 1) Road Congestion Taxicabs play significant roles in the transportation
    system with the ongoing demand for on-demand taxi services. However, during peak
    hours, this leads to higher traffic and road congestion. Moreover, this often
    results in longer waiting times for passengers, and the fear of losing customers
    increases. To establish a possible solution for riders, BC helps analyze and minimize
    road congestion. Using BC road traffic management, algorithms are developed that
    help to give the real-time position of drivers and allocate the rides to the customers
    based on the backend logic and processes. The P2P protocol helps the riders book
    cab for themselves and reach their destination on time. Thus this helps in proper
    traffic and road congestion management for further usage and to make the lives
    of the people easier [117]. 2) Lacks Trust Establishing trust in the car-sharing
    system is one of the major problems faced by the passengers. The involvement of
    third parties and intermediaries often results in data breaches and influences
    the customer’s privacy. In such scenarios, BC is used to prevent tampering with
    data and build trust [19] among riders by using the P2P protocol. They help provide
    rental cabs, personal cabs, bike rides, carpooling, and luxury cab services to
    ease customer life. This protocol helps passengers book their cabs via an online
    platform and directly make payments. This removes the involvement of any third
    party, thus securing the customer’s information and hence helps build trust among
    them. 3) Limited Transmission Range The car-sharing systems usually face the problem
    of limited transmission range. With the increase in the demand for rides and cars
    for riding, the transmission range too was needed to extend. But the problem was
    that accuracy was not promised for a wide range. Thus to solve this issue, BC
    provided the solution by proposing frameworks and models that help get the details
    of drivers and get the location details using sensors. The sensors help in getting
    the current and the next point for location. All this helps expand the range of
    driving and helps customers ride for longer distances. G. Open Issues and Challenges
    in E-Voting System Some of the open issues and challenges of the e-Voting system
    are discussed below. 1) Inaccuracy An E-voting system is a system that helps in
    casting and counting votes by electronic means. It is cost-effective and applies
    effectively in real-time, and requires high safety. However, concerns about security
    and privacy for e-voting have grown. Accurate and secure e-voting results are
    very urgent for the country’s benefit. Thus to help the system and avoid forgery
    of votes, BC uses DLT. Various models are also used to provide authentication
    of the votes. The models help in easy verification of the person’s credentials
    and help in clean voting steps. Thus, the e-voting BC-based system can be used
    for a variety of network applications directly to provide accuracy [27]. 2) Transaction
    Malleability Attack Prevention from attacks and double-spending problems is the
    major security concern in every organization. The security challenges include
    the impact of attacks such as changing bitcoin transaction identity numbers before
    confirmation, unauthorized access, and data breaches by intruders. The BT records
    the transactions and uses cryptographic keys to hash and secure data in blocks,
    thus making it difficult for attackers to attack or implement double-spending
    transactions. H. Open Issues and Challenges in Healthcare System Some of the open
    issues and challenges of the healthcare system are discussed below. 1) Patient
    Data Management Usually, hospitals control the patients’ data privacy and security.
    But the patient transfers their medical information to a third party, such as
    pharmacists, for the correct prescription. This creates a sense of insecurity
    in the patient’s mind and thus requires a system that can secure the patient’s
    private information without being exposed. Hence, a hash for each patient’s health-related
    information is created with BC. Using the BC API, the disease-related information
    of the affected patient is seen without revealing the patient’s personal information.
    Also, a patient has the privilege to decide who can access or view his data with
    a specific third party [29]. 2) Clinical Trials Researchers always want their
    confidential information to be stored securely and privately. They never want
    their data to be modified or breached, or stolen by any unauthorized person. Since
    BT uses the SHA256 algorithm, the data modification is almost impossible. The
    algorithm creates unique hash values of the data and links them in a chain of
    blocks. The healthcare industry needs privacy and security in maintaining and
    sharing clinical trial information securely with authorized parties of regulatory
    committees or research sponsors. The data is managed and traced with consent within
    multiple protocols, sites, and systems with BC. Patients with proper access privileges
    can also access information regarding their health issues [147]. 3) Drug Traceability
    Currently, in pharmacology, the main hurdle is drug counterfeiting. A recent survey
    shows that about 10 to 30 percent of the drugs are false and duplicated in developing
    countries. This mostly affects the businesses and enhances improper usage of fake
    drugs, leading to severe patient health damage. The BC network thus helps to detect
    frauds from drug dealers. Furthermore, all the operations carried from manufacture
    to supply are stored in the BC network, which helps and enables to record and
    trace the whole route of drugs. I. Open Issues and Challenges in IoT System Some
    of the open issues and challenges of IoT systems are discussed below. 1) Centralized
    Database A centralized database has a limited storage capacity and computing power.
    For work, many nodes connect to the server and make it a time-consuming task.
    Also, it is most challenging to detect faulty nodes in the structure. Since most
    IoT devices connect with the cloud network and centralized database, it usually
    increases the computational and cost requirements. Hence to increase the efficiency
    of the system, the distributed BT [170] is used where nodes have minimum connectivity
    and the system remains safe and reliable. With this technology, computing power
    increases for transactions irrespective of the device location. Thus, it makes
    the IoT system more cost-effective and reliable. 2) Smart Contracts The execution
    of traditional contracts required manual intervention and, thus third party for
    service. During disputes, the involvement of intermediaries became common and
    thus led to a high cost of the contract and higher time for resources consumption.
    With time BC created smart automation, which eliminated the involvement of third-party
    and unnecessary time delays. 3) Data Privacy Initially, the centralized databases
    stored the user’s data which made security and major privacy concerns considered
    for the system. Nowadays, various companies store and sell users’ data without
    users’ consent to third parties to earn profit. Such actions make a serious concern
    towards user data privacy and security. With the advent of DLT of BC, the system
    stores data in an encrypted using hashing algorithms and thus limit the risk of
    data breach and stealing of user’s privacy [165]. J. Open Issues and Challenges
    in IPR System Some of the open issues and challenges of the IPR system are discussed
    below. 1) Inefficiency The protection of original work, such as copyrights and
    patents, is a significant issue in today’s economy. Thieves worldwide steal the
    original work and sell it in their name to earn money. Hence the need to preserve
    and protect the originality of the work arose. With the development in technology,
    BC came into existence and helps in the protection effectiveness and information
    traceability of the data. Also, BC helps to store the original copyright date
    in the block. Furthermore, hashing algorithms such as SHA256 are also used to
    encrypt and store data for privacy and security concerns [180]. Thus, BC helps
    increase IPR management system efficiency and develops a sense of confidence to
    trust the technology for intellectual property protection. 2) Legal Implications
    The lack of transparency, piracy, and a central database for photos, music, and
    other copyrightable objects created legal problems for the owners or content creators
    to secure their original work. Hackers usually steal the original content and
    use it for their profit. However, during the period, BC helps secure the original
    work. It helps to increase the availability and visibility of information about
    copyright ownership using a timestamp. It helps to state immutably and publicly
    a certain event that happened at a specific time and thus helps define the work’s
    authorship. It also individualizes each digital copy of a copyrighted work to
    gain control over digital copies and allows automatic payments and simplified
    licensing of the work. K. Open Issues and Challenges in Supplychain System Some
    of the open issues and challenges of the SC system are discussed below. 1) Data
    Security Security of crucial and SC data is of major concern. The security challenges
    include monitoring the SC path flow, the impact of attacks, unauthorized access,
    and data modification by intruders. The BC helps in accurate and transparent end-to-end
    tracking in the SC system. Organizations help create an immutable and decentralized
    record of all transactions, thus helping to track assets from production to delivery
    by the end-user [46]. 2) Authenticity Today users trust document information to
    check the originality and validity of service. But such documents are easily attacked
    and tampered. The BT helps to avoid any breaching or modification of data. The
    technology traces the origin and movements of the products, thus helping clients
    and suppliers to get the required data movement information [21]. The use of RFID
    tags attached to the vehicles makes it possible to trace the products and record
    timestamps. 3) Counterfeiting Every organization or industry has issues with counterfeiting
    of drugs or products. This creates unverifiable products and poor customer satisfaction
    with quality or fake products. All of these influence the company’s reputation
    and make the overall trust go down. The BT reduces the distance between companies
    and customers and makes the processes more transparent and traceable. In addition,
    the technology provides huge storage, which stores tamper-proof tracking history
    of the products, thus making it difficult to counterfeit the products. SECTION
    VII. Key Takeaways BC has achieved significant advancement in various applications.
    However, it still faces many shortcomings and takeaways for future research. Based
    on the thorough research done, the following research scope needs to be considered.
    Plugging BC technology with the incentive method for the users, for example, into
    legacy healthcare systems to motivate them to participate in DLT. Convergence
    of BC technology and artificial intelligence for providing security and privacy.
    Developing IoT-based healthcare systems that help in real-time access and remote
    access of the patients. Establishing BC policies that help in its global adoption.
    Decreasing Latency and improving the throughput of BC network. Latency can be
    decreased mostly in public BC by reducing the accessibility of each node to the
    full BC. Hybrid classification and clustering methods can also be added to improve
    the performance results of the experiment. Transaction processing and query rates
    should be increased using different consensus mechanisms and better storage techniques.
    Faster consensus algorithms and long short-term memory models, along with machine
    learning algorithms such as recurrent neural networks, can be used for time series
    Electronic Health Record data. Cross-platform communication ability to be developed
    to increase the system’s productivity. SECTION VIII. Conclusion This paper provides
    insights to the researchers and readers about the importance of BC for different
    applications. The report covers the basics of BC, its architecture, its characteristics,
    and its mechanism, along with an extensive survey on the role of BC in different
    applications. BC is widely used for other applications. Due to this fact, the
    paper has extensively surveyed and proposed taxonomy for the use of BC to build
    trust and make secure applications in academics and education, agriculture, aircraft,
    banking, car sharing, e-voting, healthcare, IoT, IPR, and SC systems. BC platforms
    like Ethereum, Hyperledger, and R3-Corda use different tools and frameworks. The
    paper categorizes thirty-six tools/frameworks used to build the decentralized
    system in other applications. The comparisons and diagrammatic analyses of various
    work done in BC prove that society is moving towards building secure applications
    using BC. Among the works reviewed, Ethereum is found to be the most used tool
    in building applications.Finally, key takeaways are suggested for researchers
    to carry out further research in the field of BC to develop the technology. Authors
    Figures References Citations Keywords Metrics More Like This Blockchain and Trusted
    Computing Technology in the Construction of Smart Agriculture System with Modelling
    2022 4th International Conference on Smart Systems and Inventive Technology (ICSSIT)
    Published: 2022 Electronic Voting Using Blockchain And Smart Contracts: Proof
    Of Concept IEEE Latin America Transactions Published: 2020 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'An Extensive Blockchain Based Applications Survey: Tools, Frameworks, Opportunities,
    Challenges and Solutions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kaushik I.
  - Prakash N.
  - Jain A.
  citation_count: '4'
  description: Internet of things (IoT) plays a major role in every field. It helps
    in transforming the way with the use of sensors, edge devices and its infrastructure.
    As sensors are major source of information gathering which is stored on the cloud
    and relevant information is being retrieved. Information is passed at various
    levels of IoT ecosystem, which takes security into consideration. With the growth
    of interconnected devices, data security is becoming increasingly complex. The
    necessity arising for building a secure and smart structure leads in combining
    blockchain technology with IoT based system in precision agriculture. With the
    use of blockchain, traditional methods utilized for collecting and sharing agriculture
    data are replaced with transparent, reliable and decentralized data storage methods.
    This combined approach helps us in maintaining an autonomous precise agriculture
    system and managing in more secure and optimized ways. This paper presents a comprehensive
    approach on highlighting the importance of integrating blockchain technology with
    smart agriculture. This paper also proposes novel approach to blockchain models
    which are used as alternate solutions for challenges faced by IoT based smart
    agriculture. Various sub sectors like food supply chain, livestock grazing, and
    crops overseeing are also managed using blockchain platform. Later section of
    the paper focuses on open challenges and issues while developing blockchain based
    IoT system used in precision farming.
  doi: 10.1109/UEMCON53757.2021.9666554
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2021 IEEE 12th Annual Ubiquit...
    Integration of Blockchain& IoT in Precision Farming: Exploration, Scope and Security
    Challenges Publisher: IEEE Cite This PDF Ila Kaushik; Nupur Prakash; Anurag Jain
    All Authors 3 Cites in Papers 259 Full Text Views Abstract Document Sections I.
    Introduction II. Literature Review III. Blockchain Technology: Overview IV. IoT
    Network Challenges and Blockchain Preventive Measures in Precision Farming V.
    Conclusion Authors Figures References Citations Keywords Metrics Abstract: Internet
    of things (IoT) plays a major role in every field. It helps in transforming the
    way with the use of sensors, edge devices and its infrastructure. As sensors are
    major source of information gathering which is stored on the cloud and relevant
    information is being retrieved. Information is passed at various levels of IoT
    ecosystem, which takes security into consideration. With the growth of interconnected
    devices, data security is becoming increasingly complex. The necessity arising
    for building a secure and smart structure leads in combining blockchain technology
    with IoT based system in precision agriculture. With the use of blockchain, traditional
    methods utilized for collecting and sharing agriculture data are replaced with
    transparent, reliable and decentralized data storage methods. This combined approach
    helps us in maintaining an autonomous precise agriculture system and managing
    in more secure and optimized ways. This paper presents a comprehensive approach
    on highlighting the importance of integrating blockchain technology with smart
    agriculture. This paper also proposes novel approach to blockchain models which
    are used as alternate solutions for challenges faced by IoT based smart agriculture.
    Various sub sectors like food supply chain, livestock grazing, and crops overseeing
    are also managed using blockchain platform. Later section of the paper focuses
    on open challenges and issues while developing blockchain based IoT system used
    in precision farming. Published in: 2021 IEEE 12th Annual Ubiquitous Computing,
    Electronics & Mobile Communication Conference (UEMCON) Date of Conference: 01-04
    December 2021 Date Added to IEEE Xplore: 10 January 2022 ISBN Information: DOI:
    10.1109/UEMCON53757.2021.9666554 Publisher: IEEE Conference Location: New York,
    NY, USA SECTION I. Introduction This Precision farming in general is way of practicing
    farming based on observing, measuring and responding to intra field variability
    using crop management [1]. This feature allows farmers to make important decision
    related to effective utilization of resources in real scenario. It is an approach
    where precise small amounts of inputs are utilized in order to produce high yield
    [2]. It makes use of recent technology that uses hub of various technologies like
    information technology, satellite technology, remote sensing and geographical
    information system that are used for increasing the functionality and services
    required in the agriculture sector [3]. Precision agriculture make use of unmanned
    vehicles, cloud computing, block chain, internet of things, different sensors
    etc. Different sensors like soil, humidity, temperature, rainfall, plant disease
    etc. are used for collecting data which is processed in real scenario [4]. With
    the help of advanced technology used in agriculture, precision agriculture will
    add to the economic growth of the economy. As the world’s population is increasing
    at its peak, farmers need to produce more food products both in quality as well
    as quantity [5]. To adapt the ever-increasing demand, large farms are adopting
    precision farming to increase field yield, reduce waste management, and to mitigate
    economic and security risks prevailing in the fields [6]. Traditional methods
    take into consideration decision related to planting, harvesting, use of pesticides
    and fertilizers in order to increase the yielding of food grains but these results
    in slow processing when the demand is very high [7]. This made shift towards precision
    farming with the use of information and communication tools (ICT). This advanced
    technology makes use of different sensors, unnamed vehicles, mapping tools and
    block chain technology. Robot mounted sensors and drones equipped with camera
    captures plant images having information related to size of plant, leaf shape,
    moisture and soil content around the plant which uses different algorithm for
    finding healthy plant status [8]. This feature helps farmer to monitor their affected
    areas in the field and to when provide solution related to spraying of fertilizers
    on infected plants by providing feedback to farmers in real time. Some of the
    advantages of precision farming includes increase agriculture productivity, prevention
    of soil degradation, practice of modern techniques to improve quality, quantity
    and reduce cost of production, changes socio-economic status of farmers, improved
    time management, reduced use of water and chemical spraying, healthier food crops
    and higher yielding variety of seeds resulting in conserving the water resources
    and reducing chemical runoff [9]. Precision farming enables climate based smart
    agriculture business via wide range resulting in adopting new techniques in developing
    areas with simple, affordable and effective mix of technologies and practices.
    With the use of precision farming, crop production is done in eco-friendly manner
    along with having site specific knowledge one can target fertilizers rate, seeds
    and chemicals required for crop production [11]. The main purpose to use precision
    farming is to inculcate long term sustainability by reducing the environmental
    load by only using fertilizers and pesticides when they are required. Other key
    benefit to the environment results in reduction of losses from excess applications,
    nutrient imbalances, leaf damage from insects etc. Table 1 shows findings of different
    research articles on Precision farming. TABLE I. findings of different research
    articles on Precision farming. The rest of the paper is organized as follows:
    Section 2 discusses about related work; Section 3 describe Blockchain Technology
    including features, integration between IoT and blockchain model; Section 4 explain
    about IoT Network Challenges and Blockchain Preventive Measures in Precision Farming
    followed by Conclusion in Section 5. SECTION II. Literature Review Blockchain
    technology allows transparent transaction to take place between peer groups without
    involving any third party in the agricultural sector. As there is no involvement
    of third party, trust is measured using cryptography and peer architectural model.
    This helps in reducing the transaction costs in agro based markets and builds
    a strong bond between producers and consumers. As number of security measures
    are involved in the process, this technology helps in tracing transactions between
    unidentified users. With involvement of real time functioning, redundancy and
    malfunctioning can be easily addressed. Government sector paves its way by providing
    different solutions for enriching the standard and security of food products.
    Transparent facilitation amongst all the involved parties results in collection
    of reliable data. In order to make farming smart and less prone to vulnerabilities,
    data collected by the sensors adds valuable asset for developing data driving
    facilities [17]. Block chain is considered as materialize technology for smart
    farming, supply chain offers a digital database for monitoring, keeping track
    records, processing digital and physical resources. Greater traceability and inflated
    standard transactions are offered using block chain technology. This technology
    works with real time integration and managing of agricultural supply chain. All
    the services such as providing fertilizers, pesticides and irrigation facilities
    are incorporated by supply chain users in an assigned manner with all product
    specific attribute information. It stores undeviating records that are easily
    accessible to all users in transparent manner. The authenticity of agricultural
    products can be monitored using traceability forum in agriculture supply chain.
    It offers liability for violation on products authenticity by making regular updates
    [18]. Water is the most basic necessity of human being. In agriculture sector
    also water is considered as life nourishment for plants. Earlier farmers were
    totally dependent on rainfall for watering crops. But as the need for producing
    more and more grains increases, this made move towards adopting contemporary farming
    methods with the use of ICT. A model was designed using IoT integrated with mobile
    gadgets. Temperature and moisture sensors are used for collecting data which was
    combined with Raspberry-Pi for turning water pump on and off as per the requirement.
    Another model was introduced which waters the field on the basis of weather forecasting.
    For weather forecasting different APIs are used for watering the schedule for
    plants by considering previous and current trend [19]. The most revolutionary
    technology considered in this era is IoT. It works on the concept of interacting
    between various physical devices using specific addressing modes. It elongates
    it’s path in almost all sectors including industry, transportation, healthcare,
    smart city, agriculture etc. IoT devices provide wide range of information of
    physical parameters to enhance the cultivation practices. As most of the applications
    are based on wireless technology, role and use of these technologies become the
    top most priority. Smart sensors, unmanned vehicles, low power wide area network
    (LPWAN), Long range Wide Area Access Networks (LoRaWAN) are included in smart
    farming communication techniques [20]. Precision agriculture sector uses unmanned
    aerial vehicles or sensing purpose or providing communication specific platforms
    [21]. For environment monitoring, spatial and temporal resolution, image acquisition,
    aerial vehicles are used. Unmanned vehicles are used for capturing crop images,
    spraying pesticides, weed management and providing irrigation facilities in smart
    farming. It also supports decision support system on farms and provide assistance
    to the cultivators. Table 2 shows the over view of different research carried
    out in precision farming with the use of Blockchain Technology. TABLE II: Overview
    of Different Research carried out in Precision Farming with the use of Blockchain
    Technology. SECTION III. Blockchain Technology: Overview Blockchain also referred
    as distributed ledger technology. With the use of decentralization and cryptographic
    hashing makes digital asset unalterable and transparent. In simple terminology
    a block chain technology can be understood as considering google document as an
    example. A google document is created and shared with a group of people where
    it is being shared rather than copied. This enables decentralization of network
    chains which gives access to everyone to read or write the document at same time
    [30]. All the changes are being made transparent and recorded in real scenario.
    Blockchain comprises of three main components: blocks, nodes and miners. Figure
    1 shows diagrammatic representation of different block chain components. Fig.
    1. Different Components of Blockchain Show All (i) Blocks Every chain comprises
    of multiple blocks and each block uses three main elements. Data present inside
    the block. 32-bit number called nonce. It is randomly generated when the block
    is designed which give rise to block header hash [31]. Hash is 256-bit number
    which starts with zeroes. When the starting block of chain is created, cryptographic
    hash is generated by the nonce. Data is signed in the block and tied to the nonce.
    (ii) Nodes Decentralization is one of the most important features in block chain
    technology. Chain is formed with the help of connected nodes. In order to keep
    the network functioning, nodes act as electronic device maintaining the copies
    of block chain. Every node manages its own copy which is to be verified by the
    network and approve newly mined block for chain to be trusted and verified [32].
    Transparency of blockchain makes ledger to easily verify any action. A unique
    identification number is provided for each transaction to be carried out. In order
    to maintain the trust and integrity among users, public information is combined
    with system checks. (iii) Miners With the process of mining, new blocks on the
    chain are created. Mining is a bit difficult task when the chain is long enough
    as each block has unique hash referencing to the previous block in the chain [33].
    If any change is required in the block, re-mining of the current block along with
    blocks succeeding it needs to get changed which makes it difficult to make changes
    in the blockchain technology [34]. On successful mining of a block, change is
    acceptable by all nodes in the network. A. Features Of Blockchain Block chain
    technology comprises of following features as depicted by Figure 2. Fig. 2. Features
    of Block chain Technology Show All (i) Persistency If any transaction is being
    added or started by the block chain, it becomes very difficult to remove that
    block from the processed transaction [35]. While for all the invalid transactions,
    there is possibility of discovering them before being used. (ii) Auditability
    For ease of verification and tracking of transactions, this property helps in
    securely linking each block to previous block. (iii) Decentralization This property
    refers to transferring the control and decision making from organization to any
    distributed network. For any transactions to be processed are carried out by distributed
    ledger-based point to point network. Decentralized network reduces the level of
    trust that participants place with one another and control the ways that debase
    the serviceability of network. (iv) Anonymity A unique identity code is generated
    each time participant communicate with the blockchain, without depicting the specifications
    of the user. This gives an insight to many research problems in terms of security
    which is to be addressed. B. Integration Model between Blockchain and IoT The
    population of country is at alarming rate and it is very much important to provide
    both quality as well as quantity food products. After the production of food grains,
    it becomes important to supply that product to the end users within prescribed
    time period. When the transfer of food grains is to be carried out a number of
    challenging features exist in the system which is to be addressed. Some of the
    common problems associated with transporting agricultural products are communication
    breakage between supplier and retailer, limitation on financing resources, lack
    of transparency between food production and distribution [36]. In order to overcome
    all the drawbacks existing in the system, integration of IoT with Blockchain Technology
    is introduced. IoT peers build a trust-based pattern over blockchain design which
    helps in IoT device communication. Each device can take more than one node in
    the network for its representation [37]. With the help of blockchain protocol
    IoT devices can transfer data in the network topology with the help of set of
    predefined rules. To have secure IoT based transactions, block chain protocol
    is used for management and verification purpose. To have effective monitoring
    and management of integration model, a special framework is required for sensing
    the events and transactions between IoT gadgets [38]. The integration model should
    be capable enough for monitoring transaction patterns. The model comprises of
    following three components: (i) Monitoring Agent During the transaction process,
    different logs are created which are associated with IoT application. Monitoring
    of all the logs is done with the help of an intelligent agent. (ii) Log Collection
    Engine Once the logs are received, the log collection engine make relevant changes
    in the log information by removing unnecessary data from the log and forwarding
    it further for transaction process. (iii) Nodes Cluster This feature groups data
    on the basis of similarity and differences and further maps it with IoT data log
    file. (iv) Visualization Platform Provides a platform for data collection by individual
    cluster nodes for forming effective statistics. C. Secure IoT Communications &
    Performance challenges Classical used protocols like Hyper-text transfer protocol
    and Extensible messaging and presence protocol are restored with much secure protocols
    such as Datagram transport layer security for providing secure communication between
    IoT gadgets. The drawback of these protocols in terms of computational time, memory,
    key generation and central management unit made a shift towards using blockchain
    technology which uses enhance key management between IoT gadgets by providing
    unique id to all the nodes once the network is being installed. Block chain is
    considered one of the best suited security solution for achieving communication
    between IoT devices. To trace the malware, IoT devices are hashed with block chain
    and a message is sent to the device owners so that necessary step and security
    measures can be inbuilt in the system [39]. Another important feature provided
    by blockchain is authentication and verification for having secure communication
    between devices. If sender node wants to send data to the receiving node, it adds
    hashed message with the data where it is verified at the receiving end. If both
    the hashed value matches, then the data is considered as authentic. Large number
    of nodes are deployed in precision agriculture network, IoT system need to process
    large amount of data with increased throughput and dynamic topology change. So
    there is a strong opposition for the performance of IoT network. The three basic
    layers in traditional IoT based model comprises of: (i) Gateway Layer Alternatively
    called perception layer which comprises of different sensors, controllers and
    mobile devices. Messages are sent via gateway with the help of endpoints. Sensors
    are connected with the help of gateway and forward the message. (ii) Platform
    Layer Alternatively called network layer. It defines the best possible network
    route for transferring data. With the help of different protocols, collected information
    by the sensors are routed at different paths. (iii) Application Layer Responsible
    for data exchange between mobile based applications and different platforms suited
    for IoT technology. SECTION IV. IoT Network Challenges and Blockchain Preventive
    Measures in Precision Farming Designing smart IoT based network in precision farming
    is one of the major concern areas where security threats and network performance
    persists in the system. As cyber-crime is most common type of attack where greenhouse
    network and crops required for trading purpose are to be protected. As security
    is the most important factor therefore a trusted network is required for managing
    and accessing the machines. As the system uses involvement of heterogeneous devices,
    sensors, communication speed, bandwidth, latency and power consumption, therefore
    a number of challenges exist in the system [40]. This section of the paper explains
    use of Blockchain Technology to make IoT based communication system more reliable
    and secure. It offers wide range of good solutions related to real scenario data
    monitoring and improving entire transaction processes. In order to have any secure
    system, the main pillars of security- availability, integrity and confidentiality
    must be preserved. Availability states that required information must be made
    available before use. Integrity states that data must not be altered in between
    the entire process. It maintains the accuracy of the data. Confidentiality means
    that the information must be made confidential so that no intruder can access
    the important information. The different security challenges faced by precision
    farming are explained as follows. (i) Interoperability of different standards
    With the use of recent technologies based on Information and communication, interoperability
    is major concern. The different tools and technologies need not follow same set
    of standards in order to have uniformity in the system. The key issue lies in
    transforming standalone gateway to holistic, farmer friendly platforms. (ii) Learning
    Curve Precision farming involves implementation of new technologies for crop production.
    For small farmers setting up of necessary architecture and sensors, is a tough
    task. Technical knowledge is required for setting the concept of smart farming
    in their farms with latest used technologies. (iii) Connectivity in rural areas
    Farmers in the rural areas lack strong and reliable internet connectivity which
    in turn reduces the possibility to apply smart agriculture methods in such areas.
    Until network bandwidth and speed are increased, smart farming is still a problematic
    issue. Data storage services and cloud-based computing also requires to be stronger.
    (iv) Energy depletion risks Switching over to smart agriculture results in many
    environmental advantages. High energy consumption is required for setting large
    data centers and hubs for operating smart sensors and gadgets. For this reason,
    there is a shift towards farming technique that take into consideration minimum
    use of energy resources. (v) Technical failures and resultant damages If there
    is any mechanical breakdown in setting up of hardware, sensor unit it results
    in serious crop damage. Considering an example of irrigation system, if sensors
    are not functioning properly there can be either under watered or over watering
    of crops. (vi) Security Factor The presence of information thefts in any system
    is a peril comprising smart agriculture too. In order to have any secure system,
    the key elements of security- availability, integrity and confidentiality must
    be preserved. Availability states that required information must be made available
    before use. Integrity states that data must not be altered in between the entire
    process. It maintains the accuracy of the data. Confidentiality means that the
    information must be made confidential so that no intruder can access the important
    information. Detecting and removing the malware is a big challenge which is to
    be addressed. For this reason, different security mechanisms are being implemented
    in the system. Figure 3 shows the different security challenges faced by precision
    farming which are explained as follows. Fig. 3. Different security challenges
    faced by precision farming Show All SECTION V. Conclusion The study was carried
    out to investigate significance of Integrating Blockchain with IoT. The findings
    seen after carrying out the integration used in precision farming can be classified
    into following categories. Initial section of the paper gives brief insight about
    block chain technology, overview of its components and features of using this
    technology. With the involvement of IoT with blockchain, many securities related
    problems are resolved in precision farming. Literature review gives an overview
    about different block chain platforms used for managing different sectors in precision
    farming like food supply chain, livestock grazing, and crops overseeing. The second
    phase of the paper gives an outline of integrating block chain model with IoT.
    With the help of this model many reductions are done on excessive use of resources
    which helps in adding sustainability to the environment. The later section of
    the paper deals with challenges in IoT based systems used in precision farming
    along with solutions provided by blockchain technology, different blockchain opportunities
    IoT based precision agriculture. Many loop holes still persist, which need to
    be monitored timely. Further work can be extended by using different use case
    used in precision farming where block chain technology provides different solutions.
    One main issue related to security must be addressed where different security
    mechanisms can be introduced to make the model more reliable and secure. Authors
    Figures References Citations Keywords Metrics More Like This Construction of Supply
    Chain Financial Information Flatform Based on “Blockchain + Internet of Things”
    2023 International Conference on Power, Electrical Engineering, Electronics and
    Control (PEEEC) Published: 2023 Blockchain-Based Secure Data Storage Protocol
    for Sensors in the Industrial Internet of Things IEEE Transactions on Industrial
    Informatics Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2021 IEEE 12th Annual Ubiquitous Computing, Electronics and Mobile Communication
    Conference, UEMCON 2021
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Integration of Blockchain IoT in Precision Farming: Exploration, Scope and
    Security Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Torky M.
  - Hassanein A.E.
  citation_count: '191'
  description: Blockchain quickly became an important technology in many applications
    of precision agriculture discipline. The need to develop smart P2P systems capable
    of verifying, securing, monitoring, and analyzing agricultural data is leading
    to thinking about building blockchain-based IoT systems in precision agriculture.
    Blockchain plays the role of pivotal in replacing the classical methods of storing,
    sorting and sharing agricultural data into a more reliable, immutable, transparent
    and decentralized manner. In precision farming, the combination of the Internet
    of Things and the blockchain will move us from only smart farms only to the internet
    of smart farms and add more control in supply-chains networks. The result of this
    combination will lead to more autonomy and intelligence in managing precision
    agriculture in more efficient and optimized ways. This paper exhibits a comprehensive
    survey on the importance of integrating both blockchain and IoT in developing
    smart applications in precision agriculture. The paper also proposed novel blockchain
    models that can be used as important solutions for major challenges in IoT-based
    precision agricultural systems. In addition, the study reviewed and clearly discussed
    the main functions and strengths of the common blockchain platforms used in managing
    various sub-sectors in precision agriculture such as crops, livestock grazing,
    and food supply chain. Finally, the paper discussed some of the security and privacy
    challenges, and blockchain-open issues that obstacles developing blockchain-IoT
    systems in precision agriculture.
  doi: 10.1016/j.compag.2020.105476
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Blockchain technology: an overview
    3. An integration model between blockchain and IoT 4. Blockchain opportunities
    in IoT-based precision agriculture 5. Challenges and open issues 6. Concluding
    remarks Declaration of Competing Interest References Show full outline Cited by
    (206) Figures (20) Show 14 more figures Tables (6) Table 1 Table 2 Table 3 Table
    4 Table 5 Table 6 Computers and Electronics in Agriculture Volume 178, November
    2020, 105476 Review Integrating blockchain and the internet of things in precision
    agriculture: Analysis, opportunities, and challenges Author links open overlay
    panel Mohamed Torky a c, Aboul Ella Hassanein b c Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.compag.2020.105476 Get rights and content Abstract
    Blockchain quickly became an important technology in many applications of precision
    agriculture discipline. The need to develop smart P2P systems capable of verifying,
    securing, monitoring, and analyzing agricultural data is leading to thinking about
    building blockchain-based IoT systems in precision agriculture. Blockchain plays
    the role of pivotal in replacing the classical methods of storing, sorting and
    sharing agricultural data into a more reliable, immutable, transparent and decentralized
    manner. In precision farming, the combination of the Internet of Things and the
    blockchain will move us from only smart farms only to the internet of smart farms
    and add more control in supply-chains networks. The result of this combination
    will lead to more autonomy and intelligence in managing precision agriculture
    in more efficient and optimized ways. This paper exhibits a comprehensive survey
    on the importance of integrating both blockchain and IoT in developing smart applications
    in precision agriculture. The paper also proposed novel blockchain models that
    can be used as important solutions for major challenges in IoT-based precision
    agricultural systems. In addition, the study reviewed and clearly discussed the
    main functions and strengths of the common blockchain platforms used in managing
    various sub-sectors in precision agriculture such as crops, livestock grazing,
    and food supply chain. Finally, the paper discussed some of the security and privacy
    challenges, and blockchain-open issues that obstacles developing blockchain-IoT
    systems in precision agriculture. Previous article in issue Next article in issue
    Keywords Precision agricultureBlockchain technologyInternet of thingsChallenges
    and solutions 1. Introduction There is a growing body of literature that recognizes
    the importance of utilizing emerging technologies in precision agriculture (Zhang
    et al., 2002, McBratney et al., 2005, Nikkil et al., 2010). Precision agriculture
    is a new technology that utilizes Information Technology (IT), satellite technology,
    Geographical Information System (GIS), and remote sensing for enhancing all functions
    and services of the agriculture sector (Khanal et al., 2017). Today, precision
    agriculture started to rely upon Mobile apps (Jagyasi et al., 2013), smart sensors
    (Sartori and Brunelli, 2016), drones (Puri et al., 2017), cloud computing (Mekala
    and Viswanathan, 2017), Artificial Intelligence (AI) (Jha et al., 2019), internet
    of Things (IoT)Ahmed et al., 2018), and blockchain (Ge et al., 2017). Based on
    these technologies, it is become possible to process and access real-time data
    about the conditions of the soil, crops, and weather along with other relevant
    services such as crops and fruits supply chain, food safety, and animal grazing.
    Many statistical reports announced that precision agriculture will add more improvement
    to the global economy based on the use of advanced technology in all agriculture
    subsectors. According to market research and advisory firm, the global market
    of precision agriculture will grow at an average rate of 13.7 percent to reach
    10.55 billion U.S. dollar by 2025 (Xinhuanet, 2020). In addition, the global precision
    farming market is evaluated to grow from USD 7.0 billion in 2020 to USD 12.8 billion
    by 2025, at a Compound Annual Growth Rate (CAGR) of 12.7% (Markets and Markets,
    2020). In precision agriculture, forecasting and predictive analytic software
    systems can use agricultural data to provide farmers with guidance about soil
    management, crop maturity rotation, optimal planting times, and harvesting times,
    etc. For example, machine learning technology can be integrated with remote sensing
    for accurate forecasting of crop production and nitrogen levels estimation in
    precision agriculture (Chlingaryan et al., 2018, Lee et al., 2010). In addition,
    historical crop planting maps can be used for developing a machine learning system
    for predicting annual crop planting (Zhang et al., 2019, Elavarasan et al., 2018).
    Predicting crop growth in the smart greenhouse using a self-learning model and
    IoT data is another contribution of machine learning in precision agriculture
    (Kocian et al., 2020). AgriProduction (Dos Santos et al., 2019) is another system
    that able to anticipate agricultural problems related to soil humidity, temperature,
    and leaf growth based on both LoRa IoT technology and the ARIMA prediction model.
    Sensor technology and IoT can also mitigate various challenges in precision agriculture
    (Tzounis et al., 2017). Agricultural monitoring systems can provide surveillance
    services that maintain the plant growing at an optimal level and early anticipate
    the conditions that lead to epidemic plant disease outbreak based on wireless
    sensor networks installed in the planted area (Khattab et al., 2019, Ibrahim et
    al., 2019). Smart irrigation systems based on IoT and sensor technology is another
    solution for the shortage of clean water resources that are necessary for a lot
    of plants kinds as well as achieving optimum water-resource utilization in the
    precision agriculture (Huong et al., 2018). Building flexible and automated platforms
    able to cope with soilless needs in full smart greenhouses using moderately saline
    water is an important issue in precision agriculture that depends on combining
    IoT with cloud and edge computing for mitigating this challenge. Deep learning
    technology represents a recent technology in precision agriculture (Kamilaris
    and Prenafeta-Bold, 2018). This new technology can help in designing automated
    and reliable fruit detection systems for fruit yield estimation and automated
    harvesting through applying neural network models on imagery data obtained from
    two modalities: color (RGB) and Near-Infrared (NIR)Sa et al., 2016) like Mango
    fruit detection (Koirala et al., 2019), cotton detection and segmentation (Li
    et al., 2017), and apple detection and segmentation (Kang and Chen, 2019). Utilizing
    deep learning for visual detection and recognition of weeds in grasslands is an
    additional contribution of deep learning in terms of weed control in precision
    agriculture discipline (Kounalakis et al., 2018). Decision Support Systems, data
    analysis, and data mining become a significant technique for managing many services
    in precision agriculture (Zhai et al., 2020). Managing smart farms through web-based
    decision support systems can help in complying with many requirements in precision
    agriculture such as crop production, optimizing farming costs, and monitoring
    market dynamics in more efficiency (Narra et al., 2020). In addition, many steps
    have been made to improve irrigation decisions based on various irrigation decision
    models that can help the farmers to carry out critical irrigation actions and
    optimize irrigation depth (Car, 2018, El Baki et al., 2018). Moreover, water loses
    reduction and improving water supply efficiency can be achieved through automating
    irrigation canal operations, and manipulating both known and unknown patterns
    of water demands that can be recognized by different irrigation systems in the
    farms (Shahdany et al., 2019). Agricultural robotics has brought also a significant
    development for various applications in precision agriculture (Pedersen et al.,
    2006). The objective of agricultural robotics is more than just the use of robotics
    for specific functions in precision agriculture, but most of the recent the automatic
    agricultural vehicles are multi-function, such that it can be used for weed detection,
    agrochemical dispersal, terrain leveling, irrigation, field supervision, as well
    as tree fruit production (Cheein and Carelli, 2013, Bergerman et al., 2015). Moreover,
    developing a smart drone system becomes an interesting and significant technology
    in precision agriculture (Mogili and Deepak, 2018). Smart drones able to solve
    many big challenges in precision agriculture such as irrigation monitoring, weed
    identification, crop dusting, crop monitoring, pesticide spraying as well as deterring
    fertility levels, identifying bacteria, fungus or diseases based on Infra-red
    radiation commonly reflected from sensors or thermal imagery (Smith, 2020). Recently,
    blockchain represents the last new technology that can be used for mitigating
    significant challenges in precision agriculture, especially when integrated with
    IoT technology (Tripoli and Schmidhuber, 2018). According to a new market intelligence
    report by BIS Research, employing blockchain technology in precision agriculture,and
    food supply chain markets is anticipated to increase from $41.9 M in 2018 to $1.4B
    by 2028 (BIS Research, 2018). Blockchain can introduce a variety of benefits and
    support in several applications in precision agriculture. For instance, Smart
    farming, supply chain monitoring and tracking (Lin et al., 2018, Bordel et al.,
    2018, Tse et al., 2017, Casado-Vara et al., 2018), finance management (Chinaka,
    2016), data assurance and security (Mann et al., 2018, Xie et al., 2017, Liang
    et al., 2017). The Increased utilization of the public blockchain in food markets
    has also motivated the governments to restructure their legislative frameworks
    and regulations to consider blockchain in its economic policies. Recently, the
    need for blockchain in precision agriculture is mandatory to bridge the demand
    and supply gap along with attaining sustainability in the ecosystem. Although
    some reviews studies in integrating blockchain with IoT have been introduced (Dorri
    et al., 2017, Fernáez-Caramés and Fraga-Lamas, 2018), these reviews didn’t go
    deep into investigating the benefits and solutions that blockchain can introduce
    for developing new applications in precision agriculture (Bermeo-Almeida et al.,
    2018). As a response to this limitation in the literature, this paper is one of
    the first mature studies that introduces a holistic approach and a systematic
    review for investigating more contributions of blockchain technology in precision
    agriculture. The rest of this paper is designed as follows: Section 2 introduces
    an overview of blockchain technology. Section 3 discusses the major contributions
    of Blockchain in IoT applications. Section 4 discusses the major uses cases of
    integrating blockchain with IoT in precision agriculture. Section 5 discusses
    some challenges and open problems that obstacle building blockchain-IoT networks
    in precision agriculture. Finally, Section 6 summarizes the general conclusion.
    2. Blockchain technology: an overview The theory of Blockchain was invented by
    ”Satoshi Nakamoto” in 2008 to work as a public ledger of the bitcoin transactions
    (Nakamoto, 2008, Al-Jaroodi and Mohamed, 2019). The concept of blockchain can
    be defined as a decentralized, distributed ledger for storing time-stamped transactions
    between many computers in a peer to peer network. So that any involved record
    cannot tamper retroactively. This allows the blockchain users to audit and verify
    transactions independently and transparently. So, the blockchain can be designed
    as a growing stack of records, called ”blocks”, which are connected using cryptographic
    techniques. Each block must have a hash code of the previous block, a timestamp,
    and a set of confirmed transactions (Zheng et al., 2017). Simply, a blockchain
    is an invented way to structure data in a decentralized manner, which structured
    as a book that contains an infinite number of pages, each page (i.e. block) contains
    new transactions in the blockchain. The blockchain ledger is controlled autonomously
    using a P2P network and a public time-stamping server (Tapscott and Tapscott,
    2016). The decentralized transparent design of blockchain tracing and secure the
    transaction workflow. This feature can solve the long-standing problem of double-spending
    (Chohan, 2017). In the blockchain, each block has a unique hash value that identifies
    the identity of the block. The first block in the chain is named a ”genesis block”
    which has no parent block as depicted in Fig. 1. The general architecture of each
    block is explained in Fig. 2. Each block unit consists of a block header and a
    block body. Especially, the block header involves six components: • Block version
    is a software version number indicates which consensus protocol to follow. • Markle
    Tree Root Hash is used to verify the hash code that identifies all block transactions.It
    recursively defined as a binary tree of hash codes. • Timestamp is given in seconds
    since 1/1/1970. It is used to immutably track the creation and update time of
    the block for block integrity guarantee. • N-Bits identifies the target threshold
    of hash code that specifies the valid block. • Nonce is an arbitrary number that
    can be used just once in a cryptographic communication. It is a field, which usually
    begins with ’0s’ and grows for every hash computation. • Parent Block Hash is
    a hash code that refers to the previous block. Without this component, there would
    be no connection and chronology between blocks in the blockchain. Download : Download
    high-res image (211KB) Download : Download full-size image Fig. 1. Blockchain
    as a sequence of hashed blocks. Download : Download high-res image (309KB) Download
    : Download full-size image Fig. 2. Block design. On the other hand, the block
    body contains all the number of transactions that are confirmed and validated
    within the block. All transactions in the block are counted via Block Transaction
    Counter (BTC). The block state represents who sent which data (e.g. Bitcoin) to
    whom at a specific timestamp. An identified transaction between two nodes only
    occurs once it is involved in a block, then the block is verified and added to
    the blockchain. To achieve this, the ledger must be publicly available, this clears
    the importance of peer-to-peer networks in blockchain systems (Zyskind and Nathan,
    2015). Fig. 3 explains how the blockchain system works while a user ’A’ transfers
    a transactional data (e.g. bitcoin) to a user ’B’. In a P2P network, the nodes
    can guarantee the blockchain is protected and up-to-date, where, every node stores
    the last updated version of the blockchain. Utilizing P2P network architecture
    in the blockchain system has three main advantages: 1. The user can always brows
    and check the blockchain status by a blockchain explorer without depending on
    a third party 2. A malicious attacker is challenged to attack thousands or millions
    of nodes at the same time in order to compromise the blocks 3. Blockchain is never
    removed because it would have to be removed by all nodes in P2P network Download
    : Download high-res image (360KB) Download : Download full-size image Fig. 3.
    Blockchain system working. 2.1. Blockchain features Blockchain has four major
    features as depicted in Fig. 4 that make it is better than the common centralized
    database systems: • Decentralization: The set of transactions in blockchain are
    processed and validated through a distributed ledger-based on P2P network. For
    example, in the bitcoin blockchain, there is no need for the central trusted party
    (i.e. the central Bank). All nodes work together as peer to peer for adding and
    verifying block transactions in the blockchain. • Persistency: In blockchain,
    it is impossible to drop or rollback an identified transaction once it is added
    to an block in the blockchain. Moreover,invalid transactions could be discovered
    immediately. • Anonymity: Each participant can communicate with the blockchain
    by a generated virtual identity code, which does not uncover the real identity
    of the participant. Hence, this feature raises several security and privacy challenges
    of blockchain transactions (Kosba et al., 2016). • Auditability: This feature
    specifies that each block is securely linked to the previous block. This design
    makes transactions are easily verified and tracked. Download : Download high-res
    image (132KB) Download : Download full-size image Fig. 4. The major features of
    blockchain. With respect to who are the miners and validators of blocks in blockchain,
    who is authenticated to access blockchain system, level of security and efficiency,
    design method, blockchain authority, blockchain systems can be classified into
    three types: public, private, and consortium blockchain which are compared in
    Table 1. Table 1. A Comparison between blockchain types. Property Public Blockchain
    Private Blockchain Consortium Blockchain Blockchain Validation All peers One organization
    Selected peers Access Rights Public public or Private public or Private Immutability
    and Security Very tough to tamper tampered tampered Efficiency Low High High Centralization
    No Yes Partial Blockchain Authority Permissionless Permissioned Permissioned 2.2.
    Blockchain protocols Executing a specific blockchain protocol is where the magic
    occurs. It allows all nodes in a P2P network to cooperate and work together without
    trust requirements between them. The blockchain protocol is responsible for verifying
    and securely adding blocks to the chain according to the set of mining rules.
    So, the blockchain protocol is simply a set of principles that are agreed upon
    by all peer nods in the P2P network. These principles make sure the blockchain
    system works as intended to do in a synchronization manner. The blockchain protocol
    sets rules on three key issues: creating data blocks, verifying and validating
    data blocks, as well as resolving block conflicts in the chain. Recently, there
    are different blockchain protocols used to verify and add blocks to the blockchain
    in different ways. A newly mined block can be inserted to the blockchain if it
    follows the formulated principles stated by the blockchain protocol. Then, the
    peers in the network run software to test if the block is rightful or not. An
    illegal block will simply be rejected. In Table 2, the functionality of some major
    consensus blockchain mechanisms is presented and compared in terms of the mining
    process, the used technology for generating blocks, the power save during mining
    process,the block verification speed, the network structure on which each protocol
    is working, scalability, access rights to users, and a platform example for each
    protocol. As depicted in tale 2, the main disadvantages of old protocols such
    as Proof of Work (Pow) (Zheng et al., 2018), Proof of Stake (PoS) (King and Nadal,
    2012), Proof of Authority (PoA) (Bentov et al., 2014, Lin and Liao, 2017), and
    Proof of Burn (PoB) (Frankenfield, 2018, CoinCheckup, 2019) are that those protocols
    consume more powers and have low speed during mining process. On the other side,
    the new protocols such as Proof of Luck (Pol) (Milutinovic et al., 2016, Kim et
    al., 2015, Chen et al., 2017), and Proof of Assignment (PoAss) (ICO Bench, 2019,
    IOTW, 2019) are more power savers and able to generate a new block in the blockchain
    in less than 10 s. Moreover, these protocols is working based on novel secure
    technologies, such as Intel Software Guard Extension (SGX) as in Pol (Milutinovic
    et al., 2016, Kim et al., 2015, Chen et al., 2017), and green mining technology
    as in PoAss (ICO Bench, 2019, IOTW, 2019). This novel technologies provides more
    security, trusted environments for block mining, and more power saving during
    block verification and generation. Table 2. A comparison between six blockchain
    protocols. Measure Pow (Zheng et al., 2018) PoS (King and Nadal, 2012) PoA (Bentov
    et al., 2014, Lin and Liao, 2017) PoB (Frankenfield, 2018, CoinCheckup, 2019)
    Pol (Milutinovic et al., 2016, Kim et al., 2015, Chen et al., 2017) PoAss (ICO
    Bench, 2019, IOTW, 2019) Mining puzzle wager puzzle + wager burn coins. luck algo.
    hashcodes Base Tech. coin-based coin-based coin-based coin-based Intel SGX green
    mining Handling No partial partial No yes yes Power Save No partial No yes yes
    yes Verification >100s <100s <100s <100s <10s <10s Structure P2P P2P P2P P2P P2P/central
    central Scalability high high high high high low Access public public public public
    public/private private Platform Bitcoin-NG (Eyal et al., 2016) Peercoin (King
    and Nadal, 2012) Coin Proz (ProzCoin, 2019) Slimcoin (CoinCheckup, 2019) Hayekcoin(ANN,
    2019) IOTW (IOTW, 2019) The literature introduced additional blockchain protocols
    that can be used in different fields and applications, for instance, in cryptocurrency
    exchange (Schwartz et al., 2014, Buchman, 2016, Bach et al., 2018, Gibbs and Yordchim,
    2014, Jake Frankenfield, 2019, Chohan, 2019, Mser et al., 2018, Hileman and Rauchs,
    2017, Chang and Svetinovic, 2016), identity verification and privacy preserving
    (Umeh, 2016, Jeffrey Maxim, 2019, Keybase, 2019, Eric Weiss, 2019), E-government
    sector (Aman Soni, 2018, Nuss et al., 2018, Buchmann et al., 2017, Vos et al.,
    2017, Pawlak et al., 2018), healthcare systems (Brennan, 2017, Azaria et al.,
    2016), and energy and smart grids (Martens et al., 2017, Pop et al., 2018). 3.
    An integration model between blockchain and IoT Internet of Things (IoT) is a
    base technology and key player in the digital transformation witnessed by industry
    4.0 (Lu, 2017). In industry 5.0 (Daniel Sontag, 2019), IoT is predicted to have
    more dependence on sensing devices, big volumes of data, and more patterns of
    connected devices within different network topologies. we must call it the Internet
    of Things 2.0 (Sheth, 2016). Recently, IoT 2.0 moves from devices and data technology
    to Actionable Intelligence Technology (I-Scope, 2019). Based on more integration
    between IoT as a base technology and other technologies such as AI, Cloud Computing,
    and Data Science, the digital transformation moves from IoT 2.0 to the Internet
    of Transformation which makes the IoT communications so powerful (I-Scope, 2019,
    Darwish et al., 2017, Vermesan et al., 2017, Sowe et al., 2014). The integration
    of blockchain technology with IoT is another important contribution predicted
    to revolutionize the digital transformation of various domains (Makhdoom et al.,
    2018). Blockchain as a distributed ledger can be verified and deployed across
    several heterogeneous IoT networks. In IoT-based environments, Blockchain is predicted
    to add 176B$ to the global economic value by 2025 and over 3T$ by 2030 (Fourquadrant,
    2019). Fig. 5 explains the top five predictions of integrating Blockchain with
    IoT by 2030. For example, In e-governments, by 2030, most governments will depend
    on digital currency in most of (maybe all of) financial transactions. In the digital
    economy, by 2030, blockchain will produce more token-based protocols for enhancing
    digital economy transactions. By 2030, the Self-Sovereign Identity standard (Baars,
    2016) will emerge for managing the individuals’identities locally and internationally.
    One of the most promising trends where blockchain and IoT can work together by
    2030 is the global supply chain management and tracking. Moreover,Blockchain and
    IoT benefits in digital energy and smart grids (Yang et al., 2017) is another
    important trend by 2030. In the subsections below, we will discuss in more details
    the blockchain design patterns for IoT, the major solutions which blockchain can
    provide to IoT challenges, as well as the recent blockchain protocols in IoT.
    Download : Download high-res image (205KB) Download : Download full-size image
    Fig. 5. Top five predictions of integrating blockchain and IoT by 2030. 3.1. Blockchain
    design patterns-based IoT Networks In IoT-device communications, IoT peers collaborate
    and build trust over a blockchain design pattern. Each IoT- peer device can be
    represented by one or more nodes in a P2P network. This network is used to broadcast
    IoT transactions between devices based on a blockchain protocol. This protocol
    is responsible for managing, verifying, and securing IoT transactions. The Effective
    monitoring and management of a blockchain-IoT network system requires a special
    framework for managing data traffics, and sense the events and transactions between
    IoT devices. The blockchain-IoT framework should be modular enough to enable the
    monitoring of a variety of IoT transaction Patterns as discussed in (Hitarshi,
    2019). Fig. 6 depicts a proposed update of the Standard Blockchain Monitoring
    Framework in IoT (SBMF-IoT) when utilized to monitor three trucks which provide
    food patterns to various customers through a specific food production company.
    The SMBF-IoT comprises of the following components: 1. A Monitoring Agent (MA)
    which embedded with each IoT truck through the associated IoT-decentralized Application
    (IoT-dApp). It can read the logs generated as a part of the transaction process.
    2. A log Collection Engine (LCE) that manipulates the streaming log information
    of IoT trucks and realize it for further transaction processing. 3. The Elastic
    Nodes Cluster (ENC) which processes a large amount of log data to organize and
    index it into matching IoT data files, which are shared and stored as replicas.
    4. A Visualization Platform (VP) consumes the transactional IoT data collated
    by ENC and provides effective insight into the blockchain nodes and network statistics.
    Download : Download high-res image (353KB) Download : Download full-size image
    Fig. 6. Standard Blockchain Monitoring Framework in IoT (SBMF-IoT): A proposed
    Model. Leveraging the SBMF-IoT as a design standard for managing and monitoring
    blockchain-IoT transactions will help in achieving the following: • Providing
    transparent end to end IoT transactions. • Providing more control in the performance
    and throughput of the blockchain network. • Installing non-invasive monitoring
    routines that can be dynamically enabled for each on-boarded IoT peer and also
    support a common network provider model. The blockchain is a distributed ledger
    that will perform a major role in how IoT-devices will be linked together directly/indirectly
    between each other. Integrating blockchain within IoT communications require to
    identify the design pattern on which the communication occurs: the communication
    may be in three basic design patterns: from IoT device to IoT device, from IoT
    device to the blockchain, or a hybrid design. The key benefits of utilizing blockchain
    as a design base for IoT transactions are building trust, reducing cost, and accelerating
    transactions. -IoT to IoT Design Pattern: In this design pattern, blockchain work
    as only data storage for IoT- devices. Only some bytes of data are registered
    in the blockchain whereas the IoT communications occur outside the blockchain.
    This design would be helpful in scenarios where the IoT interactions are taking
    place with low latency. Fig. 7 explains how two IoT-cars are communicating based
    on IoT-IoT design pattern via a Management Hub component which allows the IoT
    devices to store data in the blockchain. Download : Download high-res image (116KB)
    Download : Download full-size image Fig. 7. IoT- device to IoT- device- design
    pattern: A proposed model. -IoT to Blockchain Design Pattern: In this design pattern,
    all IoT interactions go through blockchain. It works as a data storage and transaction
    monitor and manager. This design guarantees that all IoT communications are traceable
    as defined in the blockchain. Moreover, it increases the independence of IoT nodes
    such that each device can interact directly with the blockchain. This design approach
    is effective when the transactions happen between a variety of IoT devices in
    different domains. However, assimilating a large number of IoT transactions and
    data volumes in blockchain will lead to bandwidth and latency problems. So the
    scalability is one of the well-known dilemmas of blockchain (Tasca and Widmann,
    2017). Fig. 8 explains the three types of interactions between three IoT-devices
    with the blockchain, IoT-building,IoT-energy node, and IoT-Truck. Although the
    three nodes appear that they are heterogeneous, based on this design pattern,
    the blockchain is used as a storage repository for heterogeneous data as well
    as a transaction monitor, and a verifier for different communication patterns.
    Download : Download high-res image (140KB) Download : Download full-size image
    Fig. 8. Multi IoT-devices to Blockchain-design pattern: A proposed model. -Hybrid
    Design Pattern: In the early years of IoT communications, the disparate endpoints
    of IoT-devices were not doing a lot of data analysis and processing. Now, the
    endpoints are talking to each other with more interdependence and processing more
    data, this a promising approach is called Edge Computing (Satyanarayanan, 2017).
    The integration between IoT and other technologies, including Fog Computing (Chiang
    and Zhang, 2016), Artificial Intelligence (AI) (Vermesan et al., 2017), and blockchain
    (Li et al., 2018) leads to a hybrid design pattern. In this pattern, the data
    needs to be manipulated just on the IoT-device and does not need to be transmitted
    back to the cloud. Also, AI will become a key player in this design pattern. such
    that it will help IoT devices to make critical decisions. Blockchain can be leveraged
    for providing trust and security as missed links in the edge computing approach.
    The hybrid IoT network requires more security and reliability. Moreover, it requires
    a lot of transmitted data volumes and different IoT transaction patterns which
    can be managed by the Blockchain. Fog Computing can play a major role in this
    design pattern. It can remedy the limitations of blockchain and IoT regarding
    energy consumption and computing power, such that fog computing-based devices
    such as gateways, and data sensors require a little computation power. These advantages
    make fog computing a key player for reducing the amount of bandwidth and latency.
    Moreover, it accelerate blockchain mining operations. Fig. 9 explains the architecture
    of the hybrid design pattern which integrates IoT, Cloud Computing, Fog Computing,
    and Blockchain in a coherent design model. This figure depicts how blockchain
    can be utilized to work as a data repository and transactions monitor and verifier
    for two different heterogeneous fog networks that are managed by a cloud. The
    strength of this design pattern here is that blockchain is not only dedicated
    to store and verify data from different IoT devices as explained in the previous
    design pattern but also to store and verify data from different heterogeneous
    and complex fog and cloud networks. Download : Download high-res image (349KB)
    Download : Download full-size image Fig. 9. Hybrid design pattern: A proposed
    model. 3.2. Challenges of IoT networks and blockchain solutions Building robust
    IoT networks in the precision agriculture systems is challenged by a lot of network
    security threats, and communication performance dilemmas in this type of networks
    (Makhdoom et al., 2018). For example, farmers need to secure supply chain systems
    for trading their crops and protecting their smart greenhouse networks against
    cyber attacks. Moreover, they need a trusted environment to manage and access
    their IoT-agricultural machines without threats to identity, privacy, and integrity
    of data processed by those devices. On the other side, Precision agriculture network
    systems are challenged by network performance problems such as the communication
    speed with a huge number of heterogeneous devices and sensors, the power consumption
    of these devices, bandwidth and latency as well as limited data storage. So, this
    section explains how blockchain technology can makes IoT communications are more
    secure, transparent and tamperproof. Moreover, it will improve digital agricultural
    processes with real-time data monitoring in accelerated end-to-end transaction
    processes. Hence, blockchain technology can introduce good solutions to the security
    and performance of IoT networks in the precision agriculture systems. 3.2.1. IoT
    security challenges and blockchain solutions By 2025, it is predicted that will
    be more than 21 billion IoT nodes (more than 75 million IoT devices in agriculture
    sector lonely) which will motivate the attackers for executing a variety of IoT
    attack patterns (Norton, 2019). In 2016, Mirai malware (Kambourakis et al., 2017)
    has been considered as the first IoT malware that can infect linked devices such
    as Digital Video Recorder (DVR), IP cameras, and home router. This malware is
    able to turn the affected devices into a botnet for executing Denial of Service
    (DDoS) attacks (Kolias et al., 2017). Another example is IoT-reaper (Gary Davis,
    2019), which appeared in 2017. It doesn’t intrinsic depend on breaking prosaic
    passwords like Mirai does, but instead avails the vulnerabilities in various IoT
    devices and exclude them into a botnet cram. Due to the limitation to unstandardized
    security models for IoT, Other attacks can execute data forgery routines, data
    block and encryption. Ransomware (Yaqoob et al., 2017) encrypt victim’s data and
    ask for a ransom to decrypt it can work in different ways with IoT devices. It
    needs to identify the correct IoT-device owners to ask for ransom money. Moreover,
    plenty of IoT devices are operated by other devices; hence, the attacker needs
    to get the Industrial Control Systems (ICS) to penetrate the target device and
    encrypt the data. Shamoon 2 and DuQu-2 (Makhdoom et al., 2018) are another IoT
    attack models that target ICS of IoT devices based on its ability to replicate
    across different operating systems and IoT devices. In 2012, King Saudi Arabia
    announced that there were about 15 governmental proxies and communities have been
    attacked with Shamoon 2 (Smith, 2019). Shamoon removed data within 35,000 devices
    and hijacked the computer’s boot record, which prevents the computer from being
    rebooted. Hence, the development of future IoT communication systems requires
    to meet the following security requirements: 1. IoT devices have to operate securely
    in an authenticated manner. 2. Data integrity should be ensured versus data forgery,
    alteration and unauthorized access. 3. The IoT-device codes have to be secure
    against Tamper proof. 4. All IoT-devices have to be authenticated within the IoT
    system before installed in the network. 5. IoT Networks have to be tamper-resistant
    regarding both software and hardware tamper. 6. IoT data should be encrypted with
    efficient and secure key generator systems in which the breaked key can be updated
    as and when required 7. IoT systems have to ensure user security such as, ID management,
    enrollment, authentication, authorization, and non repudiation. 8. IoT system
    has to be immunized against unauthorized access to private IoT data and network.
    By the coming generations of blockchain systems and the advance in developing
    untraditional smart contracts and distributed ledger, it is expected that blockchain
    will provide magic solutions for many challenges in IoT networks security and
    achieve the required security requirements. Fig. 10 depicts the key solutions,
    which blockchain can grant for IoT-networks security (Khan and Salah, 2018). In
    the following, these key solutions of blockchain that can mitigate the security
    challenge in IoT networks are discussed in some details. Download : Download high-res
    image (177KB) Download : Download full-size image Fig. 10. Key security solutions
    of Blockchain for IoT. 1) Extending Address Space: The limitation of IPv6 address
    space is a big scalability challenge for addressing IoT devices. IPv6 has a 128-bit
    address space, whereas Blockchain has a 160-bit address space. So, with blockchain
    addressing, the generated PK by Elliptic Curve Digital Signature Algorithm (ECDSA)
    is 20 bytes (Ziegler et al., 2015). With 160-bit address space, blockchain can
    derive and assign addresses spaces about for IoT nodes (Khan and Salah, 2018).
    Hence, the possibility of address collision is roughly , which is secure enough
    to assign a GUID (Global Unique Identifier) to IoT devices. With blockchain technology,
    there is no need for a central authority for providing and generating limited
    Internet Assigned Number Authority (IANA) (Ziegler et al., 2015). Furthermore,
    blockchain able to derives 4.3 billion addresses spaces compared to IPv6. So,
    Blockchain provided a magical solution for solving the scalability and security
    challenges in IoT. 2) Managing Identity of Things. Generating identities and managing
    access for IoT devices is considered another benefit of blockchain in IoT security.
    Blockchain can be utilized for granting trustworthy identity creation, ownership
    monitoring and tracking of goods, products, and services. Data transparency and
    end-to-end process tracking is another benefit of robust blockchain. For example,
    Trust-Chain (XXXX, YYYY) has been proposed for verifying and managing trusted
    transactions while maintaining the integrity in distributed IoT networks. Each
    Block in the Trust-Chain represents a transaction between two IoT participants
    and creating new transactions is depending on the hash codes of the previous transaction.
    Trust-Chain records are cryptographically authenticated and signed by both parties
    and connected in a directed graph. The main advantage of Trust-Chain beside security
    is each agent in the Trust-Chain system monitors the interactions by others and
    collects records to compute trustworthiness levels. Blockchain also can provide
    control functions for trustworthy and decentralized transactions in the three
    design patterns explained previously. Moreover, it allows to remote asset management
    and instant data verification from end to end between IoT devices. 3) IoT Transaction
    Verification: Blockchain can perform an important function in managing the authentication
    and authorization of IoT systems. With blockchain, all IoT transactions mad by
    devices are registered on the distributed ledger and can be monitored and tracked
    securely. Each IoT transaction communicated with the blockchain system will always
    be cryptographically proofed by the valid sender that holds a unique PK and GUID.
    Hence, this will be helpful in ensuring the authentication and integrity of the
    triggered transaction. Blockstack (Ourad et al., 2018) is a common blockchain
    technique that utilizes JSON Web Token (JWT) for authenticating IoT-transactions
    easily. As depicted in the proposed model in Fig. 11, Blockstack can be used to
    authenticate the access to a smart greenhouse. The authentication with Blockstack
    requires a special communication between a decentralized application (DApp) of
    an IoT greenhouse and the Blockstack Browser. Download : Download high-res image
    (230KB) Download : Download full-size image Fig. 11. Blockstack authentication
    protocol: A proposed model. The authentication process can be explained through
    eight steps: 1. A user (e.g. farmer) signs in with blockstack by requesting a
    new access to the smart greenhouse by establishing a new connection with its decentralized
    application (DApp). 2. The DApp then sends the sign in data to the function ”
    ” for processing the access request. 3. The function ” ” asks the blockstack browser
    to generate a new Authentication Request Token for the user’s access request.
    4. The blockstack browser responds bycreating new JWT authentication response
    token that being forwarded to the DApp. 5. The DApp then manipulates the JWT authentication
    response token by calling the function for verifying the issued JWT authentication
    response token by the blockstack browser. 6. After the function has verified the
    JWT token, it forwards the JWT verification result to the DApp for responding
    the user’s access request. 7. The DAppm then grants the user the required access
    data to access greenhouse system. 8. The user (e.g. farmer) inputs the granted
    access data and establishes the connection with his greenhouse system. 4) Securing
    IoT Communications: To provide secure communication between IoT devices, the classical
    protocols such as ”Hypertext Transfer Protocol (HTTP)”, or ”Extensible Messaging
    and Presence Protocol (XMPP)” must be replaced with more secure protocols such
    as ”Datagram Transport Layer Security (DTLS)” or ”Transport Layer Security (TLS)”
    for providing secure communication (Nguyen et al., 2015, Kothmayr et al., 2013).
    However, DTLS or TLS protocols have some drawbacks in terms of computation time
    or memory requirements as they considered heavy and complex protocols. Moreover,
    these protocols have some problems with centralized governance and control of
    key generation and distributions using the common PKI protocol. Using blockchain
    can remove these problems and enhance key management between IoT devices by assigning
    each device a unique GUID and PKI pair once installed and connected to the blockchain
    network (Khan and Salah, 2018). With blockchain, new secure communication enhancement
    can be conceived such that there is no need to handshake phase to exchange PKI
    certificates as in DTLS or TLS protocols. Therefore, blockchain is the best solution
    to cover runtime computing and memory management requirements for achieving secure
    communications between IoT devices. Moreover, the firmware of the IoT devices
    can be hashed into a Blockchain continually for detecting IoT Malware and alert
    the device owners to take the necessary security measures, or auto defends against
    the detected malicious bot. Instruction verification and authentication is another
    benefit of blockchain for securing communication between IoT devices. For instance,
    the sender node hashes a message that wants to forward to another IoT node and
    add the hash code into a Blockchain. On the other hand, the receiver node then
    hashes the same message. The verification rule state that, if the hash value matches
    the hash value on the Blockchain, then the received message has not tampered in
    the transit. 3.2.2. IoT performance challenges and blockchain solutions Due to
    the huge number connected IoT devices in the precision agriculture networks, IoT
    system have to harmonize a future large number of network topologies and process
    big data volumes with high level of throughput. So, the performance of IoT networks
    in the precision agriculture systems represents another big challenge. The IoT
    performance problems result from some limitations in the traditional IoT layer
    model that involves three basic layers. The endpoints and gateway layer, The IoT
    platform layer, and the Application layer. 1. Endpoints and Gateway layer: It
    is sometimes called perception layer that involves several IoT devices such as
    sensors, controllers, and mobile devices. in this layer, the physical endpoints
    send IoT messages to the IoT platform through a gateway. Each sensor connects
    to the gateway through one of several data link protocols with different bandwidth
    options. 2. IoT platform layer:It is sometimes called network layer. It defines
    the various communication protocols and networks used for connectivity and edge
    computing. So, it is responsible for recording and analyzing the transmitted data
    from sensors and other physical endpoints through session protocols between IoT
    gateways and IoT platform. 3. Application Layer. Is responsible for providing
    IoT services to the end users through several applications such as mobile applications,
    public web or back-office applications. It depend on HTTP protocol to exchange
    data between the IoT platform and those applications. The IoT performance problems
    in the precision agriculture networks can be summarized in five challenges as
    depicted in Fig. 12. Blockchain can provides also good solutions for the those
    challenges: Download : Download high-res image (177KB) Download : Download full-size
    image Fig. 12. IoT performance challenges in the precision agriculture networks.
    (1) Blockchain and Sensing problem. This problem is concerned with the perception
    layer in IoT layer model. IoT sensors are embedded in a lot of agricultural machines,
    such as agriculture tractors,smart greenhouses, farming devices, etc. These sensors
    continuously emit data about the working status and permit IoT nodes to send and
    receive data from each other via the cloud. Blockchain can be used for defining
    communication rules between these sensors as well as managing all M2M transactions.
    For instance, IOTA (Internet of Things Application) (Popov, 2016) is a promising
    update of the blockchain platforms which specially designed to facilitate a large
    number of transactions between IoT devices using IOTA ledger and Directed Acyclic
    Graph (DAG). Although IOTA is still new, it can provide magic solutions for the
    sensor communications and the scalability challenge in the precision agriculture.
    (2) Blockchain and Energy Consumption Problem: This problem is concerned with
    the Network layer in IoT layer model. Due to the increasing of IoT network systems
    in the precision agriculture, IoT devices are predicted to be low-power devices.
    Moreover, IoT communications in precision agriculture networks are depending on
    Wireless technology which consumes far more energy than wired connections Such
    as Fiber (5G? IoT, 2019). Although fiber is safer, faster, more reliable, and
    energy-efficient than wireless, pushing for 5G technology everywhere is cheaper
    than to depend on fiber. But unfortunately, this will greatly grow energy consumption.
    Recent IoT devices in precision agriculture networks consume energy via data centers,
    M2M communication, embodied energy (e.g. mining, manufacturing, and transporting),
    and Obsolescence of digital technologies. But with the decentralization feature
    of Blockchain, it can introduce some solutions to handle the energy consumption
    problem. The private blockchain can be utilized for ensuring the proportion between
    the high computation power along with the high bandwidth connection for IoT nodes
    (Makhdoom et al., 2018). Blockchain will grant the resilience needed for the smart
    grids in the future. Blockchain-based flexible power systems will witness low-carbon
    power produced at scale-not only by large utilities, but also by renewable power
    sources. Blockchain will enable us to measure how much energy IoT-devices and
    sensors consume in real-time. Blockchain can maximize three energy trends decarbonization,
    digitization, and electrification (Maher Chebbo, 2019). All renewable energy-based
    processes such as energy selling/payments transaction, and energy contracts can
    take place on a blockchain immediately. Blockchain can provide techniques for
    collecting and storing data from countless distributed sources as well as processing
    it in real-time. Blockchain will also maximize the electrification by providing
    decentralized energy ledgers for monitoring a large number of batteries and a
    variety of energy sensors used in the precision agriculture networks. (3) Blockchain
    and Networks Complexity Problem: This problem is also concerned with the Network
    layer in IoT layer model. IoT systems in precision agriculture are designed based
    on un heterogonous Network topologies which lead to complex communications. The
    IoT-farming machines have to communicate and interact seamlessly through different
    platforms and infrastructures. It’s possible, but it can be hard, expensive,and
    time-consuming. In response to these challenges, Blockchain can help in acquiring
    and managing data based on secure standard-based and decentralized networks. As
    we mentioned previously in Section 3.1, blockchain can manage the communications
    between IoT devices through three design patterns, this lead to more simplicity
    in IoT communications, supporting edge processing at farming machines endpoints,
    and decrease the latency of data transmission across the precision agriculture
    networks. (4) Blockchain and bandwidth and latency Problem: Another important
    IoT performance problem against building precision agriculture networks is the
    bandwidth and latency of device communications. In IoT communications, the data
    traffic always originates outside the data centers. Hence, immediately, the communication
    has to be installed in the highest latency between large numbers of scattered
    IoT devices. A large number of different IoT devices need to be updated every
    small time period. Moreover, device communication needs lots of routing and multiple
    levels of packet inspection. Replacing the data center with blockchain will mitigate
    these problems. The decentralization feature of blockchain will make the workload
    more distributed closer to the endpoints. Hence, the IoT communication will be
    constructed inefficient bandwidth and low latency. However, the decentralized
    public blockchain may take control of the public nodes is very difficult such
    that there is a great chance that the IoT device with the smallest bandwidth will
    cause network bottleneck. In addition, due to the growth of blockchain size, the
    need for computing power, storage,and bandwidth is very importantMakhdoom et al.,
    2018). On the other hand, with a private blockchain, these limitations can be
    removed, such that the private Blockchain can process over 1,000 transactions
    per second on Ethereum or Bitcoin (Preethi, 2017). Hence, a huge number of heterogeneous
    agriculture transactions can be processed using the coming blockchain systems
    based on processing digital asset tokens. (5) Blockchain and Limited Data Storage
    Problem: Due to the rapid growth of IoT-precision agriculture networks, large
    volumes of data have to be stored and managed through flexible repositories. The
    existing cloud-based storage has limited solutions to manipulate the large scale
    of different patterns of IoT data. This limitation based on the requirements of
    real-time data monitoring, high availability, scalability, security, and low latency
    (Sharma et al., 2017 Sep). In response to these limitations of cloud-based storage,
    Blockchain-based storage will enable IoT endpoints to make more data analysis
    and manipulation in real-time. Satyanarayanan (2017). Table 3 explains the major
    differences between cloud-based storage and blockchain-based storage. The P2P
    design of blockchain makes the trust is replicated among all peers. Hence, if
    any tamper occurred in any node, all peers in the system will detect it rejects
    its procedure, moreover, the current status of blockchain will not be modified
    or tampered. Moreover, the cloud is also vulnerable to unauthorized data sharing,
    whereas, blockchain gives users the freedom to set access rules without dependence
    on a third party or a cloud service provider. Hence, blockchain is also a very
    good option for data availability and security (Makhdoom et al., 2018). Table
    3. Cloud versus Blockchain as a data storage medium. Cloud-based Storage Blockchain-based
    Storage Centralized Trust by the cloud provider Decentralized Trust in the network
    Centralized Design Decentralized Design Not protected against data alteration
    Protected against data alteration Single point of failure multi points of failure
    Vulnerable to un-authorized data propagation are based on data propagation smart
    contracts User data is managed by User data is replicated between all peers cloud
    provider and controlled by smart contracts. The transactions aren’t transparent
    The transactions are transparent regarding users identities to user identities.
    Not ideal for low latency and Provide edge/fog computing at IoT endpoints high
    availability for IoT networks so it is a good option for IoT networks. Costly
    design infrastructure Less expensive infrastructure 4. Blockchain opportunities
    in IoT-based precision agriculture The IoT growth in the last few years has granted
    many opportunities for enhancing the precision agriculture sector. The witnessed
    increase in using mobile-broadband access devices, smart networks, analyzing big
    data volumes, and AI have provided the stakeholders with some magic tools in developing
    precision agriculture systems. Blockchain is one of the most promising technologies
    that can provide untraditional solutions in smart agriculture (Lin et al., 2017).
    Blockchain can be used in managing warehouses, soils, and supply chains more intelligently.
    It can be utilized as a key tool to transmit real-time data about crops and livestock.
    Moreover, it can be used for food safety, logistics, monitoring, as well as managing
    payment transactions (Sam, 2018). Blockchain adoption in smart agriculture and
    food supply chain market is predicted to grow at a CAGR of 47.8% by 2023 (Report
    Linker, 2018). Moreover, utilizing blockchain in the supply chain market is evaluated
    to be $60.8 million in 2018 and is forecasted to reach $ 429.7 million by 2023
    (Report Linker, 2018). In the following subsections, the major use cases of utilizing
    blockchain in developing IoT-precision agriculture networks will be discussed
    in subSection 4.1. Moreover, some of the prominent blockchain platforms that can
    be used in managing different sectors in precision agriculture are investigated
    and discussed in subSection 4.2. 4.1. Blockchain usecases in the precision agriculture
    Although the research in adopting blockchain technology in the precision agriculture
    is in its early stages, the research trend explained major five use cases of applying
    blockchain in the precision agriculture as summarised in Fig. 13. Using blockchain
    technology in the precision agriculture can introduce new contributions and improve
    many functions such as monitoring and traceability, transparency, and efficiency
    at levels of the farmers and the consumers. Download : Download high-res image
    (187KB) Download : Download full-size image Fig. 13. Five Use Cases of Blockchain
    in the precision agriculture. 1) Farm Overseeing: building smart farms based on
    IoT sensors (e.g. temperature, humidity, light, crop maturity sensors, etc.) Enable
    the farmers and stakeholders to digitize the obtained agricultural data from the
    sensors for different purposes. Utilizing blockchain here will provide more rapid
    and smooth communication between sensor networks. For example, blockchain can
    be used for monitoring crop storage techniques for preventing post-harvest losses.
    Moreover, it can be utilized for tracking CO2 concentration for avoiding mold
    growth invasion (Sam, 2018). Traditional sensors able to detect the potential
    for losses weeks earlier than traditional monitoring techniques do, however, 52%
    of the nation’s essential fruits and vegetables being thrown out due to missing
    the control and monitoring over the supply chain. Blockchain can be utilized also
    for providing secure communication in Smart Greenhouse Farming (SGF) as depicted
    in the proposed model in Fig. 14 (Patil et al., 2017). The figure explains a farm
    overseeing framework that involves four subsystems: smart greenhouse farm, private
    blockchain, cloud storage, overlay network and the end-users (farmer(s)). The
    SGF is equipped with several IoT sensors (e.g. humidity sensors, light sensors,
    water level sensors, and CO2 sensors) as well as some actuators (such as, LED
    light, Fan, Heater and sprinkling). All transactions that can be occurred between
    IoT devices in the SGF can be stored and mined in a private blockchain. Moreover,
    the secure data communications between SGF, blockchain, cloud storage and end-user
    (i.e. farmers who can remotely access its SGF using smart devices such as mobiles
    and computers) can be managed through an overlay network. On the other hand, Blockchain
    can be used for monitoring water systems that serve a set of smart farms (Lin
    et al., 2017) at the same time. Download : Download high-res image (342KB) Download
    : Download full-size image Fig. 14. Blockchain-based smart greenhouse farming
    model: A proposed model. 2) Supply Chain: Monitoring processes of the supply chain
    using a public blockchain ledger adds a great value to agricultural goods and
    promote the transparency of supply chain processes. Blockchain enables consumers
    to track agricultural machinery, crops, and livestock for proving quality and
    ethicality (Caro et al., 2018). This can provide consumers and stakeholders more
    trust in the agricultural products, ensuring food safety, and reducing food frauds
    (Sylvester, 2019). In the supply chain process, blockchain can provide key five
    services: 1. Data Recording. Blockchain is able to work as a distributed storage
    unit for all information moving between supply chain nodes 2. Monitoring. Blockchain
    is able to track purchases, orders, updates, receipts, shipment notifications,
    or other trade-related transactions (Li and Wang, 2018). 3. Verifying. Blockchain
    can be utilized for verifying transactions or certain properties of physical products,
    such as identifying if a food product is an organic or fair trade (Platform with
    duplicated and shared bookkeeping, 2018). 4. Assigning and Linking. Blockchain
    can be used to link the physical products to bar codes, serial codes, digital
    tags like RFID, etc. 5. Sharing. Blockchain can be utilized for disseminating
    information about manufacturing procedures, delivery, assembly and maintenance
    of agricultural products with suppliers and vendors. Moreover, blockchain can
    provide three advantages to the shippers: Transparency Enhancement, Greater Scalability,
    where Blockchain virtually enables stakeholders from any endpoint to access the
    supply chain system, and Better Security, where blockchain could potentially protect
    the system against any tamper and data alteration during the product lifecycle.
    Table 4 compares between blockchain-based supply chain and traditional supply
    chain system in terms of achieving data integrity, the way in which data security
    is managed, the possibility of data verification, and government regulations for
    authenticating processes and activities in the supply chain system. Table 4. A
    comparison between blockchain-based supply chain and traditional supply chain.
    Comparative item Blockchain-based supply chain Traditional supply chain Data integrity
    Tamper proof No tamper proof Data Security Decentralized protection Centralized
    protection Data Verification Achieved Not achieved Government regulations using
    authentication protocol without authentication protocol Fig. 15 explains a proposed
    architectural model in which blockchain can manage agricultural transactions process
    between resource demands and resource suppliers in a supply chain system. The
    main role of blockchain in this model is storing new supply chain transactions
    between many customers’ demands and many suppliers’ products. The customers can
    create new demand as a new transaction through the decentralized customers’orders
    engine, and the suppliers can offer new product as a new transaction through the
    decentralized suppliers’products engine. The smart contract works here as an authenticating
    protocol between the two engines for verifying and protecting the transaction
    data patterns between suppliers and customers, then store the valid transactions
    as a new block in the blockchain. Download : Download high-res image (454KB) Download
    : Download full-size image Fig. 15. Managing supply chain process using blockchain
    technology: A proposed model. 3) Land Registration: (Barbieri and Gassen, 2017).
    It can be defined as the process of determining, recording and sharing transactional
    information about rights, value, and use of land pieces (Anand et al., 2016).
    The current classical land registry system has a lot of limitations. These systems
    don’t provide the full authentication for all land transactions between peoples,
    organizations, and governments. It is estimated that about(70–80%) of land transactions
    worldwide are not formally registered in any national system (Anand et al., 2016).
    With Blockchain technology, we became to have a big chance to solve these problems.
    Blockchain can enhance data security and ensure the authenticity of land registration
    records. With the transparent, decentralized public ledger it becomes easy to
    store time-stamped land transactions and historical rights of land pieces. Since
    blockchain does not rely on a single data center, It is able to auto-reject any
    illegal land transaction. It is able to detect tamper proofs on registered records
    and protect all land transactions and registry details based on ”colored coins.
    The colored coins-based protocol can be applied to land registration by representing
    the ownership of a piece of land by a single or multiple tokens. The metadata
    associated with the token can be used to monitor public registry information such
    as size, GPS coordinates, year built etc. Verifying and tracking the ownership
    of each token can be executed across the internet using a blockchain explorer
    software. Proof of Concept (Luckas, 2019) with Ethereum (Vujicic et al., 2018)
    is a good integration example of colored coins in managing the ownership and land
    transactions (Alexandru and Chami, 2019). The proposed model in Fig. 16 explains
    how blockchain can be utilized to manage the land registry process in an automated
    form based on NEM blockchain (New Economy Movement)Bach et al., 2018) and ”InterPlanetary
    File System (IPFS)” (Benet, 2014). NEM is a P2P cryptocurrency blockchain launched
    in 2015 as a novel platform depends on the colored coin XEM which can be mined
    using Proof of Importance (POI) algorithm (Bach et al., 2018). InterPlanetary
    File System (IPFS) is a distributed ubiquitous file system that allows users/devices
    to not only receive but host P2P shared content of land pieces information (Benet,
    2014). The land registry process is based on NEM multi-signature accounts that
    ask N out of M (e.g. 10 out of 30) proofs to create certain land transactions
    process. The system issue NEM mosaics which are used as confirmation tokens. The
    system uses a dashboard to monitor all land transaction updates and present them
    in a visualized form through web APP. The core logic layer is responsible for
    managing the communications between the dashboard, API, and IoT land location
    sensor and IPFS. It also enables to create logical NEM account for land pieces
    or other real estates through NEM server layer. Download : Download high-res image
    (336KB) Download : Download full-size image Fig. 16. Managing Land registry and
    administration using blockchain technology: A proposed model. 4) Food Safety (Lin
    et al., 2018): In the food industry, Blockchain could transform the entire process
    and introduce untraditional solutions for food problems. Several studies reported
    that almost 1 in 10 people in the world fall ill after eating contaminated food
    every year. Moreover, 68.2% of food safety events happened in China was caused
    by illegal activities, and the cost of food fraud incidents reaches to annually
    (Galvin, 2017). Utilizing Blockchain in the food industry, consumers will be able
    to verify the source and safety of their food in seconds. Blockchain could be
    used to tell consumers that the fruit and vegetables were grown with herbicide.
    It will provide real-time tracking, authenticating, securing and monitoring functions
    for the food supply chain process (Ge et al., 2017, Galvez et al., 2018). Blockchain
    also can introduce good solutions for detecting food fraud and enhance provenance
    transparency such as organic food verification. Although utilizing blockchain
    technology in food safety is in its early stage, some interesting benefits of
    integrating blockchain and IoT can be summarized as follows (Tian, 2016): 1. Food
    tracking and monitoring management. 2. Reducing the agri-food loses and logistic
    costs 3. Detecting food fraud and verifying product information. 4. Protecting
    agri-food safety information based on integrating RFID technology with blockchain
    and IoT 5. Maintaining safety and quality of food products. 6. Facilitating the
    communication between all stakeholders of food industry process. Integrating IoT
    sensors and electronics chips such as RFID tags are evolving rapidly. So, companies
    will be able to attach IoT sensors to food products to track and detect food fraud
    incidents and potential failures. Forwarding these data from IoT sensors to the
    blockchain can provide standardization, transparency and traceability to the supply
    chain and help food stakeholders to detect temper-proof. Walmart’s blockchain
    is a good example of tackling the food safety of Mango and Pork in the food supply
    chain process (Kamath, 2018). The proposed model in Fig. 17 explains a general
    architecture model of how blockchain can be used in the food safety during the
    major four stages of food supply chain process: food production, food processing,
    food shipping, and food distribution. Download : Download high-res image (374KB)
    Download : Download full-size image Fig. 17. Managing food safety using blockchain
    technology: A proposed model. 5) Real Time Remittance for small farms: Farmers
    may need to use a public payment system for receiving real rime remittances from
    the agricultural organizations or from the governments. With mobile blockchain
    systems (Xiong et al., 2018), small farmers become able to execute real-time payments
    for goods, crops, agricultural services. Moreover, they can receive agricultural
    remittances through a blockchain mobile APP. Mobile blockchain will make all real-time
    transactions are faster, transparent and keep farmer information protected. With
    mobile blockchain APPs, the farmer can get the following benefits (David, 2019):
    • Cryptocurrency Applications enable farmers to execute payment transactions with
    crop traders and receive real time remittances. • Electronic Wallet APPs that
    enable farmer to store and manage their digital assets and money. • Digital crop
    tracker apps to provide farmers updated information about the trade rates, cryptocurrency-based
    transactions, crop market dynamics and a portfolio of various agricultural variables.
    • Retail APPs allowing its Farmer to execute payment transactions through digital
    currencies • Smart Contracts or self-executable protocols APPs allow the farmer
    to detect any fraud or illegal operations regarding their digital crops or digital
    assets Integrating blockchain with a remote sensing satellite, data, and mobile
    money techniques can ensure transparent secure transactions, automated payment
    remittance transfer between smart farms (Sylvester, 2019). The farmer can execute
    all financial transactions through a mobile wallet account created on a mobile
    blockchain such as COIN22 (Sylvester, 2019). As depicted in the proposed model
    in Fig. 18, farmers can exchange, buy, sell their digital crops through the wallet
    App created in COIN22 blockchain. When a new transaction occurs between two or
    more farmers, it should be verified by other farmers who work as verifiers for
    the new transactions. If the transaction is valid, a new digital token is issued
    regarding this transaction and stored in a new block that will added to the COIN22-blockchain.
    On the other hand, based on satellite data sent to COIN22-blockchain, farmers
    can trace some major indexes of their farms (e.g. soil, water, drought indexes,
    etc) by using a digital tracer App connected with COIN22. Table 5, Table 6 summarizes
    the research work in the five blockchain-use cases in the precision agriculture.
    Download : Download high-res image (361KB) Download : Download full-size image
    Fig. 18. The architectural model of real time financial transactions between smart
    farms: A proposed model. Table 5. Summary of the research work of adopting blockchain
    in smart agricultures. Use Case Research Blockchain Contribution Year Farm Overseeing
    Lin et al. (2017) Monitoring system for water 2017 distributions Farm Overseeing
    Patil et al. (2017) Tracing system for securing 2017 sensor communications in
    the farms Farm Overseeing De Clercq et al. (2018) Future farming tech. in agriculture
    4.0. 2018 Supply Chain Caro et al. (2018) AgriBlockIoT mechanism for 2018 managing
    Agri-Food supply chain. Supply Chain Dujak and Sajter (2019) Blockchain application
    in 2019 supply chain and logistics Supply Chain Li and Wang (2018) Monitor system
    2018 for agricultural products. Supply Chain Platform with duplicated and shared
    bookkeeping (2018) Provenance system 2018 for supply chain trust Supply Chain
    Toyoda et al. (2017) Blockchain system 2017 for the Post Supply Chain Supply Chain
    Leng et al. (2018) Double Blockchain chain system 2018 for securing public transactions
    Supply Chain Saberi et al. (2019) Review of blockchain 2019 in supply chain Supply
    Chain Chen et al. (2017) Supply Chain system for 2017 Quality Management Supply
    Chain Lu and Xu (2017) Monitoring system the product origins 2017 in supply chains
    Supply Chain Xie et al. (2017) Secure blockchain system 2017 for tracking products
    Land Registration Barbieri and Gassen (2017) A Blockchain model 2017 for managing
    digital land registry Land Registration Anand et al. (2016) Blockchain system
    for 2016 managing land admiration activities Land Registration Vos et al. (2017)
    Analysis model for applying blockchain 2017 in Land Administration Land Registration
    Chavez-Dreyfuss (2016) ”Proof of concept”: 2016 a blockchain in the Swedish land
    registry Food Safety Lin et al. (2019) Blockchain system for preventing food data
    2019 tampering Food Safety Lin et al. (2018) Food tracking technique based on
    2018 IOT and blockchain Food Safety Tse et al. (2017) Blockchain usecases in securing
    2017 food supply chain process Food Safety Tian (2016) Tracking system for an
    agri-foo 2016 supply chain in China Table 6. Summary of the research work of adopting
    blockchain in smart agricultures (Cont—). Use Case Research Blockchain Contribution
    Year Food Safety Galvez et al. (2018) Blockchain in 2018 food Sypply chain Real
    Time Agricultural Chinaka (2016) Blockchain for managing 2016 Remittance agricultural
    products in Africa Real Time Agricultural Holotiuk (2019) Blockchain impacts in
    2017 Remittance financial transactions Fig. 19 depicts the research progress with
    respect to a number of published papers for each use case. The research analysis
    result confirms that blockchain has more contributions to supply chain procedures
    than other agriculture use cases. Moreover, farm overseeing, land registry and
    real-time agricultural remittance transfer still in the early stages of maturity,
    whereas food safety tracking become a real application of blockchain technology.
    Download : Download high-res image (218KB) Download : Download full-size image
    Fig. 19. Research progress of blockchain in precision agriculture use cases. 4.2.
    Blockchain platforms in precision agriculture The rapid growth of using blockchain
    in precision agriculture leads to developing some platforms that can be used for
    various agricultural activities. This subsection discusses the most common five
    blockchain platforms in smart agriculture. 1) Provenance is founded by Jessi Baker
    in 2013 as the first blockchain platform that supports supply chain activities
    (Digital Social Innovation, 2019). Provenance enables producers, consumers and
    retailers to track their products during all stages of the product’s life cycle.
    It enables every physical product to authenticated by ”a digital passport” that
    confirms its authenticity and origin for preventing selling fake goods. With Provenance’s
    trust engine, the participants able to verify their supplier transactions for
    better supply chain integrity. They can also turn their digital certifications
    into data-backed marks for the customers to review, then it is forwarded to the
    blockchain to be stored in a secure, and genuine form. Provenance enables stakeholders
    to share honest stories about their goods and products in a trustworthy mode.
    Producers and consumers can show the traceability of each product item through
    the Provenance’s tracking tool (Provenance, 2019). Moreover, issuing a digital
    asset for a specific physical product using Provenance and connect to it via a
    protected tag, e.g. an NFC, will decrease the traceability time from days to seconds,
    reducing good frauds, providing faster recalls, improving transparency, protecting
    brand valueFilatov, 2019). OriginTrail (Konic, 2019) is a similar blockchain platform
    that developed for data integrity and validation in supply chain activities. 2)
    AgriDigital is a cloud-based blockchain platform founded in 2015 by a team of
    Australian farmers and agribusiness professionals (Xu et al., 2019) AgriDigital
    makes the agriculture supply chain simple, easy and secure between farmers and
    consumers. The farmers and stakeholders are able to manage their contracts, deliveries,
    orders and payments all in one place and in real-time. The AgriDigital platform
    has five core subsystems (Agridigital, 2019): 1. Transactions. Through this subsystem,
    farmers and stakeholders able to easily buy and sell several goods 2. Storage.
    In which, the accounts, payments, orders, delivers, and other sensitive information
    are digitized and stored 3. Communications, through which, the farmer and consumers
    can build the connections patterns. 4. Finance, through which, all financial transactions
    and virtual currency transfers between farmers and consumers can performed. 5.
    Remit, through which, the real time remittances issued to the farmers can be transferred.
    The main feature of AgriDigital is the creation of digital assets in the form
    of tokens. These tokens represent the physical agricultural goods (e.g. tons of
    grains). Since the digital asset transfer from farmer to the consumer along the
    supply chain, an immutable data of the physical asset is created using proof of
    concept protocol (Luckas, 2019). Once a digital asset is issued, users can use
    the application layer of AgriDigital platform to send/receive data. 3) IBM Blockchain
    is one of the most common blockchain platforms that is used in agricultural logistics.
    It is a good choice for optimizing agricultural transactions and global trade
    relationships (Cook, 2018). What makes IBM blockchain is a popular platform for
    agricultural stakeholders are: the high security, multi-cloud flexibility-based
    transactions, trusted expertise, such that more than 1500 company and technical
    experts prefer to work with IBM blockchain. Moreover, it can bring together regulators,
    suppliers, consumers, and professionals to work with each other in IBM Blockchain
    Ecosystem (IBM, 2019). IBM Blockchain enables equal visibility of activities and
    reveals where an agricultural asset is at any point in time, who owns it and what
    condition it’s in (Tripoli and Schmidhuber, 2018; Kamath, 2018). 4) Foodcoin (Bitcoin
    Wiki, 2018) is a new blockchain ecosystem consists of 1000 Eco Farms. It designed
    to create a global marketplace of food and agricultural products. The Foodcoin
    system is working through the use of smart contracts and verifying food transactions
    based on a cryptocurrency called Foodcoin (FOOD). In order to develop the FOOD
    ecosystem, the FOOD tokens will be created on the Ethereum blockchain, where it
    can be used as a colored token currency (Rosenfeld, 2012) to purchase or sell
    food products. The implementation of the FoodCoin Ecosystem is based on seven
    subsystems (Bitcoin Wiki, 2018): 1. Distributed database in a distributed ledger
    2. The Foodcoin (FOOD) 3. Multi-functional crypto wallet called (WALLOK). 4. Payment
    system called (DiPay). 5. Participant verification called DIGID 6. Multi-signature
    (Multisig)-based smart contracts systems called (Smaco). 7. Food Product authentication
    system called (Product Orgin ID (PRORID)) There are also similar blockchain platforms
    that can be utilized in food industry and supply chain such as ’Ambrosus’, ’TE-Food’,
    and ’Ripe.io’,Cook, 2018). 5) AppliFarm is a leading blockchain platform which
    founded in 2017 by Neovia combines (Neovia, 2019). It can be utilized for providing
    digital proof of animal welfare, and livestock grazing (Carole, 2018). It is able
    to track livestock data within the animal production sector. Placing linked tags
    around the cows’necks, that identifies the areas in which they graze, enough digital
    data can be gathered to guarantee high-quality grazing. For instance, presence
    in grazing, the number of actual pasture days, pasture changes, etc. Moreover,
    the Applifarm system can ensure the dependency of monitored livestock farms with
    animal welfare requirements. Moreover, animal welfare digital data is integrated
    into the AppliFarm platform and accessible by stakeholders at any time. AppliFarm
    is well ahead of the market and already operational for #meat, #dairy and #cattle.
    Another application of Applifarm is the guarantee of tracked livestock farms provides
    GMO-free feed for their animals. 5. Challenges and open issues Adopting blockchain
    in precision agriculture is in its early phases. Most agricultural projects are
    less than two years old, and none of those projects are recently more than 1,000
    beneficiaries. Moreover, pilot and small scale blockchain projects are started
    in a limited number of countries around the world. 93% of these projects are either
    in concept stage or have started a small pilot and 7% of these projects don’t
    have available information (Galen et al., 2019). Fig. 20 summarises the current
    status of blockchain-based projects in the precision agriculture. Download : Download
    high-res image (181KB) Download : Download full-size image Fig. 20. Recent status
    of blockchain projects in precision agriculture. In precision agriculture, Merging
    blockchain technology with IoT as well as other techniques such as Radio Frequency
    Identification (RFID) (Ali and Haseeb, 2019), Cyber-Physical Systems (CPS) (Hu
    et al., 2012), and 4G/5G broadband communications (Dahlman et al., 2016, Agiwal
    et al., 2019) faces several important challenges and requires more research work
    (Fernáez-Caramés and Fraga-Lamas, 2018). Developing IoT networks and applications
    in precision agriculture based on blockchain technology is a complex process and
    leads to more challenges and open questions. The next subsection discusses these
    challenges in some details. 5.1. Privacy and security challenges Although the
    P2P design and time stamping-based transactions of blockchain make IoT networks
    are more secure against a lot of attacks, blockchain-based IoT systems and networks
    still suffer from four major attacks: Denial of Services (DoS) attacks (Kolias
    et al., 2017), Sybil Attacks (Zhang et al., 2014), Eclipse Attacks (Nayak et al.,
    2016), and Routing Attacks (Apostolaki et al., 2017). DoS is a cyber-attack in
    which the adversary tries to compromise the availability of an IoT device or a
    network device to the authenticated users. For example, the attacker can create
    this attack by sending a fake connection to the blockchain network to deceives
    the authenticated users and prevents them to mine the valid tokens of a digital
    asset. DoS can target blockchain-based IoT systems through different types such
    as Distributed Denial of Services (DoS), in which the adversary uses thousands
    of fake IP address to flood IoT nodes with streams of bits to make it unable to
    correctly respond. The common instances of DDoS attacks are SYN flooding, smurf,
    and Fraggle (Bhattacharyya and Kalita, 2016). An application-layer DDoS attack
    (Beitollahi and Deconinck, 2012) is another form of DDoS attack where the adversary
    target application-layer functions and features in blockchain-based IoT systems.
    For example, disrupting the farming functions of farmers’accounts for dropping
    the smart wallet system in COIN22 blockchain (Sylvester, 2019). DDoS Extortion
    (Dragomiretskiy, 2018), A Challenge Collapsar (CC) attack (Chun-Tao et al., 2012),
    Permanent Denial-of-Service (PDoS) or Phlasing attack (Leyden, 2019), Shrew Attack
    (Mahjabin, 2018), Slow Read Attack (Park et al., 2015), Mirai Botnet (Kolias et
    al., 2017), Teardrop Attack (Shekhar, 2016), and RUDY attack (Najafabadi et al.,
    2016) are another examples of DoS attacks that can be executed on blockchain-based
    IoT networks in e-agriculture systems. There are some techniques to limit the
    probability of success of DoS attacks but it is very tough to completely remove
    it. One of these techniques is Application Front-End Hardware (O’Dell, 2009).
    It can be used as smart hardware which works as a firewall for IoT networks for
    verifying data packets before traffic reaches the blockchain system. Blackholoing
    and Sinkholing (Xie and Ettema, 2016) is another DoS defense technique. Blackhole
    Routing can be utilized for protecting blockchain-based IoT system in e- agricultural
    against DoS attacks where all packet traffic to the attacked IoT device, DNS or
    IP address is sent to a ”black hole” (e.g. non-existent server). on the other
    hand, Sinkholing Routing can be used to routes traffic to a valid IP address of
    IoT device or server which analyzes traffic and rejects bad packets, however,
    Sinkholing technique is not efficient for most severe attacks. Intrusion Prevention
    System (IPS) (Rodas and To, 2015) is another DoS defense technique that works
    efficiently on attack recognition, however, it is not able to block behavior-based
    DoS attacks. One of the serious attacks that targets blockchain-based IoT networks
    in precision agriculture systems is Sybil attacks (Zhang et al., 2014). In this
    attack scenario, the attacker seeks to use fake IoT nodes or fake sensors by duplicating
    their identities to set up fake connections in the blockchain-based IoT networks.
    The honest IoT nodes become unable to distinguish between valid and valid connections.
    Detecting such attacks is a very hard task, but unfortunately, they do occur.
    For example, the Swiss-based company Chainalysis that provides blockchain services
    created over 250 fake Bitcoin nodes to harvest information about transactions
    propagating over the network (Caffyn, 2019). Although there are some countermeasures
    can be used for decreasing the chance of succeeding Sybil attacks, there isn’t
    a way to eliminate them. Verifying node identities and detecting fake nodes using
    Finite Automat can be utilized in IoT networks for detecting Sybil nodes (Meligy
    et al., 2017). Sybil Guard (Yu et al., 2008), Sybil Infer (Danezis and Mittal,
    2009) are other techniques that can be utilized to defend against Sybil attack.
    moreover, Sybil resistant for bitcoin (Bissias et al., 2014) can be used to address
    Sybil attacks, denial-of-service attacks, and timing-based inference attacks.
    Sybil belief (Gong et al., 2014) also is another Sybil attacks defender which
    based on a semi-supervised learning algorithm. 1) Eclipse Attack (Nayak et al.,
    2016) is another attack in which the adversary aims to obscure certain nodes from
    the entire P2P network. The attack scenario monopolizes an IoT node’s connections
    so that it cannot receive data from any nodes other than the attacking nodes.
    In contrast to Sybil attacks, Eclipse attacks mainly target single IoT nodes rather
    than the entire network at once. The attacking node could easily execute double-spending
    transactions with the blockchain system. This can easily be done by sending a
    transaction showing proof of payment to the victim IoT node, obscuring it from
    the network, then finally sending another transaction to the entire network spending
    the same tokens again. In this way, the victim node becomes isolated and only
    receives data from the malicious nodes until to drop it (Wst and Gervais, 2016).
    There have been multiple countermeasures discussed that may reduce the success
    of eclipse attacks. Most of them propose how a specific IoT node locally stores
    IP addresses that it will use to later reconnect to the network or set an upper
    limit on the number of incoming TCP connections (Marcus et al., 2018). However,
    there is no effective way to completely remove the Eclipse attacks (Fantacci et
    al., 2009). 2) Routing attack is the last attack model that target blockchain-based
    IoT networks. The attacker seeks to intercept messages propagating between IoT
    devices and tamper these messages before sending them to the peers in the network
    (Wallgren et al., 2013). Routing attacks can be executed through two models: 1)
    Portioning attacks, in which the adversary divides the network into two or more
    disjoint groups by hijacking a bridge node between two groups of networks. 2)
    Delay attack in which the adversary intercepts the propagated messages, tamper
    with them and finally propagate them again to the network (Apostolaki et al.,
    2017). Routing attacks cannot completely be prevented, however, there are some
    countermeasures that may reduce its success on blockchain-based IoT networks.
    For example, diversifying the connections between IoT nodes based on dynamic topologies
    will prevent the attacker to hijack the bridge nodes between two sub-networks
    topologies (Lu, 2014). Another technique is to monitor the network features such
    as Round-Trip Time (RTT) (Tun and Thein, 2008) and detect anomalous patterns.
    3) Privacy preserving is another challenge in blockchain-based IoT network systems
    (Fernáez-Caramés and Fraga-Lamas, 2018). All IoT devices and participants are
    authenticated by their public key or a hash value with the blockchain. The anonymity
    is not ensured and, since all transactions are shared publicly, there is a likelihood
    for the attacker to analyze such transactions and infer the real identities of
    the IoT nodes. This makes the privacy is a complex challenge and open problem.
    For addressing privacy challenges, some limited techniques are proposed for mitigating
    privacy issues. Permission blockchain (Nikkil et al., 2010) can be utilized for
    issuing digital certificates for identifying the identities of IoT devices. Extracting
    device signature automatically can be used for authenticating IoT applications
    and its users (Dorri et al., 2017). Blockchain-based multi-level mechanisms (Li
    and Zhang, 2017) can be utilized also to define a set of access lists and access
    rights for authorizing user/device access. Privacy can also be improved through
    zero-knowledge proof techniques such as Zerocoin (Miers et al., 2013) and Zerocash
    (Sasson et al., 2014). However, these techniques still vulnerable to other attack
    patterns (Peng, 2012). 5.2. Blockchain size and energy consumption Due to the
    continuous transactions with blockchain, blockchain tends to grow rapidly and
    block size will increase. This leads to larger download times and the need for
    a larger memory space for mining purposes (Fernáez-Caramés and Fraga-Lamas, 2018).
    Moreover, a lot of IoT devices must store large volumes of data that are not interesting
    to them. this leads to a waste of computational power and resources. This issue
    can be addressed by using lightweight blockchain (Gruber et al., 2018). However,
    this approach requires designing a hierarchical and centralized blockchain system.
    An alternative approach to address the block size growth is mini-blockchain (França,
    2019). This approach is working through the use of an accounting tree, which registers
    only the recent status of every node linked to the blockchain. Also, block size
    has to be scaled according to the bandwidth limitations. Many small transactions
    would increase energy consumption, while a few large ones may involve big payloads
    that cannot be processed by some IoT devices (Fernáez-Caramés and Fraga-Lamas,
    2018). Moreover, energy consumption is a major factor in blockchain-based IoT
    computing since most IoT nodes are powered by batteries. Therefore, energy efficiency
    is a major aspect of keeping long-time computing of IoT nodes. Energy consumption
    can result during blockchain mining operations (Truby, 2018) and P2P communication
    (Zhou et al., 2014). Proof of Stake (King and Nadal, 2012) and Proof of Space
    (Dziembowski et al., 2015) are good algorithms for solving energy-consuming problems
    during mining processes. Mini-blockchain (França, 2019) is also a good choice
    to reduce energy consumption during P2P communications. Moreover, the cryptographic
    techniques such as Scrypt (Asolo, 2018) or Myriad and multi-algorithm mining (CoinBrief,
    2018) are faster and thus can be utilized for reducing mining energy consumption.
    5.3. Complex technical challenges There are still unsolved technical challenges
    that can oppose designing blockchain-based IoT network systems in precision agriculture
    (Nikkil et al., 2010). Some of these challenges can be summarized as follows:
    1) Storage capacity and scalability. In the context of IoT-based e-agricultural
    applications the scalability limitations are much difficult to address. Blockchain
    may appear to be not appropriate for IoT models. With IoT communication, IoT nodes
    can send gigabytes (GBs) of data in real-time. This attribute represents a solid
    barrier against the blockchain and IoT integration model. The known blockchain
    platforms can only manipulate a few numbers of transactions per second. So this
    could lead to a potential bottleneck for IoT systems. Moreover, blockchain is
    not designed to store large amounts of data, So, scaling blockchain to serve thousands
    of different heterogeneous devices is a big technical challenge (Khan and Salah,
    2018). 2) Blockchain Forking. Forking is a common technical problem with blockchain.
    It occurs when two peers (i.e. miners) add two right blocks to the chain at the
    same time. This situation is called ”Blockchain forking” (Spanos et al., 2017).
    All known blockchain protocols solve the forking problem with a simple rule: The
    longest chains of blocks is the right one. When we have blockchain fork, some
    IoT-peers will start mining through one branch of the chain, and the other peers
    mine through the other chain. Definably, one chain will have more miners than
    the other, and as such, will insert new blocks to their chain faster. The rest
    of the miners will then switch over to the longer chain and the forked chain will
    always die out. Hence, A specific IoT device miner must be programmed to doesn’t
    execute a transaction on a forked blockchain. The Conventional rule said that
    it is therefore wise to wait for 6 blocks to really verify and confirm a specific
    transaction (Cryptohelp, 2018). Blockchain forking can create confusion, fake
    transactions, technical challenges, and economic uncertainty. Some new blockchains
    platforms such as Tezos (Fernandes and Alexandre, 2019) suggest formal design
    structures of blockchain systems to decrease the risk of occurring blockchain
    forking. 3) Latency and Throughput. Due to developing many topologies of IoT networks,
    developing blockchain-based IoT networks requires rapid processing for a variety
    of transaction patterns per time unit. This represents a great challenge in IoT
    networks regarding throughput. For example, Bitcoin’s blockchain can execute a
    maximum of 7 transactions per second (Vukolic, 2015) while VISA network (VisaNet)
    able to process 100,000 transactions per minute (Vermeulen, 2016). Latency is
    another challenge related to the time required by the blockchain algorithm to
    create a novel block in the chain. For example, in the case of Bitcoin, block
    creation times take a 10-min mean according to Poisson distribution (Fernáez-Caramés
    and Fraga-Lamas, 2018), while latency requires only a few seconds in the case
    of VISA blockchain (Vermeulen, 2016). Hence, developing an optimal blockchain-based
    on IoT network with rapid throughput and low latency represents an open problem.
    4) Multi-chain Management. In some cases, professionals and blockchain engineers
    need to configure more than one blockchain platform for different purposes in
    an IoT network (Lee and Kim, 2008). For example, in smart agricultural system,
    Foodcoin (Bitcoin Wiki, 2018) is used to manage food supply chain transactions,
    COIN22 (Sylvester, 2019) is used to manage financial transactions between farmers,
    and AppliFarm (Neovia, 2019) can be used to monitor animal welfare, livestock
    grazing. Configuring more blockchain platforms in a standalone system leads to
    more security, privacy, scalability, operability, and monitoring problems. Moreover,
    the collaborative implementations and the use of collaborative standardization
    regarding consensus protocols, authentication, authorizations, and encryption
    algorithms are needed for managing multi-chain platforms (Fernáez-Caramés and
    Fraga-Lamas, 2018). 6. Concluding remarks This survey study was designed to investigate
    the importance of integrating the Internet of Things (IoT) and blockchain technologies
    in developing smart systems, and applications in precision agriculture. This technological
    integration has shown that blockchain can introduce novel solutions for chronic
    security and performance challenges in IoT-based precision agricultural systems.
    The significant findings of this study can be summarized into four contributions.
    Firstly, the study reviewed considerable solutions by which blockchain can solve
    many security and performance challenges of IoT-based network systems in precision
    agriculture. Secondly, the study proposed new blockchain models that can be implemented
    in the most important five uses cases in precision agriculture. Using these models,
    blockchain can be integrated with IoT for mitigating many challenges in internet
    of farms and crop overseeing, supply chain, food safety, land registration, and
    financial transaction between farmers with each other or between farmers and agricultural
    organizations. Thirdly, the study reviewed and discussed the most common blockchain
    platforms used to digitally manage various subsectors in precision agriculture,
    such as crops overseeing, livestock grazing, and food supply chain. Finally, the
    study discussed some of security and privacy challenges, and blockchain-open issues
    that obstacles developing blockchain-IoT systems in precision agriculture. Before
    this study, a lot of research work discussed the integration between IoT and blockchain
    as abstract technologies, but this study is one of the first research attempts
    that investigated how this integration between IoT and blockchain can be implemented
    in precision agriculture domain. Further research work is needed to be carried
    out in order to validate the proposed blockchain solutions and implement the conceptual
    models introduced in this study. Moreover, additional research should focus on
    investigating more blockchain platforms used in precision agriculture and conducting
    a comparison study under some major criteria in deeper analysis and assessment.
    Finally, more research work is also needed to examine more closely the link between
    blockchain and IoT in additional use cases in precision agriculture technology.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. References 5G? IoT, 2019 5G? IoT.
    Energy Consumption from the Internet of Things and Wireless. [online]. Available:https://whatis5g.info/energy-consumption/
    (Accessed 15/5/2019). Google Scholar Agiwal et al., 2019 M. Agiwal, N. Saxena,
    A. Roy Towards connected living: 5g enabled internet of things (iot) IETE Tech.
    Rev., 36 (2) (2019), pp. 190-202 CrossRefView in ScopusGoogle Scholar Agridigital,
    2019 Agridigital. What is AgriDigital?. [online]. Available:https://knowledgebase.agridigital.io/hc/en-us/articles/226461448-What-is-AgriDigital
    (Accessed 29/5/2019). Google Scholar Ahmed et al., 2018 N. Ahmed, D. De, I. Hussain
    Internet of Things (IoT) for smart precision agriculture and farming in rural
    areas IEEE Internet Things J., 5 (6) (2018), pp. 4890-4899 CrossRefView in ScopusGoogle
    Scholar Alexandru and Chami, 2019 Alexandru, O., Chami, A., 2019. Using blockchain
    to make land registry more reliable in India. [online]. Available:https://www.undp.org/content/undp/en/home/blog/2018/Using-blockchain-to-make-land-registry-more-reliable-in-India.html
    (Accessed 21/5/2019). Google Scholar Ali and Haseeb, 2019 A. Ali, M. Haseeb Radio
    frequency identification (RFID) technology as a strategic tool towards higher
    performance of supply chain operations in textile and apparel industry of Malaysia
    Uncertain Supply Chain Manage., 7 (2) (2019), pp. 215-226 CrossRefView in ScopusGoogle
    Scholar Al-Jaroodi and Mohamed, 2019 J. Al-Jaroodi, N. Mohamed Blockchain in industries:
    a survey IEEE Access, 7 (2019), pp. 36500-36515 CrossRefView in ScopusGoogle Scholar
    Aman Soni, 2018 Aman Soni, 2018. Could The Blockchain Passport Revolutionize the
    Travel Industry?. [online]. Available:https://businessblockchainhq.com/blockchain-trends/could-the-blockchain-passport-revolutionize-the-travel-industry/
    (Accessed 28/4/2019). Google Scholar Anand et al., 2016 A. Anand, M. McKibbin,
    F. Pichel Colored coins: bitcoin, blockchain, and land administration Annual World
    Bank Conference on Land and Poverty (2016) Google Scholar ANN, 2019 [ANN] Hayekoin
    The First Proof of Luck Distribution. [online]. Available:https://bitcointalk.org/index.php?topic=1087219.0
    (Accessed 27/4/2019). Google Scholar Apostolaki et al., 2017 Apostolaki, M., Zohar,
    A., Vanbever, L., 2017. Hijacking bitcoin: routing attacks on cryptocurrencies.
    In: 2017 IEEE Symposium on Security and Privacy (SP). IEEE, pp. 375–392. Google
    Scholar Asolo, 2018 Asolo, B., 2018. Litecoin Scrypt Algorithm Explained. [online].
    Available:https://www.mycryptopedia.com/litecoin-scrypt-algorithm-explained/ (Accessed
    3/6/2019). Google Scholar Azaria et al., 2016 Azaria, A., Ekblaw, A., Vieira,
    T., Lippman, A., 2016. Medrec: using blockchain for medical data access and permission
    management. In: 2016 2nd International Conference on Open and Big Data (OBD).
    IEEE, pp. 25–30. Google Scholar Baars, 2016 Baars, D.S., 2016. Towards self-sovereign
    identity using blockchain technology (Master’s thesis), University of Twente.
    Google Scholar Bach et al., 2018 Bach, L.M., Mihaljevic, B., Zagar, M., 2018.
    Comparative analysis of blockchain consensus algorithms. In: 2018 41st International
    Convention on Information and Communication Technology, Electronics and Microelectronics
    (MIPRO). IEEE, pp. 1545–1550. Google Scholar Bach et al., 2018 L.M. Bach, B. Mihaljevic,
    M. Zagar Comparative analysis of blockchain consensus algorithms 2018 41st International
    Convention on Information and Communication Technology, Electronics and Microelectronics
    (MIPRO), IEEE (2018), pp. 1545-1550 CrossRefView in ScopusGoogle Scholar Barbieri
    and Gassen, 2017 Barbieri, M., Gassen, D., 2017. Blockchain-can this new technology
    really revolutionize the land registry system?. Notaries of Europe. Google Scholar
    Beitollahi and Deconinck, 2012 H. Beitollahi, G. Deconinck Tackling application-layer
    DDoS attacks Procedia Comput. Sci., 10 (2012), pp. 432-441 View PDFView articleView
    in ScopusGoogle Scholar Benet, 2014 Benet, J., 2014. Ipfs-content addressed, versioned,
    p2p file system. arXiv preprint arXiv:1407.3561. Google Scholar Bentov et al.,
    2014 I. Bentov, C. Lee, A. Mizrahi, M. Rosenfeld proof of activity: extending
    bitcoin’s proof of work via proof of stake [extended abstract] y ACM SIGMETRICS
    Perf. Eval. Rev., 42 (3) (2014), pp. 34-37 CrossRefView in ScopusGoogle Scholar
    Bergerman et al., 2015 M. Bergerman, S.M. Maeta, J. Zhang, G.M. Freitas, B. Hamner,
    S. Singh, G. Kantor Robot farmers: autonomous orchard vehicles help tree fruit
    production IEEE Robot. Autom. Mag., 22 (1) (2015), pp. 54-63 View in ScopusGoogle
    Scholar Bermeo-Almeida et al., 2018 Bermeo-Almeida, O., Cardenas-Rodriguez, M.,
    Samaniego-Cobo, T., Ferruzola-Gámez, E., Cabezas-Cabezas, R., Bazán-Vera, W.,
    2018. Blockchain in agriculture: a systematic literature review. In: International
    Conference on Technologies and Innovation. Springer, Cham, pp. 44–56. Google Scholar
    Bhattacharyya and Kalita, 2016 Bhattacharyya, D.K., Kalita, J.K., 2016. DDoS Attacks:
    Evolution, Detection, Prevention, Reaction, and Tolerance. Chapman and Hall/CRC.
    Google Scholar BIS Research, 2018 BIS Research, 2018. Global Blockchain in Agriculture
    & Food Market – Analysis and Forecast, 2018–2028.https://bisresearch.com/industry-report/blockchain-in-agriculture-and-food-market.html
    (Accessed 19/4/2019). Google Scholar Bissias et al., 2014 Bissias, G., Ozisik,
    A.P., Levine, B.N., Liberatore, M., 2014. Sybil-resistant mixing for bitcoin.
    In: Proceedings of the 13th Workshop on Privacy in the Electronic Society. ACM,
    pp. 149–158. Google Scholar Bitcoin Wiki, 2018 BitcoinWiki, 2018. Foodcoin. [online].
    Available:https://en.bitcoinwiki.org/wiki/Foodcoin (Accessed 1/6/2019). Google
    Scholar Bordel et al., 2018 Bordel, B., Lebigot, P., Alcarria, R., Robles, T.,
    2018. Digital food product traceability: using blockchain in the International
    Commerce. In: The 2018 International Conference on Digital Science. Springer,
    Cham, pp. 224–231. Google Scholar Brennan, 2017 Brennan, B., 2017. Robomed – blockchain
    powered medical care using smart contracts. [online]. Available:https://blockchainhealthcarereview.com/robomed-blockchain-powered-medical-care-using-smart-contracts/
    (Accessed 28/4/2019). Google Scholar Buchman, 2016 Buchman, E., 2016. Tendermint:
    byzantine fault tolerance in the age of blockchains (Doctoral dissertation). Google
    Scholar Buchmann et al., 2017 Buchmann, N., Rathgeb, C., Baier, H., Busch, C.,
    Margraf, M., 2017. Enhancing breeder document long-term security using blockchain
    technology. In: 2017 IEEE 41st Annual Computer Software and Applications Conference
    (COMPSAC), vol. 2, IEEE, pp. 744–748. Google Scholar Caffyn, 2019 Caffyn, G. Chainalysis
    CEO Denies ’Sybil Attack’ on Bitcoin’s Network. [online]. Available:https://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network
    (Accessed 3/6/2019). Google Scholar Car, 2018 N.J. Car USING decision models to
    enable better irrigation Decision Support Systems Comput. Electron. Agric., 152
    (2018), pp. 290-301 View PDFView articleView in ScopusGoogle Scholar Caro et al.,
    2018 Caro, M.P., Ali, M.S., Vecchio, M., Giaffreda, R., 2018. Blockchain-based
    traceability in Agri-Food supply chain management: a practical implementation.
    In: 2018 IoT Vertical and Topical Summit on Agriculture-Tuscany (IOT Tuscany).
    IEEE, pp. 1–4. Google Scholar Carole, 2018 Carole, 2018. Tracability applications
    with blockchain by Applifarm.https://www.applifarm.io/blog/en/tracability-applications-with-blockchain-by-applifarm
    (Accessed 1/6/2019). Google Scholar Casado-Vara et al., 2018 R. Casado-Vara, J.
    Prieto, F. De la Prieta, J.M. Corchado How blockchain improves the supply chain:
    case study alimentary supply chain Procedia Comput. Sci., 134 (2018), pp. 393-398
    View PDFView articleView in ScopusGoogle Scholar Chang and Svetinovic, 2016 Chang,
    T.H., Svetinovic, D., 2016. Data analysis of digital currency networks: namecoin
    case study. In: 2016 21st International Conference on Engineering of Complex Computer
    Systems (ICECCS). IEEE, pp. 122–125. Google Scholar Chavez-Dreyfuss, 2016 G. Chavez-Dreyfuss
    Sweden tests blockchain technology for land registry Reuters (2016), p. 16 Google
    Scholar Cheein and Carelli, 2013 F.A. Cheein, R. Carelli Agricultural robotics:
    unmanned robotic service units in agricultural tasks IEEE Ind. Electron. Mag.,
    7 (3) (2013), pp. 48-58 Google Scholar Chen et al., 2017 Chen, S., Shi, R., Ren,
    Z., Yan, J., Shi, Y., Zhang, J., 2017. A blockchain-based supply chain quality
    management framework. In: 2017 IEEE 14th International Conference on e-Business
    Engineering (ICEBE). IEEE, pp. 172–176. Google Scholar Chen et al., 2017 Chen,
    L., Xu, L., Shah, N., Gao, Z., Lu, Y., Shi, W., 2017. On security analysis of
    proof-of-elapsed-time (poet). In: International Symposium on Stabilization, Safety,
    and Security of Distributed Systems. Springer, Cham, pp. 282–297. Google Scholar
    Chiang and Zhang, 2016 M. Chiang, T. Zhang Fog and IoT: an overview of research
    opportunities IEEE Internet Things J., 3 (6) (2016), pp. 854-864 View in ScopusGoogle
    Scholar Chinaka, 2016 Chinaka, M., 2016. Blockchain technology–applications in
    improving financial inclusion in developing economies: case study for small scale
    agriculture in Africa (Doctoral dissertation, Massachusetts Institute of Technology).
    Google Scholar Chlingaryan et al., 2018 A. Chlingaryan, S. Sukkarieh, B. Whelan
    Machine learning approaches for crop yield prediction and nitrogen status estimation
    in precision agriculture: a review Comput. Electron. Agric., 1 (151) (2018), pp.
    61-69 View PDFView articleView in ScopusGoogle Scholar Chohan, 2017 Chohan, U.W.,
    2017. The Double Spending Problem and Cryptocurrencies. Available at SSRN 3090174.
    Google Scholar Chohan, 2019 Chohan, U.W., 2017. A history of Dogecoin. Discussion
    Series: Notes on the 21st Century. [online]. Available:https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3091219
    (Accessed 27/4/2019). Google Scholar Chun-Tao et al., 2012 Chun-Tao, X., Xue-Hui,
    D., Li-Feng, C., Hua-Cheng, C., 2012. An algorithm of detecting and defending
    CC attack in real time. In: 2012 International Conference on Industrial Control
    and Electronics Engineering. IEEE, pp. 1804–1806. Google Scholar CoinBrief, 2018
    CoinBrief, 2018. What is Myriadcoin? How is Multi-Algo Mining Special?. [online].
    Available:https://99bitcoins.com/what_is_myriadcoin/ (Accessed 3/6/2019). Google
    Scholar CoinCheckup, 2019 CoinCheckup. Slimcoin project purpose and description.
    [online]. Available:https://coincheckup.com/coins/slimcoin/purpose (Accessed 24/4/2019).
    Google Scholar Cook, 2018 Cook, J., 2018.12 blockchain food & agriculture companies
    in their own words. [online]. Available:https://medium.com/lokaal/12-blockchain-food-agriculture-companies-in-their-own-words-71f8398252eb
    (Accessed 1/6/2019). Google Scholar Cryptohelp, 2018 Cryptohelp, 2018. Why Wait
    For 6 Confirmations?. [online]. Available:https://cryptohelp.ch/why-wait-for-6-confirmations/
    (Accessed 3/6/2019). Google Scholar Dahlman et al., 2016 E. Dahlman, S. Parkvall,
    J. Skold 4G, LTE-advanced Pro and the Road to 5G Academic Press (2016) Google
    Scholar Danezis and Mittal, 2009 Danezis, G., Mittal, P., 2009. SybilInfer: detecting
    sybil nodes using social networks. In: NDSS. pp. 1–15. Google Scholar Daniel Sontag,
    2019 Daniel Sontag. Industrial IoT vs. Industry 4.0 vs. Industry 5.0?. [online].
    Available:https://medium.com/the-industry-4-0-blog/industrial-iot-vs-industry-4-0-vs-industry-5-0-a5f9541da036
    (Accessed 28/4/2019). Google Scholar Darwish et al., 2017 A. Darwish, A.E. Hassanien,
    M. Elhoseny, A.K. Sangaiah, K. Muhammad The impact of the hybrid platform of internet
    of things and cloud computing on healthcare systems: opportunities, challenges,
    and open problems J. Ambient Intell. Human. Comput. (2017) 1–6 Google Scholar
    David, 2019 David, R., 2019. New Tool for Mobile App Development in 2019: Blockchain.
    [online]. Available:https://adtmag.com/articles/2019/01/14/blockchain-mobile.aspx
    (Accessed 25/5/2019). Google Scholar De Clercq et al., 2018 De Clercq, M., Vats,
    A., Biel, A., 2018. Agriculture 4.0: The Future of Farming Technology. Proceedings
    of the World Government Summit, Dubai, UAE, pp. 11–13. Google Scholar Digital
    Social Innovation, 2019 Digital Social Innovation, Provenance. [online]. Available:https://digitalsocial.eu/case-study/6/provenance
    (Accessed 29/5/2019). Google Scholar Dorri et al., 2017 Dorri, A., Kanhere, S.S.,
    Jurdak, R., 2017. Towards an optimized blockchain for IoT. In: Proceedings of
    the Second International Conference on Internet-of-Things Design and Implementation.
    ACM, pp. 173–178. Google Scholar Dos Santos et al., 2019 U.J. Dos Santos, G. Pessin,
    C.A. da Costa, R. da Rosa Righi AgriPrediction: a proactive internet of things
    model to anticipate problems and improve production in agricultural crops Comput.
    Electron. Agric., 1 (161) (2019), pp. 202-213 View PDFView articleView in ScopusGoogle
    Scholar Dragomiretskiy, 2018 Dragomiretskiy S., 2018. The influence of DDoS attacks
    on cryptocurrency exchanges (Bachelor’s thesis, University of Twente). Google
    Scholar Dujak and Sajter, 2019 Dujak, D., Sajter, D., 2019. Blockchain applications
    in supply chain. In: SMART Supply Network. Springer, Cham, pp. 21–46. Google Scholar
    Dziembowski et al., 2015 Dziembowski, S., Faust, S., Kolmogorov, V., Pietrzak,
    K., 2015. Proofs of space. In: Annual Cryptology Conference. Springer, Berlin,
    Heidelberg, pp. 585–605. Google Scholar Elavarasan et al., 2018 D. Elavarasan,
    D.R. Vincent, V. Sharma, A.Y. Zomaya, K. Srinivasan Forecasting yield by integrating
    agrarian factors and machine learning models: a survey Comput. Electron. Agric.,
    1 (155) (2018), pp. 257-282 View PDFView articleView in ScopusGoogle Scholar El
    Baki et al., 2018 H.M. El Baki, H. Fujimaki, I. Tokumoto, T. Saito A new scheme
    to optimize irrigation depth using a numerical model of crop response to irrigation
    and quantitative weather forecasts Comput. Electron. Agric., 150 (2018), pp. 387-393
    Google Scholar Eric Weiss, 2019 Eric Weiss, 2019. ShoCard Delivers Proof of Identity
    with Blockchain eSignature Platform. [online]. Available:https://mobileidworld.com/shocard-delivers-proof-identity-blockchain-esignature-platform/
    (Accessed 27/4/2019). Google Scholar Eyal et al., 2016 Eyal, I., Gencer, A.E.,
    Sirer, E.G., Van Renesse, R., 2016. Bitcoin-ng: a scalable blockchain protocol.
    In: Proc. 13th USENIX Symp. on Networked Syst. Design Implementation. NSDI’16,
    pp. 45–59. Google Scholar Fantacci et al., 2009 Fantacci, R., Maccari, L., Rosi,
    M., Chisci, L., Aiello, L.M., Milanesio, M., 2009. Avoiding eclipse attacks on
    Kad/Kademlia: an identity based approach. In: 2009 IEEE International Conference
    on Communications. IEEE, pp. 1–5. Google Scholar Fernáez-Caramés and Fraga-Lamas,
    2018 T.M. Fernáez-Caramés, P. Fraga-Lamas A review on the use of blockchain for
    the Internet of Things IEEE Access, 6 (2018), pp. 32979-33001 Google Scholar Fernandes
    and Alexandre, 2019 M. Fernandes, L.A. Alexandre Robotchain: using tezos technology
    for robot event management Ledger (2019), p. 4 CrossRefGoogle Scholar Filatov,
    2019 Filatov, T., 2019. Provenance. Tracking origin via blockchain. [online].
    Available:https://www.dappros.com/201901/provenance-tracking-origin-via-blockchain/
    (Accessed 29/5/2019). Google Scholar Fourquadrant, 2019 Fourquadrant. Gartner
    IT Spending Forecast.https://www.fourquadrant.com/gartner-it-spending-forecast/
    (Accessed 28/4/2019). Google Scholar França, 2019 França, B.F. Homomorphic mini-blockchain
    scheme. [online]. Available:http://cryptonite.info/files/HMBC.pdf (Accessed 3/6/2019).
    Google Scholar Frankenfield, 2018 Frankenfield, J., 2018. Proof of Burn (Cryptocurrency).
    [online]. Available:https://www.investopedia.com/terms/p/proof-burn-cryptocurrency.aspp
    (Accessed 28/3/2019). Google Scholar Galen et al., 2019 Galen, D., Brand, N.,
    Boucherle, L., Davis, R., Do, N., El-Baz, B., Kimura, I., Wharton, K., Lee, J.
    Blockchain for Social Impact: Moving Beyond the Hype. Center for Social Innovation,
    RippleWorks. [online]. Available:https://www.gsb.stanford.edu/sites/gsb/files/publication-pdf/study-blockchain-impact-moving-beyond-hype.pdf
    (Accessed 2/6/2019). Google Scholar Galvez et al., 2018 J.F. Galvez, J.C. Mejuto,
    J. Simal-Gandara Future challenges on the use of blockchain for food traceability
    analysis TrAC Trends Anal. Chem. (2018) Google Scholar Galvin, 2017 Galvin, D.,
    2017. IBM and Walmart: Blockchain for Food Safety. PowerPoint presentation. Google
    Scholar Gary Davis, 2019 Gary Davis. Meet IoT_reaper: The New Malware Building
    a Massive Botnet Army. [online]. Available:https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/iot_reaper/
    (Accessed 1/5/2019). Google Scholar Ge et al., 2017 L. Ge, C. Brewster, J. Spek,
    A. Smeenk, J. Top, F. van Diepen, B. Klaase, C. Graumans, M.D. de Wildt Blockchain
    for agriculture and food: findings from the pilot study Wageningen Econ. Res.
    (2017) Google Scholar Ge et al., 2017 Ge, L., Brewster, C., Spek, J., Smeenk,
    A., Top, J., van Diepen, F., Klaase, B., Graumans, C., de Wildt, M.D., 2017. Blockchain
    for Agriculture and Food: Findings from the Pilot Study. Wageningen Economic Research.
    Google Scholar Gibbs and Yordchim, 2014 T. Gibbs, S. Yordchim Thai perception
    on Litecoin value Int. J. Social Behav. Educ. Econ. Business Ind. Eng., 8 (8)
    (2014), pp. 2613-2615 Google Scholar Gong et al., 2014 N.Z. Gong, M. Frank, P.
    Mittal Sybilbelief: a semi-supervised learning approach for structure-based sybil
    detection IEEE Trans. Inf. Forensics Secur., 9 (6) (2014), pp. 976-987 View in
    ScopusGoogle Scholar Gruber et al., 2018 Gruber, D., Li, W., Karame, G., 2018.
    Unifying lightweight blockchain client implementations. In: Proc. NDSS Workshop
    on Decentralized IoT Security and Standards. Google Scholar Hileman and Rauchs,
    2017 Hileman, G., Rauchs, M., 2017. Global Cryptocurrency Benchmarking Study.
    Cambridge Centre for Alternative Finance. 33. Google Scholar Hitarshi, 2019 Hitarshi,
    B., 2019 Monitoring and management of blockchain networks.https://www.wipro.com/content/dam/nexus/en/service-lines/blockchain/latest-thinking/monitoring-and-management-of-blockchain-networks.pdf.
    Google Scholar Holotiuk, 2019 Holotiuk, F., Pisani, F., Moormann, J., 2019. The
    impact of blockchain technology on business models in the payments industry. AIS
    E Library. [online]. Available:https://aisel.aisnet.org/wi2017/track09/paper/6/
    (Accessed 29/5/2019). Google Scholar Hu et al., 2012 Hu, L., Xie, N., Kuang, Z.,
    Zhao, K., 2012. Review of cyber-physical system architecture. In: 2012 IEEE 15th
    International Symposium on Object/Component/Service-Oriented Real-Time Distributed
    Computing Workshops. IEEE, pp. 25–30. Google Scholar Huong et al., 2018 Huong,
    T.T., Thanh, N.H., Van, N.T., Dat, N.T., Van Long, N., Marshall, A., 2018. Water
    and energy-efficient irrigation based on markov decision model for precision agriculture.
    In: 2018 IEEE Seventh International Conference on Communications and Electronics
    (ICCE). IEEE, pp. 51–56. Google Scholar IBM, 2019 IBM. IBM Blockchain. Now delivering
    value around the world. [online]. Available:https://www.ibm.com/blockchain (Accessed
    1/6/2019). Google Scholar Ibrahim et al., 2019 H. Ibrahim, N. Mostafa, H. Halawa,
    M. Elsalamouny, R. Daoud, H. Amer, Y. Adel, A. Shaarawi, A. Khattab, H. ElSayed
    A layered IoT architecture for greenhouse monitoring and remote control SN Appl.
    Sci., 1 (3) (2019), p. 223 View in ScopusGoogle Scholar ICO Bench, 2019 ICO Bench.
    IOTW a New Blockchain for Green Mining on IoT Device. [online].https://icobench.com/ico/iotw
    (Accessed 28/3/2019). Google Scholar IOTW, 2019 IOTW. IOTW A Blockchain-Enabled
    IoT Data Platform, https://iotw.io/ (Accessed 26/4/2019). Google Scholar I-Scope,
    2019 I-Scope. Digital transformation technologies: IoT as the Internet of Transformation.
    [online]. Available:https://www.i-scoop.eu/digital-transformation/digital-transformation-technologies-iot/
    (Accessed 28/4/2019). Google Scholar I-Scope, 2019 I-Scope. Unstructured data:
    turning data into actionable intelligence. [online]. Availabe:https://www.i-scoop.eu/big-data-action-value-context/unstructured-data/
    (Accessed 28/4/2019). Google Scholar Jagyasi et al., 2013 Jagyasi, B., Mohite,
    J., Pappula, S., 2013. Applications of mobile sensing technologies in precision
    agriculture. CSI Commun, pp. 21–23. Google Scholar Jake Frankenfield, 2019 Jake
    Frankenfield. Proof of Capacity (Cryptocurrency). [online]. Available:https://www.investopedia.com/terms/p/proof-capacity-cryptocurrency.asp
    (Accessed 27/4/2019). Google Scholar Jeffrey Maxim, 2019 Jeffrey Maxim. Onename
    Launches Blockchain Identity Product Passcard. [online]. Available:https://bitcoinmagazine.com/articles/onename-launches-blockchain-identity-product-passcard-1431548450/
    (Accessed 27/4/2019). Google Scholar Jha et al., 2019 K. Jha, A. Doshi, P. Patel,
    M. Shah A comprehensive review on automation in agriculture using artificial intelligence
    Artif. Intell. Agric., Jun (2019), p. 17 CrossRefGoogle Scholar Kamath, 2018 R.
    Kamath Food traceability on blockchain: Walmart’s pork and mango pilots with IBM
    JBBA, 1 (1) (2018), p. 3712 Google Scholar Kambourakis et al., 2017 Kambourakis,
    G., Kolias, C., Stavrou, A., 2017. The mirai botnet and the iot zombie armies.
    In: MILCOM 2017–2017 IEEE Military Communications Conference (MILCOM). IEEE, pp.
    267–272. Google Scholar Kamilaris and Prenafeta-Bold, 2018 A. Kamilaris, F.X.
    Prenafeta-Bold Deep learning in agriculture: a survey Comput. Electron. Agric.,
    1 (147) (2018), pp. 70-90 View PDFView articleView in ScopusGoogle Scholar Kang
    and Chen, 2019 H. Kang, C. Chen Fruit detection and segmentation for apple harvesting
    using visual sensor in orchards Sensors, 19 (20) (2019), p. 4599 CrossRefView
    in ScopusGoogle Scholar Keybase, 2019 Keybase, Keybase is now writing to the Bitcoin
    blockchain. [online]. Available:https://keybase.io/docs/server_security_merkle_root_in_bitcoin_blockchain
    (Accessed 27/4/2019). Google Scholar Khanal et al., 2017 S. Khanal, J. Fulton,
    S. Shearer An overview of current and potential applications of thermal remote
    sensing in precision agriculture Comput. Electron. Agric., 15 (139) (2017), pp.
    22-32 View PDFView articleView in ScopusGoogle Scholar Khan and Salah, 2018 M.A.
    Khan, K. Salah IoT security: review, blockchain solutions, and open challenges
    Fut. Gen. Comput. Syst., 82 (2018), pp. 395-411 View PDFView articleView in ScopusGoogle
    Scholar Khattab et al., 2019 A. Khattab, S.E. Habib, H. Ismail, S. Zayan, Y. Fahmy,
    M.M. Khairy An IoT-based cognitive monitoring system for early plant disease forecast
    Comput. Electron. Agric., 1 (166) (2019), Article 105028 View PDFView articleView
    in ScopusGoogle Scholar Kim et al., 2015 Kim, S., Shin, Y., Ha, J., Kim, T., Han,
    D., 2015. A first step towards leveraging commodity trusted execution environments
    for network applications. In: Proceedings of the 14th ACM Workshop on Hot Topics
    in Networks. ACM, p. 7. Google Scholar King and Nadal, 2012 King, S., Nadal, S.,
    2012. Ppcoin: Peer-to-Peer Crypto-Currency with Proof-of-Stake, Self- Published
    Paper, August. [online]. Available:https://pdfs.semanticscholar.org/0db3/8d32069f3341d34c35085dc009a85ba13c13.pdf
    (Accessed 24/3/2019). Google Scholar Kocian et al., 2020 A. Kocian, D. Massa,
    S. Cannazzaro, L. Incrocci, S. Di Lonardo, P. Milazzo, S. Chessa Dynamic Bayesian
    network for crop growth prediction in greenhouses Comput. Electron. Agric., 1
    (169) (2020), Article 105167 View PDFView articleView in ScopusGoogle Scholar
    Koirala et al., 2019 A. Koirala, K.B. Walsh, Z. Wang, C. McCarthy Deep learning
    for real-time fruit detection and orchard fruit load estimation: benchmarking
    of ‘MangoYOLO’ Precis. Agric., 20 (6) (2019), pp. 1107-1135 CrossRefView in ScopusGoogle
    Scholar Kolias et al., 2017 C. Kolias, G. Kambourakis, A. Stavrou, J. Voas DDoS
    in the IoT: mirai and other botnets Computer, 50 (7) (2017), pp. 80-84 View in
    ScopusGoogle Scholar Kolias et al., 2017 C. Kolias, G. Kambourakis, A. Stavrou,
    J. Voas DDoS in the IoT: mirai and other botnets Computer, 50 (7) (2017), pp.
    80-84 View in ScopusGoogle Scholar Kolias et al., 2017 C. Kolias, G. Kambourakis,
    A. Stavrou, J. Voas DDoS in the IoT: mirai and other botnets Computer, 50 (7)
    (2017), pp. 80-84 View in ScopusGoogle Scholar Konic, 2019 Konic, M. Enabling
    Business to speak the same language with integrity. [online]. Available: https://origintrail.io/
    (Accessed 29/5/2019). Google Scholar Kosba et al., 2016 Kosba, A., Miller, A.,
    Shi, E., Wen, Z., Papamanthou, C., 2016. Hawk: the blockchain model of cryptography
    and privacy-preserving smart contracts. In: Proceedings of IEEE Symposium on Security
    and Privacy (SP), San Jose, CA, USA, pp. 839–858. Google Scholar Kothmayr et al.,
    2013 T. Kothmayr, C. Schmitt, W. Hu, M. Brnig, G. Carle DTLS based security and
    two-way authentication for the Internet of Things Ad Hoc Networks, 11 (8) (2013),
    pp. 2710-2723 View PDFView articleView in ScopusGoogle Scholar Kounalakis et al.,
    2018 Kounalakis, T., Malinowski, M.J., Chelini, L., Triantafyllidis, G.A., Nalpantidis,
    L., 2018. A robotic system employing deep learning for visual recognition and
    detection of weeds in Grasslands. In: 2018 IEEE International Conference on Imaging
    Systems and Techniques (IST). IEEE, pp. 1–6. Google Scholar Lee and Kim, 2008
    J.H. Lee, C.O. Kim Multi-agent systems applications in manufacturing systems and
    supply chain management: a review paper Int. J. Prod. Res., 46 (1) (2008), pp.
    233-265 View in ScopusGoogle Scholar Lee et al., 2010 W.S. Lee, V. Alchanatis,
    C. Yang, M. Hirafuji, D. Moshou, C. Li Sensing technologies for precision specialty
    crop production Comput. Electron. Agric., 74 (1) (2010), pp. 2-33 View PDFView
    articleView in ScopusGoogle Scholar Leng et al., 2018 K. Leng, Y. Bi, L. Jing,
    H.C. Fu, I. Van Nieuwenhuyse Research on agricultural supply chain system with
    double chain architecture based on blockchain technology Fut. Gen. Comput. Syst.,
    1 (86) (2018), pp. 641-649 View PDFView articleView in ScopusGoogle Scholar Leyden,
    2019 Leyden, J., 2008. Phlashing attack thrashes embedded systems. The Register.
    [online]. Available:https://www.theregister.co.uk/2008/05/21/phlashing/ (Accessed
    3/6/2019). Google Scholar Li and Wang, 2018 Li, J., Wang, X., 2018. Research on
    the application of blockchain in the traceability system of agricultural products.
    In: 2018 2nd IEEE Advanced Information Management, Communicates, Electronic and
    Automation Control Conference (IMCEC), IEEE, pp. 2637–2640. Google Scholar Li
    and Zhang, 2017 Li, C., Zhang, L.J., 2017. A blockchain based new secure multi-layer
    network model for internet of things. In: 2017 IEEE International Congress on
    Internet of Things (ICIOT). IEEE, pp. 33–41. Google Scholar Liang et al., 2017
    Liang, X., Zhao, J., Shetty, S., Li, D., 2017. Towards data assurance and resilience
    in iot using blockchain. In: MILCOM 2017–2017 IEEE Military Communications Conference
    (MILCOM). IEEE, pp. 261–266. Google Scholar Li et al., 2017 Y. Li, Z. Cao, Y.
    Xiao, A.B. Cremers DeepCotton: in-field cotton segmentation using deep fully convolutional
    network J. Electron. Imag., 26 (5) (2017), Article 053028 View in ScopusGoogle
    Scholar Li et al., 2018 Z. Li, W.M. Wang, G. Liu, L. Liu, J. He, G.Q. Huang Toward
    open manufacturing: a cross-enterprises knowledge and services exchange framework
    based on blockchain and edge computing Ind. Manage. Data Syst., 118 (1) (2018),
    pp. 303-320 CrossRefView in ScopusGoogle Scholar Lin and Liao, 2017 I.C. Lin,
    T.C. Liao A survey of blockchain security issues and challenges IJ Network Secur.,
    19 (5) (2017), pp. 653-659 View in ScopusGoogle Scholar Lin et al., 2017 Y.P.
    Lin, J. Petway, J. Anthony, H. Mukhtar, S.W. Liao, C.F. Chou, Y.F. Ho Blockchain:
    the evolutionary next step for ICT E-agriculture Environments, 4 (3) (2017), p.
    50 CrossRefView in ScopusGoogle Scholar Lin et al., 2018 Lin, J., Shen, Z., Zhang,
    A., Chai, Y., 2018. Blockchain and iot based food traceability for smart agriculture.
    In: Proceedings of the 3rd International Conference on Crowd Science and Engineering.
    ACM, p. 3. Google Scholar Lin et al., 2018 Lin, J., Shen, Z., Zhang, A., Chai,
    Y., 2018. Blockchain and iot based food traceability for smart agriculture. In:
    Proceedings of the 3rd International Conference on Crowd Science and Engineering.
    ACM, p. 3. Google Scholar Lin et al., 2019 Q. Lin, H. Wang, X. Pei, J. Wang Food
    safety traceability system based on blockchain and EPCIS IEEE Access, 7 (2019),
    pp. 20698-20707 CrossRefView in ScopusGoogle Scholar Lu, 2014 C. Lu Overview of
    Security and Privacy Issues in the Internet of Things Washington University (2014)
    Google Scholar Lu, 2017 Y. Lu Industry 4.0: a survey on technologies, applications
    and open research issues J. Ind. Inf. Integ., 6 (2017), p. 1 View PDFView articleGoogle
    Scholar Lu and Xu, 2017 Q. Lu, X. Xu Adaptable blockchain-based systems: a case
    study for product traceability IEEE Software, 34 (6) (2017), pp. 21-27 View in
    ScopusGoogle Scholar Luckas, 2019 Luckas, K., 2019. Blockchain PoC for supply
    chain built on the NEM blockchain. [online]. Available:https://hackernoon.com/blockchain-poc-for-supply-chain-built-on-the-nem-blockchain-46f014e3754e
    (Accessed 21/5/2019). Google Scholar Maher Chebbo, 2019 Maher Chebbo. Powering
    a sustainable future: how blockchain can solve bitcoin’s energy consumption crisis.
    [online]. Available:https://www.itproportal.com/features/powering-a-sustainable-future-how-blockchain-can-solve-bitcoins-energy-consumption-crisis/
    (Accessed 15/5/2019). Google Scholar Mahjabin, 2018 S. Mahjabin Implementation
    of DoS and DDoS attacks on cloud servers Period. Eng. Nat. Sci. (PEN), 6 (2) (2018),
    pp. 148-158 CrossRefView in ScopusGoogle Scholar Makhdoom et al., 2018 I. Makhdoom,
    M. Abolhasan, H. Abbas, W. Ni Blockchain’s adoption in IoT: the challenges, and
    a way forward J. Network Comput. Appl. (2018) Google Scholar Makhdoom et al.,
    2018 I. Makhdoom, M. Abolhasan, J. Lipman, R.P. Liu, W. Ni Anatomy of threats
    to The Internet of Things IEEE Commun. Surv. Tutor. (2018) Google Scholar Mann
    et al., 2018 Mann, S., Potdar, V., Gajavilli, R.S., Chandan, A., 2018. Blockchain
    technology for supply chain traceability, transparency and data provenance. In:
    Proceedings of the 2018 International Conference on Blockchain Technology and
    Application. ACM, pp. 22–26. Google Scholar Marcus et al., 2018 Y. Marcus, E.
    Heilman, S. Goldberg Low-resource eclipse attacks on Ethereum’s Peer-to-Peer network
    IACR Cryptol. ePrint Arch., 2018 (2018), p. 236 Google Scholar Markets and Markets,
    2020 Markets and Markets. Precision Farming Market. [online].https://www.marketsandmarkets.com/Market-Reports/precision-farming-market-1243.html?gclid=Cj0KCQjwhZr1BRCLARIsALjRVQMzJElhQ1G-m81bk7xxkDdX8OzAcvOwu4QLqi4hhUbtKCf7lreG2H8aArF_EALw_wcB
    (Accessed 27/04/2020). Google Scholar Martens et al., 2017 Martens, D., Tuyll
    van Serooskerken, A.V., Steenhagen, M., 2017. Exploring the potential of blockchain
    for KYC. J. Digit. Bank. 2 (2), 123–131. Google Scholar McBratney et al., 2005
    A. McBratney, B. Whelan, T. Ancev, J. Bouma Future directions of precision agriculture
    Precis. Agric., 6 (1) (2005), pp. 7-23 CrossRefView in ScopusGoogle Scholar Mekala
    and Viswanathan, 2017 Mekala, M.S., Viswanathan, P., 2017. A Survey: Smart agriculture
    IoT with cloud computing. In: 2017 International Conference on Microelectronic
    Devices, Circuits, and Systems (ICMDCS), IEEE, pp. 1–7. Google Scholar Meligy
    et al., 2017 A.M. Meligy, H.M. Ibrahim, M.F. Torky Identity verification mechanism
    for detecting fake profiles in online social networks Int. J. Comput. Netw. Inf.
    Secur., 9 (1) (2017), pp. 31-39 Google Scholar Miers et al., 2013 Miers, I., Garman,
    C., Green, M., Rubin, A.D., 2013. Zerocoin: anonymous distributed e-cash from
    bitcoin. In: 2013 IEEE Symposium on Security and Privacy. IEEE, pp. 397–411. Google
    Scholar Milutinovic et al., 2016 Milutinovic, M., He, W., Wu, H., Kanwal, M.,
    2016. Proof of luck: an efficient blockchain consensus protocol. In: Proceedings
    of the 1st Workshop on System Software for Trusted Execution. ACM, p. 2. Google
    Scholar Mogili and Deepak, 2018 U.R. Mogili, B.B. Deepak Review on application
    of drone systems in precision agriculture Procedia Comput. Sci., 133 (2018), pp.
    502-509 View PDFView articleView in ScopusGoogle Scholar Mser et al., 2018 M.
    Mser, K. Soska, E. Heilman, K. Lee, H. Heffan, S. Srivastava, K. Hogan, J. Hennessey,
    A. Miller, A. Narayanan, N. Christin An empirical analysis of traceability in
    the monero blockchain Proc. Privacy Enhanc. Technol., 2018 (3) (2018), pp. 143-163
    Google Scholar Najafabadi et al., 2016 Najafabadi, M.M., Khoshgoftaar, T.M., Napolitano,
    A., Wheelus, C., 2016. Rudy attack: detection at the network level and its important
    features. In: The Twenty-ninth International Flairs Conference. Google Scholar
    Nakamoto, 2008 Nakamoto, S., 2008. Bitcoin: a peer-to-peer electronic cash system.
    [Online]. Available:https://bitcoin.org/bitcoin.pdf. Google Scholar Narra et al.,
    2020 N. Narra, P. Nevavuori, P. Linna, T. Lipping A data driven approach to decision
    support in farming Inf. Model. Knowl. Bases XXXI, 321 (2020), p. 175 Google Scholar
    Nayak et al., 2016 Nayak, K., Kumar, S., Miller, A., Shi, E., 2016. Stubborn mining:
    generalizing selfish mining and combining with an eclipse attack. In: 2016 IEEE
    European Symposium on Security and Privacy (EuroS&P). IEEE, pp. 305–320. Google
    Scholar Nayak et al., 2016 Nayak, K., Kumar, S., Miller, A., Shi, E., 2016. Stubborn
    mining: Generalizing selfish mining and combining with an eclipse attack. In:
    2016 IEEE European Symposium on Security and Privacy (EuroS&P). IEEE, pp. 305–320.
    Google Scholar Neovia, 2019 Neovia. Neovia launches Applifarm: the first platform
    for creating big data services in the ruminant sector. [online]. Available:https://www.neovia-group.com/en/neovia-launches-applifarm-first-platform-creating-big-data-services-ruminant-sector/
    (Accessed 1/6/2019). Google Scholar Nguyen et al., 2015 K.T. Nguyen, M. Laurent,
    N. Oualha Survey on secure communication protocols for the Internet of Things
    Ad Hoc Networks, 32 (2015), pp. 17-31 View PDFView articleView in ScopusGoogle
    Scholar Nikkil et al., 2010 R. Nikkil, I. Seilonen, K. Koskinen Software architecture
    for farm management information systems in precision agriculture Comput. Electron.
    Agric., 70 (2) (2010), pp. 328-336 Google Scholar Norton, 2019 Norton. The future
    of IoT: 10 predictions about the Internet of Things. [online]. Available:https://us.norton.com/internetsecurity-iot-5-predictions-for-the-future-of-iot.html
    (Accessed 1/5/2019). Google Scholar Nuss et al., 2018 Nuss, M., Puchta, A., Kunz,
    M., 2018. Towards blockchain-based identity and access management for Internet
    of Things in enterprises. In: International Conference on Trust and Privacy in
    Digital Business. Springer, Cham, pp. 167–181. Google Scholar O’Dell, 2009 M.
    O’Dell Network front-end processors, yet again Commun. ACM, 52 (6) (2009 1), pp.
    46-50 CrossRefView in ScopusGoogle Scholar Ourad et al., 2018 Ourad, A.Z., Belgacem,
    B., Salah, K., 2018. Using blockchain for IOT access control and authentication
    management. In: International Conference on Internet of Things. Springer, Cham,
    pp. 150–164. Google Scholar Park et al., 2015 J. Park, K. Iwai, H. Tanaka, T.
    Kurokawa Analysis of slow read dos attack and countermeasures on web servers Int.
    J. Cyber-Secur. Digit. Forensics (IJCSDF), 4 (2) (2015), pp. 339-353 CrossRefGoogle
    Scholar Patil et al., 2017 Patil, A.S., Tama, B.A., Park, Y., Rhee, K.H., 2017.
    A framework for blockchain based secure smart green house farming. In: Advances
    in Computer Science and Ubiquitous Computing. Springer, Singapore, pp. 1162–1167.
    Google Scholar Pawlak et al., 2018 Pawlak, M., Guziur, J., Poniszewska-Maranda,
    A., 2018. Voting process with blockchain technology: auditable blockchain voting
    system. In: International Conference on Intelligent Networking and Collaborative
    Systems. Springer, Cham, pp. 233–244. Google Scholar Pedersen et al., 2006 S.M.
    Pedersen, S. Fountas, H. Have, B.S. Blackmore Agricultural robots-system analysis
    and economic feasibility Precis. Agric., 7 (4) (2006), pp. 295-308 CrossRefView
    in ScopusGoogle Scholar Peng, 2012 K. Peng Attack against a batch zero-knowledge
    proof system IET Inf. Secur., 6 (1) (2012), pp. 1-5 CrossRefView in ScopusGoogle
    Scholar Platform with duplicated and shared bookkeeping, 2018 Platform with duplicated
    and shared bookkeeping. In: 2018 IEEE Intelligent Vehicles Symposium (IV), 2018
    Jun 26, IEEE, pp. 97–101. Google Scholar Pop et al., 2018 C. Pop, T. Cioara, M.
    Antal, I. Anghel, I. Salomie, M. Bertoncini Blockchain based decentralized management
    of demand response programs in smart energy grids Sensors, 18 (1) (2018), p. 162
    CrossRefView in ScopusGoogle Scholar Popov, 2016 Popov, S., 2016. The Tangle.https://iota.org/IOTA_Whitepaper.pdf
    (Accessed 15/5/2019). Google Scholar Preethi, 2017 Preethi, K., 2017. Blockchains
    Don’t Scale. Not Today, at Least. But There’s Hope. [Online]. Available:.https://hackernoon.com/blockchains-dont-scale-nottoday-at-least-but-there-s-hope-2cb43946551a
    (Accessed 18/5/2019). Google Scholar Provenance, 2019 Provenance. A Platform for
    Business, [online]. Available:https://www.provenance.org/business/platform (Accessed
    29/5/2019). Google Scholar ProzCoin, 2019 ProzCoin. Click the Coin Proz Logo to
    get to the Main Coin Proz Website!. [online]. Available:https://bitcointalk.org/index.php?topic=740383.0
    (Accessed 27/4/2019). Google Scholar Puri et al., 2017 V. Puri, A. Nayyar, L.
    Raja Agriculture drones: a modern breakthrough in precision agriculture J. Stat.
    Manage. Syst., 20 (4) (2017), pp. 507-518 CrossRefGoogle Scholar Report Linker,
    2018 Report Linker, 2018. Blockchain in Agriculture Market, Application, Provider,
    Organization Size And Region – Global Forecast to 2023. [online]. Available:https://www.reportlinker.com/p05581101/Blockchain-in-Agriculture-Market-Application-Provider-Organization-Size-And-Region-Global-Forecast-to.html
    (Accessed 18/5/2019). Google Scholar Rodas and To, 2015 O. Rodas, M.A. To A study
    on network security monitoring for the hybrid classification-based intrusion prevention
    systems Int. J. Space-Based Situated Comput., 5 (2) (2015), pp. 115-125 CrossRefGoogle
    Scholar Rosenfeld, 2012 Rosenfeld, M., 2012. Overview of colored coins. White
    paper, bitcoil. co. il. 41. Google Scholar Saberi et al., 2019 S. Saberi, M. Kouhizadeh,
    J. Sarkis, L. Shen Blockchain technology and its relationships to sustainable
    supply chain management Int. J. Prod. Res., 57 (7) (2019 3), pp. 2117-2135 CrossRefView
    in ScopusGoogle Scholar Sa et al., 2016 I. Sa, Z. Ge, F. Dayoub, B. Upcroft, T.
    Perez, C. McCool Deepfruits: a fruit detection system using deep neural networks
    Sensors, 16 (8) (2016), p. 1222 CrossRefView in ScopusGoogle Scholar Sam, 2018
    Sam, M., 2018. Blockchain in Agriculture: 10 Possible Use Cases. [online]. Available:
    https://www.disruptordaily.com/blockchain-use-cases-agriculture/ (Accessed 18/5/2019).
    Google Scholar Sartori and Brunelli, 2016 Sartori, D., Brunelli, D., 2016. A smart
    sensor for precision agriculture powered by microbial fuel cells. In: 2016 IEEE
    Sensors Applications Symposium (SAS). IEEE, pp. 1–6. Google Scholar Sasson et
    al., 2014 Sasson, E.B., Chiesa, A., Garman, C., Green, M., Miers, I., Tromer,
    E., Virza, M., 2014. Zerocash: decentralized anonymous payments from bitcoin.
    In: 2014 IEEE Symposium on Security and Privacy. IEEE, pp. 459–474. Google Scholar
    Satyanarayanan, 2017 M. Satyanarayanan The emergence of edge computing Computer,
    50 (1) (2017), pp. 30-39 View in ScopusGoogle Scholar Schwartz et al., 2014 Schwartz,
    D., Youngs, N., Britto, A., 2014. The Ripple Protocol Consensus Algorithm. Ripple
    Labs Inc White Paper, vol. 5. Google Scholar Shahdany et al., 2019 S.H. Shahdany,
    S. Taghvaeian, J.M. Maestre, A.R. Firoozfar Developing a centralized automatic
    control system to increase flexibility of water delivery within predictable and
    unpredictable irrigation water demands Comput. Electron. Agric., 163 (2019), Article
    104862 Google Scholar Sharma et al., 2017 Sep P.K. Sharma, M.Y. Chen, J.H. Park
    A software defined fog node based distributed blockchain cloud architecture for
    IoT IEEE Access, 6 (2017), pp. 115-124 CrossRefGoogle Scholar Shekhar, 2016 Shekhar,
    A., 2016. Teardrop Attack: What Is It And How Does It Work?. [online]. Available:https://fossbytes.com/what-is-teardrop-attack-working/
    (Accessed 3/6/2019). Google Scholar Sheth, 2016 A. Sheth Internet of things to
    smart iot through semantic, cognitive, and perceptual computing IEEE Intell. Syst.,
    31 (2) (2016), pp. 108-112 View in ScopusGoogle Scholar Smith, 2019 Smith, Ms.,
    2019. Saudi Arabia again hit with disk-wiping malware Shamoon 2.https://www.csoonline.com/article/3161146/saudi-arabia-again-hit-with-disk-wiping-malware-shamoon-2.html
    (Accessed 1/5/2019). Google Scholar Smith, 2020 Philip Smith. Drones in Precision
    Agriculture. [online].https://dronebelow.com/2018/07/19/drones-in-precision-agriculture/
    (Accessed 29/04/2020). Google Scholar Sowe et al., 2014 Sowe, S.K., Kimata, T.,
    Dong, M., Zettsu, K., 2014. Managing heterogeneous sensor data on a big data platform:
    IoT services for data-intensive science. In: 2014 IEEE 38th International Computer
    Software and Applications Conference Workshops. IEEE, pp. 295–300. Google Scholar
    Spanos et al., 2017 Spanos, N., Martin, A.R., Dixon, E.T., Geros, A.S., 2017.
    Inventors; Blockchain Technologies Corp, assignee. System and method for creating
    a multi-branched blockchain with configurable protocol rules. United States patent
    US 9,608,829. Google Scholar Sylvester, 2019 Sylvester, G. E- agriculture in action:
    blockchain for agriculture opportunities and challenges. [online]. Available:http://www.fao.org/3/CA2906EN/ca2906en.pdf
    (Accessed 21/5/2019). Google Scholar Tapscott and Tapscott, 2016 Tapscott, Don,
    Tapscott, Alex, 2016. Here’s Why Blockchains Will Change the World. [online].
    Available:http://fortune.com/2016/05/08/why-blockchains-will-change-the-world/
    (Accessed 25/3/2019). Google Scholar Tasca and Widmann, 2017 P. Tasca, S. Widmann
    The challenges faced by blockchain technologies-Part 1 J. Digit. Bank., 2 (2)
    (2017 1), pp. 132-147 Google Scholar Tian, 2016 Tian, F., 2016. An agri-food supply
    chain traceability system for China based on RFID & blockchain technology. In:
    2016 13th International Conference on Service Systems and Service Management (ICSSSM).
    IEEE, pp. 1–6. Google Scholar Toyoda et al., 2017 K. Toyoda, P.T. Mathiopoulos,
    I. Sasase, T. Ohtsuki A novel blockchain-based product ownership management system
    (POMS) for anti-counterfeits in the post supply chain IEEE Access, 5 (2017), pp.
    17465-17477 CrossRefView in ScopusGoogle Scholar Tripoli and Schmidhuber, 2018
    Tripoli, M., Schmidhuber, J., 2018. Emerging Opportunities for the Application
    of Blockchain in the Agri-food Industry. FAO and ICTSD: Rome and Geneva. Licence:
    CC BY-NC-SA. 3. Google Scholar Truby, 2018 J. Truby Decarbonizing Bitcoin: law
    and policy choices for reducing the energy consumption of Blockchain technologies
    and digital currencies Energy Res. Social Sci. (2018) Google Scholar Tse et al.,
    2017 Tse, D., Zhang, B., Yang, Y., Cheng, C., Mu, H., 2017. Blockchain application
    in food supply information security. In: 2017 IEEE International Conference on
    Industrial Engineering and Engineering Management (IEEM). IEEE, pp. 1357–1361.
    Google Scholar Tun and Thein, 2008 Tun, Z., Thein, N.L., 2008. Round trip time
    based wormhole attacks detection. In: IEEE Wireless Communications and Networking
    Conference, pp. 1–6. Google Scholar Tzounis et al., 2017 A. Tzounis, N. Katsoulas,
    T. Bartzanas, C. Kittas Internet of Things in agriculture, recent advances and
    future challenges Biosyst. Eng., 1 (164) (2017), pp. 31-48 View PDFView articleView
    in ScopusGoogle Scholar Umeh, 2016 Umeh, J., 2016. Blockchain double bubble or
    double trouble?. It now. 58 (1), 58–61. Google Scholar Vermesan et al., 2017 Vermesan,
    O., Bröring, A., Tragos, E., Serrano, M., Bacciu, D., Chessa, S., Gallicchio,
    C., Micheli, A., Dragone, M., Saffiotti, A., Simoens, P. Internet of robotic things:
    converging sensing/actuating, hypoconnectivity, artificial intelligence and IoT
    Platforms. Google Scholar Vermeulen, 2016 Vermeulen, J., 2016. VisaNet – handling
    100,000 transactions per minute. [online]. Available: https://mybroadband.co.za/news/security/190348-visanet-handling-100000-transactions-per-minute.html
    (Accessed 3/6/2019). Google Scholar Vos et al., 2017 Vos, J.A., Beentjes, B.,
    Lemmen, C., 2017. Blockchain based land administration feasible, illusory or a
    panacea. In: Netherlands Cadastre, Land Registry and Mapping Agency. Paper prepared
    for presentation at the 2017 World Bank Conference on Land and Povertry. The World
    Bank, Washington, DC. Google Scholar Vujicic et al., 2018 Vujicic, D., Jagodic,
    D., Randic, S., 2018. Blockchain technology, bitcoin, and Ethereum: a brief overview.
    In: 2018 17th International Symposium INFOTEH-JAHORINA (INFOTEH). IEEE, pp. 1–6.
    Google Scholar Vukolic, 2015 Vukolic, M., 2015. The quest for scalable blockchain
    fabric: proof-of-work vs. BFT replication. In: International Workshop on Open
    Problems in Network Security. Springer, Cham, pp. 112–125. Google Scholar Wallgren
    et al., 2013 L. Wallgren, S. Raza, T. Voigt Routing attacks and countermeasures
    in the RPL-based Internet of Things Int. J. Distrib. Sens. Networks, 9 (8) (2013
    22), Article 794326 CrossRefView in ScopusGoogle Scholar Wst and Gervais, 2016
    Wst, K., Gervais, A., 2016. Ethereum eclipse attacks. ETH Zurich. [online]. Available:https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/121310/eth-49728-01.pdf
    (Accessed 3/6/2019). Google Scholar Xie and Ettema, 2016 Xie, H., Ettema, T.,
    2016. Inventors; Palo Alto Networks Inc, assignee. Selective sinkholing of malware
    domains by a security device via DNS poisoning. United States patent US 9,325,735.
    Google Scholar Xie et al., 2017 Xie, C., Sun, Y., Luo, H., 2017. Secured data
    storage scheme based on block chain for agricultural products tracking. In: 2017
    3rd International Conference on Big Data Computing and Communications (BIGCOM).
    IEEE, pp. 45–50. Google Scholar Xinhuanet, 2020 Xinhuanet. Global precision agriculture
    market to hit 10.55 bln USD by 2025. [online].https://www.xinhuanet.com/english/2018-08/22/c_137410419.htm
    (Accessed 27/04/2020). Google Scholar Xiong et al., 2018 Z. Xiong, Y. Zhang, D.
    Niyato, P. Wang, Z. Han When mobile blockchain meets edge computing IEEE Commun.
    Mag., 56 (8) (2018), pp. 33-39 CrossRefView in ScopusGoogle Scholar Xu et al.,
    2019 Xu, X., Weber, I., Staples, M., 2019. Case study: AgriDigital. In: Architecture
    for Blockchain Applications. Springer, Cham, pp. 239–255. Google Scholar XXXX,
    YYYY . Google Scholar Yang et al., 2017 Yang, T., Guo, Q., Tai, X., Sun, H., Zhang,
    B., Zhao, W., Lin, C., 2017. Applying blockchain technology to decentralized operation
    in future energy internet. In: 2017 IEEE Conference on Energy Internet and Energy
    System Integration (EI2). IEEE, pp. 1–5. Google Scholar Yaqoob et al., 2017 Yaqoob,
    I., Ahmed, E., ur Rehman, M.H., Ahmed, A.I., Al-garadi, M.A., Imran, M., Guizani,
    M., 2017. The rise of ransomware and emerging security challenges in the Internet
    of Things. Comput. Networks 129, 444–458. Google Scholar Yu et al., 2008 H. Yu,
    M. Kaminsky, P.B. Gibbons, A.D. Flaxman Sybilguard: defending against sybil attacks
    via social networks IEEE/ACM Trans. Network., 16 (3) (2008), pp. 576-589 View
    in ScopusGoogle Scholar Zhai et al., 2020 Z. Zhai, J.F. Martínez, V. Beltran,
    N.L. Martínez Decision support systems for agriculture 4.0: survey and challenges
    Comput. Electron. Agric., 170 (2020), Article 105256 View PDFView articleView
    in ScopusGoogle Scholar Zhang et al., 2002 N. Zhang, M. Wang, N. Wang Precision
    agriculture: a worldwide overview Comput. Electron. Agric., 36 (2–3) (2002), pp.
    113-132 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2014 K.
    Zhang, X. Liang, R. Lu, X. Shen Sybil attacks and their defenses in the internet
    of things IEEE Internet Things J., 1 (5) (2014), pp. 372-383 View in ScopusGoogle
    Scholar Zhang et al., 2014 K. Zhang, X. Liang, R. Lu, X. Shen Sybil attacks and
    their defenses in the internet of things IEEE Internet Things J., 1 (5) (2014),
    pp. 372-383 View in ScopusGoogle Scholar Zhang et al., 2019 C. Zhang, L. Di, L.
    Lin, L. Guo Machine-learned prediction of annual crop planting in the US Corn
    Belt based on historical crop planting maps Comput. Electron. Agric., 1 (166)
    (2019), Article 104989 View PDFView articleView in ScopusGoogle Scholar Zheng
    et al., 2017 Zheng, Z., Xie, S., Dai, H., Chen, X., Wang, H., 2017. An overview
    of blockchain technology: Architecture, consensus, and future trends. In: 2017
    IEEE International Congress on Big Data (BigData Congress). IEEE, pp. 557–564.
    Google Scholar Zheng et al., 2018 Z. Zheng, S. Xie, H.N. Dai, X. Chen, H. Wang
    Blockchain challenges and opportunities: a survey Int. J. Web Grid Serv., 14 (4)
    (2018), pp. 352-375 CrossRefView in ScopusGoogle Scholar Zhou et al., 2014 Zhou,
    Z., Xie, M., Zhu, T., Xu, W., Yi, P., Huang, Z., Zhang, Q., Xiao, S., 2014. EEP2P:
    an energy-efficient and economy-efficient P2P network protocol. In: International
    Green Computing Conference. IEEE, pp. 1–6. Google Scholar Ziegler et al., 2015
    S. Ziegler, P. Kirstein, L. Ladid, A. Skarmeta, A. Jara The case for IPv6 as an
    enabler of the Internet of Things IEEE Internet Things (2015) Google Scholar Zyskind
    and Nathan, 2015 Zyskind, G., Nathan, O., 2015. Decentralizing privacy: using
    blockchain to protect personal data. In: 2015 IEEE Security and Privacy Workshops
    (SPW). IEEE, pp. 180–184. Google Scholar Cited by (206) IoT-based agriculture
    management techniques for sustainable farming: A comprehensive review 2024, Computers
    and Electronics in Agriculture Show abstract Hybrid blockchain-based many-to-many
    cross-domain authentication scheme for smart agriculture IoT networks 2024, Journal
    of King Saud University - Computer and Information Sciences Show abstract Mapping
    smart farming: Addressing agricultural challenges in data-driven era 2024, Renewable
    and Sustainable Energy Reviews Show abstract Unleashing the power of internet
    of things and blockchain: A comprehensive analysis and future directions 2024,
    Internet of Things and Cyber-Physical Systems Show abstract BFSF: A secure IoT
    based framework for smart farming using blockchain 2023, Sustainable Computing:
    Informatics and Systems Show abstract Blockchain-enabled smart agriculture: Enhancing
    data-driven decision making and ensuring food security 2023, Journal of Cleaner
    Production Show abstract View all citing articles on Scopus View Abstract © 2020
    Elsevier B.V. All rights reserved. Recommended articles The integration of blockchain
    and IoT edge devices for smart agriculture: Challenges and use cases Advances
    in Computers, Volume 127, 2022, pp. 507-537 Swati Nigam, …, Manju Khari View PDF
    A double-blockchain solution for agricultural sampled data security in Internet
    of Things network Future Generation Computer Systems, Volume 117, 2021, pp. 453-461
    Wei Ren, …, Pengcheng Gan View PDF A secure fish farm platform based on blockchain
    for agriculture data integrity Computers and Electronics in Agriculture, Volume
    170, 2020, Article 105251 Lei Hang, …, Do-Hyeun Kim View PDF Show 3 more articles
    Article Metrics Citations Citation Indexes: 177 Captures Readers: 590 Social Media
    Shares, Likes & Comments: 11 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Integrating blockchain and the internet of things in precision agriculture:
    Analysis, opportunities, and challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Pincheira M.
  - Donini E.
  - Giaffreda R.
  - Vecchio M.
  citation_count: '16'
  description: Remote sensing considerably benefits from the fusion of open data from
    different sources, including far-range sensors mounted on satellites and short-range
    sensors on drones or Internet of Things devices. Open data is an emerging philosophy
    attracting an increasing number of data owners willing to share. However, most
    of the data owners are unknown and thus, untrustable, which makes shared data
    likely unreliable and possibly compromising associated outcomes. Currently, there
    exist tools that distribute open data, acting as intermediaries connecting data
    owners and users. However, these tools are managed by central authorities that
    set rules for data ownership, access, and integrity, limiting data owners and
    users. Therefore, a need emerges for a decentralized system to share and retrieve
    data without intermediaries limiting participants. Here, we propose a blockchain-based
    system to share and retrieve data without the need for a central authority. The
    proposed architecture (i) allows sharing data, (ii) maintains the data history
    (origin and updates), and (iii) allows retrieving and evaluating the data adding
    trustworthiness. To this end, the blockchain network enables the direct connection
    of data owners and users. Furthermore, blockchain automatically interacts with
    participants and keeps a transparent record of their actions. Hence, blockchain
    provides a decentralized database that enables trust among the participants without
    a central authority. We analyzed the potentials and critical issues of the architecture
    in a remote sensing use case of precision farming. The analysis shows that participants
    benefit from the properties of the blockchain in providing trusted data for remote
    sensing applications.
  doi: 10.1109/LAGIRS48042.2020.9165589
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2020 IEEE Latin American GRSS...
    A Blockchain-Based Approach To Enable Remote Sensing Trusted Data Publisher: IEEE
    Cite This PDF Miguel Pincheira; Elena Donini; Raffaele Giaffreda; Massimo Vecchio
    All Authors 9 Cites in Papers 326 Full Text Views Abstract Document Sections 1.
    Introduction 2. General Concepts On Blockchain Technology 3. Proposed Architecture
    4. Use Case: Precision Agriculture 5. Conclusions and Future Works Authors Figures
    References Citations Keywords Metrics Abstract: Remote sensing considerably benefits
    from the fusion of open data from different sources, including far-range sensors
    mounted on satellites and short-range sensors on drones or Internet of Things
    devices. Open data is an emerging philosophy attracting an increasing number of
    data owners willing to share. However, most of the data owners are unknown and
    thus, untrustable, which makes shared data likely unreliable and possibly compromising
    associated outcomes. Currently, there exist tools that distribute open data, acting
    as intermediaries connecting data owners and users. However, these tools are managed
    by central authorities that set rules for data ownership, access, and integrity,
    limiting data owners and users. Therefore, a need emerges for a decentralized
    system to share and retrieve data without intermediaries limiting participants.
    Here, we propose a blockchain-based system to share and retrieve data without
    the need for a central authority. The proposed architecture (i) allows sharing
    data, (ii) maintains the data history (origin and updates), and (iii) allows retrieving
    and evaluating the data adding trustworthiness. To this end, the blockchain network
    enables the direct connection of data owners and users. Furthermore, blockchain
    automatically interacts with participants and keeps a transparent record of their
    actions. Hence, blockchain provides a decentralized database that enables trust
    among the participants without a central authority. We analyzed the potentials
    and critical issues of the architecture in a remote sensing use case of precision
    farming. The analysis shows that participants benefit from the properties of the
    blockchain in providing trusted data for remote sensing applications. Published
    in: 2020 IEEE Latin American GRSS & ISPRS Remote Sensing Conference (LAGIRS) Date
    of Conference: 22-26 March 2020 Date Added to IEEE Xplore: 12 August 2020 Electronic
    ISBN:978-1-7281-4350-7 DOI: 10.1109/LAGIRS48042.2020.9165589 Publisher: IEEE Conference
    Location: Santiago, Chile SECTION 1. Introduction Recently, space agency policies
    on open data access encourage the development of various automatic methods to
    extract useful information for a wide range of Earth and Planetary science and
    applications. For instance, the European Space Agency provides Sentinel-2 data
    with a globe coverage and a high revisit frequency at no cost to the public though
    the Copernicus Programme. The spatial resolution (10 to 60 m) of these images
    is relatively high, but not enough for all applications. Hence, data fusion methods
    consider data from different short-range sources as complementary of remote sensing
    sensors. The philosophy of open data becomes more relevant with the enormous quantity
    of data collected nowadays by close-range sensors, e.g., personal drones, IoT
    sensor networks, and open government data. Even if close and far range sensors
    acquire data on the same scene, they focus on different properties. These two
    types of data are complementary, and remote sensing (RS) can take advantage of
    close-range data and integrate them to generate more consistent, accurate, and
    useful products. For instance, close-range data as IoT measurements have a higher
    spatial and temporal resolution than ESA''s Sentinel-2, but limited coverage.
    On the contrary, far-range data provide full coverage of the terrestrial surface
    with a relatively low spatial resolution. Moreover, close-range data available
    from in-situ (e.g., IoT measurements) are of particular importance for the validation
    of RS methods and products. However, owners of short-range data are part of a
    heterogeneous group, e.g., research institutions or startup owners, and are often
    unknown. Therefore, the owners and the data are not fully trustable, and thus,
    using the data may compromise the associated research outcome. Currently, sharing
    and retrieving close-range data is possible through some tools mostly managed
    by intermediaries, e.g., open data portals. Intermediaries define the policies
    for data ownership and access and set the rules to evaluate data reliability and
    integrity. These tools tend to favor usability over transparency since they aim
    at connecting data owners with users. Therefore, a need emerges for a system that
    enables sharing and retrieving data without a limiting central authority. This
    paper proposes an architecture based on the blockchain to build a network to share
    and validate data acquired by untrusted sources. Blockchain acts as an intermediary
    connecting data owners and users-its is a decentralized database of trusted data
    accessible to all the participants. The intrinsic properties of blockchain enable
    trust and remove the necessity to have a third party validating the interactions
    among the participants. To investigate the proposed architecture, we analyze a
    use case to identify the critical issues and the potentialities of the system.
    We consider precision agriculture as it is well known for combining different
    types of data, e.g., IoT measurements and satellite optical images, to monitor
    the status of crop fields. 1.1 Related Work Recently, the interest in blockchain
    increased since users can monetize their resources and profit from them without
    an intermediary. Energy trading (Mengelkamp et al., 2018) and IoT data marketplaces
    (Ramachandran et al., 2018) are just two examples where blockchains enable direct
    interactions between participants without a validating intermediary. Moreover,
    the auditability property allows the identification of the owner of each resource
    and the direct incentivizing of the participants contributions. In remote sensing,
    only a few works explore the benefits of blockchain. In a whitepaper, ESA highlighted
    the importance of integrating blockchain in remote sensing applications (European
    Space Agency, April 2019). On the one hand, blockchain enables the transfer of
    value-it is a public network where to share and retrieve data without a central
    authority. Moreover, smart contracts allow automating the actions, such as elaborating
    information. On the other hand, short-range sensors acquire everyday a large amount
    of data useful for Earth Observation. However, data owners lack a tool where to
    share data while keeping ownership. Further, the data cannot be trusted since
    data owners are unknown and thus, not reliable. Blockchain is the solution to
    build a system to generate trust among users without an intermediary. Blockchain
    is a decentralized database that keeps track of the flow of information. Blockchain
    technology is verifiable and immutable by default-all the actors can access the
    information and its changes over time. For this reason, blockchain is suggested
    as a distributed database to share the knowledge on land ownership (Ellehauge,
    2017) (Kempe, 2017), geohashing (Ellehauge, 2017), i.e., to create a geodesic
    grid of the world (Ellehauge, 2017), and to share geodata in an open way, e.g.,
    public map, without relying on a central authority, e.g., Google Maps or OpenStreetMap.
    In the literature, there exist few works exploiting blockchain to store and share
    data in a trustworthy and auditable manner. (Molesky et al., 2018) propose a blockchain
    as a database to track satellites and debris orbits. The database has two configurations-history
    data configuration and sliding window configuration. In the first, all the information
    is available to all the network peers. In the second, only the information on
    the last 48 hours is available to all the network, while selected peers stores
    all history. Here, blockchain technology preserves data integrity and provides
    smart contract to automatize some actions on the data. However, the system does
    not exploit other advantages of the technology, e.g., trust and incentives, as
    all the actors are already known. In (Lin et al., 2017), a blockchain database
    stores the national data on water quality acquired by an irrigation system spread
    in the Taiwan area. The data benefit of the blockchain characteristics, i.e.,
    decentralization, immutability, and auditability, however, trust is not a necessary
    since all the data sources are known. Moreover, the system stores only data from
    IoT sensors, which is far from the purpose of this paper. Finally, (Leka et al.,
    2019) proposes a blockchain system to store and share geospatial data among users,
    particularly researchers. The system uses blockchain and smart contracts to develop
    a complex reward mechanism to engage the participants. However, the data are in
    global storage, which eliminates the decentralization and introduces a controlling
    authority that decide the rules to access the data. The rest paper is organized
    as follows-Section 2 illustrates the fundamentals on the blockchain technology.
    Section 3 proposes architecture with the details on the actors, the interactions,
    and the smart contracts. In Section 4, we analyze the proposed architecture with
    a use case on precision agriculture to identify its potentialities and issue.
    Finally, Section 5 concludes the paper and presents future works. SECTION 2. General
    Concepts On Blockchain Technology Blockchain is a recent and promising technology
    still at an early stage of research and development, however it offers a unique
    combination of features, arising the interest in several fields. Here, we want
    to use a blockchain-based system to enable the trust in sharing and retrieving
    data from unknown sources for RS purposes without an intermediary 1. This Section
    describes the blockchain technology and the features exploited in the propose
    architecture. Blockchain combines data structures, incentive mechanisms, and cryptography
    techniques to maintain a distributed database on a peer-to-peer network. This
    database stores the information by using logical blocks linked to each other and
    thus creating a chained data structure. The first blockchain use case stored financial
    transactions between unknown parties, i.e., cryptocurrency. However, the technology
    has the potential to be adopted in any other use cases where the data exchange
    occurs between untrusted parties. Hence, blockchain enables trust without an intermediary
    by providing a transparent and immutable list of records. The three main components
    of a blockchain system are the transactions, the blocks, and the state of the
    network. Transactions represent the information transfer among two peers that
    are grouped into the blocks. A block is the data structure that contains the information,
    i.e., a group of transactions, validated by the peers in the network. The information
    in the blocks creates a unique global state that is agreed upon by all the network
    peers. The blockchain system is managed by a protocol that indicates (i) how to
    create and validate transactions, (ii) how to create and validate new blocks,
    and (iii) how to broadcast the block and update the state of the network. Figure
    1 shows the step of the protocol during the interaction of two peers. The next
    subsections explain in more details the steps of the protocol and the main features
    that enables trust among peers. Transaction creation and validation. In a blockchain
    system, each peer has a unique address associated with a pair of cryptographic
    keys. Peers use these keys (i) to sign their transactions to certify their origin
    and (ii) to validate the integrity and the origin of the transaction they receive.
    Blocks collect valid transactions and are distributed in a peer-to-peer network,
    and thus are acessible to any peer. Hence, blockchain is a transparent record
    of interactions (property of auditability). Block creation and validation. A block
    is a time-stamped data structure that contains a group of transactions and the
    link to the previous block. When creating a block, the protocol applies cryptographic
    techniques for its validation and the sealing. Validating the block requires the
    generation of the nonce, which is a unique pseudo-random number obtained by solving
    a cryptographic puzzle (consensus protocol). Sealing demands a hashing function
    that creates a unique identifier (Block ID) based on the block content and nonce.
    The identifier protects from the tampering since it loses its validity with any
    change of the data in the block. The link with the previous block creates a retroactive
    relation that contributes to secure the blockchain-any modification implies heavy
    computations to validate and seal the previous and following blocks. Thus, the
    information in blockchains is considered permanent in time (property of immutability).
    Block broadcasting. When a new block is broadcasted to the network, each peer
    appends it to the local copy of the chain. Since the blockchain replicates in
    each peer, the entire system has a distributed architecture, and thus, it is tolerant
    of data failures. Appending the block implies its validation and the update of
    the blockchain global state that is agreed by all the peers. To interact, all
    peers follow a consensus protocol that indicates how to resolve conflicts, avoid
    abuses related to personal interests over the common good, and incentive participants.
    In this way, interactions occur directly among peers without any central control.
    Hence, the consensus protocol is what makes the system decentralized, which is
    an intrinsic property of blockchain. Figure 1. Flowchart of the blockchain protocol.
    Show All 2.1 Benefits of blockchain Blockchain has three main embedded properties-auditability,
    immutability, and decentralization. Auditability indicates that all network peers
    can validate the integrity and origin of the data using cryptographic techniques.
    This removes the blind trust in the central authority that characterizes existing
    tools to share and retrieve data. Immunatibilty implies that blockchain is hardly
    alterable without using massive computational resources. Hence, actors have full
    access to the complete history of the data, including the origin and following
    updates. Decentralization is related to the consensus protocol, which provides
    a global status of the system, agreed among the peers without a central control.
    The combination of the three properties enables trust among peers, based on the
    agreed global state of the network, and removes the need for a validating intermediary.
    The central protocol supports additional features that can improve the functionalities
    of a blockchain system. Ethereum, a blockchain implementation, introduced smart
    contracts as an agreement between two or more peers. A smart contract is a distributed
    software running on top of the blockchain network. The software runs deterministically
    in all the peers at the same time to process the information in the blockchain.
    The same execution output enforces the agreement among peers without the need
    for any third-party validator. Thus, smart contracts provide the mean to automatically
    create and manipulate information in a trustworthy and transparent manner. SECTION
    3. Proposed Architecture The paper aims at defining a distributed architecture
    that collects the information on the data, i.e., the metadata, shared by untrusted
    data sources. We use a blockchain-based approach to collect, validate, and track
    the metadata. Blockchain acts as a distributed infrastructure that provides a
    secure, immutable, and transparent record of the metadata. This Section will describe
    the architecture with a focus on the actors and the interactions. We first describe
    the actors, which are the blockchain peers that share and validate the metadata.
    Then, we analyze the possible interactions between the actors and the blockchain.
    Finally, we describe the smart contracts that enables the interaction between
    the actors. 3.1 Actors Data comes from different sources that are trusted, e.g.,
    space agencies and universities, or untrusted, e.g., private companies and volunteers.
    In this paper, the peers are untrusted since we aim at providing value to the
    data that otherwise cannot be trusted. We consider as untrusted actors those that
    voluntarily collect and share data, as Figure 2 shows. Some examples of common
    actors are-the company sharing data acquired by IoT sensors on the temperature
    and the humidity of a crop field; the research group sharing a database on multitemporal
    images acquired by optical and SAR sensors; and finally, the people that shares
    pictures taken by a drone or a cellphone. 3.2 Interactions Interactions happen
    between actors and the blockchain-based system. Here, actors can (i) share the
    metadata of a dataset via a transaction to a smart contract, (ii) use smart contracts
    to search in the dataset list, and finally (iii) use smart contracts to retrieve
    the dataset metadata. These interactions are associated with a reward for the
    actor and a quality evaluation of the dataset as an incentive to use the system.
    The score indicates the experience that the actor had with the dataset, including
    how representative the metadata are of the dataset, the quality of the data and
    of the dataset structure. However, the quality score should be define with criteria
    specific for the use case. The following paragraphs describe the interactions
    and the reward and evaluation mechanisms. Sharing information. In this architecture,
    the blockchain is a container of information on different datasets. Blockchain
    maintains a list whose records are the metadata of the dataset shared by actors.
    The metadata is shared by sending transactions to the smart contract in a standard
    format. The smart contract verifies the transactions with predefined rules and
    rewards the actors. Moreover, the contract inserts the metadata in the dataset
    list-it adds a new record for a new dataset or updates the record for an existing
    one. Blockchain stores a history of all the events so that changes are traceable
    and accountable. Searching for information. Actors looking for a specific dataset
    can query the smart contract for matching records in the dataset list. The smart
    contract searches the list with some criteria given by the actor. The contract
    retrieves the information on the matching datasets and provides it to the actor.
    Thus, the actor receives the part of the metadata and the current quality score
    of each the dataset. With this information, the actor can decide which dataset
    to use and require the complete metadata. Accessing information. Considering the
    blockchain as a list of datasets, an actor can ask the smart contract to access
    the information related to a particular dataset. Retrieving the data implies that
    the smart contract transmits the complete metadata of that dataset to the actor.
    With this information, the actor can access and use the data. In exchange for
    the metadata, the actor is asked to give an evaluation of the quality of the dataset.
    If the actor provides this evaluation, it receives a positive reward, otherwise
    a negative one. Based on these rewards, smart contracts can limit the actor to
    have further access to other datasets. Figure 2. Structure of the proposed architecture.
    Show All 3.3 Smart Contracts Transactions are the interactions between actors
    and the blockchain system, i.e., the smart contracts. The smart contracts define
    rules and methods to validate and process the information in the transactions.
    They provide an interface to access information, making it available for actors
    and other smart contracts. Moreover, a relevant characteristic of smart contracts
    is the ability of creating and adding information in the blockchain. Here, these
    interactions translate into rewards for the actors and a quality score for the
    datasets. We employ three types of smart contracts: Participant, Dataset, and
    Detail. Participant smart contract. The Participant smart contract manages the
    rewards of each actor according to predefined rules. The Participant contract
    receives transactions by the (i) Dataset contract when the latter adds a new record
    in the dataset list and (ii) Detail contract when an actor uses a dataset. The
    transaction contains the information on the actor and its rewarding. Hence, the
    contract manages the list of the actors and the history of their rewards. The
    list is accessible by actors and other smart contracts at any time, which is central
    for granting or denying access to datasets. Detail smart contract. The Dataset
    contract creates a new Detail contract for each new dataset shared in the network
    to store metadata. Each Detail contract manages the metadata of a database and
    accepts the updates coming from the actor who originally shared the data. Each
    Detail contract is an independent unit of information more accessible than the
    blocks in the chain. Saving the information in the blockchain grants trust, while
    the contract provides a simpler way to access the metadata. Moreover, the Detail
    contract can provide the information in a meaningful way to the actor, e.g., only
    specific fields of the metadata. The Detail smart contract implements the methods
    to (i) update and (ii) access the metadata. (i) Updating the metadata requires
    a transaction with the changes of the dataset. The contract processes only the
    transactions coming from the same actor who originally shared the dataset. Detail
    smart contract keeps track of all the changes, which are accessible by anyone
    in the system. (ii) Accessing dataset metadata requires a transaction to the Detail
    contract asking for that particular dataset. The contract first verifies if the
    actor is allowed to access the data in the Participant contract. Secondly, after
    sharing the metadata, the contract requests the actor to provide a quality score
    to the Datasets contract. Evaluating the dataset grants a positive reward and
    the further use of the system. On the contrary, the actor receives a negative
    reward when refusing to provide the quality score. Evaluating a dataset is of
    critical importance for the system-it helps in validating the information shared
    by the actors and thus checking the quality of the data in the blockchain. Dataset
    smart contract. The Dataset smart contract keeps a list of the existing datasets
    and their quality scores. Moreover, it indicates how to (i) share, (ii) browse,
    and (iii) score the datasets in the systems. (i) To share an dataset, an actor
    sends a transaction with the dataset metadata coded in a standard format. First,
    the contract verifies the format of the metadata, then it adds a new record in
    the dataset list, and finally, it rewards the actor. When adding a new record,
    the contracts generate a Detail contract with a unique blockchain address stored
    in the dataset list. (ii) Browsing a dataset implies that an actor sends a transaction
    with search criteria. The contract uses the criteria to filter the dataset list
    and returns the results to the actor. The results contain the identifier of the
    datasets matching the criteria, part of the related metadata, and the current
    quality score. (iii) Scoring a dataset is done by the actors analyzing the datasets.
    Actors are asked to send a transaction indicating the quality evaluation of the
    data they analyzed. 3.4 Challenges The success of participatory systems strongly
    depends on the number of participants-here the participants are the actors sharing
    and using the information in the blockchain network. The more are the actors involved,
    the more the blockchain will be successful and collect further information. Thus,
    a crucial element is the definition of an incentive mechanism to attract actors
    in the system. The main incentive is the possibility to browse in the list of
    datasets stored in the blockchain and then acquiring the information on accessing
    the dataset. Nevertheless, we decided to add a rewarding mechanism based on a
    gaming approach to engage more the actors. Each actor, according to its actions,
    receives a positive or negative reward that accumulates over time. Here, we propose
    a set of rules for the rewarding mechanism, but any other can be integrated since
    the system is modular. Thus, actors are encouraged to participate actively to
    increase their score and gain reliability. Figure 3. Geographic extension of the
    datasets shared in the blockchain system-in blue, the IoT raw and processed data,
    and in yellow, the processed Sentinel-2A data. Show All Another critical issue
    is the definition of a standard format for the interactions between actors and
    smart contracts. The actors must send messages satisfying a shared and previously
    agreed protocol. The protocol indicates the message structure for all interactions,
    e.g., the fields required and their order. Having a structured information allows
    smart contracts to automatize the tasks required by the actor. Smart contracts
    automatically interact with the actors and elaborate the data in the blockchain.
    Thus, blockchains can be considered autonomous systems able to self-organize.
    SECTION 4. Use Case: Precision Agriculture This Section analyzes the proposed
    architecture by describing a use case where actors interact with the blockchain
    to share and retrieve information to investigate the potentialities and critical
    issues. We consider a use case in precision farming where the aim is monitoring
    the phenological cycle of crop fields by fusing different data. As an example,
    let us assume three actors interacting on the blockchain with different willings
    and needs. The following paragraphs describe the actors, their needs, and the
    issues that a blockchain-based system can help to overcome. 4.1 Actors Actor A
    is a landowner that aims at developing an automatic system to manage crop fields,
    in green in Figure 3. He wants to estimate several parameters to monitor the evolution
    of crop fields and control actuators, such as those for watering and giving fertilizer.
    Actor A wants to retrieve these parameters, or in the worst-case estimate them,
    from a reliable list of datasets. Hence, actor A needs an easily accessible system,
    without a central control setting the rules to limit the actions of the users.
    Further, the system needs to guarantee the integrity of the data, i.e., the data
    can not be modified. As an extra feature, the system provides feedback as a quality
    score assigned by the other users according to their experience. Actor B is a
    researcher developing methods for extracting parameters to monitor the phenological
    cycles of crop fields from Sentile-2A images, in yellow in Figure 3. B wants to
    share the research outcome while preserving the authorship of the data, and thus
    the credit. Hence, B needs a sharing system that i) tracks the origin and possible
    changes, ii) guarantees data integrity, i.e., data cannot be modified, and iii)
    assures access to everyone. As an additional feature, the system can provide feedback
    to the data owner based on the scores from the actors that used those data. Actor
    C is an IoT startup that deploys sensors to monitor crop fields, in blue in Figure
    3-the startup installed 20 sensors in 1 km2 crop field, which acquire temperature
    and humidity measurements every 15 minutes. C owns raw data from the sensors and
    processed data, i.e., the temperature and humidity profile for the past years.
    C wants to have a record of the startup achievements and thus share the data in
    a transparent external system. Sharing the data is a way to present the outcome
    of the startup to investors and to attract new clients. However, actor C needs
    to preserve the ownership of the data, which is challenging with the existing
    centralized tools. The central authority sets the rules for sharing and retrieving
    data in the system. Hence, C may face several problems, e.g., with data ownership
    and data monetization. The willingness and needs of the actors are diverse and
    hardly fulfilled by existing systems to share and retrieve data. Existing tools
    rely on a central authority that acts as an intermediary between untrused actors.
    The central control sets the rules of the system and thus should be blindly trusted
    by the actors. The rules indicate ownership and access policies-the former defines
    the possible change in ownership when uploading the data. The latter shows the
    accessing mechanism and requirements, which can be restrictive to some actors.
    Further, the intermediary is the single point of failure of the entire system-any
    interruption of the services directly compromises the data availability. Finally,
    actors must trust the central authority on the data integrity since the existing
    tools usually do not provide enough information to check the validity of the data,
    i.e., understand if the data are modified. In fact, the central authority has
    the complete control of the shared data and thus can modify the data or the quality
    evaluation. A blockchain-based system overcomes these issues-the decentralized
    nature of the blockchain eliminates the controlling authority, and thus, the actors
    can directly interact with the network without the intermediary. Further, since
    blockchain is a distributed database, there is not a single point of failure,
    and the data is always accessible to any network peer. Moreover, the blockchain
    tracks all the interactions with the actors creating a history of the data origin
    and updates. This information is validated with cryptography techniques and agreed
    by all the network peers-this guarantees and preserves the data ownership and
    integrity. Finally, actors provide an evaluation of the data quality, removing
    any third-party interference as in the case of the existing tools. A blockchain-based
    system is highly modular and enables the smooth integration of further services.
    For example, crypto-currencies can easily be integrated to monetize the data and
    incentive participants. The blockchain system facilitates crypto-currency payments
    with a marginal cost, which can be done automatically by smart contracts after
    each transaction. On the contrary, a centralized system does not enable such an
    effortless way to monetize the data. 4.2 Interactions Sharing information. In
    our use case, B and C are the actors willing to share data-they send transactions
    to the blockchain with the information on the datasets. The blockchain validates
    the transactions with cryptography techniques and stores the data. Hence, blockchain-based
    systems remove the third-party intermediary that manages the data. Further, since
    the network peers have a copy of the blockchain, the system lacks a central authority
    overcoming the issues of existing tools to share and retrieve data. Searching
    for information. Here, actor A wants to browse the list of shared datasets-A sends
    a transaction to the blockchain with filtering criteria. The blockchain system
    replies with the list of datasets matching the filters. Actor A can trust the
    integrity of the data since blockchain enables the immutability of the stored
    data. Moreover, the decentralized architecture of blockchain guarantees these
    results not to be accessible to everyone, without being censored or promoted.
    Accessing information. Actor A is interested in the raw and processed data previously
    shared by B and C. Hence, A requests access to the datasets, by sending a transaction
    to the blockchain. The blockchain returns access information, which includes the
    integrity check and access credentials. The metadata accounts for the dataset
    updates and the change history of the dataset. Hence, the blockchain keeps track
    of the data owner and the update of the data, e.g., analyses and processing by
    other actors. Further, the blockchain provides the information to verify the validity
    of the dataset, i.e., if any modification occurred in the originally shared data.
    SECTION 5. Conclusions and Future Works The amount of available far-range and
    close-range data is increasing every day, enabling the development of a large
    number of remote sensing applications. These applications take advantage of the
    fusion between close-range data with classical satellite images. Moreover, close-range
    data, such as those from IoT sensor measurements, can be used as ground truth
    to validate the result of the automatic methods. However, the owner of close-range
    data are part of a heterogeneous group and are usually unknown. Thus, using these
    data may compromise the research outcome. Moreover, existing tools to share and
    retrieve data have a central authority that acts as an intermediary for the users.
    However, the presence of the intermediary introduces concerns on data ownership,
    access, quality, and integrity. Here, we propose a blockchain-based architecture
    that (i) enables data owners to share the data without an intermediary, (ii) keeps
    track of the data updates and provides a quality score, and (iii) overcomes the
    issue of the untrusted data owners. Any actor can share and retrieve data from
    the blockchain without caring for the reliability of the data source. Thus, there
    is no need for a third party that validates the data as the blockchain enables
    trust among the actors. Smart contracts manage the interactions between actors
    and the blockchain. For actors, contracts are an interface of the blockchain that
    simplifies accessing the data. For the blockchain, contracts are entities that
    elaborate and generate new information. We analyzed the critical issue and the
    potentialities of the proposed architecture with a remote sensing use case, i.e.,
    precision farming. We conclude that such a system provides benefits to all the
    actors since sharing and retrieving data do not require the presence of an intermediary.
    As future works, we plan to analyze other use cases with a higher number of shared
    datasets to examine the system scalability and robustness. In that scenario, we
    plan to implement the system with both public and private blockchains, i.e., Ethereum
    and Hyperledger Fabric, to evaluate the network performances. Further, we plan
    to study an innovative storage system to decentralize not only dataset metadata
    but also the data. Authors Figures References Citations Keywords Metrics More
    Like This Statistical tool for clock offset selection in time synchronization
    protocols of Wireless Sensor Network 2017 7th International Conference on Cloud
    Computing, Data Science & Engineering - Confluence Published: 2017 The contract
    net based task allocation algorithm for wireless sensor network 2012 IEEE Symposium
    on Computers and Communications (ISCC) Published: 2012 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2020 IEEE Latin American GRSS and ISPRS Remote Sensing Conference, LAGIRS
    2020 - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Blockchain-Based Approach to Enable Remote Sensing Trusted Data
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ibrahim R.E.
  - Elramly A.
  - Hassan H.M.
  citation_count: '5'
  description: This paper describes efforts by National Authority for Remote Sensing
    and Space Sciences (NARSS) to help the Egyptian government to manage and monitor
    the national projects. We successfully developed a geospatial data sharing portal
    (NARSSGeoPortal) as part of the government need to build national Decision Support
    System (DSS). We were able to solve the software development issues as well as
    the satellite imagery sourcing issues, but the main challenge remains around how
    to collect complete and correct data from the public about their private businesses
    nationwide. The most challenging is how to engage the public and encourage the
    business owners who are the main sources of data to provide the government Geoportal
    with data about their businesses. It is also challenging to engage the scientists
    and experts from government research centers into the data sharing Geoportal.
    Furthermore, it is a challenge to integrate the government research centers with
    the public businesses’ daily operation. The data sharing Geoportal is built for
    all national projects and government authorities, however, in this paper we focus
    on the Agriculture authorities and farming businesses where the challenge is how
    to collect correct and complete data per acre about the seeds, fertilizers, water,
    pest control and all other farm related data that the satellite imagery does not
    provide. The goal is to integrate the farms into unified national monitoring,
    and control system while developing advanced smart farms with the use of Internet
    of Things (IoT). The proposed collaboration agriculture platform fills the gap
    between two groups. The first group includes the government authorities, financial
    institutions, and research centers. The second group includes farmers, supply
    chain, and agriculture engineers. The platform show how employment can be generated
    by transforming the national ecosystem. The paper also fills a major gap in industry
    as well as in academia by providing the first Bluetooth Low Energy computer aided
    design tool that will facilitate testing, designing, deploying, managing and debugging
    of real Bluetooth Low Energy networks.
  doi: 10.46300/9106.2020.14.134
  full_citation: '>'
  full_text: '>

    ""'
  inline_citation: '>'
  journal: International Journal of Circuits, Systems and Signal Processing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Open systems science: digital transformation and developing business model
    toward smart farms’ platform'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Satapathy U.
  - Mohanta B.K.
  - Panda S.S.
  - Sobhanayak S.
  - Jena D.
  citation_count: '21'
  description: In the era of the Internet of Things(loT) smart devices are connected
    with wire or wireless way. The IoT devices are capable of sensing the environment
    and has the ability to transmit that information to the next level. The application
    area of IoT is Smart city, Smart transportation, Healthcare sector, Agriculture,
    Monitoring environment. Each of these applications, lots of information are share
    or transmit among different devices. In the information sharing system among devices,
    lots of security and privacy challenges exist like data leakage, data modification,
    device identity. In this paper, authors firstly identify the communication protocols
    used in IoT application and given their working principle. Secondly, challenges
    exist in IoT and corresponding Blockchain solution approach are explained, Lastly,
    the authors proposed a secure architecture based on open Blockchain which can
    solve some of the challenges in IoT applications.
  doi: 10.1109/ICCCNT45670.2019.8944811
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 10th International Confe...
    A Secure Framework for Communication in Internet of Things Application using Hyperledger
    based Blockchain Publisher: IEEE Cite This PDF Utkalika Satapathy; Bhabendu Ku.
    Mohanta; Soumyashree S Panda; Srichandan Sobhanayak; Debashis Jena All Authors
    17 Cites in Papers 402 Full Text Views Abstract Document Sections I. Introduction
    II. Background III. Internet of Things Communication Protocols IV. IoT Challenges
    Address by the Blockchain V. Proposed Secure Architecture Using Open Blockchain
    Show Full Outline Authors Figures References Citations Keywords Metrics Footnotes
    Abstract: In the era of the Internet of Things(loT) smart devices are connected
    with wire or wireless way. The IoT devices are capable of sensing the environment
    and has the ability to transmit that information to the next level. The application
    area of IoT is Smart city, Smart transportation, Healthcare sector, Agriculture,
    Monitoring environment. Each of these applications, lots of information are share
    or transmit among different devices. In the information sharing system among devices,
    lots of security and privacy challenges exist like data leakage, data modification,
    device identity. In this paper, authors firstly identify the communication protocols
    used in IoT application and given their working principle. Secondly, challenges
    exist in IoT and corresponding Blockchain solution approach are explained, Lastly,
    the authors proposed a secure architecture based on open Blockchain which can
    solve some of the challenges in IoT applications. Published in: 2019 10th International
    Conference on Computing, Communication and Networking Technologies (ICCCNT) Date
    of Conference: 06-08 July 2019 Date Added to IEEE Xplore: 30 December 2019 ISBN
    Information: DOI: 10.1109/ICCCNT45670.2019.8944811 Publisher: IEEE Conference
    Location: Kanpur, India SECTION I. Introduction The IoT devices are growing exponentially
    and the amount of data getting transmitted is enormous. Hence the major responsibility
    is to provide security, privacy and protection to the data and communication.
    Blockchain Technology has been anticipated to make extensive changes in various
    field like research, industry and also in IoT application. It will play a significant
    role to manage, control and secure IoT devices. In this paper we proposed a secure
    architecture based on Hyperledger to solve some of security issues persist in
    IoT application. The rest of the paper is organised as follows. In Section 2 we
    have briefly described about blockchain Technology. Several IoT communication
    protocols has been identified and described briefly in Section 3. This section
    also outlines the security challenges while doing secure communication in IoT
    application. Section 4 addressed the challenges by blockchain based solution.
    The secure architecture using blockchain is proposed in Section 5. At the end
    the final remarks are given in Section 6. SECTION II. Background A blockchain
    system is basically a decentralised, distributed, digital public ledger system.
    This incorporates a novel distributed consensus schemes, allowing transactions
    and data to be stored securely to the blockchain network after a verification/validation
    without intervention of any centralized or third-party authority. When we say,
    the blockchain is decentralised it means, the services are ruled without any centralised,
    governing authority. It has been found that one common reason for the major data
    breach in last few decades is due to storing all the data at one place i.e. at
    one server which makes easier for a malicious actor to steal the data at once.
    So, to secure the system, blockchains are made distributed by placing every data
    in every node making it difficult to modify the data by malicious actor in all
    the places simultaneously. The blockchain networks keeps the records, also known
    as blocks submitted by others in temporal order of their creation. The verification
    of this temporal order are performed by miners which are also the nodes of the
    same blockchain network by taking the help of timestamp. In order to make the
    blocks tamper-proof, to ensure data authenticity and integrity, elliptic curve
    cryptography (ECC) and SHA-256 hashing has been used. A blockhash is created after
    hashing the list of transactions in a ledger. That blockhash is treated as the
    unique identifier for that block. When a malicious actor tries to change the history
    of the transaction of a certain block then the output blockhash will be modified
    completely making it visible that some tampering has been done with it. When someone
    wants to add a new block to the blockchain network then, that digital ledger has
    to be verified by a majority consensus of miner nodes. In the network there are
    many miner nodes which compete with each other to add the block into the network
    by doing some computation like solving a complex mathematical puzzle. On winning
    the competition the node can add the block to the blockchain as a result he/she
    will receive some reward like digital coins. There are few techniques to know
    that the list of transactions are truthful such as Proof of stack(PoS) and Proof
    of Work (PoW) etc. In a bitcoin network1, the validation of the block is done
    by the miners which computes a hash with leading zero to match up the difficulty
    target. After the transactions has been verified the blockdata are immutable i.e.
    the transactions can never be modified or deleted. Refer to Fig. 1. As blockchain
    manages and verifies data online hence enabling us to track billions of devices
    on Internet of Things. Fig. 1. Characteristics of blockchain Show All Fig. 2.
    Design structure of blockchain Show All Table. I shows the type of Blockchain
    which can be built [1]. Permissionless blockchain also known as public or decentralised
    blockchain is 100% transparent i.e. one can read everything. In Permissionless
    algorithm monetary incentives are given to miner and due to the nature of the
    Proof of Work consensus algorithm, a massive amount of energy is being used. In
    Permissioned Blockchain which is also known as private blockchain the degree of
    decentralization and transparency varies depending upon the application it is
    being used in. That means it can be Fully centralized or Partially decentralized.
    No crypto economic or monetary incentives are given to running node as no miners
    required for this. The consensus algorithm is computationally less expensive in
    permissioned blockchain allowing it to perform and scale better. Both the type
    of blockchain are secure, distributed databases each having distinct characteristics
    and adaptability. The structure of a Block in Blockchain is described in Fig.
    2. The basic block is consist of 4 sections. First section contains the block
    size which is the size of block in bytes. Next is the block header section which
    store several other information like version which is a number to track the software
    protocols upgrades, the Previous Blockhash which the hash of the previous entire
    block, the Merkle Root is the hash of root of Merkle tree. Merkle tree is nothing
    but the tree formed by all the transaction mentioned in the last section of the
    block. If any modification or deletion is done to the transactions then the hash
    of the merkle root will be changed hence it is used for data verification. The
    Block Header also contains the timestamp, a Difficulty Target which is a Proof
    of Work (PoW) algorithm and a Nonce which a random variable for the PoW algorithm
    [2], [3]. The blocktime for Bitcoin2 and Ethereum3 is 10 mins and 17.5 s respectively
    [4]. It is achieved by adjusting the number of leading zeros periodically in the
    difficulty target with the variation of computation power of hardware over time.
    The block time is an average time, set for mining a block i.e. making a block
    valid by the miners, by finding the appropriate value for nonce field. Bitcoin
    is the foremost decentralised digital currency based on the blockchain architecture
    [5]. Its uses cryptographic tools such as cryptographic hash function e.g. SHA256
    and RIPEMD160, Merkle Trees and Elliptic Curve Digital Signature Algorithm(ECDSA).
    Table. II shows the basic block header of the Bitcoin. In the past few years,
    many research were focused on services of Bitcoin as a digital cyptocurrency but
    totally leave unnoticed the hidden potential within Bitcoin, the Blockchain which
    is the underlying key-enabling technology behind it. Currently there are more
    than 500 alternate blockchain offering alternative digital crypto currencies are
    available. Ethereum blockchain was launched by Vitalik Buterin in 2015 and made
    public. Nevertheless with the developement of Ethereum Blockchain, the prospective
    use space of blockchain has become countless. To build the distributed consensus
    Ethereum is a permissionless networks and uses Proof-of-Work (PoW) technology.
    It runs on smart contracts which are basically a computerised transaction protocol
    written as simple programming scripts using the Solidity language, to be uploaded
    and run on its blockchain. Solidity,a JavaScript like language, is very simple
    and easy to understand unlike the scripts used in Bitcoin. This is one of the
    main reason why Ethereum provide a decentralised platform to build Smart application
    and democratic autonomous organizations (DAOs). The smart contracts can be scheduled
    to run at a particular time or based on a condition with zero possibility of downtime,
    fraud, third-party interference and censorship.4 Eventually, similar smart-contract
    blockchain platforms have lately emerged. Some of them are Hyperledger5, Eris6,
    Stellar7, Ripple8, and Ten-dermint9. Hyperledger Fabric is a private and permissioned
    network used in a specific enterprise environment allowing only previleged node
    to communicate with each other. To gain access, permission should be granted from
    a trusted Membership Service Provider (MSP), which provides and validates the
    certificates and also manages user authentication. Table I Types of blockchain
    Table II Bitcoin block header format A. Motivation Internet of Things technology
    is widely used by different applications. In an IoT application, different sensors
    are connected to the next layer in either wired or wirelessly. When information
    is passed from the physical layer to the network layer for processing and performing
    computation there are lots of security issues exist. The users privacy need to
    maintain so that trust can be built between users. In the case of the smart healthcare
    sector, patient privacy needs to be preserved. Similarly in the case of smart
    city IoT based application citizen personal information needs to be secure. so
    in this paper, we have proposed a framework based on Blockchain concept which
    can be addressed the security and privacy issues. SECTION III. Internet of Things
    Communication Protocols IoT communication is IP-based and it is based on the protocols
    above the network layer such as HTTP, CoAP, WebSockets, MQTT, XMPP, DDS, AMQP
    etc., shown in Fig. 3. A. Application Communication Protocol • MQTT Fig. 3. Protocol
    stack of iot Show All MQTT (Message Queue Telemetry Transport) is a lightweight
    publisher/subscriber model based protocol present in application layer. It uses
    a client-server architecture where IoT device is treated as the client which connects
    to a proxy server (also known as MQTT Broker) and publishes messages to topics
    on the server as shown in Fig. 4. The broker publishes the messages to the subscriber
    of that topic. An environment with limited resources, processing and low network
    bandwidth, MQTT is well-to-do. MQTT is supported by TCP trasport protocol which
    is unsecured by default [6]. Hence it uses TSL/SSL for data encryption making
    the system robust. The drawback of this protocol can be limitation in scalability
    because of the additional overhead for device connected to a centralised broker.
    And also the redundant TCP handshaking before every communication set up affects
    more battery consumption. • COAP CoAP (Constrained Application Protocol) is one
    of the latest application layer communication protocol used for M2M (machine-to-machine)
    application and mainly designed to interface with HTTP protocol easily. It''s
    underlying transport layer protocol is UDP and it follows a Request-Response framework
    for communication. Basically it is secure because of the use of Datagram Transport
    Layer Security (DTLS). But it has been found that hundreds of thousands of MQTT
    and CoAP hosts combined are reachable through public-facing IP addresses. Hence
    providing attackers with millions of exposed records [7]. CoAP is suspetible to
    IP Spoofing and DDoS Attack10. Fig. 4. MQTT architecture Show All • XMPP In context
    of IoT, XMPP (Extensible Messaging and Presense Protocol) is a free and open real-time
    communication protocol used for streaming XML data in small chunks between IoT
    devices in a network. Client-Server framework is used by this decentralized protocol.
    XMPP has built-in channel encyption feature using SASL and TLS [8], [9].11 B.
    Routing Protocol • 6LOWPAN 6LOWPAN (IPv6 over Low-Power Wireless Personal Area
    Networks) shown in Fig. 5 which fits the IPv6 packet transmission in low power
    and lossy network with node have limited processing capabilites [10]. The operating
    bandwidth is 2.4GHz and data transmission rate is 250Kbps. IPv6 offers around
    5 * 1028 addresses for each individual in the world however with the growing rate
    of IoT devices soon these address space is going to be exhausted. The vulnerability
    surface of 6LoWPAN protocol includes bootstrapping and key distribution, Dos due
    to constrained resources and etc. IPv6 Network Security, IPsec is used to protect
    the network layer [11]. One of the general problem area of 6LoWPAN is security
    including set up and maintainance. From different security objective of this protocol
    the obvious one are data integrity which require some form of authorization, confidentiality,
    availability by dealing with DoS attack and authorization and authentication of
    devices which wants to communicate.12 Fig. 5. 6lowpan architecture Show All C.
    Security Protocol • DTLS DTLS is a security protocol used to provide privacy in
    communication implemented above UDP based communication protocols. To intercept
    tampering, eavesdropping or message forgery in a client/server application this
    protocol is used. It is based on the TLS protocol and guarantees equal level of
    security. • TLS In IoT devices the TLS is used in two ways: First, for encryption
    while data transmission. It makes more difficult for malicious actor to reverse
    engineer the communication used by device. This preserves data privacy. Second,
    to mitigate the impersonation attack so that an attacker can not fake a device,
    the device store the TLS certificate of the client used for the authentication
    between the device and application. Some issues with TLS implementation are discussed
    below. TLS is not lightweight and makes the IoT traffic slow due to the extra
    overhead taken for the initial handshake before the set up of every session. As
    the IoT devices have limited storage, it is a problem to store the certificate
    in device when the certificate size is too large. Finally third issue is that
    some of the protocols that are being developed for IoTs are plaintext by default.
    D. Secure Communications Internet of Things (IoT) is all about connecting the
    things to the internet. However, communication should be secure and encrypted
    otherwise all the data, passwords or user names will be exposed to everyone. Basically
    IoT application faces several security vulnerabilities: Data getting stored in
    an insecure IoT network faces issues with confidentiality and privacy of data.
    To communicate among various types of devices within a heterogeneous network a
    common standard communication protocol is not available. Inadequate authorization
    or not enough authentication techniques for IoT devices in the network. Fig. 6.
    IP address assignment by a central system Show All The communication protocols
    in IoT application such as MQTT, CoAP, HTTP and XMPP and the routing protocols
    such as 6LoWPAN and RPL are not secured by default. To make the communication
    secure in the application, on the top of these protocols another layer of security
    protocol has to be implemented such as TLS or DTLS. Likewise, to secure the transport
    layer routing protocols secure, IPSec is used.DTLS, TLS and IPSec are not lightweight
    due to the large certificate file that is stored on the resource constrained devices
    and makes the IoT traffic slow due to the extra overhead taken for the initial
    handshake before the set up of every session. Another major issue with these security
    protocols is that the key management and distribution by using the popular protocol
    of PKI is centralized SECTION IV. IoT Challenges Address by the Blockchain IoT
    follows a client/server paradigm. For controlling the entire network a single
    web server and interface is required. IoT devices forwards the data to be stored
    in a central database which can be manipulated in security attack. IoT devices
    are not smart enough for detecting the genuinity of the received data hence easy
    targets for security attacks. Blockchain can help to resolve this issue [12].
    In this scenario it can help devices within the Blockchain network to reach at
    a decision whether the received data is genuine or not. They can spot the malicious
    actors and prevent IoT devices to interact with them further. In Blockchain because
    of the encryption while data transmission between IoT devices will remain safe
    from interception. Hence eliminating any third party or middle-men or broker for
    data exchange between IoT devices. Using blockchain in IoT application an unmodificable
    record of IoT device is maintained due to the imutable ledger technology. IPv6
    follows 128-bit addressing however blockchain follows 160-bit addressing. [13].
    Hence blockchain can produce 1.46 * 1048 unique addresses offline and allocate
    them to IoT devices. It increases the probability of clashing of two addresses
    by 1048 which is quite large number. So it is considered as a secure method to
    allocate a Global Unique Identifier (GUID) to IoT device, without any registration
    or verification of uniqueness after assigning it. Refer the Fig. 8. Hence eliminating
    the central organization Internet Assigned Numbers Authority (IANA) responsible
    to assign IP (IPv6, IPv4) addresses as shown in the Fig. 6. Moreover blockchain
    generates 4.3 * 109 addresses in excess of IPv6. Therefore in comparison to IPv6,
    blockchain is more scalable solution. To end IoT devices are constrained entities
    with limited memory and computational capacity making IPv6 stack unsuitable to
    run on them. IoT defence is more asymmetric than the internet defence as the defender
    here are resource constrained opposite to the attackers. In IoT context, smart
    contracts based Blockchain is anticipated to play a significant role to manage,
    control and also secure IoT devices. This section discusses and summarize few
    inherent features of blockchain that can be exceptionally useful to IoT application,
    in particular IoT security. The centralized key management and distribution are
    completely eradicated with blockchain because every IoT device owns an asymmetric
    key pair and its own GUID once installed and joined to the blockchain network.
    This further leads to major simplification of security protocols such as DTLS
    (no need of handshaking before start of each communication). Consequently, a light-weight
    security protocols would fit the requirements for the computational and memory
    resources of IoT devices. SECTION V. Proposed Secure Architecture Using Open Blockchain
    Our proposed secure communication architecture of IoT application uses Open Blockchain
    also known as Hyperledger, which is a permissioned blockchain network as shown
    in the Fig. 7. In our proposed architecture the end users or IoT devices will
    go through a registration process that will authorize them to send and execute
    data. Like smart contracts in Ethereum, chaincodes in Hyperledger has to be deployed
    and registered within the network. Chaincodes are any arbitrary logic to be accommodated
    in its transactions and can be written in any conventional programming language.
    Fig. 7 depicts the entities present in our architecture. • Membership Management
    or Permission Issuer This entity is responsible to identity an IoT device using
    device id, register it and issue necessary credentials for creating transaction
    successfully. This also helps in deploying chaincodes through Hyperledger. • Nodes
    There are 2 types of nodes: validators and non-validators. Validators''s responsibility
    is to check the validity of the user-data (transaction) submitted to the network,
    execute it and add to the blockchain. Nonvalidators''s responsibility is to receive
    user-data, perform validity checks and forward the data to their adjacent validating
    nodes. Every node keeps an up to date copy of the blockchain. • End User and Client
    These are the users and IoT devices registered to the membership management entity.
    2 key-pairs created for user during enrollment and both are created at the client
    side. One is an ECDSA key pair that is used for long-term user identity authentication
    and the second one is an ECDH (Elliptic curve Diffie Hellman) key pair for establishing
    a secret communication channel for user within the Hyperledger network. The secret
    signing and decryption keys are maintained in user side and never shared with
    membership management entity. And the public signature verification and encryption
    keys are generated during the user enrollment and mentioned in user''s enrollment
    certificate. Fig. 7. Proposed architecture Show All Fig. 8. GUID database in blockchain
    Show All Users use their certificate to authenticate themselves as valid users
    of the system. Hyperledger guarantees the below security properties: • Nonrepudiation
    Users having a certificate to send data cannot deny having generated the data.
    • Privacy In Hyperledger the membership Management or Permission Issuer encrypt
    the identity of each client (IoT devices in our case) and the transactions made
    by the client (sensor data in our case). The encrypted data can decrypted only
    by the required nodes at run-time, hence resolving the privacy issue. • Scalability
    As Hyperledger network is a permissioned blockchain network, the number of nodes
    participating in the network can be controlled. Hence the controlled number of
    node will increase the scalability of the hyperledger. Detecting Malicious actor
    is easy in Hyperledger network as every node knows about all other nodes and can
    revoke their access if needed. SECTION VI. Conclusion It is anticipated that Blockchain
    will make far-reaching changes in IoT applications in near future. We have addressed
    the vulnerabilities occur in secure communication in an IoT application by integrating
    it with Blockchain. In this paper, we proposed an architecture to communicate
    securely in IoT Applications using Hyderledger based Blockchain. In IoT application
    the data sent by various devices stored in a centralized database making it vulnerable
    for security breaches. Also the authenticity of the sender could not be verified
    properly making it open for security threats. In this paper we have proposed a
    secure architecture based on open Blockchain (Hyperledger) for IoT applications.
    Malicious actor detection will be easy as every node aware of all other node in
    the Hyperledger network. Concluding it guarantees the security measures for non-repudiation,
    privacy and scalablity in an IoT application. As explained in this paper integration
    of Blockchain technology with IoT makes the communication secure. Each sender
    and receiver identity are verifiable by the network nodes Using the digital signature
    concept. The limitation, in this case, is that Blockchain is also having some
    security and computation problem. In the future, we would implement the proposed
    approach using any smart IoT based system in Hyperledger platform to test the
    framework with computational efficiency. Authors Figures References Citations
    Keywords Metrics Footnotes More Like This Decentralized Blockchain-Based Trust
    Management Protocol for the Internet of Things IEEE Transactions on Dependable
    and Secure Computing Published: 2022 Asymmetric Group Key Agreement Protocol Based
    on Blockchain and Attribute for Industrial Internet of Things IEEE Transactions
    on Industrial Informatics Published: 2022 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2019 10th International Conference on Computing, Communication and Networking
    Technologies, ICCCNT 2019
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Secure Framework for Communication in Internet of Things Application using
    Hyperledger based Blockchain
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Shamshiri R.R.
  - Kalantari F.
  - Ting K.C.
  - Thorp K.R.
  - Hameed I.A.
  - Weltzien C.
  - Ahmad D.
  - Shad Z.
  citation_count: '276'
  description: Greenhouse cultivation has evolved from simple covered rows of open-fields
    crops to highly sophisticated controlled environment agriculture (CEA) facilities
    that projected the image of plant factories for urban agriculture. The advances
    and improvements in CEA have promoted the scientific solutions for the efficient
    production of plants in populated cities and multi-story buildings. Successful
    deployment of CEA for urban agriculture requires many components and subsystems,
    as well as the understanding of the external influencing factors that should be
    systematically considered and integrated. This review is an attempt to highlight
    some of the most recent advances in greenhouse technology and CEA in order to
    raise the awareness for technology transfer and adaptation, which is necessary
    for a successful transition to urban agriculture. This study reviewed several
    aspects of a high-tech CEA system including improvements in the frame and covering
    materials, environment perception and data sharing, and advanced microclimate
    control and energy optimization models. This research highlighted urban agriculture
    and its derivatives, including vertical farming, rooftop greenhouses and plant
    factories which are the extensions of CEA and have emerged as a response to the
    growing population, environmental degradation, and urbanization that are threatening
    food security. Finally, several opportunities and challenges have been identified
    in implementing the integrated CEA and vertical farming for urban agriculture.
  doi: 10.25165/j.ijabe.20181101.3210
  full_citation: '>'
  full_text: '>

    "NOTIFICATIONS View Subscribe USER Username Password Remember me JOURNAL CONTENT
    Search Search Scope      All Authors Title Abstract Index terms Full Text      Browse
    By Issue By Author By Title DONATIONS FONT SIZE  INFORMATION For Readers For Authors
    For Librarians Journal Help OPEN JOURNAL SYSTEMS HOME ABOUT LOGIN REGISTER SEARCH
    CURRENT ARCHIVES ANNOUNCEMENTS MOST-CITED Home > Vol 11, No 1 (2018) > Shamshiri
    Advances in greenhouse automation and controlled environment agriculture: A transition
    to plant factories and urban agriculture Ramin Shamshiri, Fatemeh Kalantari, K.
    C. Ting, Kelly R. Thorp, Ibrahim A. Hameed, Cornelia Weltzien, Desa Ahmad, Zahra
    Mojgan Shad  Abstract  Greenhouse cultivation has evolved from simple covered
    rows of open-fields crops to highly sophisticated controlled environment agriculture
    (CEA) facilities that projected the image of plant factories for urban agriculture.
    The advances and improvements in CEA have promoted the scientific solutions for
    the efficient production of plants in populated cities and multi-story buildings.
    Successful deployment of CEA for urban agriculture requires many components and
    subsystems, as well as the understanding of the external influencing factors that
    should be systematically considered and integrated. This review is an attempt
    to highlight some of the most recent advances in greenhouse technology and CEA
    in order to raise the awareness for technology transfer and adaptation, which
    is necessary for a successful transition to urban agriculture. This study reviewed
    several aspects of a high-tech CEA system including improvements in the frame
    and covering materials, environment perception and data sharing, and advanced
    microclimate control and energy optimization models. This research highlighted
    urban agriculture and its derivatives, including vertical farming, rooftop greenhouses
    and plant factories which are the extensions of CEA and have emerged as a response
    to the growing population, environmental degradation, and urbanization that are
    threatening food security. Finally, several opportunities and challenges have
    been identified in implementing the integrated CEA and vertical farming for urban
    agriculture. Keywords: smart agriculture, greenhouse modelling, urban agriculture,
    vertical farming, automation, internet of things (IoT), wireless sensor network,
    plant factories DOI: 10.25165/j.ijabe.20181101.3210  Citation: Shamshiri R R,
    Kalantari F, Ting K C, Thorp K R, Hameed I A, Weltzien C, et al. Advances in greenhouse
    automation and controlled environment agriculture: A transition to plant factories
    and urban agriculture. Int J Agric & Biol Eng, 2018; 11(1): 1–22.  Keywords  smart
    agriculture, greenhouse modelling, urban agriculture, vertical farming, automation,
    internet of things (IoT), wireless sensor network, plant factories  Full Text:
    PDF References  Ting K C, Lin T, Davidson P C. Integrated urban controlled environment
    agriculture systems. In: Kozai T, Fujiwara K, Runkle E S. Singapore: Springer
    Singapore, 2016; p. 19–36. Muijzenberg E W B. A history of greenhouses. Wageningen:
    Institute of Agricultural Engineering, 1980; 435 pp. Woods M, Warren A S. Glass
    houses: A history of greenhouses, orangeries and conservatories. Rizzoli, 1988.
    Enoch H Z, Enoch Y. The history and geography of the greenhouse. Ecosystems of
    the world, 1999: 1–16. De Vleeschouwer O. Greenhouses and conservatories. Flammarion,
    2001. Cuce E, Harjunowibowo D, Cuce P M. Renewable and sustainable energy saving
    strategies for greenhouse systems: A comprehensive review. Renewable and Sustainable
    Energy Reviews, 2016; 64: 34–59. Takakura T. Development of VETH chart using computer.
    Technical report on design standards of greenhouse environmental control systems.
    University of Tokyo, 1976. Udink ten Cate A J, Bot G P A, van Dixhoorn J J. Computer
    control of greenhouse climates. International Society for Horticultural Science
    (ISHS), Leuven, Belgium, 1978. Aitken-Christie J, Kozai T, Smith M A L. Automation
    and environmental control in plant tissue culture. Springer Science & Business
    Media, 2013. Hanan J J. Greenhouses: Advanced technology for protected horticulture.
    CRC press, 1997. Critten D L, Bailey B J. A review of greenhouse engineering developments
    during the 1990s. Agricultural and Forest Meteorology, 2002; 112(1): 1–22. Shamshiri
    R R, Mahadi M R, Thorp K R, Ismail W I W, Ahmad D, Man H C. Adaptive management
    framework for evaluating and adjusting microclimate parameters in tropical greenhouse
    crop production systems. In: Jurić S. Rijeka: InTech, 2017. Nelkin J, Caplow T.
    Sustainable controlled environment agriculture for urban areas. International
    Society for Horticultural Science (ISHS), Leuven, Belgium, 2008. Despommier D.
    The vertical farm: controlled environment agriculture carried out in tall buildings
    would create greater food safety and security for large urban populations. Journal
    für Verbraucherschutz und Lebensmittelsicherheit, 2011; 6(2): 233–236. Kacira
    M, Sase S, Okushima L. Optimization of vent configuration by evaluating greenhouse
    and plant canopy ventilation rates under wind-induced ventilation. Transactions
    of the ASAE, 2004; 47(6): 2059. Baudoin W, Nono-Womdim R, Lutaladio N, Hodder
    A, Castilla N, Leonardi C, et al. Good agricultural practices for greenhouse vegetable
    crops: Principles for mediterranean climate areas. FAO, 2013. Garnaud J C. A survey
    of the development of plasticulture: Questions to be answered. Plasticulture,
    1987; 74: 5–14. Waaijenberg D, Sonneveld P J. Greenhouse design for the future
    with a cladding material combining high insulation capacity with high light transmittance.
    International Society for Horticultural Science (ISHS), Leuven, Belgium, 2004.
    Nisen A, Coutsse S. Photometric properties of double wall plastics used as covering
    for greenhouses. International Society for Horticultural Science (ISHS), Leuven,
    Belgium, 1981. Graefe J, Sandmann M. Shortwave radiation transfer through a plant
    canopy covered by single and double layers of plastic. Agricultural and Forest
    Meteorology, 2015; 201: 196–208. Bunschoten B, Pierik C. Kassenbouw neemt weer
    iets toe. CBS Webmagazine (Centraal Bureau voor de Statistiek), 2003: 3. Pollet
    I V, Pieters J G. PAR transmittances of dry and condensate covered glass and plastic
    greenhouse cladding. Agricultural and Forest Meteorology, 2002;110(4): 285–298.
    Tuller S E, Peterson M J. The solar radiation environment of greenhouse-grown
    douglas-fir seedlings. Agricultural and Forest Meteorology, 1988; 44(1): 49–65.
    Santamouris M, Mihalakakou G, Balaras C A, Argiriou A, Asimakopoulos D, Vallindras
    M. Use of buried pipes for energy conservation in cooling of agricultural greenhouses.
    Solar Energy, 1995; 55(2): 111–124. Grimstad S O. Supplementary lighting of early
    tomatoes after planting out in glass and acrylic greenhouses. Scientia Horticulturae,
    1987; 33(3-4): 189–196. Alhamdan A M, Al-Helal I M. Mechanical deterioration of
    polyethylene greenhouses covering under arid conditions. Journal of Materials
    Processing Technology, 2009; 209(1): 63–69. Al-Helal I M, Alhamdan A M. Effect
    of arid environment on radiative properties of greenhouse polyethylene cover.
    Solar Energy, 2009; 83(6): 790–798. Dehbi A, Bouaza A, Hamou A, Youssef B, Saiter
    J M. Artificial ageing of tri-layer polyethylene film used as greenhouse cover
    under the effect of the temperature and the UV-A simultaneously. Materials & Design,
    2010; 31(2): 864–869. Bibi-Triki N, Bendimerad S, Chermiti A, Mahdjoub T, Draoui
    B, Abène A. Modeling, characterization and analysis of the dynamic behavior of
    heat transfers through polyethylene and glass walls of greenhouses. Physics Procedia,
    2011; 21:67–74. Zhu S, Deltour J, Wang S. Modeling the thermal characteristics
    of greenhouse pond systems. Aquacultural Engineering, 1998; 18: 201–217. Oreski
    G, Wallner G M, Lang R W. Ageing characterization of commercial ethylene copolymer
    greenhouse films by analytical and mechanical methods. Biosystems Engineering,
    2009; 103(4): 489–496. Janjai S, Intawee P, Kaewkiew J, Sritus C, Khamvongsa V.
    A large-scale solar greenhouse dryer using polycarbonate cover: Modeling and testing
    in a tropical environment of Lao People’s Democratic Republic. Renewable Energy,
    2011; 36(3): 1053–1062. Castilla N, Hernandez J. Greenhouse technological packages
    for high-quality crop production. International Society for Horticultural Science
    (ISHS), Leuven, Belgium, 2007. Cabrera F J, Baille A, López J C, González-Real
    M M, Pérez-Parra J. Effects of cover diffusive properties on the components of
    greenhouse solar radiation. Biosystems Engineering, 2009; 103(3): 344–356. Pollet
    I V, Pieters J G, Deltour J, Verschoore R. Diffusion of radiation transmitted
    through dry and condensate covered transmitting materials. Solar Energy Materials
    and Solar Cells, 2005; 86(2): 177–196. Arcidiacono C, D''Emilio A, Mazzarella
    R, Leonardi C. Covering materials to improve greenhouse microclimate during summer
    in hot climates. International Society for Horticultural Science (ISHS), Leuven,
    Belgium, 2006. Hemming S, Mohammadkhani V, Dueck T. Diffuse greenhouse covering
    materials - material technology, measurements and evaluation of optical properties.
    Acta Horticulturae, 2008; 797: 469–475. Jarquín-Enríquez L, Mercado-Silva E M,
    Maldonado J L, Lopez-Baltazar J. Lycopene content and color index of tomatoes
    are affected by the greenhouse cover. Scientia Horticulturae, 2013; 155: 43–48.
    Shamshiri R, Ismail W I W, Ahmad D. Experimental evaluation of air temperature,
    relative humidity and vapor pressure deficit in tropical lowland plant production
    environments. Advances in Environmental Biology, 2014; 8(22): 5–13. Al-Mahdouri
    A, Baneshi M, Gonome H, Okajima J, Maruyama S. Evaluation of optical properties
    and thermal performances of different greenhouse covering materials. Solar Energy,
    2013; 96: 21–32. Kempkes F, Stanghellini C, Hemming S, Dai J. Cover materials
    excluding near infrared radiation: effect on greenhouse climate and plant processes.
    International Society for Horticultural Science (ISHS), Leuven, Belgium, 2008.
    Álvarez A J, Oliva R M, Valera D L. Software for the geometric characterisation
    of insect-proof screens. Computers and Electronics in Agriculture, 2012; 82: 134–144.
    Mrema G C, Gumbe L O, Chepete H J, Agullo J O. Rural structures in the tropics:
    design and development. Food and Agriculture Organization of the United Nations,
    2012. Glenn E P, Cardran P, Thompson T L. Seasonal effects of shading on growth
    of greenhouse lettuce and spinach. Scientia Horticulturae, 1984; 24(3): 231–239.
    Hassanien R H E, Li M. Influences of greenhouse-integrated semi-transparent photovoltaics
    on microclimate and lettuce growth. Int J Agric & Biol Eng, 2017; 10(6): 11–22.
    Shamshiri R. Measuring optimality degrees of microclimate parameters in protected
    cultivation of tomato under tropical climate condition. Measurement, 2017; 106:
    236–244. Lorenzo P, Sánchez-Guerrero M C, Medrano E, García M L, Caparrós I, Giménez
    M. External greenhouse mobile shading: effect on microclimate, water use efficiency
    and yield of a tomato crop grown under different salinity levels of the nutrient
    solution. International Society for Horticultural Science (ISHS), Leuven, Belgium,
    2003. Teitel M, Zhao Y. Temperature gradients in fan-ventilated greenhouses. International
    Society for Horticultural Science (ISHS), Leuven, Belgium, 2014. Seginer I, Teitel
    M. Effect of ceiling height on the natural ventilation of an ''infinite'' screenhouse:
    Model predictions. International Society for Horticultural Science (ISHS), Leuven,
    Belgium, 2014. Cockshull K E, Graves C J, Cave C R J. The influence of shading
    on yield of glasshouse tomatoes. Journal of Horticultural Science, 1992; 67(1):
    11–24. Qiu R, Song J, Du T, Kang S, Tong L, Chen R, et al. Response of evapotranspiration
    and yield to planting density of solar greenhouse grown tomato in northwest China.
    Agricultural Water Management, 2013; 130: 44–51. Agele S O, Iremiren G O, Ojeniyi
    S O. Effects of plant density and mulching on the performance of late-season tomato
    (Lycopersicon esculentum) in southern Nigeria. The Journal of Agricultural Science,
    1999; 133(4): 397–402. Amundson S K. Cultural techniques to improve yield and
    cost efficiency of greenhouse grown tomatoes. Master theses, The university of
    Tennessee, 2012: 82. Kirimi J K, Itulya F M, Mwaja V N. Effects of nitrogen and
    spacing on fruit yield of tomato. African Journal of Horticultural Science, 2011:
    5. Ilić Z S, Milenković L, Stanojević L, Cvetković D, Fallik E. Effects of the
    modification of light intensity by color shade nets on yield and quality of tomato
    fruits. Scientia Horticulturae, 2012; 139: 90–95. El-Aidy F, El-Afry M. Influence
    of shade on growth and yield of tomatoes cultivated during the summer season in
    Egypt. Plasticulture, 1983; 47(3): 2–6. El-Gizawy A M, Abdallah M M F, Gomaa H
    M, Mohamed S S. Effect of different shading levels on tomato plants. 2. yield
    and fruit quality. International Society for Horticultural Science (ISHS), Leuven,
    Belgium, 1993. Hochmuth G J, Hochmuth R C. Nutrient solution formulation for hydroponic
    (perlite, rockwool, NFT) tomatoes in Florida. HS796 Univ Fla Coop Ext Serv, Gainesville,
    2001. Cherie E. The complete guide to growing tomatoes: A complete step-by-step
    guide including heirloom tomatoes (back-to-basics gardening). Atlantic Publishing
    Group Inc. Ocala, Florida, 2010. Jones J B. Instructions for growing tomatoes
    in the garden and green-house. GroSystems, Anderson, SC, USA, 2013. Morison J
    I L, Morecroft M. Plant growth and climate change. John Wiley & Sons, 2006: 209
    p. Zhang Z, Gates R S, Zou Z R, Hu X H. Evaluation of ventilation performance
    and energy efficiency of greenhouse fans. Int J Agric & Biol Eng, 2015; 8(1):
    103–110. Arbel A, Barak M, Shklyar A. Combination of forced ventilation and fogging
    systems for cooling greenhouses. Biosystems Engineering, 2003; 84(1): 45–55. Sabeh
    N C, Giacomelli G A, Kubota C. Water use for pad and fan evaporative cooling of
    a greenhouse in a semi-arid climate. International Society for Horticultural Science
    (ISHS), Leuven, Belgium, 2006. Gázquez J C, López J C, Pérez-Parra J J, Baeza
    E J, Saéz M, Parra A. Greenhouse cooling strategies for mediterranean climate
    areas. International Society for Horticultural Science (ISHS), Leuven, Belgium,
    2008. Gazquez J C, Lopez J C, Baeza E, Saez M, Sanchez-Guerrero M C, Medrano E,
    et al. Yield response of a sweet pepper crop to different methods of greenhouse
    cooling. International Society for Horticultural Science (ISHS), Leuven, Belgium,
    2006. Duan Z, Zhan C, Zhang X, Mustafa M, Zhao X, Alimohammadisagvand B, et al.
    Indirect evaporative cooling: Past, present and future potentials. Renewable and
    Sustainable Energy Reviews, 2012; 16(9): 6823–6850. Schnelle M A, Dole J M. Greenhouse
    structures and coverings. Division of Agricultural Sciences and Natural Resources,
    Oklahoma State University, 2015:1–4. Li S, Willits D H. Comparing low-pressure
    and high-pressure fogging systems in naturally ventilated greenhouses. Biosystems
    Engineering, 2008; 101(1): 69–77. Abdel-Ghany A M, Kozai T. Cooling efficiency
    of fogging systems for greenhouses. Biosystems Engineering, 2006; 94(1): 97–109.
    Standard A. Heating, ventilating and cooling greenhouses. American Society of
    Agricultural and Biological Engineers, 2008; 2015: 1. Kittas C, Katsoulas N, Baille
    A. SE-Structures and environment: Influence of greenhouse ventilation regime on
    the microclimate and energy partitioning of a rose canopy during summer conditions.
    Journal of Agricultural Engineering Research, 2001; 79(3): 349–360. Jain D, Tiwari
    G N. Modeling and optimal design of evaporative cooling system in controlled environment
    greenhouse. Energy Conversion and Management, 2002; 43(16): 2235–2250. Petek M,
    Dikmen S, Oǧan M M. Performance analysis of a two stage pad cooling system in
    broiler houses. Turkish Journal of Veterinary and Animal Sciences, 2012; 36(1):
    21–26. Willits D H. Cooling fan-ventilated greenhouses: A modelling study. Biosystems
    Engineering, 2003; 84(3): 315–329. Max J F J, Horst W J, Mutwiwa U N, Tantau H-J.
    Effects of greenhouse cooling method on growth, fruit yield and quality of tomato
    (Solanum lycopersicum L.) in a tropical climate. Scientia Horticulturae, 2009;
    122(2): 179–186. Molina-Aiz F D, Valera D L, Peña A A, Gil J A, López A. A study
    of natural ventilation in an Almería-type greenhouse with insect screens by means
    of tri-sonic anemometry. Biosystems Engineering, 2009;104(2):224–242. Rigakis
    N, Katsoulas N, Teitel M, Bartzanas T, Kittas C. A simple model for ventilation
    rate determination in screenhouses. Energy and Buildings, 2015; 87: 293–301. Ganguly
    A, Ghosh S. A review of ventilation and cooling technologies in agricultural greenhouse
    application. Iranica Journal of Energy & Environment, 2011; 2(1): 32–46. Du K,
    Sun Z, Han H, Liu S. Development of a web-based wireless telemonitoring system
    for agro-environment. Computer and Computing Technologies in Agriculture, Volume
    II, Boston, MA: Springer US, 2008. Beccali G, Cellura M, Culotta S, Lo Brano V,
    Marvuglia A. A web-based autonomous weather monitoring system of the town of palermo
    and its utilization for temperature nowcasting. Computational Science and Its
    Applications – ICCSA 2008, Berlin, Heidelberg: Springer Berlin Heidelberg, 2008.
    Okayasu T, Yamabe N, Marui A, Miyazaki T, Mitsuoka M, Inoue E. Development of
    field monitoring and work recording system in agriculture. Proc. 5th Int. Symp.
    Mach. Mech. Agr. Biosys. Engng. (ISMAB), CD-ROM, 2010. Nugroho A P, Okayasu T,
    Inoue E, Hirai Y, Mitsuoka M. Development of actuation framework for agricultural
    informatization supporting system. IFAC Proceedings Volumes, 2013; 46(4): 181–6.
    Dumitraşcu A, Ştefănoiu D, Culiţă J. Remote monitoring and control system for
    environment applications. Advances in Intelligent Control Systems and Computer
    Science, 2013: 223–34. Gaddam A. Designing a wireless sensors network for monitoring
    and predicting droughts. ICST 2014 : 8th International Conference on Sensing Technology,
    Liverpool, UK, 2014. Fukatsu T, Kiura T, Hirafuji M. A web-based sensor network
    system with distributed data processing approach via web application. Computer
    Standards & Interfaces, 2011; 33(6): 565–573. Mizoguchi M, Ito T, Chusnul A, Mitsuishi
    S, Akazawa M. Quasi real-time field network system for monitoring remote agricultural
    fields. SICE Annual Conference, 2011. Arif C, Setiawan B I, Mizoguchi M, Saptomo
    S K, Sutoyo S, Liyantono L, et al. Performance of quasi-real-time paddy field
    monitoring systems in Indonesia. Proceedings of the Asia-Pacific Advanced Network,
    2014; 37: 10–19. Kaloxylos A, Eigenmann R, Teye F, Politopoulou Z, Wolfert S,
    Shrank C, et al. Farm management systems and the future internet era. Computers
    and Electronics in Agriculture, 2012; 89: 130–144. Kaloxylos A, Groumas A, Sarris
    V, Katsikas L, Magdalinos P, Antoniou E, et al. A cloud-based farm management
    system: Architecture and implementation. Computers and Electronics in Agriculture,
    2014; 100: 168–179. Prima A, Okayasu T, Hoshi T, Inoue E, Hirai Y, Mitsuoka M,
    et al. Development of a remote environmental monitoring and control framework
    for tropical horticulture and verification of its validity under unstable network
    connection in rural area. Computers and Electronics in Agriculture, 2016;124:
    325–339. Serôdio C, Boaventura Cunha J, Morais R, Couto C, Monteiro J. A networked
    platform for agricultural management systems. Computers and Electronics in Agriculture,
    2001; 31(1): 75–90. Morais R, Fernandes M A, Matos S G, Serôdio C, Ferreira P
    J S G, Reis M J C S. A ZigBee multi-powered wireless acquisition device for remote
    sensing applications in precision viticulture. Computers and Electronics in Agriculture,
    2008; 62(2): 94–106. López Riquelme J A, Soto F, Suardíaz J, Sánchez P, Iborra
    A, Vera J A. Wireless Sensor Networks for precision horticulture in Southern Spain.
    Computers and Electronics in Agriculture, 2009; 68(1): 25–35. Li T, Zhang M, Ji
    Y H, Sha S, Jiang Y Q, Minzan L. Management of CO2 in a tomato greenhouse using
    WSN and BPNN techniques. Int J Agric & Biol Eng, 2015; 8(4): 43–51. Tzounis A,
    Bartzanas T, Kittas C, Katsoulas N, Ferentinos K P. Spatially distributed greenhouse
    climate control based on wireless sensor network measurements. International Symposium
    on Applications of Modelling as an Innovative Technology in the Horticultural
    Supply Chain, 2015; 111–120. Ji Y H, Jiang Y Q, Li T, Zhang M, Sha S, Li M Z.
    An improved method for prediction of tomato photosynthetic rate based on WSN in
    greenhouse. Int J Agric & Biol Eng, 2016; 9(1): 146–152. Pahuja R, Verma H K,
    Uddin M. A wireless sensor network for greenhouse climate control. IEEE Pervasive
    Computing, 2013; 12(2): 49–58. Hebel M A, Tate R F, Watson D G. Results of wireless
    sensor network transceiver testing for agricultural applications. 2007 ASAE Annual
    Meeting; St. Joseph, MI: ASABE, 2007. Chen Y, Shi Y L, Wang Z Y, Huang L. Connectivity
    of wireless sensor networks for plant growth in greenhouse. Int J Agric & Biol
    Eng, 2016; 9(1): 89–98. Zhou Y, Yang X, Guo X, Zhou M, Wang L. A design of greenhouse
    monitoring & control system based on zigbee wireless sensor network. Wireless
    Communications, Networking and Mobile Computing, International Conference on IEEE,
    2007: 2563–2567. Azaza M, Tanougast C, Fabrizio E, Mami A. Smart greenhouse fuzzy
    logic based control system enhanced with wireless data monitoring. ISA transactions,
    2016; 61: 297–307. Gubbi J, Buyya R, Marusic S, Palaniswami M. Internet of things
    (IoT): A vision, architectural elements, and future directions. Future Generation
    Computer Systems, 2013; 29(7): 1645–1660. Atzori L, Iera A, Morabito G. The internet
    of things: A survey. Computer Networks, 2010; 54(15): 2787–2805. Jin J, Gubbi
    J, Marusic S, Palaniswami M. An information framework for creating a smart city
    through internet of things. IEEE Internet of Things Journal, 2014; 1(2): 112–121.
    Liao S-H, Chu P-H, Hsiao P-Y. Data mining techniques and applications – A decade
    review from 2000 to 2011. Expert Systems with Applications, 2012; 39(12): 11303–11311.
    Chung B-K, Xia C, Song Y-H, Lee J-M, Li Y, Kim H, et al. Sampling of Bemisia tabaci
    adults using a pre-programmed autonomous pest control robot. Journal of Asia-Pacific
    Entomology, 2014; 17(4): 737–743. He D, Zeadally S. An analysis of RFID authentication
    schemes for internet of things in healthcare environment using elliptic curve
    cryptography. IEEE Internet of Things Journal, 2015; 2(1): 72–83. Miorandi D,
    Sicari S, de Pellegrini F, Chlamtac I. Internet of things: Vision, applications
    and research challenges. Ad Hoc Networks, 2012; 10(7): 1497–1516. Najera P, Lopez
    J, Roman R. Real-time location and inpatient care systems based on passive RFID.
    Journal of Network and Computer Applications, 2011; 34(3): 980–989. Liao M-S,
    Chen S-F, Chou C-Y, Chen H-Y, Yeh S-H, Chang Y-C, et al. On precisely relating
    the growth of Phalaenopsis leaves to greenhouse environmental factors by using
    an IoT-based monitoring system. Computers and Electronics in Agriculture, 2017;
    136: 125–139. Peng G, Lahlali R, Hwang S-F, Pageau D, Hynes R K, McDonald M R,
    et al. Crop rotation, cultivar resistance, and fungicides/biofungicides for managing
    clubroot (Plasmodiophora brassicae) on canola. Canadian Journal of Plant Pathology,
    2014; 36(sup1): 99–112. Lin M-J, Hsu B-D. Photosynthetic plasticity of Phalaenopsis
    in response to different light environments. Journal of Plant Physiology, 2004;
    161(11): 1259–1268. Caponetto R, Fortuna L, Nunnari G, Occhipinti L. A fuzzy approach
    to greenhouse climate control. Proceedings of the American Control Conference,
    1998; 3: 1866–1870. Pan L F, Wang W L, Wu Q D. Application of adaptive fuzzy logic
    system to model for greenhouse climate. Intelligent Control and Automation, 2000
    Proceedings of the 3rd World Congress, 2000; 3(1): 1687–1691. Lin C J. A GA-based
    neural fuzzy system for temperature control. Fuzzy Sets and Systems, 2004; 143(2):
    311–333. Castañeda-Miranda R, Ventura-Ramos E, del Rocío Peniche-Vera R, Herrera-Ruiz
    G. Fuzzy greenhouse climate control system based on a field programmable gate
    array. Biosystems Engineering, 2006; 94(2): 165–177. Xu F, Sheng J Q, Chen J L.
    Rough sets based fuzzy logic control for greenhouse temperature. 2006 2nd IEEE/ASME
    International Conference on Mechatronics and Embedded Systems and Applications,
    2006. Boulard T, Roy J-C, Pouillard J-B, Fatnassi H, Grisey A. Modelling of micrometeorology,
    canopy transpiration and photosynthesis in a closed greenhouse using computational
    fluid dynamics. Biosystems Engineering, 2017; 158(Supplement C): 110–133. Shamshiri
    R R, Mahadi M R, Thorp K R, Ismail W I W, Ahmad D, Man H C. Adaptive management
    framework for evaluating and adjusting microclimate parameters in tropical greenhouse
    crop production systems. In: Jurić S. Plant Engineering. Rijeka: InTech, 2017;
    p.9. Impron I, Hemming S, Bot G P A. Simple greenhouse climate model as a design
    tool for greenhouses in tropical lowland. Biosystems Engineering, 2007; 98(1):
    79–89. Lu N, Nukaya T, Kamimura T, Zhang D, Kurimoto I, Takagaki M et al. Control
    of vapor pressure deficit (VPD) in greenhouse enhanced tomato growth and productivity
    during the winter season. Scientia Horticulturae, 2015; 197: 17–23. Lafont F,
    Balmat J F, Pessel N, Fliess M. A model-free control strategy for an experimental
    greenhouse with an application to fault accommodation. Computers and Electronics
    in Agriculture, 2015; 110: 139–149. Gruber J K, Guzmán J L, Rodríguez F, Bordons
    C, Berenguel M, Sánchez J A. Nonlinear MPC based on a Volterra series model for
    greenhouse temperature control using natural ventilation. Control Engineering
    Practice, 2011; 19(4): 354–366. Speetjens S L, Stigter J D, van Straten G. Towards
    an adaptive model for greenhouse control. Computers and Electronics in Agriculture,
    2009; 67(1-2): 1–8. Bennis N, Duplaix J, Enéa G, Haloua M, Youlal H. Greenhouse
    climate modelling and robust control. Computers and Electronics in Agriculture,
    2008; 61(2): 96–107. Fleisher D H, Baruh H. An optimal control strategy for crop
    growth in advanced life support systems. Life Support & Biosphere Science, 2001;
    8(1): 43–53. Van Ooteghem R J C. Optimal control design for a solar greenhouse.
    IFAC Proceedings Volumes, 2010; 43(26): 304–309. Van Henten E J, Bontsema J. Time-scale
    decomposition of an optimal control problem in greenhouse climate management.
    Control Engineering Practice, 2009; 17(1): 88–96. Ioslovich I, Gutman P O, Linker
    R. Hamilton-Jacobi-Bellman formalism for optimal climate control of greenhouse
    crop. Automatica, 2009; 45(5): 1227–1231. Van Beveren P J M, Bontsema J, van Straten
    G, van Henten E J. Optimal control of greenhouse climate using minimal energy
    and grower defined bounds. Applied Energy, 2015; 159: 509–519. Van Beveren P J
    M, Bontsema J, van Straten G, van Henten E J. Minimal heating and cooling in a
    modern rose greenhouse. Applied Energy, 2015; 137: 97–109. Sanchez-Molina J A,
    Li M, Rodriguez F, Guzman J L, Wang H, Yang X T. Development and test verification
    of air temperature model for Chinese solar and Spainish Almeria-type greenhouses.
    Int J Agric & Biol Eng, 2017; 10(4): 66–76. Blasco X, Martínez M, Herrero J M,
    Ramos C, Sanchis J. Model-based predictive control of greenhouse climate for reducing
    energy and water consumption. Computers and Electronics in Agriculture, 2007;
    55(1): 49–70. Ji R, Qi L, Huo Z. Design of fuzzy control algorithm for precious
    irrigation system in greenhouse. Computer and Computing Technologies in Agriculture
    V, Berlin, Heidelberg: Springer Berlin Heidelberg, 2012. Márquez-Vera M A, Ramos-Fernández
    J C, Cerecero-Natale L F, Lafont F, Balmat J-F, Esparza-Villanueva J I. Temperature
    control in a MISO greenhouse by inverting its fuzzy model. Computers and Electronics
    in Agriculture, 2016; 124: 168–174. El-Madbouly E I, Hameed I A, Abdo M I. Reconfigurable
    adaptive fuzzy fault-hiding control for greenhouse climate control system. International
    Journal of Automation and Control, 2017; 11(2): 164–187. Nachidi M, Rodríguez
    F, Tadeo F, Guzman J L. TakagiSugeno control of nocturnal temperature in greenhouses
    using air heating. ISA Transactions, 2011; 50(2): 315–320. Liu X-W, Dai T-F. Design
    for fuzzy decoupling control system of temperature and humidity. Advanced Research
    on Computer Science and Information Engineering, Berlin, Heidelberg: Springer
    Berlin Heidelberg, 2011. Vadiee A, Martin V. Energy management in horticultural
    applications through the closed greenhouse concept, state of the art. Renewable
    and Sustainable Energy Reviews, 2012; 16(7): 5087–5100. Ghasemi Mobtaker H, Ajabshirchi
    Y, Ranjbar S F, Matloobi M. Solar energy conservation in greenhouse: Thermal analysis
    and experimental validation. Renewable Energy, 2016; 96(Part A): 509–519. Taki
    M, Rohani A, Rahmati-joneidabad M. Solar thermal simulation and applications in
    greenhouse. Information Processing in Agriculture, 2017. Ha T, Lee I-B, Kwon K-S,
    Hong S-W. Computation and field experiment validation of greenhouse energy load
    using building energy simulation model, 2015; 8(6): 116–127. Flores-velazquez
    J, Montero J I, Baeza E J, Lopez J C. Mechanical and natural ventilation systems
    in a greenhouse designed using computational fluid dynamics. Int J Agric & Biol
    Eng, 2014; 7(1): 1–16. Chen J, Xu F, Tan D, Shen Z, Zhang L, Ai Q. A control method
    for agricultural greenhouses heating based on computational fluid dynamics and
    energy prediction model. Applied Energy, 2015;141: 106–118. Xu J, Li Y, Wang R
    Z, Liu W, Zhou P. Experimental performance of evaporative cooling pad systems
    in greenhouses in humid subtropical climates. Applied Energy, 2015; 138: 291–301.
    Espinoza K, Valera D L, Torres J A, López A, Molina-Aiz F D. An Auto-tuning pi
    control system for an open-circuit low-speed wind tunnel designed for greenhouse
    technology. Sensors, 2015: 19723–19749. Ioslovich I, Gutman P-O, Linker R. Hamilton–Jacobi–Bellman
    formalism for optimal climate control of greenhouse crop. Automatica, 2009; 45(5):
    1227–1231. Van Beveren P, Bontsema J, van Straten G, van Henten E J. Minimal heating
    and cooling in a modern rose greenhouse. IFAC Proceedings Volumes, 2013; 46(18):
    282–287. Van Beveren P, Bontsema J, van Straten G, van Henten E. Minimal heating
    and cooling in a modern rose greenhouse. Applied energy, 2015; 137: 97–109. Incrocci
    L, Stanghellini C, Kempkes F. Carbon dioxide fertilization in Mediterranean greenhouses:
    When and how is it economical? International Symposium on Strategies Towards Sustainability
    of Protected Cultivation in Mild Winter Climate 807, 2008. Linker R, Seginer I,
    Gutman P. Optimal CO2 control in a greenhouse modeled with neural networks. Computers
    and Electronics in Agriculture, 1998; 19(3): 289–310. Van Beveren P, Bontsema
    J, van Straten G, van Henten E. Optimal control of greenhouse climate using minimal
    energy and grower defined bounds. Applied Energy, 2015; 159: 509–519. Nadal A,
    Llorach-Massana P, Cuerva E, López-Capel E, Montero J I, Josa A, et al. Building-integrated
    rooftop greenhouses: An energy and environmental assessment in the mediterranean
    context. Applied Energy, 2017; 187: 338–351. Vadiee A, Martin V. Thermal energy
    storage strategies for effective closed greenhouse design. Applied Energy, 2013;
    109: 337–343. Vadiee A, Martin V. Energy analysis and thermoeconomic assessment
    of the closed greenhouse-The largest commercial solar building. Applied Energy,
    2013; 102: 1256–1266. Heuvelink E, Bakker M, Marcelis L, Raaphorst M. Climate
    and yield in a closed greenhouse. Acta Horticulturae, 2008; 801: 1083–1092. Farzaneh-Gord
    M, Arabkoohsar A, Deymi Dashtebayaz M, Khoshnevis A A. New method for applying
    solar energy in greenhouses to reduce fuel consumption. Int J Agric & Biol Eng,
    2013; 6(4): 64–75. Van Den Bulck N, Coomans M, Wittemans L, Hanssens J, Steppe
    K. Monitoring and energetic performance analysis of an innovative ventilation
    concept in a Belgian greenhouse. Energy and Buildings, 2013; 57: 51–57. Kittas
    C, Bartzanas T. Greenhouse microclimate and dehumidification effectiveness under
    different ventilator configurations. Building and Environment, 2007; 42(10): 3774–3784.
    Mashonjowa E, Ronsse F, Milford J R, Pieters J G. Modelling the thermal performance
    of a naturally ventilated greenhouse in Zimbabwe using a dynamic greenhouse climate
    model. Solar Energy, 2013; 91: 381–393. Wu F-Q, Zhang L-B, Xu F, Ai Q-L, Chen
    J-L. Numerical modeling and analysis of the environment in a mechanically ventilated
    greenhouse. Proceedings of SPIE, 2009; 7491(1): 749106–749108. DAYIOĞLU M A. Performance
    analysis of a greenhouse fan-pad cooling system: gradients of horizontal temperature
    and relative humidity. Tarım Bilimleri Dergisi, 2015; 21(1): 132–143. Fuchs M,
    Dayan E, Presnov E. Evaporative cooling of a ventilated greenhouse rose crop.
    Agricultural and Forest Meteorology, 2006; 138(1): 203–215. Montero J I. Evaporative
    cooling in greenhouses: Effect on microclimate, water use efficiency and plant
    respons. International Society for Horticultural Science (ISHS), Leuven, Belgium,
    2006. Jain D. Development and testing of two-stage evaporative cooler. Building
    and Environment, 2007; 42(7): 2549–2554. Jamaludin D, Ahmad D, Kamaruddin R, Jaafar
    H Z E. Microclimate inside a tropical greenhouse equipped with evaporative cooling
    pads. Pertanika Journal of Science and Technology, 2014; 22(1): 255–272. Villarreal-Guerrero
    F, Kacira M, Fitz-Rodríguez E, Kubota C, Giacomelli G A, Linker R, et al. Comparison
    of three evapotranspiration models for a greenhouse cooling strategy with natural
    ventilation and variable high pressure fogging. Scientia Horticulturae, 2012;
    134: 210–221. Shamshiri R, Ismail W I W. A review of greenhouse climate control
    and automation systems in tropical regions. J Agric Sci Appl, 2013; 2(3): 176–183.
    Li T, Ji Y H, Zhang M, Sha S, Li M Z. Universality of an improved photosynthesis
    prediction model based on PSO-SVM at all growth stages of tomato. Int J Agric
    & Biol Eng, 2017; 10(2): 63–73. Baptista F J F. Modelling the climate in unheated
    tomato greenhouses and predicting Botrytis cinerea infection. Universidade de
    Evora (Portugal), 2007. Dimokas G, Tchamitchian M, Kittas C. Calibration and validation
    of a biological model to simulate the development and production of tomatoes in
    Mediterranean greenhouses during winter period. Biosystems Engineering, 2009;
    103(2): 217–227. Takakura T. Technical models of the greenhouse environment. International
    Society for Horticultural Science (ISHS), Leuven, Belgium, 1989. Tap R F. Economics-based
    optimal control of greenhouse tomato crop production. Wageningen University, 2000.
    Van Henten E J. Sensitivity analysis of an optimal control problem in greenhouse
    climate management. Biosystems Engineering, 2003; 85(3): 355–364. Luo W, de Zwart
    H F, Dail J, Wang X, Stanghellini C, Bu C. Simulation of greenhouse management
    in the subtropics, Part I: Model validation and scenario study for the winter
    season. Biosystems Engineering, 2005; 90(3): 307–318. Sethi V P, Dubey R K, Dhath
    A S. Design and evaluation of modified screen net house for off-season vegetable
    raising in composite climate. Energy Conversion and Management, 2009; 50(12):
    3112–3128. Fitz-Rodríguez E, Kubota C, Giacomelli G A, Tignor M E, Wilson S B,
    McMahon M. Dynamic modeling and simulation of greenhouse environments under several
    scenarios: A web-based application. Computers and Electronics in Agriculture,
    2010; 70(1): 105–116. Panwar N L, Kaushik S C, Kothari S. Solar greenhouse an
    option for renewable and sustainable farming. Renewable and Sustainable Energy
    Reviews, 2011; 15(8): 3934–3945. Nebbali R, Roy J C, Boulard T. Dynamic simulation
    of the distributed radiative and convective climate within a cropped greenhouse.
    Renewable Energy, 2012; 43: 111–129. Yu H, Chen Y, Hassan S G, Li D. Prediction
    of the temperature in a Chinese solar greenhouse based on LSSVM optimized by improved
    PSO. Computers and Electronics in Agriculture, 2016; 122: 94–102. De Zwart H F.
    Analyzing energy-saving options in greenhouse cultivation using a simulation model.
    De Zwart, 1996. Graamans L, Baeza E, van den Dobbelsteen A, Tsafaras I, Stanghellini
    C. Plant factories versus greenhouses: Comparison of resource use efficiency.
    Agricultural Systems, 2018; 160: 31–43. Gary C, Jones J W, Tchamitchian M. Crop
    modelling in horticulture: State of the art. Scientia Horticulturae, 1998; 74(1-2):
    3–20. Heuvelink E. Evaluation of a dynamic simulation model for tomato crop growth
    and development. Annals of Botany, 1999; 83(4): 413–422. Gary C, Baille A, Navarrete
    M, Espanet R. TOMPOUSSE, un modèle simplifié de prévision du rendement et du calibre
    de la tomate. Actes du Séminaire de l''AIP intersectorielle\" Serres\", INRA,
    Avignon, 1997: 100–109. Abreu P, Meneses J F, Gary C. Tompousse, a model of yield
    prediction for tomato crops: calibration study for unheated plastic greenhouses.
    International Society for Horticultural Science (ISHS), Leuven, Belgium, 2000.
    Jones J W, Dayan E, Allen L H, van Keulen H, Challa H. A dynamic tomato growth
    and yield model (TOMGRO). Transactions of the ASAE, 1991; 34(2): 663–672. Jones
    J W, Kenig A, Vallejos C E. Reduced state–variable tomato growth model. Transactions
    of the ASAE, 1999; 42(1): 255–265. Kenig A. TOMGRO v3. 0 A dynamic model of tomato
    growth and yield. Ch. II-5 In: Optimal environmental control for indeterminate
    greenhouse crops. Seginer I, Jones J W, Gutman P, Vallejos C E. BARD Research
    Report No. IS-1995-91RC. Haifa, 1997. Cooman A, Medina A, Schrevens E, Tenorio
    J. Simulation of greenhouse management for the cultivation of tomato in the high
    altitude tropics. International Society for Horticultural Science (ISHS), Leuven,
    Belgium, 2005. Gallardo M, Thompson R B, Rodríguez J S, Rodríguez F, Fernández
    M D, Sánchez J A, et al. Simulation of transpiration, drainage, N uptake, nitrate
    leaching, and N uptake concentration in tomato grown in open substrate. Agricultural
    Water Management, 2009; 96(12): 1773–1784. Shamshiri R, Ahmad D, Ishak Wan Ismail
    W, Che Man H, Zakaria A, Yamin M, et al. Comparative evaluation of naturally ventilated
    screenhouse and evaporative cooled greenhouse based on optimal vapor pressure
    deficit. 2016 ASABE Annual International Meeting, St. Joseph, MI: ASABE, 2016;
    1. Ehret D L, Hill B D, Helmer T, Edwards D R. Neural network modeling of greenhouse
    tomato yield, growth and water use from automated crop monitoring data. Computers
    and Electronics in Agriculture, 2011; 79(1): 82–89. Clarke N D, Shipp J L, Papadopoulos
    A P, Jarvis W R, Khosla S, Jewett T J, et al. Development of the harrow greenhouse
    manager: A decision-support system for greenhouse cucumber and tomato. Computers
    and Electronics in Agriculture, 1999; 24(3): 195–204. Gupta M K, Samuel D V K,
    Sirohi N P S. Decision support system for greenhouse seedling production. Computers
    and Electronics in Agriculture, 2010; 73(2): 133–145. Pawlowski A, Sánchez-Molina
    J A, Guzmán J L, Rodríguez F, Dormido S. Evaluation of event-based irrigation
    system control scheme for tomato crops in greenhouses. Agricultural Water Management,
    2017; 183: 16–25. Sánchez-Molina J A, Pérez N, Rodríguez F, Guzmán J L, López
    J C. Support system for decision making in the management of the greenhouse environmental
    based on growth model for sweet pepper. Agricultural Systems, 2015; 139: 144–152.
    Fisher P R, Heins R D, Ehler N, Lieth J H. A decision-support system for real-time
    management of Easter lily (Lilium longiflorum Thunb.) scheduling and height-I.
    System description. Agricultural Systems, 1997; 54(1): 23–37. 200. Sun Z F, Zhang
    Z B, Tong C F. Development of a real time on-line aided decision-making support
    system for greenhouse tomato production. Transaction of CSAE, 2001; 17(7): 75–78.
    (in Chinese) Tchamitchian M, Martin-Clouaire R, Lagier J, Jeannequin B, Mercier
    S. SERRISTE: A daily set point determination software for glasshouse tomato production.
    Computers and Electronics in Agriculture, 2006; 50(1): 25–47. Körner OSGV. Decision
    support for dynamic greenhouse climate control strategies. Computers and Electronics
    in Agriculture, 2008; 60: 18–30. Cañadas J, Sánchez-Molina J A, Rodríguez F, del
    Águila I M. Improving automatic climate control with decision support techniques
    to minimize disease effects in greenhouse tomatoes. Information Processing in
    Agriculture, 2017; 4(1): 50–63. Aiello G, Giovino I, Vallone M, Catania P, Argento
    A. A decision support system based on multisensor data fusion for sustainable
    greenhouse management. Journal of Cleaner Production, 2018; 172: 4057–4065. 205.
    Short T H, Draper C M, Donnell M A. Web-based decision support system for hydroponic
    vegetable production. International Conference on Sustainable Greenhouse Systems-Greensys,
    2004: 867–870. El-Attal A H. Decision model for hydroponic tomato production (hytodmod)
    using utility theory. The Ohio State University, 1995. Shamshiri R, Che Man H,
    Zakaria A J, Beveren P V, Wan Ismail W I, Ahmad D. Membership function model for
    defining optimality of vapor pressure deficit in closed-field cultivation of tomato.
    International Society for Horticultural Science (ISHS), Leuven, Belgium, 2017.
    Shamshiri R, van Beveren P, Che Man H, Zakaria A J. Dynamic Assessment of air
    temperature for tomato (Lycopersicon esculentum Mill) cultivation in a naturally
    ventilated net-screen greenhouse under tropical lowlands climate. Journal of Agricultural
    Science and Technology, 2017; 19(1): 59–72. Ellis J. Agricultural transparency:
    Reconnecting urban centres with food production, 2012. Abel C. The vertical garden
    city: towards a new urban topology. CTBUH Journal, 2010; 2: 20–30. Despommier
    D. The vertical farm: Feeding the world in the 21st century. Macmillan, 2010.
    Caplow T. Building integrated agriculture: Philosophy and practice. Urban Futures,
    2009; 2030: 48–51. Thomaier S, Specht K, Henckel D, Dierich A, Siebert R, Freisinger
    U B, et al. Farming in and on urban buildings: Present practice and specific novelties
    of Zero-Acreage Farming (ZFarming). Renewable Agriculture and Food Systems, 2015;
    30(1): 43–54. Mok H-F, Williamson V G, Grove J R, Burry K, Barker S F, Hamilton
    A J. Strawberry fields forever? Urban agriculture in developed countries: A review.
    Agronomy for Sustainable Development, 2014; 34(1): 21–43. Taylor J R, Lovell S
    T. Mapping public and private spaces of urban agriculture in Chicago through the
    analysis of high-resolution aerial images in Google Earth. Landscape and Urban
    Planning, 2012; 108(1): 57–70. Benis K, Ferrão P. Potential mitigation of the
    environmental impacts of food systems through urban and peri-urban agriculture
    (UPA) – A life cycle assessment approach. Journal of Cleaner Production, 2017;
    140: 784–795. Pölling B, Mergenthaler M, Lorleberg W. Professional urban agriculture
    and its characteristic business models in Metropolis Ruhr, Germany. Land Use Policy,
    2016; 58: 366–379. Cahya D L. Analysis of urban agriculture sustainability in
    metropolitan Jakarta (Case study: Urban agriculture in Duri Kosambi). Procedia
    - Social and Behavioral Sciences, 2016; 227: 95–100. Ahlström L, Zahra M. Integrating
    a greenhouse in an urban area. Unpublished master’s thesis, Chalmers University
    of Technology, Göteborg, Sweden, 2011. Kaplan PBT-DM. Encyclopedia of food and
    agricultural ethics. 2014. Besthorn F H. Vertical farming: Social work and sustainable
    urban agriculture in an age of global food crises. Australian Social Work, 2013;
    66(2): 187–203. Holloway M. The glass house in the desert. Scientific American,
    2002; 286(1): 90–92. Lehmann S, Yeang K. Meeting with the green urban planner:
    a conversation between Ken Yeang and Steffen Lehmann on eco-masterplanning for
    green cities. Journal of Green Building, 2010; 5(1): 36–40. Kim H-G, Park D-H,
    Chowdhury O R, Shin C-S, Cho Y-Y, Park J-W. Location-based intelligent robot management
    service model using RGPSi with AoA for vertical farm. Advances in Computer Science
    and its Applications, Berlin, Heidelberg: Springer Berlin Heidelberg, 2014. Banerjee
    C, Adenaeuer L. Up, up and away! The economics of vertical farming. Journal of
    Agricultural Studies, 2014; 2(1): 40–60. Joachim S. Skyfarming: An alternative
    to horizontal croplands. Resource Magazine, 2011. Germer J, Sauerborn J, Asch
    F, de Boer J, Schreiber J, Weber G, et al. Skyfarming an ecological innovation
    to enhance global food security. Journal für Verbraucherschutz und Lebensmittelsicherheit,
    2011; 6(2): 237. Sivamani S, Bae N, Cho Y. A smart service model based on ubiquitous
    sensor networks using vertical farm ontology. International Journal of Distributed
    Sensor Networks, 2013. Al-Chalabi M. Vertical farming: Skyscraper sustainability?
    Sustainable Cities and Society, 2015; 18: 74–77. Miller A. Scaling up or selling
    out?: A critical appraisal of current developments in vertical farming. Carleton
    University, 2011. Kalantari F, Mohd Tahir O, Mahmoudi Lahijani A, Kalantari S.
    A review of vertical farming technology: A guide for implementation of building
    integrated agriculture in cities. Trans Tech Publ, 2017. Liu X. Design of a modified
    shipping container as modular unit for the minimally structured & modular vertical
    farm (MSM-VF): The University of Arizona, 2014. Montero J I, Baeza E, Heuvelink
    E, Rieradevall J, Muñoz P, Ercilla M. Productivity of a building-integrated roof
    top greenhouse in a Mediterranean climate. Agricultural Systems, 2017; 158: 14–22.
    Pons O, Nadal A, Sanyé-mengual E, Llorach-massana P, Rosa M. Roofs of the future:
    Rooftop greenhouses to improve buildings metabolism. Procedia Engineering, 2015;
    123: 441–448. Sanyé-Mengual E, Cerón-Palma I, Oliver-Solà J, Montero J I, Rieradevall
    J. Integrating horticulture into cities: A guide for assessing the implementation
    potential of rooftop greenhouses (RTGs) in industrial and logistics parks. Journal
    of Urban Technology, 2015; 22(1): 87–111. Ercilla-Montserrat M, Izquierdo R, Belmonte
    J, Ignacio J, Muñoz P, Linares C D, et al. Science of the total environment building-integrated
    agriculture: A first assessment of aerobiological air quality in rooftop greenhouses
    (i-RTGs). Science of the Total Environment, 2017; 598: 109–120. Kozai T. Resource
    use efficiency of closed plant production system with artificial light: Concept,
    estimation and application to plant factory. Proceedings of the Japan Academy,
    Series B, 2013; 89(10): 447–461. Glaser J A. Green chemistry with nanocatalysts.
    Clean Technologies and Environmental Policy, 2012; 14(4): 513–520. Miyagi A, Uchimiya
    H, Kawai-Yamada M. Synergistic effects of light quality, carbon dioxide and nutrients
    on metabolite compositions of head lettuce under artificial growth conditions
    mimicking a plant factory. Food Chemistry, 2017; 218: 561–568. Shimokawa A, Tonooka
    Y, Matsumoto M, Ara H, Suzuki H, Yamauchi N, et al. Effect of alternating red
    and blue light irradiation generated by light emitting diodes on the growth of
    leaf lettuce. bioRxiv, 2014. García-Fraile P, Menéndez E, Rivas R. Role of bacterial
    biofertilizers in agriculture and forestry. AIMS Bioengineering, 2015; 2(3): 183–205.
    Kalantari F, Tahir O M, Joni R A, Fatemi E. Opportunities and challenges in sustainability
    of vertical farming: A review. Journal of Landscape Ecology, 2017: 5–30. Eigenbrod
    C, Gruda N. Urban vegetable for food security in cities: A review. Agronomy for
    Sustainable Development, 2015; 35(2): 483–498. Zoll F, Specht K, Siebert R. Innovation
    in urban agriculture: Evaluation data of a participatory approach (ROIR). Data
    in Brief, 2016; 7: 1473–1476. Despommier D. Farming up the city: The rise of urban
    vertical farms. Trends in Biotechnology, 2013; 31(7): 388–389. Voss P M. Vertical
    farming: An agricultural revolution on the rise. Halmstad, 2013.    Copyright
    (c)    2023-2026 Copyright IJABE Editing and Publishing Office"'
  inline_citation: '>'
  journal: International Journal of Agricultural and Biological Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Advances in greenhouse automation and controlled environment agriculture:
    A transition to plant factories and urban agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sawant S.
  - Durbha S.S.
  - Jagarlapudi A.
  citation_count: '50'
  description: Advances in Internet of Things (IoT) based sensing systems have improved
    capabilities to precisely monitor environmental conditions. Plants are sessile
    organisms and are affected by biotic and abiotic stresses caused due to surrounding
    environmental conditions such as soil water content, pest/disease infestation,
    and soil health. High-resolution sensing (Wireless Sensor Networks (WSN) Systems)
    of agro-meteorological parameters helps to solve critical issues about the crop-weather-soil
    continuum. Currently, many WSN systems are deployed all over the World for precision
    agriculture purposes. Although there have been many improvements in the communication
    aspects of the WSN's, the data dissemination and near real-time analysis components
    for taking dynamic decision, particularly in agriculture domain has not matured.
    The current WSN systems do not have a standardized way of data discovery, access,
    and sharing, which impedes the integration of data across various distributed
    sensor networks. This study addresses above issues through the adaptation of a
    framework based on Open Geospatial Consortium (OGC) standards for Sensor Web Enablement
    (SWE). For precision agriculture applications a cost-effective, standardized sensing
    system (hardware and software) has been developed, which includes functionalities
    such as sensors plug-n-play, remote monitoring, tools for crop water requirement
    estimation, pest, disease monitoring, and nutrient management. Also, the modeling
    techniques were integrated with the interoperable web-enabled sensing system for
    addressing water management problems of horticultural crops in semi-arid areas.
  doi: 10.1016/j.compag.2017.04.019
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. A case study on application of SOA for citrus crop water requirement estimation
    4. Results and discussions 5. Conclusions Acknowledgements References Show full
    outline Cited by (54) Figures (13) Show 7 more figures Tables (2) Table 1 Table
    2 Computers and Electronics in Agriculture Volume 138, 1 June 2017, Pages 175-187
    Original papers Interoperable agro-meteorological observation and analysis platform
    for precision agriculture: A case study in citrus crop water requirement estimation
    Author links open overlay panel Suryakant Sawant, Surya S. Durbha, Jagarlapudi
    Adinarayana Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2017.04.019
    Get rights and content Highlights • Designed a sensor platform for precision agro-meteorological
    monitoring. • Integrated sensor web enablement standards to achieve interoperability.
    • Crop water requirement algorithms are integrated with the sensing system. •
    Demonstrated the use of interoperable sensing systems for crop water management.
    • Interoperable sensing systems have potential to study crop-weather-soil continuum.
    Abstract Advances in Internet of Things (IoT) based sensing systems have improved
    capabilities to precisely monitor environmental conditions. Plants are sessile
    organisms and are affected by biotic and abiotic stresses caused due to surrounding
    environmental conditions such as soil water content, pest/disease infestation,
    and soil health. High-resolution sensing (Wireless Sensor Networks (WSN) Systems)
    of agro-meteorological parameters helps to solve critical issues about the crop-weather-soil
    continuum. Currently, many WSN systems are deployed all over the World for precision
    agriculture purposes. Although there have been many improvements in the communication
    aspects of the WSN''s, the data dissemination and near real-time analysis components
    for taking dynamic decision, particularly in agriculture domain has not matured.
    The current WSN systems do not have a standardized way of data discovery, access,
    and sharing, which impedes the integration of data across various distributed
    sensor networks. This study addresses above issues through the adaptation of a
    framework based on Open Geospatial Consortium (OGC) standards for Sensor Web Enablement
    (SWE). For precision agriculture applications a cost-effective, standardized sensing
    system (hardware and software) has been developed, which includes functionalities
    such as sensors plug-n-play, remote monitoring, tools for crop water requirement
    estimation, pest, disease monitoring, and nutrient management. Also, the modeling
    techniques were integrated with the interoperable web-enabled sensing system for
    addressing water management problems of horticultural crops in semi-arid areas.
    Previous article in issue Next article in issue Keywords Sensor web enablementSensor
    Observation ServiceCrop water requirementAgro-meteorological monitoringWireless
    Sensor Network 1. Introduction Agriculture is an important sector which drives
    the economy and food security of many nations. Various kinds of sensing systems
    are emerging in the area of precision agriculture in which the current trend is
    towards the design and development of cost-effective, energy efficient and fault
    tolerant Wireless Sensor Networks (WSNs) for various monitoring and management
    applications. The focus of recent research is on improving and sustaining the
    productivity of different crops. Current advances in Information Communication
    and Dissemination Technologies (ICDT''s) have well proven their ability in information
    and knowledge dissemination. Globally, the ICDT initiatives in the field of agriculture
    have shown that with accurate monitoring and analysis of crop/weather parameters,
    it is possible to judiciously allocate available resources in agriculture (Nash
    et al., 2009, Lee et al., 2010, Prabhakar et al., 2010, Li et al., 2011). Several
    WSNs are being deployed in many countries, and have a wide range of applications
    in agriculture, such as: • Crop/pest disease monitoring (Riquelme et al., 2009,
    Tripathy et al., 2011). • Crop water management (Panchard et al., 2006, Panchard
    et al., 2007, uAgri C-DAC, 2013, Sudharsan et al., 2012, Ojha et al., 2015). •
    Crop yield prediction (Honda et al., 2009, Sudharsan et al., 2011). • Weather
    based advisory services (IMD, 2016, ISRO, 2015, mKRISHI, 2016). In general, several
    dissemination systems are currently being deployed, which enables the discovery,
    access and retrieval of various meteorological, biophysical, ocean and coastal
    water quality parameters. This kind of systems can be divided into two types:
    (1) Stovepipe or standalone systems which provide sensor details (i.e. metadata,
    observations and measurements) in their own formats (Panchard et al., 2006, Panchard
    et al., 2007, Riquelme et al., 2009, Sudharsan et al., 2011, Sudharsan et al.,
    2012, Tripathy et al., 2011, Ojha et al., 2015). (2) Interoperable systems and
    platforms which implement commonly agreed standards for sensor metadata, observation
    and measurement representation (Korduan et al., 2004, Murakami et al., 2007, Mizoguchi
    et al., 2008, Nash et al., 2009, Durbha et al., 2010, Nikkilä et al., 2010, Bröring
    et al., 2011a, Bröring et al., 2011b, Patil et al., 2012, Sawant et al., 2012,
    Jazayeri et al., 2012, Liang and Huang, 2013, Chen et al., 2015, Du et al., 2016,
    Geipel et al., 2016). However, there is a paucity of standards driven, interoperable
    systems in the Agriculture domain that severely impedes the discovery and access
    of data across Agri-WSN''s. For example, to answer a question such as “What is
    the crop water requirement during a particular crop growth stage?, there is a
    need for weather parameters such as air temperature, relative humidity, solar
    radiation, wind speed, and rainfall. from weather station and crop growth stage
    information from field/cultivation practice. It''s hard for users from diverse
    areas of study to understand the exact lineage of the collected data i.e. how
    the measurement is transformed into an observation. It is possible that the measurement
    has gone through various transformations (e.g. application calibration curves),
    which can also give rise to heterogeneous data formats (Comma Separated Values
    (CSV), Tab Separated Values (TSV), EXtensible Markup Language (XML), etc.). With
    this ever increasing spread of WSNs, there is a need for standard sets of specifications
    (both syntactic and semantic) and encodings to bring multiple sensor networks
    on a common platform (Durbha et al., 2010, Bröring et al., 2011a, Patil et al.,
    2012, Liang and Huang, 2013). Which enables the development of geographically
    distributed systems that are standardized at the semantic (Folmer and Verhoosel,
    2011, Compton et al., 2012) and Syntactic (Bröring et al., 2011b) level for regional
    agricultural practices planning (i.e. irrigation, pest/disease management, etc.).
    The initiatives such as, FOODIE: Farm-Oriented Open Data in Europe (Esbri et al.,
    2014), GeoCENS: Geospatial Cyberinfrastructure for the World-Wide Sensor Web (Liang
    and Huang, 2013), Sensor Asia (Mizoguchi et al., 2008) and Service Oriented Architecture
    for sensor data discovery in agriculture (Patil et al., 2012, Sawant et al., 2012,
    Chen et al., 2015), are some of the attempts towards facilitating the interoperability
    and sensor data discovery. These studies have shown the utility of Open Geospatial
    Consortium (OGC) specified Sensor Observation Service (SOS) standards for sensor
    data access from geographically distributed sensing systems (OGC, 2016, Bröring
    et al., 2012, Bröring et al., 2011a). Keeping in view of the requirement of a
    sensing and analysis platform in the ever increasing precision agriculture area,
    the specific objectives of this paper are: • to design a sensor platform (hardware)
    with integrated SWE architecture for precision agro-meteorological monitoring
    • to integrate the OGC''s Sensor Web Enablement (SWE) standards to achieve interoperability
    and scalability of heterogeneous sensing systems • to demonstrate the utility
    of such interoperable sensing systems for agro-meteorological monitoring and potential
    evapotranspiration estimation. This paper is organized into various sections:
    Section 2 describes the design of sensor platform (hardware) and integration of
    sensor web architecture (software) for agriculture monitoring. A case study on
    the application of interoperable sensor system for crop water requirement analysis
    is described in Section 3. Section 4 presents results and discussions on the integrated
    sensor web system and its utility for crop water requirement analysis. Section
    5 concludes with a comparison between current SWE initiatives for precision agriculture
    and a description of the future work. 2. Materials and methods The sensor web
    enablement framework of the agro-meteorological observation and analysis platform
    consists of three layers: (1) Sensing systems, (2) Sensor Web Enablement (middleware)
    and (3) Web based visualization layer (Fig. 1). Below is a description of each
    component of the framework shown in Fig. 1. Download : Download high-res image
    (768KB) Download : Download full-size image Fig. 1. Sensor web enablement architecture
    of the agro-meteorological observation and analysis platform. 2.1. Sensing systems
    The sensing systems layer comprise of the network of geographically distributed
    heterogeneous sensing systems (i.e. a set of standalone and interoperable sensing
    platforms). 2.1.1. Development of an interoperable sensing platform An interoperable
    wireless sensing system (henceforth called as SenseTube) has been designed using
    low powered System on Chip (SoC) single board computer (i.e. Raspberry Pi/R-Pi,
    Raspberry Pi (2016)) as a data collection and dissemination platform (Fig. 2a)
    (Sawant et al., 2015). Multiple sensor nodes (child nodes) can be interfaced with
    the SenseTube base station. Download : Download high-res image (226KB) Download
    : Download full-size image Fig. 2. Interoperable sensing system, (a) system hardware
    block diagram and (b) interoperable sensor data communication architecture. Field
    level node to node communication has been established using Wi-Fi (i.e. IEEE 108.11)
    communication protocol (Fig. 2b) (Sawant et al., 2015). The General Purpose Input
    Output (GPIO) pins of SoC hardware are utilized to connect the Analog to Digital
    Converter (ADC), and through Serial Peripheral Interface (SPI) the data is collected.
    The ADC has eight analog channels for connecting external sensors. The resolution
    of ADC is 10 bit thereby facilitating to interface analog sensors such as temperature,
    and humidity. The digital (raw) voltage observations collected from ADC are converted
    into physical measurements and stored onboard. The sensor sampling and polling
    frequency can be adjusted through the configuration interface. The default sampling
    interval has been set to fifteen minutes and polling frequency to one hour. The
    sensing system comprises of sensor node collecting observations at fixed interval.
    The sensing system can be configured as a base station and child node. When set
    as base station sensor node receive observations and measurements from distributed
    child nodes and transmit over remote address/service. The child node configuration
    provides a capability to receive and locally transfer sensor observations and
    measurements to the base station. Table 1 lists sensing system configurations
    for interoperable sensing system (SenseTube). Table 1. Sensing system configuration.
    SN Configuration parameter System configuration 1. Resolution Analog to Digital
    Convertor (ADC) 10 bit 2. Number of analog channels 8 channels 3. Sampling frequency
    15 min 4. Polling frequency 1 h Existing infrastructure of Internet Service Providers
    (ISP''s) has been utilized in the present study for internet connectivity. Normally,
    the ISP''s dynamically assign Internet Protocol (IP) address to the field based
    sensing system, this configuration brings out two cost-effective approaches to
    communicate with the data processing layer: (1) through Virtual Private Network
    (VPN) server configured on fixed IP addressed remote/cloud service platform (Liu,
    2000), (2) using cost-effective cloud service (e.g. ownCloud, Dropbox, etc.) which
    is easily accessible to both the field based sensing system and remote/cloud based
    data processing server (ownCloud, 2016, Dropbox, 2016). Direct reliable and secure
    access to SWE sensing platform facilitate the on-board data processing (i.e. estimate
    reference evapotranspiration, daily minimum/maximum temperature, humidity, etc.).
    The remote/cloud based data processing server can access the field nodes using
    SWE requests such as GetCapabilities, DescribeSensor, and GetObservation detailed
    information about communication between field based interoperable sensing systems,
    and sensor data storage and data analysis layer (middleware) is described in the
    subsequent section. 2.1.2. Existing standalone sensing systems Various studies
    have provided methodologies for SWE of standalone (the sensing systems which provide
    sensor details in their formats) sensing systems (Patil et al., 2012, Sawant et
    al., 2012, Liang and Huang, 2013, Chen et al., 2015). A wrapper (a piece of software
    to transform sensor observations) is necessary to make standalone sensing system
    into OGC standardized, interoperable sensing system. The method for design of
    Service Oriented Architecture (SOA) proposed by Patil et al., 2012, Sawant et
    al., 2012 has been used for regional Automatic Weather Station (AWS). This methodology
    facilitates the integration of standalone AWS into interoperable sensor web layer.
    2.2. Sensor web enablement layer (Middleware) The SWE layer provides sensor data
    polling and processing facility. The OGC standards such as SOS, Observations and
    Measurements (O&M), Sensor Model Language (Sensor ML), and Web Processing Service
    (WPS) are used to establish communication between sensing systems and client interface.
    2.2.1. Background 2.2.1.1. Sensor model language The Sensor ML has the primary
    objective to provide a robust and semantically-tied means of defining processes
    and processing components associated with the measurement and post-measurement
    transformation of observations. This includes sensors and actuators as well as
    computational processes applied pre- and post-measurement (Botts and Robin, 2007).
    In sensor web enablement architecture shown in Fig. 1, SensorML encoding is used
    to define each sensor of the sensing system. The sensor details include observed
    property, transducer information, manufacturer, geographical location, etc. The
    detailed description about sensor Observations and Measurements is discussed in
    subsequent section. 2.2.1.2. Observations and measurements The OGC O&M standard
    specifies an XML implementation for the OGC and ISO Observations and Measurements
    (O&M) conceptual model, including a schema for sampling features. The O&M encoding
    is an essential dependency for the SOS interface standard as it defines XML schemas
    for observations and for features involved in sampling when making observations
    (Cox, 2011). The O&M specifications are used to formulate the response to the
    GetObservation request which is comprised of observed properties and constrained
    by observation schema definitions (Fig. 1). The GetObservation request states
    the feature of interest with begin and end timestamp and observed properties.
    The details of SOS component is described in subsequent section. 2.2.1.3. Sensor
    observation service The OGC SOS standard defines a web service interface which
    allows querying observations, sensor metadata, as well as representations of observed
    features. Further, this standard defines means to register new sensors and to
    remove existing ones. Also, it defines operations to insert new sensor observations
    (Bröring et al., 2011a, Bröring et al., 2012, Na and Priest, 2007). The SOS stores
    time series sensor observations in a relational database and facilitates the formulation
    of response for various requests (DescribeSensor, GetObservation, InsertObservation,
    etc.). Fig. 1 shows the integration of all sensor observations into SOS relational
    database. 2.2.1.4. Sensor event service (SES) The SES provides the user an interface
    to access sensor data and measurements (Chandy and Schulte, 2007, Echterhoff and
    Ingo, 2010). The SES facilitates user to subscribe for the particular sensor or
    set threshold value/s and enable notifications about selected phenomenon (e.g.
    event notifications are triggered on depletion of soil moisture to the set threshold
    i.e. allowable depletion). It also provides methods to dynamically add new sensors
    and send notifications to the service (Fig. 3). Download : Download high-res image
    (108KB) Download : Download full-size image Fig. 3. Architecture of sensor event
    notification service. 2.2.1.5. Web processing service The WPS interface standard
    provides rules for standardizing how inputs and outputs (requests and responses)
    for geospatial processing services, such as polygon overlay, the daily mean of
    sensor observation time series, etc. The standard also defines how a client can
    request the execution of a process, and how the output from the process is handled
    (Mueller and Pross, 2015). Fig. 1 shows the core WPS requests i.e. GetCapabilities,
    DescribeProcess, and ExecuteProcess. The GetCapabilities request provides information
    about available processes (e.g. a process to estimate root-zone soil moisture
    storage based on soil moisture sensor observations). The DescribeProcess provides
    details about selected process. For example, the process for estimation of root-zone
    soil moisture storage requires, input (i.e. time series observations from soil
    moisture in date and float data type) and output (i.e. estimated soil moisture
    storage time series of date and float data type) parameters. The ExecuteProcess
    handles actual computation defined by process and output results are provided
    in response. The detailed description of each component of SWE layer is described
    in subsequent section. 2.2.2. Architecture of SWE layer The Architecture of SWE
    layer comprises of, an SWE web services module (e.g. Sensor Observation Service
    version 1.0) for data query and access, Sensor Alerts and Notification (e.g. Sensor
    Event Notification Service) based on pre-defined parameter thresholds and rules
    and Sensor data archival module. These various components run in parallel with
    the supporting functionalities (Fig. 1) as discussed below: SWE Web services module
    maps the details about each sensing system using Sensor ML. The O&M standards
    are used for encoding the observations (e.g. observed values, observed property,
    references to feature and procedure, time stamps, etc.). For example in case of
    air temperature sensor, O&M standards are used to represent parameters such as
    observed values (i.e. actual sensor observations), observed property (i.e. identification
    of observed property air temperature), feature of interest and procedure (i.e.
    identification of associated feature with procedure), time stamp (i.e. time at
    which observation is collected), and offerings. The user interactions are handled
    through SOS requests such as GetCapabilities, DescribeSensor, and GetObservation
    (Fig. 4). Download : Download high-res image (530KB) Download : Download full-size
    image Fig. 4. Sequence diagram representing interactions among various components
    of sensor web enabled service platform. The SOS GetObservation request specifies
    the sensor offering (i.e. sensor system), O&M sampling time, observed property
    and response format (Fig. 5a). The GetObservation response returns the location
    of the feature of interest (i.e. sensor) and observation collection for specified
    time interval (Fig. 5b). Details about Sensor Alerts and Notification are discussed
    in subsequent section. Download : Download high-res image (171KB) Download : Download
    full-size image Fig. 5a. Snippet of SOS GetObservation request. Download : Download
    high-res image (383KB) Download : Download full-size image Fig. 5b. Snippet of
    SOS GetObservation response. Sensor Alerts and Notification provides capabilities
    to report the sensor observations over email, social network site such as Twitter
    (2016). The main advantages of this functionality are (a) observations from sensing
    system are available on user''s social web page/account without maintaining a
    separate database on cloud service and (b) as observations are directly posted/updated
    on social media the latency in information dissemination are significantly reduced.
    The critical information about events such as sudden increase in temperature,
    and drop in relative humidity below a certain level can be effectively notified
    to the user''s/stakeholders thereby ensuring the initiation of quick response
    for mitigation of effects of these events. Social network tweet capability is
    configured to one hour in sensing system (Fig. 4). In future, the event notification
    service can be improved by incorporating the OGC publish/subscribe interface standard
    (Braeckel et al., 2016). The data from heterogeneous sensing systems is collected
    and organized in SOS complaint format by sensor data polling process. To continuously
    update the state of service the data polling process executes SOS request GetCapabilities
    and InsertObservation. As internet connectivity (GSM/GPRS network) at the test
    site (remote villages) widely varies, the process of sensor data polling is independently
    maintained, which ensures communication with all remote sensor systems. The data
    polling frequency can be configured to any duration, and it has been set to one
    hour in the present study. The size of text data transferred per sensing system
    during each polling event ranges between 1 and 1.5 kilobytes (Fig. 4). The request
    specific algorithms required for sensor data processing (e.g. daily minimum and
    maximum temperature calculation, reference evapotranspiration estimation, etc.)
    are maintained using WPS. In this study, existing implementations of the OGC SWE
    and WPS provided by OSGeo community are used (OSGeo, 2017). The OGC SOS standard
    version 1.0 implementation provided by istSOS is used, the architecture is also
    tested with OGC SOS standard version 2.0 (istSOS, 2017). Major differences identified
    between the SOS version 1.0 and 2.0 during preliminary tests of SenseTube interoperable
    sensing and analysis platform are: (a) each observation offering is limited to
    associated with only a single procedure (i.e. one to one constraint). In SenseTube
    platform, multiple procedures (e.g. for temperature sensor associated ADC values
    and observations) were stored as a single offering which caused issues while retrieving
    only the sensor observations. This improved specification for observation offerings
    in SOS 2.0 facilitated identification of correct procedure and removed ambiguity
    in obtaining the observations. (b) The improved specification for temporal and
    spatial filters added in the GetObservation request of SOS 2.0 has facilitated
    the effective retrieval of sensor observations. For example, to estimate reference
    ET for long duration (i.e. quarterly/monthly time interval) would require the
    retrieval of a large number of sensor observations. The updated temporal filters
    in SOS 2.0 enable to divide the request into smaller chunks thereby reducing memory
    overloads. The spatial filters are used to identify the nearest AWS and SenseTube
    observations to validate the observed and model estimated soil moisture and temperature.
    (c) In SOS 2.0, the response format conversion (serialization) is loosely coupled
    and can be moved from server side to client side; this helps in reducing processing
    overhead. In the long-term deployment with very high sensor sampling frequency
    this improved specification would help in reducing the energy footprint of SenseTube
    sensing and analysis platform. The OGC WPS version 2.0 implementation PyWPS 4.0
    is used (PyWPS, 2017). The SOS and WPS implementations are selected mainly because
    of lightweight Python based implementation on single board computer. The proposed
    methodology provides the on-board implementation of SWE and attempts towards independent
    hardware or software implementation. The web/mobile user interacts with SWE layer
    through SOS and WPS requests handled by the interoperable thin client. The detailed
    explanation about a web based client and SWE service platform is discussed in
    subsequent section. 2.3. Web based visualization layer A web based thin client
    has been designed to establish seamless communication between the SWE processes
    and user/stakeholder. In this study thin client has been designed for user e.g.
    farmer, researcher, etc. The OGC specified standards such as SOS, WPS and third
    party Web Map Service (WMS) are the primary access point of the web based thin
    client. The service architecture can also facilitate machine to machine interaction
    through process sharing and seamless data access (this study do not cover the
    details about machine to machine communication). Designed thin client acts as
    a gateway interface to the SWE architecture, and it hides the complexities of
    sensing systems from the end user (Fig. 6). Download : Download high-res image
    (395KB) Download : Download full-size image Fig. 6. Snapshots of web based client,
    (a) Details about sensing system and SOS capabilities, (b) and (c) Sensor observations
    in chart and table format and (d) Sensor observations overlaid on third party
    WMS layer. Fig. 6 shows snapshots of modules of web based thin client, (1) details
    about sensing system and capabilities, (2) sensor observations in a chart and
    table format, and (3) sensor observations over third party WMS layer (e.g. Open
    Street Map, Google Map, Bing Map, etc.). The client is interoperable with any
    SOS, WPS based sensing system. The first module provides basic information about
    service platform facilitating the details about geographic location, manufacturer,
    the number of sensors on sensing system, etc. (Fig. 6a). This information leads
    to the further query about details of each procedure and identifies the exact
    feature of interest e.g. air temperature, relative humidity, etc. Also, it provides
    details about each observed property and its associated sensor lineage e.g. minimum/maximum
    range, observed property, time of first and recent observation insert into SOS,
    etc. The sensor data access and visualization are important for any sensing system,
    particularly to the novice farming community. Sensor data observation module of
    the interoperable client comprises filter (e.g. date, time, sensor id, etc.) based
    sensor data querying mechanism. The user can select any sensor from selected sensing
    system and visualize the observations in table and chart format, and also facilitate
    the sensor data download in comma separated variable (CSV) format (Fig. 6b and
    c). The sensor observations are overlaid on third party WMS layer to understand
    the geospatial location and details of observed phenomenon (Fig. 6d). We have
    designed a web based thin client (i.e. interoperable web client) in PHP and Python
    programming language and it''s available for download on GitHub URL''s https://github.com/suryakant54321/sos-client-in-php
    and https://github.com/suryakant54321/Python-SOS-Client. A case study on agro-meteorological
    monitoring and potential evapotranspiration estimation have been discussed below
    to understand the need and utility of interoperable sensing systems. 3. A case
    study on application of SOA for citrus crop water requirement estimation A major
    Citrus (Orange/Mandarin) growing region in the semi-arid tropical region was selected
    to demonstrate the need and utility of SWE in agriculture. The details about study
    area, deployment of interoperable sensing system and estimation of agro-meteorological
    parameters are described in subsequent section. 3.1. Study area and field deployment
    of sensing system Vidarbha region of Maharashtra, India experiences severe climatic
    uncertainties (uneven rainfall and severe heat) thereby giving rise to crop failure.
    The area receives rainfall during southwest monsoon. The average annual rainfall
    ranges between 700 and 800 mm. The maximum temperature during summer recorded
    up to 46 °C while the minimum temperature during winter drops to about 5 °C (GSDA,
    2016). Wheat and Gram are major irrigated crops; Cotton, Jowar (Sorghum) and Toor
    (Pigeon Pea) are major non-irrigated crops; Orange, Cotton, and Groundnut are
    major cash crops cultivated in the region. The harvesting of Orange takes place
    in two fruiting seasons Ambiya (November-December) and Mrig (February-March).
    As per ground water resource estimates, Warud is categorized as one of the three
    over-exploited groundwater resources regions (tahsils) of Amravati district (CGWB,
    2007). The main reasons for selection of this study area to study the prospects
    of Sensor Web Enablement for irrigation management in agriculture are (a) the
    problem of ground water table depletion is more prominent in this region (NRAA,
    2011). (b) the groundwater is a major source of irrigation for Orange cultivation
    of this region and it is adversely affected due to improper irrigation practices
    (NRAA, 2011), (c) Orange crop diseases have a very close relation with poor drainage
    and excess irrigation (Grimm and Timmer, 1981). The soil-borne crop disease infestation
    is caused due to unavailability of right information on stage-wise crop water
    requirement. For initial test deployment of sensing system Orange orchard from
    Nagziri village from Warud tahsil has been selected. The World Meteorological
    Organization (WMO) guidelines for automatic weather station deployment are considered
    for sensor placement in SenseTube sensing system (WMO, 2012). Two each temperature
    and relative humidity sensors are placed at 5 m (above at top of canopy) and 2.5
    m (within the canopy) from ground. Two soil temperature and one soil moisture
    sensors are placed at 15, 30 and 30 cm depth, respectively at a radial distance
    of 5 m from the Orange tree. Remaining ADC channel was closed using pull-down
    resistor (Fig. 7). Download : Download high-res image (212KB) Download : Download
    full-size image Fig. 7. SenseTube sensing system field deployment. The tube ensures
    ease in wire connection and placement of entire module on the base structure.
    The sensor observations are continuously being polled using data polling process
    (Fig. 4) since the date of field deployment (16 Feb. 2014). To monitor the state
    of the sensing system, SES (sensor Twitter feed KrishiSense) has been configured
    to upload two sensor tweets per event. Considering the character restriction of
    a tweet, each event consists of timestamp and value of recorded phenomenon. The
    URL to access sensor system Twitter feed is “https://twitter.com/KrishiSense”.
    3.2. Reference evapotranspiration estimation Widely used reference evapotranspiration
    (ETo) estimation equations i.e. FAO Penman-Monteith (ETo PM) (Allen et al., 1998)
    and Hargreaves (ETo Harg) (Allen et al., 1998) were used in order to understand
    seasonal variation in crop water requirement of orange crop grown and to study
    the feasibility of SenseTube sensing system for field level agro-meteorological
    monitoring and analysis. ETo estimations were performed for both AWS and SenseTube
    weather observations. The equation for estimation of ETo by Penman-Monteith (Allen
    et al., 1998) method is given as, (1) where Δ is slope of saturation vapour pressure
    curve (kPa °C−1), Rn is net radiation at the crop surface (MJ m−2 day−1), G is
    soil heat flux density (MJ m−2 day−1), Ta is mean daily air temperature at 2 m
    height (°C), U2 is wind speed at 2 m height (m/s), es is the saturation vapour
    pressure (kPa), ea is the actual vapour pressure (kPa), (es − ea) is the saturation
    vapour pressure deficit (kPa) and γ is psychrometric constant (kPa °C−1). The
    equation for estimation of ETo by Hargreaves (Allen et al., 1998) method is given
    as, (2) where Tmean mean daily air temperature (°C), Tmax is maximum daily air
    temperature (°C), Tmin is minimum daily air temperature (°C) and Ra is extraterrestrial
    radiation (mm day−1). 4. Results and discussions The agro-meteorological observations
    recorded by SenseTube sensing system during one cropping season of Orange i.e.
    July 2014 to August 2015, locally known as Mrig (July-February) and Ambiya (March-October)
    flowering (locally called bahar), are used for the study. The sampling (for air
    temperature, relative humidity, soil temperature, soil moisture) and polling (data
    update to the remote server) frequency were set to fifteen minutes and one hour,
    respectively. In order to compare the performance of SenseTube sensing system,
    a commercially available Automatic Weather Station (AWS) was set in the study
    area. The AWS has been set up according to World Meteorological Organization (WMO)
    guidelines for automatic weather station installation (WMO, 2012). The spatial
    distance between both sensing systems is less than one kilometer. The daily variations
    in air temperature (°C) at test site are shown in Fig. 8. Ranges of daily minimum
    and maximum temperature at the test bed during the said period were observed to
    be 6.44–34.09 °C and 20.30–46.73 °C, respectively. Download : Download high-res
    image (821KB) Download : Download full-size image Fig. 8. Observed air temperature
    at SenseTube sensing system. The daily variations in Relative Humidity (RH) closely
    correspond to the rainfall events (Fig. 9, Fig. 10). Daily minimum RH at test
    site ranges between 19.81% and 28.39% whereas the daily maximum RH ranges between
    45.70% and 98.21%. Download : Download high-res image (872KB) Download : Download
    full-size image Fig. 9. Observed relative humidity at SenseTube sensing system.
    Download : Download high-res image (383KB) Download : Download full-size image
    Fig. 10. Observed soil temperature at SenseTube sensing system and rainfall observed
    by AWS. The composite plot in Fig. 10 shows daily soil temperature observed by
    SenseTube and rainfall events observed by AWS. The soil temperature at 30 cm depth
    varies between 23 °C and 32 °C. It can be observed that there is a steady change
    in soil temperature and rainfall events have very low impact on the change in
    soil temperature at depth of 30 cm. Observed soil temperature shows seasonality
    with the return period of the year which closely resembles with variations in
    surface air temperature. Fig. 11 shows daily volumetric soil moisture at 30 cm
    depth observed by soil moisture sensor mounted on SenseTube. The variations in
    soil moisture are observed to be corresponding rainfall events. The minor variations
    in soil moisture during the absence of rainfall event are caused by irrigation
    events. In selected citrus orchard drip irrigation systems are functional during
    the crop growth period. The volumetric minimum and maximum soil moisture content
    were 12.04% and 48.77%, respectively. Download : Download high-res image (445KB)
    Download : Download full-size image Fig. 11. Observed soil moisture at SenseTube
    sensing system and rainfall observed by AWS. Fig. 12 depicts ETo estimates by
    Hargreaves and Penman-Monteith method for both SenseTube and AWS observations.
    ETo PM was carried out only with AWS observations as the necessary parameters
    are available, whereas ETo Harg was obtained with AWS and SenseTube system as
    the necessary parameters are limited and observed by both AWS and SenseTube for
    comparison. The results show that for most of the period SenseTube based ETo Harg
    underestimates than ETo PM (Fig. 12). The close vicinity of crop canopy and variations
    in field level relative humidity may have caused overestimates of SenseTube based
    ETo Harg. Download : Download high-res image (948KB) Download : Download full-size
    image Fig. 12. Reference evapotranspiration (ETo) estimated using AWS and SenseTube
    observations. 4.1. Advantages and limitations of proposed SWE architecture The
    proposed SWE hardware and software architecture has unique features over existing
    implementations. The major advantages of proposed SWE architecture are, • Scalability:
    the proposed sensor web enablement architecture based on heterogeneous sensing
    systems provides the ability to seamlessly connect with multiple sensor nodes.
    • On the fly data processing: dense observations of agro-meteorological parameters
    with seamless data access facilitate important decisions regarding irrigation
    interval and depth. • Distributed computing: design of web enabled client has
    a unique advantage for distributed computing of domain specific environmental
    and crop parameters. With evolving OGC SWE specifications there are few limitations
    in the integrated architecture. Some of the major limitations of proposed SWE
    architecture are, • Scaling up estimates from point to region: the proposed SWE
    architecture needs to be configured with OGC Web Feature Service and Web Coverage
    Service to scale-up actual ET estimates at field level. • Need for sensor plug-n-play:
    significant improvements in analog multi-bus (Inter-Integrated Circuit (I2C),
    Serial Peripheral Interface (SPI), RS485, RS232, etc.) sensor hardware connection
    needs to be integrated on sensing system hardware. • Public availability of sensor
    observations: very few public, private organizations are providing sensor observations
    in OGC O&M specifications which impose limitations on the utility of service oriented
    architectures. However, there is need to compare the studies based on SWE for
    precision agriculture. Comparison of available studies based on selected features
    is discussed in subsequent section. 4.2. Comparison between SWE studies Available
    published studies on SWE architectures for precision agriculture application are
    studied based on features proposed by Chen et al. (2015). The proposed features
    of SWE are architecture, sensors supported, data sharing, process sharing, services
    involved, data model, validation and complexity. In this study two additional
    features were identified for comparison of SWE implementation, (1) sensor plug-n-play
    and (2) SWE integration on hardware. The sensor plug-n-play feature describes
    implementation of OGC PUCK Protocol Standard ensuring seamless integration of
    sensors. Feature on SWE integration with hardware was identified to ensure the
    seamless communication between standardized web-enabled hardware platforms (Table
    2). Table 2. Comparison of SWE based architectures. Empty Cell Features Empty
    Cell Empty Cell Empty Cell Empty Cell Empty Cell Empty Cell Empty Cell Empty Cell
    Empty Cell Empty Cell * ** ** * * * * * * * Reference Architecture Sensor Plug-n-Play
    SWE integration on hardware Sensors supported Data sharing Process sharing Services
    involved Data model Validation Complexity Korduan et al. (2004) SOA × × × √ ×
    WMS, WFS GML √ Low Murakami et al. (2007) SOA × × × √ × WMS, WFS, WCS, Agricultural
    Service PAML √ Normal Nash et al. (2009) SOA × × √ √ √ WMS, WFS, WPS, SWE GML,
    O&M × Normal Nikkilä et al. (2010) SOA × × × √ × Agricultural Service – √ High
    Patil et al. (2012) SOA × × × √ × WMS, SWE GML, O&M √ Normal Sawant et al. (2012)
    SOA × × × √ × WMS, SWE GML, O&M √ Normal Liang and Huang (2013) SOA √ √ √ √ ×
    WMS, SWE GML, O&M √ Normal Geipel et al. (2016) SOA √ √ √ √ √ WMS, WPS, SWE GML,
    O&M √ High Chen et al., 2015, Du et al., 2016 SOA × × √ √ √ WMS, WFS, WPS, SWE
    GML, O&M √ High Present Study SOA √ √ √ √ √ WMS, WPS, SWE, SES GML, O&M √ High
    1. The features marked with the asterisk (*) symbol are adapted from Chen et al.
    (2015). 2. The features marked by double asterisk (**) symbol are newly added.
    3. The fields marked by right (√) represents available and cross (×) represents
    not available. Table 2 shows a comparison between various SWE implementations
    in precision agriculture application. The SOA proposed by Korduan et al., 2004,
    Murakami et al., 2007, Nash et al., 2009, Nikkilä et al., 2010, Patil et al.,
    2012, Sawant et al., 2012 primarily focus on SWE of existing sensing systems/platforms.
    Whereas, SOA proposed by Liang and Huang, 2013, Geipel et al., 2016, Chen et al.,
    2015, Du et al., 2016 integrate SWE on hardware layer of sensing system/platform.
    The OGC SWE standards are evaluated for their usability and applicability in precision
    agriculture application. The scalability of proposed architecture is facilitated
    by O&M, SensorML and SOS standards. On the fly data processing and distributed
    computing is facilitated by WPS standard. Integrated geospatial information with
    sensor observations facilitates spatio-temporal estimation of the critical agro-meteorological
    parameter. On-board implementation of the SWE framework facilitates ease in acquiring
    processed information at client interface which has potential to extend sensor
    as a service. The large deployment of such SWE based sensing system facilitates
    system identification and reliable access to sensor observations which facilitates
    the hardware maintenance and remote software (i.e. firmware) updates. 5. Conclusions
    With ever increasing capabilities of open source hardware and software tools,
    cost effective IoT based agro-meteorological observation systems can be designed
    for monitoring the weather conditions at very high precision and temporal scale.
    This will facilitate the open field based agricultural research and decision making
    abilities of resource poor farmers in developing countries. Through on-board implementation
    of OGC specified SOS standards the designed sensing system facilitates storage
    and dissemination of sensor observations thereby reducing syntactic heterogeneity
    among sensing systems. The multiple modes (VPN and cloud service) of sensor data
    transfer over the internet ensured the IoT capability of the sensing system. Sensor
    event notification service through social media (Twitter) has shown the effective
    mode of sensor information dissemination to the larger audience. The web based
    interoperable service oriented application client provides better sensor data
    dissemination capabilities thereby facilitating the stakeholders to easily access
    the required sensor observations. The operational field deployment of the sensing
    system in Orange orchard has proved the capabilities of designed SOA. When implemented
    on large scale these distributed interoperable sensing systems can have very wide
    range of applications in solving the regional issues pertaining to the crop-weather-soil
    continuum. The study has been initiated to collect soil moisture observations
    from multiple depths and locations for validation of proposed modeling approach
    for field scale irrigation scheduling of Orange crop. It has been envisaged to
    integrate OGC specified Sensor Planning Service on sensing platform for effective
    in-situ data processing for better decision making. Attempts are being made towards
    deployment of multiple sensing systems for agro-meteorological data collection
    for precision water management in the horticultural crop (Orange) of the semi-arid
    tropical region of Maharashtra India. Acknowledgements This is a part of research
    and development work supported by Information Technology Research Academy (ITRA),
    Media Lab Asia, Department of Electronics and Information Technology (DeitY),
    Ministry of Communications and Information Technology, Government of India [ITRA/15(66)/Water/PDMH/02/dated-21.09.2013].
    Sincere thanks for the comments and contributions of anonymous reviewers and members
    of the editorial team. References Allen et al., 1998 Allen, R.G., Pereira, L.S.,
    Raes, D., Smith, M., 1998. Crop evapotranspiration – Guidelines for computing
    crop water requirements – FAO Irrigation and drainage paper 56. FAO, Rome, 300(9):D05109.
    Google Scholar Botts and Robin, 2007 M. Botts, A. Robin OpenGIS® Sensor Model
    Language (SensorML) Implementation Specification, 07-000 http://portal.opengeospatial.org/files/?artifact_id=21273
    (2007) (accessed 27.02.17) Google Scholar Braeckel et al., 2016 A. Braeckel, L.
    Bigagli, J. Echterhoff OGC® Publish/Subscribe Interface Standard 1.0 – Core, 13-131r1
    http://docs.opengeospatial.org/is/13-131r1/13-131r1.html (2016) (accessed 27.02.17)
    Google Scholar Bröring et al., 2011a A. Bröring, J. Echterhoff, S. Jirka, I. Simonis,
    T. Everding, C. Stasch, S. Liang, R. Lemmens New generation sensor web Sensors,
    11 (2011), pp. 2652-2699 CrossRefView in ScopusGoogle Scholar Bröring et al.,
    2011b A. Bröring, P. Maue, K. Janowicz, D. Nust, C. Malewski Semantically-enabled
    sensor plug & play for the sensor web Sensors, 11 (8) (2011), pp. 7568-7605 CrossRefView
    in ScopusGoogle Scholar Bröring et al., 2012 A. Bröring, C. Stasch, J. Echterhoff
    OGC® Sensor Observation Service Interface Standard, 12-006 https://portal.opengeospatial.org/files/?artifact_id=47599
    (2012) (accessed 27.02.17) Google Scholar CGWB, 2007 CGWB Groundwater Information
    Amravati District Central Ground Water Board (CGWB), Government of India (2007)
    1564/OTH/2007 Google Scholar Chandy and Schulte, 2007 K.M. Chandy, W.R. Schulte
    What is event driven architecture (EDA) and why does it matter <http://complexevents.com/wp-content/uploads/2007/07/EDA%20article%20long%20Chandy%20and%20Schulte%2015%20July%202007%20final.pdf>
    (2007) (accessed 24.05.16) Google Scholar Chen et al., 2015 N. Chen, X. Zhang,
    C. Wang Integrated open geospatial web service enabled cyber-physical information
    infrastructure for precision agriculture monitoring Comput. Electron. Agric.,
    111 (2015), pp. 78-91 View PDFView articleView in ScopusGoogle Scholar Compton
    et al., 2012 M. Compton, P. Barnaghi, L. Bermudez, R. GarcíA-Castro, O. Corcho,
    S. Cox, J. Graybeal, M. Hauswirth, C. Henson, A. Herzog, V. Huang The SSN ontology
    of the W3C semantic sensor network incubator group Web Semantics: Sci., Services
    Agents on the World Wide Web, 17 (2012), pp. 25-32 View PDFView articleView in
    ScopusGoogle Scholar Cox, 2011 S. Cox Observations and Measurements – XML Implementation,
    10-025r1 <http://portal.opengeospatial.org/files/?artifact_id=41510> (2011) (accessed
    27.02.17) Google Scholar Dropbox, 2016 Dropbox A Python library for Dropbox''s
    HTTP-based Core and Datastore APIs <https://pypi.python.org/pypi/dropbox/2.0.0>
    (2016) (accessed 28.01.16) Google Scholar Durbha et al., 2010 S.S. Durbha, R.L.
    King, S.K. Amanchi, S. Bheemireddy, N.H. Younan Standards-based middleware and
    tools for coastal sensor web applications IEEE J. Selected Topics Appl. Earth
    Observ. Remote Sens., 3 (4) (2010), pp. 451-466 View in ScopusGoogle Scholar Du
    et al., 2016 W. Du, N. Chen, S. Yan Online soil moisture retrieval and sharing
    using geospatial web-enabled BDS-R service Comput. Electron. Agric., 121 (2016),
    pp. 354-367 View PDFView articleView in ScopusGoogle Scholar Echterhoff and Ingo,
    2010 Echterhoff, J., Ingo, S., 2010. OWS-7 Dynamic Sensor Notification Engineering
    Report. OGC 10–061r1 (accessed 24.05.16). Google Scholar Esbri et al., 2014 Esbri,
    M.Á., Charvat, K., Campos, A.M., Palma, R., 2014. FOODIE: Farm-Oriented Open Data
    in Europe. In: EGU General Assembly Conference Abstracts, 16, 7713. Google Scholar
    Folmer and Verhoosel, 2011 Folmer, E., Verhoosel, J., 2011. State of the art on
    semantic IS standardization, interoperability & quality. UT, CTIT, TNO en NOiV.
    ISBN 9789090260303. Google Scholar Geipel et al., 2016 J. Geipel, J. Link, J.A.
    Wirwahn, W. Claupein A programmable aerial multispectral camera system for in-season
    crop biomass and nitrogen content estimation Agriculture, 6 (1) (2016), pp. 385-399
    Google Scholar Grimm and Timmer, 1981 G.R. Grimm, L.W. Timmer Control of phytophthora
    foot rot and root rot Citrus Ind., 62 (10) (1981), pp. 34-39 Google Scholar GSDA,
    2016 GSDA Ground Water Survey and Development Agency, Office of the Senior Geologist
    <http://amravati.nic.in/otherdepartments/gsda/gsda.htm> (2016) (accessed 12.01.16)
    Google Scholar Honda et al., 2009 K. Honda, A. Shrestha, A. Witayangkurn, R. Chinnachodteeranun,
    H. Shimamura Fieldservers and sensor service grid as real-time monitoring infrastructure
    for ubiquitous sensor networks Sensors, 9 (2009), pp. 2363-2370 CrossRefView in
    ScopusGoogle Scholar IMD, 2016 IMD Automatic Weather Station (AWS) Lab India Meteorological
    Department, Pune (2016) http://www.imdaws.com/ViewAwsData.aspx (accessed 12.01.16)
    Google Scholar ISRO, 2015 ISRO, 2015. Bhuvan Indian Geo-Platform of Indian Space
    Research Organization (ISRO), National Remote Sensing Centre (NRSC). <http://bhuvan.nrsc.gov.in/bhuvan>
    (accessed 26.12.15). Google Scholar istSOS, 2017 istSOS IstSOS, implementation
    of OGC SOS standards http://istsos.org/ (2017) (accessed 27.02.17) Google Scholar
    Jazayeri et al., 2012 Jazayeri, M.A., Huang, C.Y., Liang, S.H.L., 2012. TinySOS:
    Design and Implementation of Interoperable and Tiny Web Service for the Internet
    of Things. First ACM SIGSPATIAL Workshop on Sensor Web Enablement, pp. 39–46.
    Google Scholar Korduan et al., 2004 P. Korduan, R. Bill, S. Böling An interoperable
    Geodata infrastructure for precision agriculture 7th AGILE Conference on Geographic
    Information Science, Heraklion, Greece (2004), pp. 47-751 29 Google Scholar Lee
    et al., 2010 W.S. Lee, V. Alchanatis, C. Yang, M. Hirafuji, D. Moshou, C. Li Sensing
    technologies for precision specialty crop production Comput. Electron. Agric.,
    74 (2010), pp. 2-33 View PDFView articleView in ScopusGoogle Scholar Li et al.,
    2011 S. Li, J. Cui, Z. Li Wireless sensor network for precise agriculture monitoring
    Fourth International Conference on Intelligent Computation Technology and Automation,
    Shenzhen, China (2011), pp. 28-29 March View in ScopusGoogle Scholar Liang and
    Huang, 2013 S.H.L. Liang, C.Y. Huang GeoCENS: a geospatial cyberinfrastructure
    for the world-wide sensor web Sensors, 13 (2013), pp. 13402-13424 CrossRefView
    in ScopusGoogle Scholar Liu, 2000 Liu, Q.C., Vpnet Technologies, Inc., 2000. Method
    and apparatus for managing a virtual private network. U.S. Patent 6,079,020. Google
    Scholar Mizoguchi et al., 2008 Mizoguchi, M., Mitsuishi, S., Ito, T., Ninomiya,
    S., Hirafuji, M., Fukatsu, T., Kiura, T., Tanaka, K., Toritani, H., Hamada, H.,
    Honda, K., 2008. Real-time monitoring of farmland in Asia using field server.
    In: International Symposium on Geoinformatics for Spatial Infrastructure Development
    in Earth and Allied Sciences, Dec. 4-6, 2008, Hanoi, Vietnam. Google Scholar mKRISHI,
    2016 mKRISHI Mobile Based Agro Advisory System TCS Innovation Labs Mumbai, Tata
    Consultancy Services (2016) http://tcsinnovations.com (accessed 25.01.16) Google
    Scholar Mueller and Pross, 2015 M. Mueller, B. Pross OGC WPS 2.0 Interface Standard
    https://portal.opengeospatial.org/files/14-065 (2015) (accessed 27.02.17) Google
    Scholar Murakami et al., 2007 E. Murakami, A.M. Saraiva, L.C. Ribeiro, C.E. Cugnasca,
    A.R. Hirakawa, P.L. Correa An infrastructure for the development of distributed
    service-oriented information systems for precision agriculture Comput. Electron.
    Agric., 58 (1) (2007), pp. 37-48 View PDFView articleView in ScopusGoogle Scholar
    Na and Priest, 2007 A. Na, M. Priest Sensor Observation Service, 06-009r6 http://portal.opengeospatial.org/files/?artifact_id=26667
    (2007) (accessed 27.02.17) Google Scholar Nash et al., 2009 E. Nash, P. Korduan,
    R. Bill Applications of open geospatial web service in precision agriculture:
    a review Precision Agric., 10 (2009), pp. 546-560 CrossRefView in ScopusGoogle
    Scholar Nikkilä et al., 2010 R. Nikkilä, I. Seilonen, K. Koskinen Software architecture
    for farm management information systems in precision agriculture Comput. Electron.
    Agric., 70 (2) (2010), pp. 328-336 View PDFView articleView in ScopusGoogle Scholar
    NRAA, 2011 NRAA, 2011. Monitoring and Evaluation of Artificial Recharge of Ground
    Water Programmes/Schemes/Projects in the Rainfed Regions of Maharashtra. Study
    Report 3. National Rainfed Area Authority, New Delhi, India, <http://nraa.gov.in/pdf/gwp_maharastra_2011.pdf>
    (accessed 26.05.16). Google Scholar OGC, 2016 OGC Open Geospatial Consortium http://www.opengeospatial.org/standards
    (2016) (accessed 26.04.16) Google Scholar Ojha et al., 2015 T. Ojha, S. Misra,
    N.S. Raghuwanshi Wireless sensor networks for agriculture: The state-of-the-art
    in practice and future challenges Comput. Electron. Agric., 118 (2015), pp. 66-84
    View PDFView articleView in ScopusGoogle Scholar OSGeo, 2017 OSGeo The Open Source
    Geospatial Foundation http://www.osgeo.org/ (2017) (accessed 27.02.17) Google
    Scholar ownCloud, 2016 ownCloud An enterprise file sharing solution for online
    collaboration and storage https://owncloud.org/ (2016) (accessed 22.02.16) Google
    Scholar Panchard et al., 2007 J. Panchard, S. Rao, T.V. Prabhakar, J.P. Hubaux,
    H.S. Jamadagni COMMON-sense net: a wireless sensor network for resource-poor agriculture
    in the semiarid areas of developing countries Inform. Technol. Int. Develop.,
    4 (1) (2007), pp. 51-67 CrossRefGoogle Scholar Panchard et al., 2006 J. Panchard,
    S. Rao, T.V. Prabhakar, H.S. Jamadagni, J.P. Hubaux COMMON-sense net: improved
    water management for resource-poor farmers via sensor networks S. Rao (Ed.), International
    Conference on Information and Communication Technologies and Development, Berkeley,
    USA (2006), pp. 5-26 May Google Scholar Patil et al., 2012 Patil, V.M., Durbha,
    S.S., Adinarayana, J., 2012. Standards-based sensor web for agro-informatics applications.
    In: International Geoscience and Remote Sensing Symposium (IGRASS 2012), July
    22–27, 2012, Munich, Germany. Google Scholar Prabhakar et al., 2010 Prabhakar,
    T.V., Jamadagni, H.S., Sahu, A., Prasad, V., 2010. Lessons from the sparse sensor
    network deployment in rural India. In: International Conference on Distributed
    Computing and Networking, 5935, 104–115, Jan. 3–6, 2010, Kolkata, India. Google
    Scholar PyWPS, 2017 PyWPS PyWPS, implementation of OGC WPS standards http://pywps.org/
    (2017) (accessed 27.02.17) Google Scholar Raspberry Pi, 2016 Raspberry Pi Raspberry
    Pi http://www.raspberrypi.org/ (2016) (accessed 07.01.16) Google Scholar Riquelme
    et al., 2009 J.A.L. Riquelme, F. Soto, J. Suardíaz, P. Sánchez, A. Iborra, J.A.
    Vera Wireless sensor networks for precision horticulture in Southern Spain Comput.
    Electron. Agric., 68 (2009), pp. 25-35 Google Scholar Sawant et al., 2012 Sawant,
    S.A., Adinarayana, J., Durbha, S.S., Tripathy, A.K., Sudharsan, D., 2012. Service
    oriented architecture for wireless sensor networks in agriculture. The In: XXII
    Congress of International Society for Photogrammetry and Remote Sensing (ISPRS
    2012), August 25th-1st September 2012, Melbourne Australia. <http://www.int-arch-photogramm-remote-sens-spatial-inf-sci.net/XXXIX-B4/467/2012/isprsarchives-XXXIX-B4-467-2012.pdf>.
    Google Scholar Sawant et al., 2015 Sawant, S.A., Durbha, S.S., Adinarayana, J.,
    2015. SenseTube: A Syntactically Standardized Web Enabled Wireless Sensor Network
    System for Precision Agriculture Applications, Indian patent file number: 2236/MUM/2015
    (status: patent pending). Google Scholar Sudharsan et al., 2011 Sudharsan, D.,
    Adinarayana, J., Tripathy, A.K., Desai, U.B., Merchant, S.N., Ninomiya, S., Hirafuji,
    M., Kiura, T., Tanaka, K., 2011. GeoSense: Geo-ICT and wireless sensor network
    based dynamic real-time system for precision agriculture (2011). Proceeding of
    CIGR, Conference CIGR2011, September 19–23, 2011, Tokyo, Japan. Google Scholar
    Sudharsan et al., 2012 Sudharsan, D., Adinarayana, J., Tripathy, A.K., Ninomiya,
    S., Hirafuji, M., Kiura, T., Desai, U.B., Marchant, S.N., Reddy, D.R., Sreenivas
    G., 2012. GeoSense: a Multi-mode Information and Communication System. International
    Scholarly Research Network-Sensor Network (ISRN-SN), Article ID 215103, pp. 1–13.
    Google Scholar Tripathy et al., 2011 Tripathy, A.K., Adinarayana, J., Sudharsan,
    D., Merchant, S.N., Desai, U.B., Vijayalakshmi, K., Reddy, D.R., Sreenivas, G.,
    Ninomiya, S., Hirafuji, M., Kiura, T., Tanaka, K., 2011. Data Mining and Wireless
    Sensor Network for Agriculture Pest/Disease Predictions. 1229–1234, World Congress
    Information and Communication Technologies (WICT) 2011. Google Scholar Twitter,
    2016 Twitter Twitter https://twitter.com/ (2016) (accessed 27.02.16) Google Scholar
    uAgri C-DAC, 2013 Ubiquitous Agriculture (uAgri C-DAC) Ubiquitous Agriculture
    Web Portal Centre for Development of Advanced Computing (2013) https://apan.net/meetings/apan32/Session/
    Slides/agriculture/2-3.pdf (accessed 25.06.13) Google Scholar WMO, 2012 WMO Guide
    to Meteorological Instruments and Methods of Observation WMO-No. 8 World Meteorological
    Organization (WMO) (2012) ISBN 978-92-63-10008-5 http://library.wmo.int/pmb_ged/wmo_8_en-2012.pdf
    (accessed 25.01.14) Google Scholar Cited by (54) Intertwined impacts of urbanization
    and land cover change on urban climate and agriculture in Aurangabad city (MS),
    India using google earth engine platform 2023, Journal of Cleaner Production Show
    abstract Prototyping low-cost automatic weather stations for natural disaster
    monitoring 2023, Digital Communications and Networks Show abstract Design, technology,
    and management of greenhouse: A review 2022, Journal of Cleaner Production Show
    abstract Review of the internet of things communication technologies in smart
    agriculture and challenges 2021, Computers and Electronics in Agriculture Show
    abstract An innovative IoT based system for precision farming 2021, Computers
    and Electronics in Agriculture Citation Excerpt : Hence, this must be fixed somewhere
    for accessing its impact on crop growth. On the other hand, the agro-meteorological
    device has been developed by Sawant et al. (2017) to monitor crop fields. The
    device acquires weather parameters like temperature, humidity, and soil moisture
    and temperature data through the Raspberry kit. Show abstract Implementing agricultural
    water pricing policy in irrigation districts without a market mechanism: Comparing
    the conventional and automatic water distribution systems 2021, Computers and
    Electronics in Agriculture Citation Excerpt : Based on what has been discussed
    so far, it would be necessary to fulfill two objectives: i) upgrading traditional
    water resources management with demand-oriented management perspectives and ii)
    employing economic principles in the demand management measures. Regarding the
    first objective, demand-driven management actions have been proposed based on
    minimization of water losses in agricultural practices at farm scales by irrigation
    water consumption optimization (El Baki et al., 2018), enhancing water distribution
    scheduling applying a robust decision support system (Car, 2018), and application
    of interoperable agro-meteorological platform for real-time estimation of water
    requirement in precision agriculture approaches (Sawant et al., 2017). Accordingly,
    many recent studies have assessed the mentioned concerns by developing schemes,
    frameworks, and systems for effective agricultural water management within the
    farm scales. Show abstract View all citing articles on Scopus View Abstract ©
    2017 Elsevier B.V. All rights reserved. Recommended articles An ontology-based
    approach to integration of hilly citrus production knowledge Computers and Electronics
    in Agriculture, Volume 113, 2015, pp. 24-43 Ying Wang, …, Zili Zhang View PDF
    Toward more efficient model development for farming systems research – An integrative
    review Computers and Electronics in Agriculture, Volume 138, 2017, pp. 29-38 E.
    Reinmuth, S. Dabbert View PDF Streaming and 3D mapping of AGRI-data on mobile
    devices Computers and Electronics in Agriculture, Volume 138, 2017, pp. 188-199
    V. Stojanovic, …, J. Wilson View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 49 Policy Citations: 1 Captures Readers: 181 View details About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Interoperable agro-meteorological observation and analysis platform for
    precision agriculture: A case study in citrus crop water requirement estimation'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wolfert S.
  - Ge L.
  - Verdouw C.
  - Bogaardt M.J.
  citation_count: '1526'
  description: 'Smart Farming is a development that emphasizes the use of information
    and communication technology in the cyber-physical farm management cycle. New
    technologies such as the Internet of Things and Cloud Computing are expected to
    leverage this development and introduce more robots and artificial intelligence
    in farming. This is encompassed by the phenomenon of Big Data, massive volumes
    of data with a wide variety that can be captured, analysed and used for decision-making.
    This review aims to gain insight into the state-of-the-art of Big Data applications
    in Smart Farming and identify the related socio-economic challenges to be addressed.
    Following a structured approach, a conceptual framework for analysis was developed
    that can also be used for future studies on this topic. The review shows that
    the scope of Big Data applications in Smart Farming goes beyond primary production;
    it is influencing the entire food supply chain. Big data are being used to provide
    predictive insights in farming operations, drive real-time operational decisions,
    and redesign business processes for game-changing business models. Several authors
    therefore suggest that Big Data will cause major shifts in roles and power relations
    among different players in current food supply chain networks. The landscape of
    stakeholders exhibits an interesting game between powerful tech companies, venture
    capitalists and often small start-ups and new entrants. At the same time there
    are several public institutions that publish open data, under the condition that
    the privacy of persons must be guaranteed. The future of Smart Farming may unravel
    in a continuum of two extreme scenarios: 1) closed, proprietary systems in which
    the farmer is part of a highly integrated food supply chain or 2) open, collaborative
    systems in which the farmer and every other stakeholder in the chain network is
    flexible in choosing business partners as well for the technology as for the food
    production side. The further development of data and application infrastructures
    (platforms and standards) and their institutional embedment will play a crucial
    role in the battle between these scenarios. From a socio-economic perspective,
    the authors propose to give research priority to organizational issues concerning
    governance issues and suitable business models for data sharing in different supply
    chain scenarios.'
  doi: 10.1016/j.agsy.2017.01.023
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Methodology 3. Conceptual
    framework 4. Results 5. Conclusions and recommendations References Show full outline
    Cited by (1596) Figures (6) Tables (4) Table 1 Table 2 Table 3 Table 4 Agricultural
    Systems Volume 153, May 2017, Pages 69-80 Review Big Data in Smart Farming – A
    review Author links open overlay panel Sjaak Wolfert a b, Lan Ge a, Cor Verdouw
    a b, Marc-Jeroen Bogaardt a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.agsy.2017.01.023
    Get rights and content Under a Creative Commons license open access Highlights
    • Big Data is expected to have a large impact on Smart Farming and involves the
    whole supply chain. • Smart sensors and devices produce big amounts of data that
    provide unprecedented decision-making capabilities. • Big Data is expected to
    cause major shifts in roles and power relations among traditional and non-traditional
    players. • Governance (incl. data ownership, privacy, security) and business models
    are key issues to be addressed in future research. Abstract Smart Farming is a
    development that emphasizes the use of information and communication technology
    in the cyber-physical farm management cycle. New technologies such as the Internet
    of Things and Cloud Computing are expected to leverage this development and introduce
    more robots and artificial intelligence in farming. This is encompassed by the
    phenomenon of Big Data, massive volumes of data with a wide variety that can be
    captured, analysed and used for decision-making. This review aims to gain insight
    into the state-of-the-art of Big Data applications in Smart Farming and identify
    the related socio-economic challenges to be addressed. Following a structured
    approach, a conceptual framework for analysis was developed that can also be used
    for future studies on this topic. The review shows that the scope of Big Data
    applications in Smart Farming goes beyond primary production; it is influencing
    the entire food supply chain. Big data are being used to provide predictive insights
    in farming operations, drive real-time operational decisions, and redesign business
    processes for game-changing business models. Several authors therefore suggest
    that Big Data will cause major shifts in roles and power relations among different
    players in current food supply chain networks. The landscape of stakeholders exhibits
    an interesting game between powerful tech companies, venture capitalists and often
    small start-ups and new entrants. At the same time there are several public institutions
    that publish open data, under the condition that the privacy of persons must be
    guaranteed. The future of Smart Farming may unravel in a continuum of two extreme
    scenarios: 1) closed, proprietary systems in which the farmer is part of a highly
    integrated food supply chain or 2) open, collaborative systems in which the farmer
    and every other stakeholder in the chain network is flexible in choosing business
    partners as well for the technology as for the food production side. The further
    development of data and application infrastructures (platforms and standards)
    and their institutional embedment will play a crucial role in the battle between
    these scenarios. From a socio-economic perspective, the authors propose to give
    research priority to organizational issues concerning governance issues and suitable
    business models for data sharing in different supply chain scenarios. Previous
    article in issue Next article in issue Keywords AgricultureDataInformation and
    communication technologyData infrastructureGovernanceBusiness modelling 1. Introduction
    As smart machines and sensors crop up on farms and farm data grow in quantity
    and scope, farming processes will become increasingly data-driven and data-enabled.
    Rapid developments in the Internet of Things and Cloud Computing are propelling
    the phenomenon of what is called Smart Farming (Sundmaeker et al., 2016). While
    Precision Agriculture is just taking in-field variability into account, Smart
    Farming goes beyond that by basing management tasks not only on location but also
    on data, enhanced by context- and situation awareness, triggered by real-time
    events (Wolfert et al., 2014). Real-time assisting reconfiguration features are
    required to carry out agile actions, especially in cases of suddenly changed operational
    conditions or other circumstances (e.g. weather or disease alert). These features
    typically include intelligent assistance in implementation, maintenance and use
    of the technology. Fig. 1 summarizes the concept of Smart Farming along the management
    cycle as a cyber-physical system, which means that smart devices - connected to
    the Internet - are controlling the farm system. Smart devices extend conventional
    tools (e.g. rain gauge, tractor, notebook) by adding autonomous context-awareness
    by all kind of sensors, built-in intelligence, capable to execute autonomous actions
    or doing this remotely. In this picture it is already suggested that robots can
    play an important role in control, but it can be expected that the role of humans
    in analysis and planning is increasingly assisted by machines so that the cyber-physical
    cycle becomes almost autonomous. Humans will always be involved in the whole process
    but increasingly at a much higher intelligence level, leaving most operational
    activities to machines. Download : Download high-res image (142KB) Download :
    Download full-size image Fig. 1. The cyber-physical management cycle of Smart
    Farming enhanced by cloud-based event and data management (Wolfert et al., 2014).
    Big Data technologies are playing an essential, reciprocal role in this development:
    machines are equipped with all kind of sensors that measure data in their environment
    that is used for the machines'' behaviour. This varies from relatively simple
    feedback mechanisms (e.g. a thermostat regulating temperature) to deep learning
    algorithms (e.g. to implement the right crop protection strategy). This is leveraged
    by combining with other, external Big Data sources such as weather or market data
    or benchmarks with other farms. Due to rapid developments in this area, a unifying
    definition of Big Data is difficult to give, but generally it is a term for data
    sets that are so large or complex that traditional data processing applications
    are inadequate (Wikipedia, 2016). Big data requires a set of techniques and technologies
    with new forms of integration to reveal insights from datasets that are diverse,
    complex, and of a massive scale (Hashem et al., 2015). Big Data represents the
    information assets characterized by such a high volume, velocity and variety to
    require specific technology and analytical methods for its transformation into
    value (De Mauro et al., 2016). The Data FAIRport initiative emphasizes the more
    operational dimension of Big Data by providing the FAIR principle meaning that
    data should be Findable, Accessible, Interoperable and Re-usable (Data FAIRport,
    2014). This also implies the importance of metadata i.e. ‘data about the data’
    (e.g. time, location, standards used, etc.). Both Big Data and Smart Farming are
    relatively new concepts, so it is expected that knowledge about their applications
    and their implications for research and development is not widely spread. Some
    authors refer to the advent of Big Data and related technology as another technology
    hype that may fail to materialize, others consider Big Data applications may have
    passed the ‘peak of inflated expectations’ in Gartner''s Hype Cycle (Fenn and
    LeHong, 2011, Needle, 2015). This review aims to provide insight into the state-of-the-art
    of Big Data applications in relation to Smart Farming and to identify the most
    important research and development challenges to be addressed in the future. In
    reviewing the literature, attention is paid to both technical and socio-economic
    aspects. However, technology is changing rapidly in this area and a state-of-the-art
    of that will probably be outdated soon after this paper is published. Therefore
    the analysis primarily focuses on the socio-economic impact Big Data will have
    on farm management and the whole network around it because it is expected that
    this will have a longer-lasting effect. From that perspective the research questions
    to be addressed in this review are: 1. What role does Big Data play in Smart Farming?
    2. What stakeholders are involved and how are they organized? 3. What are the
    expected changes that are caused by Big Data developments? 4. What challenges
    need to be addressed in relation to the previous questions? The latter question
    can be considered as a research agenda for the future. To answer these questions
    and to structure the review process, a conceptual framework for analysis has been
    developed, which is expected to be useful also for future analyses of developments
    in Big Data and Smart Farming. In the remainder of this paper the methodology
    for reviewing the literature (Section 2) and the framework will be described (Section
    3). Then the main results from the analysis will be presented in Section 4. Section
    5 concludes the review and provides recommendations for further research and actions.
    2. Methodology To address the research questions as outlined in the Introduction,
    we surveyed literature between January 2010 and March 2015. The choice of the
    review period was a practical one and took into consideration the fact that Big
    Data is a rather recent phenomenon; it was not expected that there would be any
    reference before 2010. Beside the period of publication, we used two inclusion
    criteria for the literature search: 1) full article publication; 2) relevance
    to the research question. Two exclusion criteria were used: 1) articles published
    in languages other than English or Chinese; 2) articles focussing solely on technological
    design. The literature survey followed a systematic approach. This was done in
    three steps. In the first step we searched two major bibliographical databases,
    Web of Science and Scopus, using all combinations of two groups of keywords of
    which the first group addresses Big Data (i.e. Big Data, data-driven innovation,
    data-driven value creation, internet of things, IoT) and the second group refers
    to farming (i.e. agriculture, farming, food, agri-food, precision agriculture).
    The two databases were chosen because of their wide coverage of relevant literature
    and advanced bibliometric features such as suggesting related literature or citations.
    From these two databases 613 peer-reviewed articles were retrieved. These were
    scanned for relevance by identifying passages that were addressing the research
    questions. In screening the literature, we first used the search function to locate
    the paragraphs containing the key words and then read the text to see whether
    they can be related to the research questions. The screening was done by four
    researchers, with each of them judging about 150 articles and sharing their findings
    with the others through the reference management software EndNote X7. As a result,
    20 were considered most relevant and 94 relevant. The remaining articles were
    considered not relevant as they only tangentially touch upon Big Data or agriculture
    and therefore excluded from further reading and analysis. We found the number
    of relevant peer-reviewed literature not very high which can be explained because
    Big Data and Smart Farming are relatively new concepts. Especially the applications
    are rapidly evolving and expected not to be taken into account in peer-reviewed
    articles which are usually lagging behind. Therefore we decided to also include
    grey literature into our review. For that purpose we have used Google Scholar
    and the search engine LexisNexis for reports, magazines, blogs, and other web-items
    in English. This has resulted in 3 reports, 225 magazine articles, 319 blogs and
    19 items on twitter. Each of the 319 blogs was evaluated on relevance based on
    its title and sentences containing the search terms. Also possible duplications
    were removed. The result was a short list containing 29 blogs that were evaluated
    by further reading. As a result, 9 blogs have been considered as presenting relevant
    information for our framework. Each of the 225 magazine articles was similarly
    evaluated on their relevance based on its title and sentences containing the search
    terms. After removing duplicates, the result is a short list of 25 articles. We
    then read these 25 articles through for further evaluation. Consequently 9 articles
    have been considered as containing relevant information for further analysis.
    In the second step, we read the selected literature in detail to extract the information
    relevant to our research questions. Additional literature that had not been identified
    in the first step was retrieved in this step as well if they were referred to
    by the ‘most relevant’ literature. This ‘snow-ball’ approach has resulted in 11
    additional articles and web-items from which relevant information was extracted
    as well. In the third step, the extracted information was analysed and synthesized
    following the conceptual framework as described in Section 3. 3. Conceptual framework
    For this review a conceptual framework was developed to provide a systematic classification
    of issues and concepts for the analysis of Big Data applications in Smart Farming
    from a socio-economic perspective. A major complexity of such applications is
    that they require collaboration between many different stakeholders having different
    roles in the data value chain. For this reason, the framework draws upon literature
    on chain network management and data-driven strategies. Chain networks are considered
    to be composed of the actors which vertically and horizontally work together to
    add value to customers (Christopher, 2005, Lazzarini et al., 2001, Omta et al.,
    2001). An important foundation of chain networks is the concept ‘value chain’,
    which is a system of interlinked processes, each adding value to the product of
    service (Porter, 1985). In big data applications, the value chain refers to the
    sequence of activities from data capture to decision making and data marketing
    (Chen et al., 2014, Miller and Mork, 2013). The often-cited conceptual framework
    of Lambert and Cooper (2000) on network management comprises three closely interrelated
    elements: the network structure, the business processes, and the management components.
    The network structure consists of the member firms and the links between these
    firms. Business processes are the activities that produce a specific output of
    value to the customer. The management components are the managerial variables
    by which the business processes are integrated and managed across the network.
    The network management component is further divided into a technology and organization
    component. For our purpose the framework was tailored to networks for Big Data
    applications in Smart Farming as presented in Fig. 2. Download : Download high-res
    image (306KB) Download : Download full-size image Fig. 2. Conceptual framework
    for the literature analysis (Adapted from Lambert and Cooper (2000)). In this
    framework, the business processes (lower layer) focus on the generation and use
    of Big Data in the management of farming processes. For this reason, we subdivided
    this part into the data chain, the farm management and the farm processes. The
    data chain interacts with farm processes and farm management processes through
    various decision making processes in which information plays an important role.
    The stakeholder network (middle layer) comprises all stakeholders that are involved
    in these processes, not only users of Big Data but also companies that are specialized
    in data management and regulatory and policy actors. Finally, the network management
    layer typifies the organizational and technological structures in the network
    that facilitate coordination and management of the processes that are performed
    by the actors in the stakeholder network layer. The technology component of network
    management (upper layer) focuses on the information infrastructure that supports
    the data chain. The organizational component focuses on the governance and business
    model of the data chain. Finally, several factors can be identified as key drivers
    for the development of Big Data in Smart Farming and as a result challenges can
    be derived from this development. The next subsections provide a more detailed
    description of each subcomponent of the business processes layer and network management
    layer of the framework. 3.1. Farm processes A business process is a set of logically
    related tasks performed to achieve a defined business outcome (Davenport and Short,
    1990). Business processes can be subdivided into primary and supporting business
    processes (Davenport, 1993, Porter, 1985). Primary Business Processes are those
    involved in the creation of the product, its marketing and delivery to the buyer
    (Porter, 1985). Supporting Business Processes facilitate the development, deployment
    and maintenance of resources required in primary processes. The business processes
    of farming significantly differ between different types of production, e.g. livestock
    farming, arable farming and greenhouse cultivation. A common feature is that agricultural
    production is depending on natural conditions, such as climate (day length and
    temperature), soil, pests, diseases and weather (Nuthall, 2011). 3.2. Farm management
    Management or control processes ensure that the business process objectives are
    achieved, even if disturbances occur. The basic idea of control is the introduction
    of a controller that measures system behaviour and corrects if measurements are
    not compliant with system objectives. Basically, this implies that they must have
    a feedback loop in which a norm, sensor, discriminator, decision maker, and effector
    are present (Beer, 1981, in ''t Veld, 2002). As a consequence, the basic management
    functions are (Verdouw et al., 2015) (see also Fig. 1): • Sensing and monitoring:
    measurement of the actual performance of the farm processes. This can be done
    manually by a human observer or automated by using sensing technologies such as
    sensors or satellites. In addition, external data can be acquired to complement
    direct observations. • Analysis and decision making: compares measurements with
    the norms that specify the desired performance (system objectives concerning e.g.
    quantity, quality and lead time aspects), signals deviations and decides on the
    appropriate intervention to remove the signalled disturbances. • Intervention:
    plans and implements the chosen intervention to correct the farm processes'' performance.
    3.3. Data chain The data chain refers to the sequence of activities from data
    capture to decision making and data marketing (Chen et al., 2014, Miller and Mork,
    2013). It includes all activities that are needed to manage data for farm management.
    Fig. 3 illustrates the main steps in this chain. Download : Download high-res
    image (113KB) Download : Download full-size image Fig. 3. The data chain of Big
    Data applications, based on Chen et al. (2014). Being an integral part of business
    processes, the data chain consists necessarily of a technical layer that captures
    raw data and converts it into information and a business layer that makes decisions
    and derives value from provided data services and business intelligence. The two
    layers can be interwoven in each stage and together they form the basis of what
    has come to be known as the ‘data value chain’ (Dumbill, 2014) (Table 1). Table
    1. Key stages of the data chain on technical and business layer. Layer of data
    chain Stages of a data chain Raw material Processing Transport Marketing Technical
    Data generation and capture Data janitorial work, Data transformation Data analytics
    Data transfer Data transfer Data analytics Business Data discovery Data warehousing
    Interpreting data, Connecting data to decision (Obtaining business information
    and insight) Information share and data integration Data-driven services 3.4.
    Network management organization The network management organization deals with
    the behaviour of the stakeholders and how it can be influenced to accomplish the
    business process objectives. For the uptake and further development of Big Data
    applications, two interdependent aspects are considered relevant: governance and
    business model. Governance involves the formal and informal arrangements that
    govern cooperation within the stakeholder network. Important arrangements for
    the management of big data include agreements on data availability, data quality,
    access to data, security, responsibility, liability, data ownership, privacy and
    distribution of costs. Three basic forms of network governance can be distinguished
    (Lazzarini et al., 2001): managerial discretion, standardization and mutual adjustment.
    These forms correspond with the three forms of network governance presented by
    Provan and Kenis (2008): lead organization-governed network, network administrative
    organization, and shared participant-governed network. The choice of a particular
    network governance structure aims at mitigating all forms of contractual hazards
    found between the different contracting parties in such a way that transaction
    costs are minimized (Williamson, 1996). When studying hybrid forms of organization
    such as supply chain networks, two main dimensions should be identified: the allocation
    of decision rights, i.e., who has the authority to take strategic decisions within
    the supply chain network, and the inter-organizational mechanisms aiming at rewarding
    desirable behaviour and preventing undesirable behaviour (risk and rewarding mechanisms).
    Despite agreement on the importance of business model to an organization''s success,
    the concept is still fuzzy and vague, and there is little consensus regarding
    its compositional facets. Osterwalder (2004) defines business model as “… a conceptual
    tool that contains a set of elements and their relationships and allows expressing
    a company''s logic of earning money”. It is a description of the value a company
    offers to one or several segments of customers and the architecture of the firm
    and its network of partners for creating, marketing and delivering this value
    and relationship capital, in order to generate profitable and sustainable revenue
    streams.” This definition reflects a so-called firm-centric view of business model.
    Another view on business model is the network-centric business model which builds
    upon value network theories (Al-Debei and Avison, 2010). The value network theories
    consider both financial and non-financial value of business transactions and exchanges.
    Both views are relevant to the network management of Big Data applications. 3.5.
    Network management technology The network management technology includes all computers,
    networks, peripherals, systems software, application packages (application software),
    procedures, technical, information and communication standards (reference information
    models and coding and message standards) etc., that are used and necessary for
    adequate data management in the inter-organizational control of farming processes
    (van der Vorst et al., 2005). Components to be mentioned here encompass: • Data
    resources stored in shared databases and a shared understanding of its content
    (shared data model of the database). • Information systems and services that allow
    us to use and maintain these databases. An information system is used to process
    information necessary to perform useful activities using activities, facilities,
    methods and procedures. • The whole set of formalised coding and message standards
    (both technically and content-wise) with associated procedures for use, connected
    to shared databases, which are necessary to allow seamless and error-free automated
    communication between business partners in a food supply chain network. • The
    necessary technical infrastructure. None of the above can work if we don''t have
    the connected set of computers (workstations of individual associates or people
    employed by or interested in the network and the database, communication and application
    servers and all associated peripherals) that will allow for its usage. In conclusion,
    this framework now provides a coherent set of elements to describe and analyse
    the developments of Big Data in Smart Farming. The results are provided in the
    next section. 4. Results 4.1. Drivers for Big Data in Smart Farming There has
    been a significant trend to consider the application of Big Data techniques and
    methods to agriculture as a major opportunity for application of the technology
    stack, for investment and for the realisation of additional value within the agri-food
    sector (Noyes, 2014, Sun et al., 2013b, Yang, 2014). Big data applications in
    farming are not strictly about primary production, but play a major role in improving
    the efficiency of the entire supply chain and alleviating food security concerns
    (Chen et al., 2014, Esmeijer et al., 2015, Gilpin, 2015a). Currently, big data
    applications discussed in the literature are taking place primarily in Europe
    and North America (Faulkner and Cebul, 2014). Considering the growing attention
    and keen interest shown in the literature, however, the number of applications
    is expected to grow rapidly in other countries like China (Li et al., 2014, Liu
    et al., 2012). Big data is the focus of in-depth, advanced, game-changing business
    analytics, at a scale and speed that the old approach of copying and cleansing
    all of it into a data warehouse is no longer appropriate (Devlin, 2012). Opportunities
    for Big Data applications in agriculture include benchmarking, sensor deployment
    and analytics, predictive modelling, and using better models to manage crop failure
    risk and to boost feed efficiency in livestock production (Faulkner and Cebul,
    2014, Lesser, 2014). In conclusion, Big Data is to provide predictive insights
    to future outcomes of farming (predictive yield model, predictive feed intake
    model, etc.), drive real-time operational decisions, and reinvent business processes
    for faster, innovative action and game-changing business models (Devlin, 2012).
    Decision-making in the future will be a complex mix of human and computer factors
    (Anonymous, 2014b). Big data is expected to cause changes to both the scope and
    the organization of farming (Poppe et al., 2015). While there are doubts whether
    farmers'' knowledge is about to be replaced by algorithms, Big Data applications
    are likely to change the way farms are operated and managed (Drucker, 2014). Key
    areas of change are real-time forecasting, tracking of physical items, and reinventing
    business processes (Devlin, 2012). Wider uptake of Big Data is likely to change
    both farm structures and the wider food chain in unexplored ways as what happened
    with the wider adoption of tractor and the introduction of pesticides in the 1950s.
    As with many technological innovations changes by Big Data applications in Smart
    Farming are driven by push-pull mechanisms. Pull, because there is a need for
    new technology to achieve certain goals. Push, because new technology enables
    people or organizations to achieve higher or new goals. This will be elaborated
    in the next subsections. 4.1.1. Pull factors From a business perspective, farmers
    are seeking ways to improve profitability and efficiency by on the one hand looking
    for ways to reduce their costs and on the other hand obtaining better prices for
    their product. Therefore they need to take better, more optimal decisions and
    improve management control. While in the past advisory services were based on
    general knowledge that once was derived from research experiments, there is an
    increasing need for information and knowledge that is generated on-farm in its
    local-specific context. It is expected that Big Data technologies help to achieve
    these goals in a better way (Poppe et al., 2015, Sonka, 2015). A specific circumstance
    for farming is the influence of the weather and especially its volatility. Local-specific
    weather and climate data can help decision-making a lot (Lesser, 2014). A general
    driver can be the relief of paper work because of all kind of regulations in agri-food
    production (Poppe et al., 2015). From a public perspective global food security
    is often mentioned as a main driver for further technological advancements (Gilpin,
    2015b, Lesser, 2014, Poppe et al., 2015). Besides, consumers are becoming more
    concerned about food safety and nutritional aspects of food related to health
    and well-being (Tong et al., 2015). In relation to that, Tong et al. (2015) mention
    the need for early warning systems instead of many ex-post analyses that are currently
    being done on historical data. 4.1.2. Push factors A general future development
    is the Internet of Things (IoT) in which all kinds of devices – smart objects
    – are connected and interact with each other through local and global, often wireless
    network infrastructures (Porter and Heppelmann, 2014). Precision agriculture can
    be considered as an exponent of this development and is often mentioned as an
    important driver for Big Data (Lesser, 2014, Poppe et al., 2015). This is expected
    to lead to radical changes in farm management because of access to explicit information
    and decision-making capabilities that were previously not possible, either technically
    or economically (Sonka, 2014). As a consequence, there is a rise of many ag-tech
    companies that pushes this data-driven development further (Lesser, 2014). Wireless
    data transfer technology also permits farmers to access their individual data
    from anywhere – whether they are at the farmhouse or meeting with buyers in Chicago
    – enabling them to make informed decisions about crop yield, harvesting, and how
    best to get their product to market (Faulkner and Cebul, 2014). Table 2 provides
    an overview and summarizes the push and pull factors that drive the development
    of Big Data and Smart Farming. Table 2. Summary of push and pull factors that
    drive the development of Big Data and Smart Farming. Push factors Pull factors
    • General technological developments - Internet of Things and data-driven technologies
    - Precision Agriculture - Rise of ag-tech companies • Sophisticated technology
    - Global Navigation Satellite Systems - Satellite imaging - Advanced (remote)
    sensing - Robots - Unmanned Aerial Vehicles (UAVs) • Data generation and storage
    - Process-, machine- and human-generated - Interpretation of unstructured data
    - Advanced data analytics • Digital connectivity - Increased availability to ag
    practitioners - Computational power increase • Innovation possibilities - Open
    farm management systems with specific apps - Remote/computer-aided advise and
    decisions - Regionally pooled data for scientific research and advise - On-line
    farmer shops • Business drivers - Efficiency increase by lower cost price or better
    market price - Improved management control and decision-making - Better local-specific
    management support - Better cope with legislation and paper work - Deal with volatility
    in weather conditions • Public drivers - Food and nutrition security - Food safety
    - Sustainability • General need for more and better information 4.2. Business
    processes 4.2.1. Farm processes Agricultural Big Data are known to be highly heterogeneous
    (Ishii, 2014, Li et al., 2014). The heterogeneity of data concerns for example
    the subject of the data collected (i.e., what is the data about) and the ways
    in which data are generated. Data collected from the field or the farm include
    information on planting, spraying, materials, yields, in-season imagery, soil
    types, weather, and other practices. There are in general three categories of
    data generation (Devlin, 2012, UNECE, 2013): (i) process-mediated (PM), (ii) machine-generated
    (MG) and (iii) human-sourced (HS). PM data, or the traditional business data,
    result from agricultural processes that record and monitor business events of
    interest, such as purchasing inputs, feeding, seeding, applying fertilizer, taking
    an order, etc. PM data are usually highly structured and include transactions,
    reference tables and relationships, as well as the metadata that define their
    context. Traditional business data are the vast majority of what IT managed and
    processed, in both operational and business information systems, usually structured
    and stored in relational database systems. MG data are derived from the vast increasing
    number of sensors and smart machines used to measure and record farming processes;
    this development is currently boosted by what is called the Internet of Things
    (IoT). MG data range from simple sensor records to complex computer logs and are
    typically well-structured. As sensors proliferate and data volumes grow, it is
    becoming an increasingly important component of the farming information stored
    and processed. Its well-structured nature is suitable for computer processing,
    but its size and speed is beyond traditional approaches. For Smart Farming, the
    potential of unmanned aerial vehicles (UAVs) has been well-recognized (Faulkner
    and Cebul, 2014, Holmes, 2014). Drones with infrared cameras, GPS technology,
    are transforming agriculture with their support for better decision making, risk
    management (Anonymous, 2014c). In livestock farming, smart dairy farms are replacing
    labour with robots in activities like feeding cows, cleaning the barn, and milking
    the cows (Grobart, 2012). On arable farms, precision technology is increasingly
    used for managing information about each plant in the field (Vogt, 2013). With
    these new technologies data is not in traditional tables only, but can also appear
    in other formats like sounds or images (Sonka, 2015). In the meantime several
    advanced data analysis techniques have been developed that trigger the use of
    data in images or other formats (Lesser, 2014, Noyes, 2014). HM data is the record
    of human experiences, previously recorded in books and works of art, and later
    in photographs, audio and video. Human-sourced information is now almost entirely
    digitized and stored everywhere from personal computers to social networks. HM
    data are usually loosely structured and often ungoverned. In the context of Big
    Data and Smart Farming, human-sourced data have rarely been discussed except in
    relation to the marketing aspects (Verhoosel et al., 2016). Limited capacity with
    regard to the collection of relevant social media data and semantic integration
    of these data from a diversity of sources is considered to be a major challenge
    (Bennett, 2015). Table 3 provides an overview of current Big Data applications
    in relation to different elements of Smart Farming in key farming sectors. Table
    3. Examples of Big Data applications/aspects in different Smart Farming processes
    (cf. Fig. 1). Cycle of Smart Farming Arable Livestock Horticulture Fishery Smart
    sensing and monitoring Robotics and sensors (Faulkner and Cebul, 2014) Biometric
    sensing, GPS tracking (Sonka, 2014) Robotics and sensors (temperature, humidity,
    CO2, etc.), greenhouse computers (Sun et al., 2013a) Automated Identification
    Systems (AIS) (Natale et al., 2015) Smart analysis and planning Seeding, Planting,
    Soil typing, Crop health, yield modelling (Noyes, 2014) Breeding, monitoring (Cole
    et al., 2012) Lighting, energy management (Li and Wang, 2014) Surveillance, monitoring
    (Yan et al., 2013) Smart control Precision farming (Sun et al., 2013b) Milk robots
    (Grobart, 2012) Climate control, Precision control (Luo et al., 2012) Surveillance,
    monitoring (Yan et al., 2013) Big Data in the cloud Weather/climate data, Yield
    data, Soil types, Market information, agricultural census data (Chen et al., 2014)
    Livestock movements (Faulkner and Cebul, 2014, Wamba and Wicks, 2010) Weather/climate,
    market information, social media (Verdouw et al., 2013) Market data (Yan et al.,
    2013) Satellite data, (European Space Agency, 2016) From the business perspective,
    the main data products along the Big Data value chain are (predictive) analytics
    that provide decision support to business processes at various levels. The use
    or analysis of sensor data or similar data must somehow fit into existing or reinvented
    business processes. Integration of data from a variety of sources, both traditional
    and new, with multiple tools, is the first prerequisite. 4.2.2. Farm management
    As Big Data observers point out: big or small, Big Data is still data (Devlin,
    2012). It must be managed and analysed to extract its full value. Developments
    in wireless networks, IoT, and cloud computing are essentially only means to obtain
    data and generate Big Data. The ultimate use of Big Data is to obtain the information
    or intelligence embodied or enabled by Big Data. Agricultural Big Data will have
    no real value without Big Data analytics (Sun et al., 2013b). To obtain Big Data
    analytics, data from different sources need to be integrated into ‘lagoons of
    data’. In this process, data quality issues are likely to arise due to errors
    and duplications in data. As shown in Fig. 4, a series of operations on the raw
    data may be necessary to ensure the quality of data. Download : Download high-res
    image (170KB) Download : Download full-size image Fig. 4. The flowchart of intelligent
    processing of agricultural Big Data. (Source: Li et al., 2014) Since the advent
    of large-scale data collections or warehouses, the so-called data rich, information
    poor (DRIP) problems have been pervasive. The DRIP conundrum has been mitigated
    by the Big Data approach which has unleashed information in a manner that can
    support informed - yet, not necessarily defensible or valid - decisions or choices.
    Thus, by somewhat overcoming data quality issues with data quantity, data access
    restrictions with on-demand cloud computing, causative analysis with correlative
    data analytics, and model-driven with evidence-driven applications (Tien, 2013).
    Big data on its own can offer ‘a-ha’ insights, but it can only reliably deliver
    long-term business advantage when fully integrated with traditional data management
    and governance processes (Devlin, 2012). Big Data processing depends on traditional,
    process-mediated data and metadata to create the context and consistency needed
    for full, meaningful use. The results of Big Data processing must be fed back
    into traditional business processes to enable change and evolution of the business.
    4.2.3. Data chain As often discussed in the literature, a wide range of issues
    need to be addressed for big data applications. Both technical and governance
    issues can arise in different stages of the data chain, where governance challenges
    become increasingly dominant at the later stages of the data chain. Table 4 summarizes
    the state-of-the-art features of Big Data applications in Smart Farming and the
    key issues corresponding to each stage of the Big Data chain that were found in
    literature. At the initial stages, technical issues concerning data formats, hardware,
    and information standards may influence the availability of big data for further
    analysis. At the later stages, governance issues such as achieving agreements
    on responsibilities and liabilities become more challenging for business processes.
    Table 4. State of the art of Big Data applications in Smart Farming and key issues.
    Stages of the data chain State of the art Key issues Data capture Sensors, Open
    data, data captured by UAVs (Faulkner and Cebul, 2014) Biometric sensing, Genotype
    information (Cole et al., 2012) Reciprocal data (Van ''t Spijker, 2014) Availability,
    quality, formats (Tien, 2013) Data storage Cloud-based platform, Hadoop Distributed
    File System (HDFS), hybrid storage systems, cloud-based data warehouse (Zong et
    al., 2014) Quick and safe access to data, costs (Zong et al., 2014) Data transfer
    Wireless, cloud-based platform (Karim et al., 2014, Zhu et al., 2012), Linked
    Open Data (Ritaban et al., 2014) Safety, agreements on responsibilities and liabilities
    (Haire, 2014) Data transformation Machine learning algorithms, normalize, visualize,
    anonymize (Ishii, 2014, Van Rijmenam, 2015) Heterogeneity of data sources, automation
    of data cleansing and preparation (Li et al., 2014) Data analytics Yield models,
    Planting instructions, Benchmarking, Decision ontologies, Cognitive computing
    (Van Rijmenam, 2015) Semantic heterogeneity, real-time analytics, scalability
    (Li et al., 2014, Semantic Community, 2015) Data marketing Data visualization
    (Van ''t Spijker, 2014) Ownership, privacy, new business models (Orts and Spigonardo,
    2014) 4.3. Stakeholder network In view of the technical changes brought forth
    by Big Data and Smart Farming, we seek to understand the stakeholder network around
    the farm. The literature suggests major shifts in roles and power relations among
    different players in existing agri-food chains. We observed the changing roles
    of old and new software suppliers in relation to Big Data and farming and emerging
    landscape of data-driven initiatives with prominent role of big tech and data
    companies like Google and IBM. In Fig. 5, the current landscape of data-driven
    initiatives is visualized. Download : Download high-res image (223KB) Download
    : Download full-size image Fig. 5. The landscape of the Big Data network with
    business players. The stakeholder networks exhibits a high degree of dynamics
    with new players taking over the roles played by other players and the incumbents
    assuming new roles in relation to agricultural Big Data. As opportunities for
    Big Data have surfaced in the agribusiness sector, big agriculture companies such
    as Monsanto and John Deere have spent hundreds of millions of dollars on technologies
    that use detailed data on soil type, seed variety, and weather to help farmers
    cut costs and increase yields (Faulkner and Cebul, 2014). Other players include
    various accelerators, incubators, venture capital firms, and corporate venture
    funds (Monsanto, DuPont, Syngenta, Bayer, DOW etc.) (Lane, 2015). Monsanto has
    been pushing big-data analytics across all its business lines, from climate prediction
    to genetic engineering. It is trying to persuade more farmers to adopt its cloud
    services. Monsanto says farmers benefit most when they allow the company to analyse
    their data - along with that of other farmers - to help them find the best solutions
    for each patch of land (Guild, 2014). While corporates are very much engaged with
    Big Data and agriculture, start-ups are at the heart of action, providing solutions
    across the value chain, from infrastructure and sensors all the way down to software
    that manages the many streams of data from across the farm. As the ag-tech space
    heats up, an increasing number of small tech start-ups are launching products
    giving their bigger counterparts a run for their money. In the USA, start-ups
    like FarmLogs (Guild, 2014), FarmLink (Hardy, 2014) and 640 Labs challenge agribusiness
    giants like Monsanto, Deere, DuPont Pioneer (Plume, 2014). One observes a swarm
    of data-service start-ups such as FarmBot (an integrated open-source precision
    agriculture system) and Climate Corporation. Their products are powered by many
    of the same data sources, particularly those that are freely available such as
    from weather services and Google Maps. They can also access data gathered by farm
    machines and transferred wirelessly to the cloud. Traditional agri-IT firms such
    as NEC and Dacom are active with a precision farming trial in Romania using environmental
    sensors and Big Data analytics software to maximize yields (NEC, 2014). Venture
    capital firms are now keen on investing in agriculture technology companies such
    as Blue River Technology, a business focusing on the use of computer vision and
    robotics in agriculture (Royse, 2014). The new players to Smart Farming are tech
    companies that were traditionally not active in agriculture. For example, Japanese
    technology firms such as Fujitsu are helping farmers with their cloud based farming
    systems (Anonymous, 2014c). Fujitsu collects data (rainfall, humidity, soil temperatures)
    from a network of cameras and sensors across the country to help farmers in Japan
    better manage its crops and expenses (Carlson, 2012). Data processing specialists
    are likely to become partners of producers as Big Data delivers on its promise
    to fundamentally change the competitiveness of producers. Beside business players
    such as corporates and start-ups, there are many public institutions (e.g., universities,
    USDA, the American Farm Bureau Federation, GODAN) that are actively influencing
    Big Data applications in farming through their advocacy on open data and data-driven
    innovation or their emphasis on governance issues concerning data ownership and
    privacy issues. Well-known examples are the Big Data Coalition, Open Agriculture
    Data Alliance (OADA) and AgGateway. Public institutions like the USDA, for example,
    want to harness the power of agricultural data points created by connected farming
    equipment, drones, and even satellites to enable precision agriculture for policy
    objectives like food security and sustainability. Precision farming is considered
    to be the “holy grail” because it is the means by which the food supply and demand
    imbalance will be solved. To achieve that precision, farmers need a lot of data
    to inform their planting strategies. That is why USDA is investing in big, open
    data projects. It is expected that open data and Big Data will be combined together
    to provide farmers and consumers just the right kind of information to make the
    best decisions (Semantic Community, 2015). 4.4. Network management 4.4.1. Organization
    Data ownership is an important issue in discussions on the governance of agricultural
    Big Data generated by smart machinery such as tractors from John Deere (Burrus,
    2014). In particular, value and ownership of precision agricultural data have
    received much attention in business media (Haire, 2014). It has become a common
    practice to sign Big Data agreements on ownership and control data between farmers
    and agriculture technology providers (Anonymous, 2014a). Such agreements address
    questions such as: How can farmers make use of Big Data? Where does the data come
    from? How much data can we collect? Where is it stored? How do we make use of
    it? Who owns this data? Which companies are involved in data processing? There
    is also a growing number of initiatives to address or ease privacy and security
    concerns. For example, the Big Data Coalition, a coalition of major farm organizations
    and agricultural technology providers in the USA, has set principles on data ownership,
    data collection, notice, third-party access and use, transparency and consistency,
    choice, portability, data availability, market speculation, liability and security
    safeguards (Haire, 2014). And AgGateway, a non-profit organization with more than
    200 member companies in the USA, have drawn a white paper that presents ways to
    incorporate data privacy and standards (AgGateway, 2014). It provides users of
    farm data and their customers with issues to consider when establishing policies,
    procedures, and agreements on using that data instead of setting principles and
    privacy norms. The ‘Ownership Principle’ of the Big Data Coalition states that
    “We believe farmers own information generated on their farming operations. However,
    it is the responsibility of the farmer to agree upon data use and sharing with
    the other stakeholders (...).” While having concerns about data ownership, farmers
    also see how much companies are investing in Big Data. In 2013, Monsanto paid
    nearly 1 billion US dollars to acquire The Climate Corporation, and more industry
    consolidation is expected. Farmers want to make sure they reap the profits from
    Big Data, too. Such change of thinking may lead to new business models that allow
    shared harvesting of value from data. Big data applications in Smart Farming will
    potentially raise many power-related issues (Orts and Spigonardo, 2014). There
    might be companies emerging that gain much power because they get all the data.
    In the agri-food chain these could be input suppliers or commodity traders, leading
    to a further power shift in market positions (Lesser, 2014). This power shift
    can also lead to potential abuses of data e.g. by the GMO lobby or agricultural
    commodity markets or manipulation of companies (Noyes, 2014). Initially, these
    threats might not be obvious because for many applications small start-up companies
    with hardly any power are involved. However, it is a common business practice
    that these are acquired by bigger companies if they are successful and in this
    way the data still gets concentrated in the hands of one big player (Lesser, 2014).
    Gilpin (2015b), for example, concluded that Big Data is both a huge opportunity
    as a potential threat for farmers. 4.4.2. Technology To make Big Data applications
    for Smart Farming work, an appropriate technological infrastructure is essential.
    Although we could not find much information about used infrastructures in literature
    it can be expected that the applications from the AgTech and AgBusiness companies
    in Fig. 5 are based on their existing infrastructure that is usually supplied
    by large software vendors. This has resulted in several proprietary platforms
    such as AGCO''s AgCommand, John Deere''s FarmSight or Monsanto''s FieldScripts.
    Initially these platforms were quite closed and difficult to connect to by other
    third parties. However, they increasingly realize to be part of a system of systems
    (Porter and Heppelmann, 2014) resulting in more open platforms in which data is
    accessible through open Application Programming Interfaces (APIs). The tech- and
    data start-ups mainly rely on open standards (e.g. ISOBUS) through which they
    are able to combine different datasets. Moreover, Farmobile recently introduced
    a piece of hardware, the passive uplink communicator (PUC), which captures all
    machine data into a database that can be transmitted wirelessly (Young, 2016).
    In North America, several initiatives are undertaken to open up data transfer
    between several platforms and devices. The ISOBlue project facilitates data acquisition
    through the development of and open-source hardware platform and software libraries
    to forward ISOBUS messages to the cloud and develop applications for Android smartphones
    (Layton et al., 2014). The Open Ag Toolkit (OpenATK) endeavours to provide a specialized
    Farm Management Information System incorporating low-cost, widely available mobile
    computing technologies, internet-based cloud storage services, and user-centred
    design principles (Welte et al., 2013). One of the internet-based cloud storage
    services that is candidate in the OpenATK is Trello, which is also advocated by
    Ault et al. (2013). They emphasize the capability to share data records easily
    between several workers within the farm or stakeholders outside the farm and the
    guarantee of long-term ownership of farmer''s data. In Europe, much work to realize
    an open infrastructure for data exchange and collaboration was done within the
    Future Internet programme. The focus of this programme was to realize a set of
    Generic Enablers (GEs) for e.g. cloud hosting, data and context management services,
    IoT services, security and Big Data Analysis which are common to all Future Internet
    applications for all kind of different sectors, called FIWARE (Wolfert et al.,
    2014). The SmartAgriFood proposed a conceptual architecture for Future Internet
    applications for the agri-food domain based on these FIWARE GEs (Kaloxylos et
    al., 2012, Kaloxylos et al., 2014). The FIspace project implemented this architecture
    into a real platform for business collaboration which is visualized in Fig. 6
    (Barmpounakis et al., 2015, Wolfert et al., 2014). Download : Download high-res
    image (167KB) Download : Download full-size image Fig. 6. A high-level picture
    of the FIspace architecture based on FIWARE GEs. Further explanation in text.
    FIspace uses FIWARE Generic Enablers (GEs) but has two particular extensions for
    business collaboration: the App Store and the Real-Time B2B collaboration core.
    These key components are connected with several other modules to enable system
    integration (e.g. with IoT), to ensure Security, Privacy and Trust in business
    collaboration and an Operating Environment and Software Development Kit to support
    an ‘ecosystem’ in which Apps for the FIspace store can be developed. The FIspace
    platform will be approachable through various type of front-ends (e.g. web or
    smartphone), but also direct M2M communication is possible. Because all mentioned
    open platforms are result from recent projects, their challenge is still how they
    could be broadly adopted. For the FIspace platform, a first attempt was made in
    the FIWARE accelerator programme1 in which several hundreds of start-ups were
    funded to develop apps and services and also received business support. Some of
    them were already successful in receiving further funding from private investors,
    but it is too early to determine the final success rate of this programme. 4.5.
    Challenges The challenges for Big Data and Smart Farming found in literature can
    be broadly classified into technical and organizational ones of which the latter
    category is considered the most important (Orts and Spigonardo, 2014, Sonka, 2015).
    Moreover, most technical challenges will be solved if enough business opportunities
    for Big Data in Smart Farming can be created, so there needs to be a clear return
    on investment (Lesser, 2014). On the revenue side, there is a challenge to make
    solutions affordable for farmers, especially for those in developing countries
    (Kshetri, 2014). If there will be more users of Big Data applications it will
    lead in its turn to more valuable data, often referred to as the reciprocal value
    of Big Data (Van ''t Spijker, 2014). This is a very important feature that needs
    to be carefully implemented in companies'' strategies. On the costs side, the
    challenge is to automate data acquisition in such a way that there are virtually
    no costs (Sonka, 2015). Because on-farm data will generally remain in the hands
    of individual companies, investments are needed in a common pool infrastructure
    to transfer and integrate data and finally make applications out of it. Poppe
    et al. (2015) refer to this as Agricultural Business Collaboration and Data Exchange
    Facilities (ABCDEFs). An important question concerning these ABCDEFs is if these
    will be closed, proprietary systems such as currently Monsanto''s FieldScripts
    or if these will be more open as proposed by e.g. the OpenATK or the FIspace platform.
    Finally, another business-related challenge of Big Data is how the potential of
    information across food systems can be utilized (Sonka, 2015). One of the biggest
    challenges of Big Data governance is probably how to ensure privacy and security
    (Lesser, 2014, Orts and Spigonardo, 2014, Sonka, 2014, Van ''t Spijker, 2014).
    Currently this is sometimes inhibiting developments when data are in silos, guarded
    by employees or companies because of this issue. They are afraid that data fall
    into the wrong hands (e.g. of competitors) (Gilpin, 2015b). Hence privileged access
    to Big Data and building trust with farmers should be a starting point in developing
    applications (Van ''t Spijker, 2014). Therefore new organizational linkages and
    modes of collaboration need to be formed in the agri-food chain (Sonka, 2014).
    In other words, it means the ability to quickly access the correct data sources
    to evaluate key performance/core processes and outcome indicators in building
    successful growth strategies (Yang, 2014). All aforementioned challenges make
    that the current amounts of farm data is currently underutilized (Bennett, 2015).
    Another problem is that the availability and quality of the data is often poor
    and needs to be ensured before you can make use of it (Lesser, 2014, Orts and
    Spigonardo, 2014). A lack of integration is also reported as an important problem
    (Yang, 2014). Anonymization of data, so that it cannot be traced back to individual
    companies can also be a problem sometimes (Orts and Spigonardo, 2014). There are
    also attempts to include more open, governmental data (cf. the GODAN initiative),
    but a problem can be that the underlying systems were never designed for that
    or they contain many inconsistent, incompatible data (Orts and Spigonardo, 2014).
    5. Conclusions and recommendations In this paper a literature review on Big Data
    applications in Smart Farming was conducted. In Section 2 it was concluded that
    currently there are not many references in peer-reviewed scientific journals.
    Therefore, a reliable, quantitative analysis was not possible. Furthermore, findings
    from grey literature may lack scientific rigor as can be expected from peer-reviewed
    journal articles. However, as articles from grey literature are publicly available,
    they can be seen as being subject to public scrutiny and therefore reasonably
    reliable. As such, we consider that the knowledge base was enriched by articles
    from grey literature. Besides, much effort was put into developing a framework
    for analysis that can be used for future reviews with a more quantitative approach.
    Based on the findings in this paper several conclusions can be drawn on the state-of-the-art
    of Big Data applications in Smart Farming. First of all, Big Data in Smart Farming
    is still in an early development stage. This is based on the fact there are only
    limited scientific publications available on this topic and much information had
    to be derived from ‘grey literature’. The applications discussed are mainly from
    Europe and Northern America, with a growing number of applications expected from
    other countries as well. Considering the scope of the review, no geographic analysis
    was performed in this study. Further conclusions, drawn as answers to the research
    questions we formulated in the Introduction, are elaborated below. What role does
    Big Data play in Smart Farming? Big Data is changing the scope and organization
    of farming through a pull-push mechanism. Global issues such as food security
    and safety, sustainability and as a result efficiency improvement are tried to
    be addressed by Big Data applications. These issues make that the scope of Big
    Data applications extends far beyond farming alone, but covers the entire supply
    chain. The Internet of Things development, wirelessly connecting all kind of objects
    and devices in farming and the supply chain, is producing many new data that are
    real-time accessible. This applies to all stages in the cyber-physical management
    cycle (Fig. 1). Operations and transactions are most important sources of process-mediated
    data. Sensors and robots producing also non-traditional data such as images and
    videos provide many machine-generated data. Social media is an important source
    for human-sourced data. These big amounts of data provide access to explicit information
    and decision-making capabilities at a level that was not possible before. Analytics
    is key success factor to create value out of these data. Many new and innovative
    start-up companies are eager to sell and deploy all kind of applications to farmers
    of which the most important ones are related to sensor deployment, benchmarking,
    predictive modelling and risk management. What stakeholders are involved and how
    are they organized? Referring to Fig. 5, there are first of all the traditional
    players in agriculture such as input suppliers and technology suppliers for which
    there is a clear move towards Big Data as their most important business model.
    Most of them are pushing their own platforms and solutions to farmers, which are
    often proprietary and rather closed environments although a tendency towards more
    openness is observed. This is stimulated by farmers - organized in cooperatives
    or coalitions - that are concerned about data privacy and security and also want
    to create value with their own data or at least want to benefit from Big Data
    solutions. Beside the traditional players we see that Big Data is also attracting
    many new entrants which are often start-ups supported by either large private
    investors or large ICT or non-agricultural tech companies. Also public institutions
    aim to open up public data that can be combined with private data. These developments
    raise issues around data ownership, value of data and privacy and security. The
    architecture and infrastructure of Big Data solutions are also significantly determining
    how stakeholder networks are organized. On the one hand there is a tendency towards
    closed, proprietary systems and on the other hand towards more open systems based
    on open source, standards and interfaces. Further development of Big Data applications
    may therefore likely result in two extremes of supply chain scenarios: one with
    further integration of the supply chain in which farmers become franchisers; another
    in which farmers are empowered by Big Data and open collaboration and can easily
    switch between suppliers, share data with government and participate in short
    supply chains rather than integrated long supply chains. In reality, the situation
    will be a continuum between these two extremes differentiated by crop, commodity,
    market structure, etc. What are the expected changes that are caused by Big Data
    developments? From this review it can be concluded that Big Data will cause major
    changes in scope and organization of Smart Farming. Business analytics at a scale
    and speed that was never seen before will be a real game changer, continuously
    reinventing new business models. Referring to Fig. 1, it can be expected that
    farm management and operations will drastically change by access to real-time
    data, real-time forecasting and tracking of physical items and in combination
    with IoT developments in further automation and autonomous operation of the farm.
    Taking also the previous research question into account, it is already visible
    that Big Data will also cause major shifts in power relationships between the
    different players in the Big Data farming stakeholder network. The current development
    stage does however not reveal yet towards which main scenario Smart Farming will
    be developed. What challenges need to be addressed in relation to the previous
    questions? A long list of key issues was already provided in Table 4, but the
    most important ones are • Data-ownership and related privacy and security issues
    – these issues have to be properly addressed, but when this is applied too strictly
    it can also slow down innovations; • Data quality – which has always been a key
    issue in farm management information systems, but is more challenging with big,
    real-time data; • Intelligent processing and analytics – for Big Data this is
    also more challenging because of the large amount of often unstructured, heterogeneous
    data which requires a smart interplay between skilled data scientists and domain
    experts; • Sustainable integration of Big Data sources – integration of many different
    data sources is challenging but because this is crucial for your business model
    this has to be done in a sustainable manner; • Business models that are attractive
    enough for solution providers but that also enable a fair share between the different
    stakeholders; • Openness of platforms that will accelerate solution development
    and innovation in general but also empower farmers in their position in supply
    chains. The framework for analysis was developed from a chain network perspective
    with specific attention to network management between the stakeholders that are
    involved. In future research it could also be valuable to look at this subject
    from a wider innovation perspective (Busse et al., 2015, Klerkx et al., 2010,
    Lamprinopoulou et al., 2014). The same holds for ethical aspects of an innovation
    such as Big Data that could be addressed in future research (Carolan, 2016, Driessen
    and Heutinck, 2015, Wigboldus et al., 2016). The promise of Big Data in agriculture
    is alluring, but the challenges above have to be addressed for increased uptake
    of Big Data applications. Although there are certainly technical issues to be
    resolved we recommend to focus first on the governance issues that were identified
    and design suitable business models because these are currently the most inhibiting
    factors. References AgGateway, 2014 AgGateway Data privacy and use white paper
    http://www.aggateway.org/WorkingGroups/Committees/DataPrivacySecurity.aspx (2014)
    (Accessed: 7 May 2015) Google Scholar Al-Debei and Avison, 2010 M.M. Al-Debei,
    D. Avison Developing a unified framework of the business model concept Eur. J.
    Inf. Syst., 19 (2010), pp. 359-376 CrossRefView in ScopusGoogle Scholar Anonymous,
    2014a Anonymous Coalition of Ag groups, companies reach data agreement Farm Industry
    News (2014) http://farmindustrynews.com/precision-farming/coalition-ag-groups-companies-reach-data-agreement
    (Accessed: 7 May 2015) Google Scholar Anonymous, 2014b Anonymous The Digital Transformation
    of Row Crop Agriculture: A Report to the Iowa AgState Group The Hale Group, Ltd;
    LSC international, Inc (2014) https://www.iowafarmbureau.com/page/file?path=Files%2Fwebsite%2FNews%2FPDFs%2Fages1.pdf
    (Accessed: 7 May 2015) Google Scholar Anonymous, 2014c Anonymous Technology Helps
    Farmers to Cater Climate Changes Effects Flare (2014) http://www.flare.pk (Accessed:
    7 May 2015) Google Scholar Ault et al., 2013 A.C. Ault, J.V. Krogmeier, D. Buckmaster
    Mobile, Cloud-based Farm Management: A Case Study With Trello on My Farm, 2013
    Kansas City, Missouri, July 21–July 24, 2013 American Society of Agricultural
    and Biological Engineers (2013) Google Scholar Barmpounakis et al., 2015 S. Barmpounakis,
    A. Kaloxylos, A. Groumas, L. Katsikas, V. Sarris, K. Dimtsa, F. Fournier, E. Antoniou,
    N. Alonistioti, S. Wolfert Management and control applications in Agriculture
    domain via a Future Internet Business-to-Business platform Information Processing
    in Agriculture, 2 (2015), pp. 51-63 View PDFView articleView in ScopusGoogle Scholar
    Beer, 1981 S. Beer Brain of the Firm (second ed.), John Wiley, London and New
    York (1981) Google Scholar Bennett, 2015 J.M. Bennett Agricultural Big Data: utilisation
    to discover the unknown and instigate practice change Farm Policy Journal, 12
    (2015), pp. 43-50 CrossRefView in ScopusGoogle Scholar Burrus, 2014 D. Burrus
    Who owns your data? Business2Community.com (2014) http://www.business2community.com/big-data/owns-data-0793456#fX2ep06aoxZHQZdk.97
    (Accessed: 7 May 2015) Google Scholar Busse et al., 2015 M. Busse, W. Schwerdtner,
    R. Siebert, A. Doernberg, A. Kuntosch, B. König, W. Bokelmann Analysis of animal
    monitoring technologies in Germany from an innovation system perspective Agric.
    Syst., 138 (2015), pp. 55-65 View PDFView articleView in ScopusGoogle Scholar
    Carlson, 2012 C. Carlson Fujitsu Rolls Out Cloud-based Big Data Platform for Farmers
    FierceCIO (2012) http://www.fiercecio.com/story/fujitsu-rolls-out-cloud-based-big-data-platform-farmers/2012-07-19
    (Accessed: 7 May 2015) Google Scholar Carolan, 2016 M. Carolan Publicising food:
    Big Data, precision agriculture, and co-experimental techniques of addition Sociol.
    Rural. (2016) Google Scholar Chen et al., 2014 M. Chen, S. Mao, Y. Liu Big Data:
    a survey Mobile Netw Appl, 19 (2014), pp. 171-209 CrossRefView in ScopusGoogle
    Scholar Christopher, 2005 M. Christopher Logistics and Supply Chain Management:
    Creating Value-Adding Networks Pearson Education (2005) Google Scholar Cole et
    al., 2012 J.B. Cole, S. Newman, F. Foertter, I. Aguilar, M. Coffey Breeding and
    Genetics Symposium: really Big Data: processing and analysis of very large data
    sets J. Anim. Sci., 90 (2012), pp. 723-733 CrossRefView in ScopusGoogle Scholar
    Data FAIRport, 2014 Data FAIRport Find access interoperate re-use data http://www.datafairport.org/
    (2014) (Accessed: 2 August 2016) Google Scholar Davenport, 1993 T.H. Davenport
    Process Innovation: Reengineering Work through Information Technology Harvard
    Business School Press, Boston, Massachusetts (1993) Google Scholar Davenport and
    Short, 1990 T.H. Davenport, J.E. Short The new industrial-engineering - information
    technology and business process redesign Sloan Management Review, 31 (1990), pp.
    11-27 Google Scholar De Mauro et al., 2016 A. De Mauro, M. Greco, M. Grimaldi
    A formal definition of Big Data based on its essential features Libr. Rev., 65
    (2016), pp. 122-135 View in ScopusGoogle Scholar Devlin, 2012 B. Devlin The Big
    Data Zoo—Taming the Beasts: The Need for an Integrated Platform for Enterprise
    Information 9sight Consulting (2012) Google Scholar Driessen and Heutinck, 2015
    C. Driessen, L.F. Heutinck Cows desiring to be milked? Milking robots and the
    co-evolution of ethics and technology on Dutch dairy farms Agric. Hum. Values,
    32 (2015), pp. 3-20 CrossRefView in ScopusGoogle Scholar Drucker, 2014 V. Drucker
    Agriculture Springs Into the Digital Age Fund Strategy (2014) https://www.fundstrategy.co.uk/issues/fund-strategy-sept-2014/agriculture-springs-into-the-digital-age/
    (Accessed: 7 May 2015) Google Scholar Dumbill, 2014 E. Dumbill Understanding the
    Data Value Chain Big Data & Analysis Hub (2014) http://www.ibmbigdatahub.com/blog/understanding-data-value-chain
    (Accessed: 02 August 2016) Google Scholar Esmeijer et al., 2015 J. Esmeijer, T.
    Bakker, M. Ooms, B. Kotterink Data-driven innovation in agriculture: case study
    for the OECD KBC2-programme TNO Report TNO 2015 R10154 (2015) Google Scholar European
    Space Agency, 2016 European Space Agency Fish farms guided by Sentinels and the
    cloud http://www.esa.int/Our_Activities/Observing_the_Earth/Fish_farms_guided_by_Sentinels_and_the_cloud
    (2016) Accessed: Google Scholar Faulkner and Cebul, 2014 A. Faulkner, K. Cebul
    Agriculture Gets Smart: The Rise of Data and Robotics, Cleantech Agriculture Report
    Cleantech Group (2014) Google Scholar Fenn and LeHong, 2011 J. Fenn, H. LeHong
    Hype Cycle for Emerging Technologies, 2011 Gartner (2011) (July) Google Scholar
    Gilpin, 2015a L. Gilpin How Big Data is going to help feed nine billion people
    by 2050 How Big Data Is Going to Help Feed Nine Billion People by 2050 (2015)
    http://www.techrepublic.com/article/how-big-data-is-going-to-help-feed-9-billion-people-by-2050/
    (Accessed: 2015) Google Scholar Gilpin, 2015b L. Gilpin How Big Data Is Going
    to Help Feed Nine Billion People by 2050 TechRepublic (2015) http://www.techrepublic.com/article/how-big-data-is-going-to-help-feed-9-billion-people-by-2050/
    (Accessed: 7 May 2015) Google Scholar Grobart, 2012 Grobart, S., 2012. Dairy industry
    in era of Big Data: new gadgets help farmers monitor cows and analyze their milk.
    (Accessed: January 27, 2017 2017). Google Scholar Guild, 2014 M. Guild Big Data
    Comes to the Farm Financial Sense (2014) http://www.financialsense.com/contributors/guild/big-data-farm
    (Accessed: 7 May 2015) Google Scholar Haire, 2014 B. Haire Ag Data: Its Value,
    Who Owns It and Where''s It Going? Southeast Farm Press (2014) http://southeastfarmpress.com/cotton/ag-data-its-value-who-owns-it-and-where-s-it-going
    (Accessed: 7 May 2015) Google Scholar Hardy, 2014 Q. Hardy A Low-cost Alternative
    to Pricy Big Data on the Farm The New York Times Blogs (2014) http://bits.blogs.nytimes.com/2014/12/01/a-low-cost-alternative-to-pricy-big-data-on-the-farm/?_r=0
    (Accessed: 7 May 2015) Google Scholar Hashem et al., 2015 I.A.T. Hashem, I. Yaqoob,
    N.B. Anuar, S. Mokhtar, A. Gani, S. Ullah Khan The rise of “Big Data” on cloud
    computing: Review and open research issues Inf. Syst., 47 (2015), pp. 98-115 View
    PDFView articleView in ScopusGoogle Scholar Holmes, 2014 M. Holmes Different Industries
    Debate the Potential of UAVs and the Need for Satellite Via Satellite Integrating
    SatelliteToday.com (2014) http://www.satellitetoday.com/technology/2014/10/24/different-industries-debate-the-potential-of-uavs-and-the-need-for-satellite/
    (Accessed: 7 May 2015) Google Scholar in ''t Veld, 2002 J. in ''t Veld Analyse
    van organisatieproblemen (eighth ed.), Stenfert Kroese (2002) Google Scholar Ishii,
    2014 K. Ishii Big Data analysis in medicine, agriculture and environmental sciences
    Seibutsu kogaku Kaishi, 92 (2014), pp. 92-93 View in ScopusGoogle Scholar Kaloxylos
    et al., 2012 A. Kaloxylos, R. Eigenmann, F. Teye, Z. Politopoulou, S. Wolfert,
    C. Schrank, M. Dillinger, I. Lampropoulou, E. Antoniou, L. Pesonen, N. Huether,
    T. Floerchinger, N. Alonistioti, G. Kormentzas Farm management systems and the
    Future Internet era Comput. Electron. Agric., 89 (2012), pp. 130-144 View PDFView
    articleView in ScopusGoogle Scholar Kaloxylos et al., 2014 A. Kaloxylos, A. Groumas,
    V. Sarris, L. Katsikas, P. Magdalinos, E. Antoniou, Z. Politopoulou, S. Wolfert,
    C. Brewster, R. Eigenmann, C. Maestre Terol A cloud-based Farm Management System:
    architecture and implementation Comput. Electron. Agric., 100 (2014), pp. 168-179
    View PDFView articleView in ScopusGoogle Scholar Karim et al., 2014 L. Karim,
    Q.H. Mahmoud, N. Nasser, N. Khan An integrated framework for wireless sensor network
    management Wirel. Commun. Mob. Comput., 14 (2014), pp. 1143-1159 CrossRefView
    in ScopusGoogle Scholar Klerkx et al., 2010 L. Klerkx, N. Aarts, C. Leeuwis Adaptive
    management in agricultural innovation systems: the interactions between innovation
    networks and their environment Agric. Syst., 103 (2010), pp. 390-400 View PDFView
    articleView in ScopusGoogle Scholar Kshetri, 2014 N. Kshetri The emerging role
    of Big Data in key development issues: opportunities, challenges, and concerns
    Big Data & Society, 1 (2014) Google Scholar Lambert and Cooper, 2000 D.M. Lambert,
    M.C. Cooper Issues in supply chain management Ind. Mark. Manag., 29 (2000), pp.
    65-83 View PDFView articleView in ScopusGoogle Scholar Lamprinopoulou et al.,
    2014 C. Lamprinopoulou, A. Renwick, L. Klerkx, F. Hermans, D. Roep Application
    of an integrated systemic framework for analysing agricultural innovation systems
    and informing innovation policies: comparing the Dutch and Scottish agrifood sectors
    Agric. Syst., 129 (2014), pp. 40-54 View PDFView articleView in ScopusGoogle Scholar
    Lane, 2015 J. Lane Digital Soil: The Four Secrets of the New Agriculture Biofuels
    Digest (2015) http://www.biofuelsdigest.com/bdigest/2015/03/09/the-four-secrets-of-the-new-agriculture/
    (Accessed: 7 May 2015) Google Scholar Layton et al., 2014 A.W. Layton, A.D. Balmos,
    S. Sabpisal, A. Ault, J.V. Krogmeier, D. Buckmaster ISOBlue: An Open Source Project
    to Bring Agricultural Machinery Data into the Cloud, 2014 Montreal, Quebec Canada
    July 13–July 16, 2014 American Society of Agricultural and Biological Engineers
    (2014) Google Scholar Lazzarini et al., 2001 S.G. Lazzarini, F.R. Chaddad, M.L.
    Cook Integrating supply chain and network analyses: the study of netchains Chain
    and Network Science, 1 (2001), pp. 7-22 View in ScopusGoogle Scholar Lesser, 2014
    A. Lesser Big Data and Big Agriculture Gigaom Research (2014), p. 11 Google Scholar
    Li and Wang, 2014 P. Li, J. Wang Research progress of intelligent management for
    greenhouse environment information Nongye Jixie Xuebao = Transactions of the Chinese
    Society for Agricultural Machinery, 45 (2014), pp. 236-243 View in ScopusGoogle
    Scholar Li et al., 2014 X. Li, S. Chen, L. Guo Technological innovation of agricultural
    information service in the age of Big Data J. Agric. Sci. Technol., 16 (2014),
    pp. 10-15 Google Scholar Liu et al., 2012 D. Liu, J. Zhou, L. Mo Applications
    of internet of things in food and agri-food areas Nongye Jixie Xuebao = Transactions
    of the Chinese Society for Agricultural Machinery, 43 (2012), pp. 146-152 View
    in ScopusGoogle Scholar Luo et al., 2012 H. Luo, P.L. Yang, Y.K. Li, F.P. Xu An
    intelligent controlling system for greenhouse environment based on the architecture
    of the internet of things Sens. Lett., 10 (2012), pp. 514-522 CrossRefView in
    ScopusGoogle Scholar Miller and Mork, 2013 H.G. Miller, P. Mork From data to decisions:
    a value chain for Big Data IT Professional, 15 (2013), pp. 57-59 View in ScopusGoogle
    Scholar Natale et al., 2015 F. Natale, M. Gibin, A. Alessandrini, M. Vespe, A.
    Paulrud Mapping fishing effort through AIS data PLoS One, 10 (2015), Article e0130746
    CrossRefView in ScopusGoogle Scholar NEC, 2014 NEC NEC and Dacom collaborate on
    precision farming solution to maximize yields and reduce costs https://www.nec-enterprise.com/news/Latest-press-releases/NEC-and-Dacom-collaborate-on-precision-farming-solution-to-maximize-yields-and-reduce-costs-791
    (2014) (Accessed: 7 May 2015) Google Scholar Needle, 2015 D. Needle Big Data or
    Big Disappointment? Experts Debate Hype Versus Reality eWeek (2015) http://www.eweek.com/database/big-data-or-big-disappointment-experts-debate-hype-versus-reality.html
    (Accessed: 2 August 2016) Google Scholar Noyes, 2014 K. Noyes Big Data Poised
    to Change the Face of Agriculture Fortune Data (2014) http://fortune.com/2014/05/30/cropping-up-on-every-farm-big-data-technology/
    (Accessed: 30 May 2014) Google Scholar Nuthall, 2011 P.L. Nuthall Farm Business
    Management: Analysis of Farming Systems CABI (2011) Google Scholar Omta et al.,
    2001 S. Omta, J. Trienekens, G. Beers Chain and network science: a research framework
    Journal on Chain and Network Science, 1 (2001), pp. 1-6 View in ScopusGoogle Scholar
    Orts and Spigonardo, 2014 E. Orts, J. Spigonardo Sustainability in the Age of
    Big Data IGEL/Wharton, University of Pennsylvania, Pennsylvania, US (2014), p.
    16 Google Scholar Osterwalder, 2004 A. Osterwalder The Business Model Ontology:
    A Proposition in a Design Science Approach, l''Ecole des Hautes Etudes Commerciales
    Université de Lausanne (2004) Google Scholar Plume, 2014 K. Plume The Big Data
    Bounty: U.S. Startups Challenge Agribusiness Giants CloudTweaks (2014) http://www.reuters.com/article/us-usa-farming-startups-idUSKCN0HX0C620141008
    (Accessed: 7 May 2015) Google Scholar Poppe et al., 2015 K.J. Poppe, J. Wolfert,
    C.N. Verdouw, A. Renwick A European perspective on the economics of Big Data Farm
    Policy Journal, 12 (2015), pp. 11-19 Google Scholar Porter, 1985 M.E. Porter Competitive
    Advantage: Creating and Sustaining Superior Performance. 1985 FreePress, New York
    (1985) Google Scholar Porter and Heppelmann, 2014 M.E. Porter, J.E. Heppelmann
    How smart, connected products are transforming competition Harv. Bus. Rev. (2014),
    pp. 65-88 November 2014 CrossRefGoogle Scholar Provan and Kenis, 2008 K.G. Provan,
    P. Kenis Modes of network governance: structure, management, and effectiveness
    J. Public Adm. Res. Theory, 18 (2008), pp. 229-252 View in ScopusGoogle Scholar
    Ritaban et al., 2014 D. Ritaban, M. Ahsan, A. Jagannath, C. D''Este, D. Aruneema
    Development of an intelligent environmental knowledge system for sustainable agricultural
    decision support Environ. Model. Softw., 52 (2014), pp. 264-272 Google Scholar
    Royse, 2014 R. Royse The Growing Field of Agriculture Technology Vator News (2014)
    http://vator.tv/news/2014-05-14-the-growing-field-of-agriculture-technology (Accessed:
    7 May 2015) Google Scholar Semantic Community, 2015 Semantic Community Big Data
    Science for Precision Farming Business http://semanticommunity.info/Data_Science/Big_Data_Science_for_Precision_Farming_Business
    (2015) (Accessed: 2 August 2016) Google Scholar Sonka, 2014 S. Sonka Big Data
    and the Ag sector: more than lots of numbers International Food and Agribusiness
    Management Review, 17 (2014), p. 1 View in ScopusGoogle Scholar Sonka, 2015 S.
    Sonka Big Data: from hype to agricultural tool Farm Policy Journal, 12 (2015),
    pp. 1-9 Google Scholar Sun et al., 2013a J. Sun, Z. Zhou, Y. Bu, J. Zhuo, Y. Chen,
    D. Li Research and development for potted flowers automated grading system based
    on internet of things Journal of Shenyang Agricultural University, 44 (2013),
    pp. 687-691 Google Scholar Sun et al., 2013b Z. Sun, K. Du, F. Zheng, S. Yin Perspectives
    of research and application of Big Data on smart agriculture J. Agric. Sci. Technol.,
    15 (2013), pp. 63-71 Google Scholar Sundmaeker et al., 2016 H. Sundmaeker, C.
    Verdouw, S. Wolfert, L. Pérez Freire Internet of food and farm 2020 O. Vermesan,
    P. Friess (Eds.), Digitising the Industry - Internet of Things Connecting Physical,
    Digital and Virtual Worlds, River Publishers, Gistrup/Delft (2016), pp. 129-151
    View in ScopusGoogle Scholar Tien, 2013 J.M. Tien Big Data: unleashing information
    J. Syst. Sci. Syst. Eng., 22 (2013), pp. 127-151 CrossRefView in ScopusGoogle
    Scholar Tong et al., 2015 L. Tong, T. Hong, Z. JingHua Research on the Big Data-based
    government decision and public information service model of food safety and nutrition
    industry Journal of Food Safety and Quality, 6 (2015), pp. 366-371 CrossRefGoogle
    Scholar UNECE, 2013 UNECE Classification of types of Big Data http://www1.unece.org/stat/platform/display/bigdata/Classification+of+Types+of+Big+Data
    (2013) (Accessed: 2 August 2016) Google Scholar van der Vorst et al., 2005 van
    der Vorst, J., Beulens, A., Beek, P.v., 2005. Innovations in logistics and ICT
    in food supply chain networks, in: Jongen, W.M.F., Meulenberg, M.T.G. (Eds.),
    Innovations in Agri-food Systems: Product Quality and Consumer Acceptance. Wageningen
    Academic Publishers, 2005. Google Scholar Van Rijmenam, 2015 M. Van Rijmenam John
    Deere is revolutionizing farming with Big Data https://datafloq.com/read/john-deere-revolutionizing-farming-big-data/511
    (2015) (Accessed: 7 May 2015) Google Scholar Van ''t Spijker, 2014 A. Van ''t
    Spijker The New Oil - Using Innovative Business Models to Turn Data into Profit
    Technics Publications, Basking Ridge (2014) Google Scholar Verdouw et al., 2013
    C.N. Verdouw, A.J.M. Beulens, J.G.A.J. van der Vorst Virtualisation of floricultural
    supply chains: a review from an internet of things perspective Comput. Electron.
    Agric., 99 (2013), pp. 160-175 View PDFView articleView in ScopusGoogle Scholar
    Verdouw et al., 2015 C.N. Verdouw, A.J.M. Beulens, H.A. Reijers, J.G.A.J. van
    der Vorst A control model for object virtualization in supply chain management
    Comput. Ind., 68 (2015), pp. 116-131 View PDFView articleView in ScopusGoogle
    Scholar Verhoosel et al., 2016 J. Verhoosel, M. van Bekkum, T. Verwaart HortiCube:
    a platform for transparent, trusted data sharing in the food supply chain Proceedings
    in Food System Dynamics (2016), pp. 384-388 Google Scholar Vogt, 2013 W. Vogt
    Looking at Big Data One Plant at a Time Farm Industry News (2013) http://farmindustrynews.com/blog/looking-big-data-one-plant-time
    (Accessed: 7 May 2015) Google Scholar Wamba and Wicks, 2010 S.F. Wamba, A. Wicks
    RFID deployment and use in the dairy value chain: applications, current issues
    and future research directions Technology and Society (ISTAS), 2010 IEEE International
    Symposium on, IEEE (2010), pp. 172-179 View in ScopusGoogle Scholar Welte et al.,
    2013 J.T. Welte, A.C. Ault, C. Bowman, S. Ellis, D.R. Buckmaster, D. Ess, J.V.
    Krogmeier An Approach to Farm Management Information Systems Using Task-Specific,
    Collaborative Mobile Apps and Cloud Storage Services, 2013 Kansas City, Missouri,
    July 21–July 24, 2013 American Society of Agricultural and Biological Engineers
    (2013), p. 1 Google Scholar Wigboldus et al., 2016 S. Wigboldus, L. Klerkx, C.
    Leeuwis, M. Schut, S. Muilerman, H. Jochemsen Systemic perspectives on scaling
    agricultural innovations. A review Agron. Sustain. Dev., 36 (2016), pp. 1-20 Google
    Scholar Wikipedia, 2016 Wikipedia Big Data https://en.wikipedia.org/wiki/Big_data
    (2016) (Accessed: 2 August 2016) Google Scholar Williamson, 1996 O.E. Williamson
    The Mechanisms of Governance Oxford University Press (1996) Google Scholar Wolfert
    et al., 2014 J. Wolfert, C.G. Sørensen, D. Goense A Future Internet Collaboration
    Platform for Safe and Healthy Food from Farm to Fork, Global Conference (SRII),
    2014 Annual SRII IEEE, San Jose, CA, USA (2014), pp. 266-273 CrossRefView in ScopusGoogle
    Scholar Yan et al., 2013 B. Yan, P. Shi, G. Huang Development of traceability
    system of aquatic foods supply chain based on RFID and EPC internet of things
    Transactions of the Chinese Society of Agricultural Engineering, 29 (2013), pp.
    172-183 View in ScopusGoogle Scholar Yang, 2014 C. Yang Big Data and its potential
    applications on agricultural production Crop, Environment & Bioinformatics, 11
    (2014), pp. 51-56 Google Scholar Young, 2016 L. Young Farmobile takes ag data
    to the next level Agrinews.com (2016) http://www.agrinews.com/news/minnesota_news/farmobile-takes-ag-data-to-the-next-level/article_5074de27-ecdf-5dd3-a89e-e3b28815475c.html
    (Accessed: 7 May 2015) Google Scholar Zhu et al., 2012 W. Zhu, C. Dai, P. Huang
    Environmental control system based on IOT for nursery pig house Transactions of
    the Chinese Society of Agricultural Engineering, 28 (2012), pp. 177-182 View in
    ScopusGoogle Scholar Zong et al., 2014 Z.L. Zong, R. Fares, B. Romoser, J. Wood
    FastStor: improving the performance of a large scale hybrid storage system via
    caching and prefetching Clust. Comput., 17 (2014), pp. 593-604 CrossRefView in
    ScopusGoogle Scholar Cited by (1596) Economic and environmental benefits of digital
    agricultural technologies in crop production: A review 2024, Smart Agricultural
    Technology Show abstract Determining the minimum data size for the development
    of artificial neural network-based prediction models for rice pests in Korea 2024,
    Computers and Electronics in Agriculture Show abstract The virtual container:
    Physics-based simulation of refrigerated container map temperature and fruit quality
    evolution and variability in a shipment 2024, Postharvest Biology and Technology
    Show abstract Hydroponics: Exploring innovative sustainable technologies and applications
    across crop production, with Emphasis on potato mini-tuber cultivation 2024, Heliyon
    Show abstract Image processing techniques to identify tomato quality under market
    conditions 2024, Smart Agricultural Technology Show abstract Attention is all
    water need: Multistep time series irrigation water demand forecasting in irrigation
    disctrics 2024, Computers and Electronics in Agriculture Show abstract View all
    citing articles on Scopus 1 https://www.fiware.org/fiware-accelerator-programme/.
    © 2017 The Authors. Published by Elsevier Ltd. Part of special issue Celebrating
    Two Hundred Volumes of Agricultural Systems Edited by Val Snow, Emma Stephens,
    Guillaume Martin, Mark van Wijk, Jagadish Timsina, Pytrik Reidsma … Marianna Taffi
    View special issue Recommended articles Life cycle assessment (LCA) for apple
    orchard production systems including low and high productive years in conventional,
    integrated and organic farms Agricultural Systems, Volume 153, 2017, pp. 81-93
    Y. Goossens, …, A. Geeraerd View PDF How data analytics is transforming agriculture
    Business Horizons, Volume 61, Issue 1, 2018, pp. 125-133 Xuan Pham, Martin Stack
    View PDF A system dynamics model for disease management in poultry production
    Poultry Science, Volume 99, Issue 11, 2020, pp. 5547-5559 Karen D. Galarneau,
    …, Robert W. Wills View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 1488 Policy Citations: 69 Captures Readers: 3856 Mentions News Mentions:
    14 References: 1 Social Media Shares, Likes & Comments: 586 View details About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Agricultural Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Big Data in Smart Farming – A review
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
