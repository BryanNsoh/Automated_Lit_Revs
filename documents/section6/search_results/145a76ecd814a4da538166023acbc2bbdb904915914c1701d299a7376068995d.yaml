- DOI: https://doi.org/10.3390/app13010014
  analysis: '>'
  authors:
  - Chrysanthos Maraveas
  citation_count: 23
  full_citation: '>'
  full_text: ">\nCitation: Maraveas, C. Incorporating\nArtiﬁcial Intelligence Technology\
    \ in\nSmart Greenhouses: Current State of\nthe Art. Appl. Sci. 2023, 13, 14.\n\
    https://doi.org/10.3390/\napp13010014\nAcademic Editor: Vincent A. Cicirello\n\
    Received: 9 November 2022\nRevised: 17 December 2022\nAccepted: 18 December 2022\n\
    Published: 20 December 2022\nCopyright:\n© 2022 by the author.\nLicensee MDPI,\
    \ Basel, Switzerland.\nThis article is an open access article\ndistributed\nunder\n\
    the\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY) license\
    \ (https://\ncreativecommons.org/licenses/by/\n4.0/).\napplied  \nsciences\nArticle\n\
    Incorporating Artiﬁcial Intelligence Technology in Smart\nGreenhouses: Current\
    \ State of the Art\nChrysanthos Maraveas\nDepartment of Natural Resources Management\
    \ & Agricultural Engineering, Agricultural University of Athens,\n11855 Athens,\
    \ Greece; maraveas@aua.gr\nAbstract: This article presents the current state-of-the-art\
    \ research on applying artiﬁcial intelligence\n(AI) technology in smart greenhouses\
    \ to optimize crop yields, water, and fertilizer use efﬁciency, to\nreduce pest\
    \ and disease, and to enhance agricultural sustainability. The key technologies\
    \ of interest\nwere robotic systems for pesticide application, irrigation, harvesting,\
    \ bio-inspired algorithms for the\nautomation of greenhouse processes, energy\
    \ management, machine path planning and operation of\nUAVs (unmanned aerial vehicles),\
    \ resolution of scheduling problems, and image signal processing for\npest and\
    \ disease diagnosis. Additionally, the review investigated the cost beneﬁts of\
    \ various energy-\nmanagement and AI-based energy-saving technologies, the integration\
    \ of photovoltaics and dynamic\npricing based on real-time and time-of-use metrics,\
    \ and the cost beneﬁts of LoRa, Wi-Fi, Bluetooth,\nZigBee, mobile, and RFID (radiofrequency\
    \ identiﬁcation) technologies. The review established that\ncommercially viable\
    \ AI technologies for agriculture had increased exponentially. For example, AI-\n\
    based irrigation and soil fertilizer application enabled farmers to realize higher\
    \ returns on investment\non fertilizer application and gross returns above the\
    \ fertilizer cost, higher yields, and resource use\nefﬁciency. Similarly, AI image\
    \ detection techniques led to the early diagnosis of powdery mildew. The\nprecise\
    \ operation of agricultural robots was supported by the integration of light imaging,\
    \ detection,\nand ranging (LIDAR) optical and electro-optical cameras in place\
    \ of the traditional GPS (geographic\npositioning systems) technologies, which\
    \ are prone to errors. However, critical challenges remained\nunresolved, including\
    \ cost, disparities between research and development (R&D) innovations and\ntechnology\
    \ commercialization, energy use, the tradeoff between accuracy and computational\
    \ speeds,\nand technology gaps between the Global North and South. In general,\
    \ the value of this review is\nthat it surveys the literature on the maturity\
    \ level of various AI technologies in smart greenhouses\nand offers a state-of-the-art\
    \ picture of how far the technologies have successfully been applied in\nagriculture\
    \ and what can be done to optimize their usability.\nKeywords: greenhouses; agriculture;\
    \ artiﬁcial intelligence; intelligent; algorithms; robotics\n1. Introduction\n\
    The AI systems of interest include bio-inspired ecological and swarm intelligence\
    \ algo-\nrithms, unmanned UAVs (Unmanned aerial vehicles) for pesticide application,\
    \ and robotic\nsystems for harvesting, irrigation, soil treatment, fertilizer\
    \ application, and seeding [1,2]. In\naddition, the study critiques the role of\
    \ swarm intelligence (genetic optimization algorithms\nand related algorithms)\
    \ in agricultural parameter optimization, machinery path planning,\nrobotic ﬂight,\
    \ resolution of scheduling problems, system identiﬁcation, power systems,\nand\
    \ image and signal processing [1,2]. The multidimensional view of AI (artiﬁcial\
    \ intelli-\ngence) technologies in smart greenhouses would provide a nuanced understanding\
    \ of the\nrecent milestones in research and development and their implications\
    \ for commercial and\nsmallholder agriculture in the developed global north (North\
    \ America, Western Europe,\nMediterranean region, China, Japan, and South Korea)\
    \ and underdeveloped global south\n(Africa, Latin America, and South Asia) [3].\n\
    Appl. Sci. 2023, 13, 14. https://doi.org/10.3390/app13010014\nhttps://www.mdpi.com/journal/applsci\n\
    Appl. Sci. 2023, 13, 14\n2 of 35\nEmerging technology companies, such as Blue\
    \ River Technology, Harvest CROO\nRobotics, Trace Genomics, and Autonomous Tractor\
    \ Corp were leading in the commer-\ncial deployment of self-driving agricultural\
    \ tractors, AI-based weed control systems, pest\ndiagnostics, soil analysis, and\
    \ crop health monitoring [4,5]. In line with [4,5], Karnawat\net al. [6] acknowledged\
    \ the immense role played by Blue River Technology in the advance-\nment of robotics\
    \ and AI systems in agriculture in California and the US in general. These\nemerging\
    \ trends of AI and machine learning (ML) in agriculture need to be summarized\
    \ to\nprovide a comprehensive overview of the state of the art (i.e., maturity\
    \ levels of various\nAI applications in agriculture, including barriers and facilitators)\
    \ and insights into future\ndevelopments [7].\nMany factors dictate the need to\
    \ review the maturity levels of various AI applications\nin agriculture. First,\
    \ there is increasing demand for technological solutions to address\nglobal food\
    \ insecurities, especially in the Global South. Currently, at least 810 million\n\
    people are food insecure. The actual ratio would increase over time in line with\
    \ the global\npopulation growth. By 2050, the global population will surpass 9\
    \ billion [8,9]. The higher\npopulation growth within a generation would strain\
    \ the already fragile agricultural systems\nand ecosystems that are being gradually\
    \ destroyed to create additional land for farming.\nIddio et al. argued that controlled\
    \ environment agriculture (CEA) using greenhouses\nmight help to offset the pressing\
    \ concerns about agricultural sustainability [10]. The case\nfor greenhouse-based\
    \ CEA was validated by the fact that greenhouse crop cultivation\nimproves yields\
    \ and reduces the need for excess pesticides, water, land, and transportation\n\
    of crops over extended distances. The case for CEA advanced by [10] was in tandem\
    \ with\nAfzali et al. [11], who supported the intensiﬁcation of agricultural technologies.\
    \ The need\nfor a paradigm shift in agricultural cultivation was premised on the\
    \ increasing risk of\nglobal starvation [12]. The AI-mediated improvements in\
    \ crop yields may help avert the\nforecasted global food crises.\nSecond, a large\
    \ body of knowledge, including the evidence presented by Senavirathne\net al.\
    \ [13] and Haque et al. [12], suggested that the satisfaction of future food needs\
    \ would be\nachieved by optimizing the existing crop production technologies,\
    \ given there was limited\narable land for agricultural expansion [14]. In line\
    \ with [14], Lakshmi and Corbett [15]\nestimated that smart technology in agriculture\
    \ may help boost yields by 60% before 2030.\nConservative estimates indicate the\
    \ EU market for precision agriculture systems will\nsurpass 11.8 billion by 2025\
    \ [16]. The projected market growth and higher yields catalyzed\nthe current greenhouse\
    \ boom. As of 2020, there were 3.6 million hectares of greenhouse\ncrops globally\
    \ [17–22].\nThird, current climate projection models forecast suppressed rainfall,\
    \ land degradation,\ndesertiﬁcation, ﬂooding, and other weather phenomena triggered\
    \ by climate change and\nincreased release of greenhouse gases [23,24]. The projections\
    \ documented by [23,24]\nreﬂected the current realities in Sub-Saharan Africa\
    \ [25]. The expansion of open-ﬁeld\nagriculture to offset climate-related challenges\
    \ is no longer a viable option. The European\nCommission Joint Research Centre\
    \ estimated that three-quarters of the useful land on\nearth was already degraded,\
    \ and the proportion of degraded land would surpass 90% by\n2050 [26]. The challenge\
    \ is most pronounced in developing countries that experienced the\nhighest dryland\
    \ desertiﬁcation rate between 1982 and 2015. During this period, at least\n5.4\
    \ million km2 of land was degraded [27]. In theory, losing traditional farming\
    \ dryland\nwas a sufﬁcient motivational factor for transitioning to smart greenhouses\
    \ powered by AI\ntechnologies. However, the contrary phenomenon is true for climate-smart\
    \ agriculture\nworldwide [28]. The current pace of transition does not match the\
    \ challenges. On a\npositive note, the transition to precision agriculture would\
    \ enable farmers to optimally\nuse water, soil, and energy resources to minimize\
    \ the negative effects of climate change on\nfarming [29]. The rational use of\
    \ agricultural resources would reduce the pressure on the\nnatural environment,\
    \ resulting in higher sustainability.\nThe article critiques recent research on\
    \ smart greenhouses and artiﬁcial intelligence\ntechnologies, including the favorable\
    \ factors and the challenges that have impeded the\nAppl. Sci. 2023, 13, 14\n\
    3 of 35\ngrowth of AI and smart greenhouse technologies. The study emphasized\
    \ smart farming\ntechnologies, mechanization of farms, smart micro-irrigation,\
    \ rapid soil analysis, pest\nprediction, and autonomous modiﬁcation of the greenhouse\
    \ microclimate, and LIDAR\n(light Imaging, detection, and ranging), optical and\
    \ electro-optical cameras for robotic\nsystem motion and object identiﬁcation\
    \ (see Figure 1) [30]. The speciﬁc scope was supported\nby the gaps in research\
    \ and the breadth of information relating to the impact of AI and IoT\n(Internet\
    \ of Things) and data-driven agriculture, intelligent crop planning, and farm\
    \ gate-\nto-fork systems [31,32]. More particularly, no review has so far comprehensively\
    \ mapped\nthe state of AI and IoT application in smart greenhouse farming to help\
    \ researchers and\nfarmers of plant factories to solve the imminent problems related\
    \ to global food insecurities\nand climate change, despite the fact that technological\
    \ innovations have been centrally\nplaced in the development of effective and\
    \ sustainable solutions to these challenges. Thus,\nthis review will enable farmers\
    \ of factory plants to understand the extent to which AI\nand IoT can be combined\
    \ to improve farming efﬁciency and productivity and will enable\nresearchers to\
    \ advance knowledge on this subject domain by building on the research\nachieved\
    \ so far.\nAppl. Sci. 2023, 13, 14 \n3 of 36 \n \nThe article critiques recent\
    \ research on smart greenhouses and artificial intelligence \ntechnologies, including\
    \ the favorable factors and the challenges that have impeded the \ngrowth of AI\
    \ and smart greenhouse technologies. The study emphasized smart farming \ntechnologies,\
    \ mechanization of farms, smart micro-irrigation, rapid soil analysis, pest \n\
    prediction, and autonomous modification of the greenhouse microclimate, and LIDAR\
    \ \n(light Imaging, detection, and ranging), optical and electro-optical cameras\
    \ for robotic \nsystem motion and object identification (see Figure 1) [30]. The\
    \ specific scope was \nsupported by the gaps in research and the breadth of information\
    \ relating to the impact \nof AI and IoT (Internet of Things) and data-driven\
    \ agriculture, intelligent crop planning, \nand farm gate-to-fork systems [31,32].\
    \ More particularly, no review has so far \ncomprehensively mapped the state of\
    \ AI and IoT application in smart greenhouse farming \nto help researchers and\
    \ farmers of plant factories to solve the imminent problems related \nto global\
    \ food insecurities and climate change, despite the fact that technological \n\
    innovations have been centrally placed in the development of effective and sustainable\
    \ \nsolutions to these challenges. Thus, this review will enable farmers of factory\
    \ plants to \nunderstand the extent to which AI and IoT can be combined to improve\
    \ farming efficiency \nand productivity and will enable researchers to advance\
    \ knowledge on this subject \ndomain by building on the research achieved so far.\
    \ \n \nFigure 1. Smart farming and other emerging innovations in the agricultural\
    \ sector [30]. \nMethod for Systematic Review \nThe review of Incorporating Artificial\
    \ Intelligence Technology in Smart Greenhouses \nwas aligned with the PRISMA guidelines\
    \ for systematic reviews and meta-analyses (see \nFigure 2). PRISMA Flowchart\
    \ shown in Figure 2 below provides detailed information \nabout how the 174 articles\
    \ cited in this review were identified and selected. All data were \nsourced from\
    \ published articles. The peer-reviewed data were sourced from the following \n\
    primary databases: MDPI, Elsevier, Springer (including Nature Springer) and Taylor\
    \ and \nFrancis, Scopus, and Google Scholar. More databases would have been searched,\
    \ but a \nquick literature survey revealed that that they mostly publish duplicated\
    \ content, such as \nbetween Frontiers and Springer.,Emphasis was given to literature\
    \ published after 2019, \nsince technological advancements, especially AI and\
    \ IoT, are rapidly evolving. The choice \nof articles published from 2019 onwards\
    \ was therefore motivated by the need to review \nonly recent studies in this\
    \ field. This motivation was also appraised as valid owing to the \nmany research\
    \ studies on the application of AI in agriculture that have been published \n\
    within the past three years. The primary keywords were AI, greenhouses, smart,\
    \ IoT, and \nFigure 1. Smart farming and other emerging innovations in the agricultural\
    \ sector [30].\nMethod for Systematic Review\nThe review of Incorporating Artiﬁcial\
    \ Intelligence Technology in Smart Greenhouses\nwas aligned with the PRISMA guidelines\
    \ for systematic reviews and meta-analyses (see\nFigure 2). PRISMA Flowchart shown\
    \ in Figure 2 below provides detailed information\nabout how the 174 articles\
    \ cited in this review were identiﬁed and selected. All data were\nsourced from\
    \ published articles. The peer-reviewed data were sourced from the following\n\
    primary databases: MDPI, Elsevier, Springer (including Nature Springer) and Taylor\
    \ and\nFrancis, Scopus, and Google Scholar. More databases would have been searched,\
    \ but a\nquick literature survey revealed that that they mostly publish duplicated\
    \ content, such as\nbetween Frontiers and Springer.,Emphasis was given to literature\
    \ published after 2019,\nsince technological advancements, especially AI and IoT,\
    \ are rapidly evolving. The choice\nof articles published from 2019 onwards was\
    \ therefore motivated by the need to review\nonly recent studies in this ﬁeld.\
    \ This motivation was also appraised as valid owing to the\nmany research studies\
    \ on the application of AI in agriculture that have been published\nwithin the\
    \ past three years. The primary keywords were AI, greenhouses, smart, IoT,\nand\
    \ agriculture. The inclusion and exclusion criteria were characterized by a title\
    \ and\nabstract screening, followed by a full-text and abstract screening process,\
    \ which focused\nAppl. Sci. 2023, 13, 14\n4 of 35\non the subject’s relevance.\
    \ Articles were excluded if they did not discuss the role of\nvarious AI technologies\
    \ in agriculture. Studies were also excluded if they did not use\nany methodological\
    \ approach to analyze and synthesize data before making conclusions.\nStudies\
    \ published in non-English languages were also excluded to avoid translation errors\n\
    and associated ﬁnancial costs and factual consequences. The research design of\
    \ the studies\ndid not matter, but primary studies with experimental design were\
    \ given priority over\nothers during the selection process.\nAppl. Sci. 2023,\
    \ 13, 14 \n4 of 36 \n \nagriculture. The inclusion and exclusion criteria were\
    \ characterized by a title and abstract \nscreening, followed by a full-text and\
    \ abstract screening process, which focused on the \nsubject's relevance. Articles\
    \ were excluded if they did not discuss the role of various AI \ntechnologies\
    \ in agriculture. Studies were also excluded if they did not use any \nmethodological\
    \ approach to analyze and synthesize data before making conclusions. \nStudies\
    \ published in non-English languages were also excluded to avoid translation errors\
    \ \nand associated financial costs and factual consequences. The research design\
    \ of the studies \ndid not matter, but primary studies with experimental design\
    \ were given priority over \nothers during the selection process.  \n \nFigure\
    \ 2. PRISMA diagram. \n2. Artificial Intelligence Technologies for Smart Greenhouses\
    \ \n2.1. Historical Background of AI and ICTs in Agriculture \nUsing AI and ICT\
    \ in precision agriculture is not a new phenomenon. Rao et al. [33] \ntraced the\
    \ use of ICTs in precision agriculture back to the 20th century. In 1958, \npsychologist\
    \ Frank Rosenblatt first formulated and proposed artificial neural networks as\
    \ \nmathematical models of artificial intelligence whose mathematical structure\
    \ attempted to \nmimic the functionality of biological neurons [34]. More specifically,\
    \ in this first work, the \nwell-known mathematical simulant of Perceptron, which\
    \ is the first structure of the \nartificial neural network, was successfully\
    \ employed to simulate how the human brain \nprocesses optical data and learns\
    \ to recognize objects. The first structure of Perceptron is \nthe main basis\
    \ and architecture of the neural networks that have been extensively used in \n\
    precision agriculture and other disciplines.  \nPerception marked a historic key\
    \ point in artificial intelligence research and \ncommercial adoption with the\
    \ coining of a phrase that embodied an entire field within AI. \nAI techniques\
    \ have developed because of the complexity of the technological era, where \n\
    Figure 2. PRISMA diagram.\n2. Artiﬁcial Intelligence Technologies for Smart Greenhouses\n\
    2.1. Historical Background of AI and ICTs in Agriculture\nUsing AI and ICT in\
    \ precision agriculture is not a new phenomenon. Rao et al. [33]\ntraced the use\
    \ of ICTs in precision agriculture back to the 20th century. In 1958, psychologist\n\
    Frank Rosenblatt ﬁrst formulated and proposed artiﬁcial neural networks as mathematical\n\
    models of artiﬁcial intelligence whose mathematical structure attempted to mimic\
    \ the\nfunctionality of biological neurons [34]. More speciﬁcally, in this ﬁrst\
    \ work, the well-known\nmathematical simulant of Perceptron, which is the ﬁrst\
    \ structure of the artiﬁcial neural\nnetwork, was successfully employed to simulate\
    \ how the human brain processes optical\ndata and learns to recognize objects.\
    \ The ﬁrst structure of Perceptron is the main basis and\narchitecture of the\
    \ neural networks that have been extensively used in precision agriculture\nand\
    \ other disciplines.\nPerception marked a historic key point in artiﬁcial intelligence\
    \ research and commer-\ncial adoption with the coining of a phrase that embodied\
    \ an entire ﬁeld within AI. AI\ntechniques have developed because of the complexity\
    \ of the technological era, where a\nplethora of complex problems with a strongly\
    \ non-linear nature cannot be solved using\nclassical deterministic techniques,\
    \ such as regression analysis and least-squared methods.\nDespite their novelty,\
    \ it took four decades (until the early 1990s) for artiﬁcial neural net-\nAppl.\
    \ Sci. 2023, 13, 14\n5 of 35\nworks to be used widely in medical applications\
    \ [35–42], computational engineering [43–53],\nand precision agriculture.\nThe\
    \ historical analysis of ICTs in agriculture by Rao et al. [33,43–53] aligns with\
    \ the\nbroader trends in the global demand for AI, ML, and IoT, as noted by Misra\
    \ et al. [33].\nOn the downside, the true potential of AI and ICTs has not been\
    \ fully exploited. The\nobservation was validated by the fact that the transition\
    \ of ICT technologies from computing\nto agriculture was delayed, considering\
    \ the ﬁeld of artiﬁcial intelligence was ﬁrst proposed\nin 1955 and expanded in\
    \ subsequent years [8]. During the early phases of precision\nagriculture, the\
    \ key focus was improving crop yields and productivity by monitoring\nsoil nutrients.\
    \ However, the scope of precision agriculture has broadened to encompass\nartiﬁcial\
    \ pollination using robot bees, autonomous operation of farm equipment, and\n\
    optimization of different agricultural processes using bio-inspired algorithms\
    \ [1,54,55].\nThe technology patterns demonstrate a peak in AL technologies from\
    \ 2016 onwards. The\nconvergence of new technologies in precision agriculture\
    \ ushered in the Industry 4.0\nrevolution and the Internet of Plants (IoP) [56]\
    \ (see Figure 3). The ﬁgure demonstrates how\nthe availability of digital sensors\
    \ and IoT can be used to collect environmental data, such\nas light, temperature,\
    \ humidity, nutrition, and water, and then be stored in a cloud-based\nserver,\
    \ which can supply information for various farm work operations. However, there\n\
    is growing criticism of AI technologies in agriculture due to their higher energy\
    \ demand,\nhigh initial capital outlay, and variable accuracy [17]. These concerns\
    \ have been discounted\nin view of the immense beneﬁts of AI systems, including\
    \ better crop yields, lower labor\ncosts, and improved efﬁciency [57].\nAppl.\
    \ Sci. 2023, 13, 14 \n5 of 36 \n \na plethora of complex problems with a strongly\
    \ non-linear nature cannot be solved using \nclassical deterministic techniques,\
    \ such as regression analysis and least-squared methods. \nDespite their novelty,\
    \ it took four decades (until the early 1990s) for artificial neural \nnetworks\
    \ to be used widely in medical applications [35–42], computational engineering\
    \ \n[43–53], and precision agriculture. \nThe historical analysis of ICTs in agriculture\
    \ by Rao et al. [33,43–53] aligns with the \nbroader trends in the global demand\
    \ for AI, ML, and IoT, as noted by Misra et al. [33]. On \nthe downside, the true\
    \ potential of AI and ICTs has not been fully exploited. The \nobservation was\
    \ validated by the fact that the transition of ICT technologies from \ncomputing\
    \ to agriculture was delayed, considering the field of artificial intelligence\
    \ was \nfirst proposed in 1955 and expanded in subsequent years [8]. During the\
    \ early phases of \nprecision agriculture, the key focus was improving crop yields\
    \ and productivity by \nmonitoring soil nutrients. However, the scope of precision\
    \ agriculture has broadened to \nencompass artificial pollination using robot\
    \ bees, autonomous operation of farm \nequipment, and optimization of different\
    \ agricultural processes using bio-inspired \nalgorithms [1,54,55]. The technology\
    \ patterns demonstrate a peak in AL technologies from \n2016 onwards. The convergence\
    \ of new technologies in precision agriculture ushered in \nthe Industry 4.0 revolution\
    \ and the Internet of Plants (IoP) [56] (see Figure 3). The figure \ndemonstrates\
    \ how the availability of digital sensors and IoT can be used to collect \nenvironmental\
    \ data, such as light, temperature, humidity, nutrition, and water, and then \n\
    be stored in a cloud-based server, which can supply information for various farm\
    \ work \noperations.  However, there is growing criticism of AI technologies in\
    \ agriculture due to \ntheir higher energy demand, high initial capital outlay,\
    \ and variable accuracy [17]. These \nconcerns have been discounted in view of\
    \ the immense benefits of AI systems, including \nbetter crop yields, lower labor\
    \ costs, and improved efficiency [57]. \n \nFigure 3. Core attributes and the\
    \ link between IoP and IoT [56]. \nFigure 3. Core attributes and the link between\
    \ IoP and IoT [56].\nThe current scope of AI and IoT in smart greenhouses encompasses\
    \ artiﬁcial lighting\nusing LEDs [58], air ventilation, water and nutrition pumps,\
    \ plant nutrition, humidity\ncontrol, moisture control, and temperature control\
    \ subsystems with a unique combination\nAppl. Sci. 2023, 13, 14\n6 of 35\nof sensors\
    \ and controls with distinct attributes [13]. The impact of weeds, pests, diseases,\n\
    and water stress on crop yields validated the broadening scope of AI in precision\
    \ agriculture.\nEgorov et al. [59] noted that livermore was a pervasive weed across\
    \ the US, impacting the\ngermination and growth of plants. In line with Egorov\
    \ et al., [8,59] noted that improper\nmanagement of weeds could potentially reduce\
    \ crop yields by 48–60%. However, the\nprojected reduction in crop yields due\
    \ to pest infestation observed by [8] contrasts with\nRaatz et al., who reported\
    \ up to 60% losses in harvests due to pest infestation [60], but\nattributed the\
    \ phenomena to biotic culprits, including weed growth. Despite the contrasting\n\
    observations made by Raatz et al. [60] and [8], poor management of crop pests\
    \ and diseases\nhad a detrimental effect on crop yields. The devastating impact\
    \ of South American tomato\npinworm on sweet pepper and tomato in Almería, Southeastern\
    \ Spain, was a case in\npoint [61]. In the latter case, the Spanish farmers had\
    \ to rely on toxic pesticides, such\nas Chlorpyrifos-methyl, to manage the pests\
    \ [61,62]. Reducing human exposure to toxic\npesticides through the mechanization\
    \ of greenhouse spraying activities yielded signiﬁcant\nbeneﬁts in the long term\
    \ [63]. Additionally, intelligent IPM (Integrated pest management)\npractices\
    \ may offset the emerging pesticide resistance threats.\n2.2. Current AI Technologies\
    \ for Agriculture\nThe AI technologies available for smart greenhouses and precision\
    \ agriculture are\ndiverse, ranging from ecological bio-inspired algorithms, such\
    \ as Adaptive Neuro-Fuzzy\nInference System–Particle Swarm Optimization (ANFIS-PSO),\
    \ ANFIS-GA (ANFIS with\nGenetic Algorithm) and ANFIS-ACO (ANFIS with Ant Colony\
    \ Optimization), swarm intel-\nligence algorithms (Artiﬁcial Bee Colony (ABC),\
    \ Flower Pollination algorithm (FPA), Fireﬂy\nalgorithm, Krill Herd algorithm,\
    \ and genetic optimization algorithms) [64] to UAV (drones)\npesticide application\
    \ and robotic systems for harvesting [9], irrigation, soil treatment, seed-\n\
    ing, fertilizer application, seeding, and other tasks [1,2]. The current body\
    \ of knowledge\nlinked the demand for robotics, UAVs, and bio-inspired algorithms\
    \ in agriculture to distinct\nfactors. On the one hand, scholars argued that the\
    \ growth was catalyzed by the need to\nenhance yields and operational efﬁciency\
    \ and reduce costs [8,29,33]. In line with [5,29,33],\nCao et al. reported a 10%\
    \ improvement in tomato yields with the iGrow intelligent green-\nhouse system\
    \ and 92% higher proﬁts [18]. On the other hand, AI assimilation in smart\nagriculture\
    \ was triggered by natural events, including higher levels of pesticide resistance\n\
    and forest ﬁres, which compromised agricultural production [65,66]. The following\
    \ sections\ncritiqued the two worldviews to yield better insights into the favorable\
    \ factors and barriers\nto AI-system adoption in smart greenhouses and precision\
    \ agriculture at large.\n2.2.1. Cost Beneﬁts of AI Technologies for Agriculture\n\
    The focus on the role of AI systems in smart greenhouses and the agricultural\
    \ sector,\nin general, was validated by the unique challenges and the enormous\
    \ contribution in terms\nof Gross Value Added (GVA). Agriculture provided direct\
    \ employment to approximately\n4.4% of the population in Europe, and its GVA exceeded\
    \ €181 billion [67]. The scenario\nwas not speciﬁc to the EU; at least 70% of\
    \ the Indian population depended on agriculture\nfor employment and sustenance\
    \ [68]. Despite the enormous contribution, the future of\nagriculture in Europe\
    \ and across the world is threatened by population dynamics; most\nEuropean farmers\
    \ are older (>80%), while a minority are below 40 years [67]. In contrast to\n\
    the European Economic and Social Committee’s report [67] on the impact of demographics\n\
    on agricultural technology adoption, Loudjani et al. [69] argued that the primary\
    \ barriers\nwere time and costs.\nThe average cost of installing AI systems on\
    \ farms was enormous and beyond the reach\nof smallholder farmers [70]. The contrary\
    \ was true for large commercial farms with a higher\ncapacity to absorb costs\
    \ and risks and a higher tendency to allocate resources for capital-\nintensive\
    \ investments [71]. The concerns raised by Kendall et al. [70] were supported\
    \ by the\nCisco and the International Telecommunication Union (ITU) report [72],\
    \ which noted that\nagricultural sensors for AI systems with greater functionality\
    \ are expensive ($150–$1000+\nAppl. Sci. 2023, 13, 14\n7 of 35\nper sensor). The\
    \ initial capital outlay was a key impediment to technology adoption,\nconsidering\
    \ that multiple sensors are required for monitoring greenhouse microclimate\n\
    (humidity, temperature, soil nutrient, water levels, and pH). From another dimension,\n\
    the expenses were relative, given that local production of smart greenhouse components\n\
    may offset costs [73]; this view was corroborated by Chung’s study [73] on South\
    \ Korean\ncompanies Hyundai Metal Farming Company, Sewoon, DaeSungHione, and Dae\
    \ Ryun\nand local production of precision farming systems, such as sensors, actuators,\
    \ fans, heaters,\ndehumidiﬁers, and window motors. In contrast, there was insufﬁcient\
    \ production capacity\nin developing countries.\nThe cost-centric worldview advanced\
    \ by Kendall et al. [70] and Loudjani et al. [69]\nnegated the role of externalities.\
    \ Lakshmi and Corbett [18] argued that the effectiveness of\nAI systems was largely\
    \ dependent on the willingness of the local stakeholders to “modify,\ngenerate,\
    \ and extend their operational capabilities to improve efﬁciency” (p. 5209). Ad-\n\
    ditionally, the processes, AI resources, and tools (including drones, sensors,\
    \ and robots)\nemployed by commercial farms profoundly impacted the effectiveness\
    \ of AI systems.\nDrawing from Lakshmi and Corbett’s study [18], the cost was\
    \ not a primary barrier to AI\ntechnology adoption.\n2.2.2. Water and Fertilizer\
    \ Use Efﬁciency and Crop Yields with AI Systems\nThe success of the GOSSYM (a\
    \ combined simulation model for plant growth and deci-\nsion) aid for cotton crop\
    \ management mode inﬂuenced the iterative development of other\nAI systems, including\
    \ the HortiMED-AI-powered Decision Support Systems (DSSs) [74].\nOn a positive\
    \ note, the barriers to the transition from labor- and input-intensive agriculture\n\
    to knowledge-based farming would be eliminated over time; this is evident with\
    \ the recent\ninnovations in AI systems for smart/precision agriculture. In 2022,\
    \ Otazua reported the\nsuccessful development of the HortiMED-AI-powered decision\
    \ support systems (DSSs) that\nfacilitated autonomous greenhouse control using\
    \ sensors, “multilayer hierarchical control\narchitecture,” smart algorithms,\
    \ “hybrid modeling combining well-known mechanistic\nmodels with AI techniques,”\
    \ IoT, and machine learning (p. 1) [74]. The HortiMED-DSS was\ncapable of facilitating\
    \ cost-effective automation of greenhouse heating, ventilation, and\nfertigation,\
    \ and providing expert services relating to nutrient, crop, and climatic conditions\n\
    (fertilizer and water application rates and timelines).\nThe observations made\
    \ by [74] regarding the beneﬁts of automating greenhouse were\nin tandem with\
    \ Cui et al. [75]; precision irrigation and fertilizer application led to higher\n\
    nitrogen use and water use efﬁciency, and in turn, a lower risk of pests and diseases\n\
    in greenhouse cucumbers in China’s Yangling region. The observations made by Cui\n\
    et al. [75] about AI-mediated water-use efﬁciency corroborated the study by Lin\
    \ et al.,\nwhich noted that AI technologies provided water to crops within their\
    \ demand ranges [76].\nFrom a theoretical point of view, Cui et al. [75] and Lin\
    \ et al. [76] advanced a simplistic\nview of sensor operation, which did not align\
    \ with Briciu-Burghina et al. [77]. In the\nlatter case, Briciu-Burghina et al.\
    \ [77] argued that the accuracy of the soil moisture sensors\nwas dependent on\
    \ hardware components and environmental degradation of the sensor\ncomponents.\
    \ In line with Briciu-Burghina et al. [77], there were cases when the dielectric\n\
    soil moisture sensors failed to accurately measure periodic changes in the soil\
    \ moisture\nlevels; this had a negative domino effect on demand irrigation. The\
    \ faulty measurements\nwere linked to either corrosion or hardware malfunction.\
    \ The outcome reported by Briciu-\nBurghina et al. [77] negated the impact of\
    \ soil type on sensor malfunction—an issue that was\nextensively investigated\
    \ by Shamshiri et al. [78]. The study conﬁrmed that the “resistive\nsensor operates\
    \ defectively in sandy loam and clay loam soils owing to low bulk density\nand\
    \ high organic matter” (p. 5) Emerging research recommended the adoption of capacitive\n\
    soil moisture sensors to counteract the limitations of the resistive sensors.\n\
    From the researcher’s perspective, the risk of corrosion was disproportionately\
    \ higher,\nconsidering the dielectric sensors were buried in situ and the soils\
    \ were humid [77]. The\nrisk of sensor malfunction highlights the potential drawbacks\
    \ and limits of demand-driven\nAppl. Sci. 2023, 13, 14\n8 of 35\nagriculture.\
    \ Despite the mounting evidence on the risk of a sensor malfunction, the\ntechnology\
    \ issues are often disregarded due to cost considerations and the anticipated\
    \ cost\nsavings. Cui et al. [75] reported a 17.5% higher cucumber yield following\
    \ the introduction\nof AI-based irrigation, while the partial factor productivity\
    \ of applied nitrogen increased by\n29%. Similarly, with AI-based systems, Sharma\
    \ et al. [79] reported a 17% improvement in\nwheat grain yields. Considering the\
    \ outcomes were statistically signiﬁcant (p < 0.005), AI-\nbased irrigation and\
    \ fertilizer application yielded tangible beneﬁts compared to traditional\ndrip\
    \ irrigation and manual soil fertilization. The positive outcomes reported by\
    \ Cui\net al. [75] were consistent with the Sharma et al. case study in Saudi\
    \ Arabia, where superior\npartial factor productivity of applied nitrogen with\
    \ ANN (Artiﬁcial neural network) models\nwas established [79]. Since no experimental\
    \ data contradicted the positive ﬁndings made by\nCui et al. [75] and Sharma et\
    \ al. [79], it appears that the AI technologies were cost-effective\nand may enable\
    \ farmers to achieve higher returns on investment on fertilizer application\n\
    and gross returns above the fertilizer cost.\nThe use-efﬁciency-related beneﬁts\
    \ that emerged from applying fertilizers were compa-\nrable to pesticide-use efﬁciency.\
    \ Facchinetti et al. [80] reported a 50% reduction in the use\nof pesticides based\
    \ on an initial theoretical mixture of 1000 L/ha. The introduction of com-\nputational\
    \ algorithms helped to reduce the demand for pesticides to 470 L/ha. The study\n\
    conﬁrmed that the pesticide application rates could be further reduced to 300\
    \ L/ha [80].\nFacchinetti et al. hypothesized a 33% reduction in pesticide use\
    \ [80], which does not match\nClaver’s research, which noted it was possible to\
    \ reduce pesticide usage by up to 78% using\nthe state-of-the-art algorithm systems\
    \ developed by Israel-based Greeneye Technology [81].\nSimilarly, Shankar et al.\
    \ postulated that intelligent technologies enabled farmers to practice\nvariable\
    \ rate application (VAR), which provided real-time data on the areas most infested\n\
    with pests and diseases [82]. The utility of the VAR was further reinforced by\
    \ the xarvio\nSpray Timer and SprayWeather, which enabled farmers to establish\
    \ the most appropriate\nwindow for spraying. Drawing from the empirical data provided\
    \ by [82], VAR eliminated\nthe need to apply excessive fertilizers in areas least\
    \ affected by pesticides, and was an ideal\nalternative compared to the system\
    \ proposed by Facchinetti et al. [80]. The use of fewer\npesticides in the production\
    \ of freshly cut salads had a beneﬁcial effect on human health,\nconsidering pesticide\
    \ residues in foods were risk factors for myriad non-communicable\ndiseases.\n\
    On the downside, the beneﬁts that accrue from DSS, VAR for pesticides, xarvio\n\
    Spray Timer and SprayWeather, AI-based fertilizer, irrigation, and other systems\
    \ may\nbe less relevant to remote areas with limited IT infrastructure and technical\
    \ expertise [8].\nHowever, these challenges may not persist in the long term,\
    \ considering the high pace of IT\ninfrastructure deployment in rural and urban\
    \ areas, previously classiﬁed as unproﬁtable for\nsuch ventures [83]. From another\
    \ perspective, the deployment of IT infrastructure would\nonly provide a partial\
    \ solution, given the aging of the population was also a major issue of\nconcern.\n\
    2.3. AI Systems for Integrated Pest Management\nDespite the concerns raised about\
    \ the prohibitive costs, the proponents of AI argue that\nthe long-term beneﬁts\
    \ outweigh the short-term costs [84,85]. The reliable use of AI systems\nto predict\
    \ rice production was a case in point [85]. Beyond the prediction of crop production,\n\
    AI systems facilitated the development of intelligent IPM systems capable of detecting\
    \ early\ninfestation of white ﬂies (Trialeurodes vaporariorum and Bemisia argentifolii)\
    \ and thrips (Thrips\ntabaci, Frankliniella intonsa, Thrips hawaiiensis, and Thrips\
    \ tabaci) [57]. The observations made\nby Rustia et al. [57] reinforce earlier\
    \ observations made by Karar et al. [14] on the suitability\nof deep learning\
    \ systems in the management of pests and diseases. From a commercial\nperspective,\
    \ the ﬁndings reported by Rustia et al. [57] and Karar et al. [14] were compelling,\n\
    but inadequate for catalyzing a paradigm shift in the market; this view was reinforced\n\
    by the fact that the existing stock of Al systems for pest identiﬁcation and management\n\
    focused on insect pheromone identiﬁcation [86]. The pheromone-centric ANN and\
    \ wireless\nAppl. Sci. 2023, 13, 14\n9 of 35\nsensor network (WSN) technology\
    \ cannot control all insect types, considering there is a\nlimited number of commercially\
    \ available pheromones for IPM [86].\nDespite the reservations reported by Singh\
    \ et al. [86], the ANN–WSN system for pest\nidentiﬁcation accurately categorized\
    \ harmful and beneﬁcial insects; these data guided the\ncalculation of the volume\
    \ of pesticides for IPM. The limits of WSN technology highlighted\nby [86] were\
    \ in tandem with [87], who noted that variable monitoring ranges, complex\ntypologies,\
    \ and environmental conditions compromised the operation of WSN systems.\nHowever,\
    \ recent R&D evidence suggests otherwise. The shortcomings of WSN identiﬁed\n\
    by [86,87] negate recent milestones achieved by Sacaleanu et al. [88] with wireless\
    \ sensors\nand actuators networks (WSAN). WSAN is an upgrade of WSN developed\
    \ to resolve most\nof the limitations of WSN using actuators for better monitoring\
    \ and control.\nThe advances made using WSAN have not been accompanied by greater\
    \ market adop-\ntion, owing to the newness of the technology; most studies still\
    \ focus on WSN technologies\nfor smart greenhouses [19,89]. Beyond the concerns\
    \ about the pace of market adoption, the\nbody of knowledge, including Rustia\
    \ et al. [57], Singh et al. [86], and Karar et al. [14], was\ninformed by small-scale\
    \ experiments under controlled conditions. Real-life applications\nof AI systems\
    \ (IRIS scout robots and robot scouts) in identifying pests and diseases in\n\
    agriculture yielded false positive data after analyzing pheromone trap images\
    \ and powdery\nmildew [90]. Since the latter ﬁndings were based on market data,\
    \ the IRIS scout robots\nand robot scouts were not ready for market adoption.\
    \ Inaccurate assessment of pests and\ndisease infestation using AI and ML (machine\
    \ learning) image analysis techniques would\nresult in the excessive application\
    \ of pesticides. Further research and development efforts\nwere necessary to minimize\
    \ false positive rates.\n2.4. Robotics and Algorithms for Precision Agriculture\
    \ and Smart Greenhouses\nRecently, commercial farms have deployed robotic systems\
    \ to selectively harvest\nfragile fruits and vegetables such as broccoli and tomatoes\
    \ [91]. The ﬁndings by [91] were\nin agreement with Lee et al. [92], who documented\
    \ the increased use of robotic systems\nto sort tomatoes based on color, size,\
    \ shape, and mass and to identify all defects during\nthe harvesting process.\
    \ The case for AI robotic systems in smart farming advanced by\nKootstra et al.\
    \ [91] was corroborated by Vidwath et al. [93] and Navas et al. [94], who\nhighlighted\
    \ the beneﬁts of soft robotic grippers in fruit and vegetable harvesting. In\n\
    contrast to Vidwath et al. [93] and Navas et al. [94], Tianhua et al. [95] argued\
    \ that AI robotic\nsystems could perform a wide range of unsafe greenhouse tasks\
    \ beyond harvesting. Such\napplications include pesticide spraying and UV-C treatment\
    \ of crops to mitigate the spread\nof powdery mildew. From a human health perspective,\
    \ Tianhua et al. [95] perspective\non the use of robotic systems for pesticide\
    \ application was validated by pesticide toxicity\nstudies [61,62,96]. For example,\
    \ Chlorpyrifos-methyl, a common pesticide employed in\nintegrated pest management\
    \ of the South American tomato pinworm, caused cholinesterase\ninhibition in humans\
    \ and death in severe cases [62]. In other studies, mechanical AI systems\nenabled\
    \ farmers to reduce their labor requirements by up to 90% [13]. However, the actual\n\
    reduction rates can be contested, considering robots cannot entirely replace human\
    \ labor.\nEmpirical data supported the arguments concerning costs and operational\
    \ efﬁciency\nof AI systems in farms. Hou et al. [97] used Dynamic Artiﬁcial Bee–Ant\
    \ Colony algorithm\n(DABACA) to optimize agricultural machinery plant operational\
    \ cycle and route plan-\nning. The study reported better optimization, convergence\
    \ accuracy (>90%), and reduced\noperational cycles, which translated to signiﬁcant\
    \ cost savings. The observations made\nby Hou et al. [97] using DABACA were in\
    \ line with Cao et al. [98], whose bio-inspired\nalgorithm-mediated task assignment\
    \ of agricultural machinery, which employed ant colony\nalgorithm-based B-patterns\
    \ to improve the operational efﬁciency of agricultural equipment,\nincluding the\
    \ fuel used and non-working distance covered during routine farm opera-\ntions.\
    \ However, critics argue that the positive outcomes drawn from experimental studies,\n\
    such as the observations made by Hou et al. [97] and Cao et al. [98], did not\
    \ justify the\nwidespread adoption of AI systems in greenhouses. The concerns\
    \ were premised on the\nAppl. Sci. 2023, 13, 14\n10 of 35\nfollowing factors.\
    \ First, AI systems in agriculture lacked standardized accuracy rates. The\nsystem\
    \ accuracy varied depending on the local environmental conditions and operational\n\
    factors. Second, the risk of error remained regardless of the algorithm’s robustness\
    \ [99,100].\nHowever, the higher risk of errors was not ubiquitous. Proietti et\
    \ al. established that RNN\n(Recurrent neural network)-based decoder–encoder systems\
    \ exhibited great potential in\nthe early detection of anomalies [101]. Similarly,\
    \ Aytenfsu et al. noted that Elman Recurrent\nNeural Network (ERNN) was 98% accurate\
    \ in predicting greenhouse temperature and\nhumidity levels. The case-speciﬁc\
    \ error theory provided better context concerning the\nbeneﬁts and limits of AI\
    \ systems in smart greenhouses. Even though [99,100] raised valid\nconcerns about\
    \ the constraints, commercial adoption should be encouraged.\nThe positive assessment\
    \ of AI systems in commercial agriculture was validated by suc-\ncessful commercial\
    \ adoption. For example, Gao et al. [102] used an ANN model to quantify\ncrop\
    \ evapotranspiration rates in Saudi Arabia. The ANN model yielded better estimates\n\
    than traditional approaches to estimating evapotranspiration. Accurate determination\n\
    of the plant evapotranspiration rates provided useful data for automated irrigation\
    \ algo-\nrithms. Beyond the estimation of the crop evapotranspiration rates, the\
    \ ANN and WDNN\nalgorithms were equally proven useful in predicting the photosynthetic\
    \ rates of plants,\namong other physiological indices that predict plant growth\
    \ rates and yield [103]. In other\ncases, hybrid algorithms were proven reliable\
    \ in weed prediction/optimization [104,105],\nand the determination of the soil\
    \ cation exchange capacity [106]. The positive assessment\nof ANN technologies\
    \ reinforces earlier observations by Proietti et al. [101] on the fusion\nof deep\
    \ learning and artiﬁcial intelligence (RNN encoders and LSTM (Long Short-Term\n\
    Memory)) to facilitate learning patterns in time series and modeling data sequences\
    \ using\nmonitored parameters to predict crop growth indicators in greenhouses.\
    \ The case for RNN\nadvanced by Proietti et al. [101] negated critical shortcomings\
    \ identiﬁed by Codeluppi\net al. [107]; NN systems were inferior to LSTM owing\
    \ to the long time series and vanishing\ngradient problem, which made it difﬁcult\
    \ to train the model on long-term dependencies.\nThe latter ﬁndings validate the\
    \ emerging transition from LSTM to RNN.\nGao et al. [102] and Hu et al.’s [103]\
    \ bias toward new algorithms for greenhouses\nwas validated by the following considerations.\
    \ First, modern greenhouses are complex;\nthere are dynamic relationships between\
    \ different greenhouse parameters, and the data\nmining ability of traditional\
    \ models is insufﬁcient to facilitate the extraction of all useful\ninformation.\
    \ Second, the traditional models’ low precision and convergence speeds made\n\
    them incompatible with modern intelligent greenhouses. On the downside, the research\n\
    of Gao et al. [102] and Hu et al. [103] negated the fact that the transition from\
    \ traditional\nto modern algorithms does not automatically translate to higher\
    \ prediction accuracy and\nsensitivity. The hybrid algorithms must be combined\
    \ with the appropriate classiﬁers to\nyield better accuracy and speciﬁcity [105].\
    \ For example, Tao and Wei achieved a 92%\naccuracy with the CNN (Convolutional\
    \ Neural Network)-Support Vector Machine (SVM)\nalgorithm for weed recognition\
    \ [104]. However, SVM coupled with the ANN algorithm\nproved inferior compared\
    \ to the emerging class of deep learning models. CNN was paired\nwith SVM because\
    \ the former exhibited satisfactory results in computer pattern recognition,\n\
    but unsatisfactory results in artiﬁcial differentiation of weeds. The SVM model\
    \ helped to\naddress this challenge [104]. In contrast to Tao and Wei [104], Emamgholizadeh\
    \ et al. [106]\nproposed a three-model algorithm integrating particle swarm, integrated\
    \ invasive weed\noptimization, and support vector for accurate weed recognition.\n\
    Drawing from the latter study, the development of algorithms for evaluating green-\n\
    house parameters should be customized to match local conditions and requirements.\
    \ The\nﬁndings of Emamgholizadeh et al. [106] were corroborated by Ibrahim et\
    \ al., who noted that\nthe integrated particle swarm algorithm was ideal for selecting\
    \ discriminant features [108].\nOn the downside, widespread adoption is constrained\
    \ by a paucity of temporal data for\nprecise predictions and training of AI and\
    \ ML systems. Karnawat et al. argued that the\nlack of suitable historical data\
    \ would be a critical impediment to the adoption of AI sys-\ntems in agriculture.\
    \ The latter ﬁndings contradict the positive narratives advanced by\nAppl. Sci.\
    \ 2023, 13, 14\n11 of 35\nEmamgholizadeh et al. [106] and Ibrahim et al. [108]\
    \ concerning the immense potential of\nCNN and ANN algorithms in intelligent farming.\
    \ The increased reliance on bio-inspired\nalgorithms in crop irrigation is justiﬁed,\
    \ given traditional irrigation methods resulted in a\n60% waste of water resources\
    \ [38]. The suitability of different algorithms in predicting the\nevapotranspiration\
    \ rates is depicted in Table 1. The data show that ELM-GA, ELM-CSA,\nELM-ACO,\
    \ and ELM PFA were ideal models for determining the evapotranspiration rates,\n\
    since the R2 (coefﬁcient of determination) values were close to unity. In addition,\
    \ the rela-\ntive mean, standard error, and mean of absolute value of errors (MAE)\
    \ values were within\nthe acceptable range [109]. The performance of ELM-GA/CSA/CSO/PFA\
    \ raises questions\non whether bio-inspired algorithms are better than traditional\
    \ ones. Such concerns were\ninformed by the study of Chahidi et al., which achieved\
    \ comparable R2, RSME (Relative\nStandard Mean Error), and MAE values using ANN,\
    \ SVM, and Gaussian process regression\ntechniques [110]. Following the comparison\
    \ of the validation and test performance, it was\ndeduced that the choice of ANN/SVM,\
    \ GPR vis-à-vis ELM-GA/CSA/CSO/PFA should\nconsider other variables beyond R2,\
    \ RSME, and MAE. The observations were justiﬁed\nby the model-speciﬁc training\
    \ time and performance in the validation phase [110]. The\nselection of the appropriate\
    \ algorithm is key to collecting reliable real-time data using\nsensors to help\
    \ eliminate excessive waste of water, pesticides, and fertilizers.\nTable 1. Evapotranspiration\
    \ data collected using ELM statistical methods and bio-inspired algorithms\n[109].\n\
    Station/\nModel\nTraining\nValidation\nTesting\nR2\nRMSE\nNRMSE\n(%)\nMAE\nR2\n\
    RMSE\nNRMSE\n(%)\nMAE\nR2\nRMSE\nNRMSE\n(%)\nMAE\n(mm d−1)\n(mm d−1)\n(mm d−1)\n\
    (mm d−1)\n(mm d−1)\n(mm d−1)\nELM\n0.995\n0.150\n5.020\n0.122\n0.994\n0.189\n\
    6.332\n0.132\n0.988\n0.288\n9.532\n0.200\nELM-GA\n0.995\n0.149\n4.983\n0.117\n\
    0.995\n0.176\n5.882\n0.125\n0.988\n0.281\n9.280\n0.193\nELM-\nACO\n0.995\n0.149\n\
    4.981\n0.117\n0.996\n0.166\n5.575\n0.122\n0.988\n0.279\n9.256\n0.191\nELM-CSA\n\
    0.996\n0.148\n4.981\n0.117\n0.996\n0.159\n5.320\n0.121\n0.988\n0.274\n9.232\n\
    0.191\nELM-FPA\n0.996\n0.144\n4.967\n0.116\n0.996\n0.155\n5.189\n0.119\n0.989\n\
    0.272\n9.112\n0.190\nAI-based irrigation techniques offer additional beneﬁts,\
    \ including reduced risk of\npowdery mildew and Botrytis and fungal pathogen spores\
    \ caused by excess humidity in\ngreenhouses (due to inadequate regulation of water\
    \ molecule condensation during sunrise\nand sunset and on cold, cloudy days) [111].\
    \ Proactive prevention of crop pests and disease\ndirectly impacts crop yields,\
    \ considering powdery mildew and Botrytis limit chlorophyll\nformation through\
    \ conidia and conidiophores on the leaf surfaces. Recent advances in AI\ntechnology\
    \ for agricultural production facilitated autonomous monitoring of chlorophyll\n\
    formation using the SPAD value, which is a proxy measure for wavelength absorbance\
    \ [112].\nHowever, the reliability of the measurements is contingent on the chloroplast\
    \ movements\nand light intensity.\nLiu et al. [111] employed long short-term memory\
    \ neural network systems to effec-\ntively manage powdery mildew in greenhouse\
    \ structures. The ﬁndings reported by Liu\net al. [111] were in line with the\
    \ research of Abdulridha et al. [113] and other experimental\nstudies, which supported\
    \ using AI technology to prevent pests and diseases in greenhouses.\nIn particular,\
    \ Abdulridha et al. relied on UAV-based hyperspectral imaging and artiﬁcial\n\
    intelligence to accurately diagnose the presence of powdery mildew [113] (see\
    \ Figure 4).\nHowever, the case made by Abdulridha et al. [113] and Liu et al.\
    \ [111] was not aligned with\nPane et al. [114], who noted that machine learning\
    \ techniques were equally effective in the\nmanagement of powdery mildew.\nAppl.\
    \ Sci. 2023, 13, 14\n12 of 35\nLiu et al. [111] were in line with the research\
    \ of Abdulridha et al. [113] and other \nexperimental studies, which supported\
    \ using AI technology to prevent pests and diseases \nin greenhouses. In particular,\
    \ Abdulridha et al. relied on UAV-based hyperspectral \nimaging and artificial\
    \ intelligence to accurately diagnose the presence of powdery mildew \n[113] (see\
    \ Figure 4). However, the case made by Abdulridha et al. [113] and Liu et al.\
    \ [111] \nwas not aligned with Pane et al. [114], who noted that machine learning\
    \ techniques were \nequally effective in the management of powdery mildew. \n\
    \ \nFigure 4. Hyperspectral imaging and artificial intelligence detection of powdery\
    \ mildew in squash \nplant leaves. Images labeled (a–c) demonstrate different\
    \ developmental stages of the powdery \nmildew disease in in-house leaves; (e,f)\
    \ represent disease severity in outdoor squash plants. (a) \nPowdery mildew was\
    \ not detected in the regions of interest. (b) Low severity of the powdery \n\
    mildew disease (in-house photos). (c) High severity of the powdery mildew disease.\
    \ (d) Powdery \nmildew was not detected in the regions of interest (outdoor plants).\
    \ (e) Low severity of the powdery \nmildew disease (outdoor plants). (f) High\
    \ severity of the powdery mildew disease (outdoor plants) \n[113]. \nThe concerns\
    \ raised by Abdulridha et al. [113], Liu et al. [111], and Pane et al. [114] \n\
    about the reliability of the algorithms for powdery mildew diagnosis are but a\
    \ microcosm \nof the limits of image detection techniques. Future R&D is anticipated\
    \ to resolve these \nchallenges. \n2.4.1. Role of AI Technologies and Biological\
    \ Pesticide Compounds in IPM  \nThe use of AI technologies in place of chemical\
    \ products (including Prestop®, \nMicroflora PROTM, and Active Flower™) and biological\
    \ powdery mildew management \ntechniques was validated by ecological and cost\
    \ considerations [115] and the mixed \nFigure 4. Hyperspectral imaging and artiﬁcial\
    \ intelligence detection of powdery mildew in squash\nplant leaves. Images labeled\
    \ (a–c) demonstrate different developmental stages of the powdery mildew\ndisease\
    \ in in-house leaves; (e,f) represent disease severity in outdoor squash plants.\
    \ (a) Powdery\nmildew was not detected in the regions of interest. (b) Low severity\
    \ of the powdery mildew disease\n(in-house photos). (c) High severity of the powdery\
    \ mildew disease. (d) Powdery mildew was not\ndetected in the regions of interest\
    \ (outdoor plants). (e) Low severity of the powdery mildew disease\n(outdoor plants).\
    \ (f) High severity of the powdery mildew disease (outdoor plants) [113].\nThe\
    \ concerns raised by Abdulridha et al. [113], Liu et al. [111], and Pane et al.\
    \ [114]\nabout the reliability of the algorithms for powdery mildew diagnosis\
    \ are but a micro-\ncosm of the limits of image detection techniques. Future R&D\
    \ is anticipated to resolve\nthese challenges.\n2.4.1. Role of AI Technologies\
    \ and Biological Pesticide Compounds in IPM\nThe use of AI technologies in place\
    \ of chemical products (including Prestop®, Mi-\ncroﬂora PROTM, and Active Flower™)\
    \ and biological powdery mildew management tech-\nniques was validated by ecological\
    \ and cost considerations [115] and the mixed beneﬁts of\nbio-pesticide formulations\
    \ (such as succinic acid and methanolic extract of Rosmarinus ofﬁci-\nnalis) [96].\
    \ The case for the biological control interventions by Homayoonzadeh et al. [96]\n\
    was in line with the research of Arnaouty et al. [116], which afﬁrmed that biological\
    \ control\nagents were effective compared to the traditional chemical agents (including\
    \ Radiant 12%\nSC, Kanemite 15% SC and Actra 25% WG) in the management of pests,\
    \ including whiteﬂy,\nFrankliniella occidentalis, and ﬂower thrips [116]. In addition\
    \ to the superior efﬁcacy of the\nbiological control agents, the sweet pepper\
    \ plants exhibited superior yields (35% better)\nfollowing treatment with the\
    \ biological control agents. Despite the positive observations\nmade by Homayoonzadeh\
    \ et al. [96] and Arnaouty et al. [116], one must acknowledge\nthat the effectiveness\
    \ of the biological control agents is contingent on the seasons and the\nAppl.\
    \ Sci. 2023, 13, 14\n13 of 35\nintensity of the pests and disease. The biological\
    \ control agents might be less effective if\nthere is a high intensity of pests\
    \ and diseases. Other major issues of concern with biological\ncontrol agents\
    \ include the mixed performance of the biological control agents.\nDespite the\
    \ reservations, the emphasis on biological rather than commercial IPM\ntechnicals\
    \ by Homayoonzadeh et al. [96] and Arnaouty et al. [116] represents an emerg-\n\
    ing pattern in commercial agriculture, guided by the need to conserve the environment\n\
    and reduce pesticide resistance—a phenomenon that is most common with commercial\n\
    pesticides [75]. For example, studies conducted in the Russian Federation established\
    \ that\nmites gradually became resistant to avermectin pesticides in the past\
    \ 20 years [117]. The\nobservations made by [117] in the Russian Federation were\
    \ comparable to the research of\nKirisik and Dagli’s [118] and Solmaz et al. [66]\
    \ in Turkey, where farmers recorded higher\nTetranychus Urtic resistance to Bifenazate\
    \ and Abamectin. The observations made by Kirisik\nand Dagli [118] and Solmaz\
    \ et al. [66] concerning the growing pesticide resistance in Turkey\nwere afﬁrmed\
    \ by Alpkent et al. [119], who attributed the arrhenotokous reproduction and\n\
    high fecundity of Tetranychus urticae populations in greenhouses to acaricide\
    \ resistance.\nHowever, in the latter case, the pesticides were resistant to a\
    \ wide range of pesticides,\nbifenthrin, and hexythiazox. From a globalist perspective,\
    \ Tetranychus urticae resistance to\npesticides would create a monumental challenge\
    \ for Turkey and the larger EU. Acaricides\npurchases represented 14% of the pesticide\
    \ expenditure in the continent [120]. Higher\nexpenditure on acaricides denotes\
    \ greater dependence, which has catastrophic effects on\ncrop yields if widespread\
    \ pesticide resistance is documented.\nEven though there was compelling evidence\
    \ to catalyze the industry transition to\nbiopesticides and intelligent IPM, the\
    \ rate of biological agent adoption was inadequate [121];\nthis was despite favorable\
    \ legislation and regulations, including Regulation (EC) No.\n1107/2009 and 2016/2903\
    \ (RSP) [122]. Current research does not provide clear-cut reasons\nwhy biological\
    \ agents have not outpaced chemical control agents in the market. On the\none\
    \ hand, Liu et al. attributed the phenomenon to risk aversion among farmers coupled\n\
    with an unfavorable marketing environment for biological pesticides in China [121].\
    \ On\nthe other hand, the low adoption was linked to the variable effectiveness\
    \ of the biological\ncontrol agents relative to chemical pesticides, and the longer\
    \ duration needed to secure\nﬁnancial returns following years of R&D investment\
    \ [123]. The operational challenges\nhighlighted by leading biological pesticide\
    \ manufacturers supported this narrative.\nFrom another dimension, the limited\
    \ uptake of biological pesticides could be linked to\nadopting a wide range of\
    \ complementary interventions, including crop diversiﬁcation and\ngrowing advocacy\
    \ for pesticide-free agriculture [124,125]. Statistics compiled by the EU\nconﬁrmed\
    \ that farmers were assimilating pesticide-free agriculture policies; this was\
    \ evi-\ndent from the consistent reduction in the level of pesticide dependence—the\
    \ most notable\nimprovement was observed in the Czech Republic, where pesticide\
    \ use reduced by 38%\nbetween 2011 and 2020. A similar downward trend was observed\
    \ in Denmark, Portugal,\nand Romania, with each country recording a 20% drop in\
    \ pesticide demand [120]. The pes-\nticide use patterns documented by [120] were\
    \ in agreement with Facchinetti et al. [80], who\ndocumented a marginal change\
    \ in pesticide use from the 1990s to the late 2000s as a result\nof the stringent\
    \ regulatory measures imposed by the EU, including Directive 2009/128/CE.\nA contrary\
    \ trend was observed in Latvia and Austria, where pesticide demand in-\ncreased\
    \ by 77% and 61%, respectively. In contrast to the statistics provided by Eurostat\
    \ [120],\nNeumeister noted that EU farmers were locked into pesticide use [126],\
    \ creating an eter-\nnal lose–lose situation for all stakeholders. The lose–lose\
    \ situation was evident from the\ndeclining genetic diversity, impaired crop yields\
    \ due to lower insect-assisted pollination,\nand the destruction of local ecosystems.\
    \ The contrasting observations about pesticide use\nand the rates and barriers\
    \ to biopesticide market entry afﬁrm the complexity of phasing\nout chemical pesticides\
    \ from the market. On a positive note, the scenario is forecasted to\nchange with\
    \ the gradual introduction of AI technologies in pest management.\nKarar et al.\
    \ deployed cloud-based solutions and CNN networks to target red spider,\nﬂax budworm,\
    \ cicadellidae, aphids, and ﬂea beetles [14]. Early detection of pesticides using\n\
    Appl. Sci. 2023, 13, 14\n14 of 35\nAI technologies would facilitate timely responses\
    \ using AI and IoT infrastructure. The\nobservations made by Karar et al. [14]\
    \ were corroborated by Rustia et al., who integrated\nboth AI and IoT systems\
    \ in developing a new and intelligent system of IPM (see Figure 5).\nThe IPM system\
    \ shown in Figure 5 shows the use of sensors and image data during the data\n\
    collection phase, which are then stored in a database and processed within the\
    \ same server,\nusing analytics to provide useful outputs, such as hotspot detection\
    \ and other models that\ncan aid decision-making on the farm. The system was >\
    \ 90% effective in managing thrips\nand whiteﬂy [57]. In both cases, intelligent\
    \ IPM techniques had the potential to reduce\npesticide usage, resulting in signiﬁcant\
    \ cost savings. However, the short-term investment\ncosts are a major impediment\
    \ [121,123]. The observations made by [60,62] reﬂect the\nbroader concerns about\
    \ the future of Al in agriculture highlighted by Karnawat et al. [6].\nHowever,\
    \ in the latter case, the researchers argued the challenge might be addressed\
    \ by\ndeveloping affordable interventions in open-source platforms to ensure higher\
    \ penetration\namong farmers.\nthe declining genetic diversity, impaired crop\
    \ yields due to lower insect-assisted \npollination, and the destruction of local\
    \ ecosystems. The contrasting observations about \npesticide use and the rates\
    \ and barriers to biopesticide market entry affirm the complexity \nof phasing\
    \ out chemical pesticides from the market. On a positive note, the scenario is\
    \ \nforecasted to change with the gradual introduction of AI technologies in pest\
    \ \nmanagement. \nKarar et al. deployed cloud-based solutions and CNN networks\
    \ to target red spider, \nflax budworm, cicadellidae, aphids, and flea beetles\
    \ [14]. Early detection of pesticides \nusing AI technologies would facilitate\
    \ timely responses using AI and IoT infrastructure. \nThe observations made by\
    \ Karar et al. [14] were corroborated by Rustia et al., who \nintegrated both\
    \ AI and IoT systems in developing a new and intelligent system of IPM \n(see\
    \ Figure 5). The IPM system shown in Figure 5 shows the use of sensors and image\
    \ data \nduring the data collection phase, which are then stored in a database\
    \ and processed within \nthe same server, using analytics to provide useful outputs,\
    \ such as hotspot detection and \nother models that can aid decision-making on\
    \ the farm. The system was > 90% effective \nin managing thrips and whitefly [57].\
    \ In both cases, intelligent IPM techniques had the \npotential to reduce pesticide\
    \ usage, resulting in significant cost savings. However, the \nshort-term investment\
    \ costs are a major impediment [121,123]. The observations made by \n[60,62] reflect\
    \ the broader concerns about the future of Al in agriculture highlighted by \n\
    Karnawat et al. [6]. However, in the latter case, the researchers argued the challenge\
    \ might \nbe addressed by developing affordable interventions in open-source platforms\
    \ to ensure \nhigher penetration among farmers. \n \nFigure 5. Key attributes\
    \ of the intelligent IPM system [14]. \nThe proponents of intelligent IPM coupled\
    \ with biopesticides argue that there were \nimmediate short-term benefits. For\
    \ example, the crop yield was higher with intelligent \nFigure 5. Key attributes\
    \ of the intelligent IPM system [14].\nThe proponents of intelligent IPM coupled\
    \ with biopesticides argue that there were\nimmediate short-term beneﬁts. For\
    \ example, the crop yield was higher with intelligent and\nbiological IPM compared\
    \ to traditional chemical pesticides [116]. Moreover, the domino\nhealth beneﬁts\
    \ for humans and cost savings in commercial farming are unquantiﬁable. The\nlatter\
    \ evidence afﬁrms there were justiﬁable grounds for the transition from traditional\
    \ to\nintelligent IPM methods. The paradigm shift would beneﬁt global agriculture,\
    \ considering\nthat pests and diseases accounted for up to 40% of global crop\
    \ losses [14].\nIn contrast to the cost-related issues highlighted by Ni and Punja\
    \ [115], continuous\nand excessive pesticide use has a detrimental impact on pest\
    \ management, given the high\nrisk of pesticide resistance. Pesticide resistance\
    \ and incompatibility have partly led to the\nspread of the South American tomato\
    \ pinworm Tuta absoluta [61] and mites. The current\nstrains of the South American\
    \ tomato pinworm can only be eradicated using strong and\ntoxic pesticides, such\
    \ as chlorpyrifos-methyl and Spinosad [61]. Even though pesticide\ntoxicity and\
    \ resistance risk can be mitigated with biopesticide formulations, adoption has\n\
    remained low owing to their variable effectiveness across different classes of\
    \ pests and\ndiseases. For example, succinic acid and methanolic extract of Rosmarinus\
    \ ofﬁcinalis were\nAppl. Sci. 2023, 13, 14\n15 of 35\nonly proven effective against\
    \ Aphis gossypii in cucumber grown in greenhouses [96]. The\nlack of broad-spectrum\
    \ biopesticides may partly explain why the demand for chemical\npesticides remained\
    \ unchanged; this phenomenon introduced new constraints, considering\nindustrial\
    \ greenhouses cannot be used in isolation. Glinushkin et al. proposed an alternative\n\
    approach, focusing on less-potent chemical pesticides, such as Conﬁdor Extra and\
    \ Nocturne.\nOn the downside, these pesticides were only effective against the\
    \ phytoseiid mite Neoseiulus\nbarkeri Hughes, and their efﬁcacy was limited to\
    \ approximately 25% [117]. According to the\ndata in Table 2, the mortality rate\
    \ for the mites was notably higher for avermectin pesticide\n(>93%) (see Table\
    \ 2). The application of Conﬁdor, Actellic, Scelta, and malathion did not\nyield\
    \ mortality rates comparable to avermectin. The data suggested that pest mortality\
    \ rates\nwere proportional to the strength of the pesticides [117]. The estimates\
    \ provided by [117]\nwere comparable to experimental data drawn from Turkey [118,119].\
    \ Turkish farmers had\nrecorded high levels of red spider mite (Tetranychus Urtica)\
    \ resistance to Bifenazate and\nAbamectin (acaricides) [118,119]. Higher mite\
    \ mortality rates (>90%) were observed with\nthe adoption of aggressive pest management\
    \ techniques, including mite-dipping and leaf\ndipping. The widespread pesticide\
    \ resistance further validates the need for intelligent\nIPM systems.\nTable 2.\
    \ Potency of different classes of pesticides against mites [117].\nPesticides\
    \ and Active Ingredients (AI)\nField\nRecommended\nRates\nContent of Active\n\
    Ingredient,\nmcg/mL\nOriginal Number\nExperiences (N0)\nCumulative\nDead\nMites\
    \ (N1)\nMortality Rate\n(Xcp ± St), %\nPesticides used in greenhouses\nFitoverm\n\
    EC\n1.0\n20\n146\n9\n93.7 ± 6.7\n(avermectin C, 2 g/L)\n0.2\n10\n208\n68\n33.1\
    \ ± 8.8\n0.1\n5\n154\n27\n16.3 ± 3.2\nConﬁdor\nExtra,\n0.015\n105\n102\n23\n21.7\
    \ ± 4.0\nWDP\n(imidacloprid, g/kg)\n700\n0.0075\n525\n89\n16\n18.2 ± 3.7\nActellic,\n\
    (pirimiphos-methyl\n500 g/L)\nEC\n0.2\n1000\n217\n86\n39.5 ± 4.7\n0.1\n500\n260\n\
    65\n24.8 ± 5.4\nNovaction,\n(malathion, 440 g/L)\nWE\n0.15\n660\n66\n49\n42.1\
    \ ± 7.3\n0.075\n330\n172\n38\n20.7 ± 11.5\nPromising pesticides for use in greenhouses\n\
    Scelta\n(cyﬂumetofen, g/L)\nSC\n0.2\n40\n104\n7\n6.9 ± 3.1\n20\n0.1\n20\n106\n\
    7\n4.4 ± 0.8\n0.05\n10\n79\n4\n5.4 ± 3.8\nNocturne,\nSC\n0.1\n100\n404\n86\n23.0\
    \ ± 8.3\n(pyridalyl, 100 g/L)\n0.05\n50\n319\n48\n16.9 ± 8.2\nProclaim,\nWSP\n\
    0.2\n100\n158\n111\n70.5 ± 3.1\n(emamectin benzoate,\n50 g/kg)\n0.1\n50\n151\n\
    62\n40.7 ± 4.0\n0.05\n25\n68\n7\n9.3 ± 1.4\nOberon,\nSC\n0.05\n120\n136\n55\n\
    42.2 ± 9.8\n(spiromesifen, g/L)\n240\n0.025\n60\n74\n18\n25.9 ± 9.2\nControl\n\
    -\n-\n352\n20\n6.3 ± 5.3\n(water)\nDrawing from the IPM management practices for\
    \ Aphis gossypii and phytoseiid mite\nNeoseiulus barkeri Hughes reported by [96,117],\
    \ farmers with commercial greenhouses\nwere faced with a dilemma. On the one hand,\
    \ law regulations advocated using less toxic\npesticides [127]. However, ecologically\
    \ benign biopesticides were not broad-acting. On the\nother hand, chemical pesticides\
    \ with broad-spectrum activity against pests and diseases\nwere toxic to the environment\
    \ [117,121,122,124]. In light of the critical shortcomings of\ntraditional pesticides\
    \ in greenhouse agriculture, the proactive management of powdery\nAppl. Sci. 2023,\
    \ 13, 14\n16 of 35\nmildew and Aphis gossypii, among other pests and diseases,\
    \ using AI and other smart\ntechnologies might yield enormous beneﬁts to farmers.\n\
    Complementary techniques for disease detection are needed, considering that the\n\
    research of Abdulridha et al. [113], Liu et al. [111], and Pane et al. [114] conﬁrmed\
    \ that\nAI-based disease detection systems had critical shortcomings. For example,\
    \ the detection\nof powdery mildew was impacted by the UV wavelength, the camera\
    \ properties, and the\nlocation of the infected leaves in relation to the non-infected\
    \ leaves. The shortcomings of\nAI-based disease detection systems in greenhouse\
    \ and open-ﬁeld agriculture raise pertinent\nquestions about sustainable IPM practices.\
    \ Two theories were advanced in the literature.\nOn the one hand, proponents of\
    \ the current status quo supported the continued use of pesti-\ncides to manage\
    \ aggressive pests and diseases, including Orius laevigatus, Nesidiocoris tenuis,\n\
    Tuta absoluta, and Amblyseius swirskii [61]. However, persistent pesticide use\
    \ increased\nthe risk of crop pesticide resistance [61,113]. Moreover, the concentration\
    \ of pesticides\ndiminished over time, contributing to the resurgence in the population\
    \ of Nesidiocoris tenuis\n(see Figure 6); this phenomenon informed the need for\
    \ frequent pesticide applications.\nOn the other hand, the proponents of smart\
    \ farming advocated using Al and IoT-based\nsolutions in pest management. The\
    \ high detection accuracy validated the case for AI in\npest management. The UAV-based\
    \ hyperspectral imaging and artiﬁcial intelligence system\nhad 82% and 99% classiﬁcation\
    \ accuracy for the asymptomatic and late development of\npowdery mildew [113,127].\
    \ Asymptomatic detection was critical to the early management\nof crop diseases\
    \ and the improvement of crop yields. In line with Abdulridha et al. [113],\n\
    Pane et al. [114] demonstrated the utility of intelligent solutions in managing\
    \ pests and\ndiseases. Following delineating the cost-beneﬁts of traditional pesticides\
    \ versus smart\nfarming solutions, the latter was encouraged despite the signiﬁcant\
    \ capital requirements in\nthe short term.\nIn light of the unique beneﬁts and\
    \ constraints of AI-based IPM techniques, complemen-\ntary solutions were needed\
    \ moving forward; this view was corroborated by Agarwal and\nVerma’s [128] assessment\
    \ of pest behavior-modifying chemicals; genetic engineering and\nplant immunization;\
    \ CRISPR-based genetic manipulation of pest populations; controlled\nintroduction\
    \ of predators, parasites, and diseases to reduce the population of plant pests\n\
    and diseases; and microbial pesticides. Even though RNA interference and genome\
    \ editing\nwere supported by Agarwal and Verma [128], the gene editing of crops\
    \ has not gained\ntraction, and there is strong opposition from bioethicists [129].\
    \ The ethical concerns are\nvalid, since CRISPR-based gene manipulation may trigger\
    \ undesirable changes in the crop\ngenome; these shortcomings validate the emphasis\
    \ on AI in IPM.\nAppl. Sci. 2023, 13, 14\n17 of 35\nAppl. Sci. 2023, 13, 14 \n\
    17 of 36 \n \n \n \nFigure 6. (A,C) show the average population of Nesidiocoris\
    \ tenuis and Tuta absoluta per leaf inside a \ncommercial greenhouse in 2016,\
    \ and (B,D) show the average population of the same pests in 2017 \nafter the\
    \ pesticide was applied twice in 2016 [61]. \nOn the other hand, the proponents\
    \ of smart farming advocated using Al and IoT-\nbased solutions in pest management.\
    \ The high detection accuracy validated the case for \nAI in pest management.\
    \ The UAV-based hyperspectral imaging and artificial intelligence \nFigure 6.\
    \ (A,C) show the average population of Nesidiocoris tenuis and Tuta absoluta per\
    \ leaf inside a\ncommercial greenhouse in 2016, and (B,D) show the average population\
    \ of the same pests in 2017\nafter the pesticide was applied twice in 2016 [61].\n\
    2.4.2. Commercial Development of Robotic Systems for Smart Agriculture\n(Inhouse\
    \ and Outdoors)\nIn 2022, John Deere Company (one of the world’s leading farm\
    \ machinery manu-\nfacturers) released fully autonomous tractors for precision\
    \ agriculture featuring the next\nAppl. Sci. 2023, 13, 14\n18 of 35\ngeneration\
    \ optical and electro-optical cameras. The cameras helped to detect obstacles\
    \ and\ncalculate distances in real time [130]. The utility of advanced computer\
    \ vision systems\nin robotics was afﬁrmed by Beloev et al. [131]. However, in\
    \ the latter case, performance\nwas augmented by the integration of image processing\
    \ algorithms. The robotic system\naccurately distinguished tomatoes, leaves, and\
    \ wood support structures (see Figure 7).\nundesirable changes in the crop genome;\
    \ these shortcomings validate the emphasis on AI \nin IPM. \n2.4.2. Commercial\
    \ Development of Robotic Systems for Smart Agriculture (Inhouse and \nOutdoors)\
    \ \nIn 2022, John Deere Company (one of the world's leading farm machinery \n\
    manufacturers) released fully autonomous tractors for precision agriculture featuring\
    \ the \nnext generation optical and electro-optical cameras. The cameras helped\
    \ to detect \nobstacles and calculate distances in real time [130]. The utility\
    \ of advanced computer \nvision systems in robotics was affirmed by Beloev et\
    \ al. [131]. However, in the latter case, \nperformance was augmented by the integration\
    \ of image processing algorithms. The \nrobotic system accurately distinguished\
    \ tomatoes, leaves, and wood support structures \n(see Figure 7). \n \nFigure\
    \ 7. Object classification, localization, detection, and instance segmentation\
    \ using image \nprocessing algorithms in agricultural robots [131]. \nDespite\
    \ the milestones recorded in recent years, a major concern was the lack of \n\
    consensus on the most effective method for robotic automation and mobility. Drawing\
    \ \nfrom Beloev et al. [131] and John Deere [130], LIDAR and optical cameras yielded\
    \ superior \noutcomes. However, not all scholars support the case for LIDAR and\
    \ optical cameras. For \nexample, Rahmadian and Widyartono [132] argued that satellite-differential\
    \ GPS \n(geographic positioning systems) (S-DGPS) connected to a John Deere tractor\
    \ (ground \nstation) proved to be reliable and accurate in facilitating autonomous\
    \ mobility. The John \nFigure 7. Object classiﬁcation, localization, detection,\
    \ and instance segmentation using image pro-\ncessing algorithms in agricultural\
    \ robots [131].\nDespite the milestones recorded in recent years, a major concern\
    \ was the lack of\nconsensus on the most effective method for robotic automation\
    \ and mobility. Drawing\nfrom Beloev et al. [131] and John Deere [130], LIDAR\
    \ and optical cameras yielded superior\noutcomes. However, not all scholars support\
    \ the case for LIDAR and optical cameras.\nFor example, Rahmadian and Widyartono\
    \ [132] argued that satellite-differential GPS\n(geographic positioning systems)\
    \ (S-DGPS) connected to a John Deere tractor (ground\nstation) proved to be reliable\
    \ and accurate in facilitating autonomous mobility. The John\nDeere-S-DGPS system\
    \ had an accuracy of up to 2 cm from the target. In other cases, the\nrobotic\
    \ systems achieved an accuracy of less than a centimeter [132]. In contrast to\
    \ other\nAI and ML systems, which recorded variable results under different environments\
    \ and\noperating conditions, the G-DGPS had consistent accuracy in Israel, Georgia,\
    \ and the US\n(California) [132]. The mixed observations of Rahmadian and Widyartono\
    \ [132] and Beloev\net al. [131] about the utility of GPS systems in agricultural\
    \ robots show that contextual\nfactors and technological improvements were important\
    \ moderating factors. Additionally,\none cannot disregard the legitimate concerns\
    \ raised about robotic system accuracy.\nThe issues raised by Zha [8] concerning\
    \ the inconsistent accuracy of AI systems in\nsmart greenhouses were in agreement\
    \ with Aghelpour, Bahrami-Pichaghchi, and Kisi’s [133]\nresearch, which reported\
    \ a low prediction accuracy for the Adaptive Neuro-Fuzzy Inference\nSystem (ANFIS)\
    \ coupled with bio-inspired optimization algorithms. However, Aghelpour,\nBahrami-Pichaghchi,\
    \ and Kisi [133] and Zha [8] contradict Soheli et al. [134], who reported\na >93.6%\
    \ prediction accuracy using ANFIS and IoT. The higher accuracy reported by Soheli\n\
    et al. [134] reinforces the perspectives of Howard et al. on achieving an optimal\
    \ balance\nbetween scalability, computational speed, and accuracy of the AI systems.\n\
    The inconsistencies in the accuracy of ANFIS-AI systems with bio-inspired algorithms\n\
    can be partly linked to the distinct operational parameters and optimum operational\n\
    conditions. The later claims aligned with the research of Salam et al. [135] on\
    \ optimal\ntarget identiﬁcation using multiple unmanned UAVs guided by bio-inspired\
    \ algorithms\nto identify crop diseases. On a positive note, the lower prediction\
    \ accuracy reported by\nAghelpour et al. [133] and Zha [8] could be resolved using\
    \ digital models based on model\npredictive control. Howard et al. conﬁrmed that\
    \ the MPC (model predictive control) digital\nmodels improved accuracy without\
    \ compromising the computational speed [136]. On\nthe downside, the positive assessment\
    \ of MPCs by Howard et al. [136] negated the fact\nAppl. Sci. 2023, 13, 14\n19\
    \ of 35\nthat the classical controller systems had critical shortcomings and accurate\
    \ operations\ndepended on the mathematical models’ accuracy [10]. In most cases,\
    \ closed-loop control\nalgorithms, such as MPC, may impose new constraints on\
    \ manipulating variables and\noften on computational resources [10]. Despite the\
    \ strain on computational resources,\nthe continued use of MPC was validated by\
    \ unique beneﬁts and capabilities, including\nrolling optimization, which provided\
    \ the operators with sufﬁcient time to initiate inverse\nresponses, address sensor\
    \ failure, change the computing objectives, and address time delays\nbetween sensors.\n\
    The MPC system could help streamline the performance and accuracy of the UAV\n\
    systems, which are affected by light intensity, soil moisture, relative humidity,\
    \ pH, and the\nconcentration of nitrogen, phosphorous, and potassium [103,113,135].\
    \ The observations\nmade by [103,113,135] concerning the regulation of the greenhouse\
    \ microclimate were in\nagreement with the research of Jiang et al. [137] on the\
    \ factors predicting the economic\nreturn and fruit quality of greenhouse-grown-table\
    \ grapes in Northern China. Proper regu-\nlation of greenhouse parameters was\
    \ a key prerequisite for higher table grape yields and\nproﬁt margins. The observations\
    \ reinforce current research on the beneﬁts of greenhouse\nmicroclimate control.\
    \ For example, the DynaLight system and dynamic climate control\nin InfoGrow improved\
    \ the quality of greenhouse crops [136]. Similarly to [136], Afzali\net al. [11]\
    \ conﬁrmed that predictive modeling for greenhouse light management could yield\n\
    signiﬁcant cost savings. In contrast to [136] and Afzali et al. [11], Bersani\
    \ et al. noted that\ncost savings in predictive modeling were largely dependent\
    \ on the choice of the algorithm\nand MPC [138]. The latter study preferred particle\
    \ swarm algorithms. On the downside,\nthe selection of bio-inspired algorithms\
    \ may not sufﬁce to offset the existing challenges.\nEven in cases where the dynamic\
    \ climate control in InfoGrow was present, and it\nwas challenging to mitigate\
    \ the impact of local environmental conditions, the beneﬁts\nassociated with timely\
    \ detection of powdery mildew and management of pests outweighed\nthe drawbacks\
    \ [13,103,111,113,135]. The variable test set accuracy (85–90%) of the Adam,\n\
    RMSprop, Adamax, and Nadam optimizers depicted in Table 3 should not be perceived\
    \ as\na major impediment to the adoption of algorithms for smart farms [69]. The\
    \ test accuracy\ncan be improved in subsequent training of the algorithms. Moreover,\
    \ new computational\napproaches have been employed to enhance the training and\
    \ test set accuracy.\nTable 3. Relationship between optimizers, learning rates,\
    \ the training set accuracy, and test set\naccuracy [111].\nOptimizers\nLearning\
    \ Rates\nTraining Set Accuracy (%)\nTest Set Accuracy (%)\nNadam\n0.001\n96\n\
    89\nAdamax\n0.001\n93\n89\nRMSprop\n0.001\n95\n89\nAdam\n0.001\n96\n90\nAdam\n\
    0.0001\n89\n86\nAdam\n0.01\n91\n85\n3. Digital AI Models for Energy Management\
    \ in Greenhouses\n3.1. Energy Demand in Smart Greenhouses and Energy Optimization\
    \ Algorithms\nThe adoption of digital models (such as MATLAB/Simulink) to regulate\
    \ the insulated\nand transparent greenhouse microclimate is an emerging area of\
    \ research [139]. The materi-\nals for greenhouse structures, such as ﬁberglass,\
    \ PVC, polycarbonate, and reinforced plas-\ntics, had a domino effect on energy\
    \ use [140]. Intelligent greenhouse structures are energy-\nintensive—a factor\
    \ that may impede commercial adoption of AI technologies [141,142].\nThe claims\
    \ made by [77,78] concerning the energy-intensive nature of greenhouse culti-\n\
    vation were in tandem with Iddio et al., who noted that energy costs accounted\
    \ for 25%\nof the greenhouse overhead costs [10]. Energy is needed to heat and\
    \ cool greenhouse\nstructures and regulate light, humidity, and soil moisture.\
    \ The disproportionate use of\nenergy in greenhouses relative to other sectors\
    \ in the agricultural industry may explain why\nAppl. Sci. 2023, 13, 14\n20 of\
    \ 35\nthere was renewed interest in developing the next generation of AI-based\
    \ energy-saving\ntechnologies to reduce energy expenditure and improve yields.\n\
    Nguyen et al. documented various bio-inspired interventions for energy optimiza-\n\
    tion in smart grids, smart homes, and the internet of energy [55]. The study suggested\n\
    that swarm and evolutionary-based optimization algorithms were ideal for optimizing\n\
    the use of traditional and renewable energy sources to achieve higher user comfort\
    \ and\nenergy demand aligned with the production capacity and grid demand. In\
    \ contrast to\nNguyen et al. [55], Zhang et al. [142] proposed an AI-based mode\
    \ based on a particle\nswarm optimization (PSO) scheme. The latter reduced the\
    \ cost of greenhouse energy\nthrough integrating photovoltaics and dynamic pricing\
    \ (real-time and time-of-use). The\nalgorithm enabled seamless communication between\
    \ the external power grid (EPG) and\nthe PV system. For example, the supply of\
    \ power from the external power grid was only\nrequired when sunlight was low.\
    \ If there was sufﬁcient light and load, the EPG supply was\ndisconnected.\nIn\
    \ real-life greenhouse operations, the proposals made by Nguyen et al. [55] and\
    \ Zhang\net al. [142] may be relevant or less relevant depending on the local\
    \ operating conditions,\nenergy sources, the scale of greenhouse agriculture,\
    \ and speciﬁc circumstances; this is in\nline with Iddio et al. who recommended\
    \ the use of evolutionary algorithms to address the\nshortcomings associated with\
    \ proportional–Integral–derivative (PID) control of greenhouse\nstructures. Traditionally,\
    \ PID was preferred owing to its great performance, simplicity,\nand ﬂexibility\
    \ [10]. However, there were certain tradeoffs, including time-consuming\ncomputing\
    \ and the inability to handle abrupt and external disturbances [10]. The case\n\
    for the PID greenhouse control strategy advanced by [10] corroborates [20], who\
    \ noted\nit was a low-cost alternative. However, there were alternative systems\
    \ with comparable\nperformance, including GA-based model predictive control systems.\
    \ The PID-related\nshortcomings partly explain why AI bio-inspired algorithms,\
    \ such as EA (Evolutionary\nAlgorithm), were used to modify PID controllers in\
    \ greenhouses.\nSimilarly to Iddio et al. [10] and Zhang et al. [142], Jia et\
    \ al. [143] conﬁrmed that\nbio-inspired algorithms, particularly adaptive chaotic\
    \ ACO algorithms, could achieve\nsigniﬁcant energy savings. However, the use of\
    \ bio-inspired algorithms to reduce energy\ndemand in isolation would not sufﬁce,\
    \ considering energy expenditure in greenhouses\nwas a complex non-linear, multi-input\
    \ and output process; this may explain why CFD\n(computational ﬂuid dynamics)\
    \ modeling coupled with mathematical transformations and\nsystematization of greenhouse\
    \ design parameters were appealing alternatives [144–146].\nRasakhodzhaev et al.\
    \ employed mathematical models in the design of adjustable solar\ngreenhouse structures\
    \ with optimal height for better regulation of heating and cooling. In\ncontrast\
    \ to Zhang et al. [142] and Jia et al. [143], Chen et al. [144] employed computational\n\
    ﬂuid dynamics to regulate surplus air thermal energy in greenhouses. The data\
    \ were\nemployed in the operation of the fan-pad evaporative cooling system. Even\
    \ though the\nlatter system did not rely on bio-inspired algorithms, it demonstrated\
    \ the effectiveness of\nmodeling and simulations in regulating greenhouse cooling.\
    \ In line with Chen et al. [144],\nMirzamohammadi et al. demonstrated the effectiveness\
    \ of mathematical simulations using\nthe Monte Carlo model. However, the effectiveness\
    \ of the modeling system was largely\ndependent on the level of uncertainty.\n\
    The ACOA proposed by Jia et al. [143] regulated energy demand in smart sensor\
    \ net-\nworks. However, it remained unclear whether the optimal performance of\
    \ the bio-inspired\nalgorithms in controlled environments would yield satisfactory\
    \ performance in real-world\nscenarios. Such concerns were premised on the fact\
    \ that the performance of the bio-inspired\nalgorithm was inﬂuenced by the dynamic\
    \ relationship between biological interactions and\nphysical conditions (atmospheric,\
    \ weather, soil, and humidity). The concerns raised by\nJia et al. [143] were\
    \ partly in agreement with the assessment by An et al. [147] of system\noptimization\
    \ under non-deterministic weather conditions. The unpredictable weather\npatterns\
    \ impaired the performance of sensors and actuators for heating, lighting, and\
    \ CO2\ndosing and the development of a climate and irrigation strategy.\nAppl.\
    \ Sci. 2023, 13, 14\n21 of 35\n3.2. Alternative Energy Saving Measures—LoRa Transmission,\
    \ PCOA-Lighting Management,\nPCMs, and LEDs\nDrawing from earlier case study data,\
    \ the pilot experiments may not be practical\nfor regions with diverse climatic\
    \ conditions and unique energy requirements. The above\nconcerns partly contributed\
    \ to the diversiﬁcation of AI approaches for energy management.\nIn the meantime,\
    \ the researcher posits that it would be prudent for smallholder farmers to\n\
    make incremental changes for better energy management; these may include selecting\
    \ con-\nnectivity technologies with lower energy requirements. For example, a\
    \ comparison of LoRa,\nWi-Fi, Bluetooth, ZigBee, mobile, and RFID technologies\
    \ established the following. Leading\nconnectivity technologies for AI systems\
    \ with higher transmission ranges (20–100 m) had\nhigher energy input requirements;\
    \ Wi-Fi is a case in point. In contrast, LoRa had very low\nenergy requirements\
    \ and high transmission ranges (<30 km) [148]. The claims made by\nBersani et\
    \ al. [148] on the low energy requirements were in tandem with Placidi et al.\
    \ [84],\nwho noted that the system’s typology reduced the energy demand while\
    \ enhancing data\ntransmission over long distances. Beyond the selection of communication\
    \ channels, Bersani\net al. [138] reported 54% to 83% energy savings in incandescent\
    \ and ﬂuorescent lamps after\nincorporating a parallel particle swarm algorithm\
    \ for optimal location of lighting.\nThe case for LoRa networks in agriculture\
    \ made by Bersani et al. [148] and Placidi\net al. [84] aligned with the research\
    \ of Chen et al. [149] on the market integration of LoRa\ntechnology in greenhouses.\
    \ In one case, the LoRa transmission module was used to transfer\ndata collected\
    \ from sensors to the Raspberry Pi (single-board computer). In contrast to Chen\n\
    et al. [149], Henningson [150] observed that the accuracy of the Raspberry Pi\
    \ system was\nhigher when paired with Canon camera systems to improve the resolution\
    \ of the images\ndetected. After integrating the two systems, each plant had a\
    \ resolution of 0.006 pixels.\nOn the downside, farm-based data show that high\
    \ transmission ranges and low energy\nrequirements of LoRa did not automatically\
    \ translate to greater commercial adoption in\nrelation to -Fi, Bluetooth, ZigBee,\
    \ mobile, and RFID. For example, Siskandar et al. [151]\npreferred fuzzy-guided\
    \ RFID-based communication channels for smart greenhouses fea-\nturing DHT22/\
    \ DS18B20 sensors for temperature and humidity regulation. In contrast\nto Chen\
    \ et al. [149], Bersani et al. [148], and Placidi et al. [84], Mu et al. [152]\
    \ and Elsayed\net al. [153] recommended alternative methods for managing energy\
    \ resources, including\nthe use of phase change materials for energy conservation\
    \ and agricultural residue to\ngenerate biofuels and energy. However, the application\
    \ of PCMs recommended by Mu\net al. [152] represents but a tiny fraction of the\
    \ potential applications in smart farming.\nFor example, Kong et al. [154] noted\
    \ that PCMs were appropriate materials for cold chain\nlogistics [154]. However,\
    \ not all scholars support the use of PCMs in greenhouses and\nrelated applications\
    \ due to the high risk of leakage during the phase change process [155].\nThe\
    \ researcher supports the use of PCMs, considering they can be coupled with solar\n\
    systems for maximum energy saving.\nOn the downside, incremental changes, such\
    \ as selecting less energy-intensive com-\nmunication systems, cannot sufﬁce;\
    \ they must be paired with other interventions, including\nthe adoption of renewable\
    \ energy systems in greenhouses [156,157]. Solar and geothermal\nenergy are the\
    \ most viable renewable energy systems [158]. Even though the transition\nto renewable\
    \ energy was widely encouraged, the reliability of the energy source was not\n\
    guaranteed, especially in regions with intermittent solar radiation [159]. Even\
    \ in regions\nwhere the supply of solar energy was guaranteed, mass utilization\
    \ of renewable energy\nresources was a challenge, owing to the signiﬁcant disconnect\
    \ between the use of AI in\nthe greenhouse and the deployment of AI in energy\
    \ saving; this was a paradoxical phe-\nnomenon, considering smart greenhouses\
    \ (featuring predictive light control systems) could\nreduce energy expenditure\
    \ by 14–33.85% [11]. The improvements in lighting achieved\nby [11] were in tandem\
    \ with [58], who documented a 19.4% cost saving following the\nintroduction of\
    \ a predictive control strategy and innovative greenhouse lighting system.\nThe\
    \ light prediction model is illustrated in Figure 8.\nAppl. Sci. 2023, 13, 14\n\
    22 of 35\nAppl. Sci. 2023, 13, 14 \n23 of 36 \n \n \nFigure 8. Sunlight prediction\
    \ models and lighting strategies for the predictive light control systems \n[11].\
    \ PPFD was measured with units of µmoL m−2 s−1. \nFollowing the comparison of\
    \ the heuristic versus application-specific models, the \nformer yielded accurate\
    \ predictions with minimal variations from the baseline. Beyond \nthe lower prediction\
    \ accuracy, the case against the heuristic systems was further \ncorroborated\
    \ by the high cost of heuristic-based predictions compared to the prediction-\n\
    based method (PBM). On average, the heuristic-based predictions cost $5.96/m2,\
    \ while the \nPBM cost $0.73/m2 per day [11]. The notable disparities in the cost\
    \ validate the PBM \napproaches. \nProper energy management in greenhouse structures\
    \ remained a priority, \nconsidering that the current rates of energy expenditure\
    \ were unsustainable in the long \nterm. For example, US-based greenhouse operators\
    \ utilize $600 million worth of electricity \nper year [160]. Regulating energy\
    \ use using AI was a practical option, since small-scale \nand large commercial\
    \ farms had to spend additional resources on IPM. On average, US \nfarmers spend\
    \ $1 billion on pesticides per year. Similarly, commercial farming in Europe \n\
    was pesticide intensive—farmers utilized an estimated 346,000 tons of pesticides\
    \ in 2020 \nalone [120]; nearly half of the expenses were on fungicides and bactericides.\
    \ \n4. Barriers to Incorporating Artificial Intelligence Technology in Smart Greenhouses\
    \  \nCurrent research on AI and IoT in agriculture advances distinct claims on\
    \ the \npotential barriers to incorporating AI technology in smart greenhouses.\
    \ One school of \nthought claimed that the inconsistent adoption of AI could be\
    \ linked to the slow \ncommercialization of R&D innovations, barriers to technology\
    \ acceptance, and \ninformation asymmetry. This school of thought was corroborated\
    \ by Zha [8] and \nSenavirathne et al. [13]. The second school of thought suggested\
    \ that demographics were \na major determinant. Research from Europe suggested\
    \ that demographics directly affect \nprogressiveness and technology adoption\
    \ in agriculture [67,161]. Younger generations are \nmore highly motivated to\
    \ adopt new farming technologies than older generations. In \nFigure 8. Sunlight\
    \ prediction models and lighting strategies for the predictive light control sys-\n\
    tems [11]. PPFD was measured with units of µmoL m−2 s−1.\nFollowing the comparison\
    \ of the heuristic versus application-speciﬁc models, the\nformer yielded accurate\
    \ predictions with minimal variations from the baseline. Beyond the\nlower prediction\
    \ accuracy, the case against the heuristic systems was further corroborated\n\
    by the high cost of heuristic-based predictions compared to the prediction-based\
    \ method\n(PBM). On average, the heuristic-based predictions cost $5.96/m2, while\
    \ the PBM cost\n$0.73/m2 per day [11]. The notable disparities in the cost validate\
    \ the PBM approaches.\nProper energy management in greenhouse structures remained\
    \ a priority, considering\nthat the current rates of energy expenditure were unsustainable\
    \ in the long term. For exam-\nple, US-based greenhouse operators utilize $600\
    \ million worth of electricity per year [160].\nRegulating energy use using AI\
    \ was a practical option, since small-scale and large com-\nmercial farms had\
    \ to spend additional resources on IPM. On average, US farmers spend\n$1 billion\
    \ on pesticides per year. Similarly, commercial farming in Europe was pesticide\n\
    intensive—farmers utilized an estimated 346,000 tons of pesticides in 2020 alone\
    \ [120];\nnearly half of the expenses were on fungicides and bactericides.\n4.\
    \ Barriers to Incorporating Artiﬁcial Intelligence Technology in Smart Greenhouses\n\
    Current research on AI and IoT in agriculture advances distinct claims on the\
    \ potential\nbarriers to incorporating AI technology in smart greenhouses. One\
    \ school of thought\nclaimed that the inconsistent adoption of AI could be linked\
    \ to the slow commercializa-\ntion of R&D innovations, barriers to technology\
    \ acceptance, and information asymmetry.\nThis school of thought was corroborated\
    \ by Zha [8] and Senavirathne et al. [13]. The sec-\nond school of thought suggested\
    \ that demographics were a major determinant. Research\nfrom Europe suggested\
    \ that demographics directly affect progressiveness and technology\nadoption in\
    \ agriculture [67,161]. Younger generations are more highly motivated to adopt\n\
    new farming technologies than older generations. In contrast to the scenario observed\n\
    by [67,161] in Europe, Asian studies highlighted the aging of the population as\
    \ a bar-\nAppl. Sci. 2023, 13, 14\n23 of 35\nrier [162]. Drawing from the latter\
    \ studies, each continent had unique barriers and drivers\nfor precision technology\
    \ adoption in greenhouses.\nThe issues raised by Zha [8] and Senavirathne et al.\
    \ [13] concerning the pace of\ntechnology adoption were discounted by emerging\
    \ research on the immense beneﬁts of\naugmented reality, such as the GRETA application\
    \ in promoting technology adoption\namong hobby farmers, and those with limited\
    \ knowledge about farming technologies, and\neven professional farmers using unique\
    \ human-computer interactions [24]. The case for AR\nadvanced by [24] corroborates\
    \ Yaqot and Meneses’s study [163], which noted AR would\nhelp transform rural\
    \ and novice farmers into experts while providing agronomists with\na real-time\
    \ and holistic view of farm and crop health. The beneﬁts afforded by AR-based\n\
    systems such as GRETA suggest that poor understanding of technology should not\
    \ be an\nimpediment to the automation of greenhouse operations.\nThe low pace\
    \ of AI technology adoption in the global agricultural sector has remained\nunresolved.\
    \ For example, the ﬁrst AI-powered system for agriculture was the GOSSYM\ncotton\
    \ crop simulation model developed in 1985 to regulate water and fertilizer application,\n\
    weed control, and local climate for better cotton yields [8]. The GOSSYM model\
    \ was key to\ndeveloping the Artiﬁcial Intelligence Automated Greenhouse System\
    \ (AIAGS), processing\nsystems, and web applications [13]. On the downside, there\
    \ was limited R&D in the subse-\nquent years to build on the GOSSYM model. In\
    \ 1996, researchers developed an autonomous\nAURORA greenhouse robot to replace\
    \ manual labor. The historical slow adoption of pre-\ncision farming technologies\
    \ documented by [8,13] was in line with Maloku’s appraisal\nof precision farming\
    \ technology integration in the US and EU [71]. Until the late 2000s,\nonly 22%\
    \ of the farmers had integrated precision farming technologies in the West [71].\n\
    On a positive note, there was a notable improvement in the pace of technology\
    \ adoption\npost-2013. In the past two years, researchers have developed multi-application\
    \ AI systems\nfor intelligent IPM [15,86,128], seeding and harvesting, and weed\
    \ recognition [104,105],\nand digital twins for autonomous greenhouse operation\
    \ using traditional sensor data, IoT,\nbig data analytics, and AI [136]. However,\
    \ the pace of R&D innovations does not match\ncommercial adoption—the digital\
    \ twin-based GHI4.0 project in the Danish horticultural\nindustry was in the pilot\
    \ phase. On a positive note, 80% of Danish farmers attempted to\nintegrate precision\
    \ farming technologies in the production of maize and barley crops [71].\nPresently,\
    \ it is challenging to determine the cost-beneﬁts of technological innovation\n\
    and underlying motives for the transition to AI in agriculture [18]. For example,\
    \ even\nthough digital twins offer immense potential to balance accuracy, accuracy,\
    \ and compu-\ntational speeds in agriculture, there are limited data on their\
    \ applications. Howard et al.\nnoted that “state-of-the-art for DTs is limited\
    \ to speciﬁc sub-processes modeled with highly\nspecialized models” [136] (p.\
    \ 7). Further experimental data on the cost-beneﬁts of digital\ntwins was needed\
    \ before deploying the systems in greenhouses to simulate and optimize\nproduction.\
    \ The issues relating to digital twins are but a microcosm of the broader gaps\
    \ in\nthe body of knowledge, which does not sufﬁciently delineate the impacts\
    \ of AI and IT in\nagriculture. Drawing from experimental data compiled by researchers\
    \ in Europe, North\nAmerica, and Asia [86,90,104,105,108], there were region-speciﬁc\
    \ barriers and enablers for\nAI integration in agriculture depending on the pace\
    \ of knowledge and technology transfer.\nThe intermittent integration of R&D innovations\
    \ could be due to the higher costs,\nknowledge and resource gaps between advanced\
    \ and developing countries, the inability to\nentirely replace human labor on\
    \ farms with robots, and variations between the simulated\nand actual outcomes\
    \ in the ﬁeld/smart greenhouses [8]. The criticism of AI systems in\nsmart greenhouses\
    \ and farms by [8] was corroborated by Beloev et al. [131], who claimed\nthat\
    \ mechanical robots were unreliable because they relied on satellite triangulation\
    \ to\nguide movement—this technology was less reliable compared to LIDAR and camera\
    \ sensor\ninnovations. On a positive note, the constraints associated with satellite\
    \ triangulation have\nbeen addressed using light imaging, detection, and ranging\
    \ (LIDAR) optical and electro-\noptical cameras [131]. The advances highlighted\
    \ by [131] were consistent with [162], which\nnoted that algorithm systems had\
    \ led to the development of advanced sensor systems,\nAppl. Sci. 2023, 13, 14\n\
    24 of 35\nincluding fusion algorithms that facilitated the separation of colors\
    \ into the hue, saturation,\nand value formats. However, the case for electro-optical\
    \ cameras made by [131,162] was\nnot in line with the research of Saddik et al.\
    \ on latency issues in an image collection using\nmultispectral cameras [164].\
    \ The latter concerns reinforced the case for LIDAR systems in\nagricultural robots\
    \ [162]. The technology milestones in robotics shaped industry trends in\nthe\
    \ adoption of robotics for harvesting and greenhouse management.\n4.1. Training\
    \ and Test Accuracy of AI Systems in Smart Greenhouses and Precision Agriculture\n\
    The inclusion of different computational methods to attain higher accuracy rates\
    \ was\nconﬁrmed by Siskandar et al. in their assessment of the fuzzy logic system’s\
    \ accuracy\n(~95%) in smart greenhouses (see Table 3) [151]. Even though the observations\
    \ of Siskandar\net al. were speciﬁc to the long short-term memory neural network\
    \ for predicting the\noccurrence and development of powdery mildew in greenhouse\
    \ cucumber plants, they\nwere relevant to other AI systems for greenhouses. On\
    \ the downside, these claims contrast\nwith Lakshmi and Corbett [15], who argued\
    \ the current barriers to technology adoption\nmust be resolved.\nTraditionally,\
    \ it was challenging for Al systems to reconcile the images and measure-\nments\
    \ taken under controlled conditions with those in the ﬁeld due to variations in\
    \ the\nbackground complexity, imaging angle, and interferences in the natural\
    \ environment. The\nconstraints have been partly resolved with bio-inspired algorithms\
    \ customized for fault\nprediction, image recognition, and pest identiﬁcation\
    \ [165,166]. The use of AI to prevent\nroot rot diseases and fusarium wilt among\
    \ cucumber plants in greenhouses was a case in\npoint [167]. The broad application\
    \ of IoT, machine learning (ML), and artiﬁcial intelligence\n(AI) in agriculture\
    \ can be partly linked to technological advances in computing.\n4.2. Impact of\
    \ Demographics and Socioeconomic Factors on AI Technology Adoption in Agriculture\n\
    The shortage of young, progressive EU farmers raises legitimate concerns regarding\n\
    the actualization of Eurozone agricultural innovation policies, and by extension,\
    \ the ability\nto sustain higher food demands [67]. The issues raised in the European\
    \ Economic and Social\nCommittee’s report [67] were partly in line with Mohr and\
    \ Kühl’s research in Germany,\nwhere age predicted technology adoption [161].\
    \ For example, smartphone use and access\ndecreased with age among the German\
    \ farmers sampled. Similarly to Mohr and Kühl [161],\nMaloku [71] noted that less\
    \ educated and older farmers were less inclined to adopt precision\nfarming technologies.\
    \ However, the observations by Mohr and Kühl [161] concerning the\nrate of technology\
    \ acceptance in agriculture were not aligned with the European Economic\nand Social\
    \ Committee’s report [67]. Most of the sampled German farmers were young\n(mean\
    \ age = 33 years), and there was more than an 80% assimilation of smart farming\n\
    technologies among old and young farmers. The contrasting observations from Mohr\n\
    and Kühl and the European Economic and Social Committee’s report raise fundamental\n\
    questions on whether demographics were a barrier to adopting AI on smart farms\
    \ across\nEurope and the world.\nIn contrast to the European Economic and Social\
    \ Committee’s report [67] and Mohr\nand Kühl [161], Maloku [71] claimed multiple\
    \ externalities aided and impeded smart farm-\ning technology adoption; these\
    \ variables included farm size, ﬁnancial status, technology\nfactors, information\
    \ resources, social, economic issues (age, experience, and education),\nand farm\
    \ size. The latter argument provides a more representative picture of the dynamics\n\
    that led to higher or lower technology adoption that is more applicable to developing\n\
    and developed countries in the North and the South [137]. Further research on\
    \ the role of\ndemographics, farm size, ﬁnancial status, technology factors, and\
    \ information resources\nwas necessary, considering achieving and sustaining exponential\
    \ growth in AI technology\nadoption in agriculture is a prerequisite for tangible\
    \ global impact on crop yields, pest and\ndisease management, and optimization\
    \ of agricultural resources [168].\nDespite the overwhelming evidence in support\
    \ of AI, particularly robotics in har-\nvesting, critics argue that AI cannot\
    \ entirely “replace/replicate humans. Machines do\nAppl. Sci. 2023, 13, 14\n25\
    \ of 35\nnot have the multi-perspective skills of humans, as they are typically\
    \ programmed to\nperform speciﬁc tasks in constrained conditions” [69] (p. 9).\
    \ The issues raised by [69] do\nnot consider recent milestones with bio-inspired\
    \ algorithms that improved the precision\nand reliability of AI and ML infrastructure\
    \ in agriculture [169]. The use of bio-inspired\nhybrid algorithms for weed optimization\
    \ was a case in point [14,105,135]. The role of AI\nalgorithms highlighted by\
    \ [14,105,135] was corroborated by Beloev et al. [131], who used\nimage processing\
    \ algorithms to improve the ground-based accuracy of a robotic system.\nThe selection\
    \ of advanced algorithms, including Hierarchy/Hybrid Particle Swarm\nOptimization\
    \ (HPSO), Grey Wolf Optimizer (GWO), Evolutionary Algorithm (EA), Di-\nrect Artiﬁcial\
    \ Bee Colony (DABC), and Hybrid Genetic Algorithm with Particle Swarm\nOptimization\
    \ (GA-PSO) among others involves a tradeoff between computational speed,\npath\
    \ planning, ﬁtness, root means squared, and mean absolute errors [85]. For example,\n\
    the ANN algorithm had lower MAE and RSME values compared to the GEP testing and\n\
    training evolutionary algorithm (see Table 4). However, the ANN required higher\
    \ compu-\ntational resources [14,170]. On a positive note, the technical constraints\
    \ were short-term\nand should not be considered a critical impediment to the adoption\
    \ of AI systems.\nTable 4. Gene expression programming (GEP), ANN RSME, and MAE\
    \ [85].\nANN Testing\nANN Training\nANN CV\nGEP Testing\nGEP Training\nGEP CV\n\
    RMSE\n0.070\n0.068\n0.070\n0.095\n0.091\n0.095\nr-RMSE\n13.07%\n12.67%\n14.25%\n\
    17.87%\n17.13%\n19.42%\nMAE\n0.052\n0.051\n0.052\n0.070\n0.066\n0.068\nStage 2\n\
    0.933\n0.969\n0.968\n0.970\n0.930\n0.930\n0.943\nRMSE\n0.050\n0.053\n0.049\n0.077\n\
    0.078\n0.069\nr-RMSE\n3.33%\n3.47%\n3.26%\n5.06%\n5.10%\n4.57%\nMAE\n0.039\n0.040\n\
    0.038\n0.058\n0.058\n0.054\nStage 3\n0.840\n0.910\n0.912\n0.922\n0.848\n0.853\n\
    0.857\nRMSE\n0.087\n0.086\n0.081\n0.114\n0.113\n0.113\nr-RMSE\n3.44%\n3.43%\n\
    3.18%\n4.51%\n4.48%\n4.41%\nMAE\n0.067\n0.067\n0.063\n0.088\n0.086\n0.089\nStage\
    \ 4\n0.849\n0.911\n0.908\n0.911\n0.860\n0.856\n0.843\nRMSE\n0.086\n0.091\n0.083\n\
    0.109\n0.113\n0.110\nr-RMSE\n2.44%\n2.58%\n2.38%\n3.09%\n3.23%\n3.17%\nMAE\n0.063\n\
    0.065\n0.061\n0.087\n0.090\n0.091\nBeyond the technically related barriers to\
    \ the widespread adoption of AI systems in\nsmart farming, there were emerging\
    \ concerns about the impact of farmer demographics\non the adoption of AI systems.\
    \ For example, the aging of the farmers was a major issue\nin Europe [67,161].\
    \ In light of the observations made by critics and proponents of AI in\nsmart\
    \ greenhouses and precision agriculture, the following fundamental issues emerge.\n\
    First, AI technology critics negate smart agriculture’s immense contribution to\
    \ farming.\nSecond, the proponents of AI technology disregard the enormous capital\
    \ requirements and\nthe barriers to technology transfer in developing countries.\
    \ On a positive note, there were\nsuccessful cases in the developing countries\
    \ in the global south. For example, Ethiopian\nscientists had developed an ERNN\
    \ system to monitor humidity and temperature variations\nin greenhouse structures;\
    \ the system had additional capabilities for wind velocity and\ncarbon dioxide\
    \ concentration measurement [170]. Proper temperature regulation and\nmonitoring\
    \ were necessary, considering a majority of the greenhouse crops; tomatoes were\n\
    particularly susceptible to temperature variations [171]; the effect of chilling\
    \ stress on\ngreenhouse tomatoes in China was a case in point [171]. In practice,\
    \ incorporating artiﬁcial\nintelligence technology in smart greenhouses should\
    \ be supported by prior data on actual\nfarm applications and short and long-term\
    \ beneﬁts vis-à-vis the costs and potentially\ndetrimental environmental impacts.\n\
    The dynamic natural and physical conditions (including atmospheric, weather, soil,\n\
    and humidity) and biological interactions between plants, pests, and diseases\
    \ in green-\nAppl. Sci. 2023, 13, 14\n26 of 35\nhouses and open-ﬁeld agriculture\
    \ increase the complexity of the decision-making pro-\ncesses [6,15,57]. The sophisticated\
    \ relationship between these variables would predict the\nutility of AI in agriculture\
    \ and agricultural sustainability. On a positive note, emerging\nresearch on bio-inspired\
    \ algorithms and selected applications of AI systems in agriculture\nconﬁrmed\
    \ that the beneﬁts outweighed the risks [14,108,121]. Moreover, the ongoing R&D\n\
    projects would resolve most of the shortcomings.\n4.3. Sensor Signal Failure and\
    \ Communication Barriers\nThe growing advocacy for the integration of AI in precision\
    \ agriculture negates the\ntechnology-related challenges to commercial adoption.\
    \ Singh et al. established that inter-\nferences often compromised communication\
    \ between sensor nodes. There were multiple\nsources of interferences for sensor\
    \ signal transfer in greenhouses, including crop canopy,\nsoil, and temperature\
    \ [87,164]. Similarly to Singh et al. [87], Shamshiri et al. [78] observed\nthat\
    \ the accuracy of the soil moisture sensors was notably low in regions with high\
    \ vege-\ntative diversity. Sensor accuracy was impaired by different hydrological\
    \ properties and\ngeography, especially in real-world conditions dissimilar to\
    \ the training datasets. On a\npositive note, most of the constraints identiﬁed\
    \ by Singh et al. [87] and Shamshiri et al. [78]\nhave been addressed using AI\
    \ technologies. In particular, Vanegas-Ayala et al. demon-\nstrated the importance\
    \ of fuzzy clustering techniques in the humidity prediction modules.\nThe fuzzy\
    \ logic controllers enabled the AI systems to model and predict the behavior of\n\
    key greenhouse parameters. The system was appealing to the farmers because it\
    \ was\ninexpensive and easy to use. A major concern was that these issues were\
    \ often disregarded\nin research in favor of the mass transition to an intelligent\
    \ greenhouse system.\nThe risk of impaired transmission identiﬁed by Singh et\
    \ al. [87] may be resolved using\nthe hardware conﬁguration proposed by Serale\
    \ et al. [58]. The conﬁguration featured\nSiap+Micros t055 pyranometers and Apogee\
    \ SQ-515 Quantum sensors with a 1.2 mV\nsensitivity of 1.2mV. The conﬁguration\
    \ proposed by Serale et al. [58] bears semblance to\nAfzali et al., who deployed\
    \ Apogee instruments to measure the photosynthetic photon ﬂux\ndensity (PPFD)\
    \ over the plant canopy in a greenhouse structure [14]. The observations\nmade\
    \ by Serale et al. [58] and Afzali et al. [11] do not take into account the variable\
    \ accuracy\nof the Apogee solar radiation sensors. According to Zamora-Izquierdo\
    \ et al., the Apogee\nsensors had a mean accuracy of ±5% [172]. The accuracy of\
    \ the sensor systems could\nbe enhanced using the Remote Sensing Assisted Control\
    \ System (RSCS), which offered\nmultidimensional beneﬁts, including the measurement\
    \ of CO2 emissions, soil moisture,\nirrigation control, and agricultural production\
    \ capacities.\nNew experimental data have conﬁrmed that using plastic mulches\
    \ with sustainable\nremote sensing and AI technology systems is practical. In\
    \ particular, Jim et al. [173]\nreported the successful use of Landsat-5 thematic\
    \ mapper and hyperspectral airborne\nsensors to map plastic mulched farmlands\
    \ and plastic-covered greenhouses. The data were,\nin turn, employed to identify\
    \ regions where plastic mulches can be gradually replaced\nwith biodegradable\
    \ alternatives. The claims made by Jim et al. [173] concerning the role of\ntechnology\
    \ in mapping plastic mulches were in tandem with Hasituya et al., who deployed\n\
    remote-sensing aperture radar systems to map plastic mulches [174].\n5. Future\
    \ Perspectives\nThe critical review of the current body of knowledge supporting\
    \ the integration of AI\nsystems in agriculture yielded new insights and perspectives\
    \ on how best to enhance the\nefﬁciency of smart greenhouses. However, certain\
    \ issues should be addressed in upcoming\nstudies. For example, the current body\
    \ of knowledge did not establish a consensus on\nwhether automated agricultural\
    \ machinery manufacturers and commercial farms should\ntransition from satellite\
    \ triangulation to light imaging, detection and ranging (LIDAR),\noptical and\
    \ electro-optical cameras [131], or Satellite-Differential GPS (S-DGPS). The mixed\n\
    observations by Beloev et al. [131], John Deere [130], and Rahmadian and Widyartono\
    \ [132]\nwarrant further research inquiry considering there were different technical\
    \ requirements\nAppl. Sci. 2023, 13, 14\n27 of 35\nfor open space and indoor (greenhouse)\
    \ robotic systems. Future research on LIDAR and\noptical camera systems for open\
    \ space and greenhouse robotic tractors would provide\nbetter insights into the\
    \ cost-beneﬁts of available technologies to guide commercial adoption.\nEmpirical\
    \ and farm-based data are important, considering John Deere and other companies\n\
    were commercializing new autonomous tractor models ﬁtted with optical cameras\
    \ [130,132].\nMoreover, there was a growing acceptance of soft robotic systems\
    \ for fruit and vegetable\nharvesting and pesticide application.\nBeyond systems\
    \ for robotic structures, current data on the suitability of different vari-\n\
    ants of bio-inspired algorithms (swarm intelligence, genetic and evolutionary)\
    \ for pesticide\napplication, and robotic harvesting, automated regulation of\
    \ irrigation, soil treatment, fer-\ntilizer application, and seeding are speciﬁc\
    \ to the Global North [105,135]. Future research\nshould explore the suitability\
    \ of bio-inspired algorithms to support the automation of green-\nhouses in developing\
    \ countries. Isolated case studies of milestones in developing countries\nsupport\
    \ the recommendation. For example, ERNN systems augmented temperature and\nhumidity\
    \ measurements in Ethiopia’s greenhouses [170]. However, there were gaps in\n\
    the knowledge, which may impede decision-making among stakeholders in the future.\n\
    Future research should investigate whether the LoRa, Wi-Fi, Bluetooth, ZigBee,\
    \ mobile, or\nRFID communication technologies were best suited for speciﬁc bio-inspired\
    \ algorithms and\nthe inﬂuence of local conditions and variables on performance\
    \ and accuracy. At present,\nresearchers are focusing on different algorithms\
    \ to reﬁne algorithm performance. For\nexample, most studies focused on solar\
    \ radiation intensity, transpiration, and CO2 concen-\ntration to predict crop\
    \ yields, even though the approach yielded inaccurate results [18]. The\nstandardization\
    \ of input variables would improve accuracy and performance. Upcoming\nstudies\
    \ should help establish whether intelligent IPM was a sustainable alternative\
    \ to\ntraditional chemical pesticides and biopesticides, considering pesticide\
    \ resistance and the\nneed to adopt sustainable agricultural practices.\nAdditionally,\
    \ there is a growing demand for technological solutions to address climate\nchange\
    \ and global food insecurity, which urges the integration of AI technologies like\
    \ light\nimaging, detection and ranging 1128 (LIDAR), optical and electro-optical\
    \ cameras [131] or\nsatellite-differential GPS (S-DGPS). Apart from the technological\
    \ aspect, there is also a need\nto develop agricultural production policies that\
    \ favor the funding of these technologies\nand their integration to agricultural\
    \ production. Such policies can include setting aside\ngrant funds for institutions\
    \ and companies involved in their development. Such policies\nshould also include\
    \ solving the cost barriers that have consistently been highlighted in\nprevious\
    \ research. Most studies have also demonstrated the potential application of AI\n\
    in large scale agricultural production. Policy incentives to facilitate their\
    \ integration in\nsmall-scale farming may also encourage younger populations to\
    \ participate in agricultural\nproduction, because most farmers today in Europe\
    \ and North America are older. If the\nproblem is not addressed in a timely manner\
    \ using potential technological solutions, the\nissues of food insecurity are\
    \ likely to worsen in the future.\n6. Conclusions\nThe ﬁndings drawn from this\
    \ research had practical consequences for commercial\nagriculture, considering\
    \ a large body of knowledge focused on applying AI and IoT in\ntraditional applications,\
    \ and the emphasis on the beneﬁts of the technology negated critical\nconcerns\
    \ about energy demand, sensor failure, accuracy, and long-term use. The ﬁndings\n\
    broadened current knowledge on the cost beneﬁts of sensors, robotic systems, algorithms,\n\
    renewable energy systems for greenhouses, and support infrastructure. For example,\
    \ users\nof soil and humidity sensors paired with fuzzy clustering techniques\
    \ in the humidity\nprediction modules should be conscious of the fact that the\
    \ accuracy of the measurements\nmay be impaired by corrosion or hardware malfunction.\
    \ Additionally, the new generation\nof new agricultural robotic systems largely\
    \ depends on replacing GPS systems with LIDAR\nand optical camera systems, given\
    \ the former exhibited poor object recognition. The\nperformance of LIDAR systems\
    \ was enhanced with image processing algorithms.\nAppl. Sci. 2023, 13, 14\n28\
    \ of 35\nThe commercial readiness of AI technologies was demonstrated by John\
    \ Deere com-\npany, Blue River Technology, Autonomous Tractor Corp, and other\
    \ companies that had\ndeveloped intelligence systems for monitoring crop and soil\
    \ health, weed control, and\nself-driving agricultural tractors. Despite the commendable\
    \ milestones achieved so far,\nthere were multiple barriers to the use of the\
    \ technology. The barriers included the cost\nof AI technology, variable performance\
    \ of the algorithm in real-world conditions vis-à-vis\ntraining, the ﬁnancial\
    \ status of the farmers, lack of information resources, aging, and lack of\nprior\
    \ experience with technology. Despite the shortcomings, adopting AI systems should\
    \ be\nencouraged, given they improved crop yields, water use, and fertilizer use\
    \ efﬁciency, and\nreduced the effects of pesticide resistance through intelligent\
    \ IPM. Moreover, bio-inspired\nalgorithms improved energy management by integrating\
    \ photovoltaics and dynamic pric-\ning and autonomous communication between the\
    \ greenhouse system and EPG supply. The\nemerging climate change risks further\
    \ reinforce the case for smart greenhouses powered by\nAI systems.\nIn summary,\
    \ most AI applications in agricultural production are in the development\nphase\
    \ because they have not fully matured for commercialization purposes. The few\n\
    AI solutions that have so far reached maturity and have been rolled out for commercial\n\
    use despite challenges (e.g., accuracy) include the use of drones, sensors, and\
    \ robots for\nharvesting crop yields. Although these technologies have been applied\
    \ commercially,\nthe challenge of accuracy and sustainability persists. For example,\
    \ underground sensor\nhardware can be damaged by moisture and other unpredictable\
    \ environmental conditions,\nleading to inaccurate data, which can easily mislead\
    \ decisions in commercial farms, leading\nto huge losses. Therefore, although\
    \ they have reached the commercial maturity, they still\nneed further development\
    \ to optimize their effectiveness in solving the identiﬁed problems\nand challenges.\
    \ Furthermore, considering that many studies are currently being undertaken\n\
    on this topic, it is also imperative to perform a similar mapping of the literature\
    \ every three\nyears to determine the current state of the art from time to time,\
    \ because technological\nadvancements are fast and imminent. Finally, more research\
    \ is needed on overcoming the\nchallenges of integrating AI applications into\
    \ farm input in the Global South, which must\ninclude solving the cost barriers\
    \ and knowledge and skills gaps.\nFunding: This research received no external\
    \ funding.\nConﬂicts of Interest: The author declares no conﬂict of interest.\n\
    Abbreviations\nAI\nArtiﬁcial intelligence\nAIAGS\nArtiﬁcial Intelligence Automated\
    \ Greenhouse System\nANFIS\nAdaptive neuro-fuzzy inference system\nANN\nArtiﬁcial\
    \ neural network\nCEA\nControlled environment agriculture\nCFD\nComputational\
    \ ﬂuid dynamics\nCNN\nConvolutional Neural Network\nDABACA\nDynamic Artiﬁcial\
    \ Bee-Ant Colon Algorithm\nDSS\nDecision support systems\nEA\nEvolutionary Algorithm\n\
    ERNN\nElman Recurrent Neural Network\nGA\nGenetic Algorithm\nGPS\nGeographic positioning\
    \ systems\nGVA\nGross value added\nIoT\nInternet of things\nIPM\nIntegrated pest\
    \ management\nITU\nInternational Telecommunication Union\nLIDAR\nLight imaging,\
    \ detection, and ranging\nLSTM\nLong short-term memory (LSTM) networks\nMAE\n\
    Mean of absolute value of errors\nAppl. Sci. 2023, 13, 14\n29 of 35\nML\nMachine\
    \ learning\nMPC\nModel predictive control\nPBM\nPrediction-based method\nPID\n\
    Proportional-integral-derivative\nPPFD\nPhotosynthetic photon ﬂux density\nPSO\n\
    Particle Swarm Optimization\nRFID\nRadiofrequency identiﬁcation\nRNN\nRecurrent\
    \ neural network\nRSCS\nRemote Sensing Assisted Control System\nRSME\nRelative\
    \ standard mean error\nS-DGPS\nSatellite-differential geographic positioning systems\n\
    SVM\nSupport-vector machines\nUAV\nUnmanned aerial vehicle\nVAR\nVariable rate\
    \ application\nWSAN\nWireless sensors and actuators networks\nWSN\nWireless sensor\
    \ network\nReferences\n1.\nRuan, J.; Hu, X.; Huo, X.; Shi, Y.; Chan, F.T.S.; Wang,\
    \ X.; Manogaran, G.; Mastorakis, G.; Mavromoustakis, C.X.; Zhao, X. An\nIoT-based\
    \ E-business model of intelligent vegetable greenhouses and its key operations\
    \ management issues. Neural Comput. Appl.\n2020, 32, 15341–15356. [CrossRef]\n\
    2.\nEwees, A.A.; Sahlol, A.T. Bio-Inspired Optimization Algorithms for Improving\
    \ Artiﬁcial Neural Networks: A Case Study on\nHandwritten Letter Recognition.\
    \ In Computational Linguistics, Speech and Image Processing for Arabic Language;\
    \ World Scientiﬁc:\nSingapore, 2017; Volume 4, pp. 249–266.\n3.\nJellason, N.P.;\
    \ Robinson, E.J.Z.; Ogbaga, C.C. Agriculture 4.0: Is sub-Saharan Africa ready?\
    \ Appl. Sci. 2021, 11, 5750. [CrossRef]\n4.\nEuropean Institute of Innovation\
    \ and Technology (EIT). Emerging AI and Data Driven Business Models in Europe;\
    \ European Institute\nof Innovation and Technology (EIT): Budapest, Hungary, 2021;\
    \ pp. 1–65.\n5.\nMunoz, J.M. AI in Agriculture: Is the Grass Greener? California\
    \ Management Review. 2020. Available online: https://cmr.\nberkeley.edu/2020/03/ai-agriculture/\
    \ (accessed on 25 June 2022).\n6.\nKarnawat, M.; Trivedi, S.K.; Nagar, R. Future\
    \ of AI in Agriculture. Biot. Res. Today 2020, 2, 927–929.\n7.\nCuffaro, N.; Prota,\
    \ L.; Bertini, R. Are Large-Scale Land Acquisitions in Africa Pro-development?\
    \ A Network Analysis of FDI in\nLand and Agro-industry BT—The Palgrave Handbook\
    \ of Africa’s Economic Sectors. In The Palgrave Handbook of Africa’s Economic\n\
    Sectors; Wamboye, E.F., Fayissa, B., Eds.; Springer International Publishing:\
    \ Cham, Switzerland, 2022; pp. 87–116.\n8.\nZha, J. Artiﬁcial Intelligence in\
    \ Agriculture. J. Phys. Conf. Ser. 2020, 22, 1693. [CrossRef]\n9.\nCama-pinto,\
    \ D.; Holgado-terriza, J.A.; Damas-hermoso, M.; Francisco, G.; Cama-pinto, A.\
    \ Radio Wave Attenuation Measurement\nSystem Based on RSSI for Precision Agriculture:\
    \ Application to Tomato Greenhouses. Inventions 2021, 6, 66. [CrossRef]\n10.\n\
    Iddio, E.; Wang, L.; Thomas, Y.; McMorrow, G.; Denzer, A. Energy efﬁcient operation\
    \ and modeling for greenhouses: A literature\nreview. Renew. Sustain. Energy Rev.\
    \ 2020, 117, 109480. [CrossRef]\n11.\nAfzali, S.; Mosharaﬁan, S.; van Iersel,\
    \ M.W.; Velni, J.M. Development and implementation of an IoT-enabled optimal and\n\
    predictive lighting control strategy in greenhouses. Plants 2021, 10, 2652. [CrossRef]\n\
    12.\nHaque, M.A.; Haque, S.; Sonal, D.; Kumar, K.; Shakeb, E. Security Enhancement\
    \ for IoT Enabled Agriculture. Mater. Today Proc.\n2021. [CrossRef]\n13.\nSenavirathne,\
    \ B.; Gunerathne, C.; Lanka, S.; Lanka, S. Greenhouse Automation with Artiﬁcial\
    \ Intelligence and Industry 4.0\nIntegration. In Proceedings of the 12th International\
    \ Research Conference 2019, KDU, Ratmalana, Sri Lanka, 11–12 September\n2020;\
    \ pp. 487–494.\n14.\nKarar, M.; Alsunaydi, F.; Albusaymi, S.; Alotaibi, S. A new\
    \ mobile application of agricultural pests recognition using deep\nlearning in\
    \ cloud computing system. Alexandria Eng. J. 2021, 60, 4423–4432. [CrossRef]\n\
    15.\nLakshmi, V.; Corbett, J. How Artiﬁcial Intelligence Improves Agricultural\
    \ Productivity and Sustainability: A Global Thematic\nAnalysis. Int. Conf. Syst.\
    \ Sci. 2020, 3, 5202–5211.\n16.\nKollia, I.; Stevenson, J.; Kollias, S. AI-Enabled\
    \ Efﬁcient and Safe Food Supply Chain. Electronics 2021, 10, 1223. [CrossRef]\n\
    17.\nZhang, S.; Guo, Y.; Zhao, H.; Wang, Y.; Chow, D. Methodologies of control\
    \ strategies for improving energy ef ﬁ ciency in\nagricultural greenhouses. J.\
    \ Clean. Prod. 2020, 274, 122695. [CrossRef]\n18.\nCao, X.; Yao, Y.; Li, L.; Zhang,\
    \ W.; An, Z.; Zhang, Z.; Xiao, L.; Guo, S.; Cao, X.; Wu, M.; et al. iGrow: A Smart\
    \ Agriculture Solution\nto Autonomous Greenhouse Control. Artif. Intell. 2022,\
    \ 36, 11837–11845. [CrossRef]\n19.\nPanaligan, N.A.P.; Aringo, M.Q.; Ella, V.B.\
    \ Assessment of potential for adoption of wireless sensor network technology for\n\
    irrigation water management of high value crops in the Philippines. IOP Conf.\
    \ Ser. Earth Environ. Sci. 2022, 1038, 012027.\n[CrossRef]\nAppl. Sci. 2023, 13,\
    \ 14\n30 of 35\n20.\nRokade, A.; Singh, M. Analysis of Precise Green House Management\
    \ System using Machine Learning based Internet of Things\n(IoT) for Smart Farming.\
    \ In Proceedings of the 2021 2nd International Conference on Smart Electronics\
    \ and Communication\n(ICOSEC), Trichy, India, 7–9 October 2021; pp. 21–28.\n21.\n\
    Bekiaris, I.; Leonidis, A.; Korozi, M.; Stratakis, C.; Zidianakis, E.; Doxastaki,\
    \ M.; Stephanidis, C. GRETA: Pervasive and AR\nInterfaces for Controlling Intelligent\
    \ Greenhouses. In Proceedings of the 2021 17th International Conference on Intelligent\n\
    Environments (IE), Dubai, United Arab Emirates, 21–24 June 2021.\n22.\nZhang,\
    \ W.; Cao, Y.; Yao, Y.; An, Z. Robust Model-based Reinforcement Learning for Autonomous\
    \ Greenhouse Control. In\nProceedings of the 13th Asian Conference on Machine\
    \ Learning, Virtually, 17–19 November 2021; Volume 157, pp. 1–16.\n23.\nMaraveas,\
    \ C.; Piromalis, D.; Arvanitis, K.G.; Bartzanas, T.; Loukatos, D. Applications\
    \ of IoT for optimized greenhouse environment\nand resources management. Comput.\
    \ Electron. Agric. 2022, 198, 106993. [CrossRef]\n24.\nGołasa, P.; Wysoki´nski,\
    \ M.; Bie´nkowska-Gołasa, W.; Gradziuk, P.; Golonko, M.; Gradziuk, B.; Siedlecka,\
    \ A.; Gromada, A. Sources\nof Greenhouse Gas Emissions in Agriculture, with Particular\
    \ Emphasis on Emissions from Energy Used. Energies 2021, 14, 3784.\n[CrossRef]\n\
    25.\nUNFCC. Climate Change Is an Increasing Threat to Africa. 2020. Available\
    \ online: https://unfccc.int/news/climate-change-is-\nan-increasing-threat-to-africa\
    \ (accessed on 26 July 2022).\n26.\nEuropean Commission—Joint Research Centre.\
    \ World Atlas of Desertiﬁcation—Rethinking Land Degradation and Sustain-\nable\
    \ Management. 2020. Available online: https://reliefweb.int/report/world/world-atlas-desertiﬁcation-rethinking-land-\n\
    degradation-and-sustainable-management (accessed on 26 July 2022).\n27.\nBurrell,\
    \ A.L.; Evans, J.P.; de Kauwe, M.G. Anthropogenic climate change has driven over\
    \ 5 million km2 of drylands towards\ndesertiﬁcation. Nat. Commun. 2020, 11, 3853.\
    \ [CrossRef]\n28.\nEuropean Commission. Desertiﬁcation and Agriculture; European\
    \ Commission: Brussels, Belgium, 2020; pp. 1–12.\n29.\nMikhailov, D.; Fedorov,\
    \ V.; Mitrokhin, M.; Pronichkin, A.K.; Soytong, K. Using artiﬁcial intelligence\
    \ systems for intensive safe\ncultivation of crops-short communication. Int. J.\
    \ Agric. Technol. 2021, 17, 987–990.\n30.\nWorld Economic Forum. Artiﬁcial Intelligence\
    \ for Agriculture Innovation; World Economic Forum: Cologny, Switzerland, 2021;\
    \ pp.\n1–32.\n31.\nLinaza, M.; Posada, J.; Bund, J.; Eisert, P.; Quartulli, M.;\
    \ Döllner, J.; Pagani, A.; Olaizola, I.G.; Barriguinha, A.; Moysiadis, T.; et\
    \ al.\nData-Driven Artiﬁcial Intelligence Applications for Sustainable Precision\
    \ Agriculture. Agronomy 2021, 11, 1227. [CrossRef]\n32.\nAmudha, T.; Thilagavathi,\
    \ N.; Sangeetha, A. A systematic study on bio-inspired frameworks for fertilizer\
    \ optimization. Int. J.\nAgric. Technol. 2021, 17, 1287–1304.\n33.\nRao, N.S.;\
    \ Soam, S.K.; Rao, C.S. Applications of Artiﬁcial Intelligence in Precision Agriculture.\
    \ Gravida Rev. J. 2021, 7, 174–177.\n34.\nRosenblatt, F. The Perceptron: A Probabilistic\
    \ Model for Information Storage and Organization in the Brain. Psychol. Rev. 1958,\
    \ 65,\n386–408. [CrossRef]\n35.\nAsteris, P.G.; Gavriilaki, E.; Touloumenidou,\
    \ T.; Koravou, E.-E.; Koutra, M.; Papayanni, P.G.; Pouleres, A.; Karali, V.; Lemonis,\n\
    M.E.; Mamou, A.; et al. Genetic prediction of ICU hospitalization and mortality\
    \ in COVID-19 patients using artiﬁcial neural\nnetworks. J. Cell. Mol. Med. 2022,\
    \ 26, 1445–1455. [CrossRef] [PubMed]\n36.\nRahimi, I.; Gandomi, A.H.; Asteris,\
    \ P.G.; Chen, F. Analysis and Prediction of COVID-19 Using SIR, SEIQR, and Machine\
    \ Learning\nModels: Australia, Italy, and UK Cases. Information 2021, 12, 109.\
    \ [CrossRef]\n37.\nMahanty, C.; Kumar, R.; Asteris, P.G.; Gandomi, A.H. COVID-19\
    \ Patient Detection Based on Fusion of Transfer Learning and\nFuzzy Ensemble Models\
    \ Using CXR Images. Appl. Sci. 2021, 11, 11423. [CrossRef]\n38.\nGavriilaki, E.;\
    \ Asteris, P.G.; Touloumenidou, T.; Koravou, E.-E.; Koutra, M.; Papayanni, P.G.;\
    \ Karali, V.; Papalexandri, A.; Varelas,\nC.; Chatzopoulou, F.; et al. Genetic\
    \ justiﬁcation of severe COVID-19 using a rigorous algorithm. Clin. Immunol. 2021,\
    \ 226, 108726.\n[CrossRef] [PubMed]\n39.\nAsteris, P.G.; Douvika, M.G.; Karamani,\
    \ C.A.; Skentou, A.D.; Chlichlia, K.; Cavaleri, L.; Daras, T.; Armaghani, D.J.;\
    \ Zaoutis, T.E. A\nNovel Heuristic Algorithm for the Modeling and Risk Assessment\
    \ of the COVID-19 Pandemic Phenomenon. Comput. Model. Eng.\nSci. 2020, 125, 815–828.\
    \ [CrossRef]\n40.\nLitjens, G.; Sánchez, C.I.; Timofeeva, N.; Hermsen, M.; Nagtegaal,\
    \ I.; Kovacs, I.; Hulsbergen-van de Kaa, C.; Bult, P.; Van Ginneken,\nB.; Van\
    \ Der Laak, J. Deep learning as a tool for increased accuracy and efﬁciency of\
    \ histopathological diagnosis. Sci. Rep. 2016, 6,\n26286. [CrossRef]\n41.\nTu,\
    \ J.V. Advantages and disadvantages of using artiﬁcial neural networks versus\
    \ logistic regression for predicting medical\noutcomes. J. Clin. Epidemiol. 1996,\
    \ 49, 1225–1231. [CrossRef]\n42.\nKononenko, I. Machine learning for medical diagnosis:\
    \ History, state of the art and perspective. Artif. Intell. Med. 2001, 23, 89–109.\n\
    [CrossRef]\n43.\nKalogirou, S.A. Applications of artiﬁcial neural-networks for\
    \ energy systems. Appl. Energy 2000, 67, 17–35. [CrossRef]\n44.\nGandomi, A.H.;\
    \ Yang, X.-S.; Alavi, A.H. Mixed variable structural optimization using Fireﬂy\
    \ Algorithm. Comput. Struct. 2011, 89,\n2325–2336. [CrossRef]\n45.\nHuang, J.;\
    \ Asteris, P.G.; Pasha, S.M.K.; Mohammed, A.S.; Hasanipanah, M. A new auto-tuning\
    \ model for predicting the rock\nfragmentation: A cat swarm optimization algorithm.\
    \ Eng. Comput. 2022, 38, 2209–2220. [CrossRef]\n46.\nYang, X.; Gandomi, A.H. Bat\
    \ algorithm: A novel approach for global engineering optimization. Eng. Comput.\
    \ 2012, 29, 464–483.\n[CrossRef]\nAppl. Sci. 2023, 13, 14\n31 of 35\n47.\nMirjalili,\
    \ S.; Mirjalili, S.M.; Lewis, A. Grey Wolf Optimizer. Adv. Eng. Softw. 2014, 69,\
    \ 46–61. [CrossRef]\n48.\nMirjalili, S.; Gandomi, A.H.; Mirjalili, S.Z.; Saremi,\
    \ S.; Faris, H.; Mirjalili, S.M. Salp Swarm Algorithm: A bio-inspired optimizer\n\
    for engineering design problems. Adv. Eng. Softw. 2017, 114, 163–191. [CrossRef]\n\
    49.\nCavaleri, L.; Chatzarakis, G.E.; Di Trapani, F.; Douvika, M.G.; Roinos, K.;\
    \ Vaxevanidis, N.M.; Asteris, P.G. Modeling of surface\nroughness in electro-discharge\
    \ machining using artiﬁcial neural networks. Adv. Mater. Res. 2017, 6, 169–184.\n\
    50.\nPsyllaki, P.; Stamatiou, K.; Iliadis, I.; Mourlas, A. Surface treatment of\
    \ tool steels against galling failure. MATEC Web Conf. 2018,\n188, 1–8. [CrossRef]\n\
    51.\nLu, S.; Koopialipoor, M.; Asteris, P.G.; Bahri, M.; Armaghani, D.J. A Novel\
    \ Feature Selection Approach Based on Tree Models for\nEvaluating the Punching\
    \ Shear Capacity of Steel Fiber-Reinforced Concrete Flat Slabs. Materials 2020,\
    \ 13, 3902. [CrossRef]\n52.\nHarandizadeh, H.; Armaghani, D.J.; Asteris, P.G.;\
    \ Gandomi, A.H. TBM Performance Prediction Developing a Hybrid ANFIS-PNN\nPredictive\
    \ Model Optimized by Imperialism Competitive Algorithm. Neural Comput. Appl. 2021,\
    \ 33, 16149–16179. [CrossRef]\n53.\nAbualigah, L.; Diabat, A.; Mirjalili, S.;\
    \ Elaziz, M.A.; Gandomi, A.H. The Arithmetic Optimization Algorithm. Comput. Methods\n\
    Appl. Mech. Eng. 2021, 376, 113609. [CrossRef]\n54.\nTaghizadeh-Mehrjardi, R.;\
    \ Emadi, M.; Cherati, A.; Heung, B.; Mosavi, A.; Scholten, T. Bio-inspired hybridization\
    \ of artiﬁcial\nneural networks: An application for mapping the spatial distribution\
    \ of soil texture fractions. Remote Sens. 2021, 13, 1025.\n[CrossRef]\n55.\nNguyen,\
    \ T.H.; Nguyen, L.V.; Jung, J.J.; Agbehadji, I.E.; Frimpong, S.O.; Millham, R.C.\
    \ Bio-inspired approaches for smart energy\nmanagement: State of the art and challenges.\
    \ Sustainability 2020, 12, 8495. [CrossRef]\n56.\nItano, M.K.; Omura, K.N.; Amazaki,\
    \ T.Y.; Wao, T.I.; Aitou, M.S. Internet of Plants (IoP) Empowers Bottom-up Innovations.\n\
    Environ. Control Biol. 2022, 60, 3–12.\n57.\nRustia, D.J.A.; Chiu, L.; Lu, C.;\
    \ Wu, Y.; Chen, S.; Chung, J.; Hsu, J.; Lin, T. Towards intelligent and integrated\
    \ pest management\nthrough an AIoT-based monitoring system. Pest Manag. Sci. 2022,\
    \ 78, 4288–4302. [CrossRef] [PubMed]\n58.\nSerale, G.; Gnoli, L.; Giraudo, E.;\
    \ Fabrizio, E. A Supervisory Control Strategy for Improving Energy Efﬁciency of\
    \ Artiﬁcial\nLighting Systems in Greenhouses. Energies 2021, 14, 202. [CrossRef]\n\
    59.\nEgorov, A.; Bubnov, A.; Pavluchenkova, L.; Partolina, A. Applying chemical\
    \ control to suppress liverwort (Marchantia polymorpha\nL.) and other mosses when\
    \ growing containerized seedlings of pine and spruce. Balt. For. 2021, 27, 114–120.\
    \ [CrossRef]\n60.\nRaatz, L.; Walzl, K.P.; Müller, M.E.H.; Scherber, C.; Joshi,\
    \ J. Who is the culprit: Is pest infestation responsible for crop yield losses\n\
    close to semi–natural habitats? Ecol. Evol. 2021, 11, 13232–13246. [CrossRef]\n\
    61.\nBeatriz, D.; Colomer, I.; Medina, P.; Vi, E. Compatibility of early natural\
    \ enemy introductions in commercial pepper and tomato\ngreenhouses with repeated\
    \ pesticide applications. Insect Sci. 2020, 27, 1111–1124.\n62.\nChlorpyrifos-Methyl.\
    \ National Library of Medicine. 2022. Available online: https://pubchem.ncbi.nlm.nih.gov/compound/\n\
    Chlorpyrifos-methyl (accessed on 1 August 2022).\n63.\nSharma, A.; Tripathi, P.\
    \ Artiﬁcial Intelligence in Agriculture: A Literature Survey. Int. J. All Res.\
    \ Educ. Sci. Methods 2021, 9,\n510–513.\n64.\nTang, J.; Liu, G.; Pan, Q. A Review\
    \ on Representative Swarm Intelligence Algorithms for Solving Optimization Problems:\n\
    Applications and Trends. IEEE/CAA J. Autom. Sin. 2021, 8, 1627–1643. [CrossRef]\n\
    65.\nMaraveas, C.; Loukatos, D.; Bartzanas, T.; Arvanitis, K.G. Applications of\
    \ artiﬁcial intelligence in ﬁre safety of agricultural\nstructures. Appl. Sci.\
    \ 2021, 11, 7716. [CrossRef]\n66.\nSolmaz, E.; Çevik, B.; Ay, R. Abamectin resistance\
    \ and resistance mechanisms in Tetranychus urticae populations from cut ﬂowers\n\
    greenhouses in Turkey. Int. J. Acarol. 2020, 46, 94–99. [CrossRef]\n67.\nEuropean\
    \ Social and Economic Committee. Boosting the Use of Artiﬁcial Intelligence in\
    \ Europe’s Micro, Small and Medium-Sized\nEnterprises; European Social and Economic\
    \ Committee: Brussels, Belgium, 2021; pp. 1–137.\n68.\nAggarwal, N.; Singh, D.\
    \ Technology assisted farming: Implications of IoT and AI. IOP Conf. Ser. Mater.\
    \ Sci. Eng. 2021, 1022,\n012080. [CrossRef]\n69.\nLoudjani, P.; Devos, W.; Baruth,\
    \ B.; Lemoine, G. Artiﬁcial Intelligence and EU Agriculture. Eur. Comm. Jt. Res.\
    \ Cent. 2020,\n1–28. Available online: https://marswiki.jrc.ec.europa.eu/wikicap/images/c/c8/JRC-Report_AIA_120221a.pdf\
    \ (accessed on 25\nAugust 2022).\n70.\nKendall, H.; Clark, B.; Li, W.; Jin, S.;\
    \ Jones, G.D.; Chen, J.; Taylor, J.; Li, Z.; Frewer, L.J. Precision Agriculture\
    \ Technology Adoption: A\nQualitative Study of Small-Scale Commercial “Family\
    \ Farms” Located in the North China Plain; Springer: New York, NY, USA, 2022;\n\
    Volume 23.\n71.\nMaloku, D. Adoption of Precision Farming Technologies: Usa and\
    \ Eu Situation. SEA Pract. Appl. Sci. 2020, VIII, 7–14.\n72.\nCisco and the International\
    \ Telecommunication Union (ITU). Harnessing the Internet of Things for Global\
    \ Development; Cisco and the\nInternational Telecommunication Union (ITU): Geneva,\
    \ Switzerland, 2015.\n73.\nChung, S. Survey of actuators for environment management\
    \ in Korean smart greenhouses. Precis. Agric. Sci. Technol. 2020, 2, 1–7.\n74.\n\
    Otazua, N.I. AI-Powered DSS for Resource-Efﬁcient Nutrient, Irrigation, and Microclimate\
    \ Management in Greenhouses. Chem.\nProc. 2022, 10, 63.\n75.\nCui, B.; Niu, W.;\
    \ Du, Y.; Zhang, Q. Response of yield and nitrogen use e fﬁciency to aerated irrigation\
    \ and N application rate in\ngreenhouse cucumber. Sci. Hortic. 2020, 265, 109220.\
    \ [CrossRef]\nAppl. Sci. 2023, 13, 14\n32 of 35\n76.\nLin, N.; Wang, X.; Zhang,\
    \ Y.; Hu, X.; Ruan, J. Fertigation management for sustainable precision agriculture\
    \ based on Internet of\nThings. J. Clean. Prod. 2020, 277, 124119. [CrossRef]\n\
    77.\nBriciu-Burghina, C.; Zhou, J.; Ali, M.I.; Regan, F. Demonstrating the Potential\
    \ of a Low-Cost Soil Moisture Sensor Network.\nSensors 2022, 22, 987. [CrossRef]\
    \ [PubMed]\n78.\nShamshiri, R.R.; Balasundram, S.K.; Rad, A.K.; Sultan, M.; Hameed,\
    \ I.A. An Overview of Soil Moisture and Salinity Sensors for\nDigital Agriculture\
    \ Applications. In Digital Agriculture, Methods and Applications; IntechOpen:\
    \ London, UK, 2022.\n79.\nSharma, S.; Kaur, G.; Singh, P.; Alamri, S.; Kumar,\
    \ R.; Siddiqui, M.H. Nitrogen and potassium application effects on productivity,\n\
    proﬁtability and nutrient use efﬁciency of irrigated wheat (Triticum aestivum\
    \ L.). PLoS ONE 2022, 17, e0264210. [CrossRef]\n[PubMed]\n80.\nFacchinetti, D.;\
    \ Santoro, S.; Galli, L.; Fontana, G.; Fedeli, L.; Parisi, S.; Bonacchi, L.; Šušnjar,\
    \ S.; Salvai, F.; Coppola, G.; et al.\nReduction of Pesticide Use in Fresh-Cut\
    \ Salad Production through Artiﬁcial Intelligence. Appl. Sci. 2021, 11, 1992.\
    \ [CrossRef]\n81.\nClaver, H. AI Precision Spraying Technology to Cut Herbicide\
    \ Use by 78%. Future Farming. 2020. Available online: https://www.\nfuturefarming.com/crop-solutions/weed-pest-control/ai-precision-spraying-technology-to-cut-herbicide-use-by-78/\
    \ (accessed\non 12 September 2022).\n82.\nShankar, P.; Werner, N.; Selinger, S.;\
    \ Janssen, O. Artiﬁcial Intelligence Driven Crop Protection Optimization for Sustainable\n\
    Agriculture. In Proceedings of the IEEE ITU International Conference on Artiﬁcial\
    \ Intelligence for Good (AI4G), Geneva,\nSwitzerland, 21–25 September 2020; pp.\
    \ 1–8.\n83.\nAraújo, M. Infrastructure Deployment in Unproﬁtable Areas: A Techno-Economic\
    \ Model for Multiple Criteria Decision Analysis under the\nEuropean Union Telecommunications\
    \ Regulatory Framework; Stock University: Galloway, NJ, USA, 2020; p. 74.\n84.\n\
    Placidi, P.; Morbidelli, R.; Fortunati, D.; Papini, N.; Gobbi, F.; Scorzoni, A.\
    \ Monitoring soil and ambient parameters in the iot\nprecision agriculture scenario:\
    \ An original modeling approach dedicated to low-cost soil water content sensors.\
    \ Sensors 2021, 21,\n5110. [CrossRef]\n85.\nLiu, L.W.; Ma, X.; Wang, Y.M.; Lu,\
    \ C.T.; Lin, W.S. Using artiﬁcial intelligence algorithms to predict rice (Oryza\
    \ sativa L.) growth\nrate for precision agriculture. Comput. Electron. Agric.\
    \ 2021, 187, 106286. [CrossRef]\n86.\nSingh, K.U.; Kumar, A.; Raja, L.; Kumar,\
    \ V.; Kushwaha, A.K.S.; Vashney, N.; Chhetri, M. An Artiﬁcial Neural Network-Based\
    \ Pest\nIdentiﬁcation and Control in Smart Agriculture Using Wireless Sensor Networks.\
    \ J. Food Qual. 2022, 2022, 5801206. [CrossRef]\n87.\nSingh, R.K.; Berkvens, R.;\
    \ Weyn, M. Energy efﬁcient wireless communication for IoT enabled Greenhouses.\
    \ In Proceedings of the\n2020 International Conference on COMmunication Systems\
    \ & NETworkS (COMSNETS), Bengaluru, India, 7–11 January 2020; pp.\n885–887.\n\
    88.\nSacaleanu, D.; Rosu, S.-G.; Matache, M.-G.; Manciu, I.-P.; Perisoara, L.-A.\
    \ Wireless actuator node for greenhouse microclimate\ncontrol. In Proceedings\
    \ of the 2022 14th International Conference on Electronics, Computers and Artiﬁcial\
    \ Intelligence (ECAI),\nPloiesti, Romania, 30 June–1 July 2022; pp. 1–4.\n89.\n\
    Qiang, W. Research on data transmission model of agricultural wireless sensor\
    \ network based on game theory. Acta Agric. Scand.\nSect. B Soil Plant Sci. 2022,\
    \ 72, 67–80. [CrossRef]\n90.\nGrum, M. Humans Still Crucial as AI Image Analysis\
    \ for Crop Pest and Disease Management Has a Long Way to Go; Scarab-Solutions,\n\
    2022; pp. 1–2. Available online: https://www.scarab-solutions.com/humans-still-crucial-as-ai-image-analysis-for-crop-pest-\n\
    and-disease-management-has-a-long-way-to-go (accessed on 30 November 2022).\n\
    91.\nKootstra, G.; Wang, X.; Blok, P.M.; Hemming, J.; van Henten, E. Selective\
    \ Harvesting Robotics: Current Research, Trends, and\nFuture Directions. Curr.\
    \ Robot. Rep. 2021, 2, 95–104. [CrossRef]\n92.\nLee, J.; Nazki, H.; Baek, J.;\
    \ Hong, Y.; Lee, M. Artiﬁcial Intelligence Approach for Tomato Detection and Mass\
    \ Estimation in\nPrecision Agriculture. Sustainability 2020, 12, 9138. [CrossRef]\n\
    93.\nVidwath, S.M.G.; Rohith, P.; Dikshithaa, R.; Suraj, N.N.; Chittawadigi, R.G.;\
    \ Sambandham, M. Soft Robotic Gripper for Agricul-\ntural Harvesting BT. In Machines,\
    \ Mechanism and Robotics; Springer: Berlin, Germany, 2022; pp. 1347–1353.\n94.\n\
    Navas, E.; Fernández, R.; Sepúlveda, D.; Armada, M.; Gonzalez-De-santos, P. Soft\
    \ grippers for automatic crop harvesting: A\nreview. Sensors 2021, 21, 2689. [CrossRef]\n\
    95.\nTianhua, L.; Ni, Z.; Shi, G.; Zhou, J. Design and Testing of an Inter-row\
    \ Sprayer in a Chinese Solar Greenhouse. J. Eng. Sci. Technol.\nRev. 2020, 13,\
    \ 32–41.\n96.\nHomayoonzadeh, M.; Ghamari, M.; Torabi, E.; Talebi, K.; Nozari,\
    \ J. A Novel Biopesticide Formulation for Organic Management\nof Aphis gossypii.\
    \ In Proceedings of the First International Online Conference on Agriculture—Advances\
    \ in Agricultural Science\nand Technology, Basel, Switzerland, 10–15 February\
    \ 2022; Volume 4, pp. 1–4.\n97.\nHou, J.; Zhang, J.; Wu, W.; Jin, T.; Zhou, K.\
    \ Research on Agricultural Machinery Rental Optimization Based on the Dynamic\n\
    Artiﬁcial Bee-Ant Colony Algorithm. Algorithms 2022, 15, 88. [CrossRef]\n98.\n\
    Cao, R.; Li, S.; Ji, Y.; Zhang, Z.; Xu, H.; Zhang, M.; Li, M.; Li, H. Task assignment\
    \ of multiple agricultural machinery cooperation\nbased on improved ant colony\
    \ algorithm. Comput. Electron. Agric. 2021, 182, 105993. [CrossRef]\n99.\nHuang,\
    \ Y. Research status and applications of nature-inspired algorithms for agri-food\
    \ production. Int. J. Agric. Biol. Eng. 2020,\n13, 1–9. [CrossRef]\n100. Roy,\
    \ D.K.; Lal, A.; Sarker, K.K.; Saha, K.K.; Datta, B. Optimization algorithms as\
    \ training approaches for prediction of reference\nevapotranspiration using adaptive\
    \ neuro fuzzy inference system. Agric. Water Manag. 2021, 255, 107003. [CrossRef]\n\
    Appl. Sci. 2023, 13, 14\n33 of 35\n101. Proietti, M.; Bianchi, F.; Marini, A.;\
    \ Menculini, L.; Termite, L.; Garinei, A.; Biondi, L.; Marconi, M. Edge Intelligence\
    \ with Deep\nLearning in Greenhouse Management. In Proceedings of the 10th International\
    \ Conference on Smart Cities and Green ICT\nSystems, Online, 28–30 April 2021;\
    \ pp. 180–187.\n102. Gao, L.; Gong, D.; Cui, N.; Lv, M. Evaluation of bio-inspired\
    \ optimization algorithms hybrid with artiﬁcial neural network for\nreference\
    \ crop evapotranspiration estimation. Comput. Electron. Agric. 2021, 190, 106466.\
    \ [CrossRef]\n103. Hu, P.; Sun, Y.; Zhang, Y.; Dong, J.; Zhang, X. Application\
    \ of WDNN for Photosynthetic Rate Prediction in Greenhouse. In\nProceedings of\
    \ the 2021 IEEE 2nd International Conference on Big Data, Artiﬁcial Intelligence\
    \ and Internet of Things Engineering\n(ICBAIE), Nanchang, China, 26–28 March 2021.\n\
    104. Tao, T.; Wei, X. A hybrid CNN-SVM classiﬁer for weed recognition in winter\
    \ rape ﬁeld. Plant Methods 2022, 18, 29. [CrossRef]\n105. Qasim, W.A.; Mitras,\
    \ B.A. A Hybrid Algorithm Based on Invasive Weed Optimization Algorithm and Grey\
    \ Wolf Optimization\nAlgorithm. Int. J. Artif. Intell. Appl. 2020, 11, 30–44.\n\
    106. Emamgholizadeh, S.; Mohammadi, B. New hybrid nature-based algorithm to integration\
    \ support vector machine for prediction\nof soil cation exchange capacity. Soft\
    \ Comput. 2021, 25, 13451–13464. [CrossRef]\n107. Codeluppi, G.; Davoli, L.; Ferrari,\
    \ G. Forecasting Air Temperature on Edge Devices with. Sensors 2021, 21, 3973.\
    \ [CrossRef]\n108. Ibrahim, A.; Anayi, F.; Packianather, M.; Alomari, O.A. New\
    \ Hybrid Invasive Weed Optimization and Machine Learning\nApproach for Fault Detection.\
    \ Energies 2022, 15, 1488. [CrossRef]\n109. Wu, L.; Zhou, H.; Ma, X.; Fan, J.;\
    \ Zhang, F. Daily reference evapotranspiration prediction based on hybridized\
    \ extreme learning\nmachine model with bio-inspired optimization algorithms: Application\
    \ in contrasting climates of China. J. Hydrol. 2019, 577,\n123960. [CrossRef]\n\
    110. Chahidi, L.O.; Fossa, M.; Priarone, A.; Mechaqrane, A. Evaluation of Supervised\
    \ Learning Models in Predicting Greenhouse\nEnergy Demand and Production for Intelligent\
    \ and Sustainable Operations. Energies 2021, 14, 6297. [CrossRef]\n111. Liu, K.;\
    \ Zhang, C.; Yang, X.; Diao, M.; Liu, H.; Li, M. Development of an Occurrence\
    \ Prediction Model for Cucumber Downy\nMildew in Solar Greenhouses Based on Long\
    \ Short-Term Memory Neural Network. Agronomy 2022, 12, 442. [CrossRef]\n112. Han,\
    \ G.D.; Choi, J.M.; Choi, I.; Kim, Y.; Heo, S.; Chung, Y.S. From crop speciﬁc\
    \ to variety speciﬁc in crop modeling for the smart\nfarm: A case study with blueberry.\
    \ PLoS ONE 2022, 17, e0273845. [CrossRef]\n113. Abdulridha, J.; Ampatzidis, Y.;\
    \ Roberts, P. Detecting powdery mildew disease in squash at different stages using\
    \ UAV-based\nhyperspectral imaging and artiﬁcial intelligence. Biosyst. Eng. 2020,\
    \ 197, 135–148. [CrossRef]\n114. Pane, C.; Manganiello, G.; Nicastro, N.; Cardi,\
    \ T. Powdery Mildew Caused by Erysiphe cruciferarum on Wild Rocket (Diplotaxis\n\
    tenuifolia): Hyperspectral Imaging and Machine Learning Modeling for Non-Destructive\
    \ Disease Detection. Agriculture 2021, 11,\n337. [CrossRef]\n115. Ni, L.; Punja,\
    \ Z.K. Management of powdery mildew on greenhouse cucumber (Cucumis sativus L.)\
    \ plants using biological and\nchemical approaches. Can. J. Plant Pathol. 2021,\
    \ 43, 35–42. [CrossRef]\n116. el Arnaouty, S.A.; Aﬁﬁ, A.I.; Heikal, I.H.; Kortam,\
    \ M.N. Comparative study between biological and chemical control programs of\n\
    certain sweet pepper pests in greenhouses. Egypt. J. Biol. Pest Control 2020,\
    \ 30, 28–34. [CrossRef]\n117. Glinushkin, A.P.; Yakovleva, I.N.; Meshkov, Y.I.\
    \ Toxicity Pesticides used in Greenhouses and Promising for Predatory Mite\nNeoseiulus\
    \ Barkeri (Mesostigmata: Phytoseiidae). J. Phys. Conf. Ser. 2021, 1942, 012071.\
    \ [CrossRef]\n118. Kirisik, M.; Dagli, F. Resistance To Bifenazate And Abamectin\
    \ In Tetranychus Urticae (Acari:Tetranycidae) Greenhouse Populations\nCollected\
    \ From Coastal Regions of Turkey in 2016. Fresenius Environ. Bull. 2022, 30, 7672–7679.\n\
    119. Alpkent, Y.N.; Inak, E.; Ulusoy, S.; Ay, R. Acaricide resistance and mechanisms\
    \ in Tetranychus urticae populations from\ngreenhouses in Turkey. Syst. Appl.\
    \ Acarol. 2020, 25, 155–168.\n120. Eurostats. 346,000 Tonnes of Pesticides Sold\
    \ in 2020 in the EU. 2022. Available online: https://ec.europa.eu/eurostat/web/\n\
    products-eurostat-news/-/ddn-20220502-1 (accessed on 21 October 2022).\n121. Liu,\
    \ Z.; Gao, Z.; Geng, X.; Wen, L.; Kiprop, E. Risk aversion, marketing outlets,\
    \ and biological control practice adoption: Insight\nfrom pear farmers in China.\
    \ Environ. Sci. Pollut. Res. 2022, 29, 84798–84813. [CrossRef] [PubMed]\n122.\
    \ Helepciuc, F.-E.; Todor, A. Evaluating the effectiveness of the EU’s approach\
    \ to the sustainable use of pesticides. PLoS ONE 2021,\n16, e0256719. [CrossRef]\
    \ [PubMed]\n123. Australian Government. Bugs for Bugs—Creating Biological Alternatives\
    \ to Chemical Pesticides. 2022. Available online:\nhttps://business.gov.au/grants-and-programs/research-and-development-tax-incentive/how-the-rdti-has-helped-other-\n\
    companies/bugs-for-bugs (accessed on 22 October 2022).\n124. Jacquet, F.; Jeuffroy,\
    \ M.-H.; Jouan, J.; Le Cadre, E.; Litrico, I.; Malausa, T.; Reboud, X.; Huyghe,\
    \ C. Pesticide-free agriculture as a\nnew paradigm for research. Agron. Sustain.\
    \ Dev. 2022, 42, 8. [CrossRef]\n125. Thomine, E.; Mumford, J.; Rusch, A.; Desneux,\
    \ N. Using crop diversity to lower pesticide use: Socio-ecological approaches.\
    \ Sci.\nTotal Environ. 2022, 804, 150156. [CrossRef]\n126. Neumeister, L. Locked-in\
    \ Pesticides. The European Union’s Dependency on Harmful Pesticides and How to\
    \ Overcome It; Food Watch,\n2022; pp. 1–116. Available online: https://www.foodwatch.org/en/reports/2022/locked-in-pesticides-europes-dependency-on-\n\
    harmful-pesticides-and-how-to-overcome-it/?cookieLevel=not-set (accessed on 12\
    \ November 2022).\n127. European Commission. Farm to Fork: New Rules to Reduce\
    \ the Risk and Use of Pesticides in the EU. 2022. Available online:\nhttps://ec.europa.eu/commission/presscorner/detail/en/qanda_22_3694\
    \ (accessed on 12 November 2022).\nAppl. Sci. 2023, 13, 14\n34 of 35\n128. Agarwal,\
    \ M.; Verma, A. Modern Technologies for Pest Control: A Review. In Heavy Metals—Their\
    \ Environmental Impacts and\nMitigation; Intechopen: London, UK, 2021.\n129. Ayano˘glu,\
    \ F.B.; Elçin, A.E.; Elçin, Y.M. Bioethical issues in genome editing by CRISPR-Cas9\
    \ technology. Turkish J. Biol. = Turk\nBiyol. Derg. 2020, 44, 110–120. [CrossRef]\n\
    130. Deere, J. John Deere Reveals Fully Autonomous Tractor at CES 2022. 2022.\
    \ Available online: https://www.deere.com/en/news/\nall-news/autonomous-tractor-reveal/\
    \ (accessed on 11 November 2022).\n131. Beloev, I.; Kinaneva, D.; Georgiev, G.;\
    \ Hristov, G.; Zahariev, P. Artiﬁcial intelligence-driven autonomous robot for\
    \ precision\nagriculture. Acta Technol. Agric. 2021, 24, 48–54. [CrossRef]\n132.\
    \ Rahmadian, R.; Widyartono, M. Autonomous Robotic in Agriculture: A Review. In\
    \ Proceedings of the 2020 Third International\nConference on Vocational Education\
    \ and Electrical Engineering, Surabaya, Indonesia, 3–4 October 2020; pp. 1–6.\n\
    133. Aghelpour, P.; Bahrami-Pichaghchi, H.; Kisi, O. Comparison of three different\
    \ bio-inspired algorithms to improve ability of neuro\nfuzzy approach in prediction\
    \ of agricultural drought, based on three different indexes. Comput. Electron.\
    \ Agric. 2020, 170, 105279.\n[CrossRef]\n134. Soheli, S.J.; Jahan, N.; Hossain,\
    \ M.; Adhikary, A.; Khan, D.M.A.; Wahiduzzaman, M. Smart Greenhouse Monitoring\
    \ System Using\nInternet of Things and Artiﬁcial Intelligence. Wirel. Pers. Commun.\
    \ 2022, 124, 3603–3634. [CrossRef]\n135. Salam, A.; Javaid, Q. Bio-inspired cluster-based\
    \ optimal target identiﬁcation using multiple unmanned aerial vehicles in smart\n\
    precision agriculture. Int. J. Distrib. Sens. Netw. 2021, 17, 1–17. [CrossRef]\n\
    136. Howard, D.A.; Ma, Z.; Veje, C.; Clausen, A.; Aaslyng, J.M.; Jørgensen, B.N.\
    \ Greenhouse industry 4.0—Digital twin technology for\ncommercial greenhouses.\
    \ Energy Inform. 2021, 4, 37. [CrossRef]\n137. Jiang, X.; Liu, B.; Guan, X.; Wang,\
    \ Z.; Wang, B.; Zhao, S.; Song, Y.; Zhao, Y.; Bi, J. Proper deﬁcit irrigation\
    \ applied at various\nstages of growth can maintain yield and improve the comprehensive\
    \ fruit quality and economic return of table grapes grown in\ngreenhouses*. Irrig.\
    \ Drain. 2021, 70, 1056–1072. [CrossRef]\n138. Bersani, C.; Ouammi, A.; Sacile,\
    \ R.; Zero, E. Model Predictive Control of Smart Greenhouses as the Path towards\
    \ Near Zero\nEnergy Consumption. Energies 2020, 13, 3647. [CrossRef]\n139. Ben,\
    \ R.; Bouadila, S.; Mami, A. Experimental validation of the dynamic thermal behavior\
    \ of two types of agricultural greenhouses\nin the Mediterranean context. Renew.\
    \ Energy 2020, 147, 118–129. [CrossRef]\n140. Achour, Y.; Ouammi, A.; Zejli, D.\
    \ Technological progresses in modern sustainable greenhouses cultivation as the\
    \ path towards\nprecision agriculture. Renew. Sustain. Energy Rev. 2021, 147,\
    \ 111251. [CrossRef]\n141. Ullah, I.; Fayaz, M.; Aman, M.; Kim, D. An optimization\
    \ scheme for IoT based smart greenhouse climate control with efﬁcient\nenergy\
    \ consumption. Computing 2022, 104, 433–457. [CrossRef]\n142. Zhang, K.; Yu, J.;\
    \ Ren, Y. Demand side management of energy consumption in a photovoltaic integrated\
    \ greenhouse. Int. J. Electr.\nPower Energy Syst. 2022, 134, 107433. [CrossRef]\n\
    143. Jia, W.; Liu, M.; Zhou, J. Adaptive Chaotic Ant Colony Optimization for Energy\
    \ Optimization in Smart Sensor Networks. J. Sens.\n2021, 2021, 5051863. [CrossRef]\n\
    144. Chen, J.; Cai, Y.; Xu, F.; Hu, H.; Ai, Q. Analysis and Optimization of the\
    \ Fan-Pad Evaporative Cooling System for Greenhouse\nBased on CFD. Adv. Mech.\
    \ Eng. 2014, 2014, 1–8. [CrossRef]\n145. Rasakhodzhaev, B.S.; Akhmadjanov, U.Z.;\
    \ Boboeva, M.O.; Mashrapova, I.R.; Tokonova, T.S. Investigation of solar greenhouses\n\
    with transformable (adjustable) body depending on indoor and outdoor air temperature.\
    \ IOP Conf. Ser. Earth Environ. Sci. 2022,\n1070, 012030. [CrossRef]\n146. Khalilpourazari,\
    \ S.; Khalilpourazary, S.; Özyüksel, A.; Weber, G.; Weber, G. Designing Energy-Efﬁcient\
    \ High-Precision Multi-pass\nTurning Processes via Robust Optimization and Artiﬁcial\
    \ Intelligence. J. Intell. Manuf. 2021, 32, 1621–1647. [CrossRef]\n147. An, Z.;\
    \ Cao, X.; Yao, Y.; Zhang, W.; Li, L.; Wang, Y.; Guo, S.; Luo, D. A Simulator-based\
    \ Planning Framework for Optimizing\nAutonomous Greenhouse Control Strategy. In\
    \ Proceedings of the Thirty-First International Conference on Automated Planning\n\
    and Scheduling, Guangzhou, China, 2–13 August 2021.\n148. Bersani, C.; Ruggiero,\
    \ C.; Sacile, R.; Soussi, A.; Zero, E. Internet of Things Approaches for Monitoring\
    \ and Control of Smart\nGreenhouses in Industry 4.0. Energies 2022, 15, 3834.\
    \ [CrossRef]\n149. Chen, C.; Huang, Y.; Li, Y.; Chang, C.; Huang, Y. An AIoT Based\
    \ Smart Agricultural System for Pests Detection. IEEE Access 2020,\n8, 180750–180761.\
    \ [CrossRef]\n150. Henningsson, A. Survey of the Application of Machine Learning\
    \ to Automated Greenhouses; Uppsala University: Uppsala, Sweden,\n2021; pp. 1–43.\n\
    151. Siskandar, R.; Santosa, S.H.; Wiyoto, W.; Kusumah, B.R.; Hidayat, A.P. Control\
    \ and Automation: Insmoaf (Integrated Smart\nModern Agriculture and Fisheries)\
    \ on The Greenhouse Model. J. Ilmu Pertan. Indones. 2022, 27, 141–152. [CrossRef]\n\
    152. Mu, M.; Zhang, S.; Yang, S.; Wang, Y. Phase change materials applied in agricultural\
    \ greenhouses. J. Energy Storage 2022, 49,\n104100. [CrossRef]\n153. Elsayed,\
    \ M.; Ran, Y.; Ai, P.; Azab, M.; Mansour, A.; Jin, K.; Zhang, Y.; Abomohra, A.E.-F.\
    \ Innovative integrated approach of\nbiofuel production from agricultural wastes\
    \ by anaerobic digestion and black soldier ﬂy larvae. J. Clean. Prod. 2020, 263,\
    \ 121495.\n[CrossRef]\n154. Kong, Q.; Mu, H.; Han, Y.; Wu, W.; Tong, C.; Fang,\
    \ X.; Liu, R.; Chen, H.; Gao, H. Biodegradable phase change materials with high\n\
    latent heat: Preparation and application on Lentinus edodes storage. Food Chem.\
    \ 2021, 364, 130391. [CrossRef]\nAppl. Sci. 2023, 13, 14\n35 of 35\n155. Siti,\
    \ G.; Abdul, A.; Shima, J.S.; Zainal, A.S. Waste materials as the potential phase\
    \ change material substitute in thermal energy\nstorage system: A review. Chem.\
    \ Eng. Commun. 2020, 208, 687–707.\n156. Aira, J.R.; Gallardo-Saavedra, S.; Eugenio-Gozalbo,\
    \ M.; Alonso-Gómez, V.; Muñoz-García, M.Á.; Hernández-Callejo, L. Analysis\nof\
    \ the viability of a photovoltaic greenhouse with semi-transparent amorphous silicon\
    \ (A-si) glass. Agronomy 2021, 11, 1097.\n[CrossRef]\n157. Varjovi, A.E.; Babaie,\
    \ S. Green Internet of Things (GIoT): Vision, applications and research challenges.\
    \ Sustain. Comput. Inform.\nSyst. 2020, 28, 100448. [CrossRef]\n158. Al-helal,\
    \ I.; Alsadon, A.; Marey, S.; Ibrahim, A.; Shady, M.; Abdel-ghany, A. Geothermal\
    \ Energy Potential for Cooling / Heating\nGreenhouses in Hot Arid Regions. Atmosphere\
    \ 2022, 13, 105. [CrossRef]\n159. Mirzamohammadi, S.; Jabarzadeh, A.; Shahrabi,\
    \ M.S. Long-term planning of supplying energy for greenhouses using renewable\n\
    resources under uncertainty. J. Clean. Prod. 2020, 264, 121611. [CrossRef]\n160.\
    \ University of Georgia. ‘Smart’ Greenhouses Could Slash Electricity Costs. 2022.\
    \ Available online: https://www.sciencedaily.\ncom/releases/2022/02/220202165939.htm\
    \ (accessed on 14 September 2022).\n161. Mohr, S.; Kühl, R. Acceptance of artiﬁcial\
    \ intelligence in German agriculture: An application of the technology acceptance\
    \ model\nand the theory of planned behavior. Precis. Agric. 2021, 22, 1816–1844.\
    \ [CrossRef]\n162. Fernando, S.; Nethmi, R.; Silva, A.; Perera, A.; De Silva,\
    \ R.; Abeygunawardhana, P.W.K. AI Based Greenhouse Farming Support\nSystem with\
    \ Robotic Monitoring. In Proceedings of the 2020 IEEE Region 10 Conference (TENCON),\
    \ Osaka, Japan, 16–19\nNovember 2020; pp. 1368–1373.\n163. Yaqot, M.; Meneze,\
    \ B.C. Unmanned Aerial Vehicle (UAV) in Precision Agriculture: Business Information\
    \ Technology Towards\nFarming as a Service. In Proceedings of the 2021 1st International\
    \ Conference on Emerging Smart Technologies and Applications\n(eSmarTA), Sana’a,\
    \ Yemen, 10–12 August 2021; pp. 1–7.\n164. Saddik, A.; Latif, R.; el Ouardi, A.;\
    \ Elhoseny, M. Computer development based embedded systems in precision agriculture:\
    \ Tools\nand application. Acta Agric. Scand. Sect. B—Soil Plant Sci. 2022, 72,\
    \ 586–611. [CrossRef]\n165. Yun, W.; Kumar, J.P.; Lee, S.; Kim, D.S.; Cho, B.K.\
    \ Deep learning-based system development for black pine bast scale detection.\n\
    Sci. Rep. 2022, 12, 606. [CrossRef]\n166. Nanni, L.; Maguolo, G.; Pancino, F.\
    \ Insect pest image detection and recognition based on bio-inspired methods. Ecol.\
    \ Inform. 2020,\n57, 101089. [CrossRef]\n167. Xasanov, S. Analysis of Methods\
    \ for Detecting Phytophthora, Mildew Diseases of Tomatoes and Cucumbers in Greenhouses.\n\
    EPRA Int. J. Clim. Resour. Econ. Rev. 2021, 9, fnz199.\n168. Ruzzante, S.; Labarta,\
    \ R.; Bilton, A. Adoption of agricultural technology in the developing world:\
    \ A meta-analysis of the empirical\nliterature. World Dev. 2021, 146, 105599.\
    \ [CrossRef]\n169. Kondoyanni, M.; Loukatos, D.; Maraveas, C.; Drosos, C.; Arvanitis,\
    \ K.G. Bio-Inspired Robots and Structures toward Fostering the\nModernization\
    \ of Agriculture. Biomimetics 2022, 7, 69. [CrossRef]\n170. Aytenfsu, S.A.; Beyene,\
    \ A.M.; Getaneh, T.H. Controlling the interior of greenhouses using Elman recurrent\
    \ neural network. In\nProceedings of the 2020 Fourth World Conference on Smart\
    \ Trends in Systems, Security and Sustainability (WorldS4), London,\nUK, 27–28\
    \ July 2020; pp. 32–39.\n171. Cai, B.; Ning, Y.; Li, Q.; Li, Q.; Ai, X. Effects\
    \ of the Chloroplast Fructose-1, 6-Bisphosphate Aldolase Gene on Growth and\n\
    Low-Temperature Tolerance of Tomato. Int. J. Mol. Sci. 2022, 23, 728. [CrossRef]\
    \ [PubMed]\n172. Zamora-Izquierdo, M.A.; Martı, J.A.; Skarmeta, A.F. Intelligent\
    \ Systems for Environmental Applications Smart farming IoT\nplatform based on\
    \ edge and cloud computing. Biosyst. Eng. 2018, 177, 4–17. [CrossRef]\n173. Jim,\
    \ R.; Aguilar, F.J.; Nemmaoui, A.; Aguilar, M.A. Remote Sensing of Agricultural\
    \ Greenhouses and Plastic-Mulched Farmland:\nAn Analysis of Worldwide Research.\
    \ Remote Sens. 2020, 12, 2649.\n174. Hasituya; Zhongxin, C.; Fei, L.; Yuncai,\
    \ H. Mapping plastic-mulched farmland by coupling optical and synthetic aperture\
    \ radar\nremote sensing. Int. J. Remote Sens. 2020, 41, 7757–7778. [CrossRef]\n\
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all\
    \ publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: '>'
  journal: Applied sciences (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2076-3417/13/1/14/pdf?version=1672140455
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Incorporating Artificial Intelligence Technology in Smart Greenhouses: Current
    State of the Art'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/3474552
  analysis: '>'
  authors:
  - RanaweeraPasika
  - JurcutAnca
  - Madhusanka Liyanage
  citation_count: 35
  full_citation: '>'
  full_text: '>

    186

    MEC-enabled 5G Use Cases: A Survey on Security

    Vulnerabilities and Countermeasures

    PASIKA RANAWEERA and ANCA JURCUT, University College Dublin, Ireland

    MADHUSANKA LIYANAGE, University College Dublin, Ireland and University of Oulu,
    Finland

    The future of mobile and internet technologies are manifesting advancements beyond
    the existing scope

    of science. The concepts of automated driving, augmented-reality, and machine-type-communication

    are quite sophisticated and require an elevation of the current mobile infrastructure
    for launching. The

    fifth-generation (5G) mobile technology serves as the solution, though it lacks
    a proximate networking

    infrastructure to satisfy the service guarantees. Multi-access Edge Computing
    (MEC) envisages such an

    edge computing platform. In this survey, we are revealing security vulnerabilities
    of key 5G-based use cases

    deployed in the MEC context. Probable security flows of each case are specified,
    while countermeasures are

    proposed for mitigating them.

    CCS Concepts: •

    Human-centered computing → Ubiquitous and mobile computing; •

    Security

    and privacy; • General and reference → Surveys and overviews; • Computer systems
    organization

    → Cloud computing;

    Additional Key Words and Phrases: 5G, use cases, MEC, security, ITS, V2E, AR,
    VR, UAV, mMTC, eMBB

    ACM Reference format:

    Pasika Ranaweera, Anca Jurcut, and Madhusanka Liyanage. 2021. MEC-enabled 5G Use
    Cases: A Survey on

    Security Vulnerabilities and Countermeasures. ACM Comput. Surv. 54, 9, Article
    186 (October 2021), 37 pages.

    https://doi.org/10.1145/3474552

    1

    INTRODUCTION

    Moore’s Law suggests the processor speed is exponentially incrementing over time
    [12, 87]. Hence,

    the number of Internet of Things (IoT) devices employed at industries serving
    Big Data applica-

    tions are thriving with the possibility of proliferated processing capability
    in miniaturized devices.

    Moreover, improved smart device usage literacy of general public in modern era
    are enabling the

    social internet platforms to launch cumbersome bandwidth consuming applications
    for elevating

    their subscriptions with immersive Quality of Service (QoS). It is estimated that
    the number of

    mobile terminals are reaching 2.8 billion by 2019 and monthly mobile data traffic
    is reaching be-

    yond 49 exabytes by 2021 according to Cisco [117]. Thus, deployments of billions
    of smart devices

    This work is partly supported by the Academy of Finland under the 6Genesis (Grant
    No. 318927) project.

    Authors’ addresses: P. Ranaweera, School of Computer Science, University College
    Dublin, Belfield, Dublin 4, Ireland; email:

    pasika.ranaweera@ucdconnect.ie; A. D. Jurcut, School of Computer Science, University
    College Dublin, Belfield, Dublin 4,

    Ireland; email: anca.jurcut@ucd.ie; M. Liyanage, School of Computer Science, University
    College Dublin, Belfield, Dublin

    4, Ireland and Centre for Wireless Communications (CWC), University of Oulu, Erkki
    Koiso-Kanttilan katu 3, 90570 Oulu,

    Finland; emails: madhusanka@ucd.ie, madhusanka.liyanage@oulu.fi.

    Permission to make digital or hard copies of all or part of this work for personal
    or classroom use is granted without fee

    provided that copies are not made or distributed for profit or commercial advantage
    and that copies bear this notice and

    the full citation on the first page. Copyrights for components of this work owned
    by others than ACM must be honored.

    Abstracting with credit is permitted. To copy otherwise, or republish, to post
    on servers or to redistribute to lists, requires

    prior specific permission and/or a fee. Request permissions from permissions@acm.org.

    © 2021 Association for Computing Machinery.

    0360-0300/2021/10-ART186 $15.00

    https://doi.org/10.1145/3474552

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:2

    P. Ranaweera et al.

    demand access capacity and bandwidth requirement from the access interfaces of
    mobile base

    stations.

    The fifth-generation (5G) mobile technology is the seminal advancement explored
    by the Mo-

    bile Network Operators (MNOs) to reach beyond the constrictions of the prevailing
    network

    architecture. To achieve the novel requirements of enhanced performance, portability,
    interop-

    erability, elasticity, reliability, spectral and energy efficiency; a network
    softwarization approach

    should be followed by the evolving mobile networks [63]. Virtualization, service
    migration, orches-

    tration, and service automation (as in service function chaining [48]) are the
    main phases of paving

    the path toward 5G and beyond 5G mobile paradigms [24]. As the core and backhaul
    portions

    of the emerging mobile networks are softwarized, techniques of ultra-dense networks,
    massive

    Multiple-Input-Multiple-Output (MIMO), and high-frequency communication are prominent

    methods for improving the wireless access network [117]. Due to these technological
    improve-

    ments, 5G guarantees a 1,000 times enhancement of the capacity than its predecessor.

    Even with the softwarized 5G core network, facilitating the diverse requirements
    demanded by

    the IoT-based devices is still a predicament due to the drawbacks of existing
    service provisioning

    infrastructure[25]. Conventional cloud computing architecture fails to provision
    emerging myri-

    ads of services [80]. The geographically distant placement of data centres and
    limited access ca-

    pacity contrives unintended delays and jitters that compromise the entire service
    infrastructure.

    Moreover, cloud servers are incapable of servicing billions of IoT devices ubiquitously.
    These limi-

    tations in cloud computing paradigm enforce vulnerabilities that can be exploitable
    by adversaries

    [130]. Moreover, privacy is a major concern with the outsourcing-based cloud computing
    service

    models [41]. Most cloud service providers are violating the locational and data
    privacy of their

    consumers.

    To overcome these constrictions in storage and processing service models, Edge
    Computing

    (EC) as a paradigm was introduced in 1990s with Content Delivery Networks (CDN)
    that decen-

    tralized the data centre functions [140]. Main objective of EC was to extend the
    functions offered

    from cloud computing to the edge of the mobile network [103]. With in-proximity
    dispensing of

    cloud functions at the edge, drawbacks of the cloud paradigm could be mitigated.
    In fact, this ar-

    chitectural paradigm shift is the raison d’etre for 5G- and beyond-5G-based concepts
    to achieve

    the guaranteed performance metrics. There are various flavours of edge concepts
    introduced for

    expanding this notion. Multi-access Edge Computing (MEC), Fog computing, Mobile
    Cloud

    Computing (MCC), Cloudlets, and Transparent Computing (TC) are such directives
    followed

    by research communities [103, 117]. Out of these concepts however, MEC and fog
    computing are

    leading to be adopted pragmatically and in terms of standardization. In this survey,
    we are investi-

    gating the MEC paradigm as its standardization is much more convincing than the
    other concepts.

    1.1

    Related Surveys

    There are several research studies that focus on MEC, 5G, and various approaches
    related to the

    deployment of these aspects, including security. Ren et al. [117] explore the
    orchestration mech-

    anisms within end-edge-cloud context for fog, MEC, TC, and cloudlets. Different
    edge flavours

    are contrasted with an evaluation criteria that sets the criterion indices based
    on heterogeneity

    support, QoS requirements, elastic scalability, mobility, and interoperability.
    Moreover, computa-

    tional offloading, caching, security, privacy, and future research directions
    are discussed further.

    In Reference [115], a comprehensive survey is conducted on service migration scenarios
    for edge

    computing paradigms. The diversity among the existing migration schemes are highlighted
    while

    architectures, platforms, and implementations related to migration are presented
    further. More-

    over, future research directions are presented considering the gaps identified
    in the literature. Li

    et al. [77] review the edge oriented computing systems focusing on their architectural
    features,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:3

    resource management approaches, and design objectives. Though, the investigation
    is more con-

    centrated on fog computing than other EC paradigms. The adaptation of Distributed
    Ledger

    Technologies (DLTs) on IoT-based applications have been studied in Reference [157].
    IoT use

    cases of smart home, smart transport, supply chain, smart healthcare, and smart
    energy are de-

    scribed in the applicable DLT platform context. Offloading is a vital consideration
    for EC scenar-

    ios. Thus, a survey is conducted on offloading algorithms in Reference [139] for
    edge and cloud

    deployments. The surveys in References [37, 142] discuss Network Function Virtualization

    (NFV), Software Defined Networks (SDN), Service Function Chaining (SFC), and Network

    Slicing (NS) as MEC enablers, where focus on security is not comprehensive.

    Ferrer et al. [36] present a concise comparison between MCC, Mobile Ad hoc Computing,
    and

    EC to emphasize the novel aspects of decentralized cloud approaches. Reliable
    resource provi-

    sioning problem with edge-cloud computing environments is addressed in Reference
    [28]. More

    emphasis is drawn to the machine learning as a solution for workload characterization,
    work-

    load prediction, component placement, system consolidation, and application elasticity
    aspects of

    prevailing resource provisioning approaches. Knowledge on IoT-based communication
    protocols

    such as Message Queuing Telemetry Transport (MQTT), Advanced Message Queuing Pro-

    tocol (AMQP), Extensible Messaging and Presence Protocol (XMPP), Data Distribution

    Service (DDS), Hypertext Transfer Protocol (HTTP), and Constrained Application
    Proto-

    col (CoAP) are imperative for realizing the formation of 5G-based use cases. A
    comprehensive

    survey is conducted in Reference [26] on such IoT protocols emphasizing their
    characteristics, and

    performance issues in the context of fog and cloud computing integration.

    Khan et al. [63] address security and privacy advancements of 5G in the viewpoint
    of novel

    technologies of SDN, NFV, NS, and MEC. This survey has investigated the Physical
    Layer Secu-

    rity (PLS), security monitoring and management, privacy, and security standardization
    aspects

    of 5G to a comprehensive extent. Though, 5G-based use cases are not considered
    in their scope.

    Ranaweera et al. [109, 110] present a comprehensive inductive research on MEC
    security and pri-

    vacy aspects, considering real-world MEC deployment scenarios accustoming to the
    ETSI stan-

    dardization. Despite their holistic nature, their work does not focus on the 5G
    use cases that this

    article is introducing. The use cases of industrial automation, Intelligent Transport
    Systems

    (ITSs), Virtual Reality (VR), smart grids, e-health, and education are considered
    in Reference

    [99] on the latency requirement perspective. Though this survey states the latency
    requirements

    of each use case, their security issues and prospects on edge computing has not
    been addressed.

    1.2

    Scope and Contribution

    In this survey, we are exploring the security vulnerabilities of 5G use cases
    deployed in accor-

    dance to MEC-based scenarios. The use cases of critical infrastructure-based services,
    enhanced

    Mobile Broadband (eMBB), massive Machine Type Communication (mMTC), Autonomous

    driving/Vehicle-to-Vehicle (V2V) connections, Augmented Reality (AR)/Virtual Reality

    (VR)/Mixed Reality (MR), and Unmanned Aerial Vehicles (UAVs) are investigated
    for security

    vulnerabilities. Further, prevailing security solutions are mapped as solutions
    and countermeasures

    for each use case. This is the main contribution of this research as current literature
    lacks the discus-

    sion of security in 5G-enabled edge computing-based deployments. Understanding
    the progress of

    state-of-the-art industrial and academic projects in 5G and MEC are vital to realize
    the adaptation

    of the scoped use cases. Thus, this article presents a holistic overview of leading
    projects.

    1.3

    Article Organization

    The rest of the article is organized into five sections. Section 2 presents the
    background on 5G, MEC,

    and role of MEC in 5G. Core contribution of this research is contained in Section
    3, where use cases

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:4

    P. Ranaweera et al.

    are investigated for their security issues and usable solutions. Section 4 summarizes
    the details on

    current research groups and institutions proceeding in MEC and 5G focused security
    developments.

    Insights gained from this survey are discussed in Section 5, while probable novel
    applications and

    challenges for wide adoption of 5G are presented briefly. Finally, Section 6 concludes
    the article.

    2

    BACKGROUND

    Despite that 5G and MEC can be operable independently, the integration of them
    would enable

    applications and use cases with requirements of Ultra-reliable Low Latency Communication

    (URLLC) capabilities in addition to improved security and privacy aspects [37].
    Thus, assimilation

    of 5G and MEC standardization is imperative to realize the context of this article.
    The following

    section describes the key information on 5G, MEC, and the role of MEC in 5G.

    2.1

    5G

    The data rates of 1 ∼ 10 Gbps, 1 ms round trip latency, enhanced capacity for
    plethora of connect-

    ing devices through high-bandwidth channels, perceived availability of 99.999%,
    100% ubiquitous

    connectivity, and improving battery life through 90% energy reduction are major
    requirements for

    5G in the performance perspective [2]. The softwarization of the 5G core enables
    the segmentation

    of functions to a layered architecture with its featured flexibility. The Fifth
    Generation Infras-

    tructure Public Private Partnership (5G-PPP) project proposes the five layers
    of infrastructure,

    network/control, orchestration, business, and services for forming the 5G functional
    architecture

    [40]. The orchestration layer, however, is a dispersed function among other layers
    while services

    layer can be represented as an extension of the business layer [63]. The infrastructure
    layer rep-

    resents the RAN connectivity portion of the mobile network. The Radio Access Technologies

    (RATs) employed in the 5G infrastructure layer are supporting Non-Orthogonal Multiple
    Ac-

    cess (NOMA), massive Multiple-Input-Multiple-Output (MIMO), Coordinated Multi-Point

    (CoMP) transmission, and millimeter Wave (mmWave) technologies [13, 31]. Control
    layer in-

    hibits the network management function while network and business services are
    assigned to the

    business layer.

    Security measures targeted for ensuring confidentiality, integrity, availability,
    accountability,

    authentication and authorization aspects were implemented with predecessor mobile
    networks

    ranging from 2G to Long-term Evolution (LTE). Though, Information Assurance (IA)
    policies

    has become most profound for 5G and beyond networks with the requisite to assure
    the content in

    processing, usage, and transmission in the cyber space [121]. Encryption is the
    key security mech-

    anism to ensure security in mobile networks. Encryption schemes of A3, A5/2, A5/3,
    A8, Kasumi,

    SNOW-3G, and Evolved Packet System (EPS) Encryption Algorithm (EEA) along with
    EPS

    Integrity Algorithm (EIA) were such methods employed for confidentiality and integrity
    protec-

    tion [63, 80]. Moreover, TS 23.122 and TS 33.210 specifications are defining the
    Access Stratum

    (AS) and Non-access Stratum (NAS) security functions of the 3rd Generation Partnership

    Project (3GPP)-based mobile deployments [72]. AS and NAS are functional layers
    of the Uni-

    versal Mobile Telecommunications System (UMTS) and LTE protocol stack. Though,
    novel

    mobile network deployments require the allowance to be dynamically customized
    in accordance

    to the specifications of impending use cases and applications [3]. Thus, architectural
    amendments

    in 5G do not permit the utilization of security measures employed for pre-5G networks
    [59]. In ad-

    dition, flash crowd network traffic demand, radio interface security, user plane
    integrity, roaming,

    Denial of Service (DoS) or saturation attacks, and signalling storms are identified
    as novel chal-

    lenges for 5G mobile networks [4]. The heterogeneous nature of 5G-enabled devices
    empowered

    with IoT technologies are envisaging massive scalability with cross-platform issues.
    Introducing

    novel services and applications are imminent to attract enormous amount of subscribers;
    hence,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:5

    contriving a flash crowd demand (unintended surge in subscribers) situation in
    the mobile network.

    Such situations are exploitable by capable adversaries to overload both application
    and radio inter-

    faces that mimic a DoS effect [82]. Further, DoS or Distributed DoS (DDoS) attacks
    pose a service

    interruption risk for latency sensitive 5G applications via impeding the service
    with continuous

    malicious accessing attempts. Similar effect is expected from signalling storms,
    by generating a

    massive amount of signalling traffic in the control plane; access is granted by
    the intruder from a

    signalling attack perpetrated at the 5G interfaces. As 5G core network components
    such as User

    Plane Function (UPF) are deployed in line with the edge/user level, such signalling
    storms could

    sabotage the entire mobile domain [65]. The heightened mobility with 5G devices
    incur roaming,

    handover, and migration situations more frequent. Thus, timing-based interposing
    attacks are im-

    minent on such control channels, channel assignments, and migration sessions [134].
    In addition,

    malicious User Equipment (UE) and fake BSs launching masquerading attempts resulting
    in

    wormhole, or sinkhole effects are imminent in the user plane [11, 61, 110]. Thus,
    integrity and au-

    thenticity of the user plane is paramount for 5G. Solutions such as Host Identity
    Protocol (HIP)

    schemes, mandating global visibility for security policies, Cloud RAN (C-RAN)
    and EC, isola-

    tion of Virtual Network Functions (VNFs) are adaptable for meeting the security
    requirements

    [3, 81, 135]. More details on 5G security can be assimilated from [35, 38, 49,
    80, 144].

    2.2

    Multi-access Edge Computing (MEC)

    In contrast to other edge computing paradigms, MEC edge infrastructure is proposed
    to be de-

    ployed at the Radio Network Controller (RNC), or the Base Station (BS), or gNodeB
    (gNB)

    in 5G terms [103]. Thus, its reliance on MNOs service quality is higher than the
    other paradigms.

    The ETSI defined MEC architecture is formed with two levels that are deployed
    along with the

    BS and the mobile core network entities referred as the edge/ host level and the
    system level, re-

    spectively [33]. These two levels are segmenting the functions of service registration
    and service

    provisioning for improved access and security. Isolating the orchestration function
    of the entire sys-

    tem from the edge infrastructure, mitigates the possibilities of holistic system
    compromise through

    intrusions. Moreover, an edge infrastructure operating unburdened by the service
    registration pro-

    cesses would serve with improved mobility, scalability, availability, and context
    awareness [119].

    In addition, an edge infrastructure capable of operating standalone or with cloud
    connectivity, en-

    visages a very low latency and jitter for enhanced service access [152]. These
    features of MEC

    enable the compatibility and adaptability for IoT-based services facilitated with
    the edge domain

    [118]. However, these novel structures and virtualization technologies employed
    for deploying a

    dynamic service environment are creating unprecedented issues in security and
    privacy context.

    The MEC operational structure depicted in Figure 1 represents the various entities
    defined by

    the ETSI for accomplishing classified tasks at the edge and the core [109]. The
    functions approv-

    ing, rejecting, and managing service requests are handled by the entities of User
    Application

    Life-Cycle Management Proxy (UALCMP), Customer Facing Service Portal (CFSP), and

    Operations Support System (OSS) at the core. Mobile Edge Orchestrator (MEO) is
    orches-

    trating the entire MEC system under its domain. The edge system is governed by
    Mobile Edge

    Platform Manager (MEPM), while Virtualization Infrastructure Manager (VIM) is
    acting

    as the hypervisor for the edge environment. Mobile Edge Hosts (MEHs) are virtual
    entities that

    are configured for the subscriber service requirements, which perpetrates the
    actual storage and

    processing operations in the MEC system. Service instances instigated by the User
    Equipment

    Applications (UE Apps) are interacting with its counterpart at a particular MEH
    called Mobile

    Edge Application (ME App). Mobile Edge Platform (MEP) is managing the resources
    and

    networking within a MEH.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:6

    P. Ranaweera et al.

    Fig. 1. MEC operation and structure.

    MEC is built on top of the driving technologies SDN, NFV, Information Centric
    Networking

    (ICN), NS, and IoT [83, 103]. Thus, implementing security for heterogeneous services
    overlaid on

    top of the diverse driving technologies of the MEC is an intricate task. Moreover,
    extended access

    capacity at the edge with wireless channels and mobile offloading/delegation schemes
    are elevating

    the probable penetrative and vulnerable vectors in the edge network that would
    be subjected for

    exploitation by the adversaries [50]. Thus, revealing vulnerabilities and threats
    in 5G-based MEC

    deployments should be handled case-by-case for each probable use case of 5G.

    2.3

    Role of MEC in 5G

    MEC plays a key role in realizing the envisaged use cases of 5G. Six use cases,
    as depicted in

    Figure 2, are elaborated in Section 3 for stating the investigated security vulnerabilities
    in MEC-

    enabled scenarios. As these use cases are offered as services to the 5G consumers,
    service quality

    in terms of QoS and Quality of Experience (QoE) are key factors for service continuity
    that

    eventually decides the pricing /charge of the particular service [21]. Thus, 5G
    core network de-

    ployment itself cannot ensure the required service quality from these impending
    applications due

    to limitations of access network. As discussed above, MEC and other edge computing
    paradigms

    facilitate the infrastructure for enhancing the access interfaces to cater ultra-low
    latency, real-time

    ubiquity, security, and privacy aspects of the mobile network [82]. Though, managing
    the diverse

    services that demand various requirements (i.e., low latency is critical for UAV
    and V2V applica-

    tions while reliability, QoS, and QoE are required for eMBB and AR use cases)
    is a challenge for

    MNOs. Network Slicing is a concept identified for achieving this purpose maintaining
    the QoS

    and QoE levels specified by each service [151]. MEC supports the multi-domain
    globally dispersed

    services through sliced network deployments for heterogeneous applications and
    services [56].

    ETSI-defined MEC edge platform allows dynamic launching of service instances configurable
    for

    required specifications. Thus, network slice instances can be launched as ME Apps
    at MEC host

    level to enable multi-slice deployments.

    3

    SECURITY OF MEC USE CASES

    In this section, use cases and applications of MEC are considered. For different
    MEC applications,

    security vulnerabilities are investigated while possible countermeasures are presented
    from the

    existing literature.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:7

    Fig. 2. MEC-enabled 5G-based use cases.

    3.1

    Critical Infrastructure

    Critical Infrastructure-based services, such as energy, water and sewage, offshore
    oil drilling rigs,

    financial, and emergency applications have expanded their scope through digitizing
    their control-

    ling systems with IoT technology. Even industrial sectors are revolutionizing
    their deployments

    with novel technologies to cope with the rapid development [133]. Though global
    expansion of

    these services to dispersed global clusters constricts the usability of a centralized
    data centre for

    storage and processing. Thus, integrating MEC platforms for critical infrastructure
    services are

    probable and would improve the interfacing of the general public toward the services
    as critical

    customer status updating of billing, consumer usage, and service interruption
    notifications.

    The energy sector holds the profound significance out of infrastructure services
    as it ener-

    gizes all the other sectors and envisages a sophisticated deployment options with
    the evolution

    of smart-grid technology. The integration of IoT-based technologies enables the
    formation of Ad-

    vanced Metering Infrastructure (AMI)/smart metering/net metering that overlay
    a monitoring

    framework for the smart energy solution [61]. In addition, the incorporation of
    renewable en-

    ergy sources demands a decentralized deployment of power coordinating entities
    (smart grids)

    that enforce bi-directional energy flow through the transmission grids [8]. Thus,
    employing an

    effective power utilization scheme is an intrinsic requirement and achievable
    through system sta-

    tus analytics on consumer consumption, consistency of the generation, grid utilization
    and per-

    formance of the operating devices. The consumers are granted the opportunity to
    utilize their

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:8

    P. Ranaweera et al.

    Fig. 3. Critical infrastructure connectivity to MEC platform.

    household utility spending by monitoring the IoT interfacing tools, which facilitate
    the visu-

    alization of any incoherent consumption patterns. The coordinated group of European
    Com-

    mittee for Standardization-European Committee for Electrotechnical Standardization-

    European Telecommunications Standards Institute (CEN-CENELEC-ETSI) proposed a

    Smart-grid Architectural Model (SGAM) for realizing smart energy use cases [75].
    Proposed

    architecture formulates three dimensions that concatenate five functional interoperability
    layers

    with energy sector domains and zones, which accounts for power system management.
    Thus, the

    amalgamation of IoT technologies with electro technical devices is reinforced
    from this proposal

    for achieving the ultimate integration of IoT and energy solutions. Moreover,
    decentralized na-

    ture of smart grids in the energy network and the requirement for minimizing the
    latency for

    critical parameter transmission demands the deployment of MEC. Subscribing MEC
    services for

    SCADA-based smart grids enable the connectivity among them across the network
    for establish-

    ing a monitoring and awareness channel to maintain a balanced energy flow [1].
    This approach

    is capable of alleviating the cost to improve the grid utilization. The consumer
    interfacing and

    remote activation/deactivation of household electrical apparatus is probable from
    MEC-based ME

    Apps that interconnect the smart grids to the Smart Energy Meters (SEMs).

    In an era of urbanization, water and sewage treatment is a paramount necessity
    for achieving

    sustainable development facilitated through improved urban sanitation and quality
    of human life

    [147]. MEC plays a key role in optimizing the existing water governance techniques
    that are at-

    tributing complexities due to diversified cost structures formed by origin of
    water sources and

    environmental externalities [90]. One of the most obvious use case for MEC is
    the deployment of

    smart metering infrastructure embedded with Smart Water Meters (SWMs) resembling
    the AMI

    setup as indicated in Figure 3. MEC edge servers or MEHs are responsible for facilitating
    a low

    latency communication platform between consumer end, water treatment plant and
    the central

    monitoring station. Moreover, sensory inclusions in an automated treatment plant
    act as a MTC

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:9

    application that is capable of calibrating the control mechanisms to achieve utilized
    water gover-

    nance. However, current water treatment plants employ SCADA systems for controlling
    the fluid

    flow through processes such as debris removal, filtration, recarbination, flocculation,
    coagulation

    and chlorination. Enhanced MTC (eMTC) solutions to establishing communication
    channels are

    guaranteed through LTE PHY layer for SCADA deployments such as in Remote Terminal
    Units

    (RTUs) that operate at different controlling structures [23].

    Petroleum extraction is a vital industry that caters the fossil fuels that generate
    combustible

    energy for energizing vehicular engines and electricity generating plants throughout
    the globe.

    The continuous extraction has led to the scarcity of natural resources that forced
    the petroleum

    industry to shift the drilling process to the offshore reservoirs where the aquatic
    resources are

    still intact [57]. Thus, offshore plants are intrinsic requisites for petroleum
    industry despite the

    precarious conditions granted to the employees. Automation is an approach to be
    considered for

    entrusting the safety of employees at offshore plants. Magnitude of the power
    dissipation at the

    heavy machinery demands the employment of SCADA systems for controlling them.
    Deploying

    MEC for expanding the scope and alleviating the latency for oil drilling services
    improves the

    probability of launching eMTC-based operating infrastructure at offshore plants.
    This enables the

    remote automated operation of drilling devices, which are linked through satellite
    communication

    for mitigating human casualties probable at a plant malfunctioning.

    Any service infrastructure that utilizes a communication network at its formation
    is prone to

    significant security threats. In 2015, the National Cyber-security and Communication

    Integration Centre—Industrial Control Systems Cyber Emergency Response Team

    (NCCIC/ICS-CERT) witnessed that the attacks on critical infrastructure have steadily
    increased

    over the years [69]. Thus, investigating threats applicable for these application
    scenarios are criti-

    cal. Figure 3 depicts the various critical infrastructure-based services and their
    connections to the

    MEC serviceable platform.

    3.1.1

    Security Vulnerabilities. If we remain with the assumption of internal connectivity
    of

    these critical infrastructure facilities are secured by design, then their bi-directional
    connectiv-

    ity with the BS could be the only vector to be considered for penetration by malicious
    adversaries.

    The threats to such connectivity would resemble any intrusion-based, intervention,
    DoS, or Dis-

    tributed DoS (DDoS) attacks, which are capable of ceasing ME Apps launched in
    the edge from

    accessing the relevant infrastructure services. Due to the higher scale of the
    applications, the MEC

    edge level entities should have to subscribe more than one MEH and the geo-distributed
    nature

    would link more than one MEC edge levels or system levels for a particular critical
    infrastructure-

    based service. This fact improves the possibility of prone to be attacked or infected
    by a malicious

    agent through the MEC server side.

    The dispersed deployment of SEMs across households in an AMI-based smart-grid
    installation

    encourages the adversaries to launch interposing attacks such as eavesdropping,
    modifying and

    interrupting in the wireless communication channels additionally to the physical
    damages effec-

    tuated in close proximity [93]. Moreover, Sleep Deprivation Torture (SDT) and
    Battery Ex-

    haustion Attacks (BEA) are probable in smart-grid environments [42]. Similar affect
    is imposed

    on SWM installations in a smart water governance scenario. However, the nature
    of attacks is

    dependent on the deployment scenario of the critical infrastructure application.

    As the core functions of the discussed critical infrastructure-based applications
    are facilitated

    through the SCADA systems, the internal security vulnerabilities are common for
    all cases. The iso-

    lated and disconnected nature of SCADA-based systems advocated resilience against
    cyber-attacks

    in the past [17]. However, threats and vulnerabilities were detected with SCADA
    systems as in

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:10

    P. Ranaweera et al.

    the case of the popular worm STUXNET that raised the probability of critical infrastructure
    ser-

    vices being vulnerable [92]. Moreover, penetration on the sewage system in Maroochi
    (Australia),

    BlackEnergy Trojan, which targeted a Ukrainian power grid, HAVEX malware, and
    command in-

    jection attack on water treatment plant in Kemuri are exemplifying the compromised
    SCADA sys-

    tems [71, 128]. The communication of the SCADA installations is attained by Modbus,
    DNP3 and

    Profibus protocols [128]. Cyber-attacks probable on Programmable Logic Controllers
    (PLCs)

    are categorized into Reconnaissance, command injection, response injection and
    DoS attacks [71].

    In that scenario, MEC system would be infiltrated from the critical infrastructure
    direction. As

    an example, the distributed nature of smart grids would allow an infiltrated smart
    grid to unbal-

    ance the energy load by feeding misleading information to the edge entities that
    could lead to

    catastrophic circumstances.

    The connectivity of the critical infrastructure nodes with the BS in the proximity
    should be

    secured with extensive cryptographic means due to their criticality and inherent
    resources. The

    priority for communication protocol would be the secureness in spite of latency
    and bandwidth

    usage. Though the security measures to be adopted internally are different from
    one application

    to another.

    3.1.2

    Existing Solutions. Yang et al. [147] proposed a model for a smart sewage plant
    operating

    on intelligent and picturesque SCADA system where sensory devices are employed
    for conveying

    monitoring statistics to the intelligent control systems. A high speed and reliable
    networking plat-

    form is formulated to maintain the connectivity between the SCADA-based control
    system and the

    sensing devices. Features such as Real-time regulation for optimizing, intelligent
    decision making,

    efficient security analysis, self-healing/correction, superior effluent quality,
    humanized and visu-

    alized inter-operable platform are the intended objectives of the proposed model.SWMs
    are used

    to measure the consumer water consumption while updating the central monitoring
    stations as

    illustrated in Figure 3. As malware are definite threats to SCADA systems, the
    approach instated

    by Shirazi et al. [128] for detecting anomalies in SCADA systems employing machine
    learning

    techniques is a prominent solution. The K-Means and Naive Bayes are configured
    in their su-

    pervised mode while Principle Component Analysis using Singular Value Decomposition

    (PCA-SVD) and Gaussian Mixture Model (GMM) techniques are configured to their
    unsuper-

    vised mode. The precision values of the machine learning techniques are evaluated
    against naive

    and complex response injections, malicious state/parameter and function command
    injections,

    DoS, and reconnaissance anomalies methods in a gas pipeline simulation model [102,
    131]. In ad-

    dition, as VNFs are imminent to be deployed in edge infrastructure in line with
    SCADA systems,

    cryptographic means to support VNF isolation and shielding for security critical
    function over less

    critical functions are important in the context of MEC [11].

    Hussain et al. [57] introduced an edge computing-based resource allocation model
    to utilize the

    existing cloud data centre-based latency prone systems, which communicated through
    satellites.

    Task scheduling policies such as First Come First Server (FCFS) and Shortest Job
    First (SJF)

    are considered for remote operations controlled at the edge level through a VM-based
    coordinator

    to minimize the reliance on onshore distant resources. Proposed heuristics are
    analysed for various

    workload conditions.

    Leligou et al. [74] proposed a framework that comprised the four layers: energy
    layer, telecom-

    munication layer, VNF layer and the application layer. The framework is employing
    MEC as an

    expanded Multi-radio Access Technology (RAT) xMEC deployment for enabling offloading

    where blockchain-based VNF Descriptors (VNFD) are acting as process tags to achieve
    traceabil-

    ity in the energy layer. However, the deployment scenario for xMEC offloading
    is not convincingly

    explicated to validate the applicability of the framework for smart grids.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:11

    Fig. 4. AR and video streaming applications with MEC.

    Saez et al. [122] propose a framework called System-level Manufacturing and Automation
    Re-

    search Test-bed (SMART) that is controlled through PLC over an IP network engaging
    the OPC

    UA protocol in diagnosing and detecting anomalies in the data extracted from the
    data sourcing

    devices: CNCs, RFID sensors, cameras, and conveyors. According to the data processing
    frame-

    work, data transforming, analyzing, storing, and image-processing tasks are conducted
    at the edge

    servers for enhancing the efficiency of the smart system. Thus, probable integrating
    scenarios with

    different PLC-based technologies validate the deployment as a critical infrastructure
    solution.

    Experimental setup was orchestrated by Oyekanlu et al. [96] for determining channel
    capacity

    in an edge computing scenario to evaluate the performance of various IoT devices.
    The channel ca-

    pacities in terms of SNR for edge computing use cases: smar grids ( for periodic,
    non-periodic, and

    synchronized phasor management units) and IIoT are formulated assuming wired transmission

    channels. The results of this conduct are influential for manufacturers in spite
    of lesser number of

    loads been considered.

    The blockchain model proposed by Gai et al. [42] were focusing on energy security
    in smart-grid

    environments. The intended objective of the system is to detect improper energy
    usage patterns

    to prevent probable energy related attacks such as SDT and BEA. Blockchain technique
    is applied

    to form a network resembling a Smart-grid Network (SGN) that is capable of achieving
    optimal

    resource management.

    3.2

    Enhanced Mobile Broadband Channels/Video Streaming and Analytics/Big Events

    Video stream analysis-based applications such as vehicular license plate recognition,
    face recogni-

    tion and domestic surveillance, which require high computational complexity for
    their algorithms

    to be reliant on UHD transmissions [1, 87]. Mobile gaming applications based on
    VR and AR

    integration are probable deployments for high level video streaming UHD channels
    that endan-

    ger the bandwidth provisioned for priority services. Cisco predicts that the share
    of mobile video

    streaming would be increased rapidly while the bandwidth saving approaches to
    Over the Top

    (OTT) streaming channels are identified as intrinsic preliminaries to form multimedia
    channels

    [86]. The crowd-sourcing-based media are uploaded into the servers through multimedia
    channels

    precipitately, as in 72 h of video content uploaded to YouTube, 2.4 million pieces
    uploaded to Face-

    book, and 347,000 and 216,000 images uploaded into WhatsApp and Instagram in a
    minute [15].

    Moreover, consumer bandwidth has extended from single view to multi-view, 2D to
    3D, and sin-

    gle source stream representation to adaptive multi-bit-rate multi-resolution representation.
    Thus,

    necessity to implement measures for utilizing the bandwidth from OTT streaming
    services is a

    manifesting predicament. There are two scenarios where the video streaming applications
    are

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:12

    P. Ranaweera et al.

    deployed. Peer-to-peer (P2P) streaming traffic routed from an eNodeB serviced
    by a MEC edge

    level platform is conveyed to a UE directly that would save the backbone capacity
    and traffic of

    the network operator. In case of big event streaming, the streams are digested
    at a MEC host ser-

    vice subscribed by a local video production studio that would convey the streams
    to the UEs. This

    approach however, could be subjected to amendments by the video editors. Figure
    4 is represent-

    ing various AR- and video-streaming-based services that are capable of deploying
    under a MEC

    service infrastructure.

    3.2.1

    Security Vulnerabilities. A confiscated video stream is probable for embezzlement
    by the

    attackers for distilling counterfeited credentials that would violate the integrity
    of the content [69].

    A news feed manipulations result in misleading circumstances for the viewers and
    would be critical

    depending on the entropy of the information. As most video streaming traffic are
    generated from

    crowd-sourcing applications, an infected UE poses the threat of multi-casting
    malicious content

    acting as an egress point through the video streaming channels. The majority of
    the social me-

    dia and crowd-sourcing accounts are not equipped with strong password-based credentials.
    Thus,

    phishing type attacks are capable of commandeering such accounts that violate
    integrity. Video

    streaming channels however, is encoded with an acceptable level of encryption.
    It makes the inter-

    posing attacks less probable. As streaming content are stored and processed in
    MEHs, malicious

    agents could be conveyed via UEs engaged in various applications mentioned above.
    This type of

    attack results in compromising the edge infrastructure. Moreover, an infected
    ME App that pro-

    cesses the streaming content is capable of convincing the MEP and VIM to allocate
    unnecessary

    resources to exhaust the system.

    3.2.2

    Existing Solutions. Makinen [86] proposed a business model for video streaming
    in events

    handling incorporating MEC service platforms. The business model is analysed in
    terms of service,

    technology, organization, and finance designs for P2P and big event streaming
    scenarios. Bilal et al.

    [15] presented solutions for interactive multi-view streaming and gaming communities
    incorporat-

    ing edge computing deployments. Interactive multi-view/free-view video, video
    stream transcod-

    ing, and cloud gaming scenarios are considered for identifying edge technologies
    that involve

    techniques such as Muti-view Video Coding (MVC), Interactive Multi-view Video
    Stream-

    ing (IMVS), Content Delivery Networks (CDNs), and Adaptive Bitrate Streaming (ABR).

    Ren et al. [116] investigated the latency minimization problem in a multi-user
    time-division mul-

    tiple access Mobile Edge Computing Offloading (MECO) system. Three computation
    models:

    local compression, edge cloud compression, and partial compression offloading
    are formulated for

    optimizing video compression mechanisms analogous to video streaming deployments.

    3.3

    Machine to Machine (M2M) and Massive Machine Type Communication (mMTC)

    Links in IoT

    Applications such as e-health wearables, IoT devices, and entire range of machine
    controlled au-

    tomated communication deployments are considered under this application [61].
    The perception

    level of the majority of IoT applications is composed of sensory devices and actuators,
    which rely

    on M2M communication for data transferring and conveying of control signals. The
    devices en-

    gaged in M2M communication are called Machine Type Communication Devices (MTCDs)

    by 3GPP. The access network facilitated for most MTCDs is non-cellular technologies,
    which are

    Ultra Wideband (UWB), WLAN, ZigBee, Bluetooth, Low Power Wide Area (LPWA), Long

    Range (LoRa), Narrowband IoT (NB-IoT), or Wireless Body Area Networks (WBANs)
    in

    case of e-health applications [20, 78, 138]. The realization of IoT-based services
    covers the extent

    of communication types, which range from Human-to-Human (H2H), Human-to- Machine

    (H2M), or vice versa, and Machine-to-Machine (M2M) [20]. Though a typical MTC
    architecture

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:13

    Fig. 5. MTC integration with MEC.

    instigates two communication scenarios: between MTCDs and MTC servers or inter-MTCD
    D2D

    type [27]. Healthcare applications such as health-assisting humanoid robots, remote
    surgeries and

    remote patient monitoring are plausible with MEC MTC deployments, which uses WBANs
    for

    monitoring e-health statistics [103]. The types of MTCDs employed in WBANs are
    Implantable

    Cardiac Defibrillators (ICD), pacemakers, neuro-stimulators, gluco-meters, oximeters
    and vital

    sign monitors [138]. These heterogeneous bio-sensors, which are attached to different
    parts of

    the human body are communicating to the BS through a Machine Type Communication
    Gate-

    ways (MTCGs) using non-cellular network technologies. Figure 5 illustrates various
    applications

    plausible for integrating into a MEC system.

    3.3.1

    Security Vulnerabilities. MTCDs inherit three main vulnerabilities. They are:
    commu-

    nication media (such as wireless radio, which would be subjected to eavesdropping),
    resource

    scarcity regarding power and processing. Nano-networks are limiting the usage
    of powerful se-

    curity schemes such as X.805 and translation sequences for security protocols
    between wired and

    wireless communication networks to preserve power consumption [20, 138]. Attacks
    such as DoS,

    jamming and data tampering targeted at nano-nodes in a WBAN are plausible. An
    exploited WBAN

    or a MTCG would penetrate the BS and misinform ME Apps operated under the e-health
    appli-

    cations in MEHs by risking the health of patients. Moreover, DoS or jamming attacks
    targeting a

    WBAN would cause service disruption of the corresponding ME Apps. Moreover, industry-based

    MTCDs are prioritizing the longer operating time over the throughput [78]. Thus,
    the scarcity of

    computational resources in MTCDs is preventing the employment of strong security
    mechanisms.

    All these facts and diversity of communication protocols employed by MTCDs are
    improving the

    probability to penetrate the MEC system by malicious content.

    3.3.2

    Existing Solutions. The SMART framework proposed in Reference [122] facilitates
    data

    extraction, transformation and load process for a plant floor data sourcing strategy.
    This deploy-

    ment is capable of launching OPC-UA and MTConnect MTC protocols for extracting
    data from de-

    vices such as CNC, RFID, robots, sensors, gantry, conveyor, camera, Variable Frequency
    Drives

    (VFDs), and energy meters. Integration of edge computing utilize the storage,
    communication,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:14

    P. Ranaweera et al.

    control, configuration, measurement, and management processes while data analysis
    based on ge-

    ometry, event, and signals are orchestrated for data reduction.

    Li et al. [78] proposed a novel framework that integrates M2M communication with
    MEC in a

    virtualized cellular network for offloading MTCD computational tasks toward the
    edge to utilize

    the energy consumption. Connectivity among the four layers: physical resource
    layer, NFV layer,

    virtual network layer, controller layer, and the application layer are established
    from the conjunc-

    tion of Wireless Network Virtualization (WNV) and SDN technologies. The random
    access

    process is formulated employing Partially Observable Markov Decision Process (POMDP)

    to optimize the cost in terms of energy consumption and computation execution
    time. Moreover,

    a new technology called embedded Subscriber Identity Module (eSIM) is integrated
    into the

    MTCDs that offers the switching ability among virtual networks considering their
    distinct features

    and QoS requirements. Zhang et al. [154] proposed a statistical delay bounded
    QoS provisioning

    scheme for two types of mobile data offloading scenarios: WiFi offloading and
    D2D offloading. This

    offloading scheme intends to be deployed on edge computing mobile wireless networks.
    The D2D

    offloading scenario is applicable to MTC deployments that require off-site processing
    environment

    due to resource scarcity in MTCDs. Th effective capacity and the optimal probability
    of using D2D

    offloading scenario is modeled mathematically to forecast a QoS guarantee for
    D2D-based edge

    deployments.

    Dong et al. [27] propose an ICN approach to support anycast services in the core
    network

    through the MTC engagement at the mobile edge network located at the eNodeBs.
    Network soft-

    warization is established from slicing of different service layers managed from
    an orchestration

    entity and a slice controller. A cropland monitoring use case is considered for
    formulating the

    solution where a protocol is proposed to indicate the intended message flows among
    the entities

    eNodeB, SGW, PGW, MTC server, and MTCDs. The results suggest that the bandwidth
    saving is

    higher at lower anycast update intervals times. Braeken et al. [18] proposes an
    Edge Support-

    ive Secure MAR (ESSMAR) architecture to assist doctors with additional information
    via MAR

    means to conclude the diagnosis. It is obvious that medical/healthcare information
    is extremely

    private, and should be protected against external parties. Thus, ESSMAR is included
    of a registra-

    tion/ authentication key management scheme that was validated against MitM and
    replay attacks

    through AVISPA verification tool. The security analysis conducted among the mobile
    devices, edge

    server, cloud server, and underlying networks has given valid insights in formalizing
    the ESSMAR

    protocols.

    3.4

    Autonomous Driving Channels/Connected Vehicles and Vehicle to

    Vehicle (V2V) Connectivity

    The V2E adaptation is an initiative taken for Intelligent Transportation Systems
    (ITS) [101].

    Vehicular Networks (VNs) that form the ITS deployments have its distinct place
    in 5G context

    [136]. Employing MEC system or any other edge paradigm for launching V2E applications
    is a

    certain fact due to its requirement of ultra-low latency and reliability [103].
    The 3GPP defined con-

    nected vehicles technology is focused on enhancing safety, reducing traffic congestions,
    sensing

    vehicle behavior and servicing other vehicular value added services by offloading
    computational

    and geo-distributed services to roadside BSs or Infrastructure to enable autonomous
    driving with

    data connectivity that attribute the alleviated latency [87]. Though, with envisaged
    drastic de-

    velopment, transportation industries are becoming conspicuous cyber-targets for
    adversaries due

    to their rapidly evolving mobility structure as concluded by the report from IBM
    X-Force and

    Transport Systems Catapult [43]. The smart sensors deployed in vehicles enable
    the Advanced

    Driver Assistant Systems (ADAS), which is introduced as the preliminary stage
    of self-driving

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:15

    Fig. 6. ITS integration with MEC.

    applications [145]. The embedded features that attribute to 100 million lines
    of program code and

    processing ability of 25 GB data per hour improves the feasibility for deployment
    [73]. Vehicle

    automation approaches are entirely reliant on sensors. As sensors being electronic
    devices prone

    to be penetrated by adversaries, any successful malicious penetration could result
    in vehicle colli-

    sions, traffic congestions or damages to properties or human lives.

    The connectivity between the vehicles is different from the connectivity from
    a vehicle to the BS.

    The protocols and the communication technology employed for this connectivity
    depends highly

    on the manufacturer. Though, in the United States the standard for V2V connectivity
    is Dedicated

    Short-range Communication (DSRC) technology, which would transmit location, direction
    and

    speed of the vehicle to the nearby vehicle [137]. The intention of this V2V deployment
    is to provide

    early warnings to imminent accidents detected through a smart system embedded
    in the vehicles.

    Figure 6 depicts the wide range of aspects in ITS deployments integrated with
    a MEC system.

    Further, possible attack vectors are indicated in an illustrative context.

    3.4.1

    Security Vulnerabilities. Vehicular entities are prone to attacks, which could
    be launched

    in the proximity of the targeted device as physical damage, hardware Trojans,
    and side-channel at-

    tacks. These attacks could grant access to the communication devices of the smart
    vehicles, which

    are in direct connection to the Engine Control Unit (ECU) of the vehicle. The
    infiltration of the

    ECU could lead to circumvention of the safety critical systems in the vehicle
    [101]. Thus, influ-

    encing the ECU with false statistics in case of an autonomous or semi-autonomous
    driving could

    endanger the vehicle and the passengers travelling in it. Moreover, false information
    could be con-

    veyed by an infected system to a ME App operated under a MEH for causing vehicular
    accidents

    with malfunctioning automotive processes.

    The threats plausible for vehicles are mainly targeted at the different systems
    in a vehicular en-

    tity, such as GPS (spoofing and jamming), in-vehicle devices (malware, head unit
    attack), acoustic

    sensor (fake noises or interference), radar (jamming, repeater, chaff and smart
    materials), LIDAR

    (jamming and smart materials), Odometric sensor (magnetic or thermal), and electronic
    devices

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:16

    P. Ranaweera et al.

    (electromagnetic pulse) [101]. Attacks such as dictionary, rainbow table, and
    brute-force attacks to

    extract the passwords or keys, DoS, or DDoS attacks for service disruption, protocol-based
    attacks

    targeting Controller Area Network (CAN), or FlexRay and Rouge updates where the
    adversary

    targets the ECU firmware are plausible attacks on software perspective [98]. Out
    of those, attacks

    focused on in-vehicle, GPS and electronic devices are significant for MEC-based
    connected vehicle

    deployments. Apart from service disruption of self-driving applications, latency
    precipitated from

    these interposing or jamming attacks would still be crucial for connected vehicle
    applications.

    “Uconnect” is a remote monitoring and controlling in-vehicle connectivity tool
    that maintains

    a link with the internet from ECU for facilitating drivers the off-the-vehicle
    access. The same

    link with the internet is prone to exploitation for compromising vehicular controlling
    (brakes,

    steering, and lighting) and peripheral ECU/Bluetooth-based infotainment systems
    that improve

    the plausibility of impregnating user mobile devices [43]. The traditional measures
    for protecting

    the vehicular systems are inviable due to the evolving softwarize infrastructure
    of the connected

    vehicle concept.

    The mobility of the connected vehicles would be a major concern as their speeds
    and direction

    are changing rapidly with their movement. This mobility aspect of V2E applications
    are prone

    to threats of frequency hijacking of roamed channel, masquerading during handshake,
    and VM

    migration attacks presented [68]. The causes of this threats could result in traffic
    congestions,

    accidents, property damages, or human casualties with the latency caused by mobility.

    An infiltrated vehicular communication device is capable of injecting false information
    with the

    intention of causing accidents. A threat originated at a vehicular sub system
    for propagating a ma-

    licious agent to the MEC system is facilitated by the intrinsic circuitry of novel
    V2E deployments.

    As these embedded circuits are enriched with resources, connectivity and coverage
    for infiltration

    could be achieved. But the threat origination could incur at a vehicle that is
    not connected to the

    BS directly. The wireless links established between the vehicles in close proximity
    are vulnerable

    to jamming or interference attacks that disrupt the V2V communication links entirely.
    However,

    the possibility of a V2V link being subjected for intervention-based attacks such
    as MitM and relay

    would be less probable due to the speeds where the vehicles are travelling.

    3.4.2

    Existing Solutions. To counter the security threats on ITS deployments, security
    proce-

    dures and algorithms have been defined in the IEEE Wireless Access for Vehicular
    Environ-

    ments (WAVE) standard, which are followed in U.S. and Europe under ETSI [58].
    This standard

    proposes an ECC-based schema for certification and encryption where the wireless
    technology

    IEEE 802.11p is used for secure communication. An adversary is capable of exploiting
    even the

    smallest sensors inbuilt in a vehicle, such as ultrasonic sensors, which are used
    to detect the short

    range distances for assisting parking. Xu et al. suggested two defense strategies
    for vehicular sen-

    sory systems. They are single-sensor-based Physical Shift Authentication (PSA)
    scheme that

    verifies signals on the physical level and Multiple Sensor Consistency Check (MSCC)
    that em-

    ploys multiple sensors to verify signals on the system level to overcome the probable
    attacks on

    ultrasonic sensors such as random spoofing, adaptive spoofing and jamming attacks
    [145].

    As an initiative to achieve the efficiency guaranteed by Vehicular Delay Tolerant
    Networks

    (VDTNs), Kumar et al. [66] proposed a system architecture that integrates the
    smart-grid envi-

    ronments with MEC-based hosting platform for various applications commandeered
    by mobile

    devices that are operating within the vicinity of Plug-in Hybrid Electric Vehicles
    (PHEVs).

    The architecture consists of four layers where the edge data centers responsible
    for data stor-

    age, file services and CA servers for legitimizing secure entities are included
    in the third layer.

    Smart charging functionality is modeled for PHEVs using the Bayesian cooperative
    coalition game

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:17

    approach in which the throughput increased by 10–15% while 20% and 10% decrements
    are ob-

    tained for response time and incurred delay, respectively.

    Grewe et al. [45] discussed MEC as a solution to alleviating the cost and latency
    associated with

    the resource heavy algorithms executed at the cloud in Electronic Horizon (EH)
    ADAS systems.

    The strategy involves offloading the EH instances to the Base Transceiver Station
    (BTS) or the

    Road-side Unit (RSU). This enables mobility independent data retrieval and virtualized
    services

    with Information Centric Networking (ICN) integration. Security and privacy challenges
    in

    relation to the ICN integration are identified in the article.

    Cao et al. [19] introduced a MEC-based supporting architecture for Electrical
    Vehicle (EV)

    charging that employs RSUs as edge elements to orchestrate the operations: disseminating
    Charg-

    ing Station (CS) availability to EVs, information mining and aggregation for EV
    charging reser-

    vations. A protocol for signaling is designed between the entities CS, Global
    Controller (GC)

    located in the cloud and RSU, EV operating in the edge network. A process flow
    for charging was

    introduced in use of 4 algorithms and a scenario was simulated considering an
    area of 4,500 × 3,400

    m2 in Helsinki.

    Aissioui et al. [6] conceptualized the Follow Me edge-Cloud (FMeC) directive amalgamating

    the MEC and Follow Me Cloud (FMC) concepts that sustain the requirements of 5G
    automotive

    systems. The envisioned FMeC architecture enrolls PMIPv6 domains that serve edge
    cloud services

    and links to the vehicular entities from eNodeBs covering the domain area. Performance
    was eval-

    uated from a simulation to model mobile network environment, vehicle traffic environment,
    and

    network communication model that employed the tools MONeT++, INET, SimuLTE, and
    Veins.

    3.5

    Augmented Reality (AR), Virtual Reality (VR), and Mixed Reality (MR)

    Of encompassed 5G service categories: enhanced Mobile Boradband (eMBB), massive

    Machine-Type Communication (mMTC), and Ultra-Reliable and Low-Latency Commu-

    nication (URLLC); mobile VR, MR, and AR are use cases of eMBB and URLLC, which
    guarantees

    the ultra-reliability for the considered applications [30, 132]. As a 5G use case
    AR, VR, and MR

    are facilitating the services of providing immersive and interactive experience
    for: 5G hotspots,

    in-vehicle infotainment systems, and gaming for educating/instructing [88], in
    addition to envis-

    aged smart-health applications of remote surgery and remote robotic controlling
    [111]. The VR

    refers to a 100% simulated visualization while AR and MR are differing by the
    extent of virtualiza-

    tion overlaid with digitization on visual perception [30]. A typical VR Head Mounted
    Display

    (HMD) occludes the users’ field of view and positions the virtualized elements
    through eye and

    head movement tracking. In the current market, VR services are delegated to the
    low cost mobile

    devices such as Samsung Gear VR and Google Cardboard while Oculus Rift, HTC Vive
    or PlaySta-

    tion VR are high quality streaming products with latency sensitivity. The Motion-to-Photone

    (MTP) latency exceeding 15–20 ms for image rendering causes motion sickness for
    users through

    conflicted signals precipitated on Vestibulo-Occular Reflex.

    Latency < 10 ms, bandwidth > 1 Gbps and cell capacity > 500 connections are the
    requirements

    for ensuring the AR services with performance factors of screen response ≈ 2 ms,
    sensory extrac-

    tions ≈ 1 ms, refresh rate at 120 fps ≈ 8 ms, and network RTT processing ≈ 2 ms
    for AR to be

    deployed as a 5G use case [88]. Basic function of an AR mechanism is to combine
    digital data

    generated through computed processing to the physical reality that intensifies
    the human expe-

    rience. AR applications have adopted mobile technologies such as Layar, Junaio,
    Google goggles

    and Wikitude to enable its integration toward MEC [1]. Error diagnosing in industries
    and fixing,

    remote live supporting by the Original Equipment Manufacturer (OEM), Human-Machine-

    Interface (HMI) functionality for machine operation and virtual training for operators
    are few

    plausible use cases of AR and VR applications in the industries [69]. Typical
    AR process requires

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:18

    P. Ranaweera et al.

    five critical components operate: video source (mobile camera), tracker (position
    tracker of the

    user), mapper (modeling of the environment), object recognizer (known object identifier),
    and a

    renderer (processing of the frames) where the components other than the locally
    deployable video

    source and the renderer could be hosted in the MEC server for computer intensive
    offloading [87].

    An AR deployment on MEC test-bed has shown the latency and energy consumption
    reduction

    by 88% and 93%, respectively, through computational offloading [84]. This result
    is increasing the

    plausibility of integrating AR applications with MEC. Moreover, web-based AR (web
    AR) is an

    approach that overcomes the cross-platform and extensive provisioning limitations
    that are inher-

    ent with device-based and app-based AR applications. MEC is a pertinent deployment
    option for

    web AR that is envisioning to achieve 1 ms latency with 5G integration [104].

    3.5.1

    Security Vulnerabilities. The main threats plausible in AR applications are accessing
    and

    unauthorized manipulation of the video streams, where the attacker could easily
    distill the sen-

    sitive data of the users while manipulations of the video streams could lead to
    critical failures in

    machinery in industrial applications [69, 87]. Thus, an exploited streaming channel
    between the

    MEC servers and the AR applications could confiscate the content in MEC hosts,
    which would

    infect the streaming traffic conveyed to other AR users in the proximity operated
    under the ME

    application. An infected ME App would manipulate the MEP and MEPM of the MEC servers
    to

    allocate more inessential resources for the particular application resulting service
    interruption of

    the MEC Hosts. Conversely, the privacy of both physical and virtual worlds of
    AR and VR users is

    a great concern [70]. Other than the private information such as credit card details,
    banking and

    personal passwords, virtual information composing the behavioral patterns (pulse
    and eye track-

    ing enabling sensitive inferences [70]) would be a critical security concern.
    The interposing of any

    high-bandwidth channel is conceivable for attacks such as MitM, impersonation,
    malicious node

    inspection, relay attacks and any attack plausible for intervening communication
    channels.

    3.5.2

    Existing Solutions. Langfinger et al. [69] proposed a secure architecture for
    industrial AR

    applications to be compatible with Industry 4.0 standardization. In the deployment,
    an industrial

    automation device (as a Programmable Logic Controller (PLC)) is securely connected
    to a

    mobile device that would convey the camera frames into the edge server through
    the AR pipeline.

    After pose estimation, 3D registration, and rendering processes, AR output is
    visualized at the

    mobile device transferred in the same secure channel. Measures such as prohibition
    of parallel

    connections that links the UE and the edge, one directional information flow as
    in data diodes,

    using Transport Layer Security (TLS) protocol, and dynamic assignment of permissions
    for UE

    are proposed to enhance the security in this solution.

    Qiao et al. proposed a framework in Reference [104] for integrating web AR with
    MEC. The

    framework is formed from terminal, edge cloud, and remote cloud levels. The terminal
    level is

    pursuing the service scheduling and processing tasks while image capturing, image
    matching and

    3D rendering are performed under processing operation. The edge level orchestrates
    the AR ob-

    ject deployment, destruction and support functions while the remote cloud level
    is provisioning

    generalized services in terms of resource management. A performance evaluation
    conducted em-

    ploying Samsung Note 4, Wi-Fi, and Alibaba cloud for launching the MEC framework
    revealed the

    effectiveness of edge computing compared with cloud computing.

    The computational intensive and delay sensitive features of AR deployments prompt
    the issue

    of battery life time on AR devices. To address this predicament, Al-Shuwaili et
    al. [7] formulated

    a model for offloading AR tasks to a cloudlet operating in the edge to alleviate
    the computational

    and communication overhead thereby utilizing the energy consumption. Successive
    Convex Ap-

    proximation (SCA) scheme is adapted to allocate the resources in the AR process
    in an energy

    efficient manner.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:19

    Fig. 7. Applications and security of MEC-based UAV.

    Elbamby et al. [30] investigated a use case for multiplayer immersive and interactive
    VR gaming

    scenario for assessing the URLLC performance that employs edge computing and mmWave
    Ac-

    cess Points (mmAPs). In the gaming environment, the location and orientation of
    VR Players

    (VRPs) are are tracked and mapped into the virtual space using the mmWave head-mounted

    displays (mmHMDs). MEC network is formed to perform the offloaded real-time computing

    tasks that are conveyed through the mmAPs.

    Even though the MEC paradigm improves the network responsiveness of the VR applications

    through alleviated latency, saving the communication bandwidth is vital for the
    network to avoid

    congestions. Conversely, leveraging computation and caching resources in mobile
    VR devices are

    an approach of sustaining the transmission efficiency. Thus, Yang et al. [148]
    proposed a commu-

    nication constrained MEC framework that utilizes the consumption of resources
    in the mobile

    VR devices through the exploitation of caching mechanisms in the edge servers.
    Lyapunov the-

    ory was used to produce the offloading decision optimization algorithm, which
    acts as an optimal

    task scheduling policy, while the task requests are modeled as a Bernoulli process
    among other

    mathematical scenarios considered.

    3.6

    Unmanned Aerial Vehicles (UAVs)

    UAVs play an increasingly important role in various scenarios such as photography,
    disaster re-

    sponse, inspection, monitoring, precision agriculture, military, communication
    relaying, traffic

    control, and disaster relief services [50, 87]. Tasks such as disaster relief
    efforts, detection of dam-

    aged reactors in the Fukushima nuclear power plant, real-time sensing of radiation
    levels, and sta-

    tus assessment of the neutralizing program was orchestrated by UAVs during the
    Japans’ East great

    earthquake [91]. Federal Aviation Administration (FAA) is predicting the amount
    of UAVs to

    be sold annually to 4.3 million by 2020 as an indication on the extent of applicability
    for UAVs

    [39]. UAV-based communication deployments attribute: the Line-of-Sight (LoS) transmission
    at-

    tained by hovering to targeted locations, dynamic deployment ability that features
    robustness to

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:20

    P. Ranaweera et al.

    climatic effects and nullified costs for site installation in case of an acting
    BS, and UAV-based swarm

    networks that facilitate ubiquitous connectivity to ground users with high flexibility
    and various

    provisioning options [76]. UAV operations are categorized as Low-altitude Platforms
    (LAPs)

    and High-altitude Platforms (HAPs) that are distinguished on altitude, computation,
    coverage,

    power, capacity and endurance capabilities. Moreover, Size, Weight and Power (SWAP)
    of UAVs

    are constraints for attaining desired performance metrics. The priority of the
    UAV is to conserve its

    battery life for flying while offloading the computational or storage content
    to the MEC servers for

    processing [103]. Thus, employing strong cryptographic primitives or prolonged
    security protocols

    would be infeasible. The controlling link to UAVs could be maintained from a ground
    station or by

    a remote station controlled through a MEC system. Figure 7 illustrates various
    UAV-enabled appli-

    cations in addition to embedded components of a UAV plausible for exploitation
    and attack vectors.

    3.6.1

    Security Vulnerabilities. In this application, the usage of cryptographic primitives
    would

    be limited due to the requirement of preserving power (e.g., drones). Concisely,
    threats plausi-

    ble for UAVs are categorized under Electronic/Electromagnetic, Cyber, and Physical
    (ECP)

    spaces [39]. Most common type of attack plausible for drones or UAVs is the GPS
    spoofing attack,

    in which fake GPS locations are sent to the UAV for misleading or crashing the
    object. Approaches

    to bypass the cryptographic measures with electromagnetic, optical, or acoustic
    emanations called

    compromising emanations are mentioned in Reference [39]. Apart from that attacks
    such as mal-

    ware, key-loggers, blinding the sight of the remote pilot with laser, identity
    spoofing, cross-layer,

    multi-protocol and various DoS or DDoS attacks focused on exhausting the battery
    of the UAV is

    plausible [50, 107]. In the two methods where UAV maintains direct connectivity
    with the BS for

    controlling or computational offloading, the connectivity could be subjected to
    interposing attacks

    plausible on the air interface [109]. The threats toward the MEC system from UAV-based
    attacks

    can exist with the computational offloading method where a malicious agent could
    be propagated

    to the MEH for manipulating ME Apps. Any successful attack could result in UAV
    crashing that

    cause damages to property or human lives.

    3.6.2

    Existing Solutions. Fouda et al. conducted a comprehensive assessment for plausible
    at-

    tacks on UAV Systems (UAS) focusing on Software-defined Radio (SDR)-based UAS
    architec-

    tures [39]. Hooper et al. [54] proposed a multi-layer security framework that
    integrates the Open

    System Interconnection (OSI) model layers with the Linux operating system kernel
    to secure the

    Parrot Bebop type UAVs from the exploits buffer overflow, DoS and Address Resolution
    Proto-

    col (ARP) cache poison attacks. Penetration tests have been undergone in addition
    to introducing

    a watchdog timer to utilize the CPU operations to the navigational processes and
    anti-spoofing

    mechanisms to the UAV access point.

    Motlagh et al. [91] proposed a crowd surveillance method adopting UAVs and face
    recognition

    techniques for detecting crimes, vandalism, and terrorist acts. In this case,
    MEC servers are de-

    ployed alongside a BS for offloading the surveillance processing tasks to utilize
    the battery life of

    UAVs. In the experimental setup, a hexa-copter used as the UAV is embedded with
    a camera, LTE

    modem, computing and sensory inclusions for flight controlling. The access to
    the MEC server is

    facilitated from a LTE eNodeB while the face recognition process is operated at
    the ground con-

    trol station. Local Binary Pattern Histogram (LBPH) algorithm is employed for
    face detection

    while the results demonstrated a significant reduction in energy consumption and
    processing time.

    Garg et al. [43] proposed a load balancing system for vehicular edge processes
    where UAVs are

    used as intermediary hubs for transmitting information for processing and surveillance
    activities.

    The system includes the entities: vehicular entity, UAV, dispatcher, edge devices,
    cryptographic en-

    tity, and the aggregator. The main steps of the model are authentication, balance
    load distribution,

    data processing, encryption, decryption, aggregation of data, and decision delivery
    to the vehicle

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:21

    Table 1. Summary of Security Challenges for MEC Integrated 5G-enabled Use Cases

    through the UAV. A triple-Bloom-filter is used to launch a fast service processing
    platform between

    the vehicles and UAVs for distinguishing traffic, alleviating E2E delay, and enhancing
    authentica-

    tion mechanism. The experiments conducted in a vulnerable environment with 100
    possible attack

    vectors concluded the improved factors: computation time complexity, time complexity,
    delay, and

    precision.

    Inspired by the Wireless Power Transmission (WPT) technologies and their usability
    on

    MEC use cases, Zhou et al. [155] introduced a novel UAV-enabled wireless powered
    MEC system

    for prolonging the operational time of the energy limited mobile devices. UAVs
    are transmitting

    wireless energy to UEs that are located in the coverage area, where the UEs are
    granted the ability

    to leverage the harvested energy to perform computations or offloading tasks.
    A 3D Euclidean

    coordinate system and Time Division Multiple Access (TDMA) protocol is adopted
    for formu-

    lating the model. Moreover, energy minimization, computation offloading, CPU frequency
    opti-

    mization, and trajectory optimization are studied employing Sequential Convex
    Approxima-

    tion (SCA) technique and Karush-Kuhn-Tucker (KKT) conditions. The simulated results
    sug-

    gest a decremented total energy consumption of UAVs in the proposed scheme compared
    with two

    other schemes. The minimization however, is not significant. Security challenges
    for MEC-based

    5G use cases are specified in Table 1. Further, security countermeasures/best
    practices adoptable

    for MEC use cases are tabulated in Table 2.

    4

    MEC- AND 5G-RELATED PROJECTS

    The MEC initiative is evolving around Europe as most of the companies that collaborate
    to stan-

    dardize the concept are European institutions including the ETSI. Thus, it is
    conspicuous that most

    of the MEC-based projects are formed around Europe. The European 5G Infrastructure
    Public

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:22

    P. Ranaweera et al.

    Table 2. Summary of Security Countermeasures/ Best Practices for MEC Use Cases
    / Applications

    Ref.

    No.

    Proposed Security Countermeasures / Best Practices

    Critical

    Infrastructure

    eMBB Cases

    M2M and mMTC

    Auto Driving/ V2V

    AR/ VR/ MR/ XR

    UAVs

    [128]

    Machine learning-based anomaly detection technique for

    SCADA systems

    ✓

    ✓

    [74]

    Utilizing blockchain-based VNF descriptors for energy level

    tracking in RAT xMEC offloading deployment

    ✓

    ✓

    [122]

    SMART framework for detecting anomalies in PLC-based

    extracted data

    ✓

    ✓

    [42]

    Blockchain model for SGNs to counter SDT and BEA, energy

    related attacks

    ✓

    ✓ ✓

    [66]

    Legitimization of PHEV entities from CA servers in the

    proposed architecture for MEC-based smart-grid vehicular

    charging process

    ✓

    ✓

    [45]

    Security and privacy considerations in the ICN integrated

    MEC-based offloading scenario for EH ADAS systems

    ✓

    ✓

    [69]

    Secure architecture for industrial AR applications that form a

    secure pipeline between UE and the edge servers

    ✓

    ✓

    ✓

    [54]

    Multi-layer security framework for Parrot Bebop UAVs

    integrating OSI model

    ✓

    [43]

    Cryptographic means used in authentication mechanism

    considered for UAV-based load balancing for edge processes

    ✓

    ✓

    [108]

    Security as a Service (SECaaS) approaches for the edge

    ✓

    ✓ ✓ ✓ ✓ ✓

    Private Partnership (5G PPP) with the initiative of Horizon 2020 grants have funded
    a multi-

    tude of research groups in excelling their products and innovative insights on
    5G related directives

    [103]. MEC is an underlying concept of most of such projects to achieve the guaranteed
    features.

    Therefore, in this section, MEC related projects and details of the research groups
    are addressed.

    4.1

    MEC AI (January 2018–December 2019)

    MEC AI [95] is a directive pursued under the Edge Computing Enhanced by Artificial
    Intelli-

    gence (EDGE AI) project conducted by University of Oulu, Finaland. The project
    is funded by the

    Technology Industries of Finland Centennial Foundation, Jane and Aatos Erkko Foundation,
    and

    “Future Makers” award. As a pioneer in cutting edge research on 5G directive,
    researches in Uni-

    versity of Oulu are focused on realizing the potential of employing edge computing
    as a means for

    processing data extracted from sensory and network devices to be utilized for
    applications such as

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:23

    hospitals, industry and vehicle steering. Prime objectives of this initiative
    are low latency and se-

    curity. MEC-based AI methods are developed to achieve those objectives in collaboration
    with the

    Finnish industries as Nokia. Especially, security aspects of MEC and AI integration
    is considered

    as a prime focus.

    4.2

    ANASTACIA [Advanced Networked Agents for Security and Trust Assessment in

    CPS/IoT Architectures] (January 2017–December 2019)

    ANASTACIA [14] is a EU H2020 funded project that integrates MEC and IoT for CPS-based
    de-

    ployments to guarantee holistic trust and security by-design solutions. This is
    one of the highly

    functioning H2020 projects that investigate security from NFV and SDN applicability
    perspective.

    ANASTACIA achieved the goals of adaptation of security and privacy practices evident
    from the

    results of the projects that yield the technological integration of Low-resource
    IoT, VNF image

    integrity, MEC resource geo-partitioning, NFV security best practices, anomaly-based
    IDS, secure

    NFVI, network softwarization, 5G NB-IoT, Security-as-a-Service and many other
    novel concepts.

    4.3

    SESAME [Small Cells Coordination for Multi-tenancy and Edge Services]

    (July 2015–January 2020)

    SESAME [47] is a EU H2020 project that targets the innovation of network intelligence,
    applica-

    tions in the edge and NFV elements established through the extension of small
    cell concept for

    realizing highly dense 5G scenarios. MEC concept is studied for proposing the
    Cloud-enabled

    Small Cell (CESC) concept that forms a multi-operator configurable small cell
    to integrate virtu-

    alized execution platforms. SESAME targets to develop the orchestration strategy,
    NFV manage-

    ment, consumer virtualization management interfacing, self-x feature and radio
    access manage-

    ment techniques demonstrated through a prototype implementation.

    4.4

    SUPERFLUIDITY [A Super-Fluid, Cloud-Native, Converged Edge System]

    (July 2015–March 2018)

    SUPERFLUIDITY [123] project is intending to achieve super fluidity in the network
    by extend-

    ing services to the core, aggregation, and edge partitions as in the case of zero
    viscosity fluids.

    This project is funded by the EU H2020 initiative. SUPERFLUIDITY answers the shortcoming
    of

    current networks such as impeding provisioning times, wasteful over-provisioning
    in variable de-

    mand, ineffective hardware, and ineffective heterogeneity support for multi-vendor
    components.

    The project developers are aiming to furnish the location, time, scale, and hardware
    independence

    benefits to the 5G networks guaranteeing telecom operators the capability to blend
    IT infrastruc-

    ture effectively. Developing a security framework to control the access of network
    processing

    functions is one of the project objectives of SUPERFLUIDITY. Recent directives
    of the project have

    shifted toward SDN and NFV technologies.

    4.5

    5G EVE [5G European Validation Platform for Extensive Trials]

    (July 2018–July 2021)

    5G EVE [34] intend to implement and test, an advanced 5G infrastructure formed
    by intercon-

    necting existing European sites at Greece, Spain, France, and Italy. It is one
    of the three projects

    funded by the 5G PPP in 2018. The conceptual goal of this project is to develop
    a 5G end-to-end

    facility in Europe to validate the network Key Performance Indicators (KPIs) of
    the 5G pro-

    totype scenarios through experimentation. The targeted experimental subjects include
    advanced

    spectrum management, MEC, core/backhaul services, heterogeneous accessing methods,
    and site

    internetworking via multi-slice orchestration. The telecommunication operators
    OTE, Telefonica,

    Orange, and TIM are facilitating the sites at European vicinities that focus on
    diverse use cases

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:24

    P. Ranaweera et al.

    as smart mobility, Industry 4.0, smart energy, smart environment, Immersive media
    and entertain-

    ment. Services such as URLLC, eMBB, and mMTC are dominating the deployment options.

    4.6

    6G FLAGSHIP (June 2018–May 2026)

    This project initiated by University of Oulu, Finland [94], envisions the wireless
    connectivity for

    2030 with data-driven and near-instant features. MEC and use cases specified in
    this article are

    considered directives of 6g-Flagship in addition to Machine Learning (ML) and
    Artificial In-

    telligence (AI) approaches to automate the functions optimally. The goals of this
    project reach

    from finalizing the 5G adoption, to the development of the 6G-enabling technologies
    with speed-

    ing up the digitization process. The domains of wireless connectivity, devices/circuits
    technology,

    distributed computing, and services/applications on 6G are covered in this project.
    A 5G test net-

    work is already deployed in the project and deployed for developing easy to use
    tools for future

    advancements.

    Table 3 represents the summary of MEC-based projects been discussed and their
    targeted aspects

    in terms of security, privacy, trust, mobility, and interoperability.

    5

    DISCUSSION AND FUTURE WORK

    This section comprises a concise explication of assimilated insights from the
    survey in terms of

    security and privacy of MEC systems. Presented insights are aligned with the future
    directives

    proposed from emerging researches for recognizing potential of the MEC deployments.
    Moreover,

    potential applications and probable technological solutions to be integrated with
    MEC to enhance

    the security are summarized.

    5.1

    MEC Applications

    5.1.1

    Critical Infrastructure.

    Lessons Learned: It is evident that MEC capabilities forecast the potential to
    realize the smart

    city concept. Enabling the versatility of infrastructure-based servicing is the
    key to achieving that

    goal. Though assuring security for diverse infrastructure-based services is an
    arduous task due

    to their heterogeneous system architectures. Offloading storage and processing
    functions to the

    MEC edge network however, guarantees that these variant technologies are operating
    in a com-

    plied digitized environment in the data processing phases. SCADA- and PLC-based
    operators are

    common in these deployments. Threats originating internally in such environments
    are capable

    of exploiting the edge system once instilled through the communication channels.
    Eventhough

    mechanisms have been studied to detect malicious entities in SCADA-based systems,
    the security

    of offloading channels are not addressed significantly.

    Future Directions: In terms of smart-grid security, various approaches such as
    key distribution

    based on Needham-Schroeder authentication protocol, ECC, PKI, Trusted Anchor (TA),
    Light-

    weight Directory Access Protocol (LDAP) as a third-party, hybrid Diffie-Hellman,
    AES, RSA,

    Tsai-Lo identity-based encryption scheme, and ECC-based ElGamal schemes are proposed
    for se-

    curing the connectivity extending from the SEM to the smart grid [89, 93, 126].
    Blockchain is an

    approach to be considered in the future to ensure the privacy of subscriber consumption
    statistics

    traversing in SGNs [60]. Similar approaches are plausible for developing security
    solutions to ter-

    minal entities in other infrastructure services. Moreover, securing the offloading
    channels of the

    edge system is a critical directive for mitigating threats originated internally.
    In addition, outsourc-

    ing security to a trusted MEC-based service as in Security as a Service (SECaaS)
    approaches are

    gaining popularity due to its optimum resource utilization in the context of critical
    infrastructure

    [108].

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:25

    Table 3. Summary of 5G and MEC Projects and Research Groups

    Project

    Main Research Focus

    Security Privacy Trust Mobility Interoperability

    MEC AI [95]

    Ensuring low latency and

    security in 5G networks via

    MEC and AI integration

    ✓

    ✓

    ✓

    ANASTACIA

    [14]

    Investigating and

    demonstrating a holistic

    trust and security by design

    solution for CPSs with

    integrated MEC and IoT

    concepts that employ

    NFV/SDN-based

    networking infrastructure

    ✓

    ✓

    ✓

    ✓

    SESAME [47] Extending the small cell

    concept to achieve CESC,

    with the integration of

    MEC and NFV technologies

    to realize 5G dense

    scenarios

    ✓

    ✓

    SUPERFLUID

    [123]

    Proposes a converged

    cloud-based 5G concept

    that enable mobile edge use

    cases by extending the

    service functionality to the

    holistic network

    ✓

    ✓

    ✓

    5G EVE [34]

    Implementing and testing

    an advanced 5G

    infrastructure extended to

    European sites for

    validating 5G services

    including MEC

    ✓

    ✓

    6G FLAGSHIP

    [94]

    Developing the

    fundamental technologies

    for emerging 6G with an

    emphasis on wireless

    connectivity and intelligent

    distributed computing

    ✓

    ✓

    ✓

    ✓

    5.1.2

    eMBB Channels/Video Analytics/Big Events.

    Lessons Learned: Crowd-sourcing applications are one of the major contributors
    for prolifer-

    ation of video streaming traffic. As these services are demanding UHD level quality
    in videos to

    facilitate ubiquitous reception at mobile devices, managing the bandwidth utilization
    is a conun-

    drum for MNOs. This requisite is prominent in case of a big event coverage is
    undergoing. Thus,

    MEC in-proximity servers are capable of buffering the content prior to launching
    the streaming

    service, that enables the seamless video transmission. Advance video analytic
    capabilities are plau-

    sible with MEC servers that align with CCTV, face and vehicular name plate recognition
    techniques

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:26

    P. Ranaweera et al.

    adapted by authorities. Most common type of security attack plausible for streaming
    channels is

    the interposing attacks conducted for altering the content for misleading the
    receiver, which are

    influenced by politics, terrorist, or cyber marketing strategies. To secure the
    channel, an acceptable

    level of encryption should be employed. Though embedding security measures for
    video stream-

    ing channels in these scenarios are costing the bandwidth utilization. Thus, metrics
    should be

    established to retain the balance between security and bandwidth usage.

    Future Directions: As trending video streaming and crowd-sourcing applications
    are demand-

    ing their services to mobile devices, mobility is an aspect to be considered for
    proposing security

    measures. Thus, PLS-based approaches as in Reference [143] could be utilized to
    ensure security

    from the mobile device end. Joint network coding and re-transmission is an approach
    to secure

    the video streaming channels in IoT systems as proposed in Reference [105]. Moreover,
    embedding

    security mechanisms in the video coding protocols at the design stage with minimum
    bandwidth

    adaptation is an interesting research directive for the future.

    5.1.3

    mMTC Links in IoT.

    Lessons Learned: The mMTC applications are ranging from the personally using e-health
    type

    WBAN wearables to massive industrial applications that employ MTCDs of different
    scales to cre-

    ate an autonomous environment. MEC plays a vital role for ensuring security for
    wearables with

    attributed location and context awareness. Moreover, edge infrastructure acts
    as a offloading ser-

    viceable platform to the industrial mMTC applications to improve their efficiency
    and global reach.

    As MTCDs are operating with various non-cellular communication technologies, employing
    secu-

    rity mechanisms should be applied to each technology separately in accordance
    with their proto-

    cols and specifications. Authentication mechanisms to be adapted should vary dependent
    on the

    authenticating entity as both human and machine entities are engaging in mMTC
    communica-

    tions. Service impeding attacks such as DoS and DDoS are causing more damages
    to mMTC-based

    industrial systems due to their reliance on scheduled operations. Privacy is a
    considerable factor

    for WBAN-based services that is not addressed significantly.

    Future Directions: For implementing security in WBAN based on nano-technological
    scale,

    biochemical cryptography could be adopted where biological molecules such as DNA
    or Ribonu-

    cleic Acid (RNA) are used as a source of encryption [138]. Though, this emerging
    field is cre-

    ating new set of challenges, a cryptographic key based on molecular configuration
    or chemical

    reaction unique to a person would grant the level of inherence required from the
    bio-metrics in

    the nano-domain. Moreover, ECC-based lightweight cryptographic protocols could
    be employed

    with WBAN sensory devices that are more resourceful than nano-level devices. In
    Reference [153],

    a Lightweight and Robust Security Aware (LRSA) D2D assisting Certificate Less
    Generalized

    SignCryption scheme is proposed for WBAN-based Mobile Health (M-Health) applications
    that

    resemble the requirement. As M2M-based authentication schemes are prominent in
    this use case,

    PUF-based approaches would be viable for deployment. Integrating security into
    D2D offloading

    schemes is a potential research area for the future under this application. Blockchain
    is becoming

    a solid resolution for privacy protection. Thus, blockchain-based solutions such
    as Reference [52]

    for tele-health wearable privacy preservation and certificate revocation approaches
    for M2M links

    as in Reference [51] are promising directives for the future.

    5.1.4

    Autonomous Driving/Vehicle to Vehicle (V2V) Communication.

    Lessons Learned: This is one of the leading use cases of MEC that relies on processing
    capa-

    bility of the edge for enabling autonomous driving to mitigate traffic congestions
    and accidents.

    Context awareness feature of the MEC is the key to deploying these services. In
    this use case, most

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:27

    probable attack vectors are emanating from the in-vehicle systems as they are
    prone to physical

    attacks. The radio-based links that communicate with the MEC BSs directly are
    exploitable by at-

    tackers to cause accidents. In an ITS system, infrastructure-based intermediary
    entities are located

    for expanding coverage. These entities are accessible for physical manipulations.
    Moreover, inter-

    facing vehicular entities that engage in V2E adaptations are plausible scenarios
    for MEC. In that

    aspect, security in DSRC protocols that enable the V2V communication is a significant
    factor to

    be considered as explicated in Reference [150].

    Future Directions: Embedding adequate security measures to DSRC protocols as proposed
    in

    Reference [79] should be considered to enhance V2E type communication channels.
    As vehicu-

    lar offloading channels are requiring high responsiveness compared with other
    offloading mech-

    anisms, an approach as Vehicular Edge Computing Network (VECN) proposed in Reference

    [125] could be employed to secure the offloading channels specific to vehicular
    communications.

    According to ITS standard, vehicular entities are connecting with the edge under
    different scenar-

    ios of V2X. Thus, adaptive security mechanisms should be utilized as proposed
    in Reference [113].

    Moreover, adaptable measures to enhance the security in ECU of vehicles should
    be investigated

    to mitigate in-vehicle threats. Since all such security measures cannot be applied
    manually, au-

    tonomous approaches should be sought out employing AI or ML methods with novel
    algorithms

    to exploit the trade-off of security application, latency, and energy consumption
    [12].

    5.1.5

    AR/VR/MR.

    Lessons Learned: AR and VR technologies are prominent for gaming and e-learning-based
    ap-

    plications that are extended from eMBB and URLLC adaptation. Latency, bandwidth,
    and cellular

    capacity are prime factors to achieve the required performance. Similar to video
    streaming appli-

    cations, MEC facilitate a closer proximity video server for processing and storing
    AR scenarios.

    Alleviating the latency associated with image rendering and transmission is critical
    for the VR

    or AR users to avoid health issues as motion sickness. The remote surgeries, error
    diagnosis and

    maintenance in industries are viable AR deployments for the future. Thus, minimizing
    the delay is

    vital for realizing these deployments. In the perspective of security, service
    impeding attacks are

    jeopardizing such latency prone services. Attack vectors such as physical tampering,
    side-channel

    attacks, malicious code injections, and hardware Trojans are applicable to AR/VR
    HMDs. Privacy

    is a key concern with AR systems, as they are extracting a higher range of sensory
    acquisition

    scope (visual strength, ocular orientation, location, and arm/leg motion tracking)
    that expose user

    sensitive credentials and behavioral statistics.

    Future Directions: Developing security measures in the user devices as HMDs is
    imperative to

    ensure the privacy of users. As behavioral statistics could be gained from AR-
    or VR-based games

    played by the users without their awareness, legislations should be put forward
    to extract user

    consent before enrolling with a particular game. Moreover, human health is a concerning
    factor

    for AR/VR-based services that could result in ocular discomfort. Thus, proper
    methods should exist

    to notify the user regrading the timely visual quality that AR application is
    attributing to safeguard

    the user health. Though elevated number of sensory extracting apparatus embedded
    in AR devices

    are forming an opportunity to improve the existing authentication schemes and
    network security

    through visualization as patented in References [10, 124].

    5.1.6

    Unmanned Aerial Vehicles (UAVs).

    Lessons Learned: As most UAV-based services are operated with a direct connectivity
    main-

    tained with the UAV from a ground station, mobility tackling and LoS control signal
    transmissions

    are factors that raise concerns over the communication aspects. The dispersed
    MEC servers are

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:28

    P. Ranaweera et al.

    providing an extended coverage for UAVs to operate seamlessly. UAVs could enhance
    the perfor-

    mance by offloading the processing to MEC servers. Due to the higher mobility
    and eccentric

    reachability, UAV deployments are perceptible for surveillance activities in the
    future. Though bat-

    tery life is the prime factor that decides their performance. Thus, UAV targeted
    attacks are focusing

    on exhausting the resources of it to terminate its life-cycle. In addition, eavesdropping
    scenarios

    are probable with intently placing of fake UAVs to induce spoofing attacks.

    Future Directions: Proper measures should be explored to pursue the operation
    of the UAVs in

    instances that it fails to maintain the LOS connectivity to the operating ground
    station. Utilizing AI

    for developing an adaptive auto-pilot scheme is an approach to overcome that requirement
    [146].

    PLS measures could be adapted as in Reference [156] for maximizing the Intercept
    Probability

    Security Region (IPSR) to obscure the eavesdroppers through friendly jamming.
    Moreover, UAV-

    enabled mobile relaying with an integrated MEC platform could be utilized for
    improving PLS in

    mobile communication environments [141]. UAVs should be embedded with self-activated
    security

    features at the manufacturing stage to counter intercepting attacks as isolation
    from the communi-

    cation network is not an option. Similar to V2V applications, UAV requires the
    autonomous edge

    intelligence through means of AI/ML methods to improve decision making, and security
    manage-

    ment [46, 149].

    5.2

    Futuristic Applications

    5.2.1

    Rural Communication. The term “rural” signifies an opposite meaning to an urbanized

    area that does not inherit adequate amount of resources to facilitate a seamless
    communication

    operation. As telecom operators are prioritizing their return on investment, developing
    telecom-

    munication infrastructure extending to areas that occupy minor population is ineffective
    in their

    perspective. Moreover, pragmatic circumstances such as geological location, atmospheric
    condi-

    tions, LoS, and failure to acquire land to launch remote sites are plausible factors
    that enable rural

    communication. Thus, existing communication options are limited to satellite links
    that are accessi-

    ble globally with attributed drawbacks of latency and high reliance on atmospheric
    conditions [22].

    Rural communication is applicable for various instances where rural communities
    are restricted

    of accessing novel technologies that rely on mobile connectivity for operation
    [120]. Rural Smart

    Grids are one such instance in which an isolated facility or minor community are
    serviced by a low

    capacity grid deployment [62]. Moreover, health sector is a widely applicable
    rural circumstance

    that requires assistance from underlying communication infrastructure to handle
    emergency situ-

    ations including ambulances [29, 55]. Due to the improved capacity and coverage
    in mobile sites of

    MEC systems, servicing the rural areas are plausible with proper mobile propagation
    parametric

    adjustments. In addition, MEC-enabled RAN access interfaces are capable of supporting
    non-3GPP

    communication services that are plausible for connecting the rural sites to the
    proximate BS. MEC-

    based rural transmission of data endure an improved opportunity to ensure security
    and privacy

    compared with satellite communications.

    5.2.2

    Smart Agriculture/Farming. The rapid population growth demands excessive food
    pro-

    duction to cater humans and live stocks in farming industries. Resource depletion,
    pollution and

    scarcity for labor are elevating the arduousness of maintaining agriculture-based
    services to cater

    the demand [100]. Thus, automation is an imminent option for improving the servicing
    of smart

    farms with IoT integration. IoT sensors are deployable for monitoring climatic
    and crop devel-

    opment status to automate the water and fertilizer dispersing mechanisms. These
    automation

    strategies draw insights from gathered data analytics to maximize the crop production.
    Adapting

    machine learning is such a strategy for crop selection and maximizing crop yielding
    rates [67].

    M2M links are typically established between IoT devices that employ technologies
    such as BLE,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:29

    NFC, or Wi-Fi. As these devices are located remotely to the main farm site, physical
    tampering

    due to intended or natural causes is plausible. Vehicular monitoring is another
    aspect of smart

    agriculture that enhances the efficiency of the outcome. UAVs are applicable to
    remote monitoring

    of crops while autonomous vehicles (tractors) are enabling precision farming [103].

    Nanotechnology-based bio-sensors are a trending adoption for smart farming applications
    to

    conduct accurate analysis on soil humidity, water, pesticide usage, and plant
    pathogens in a nano-

    scale [9]. Dong et al. [27] proposed an information centric approach to achieve
    the anycast service

    in MTC with ICN (Information Centric Networking) being enabled as a slice in the
    future net-

    work adaptable to smart farming. The mobile edge computing at the eNodeB facilitates
    the any-

    cast service to the clients with significantly less experienced latency and reduced
    control message

    overhead generated in the core network. In the MEC perspective, similar to rural
    communication,

    MEC servers remotely situated or reached via enhanced coverage of MEC-enabled
    BSs, contribute

    to smart agriculture services significantly. Though achieving security is a challenging
    task due to

    wide coverage.

    5.2.3

    Industrial IoT (IIoT) and Industry 4.0. Industrial Internet, IIoT or “Industry
    4.0” is a stan-

    dard represented by the Fourth Industrial Revolution (4IR) for integrating IoT
    services for

    industrial sectors [103]. Initial intention of the Industry 4.0 standard was to
    integrate Cyber-

    Physical Systems (CPS), IoT and cloud computing-based data analytics to facilitate
    automa-

    tion for industries by assuring interoperability, information transparency, technical
    assistance,

    and decentralize decision making design principles [106]. Sensors in IIoT are
    optimizing the pro-

    duction from captured sensory data via Programmable Automation Controllers (PAC)
    that

    handle processing and communication [44, 127]. The majority of current industrial
    automation

    plants are embedded with SCADA systems. Thus, security vulnerabilities explicated
    under criti-

    cal infrastructure-based applications are adoptable for this circumstance. Moreover,
    IIoT could be

    visualized as a way of amalgamating the machine-based and human-based workforces
    for achiev-

    ing a maximal outcome that benefit industrial owners and human operators. Digitized
    data of

    every aspect in the manufacturing processes offer opportunities to optimize the
    practices revealed

    through proper mechanisms. As industrial factories are large vicinities, MEC-enabled
    BSs could

    be launched inside the factories for enhanced service provisioning depending on
    the occupied

    human and non-human workforce. MEC edge level launched within a factory premises
    could be

    configured for servicing specialized industrial requisites to achieve low latency
    and high reliability.

    Several edge-based approaches are proposed for enhancing IIoT operation in References
    [16, 97].

    As M2M-based communications are imminent, security protocols should adopt proper
    D2D au-

    thentication mechanisms such as PUF and PLS for mitigating exploitations.

    5.2.4

    Tactile Internet. The Tactile internet is considered as the next evolutionary
    level of the In-

    ternet that deliver real-time control, touch, sensing/actuation information via
    a reliable, available,

    responsive, secure, and intelligent connectivity that envisions a broader internetworking
    context

    capable of handling unprecedented circumstances probable with impending applications
    [5]. This

    vision preemptively coined by G. P. Fettweis in 2014, creates a plethora of opportunities
    and ap-

    plications that provision features required for expanding IT market base [85].
    It is standardized

    by the IEEE Tactile Internet Standards Working Group that is designated by IEEE
    1918.1 [53]. The

    5G mobile network concept is the raison d’etre for Tactile internet that focuses
    on serving the

    industries expanding with the Industry 4.0 standard [129]. Functional representation
    of the end-

    to-end Tactile internet architecture includes master, slave, and network domains
    where master and

    slave domains are operating at Tactile edges[5]. These deployments are mainly
    focused on serv-

    ing CPSs, MTC, M2M, D2D, and VR applications that require 1 ms of round-trip latency.
    Maier

    et al. [85] investigates the deployment of Tactile internet concept with Fiber-Wireless
    (Fi-Wi)

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:30

    P. Ranaweera et al.

    enhanced LTE-A heterogeneous networks to be adopted in MEC considering the latency
    and relia-

    bility performance aspects. MEC with its attributed ultra-low latency and high
    reliability process-

    ing infrastructure in the edge envisage the visions of Tactile internet that enable
    proper security

    mechanisms as a significant factor.

    5.2.5

    Disaster Management. Environmental disasters were once believed as a means of
    balanc-

    ing the human population from over-exhausting the resources on earth from devastation’s
    such as

    landslides, earthquakes, avalanches, tsunamis, volcanic eruptions, flooding, forest-fire,
    and light-

    ning. Though current disasters are prone to be emanated by human intervention
    as in massive

    explosions resulted from industrial malfunctions that extend to nuclear level
    or extremist acts re-

    sulted from terrorism. In spite of the origination of disasters, the damage and
    casualties associated

    with them are unpredictable. Unprecedented nature of the affected scope by geographical
    and at-

    mospheric means are exacerbating the circumstances for evacuation procedures conducted
    by the

    authorities. Thus, scientists are focusing on integrating IoT for disaster management
    and relieving

    scenarios that contribute to early warning, notification, data analytics, knowledge
    aggregation,

    remote monitoring, real-time analytics, and victim localization functions [114].

    Deployment of IoT sensors for measuring the environmental statistics (such as
    atmospheric,

    seismic, volcanic, radiation, and ocean level) is paramount to forecasting disasters
    and their mag-

    nitude. Maintaining the communication links without been overloaded is a prime
    requisite for

    telecommunication service providers perspective in a disaster situation. MEC is
    a paradigm intro-

    duced to improve the standards of current telecommunication infrastructure in
    terms of service

    provisioning and access capacity. Thus, Disaster management services extended
    through WSNs

    could be operated by a MEC edge level in a certain geographical coverage area,
    enabling the disas-

    ter mitigation functions mentioned above. Proliferated responsiveness of the MEC
    RF-based access

    interfaces, attribute the potential to improve the evacuation procedures and notification
    schemes

    with the integration of crowd-sourcing applications [112]. As Ray et al. [114]
    presents various

    IoT-based state-of-the-art solutions applicable to disaster management situations,
    proposed cloud-

    based IoT systems as RESCUE by Khan et al. [64] are extensible for MEC platforms.
    Leveraging

    UAVs for disaster relief missions specialized in crowd localization is an effective
    use case that MEC

    can contribute for enhancing the performance [32].

    5.3

    Challenges for Wide Adaptation of 5G

    The wide adaptation of 5G for IoT realization is imminent. The networking infrastructure
    standard-

    ized for 5G is different from LTE-based deployments in both access and core network
    formation.

    Thus, following aspects can be presented as major challenges for 5G realization.

    URLLC capabilities are burdening the security engineers in applying appropriate
    level of secu-

    rity for communication protocols and payload overheads. Thus, novel cryptographic
    means should

    be investigated to minimize the overhead drastically. Massive IoT applications
    are creating is-

    sues for resource utilization at the edge in terms of processing, communication,
    and networking

    aspects with the proliferated IoT devices. Managing security is evidently arduous
    in such circum-

    stances. Energy efficiency of both UEs and intermediary resource constrained edge
    nodes are

    quite vital for the service continuity. Thus, energy saving mechanisms (i.e.,
    hibernation), energy

    harvesting techniques, and energy optimum processing are quite crucial for 5G
    deployments.

    Service migration is becoming an imminent aspect of edge computing, with local
    5G operator-

    based gNBs. Security concerns associated with migration process in terms of virtualization

    technologies, MNO domains, and handover handling should be investigated thoroughly.
    Scalable

    security requirements are vital for 5G-based deployments where security and latency
    have a clear

    trade-off. Thus, security features/mechanisms should be applied in accordance
    to the requisites

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:31

    from the application and its priority level. Orchestration is the most researched
    aspect in virtual-

    ization domain, which requires complete autonomous control embedded with intelligence
    in case

    of edge computing. Security is a vital function under orchestration, and should
    be standardized for

    autonomous operation.

    6

    CONCLUSION

    Security and Privacy are vital requirements for upcoming digital services that
    hold similar sig-

    nificance to performance metrics. Therefore, robustness of a particular application
    against cyber-

    intrusions is a demanding factor for raising its selectivity among consumers.
    However, security

    flaws should be investigated according to a deployment scenario for accurate identification
    of vul-

    nerabilities and mapping existing security solutions to mitigate them. In this
    article, we stated

    various vulnerabilities and attacks that range through cyber and physical space.
    The standardized

    MEC architecture has aided us to specify the flaws unique to each use case. Novel
    security solu-

    tions that are proposed for cyber-physical systems, ICN, NFV, and other impending
    technologies

    are mapped for each use case in the MEC context. The excessive discussion on assimilated
    facts

    and future directives are reinforcing our proposals with comprehension. As this
    survey focus on

    multiple use cases, it is our hope that scientists working on these novel areas
    will find the presented

    insights valuable.

    REFERENCES

    [1] Nasir Abbas, Yan Zhang, Amir Taherkordi, and Tor Skeie. 2018. Mobile edge
    computing: A survey. IEEE Internet

    Things J. 5, 1 (2018), 450–465.

    [2] Mamta Agiwal, Abhishek Roy, and Navrati Saxena. 2016. Next generation 5G wireless
    networks: A comprehensive

    survey. IEEE Commun. Surveys Tutor. 18, 3 (2016), 1617–1655.

    [3] Ijaz Ahmad, Tanesh Kumar, Madhusanka Liyanage, Jude Okwuibe, Mika Ylianttila,
    and Andrei Gurtov. 2017. 5G

    security: Analysis of threats and solutions. In Proceedings of the IEEE Conference
    on Standards for Communications

    and Networking (CSCN’17). IEEE, 193–199.

    [4] Ijaz Ahmad, Tanesh Kumar, Madhusanka Liyanage, Jude Okwuibe, Mika Ylianttila,
    and Andrei Gurtov. 2018.

    Overview of 5G security challenges and solutions. IEEE Commun. Standards Mag.
    2, 1 (2018), 36–43.

    [5] Adnan Aijaz and Mahesh Sooriyabandara. 2019. The tactile internet for industries:
    A review. Proc. IEEE 107, 2 (2019),

    414–435.

    [6] Abdelkader Aissioui, Adlen Ksentini, Abdelhak Mourad Gueroui, and Tarik Taleb.
    2018. On enabling 5G automotive

    systems using follow me edge-cloud concept. IEEE Trans. Vehic. Technol. 67, 6
    (2018), 5302–5316.

    [7] Ali Al-Shuwaili and Osvaldo Simeone. 2017. Energy-efficient resource allocation
    for mobile edge computing-based

    augmented reality applications. IEEE Wireless Commun. Lett. 6, 3 (2017), 398–401.

    [8] Fadele Ayotunde Alaba, Mazliza Othman, Ibrahim Abaker Targio Hashem, and Faiz
    Alotaibi. 2017. Internet of Things

    security: A survey. J. Netw. Comput. Appl. 88 (2017), 10–28.

    [9] Amina Antonacci, Fabiana Arduini, Danila Moscone, Giuseppe Palleschi, and
    Viviana Scognamiglio. 2018. Nanos-

    tructured (Bio) sensors for smart agriculture. TrAC Trends Analyt. Chem. 98 (2018),
    95–103.

    [10] Axelle Apvrille. 2019. Augmented Reality Visualization Device for Network
    Security. U.S. Patent App. No. 10/178,130.

    [11] Michael Bartock, Jeffrey Cichonski, and Murugiah Souppaya. 2020. 5G Cybersecurity:
    Preparing a Secure Evolution to

    5G. Technical Report. National Institute of Standards and Technology.

    [12] Pete Beckman, Charlie Catlett, Moinuddin Ahmed, Mohammed Alawad, Linquan
    Bai, Prasanna Balaprakash, Kevin

    Barker, Pete Beckman, Randall Berry, Arup Bhuyan, et al. 2020. 5G Enabled Energy
    Innovation: Advanced Wireless

    Networks for Science, Workshop Report. Technical Report. USDOE Office of Science
    (SC).

    [13] Vimal Bhatia, Pragya Swami, Sanjeev Sharma, and Rangeet Mitra. 2020. Non-orthogonal
    multiple access: An enabler

    for massive connectivity. J. Indian Inst. Sci. 100, 2 (2020), 337–348.

    [14] Stefano Bianchi. 2017. ANASTACIA Project—Advanced Networked Agents for Security
    and Trust Assessment in

    CPS/IoT Architectures. Retrieved from http://www.anastacia-h2020.eu/.

    [15] Kashif Bilal and Aiman Erbad. 2017. Edge computing for interactive media
    and video streaming. In Proceedings of

    the 2nd International Conference on Fog and Mobile Edge Computing (FMEC’17). IEEE,
    68–73.

    [16] Bartosz Boguslawski, Matthieu Boujonnier, Loryne Bissuel-Beauvais, Fahd Saghir,
    Rajesh D. Sharma, et al. 2018. IIoT

    edge analytics: Deploying machine learning at the wellhead to identify rod pump
    failure. In Proceedings of the SPE

    Middle East Artificial Lift Conference and Exhibition. Society of Petroleum Engineers.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:32

    P. Ranaweera et al.

    [17] Mohammad Borhani, Madhusanka Liyanage, Ali Hassan Sodhro, Pardeep Kumar,
    Anca Delia Jurcut, and Andrei

    Gurtov. 2020. Secure and resilient communications in the industrial internet.
    In Guide to Disaster-Resilient Commu-

    nication Networks. Springer, 219–242.

    [18] An Braeken, Pawani Porambage, Amirthan Puvaneswaran, and Madhusanka Liyanage.
    2020. ESSMAR: Edge support-

    ive secure mobile augmented reality architecture for healthcare. In Proceedings
    of the 5th International Conference on

    Cloud Computing and Artificial Intelligence: Technologies and Applications (CloudTech’20).
    IEEE, 1–7.

    [19] Yue Cao, Omprakash Kaiwartya, Yuan Zhuang, Naveed Ahmad, Yan Sun, and Jaime
    Lloret. 2018. A decentralized

    deadline-driven electric vehicle charging recommendation. IEEE Syst. J. 99 (2018),
    1–12.

    [20] Shuyi Chen, Ruofei Ma, Hsiao-Hwa Chen, Hong Zhang, Weixiao Meng, and Jiamin
    Liu. 2017. Machine-to-machine

    communications in ultra-dense Networks—A survey. IEEE Commun. Surveys Tutor. 19,
    3 (2017), 1478–1503.

    [21] Xi Chen, Zonghang Li, Yupeng Zhang, Ruiming Long, Hongfang Yu, Xiaojiang
    Du, and Mohsen Guizani. 2018. Re-

    inforcement learning–based QoS/QoE-aware service function chaining in software-driven
    5G slices. Trans. Emerg.

    Telecommun. Technol. 29, 11 (2018), e3477.

    [22] Edgar Lemos Cid, Manuel Garcia Sanchez, and Ana Vazquez Alejos. 2016. Wideband
    analysis of the satellite commu-

    nication channel at KU and X-bands. IEEE Trans. Vehic. Technol. 65, 4 (2016),
    2787–2790.

    [23] Mirsad Cosovic, Achilleas Tsitsimelis, Dejan Vukobratovic, Javier Matamoros,
    and Carles Anton-Haro. 2017. 5G

    mobile cellular networks: Enabling distributed state estimation for smart grids.
    IEEE Commun. Mag. 55, 10 (2017),

    62–69.

    [24] Jose Costa-Requena. 2014. SDN integration in LTE mobile backhaul networks.
    In Proceedings of the International

    Conference on Information Networking (ICOIN’14). IEEE, 264–269.

    [25] Chamitha De Alwis, Anshuman Kalla, Quoc-Viet Pham, Pardeep Kumar, Kapal Dev,
    Won-Joo Hwang, and

    Madhusanka Liyanage. 2021. Survey on 6G frontiers: Trends, applications, requirements,
    technologies and future

    research. IEEE Open J. Commun. Soc. (2021).

    [26] Jasenka Dizdarević, Francisco Carpio, Admela Jukan, and Xavi Masip-Bruin.
    2019. A survey of communication pro-

    tocols for internet of things and related challenges of fog and cloud computing
    integration. ACM Comput. Surveys

    51, 6 (2019), 116.

    [27] Lijun Dong and Guoqiang Wang. 2017. Information centric approach in achieving
    anycast service in machine type

    communications. In Proceedings of the IEEE Conference on Standards for Communications
    and Networking (CSCN’17).

    IEEE, 157–162.

    [28] Thang Le Duc, Rafael García Leiva, Paolo Casari, and Per-Olov Östberg. 2019.
    Machine learning methods for reliable

    resource provisioning in edge-cloud computing: A survey. ACM Comput. Surveys 52,
    5 (2019), 94.

    [29] Leila Eadie, Alasdair Mort, Luke Regan, Ashish S. MacAden, and Philip Wilson.
    2016. Remotely supported prehos-

    pital ultrasound: Real-time communication for diagnosis in remote and rural communities.
    In Proceedings of the 3rd

    European Workshop on Practical Aspects of Health Informatics. CEUR-WS.

    [30] Mohammed S. Elbamby, Cristina Perfecto, Mehdi Bennis, and Klaus Doppler.
    2018. Toward low-latency and ultra-

    reliable virtual reality. IEEE Netw. 32, 2 (2018), 78–84.

    [31] Mohammed Elbayoumi, Mahmoud Kamel, Walaa Hamouda, and Amr Youssef. 2020.
    NOMA-assisted machine-type

    communications in UDN: State-of-the-art and challenges. IEEE Commun. Surveys Tutor.
    22, 2 (2020), 1276–1304.

    [32] Milan Erdelj, Enrico Natalizio, Kaushik R. Chowdhury, and Ian F. Akyildiz.
    2017. Help from the Sky: Leveraging

    UAVs for disaster management. IEEE Pervas. Comput. 16, 1 (2017), 24–32.

    [33] ETSI. 2016. Mobile edge computing (MEC) framework and reference architecture.
    ETSI White Paper #3. Retrieved

    from https://www.etsi.org/deliver/etsi_gs/MEC/001_099/003/01.01.01_60/gs_MEC003v010101p.pdf.

    [34] EU-H2020. 2018. 5G-EVE. Retrieved from https://www.5g-eve.eu/.

    [35] Dongfeng Fang and Yi Qian. 2020. 5G wireless security and privacy: Architecture
    and flexible mechanisms. IEEE

    Vehic. Technol. Mag. 15, 2 (2020), 58–64.

    [36] Ana Juan Ferrer, Joan Manuel Marquès, and Josep Jorba. 2019. Towards the
    decentralised cloud: Survey on approaches

    and challenges for mobile, ad hoc, and edge computing. ACM Comput. Surveys. 51,
    6 (2019), 111.

    [37] Abderrahime Filali, Amine Abouaomar, Soumaya Cherkaoui, Abdellatif Kobbane,
    and Mohsen Guizani. 2020. Multi-

    access edge computing: A survey. IEEE Access 8 (2020), 197017–197046.

    [38] Shane Fonyi. 2020. Overview of 5G security and vulnerabilities. Cyber Defense
    Rev. 5, 1 (2020), 117–134.

    [39] Reham M. Fouda. 2018. Security vulnerabilities of cyberphysical unmanned
    aircraft systems. IEEE Aerospace Elec-

    tronic Syst. Mag. 33, 9 (2018), 4–17.

    [40] Xenofon Foukas, Georgios Patounas, Ahmed Elmokashfi, and Mahesh K. Marina.
    2017. Network slicing in 5G: Survey

    and challenges. IEEE Commun. Mag. 55, 5 (2017), 94–100.

    [41] Keke Gai, Meikang Qiu, Hui Zhao, and Jian Xiong. 2016. Privacy-aware adaptive
    data encryption strategy of big data

    in cloud computing. In Proceedings of the IEEE 3rd International Conference on
    Cyber Security and Cloud Computing

    (CSCloud’16). IEEE, 273–278.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:33

    [42] Keke Gai, Yulu Wu, Liehuang Zhu, Lei Xu, and Yan Zhang. 2019. Permissioned
    blockchain and edge computing

    empowered privacy-preserving smart grid networks. IEEE Internet Things J. 6, 5
    (2019), 7992–8004.

    [43] Sahil Garg, Amritpal Singh, Shalini Batra, Neeraj Kumar, and Laurence T.
    Yang. 2018. UAV-empowered edge com-

    puting environment for cyber-threat detection in smart vehicles. IEEE Netw. 32,
    3 (2018), 42–51.

    [44] Kuntal Gaur, Anshuman Kalla, Jyoti Grover, Mohammad Borhani, Andrei Gurtov,
    and Madhusanka Liyanage. 2021.

    A survey of virtual private LAN services (VPLS): Past, present and future. Comput.
    Netw. 196, Article 108245 (2021).

    [45] Dennis Grewe, Marco Wagner, Mayutan Arumaithurai, Ioannis Psaras, and Dirk
    Kutscher. 2017. Information-centric

    mobile edge computing for connected vehicle environments: Challenges and research
    directions. In Proceedings of

    the Workshop on Mobile Edge Communications. ACM, 7–12.

    [46] Rajesh Gupta, Dakshita Reebadiya, and Sudeep Tanwar. 2021. 6G-enabled edge
    intelligence for ultra-reliable low

    latency applications: Vision and mission. Comput. Stand. Interfaces 77 (2021),
    103521.

    [47] H2020. 2015. Small Cells Coordination for Multi-tenancy and Edge Services.
    Retrieved from http://www.sesame-

    h2020-5g-ppp.eu/Home.aspx.

    [48] Hajar Hantouti, Nabil Benamar, Tarik Taleb, and Abdelquoddous Laghrissi.
    2018. Traffic steering for service function

    chaining. IEEE Commun. Surveys Tutor. 21, 1 (2018), 487–507.

    [49] Remy Harel and Steve Babbage. 2016. 5G Security Recommendations Package 2:
    Network Slicing. https://www.ngmn.

    org/fileadmin/user_upload/160429_NGMN_5G_Security_Network_Slicing_v1_0.pdf.

    [50] Daojing He, Sammy Chan, and Mohsen Guizani. 2018. Security in the Internet
    of Things supported by mobile edge

    computing. IEEE Commun. Mag. 56, 8 (2018), 56–61.

    [51] Tharaka Hewa, An Bracken, Mika Ylianttila, and Madhusanka Liyanage. 2020.
    Blockchain-based automated certifi-

    cate revocation for 5G IoT. In Proceedings of the IEEE International Conference
    on Communications (ICC’20). IEEE,

    1–7.

    [52] Tharaka Hewa, An Braeken, Mika Ylianttila, and Madhusanka Liyanage. 2020.
    Multi-access edge computing and

    blockchain-based secure telehealth system connected with 5G and IoT. In Proceedings
    of the 8th IEEE International

    Conference on Communications and Networking (ComNet’20).

    [53] Oliver Holland, Eckehard Steinbach, R. Venkatesha Prasad, Qian Liu, Zaher
    Dawy, Adnan Aijaz, Nikolaos Pappas,

    Kishor Chandra, Vijay S. Rao, Sharief Oteafy, et al. 2019. The IEEE 1918.1 “Tactile
    Internet” standards working group

    and its standards. Proc. IEEE 107, 2 (2019), 256–279.

    [54] Michael Hooper, Yifan Tian, Runxuan Zhou, Bin Cao, Adrian P. Lauf, Lanier
    Watkins, William H. Robinson, and

    Wlajimir Alexis. 2016. Securing commercial wifi-based UAVs from common security
    attacks. In Proceedings of the

    Military Communications Conference (MILCOM’16). IEEE, 1213–1218.

    [55] Mohammad Hosseini, Yu Jiang, Ali Yekkehkhany, Richard R. Berlin, and Lui
    Sha. 2017. A mobile geo-communication

    dataset for physiology-aware dash in rural ambulance transport. In Proceedings
    of the 8th ACM on Multimedia Systems

    Conference. ACM, 158–163.

    [56] Syed Husain, Andreas Kunz, Athul Prasad, Konstantinos Samdanis, and JaeSeung
    Song. 2018. Mobile edge computing

    with network resource slicing for internet-of-things. In Proceedings of the IEEE
    4th World Forum on Internet of Things

    (WF-IoT’18). IEEE, 1–6.

    [57] Razin Farhan Hussain, Mohsen Amini Salehi, Anna Kovalenko, Saeed Salehi,
    and Omid Semiari. 2018. Robust re-

    source allocation using edge computing for smart oil fields. In Proceedings of
    the International Conference on Parallel

    and Distributed Processing Techniques and Applications (PDPTA’18). The Steering
    Committee of The World Congress

    in Computer Science, 204–210.

    [58] Muhammad Javed, Elyes Ben Hamida, Ala Al-Fuqaha, and Bharat Bhargava. 2017.
    Adaptive security for intelligent

    transport system applications. IEEE Intell. Transport. Syst. Mag. 10, 2 (2017),
    110–120.

    [59] Dushantha Nalin K. Jayakody, Kathiravan Srinivasan, and Vishal Sharma. 2019.
    5G Enabled Secure Wireless Networks.

    Springer.

    [60] Eranda Harshanath Jayatunga, Pasika Sashmal Ranaweera, and Indika Anuradha
    Mendis Balapuwaduge. 2021.

    Blockchain advances and security practices in WSN, CRN, SDN, opportunistic mobile
    networks, delay tolerant net-

    works. In Revolutionary Applications of Blockchain-Enabled Privacy and Access
    Control. IGI Global, 1–34.

    [61] Anca D. Jurcut, Pasika Ranaweera, and Lina Xu. 2020. Introduction to IoT
    security. In IoT Security: Advances in

    Authentication. M. Liyanage, A. Braeken, P. Kumar, and M. Ylianttila (Eds.). Wiley.
    https://doi.org/10.1002/

    9781119527978.ch2

    [62] Fahad Khan, Atiq ur Rehman, Muhammad Arif, Muhammad Aftab, and Baber Khan
    Jadoon. 2016. A survey of com-

    munication technologies for smart grid connectivity. In Proceedings of the International
    Conference on Computing,

    Electronic and Electrical Engineering (ICECube’16). IEEE, 256–261.

    [63] Rabia Khan, Pardeep Kumar, Dushantha Nalin K. Jayakody, and Madhusanka Liyanage.
    2019. A survey on secu-

    rity and privacy of 5G technologies: Potential solutions, recent advancements
    and future directions. IEEE Commun.

    Surveys Tutor. 22, 1 (2019), 196–248.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:34

    P. Ranaweera et al.

    [64] Taher Khan, Saptarshi Ghosh, Muddesar Iqbal, George Ubakanma, and Tasos Dagiuklas.
    2018. RESCUE: A resilient

    cloud based IoT system for emergency and disaster recovery. In Proceedings of
    the IEEE 20th International Conference

    on High Performance Computing and Communications; IEEE 16th International Conference
    on Smart City; IEEE 4th

    International Conference on Data Science and Systems (HPCC/SmartCity/DSS’18).
    IEEE, 1043–1047.

    [65] Adlen Ksentini and Pantelis A. Frangoudis. 2020. Toward slicing-enabled multi-access
    edge computing in 5g. IEEE

    Netw. 34, 2 (2020), 99–105.

    [66] Neeraj Kumar, Sherali Zeadally, and Joel J. P. C. Rodrigues. 2016. Vehicular
    delay-tolerant networks for smart grid

    data management using mobile edge computing. IEEE Commun. Mag. 54, 10 (2016),
    60–66.

    [67] Rakesh Kumar, M. P. Singh, Prabhat Kumar, and J. P. Singh. 2015. Crop selection
    method to maximize crop yield

    rate using machine learning technique. In Proceedings of the International Conference
    on Smart Technologies and

    Management for Computing, Communication, Controls, Energy and Materials (ICSTM’15).
    IEEE, 138–145.

    [68] Shankar Lal, Tarik Taleb, and Ashutosh Dutta. 2017. NFV: Security threats
    and best practices. IEEE Commun. Mag.

    55, 8 (2017), 211–217.

    [69] Michael Langfinger, Michael Schneider, Didier Stricker, and Hans D. Schotten.
    2017. Addressing security challenges

    in industrial augmented reality systems. In Proceedings of the 15th International
    Conference on Industrial Informatics

    (INDIN’17). IEEE, 299–304.

    [70] Kiron Lebeck, Kimberly Ruth, Tadayoshi Kohno, and Franziska Roesner. 2018.
    Towards security and privacy for

    multi-user augmented reality: Foundations with end users. In Proceedings of the
    IEEE Symposium on Security and

    Privacy (SP’18). IEEE.

    [71] Chiking Lee. 2018. Discovering cyber vulnerabilities in SCADA control system
    via examination of water treatment

    plant in laboratory environment. UNSW Canberra ADFA J. Undergrad. Eng. Res. 9,
    1 (2018).

    [72] Craig Lee and Andrea Fumagalli. 2019. Internet of Things security-multilayered
    method for end to end data commu-

    nications over cellular networks. In Proceedings of the IEEE 5th World Forum on
    Internet of Things (WF-IoT’19). IEEE,

    24–28.

    [73] Jong-Hyouk Lee and Hyoungshick Kim. 2017. Security and privacy challenges
    in the Internet of Things [security

    and privacy matters]. IEEE Consum. Electron. Mag. 6, 3 (2017), 134–136.

    [74] Helen C. Leligou, Theodore Zahariadis, Lambros Sarakis, Eleftherios Tsampasis,
    Artemis Voulkidis, and Terpsichori E.

    Velivassaki. 2018. Smart grid: A demanding use case for 5G technologies. In Proceedings
    of the IEEE International

    Conference on Pervasive Computing and Communications Workshops (PerCom’18). IEEE,
    215–220.

    [75] A. Leonardi, K. Mathioudakis, A. Wiesmaier, and F. Zeiger. 2014. Towards
    the smart grid: Substation automation

    architecture and technologies. Adv. Electric. Eng. 2014, Article 896296 (2014),
    13 pages.

    [76] Bin Li, Zesong Fei, and Yan Zhang. 2018. UAV communications for 5G and beyond:
    Recent advances and future

    trends. IEEE Internet Things J. 6, 2 (2018), 2241–2263.

    [77] Chao Li, Yushu Xue, Jing Wang, Weigong Zhang, and Tao Li. 2018. Edge-oriented
    computing paradigms: A survey

    on architecture design and system management. ACM Comput. Surveys 51, 2 (2018),
    39.

    [78] Meng Li, Richard Yu, Pengbo Si, and Yanhua Zhang. 2018. Energy-efficient
    machine-to-machine (M2M) communica-

    tions in virtualized cellular networks with mobile edge computing (MEC). IEEE
    Trans. Mobile Comput. 18, 7 (2018),

    1541–1555.

    [79] Chung-Wei Lin and Alberto Sangiovanni-Vincentelli. 2017. Security-aware design
    for V2V communication. In

    Security-Aware Design for Cyber-Physical Systems. Springer, 77–86.

    [80] Madhusanka Liyanage, Ijaz Ahmad, Ahmed Bux Abro, Andrei Gurtov, and Mika
    Ylianttila. 2018. A Comprehensive

    Guide to 5G Security. Wiley Online Library.

    [81] Madhusanka Liyanage, Ijaz Ahmed, Mika Ylianttila, Jesus Llorente Santos,
    Raimo Kantola, Oscar Lopez Perez,

    Mikel Uriarte Itzazelaia, Edgardo Montes De Oca, Asier Valtierra, and Carlos Jimenez.
    2015. Security for future

    software defined mobile networks. In Proceedings of the 9th International Conference
    on Next Generation Mobile Ap-

    plications, Services and Technologies. IEEE, 256–264.

    [82] Madhusanka Liyanage, An Braeken, Pardeep Kumar, and Mika Ylianttila. 2020.
    IoT Security: Advances in Authentica-

    tion. John Wiley & Sons.

    [83] Madhusanka Liyanage, Pawani Porambage, Aaron Yi Ding, and Anshuman Kalla.
    2021. Driving forces for multi-

    access edge computing (MEC) IoT integration in 5G. ICT Express 7, 2 (2021), 127–137.

    [84] Pavel Mach and Zdenek Becvar. 2017. Mobile edge computing: A survey on architecture
    and computation offloading.

    IEEE Commun. Surveys Tutor. 19, 3 (2017), 1628–1656.

    [85] Martin Maier, Mahfuzulhoq Chowdhury, Bhaskar Prasad Rimal, and Dung Pham
    Van. 2016. The tactile internet:

    Vision, recent progress, and open challenges. IEEE Commun. Mag. 54, 5 (2016),
    138–145.

    [86] Olli Mäkinen. 2015. Streaming at the edge: Local service concepts utilizing
    mobile edge computing. In Proceedings

    of the 9th International Conference on Next Generation Mobile Applications, Services
    and Technologies. IEEE, 1–6.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:35

    [87] Yuyi Mao, Changsheng You, Jun Zhang, Kaibin Huang, and Khaled B. Letaief.
    2017. A survey on mobile edge com-

    puting: The communication pserspective. IEEE Commun. Surveys Tutor. 19, 4 (2017),
    2322–2358.

    [88] Jeremy Mitchell, David Soldani, and Malcolm Shore. 2018. The Path to 5G in
    Australia: Architecture Evolution from

    4G to 5G. Retrieved from http://huaweihub.com.au/wp-content/uploads/2018/07/The-path-to-5G-in-Australia-03-

    August-2018-2.pdf.

    [89] Amin Mohammadali, Mohammad Sayad Haghighi, Mohammad Hesam Tadayon, and Alireza
    Mohammadi-

    Nodooshan. 2018. A novel identity-based key establishment method for advanced
    metering infrastructure in smart

    grid. IEEE Trans. Smart Grid 9, 4 (2018), 2834–2842.

    [90] Andrés Molina. 2018. Water governance in the smart city. WIT Trans. Built
    Environ. 179, 1 (2018), 13–22.

    [91] Naser Hossein Motlagh, Miloud Bagaa, and Tarik Taleb. 2017. UAV-based IoT
    platform: A crowd surveillance use

    case. IEEE Commun. Mag. 55, 2 (2017), 128–134.

    [92] Arash Nourian and Stuart Madnick. 2018. A systems theoretic approach to the
    security threats in cyber physical

    systems applied to stuxnet. IEEE Trans. Depend. Secure Comput. 15, 1 (2018), 2–13.

    [93] Vanga Odelu, Ashok Kumar Das, Mohammad Wazid, and Mauro Conti. 2018. Provably
    secure authenticated key

    agreement scheme for smart grid. IEEE Trans. Smart Grid 9, 3 (2018), 1900–1910.

    [94] University of Oulu. 2020. 6G-FLAGSHIP. Retrieved from https://www.oulu.fi/6gflagship/.

    [95] Oulu. 2018. Multi-Access Edge Computing (MEC) Artificial Intelligence (AI).
    Retrieved from http://www.edgeai.info/

    project/mec-ai/.

    [96] Emmanuel Oyekanlu, Charles Nelatury, Alfred O. Fatade, Olumuyiwa Alaba, and
    Ola Abass. 2017. Edge computing

    for industrial IoT and the smart grid: Channel capacity for M2M communication
    over the power line. In Proceedings

    of the IEEE 3rd International Conference on Electro-Technology for National Development
    (NIGERCON’17). IEEE, 1–11.

    [97] Christoph Pallasch, Stephan Wein, Nicolai Hoffmann, Markus Obdenbusch, Tilman
    Buchner, Josef Waltl, and

    Christian Brecher. 2018. Edge powered industrial control: Concept for combining
    cloud and automation technologies.

    In Proceedings of the IEEE International Conference on Edge Computing (EDGE’18).
    IEEE, 130–134.

    [98] Simon Parkinson, Paul Ward, Kyle Wilson, and Jonathan Miller. 2017. Cyber
    threats facing autonomous and con-

    nected vehicles: Future challenges. IEEE Trans. Intell. Transport. Syst. 18, 11
    (2017), 2898–2915.

    [99] Imtiaz Parvez, Ali Rahmati, Ismail Guvenc, Arif I. Sarwat, and Huaiyu Dai.
    2018. A survey on low latency towards

    5G: RAN, core network and caching solutions. IEEE Commun. Surveys Tutor. 20, 4
    (2018), 3098–3130.

    [100] Charith Perera, Chi Harold Liu, and Srimal Jayawardena. 2015. The emerging
    Internet of Things marketplace from

    an industrial perspective: A survey. IEEE Trans. Emerg. Topics Comput. 3, 4 (2015),
    585–598.

    [101] Jonathan Petit and Steven E. Shladover. 2015. Potential cyberattacks on
    automated vehicles. IEEE Trans. Intell. Trans-

    port. Syst. 16, 2 (2015), 546–556.

    [102] Pawani Porambage, Gürkan Gür, Diana Pamela Moya Osorio, Madhusanka Liyanage,
    Andrei Gurtov, and Mika Yliant-

    tila. 2021. The roadmap to 6G security and privacy. IEEE Open J. Commun. Soc.
    2 (2021), 1094–1122.

    [103] Pawani Porambage, Jude Okwuibe, Madhusanka Liyanage, Mika Ylianttila, and
    Tarik Taleb. 2018. Survey on multi-

    access edge computing for Internet of Things realization. IEEE Commun. Surveys
    Tutor. 20, 4 (2018), 2961–2991.

    [104] Xiuquan Qiao, Pei Ren, Schahram Dustdar, and Junliang Chen. 2018. A new
    era for web AR with mobile edge com-

    puting. IEEE Internet Comput. 22, 4 (2018), 46–55.

    [105] Pengxiang Qin, Pinyi Ren, Qinghe Du, and Li Sun. 2018. Security enhancement
    for IoT video streaming via joint

    network coding and retransmission design. In Proceedings of the International
    Conference on Internet of Things as a

    Service. Springer, 40–47.

    [106] Hamed Rahimi, Ali Zibaeenejad, and Ali Akbar Safavi. 2018. A novel IoT architecture
    based on 5G-IoT and next

    generation technologies. In Proceedings of the IEEE 9th Annual Information Technology,
    Electronics and Mobile Com-

    munication Conference (IEMCON’18). IEEE, 81–88.

    [107] Archana Rajakaruna, Ahsan Manzoor, Pawani Porambage, Madhusanka Liyanage,
    Mika Ylianttila, and Andrei

    Gurtov. 2019. Enabling end-to-end secure connectivity for low-power IoT devices
    with uavs. In Proceedings of the

    IEEE Wireless Communications and Networking Conference Workshop (WCNCW’19). IEEE,
    1–6.

    [108] Pasika Ranaweera, Vashish N. Imrith, Madhusanka Liyanag, and Anca Delia
    Jurcut. 2020. Security as a service plat-

    form leveraging multi-access edge computing infrastructure provisions. In Proceedings
    of the IEEE International Con-

    ference on Communications (ICC’20). IEEE, 1–6.

    [109] Pasika Ranaweera, Anca Delia Jurcut, and Madhusanka Liyanage. 2019. Realizing
    multi-access edge computing fea-

    sibility: Security perspective. In Proceedings of the IEEE Conference on Standards
    for Communications and Networking

    (CSCN’19). IEEE, 1–7.

    [110] Pasika Ranaweera, Anca Delia Jurcut, and Madhusanka Liyanage. 2021. Survey
    on multi-access edge computing

    security and privacy. IEEE Commun. Surveys Tutor. 23, 2 (2021), 1078–1124.

    [111] Pasika Ranaweera, Madhusanka Liyanage, and Anca Delia Jurcut. 2020. Novel
    MEC based approaches for smart

    hospitals to combat COVID-19 pandemic. IEEE Consum. Electron. Mag. 10, 2 (2020),
    80–91.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:36

    P. Ranaweera et al.

    [112] Ashish Rauniyar, Paal Engelstad, Boning Feng, et al. 2016. Crowdsourcing-based
    disaster management using fog

    computing in Internet of Things Paradigm. In Proceedings of the IEEE 2nd International
    Conference on Collaboration

    and Internet Computing (CIC’16). IEEE, 490–494.

    [113] Danda B. Rawat and Chandra Bajracharya. 2016. Vehicular Cyber Physical Systems:
    Adaptive Connectivity and Security.

    Springer.

    [114] Partha Pratim Ray, Mithun Mukherjee, and Lei Shu. 2017. Internet of Things
    for disaster management: State-of-the-

    art and prospects. IEEE Access 5 (2017), 18818–18835.

    [115] Zeineb Rejiba, Xavier Masip-Bruin, and Eva Marín-Tordera. 2019. A survey
    on mobility-induced service migration

    in the fog, edge, and related computing paradigms. ACM Comput. Surveys 52, 5 (2019),
    90.

    [116] Jinke Ren, Guanding Yu, Yunlong Cai, and Yinghui He. 2018. Latency optimization
    for resource allocation in mobile-

    edge computation offloading. IEEE Trans. Wireless Commun. 17, 8 (2018), 5506–5519.

    [117] Ju Ren, Deyu Zhang, Shiwen He, Yaoxue Zhang, and Tao Li. 2019. A survey
    on end-edge-cloud orchestrated network

    computing paradigms: Transparent computing, mobile edge computing, fog computing,
    and cloudlet. ACM Comput.

    Surveys 52, 6 (2019), 125.

    [118] Alex Reznik, Yonggang Fang, and Saad Ullah. 2018. MEC in an enterprise setting:
    A solution outline. ETSI White Paper

    #30 2, 30 (2018). Retrieved from https://www.etsi.org/images/files/ETSIWhitePapers/etsi_wp30_MEC_Enterprise_

    FINAL.pdf.

    [119] Rodrigo Roman, Javier Lopez, and Masahiro Mambo. 2018. Mobile edge computing,
    Fog et al.: A survey and analysis

    of security threats and challenges. Future Gen. Comput. Syst. 78 (2018), 680–698.

    [120] Harri Saarnisaari, Sudhir Dixit, Mohamed-Slim Alouini, Abdelaali Chaoub,
    Marco Giordani, Adrian Kliks, Marja

    Matinmikko-Blue, Nan Zhang, Anuj Agrawal, Mats Andersson, et al. 2020. A 6G white
    paper on connectivity for

    remote areas. Retrieved from https://arXiv:2004.14699.

    [121] Matthew N. O. Sadiku, Shumon Alam, and Sarhan M. Musa. 2017. Information
    assurance benefits and challenges:

    An introduction. Info. Secur. 36, 1 (2017), 1–5.

    [122] Miguel Saez, Steven Lengieza, Francisco Maturana, Kira Barton, and Dawn
    Tilbury. 2018. A data transformation

    adapter for smart manufacturing systems with edge and cloud computing capabilities.
    In Proceedings of the IEEE

    International Conference on Electro/Information Technology (EIT’18). IEEE, 0519–0524.

    [123] S. Salsano. 2015. Superfluidity: A Super-fluid, Cloud-native, Converged
    Edge System. Retrieved from http://

    superfluidity.eu/.

    [124] Mike Scavezze, Jason Scott, Jonathan Steed, Ian McIntyre, Aaron Krauss,
    Daniel McCulloch, Stephen Latta, Kevin

    Geisner, and Brian Mount. 2015. User Authentication on Augmented Reality Display
    Device. U.S. Patent No. 9,092,600.

    [125] Hichem Sedjelmaci, Ines Ben Jemaa, Makhlouf Hadji, and Arnaud Kaiser. 2018.
    Security framework for vehicular

    edge computing network based on behavioral game. In Proceedings of the IEEE Global
    Communications Conference

    (GLOBECOM’18). IEEE, 1–6.

    [126] Vahe Seferian, Rouwaida Kanj, Ali Chehab, and Ayman Kayssi. 2018. Identity
    based key distribution framework for

    link layer security of AMI networks. IEEE Trans. Smart Grid 9, 4 (2018), 3166–3179.

    [127] Syed Noorulhassan Shirazi, Antonios Gouglidis, Arsham Farshad, and David
    Hutchison. 2017. The extended cloud:

    Review and analysis of mobile edge computing and fog from a security and resilience
    perspective. IEEE J. Select.

    Areas Commun. 35, 11 (2017), 2586–2595.

    [128] Syed Noorulhassan Shirazi, Antonios Gouglidis, Kanza Noor Syeda, Steven
    Simpson, Andreas Mauthe, Ioannis M.

    Stephanakis, and David Hutchison. 2016. Evaluation of anomaly detection techniques
    for SCADA communication

    resilience. In Proceedings of the Resilience Week (RWS’16). IEEE, 140–145.

    [129] Meryem Simsek, Adnan Aijaz, Mischa Dohler, Joachim Sachs, and Gerhard Fettweis.
    2016. 5G-enabled tactile internet.

    IEEE J. Select. Areas Commun. 34, 3 (2016), 460–473.

    [130] Saurabh Singh, Young-Sik Jeong, and Jong Hyuk Park. 2016. A survey on cloud
    computing security: Issues, threats,

    and solutions. J. Netw. Comput. Appl. 75 (2016), 200–222.

    [131] Yushan Siriwardhana, Pawani Porambage, Madhusanka Liyanage, and Mika Ylianttila.
    2021. AI and 6G security:

    Opportunities and challenges. In Proceedings of the IEEE Joint European Conference
    0n Network Communincations

    (EuCNC’21): 6G Summit. 1–6.

    [132] Yushan Siriwardhana, Pawani Porambage, Madhusanka Liyanage, and Mika Ylinattila.
    2021. A survey on mobile

    augmented reality with 5G mobile edge computing: Architectures, applications and
    technical aspects. IEEE Commun.

    Surveys Tutor. 23, 2 (2021), 1160–1192.

    [133] Yushan Siriwardhana, Pawani Porambage, Mika Ylianttila, and Madhusanka Liyanage.
    2020. Performance analysis

    of local 5G operator architectures for industrial internet. IEEE Internet Things
    J. 7, 12 (2020), 11559–11575.

    [134] Prakash Suthar, Vivek Agarwal, Rajaneesh Sudhakar Shetty, and Anil Jangam.
    2020. Migration and interworking

    between 4G and 5G. In Proceedings of the IEEE 3rd 5G World Forum (5GWF’20). IEEE,
    401–406.

    [135] Rahim Tafazolli, Chin-Liang Wang, Periklis Chatzimisios, and Madhusanka
    Liyanage. 2021. The Wiley 5G REF: Secu-

    rity. Wiley Online Library.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:37

    [136] Irina Tal and Gabriel-Miro Muntean. 2018. Towards reasoning vehicles: A
    survey of fuzzy logic-based solutions in

    vehicular networks. ACM Comput. Surveys 50, 6 (2018), 80.

    [137] Elisabeth Uhlemann. 2017. The US and europe advances V2V deployment [connected
    vehicles]. IEEE Vehic. Technol.

    Mag. 12, 2 (2017), 18–22.

    [138] Muhammad Usman, Muhammad Rizwan Asghar, Imran Shafique Ansari, and Marwa
    Qaraqe. 2018. Security in wire-

    less body area networks: From in-body to off-body communications. IEEE Access
    6 (2018), 58064–58074.

    [139] Jianyu Wang, Jianli Pan, Flavio Esposito, Prasad Calyam, Zhicheng Yang,
    and Prasant Mohapatra. 2019. Edge cloud

    offloading algorithms: Issues, methods, and perspectives. ACM Comput. Surveys
    52, 1 (2019), 2.

    [140] Meisong Wang, Prem Prakash Jayaraman, Rajiv Ranjan, Karan Mitra, Miranda
    Zhang, Eddie Li, Samee Khan,

    Mukkaddim Pathan, and Dimitrios Georgeakopoulos. 2015. An overview of cloud based
    content delivery networks:

    Research dimensions and state-of-the-art. In Transactions on Large-Scale Data-and
    Knowledge-Centered Systems XX.

    Springer, 131–158.

    [141] Qian Wang, Zhi Chen, Weidong Mei, and Jun Fang. 2017. Improving physical
    layer security using UAV-enabled

    mobile relaying. IEEE Wireless Commun. Lett. 6, 3 (2017), 310–313.

    [142] Shalitha Wijethilaka and Madhusanka Liyanage. 2021. Survey on network slicing
    for internet of things realization

    in 5G networks. IEEE Commun. Surveys Tutor. 23, 2 (2021), 957–994.

    [143] Lin Xiang, Derrick Wing Kwan Ng, Robert Schober, and Vincent W. S. Wong.
    2018. Cache-enabled physical layer

    security for video streaming in backhaul-limited cellular networks. IEEE Trans.
    Wireless Commun. 17, 2 (2018),

    736–751.

    [144] L. Xu, A. D. Jurcut, and H. Ahmadi. 2019. Emerging challenges and requirements
    for Internet of Things in 5G. In

    5G-Enabled Internet of Things. CRC Press.

    [145] Wenyuan Xu, Chen Yan, Weibin Jia, Xiaoyu Ji, and Jianhao Liu. 2018. Analyzing
    and enhancing the security of

    ultrasonic sensors for autonomous vehicles. IEEE Internet Things J. 5, 6 (2018),
    5015–5029.

    [146] Anil Kumar Yadav and Prerna Gaur. 2014. AI-based adaptive control and design
    of autopilot system for nonlinear

    UAV. Sadhana 39, 4 (2014), 765–783.

    [147] Shan-Shan Yang, Ji-Wei Pang, Xiao-Man Jin, Zhong-Yang Wu, Xiao-Yin Yang,
    Wan-Qian Guo, Zhi-Qing Zhao, and

    Nan-Qi Ren. 2018. Let a sewage plant running smart. In Proceedings of the IOP
    Conference Series: Earth and Environ-

    mental Science, Vol. 127. IOP Publishing, 012013.

    [148] Xiao Yang, Zhiyong Chen, Kuikui Li, Yaping Sun, Ning Liu, Weiliang Xie,
    and Yong Zhao. 2018. Communication-

    constrained mobile edge computing systems for wireless virtual reality: Scheduling
    and tradeoff. IEEE Access 6 (2018),

    16665–16677.

    [149] Zhong Yang, Mingzhe Chen, Xiao Liu, Yuanwei Liu, Yue Chen, Shuguang Cui,
    and H. Vincent Poor. 2021. Artificial

    intelligence driven UAV-NOMA-MEC in next generation wireless networks. Retrieved
    from https://arXiv:2101.11681.

    [150] E. Yeh, Junil Choi, N. Prelcic, C. Bhat, and R. Heath. 2016. Security in
    automotive radar and vehicular networks.

    Microwave J. 60, 5 (2016), 148–164.

    [151] Faqir Zarrar Yousaf, Marco Gramaglia, Vasilis Friderikos, Borislava Gajic,
    Dirk von Hugo, Bessem Sayadi, Vincenzo

    Sciancalepore, and Marcos Rates Crippa. 2017. Network slicing with flexible mobility
    and QoS/QoE support for

    5G Networks. In Proceedings of the IEEE International Conference on Communications
    Workshops (ICC’17). IEEE,

    1195–1201.

    [152] Ashkan Yousefpour, Caleb Fung, Tam Nguyen, Krishna Kadiyala, Fatemeh Jalali,
    Amirreza Niakanlahiji, Jian Kong,

    and Jason P. Jue. 2019. All one needs to know about fog computing and related
    edge computing paradigms: A com-

    plete survey. J. Syst. Architect. 98 (2019), 289–330.

    [153] Aiqing Zhang, Lei Wang, Xinrong Ye, and Xiaodong Lin. 2017. Light-weight
    and robust security-aware D2D-assist

    data transmission protocol for mobile-health systems. IEEE Trans. Info. Forensics
    Secur. 12, 3 (2017), 662–675.

    [154] Xi Zhang and Qixuan Zhu. 2017. Statistical quality of service provisioning
    over edge computing mobile wireless

    networks. In Proceedings of the IEEE Military Communications Conference (MILCOM’17).
    IEEE, 412–417.

    [155] Fuhui Zhou, Yongpeng Wu, Haijian Sun, and Zheng Chu. 2018. UAV-enabled mobile
    edge computing: Offloading

    optimization and trajectory design. In Proceedings of the IEEE International Conference
    on Communications (ICC’18).

    IEEE, 1–6.

    [156] Yi Zhou, Phee Lep Yeoh, He Chen, Yonghui Li, Robert Schober, Li Zhuo, and
    Branka Vucetic. 2018. Improving physical

    layer security via a UAV friendly jammer for unknown eavesdropper location. IEEE
    Trans. Vehic. Technol. 67, 11 (2018),

    11280–11284.

    [157] Qingyi Zhu, Seng W. Loke, Rolando Trujillo-Rasua, Frank Jiang, and Yong
    Xiang. 2019. Applications of distributed

    ledger technologies to the Internet of Things: A survey. ACM Comput. Surveys 52,
    6 (2019), 120.

    Received January 2020; revised May 2021; accepted July 2021

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    '
  inline_citation: '>'
  journal: ACM computing surveys
  limitations: '>'
  pdf_link: https://dl.acm.org/doi/pdf/10.1145/3474552
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22114110
  analysis: '>'
  authors:
  - Galina Ilieva
  - Tania Yankova
  citation_count: 6
  full_citation: '>'
  full_text: ">\nCitation: Ilieva, G.; Yankova, T. IoT\nSystem Selection as a Fuzzy\n\
    Multi-Criteria Problem. Sensors 2022,\n22, 4110. https://doi.org/10.3390/\ns22114110\n\
    Academic Editor: Ivan Andonovic\nReceived: 15 March 2022\nAccepted: 26 May 2022\n\
    Published: 28 May 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright:\n© 2022\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nArticle\nIoT System Selection as a Fuzzy Multi-Criteria Problem\n\
    Galina Ilieva *\nand Tania Yankova\nDepartment of Management and Quantitative\
    \ Methods in Economics, University of Plovdiv Paisii Hilendarski,\n4000 Plovdiv,\
    \ Bulgaria; tsvl@uni-plovdiv.bg\n* Correspondence: galili@uni-plovdiv.bg\nAbstract:\
    \ This research aims to analyse the applications of IoT in agriculture and to\
    \ compare the\nmost widely used IoT platforms. The problem of determining the\
    \ most appropriate IoT system\ndepends on many factors, often expressed by incomplete\
    \ and uncertain estimates. In order to ﬁnd\na feasible decision, this study develops\
    \ a multi-criteria framework for IoT solution selection in a\nfuzzy environment.\
    \ In the proposed framework, a new modiﬁcation of the Multi-Attribute Border\n\
    approximation Area Comparison (MABAC) method with a speciﬁc distance measure via\
    \ intuitionistic\nfuzzy values has been presented as a decision analysis method.\
    \ The new technique is more precise\nthan existing crisp and fuzzy analogues,\
    \ as it includes the three components of intuitionistic numbers\n(degree of membership,\
    \ degree of non-membership and hesitancy degree) and the relationships\nbetween\
    \ them. The effectiveness of the new decision-making framework has been veriﬁed\
    \ through\nan illustrative example of ranking IoT platforms.\nKeywords: IoT; Agriculture\
    \ 4.0; MCDM; MABAC method; intuitionistic fuzzy sets; distance measure\n1. Introduction\n\
    The rise of information technologies and the expansion of the Internet have trans-\n\
    formed traditional machines and devices in part of a new Internet of Things (IoT)\
    \ economy,\ngaining ground across many industrial sectors. Over the past two years,\
    \ the outbreak of\nCOVID-19 has aggravated food security and exacerbated the problem\
    \ of digital transforma-\ntion in agriculture. Agriculture 4.0, IoT in agriculture\
    \ and smart agriculture are synonyms\nof technological innovation that has fundamentally\
    \ change the business processes in the\nagricultural value chain [1]. The Internet\
    \ connects sensors, robots, agricultural machinery,\nanalytical tools and farmers\
    \ in a new and inventive way. The deployment of digital tech-\nnologies, such\
    \ as IoT, big data and machine learning (ML) boost revenues from the land,\ngreenhouses,\
    \ warehouses and food processing plants [2].\nAugmented reality is an important\
    \ direction for the digital transformation of agricul-\ntural systems. It enriches\
    \ the capabilities of ﬁeld checking and the early detection of risk\nof crop failure\
    \ and thus speeds up operations and increases yields [3]. Through enhanced\nmonitoring\
    \ and control, a “digital twin” of an agricultural system could be created. The\n\
    system’s efﬁciency is optimized by simulating the real-time behaviour of physical\
    \ assets\n(plants, harvest, machinery and personnel). The advantages of virtual\
    \ copies of agricul-\ntural objects and business processes in comparison with\
    \ classical simulation models are\nscenario management and instantaneous veriﬁcation\
    \ in a real-world context. Traversing\nthe whole range of possible changes of\
    \ ﬁelds’ parameters (light, water, nutrients, humidity\nand temperature) of digital\
    \ copies improves harvest quality and extends the post-harvest\ndurability of\
    \ grains, vegetables, fruits and nuts [4].\nThe incorporation of blockchain into\
    \ IoT platforms is also useful for farmers, suppliers\nand consumers, as this\
    \ combination guarantees the quality of production from the ﬁeld to\nthe table.\
    \ Blockchain ensures the security of data and operations in a supply chain through\n\
    cryptographic algorithms [5,6]. The ﬁfth generation of mobile telecommunications\
    \ (5G)\nallows for lower latency, which means a faster exchange of big data and\
    \ a shorter response\nSensors 2022, 22, 4110. https://doi.org/10.3390/s22114110\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 4110\n2 of 26\ntime of\
    \ web-based software. Sensors become more responsive, and farmers react to changes\n\
    in the ﬁeld in real time [7]. Predictive maintenance and the remote and centralized\
    \ control\nof operations are some examples of 5G applications in agriculture [8].\n\
    During the COVID-19 pandemic, the preventative measures (blocking, restrictions\n\
    on the movement of goods and people, social distancing, curfew and restrictions\
    \ on\nlarge gatherings) have revealed weaknesses in food supply chains and have\
    \ called into\nquestion the state of food security and farmers’ incomes. The pandemic\
    \ has revealed the\nneed for sustainable and efﬁcient agricultural value chains\
    \ [9]. In the case of unforeseen\ncircumstances, digital farming tools facilitate\
    \ the transformation of the food industry and\nimproves its ﬂexibility and resilience.\
    \ The advantage of IoT in this crisis situation is that it\noptimizes supply chains,\
    \ reduce costs and minimizes response time [10].\nThe beneﬁts of connecting physical\
    \ objects in farms to the Internet are as follows:\n•\nSaving resources (time\
    \ and labour) by remotely monitoring environmental and infras-\ntructural conditions\
    \ instead of on-site inspections;\n•\nIncreasing the efﬁciency and sustainability\
    \ of production with traceability, timeliness\nand the security of the food supply\
    \ and reduced waste;\n•\nImproving decision-making even in the case of abrupt\
    \ changes in market demand\nthrough real-time data analysis of the entire value\
    \ chain.\nThe decision-making process for IoT system selection could be supported\
    \ by methods\ntaking into account many factors in their calculations. According\
    \ to recent studies, three\nmain approaches have been developed: mathematical\
    \ programming (optimization) [11–13],\nML [14] and multi-criteria decision making\
    \ (MCDM) methods [15–26].\nOptimization models often indicate only local optimums\
    \ instead of the global solution.\nA disadvantage of ML methods is that the quality\
    \ of their solutions depends on dataset\nquality. In contrast, MCDM methods work\
    \ well even on small datasets; dozens of methods\nhave been developed for determining\
    \ object rankings and weights of attributes and their\ncombinations; the obtained\
    \ results are easily interpreted.\nEach MCDM model consists of three main elements:\
    \ a ﬁnite set of alternatives, at least\ntwo criteria and at least one decision-making\
    \ method with crisp or fuzzy estimates and\ncriteria weights. As MCDM has been\
    \ an active area of research in recent years, decision\nanalysis methods have\
    \ found applications to solve the IoT system selection problem.\nSome researchers\
    \ have proposed referential models for IoT platform selection, includ-\ning one\
    \ or more existing MCDM methods; for example, Simple Additive Weight (SAW),\n\
    Technique for Order of Preference by Similarity to Ideal Solution (TOPSIS) and\
    \ VIseKriteri-\njumska Optimizacija I Kompromisno Resenje (VIKOR) [17], a set\
    \ of MCDM methods [18]\nand the Decision-Making Trial and Evaluation Laboratory\
    \ (DEMATEL) to determine the\ncause–effect relationship of predeﬁned criteria\
    \ [19].\nAnother segment of studies has suggested new hybrid models combining\
    \ a method\nfor determining the importance of criteria weights with a multi-criteria\
    \ method. For\nexample, Mashal et al. have built a meta-model combining Analytical\
    \ Hierarchy Process\n(AHP) and SAW [20], Youssef—Best Worst Method (BWM) and TOPSIS\
    \ [21]. The Silva\nand Jardim–Goncalves model has combined AHP and Elimination\
    \ and Choice Expressing\nReality (ELECTRE) [22].\nAs the estimates of compared\
    \ IoT platforms are often inaccurate and uncertain, a\nmix of multi-criteria decision-making\
    \ and fuzzy set theory could be employed to rank\nthem [23]. Lin et al. have introduced\
    \ the probabilistic linguistic term sets (PLTSs) to express\nthe users’ preferences\
    \ of IoT platforms. Then, the authors introduced a new combination\nbetween BWM\
    \ and PLTSs for the calculation of the criteria’s importance. After that, a new\n\
    modiﬁcation of Interactive and Multi-criteria Decision Making (TODIM—according\
    \ to the\nmethod’s name in Portuguese) in probabilistic linguistic values has\
    \ been proposed to rank\nIoT platforms [15].\nKondratenko et al. have built a\
    \ Mamdani inference model for the comparison of spe-\ncialized IoT systems. The\
    \ most important criteria that determine the priority of compared\nplatforms are\
    \ reliability, dependability, safety and security [24].\nSensors 2022, 22, 4110\n\
    3 of 26\nIlieva et al. have presented a new methodology combining several MCDM\
    \ methods for\ncloud service choice in a fuzzy environment. According to this\
    \ study, service functionalities,\ncustomer support and rating and security are\
    \ the most important factors inﬂuencing cloud\nsystems evaluation. To demonstrate\
    \ the effectiveness of the pro-posed procedure, the\nauthors have solved the problem\
    \ of cloud storage analysis using the Measurement of\nAlternatives and Ranking\
    \ according to the Compromise Solution (MARCOS) method via\ntriangular fuzzy numbers\
    \ [25].\nChakraborty et al. have evaluated nine cloud service providers using\
    \ the Distance-\nBased Approach (DBA) with triangular fuzzy values of fourteen\
    \ evaluation criteria (grouped\nas quality, technological and economic factors)\
    \ [26].\nAlthough there have been many studies recently concerning the IoT system\
    \ selection\nproblem, there is no universal approach or uniﬁed procedure for its\
    \ solution. The studies\ndescribed above provide some insights on the comparison\
    \ of IoT systems, but they do also\ndemonstrate some drawbacks:\n(1)\nOften, criteria\
    \ systems include only few technical characteristics of IoT systems;\nhowever,\
    \ evaluation should also be a function of many other factors; for example,\nsocial\
    \ and organizational parameters;\n(2)\nIf IoT system assessment depends on qualitative\
    \ factors, then their estimates are often\nsubjective and should be made by a\
    \ team of experts and fuzzy numbers;\n(3)\nThe majority of the proposed fuzzy\
    \ multi-criteria solutions implement only one or\ntwo MCDM methods.\nTo overcome\
    \ these shortcomings, in this manuscript we propose a new fuzzy method-\nology\
    \ for IoT solutions’ evaluation. The selection of an appropriate IoT system according\
    \ to\nthe needs of a given agricultural company is a complex procedure, depending\
    \ on many fac-\ntors. The group multi-criteria approach has the potential to solve\
    \ this multi-factor problem.\nAlternatives include a variety of IoT (general purpose\
    \ or specialized) systems available on\nthe market. The solution to the problem\
    \ is the system that best meets the preferences of a\nparticular farm.\nThe aim\
    \ of this study was to create a methodological framework for the multi-criteria\n\
    management of the procedure for the selection of an IoT system in a fuzzy environment\n\
    with a focus on agriculture companies.\nThe tasks of this study are as follows:\n\
    (1)\npresent the most widely used IoT platforms;\n(2)\nexplore the impact of multi\
    \ sensors IoT systems on agricultural companies;\n(3)\ndevelop a conceptual framework\
    \ for the multi-criteria analysis of an IoT system;\n(4)\ncreate a modiﬁcation\
    \ of Multi-Attribute Border approximation Area Comparison\n(MABAC) for an intuitionistic\
    \ fuzzy environment;\n(5)\nverify the proposed framework and the new method through\
    \ a practical example.\nThe limitations of our study are as follows:\n1.\nThe\
    \ problem of ﬁnding the most suitable IoT system can be solved using different\n\
    approaches, but our study is limited to the decision analysis methods.\n2.\nIn\
    \ order to make an informed decision, decision-makers need to have relevant infor-\n\
    mation (expert opinions, literature sources, decision rules, etc.) for the preliminary\n\
    assessment of the need for an IoT system, the formulation of user requirements\
    \ and\nthe calculation of weighting coefﬁcients and comparison index.\n3.\nIn\
    \ the new framework, only IoT systems for which the necessary information (features,\n\
    reviews, comparisons, etc.) to build a decision matrix is provided can be evaluated.\n\
    The rest of this article is organized as follows: In Section 2, the peculiarities\
    \ of the\nmost widely used general-purpose and specialized IoT platforms for Agriculture\
    \ 4.0 are\nanalysed. Next, the previous studies on the topic of multi-criteria\
    \ selection of IoT systems\nare summarized. Section 3 presents the new multi-criteria\
    \ decision making (MCDM)\nframework for IoT system selection and a modiﬁcation\
    \ of the MABAC method with\nuncertainty in estimates of decision makers. In the\
    \ next section, the problem of IoT product\nSensors 2022, 22, 4110\n4 of 26\n\
    selection is solved using the proposed methodology. The last section summarizes\
    \ the\nobtained results and outlines directions for future work in enhancing the\
    \ multi-criteria\nmethods and expanding their applications.\n2. IoT Technology\
    \ and Its Application in Agriculture\nSmart farming represents the applications\
    \ of IoT through a variety of autonomous\ndevices connected to each other via\
    \ the global network. By using intelligent sensors, drones,\nrobots and agricultural\
    \ machinery, farmers inspect and supervise the agricultural processes,\nfrom planting,\
    \ growing and dispatching to the storage and distribution of crops [27,28].\n\
    However, managers and other stakeholders in agribusiness are still not familiar\
    \ with\nthe capabilities of IoT technology in the remote monitoring of a huge\
    \ amount of data and\ncontrolling physical objects in real-time without human\
    \ interference. In the next section,\nthe basic characteristics of IoT technology\
    \ are presented. Then, the most widely used IoT\nsystems are compared and applications\
    \ of IoT in agriculture are analysed.\n2.1. IoT Basics\nAccording to the NIST\
    \ deﬁnition, IoT is a network of devices that contains hardware,\nsoftware, ﬁrmware\
    \ and actuators which allows the devices to connect, interact and freely\nexchange\
    \ data and information [29–31]. This network encompasses computing devices,\n\
    mechanical machines and various other physical objects that have unique identiﬁers\
    \ and\nexchange data, even without human intervention [32–34].\nDuring the fourth\
    \ revolution in agriculture, farms must adopt new digital technologies\nin order\
    \ to be competitive. However, the digital transformation through IoT poses three\n\
    main technological and business challenges.\nThe ﬁrst one is the growing demand\
    \ for connectivity. The proliferation of 5G stimulates\nthe need for communication\
    \ between an increasing number of sensors. A possible solution\nto the server\
    \ overload problem is the deployment of blockchain storage in decentralized\n\
    computer networks.\nThe next challenge is related to device security and data\
    \ privacy. The threat of unau-\nthorized access to data or the replacement of\
    \ a device’s instructions requires manufacturers\nto continuously improve IoT\
    \ protection and reliability [35].\nThe third challenge is the lack of standards\
    \ unifying the requirement speciﬁcations\nin the manufacturing of IoT components.\
    \ The multitude of devices from different manu-\nfacturers using various communication\
    \ protocols hinders the portability, interoperability\nand manageability of IoT\
    \ systems. Several standardizing bodies have already established\nsome important\
    \ standards for seamless communication between different IoT systems and\namong\
    \ entities within an IoT system [36]. Unfortunately, the harmonization has not\
    \ yet\nbeen completed, which complicates the IoT development process and increases\
    \ its cost.\nIoT technology connects a variety of objects to the Internet, uniting\
    \ the virtual and\nphysical worlds. This merging of the two worlds is a prerequisite\
    \ for the more efﬁcient\nusage of available resources. IoT minimizes human efforts\
    \ because devices can connect and\ncommunicate directly with each other and perform\
    \ various tasks autonomously. Existing\nsecurity, data protection and interoperability\
    \ challenges can be resolved through the active\nengagement of stakeholders.\n\
    2.2. The Peculiarities of Major IoT Platforms\nFrom a cloud technology point of\
    \ view, IoTs platforms connect devices and applica-\ntions within a cloud ecosystem.\
    \ They are also known as IoT Platforms as a Service (PaaS),\ni.e., by using these\
    \ platforms, users create their own applications and services employing\nbuilt-in\
    \ IoT features. An IoT application usually includes the connecting of remote devices\n\
    through the cloud, collecting data from devices, remote control, analysis and\
    \ visualization\nand the management of application versions and user access rights.\
    \ This section brieﬂy\ndescribes the main features of the most widely used IoT\
    \ platforms (AWS IoT Core, MS\nAzure IoT, Google Cloud IoT Core, IBM Watson IoT\
    \ and Oracle IoT Service).\nSensors 2022, 22, 4110\n5 of 26\nAWS IoT Core (https://aws.amazon.com/iot/,\
    \ accessed on 1 March 2022) is a man-\naged cloud service that connects IoT devices\
    \ and interacts with cloud applications and other\ndevices. The platform supports\
    \ a large number of devices, processes and messages, and\nroutes those messages\
    \ reliably and securely. AWS IoT users create their own solutions with\na combination\
    \ of over 60 AWS cloud and edge services. Common service elements across\nall\
    \ deployment models are AWS IoT Greengrass, Amazon Monitron and AWS Panorama.\n\
    AWS also offers a portfolio of capabilities for edge-centric computing that includes\
    \ intelli-\ngence and inference closer to monitored events. Unfortunately, edge\
    \ cloud and on-premises\ndeployment models offer fewer capabilities, especially\
    \ relating to data management and\nanalytics [37].\nMS Azure IoT (https://azure.microsoft.com/en-us/overview/iot/,\
    \ accessed on\n1 March 2022) is a collection of Microsoft-managed cloud services\
    \ that connect, moni-\ntor, and control IoT assets. Each IoT solution is made\
    \ up of one or more IoT devices that\ncommunicate with one or more back-end services\
    \ hosted in the cloud. Azure IoT employs\nAzure platform and offers cloud, edge\
    \ and hybrid deployment options. Azure IoT services\ncan run on-premises and Azure\
    \ IoT edge solutions offer architecturally secure isolation\nthrough a hierarchical\
    \ deployment approach. Customers have access to the Microsoft\nproducts and a\
    \ marketplace for third-party software. Azure IoT can be used in many\nvertical\
    \ markets such as healthcare, retail and manufacturing [37].\nGoogle Cloud IoT\
    \ Core (https://cloud.google.com/solutions/iot, accessed on 1 March\n2022) is\
    \ a cloud service consisting of two main components: a device manager and protocol\n\
    bridges. The former registers devices with the service, so the user can monitor\
    \ and conﬁgure\nthem, while the latter can be employed by devices to connect to\
    \ Google Cloud Platform.\nTypical use cases include asset tracking, visual inspection\
    \ and quality control in retail,\nsmart parking, transportation and logistics.\n\
    IBM Watson IoT (https://cloud.ibm.com/docs/IoT?topic=IoT-iot-cloud-index, ac-\n\
    cessed on 1 March 2022) pro-vides application enablement, data and device management,\n\
    analytics, integration and security. This platform is delivered as a collection\
    \ of services\nwith the IBM Cloud or can be deployed on-premises via private cloud\
    \ capabilities. It is\ndeployed in manufacturing, utilities, transportation and\
    \ logistics. Common use cases are\npredictive maintenance and asset monitoring.\
    \ Customers use the Node-RED open-source\nprogramming language to personalize\
    \ and extend the functionality of Watson IoT [38].\nOracle IoT Cloud Service (https://docs.oracle.com/en/cloud/paas/iot-cloud/,\
    \ ac-\ncessed on 1 March 2022) can be integrated with Oracle’s middleware solutions\
    \ and enter-\nprise applications. Oracle’s industrial IoT (IIoT) are suitable\
    \ for production, asset and ﬂeet\nand service monitoring. A typical solution comprises\
    \ data management capabilities, analyt-\nics, user interfaces with custom dashboards\
    \ and built-in integrations with manufacturing,\nmaintenance and asset management\
    \ systems. These solutions can run on Oracle Cloud but\nare available in an on-premises\
    \ version via private cloud [38].\nThe ﬁve above-mentioned IoT systems share some\
    \ common characteristics. They\nare designed to be platforms with general purpose\
    \ and, therefore, they are best suitable\nfor standardized solutions. A disadvantage\
    \ of these platforms is that they are oriented\nentirely to the cloud ecosystem\
    \ of their vendor. As a result, their work processes are\nmore complex, and their\
    \ settings require specialized knowledge about the particular cloud\ninfrastructure\
    \ (especially in the AWS case). These ecosystems include predeﬁned modules\nand\
    \ applications for a variety of IoT use cases. However, their main disadvantage\
    \ is the\nlack of personalization.\nTable 1 summarizes some main features of the\
    \ presented IoT platforms. These at-\ntributes can be built into an evaluation\
    \ system for the selection of an IoT platform and\nits components.\nSensors 2022,\
    \ 22, 4110\n6 of 26\nTable 1. A comparison of the most widely used IoT platforms.\n\
    Platform Feature\nAWS\nMS Azure\nGoogle Cloud\nIBM Watson\nOracle\nIoT Core Functions\n\
    Connectivity,\nauthentication,\nrules engine,\nDeveloper mode,\nEdge SDK\nConnectivity,\n\
    authentication,\ndevice\nmanagement,\ndevice monitoring,\nIoT Edge SDK\nConnectivity,\n\
    authentication,\ndevice\nmanagement\nConnectivity,\nauthentication,\ndevice\n\
    management, Edge\ncomputing\nConnectivity,\nauthentication,\ndevice\nmanagement,\
    \ Edge\ncomputing\nEdge Computing\nSolutions\nFree RTOS 1\nIoT Edge\nEdge TPU\
    \ 2 chip\nIBM Edge app\nmanager\nIoT Edge\nData Protocols\nHTTP, MQTT,\nWebSockets\n\
    HTTP, MQTT,\nAMQP over\nWebSockets\nHTTP, MQTT\nHTTP, MQTT\nHTTP, MQTT\nData Processing\n\
    and Analytics\nS3, Kinesis,\nLambda, Dynamo\nDB, Elastic Search\nStream Analytics,\n\
    Azure Blob,\nNotiﬁcation,\nPower BI\nDataﬂow, Big Data,\nBig Query, Coding\nService\
    \ Engine\nActivity Tracker,\nLog Analysis,\nMonitoring, Pak\nfor Watson AIOps\n\
    Business\nIntelligence Cloud,\nAnalytics Cloud,\nand Mobile Cloud\nservices\n\
    1 RTOS—Real-time Operating Systems. 2 TPU—Tensor Processing Unit.\nIoT Core Functions:\
    \ The compared IoT platforms gather and store data from and\ncommunicate with\
    \ disparate IoT endpoints in a secure way. They also employ analytics\nto find\
    \ hidden patterns in the data and provide applications that enable organizations\
    \ to\nvisualize and take action on the insights extracted from the data. The five\
    \ vendors offer a\ncloud-edge hybrid model, allowing for a consistent experience\
    \ on both the edge and the cloud.\nEdge Computing Solutions: Edge computing minimizes\
    \ the latency of cloud commu-\nnication between the client and server by bringing\
    \ the infrastructure closer to the ends of\nthe network. With edge computing,\
    \ the compared platforms exchange data with less delay\nand lower cloud server\
    \ bandwidth usage. Customers can gather edge data and send it to\nthe IoT Cloud\
    \ via SDK for devices, gateway software or cloud-based IoT connectors that\ncan\
    \ do protocol translation and then send messages to the cloud services.\nCommunication\
    \ Protocols: Google Cloud IoT, IBM Watson IoT and Oracle IoT employ\nonly two\
    \ data protocols: HTTP and Message Queue Telemetry Transport (MQTT). HTTP\nprotocol\
    \ is not preferred for IoT data transfer because of its high cost, low battery\
    \ life, high\npower consumption and weight issues. In contrast, MQTT is a lightweight\
    \ IoT data proto-\ncol, but it does not support a deﬁned data representation and\
    \ device management structure\nmode. As a result, the implementation of data and\
    \ device management capabilities is\nentirely platform speciﬁc. In addition to\
    \ these two protocols, AWS IoT and Azure IoT also\nsupport WebSocket (in Azure\
    \ IoT case via Advanced Message Queuing Protocol—AMQP).\nWebSocket is an appropriate\
    \ choice for IoT networks where data is bidirectional communi-\ncated continuously\
    \ across multiple devices. AMQP, as an open standard application layer\nprotocol,\
    \ is used for transactional messages between servers.\nData Processing and Analytics:\
    \ IoT platforms offer the analytical services of the\nrespective vendor’s ecosystem.\
    \ The advantage of built-in analytics tools is that users train,\ndeploy and manage\
    \ their new AI models, and then prepare data and analyze information\nin a single\
    \ integrated environment. Unfortunately, these modules require payment to all\
    \ of\nthe above-mentioned platforms.\nEach of the presented platforms is the leader\
    \ on vertical markets in several industries.\nFor example, AWS IoT is the most\
    \ suitable for smart home deployment, while Microsoft\nAzure IoT demonstrates\
    \ high efﬁciency on the Internet of Medical Things (IoMT) market.\nGoogle Cloud\
    \ IoT brings the most value to transport companies. IBM Watson IoT and\nOracle\
    \ IoT are leaders in the management of large enterprises with complex infrastructure\n\
    and a large number of sensors, as both companies have experience in the management\
    \ of\nindustrial equipment.\nThe optimal selection of an appropriate IoT system\
    \ should not be limited to the most\nwidely used platforms and the indicators\
    \ for their comparison in Table 1. There are a\nSensors 2022, 22, 4110\n7 of 26\n\
    variety of open-source and specialized IoT alternatives, some of which even outperform\n\
    the aforementioned technological leaders in some industries.\n2.3. IoT for Agricultural\
    \ Activities\nIn traditional agriculture, due to the heterogeneity of risks and\
    \ long production cycle,\nrevenues are uncertain. The concept of intelligent agriculture\
    \ is revolutionizing the sector.\nIoT systems track the dynamic changes in farms\
    \ (meteorological conditions, soil quality,\navailability and cost of labor force),\
    \ forecast the potential risks of crop damage, plan\nactivities in advance and\
    \ take preventive measures for protection in case of emergencies.\nApplications\
    \ of IoT technology increase the yield and decrease the costs of agricultural\n\
    production without unnecessary treatment. Agriculture is no longer seen as a high-risk\
    \ and\nlabor-intensive industry because the harvest is predictable, and labor\
    \ productivity increases\nand the quality of products in the food supply chain\
    \ are guaranteed [39,40]. Although\nIoT is still not a very popular technology\
    \ in agriculture, its market is constantly growing.\nThe size of the global market\
    \ for intelligent agriculture is expected to quadruple by 2026,\nreaching $22.5\
    \ billion (compared to just over $5 billion in 2016) [41].\nIn this section, we\
    \ discuss the main application areas of IoT in the agricultural supply\nchain.\
    \ This supply chain includes of a variety of participants—input suppliers (cooperatives,\n\
    agro-dealers), farmers (growers), processors, shipping companies, wholesalers,\
    \ retailers\nand ﬁnal consumers. The digitization of agricultural supply chain,\
    \ supported by IoT\ntechnology, is depicted in Figure 1. Every business process,\
    \ performed between actors\nalong the crop trajectory, could be empowered by the\
    \ use of IoT technology, including\nploughing, sowing, irrigation, weeding and\
    \ harvesting. Each product follows its own path\nto reach customers, and every\
    \ relationship between participants (supplier-farmer, farmer-\nprocessing company\
    \ and farmer-distributor) is assisted by IoT devices. The following\nsections\
    \ consider the applications of IoT in agriculture through business processes:\
    \ supply\nof materials, crop management and distribution of food products.\nSensors\
    \ 2022, 22, x FOR PEER REVIEW \n8 of 27 \n \n \nFigure 1. IoT in the agricultural\
    \ supply chain. \n• \nSupply of agricultural materials \nIoT technology improves\
    \ the traceability of agricultural materials (seeds, minerals, \nfertilizers,\
    \ pesticides, fuel, and water) throughout the crop life cycle. IoT devices track\
    \ \nquality, location and time during materials’ transfer from suppliers to warehouses\
    \ or \nfields. To this end, IoT platforms are equipped with various data readers:\
    \ intelligent tags \n(barcodes, near field communication, RFID or low-power Bluetooth),\
    \ which are set up by \nFigure 1. IoT in the agricultural supply chain.\nSensors\
    \ 2022, 22, 4110\n8 of 26\n•\nSupply of agricultural materials\nIoT technology\
    \ improves the traceability of agricultural materials (seeds, minerals,\nfertilizers,\
    \ pesticides, fuel, and water) throughout the crop life cycle. IoT devices track\n\
    quality, location and time during materials’ transfer from suppliers to warehouses\
    \ or\nﬁelds. To this end, IoT platforms are equipped with various data readers:\
    \ intelligent tags\n(barcodes, near ﬁeld communication, RFID or low-power Bluetooth),\
    \ which are set up by\nusing a tagging inventory system. For the supply department,\
    \ IoT ensures accountability\nof costs and timely delivery with optimal routes,\
    \ schedules and balanced vehicle loads.\nThe accurate prediction of required quantities\
    \ reduces excess inventory and improves the\nefﬁciency of contract and cost management\
    \ [42,43].\n•\nCrop management\nThrough IoT platforms, farmers observe and manage\
    \ agricultural processes such as\nplanting, growing, harvesting and harvest management\
    \ via connected sensors installed in\nﬁelds or greenhouses. Agricultural companies\
    \ also apply IoT for better management of crop\nirrigation. The connected sensors\
    \ can monitor the level of precipitation and humidity and\nautomatically adjust\
    \ the irrigation schedules (precision irrigation). Data on soil chemical\ncomposition\
    \ and plant growth facilitates the selection of the most appropriate combination\n\
    of fertilizers and their amount. As a result, the crop yield conditions are optimized\
    \ and\nwater, energy and fertilizer consumption are reduced [44].\nSensors warn\
    \ farmers about pests and diseases immediately preventing their spread\nand minimizing\
    \ damages [45]. Robots and machinery in agricultural ﬁelds operate without\ndowntime\
    \ and thus reduce risks farmers face such as excessive rainfalls, ﬂoods, droughts,\n\
    freezing or toxic fertilizers. Drones are also useful in farming because they\
    \ transmit real-\ntime video and even spray various pesticides and fertilizers\
    \ [46]. Greenhouses also deploy\nmulti-sensor systems that monitor facility parameters\
    \ and plant growth and automatically\nadjust equipment to provide the most appropriate\
    \ conditions for each plant.\nThe conventional monitoring of crops in storage\
    \ requires a lot of time and resources.\nEven in the case of storage equipped\
    \ with wired sensors, operators should check the storage\nconditions on-site,\
    \ which is a continuous and laborious process. IoT systems allow more\nthan remote\
    \ sensing and notiﬁcations. The collected historical data reveal trends regarding\n\
    harvest states and offer decisions to change the method of storage or sale [47,48].\n\
    •\nAgricultural distribution\nIoT systems keep track of the movement of crops\
    \ to processing plants, distributors’\nwarehouses and consumers. Sensors in transport\
    \ containers collect and transmit data\nabout the route, location and status of\
    \ the shipment in real time. In this way, agricul-\ntural companies increase their\
    \ efﬁciency, speed up delivery time and improve customer\nservice [49,50].\nIn\
    \ agriculture, IoT redesigns business processes (preparation of soil, sowing,\
    \ adding\nfertilizers, irrigation, harvesting and storage) to protect crops and\
    \ optimize yield. The main\nadvantages of IoT applications in agriculture are\
    \ as follows:\n(1)\nIoT devices and analytics guarantee timely ﬁeld operations\
    \ under cost control;\n(2)\nRisk in terms of quality and quantity of food supply\
    \ and safety is reduced and, thus,\nthe relationships between agricultural producers\
    \ and consumers are strengthened;\n(3)\nThe agricultural supply chain becomes\
    \ efﬁcient and sustainable.\nThe stability of the IoT-based model of an agricultural\
    \ system depends on its com-\npleteness and accuracy. The proposed approach complicates\
    \ agricultural supply chain\nbut increases its stability. Implementing the model\
    \ also helps stakeholders to predict the\nlong-term consequences of their actions\
    \ and thus further bolster food security, increase\nrevenues and enhance environmental\
    \ sustainability.\nUsing IoT technology, agricultural and processing companies\
    \ can build a reliable\ninterorganizational information system integrating data\
    \ collection, business process model-\nSensors 2022, 22, 4110\n9 of 26\ning and\
    \ planning between supply chain participants for better communication and coherent\n\
    decision-making.\n2.4. IoT Solutions in Farming\nIn this section, we present some\
    \ basic features of the most widely used IoT systems\nin agriculture.\nActility\
    \ (Paris, France, 2010, https://www.actility.com/precision-agriculture, accessed\n\
    on 1 March 2022) provides detection, monitoring and control over long distance\
    \ (over\n15 km) of a wide variety of key agricultural data: soil temperature and\
    \ moisture; weather,\nrainfall and water quality; airborne pollution; crop growth;\
    \ smart connected harvesters and\nirrigation equipment; ﬁre, theft and ﬂood detection.\n\
    Arable (San Francisco, CA, USA, 2014, https://www.arable.com, accessed on 1 March\n\
    2022) sets up a new generation of IoT tools that enable farmers to take advantage\
    \ of\nadvanced sensors, wireless networks and machine learning recommendations\
    \ to improve\ncrop growth via agronomic models and intuitive interface.\nCropX\
    \ (Netanya, Israel, 2013, https://cropx.com, accessed on 1 March 2022) employs\n\
    IoT technology to analyse soil data and integrate it with crop models, satellite\
    \ imagery and\nweather forecasts to help farmers cut crop-input costs by driving\
    \ water, fertilizer, energy\nand labour savings.\nCrop Performance (San Francisco,\
    \ CA, USA, 2009, https://crop-performance.com,\naccessed on 1 March 2022) provides\
    \ geospatial analytics enabling growers and food supply\nchain to increase crop\
    \ yields, conserve resources and monitor the ecological impact of\ngrowing safe\
    \ and healthy food. Crop performance analytics create supply decisions based\n\
    upon crop yields prediction in advance of the harvest.\nCropwise Operations (former\
    \ Cropio) (Zurich, Switzerland, 2014, (https://www.\ncropwise.com/operations,\
    \ accessed on 1 March 2022) as a decision-making tool aims to\noptimize fertilization\
    \ and irrigation, and thus reduces the amount of fertilizer and water\nused. Cropwise\
    \ Operations, combining weather information and satellite data, also makes\nit\
    \ possible to monitor crops and yield forecasts.\nFarmapp (Leopold, Australia,\
    \ 2014, https://farmappweb.com, accessed on 1 March\n2022) is an Integrated Pest\
    \ Management (IPM) software-based service for crops. The\nsoftware includes a\
    \ combination of scouting and fumigation applications with sensors and\nbrings\
    \ IoT devices to the agricultural sector. Using soil sensors, spraying applications\
    \ and\nweather stations, growers are able to receive up-to-date data regarding\
    \ growing conditions.\nGrowlink (Denver, CO, USA, 2015, https://www.growlink.com,\
    \ accessed on 1 March\n2022) uses crop scheduling, labour forecasting, compliance\
    \ logging and reporting and task\nmanagement. Controllers and application give\
    \ users remote access to monitor sensor data\nin real time and control any connected\
    \ devices using a mobile phone or computer. Users\ncan add an unlimited number\
    \ of power block outlets to switch on or off any hardware such\nas ventilation\
    \ blowers, pumps, lights, dehumidiﬁers, humidiﬁers, water chillers, heaters,\n\
    fans or any other electrical device.\nKaa (Miami Beach, FL, USA, 2017, https://www.kaaiot.com/use-cases/smart-farming,\n\
    accessed on 1 March 2022) is a versatile IoT platform that can be used to create\
    \ a broad\nvariety of IoT applications, including those used for smart farming.\
    \ There is no need for\ncoding or previous IoT development experience to use this\
    \ platform.\nMothive (London, UK, 2015, http://www.terraprimagroup.co.uk, accessed\
    \ on 1 March\n2022) designs IoT solutions to collect environmental and situational\
    \ awareness data from\nany location and transform it into knowledge to support\
    \ customers using trigger alerts and\nautomatic responses. After crops, soil and\
    \ weather data are processed and correlated with\nweather and satellite data,\
    \ the system enables the prediction of crop yields and diseases\nand improves\
    \ resource usage and site management through a live alert system.\nParticle (San\
    \ Francisco, US, 2012, https://www.particle.io/agriculture, accessed on\n1 March\
    \ 2022) creates edge-to-cloud IoT development tools including development kits,\n\
    production modules and asset tracking teams. Particle offers different IoT solutions\
    \ for\nSensors 2022, 22, 4110\n10 of 26\nconnectivity, hardware, device cloud\
    \ and applications. For better connectivity reasons, it\noffers three main products:\
    \ Wi-Fi, Cellular and Mesh.\nPycno (London, UK, 2014, https://pycno.co/platform,\
    \ accessed on 1 March 2022)\nis bringing continuous data monitoring and system\
    \ control to agricultural farms. The\nwireless sensors establish a simple and\
    \ low-cost way to collect real-time weather or soil\ndata from a ﬁeld or greenhouse,\
    \ visualise it using cloud-driven analytics and drive different\ncontrol systems.\n\
    Rayven (Sydney, Australia, 2016, https://www.rayven.io/industry-solutions/agriculture-\n\
    farming-iot/, accessed on 1 March 2022) provides organizations with fast, affordable\
    \ access\nto IoT, ML and real-time analytics solutions via a drag-and-drop, codeless\
    \ platform. The\nplatform combines industrial data science and deployment services\
    \ to gather real-time\ninsights and achieve business goals.\nSemios (Vancouver,\
    \ BC, Canada, 2010, https://semios.com, accessed on 1 March 2022)\nis a scalable,\
    \ data analytics platform for growers that helps predict, identify and prevent\n\
    pest and disease pressure. Providing updates every 10 min, the platform applies\
    \ big data\nanalytics and ML to reduce and mitigate crop risks for growers.\n\
    SoilScout (Helsinki, Finland, 2013, https://soilscout.com/applications/agriculture,\n\
    accessed on 1 March 2022) optimizes water and energy usage by guaranteeing permanent\n\
    wireless monitoring. SoilScout wirelessly provides critical insight into data\
    \ from deep\nbelow the surface. Farmers and agriculture professionals employ SoilScout\
    \ to understand\ntheir ﬁelds, optimize soil conditions for better growth and improve\
    \ crop production, also\nreducing operational costs and water consumption (https://www.linkedin.com/company/\n\
    soil-scout/about/, accessed on 1 March 2022)\nThingWorx (Boston, MA, USA, 2012,\
    \ https://www.ptc.com/products/iot, accessed\non 1 March 2022), a PTC Technology\
    \ product, is an IoT and augmented reality platform\nfor industrial enterprises.\
    \ The platform connects devices and systems, normalizes and\nanalyses data, implements\
    \ applications and user interfaces, manages and remotely controls\ndevices and\
    \ delivers new types of experiences through technologies like augmented reality.\n\
    Depending on their purpose, the IoT systems described above can be divided into\
    \ two\nmain groups:\n(1)\nIoT platforms for application development—Actility,\
    \ Kaa, Particle, Rayven, Cropwise\nOperations and ThingWorx;\n(2)\nIoT systems\
    \ (intelligent sensors and analytical platform)—Arable, CropX, CropPerfor-\nmance,\
    \ Farmapp, Growlink, Mothve, Pucho, Semios and SoilScout.\nSome IoT products are\
    \ industry independent, while others are speciﬁcally intended for\nagriculture;\
    \ for example, Farmapp and Growlink—greenhouses automation; Arable, CropX,\nCropPerformance,\
    \ Mothive, Semios and SoilScout—crop management. The majority of\nagricultural\
    \ IoT software is proprietary, while some IoT platforms are open source (for\n\
    example, Kaa and Particle).\nIoT technology has various applications in smart\
    \ agriculture. It overcomes the depen-\ndence on human labor and meteorological\
    \ conditions by automating processes such as\nfertilization and pest control.\
    \ Intelligent sensors and devices track the entire lifecycle of\nplants, increasing\
    \ yields through more efﬁcient use of resources (precise irrigation, control\n\
    of soil quality, rapid detection of growth abnormalities and local treatment with\
    \ pesticides).\nImplementing IoT systems, farmers deliver products with better\
    \ quality at a lower price.\nDespite the many beneﬁts of IoT, this technology\
    \ has some disadvantages; for example,\nplanning, building and managing such a\
    \ system is often a complicated project that could\nbe implemented only by experts\
    \ with a variety of IT skill sets and expertise such as IoT,\ndata analysis and\
    \ web development.\n3. Methodological Framework for IoT Platforms Evaluation\n\
    In this section, we introduce the basic components of multi-criteria decision-making\n\
    theory, formulate the selection of IoT system as a MCDM problem, present new theoretical\n\
    Sensors 2022, 22, 4110\n11 of 26\nframework for reliable ranking of alternatives\
    \ and propose a new MABAC modiﬁcation\nfor multi-criteria decision making.\n3.1.\
    \ Main Components of MCDM Theory\nThe goal of MCDM (multi-criteria analysis) is\
    \ to determine the relative signiﬁcances or\npriorities of a set of N alternatives\
    \ according to a given set of M criteria (attributes). Some\nof the criteria can\
    \ be maximizing (beneﬁcial), while others can be minimizing (cost). The\nsolution\
    \ of the problem of multi-criteria analysis consists of two stages: (1) describing\
    \ the\nalternatives and evaluation criteria and developing the criteria weights;\
    \ (2) aggregating\nperformance and ranking of alternatives.\nAfter selecting sets\
    \ of alternatives and determining the most important criteria, the\ninitial decision\
    \ matrix X is developed:\nX =\nA1\nA2\n. . .\nAN\nC1\nC2\n. . .\nCM\n\n\n\
    x11\nx12\n. . .\nx1M\nx21\nx22\n. . .\nx2M\n. . .\n. . .\n. . .\n. . .\nxN1\n\
    xN2\n. . .\nxNM\n\n\n,\nwhere xij (xij ≥ 0) is the value of i-th alternative\
    \ on j-th criterion. Expert evaluations, results\nobtained from laboratory experiments,\
    \ industrial measurements or computer simulations\ncan be used to ﬁll in matrix\
    \ X.\nThe weighting coefficients of the criteria are described by vector W =\n\
    \x02\nw1\nw2\n. . .\nwM\n\x03\n,\nwhere wj (0 < wj < 1) is the relative weight\
    \ of the j-th criterion and ∑M\nj=1 wj = 1.\nDuring the ﬁrst stage, the weights\
    \ of criteria are calculated according to their impor-\ntance for decision makers.\
    \ Methods such as AHP, DEMATEL, Stepwise Weight Assessment\nRatio Analysis (SWARA),\
    \ entropy method, BWM or Full Consistency Method (FUCOM)\ncan be employed. While\
    \ the calculations in AHP and DEMATEL are based on matrix of\npairwise comparisons,\
    \ other methods require less input data. For example, for FUCOM, it\nis sufﬁcient\
    \ to set ranking of weights and ratios between adjacent coefﬁcients.\nDuring the\
    \ second stage, the ranking of compared alternatives is performed by multi-\n\
    attribute decision-making algorithms such as SAW, VIKOR, Complex Proportional\
    \ As-\nsessment (COPRAS), Additive Ratio Assessment (ARAS), TOPSIS, Weighted Aggregated\n\
    Sum Product Assessment (WASPAS), Evaluation based on Distance from Average Solution\n\
    (EDAS), Multi-Attributive Border approximation Area Comparison (MABAC), Combina-\n\
    tive Distance-based Assessment (CODAS), Multi-Objective Optimization on the basis\
    \ of\nRatio Analysis (MOORA), TODIM, MARCOS or Range of Values (ROV).\nThe above-mentioned\
    \ multi-criteria methods belong to two main groups, with additive\nweighted functions\
    \ (SAW, WASPAS, MOORA, ROV) and according to the distance to the\nbest and worst\
    \ or average alternatives (TOPSIS, VIKOR, COPRAS, ARAS, EDAS, MABAC,\nCODAS, TODIM,\
    \ MARCOS). The variety of multi-criteria methods allow for the different\npoints\
    \ of view of decision-makers to be taken into account when evaluating alternatives.\n\
    The ranking of alternatives is obtained after applying the preferred multi-criteria\n\
    method. The alternative with the highest performance is the best choice among\
    \ the alterna-\ntives set.\n3.2. Conceptual Framework for IoT System Selection\n\
    An IoT system connects a multitude of devices in an ecosystem using different\
    \ network\nand data protocols. A typical IoT system includes several main components:\n\
    •\nIoT devices—a set of connected sensors, appliances, vehicles, industrial robots;\n\
    •\ngateways—to link local devices network to Internet;\n•\nnetwork servers—to\
    \ accept and transfer IoT data usually in cloud data centers;\n•\ncloud applications—for\
    \ IoT data processing;\n•\nuser interface—to visualize IoT data, track KPIs and\
    \ send commands back to IoT devices.\nSensors 2022, 22, 4110\n12 of 26\nThe variety\
    \ of IoT platforms and the many possible combinations of their features\ncomplicate\
    \ the procedure of selecting the best alternative and underscore the necessity\
    \ of a\nrigorous theoretical framework for the IoT platform selection problem\
    \ [51].\nLet IoT_Alternatives\n=\n{A1, A2, . . . , AN} be a given set of systems\
    \ and\nIoT_Criteria = {C1, C2, . . . , CM} be a set of criteria. The features\
    \ set can include technical,\neconomic and environmental characteristics; for\
    \ example, scalability, edge intelligence\nand support; key performance indicators\
    \ and price model; energy consumption and the\nability to generate renewable energy.\
    \ Each alternative Ai ∈ IoT_Alternatives, i = 1, N\ncorresponds to a subset of\
    \ IoT_Criteria.\nThe problem is to rank the given systems according to their evaluations\
    \ in a decision\nmatrix, denoted as EvaluationsN×M for the deﬁned set of criteria.\n\
    Given that each IoT system could be characterized by using vague assessments for\n\
    each criterion, the core of our new framework should be the fuzzy MCDM approach.\
    \ The\nproposed conceptual framework consists of seven steps, as depicted in Figure\
    \ 2.\nSensors 2022, 22, x FOR PEER REVIEW \n13 of 27 \n \n \nNext, in the second\
    \ stage, a suitability index τ is calculated as a measure of company’s \nreadiness\
    \ for IoT deployment. If the index value obtained for a particular organization\
    \ is \nlarger than a predefined threshold, the company could be considered as\
    \ suitable for IoT \ntechnology adoption, and the selection process can continue\
    \ to Step 2. Otherwise, it \nshould go to the end of the IoT platform selection\
    \ process. \n \nFigure 2. A flowchart of the proposed framework for IoT system\
    \ selection. \nStep 2. Development of user requirements specification for IoT\
    \ system \nFigure 2. A ﬂowchart of the proposed framework for IoT system selection.\n\
    Sensors 2022, 22, 4110\n13 of 26\nStep 1. Exploring user’s IoT system needs\n\
    In the ﬁrst stage of this step, in order to collect data about a company’s business\
    \ model,\nwe propose to apply the survey method. There are many questions that\
    \ could be listed in the\nsurvey form; for example, needs (yes/no) for high availability,\
    \ streaming data availability,\nextensive data support, ofﬂine functionality,\
    \ real time analytics and visualization tools.\nNext, in the second stage, a suitability\
    \ index τ is calculated as a measure of company’s\nreadiness for IoT deployment.\
    \ If the index value obtained for a particular organization is\nlarger than a\
    \ predeﬁned threshold, the company could be considered as suitable for IoT\ntechnology\
    \ adoption, and the selection process can continue to Step 2. Otherwise, it should\n\
    go to the end of the IoT platform selection process.\nStep 2. Development of user\
    \ requirements speciﬁcation for IoT system\nIn order to collect data about consumer\
    \ requirements, the survey method is used once\nagain. The questionnaire consists\
    \ of several question groups, corresponding to the various\naspects of an autonomous\
    \ company’s equipment (things, gateway, cloud, data analytics\nand user interface).\
    \ At the end of this step, the minimal values of features of a preferred\nIoT\
    \ platform are deﬁned. Additionally, a matrix for the comparison of criteria importance\n\
    is ﬁlled.\nRemark: A team of experts takes part in Step 1 and Step 2 of the theoretical\
    \ framework.\nThese experts may be employees of the company or external specialists\
    \ in the ﬁeld of IoT.\nStep 3. Search for a list of available IoT systems\nIn\
    \ this step, a list of available IoT products (general purpose and/or industry-speciﬁc;\n\
    open-source and/or proprietary) on the market that satisfy user’s requirements\
    \ from Step 2\nis obtained. To ﬁll this list, an online data search and literature\
    \ review could be employed.\nStep 4. Design of multi-criteria system for IoT systems’\
    \ evaluation\nIn this step, a multi-criteria hierarchical evaluation index for\
    \ IoT systems comparison\nis proposed. It encompasses different groups of indicators\
    \ with speciﬁc relative weights\ndepending on their importance for a company’s\
    \ business processes. This composite index\nis ﬂexible and allows for other groups\
    \ and indicators to be considered for incorporation in\nit, depending on users’\
    \ preferences.\nStep 5. Determination of decision matrix and preprocessing with\
    \ calculation of weight-\ning coefﬁcients\nFirst, based on data about the company’s\
    \ industry and user requirements speciﬁcation\n(Step 2), available datasets for\
    \ IoT systems’ comparison (Step 3) and personalized multi-\ncriteria evaluation\
    \ system (Step 4), the corresponding assessments are ﬁlled in the decision\nmatrix.\
    \ In the case of Likert scale assessments, they could be transformed in intuitionistic\n\
    fuzzy numbers (IFNs) using the 3-touple (Agree, Disagree, Neutral). The conversion\
    \ is\nalso possible for other advanced fuzzy sets such as Pythagorean (2013),\
    \ picture (2013),\nFermatean (2020) and other fuzzy sets. If there are categorical\
    \ variables, they are converted\nin advance into linguistic variables. In the\
    \ case that alternatives are evaluated by a group\nof experts, the decision matrix\
    \ is ﬁlled after the arithmetic means aggregation of their\nassessments. In this\
    \ way, the evaluations of each IoT system’s feature are calculated.\nSecond, the\
    \ values of weighting coefﬁcients are determined. The input data for\ncalculations\
    \ is the matrix of comparison of importance of IoT features by pairs (Step 2).\n\
    In the case of a hierarchy of dimensions, the comparison should be provided for\
    \ each\nhierarchical level from the top to the bottom. The weighting coefﬁcients\
    \ are calculated by\nusing weight determination methods in crisp or fuzzy values.\n\
    Remark: In order to avoid a possible incongruity between some criteria, two different\n\
    approaches can be applied. One of them includes some weight determination methods,\n\
    such as AHP or the Analytic Network Process (ANP). These methods check the consistency\n\
    of pairwise comparisons made by participants. The other approach is Inter-criteria\
    \ Decision\nAnalysis, which allows for removing any redundant criteria or objects\
    \ from the original\ninput data. Both approaches minimize discrepancies in participants’\
    \ opinions.\nStep 6. Execution of multi-criteria decision-making methods\nSensors\
    \ 2022, 22, 4110\n14 of 26\nThis step calculates the ranking of IoT systems using\
    \ one or several MCDM methods\nwith crisp or fuzzy values.\nStep 7. Analysis of\
    \ obtained results\nOnly the top-ranked alternatives from Step 6 are taken into\
    \ consideration. Finally,\ndecision-makers select the product that is the most\
    \ appropriate for the company’s purposes.\nAt the end of the procedure, the IoT\
    \ system with the greatest potential to enhance\ncompetitiveness will be deployed.\n\
    The advantages of the new framework are: (1) it implements a variety of (group)\n\
    methods for weight determination and multi-criteria analysis and their combinations;\n\
    (2) alternatives assessments could be expressed not only by real numbers, but\
    \ also by a\nvariety of fuzzy numbers or by fuzzy relations; (3) assessments can\
    \ be made by a group of\nexperts; (4) it is ﬂexible and can be further extended\
    \ to include new multi-criteria methods\nand types of assessments (such as advanced\
    \ fuzzy sets).\n3.3. New MABAC Modiﬁcation for Intuitionistic Fuzzy Environment\n\
    The Multi-Attribute Border Approximation Area Comparison (MABAC) method is\npart\
    \ of the MCDM group, and it determines similarity between each alternative and\
    \ the\nbest and worst value for each attribute using distance metrics. MABAC ranks\
    \ the given\nopportunities according to their distance to the benchmarking values\
    \ [52].\nThe classical MABAC method consists of six steps, described as follows:\n\
    Step 1. Input of the decision matrix and weighting coefﬁcients.\nLet xij refers\
    \ to the decision value related to the assessment of the i-th alternative\nagainst\
    \ the j-th criteria in decision matrix Evaluations and wj, j = 1, M are weighting\n\
    coefﬁcients of criteria.\nStep 2. Normalization.\nThe normalized matrix T =\n\x02\
    \ntij\n\x03\nN×M is calculated as:\ntij =\n\n\n\n\n\nxij−xjmin\nxjmax−xjmin\
    \ , j ∈ B;\nxij−xjmax\nxjmin−xjmax , j ∈ C.\nwhere xjmax = max\nj (x1, x2, . .\
    \ . , xM), xjmin = min\nj (x1, x2, . . . , xM), B denotes the set of\nmaximizing\
    \ criteria and C is the group of minimizing criteria.\nStep 3. Weighted matrix.\n\
    Let V =\n\x02\nvij\n\x03\nN×M be the weighted normalized decision matrix, where\
    \ vij refers to the\nweighted normalized decision value:\nvij = wjtij\nStep 4.\
    \ Matrix of border approximation area.\nThe border approximation area G of each\
    \ criterion is deﬁned as follows:\ngj =\nN\n∏\ni=1\nv1/N\nij\n.\nStep 5. Matrix\
    \ of distance to the border approximation area.\nThe matrix of distance to the\
    \ border approximation area is calculated as follows:\nqij = vij − gj, i = 1,\
    \ N,\nwhere qij is the distance to the border approximation area.\nSensors 2022,\
    \ 22, 4110\n15 of 26\nThe belonging of alternative Ai to the approximation area\
    \ (G, G+ or G−) is determined\non the basis of the following equation:\nAi ∈\n\
    \n\n\nG+, i f qij > 0\n0, i f qij = 0\nG−, i f qij < 0\nStep 6. Alternatives’\
    \ rank. The total distance of each alternative to the border approxi-\nmation\
    \ area is given by the next formula:\nSi =\nM\n∑\nj=1\nqij.\nThe rank the alternatives\
    \ is based on Si values, sorted in descending order [52].\nWe propose an intuitionistic\
    \ version of the MABAC algorithm. Intuitionistic fuzzy\nsets (1986) are an extension\
    \ of Zadeh’s fuzzy sets (1965) and more than thirty-ﬁve years\nof research reveals\
    \ their potential to model the vagueness and ambiguity in real-world\nproblems.\
    \ With their three semantic components (degree of membership, degree of non-\n\
    membership and hesitancy degree), intuitionistic fuzzy numbers are more expressive\
    \ than\nclassic fuzzy numbers. Besides that, the arithmetic operations with IFNs\
    \ are relatively\nsimple, compared to those of their advanced successors.\nIn\
    \ case of intuitionistic fuzzy assessments of alternatives, the above-mentioned\
    \ calcu-\nlations are made according to the rules of intuitionistic fuzzy arithmetic.\n\
    An intuitionistic fuzzy number (IFN) is characterized by θ = (µθ, ηθ), where µθ\
    \ is\ndegree of membership (truth), ηθ is degree of non-membership (falsity),\
    \ πθ = 1 − µθ − ηθ\nis hesitancy degree and it holds µθ, ηθ ∈ [0, 1] and 0 ≤ µθ\
    \ + ηθ ≤ 1. Then,\ns(θ) = µ + µ(1 − µ − η),\n(1)\nis said to be score function\
    \ of an IFN θ [53].\nLet A = (µ1, η1) and B = (µ2, η2) be two intuitionistic fuzzy\
    \ numbers. The arithmetic\noperations with these intuitionistic fuzzy numbers\
    \ are deﬁned as follows:\nAddition : A + B = (µ1 + µ2 − µ1µ2, η1η2)\nSubtraction\
    \ : A − B =\n(\n⟨ µ1−µ2\n1−µ2 , η1\nη2 ⟩, i f 0 ≤\nη1\nη2 ≤ 1−µ1\n1−µ2 ≤ 1,\n\
    ⟨0, 1⟩, otherwise.\nMultiplication: A × B = (µ1µ2, η1 + η2 − η1η2)\nDivision :\
    \ A / B =\n(\n⟨ µ1\nµ2 , η1−η2\n1−η2 ⟩, i f 0 ≤\nµ1\nµ2 ≤ 1−η1\n1−η2 ≤ 1,\n⟨0,\
    \ 1⟩, otherwise.\nThe λ times of A is given by the next rule [54]:\nλA = ⟨1 −\
    \ (1 − µ1)λ, η1λ⟩.\nIn the new MABAC version, in order to calculate the distance\
    \ to the border approxima-\ntion area (Step 5) in intuitionistic fuzzy environment,\
    \ we employ a new similarity measure\nS1\nGC between Ap and Aq alternatives, assessed\
    \ by intuitionistic fuzzy sets according to the\nfollowing formula [55]:\nS1\n\
    GC\n\0Ap, Aq\n\x01 = 1 −\nv\nu\nu\nt\n1\n12M\nM\n∑\nj=1\nh\n(Dµj2 + Dηj2)Dπj2\
    \ + 2\n\x10\nDminj\n2 + Dmaxj2\n\x11i\nSensors 2022, 22, 4110\n16 of 26\nwhere\
    \ Ap\n=\n\b⟨µpj, ηpj, j = 1, M⟩\n\t\n, Aq\n=\n\b⟨µqj, ηqj, j = 1, M⟩\n\t\n, Dµpj\n\
    =\nµpj − µqj,\nDηpj = ηpj − ηqj, πpj = 1 − µpj − ηpj, πqj = 1 − µqj − ηqj, Dπj\
    \ = 2 −\n\f\fπpj − πqj\n\f\f,\nDminj = min\n\x02\nµpj, µqj\n\x03 − min\n\x02\n\
    µqj, ηpj\n\x03\nand Dmaxj = max\n\x02\nµpj, ηqj\n\x03 − max\n\x02\nµqj, ηpj\n\x03\
    \n.\nThis distance formula employs intuitionistic fuzzy numbers, which means that\
    \ the\nchoice is based on more accurate estimation. The assessments’ representation\
    \ in IFNs com-\nprises a pair of semantically opposite values—membership (truth)\
    \ and non-membership\n(falsity) degree. The advantage of utilized formula is that\
    \ the similarity between intuitionis-\ntic fuzzy sets is calculated in three-dimensional\
    \ space, using additionally the third member-\nship degree–hesitancy. The novelty\
    \ of this formula is that here the similarity depends on\nthe difference between\
    \ the maximum and the minimum of the cross-evaluation factor.\nIn order to assess\
    \ the performance of IoT platforms objectively, we propose a new\nmodiﬁcation\
    \ of MABAC for intuitionistic fuzzy environment. Intuitionistic uncertainty and\n\
    hesitancy degrees account for differences in decision makers’ estimates more accurately\n\
    than classical fuzzy numbers. In addition, the existing intuitionistic aggregating\
    \ operators\nand distance metrics successfully combine individual estimates into\
    \ a complex measure of\nthe quality of compared alternatives. The main disadvantage\
    \ of the proposed method lies\nin the higher time complexity of its similarity\
    \ formula compared to the classical MABAC.\nHowever, the increase in computing\
    \ time is compensated by more accurate measurement\nof the distance between the\
    \ given IoT systems.\n4. Veriﬁcation of MCDM Conceptual Framework\nIn this section,\
    \ we apply the new methodological framework to solve a practical\nproblem for\
    \ IoT platform selection. Then, the IoT systems are estimated by using new\nMABAC\
    \ modiﬁcation with intuitionistic fuzzy values. Finally, we discuss the performance\n\
    of the proposed enhanced multi-criteria method.\n4.1. Practical Example\nLet AF\
    \ be a randomly selected company exposed to an IoT platform selection prob-\n\
    lem. The beneﬁts of IoT for remote, distributed and continuous control over traditional\n\
    software are numerous. The problem is how to ﬁnd the best IoT-based system for\
    \ the\nparticular company.\nStep 1. A team of experts from company AF ﬁll in the\
    \ questionnaire about their IoT\nsystem’s requirements [51]. Let the execution\
    \ of Step 1 of the proposed framework show\nthat the company’s AF suitability\
    \ index is greater than the given threshold.\nStep 2. By using a survey method,\
    \ the minimal user requirements for IoT platform are\ndetermined and a comparison\
    \ matrix of weighting coefﬁcients is ﬁlled in. Respondents\nevaluate the IoT platforms’\
    \ features using ﬁve-point Likert scale from “totally agree”\n(corresponding to\
    \ 5) to “totally disagree” (corresponding to 1).\nStep 3. In this illustrative\
    \ example, we utilize an IoT platforms’ dataset, collected\nfrom Ullah et al.\
    \ [51]. By using online search and literature review the list of IoT platforms\n\
    is determined. The list consists of ﬁve IoT-based products (A1, A2, . . . , A5).\
    \ The IoT-\nbased platforms are as follows: A1—AWS IoT, A2—MS Azure IoT, A3—Google\
    \ Cloud IoT,\nA4—IBM Watson IoT, and A5—Oracle IoT.\nStep 4. In this step, an\
    \ evaluation index C is constructed, C =\n\x02\nCj\n\x03\n, j = 1, 21. The\nassessments\
    \ of alternatives by criteria are obtained by survey of the experts’ team. Each\n\
    criterion represents a product feature of IoT platforms: C1—scalability, C2—ﬂexibility,\n\
    C3—data analytics, C4—disaster recovery, C5—stability, C6—security, C7—data ownership,\n\
    C8—protocol support, C9—system performance, C10—time to market, C11—legacy architec-\n\
    ture, C12—attractive interface, C13—pricing model, C14—cloud ownership, C15—interoperability,\n\
    C16—application environment, C17—hybrid cloud, C18—platform migration, C19—previous\n\
    experience, C20—Edge intelligence, and C21—bandwidth [51].\nStep 5. Input of decision\
    \ matrix and criteria weights\nSensors 2022, 22, 4110\n17 of 26\nThe decision\
    \ matrix values are converted into intuitionistic fuzzy numbers. The\nimportance\
    \ assessments are interpreted as intuitionistic fuzzy numbers and after that,\
    \ they\nare converted into crisp values by using the score function.\nStep 6.\
    \ By using preferred MCDM methods, the scores and rankings of given IoT\nplatforms\
    \ are calculated.\nStep 7. Results’ analysis.\nIn the analysis of results, only\
    \ IoT platforms that have been top ranked with preferred\nMCMD methods are left.\
    \ In this step, decision-makers select the most suitable IoT product.\nThe detailed\
    \ calculations from Step 5, Step 6 (IFNs MABAC) and Step 7 are available\nin the\
    \ next section.\n4.2. MCDM Using IFSs MABAC\nStep 1. Input of decision matrix\
    \ and weighting coefﬁcients\nThe experts’ estimates (linguistic variables) and\
    \ the importance of criteria (as agreed,\ndisagreed and neutral percentages) according\
    \ to questionnaire answers are ﬁlled in Table 2.\nThe linguistic variables are\
    \ converted into crisp numbers using a simple correspondence\nrule. The obtained\
    \ values are written in the decision matrix Evaluations =\n\x02\nxij\n\x03\n5×21.\n\
    Table 2. Experts’ estimates and the importance of criteria for IoT platforms assessment\
    \ (linguistic\nvariables).\nCriteria\nA1\nA2\nA3\nA4\nA5\nImportance (%)\nAgree\n\
    Neutral\nDisagree\nC1\nyes\nyes\nyes\nyes\nyes\n93%\n7%\n0%\nC2\nyes\n-\nyes\n\
    -\nyes\n93%\n7%\n0%\nC3\nyes\nyes\nyes\nyes\nyes\n93%\n7%\n0%\nC4\nyes\nyes\n\
    no\nno\nno\n93%\n7%\n0%\nC5\nyes\nyes\nyes\n-\n-\n93%\n7%\n0%\nC6\nhigh\nhigh\n\
    high\nhigh\nhigh\n93%\n7%\n0%\nC7\n-\nyes\n-\n-\n-\n93%\n7%\n0%\nC8\nyes\nyes\n\
    -\nyes\nyes\n93%\n7%\n0%\nC9\nyes\n-\nyes\nyes\n-\n93%\n7%\n0%\nC10\nyes\nyes\n\
    -\n-\nyes\n86%\n7%\n7%\nC11\nyes\n-\n-\n-\nyes\n86%\n14%\n0%\nC12\nyes\nyes\n\
    -\nno\n-\n86%\n14%\n0%\nC13\nbad\nbad\ngood\n-\n-\n79%\n21%\n0%\nC14\nyes\nyes\n\
    yes\n-\nyes\n79%\n21%\n0%\nC15\nyes\n-\n-\n-\nyes\n79%\n14%\n7%\nC16\nyes\nyes\n\
    yes\nyes\nyes\n71%\n29%\n0%\nC17\nyes\nyes\n-\n-\n-\n64%\n36%\n0%\nC18\nyes\n\
    yes\n-\n-\n-\n64%\n29%\n7%\nC19\nyes\nyes\n-\n-\n-\n64%\n29%\n7%\nC20\nyes\nyes\n\
    yes\n-\nyes\n57%\n29%\n14%\nC21\n-\n-\ngood\n-\n-\n57%\n29%\n14%\nRemark: This\
    \ table shows the transposed input matrix. Reprinted with permission from Ref.\
    \ [51]. 2020, IEEE.\nStep 2. Normalization.\nSensors 2022, 22, 4110\n18 of 26\n\
    The normalized matrix T =\n\x02\ntij\n\x03\n5×21 is calculated as:\ntij =\n\n\
    \n\n\n\nxij−xjmin\nxjmax−xjmin , j ∈ B;\nxij−xjmax\nxjmin−xjmax , j ∈ C.\n\
    In our case, the criteria are only maximizing. Missing values are replaced with\
    \ mean\naverage value of the corresponding criteria.\nThe importance of each factor\
    \ is calculated according to the score function formula,\nwhere agreed, disagreed\
    \ and neutral percentages correspond to positive, negative and\nhesitance memberships’\
    \ values, respectively. The ﬁnal weights wj, j = 1, 21 are normalized\nsuch that:\n\
    21\n∑\nj=1\nwj = 1.\nThe obtained weighting coefﬁcients are as follows: w1 = w2\
    \ = . . . = w9 = 0.051,\nw10 = w16 = 0.047, w11 = w12 = 0.05, w13 = w14 = 0.049,\
    \ w15 = 0.046, w17 = 0.045,\nw18 = w19 = 0.042, and w20 = w21 = 0.038.\nThe obtained\
    \ crisp values after normalization are shown in Table 3.\nTable 3. Normalized\
    \ decision matrix T and weighted coefﬁcients wj (crisp values).\nA1\nA2\nA3\n\
    A4\nA5\nwj\nC1\n0.950\n0.950\n0.950\n0.950\n0.950\n0.051\nC2\n0.950\n0.570\n0.950\n\
    0.570\n0.950\n0.051\nC3\n0.950\n0.950\n0.950\n0.950\n0.950\n0.051\nC4\n0.950\n\
    0.950\n0.050\n0.050\n0.050\n0.051\nC5\n0.950\n0.950\n0.950\n0.570\n0.570\n0.051\n\
    C6\n0.950\n0.950\n0.950\n0.950\n0.950\n0.051\nC7\n0.191\n0.950\n0.191\n0.191\n\
    0.191\n0.051\nC8\n0.950\n0.950\n0.760\n0.950\n0.950\n0.051\nC9\n0.950\n0.570\n\
    0.950\n0.950\n0.570\n0.051\nC10\n0.950\n0.950\n0.570\n0.570\n0.950\n0.047\nC11\n\
    0.950\n0.381\n0.381\n0.381\n0.950\n0.050\nC12\n0.950\n0.950\n0.390\n0.050\n0.390\n\
    0.050\nC13\n0.050\n0.050\n0.950\n0.210\n0.210\n0.049\nC14\n0.950\n0.950\n0.950\n\
    0.760\n0.950\n0.049\nC15\n0.950\n0.381\n0.381\n0.381\n0.950\n0.046\nC16\n0.950\n\
    0.950\n0.950\n0.950\n0.950\n0.047\nC17\n0.950\n0.950\n0.381\n0.381\n0.381\n0.045\n\
    C18\n0.950\n0.950\n0.381\n0.381\n0.381\n0.042\nC19\n0.950\n0.950\n0.381\n0.381\n\
    0.381\n0.042\nC20\n0.950\n0.950\n0.950\n0.619\n0.950\n0.038\nC21\n0.191\n0.191\n\
    0.950\n0.191\n0.191\n0.038\nStep 3. Decision matrix (IFNs) and its normalization\n\
    Sensors 2022, 22, 4110\n19 of 26\nThe crisp values of normalized matrix are converted\
    \ into intuitionistic fuzzy numbers\nby Visalakshi et al. formula [56]\nµ = 1\
    \ − (1 − µ)λ\nη = (1 − µ)λ(λ+1),\nwhere µ is the crisp value and λ ∈ [0, 1], here\
    \ λ = 0.5 (Table 4).\nTable 4. The decision matrix T (IFNs).\nA1\nA2\nA3\nA4\n\
    A5\nC1\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n\
    C2\n0.776\n0.106\n0.001\n0.999\n0.776\n0.106\n0.001\n0.999\n0.776\n0.106\nC3\n\
    0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\nC4\n0.776\n\
    0.106\n0.776\n0.106\n0.025\n0.962\n0.025\n0.962\n0.025\n0.962\nC5\n0.776\n0.106\n\
    0.776\n0.106\n0.776\n0.106\n0.001\n0.999\n0.001\n0.999\nC6\n0.776\n0.106\n0.776\n\
    0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\nC7\n0.001\n0.999\n0.776\n0.106\n\
    0.001\n0.999\n0.001\n0.999\n0.001\n0.999\nC8\n0.776\n0.106\n0.776\n0.106\n0.001\n\
    0.999\n0.776\n0.106\n0.776\n0.106\nC9\n0.776\n0.106\n0.001\n0.999\n0.776\n0.106\n\
    0.776\n0.106\n0.001\n0.999\nC10\n0.776\n0.106\n0.776\n0.106\n0.001\n0.999\n0.001\n\
    0.999\n0.776\n0.106\nC11\n0.776\n0.106\n0.001\n0.999\n0.001\n0.999\n0.001\n0.999\n\
    0.776\n0.106\nC12\n0.776\n0.106\n0.776\n0.106\n0.001\n0.999\n0.025\n0.962\n0.001\n\
    0.999\nC13\n0.025\n0.962\n0.025\n0.962\n0.776\n0.106\n0.001\n0.999\n0.001\n0.999\n\
    C14\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.001\n0.999\n0.776\n0.106\nC15\n\
    0.776\n0.106\n0.001\n0.999\n0.001\n0.999\n0.001\n0.999\n0.776\n0.106\nC16\n0.776\n\
    0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\n0.776\n0.106\nC17\n0.776\n0.106\n\
    0.776\n0.106\n0.001\n0.999\n0.001\n0.999\n0.001\n0.999\nC18\n0.776\n0.106\n0.776\n\
    0.106\n0.001\n0.999\n0.001\n0.999\n0.001\n0.999\nC19\n0.776\n0.106\n0.776\n0.106\n\
    0.001\n0.999\n0.001\n0.999\n0.001\n0.999\nC20\n0.776\n0.106\n0.776\n0.106\n0.776\n\
    0.106\n0.001\n0.999\n0.776\n0.106\nC21\n0.001\n0.999\n0.001\n0.999\n0.776\n0.106\n\
    0.001\n0.999\n0.001\n0.999\nThe weighted normalized matrix V =\n\x02\nvij\n\x03\
    \n5×21 is calculated by using formula for λ\ntimes (Table 5):\nvij = wjtij\nTable\
    \ 5. The weighted decision matrix V (IFNs).\nA1\nA2\nA3\nA4\nA5\nC1\n0.073\n0.892\n\
    0.073\n0.892\n0.073\n0.892\n0.073\n0.892\n0.073\n0.892\nC2\n0.073\n0.892\n0.000\n\
    1.000\n0.073\n0.892\n0.000\n1.000\n0.073\n0.892\nC3\n0.073\n0.892\n0.073\n0.892\n\
    0.073\n0.892\n0.073\n0.892\n0.073\n0.892\nC4\n0.073\n0.892\n0.073\n0.892\n0.001\n\
    0.998\n0.001\n0.998\n0.001\n0.998\nC5\n0.073\n0.892\n0.073\n0.892\n0.073\n0.892\n\
    0.000\n1.000\n0.000\n1.000\nSensors 2022, 22, 4110\n20 of 26\nTable 5. Cont.\n\
    A1\nA2\nA3\nA4\nA5\nC6\n0.073\n0.892\n0.073\n0.892\n0.073\n0.892\n0.073\n0.892\n\
    0.073\n0.892\nC7\n0.000\n1.000\n0.073\n0.892\n0.000\n1.000\n0.000\n1.000\n0.000\n\
    1.000\nC8\n0.073\n0.892\n0.073\n0.892\n0.000\n1.000\n0.073\n0.892\n0.073\n0.892\n\
    C9\n0.073\n0.892\n0.000\n1.000\n0.073\n0.892\n0.073\n0.892\n0.000\n1.000\nC10\n\
    0.068\n0.900\n0.068\n0.900\n0.000\n1.000\n0.000\n1.000\n0.068\n0.900\nC11\n0.072\n\
    0.893\n0.000\n1.000\n0.000\n1.000\n0.000\n1.000\n0.072\n0.893\nC12\n0.072\n0.893\n\
    0.072\n0.893\n0.000\n1.000\n0.001\n0.998\n0.000\n1.000\nC13\n0.001\n0.998\n0.001\n\
    0.998\n0.071\n0.896\n0.000\n1.000\n0.000\n1.000\nC14\n0.071\n0.896\n0.071\n0.896\n\
    0.071\n0.896\n0.000\n1.000\n0.071\n0.896\nC15\n0.067\n0.902\n0.000\n1.000\n0.000\n\
    1.000\n0.000\n1.000\n0.067\n0.902\nC16\n0.068\n0.900\n0.068\n0.900\n0.068\n0.900\n\
    0.068\n0.900\n0.068\n0.900\nC17\n0.064\n0.905\n0.064\n0.905\n0.000\n1.000\n0.000\n\
    1.000\n0.000\n1.000\nC18\n0.061\n0.910\n0.061\n0.910\n0.000\n1.000\n0.000\n1.000\n\
    0.000\n1.000\nC19\n0.061\n0.910\n0.061\n0.910\n0.000\n1.000\n0.000\n1.000\n0.000\n\
    1.000\nC20\n0.055\n0.919\n0.055\n0.919\n0.055\n0.919\n0.000\n1.000\n0.055\n0.919\n\
    C21\n0.000\n1.000\n0.000\n1.000\n0.055\n0.919\n0.000\n1.000\n0.000\n1.000\nStep\
    \ 4. Matrix of border approximation area.\nThe border approximation area G of\
    \ each criterion is calculated as follows:\ngj =\n21\n∏\ni=1\nv1/21\nij\n= ⟨\n\
    \"\n21\n∏\ni=1\n\0µij\n\x011/21\n#\n,\n\"\n1 −\n21\n∏\ni=1\n\01 − ηij\n\x011/21\n\
    #\n⟩.\nThe results are shown in Table 6.\nTable 6. Calculations and the obtained\
    \ matrix of border approximation area G.\nA1\nA2\nA3\nA4\nA5\nG\nC1\n0.593\n0.641\n\
    0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.073\n0.892\nC2\n0.593\n\
    0.641\n0.121\n0.131\n0.593\n0.641\n0.121\n0.131\n0.593\n0.641\n0.003\n0.996\n\
    C3\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.073\n\
    0.892\nC4\n0.593\n0.641\n0.593\n0.641\n0.265\n0.287\n0.265\n0.287\n0.265\n0.287\n\
    0.007\n0.990\nC5\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.121\n0.131\n0.121\n\
    0.131\n0.003\n0.996\nC6\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n0.593\n0.641\n\
    0.593\n0.641\n0.073\n0.892\nC7\n0.121\n0.131\n0.593\n0.641\n0.121\n0.131\n0.121\n\
    0.131\n0.121\n0.131\n0.000\n1.000\nC8\n0.593\n0.641\n0.593\n0.641\n0.121\n0.131\n\
    0.593\n0.641\n0.593\n0.641\n0.015\n0.978\nC9\n0.593\n0.641\n0.121\n0.131\n0.593\n\
    0.641\n0.593\n0.641\n0.121\n0.131\n0.003\n0.996\nC10\n0.584\n0.631\n0.584\n0.631\n\
    0.119\n0.129\n0.119\n0.129\n0.584\n0.631\n0.003\n0.996\nC11\n0.591\n0.639\n0.120\n\
    0.130\n0.120\n0.130\n0.120\n0.130\n0.591\n0.639\n0.001\n0.999\nC12\n0.591\n0.639\n\
    0.591\n0.639\n0.120\n0.130\n0.264\n0.286\n0.120\n0.130\n0.001\n0.998\nC13\n0.263\n\
    0.285\n0.263\n0.285\n0.589\n0.636\n0.120\n0.130\n0.120\n0.130\n0.001\n0.999\n\
    C14\n0.589\n0.636\n0.589\n0.636\n0.589\n0.636\n0.120\n0.130\n0.589\n0.636\n0.014\n\
    0.979\nSensors 2022, 22, 4110\n21 of 26\nTable 6. Cont.\nA1\nA2\nA3\nA4\nA5\n\
    G\nC15\n0.582\n0.629\n0.118\n0.128\n0.118\n0.128\n0.118\n0.128\n0.582\n0.629\n\
    0.001\n0.999\nC16\n0.584\n0.631\n0.584\n0.631\n0.584\n0.631\n0.584\n0.631\n0.584\n\
    0.631\n0.068\n0.900\nC17\n0.578\n0.625\n0.578\n0.625\n0.117\n0.127\n0.117\n0.127\n\
    0.117\n0.127\n0.001\n0.999\nC18\n0.572\n0.618\n0.572\n0.618\n0.116\n0.126\n0.116\n\
    0.126\n0.116\n0.126\n0.001\n0.999\nC19\n0.572\n0.618\n0.572\n0.618\n0.116\n0.126\n\
    0.116\n0.126\n0.116\n0.126\n0.001\n0.999\nC20\n0.559\n0.605\n0.559\n0.605\n0.559\n\
    0.605\n0.113\n0.123\n0.559\n0.605\n0.011\n0.984\nC21\n0.113\n0.123\n0.113\n0.123\n\
    0.559\n0.605\n0.113\n0.123\n0.113\n0.123\n0.000\n1.000\nStep 5. Matrix of distance\
    \ to the border approximation area.\nThe values of distance matrix to the border\
    \ approximation area\nqij = vij − gj, i = 1, 21\nare calculated by using S1\n\
    GC formula (Table 7).\nTable 7. The matrix of distances to the border approximation\
    \ area Q.\nA1\nA2\nA3\nA4\nA5\nC1\n1.000\n1.000\n1.000\n1.000\n1.000\nC2\n0.975\n\
    0.999\n0.975\n0.999\n0.975\nC3\n1.000\n1.000\n1.000\n1.000\n1.000\nC4\n0.976\n\
    0.976\n0.998\n0.998\n0.998\nC5\n0.975\n0.975\n0.975\n0.999\n0.999\nC6\n1.000\n\
    1.000\n1.000\n1.000\n1.000\nC7\n1.000\n0.974\n1.000\n1.000\n1.000\nC8\n0.979\n\
    0.979\n0.995\n0.979\n0.979\nC9\n0.975\n0.999\n0.975\n0.975\n0.999\nC10\n0.977\n\
    0.977\n0.999\n0.999\n0.977\nC11\n0.974\n1.000\n1.000\n1.000\n0.974\nC12\n0.974\n\
    0.974\n1.000\n1.000\n1.000\nC13\n1.000\n1.000\n0.975\n1.000\n1.000\nC14\n0.980\n\
    0.980\n0.980\n0.995\n0.980\nC15\n0.976\n1.000\n1.000\n1.000\n0.976\nC16\n1.000\n\
    1.000\n1.000\n1.000\n1.000\nC17\n0.977\n0.977\n1.000\n1.000\n1.000\nC18\n0.978\n\
    0.978\n1.000\n1.000\n1.000\nC19\n0.978\n0.978\n1.000\n1.000\n1.000\nC20\n0.984\n\
    0.984\n0.984\n0.996\n0.984\nC21\n1.000\n1.000\n0.980\n1.000\n1.000\nThe belonging\
    \ of alternative Ai to the approximation area (G, G+ or G−) is determined\non\
    \ the basis of the following equation:\nAi ∈\n\n\n\nG+, i f qij > 0\n0, i f\
    \ qij = 0\nG−, i f qij < 0\nStep 6. Alternatives’ rank.\nThe total distance of\
    \ each alternative to the border approximation area is obtained by\nthe next formula:\n\
    Si =\n5\n∑\nj=1\nqij.\nSensors 2022, 22, 4110\n22 of 26\nThe rank the alternatives\
    \ is based on Si values, sorted in ascending order (Table 8).\nTable 8. The overall\
    \ alternative scores and their corresponding ranking–new MABAC (IFNs).\nS1\nGC\
    \ MABAC\nScore\nRank\nA1\n0.015\n1\nA2\n0.012\n2\nA3\n0.008\n3\nA4\n0.003\n5\n\
    A5\n0.008\n4\nThe obtained ranking by using new intuitionistic fuzzy MABAC is\
    \ as follows:\nS1\nGC MABAC : A1 ≻ A2 ≻ A3 ≈ A5 ≻ A4,\ni.e., A1 platform (AWS\
    \ IoT) is the most suitable for AF company according to the given\nrequirements.\n\
    Step 7. In order to check the reliability of proposed model and the consistency\
    \ of the\nresults produced by intuitionistic fuzzy assessments, the same problem\
    \ is solved by using\ncrisp SAW, crisp MABAC and IFNs MABAC with L2 discrimination\
    \ measure [57] (Table 9).\nTable 9. The overall alternative scores and their corresponding\
    \ rankings—crisp SAW, crisp MABAC\nand IFNs L2 MABAC.\nCrisp SAW\nCrisp MABAC\n\
    L2 MABAC\nScore\nRank\nScore\nRank\nScore\nRank\nA1\n0.839\n1\n0.375\n2\n0.110\n\
    3\nA2\n0.784\n2\n0.379\n1\n0.115\n1\nA3\n0.682\n3\n0.344\n3\n0.113\n2\nA4\n0.549\n\
    5\n0.303\n4\n0.103\n4\nA5\n0.661\n4\n0.295\n5\n0.102\n5\n4.3. Analysis of Obtained\
    \ Results\nThe obtained rankings are almost identical or similar to the S1\nGC\
    \ MABAC result:\nCrisp SAW: A1 ≻ A2 ≻ A3 ≻ A5 ≻ A4;\nCrisp MABAC: A2 ≻ A1 ≻ A3\
    \ ≻ A4 ≻ A5;\nIFNs L2 MABAC: A2 ≻ A3 ≻ A1 ≻ A4 ≻ A5;\nSpearman’s rank correlation\
    \ coefﬁcient is applied as a similarity measure between\nclassical SAW and each\
    \ other MCDM methods’ rankings. Spearman’s coefﬁcients indicates\nhigh degrees\
    \ of closeness of obtained rankings—0.8 (crisp MABAC), 0.6 (L2 MABAC) and\n1.0\
    \ (S1\nGC MABAC). This means that the proposed intuitionistic fuzzy model is reliable\
    \ and\ncould be applied for MCDM.\nThe analysis also shows that two groups of\
    \ IoT platforms can be distinguished in the\nobtained crisp and fuzzy MCDM rankings:\n\
    Group 1. IoT platforms with high assessments—A1, A2 and A3;\nGroup 2. IoT platforms\
    \ with relative low assessments—A4 and A5.\nThe highest experts’ ratings (crisp\
    \ SAW and S1\nGC MABAC) of alternative A1 (AWS IoT)\nassign it to the leading\
    \ group, while alternatives A4 (IBM Watson IoT) and A5 (Oracle IoT)\nfalls into\
    \ the second part of the ranking (crisp SAW, crisp MABAC, L2 MABAC and S1\nGC\n\
    MABAC). One possible reason for the worse ranking of IBM Watson IoT and Oracle\
    \ IoT is\nthat both platforms are more encapsulated in their company’s ecosystems\
    \ than other three\nplatforms. The good performance of A1 and A2 correspond to\
    \ the GMQ’2021 assertion,\nthat AWS IoT and Azure IoT are “challenger” and “leader”\
    \ respectively among the best\nIIoT platforms. Therefore, it can be concluded\
    \ that the proposed algorithm is robust and\nSensors 2022, 22, 4110\n23 of 26\n\
    reliable, because the obtained ranking meets the customers’ preferences in company\
    \ AF.\nAnother advantage of the new multi-criteria method in comparison with optimization\
    \ and\nmachine learning methods is that the results are easily explainable.\n\
    The utilization of S1\nGC MABAC not only led to a better treatment of subjective\
    \ experts’\nopinions, but also to a reduction in time complexity in comparison\
    \ with recently created\nanalog L2 MABAC. By using the new distance formula between\
    \ IFNs in MABAC, a good\nbalance between low computational complexity, simplicity\
    \ of decision-making model and\nits effectiveness was achieved.\nThe comparison\
    \ with results obtained from similar previous studies shows the following:\n•\n\
    Despite the large number of methodologies for IoT system selection, only several\
    \ stud-\nies investigate and analyze more than two MCDM methods [17,18,22,25]\
    \ or employ\nthe fuzzy approach [15,18,24–26].\n•\nSome of the researchers compare\
    \ only specialized IoT platforms or particular elements\nof IoT infrastructure\
    \ [16,20,25].\n•\nIn some studies, a practical example for the ranking of IoT\
    \ alternatives is miss-\ning [18,19,22].\n•\nThe obtained rankings of IoT platforms\
    \ are almost identical to those obtained by\nKondratenko et al. and Chakraborty\
    \ (AWS, Azure, Google, IBM) [24,26], Lin et al.\n(AWS, Azure, IBM) [15] and Youssef\
    \ (AWS, Azure, Google) [21].\nThe proposed framework systematizes common rules\
    \ and procedures for group multi-\ncriteria selection of IoT platforms. The new\
    \ framework ensures feasible solution using\nusers’ needs and avoiding subjectivism\
    \ in experts’ opinions. It facilitates the construction\nof complex indices for\
    \ systems evaluation, including technical speciﬁcations, key perfor-\nmance indicators\
    \ and metrics for the sustainability of IoT ecosystems. Furthermore, it is\nﬂexible\
    \ and timesaving, reducing the possibility of errors while preparing relevant\
    \ input\ndata for each step of the decision-making process. Unlike previous similar\
    \ studies, the\nnew framework could implement multi-criteria analysis in different\
    \ fuzzy environments\n(classical and intuitionistic).\n5. Conclusions\nThe process\
    \ of determining the best suitable IoT platform depends on many factors,\n(peculiarities\
    \ of business processes and legacy systems, users’ preferences, vendor’s proﬁle\n\
    to name a few), i.e., it is in fact a multi-criteria decision-making problem.\
    \ This study\noutlines a multi-criteria framework for IoT platform selection in\
    \ a fuzzy environment. In\nthe proposed framework, a new modiﬁcation of Multi-Attribute\
    \ Border approximation\nArea Comparison (MABAC) method with speciﬁc similarity\
    \ measure via intuitionistic\nfuzzy values has been presented as a decision analysis\
    \ method. The new technique is\nmore precise than existing crisp and fuzzy analogues,\
    \ as its (1) calculations include the\nthree semantic components of intuitionistic\
    \ fuzzy numbers and (2) distance formula takes\ninto account the relationship\
    \ between cross-evaluation of membership (truth) degrees as\naddition to the difference\
    \ between main intuitionistic components. The effectiveness of\nthe new decision-making\
    \ framework has been veriﬁed through an illustrative example of\nranking IoT platforms.\n\
    The new framework automates the process of ranking of IoT systems and has several\n\
    advantages:\n(1)\nThe comparison is based on a complex index that covers technological\
    \ and business\nrequirements of a team of experts and consumer preferences;\n\
    (2)\nMCDM methods have the capability to handle vague and uncertain estimates\
    \ of both\ncost and beneﬁcial criteria via fuzzy values;\n(3)\nThe proposed evaluation\
    \ system is ﬂexible. It can be further extended with additional\ndecision-making\
    \ algorithms and adapted to other organizations or sectors;\n(4)\nThe weighting\
    \ coefﬁcients and decision matrix are determined by a group of experts\nfamiliar\
    \ with the company’s business processes and IoT technology.\nSensors 2022, 22,\
    \ 4110\n24 of 26\nThe advantage of the proposed fuzzy modiﬁcation of MABAC method\
    \ is that the\ndistance between compared alternatives is calculated by an improved\
    \ formula for similarity\nin intuitionistic environment:\n•\nIn addition to membership\
    \ and non-membership parameters, a hesitancy degree\nis included;\n•\nThe difference\
    \ of maximum of the cross-evaluation factor and the difference of mini-\nmum of\
    \ the cross-evaluation factor also participates in the calculation.\nThe validity\
    \ of the new framework is demonstrated using a practical example for\nthe selection\
    \ of IoT platforms. The problem is to ﬁnd the best ranking alternative from\n\
    ﬁve IoT platforms (AWS IoT Core, Microsoft Azure IoT, Google Cloud IoT Core, IBM\n\
    Watson IoT and Oracle IoT) according to twenty-one criteria for comparison. The\
    \ analysis\nof obtained results shows that the proposed methodology is reliable\
    \ and correctly reﬂects\nuser’s requirements.\nIn the future, the theoretical\
    \ framework will be improved by aggregating several\nrankings obtained through\
    \ different multi-criteria methods using meta-methods. Addi-\ntionally, the proposed\
    \ mechanisms for the ranking of IoT alternatives will be expanded\nto address\
    \ uncertainty of estimates with different types of fuzzy sets (for example, type-2\n\
    fuzzy numbers and spherical fuzzy numbers). We also have a plan to develop new\
    \ hybrid\nmethods for IoT systems’ evaluation combining weights determination\
    \ algorithms with\nmulti-criteria decision-making methods.\nAuthor Contributions:\
    \ Conceptualization, G.I. and T.Y.; framework, T.Y. and G.I.; MABAC modi-\nﬁcation,\
    \ G.I.; validation, G.I. and T.Y.; formal analysis, T.Y.; resources, G.I.; writing—original\
    \ draft\npreparation, G.I.; writing—review and editing, G.I. and T.Y.; visualization,\
    \ T.Y.; supervision, G.I.;\nproject administration, T.Y.; funding acquisition,\
    \ G.I. and T.Y. All authors have read and agreed to the\npublished version of\
    \ the manuscript.\nFunding: This research was partially funded by the National\
    \ Research Programme “Smart Crop\nProduction”, approved by decision of the Council\
    \ of Ministers No. 866/26.11.2020, by the Ministry\nof Education and Science and\
    \ by the National Science Fund, co-founded by the European Regional\nDevelopment\
    \ Fund, Grant No. BG05M2OP001-1.002-0002 “Digitization of the Economy in Big\n\
    Data Environment”.\nInstitutional Review Board Statement: Not applicable.\nInformed\
    \ Consent Statement: Not applicable.\nData Availability Statement: Not applicable.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest.\nReferences\n\
    1.\nMuangprathub, J.; Boonnam, N.; Kajornkasirat, S.; Lekbangpong, N.; Wanichsombat,\
    \ A.; Nillaor, P. IoT and agriculture data\nanalysis for smart farm. Comput. Electron.\
    \ Agric. 2018, 156, 467–474. [CrossRef]\n2.\nMisra, N.N.; Dixit, Y.; Al-Mallahi,\
    \ A.; Bhullar, M.S.; Upadhyay, R.; Martynenko, A. IoT, Big Data, and Artiﬁcial\
    \ Intelligence in\nAgriculture and Food Industry. IEEE Internet Things J. 2020,\
    \ 9, 6305–6324. [CrossRef]\n3.\nXi, M.; Adcock, M.; McCulloch, J. Future agriculture\
    \ farm management using augmented reality. In Proceedings of the IEEE\nWorkshop\
    \ on Augmented and Virtual Realities for Good (VAR4Good), Reutlingen, Germany,\
    \ 18 March 2018; pp. 1–3.\n4.\nGhandar, A.; Ahmed, A.; Zulﬁqar, S.; Hua, Z.; Hanai,\
    \ M.; Theodoropoulos, G. A Decision Support System for Urban Agriculture\nUsing\
    \ Digital Twin: A Case Study with Aquaponics. IEEE Access 2021, 9, 35691–35708.\
    \ [CrossRef]\n5.\nThakore, R.; Vaghashiya, R.; Patel, C.; Doshi, N. Blockchain—Based\
    \ IoT: A Survey. Procedia Comput. Sci. 2019, 155, 704–709.\n[CrossRef]\n6.\nTorky,\
    \ M.; Hassanein, A.E. Integrating blockchain and the internet of things in precision\
    \ agriculture: Analysis, opportunities, and\nchallenges. Comput. Electron. Agric.\
    \ 2020, 178, 105476. [CrossRef]\n7.\nTang, Y.; Dananjayan, S.; Hou, C.; Guo, Q.;\
    \ Luo, S.; He, Y. A survey on the 5G network and its impact on agriculture: Challenges\n\
    and opportunities. Comput. Electron. Agric. 2020, 180, 105895. [CrossRef]\n8.\n\
    Doukovska, L. Artiﬁcial Intelligence to Support Bulgarian Crop Production. Eng.\
    \ Sci. 2021, 54, 30–48. [CrossRef]\n9.\nTimilsina, B.; Adhikari, N.; Kaﬂe, S.;\
    \ Paudel, S.; Poudel, S.; Gautam, D. Addressing Impact of COVID-19 Post Pandemic\
    \ on\nFarming and Agricultural Deeds. Asian J. Adv. Res. Rep. 2020, 11, 28–35.\
    \ [CrossRef]\nSensors 2022, 22, 4110\n25 of 26\n10.\nKhan, J.Y.; Yuce, M.R. (Eds.)\
    \ Internet of Things (IoT): Systems and Applications; CRC Press: Singapore, 2019.\n\
    11.\nGan, G.-Y.; Lee, H.-S.; Liu, J.-Y. A DEA Approach towards to the Evaluation\
    \ of IoT Applications in Intelligent Ports. J. Mar. Sci.\nTechnol. 2021, 29, 257–267.\
    \ [CrossRef]\n12.\nPark, S.; Lee, K. Improved Mitigation of Cyber Threats in IIoT\
    \ for Smart Cities: A New-Era Approach and Scheme. Sensors 2021,\n21, 1976. [CrossRef]\n\
    13.\nZhang, X.; Geng, J.; Ma, J.; Liu, H.; Niu, S.; Mao, W. A hybrid service selection\
    \ optimization algorithm in internet of things.\nEURASIP J. Wirel. Commun. Netw.\
    \ 2021, 2021, 4. [CrossRef]\n14.\nKale, A.P.; Sonavane, S.P. IoT based Smart Farming:\
    \ Feature subset selection for optimized high-dimensional data using improved\n\
    GA based approach for ELM. Comput. Electron. Agric. 2018, 161, 225–232. [CrossRef]\n\
    15.\nLin, M.; Huang, C.; Xu, Z.; Chen, R. Evaluating IoT Platforms Using Integrated\
    \ Probabilistic Linguistic MCDM Method. IEEE\nInternet Things J. 2020, 7, 11195–11208.\
    \ [CrossRef]\n16.\nSingh, M.; Baranwal, G.; Tripathi, A.K. QoS-aware selection\
    \ of IoT-based service. Arab. J. Sci. Eng. 2020, 45, 10033–10050.\n[CrossRef]\n\
    17.\nNunes, L.H.; Estrella, J.C.; Perera, C.; Delbem, A.C.B.; Reiff-Marganiec,\
    \ S. Multi-criteria IoT resource discovery: A comparative\nanalysis. Softw. Pract.\
    \ Exp. 2016, 47, 1325–1341. [CrossRef]\n18.\nContreras-Massé, R.A.; Ochoa-Zezzatti,\
    \ A.; García, V.; Elizondo-Cortés, M. Selection of IoT Platform with Multi-Criteria\
    \ Analysis:\nDeﬁning Criteria and Experts to Interview. Res. Comput. Sci. 2019,\
    \ 148, 9–19. [CrossRef]\n19.\nNarwane, V.S.; Gunasekaran, A.; Gardas, B.B. Unlocking\
    \ adoption challenges of IoT in Indian Agricultural and Food Supply\nChain. Smart\
    \ Agric. Technol. 2022, 2, 100035. [CrossRef]\n20.\nMashal, I.; Alsaryrah, O.;\
    \ Chung, T.Y.; Yuan, F.C. A multi-criteria analysis for an internet of things\
    \ application recommendation\nsystem. Technol. Soc. 2020, 60, 101216. [CrossRef]\n\
    21.\nYoussef, A.E. An Integrated MCDM Approach for Cloud Service Selection Based\
    \ on TOPSIS and BWM. IEEE Access 2020, 8,\n71851–71865. [CrossRef]\n22.\nSilva,\
    \ E.M.; Jardim-Goncalves, R. Cyber-Physical Systems: A multi-criteria assessment\
    \ for Internet-of-Things (IoT) systems.\nEnterp. Inf. Syst. 2019, 15, 332–351.\
    \ [CrossRef]\n23.\nPeneva, V.; Popchev, I. Fuzzy criteria importance with weighting\
    \ functions. C. R. Acad. Bulg. Sci. 2008, 61, 293–300.\n24.\nKondratenko, Y.;\
    \ Kondratenko, G.; Sidenko, I. Multi-criteria decision making and soft computing\
    \ for the selection of specialized\nIoT platform. In Proceedings of the XVIII\
    \ International Conference on Data Science and Intelligent Analysis of Information,\
    \ Kiev,\nUkraine, 4–7 July 2018; pp. 71–80.\n25.\nIlieva, G.; Yankova, T.; Hadjieva,\
    \ V.; Doneva, R.; Totkov, G. Cloud Service Selection as a Fuzzy Multi-criteria\
    \ Problem. TEM J.\n2020, 9, 484–495. [CrossRef]\n26.\nChakraborty, A.; Jindal,\
    \ M.; Khosravi, M.R.; Singh, P.; Shankar, A.; Diwakar, M. A Secure IoT-Based Cloud\
    \ Platform Selection\nUsing Entropy Distance Approach and Fuzzy Set Theory. Wirel.\
    \ Commun. Mob. Comput. 2021, 2021, 6697467. [CrossRef]\n27.\nMishra, K.N.; Kumar,\
    \ S.; Patel, N.R. Survey on Internet of Things and its Application in Agriculture.\
    \ J. Phys. Conf. Ser. 2021,\n1714, 012025. [CrossRef]\n28.\nYerovi, E.; Delgado-Vera,\
    \ C.; Molina-Oleas, W.; Ortega-Ponce, L. A Brief Systematic Review of the Latest\
    \ Advances in IOT Plat-\nforms in Agriculture. In Proceedings of the International\
    \ Conference on Technologies and Innovation, Guayaquil, Ecuador, 22–25\nNovember\
    \ 2021; Valencia-García, R., Bucaram-Leverone, M., Del Cioppo-Morstadt, J., Vera-Lucio,\
    \ N., Jácome-Murillo, E., Eds.;\nSpringer: Cham, Switzerland, 2021; Volume 1460,\
    \ pp. 201–215.\n29.\nVoas, J. NIST SP 800-183 Networks of ‘Things’. 2016. Available\
    \ online: https://nvlpubs.nist.gov/nistpubs/SpecialPublications/\nNIST.SP.800-183.pdf\
    \ (accessed on 1 March 2022).\n30.\nSethi, P.; Sarangi, S.R. Internet of things:\
    \ Architectures, protocols, and applications. J. Electr. Comput. Eng. 2017, 2017,\
    \ 9324035.\n[CrossRef]\n31.\nSharma, N.; Solanki, V.K.; Davim, J.P. Basics of\
    \ the Internet of Things (IoT) and Its Future. In Handbook of IoT and Big Data;\
    \ CRC\nPress: Boca Raton, FL, USA, 2019; pp. 165–186. [CrossRef]\n32.\nOlusanya,\
    \ G.S.; Okunbor, C.; Avwokuruaye, O. Internet of Things (IOT) as the future of\
    \ networked devices: An overview. Glob. J.\nEng. Technol. Adv. 2021, 9, 031–037.\
    \ [CrossRef]\n33.\nLaghari, A.A.; Wu, K.; Laghari, R.A.; Ali, M.; Khan, A.A. A\
    \ Review and State of Art of Internet of Things (IoT). Arch. Comput.\nMethods\
    \ Eng. 2021, 29, 1395–1413. [CrossRef]\n34.\nKoohang, A.; Sargent, C.S.; Nord,\
    \ J.H.; Paliszkiewicz, J. Internet of Things (IoT): From awareness to continued\
    \ use. Int. J. Inf.\nManag. 2021, 62, 102442. [CrossRef]\n35.\nNasr, M.; Islam,\
    \ M.; Shehata, S.; Karray, F.; Quintana, Y. Smart Healthcare in the Age of AI:\
    \ Recent Advances, Challenges, and\nFuture Prospects. IEEE Access 2021, 9, 145248–145270.\
    \ [CrossRef]\n36.\nLewis, B. Standards Hat Trick for the Internet of Things. 2020.\
    \ Available online: https://www.iso.org/news/ref2529.html\n(accessed on 1 March\
    \ 2022).\n37.\nVelosa, A.; Friedman, T.; Thielemann, K.; Berthelsen, E.; Havart-Simkin,\
    \ P.; Goodness, E.; Flatley, M.; Jones, L.; Quinn, K. Gartner\nMagic Quadrant\
    \ for Industrial IoT Platforms. 2021. Available online: https://www.gartner.com/en/documents/4006918/magic-\n\
    quadrant-for-industrial-iot-platforms (accessed on 1 March 2022).\nSensors 2022,\
    \ 22, 4110\n26 of 26\n38.\nGoodness, E.; Kim, S.; Friedman, T.; Velosa, A.; Berthelsen,\
    \ E.; Shrivastava, A. Gartner Magic Quadrant for IIoT Platforms 2019.\nAvailable\
    \ online: https://b2bsalescafe.ﬁles.wordpress.com/2019/09/gartner-magic-quadrant-for-industrial-iot-platforms-june-\n\
    2019.pdf (accessed on 1 March 2022).\n39.\nFriha, O.; Ferrag, M.A.; Shu, L.; Maglaras,\
    \ L.A.; Wang, X. Internet of Things for the Future of Smart Agriculture: A Comprehensive\n\
    Survey of Emerging Technologies. IEEE/CAA J. Autom. Sin. 2021, 8, 718–752. [CrossRef]\n\
    40.\nSinha, B.B.; Dhanalakshmi, R. Recent advancements and challenges of Internet\
    \ of Things in smart agriculture: A survey. Futur.\nGener. Comput. Syst. 2021,\
    \ 126, 169–184. [CrossRef]\n41.\nFnF Research Smart Agriculture Market Size Globally\
    \ Estimated to Reach USD 22.5 Bn, with 8.9% CAGR by 2026: Facts & Factors.\n2021.\
    \ Available online: https://www.globenewswire.com/news-release/2021/10/18/2315821/0/en/Smart-Agriculture-Market-\n\
    Size-Globally-Estimated-to-Reach-USD-22-5-Bn-with-8-9-CAGR-by-2026-Facts-Factors.html\
    \ (accessed on 1 March 2022).\n42.\nBalaji, G.N.; Nandhini, V.; Mithra, S.; Priya,\
    \ N.; Naveena, R. IoT based smart crop monitoring in farm land. Imp. J. Interdiscip.\
    \ Res.\n2018, 4, 88–92.\n43.\nAkhter, R.; Soﬁ, S.A. Precision agriculture using\
    \ IoT data analytics and machine learning. J. King Saud Univ. Comput. Inf. Sci.\
    \ 2021.\n[CrossRef]\n44.\nRamaprasad, S.S.; Kumar, B.S.S.; Lebaka, S.; Prasad,\
    \ P.R.; Kumar, K.N.S.; Manohar, G.N. Intelligent Crop Monitoring and\nProtection\
    \ System in Agricultural ﬁelds Using IoT. In Proceedings of the 2019 4th International\
    \ Conference on Recent Trends on\nElectronics, Information, Communication & Technology\
    \ (RTEICT), Bangalore, India, 17–18 May 2019; pp. 1527–1531. [CrossRef]\n45.\n\
    Madhav, M.U.; Jyothi, D.N.; Kalyani, P. Prediction of pesticides and identiﬁcation\
    \ of diseases in fruits using Support Vector\nMachine (SVM) and IoT. AIP Conf.\
    \ Proc. 2021, 2407, 020016. [CrossRef]\n46.\nGupta, N.; Gupta, S.; Khosravy, M.;\
    \ Dey, N.; Joshi, N.; Crespo, R.G.; Patel, N. Economic IoT strategy: The future\
    \ technology for\nhealth monitoring and diagnostic of agriculture vehicles. J.\
    \ Intell. Manuf. 2021, 32, 1117–1128. [CrossRef]\n47.\nKhan, N.; Ray, R.; Sargani,\
    \ G.; Ihtisham, M.; Khayyam, M.; Ismail, S. Current Progress and Future Prospects\
    \ of Agriculture\nTechnology: Gateway to Sustainable Agriculture. Sustainability\
    \ 2021, 13, 4883. [CrossRef]\n48.\nOliveira, L.; Moreira, A.; Silva, M. Advances\
    \ in Agriculture Robotics: A State-of-the-Art Review and Challenges Ahead. Robotics\n\
    2021, 10, 52. [CrossRef]\n49.\nLuthra, S.; Mangla, S.K.; Garg, D.; Kumar, A. Internet\
    \ of Things (IoT) in Agriculture Supply Chain Management: A Developing\nCountry\
    \ Perspective. In Emerging Markets from a Multidisciplinary Perspective; Springer:\
    \ Cham, Switzerland, 2018; pp. 209–220.\n[CrossRef]\n50.\nDutta, P.K.; Mitra,\
    \ S. Application of Agricultural Drones and IoT to Understand Food Supply Chain\
    \ during Post COVID-19. Agric.\nInform. Autom. Using IoT Mach. Learn. 2021, 67–87.\
    \ [CrossRef]\n51.\nUllah, M.; Nardelli, P.J.; Wolff, A.; Smolander, K. Twenty-One\
    \ Key Factors to Choose an IoT Platform: Theoretical Framework and\nIts Applications.\
    \ IEEE Internet Things J. 2020, 7, 10111–10119. [CrossRef]\n52.\nPamuˇcar, D.;\
    \ ´Cirovi´c, G. The selection of transport and handling resources in logistics\
    \ centers using Multi-Attributive Border\nApproximation area Comparison (MABAC).\
    \ Expert Syst. Appl. 2015, 42, 3016–3028. [CrossRef]\n53.\nLiu, H.-W.; Wang, G.-J.\
    \ Multi-criteria decision-making methods based on intuitionistic fuzzy sets. Eur.\
    \ J. Oper. Res. 2007, 179,\n220–233. [CrossRef]\n54.\nLei, Q.; Xu, Z. Derivative\
    \ and Differential Operations of Intuitionistic Fuzzy Numbers. Int. J. Intell.\
    \ Syst. 2014, 30, 468–498.\n[CrossRef]\n55.\nGohain, B.; Chutia, R.; Dutta, P.;\
    \ Gogoi, S. Two new similarity measures for intuitionistic fuzzy sets and its\
    \ various applications.\nInt. J. Intell. Syst. 2021, 36, 7805–7838. [CrossRef]\n\
    56.\nVisalakshi, N.K.; Thangavel, K.; Parvathi, R. An Intuitionistic Fuzzy Approach\
    \ to Distributed Fuzzy Clustering. Int. J. Comput.\nTheory Eng. 2010, 2, 295–302.\
    \ [CrossRef]\n57.\nMishra, A.R.; Garg, A.K.; Purwar, H.; Rana, P.; Liao, H.; Mardani,\
    \ A. An Extended Intuitionistic Fuzzy Multi-Attributive Border\nApproximation\
    \ Area Comparison Approach for Smartphone Selection Using Discrimination Measures.\
    \ Informatica 2020, 32,\n119–143. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/11/4110/pdf?version=1653977514
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: IoT System Selection as a Fuzzy Multi-Criteria Problem
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/fi15080276
  analysis: '>'
  authors:
  - Dimitrios Lymperis
  - Christos Goumopoulos
  citation_count: 2
  full_citation: '>'
  full_text: ">\nCitation: Lymperis, D.;\nGoumopoulos, C. SEDIA: A Platform\nfor Semantically\
    \ Enriched IoT Data\nIntegration and Development of\nSmart City Applications.\
    \ Future\nInternet 2023, 15, 276. https://\ndoi.org/10.3390/ﬁ15080276\nAcademic\
    \ Editor: Claude Chaudet\nReceived: 8 July 2023\nRevised: 26 July 2023\nAccepted:\
    \ 16 August 2023\nPublished: 18 August 2023\nCopyright:\n© 2023 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nfuture internet\n\
    Article\nSEDIA: A Platform for Semantically Enriched IoT Data\nIntegration and\
    \ Development of Smart City Applications\nDimitrios Lymperis and Christos Goumopoulos\
    \ *\nInformation and Communication Systems Engineering Department, University\
    \ of the Aegean,\n83200 Samos, Greece; dlyberis@gmail.com\n* Correspondence: goumop@aegean.gr\n\
    Abstract: The development of smart city applications often encounters a variety\
    \ of challenges. These\ninclude the need to address complex requirements such\
    \ as integrating diverse data sources and\nincorporating geographical data that\
    \ reﬂect the physical urban environment. Platforms designed\nfor smart cities\
    \ hold a pivotal position in materializing these applications, given that they\
    \ offer a\nsuite of high-level services, which can be repurposed by developers.\
    \ Although a variety of platforms\nare available to aid the creation of smart\
    \ city applications, most fail to couple their services with\ngeographical data,\
    \ do not offer the ability to execute semantic queries on the available data,\
    \ and\npossess restrictions that could impede the development process. This paper\
    \ introduces SEDIA, a\nplatform for developing smart applications based on diverse\
    \ data sources, including geographical\ninformation, to support a semantically\
    \ enriched data model for effective data analysis and integration.\nIt also discusses\
    \ the efﬁcacy of SEDIA in a proof-of-concept smart city application related to\
    \ air\nquality monitoring. The platform utilizes ontology classes and properties\
    \ to semantically annotate\ncollected data, and the Neo4j graph database facilitates\
    \ the recognition of patterns and relationships\nwithin the data. This research\
    \ also offers empirical data demonstrating the performance evaluation of\nSEDIA.\
    \ These contributions collectively advance our understanding of semantically enriched\
    \ data\nintegration within the realm of smart city applications.\nKeywords: smart\
    \ cities; geospatial data; Internet of Things (IoT); semantic enrichment; air\
    \ pollution;\nAir Quality Index (AQI); Neo4j; GraphQL\n1. Introduction\nThe development\
    \ of IoT-driven smart applications has become essential in addressing\nsustainability\
    \ challenges and improving the quality of life for citizens in smart cities [1].\n\
    In this context, information and communication technologies have enabled smart\
    \ cities to\ncollect and analyze vast amounts of data from diverse sources such\
    \ as sensor networks,\npublic data sources, and personal devices. The data are\
    \ then used to develop applications\nthat enhance city services, support economic\
    \ development, and improve society’s well-\nbeing. However, developing smart city\
    \ applications presents various challenges, such as\nintegrating heterogeneous\
    \ data sources and accounting for geographical information that\naccurately represents\
    \ the urban environment [2]. A platform that supports the integration\nof semantically\
    \ enriched IoT data and the development of smart applications can help\novercome\
    \ these challenges.\nSmart city platforms are critical in realizing the development\
    \ of smart city applications\nby providing high-level services that can be reused\
    \ by developers. To achieve this, it\nis essential to ensure interoperability\
    \ and effectively manage large-scale heterogeneous\ndata [3,4]. In addition, smart\
    \ city platforms must also provide secure access to data. This\ninvolves implementing\
    \ robust security protocols that protect sensitive data from unau-\nthorized access\
    \ or breaches. Ensuring data privacy and conﬁdentiality is also important,\nespecially\
    \ when dealing with personal or sensitive data.\nFuture Internet 2023, 15, 276.\
    \ https://doi.org/10.3390/ﬁ15080276\nhttps://www.mdpi.com/journal/futureinternet\n\
    Future Internet 2023, 15, 276\n2 of 38\nFurthermore, smart city platforms must\
    \ effectively incorporate geographical infor-\nmation to enable applications that\
    \ can accurately represent and address urban environ-\nments [5]. This requires\
    \ integrating location-based data with other data sources to provide\ninsights\
    \ into different aspects of urban life, such as transportation, energy consumption,\n\
    and environmental factors [6]. Geospatial analytics can also help in understanding\
    \ the\nrelationships between different variables in urban environments.\nLack\
    \ of standardization is another challenge in the development of smart city appli-\n\
    cations. To ensure interoperability and scalability, it is important to establish\
    \ common\nstandards and protocols for data sharing and application development\
    \ [7]. In this context,\nthe use of a standardized and semantically enriched data\
    \ model is critical for enabling\neffective data integration and analysis in smart\
    \ city platforms [8]. This involves developing\nontologies and taxonomies that\
    \ can help to capture the meaning and relationships between\ndifferent data elements.\
    \ By providing semantic support, smart city platforms can help to\nimprove the\
    \ accuracy and relevance of data analysis, thereby enabling the development of\n\
    more effective and targeted applications [9,10].\nRecent literature reviews have\
    \ identiﬁed a collection of platforms designed to facilitate\nthe development\
    \ of smart city applications [11,12]. These reviews also highlighted crucial\n\
    requirements to be addressed, such as device, event, resource, and data management,\
    \ data\nprocessing, external data access, application runtime support, as well\
    \ as maintaining a\ncity model and historical data. Upon examining some of the\
    \ existing solutions, it becomes\nevident that most of them take into account\
    \ important requirements, such as data collection,\nmanagement, and sharing. However,\
    \ they do not incorporate a diverse array of services\nrelated to geographical\
    \ information, nor do they perform semantic queries on the data.\nIn response\
    \ to the identiﬁed shortcomings, this paper presents a new platform for\nsemantically\
    \ enriched IoT data integration and the development of smart city applications,\n\
    referred to as SEDIA. This platform is capable of processing heterogeneous data\
    \ streams\nfrom varying sources, including geographical data, by leveraging a\
    \ semantically enriched\ndata model. This unique approach signiﬁcantly simpliﬁes\
    \ data integration and facilitates\nenhanced data analysis. To validate our solution,\
    \ we further explore a practical smart city\napplication, revealing the efﬁcacy\
    \ and potential of SEDIA in actual, real-world situations.\nThe contribution of\
    \ our work can be summarized as follows:\ni.\nan architecture with components\
    \ that are capable of handling diverse data sources\nincluding geographical information\
    \ and support a semantically enriched data model,\nwhich can facilitate effective\
    \ data integration and analysis;\nii.\nan implementation of the proposed architecture\
    \ on top of an existing IoT middleware by\nenhancing its services, capitalizing\
    \ on abstraction levels, and fostering interoperability;\niii.\na discussion on\
    \ the efﬁcacy of SEDIA in a proof of concept smart city application\nrelated to\
    \ air quality monitoring; and\niv.\na demonstration of experimental data in relation\
    \ to a performance assessment of SEDIA.\nOverall, this research is distinct in\
    \ that it provides a holistic approach covering all\naspects of data management,\
    \ from collection and semantic annotation to storage, analysis,\nand presentation.\
    \ The emphasis that SEDIA places on semantic enrichment and the\nintegration of\
    \ geographical relationships represents a novel focus not typically prioritized\n\
    in related research. The integration of an enriched data model, practical implementation,\n\
    case study, and performance assessment offers a well-rounded examination of the\
    \ proposed\nplatform, going beyond the typical scope of related studies. This\
    \ multi-faceted approach,\ncombined with the innovative aspects of SEDIA, constitutes\
    \ a signiﬁcant contribution to\nthe ﬁeld.\nThe structure of this paper is organized\
    \ in the following manner. Section 2 presents\nthe SEDIA architecture showcasing\
    \ our ﬁrst signiﬁcant contribution. Section 3 provides\na comprehensive exploration\
    \ of our second and third signiﬁcant contributions. In par-\nticular, it presents\
    \ an implementation of the proposed architecture in terms of a proof\nof concept\
    \ application for environmental monitoring and “Green Route” identiﬁcation.\n\
    Section 4 is dedicated to our fourth key contribution by presenting the results\
    \ of computa-\nFuture Internet 2023, 15, 276\n3 of 38\ntional experiments aimed\
    \ to evaluate the performance and the scalability of the proposed\narchitecture.\
    \ Section 5 provides a concise overview of previous research on semantic en-\n\
    vironmental IoT and smart cities. Section 6 discusses a summary of the research\
    \ insights\nand a brief exploration of potential directions for future research.\
    \ Lastly, Section 7 contains\nconcluding remarks.\n2. SEDIA Architecture\n2.1.\
    \ Overview and Principles of SEDIA Architecture\nThe SEDIA architecture is designed\
    \ to integrate data from heterogeneous sources,\npotentially located in different\
    \ geographical locations, and to be utilized across a wide vari-\nety of application\
    \ areas. This approach to data integration enables a more comprehensive\nunderstanding\
    \ of urban environments by providing a uniﬁed view of data from different\nsources.\
    \ The proposed architecture collects, stores, and processes data by integrating\
    \ vari-\nous IoT technologies into the existing communication infrastructure.\
    \ A critical stage of data\nintegration involves gathering, organizing, and preparing\
    \ the data for semantic labeling.\nUtilizing semantic tools and methods, high-level\
    \ data analysis is conducted to extract\ninformation for the implementation of\
    \ new functions and services within the Application\nLayer. The overall SEDIA\
    \ architecture, as illustrated in Figure 1, comprises multiple layers.\nThese\
    \ are brieﬂy described in the subsequent paragraphs.\nFuture Internet 2023, 15,\
    \ x FOR PEER REVIEW \n4 of 41 \n \nThe exact distribution of these components\
    \ may vary depending on the speciﬁc needs \nof the IoT application. Ultimately,\
    \ the decision on where to execute each part will be \nguided by the need to strike\
    \ a balance among factors such as latency, computational re-\nsources, cost, and\
    \ data privacy considerations. \nMobile App\nDashboard\nApplication \nLayer\n\
    Data Source \nLayer\nNetwork Layer\nIoT \nMiddleware\nLayer\nIoT Node\nSensors\n\
    Message/Event \nBroker\nService\nLayer\nAggregation, \nFormatting, \nSemantic\
    \ \nAnnotation of IoT \nData\nAggregation, \nFormatting, \nSemantic \nAnnotation\
    \ of Open \nData\nSemantic Layer\nOntology           \n(RDF/OWL)\nDevice \nManagement\n\
    Semantic\nReasoning\nEthernet\nWiFi\nBluetooth\nCellular\nSemantic Data \nRetrieval\n\
    Graph Data Storage\nData Analytics\nOpen Data Sources\nGeospatial \nDatabase\n\
    Data analysis\nData Export\nData \nTransformation\nData\nStorage\nProtocol \n\
    Translation \nGateway\nZigbee\n \nFigure 1. Overview of SEDIA architecture. \n\
    2.2. Data Source Layer  \nThe main purpose of this layer is to collect data from\
    \ multiple sources and transmit \nit to upper levels for further analysis and\
    \ decision-making. This layer consists of sensors, \nFigure 1. Overview of SEDIA\
    \ architecture.\nFuture Internet 2023, 15, 276\n4 of 38\nIn an IoT system, various\
    \ components can be executed at different tiers, namely the\nEdge, Fog, and Cloud.\
    \ The placement of these components depends on several factors\nincluding speciﬁc\
    \ application requirements, latency, computational resources, network\nbandwidth,\
    \ and data privacy. The components of the SEDIA architecture can typically be\n\
    assigned to these tiers as follows:\n•\nEdge Tier: This tier is closest to the\
    \ data source and has the least latency, but usually\nhas limited computational\
    \ resources and storage. The Data Source Layer, which\nincludes the IoT nodes\
    \ themselves and immediate data collection, is typically at the\nedge. Furthermore,\
    \ some elements of the Network Layer, such as the initial data\ncommunication\
    \ protocols (Bluetooth, Cellular, Ethernet, WiFi, LoRaWan) and part of\nthe IoT\
    \ Middleware Layer (speciﬁcally, Protocol Translation Gateways for immediate\n\
    data translation) can reside at the edge.\n•\nFog Tier: This is an intermediate\
    \ tier between the edge and the cloud. It has more\ncomputational resources than\
    \ the edge, but less than the cloud, and it offers reduced\nlatency compared to\
    \ the cloud. More of the Network Layer (such as network gateways),\nas well as\
    \ elements of the IoT Middleware Layer (such as Message Brokers and Device\nManagement),\
    \ can reside in the fog. This layer can also host parts of the Service\nLayer,\
    \ especially if faster response times are needed for certain operations such as\
    \ data\naggregation and formatting.\n•\nCloud Tier: This tier has the highest\
    \ computational power and storage capabilities,\nbut also potentially higher latency\
    \ due to its distance from the data source. Most of the\nIoT Middleware Layer\
    \ (for more complex operations), the Service Layer (for complex\ndata processing),\
    \ the Semantic Layer (for intensive data analysis and reasoning), and\nthe Application\
    \ Layer (for user interaction and data visualization) would typically\nreside\
    \ in the cloud.\nThe exact distribution of these components may vary depending\
    \ on the speciﬁc needs\nof the IoT application. Ultimately, the decision on where\
    \ to execute each part will be guided\nby the need to strike a balance among factors\
    \ such as latency, computational resources, cost,\nand data privacy considerations.\n\
    2.2. Data Source Layer\nThe main purpose of this layer is to collect data from\
    \ multiple sources and transmit\nit to upper levels for further analysis and decision-making.\
    \ This layer consists of sensors,\nsmart meters, and actuators that monitor the\
    \ operation of services, activities, or equip-\nment. Moreover, this layer contains\
    \ datasets supplied by government agencies or open\ndata sources through application\
    \ programming interfaces (APIs). In an environmental\napplication scenario, the\
    \ Data Source Layer would gather data relevant to monitoring\nand understanding\
    \ environmental conditions. This could include data from temperature,\nhumidity,\
    \ and air quality sensors, as well as from geolocation devices, in order to under-\n\
    stand the geographical distribution of environmental data and to correlate it\
    \ with speciﬁc\nenvironmental features or events.\n2.3. Network Layer\nThis layer\
    \ serves as the connecting bridge between the Data Source Layer and the IoT\n\
    Middleware Layer. Depending on the source type, it receives data from the source\
    \ layer\nand transmits it using various wired or wireless networking technologies\
    \ such as Ethernet,\n3G, 4G, WiFi, Bluetooth, LoRa, Zigbee, Z-Wave, Sigfox, NB-IoT,\
    \ IPv4/IPv6, and others. The\nnetworking layer facilitates communication between\
    \ all data sources and linked systems.\nThe security of data transfers is maintained\
    \ depending on the protocol employed, thereby\nensuring data integrity and privacy\
    \ protection for the received data. Protocols such as\nZigbee, WiFi, and LoRaWAN\
    \ implement encryption to protect data in transit. For instance,\nWiFi’s WPA2\
    \ protocol uses AES (Advanced Encryption Standard) encryption, providing a\nhigh\
    \ degree of security. In the case of 4G and NB-IoT, mutual authentication is conducted\n\
    between the device and the network using a shared secret key. LoRaWAN uses message\n\
    Future Internet 2023, 15, 276\n5 of 38\nintegrity checks (MIC) to ensure that\
    \ the data received are the same as the data sent. Zigbee\nuses a method called\
    \ ‘out-of-band’ key exchange, where encryption keys are exchanged via\na different\
    \ channel than the main data channel, reducing the risk of interception.\n2.4.\
    \ IoT Middleware Layer\nThis layer is primarily responsible for (a) integrating\
    \ data received from various types\nof connected devices; (b) processing the incoming\
    \ data; and (c) delivering the processed\ndata to various applications or services.\
    \ In addition to storing time series in a database, the\nIoT platform layer is\
    \ responsible for converting, analyzing, and managing the data received\nfrom\
    \ remote devices. Services at this tier are often accessible via HTTP-based REST\
    \ APIs,\nwhile implementing the necessary MQTT (Message Queuing Telemetry Transport)\
    \ protocol\ninfrastructures to transfer data to higher-layer services or applications.\n\
    In real-world networks, not all devices communicate using the same protocol. While\n\
    MQTT is a widely used IoT connectivity protocol, other devices might employ different\
    \ pro-\ntocols, such as DNP3 (Distributed Network Protocol 3) and IEC61850, which\
    \ are extensively\nused in the ﬁeld of power and utility systems. This variety\
    \ in communication protocols\ncontributes to the complexity and heterogeneity\
    \ of the IoT network and its data. If the IoT\ndevices use protocols such as DNP3\
    \ or IEC61850, which are not typically designed for direct\ninternet communication,\
    \ a Protocol Translation Gateway (PTG) is required to convert the\ndata into a\
    \ format that the IoT middleware can understand. This might involve packaging\n\
    the data into TCP/IP packets so that the gateway can transmit the translated data\
    \ to the\nIoT middleware over the internet using MQTT or HTTP. For example, to\
    \ translate DNP3\nmessages to MQTT messages, the steps that must be performed\
    \ by a PTG include:\n•\nCollection of the DNP3 data from the IoT device;\n•\n\
    Parsing the data packets according to the DNP3 protocol speciﬁcations;\n•\nMapping\
    \ the data ﬁelds in the DNP3 packet to corresponding data ﬁelds in an\nMQTT message;\n\
    •\nFormatting the MQTT message according to the MQTT protocol speciﬁcations;\n\
    •\nTransmitting the MQTT message over the internet.\nA PTG can be either a device\
    \ or software, and its placement can vary within the\nSEDIA architecture depending\
    \ on the speciﬁc needs and resources of the system. When the\nPTG is implemented\
    \ as a device, it is located at the edge of the network, close to the IoT\ndevices.\
    \ This hardware-based PTG has built-in capabilities to communicate with the IoT\n\
    devices using their native protocols (such as DNP3 or IEC61850), and also the\
    \ capability\nto connect to the Internet for forwarding translated data to the\
    \ IoT middleware. On the\nother hand, a PTG can also be implemented as software.\
    \ This software-based PTG could be\ndeployed on edge devices, fog nodes, or even\
    \ in the cloud. The choice depends on various\nfactors including network latency,\
    \ computational resources, and security requirements. For\nexample, deploying\
    \ the PTG software on fog nodes can provide a balance between the\nlow-latency\
    \ and powerful data processing capabilities, which can be particularly useful\n\
    when the PTG has to handle a large amount of data from numerous IoT devices.\n\
    2.5. Service Layer\nThis layer represents the apex of the data collection strategy,\
    \ incorporating specialized\nservices for real-time semantic labeling of the data.\
    \ During this phase, the IoT data retrieved\nfrom the lower layer are transformed\
    \ into a singular format and are prepared for performing\nsemantic labeling based\
    \ on the ontology established in the upper layer. In addition,\ninformation is\
    \ collected from open data sources, which are subjected to the same procedures\n\
    as IoT data.\n2.6. Semantic Layer\nAt this layer, gathered and organized sensor\
    \ and open data are represented utilizing\nsemantic web technologies, such as\
    \ RDF (Resource Description Framework), OWL (Web\nOntology Language), and SPARQL\
    \ (SPARQL Protocol and RDF Query Language), which\nFuture Internet 2023, 15, 276\n\
    6 of 38\nallow for the annotation and linking of data to facilitate more accurate\
    \ and meaningful\nanalysis. The data are converted to their semantic form, categorized\
    \ according to the SEDIA\nontology, and stored in graph databases. Upon storage,\
    \ the semantic data retrieval process\nis initiated. The collected data are extracted\
    \ from the graph databases using semantic\nqueries, often formulated in SPARQL,\
    \ which enable the identiﬁcation and retrieval of\nrelevant data by searching\
    \ for speciﬁc patterns, relationships, and attributes. The retrieved\ndata can\
    \ then be utilized in further analysis or decision-making processes. In parallel\
    \ with\ndata retrieval, semantic reasoning takes place, involving the application\
    \ of logical rules\nand inferences to the data stored in the graph databases.\
    \ This reasoning process allows for\nthe discovery of new relationships, validation\
    \ of existing knowledge, and the detection of\ninconsistencies within the data.\
    \ By combining the use of queries and semantic reasoning,\nthe system can ﬁnd\
    \ patterns and extract knowledge, such as analyzing abnormalities or\ncrucial\
    \ events, from stored data.\n2.7. Application Layer\nThis layer is responsible\
    \ for providing the user with specialized services. Using\nREST APIs or GraphQL,\
    \ which enable the retrieval and manipulation of data stored in\na graph database,\
    \ is one method to achieve this. These APIs facilitate seamless interac-\ntion\
    \ between the Application Layer and the underlying semantic databases, promoting\n\
    efﬁcient data exchange and streamlined processing. Using visualizations, data\
    \ analysis,\nand other tools provided by the Application Layer, this data can\
    \ then be presented to\nthe user in an understandable and actionable manner. These\
    \ services are applicable to\nnumerous IoT applications, including smart residences,\
    \ smart communities, smart health,\nand precision agriculture.\nAdditionally,\
    \ the Application Layer may incorporate machine learning algorithms,\nartiﬁcial\
    \ intelligence, or other advanced analytics techniques to further process and\
    \ an-\nalyze the retrieved data. This enables the generation of valuable insights,\
    \ predictions,\nand recommendations that can enhance the overall performance and\
    \ effectiveness of the\nIoT system.\n3. SEDIA Implementation\n3.1. Proof of Concept\
    \ Smart Application\nThe smart application that is used as a running example in\
    \ this paper to discuss the\nimplementation of the SEDIA architecture focuses\
    \ on improving urban air quality moni-\ntoring by utilizing IoT data and applying\
    \ semantic enrichment techniques. Air pollution\nis a serious issue that affects\
    \ the health of citizens, and the development of smart city\napplications can\
    \ contribute to addressing this issue. According to the World Health Orga-\nnization,\
    \ long-term exposure to suspended indoor-outdoor particles can severely impact\n\
    health and even cause death [13,14]. The European Air Quality Index (EAQI) serves\
    \ as a\nreference to assess air pollution severity and identify the contributing\
    \ factors [15]. Such\nan application requires services and methods for collecting\
    \ large volumes of geospatial\nand environmental data using sensors embedded in\
    \ heterogeneous IoT systems. These\nsystems consist of nodes with embedded microcontrollers\
    \ of various technologies and\nmanufacturers, employing different communication\
    \ and networking methods.\nIn the proof-of-concept (PoC) scenario presented in\
    \ this study, an environmental moni-\ntoring methodology is followed to develop\
    \ a smart application. This application is designed\nto provide users with the\
    \ shortest route between two locations, while also ensuring the best\nair quality\
    \ along that route. This application has been termed the ‘Green Route’ application.\n\
    The proposed methodology consists of a data collection process from heterogeneous\
    \ IoT\ndevices and open platforms, semantic annotation of the collected data,\
    \ and serving the\nextracted knowledge through a web application. IoT devices\
    \ are strategically placed in\nurban environments to collect data on air quality\
    \ metrics, such as concentrations of harmful\npollutants (SO2, NO2, O3) and particulate\
    \ matter levels (PM2.5, PM10) [16]. Additionally,\nenvironmental data for particular\
    \ geographical locations are gathered from open plat-\nFuture Internet 2023, 15,\
    \ 276\n7 of 38\nforms through APIs. This data management and enrichment process\
    \ involves integrating\nthird-party sources, often resulting in data heterogeneity\
    \ and different formats. In order\nto overcome these challenges, the use of semantic\
    \ enrichment techniques is crucial, and\nthe semantic web can be a powerful tool\
    \ in enabling the IoT to work more effectively and\nefﬁciently. Semantic enrichment\
    \ enables the harmonization of data from diverse sources\nand formats by adding\
    \ context and meaning to the raw information.\nThis is precisely where SEDIA comes\
    \ into play. The collected data by IoT platforms\nare transmitted via the MQTT\
    \ protocol to a central server. Custom services, written in\nPython, collect geospatial\
    \ environmental data from open platforms, and the acquired\ndata is processed\
    \ in real time and semantically annotated by assigning ontology classes\nand properties.\
    \ The use of semantic enrichment techniques enables a more complete\nunderstanding\
    \ of the data as it adds context and meaning to the raw data collected from\n\
    different sources. Additionally, storing this semantically enriched data in a\
    \ Neo4j graph\ndatabase facilitates the identiﬁcation of patterns and relationships,\
    \ making it easier to\npinpoint areas of concern and potential causes of air pollution.\n\
    A web application has been developed to visualize environmental data from moni-\n\
    toring stations by submitting GraphQL queries to the Neo4j database. This functionality\n\
    allows for the effortless identiﬁcation of areas with high pollution levels and\
    \ enables users\nto ﬁnd walking routes with minimal atmospheric pollution by specifying\
    \ start and end\npoints on the map.\n3.2. Data Source Layer\n3.2.1. IoT Devices\n\
    At the Data Source Layer, SEDIA envisions collecting heterogeneous geospatial\
    \ data\nto support smart city applications. This involves using various hardware\
    \ IoT platforms,\nsuch as Arduino Uno WiFi Rev2, Arduino Mega 2560 Rev3, TTGO\
    \ Lora32 V1.0, and Lopy4,\nwhich act as IoT nodes for measuring crucial parameters.\
    \ These platforms provide a variety\nof features and capabilities, including built-in\
    \ Wi-Fi and Lora networking, which facili-\ntate data transmission over long distances\
    \ with minimal power consumption. However,\nthe use of multiple hardware platforms\
    \ also presents programming and data integration\nchallenges. Each platform may\
    \ require different programming languages, such as C/C++\nand MicroPython, and\
    \ the use of different programming tools. This heterogeneity in\nhardware and\
    \ programming languages necessitates careful consideration during the appli-\n\
    cation implementation, including the development of a uniﬁed communication protocol\n\
    and the maintenance of interoperability between different platforms. Such challenges\n\
    can be addressed by adopting standardized communication protocols, data formats,\
    \ and\nmiddleware solutions that enable seamless data exchange and integration\
    \ across diverse\ndevices and platforms. By fostering compatibility and simplifying\
    \ the development process,\nthese measures ultimately enhance the overall functionality,\
    \ scalability, and adaptability of\nthe smart city applications, allowing them\
    \ to evolve in line with emerging technologies\nand requirements.\nEach IoT node\
    \ device employed in the PoC application is equipped with sensors for\nmeasuring\
    \ critical environmental parameters, which are used to calculate the EAQI [17].\n\
    These sensors include the PMS5003 for measuring PM2.5 and PM10 particle matters,\
    \ the\nlow-cost MQ Gas sensors MQ131 for measuring O3 and NO2, and the MQ136 for\
    \ measuring\nSO2. The PMS5003 sensor measures particle concentrations based on\
    \ the principle of laser\nscattering. The MQ131 and MQ136 sensors use a gas-sensitive\
    \ ﬁlm in which the electrical\nconductivity of the ﬁlm changes upon exposure to\
    \ the target gas, thereby providing a\nmeasurement of gas concentration [18].\
    \ The use of these sensors enables the accumulation\nof ﬁne-grained data on air\
    \ quality, which is essential for accurately determining the Air\nQuality Index\
    \ (AQI) and providing real-time information to users. Figure 2 demonstrates\n\
    the physical layout and interconnectivity of the sensors in the context of the\
    \ IoT node,\nspeciﬁcally designed for the PoC application.\nFuture Internet 2023,\
    \ 15, 276\n8 of 38\nFuture Internet 2023, 15, x FOR PEER REVIEW \n9 of 41 \n \n\
    \ \n. \nFigure 2. ΙοΤ prototype with peripheral sensors for the PoC application.\
    \ \n3.2.2. Open Data Sources \nOpen data sources serve as invaluable assets for\
    \ promoting economic growth, stim-\nulating innovation, and improving public services.\
    \ In a smart city environment, embed-\nded sensors within urban infrastructures\
    \ and facilities possess the potential to generate a \nvast amount of data. APIs\
    \ are widely utilized in the development of IoT solutions, ena-\nbling developers\
    \ to create advanced applications that can be easily integrated with other \n\
    web services.  \nThe PoC application incorporates ambient data from open data\
    \ sources, in addition \nto data collected from heterogeneous IoT nodes. For the\
    \ application implementation, open \nenvironmental data sources with API capabilities\
    \ were identiﬁed and used (Table 1). \nThese sources provide atmospheric measurements\
    \ pertaining to weather data and air pol-\nlutants for hundreds of cities around\
    \ the globe, which are routinely updated and available \nfor local use. Application\
    \ developers are given unique API keys to facilitate remote call \nrequests to\
    \ these services. \nTable 1. Open environmental data sources. \nOpen Data Source\
    \ \nData \nReference \niqair \nAQI, CO, NO2, O3, SO2, PM2.5, PM10 \n[19] \nninjas_airq\
    \ \nAQI, CO, NO2, O3, SO2, PM2.5, PM10 \n[20] \nopen_weather \nAQI, CO, NO, NO2,\
    \ O3, SO2, NH3, PM2.5, PM10 \n[21] \nweatherbit \nAQI, CO, NO2, O3, SO2, PM2.5,\
    \ PM10, pollen levels \n[22] \n3.3. Network Layer \nThe Network Layer of a generic\
    \ architecture supporting the development of smart \ncity applications plays a\
    \ crucial role in ensuring reliable and eﬃcient data transmission \namong various\
    \ devices and platforms. By employing a diverse range of networking tech-\nnologies,\
    \ such as Wi-Fi, Ethernet, and LoRa, as well as multiple communication protocols,\
    \ \nincluding HTTP, MQTT, and LoRaWAN, this layer can accommodate the unique require-\n\
    ments of diﬀerent IoT devices, while maintaining seamless communication. \nIn\
    \ such an architecture, the Network Layer facilitates data transmission from IoT\
    \ de-\nvices to the higher-level platforms, making use of various networking technologies\
    \ and \nprotocols that are best suited to the speciﬁc devices and application\
    \ requirements. For \ninstance, LoRa-enabled devices require a gateway that can\
    \ wirelessly transmit data to the \nFigure 2. IoT prototype with peripheral sensors\
    \ for the PoC application.\nIn addition to the sensors for measuring environmental\
    \ parameters, each IoT node\ndevice in the environmental monitoring application\
    \ is also equipped with a GPS device\nfor geolocation. This GPS device acquires\
    \ the altitude, latitude, and longitude coordinates\nof the device, which are\
    \ then utilized to pinpoint the location of the collected data. This\ninformation\
    \ is critical in determining the spatial distribution of air quality data and\
    \ is used\nin generating air quality maps. By using GPS devices in each IoT node,\
    \ the environmental\nmonitoring application can collect highly accurate location\
    \ data that enhances the precision\nof air quality measurements. This level of\
    \ precision is essential in providing users with\nreal-time air quality data that\
    \ they can use to make informed decisions regarding their\nhealth and safety.\n\
    3.2.2. Open Data Sources\nOpen data sources serve as invaluable assets for promoting\
    \ economic growth, stimu-\nlating innovation, and improving public services. In\
    \ a smart city environment, embedded\nsensors within urban infrastructures and\
    \ facilities possess the potential to generate a\nvast amount of data. APIs are\
    \ widely utilized in the development of IoT solutions, en-\nabling developers\
    \ to create advanced applications that can be easily integrated with other\nweb\
    \ services.\nThe PoC application incorporates ambient data from open data sources,\
    \ in addition to\ndata collected from heterogeneous IoT nodes. For the application\
    \ implementation, open\nenvironmental data sources with API capabilities were\
    \ identiﬁed and used (Table 1). These\nsources provide atmospheric measurements\
    \ pertaining to weather data and air pollutants\nfor hundreds of cities around\
    \ the globe, which are routinely updated and available for local\nuse. Application\
    \ developers are given unique API keys to facilitate remote call requests to\n\
    these services.\nTable 1. Open environmental data sources.\nOpen Data Source\n\
    Data\nReference\niqair\nAQI, CO, NO2, O3, SO2, PM2.5, PM10\n[19]\nninjas_airq\n\
    AQI, CO, NO2, O3, SO2, PM2.5, PM10\n[20]\nopen_weather\nAQI, CO, NO, NO2, O3,\
    \ SO2, NH3, PM2.5, PM10\n[21]\nweatherbit\nAQI, CO, NO2, O3, SO2, PM2.5, PM10,\
    \ pollen levels\n[22]\nFuture Internet 2023, 15, 276\n9 of 38\n3.3. Network Layer\n\
    The Network Layer of a generic architecture supporting the development of smart\
    \ city\napplications plays a crucial role in ensuring reliable and efﬁcient data\
    \ transmission among\nvarious devices and platforms. By employing a diverse range\
    \ of networking technologies,\nsuch as Wi-Fi, Ethernet, and LoRa, as well as multiple\
    \ communication protocols, including\nHTTP, MQTT, and LoRaWAN, this layer can\
    \ accommodate the unique requirements of\ndifferent IoT devices, while maintaining\
    \ seamless communication.\nIn such an architecture, the Network Layer facilitates\
    \ data transmission from IoT\ndevices to the higher-level platforms, making use\
    \ of various networking technologies and\nprotocols that are best suited to the\
    \ speciﬁc devices and application requirements. For\ninstance, LoRa-enabled devices\
    \ require a gateway that can wirelessly transmit data to the\ninternet using the\
    \ LoRaWAN protocol, thus ensuring long-range communication with\nminimal power\
    \ consumption.\nThe choice of networking technologies and communication protocols\
    \ is driven by\nfactors such as the need for energy efﬁciency, extended communication\
    \ range, and low\nlatency. By incorporating a combination of these technologies\
    \ and protocols, the Network\nLayer can provide a versatile and adaptable communication\
    \ infrastructure, which can cater\nto a wide array of smart city applications.\n\
    Speciﬁcally, the IoT devices used in the PoC application leveraged a range of\
    \ net-\nworking technologies and protocols to transmit the collected data to the\
    \ IoT platforms\nin the subsequent layer. The Lorix One WiFX gateway, along with\
    \ The Things Network\ninfrastructure, facilitated efﬁcient communication between\
    \ IoT devices and platforms that\nsupport LoRaWAN networking. Despite the fact\
    \ that LoRaWAN is not inherently designed\nfor heavy data trafﬁc or complex workload\
    \ management, multiple strategies can be im-\nplemented to effectively manage\
    \ workloads and handle peak trafﬁc situations. In this\nstudy, mechanisms such\
    \ as the Adaptive Data Rate (ADR) and task scheduling have been\nemployed to ensure\
    \ efﬁcient communication under extreme conditions.\nADR dynamically adjusts the\
    \ data rate and transmission power of devices, enhancing\ntheir capacity to manage\
    \ data trafﬁc while balancing range, capacity, and power consump-\ntion through\
    \ the modulation of Spreading Factors (SFs); additionally, data reduction tactics\n\
    can further optimize workload management. For instance, sensors located in areas\
    \ with\nstrong network coverage and minimal interference can use lower SFs, thereby\
    \ achieving\nhigher data rates and reducing transmission time, which in turn can\
    \ save power and extend\nthe device’s battery life. Conversely, sensors in areas\
    \ with weaker coverage or higher\nlevels of interference may require higher SFs\
    \ to ensure reliable transmission, even though\nthis comes at the cost of reduced\
    \ data rate. By modulating data rates according to each\nsensor’s individual needs\
    \ and the overall network capacity, ADR can help balance the load\nacross the\
    \ network and prevent congestion, ensuring that all collected data is reliably\
    \ and\nefﬁciently transmitted to the central server for further processing and\
    \ analysis.\nOn the other hand, by employing task scheduling, devices can be programmed\
    \ to\nperform duties at predetermined times in order to prevent simultaneous data\
    \ transmission.\nScheduling can also be used to dictate when IoT devices collect\
    \ data. For instance, certain\nenvironmental parameters might need to be monitored\
    \ more frequently during certain\ntimes of the day or in speciﬁc weather conditions.\
    \ By scheduling data collection tasks, it\nis ensured that these devices are actively\
    \ collecting and transmitting data when they are\nmost valuable. In environmental\
    \ monitoring, some data might be more critical than others.\nFor example, data\
    \ indicating a high level of a harmful gas might be more important than\ndata\
    \ showing a slight increase in temperature. Task scheduling can ensure that critical\n\
    data are collected and transmitted more frequently. In a larger-scale implementation,\
    \ task\nscheduling can be used to evenly distribute the workload among multiple\
    \ gateways and\nnetwork servers, avoiding potential bottlenecks and ensuring efﬁcient\
    \ data handling.\nThe implemented smart application showcases the feasibility\
    \ of employing diverse\nnetworking technologies and protocols in the creation\
    \ of an IoT network, capable of\nFuture Internet 2023, 15, 276\n10 of 38\nsupporting\
    \ the collection and processing of heterogeneous data for applications such as\n\
    environmental monitoring.\n3.4. IoT Middleware Layer\nThis layer primarily focuses\
    \ on storing and analyzing data acquired from various types\nof connected devices.\
    \ This data is generally accessible and can be retrieved through RESTful\nHTTP\
    \ APIs or the MQTT protocol, before being relayed to higher-layer services and\
    \ appli-\ncations. IoT middleware solutions such as Thingspeak and Ubidots implement\
    \ the MQTT\nprotocol and possess the necessary infrastructure for receiving and\
    \ transmitting data.\nThe MQTT Broker serves as the central communication hub,\
    \ responsible for transfer-\nring messages between senders and valid recipients.\
    \ Clients are connected devices, services,\nand applications that can either publish\
    \ or subscribe to topics in order to access information.\nA topic contains the\
    \ Broker’s routing information. Clients looking to transmit messages\nsubscribe\
    \ to speciﬁc topics, while those wishing to receive messages also subscribe to\n\
    particular topics. The Broker then delivers all messages containing the corresponding\
    \ topic\nto the relevant clients. Consequently, the connection between the client\
    \ and the Broker\nremains open, but data are only transmitted when necessary.\
    \ This approach conserves\nbattery life and network bandwidth while enhancing\
    \ the real-time experience.\nIn the PoC application, the MQTT protocol offered\
    \ by the IoT middleware was utilized\nfor communication. This addressed the heterogeneity\
    \ of networking and the use of various\nprotocols for the transmission of data\
    \ from IoT devices [23]. Information is gathered\nand sent to recipients with\
    \ a particular information conﬁguration model (JSON object),\nthereby enhancing\
    \ the interoperability of the systems. The emphasis on information\ninteroperability\
    \ and the ﬂexibility of IoT platforms make the MQTT protocol the optimal\nsolution\
    \ for interfacing with the SEDIA architecture’s upper layers.\nDuring the development\
    \ of the PoC application, nine distinct IoT devices were utilized.\nFive of them\
    \ transmit their environmental and geospatial data to the Thingspeak IoT\nmiddleware\
    \ while the other four transmit their data to the Ubidots IoT middleware. The\n\
    use of multiple IoT middleware solutions allows for greater ﬂexibility in data\
    \ processing\nand analysis [24]. Figure 3 depicts the general interconnection\
    \ of the devices to the IoT\nmiddleware. The Thingspeak platform incorporates\
    \ publish and subscribe functionality\nwith a QoS level of 0 (“at most once delivery”),\
    \ whereas the Ubidots platform supports\nQoS levels as high as 1 (“at least once\
    \ delivery”). On both solutions, QoS was set to zero for\nfaster, but less reliable,\
    \ communication.\nThe IoT platforms employed provide access to their APIs via\
    \ plain MQTT or secure\nMQTT with TLS (Transport Layer Security) using the endpoints\
    \ presented in Table 2, de-\npending on the type of account selected at any given\
    \ moment. When implementing the\ninterconnection of publishers and subscribers\
    \ with their respective Brokers of IoT middle-\nware, the MQTT protocol with TLS\
    \ was adopted to ensure data encryption and prevent\nthe exposure of the token\
    \ API and sensor data to unauthorized parties. Certiﬁcates can be\ninstalled on\
    \ programmable IoT devices and are posted on the IoT middleware websites.\nTable\
    \ 2. MQTT endpoints on IoT middleware platforms.\nIoT Middleware\nPlatform\nConnection\n\
    Broker Address\nPort\nEncryption\nThingspeak\nTCP\nmqtt.thingspeak.com\n1883\n\
    -\nThingspeak\nTCP\nmqtt.thingspeak.com\n8883\nTLS\nUbidots\nTCP\nindustrial.api.ubidots.com\n\
    1883\n-\nUbidots\nTCP\nindustrial.api.ubidots.com\n8883\nTLS\nFuture Internet\
    \ 2023, 15, 276\n11 of 38\n \nIoT middleware while the other four transmit their\
    \ data to the Ubidots IoT middleware. \nThe use of multiple IoT middleware solutions\
    \ allows for greater ﬂexibility in data pro-\ncessing and analysis [24]. Figure\
    \ 3 depicts the general interconnection of the devices to the \nIoT middleware.\
    \ The Thingspeak platform incorporates publish and subscribe function-\nality\
    \ with a QoS level of 0 (“at most once delivery”), whereas the Ubidots platform\
    \ sup-\nports QoS levels as high as 1 (“at least once delivery”). On both solutions,\
    \ QoS was set to \nzero for faster, but less reliable, communication. \n \nFigure\
    \ 3. Generalized IoT device interconnection with IoT middleware platforms. \n\
    Figure 3. Generalized IoT device interconnection with IoT middleware platforms.\n\
    3.5. Service Layer\nThe services tier serves as the ﬁnal stage in the data integration\
    \ process, offering\ncustom-built solutions for real-time semantic labeling of\
    \ the data. This tier is responsible\nfor consolidating the data collected from\
    \ the IoT Middleware Layer, transforming it into a\nuniﬁed format, and preparing\
    \ it for semantic annotation based on the ontology deﬁned\nin the upper layer.\
    \ Additionally, the Service Layer retrieves information from open data\nsources,\
    \ subjecting them to similar processes as the IoT data. These custom Python services\n\
    not only collect raw data from various sources in the Data Source Layer of the\
    \ architecture\nbut also ﬁlter and format the useful information, streamlining\
    \ it for semantic annotation.\nThis comprehensive approach ensures seamless integration\
    \ and analysis of the collected\ndata, paving the way for effective and efﬁcient\
    \ smart city applications. In the subsequent\nsubsections, the methodology employed\
    \ for implementing the Service Layer is discussed.\n3.5.1. Multi-Client MQTT Integration:\
    \ A Uniﬁed Approach for Integrating Real-Time\nIoT Data\nThe multi-client MQTT\
    \ service is a custom service running on a server, written in\nPython programming\
    \ language. Its primary functions involve gathering data sent by IoT\ndevices\
    \ to the Thingspeak and Ubidots platforms, ﬁltering relevant information, and\
    \ struc-\nturing it for improved manageability by higher levels of the architecture.\
    \ Data collection\nfrom IoT middleware occurs in real time by registering the\
    \ client program in all topics of the\nIoT devices, utilizing the MQTT protocol.\
    \ The IoT data collection service can accommodate\nmultiple clients simultaneously\
    \ subscribing to topics via diverse communication channels\n(Figure 4).\nFuture\
    \ Internet 2023, 15, 276\n12 of 38\nFuture Internet 2023, 15, x FOR PEER REVIEW\
    \ \n13 of 41 \n \n \nMQTT\nPublisher 1\nLoRaWAN\nNetwork\nServer\n...\n...\nMQTT\
    \ Subscriber 1\nMQTT Subscriber k\nIoT \nNode1\nIoT \nNode k\nIoT \nNode n\n...\n\
    MQTT Subscriber n\n...\nIoT \nMiddleware\nMulti-Client \nMQTT Service\n \nFigure\
    \ 4. Multi-client MQTT service for IoT data aggregation. \nEclipse Paho, an open-source\
    \ project providing high-quality implementations of M2M \nand IoT communication\
    \ tools and libraries, is utilized for implementing subscriptions in \nthe topics\
    \ of IoT devices on each platform. Paho Python Client oﬀers a client class with\
    \ \nsupport for MQTT in Python, along with utility functions for easy individual\
    \ message \npublication to an MQTT server. \nThe Service Layer module is composed\
    \ of individual ﬁles containing function imple-\nmentations that collaborate to\
    \ execute the aforementioned tasks. The conﬁguration ﬁle \ncontains essential\
    \ information about IoT platforms, data tags, and credentials for estab-\nlishing\
    \ connections with the respective Brokers. Upon launching the service’s primary\
    \ \nprogram, the conﬁguration ﬁle’s list of clients is read. Then, asynchronous\
    \ connection \nqueries are sent to MQTT servers based on the Broker’s contact\
    \ information and the cre-\ndentials of the corresponding client. The service\
    \ utilized the MQTT protocol v3.1.1, with \nSSL/TLS 1.3 for secure message transmission\
    \ and reception. The service is designed to \nmanage multiple client connections\
    \ to Brokers using a thread pool that eﬃciently man-\nages server computing resources.\
    \ Additionally, the service program includes an event log-\nging system to help\
    \ understand its ﬂow and rectify production-related issues. SEDIA gen-\nerates\
    \ a log ﬁle which stores information about connections to Brokers, entries in\
    \ device \ntopics on IoT platforms, and inbound messages before and after processing.\
    \ This facili-\ntates error resolution and performance analysis of applications.\
    \ \n3.5.2. Asynchronous Data Retrieval: A Custom Service for Concurrent Open Data\
    \ Source \nIntegration \nThe asynchronous data retrieval is a custom service that\
    \ makes HTTP API requests \nto open data sources, ﬁlters the responses, and formats\
    \ the data into a uniﬁed structure. \nWritten in Python, it operates at predetermined\
    \ 15-min intervals, similar to the frequency \nof data transmission by IoT devices.\
    \ It uses asynchronous operation to simultaneously \nsend multiple queries to\
    \ various servers, ensuring smooth service operation without de-\nlays. \nThe\
    \ service employs Python’s asyncio library for concurrent programming, allowing\
    \ \nmultiple operations to simultaneously run using a single thread and processor\
    \ component \n[25]. The conﬁguration ﬁle contains connection details and geographical\
    \ coordinates for \nquerying environmental data. Upon starting the primary service\
    \ program, an HTTP client \nFigure 4. Multi-client MQTT service for IoT data aggregation.\n\
    Eclipse Paho, an open-source project providing high-quality implementations of\
    \ M2M\nand IoT communication tools and libraries, is utilized for implementing\
    \ subscriptions in\nthe topics of IoT devices on each platform. Paho Python Client\
    \ offers a client class with\nsupport for MQTT in Python, along with utility functions\
    \ for easy individual message\npublication to an MQTT server.\nThe Service Layer\
    \ module is composed of individual ﬁles containing function imple-\nmentations\
    \ that collaborate to execute the aforementioned tasks. The conﬁguration ﬁle\n\
    contains essential information about IoT platforms, data tags, and credentials\
    \ for estab-\nlishing connections with the respective Brokers. Upon launching\
    \ the service’s primary\nprogram, the conﬁguration ﬁle’s list of clients is read.\
    \ Then, asynchronous connection\nqueries are sent to MQTT servers based on the\
    \ Broker’s contact information and the cre-\ndentials of the corresponding client.\
    \ The service utilized the MQTT protocol v3.1.1, with\nSSL/TLS 1.3 for secure\
    \ message transmission and reception. The service is designed to\nmanage multiple\
    \ client connections to Brokers using a thread pool that efﬁciently manages\n\
    server computing resources. Additionally, the service program includes an event\
    \ logging\nsystem to help understand its ﬂow and rectify production-related issues.\
    \ SEDIA generates\na log ﬁle which stores information about connections to Brokers,\
    \ entries in device topics\non IoT platforms, and inbound messages before and\
    \ after processing. This facilitates error\nresolution and performance analysis\
    \ of applications.\n3.5.2. Asynchronous Data Retrieval: A Custom Service for Concurrent\
    \ Open Data\nSource Integration\nThe asynchronous data retrieval is a custom service\
    \ that makes HTTP API requests\nto open data sources, ﬁlters the responses, and\
    \ formats the data into a uniﬁed structure.\nWritten in Python, it operates at\
    \ predetermined 15-min intervals, similar to the frequency of\ndata transmission\
    \ by IoT devices. It uses asynchronous operation to simultaneously send\nmultiple\
    \ queries to various servers, ensuring smooth service operation without delays.\n\
    The service employs Python’s asyncio library for concurrent programming, allowing\n\
    multiple operations to simultaneously run using a single thread and processor\
    \ compo-\nnent [25]. The conﬁguration ﬁle contains connection details and geographical\
    \ coordinates\nfor querying environmental data. Upon starting the primary service\
    \ program, an HTTP\nclient session is established, and requests are placed in\
    \ a task queue for asynchronous pro-\ncessing. Query responses are received as\
    \ JSON objects and parsed to extract relevant data.\nFuture Internet 2023, 15,\
    \ 276\n13 of 38\nThe service module includes an event logging system for debugging\
    \ potential pro-\nduction issues. The AsyncIOScheduler runs the primary schedule\
    \ every 15 min, which is\nsuitable for asyncio-based applications as it conserves\
    \ resources without requiring a new\nprocess or thread.\n3.6. Semantic Layer\n\
    3.6.1. Neo4j Graph Data Storage\nNeo4j is an open source graph database management\
    \ system designed to store, man-\nage, and search graph data, which consists of\
    \ nodes (representing entities or objects) and\nedges (representing relationships\
    \ or connections between nodes). Neo4j relies on the graph\nmodeling feature,\
    \ which represents data as a set of nodes and relationships that have\nproperties\
    \ (key-value pairs) attached to them [26]. This allows complex, interrelated data\n\
    to be represented in a ﬂexible and scalable way. Neo4j can be highly useful in\
    \ a smart city\napplication that involves the semantic annotation of raw data\
    \ due to its inherent capabilities\nin handling complex, interconnected data structures.\
    \ The advantages of Neo4j that make it\nsuitable for such an application are:\n\
    •\nNeo4j’s graph-based data representation, by effectively capturing complex interrela-\n\
    tionships between entities such as sensors, locations, and environmental parameters,\n\
    provides a more intuitive and efﬁcient data storage and querying solution for\
    \ smart\ncity applications than traditional relational databases.\n•\nNeo4j’s\
    \ scalability, capable of handling signiﬁcant data volumes and trafﬁc, ensures\n\
    performance and reliability in data-intensive smart city applications by seamlessly\n\
    adapting to their demands.\n•\nNeo4j’s potent Cypher query language, speciﬁcally\
    \ designed for graph data, facilitates\ncomplex searches and analyses on semantically\
    \ annotated smart city data, enabling\nefﬁcient extraction of valuable insights\
    \ and the full utilization of data potential [27–29].\n•\nNeo4j’s schema-less\
    \ property graph model provides crucial ﬂexibility for semantic\nannotation of\
    \ raw data in smart city applications, allowing for easy adaptation to\nevolving\
    \ data structures and relationships over time.\n•\nNeo4j’s easy integration with\
    \ other semantic technologies such as RDF stores and\nontology management systems\
    \ facilitates a comprehensive and efﬁcient approach to\nsemantic annotation and\
    \ analysis of environmental monitoring data.\n•\nThe robust and active Neo4j user\
    \ and developer community, coupled with a rich\necosystem of tools and libraries,\
    \ guarantees resource accessibility and support for\ndevelopers implementing and\
    \ maintaining Neo4j-based smart city applications.\n3.6.2. Ontology\nThe adoption\
    \ of an ontology in the proposed architecture aims to address the chal-\nlenges\
    \ of handling and analyzing complex, interrelated data in smart city environments.\
    \ By\nproviding a robust and ﬂexible structure, this ontology facilitates the\
    \ semantic annotation\nof raw data originating from diverse sources. The primary\
    \ purpose of this ontology is\nto enable more efﬁcient data management and processing,\
    \ paving the way for advanced\napplications in smart cities including environmental\
    \ monitoring in the form of air quality\nassessment, pollution detection, and\
    \ decision support systems.\nIn this section, the ontology used to represent the\
    \ data associated with the Semantic\nLayer of the proposed architecture is described.\
    \ The ontology (Figure 5) models data from\nmeasured quantities produced by IoT\
    \ devices and open data platforms. Furthermore,\ngeospatial information from either\
    \ ﬁxed stations or measurements from mobile nodes is\nmodeled as a potential future\
    \ extension of the system. The proposed ontology, serving as a\n‘lightweight’\
    \ version of resource and entity descriptions, contributes to reduced computing\n\
    and processing time during the search phase. The ontology’s simplicity renders\
    \ it suitable\nfor direct use or extension to annotate data from different application\
    \ domains.\nFuture Internet 2023, 15, 276\n14 of 38\nFuture Internet 2023, 15,\
    \ x FOR PEER REVIEW \n15 of 41 \n \n \na ‘lightweight’ version of resource and\
    \ entity descriptions, contributes to reduced compu-\nting and processing time\
    \ during the search phase. The ontology’s simplicity renders it \nsuitable for\
    \ direct use or extension to annotate data from diﬀerent application domains.\
    \ \n \nFigure 5. Visual representation of the SEDIA Ontology. \nThe ontology was\
    \ initially developed in Protégé, a popular ontology editor, using the \nOWL format.\
    \ The ontology was developed as an RDF representation to facilitate modeling \n\
    complex relationships and semantic annotation of the raw data from various sources,\
    \ in-\ncluding IoT devices and open data platforms. However, the OWL-based RDF\
    \ representa-\ntion of the ontology is not optimal for use in a graph database\
    \ such as Neo4j. Neo4j is \nbased on the Labeled Property Graph (LPG) model, which\
    \ oﬀers certain advantages over \nRDF triple stores, including simpliﬁed graph\
    \ pattern matching, easier querying, and more \nintuitive data modeling [30].\
    \ \nIn order to take advantage of the beneﬁts oﬀered by the LPG model and Neo4j,\
    \ the \nontology needed to be converted from the OWL-based RDF representation\
    \ to an LPG rep-\nresentation [31]. To perform this conversion, mapping rules\
    \ were established to determine \nhow RDF classes, individuals, object properties,\
    \ data properties, and annotations would \ncorrespond to LPG nodes, properties,\
    \ and edges. Speciﬁcally, RDF classes and individuals \nwere represented as LPG\
    \ nodes, RDF object properties were represented as LPG edges, \nRDF data properties\
    \ were represented as LPG node properties, and RDF annotations were \nrepresented\
    \ as LPG node or edge properties, depending on the context [32]. \nThe ontology\
    \ was then exported from Protégé in an RDF serialization format. A con-\nversion\
    \ script was developed to read the exported RDF ontology and perform the trans-\n\
    formation according to the established mapping rules. This script iterates through\
    \ the RDF \ntriples, converting classes, individuals, object properties, and data\
    \ properties to their cor-\nresponding LPG elements. \nFigure 5. Visual representation\
    \ of the SEDIA Ontology.\nThe ontology was initially developed in Protégé, a popular\
    \ ontology editor, using\nthe OWL format. The ontology was developed as an RDF\
    \ representation to facilitate\nmodeling complex relationships and semantic annotation\
    \ of the raw data from various\nsources, including IoT devices and open data platforms.\
    \ However, the OWL-based RDF\nrepresentation of the ontology is not optimal for\
    \ use in a graph database such as Neo4j.\nNeo4j is based on the Labeled Property\
    \ Graph (LPG) model, which offers certain advantages\nover RDF triple stores,\
    \ including simpliﬁed graph pattern matching, easier querying, and\nmore intuitive\
    \ data modeling [30].\nIn order to take advantage of the beneﬁts offered by the\
    \ LPG model and Neo4j,\nthe ontology needed to be converted from the OWL-based\
    \ RDF representation to an\nLPG representation [31]. To perform this conversion,\
    \ mapping rules were established to\ndetermine how RDF classes, individuals, object\
    \ properties, data properties, and annotations\nwould correspond to LPG nodes,\
    \ properties, and edges. Speciﬁcally, RDF classes and\nindividuals were represented\
    \ as LPG nodes, RDF object properties were represented as LPG\nedges, RDF data\
    \ properties were represented as LPG node properties, and RDF annotations\nwere\
    \ represented as LPG node or edge properties, depending on the context [32].\n\
    The ontology was then exported from Protégé in an RDF serialization format. A\n\
    conversion script was developed to read the exported RDF ontology and perform\
    \ the\ntransformation according to the established mapping rules. This script\
    \ iterates through the\nRDF triples, converting classes, individuals, object properties,\
    \ and data properties to their\ncorresponding LPG elements.\nThe LPG representation\
    \ of the ontology was loaded into a Neo4j graph database,\nenabling more efﬁcient\
    \ data management, processing, and querying. By converting the\nontology to the\
    \ LPG format and leveraging the capabilities of Neo4j, the system can\neffectively\
    \ handle the challenges of processing and analyzing complex, interrelated data\
    \ in\nsmart city applications.\nFuture Internet 2023, 15, 276\n15 of 38\nThe primary\
    \ ontology class, Entity, represents any heterogeneous data source. Two\nsubclasses,\
    \ IoT_Entity and OpenData_Entity, are derived from this class. IoT_Entity repre-\n\
    sents real IoT nodes, while OpenData_Entity represents virtual nodes with data\
    \ from open\nsources. Moreover, the ontology facilitates the representation of\
    \ platforms through the\nPlatform class to describe the information’s origin.\
    \ IoT_Platform and OpenData_Platform\nsubclasses are implemented for IoT platforms\
    \ (e.g., Thingspeak, Ubidots) and open data\nplatforms (e.g., iqair, open_weather,\
    \ weatherbit), respectively. Table 3 summarizes the\nontology classes.\nTable\
    \ 3. Ontology Classes.\nClass\nParent Class\nDescription\nEntity\n-\nGeneral form\
    \ of system entity\nIoT_Entity\nEntity\nEntities of real IoT nodes\nOpenData_Entity\n\
    Entity\nVirtual IoT node entities from open platform data\nPlatform\n-\nOrigin\
    \ of the data\nIoT_Platform\nPlatform\nPlatforms speciﬁcally designed for managing\
    \ and exchanging data from IoT nodes\nOpenData_Platform\nPlatform\nPlatforms that\
    \ provide open access to data from various sources\nLocation\n-\nNode geospatial\
    \ location\nSensor\n-\nNode sensor\nSensorProperty\n-\nMeasurement Category\n\
    LPG edges extend the class hierarchy framework of an ontology, connecting a subject\n\
    and an object with a predicate to form a semantic triplet. A key feature of LPG\
    \ edges is the\nability to link entity instances belonging to different classes\
    \ based on semantic associations\nbetween objects. The hasNeighbor relation, invoking\
    \ neighbor relations due to the distance\nbetween two entities belonging to the\
    \ Entities class, is particularly noteworthy. This relation\nis employed at the\
    \ reasoning level in the PoC application to identify walking paths free of\natmospheric\
    \ pollutants. Table 4 summarizes the ontology relationships.\nTable 4. Ontology\
    \ Relationships.\nRelationship\nSubject\nPredicate\nDescription\nhasLocation\n\
    Entity,\nSensorProperty\nLocation\nEntity or SensorProperty hasLocation Location\n\
    hasPlatform\nEntity\nPlatform\nEntity hasPlatform Platform\nhasSensor\nIoT_Entity\n\
    Sensor\nIoT_Entity hasSensor Sensor\nhasSensorProperty\nOpenData_Entity,\nSensor\n\
    SensorProperty\nOpenData_Entity or Sensor hasSensorProperty\nSensorProperty\n\
    hasNeighbor\nEntity\nEntity\nEntity hasNeighbor Entity\nLPG node properties are\
    \ speciﬁc to each class and describe the raw data received\nfrom respective sources.\
    \ Expressed in various data types these properties identify the\nclass they belong\
    \ to and the type of data they describe. Table 5 summarizes the ontology\nnode\
    \ properties.\nThe proposed ontology reuses multiple established ontologies to\
    \ model IoT and\ngeospatial concepts, ensuring interoperability and a semantically\
    \ rich representation. In\nparticular, the ontology leverages the Semantic Sensor\
    \ Network (SSN) ontology [33], IoT-\nLite ontology [34,35], and GeoSPARQL ontology\
    \ [36]. The SSN ontology is utilized to\nrepresent sensor-related concepts. The\
    \ Sensor entity is aligned with the ssn:Sensor class,\nand the SensorProperty\
    \ entity is aligned with the ssn:Observation class. Additionally, the\nIoT_Platform\
    \ entity is aligned with the ssn:System class, treating an IoT platform as a system\n\
    in the context of IoT. The IoT-Lite ontology is employed to represent IoT-speciﬁc\
    \ con-\ncepts. The IoT_Entity is aligned with the iot-lite:Device class, enabling\
    \ the integration of\ndevice-related information such as manufacturer, model,\
    \ and communication protocol.\nFuture Internet 2023, 15, 276\n16 of 38\nThe GeoSPARQL\
    \ ontology is used to represent geospatial concepts. The Location entity\nis aligned\
    \ with the geo:Point class, providing a standard way to model geographical co-\n\
    ordinates such as latitude, longitude, and altitude. Reusing these ontologies\
    \ is primarily\nintended to promote interoperability with other systems and data\
    \ sources employing the\nsame ontologies. It facilitates data integration and\
    \ exchange between diverse IoT and\ngeospatial systems by ensuring the consistent\
    \ and accurate representation of concepts\nand relationships.\nTable 5. Ontology\
    \ Node Properties.\nProperty\nClass\nType\nDescription\nchannel_id\nIoT_Platform\n\
    Integer\nPlatform channel id\nplatformURL\nIoT_Platform\nString\nThe URL of the\
    \ IoT platform’s API\napiUrl\nOpenData_Platform\nString\nThe base URL of the platform’s\
    \ API\ndataFormat\nOpenData_Platform\nString\nThe format in which the open data\n\
    platform provides the data\ndeviceManufacturer\nIoT_Entity\nString\nManufacturer\
    \ of the IoT device\ndeviceModel\nIoT_Entity\nString\nThe speciﬁc model of the\
    \ IoT device\ncommunicationProtocol\nIoT_Entity\nString\nCommunication protocol\
    \ used by the IoT\ndevice to transmit data\nmanufacturer\nSensor\nString\nThe\
    \ sensor’s manufacturer\nlastCalibrationDate\nSensor\ndateTime\nThe most recent\
    \ date on which the sensor\nwas calibrated\nAlt\nLocation\nDouble\nAltitude\n\
    Lat\nLocation\nDouble\nLatitude\nLong\nLocation\nDouble\nLongitude\nUnit\nSensorProperty\n\
    String\nMeasurement unit\nTimeStamp\nSensorProperty\ndateTime\nTimestamp\nValue\n\
    SensorProperty\nﬂoat\nMeasurement value\nName\nEntity, Platform, IoT_Entity,\n\
    OpenData_Entity, Location,\nIoT_Platform,\nOpenData-Platform, Sensor,\nSensorProperty\n\
    String\nThe name of each entity\n3.6.3. Semantic Annotation\nThe semantic annotation\
    \ service, developed for the purpose of semantically describing\nthe data and\
    \ recording it in the Neo4j database, is a custom service that processes data\n\
    received from the services deﬁned in the Service Layer. Semantic annotation is\
    \ carried out\naccording to the ontology, which models the structure of the data\
    \ as mentioned earlier. The\nservice is written in Python and its main functions\
    \ are to receive ﬁltered data from the\nService Layer, model it, and write it\
    \ in the form of nodes and relations in the Neo4j graph\ndatabase. The Neo4j Python\
    \ Driver is used for interfacing with the Neo4j graph database,\nenabling the\
    \ creation, reading, updating, and querying of graph data.\nThe service program\
    \ consists of two separate modules. One module implements the\nNeo4j base connection\
    \ establishment functions, and the other implements the semantic\nannotation functions.\
    \ The conﬁguration ﬁle contains the base URI, password, and the\nmaximum total\
    \ number of connections allowed per host to be managed by the connection\npool.\
    \ The ﬁle that establishes a connection to the database according to the connection\n\
    information contained in the conﬁguration ﬁle has global driver and logger variables,\
    \ so\nthey can be accessed by other parts of the program. Additionally, it includes\
    \ functions to\nterminate the database connection and establish a new one if necessary.\n\
    Three functions are deﬁned that model the data of IoT nodes and open platforms\
    \ ac-\ncording to the deﬁned ontology. One function models the data collected\
    \ by the Thingspeak\nplatform, with function arguments being the query in Neo4j’s\
    \ Cypher language and the\ndata properties for each IoT node connected to the\
    \ Thingspeak platform. Another function\nmodels the data collected by the Ubidots\
    \ platform and is similar to the previous function\nFuture Internet 2023, 15,\
    \ 276\n17 of 38\nin terms of arguments. This function checks whether the name\
    \ of the variable refers to\ngeospatial data or values of measured quantities\
    \ in order to execute the corresponding\nCypher code. The last function models\
    \ the data collected from open data platforms, with\narguments being the Cypher\
    \ query and the data properties.\nIn Neo4j, a transaction is a series of operations\
    \ performed together as a single, individ-\nual unit of work. The Python driver\
    \ for Neo4j provides a way to work with transactions\nusing the session object.\
    \ This object simpliﬁes the process of executing a Cypher statement\nwithin a\
    \ database write transaction. It handles starting the transaction, committing\
    \ changes,\nand handling any errors that may occur.\nConsidering the way the driver\
    \ function works, two additional functions were created\nto handle write transactions\
    \ for both IoT data and data from open platforms. One function\nis responsible\
    \ for recording IoT data and processes the message from the IoT platforms. It\n\
    establishes a session and performs the registration transaction according to the\
    \ appropriate\nfunctions. Similarly, another function is responsible for writing\
    \ data from open platforms\nand processes the message from the IoT platforms’\
    \ data retrieval requests. A session is\nestablished, and the registration transaction\
    \ is performed according to the relevant function.\nThese functions are directly\
    \ called from the data collection services of the Service Layer. In\nboth cases,\
    \ after the payload conﬁguration is complete, a session is established, and data\n\
    write transactions are performed.\n3.7. Application Layer\nIn the proposed SEDIA\
    \ architecture, the Application Layer comprises the software\nand services constructed\
    \ on top of the foundational platform infrastructure, with the\npurpose of delivering\
    \ distinct functions and services to users. This layer is responsible for\ninterpreting\
    \ data gathered from various sources while presenting a user-friendly interface\n\
    and facilitating system interaction. The Application Layer holds critical importance\
    \ within\nthe overall architecture, as it furnishes essential features that render\
    \ the system a valuable\ntool for its users.\nApplication development generally\
    \ adheres to a three-tier model, encompassing a\nweb application (frontend), an\
    \ API tier (GraphQL), and a database (backend). In a full-stack\napplication employing\
    \ GraphQL, the interface layer is utilized on both the client and server\nsides.\
    \ The frontend is tasked with managing the user interface and issuing GraphQL\n\
    queries to the server, while the backend addresses GraphQL queries, performs required\n\
    database operations, and delivers the requested data back to the client. This\
    \ improves\napplication performance and scalability [37,38]. Furthermore, using\
    \ GraphQL on both\nthe client and server allows for consistent and uniﬁed data\
    \ interaction, regardless of the\ndata’s origin.\nSpeciﬁcally, for the PoC application\
    \ discussed in this paper, the primary aim at the\napplication level is to accumulate\
    \ semantic data for determining the AQI within a desig-\nnated geographical area\
    \ of interest to the user. The ultimate goal is to propose a map route\ncharacterized\
    \ by minimal atmospheric pollutants, based on calculated air quality indicators\n\
    for each area. In the “Green Route” application, users input their starting location\
    \ and\ndestination, and the application computes and displays the recommended\
    \ route, taking\ninto account AQI values from stations in the vicinity of the\
    \ points of interest.\n3.7.1. Utilizing GraphQL API for Improved Application Layer\
    \ Performance\nThis section focuses on the tools used in the application development,\
    \ particularly\nthose that enable the application to interact with the Neo4j database,\
    \ accessing and pre-\nsenting the stored data in an accessible and user-friendly\
    \ format. Particular attention is\ndevoted to the intricacies of Neo4j and the\
    \ employment of the Cypher query language.\nGraphQL, a speciﬁcation for building\
    \ APIs, offers an efﬁcient and ﬂexible alternative to\nRESTful APIs, representing\
    \ complex nested data dependencies in modern applications [39].\nWith a strict\
    \ type system, GraphQL describes the available data for an API. These type\ndeﬁnitions\
    \ specify the API, and the client application can request data based on these\
    \ deﬁ-\nFuture Internet 2023, 15, 276\n18 of 38\nnitions, which also outline the\
    \ API’s entry points. GraphQL boasts numerous advantages\nover RESTful APIs, such\
    \ as ﬂexibility, improved developer experience, better documen-\ntation, real-time\
    \ capabilities, and data integration from different systems. GraphQL uses\na strong\
    \ type system to specify an API’s capabilities. The GraphQL Schema deﬁnes how\n\
    a client can access data, the types and ﬁelds that can be queried or modiﬁed,\
    \ and the\norganization of data sent over the Internet [40]. The Schema is designed\
    \ to match the data\nstructure in the Neo4j database as closely as possible.\n\
    In this study, the Neo4j GraphQL library is employed to leverage its powerful\
    \ feature\nof directly embedding Cypher queries within the GraphQL schema using\
    \ the @cypher\ndirective. This capability allows developers to harness the robustness\
    \ of the Cypher query\nlanguage for conducting intricate calculations or retrieving\
    \ speciﬁc data from the Neo4j\ndatabase. The @cypher directive maps query results\
    \ to the declared GraphQL ﬁeld and\nnecessitates the installation of the Awesome\
    \ Procedures On Cypher (APOC) add-on library.\nApollo, a suite of tools used for\
    \ implementing GraphQL on the server, client application,\nor in the cloud, was\
    \ instrumental in the development of the application in this study.\nSpeciﬁcally,\
    \ Apollo Server was used to generate the GraphQL API, Apollo Client, a client-side\n\
    JavaScript library, was employed to query the GraphQL API from the application,\
    \ and\nApollo Studio’s Explorer, a tool for creating and executing GraphQL queries,\
    \ was utilized for\nthe same.\nIn particular, Apollo Server is employed to build\
    \ GraphQL backends, providing a set\nof tools and libraries for constructing and\
    \ operating a GraphQL server within a Node.js\nenvironment. It is speciﬁcally\
    \ responsible for deﬁning the schema, managing queries and\ndata modiﬁcations\
    \ with resolver functions, connecting to various data sources, overseeing\nquery\
    \ performance through caching and clustering, ensuring security, and facilitating\n\
    real-time data updates.\nOn the other hand, Apollo Client offers a set of tools\
    \ and libraries for interacting\nwith a GraphQL backend and managing client-side\
    \ data. With integrations for numerous\nfrontend frameworks, such as React and\
    \ Vue.js, as well as native mobile versions for iOS\nand Android, Apollo Client\
    \ handles client data caching and can also be employed to\nmanage local state\
    \ data [41].\n3.7.2. Deriving the European Air Quality Index Using GraphQL Query\n\
    Upon accessing the application’s web interface, a GraphQL query is dispatched\
    \ to the\ndatabase to obtain the environmental data from the observation stations,\
    \ encompassing\nthe geographical area displayed on the map. The data retrieval\
    \ query seeks to extract all\nmeasured quantities (SO2, NO2, O3, PM10, PM2.5)\
    \ and the AQI values of the stations, as well\nas their geospatial data for visualization\
    \ purposes. According to the European Air Pollution\nAgency, a higher AQI value\
    \ indicates increased air pollution levels [42]. Consequently, the\nAQI is calculated\
    \ by considering the maximum individual AQI indices of environmental\npollutants\
    \ (Equation (1)).\nAQI = max(AQISO2, AQINO2, AQIO3, AQIPM10, AQIPM2.5)\n(1)\n\
    In this study, the Cypher language’s syntax limitations necessitate the use of\
    \ helper\nfunctions within the Neo4j base, employing the additional APOC library\
    \ for direct combi-\nnatorial calculations of data. These functions take pollutant\
    \ concentration measurements\nas input and return an integer index ranging from\
    \ 0 to 5, corresponding to the verbal\ndescription of air pollution levels. Five\
    \ distinct functions were developed for the monitored\npollutants, and their slopes\
    \ were combined into a new function that accepts a pollutant’s\nname and returns\
    \ the corresponding index value (Figure 6).\nFuture Internet 2023, 15, 276\n19\
    \ of 38\n \nIn this study, the Cypher language’s syntax limitations necessitate\
    \ the use of helper \nfunctions within the Neo4j base, employing the additional\
    \ APOC library for direct com-\nbinatorial calculations of data. These functions\
    \ take pollutant concentration measure-\nments as input and return an integer\
    \ index ranging from 0 to 5, corresponding to the ver-\nbal description of air\
    \ pollution levels. Five distinct functions were developed for the mon-\nitored\
    \ pollutants, and their slopes were combined into a new function that accepts\
    \ a pol-\nlutant’s name and returns the corresponding index value (Figure 6).\
    \ \n \nFigure 6. APOC function to calculate individual AQI for each pollutant.\
    \ (a) APOC custom function \nto calculate AQI for PM10. (b) Merged function that\
    \ calculates AQI for every pollutant. \nBy leveraging the Neo4j GraphQL library’s\
    \ ability to incorporate custom logic into \nthe application API, a Query-type\
    \ GraphQL query was utilized, embedding the Cypher \nlanguage query code. The\
    \ @cypher directive is employed to integrate the Cypher query \nwithin the Schema,\
    \ mapping the query results to the speciﬁed GraphQL ﬁeld. This query \naccepts\
    \ three lists as parameters, containing names of air pollutants, suspended particles,\
    \ \nand verbal air quality indicators, and returns the environmental and geospatial\
    \ data of \nthe stations as a list (Figure 7). \nFigure 6. APOC function to calculate\
    \ individual AQI for each pollutant. (a) APOC custom function\nto calculate AQI\
    \ for PM10. (b) Merged function that calculates AQI for every pollutant.\nBy leveraging\
    \ the Neo4j GraphQL library’s ability to incorporate custom logic into\nthe application\
    \ API, a Query-type GraphQL query was utilized, embedding the Cypher\nlanguage\
    \ query code. The @cypher directive is employed to integrate the Cypher query\n\
    within the Schema, mapping the query results to the speciﬁed GraphQL ﬁeld. This\
    \ query\naccepts three lists as parameters, containing names of air pollutants,\
    \ suspended particles,\nand verbal air quality indicators, and returns the environmental\
    \ and geospatial data of the\nstations as a list (Figure 7).\nFuture Internet\
    \ 2023, 15, x FOR PEER REVIEW \n21 of 41 \n \n \nFigure 7. GraphQL query to retrieve\
    \ environmental and geospatial data. \nUtilizing the additional Neosemantics (ns10)\
    \ library, the query cypher code begins by \nsearching for Entity-labeled entities\
    \ and those labeled as its subclasses with the SubClassOf \n(SCO) relation. For\
    \ each returned station node, paths featuring a hasLocation relation and \nending\
    \ at a Location node are explored, calculating the average longitude and latitude\
    \ as-\nsociated with each station. \nIn this study, the query utilizes the localdatetime\
    \ function in Cypher to obtain the cur-\nrent time in the appropriate geographical\
    \ time zone, which is then used to ﬁlter pollutant \ndata based on the duration\
    \ between the ‘timestamp’ property and the current time Air\nFigure 7. GraphQL\
    \ query to retrieve environmental and geospatial data.\nUtilizing the additional\
    \ Neosemantics (ns10) library, the query cypher code begins by\nsearching for\
    \ Entity-labeled entities and those labeled as its subclasses with the SubClassOf\n\
    (SCO) relation. For each returned station node, paths featuring a hasLocation\
    \ relation and\nFuture Internet 2023, 15, 276\n20 of 38\nending at a Location\
    \ node are explored, calculating the average longitude and latitude\nassociated\
    \ with each station.\nIn this study, the query utilizes the localdatetime function\
    \ in Cypher to obtain the current\ntime in the appropriate geographical time zone,\
    \ which is then used to ﬁlter pollutant data\nbased on the duration between the\
    \ ‘timestamp’ property and the current time. Air pollutant\ndata are ﬁltered for\
    \ the last hour, while particulate pollutant data are ﬁltered for the last\n24-h\
    \ period. The query matches a variable-length relationship pattern that allows\
    \ for any\nnumber of hasSensor relationships between a starting node (which could\
    \ be an IoT_Entity\nor OpenData_Entity) and an intermediate node, followed by\
    \ a single hasSensorProperty\nrelationship between the intermediate node and a\
    \ SensorProperty labeled node. The resulting\nSensorProperty nodes are ﬁltered\
    \ based on whether their ‘name’ property matches any of\nthe pollutants listed\
    \ in a speciﬁc list and their ‘timestamp’ property is within a certain\ntime window.\n\
    The query’s ﬁnal result includes the station name, its geographical coordinates,\
    \ the\nﬁnal AQI, and the pollutant collection (pollutant name, AQI, average value).\
    \ Figure 8\nconsolidates all aspects of the query submission process to the aforementioned\
    \ database\nand the respective technologies employed for the implementation of\
    \ distinct application\ntiers. The diagram demonstrates the interaction between\
    \ individual components, outlining\nthe ﬂow of a request from the client application,\
    \ retrieving environmental data from the\nstations, submitting it to the GraphQL\
    \ API, resolving data from the Neo4j database, and\nreturning it to the client\
    \ for rendering the results in an updated view of the user interface.\nThis comprehensive\
    \ process ensures seamless data retrieval and visualization, providing\nusers\
    \ with relevant and timely information on air quality and pollutant levels within\
    \ the\nspeciﬁed geographical area.\nFuture Internet 2023, 15, x FOR PEER REVIEW\
    \ \n22 of 41 \n \nGraphQL API\nResponse\nApollo\nClient\nRequest\nVue.js\nApollo\n\
    Server\nCypher\n \nFigure 8. Request environmental data retrieval, through the\
    \ full-stack GraphQL implementation. \n3.7.3. Computing Shortest Paths Based on\
    \ Air Pollution Data with GraphQL Mutation \nAfter acquiring the environmental\
    \ data from the stations, users are prompted to in-\nteract with the application\
    \ map and input the geographical locations of their starting point \nand destination,\
    \ enabling the application to compute the recommended route. In this as-\npect\
    \ of the application, a GraphQL query of the mutation type was employed since\
    \ it en-\nables the writing of new data to the database. The query accepts six\
    \ lists as parameters \n(Figure 9), which include the names of air pollutants,\
    \ suspended particles, verbal air qual-\nity indicators, permissible air quality\
    \ indicators, as well as the geographical starting and \nending points of the\
    \ route. The query response returns a list of geospatial data points cor-\nresponding\
    \ to the stations comprising the suggested route. \nFigure 8. Request environmental\
    \ data retrieval, through the full-stack GraphQL implementation.\n3.7.3. Computing\
    \ Shortest Paths Based on Air Pollution Data with GraphQL Mutation\nAfter acquiring\
    \ the environmental data from the stations, users are prompted to\ninteract with\
    \ the application map and input the geographical locations of their starting\n\
    point and destination, enabling the application to compute the recommended route.\
    \ In this\naspect of the application, a GraphQL query of the mutation type was\
    \ employed since it\nenables the writing of new data to the database. The query\
    \ accepts six lists as parameters\n(Figure 9), which include the names of air\
    \ pollutants, suspended particles, verbal air quality\nindicators, permissible\
    \ air quality indicators, as well as the geographical starting and\nFuture Internet\
    \ 2023, 15, 276\n21 of 38\nending points of the route. The query response returns\
    \ a list of geospatial data points\ncorresponding to the stations comprising the\
    \ suggested route.\n \nFigure 8. Request environmental data retrieval, through\
    \ the full-stack GraphQL implementation. \n3.7.3. Computing Shortest Paths Based\
    \ on Air Pollution Data with GraphQL Mutation \nAfter acquiring the environmental\
    \ data from the stations, users are prompted to in-\nteract with the application\
    \ map and input the geographical locations of their starting point \nand destination,\
    \ enabling the application to compute the recommended route. In this as-\npect\
    \ of the application, a GraphQL query of the mutation type was employed since\
    \ it en-\nables the writing of new data to the database. The query accepts six\
    \ lists as parameters \n(Figure 9), which include the names of air pollutants,\
    \ suspended particles, verbal air qual-\nity indicators, permissible air quality\
    \ indicators, as well as the geographical starting and \nending points of the\
    \ route. The query response returns a list of geospatial data points cor-\nresponding\
    \ to the stations comprising the suggested route. \n \nFigure 9. GraphQL mutation\
    \ parameters. \nThe route is determined by computing the AQI of all stations located\
    \ within the \nbroader geographical vicinity of the points of interest. The results\
    \ are ﬁltered to only retain \nthe stations with an index corresponding to the\
    \ following levels: Good, Fair, Moderate, \nand Poor. Following this, the query\
    \ computes the kilometer distance between all potential \ncombinations of stations,\
    \ sorts these results in ascending order, and separately yields a \ndataset containing\
    \ the four nearest nodes for each station. \nSubsequently, the query creates new\
    \ weighted hasNeighbor semantic relationships be-\ntween the ﬁltered nodes within\
    \ the database; these relationships are based on the calcu-\nlated distances.\
    \ This process results in the creation of a graph of interconnected stations,\
    \ \nwhich is subsequently used to compute the shortest “Green Route”—the series\
    \ of points \nFigure 9. GraphQL mutation parameters.\nThe route is determined\
    \ by computing the AQI of all stations located within the\nbroader geographical\
    \ vicinity of the points of interest. The results are ﬁltered to only retain\n\
    the stations with an index corresponding to the following levels: Good, Fair,\
    \ Moderate,\nand Poor. Following this, the query computes the kilometer distance\
    \ between all potential\ncombinations of stations, sorts these results in ascending\
    \ order, and separately yields a\ndataset containing the four nearest nodes for\
    \ each station.\nSubsequently, the query creates new weighted hasNeighbor semantic\
    \ relationships\nbetween the ﬁltered nodes within the database; these relationships\
    \ are based on the calcu-\nlated distances. This process results in the creation\
    \ of a graph of interconnected stations,\nwhich is subsequently used to compute\
    \ the shortest “Green Route”—the series of points\nthe user will traverse en route\
    \ to their destination (Figure 10). The weight assigned to the\nrelationships\
    \ is determined by the calculated distance between the nodes [43].\nFuture Internet\
    \ 2023, 15, x FOR PEER REVIEW \n23 of 41 \n \nthe user will traverse en route\
    \ to their destination (Figure 10). The weight assigned to the \nrelationships\
    \ is determined by the calculated distance between the nodes [43]. \n \nFigure\
    \ 10. Graph of interconnected nodes with hasNeighbor relations. \nIt is crucial\
    \ to highlight that the Cypher code initially incorporates the capability to \n\
    delete any pre-existing hasNeighbor relationships between entities. This facilitates\
    \ the for-\nmation of new hasNeighbor relationships each time the query is run.\
    \ This approach guar-\nantees the generation of new “Green Route” search graphs,\
    \ reﬂecting the most up-to-date \nenvironmental data from the stations\nFigure\
    \ 10. Graph of interconnected nodes with hasNeighbor relations.\nFuture Internet\
    \ 2023, 15, 276\n22 of 38\nIt is crucial to highlight that the Cypher code initially\
    \ incorporates the capability\nto delete any pre-existing hasNeighbor relationships\
    \ between entities. This facilitates the\nformation of new hasNeighbor relationships\
    \ each time the query is run. This approach\nguarantees the generation of new\
    \ “Green Route” search graphs, reﬂecting the most up-to-\ndate environmental data\
    \ from the stations.\nIn summary, the query computes the nearest nodes to user-deﬁned\
    \ starting and ending\npoints (start_node, end_node) within the graph. It uses\
    \ Dijkstra’s algorithm through the\nshortestPath function in Cypher to determine\
    \ the shortest path between these nodes [44,45],\nwhich are connected by the hasNeighbor\
    \ relation. The maximum distance allowed between\nthe given starting and ending\
    \ nodes is set to 15 hops. A succession index is computed for\neach node in the\
    \ path, beginning with the start_node. The query ultimately returns a list\nof\
    \ nodes in the path, comprising the name, latitude, longitude, and marker on the\
    \ path,\nordered by the node marker (Figure 11).\nFuture Internet 2023, 15, x\
    \ FOR PEER REVIEW \n24 of 41 \n \n \nFigure 11. GraphGL mutation example response.\
    \ \n3.7.4. “Green Route” Application Front-End \nVarious software technologies\
    \ were combined to create a web application that pre-\nsents an interactive map\
    \ with routing functionality. The front-end of the developed appli-\ncation is\
    \ a Single Page Application (SPA), a web application that dynamically updates\
    \ the \ncontent of the current page through user interactions rather than loading\
    \ entire new \npages. This speciﬁc application consists of an HTML ﬁle, which\
    \ serves as the central body \nof the application, while its content dynamically\
    \ changes by modifying the Document Ob-\nject Model (DOM). The Vue.js framework\
    \ was employed for the visual component of the \nfront-end application. Bootstrap\
    \ was also used to design and build the front-end visual \nlayout, guaranteeing\
    \ dynamic content responsiveness on mobile devices. \nThe Leaﬂet library, an open-source\
    \ JavaScript library for creating interactive web ap-\nplication maps, was utilized\
    \ alongside Vue.js. The capabilities of Leaﬂet were exploited to \ngenerate customized\
    \ markers, pop-ups, and other features, enhancing the user experience \nof the\
    \ application. Furthermore, the broad compatibility of Leaﬂet with various mapping\
    \ \nproviders, including OpenStreetMap, Google Maps, and Mapbox, provided ﬂexibility\
    \ and \nvariety in terms of mapping resources. Additionally, the Leaﬂet-Routing-Machine\
    \ (LRM) \nplugin, which adds routing capabilities to maps, was used. This plugin\
    \ is instrumental in \nintegrating turn-by-turn directions into the application’s\
    \ maps, facilitating navigation \nwith options for various modes of transportation,\
    \ waypoints, and custom markers. This \nplugin was employed to identify and display\
    \ the suggested “Green Route” on the map. \nFinally, Mapbox, a JavaScript library\
    \ for creating vector maps, was another tool used \nin developing the web application\
    \ The utilization of Mapbox GL which is constructed on\nFigure 11. GraphGL mutation\
    \ example response.\n3.7.4. “Green Route” Application Front-End\nVarious software\
    \ technologies were combined to create a web application that presents\nan interactive\
    \ map with routing functionality. The front-end of the developed application\n\
    is a Single Page Application (SPA), a web application that dynamically updates\
    \ the content\nof the current page through user interactions rather than loading\
    \ entire new pages. This\nspeciﬁc application consists of an HTML ﬁle, which serves\
    \ as the central body of the\napplication, while its content dynamically changes\
    \ by modifying the Document Object\nModel (DOM). The Vue.js framework was employed\
    \ for the visual component of the front-\nend application. Bootstrap was also\
    \ used to design and build the front-end visual layout,\nguaranteeing dynamic\
    \ content responsiveness on mobile devices.\nThe Leaﬂet library, an open-source\
    \ JavaScript library for creating interactive web\napplication maps, was utilized\
    \ alongside Vue.js. The capabilities of Leaﬂet were exploited\nto generate customized\
    \ markers, pop-ups, and other features, enhancing the user experience\nof the\
    \ application. Furthermore, the broad compatibility of Leaﬂet with various mapping\n\
    providers, including OpenStreetMap, Google Maps, and Mapbox, provided ﬂexibility\
    \ and\nvariety in terms of mapping resources. Additionally, the Leaﬂet-Routing-Machine\
    \ (LRM)\nplugin, which adds routing capabilities to maps, was used. This plugin\
    \ is instrumental in\nFuture Internet 2023, 15, 276\n23 of 38\nintegrating turn-by-turn\
    \ directions into the application’s maps, facilitating navigation with\noptions\
    \ for various modes of transportation, waypoints, and custom markers. This plugin\n\
    was employed to identify and display the suggested “Green Route” on the map.\n\
    Finally, Mapbox, a JavaScript library for creating vector maps, was another tool\
    \ used in\ndeveloping the web application. The utilization of Mapbox GL, which\
    \ is constructed on\nWebGL, a JavaScript API designed for interactive 3D and 2D\
    \ graphic rendering, offered a\nhigh-performance and highly customizable geomap\
    \ rendering experience integral to the\napplication’s functionality.\nUpon starting\
    \ the application, a GraphQL query submission to the database is initiated\nto\
    \ retrieve the environmental data from observation stations within the geographical\
    \ area\ndisplayed on the map. The query returns all concentration values and individual\
    \ air quality\nindicators for each pollutant monitored at each station. The overall\
    \ AQI index of each\nstation within the area is also provided, alongside its geospatial\
    \ data for representation on\nthe map. Stations are depicted on the map with geographical\
    \ markers, the color of which\ncorresponds to the AQI level (Figure 12).\nFuture\
    \ Internet 2023, 15, x FOR PEER REVIEW \n25 of 41 \n \neach station within the\
    \ area is also provided, alongside its geospatial data for representa-\ntion on\
    \ the map. Stations are depicted on the map with geographical markers, the color\
    \ of \nwhich corresponds to the AQI level (Figure 12). \n \nFigure 12. Initial\
    \ application interface displaying stations returned by the GraphQL query. \n\
    Upon selecting a station’s geographical marker, a pop-up window displaying the\
    \ sta-\ntion’s environmental data appears on the screen (Figure 13). The upper\
    \ section of the win-\ndow exhibits the overall AQI of the station, with its corresponding\
    \ color representation. \nFollowing this, a table presents the calculated pollutant\
    \ concentrations in µg/m3 and the \nassociated AQI index for each pollutant. The\
    \ individual coloring of each pollutant enables \nusers to discern which pollutants\
    \ contribute to the formation of the overall AQI index. The \nﬁnal section provides\
    \ health-related guidelines and recommendations for both the general \nFigure\
    \ 12. Initial application interface displaying stations returned by the GraphQL\
    \ query.\nUpon selecting a station’s geographical marker, a pop-up window displaying\
    \ the\nstation’s environmental data appears on the screen (Figure 13). The upper\
    \ section of the\nwindow exhibits the overall AQI of the station, with its corresponding\
    \ color representation.\nFuture Internet 2023, 15, 276\n24 of 38\nFollowing this,\
    \ a table presents the calculated pollutant concentrations in µg/m3 and the\n\
    associated AQI index for each pollutant. The individual coloring of each pollutant\
    \ enables\nusers to discern which pollutants contribute to the formation of the\
    \ overall AQI index. The\nﬁnal section provides health-related guidelines and\
    \ recommendations for both the general\npopulation and sensitive groups. These\
    \ messages offer advisory information pertaining to\nactivities that can be undertaken\
    \ given the current AQI.\nFuture Internet 2023, 15, x FOR PEER REVIEW \n \nthe\
    \ Leaﬂet-Routing-Machine plugin processes the starting point, waypoint\ntion point,\
    \ and computes the path. Ultimately, the application exhibits th\nmap in green,\
    \ positions geographical markers in blue at the starting and \nand displays a\
    \ window featuring route navigation instructions (Figure 14)\n \nFigure 13. Examples\
    \ of station environmental data pop-up windows. \nFigure 13. Examples of station\
    \ environmental data pop-up windows.\nSubsequently, the user is provided with\
    \ the option to input the starting and ending\npoints of a desired route. The\
    \ selection of these points is performed by choosing the\ncorresponding locations\
    \ on the map. Upon each selection, a pop-up window emerges,\nprompting the user\
    \ to designate whether the chosen point is the starting or the ending\npoint.\
    \ Following each selection, the geographical coordinates of the point are displayed\n\
    at the top of the application. Upon clicking the “Calculate Path” button, a Mutation-type\n\
    GraphQL query is submitted to the database. The query response yields a list of\
    \ consecutive\ngeospatial data for the stations, which constitute the proposed\
    \ route. Subsequently, the\nLeaﬂet-Routing-Machine plugin processes the starting\
    \ point, waypoints, and destination\npoint, and computes the path. Ultimately,\
    \ the application exhibits the route on the map\nin green, positions geographical\
    \ markers in blue at the starting and ending points, and\ndisplays a window featuring\
    \ route navigation instructions (Figure 14).\nFuture Internet 2023, 15, 276\n\
    25 of 38\nFuture Internet 2023, 15, x FOR PEER REVIEW \n27 of 41 \n \n \n \nFigure\
    \ 14. Illustration of a proposed “Green Route” on the map. \n4. Performance Evaluation\
    \ \nSmart cities face the daunting challenge of managing and processing massive\
    \ vol-\numes of data produced by IoT devices and open-source platforms. As part\
    \ of the evalua-\ntion of the SEDIA platform, three computational experiments\
    \ were performed to evaluate \nthe performance and scalability of the Semantic\
    \ Layer as well as the retrieval of semantic \ndata from the database, after a\
    \ large number of concurrent requests. The experiments were \nconducted considering\
    \ the PoC scenario presented in this study. \nIn the present evaluation, the system\
    \ operates within the context of a VMware virtu-\nalization environment and is\
    \ powered by an AMD EPYC 7543 32-Core Processor, of which \na subset of eight\
    \ cores is speciﬁcally allocated to the virtual machine under consideration. \n\
    An integral component of this setup is the hierarchical cache memory structure\
    \ with 256 \nKB provisioned for L1 data and instruction caches, 4 MB for L2, and\
    \ a signiﬁcant 256 MB \nfor L3 cache, each cache instance being replicated eight\
    \ times, paralleling the number of \nallocated cores. Furthermore, the system\
    \ is equipped with 16 GB of memory, reinforcing \nits potential to handle sizable\
    \ applications and tasks. Memory access optimization across \nthe CPU landscape\
    \ is realized through a single Non-Uniform Memory Access (NUMA) \nnode conﬁguration.\
    \ \nWithin this virtual machine, three Docker containers, each with a discrete\
    \ function, \nare deployed. The initial container hosts the “Green Route” Vue\
    \ application. The second \ncontainer utilizes Apollo Server to execute the GraphQL\
    \ API. A Neo4j graph database re-\nsides in the third container. A virtual network\
    \ facilitates the intercommunication and data \nexchange between these containers,\
    \ ensuring their isolation and security. \nFigure 14. Illustration of a proposed\
    \ “Green Route” on the map.\n4. Performance Evaluation\nSmart cities face the\
    \ daunting challenge of managing and processing massive volumes\nof data produced\
    \ by IoT devices and open-source platforms. As part of the evaluation\nof the\
    \ SEDIA platform, three computational experiments were performed to evaluate the\n\
    performance and scalability of the Semantic Layer as well as the retrieval of\
    \ semantic data\nfrom the database, after a large number of concurrent requests.\
    \ The experiments were\nconducted considering the PoC scenario presented in this\
    \ study.\nIn the present evaluation, the system operates within the context of\
    \ a VMware virtual-\nization environment and is powered by an AMD EPYC 7543 32-Core\
    \ Processor, of which a\nsubset of eight cores is speciﬁcally allocated to the\
    \ virtual machine under consideration. An\nintegral component of this setup is\
    \ the hierarchical cache memory structure with 256 KB\nprovisioned for L1 data\
    \ and instruction caches, 4 MB for L2, and a signiﬁcant 256 MB\nfor L3 cache,\
    \ each cache instance being replicated eight times, paralleling the number of\n\
    allocated cores. Furthermore, the system is equipped with 16 GB of memory, reinforcing\n\
    its potential to handle sizable applications and tasks. Memory access optimization\
    \ across\nthe CPU landscape is realized through a single Non-Uniform Memory Access\
    \ (NUMA)\nnode conﬁguration.\nWithin this virtual machine, three Docker containers,\
    \ each with a discrete function,\nare deployed. The initial container hosts the\
    \ “Green Route” Vue application. The second\ncontainer utilizes Apollo Server\
    \ to execute the GraphQL API. A Neo4j graph database\nresides in the third container.\
    \ A virtual network facilitates the intercommunication and\ndata exchange between\
    \ these containers, ensuring their isolation and security.\nFuture Internet 2023,\
    \ 15, 276\n26 of 38\nExperiment1 aims to study the efﬁciency and scalability of\
    \ the Service Layer in the pro-\nposed architecture, speciﬁcally focusing on the\
    \ custom service processing MQTT messages\nfrom the IoT Middleware Layer. It measures\
    \ total time spent on processing, annotating,\nand storing these messages in the\
    \ Neo4j database to understand system performance and\npossible scalability issues.\
    \ Experiment2 explores the performance of a Python service\nthat uses asyncio\
    \ for asynchronous operations to retrieve, process, and store data from\nopen\
    \ APIs into a Neo4j database. It speciﬁcally analyzes the processing time and\
    \ impacts\nof asynchronous handling on the system’s efﬁciency and effectiveness.\
    \ Experiment3 is\ndesigned to test the system’s performance under stress, by simultaneously\
    \ simulating\nmultiple clients retrieving environmental data from various IoT\
    \ nodes. The objective is\nto understand the system’s capability to handle real-world\
    \ scenarios with a multitude of\nusers concurrently fetching data. The sections\
    \ that follow describe the methodology and\noutcomes of these experiments. For\
    \ increased reliability and robustness of results, each\nexperiment was conducted\
    \ 20 times for each scenario investigated.\n4.1. Experiment1: Performance Evaluation\
    \ of MQTT Message Handling\nThe objective of this experiment is to thoroughly\
    \ investigate the operational efﬁciency\nand scalability of the Service Layer\
    \ in the proposed architectural design. Speciﬁcally, it\nevaluates the custom\
    \ service responsible for processing MQTT messages received by the IoT\nMiddleware\
    \ Layer. This experiment focuses on recording the exact time requirements asso-\n\
    ciated with processing received MQTT messages, semantically annotating them, and\
    \ storing\nthem in the Neo4j database. A comprehensive evaluation of this process\
    \ allows for gaining\nan insightful understanding of system performance and potential\
    \ scalability challenges.\nThis evaluation was achieved using MQTT JMeter plugin\
    \ [46], a tool speciﬁcally\ndesigned for simulating MQTT protocol scenarios. To\
    \ simulate varying loads of IoT devices\npublishing data, a script was created\
    \ to generate multiple clients, each simulating a unique\nIoT device [47]. Each\
    \ of these MQTT clients was set to publish messages to speciﬁc topics\non the\
    \ open source MQTT broker Mosquitto [48–50], emulating the behavior of a real-world\n\
    IoT device sending data updates. The script was executed in Apache JMeter [51].\
    \ The\npublished messages were then received, processed, and written into a Neo4j\
    \ database.\nIn the computational experiment assessing the efﬁciency of an MQTT-based\
    \ message\nprocessing system, the high-performance results are presented in Table\
    \ 6. The minimum\nprocessing times showed just a slight decrease between 10 to\
    \ 15,000 messages. This slight\ndecline, albeit marginal, underlines the system’s\
    \ ability to maintain its efﬁciency under\nincreased load. One observation regarding\
    \ the maximum processing times is the system’s\nperformance when it processes\
    \ larger quantities of messages, particularly when handling\nmore than 8000 messages.\
    \ Even at the upper limit of 2.0881 s for 15,000 messages, the\nsystem demonstrates\
    \ exceptional adaptability to the sheer volume of incoming data.\nTable 6. Experiment1\
    \ results: time metrics for processing MQTT messages across different volumes\n\
    (measured in seconds).\nMQTT Messages\nMin\nMax\nAvg\nStd.dev\n10\n0.0043\n0.0056\n\
    0.0049\n0.0005\n100\n0.0034\n0.0107\n0.0056\n0.0012\n1000\n0.0034\n0.0265\n0.0055\n\
    0.0030\n5000\n0.0034\n0.0399\n0.0056\n0.0033\n8000\n0.0034\n2.0453\n0.0058\n0.0230\n\
    10,000\n0.0033\n2.0643\n0.0058\n0.0208\n15,000\n0.0033\n2.0881\n0.0057\n0.0173\n\
    When considering the average processing times, they consistently remained low\n\
    irrespective of the message quantity, further demonstrating the system’s ability\
    \ to maintain\nefﬁcient message handling operations. The standard deviation values,\
    \ which quantify the\nvariation in processing times, progressively increase with\
    \ the number of messages but\nFuture Internet 2023, 15, 276\n27 of 38\nremain\
    \ relatively low overall. This indicates a high level of consistency in processing\
    \ times,\nensuring reliable performance.\nA critical component of this process,\
    \ vital to achieving these time metrics, is the utiliza-\ntion of a ThreadPoolExecutor.\
    \ Firstly, it allowed the MQTT clients to concurrently operate,\nthereby efﬁciently\
    \ utilizing the system’s resources. Each client, or thread, within the Thread-\n\
    PoolExecutor’s pool could independently process its incoming messages without\
    \ blocking\nthe execution of the other threads. This functionality is particularly\
    \ vital when dealing with\nhigh-volume, real-time data, such as that from IoT\
    \ devices, where delays in processing can\nresult in data loss or inaccurate real-time\
    \ analysis. Secondly, the ThreadPoolExecutor’s\ninternal management of the thread\
    \ life cycle relieved the experiment from the complex task\nof manually creating,\
    \ synchronizing, and terminating threads. By automatically managing\na pool of\
    \ worker threads, the ThreadPoolExecutor was able to swiftly allocate available\n\
    threads to incoming tasks; i.e., processing incoming MQTT messages. Finally, in\
    \ the context\nof the collected time metrics, the ThreadPoolExecutor allowed for\
    \ the accurate measure-\nment of message processing times within each thread.\
    \ As each thread independently\nprocessed its messages, the processing time was\
    \ not inﬂuenced by the concurrent execution\nof other threads. This aspect allowed\
    \ the experiment to gather reliable and isolated timing\nmetrics for each individual\
    \ processing task.\nIn summary, the ﬁndings from this investigation attest to\
    \ the system’s scalability,\nrobustness, and consistency. These favorable characteristics\
    \ are critical in facilitating\nreal-time data processing and subsequent database\
    \ operations, thereby maximizing the\nefﬁciency of IoT-based systems and applications.\
    \ The system’s ability to maintain high\nperformance while handling a considerable\
    \ volume of messages makes it a promising tool\nfor handling large data streams,\
    \ a feature becoming increasingly crucial in the rapidly\nevolving IoT landscape.\n\
    4.2. Experiment2: Performance Evaluation of High Volume HTTP Requests\nThe second\
    \ experiment aims to investigate the performance characteristics of a Python-\n\
    based service that retrieves data from open sources, processes them, and stores\
    \ them into\nthe Neo4j database, using asyncio library for asynchronous operations.\
    \ The experiment’s\nfocus is on measuring and analyzing the total time required\
    \ for processing, annotating, and\nstoring data from varying numbers of open data\
    \ source API responses. The main goal of\nthis experiment is to understand the\
    \ impact of asynchronous processing on the system’s\nefﬁciency and effectiveness\
    \ when handling and writing responses into the Neo4j database.\nIn the experimental\
    \ setup, a high-performance mocking server was employed, de-\nsigned in Python\
    \ using the FastAPI framework [52,53], to simulate high-throughput data\nresponses.\
    \ The server was capable of handling substantial concurrent request volumes,\n\
    thus simulating scenarios of extreme load. It asynchronously operates, meaning\
    \ it can\nconcurrently manage multiple requests without impeding the execution\
    \ of subsequent\nrequests, thereby signiﬁcantly enhancing its capacity to process\
    \ a high volume of requests.\nEach GET request was responded to with a predetermined\
    \ JSON payload, mimicking real\nair pollution data, thus accurately reﬂecting\
    \ real open sources. The utilization of a mock\nserver provided a controlled environment\
    \ and consistent response data for stress testing,\nleading to reliable performance\
    \ metrics.\nIn the assessment of the system’s performance, various request-response\
    \ scenarios\nwere evaluated. In Table 7, the time taken for processing, formatting,\
    \ annotating, and\nwriting data into the Neo4j database is presented. The measurements\
    \ do not include\nthe time required for sending requests and receiving responses\
    \ from the mocking server.\nPerformance metrics for a system were gathered for\
    \ request volumes ranging from 1000\nto 40,000. Various statistical parameters,\
    \ including minimum, maximum, average, 95th\npercentile, and standard deviation\
    \ were measured to assess the system’s responsiveness.\nThis was determined by\
    \ the elapsed time in seconds between sending a request and\nreceiving a response.\n\
    Future Internet 2023, 15, 276\n28 of 38\nTable 7. Experiment2 results: time metrics\
    \ for asynchronous data retrieval and storage in Neo4j\ndatabase (measured in\
    \ seconds).\nResponses\nMin\nMax\nAvg\n95th Pct\nStd.dev\n1000\n0.0200\n2.0742\n\
    0.0230\n0.0225\n0.0649\n5000\n0.0200\n2.1069\n0.0212\n0.0220\n0.0295\n10,000\n\
    0.0195\n2.0978\n0.0209\n0.0219\n0.0208\n15,000\n0.0184\n2.0794\n0.0202\n0.0221\n\
    0.0169\n20,000\n0.0183\n2.0939\n0.0203\n0.0223\n0.0147\n30,000\n0.0185\n2.0843\n\
    0.0210\n0.0243\n0.0120\n40,000\n0.0231\n2.1471\n0.0254\n0.0298\n0.0108\nFor the\
    \ minimum response times, the system manifested minimal ﬂuctuation, with\nvalues\
    \ ranging from 0.0183 s to 0.0231 s. As the number of requests escalated from\
    \ 1000 to\n40,000, the system maintained a consistent minimum response time, indicating\
    \ a robust\ncapacity to handle requests in a timely manner, irrespective of the\
    \ load. The maximum\nresponse times demonstrated relative stability, with values\
    \ marginally varying from 2.0742 s\nto 2.1471 s. This suggests that even under\
    \ heavy load, the system maintained its efﬁcacy in\nprocessing, annotating, and\
    \ storing the received data.\nThe consistency of the average response time indicates\
    \ a consistent level of perfor-\nmance across a range of response numbers. It\
    \ ﬂuctuated between 0.0202 s and 0.0254 s,\nindicating the system’s stability\
    \ under varying load conditions. The 95th percentile re-\nsponse times, a crucial\
    \ metric providing insights about the system’s behavior under peak\nload, showed\
    \ a slight increase as the number of requests escalated, although the incre-\n\
    ment was relatively moderate, ranging from 0.0220 s to 0.0298 s. This reﬂects\
    \ the system’s\nability to maintain relatively swift processing, annotating, and\
    \ storing for the majority of\nresponses, even when under higher loads. The standard\
    \ deviation progressively reduced as\nthe number of requests increased. This reduction\
    \ indicates an improvement in consistency,\nleading to a predictably steady response\
    \ time under varying loads.\nUtilizing asyncio, a crucial component of this process,\
    \ is important for attaining\nthese time metrics due to its core advantage of\
    \ facilitating concurrent execution without\nthe necessity of multithreading or\
    \ multiprocessing. The execution ﬂow, managed using\ncoroutines, allows tasks\
    \ to voluntarily relinquish control during I/O operations, permitting\nother tasks\
    \ to execute, a key characteristic of event-driven programming libraries such\
    \ as\nasyncio. This non-blocking approach to I/O operations can lead to signiﬁcant\
    \ performance\nimprovements, particularly in situations where the system needs\
    \ to handle a large number\nof simultaneous requests, as was the case in the scenarios\
    \ tested. In the particular case under\ndiscussion, the system was dealing with\
    \ many network or database I/O operations. The\nsystem was able to concurrently\
    \ handle many requests, thus effectively utilizing resources\nand delivering high\
    \ performance, as reﬂected by the low average and 95th percentile\nresponse times.\n\
    4.3. Experiment3: Performance Analysis of GraphQL Query Execution on Neo4j\nExperiment3\
    \ aimed to assess the performance of semantic data retrieval under stress,\nby\
    \ designing and executing a test that simulated multiple clients concurrently\
    \ accessing\nenvironmental data from various IoT nodes. The synthetic workload\
    \ was carefully crafted\nto imitate real-world situations where a multitude of\
    \ users might use the application to\nsimultaneously fetch data.\nThe experiment\
    \ was conducted using Apache JMeter [51], an open-source software\ndesigned to\
    \ load test functional behavior and measure performance. JMeter is particularly\n\
    suited to this experiment due to its ability to simulate a heavy load on a server,\
    \ group of\nservers, network, or object to test its strength or analyze overall\
    \ performance under different\nload types. In this context, JMeter’s ability to\
    \ simulate many different users with concurrent\nGraphQL queries was exploited\
    \ to create a robust and realistic testing environment.\nFuture Internet 2023,\
    \ 15, 276\n29 of 38\nTable 8 provides a comprehensive insight into the performance\
    \ of a GraphQL server\ninterfacing a Neo4j database, both running in separate\
    \ Docker containers within a virtual\nnetwork. The parameters evaluated include\
    \ response times, failure rates, throughput, and\nnetwork bandwidth consumption\
    \ under varying user load conditions.\nTable 8. Experiment3 results: performance\
    \ metrics obtained from a GraphQL query accessing the\nNeo4j Database under varying\
    \ user loads.\nGraphQL Query for Environmental Data Retrieval\nExecutions\nResponse\
    \ Time (ms)\nThroughput\nNetwork (KB/s)\n# Users\nFAIL\nError %\nMin\nMax\nAverage\n\
    Transactions/s\nReceived\nSent\n10\n0\n0.00%\n114\n558\n160\n1.11\n0.36\n0.38\n\
    100\n0\n0.00%\n108\n453\n125\n10.13\n3.30\n3.48\n200\n0\n0.00%\n107\n514\n128\n\
    20.19\n6.59\n6.94\n250\n0\n0.00%\n108\n543\n134\n25.33\n8.26\n8.71\n300\n0\n0.00%\n\
    106\n565\n137\n30.71\n10.02\n10.56\n400\n0\n0.00%\n106\n700\n144\n40.63\n13.25\n\
    13.97\n500\n0\n0.00%\n106\n759\n157\n51.11\n16.67\n17.57\n1000\n0\n0.00%\n105\n\
    1058\n200\n102.29\n33.36\n35.16\n2000\n0\n0.00%\n1484\n4832\n2879\n175.70\n57.31\n\
    60.40\n3000\n57\n1.90%\n1600\n107,198\n24,471\n26.05\n9.90\n8.79\n4000\n623\n\
    15.57%\n4129\n95,000\n36,884\n40.64\n31.25\n11.79\n# It designates the number\
    \ of users.\nThe performance metrics were observed for user loads ranging from\
    \ 10 to 4000. For\nlower user loads up to 1000, the system demonstrated exceptional\
    \ resilience and efﬁciency.\nThe average response time maintained was under 200\
    \ ms. The system also showed a\nsteady increase in throughput as the user load\
    \ increased, achieving a peak of approximately\n102 transactions per second at\
    \ 1000 users. This high throughput indicates an efﬁcient use\nof resources and\
    \ well-optimized server and database operations.\nA key aspect of system robustness,\
    \ the failure rate, remained at 0% up to 2000 users,\ndemonstrating the system’s\
    \ ability to handle substantial load without compromising the\nquality of service.\
    \ The network metrics, both data sent and received, followed a linear trend,\n\
    proportionally increasing with the user load, suggesting stable network performance.\n\
    However, beyond 1000 users, the system showed signs of strain. The average response\n\
    times dramatically increased, peaking at over 36 s at 4000 users. Concurrently,\
    \ the failure\nrate also began increasing beyond 2000 users, reaching up to 15.57%\
    \ at 4000 users.\nDespite these constraints under high load, it is critical to\
    \ appreciate the overall perfor-\nmance of the GraphQL server and Neo4j setup\
    \ in individual Docker containers. The system\nperformance and scalability up\
    \ to 1000 users are commendable, indicating well-optimized\noperations and effective\
    \ resource utilization within each Docker container.\nIn conclusion, the successful\
    \ management of up to 1000 simultaneous users with no\ntransaction failures, low\
    \ response times, and a stable network performance showcases the\npotential of\
    \ the adopted architecture. The use of Docker containers allows for process isola-\n\
    tion, straightforward setup, reproducibility, and the efﬁcient use of resources,\
    \ delivering a\nhigh-performance GraphQL server and Neo4j database system for\
    \ a substantial user load.\nThese attributes make this architectural approach\
    \ a promising candidate for developing\nscalable, efﬁcient, and reliable data\
    \ retrieval systems.\n5. Related Work\nThis section brieﬂy presents and discusses\
    \ some relevant studies that propose the use\nof semantic technologies for managing\
    \ and interpreting sensor data, particularly in the\ncontext of environmental\
    \ monitoring and smart cities. Most of the papers describe speciﬁc\nframeworks\
    \ or systems that implement these technologies. The papers generally address\n\
    challenges such as sensor heterogeneity, data quality, real-time processing, and\
    \ scalability.\nFuture Internet 2023, 15, 276\n30 of 38\nA semantic data model\
    \ for the interpretation of environmental streaming data has\nbeen proposed in\
    \ a relevant study [54]. The model uses a lightweight ontology approach\nto represent\
    \ IoT data with the Semantic Web, using cross-domain knowledge to map\nsensor\
    \ streaming data and annotation sensors. The proposed data model has several\n\
    requirements, including data annotation, sensor and station information, lightweight\
    \ data\nmodel, reuse domain knowledge, and semantic reasoning. The authors also\
    \ discussed\npossible technological solutions, such as JSON-LD and RDF-Stream,\
    \ and presented a\nconceptual data model. They then described the implementation\
    \ strategy and prototype\nof their proposed model, which includes a set of URIs\
    \ to identify sensors and sensor data,\nand an output of multi-data models that\
    \ enables service and application.\nA system architecture and implementation of\
    \ an IoT real-time air quality monitoring\nsystem was presented in [55], where\
    \ semantic annotations were integrated into sensor\nstream data for improved interpretation\
    \ and understanding. The system receives raw\nsensor stream data in JSON format\
    \ from the AQI API and processes it by integrating\nsemantic annotations based\
    \ on an ontology. The processed data is then displayed to\nusers in real-time\
    \ using an ASP.NET Core Model-View-Controller (MVC) application,\nLeaﬂet, and\
    \ Apache Cassandra database. The authors also described the technologies\nand\
    \ standards used in the proposed system, such as Spark Streaming, Apache Kafka,\n\
    and Open Geospatial Consortium (OGC) standards. Overall, the system presented\
    \ in\nthis paper demonstrates the potential of integrating semantic annotations\
    \ into sensor\nstream data for better understanding and decision-making in IoT\
    \ applications, such as air\nquality monitoring.\nAn integrated system for real-time\
    \ semantic annotation and interpretation of IoT\nsensor stream data, known as\
    \ IoTSAS, has been proposed [56]. The system architecture\ncomprises two main\
    \ components: Real-Time Semantic Annotation (RTSA) and Real-Time\nInterpreting\
    \ Semantically Annotated (RTISA). The system includes six modules: a real-time\n\
    processing of integration and interpretation of semantics into sensor stream data\
    \ module, a\ndata modeling module, an IoT management metadata module, weather\
    \ alerts and air qual-\nity monitoring modules, and an APIs for external systems\
    \ module. To test the performance\nof the IoTSAS system, a sensor stream data\
    \ simulator was developed, which generates\npseudo-random sensor stream data by\
    \ using the Random C# class in certain ranges de-\nﬁned for each parameter in\
    \ the metadata module. The IoTSAS system was tested on ﬁve\ntesting phases: unit\
    \ test, integration test, system test, acceptance test, and performance\ntesting.\
    \ Based on the performance testing results, the IoTSAS system processed real time\n\
    by annotating with semantics and interpreting the semantic annotations only for\
    \ 138 s for\n1,000,000 sensor observation data, proving the validity of high system\
    \ performance.\nChallenges in achieving interoperability among IoT devices and\
    \ a proposed solution\nleveraging ontologies and machine learning were the focus\
    \ of another relevant study [57].\nThe authors argued that the heterogeneity of\
    \ IoT devices and the lack of a standard\ncommunication protocol between them\
    \ make it difﬁcult to share data and extract useful\ninsights from it. To address\
    \ this issue, they proposed a set of ontologies that can represent\na high-level\
    \ model of the IoT domain and enable interoperability between connected IoT\n\
    systems. The authors used air quality monitoring as a use case to demonstrate\
    \ how their\nproposed approach could work. They proposed a distributed architecture\
    \ for processing\noptimization and collective performance, where a semantic gateway\
    \ is used for inter-IoT\ncommunication, and two servers are used for data storage,\
    \ preprocessing, and ontology.\nThe proposed device model includes features such\
    \ as time features, location, sensors, and\nmetrics features. The authors suggested\
    \ that machine learning models, such as Random\nForest, could be used to extract\
    \ more insights from the data provided by a single device.\nThe ontology allows\
    \ the researchers to gain better insight into the data communicated by\nthe device,\
    \ including Air Quality Index insights, as well as providing other insights about\n\
    the location, features, and prediction metrics.\nAn IoT-based platform for environmental\
    \ data sharing in smart cities, designed ac-\ncording to a three-layered IoT architecture,\
    \ was discussed in [58]. The platform enables\nFuture Internet 2023, 15, 276\n\
    31 of 38\nthe collection, storage, and processing of data from the city environment\
    \ at a local region\nlevel, using Fog resources for local processing, and at the\
    \ city level through services and\nresources dynamically deployed in the cloud.\
    \ The platform uses the concept of adapters\nfor the seamless integration of heterogeneous\
    \ sensors and provides functionalities for Fog\nand Cloud interfaces to improve\
    \ ﬂexibility. The Sensor Markup Language (SenML) data\nrepresentation format was\
    \ adopted for compatibility, but the mapping of the Internation-\nalized Resource\
    \ Identiﬁer (IRI) of the sensor is mandatory to reduce message overload\nand resource\
    \ consumption in constrained devices. The platform enables the application\nof\
    \ big data techniques and machine learning on city environmental data and deﬁnes\
    \ the\ninterrelation of data in a standardized and robust way. The manuscript\
    \ also proposed\nthe Environment Indicators Smart City Ontology (EISCO), which\
    \ covers a broad set of\nenvironmental indicators, making possible the deﬁnition\
    \ of data semantics for Linked Data\nStorage, and enabling the extraction of multidomain\
    \ knowledge.\nA Semantic Smart World Framework (SSWF) for constructing a general\
    \ semantic\nbig data framework for a smart world was the subject of the work discussed\
    \ in [59].\nThe framework includes a universal knowledge base, association rule\
    \ discovery, Service-\nOriented Architecture (SOA), and the use of semantic RDF\
    \ standards. The paper presented\na case study of the SSWF to analyze air pollution\
    \ and weather on migratory birds’ paths,\nand the results showed high accuracy\
    \ in prediction and matching with real data. This\nstudy also revealed a correlation\
    \ between escalating air pollution levels and changing\nweather conditions. Experimental\
    \ results suggest that the framework offers satisfactory\nperformance in handling\
    \ heterogeneous big data.\nAnother semantic framework that integrates IoT with\
    \ machine learning techniques\nfor smart cities was proposed in [60]. The framework\
    \ leverages an urban knowledge\ngraph to model and reason regarding city data,\
    \ and it is designed to handle heterogeneous\nand dynamic data streams. The authors\
    \ presented two use cases to demonstrate the\neffectiveness of the proposed framework:\
    \ pollution detection from vehicles and trafﬁc\npattern analysis. The experiments\
    \ showed that the framework is scalable and efﬁcient, and\nit can provide useful\
    \ insights for decision-making in smart cities. However, the study also\nhas some\
    \ limitations, such as missing data and limited availability of open data, which\
    \ the\nauthors plan to address in future work.\nChallenges and solutions associated\
    \ with implementing a semantic data management\nsystem for air quality monitoring\
    \ in smart cities are the main focus of the OpenSense\nproject [61]. This project\
    \ aims to provide transparent access to air quality data by generating\nmeaningful\
    \ and semantically understandable data. The paper describes a layered semantic\n\
    data management model that adds value to the data through semantic annotations\
    \ that\ndescribe data cleaning and preprocessing, temporal and spatial aggregations,\
    \ and event\nannotations. The authors believe that this type of deployment can\
    \ form the basis for a\ncity-wide infrastructure that enables self-monitoring\
    \ and self-healing using semantic data\nmanagement tools and technologies.\nThe\
    \ proposed approach in this study stands out from related works as it provides\n\
    a comprehensive platform that covers all stages of data management, from gathering\n\
    heterogeneous data to semantic labeling and storage, and from analyzing the data\
    \ to\npresenting the extracted knowledge to users through web applications. Unlike\
    \ previous\nstudies, this methodology dynamically creates relationships based\
    \ on the geographical\ndistance between entities, resulting in more accurate and\
    \ relevant results. Additionally, the\nsystem utilizes open data sources and incorporates\
    \ them into the analysis process, further\nenriching the collected data. Overall,\
    \ this methodology provides a more complete and\neffective approach to data collection\
    \ and analysis, making it a valuable contribution to the\nﬁeld of geospatial data\
    \ management.\nTable 9 presents a qualitative comparison of the presented semantic\
    \ integration plat-\nforms for smart city applications, including the approach\
    \ proposed in this study. The\nplatforms are evaluated based on their semantic\
    \ data models, annotation capabilities, rea-\nFuture Internet 2023, 15, 276\n\
    32 of 38\nsoning, real-time processing, dynamic relationships, geographical data\
    \ handling, machine\nlearning use, data sources, PoC application, and performance\
    \ evaluation.\nTable 9. Qualitative comparison of semantic integration platforms\
    \ for Smart City Applications.\nPlatform\nSemantic\nData Model 1\nSemantic\nAnnotation\n\
    Semantic\nReasoning\nReal Time\nProcessing\nDynamic\nRelationships\nGeospatial\n\
    Data\nMachine\nLearning\nData Sources\nPoC 2 Perf. Eval. 3\nRef.\nDuy\net al.\n\
    Semantic\nOntology\n(SSN, TIME,\nSWEET,\nGEO)\n\x14\n\x14\n\x16\n\x16\n\x14\n\x16\
    \nIoT\n\x16\nNone\n[54]\nSejdiu\net al.\nOnto-Core\n(SensorML,\nO&M, Tans-\nduserML)\n\
    \x14\n\x16\n\x14\n\x16\n\x14\n\x16\nIoT\n\x16\nNone\n[55]\nIoTSAS\nOnto-Core\n\
    (SensorML,\nTans-\nduserML,\nO&M, SOS,\nWNS, SAS,\nSPS)\n\x14\n\x16\n\x14\n\x16\
    \n\x14\n\x16\nIoT\n\x14\nLimited\n[56]\nNoussair\net al.\nDeviceModel\n(Geonames,\n\
    DBpedia)\n\x16\n\x16\n\x16\n\x16\n\x14\nRandom\nForests\nIoT\n\x16\nNone\n[57]\n\
    Rubi\net al.\nEISCO\n(ENVO,\nGCIO, SSN)\n\x16\n\x16\n\x16\n\x16\n\x14\n\x16\n\
    IoT, Open\nData\n\x16\nLimited\n[58]\nSSFW\nSCEO\n(GEO W3C)\n\x16\n\x14\n\x16\n\
    \x16\n\x14\n\x16\nIoT, social\nmedia\n\x16\nLimited\n[59]\nZhang\net al.\nUrban\n\
    Knowledge\nGraph\n\x16\n\x16\n\x16\n\x16\n\x14\nTransfer\nLearning\nIoT,\nmultimedia\n\
    content,\nsocial media,\nand crowd-\nsourcing\n\x16\nLimited\n[60]\nOpenSense\n\
    OpenSense\n(SSN)\n\x14\n\x16\n\x14\n\x16\n\x14\n\x16\nIoT crowd-\nsourcing\n\x14\
    \nNone\n[61]\nSEDIA\nSEDIA\n(SSN, iot-lite,\nGeoSPARQL)\n\x14\n\x14\n\x14\n\x14\
    \ 4\n\x14\n\x16\nIoT, Open\nData\n\x14\nExtensive\nthis\nwork\n1: Semantic models\
    \ that were employed in the relevant study are presented in this column. Where\
    \ the suggested\nontology is speciﬁed, its name is given, followed by the collection\
    \ of semantic standards or ontologies that were\nemployed in parentheses. 2: The\
    \ PoC column refers to the comprehensive, detailed account of the PoC, going\n\
    beyond a mere overview to provide an in-depth understanding of its functionalities\
    \ and operations. 3: There are\nthree distinct levels for the evaluation of performance:\
    \ ‘Extensive’ which involves rigorous and comprehensive\ntesting to evaluate performance\
    \ across multiple parameters; ‘Limited’ which focuses on testing only select features\n\
    or under speciﬁc conditions; and ‘None’ where no testing is performed. 4: Based\
    \ on the geographical distance\nbetween entities.\n6. Discussion and Future Directions\n\
    The rapidly expanding landscape of IoT technology, an integral component of smart\n\
    city development, brings forth an unprecedented proliferation of data, marked\
    \ not only by\nits immense volume but also by its striking heterogeneity. As IoT\
    \ devices, each equipped\nwith unique sensors and interfaces, continuously generate\
    \ a wealth of data, they con-\nsequently contribute to a ﬂood of information that\
    \ is as vast as it is diverse. This vast\nuniverse of information is marked by\
    \ signiﬁcant format and spatial heterogeneity. Format\nheterogeneity arises from\
    \ the multitude of data types and formats generated by varying\nIoT devices. Each\
    \ device, aligned with its speciﬁc functionality and design, produces data\nthat\
    \ are fundamentally different in structure and form. Spatial heterogeneity, in\
    \ contrast,\nemerges from the extensive geographical distribution of IoT devices.\
    \ Data produced reﬂects\na broad spectrum of local conditions, underscoring the\
    \ need for sophisticated analytics\ncapable of comprehending and integrating these\
    \ diverse datasets. This dual heterogeneity,\nwhile presenting both an opportunity\
    \ for garnering rich insights and a barrier to seamless\ndata integration, poses\
    \ a signiﬁcant challenge to the effective operation and evolution of\nsmart cities.\n\
    The SEDIA architecture proposed in this paper offers a promising platform for\
    \ integrat-\ning diverse geographical data that may be utilized across a wide\
    \ variety of application areas.\nThe architecture’s components are capable of\
    \ handling diverse data sources, including\ngeographical information, and support\
    \ a semantically enriched data model that facilitates\neffective data integration\
    \ and analysis. The implementation of SEDIA on top of an existing\nFuture Internet\
    \ 2023, 15, 276\n33 of 38\nIoT middleware enhances its services, capitalizes on\
    \ abstraction levels, and fosters interop-\nerability. The PoC smart city application\
    \ related to air quality monitoring demonstrates the\nefﬁcacy of SEDIA in identifying\
    \ patterns and relationships within the data.\nThree computational experiments\
    \ were performed to evaluate the efﬁciency and the\npotential scalability of the\
    \ proposed system architecture. The ﬁrst scrutinized the Service\nLayer’s effectiveness\
    \ in processing MQTT messages from the Middleware Layer. The\noverall results\
    \ of this experiment underscore the system’s scalability, robustness, and\nconsistency,\
    \ vital for maximizing the efﬁciency of IoT-based systems and applications. The\n\
    demonstrated high-performance handling of substantial message volume, backed by\
    \ the\neffective use of a ThreadPoolExecutor, bolsters the system’s potential\
    \ as a tool for managing\nlarge data streams in the rapidly expanding IoT landscape.\n\
    The second experiment examined the performance of the Service Layer’s effectiveness\n\
    in processing data from open sources through APIs. The experiment demonstrated\
    \ the sys-\ntem’s robust capacity and reliability in managing a signiﬁcant volume\
    \ of requests, exhibiting\nconsistently low response times. The utilization of\
    \ asyncio library played a crucial role in\nachieving these metrics, as its non-blocking\
    \ approach facilitated the efﬁcient handling of\nnumerous simultaneous requests.\
    \ Further research could explore potential enhancements\nto maximize response\
    \ times and reduce variability in response times. Nonetheless, the\ncurrent ﬁndings\
    \ reinforce the system’s prowess in managing substantial request volumes\nwhile\
    \ maintaining consistently satisfactory performance.\nThe third experiment simulated\
    \ a scenario of stress performance of semantic data\nretrieval from the Semantic\
    \ Layer with concurrent users accessing environmental data\nfrom various IoT nodes.\
    \ Despite the constraints under high load, the system’s performance\nand scalability\
    \ of up to 1000 users were laudable, demonstrating the effectiveness of the\n\
    Docker-contained GraphQL server and Neo4j setup.\nFurther optimization could focus\
    \ on handling higher user loads to enhance scalability\nand resilience. In the\
    \ current research, a virtual environment where three Docker containers\nare used,\
    \ each with a distinct purpose, was considered. The ﬁrst container runs a “Green\n\
    Route” Vue application, offering hosting services. The second container uses an\
    \ Apollo\nserver to run the GraphQL API, and the third container hosts a Neo4j\
    \ graph database. These\ncontainers are connected to each other through a virtual\
    \ network that facilitates smooth\ncommunication and secure data exchange while\
    \ maintaining their isolation and security.\nFor future work, it is suggested\
    \ to integrate this Docker installation with Kubernetes, load\nbalancing and replica\
    \ sets to improve system scalability and resilience, ensuring high avail-\nability\
    \ under variable load conditions. This integration has the potential to signiﬁcantly\n\
    improve the platforms’ ability to handle increased workloads while maintaining\
    \ high per-\nformance and uptime. Kubernetes can automate the deployment, scaling,\
    \ and management\nof containerized applications. Applying Kubernetes to our existing\
    \ system can ensure the\nseamless operation of Docker containers while automating\
    \ scaling operations based on\nworkload and performance metrics, enabling more\
    \ efﬁcient use of resources [62–64].\nIn addition, by incorporating load balancing,\
    \ which refers to evenly distributing\nnetwork trafﬁc across multiple servers,\
    \ this approach can avoid overloading a single\nserver. This strategy enhances\
    \ system resilience by helping to evenly distribute work\nacross containers, thereby\
    \ increasing overall system performance. Finally, it is intended\nto explore the\
    \ use of ReplicaSets in Kubernetes, which ensures that a certain number\nof identical\
    \ pod versions are running at any time [65]. This approach protects system\navailability\
    \ in the event that a pod or host machine fails. By including multiple copies\n\
    of each application component in the Kubernetes conﬁguration, improvements in\
    \ system\navailability, concurrent user handling, and disaster recovery capabilities\
    \ are expected.\nWhile such integration introduces additional complexity to initial\
    \ installation and ongoing\nmaintenance, the expected improvements in user experience\
    \ and system performance\ncould provide signiﬁcant rewards.\nUndoubtedly, the\
    \ incorporation of security protocols into the communication process\nintroduces\
    \ additional computational costs, thereby contributing to an increase in overall\n\
    Future Internet 2023, 15, 276\n34 of 38\nprocessing time overhead. The term ‘overhead’\
    \ may refer to multiple aspects, including\nadditional packet transfers, increased\
    \ latency, and the system’s ability to efﬁciently scale.\nOur discussion on the\
    \ overhead of secure data transmission is focused on the utilization of\nMQTT\
    \ with TLS, which was the main mechanism employed in our work. The TLS version\n\
    we adopted in our work is TLS 1.3, which has been made more secure and efﬁcient\
    \ by\nremoving obsolete and weak security algorithms, and reducing the number\
    \ of exchanges\nneeded to complete the handshake. According to a recent study,\
    \ implementing security\nmeasures such as MQTT with TLS can contribute a signiﬁcant\
    \ overhead, leading to a\n10–20% increase in mean response time when deploying\
    \ brokers and clients across a cloud\nplatform and exchanging MQTT messages using\
    \ QoS level 0 on a variety of topics [66].\nIn this scenario, the mean response\
    \ time ranged from 2 to 12 ms. In another study, the\noverheads in IoT systems\
    \ were examined by comparing the more reliable MQTT and the\nless reliable CoAP\
    \ on an Arduino Uno test-bed. The ﬁndings indicate that while MQTT\nprovides a\
    \ more reliable infrastructure, it incurs higher power consumption and latency\n\
    compared to CoAP [67].\nIn certain scenarios, speciﬁcally in hard real-time applications\
    \ such as control processes\nfor smart grids and microgrids (where the maximum\
    \ permissible response time can be as\nlow as 100 ms), the overhead imposed by\
    \ the MQTT + TLS scheme may render it less than\nideal [68]. In an IoT setup,\
    \ akin to the one employed in this study, which utilized multiple\nArduino Uno\
    \ devices with WiFi and MQTT + TLS at QoS level 0, the measured processing\ntime\
    \ for secure transactions of 5 KB (21 packets) indicated a latency of 140 ms.\
    \ In contrast,\nthe latency was a mere 7 ms when security mechanisms were not\
    \ implemented. Other\nschemes such as CoAP + TLS may be more suitable for such\
    \ stringent latency requirements.\nOn the other hand, the scalability of the MQTT\
    \ + TLS scheme, deﬁned as the change in\ntotal response time for a control process\
    \ as the number of tasks increases, has proven to\nbe linear compared to the CoAP\
    \ + TLS scheme which was found to be exponential [68].\nThis is largely because\
    \ the TLS security channel in MQTT needs to be established only\nonce at the beginning,\
    \ leading to a minimal impact on the response time as the number\nof tasks increases.\
    \ Given the similarities in the IoT devices and security mechanisms used\nin our\
    \ work it is reasonable to assert that despite the inherent overhead, the MQTT\
    \ + TLS\nscheme provides a suitable choice for smart city applications, particularly\
    \ for soft real-time\nscenarios such as the green route example discussed in this\
    \ paper.\nAs the present research is focused on scalability in a containerized\
    \ environment,\nthe performance implications of operating Docker containers in\
    \ a virtual machine (VM)\nenvironment must be considered. While containerization\
    \ offers several beneﬁts such as\nportability and ease of deployment, it is essential\
    \ to consider the impact it may have on\nsystem latency, especially when dealing\
    \ with cloud-to-edge communications. To assess VM-\nbased containerization overhead\
    \ a simple experiment was conducted. In this experiment,\nnetwork latency was\
    \ measured using Netperf’s request/response mode [69]. The client\nruns on one\
    \ host while the server runs on another host, both with Docker and without\nDocker\
    \ for comparison. The client sends 100-byte messages to the server. Upon receipt\n\
    of each message, the server immediately responds, creating a round trip. This\
    \ process\ncontinuously repeats, and the transaction rate, i.e., the number of\
    \ request/response pairs\ncompleted per second, allows for the calculation of\
    \ network latency. The ﬁndings from\nthis experiment indicate that the latency\
    \ of a Docker container running in a VM (0.093 ms)\nis 2.5 times higher compared\
    \ to a non-containerized server (0.037 ms). This is primarily\ndue to Docker’s\
    \ use of Network Address Translation (NAT) to manage network ports\nand the added\
    \ virtual device layer created by the VM [70]. Both of these factors result in\n\
    extra processing steps, which contribute to increased latency. Future work would\
    \ beneﬁt\nfrom evaluating the system’s performance by operating containers directly\
    \ on the bare\nmetal to avoid virtualization overheads and leveraging modern container\
    \ technologies\nsuch as Kubernetes.\nThe performance implications of mapping cloud\
    \ services to edge nodes require con-\nsideration of several crucial factors,\
    \ including transmission time inﬂuenced by distance,\nFuture Internet 2023, 15,\
    \ 276\n35 of 38\ntransmission medium, and network trafﬁc, the processing time\
    \ for data preparation and\nserver processing, propagation delay, queuing time\
    \ due to network congestion, encryption\nand decryption times for security protocols,\
    \ communication protocol overhead, container-\nrelated delays, network jitter,\
    \ and hardware performance of IoT devices and servers. These\nfactors collectively\
    \ impact latency in the communication between cloud services and edge\nnodes.\
    \ Detailed performance analysis of the SEDIA platform based on the above factors\n\
    will be conducted in the future.\nAdditionally, as future work, machine learning\
    \ algorithms can be incorporated into\nthe Application Layer of SEDIA to further\
    \ process and analyze the retrieved data. This\ncan enable the generation of valuable\
    \ insights, predictions, and recommendations that can\nenhance the overall performance\
    \ and effectiveness of the proposed solution. For example,\nmachine learning algorithms\
    \ can be used to predict air quality levels based on historical\ndata and other\
    \ environmental factors. Additionally, machine learning can be used to\nidentify\
    \ patterns and relationships within the data that may not be immediately apparent,\n\
    enabling more effective decision-making and resource allocation. Therefore, incorporating\n\
    machine learning algorithms into SEDIA can enhance the platform’s capabilities\
    \ and enable\nmore effective monitoring and mitigation of various urban issues.\n\
    7. Conclusions\nIn this paper, we introduced SEDIA, a novel platform designed\
    \ for data management\nand geographical information utilization, speciﬁcally tailored\
    \ for the development of\nsmart city applications. SEDIA stands out by providing\
    \ a comprehensive solution that\nencompasses the full cycle of data handling:\
    \ gathering, semantic labeling, storage, analysis,\nand presentation. SEDIA places\
    \ emphasis on semantic enrichment and geographical\nrelationships, which are not\
    \ typically at the forefront of similar studies. The platform\nutilizes ontology\
    \ classes and properties to semantically annotate collected data, and the\nNeo4j\
    \ graph database to facilitate the recognition of patterns and relationships within\
    \ the\ndata. The PoC smart city application related to air quality monitoring\
    \ demonstrated the\nefﬁcacy of SEDIA in monitoring and mitigating air pollution\
    \ in urban environments. The\nimplications of this research are signiﬁcant, as\
    \ SEDIA has the potential to be used in a wide\nrange of smart city applications\
    \ beyond air quality monitoring, ultimately improving the\nquality of life for\
    \ citizens.\nAuthor Contributions: Conceptualization, C.G.; Methodology, D.L.\
    \ and C.G.; Software, D.L.; Valida-\ntion, D.L. and C.G.; Formal analysis, C.G.;\
    \ Investigation, D.L. and C.G.; Resources, D.L. and C.G.;\nData curation, C.G.;\
    \ Writing—original draft, D.L.; Writing—review & editing, C.G.; Visualization,\n\
    D.L. and C.G.; Supervision, C.G.; Project administration, C.G.; Funding acquisition,\
    \ C.G. All authors\nhave read and agreed to the published version of the manuscript.\n\
    Funding: This research was funded by the “Research e-Infrastructure [e-Aegean\
    \ R&D Network]\nAction 1.2 e-Aegean Geospatial data services” project, Code Number\
    \ MIS 5046494, which is im-\nplemented within the framework of the “Regional Excellence”\
    \ Action of the Operational Program\n“Competitiveness, Entrepreneurship and Innovation”.\
    \ The action was cofunded by the European\nRegional Development Fund (ERDF) and\
    \ the Greek State [Partnership and Cooperation Agreement\n2014–2020].\nData Availability\
    \ Statement: Data will be made available on request.\nAcknowledgments: We express\
    \ our gratitude to our colleagues who have been involved in the\n“Research e-Infrastructure\
    \ [e-Aegean R&D Network] Action 1.2 e-Aegean Geospatial data services”\nproject\
    \ for their valuable support throughout the research and development activities\
    \ presented in\nthis study.\nConﬂicts of Interest: The authors declare no conﬂict\
    \ of interest.\nFuture Internet 2023, 15, 276\n36 of 38\nReferences\n1.\nGavalas,\
    \ D.; Nicopolitidis, P.; Kameas, A.; Goumopoulos, C.; Bellavista, P.; Lambrinos,\
    \ L.; Guo, B. Smart cities: Recent trends,\nmethodologies, and applications. Wirel.\
    \ Commun. Mob. Comput. 2017, 2017, 7090963. [CrossRef]\n2.\nMahanthappa, S.; Chandavarkar,\
    \ B.R. Data Formats and Its Research Challenges in IoT: A Survey. In Evolutionary\
    \ Computing and\nMobile Sustainable Networks; Lecture Notes on Data Engineering\
    \ and Communications Technologies; Suma, V., Bouhmala, N.,\nWang, H., Eds.; Springer:\
    \ Singapore, 2021; Volume 53. [CrossRef]\n3.\nChaturvedi, K.; Kolbe, T.H. Towards\
    \ establishing cross-platform interoperability for sensors in smart cities. Sensors\
    \ 2019, 19, 562.\n[CrossRef]\n4.\nPliatsos, A.; Kotis, K.; Goumopoulos, C. A systematic\
    \ review on semantic interoperability in the IoE-enabled smart cities. Internet\n\
    Things 2023, 22, 100754. [CrossRef]\n5.\nMargan, B.; Hakimpour, F.; Saber, M.\
    \ Linked data geo-statistical analysis of air pollution in urban areas. In Proceedings\
    \ of the\n2018 4th International Conference on Web Research (ICWR), Tehran, Iran,\
    \ 25–26 April 2018; pp. 86–91. [CrossRef]\n6.\nPereira, J.; Batista, T.; Cavalcante,\
    \ E.; Souza, A.; Lopes, F.; Cacho, N. A platform for integrating heterogeneous\
    \ data and developing\nsmart city applications. Future Gener. Comput. Syst. 2022,\
    \ 128, 552–566. [CrossRef]\n7.\nAhlgren, B.; Hidell, M.; Ngai, E.C.H. Internet\
    \ of things for smart cities: Interoperability and open data. IEEE Internet Comput.\n\
    2016, 20, 52–56. [CrossRef]\n8.\nKibria, M.G.; Ali, S.; Jarwar, M.A.; Chong, I.\
    \ A framework to support data interoperability in web objects based IoT environments.\n\
    In Proceedings of the 2017 International Conference on Information and Communication\
    \ Technology Convergence (ICTC), Jeju\nIsland, Korea, 18–20 October 2017; pp.\
    \ 29–31. [CrossRef]\n9.\nNagasundaram, D.; Manickam, S.; Karuppayah, S. Semantic\
    \ Interoperability Issues and Challenges in IoT: A Brief Review. In\nInternational\
    \ Conference on Intelligence of Things; Springer International Publishing: Cham,\
    \ Switzerland, 2022; pp. 16–31. [CrossRef]\n10.\nGyrard, A.; Zimmermann, A.; Sheth,\
    \ A. Building IoT-based applications for smart cities: How can ontology catalogs\
    \ help? IEEE\nInternet Things J. 2018, 5, 3978–3990. [CrossRef] [PubMed]\n11.\n\
    Santana, E.F.Z.; Chaves, A.P.; Gerosa, M.A.; Kon, F.; Milojicic, D.S. Software\
    \ platforms for smart cities: Concepts, requirements,\nchallenges, and a uniﬁed\
    \ reference architecture. ACM Comput. Surv. 2017, 50, 1–37. [CrossRef]\n12.\n\
    Abadía, J.J.P.; Walther, C.; Osman, A.; Smarsly, K. A systematic survey of Internet\
    \ of Things frameworks for smart city applications.\nSustain. Cities Soc. 2022,\
    \ 83, 103949. [CrossRef]\n13.\n7 Million Premature Deaths Annually Linked to Air\
    \ Pollution. Available online: https://www.who.int/news/item/25-03-2014-7\n-million-premature-deaths-annually-linked-to-air-pollution\
    \ (accessed on 4 July 2023).\n14.\nMalekafzali, S.; Jozi, S.A.; Kasheﬁolasl, M.;\
    \ Zarimdar, M.; Shati, M. Scientometric analysis of health impact assessment of\
    \ outdoor\nair pollution by WHO-AirQ tool (2005–2019). J. Air Pollut. Health 2021,\
    \ 6, 101–116. [CrossRef]\n15.\nCromar, K.; Lazrak, N. Risk Communication of Ambient\
    \ Air Pollution in the WHO European Region: Review of Air Quality\nIndexes and\
    \ Lessons Learned. World Health Organization. Regional Ofﬁce for Europe. 2023.\
    \ Available online: https://apps.who.\nint/iris/handle/10665/365787 (accessed\
    \ on 4 July 2023).\n16.\nWorld Health Organization. WHO Global Air Quality Guidelines:\
    \ Particulate Matter (PM2.5 and PM10), Ozone, Nitrogen\nDioxide, Sulfur Dioxide\
    \ and Carbon Monoxide. World Health Organization. 2021. Available online: https://apps.who.int/iris/\n\
    handle/10665/345329 (accessed on 4 July 2023).\n17.\nKang, Y.; Aye, L.; Ngo, T.D.;\
    \ Zhou, J. Performance evaluation of low-cost air quality sensors: A review. Sci.\
    \ Total Environ. 2022,\n818, 151769. [CrossRef]\n18.\nKortoçi, P.; Motlagh, N.H.;\
    \ Zaidan, M.A.; Fung, P.L.; Varjonen, S.; Rebeiro-Hargrave, A.; Tarkoma, S. Air\
    \ pollution exposure\nmonitoring using portable low-cost air quality sensors.\
    \ Smart Health 2022, 23, 100241. [CrossRef]\n19.\nAirVisual API. Available online:\
    \ https://api-docs.iqair.com/ (accessed on 4 July 2023).\n20.\nAir Quality API.\
    \ Available online: https://api-ninjas.com/api/airquality (accessed on 4 July\
    \ 2023).\n21.\nAir Pollution API. Available online: https://openweathermap.org/api/air-pollution\
    \ (accessed on 4 July 2023).\n22.\nCurrent Air Quality API. Available online:\
    \ https://www.weatherbit.io/api/airquality-current (accessed on 4 July 2023).\n\
    23.\nDave, M.; Doshi, J.; Arolkar, H. MQTT-CoAP interconnector: IoT interoperability\
    \ solution for application layer protocols. In\nProceedings of the 2020 Fourth\
    \ International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud)\
    \ (I-SMAC),\nPalladam, India, 7–9 October 2020; pp. 122–127. [CrossRef]\n24.\n\
    Jara Ochoa, H.J.; Peña, R.; Ledo Mezquita, Y.; Gonzalez, E.; Camacho-Leon, S.\
    \ Comparative Analysis of Power Consumption\nbetween MQTT and HTTP Protocols in\
    \ an IoT Platform Designed and Implemented for Remote Real-Time Monitoring of\n\
    Long-Term Cold Chain Transport Operations. Sensors 2023, 23, 4896. [CrossRef]\
    \ [PubMed]\n25.\nHattingh, C. Using Asyncio in Python: Understanding Python’s\
    \ Asynchronous Programming Features; O’ Reilly Media, Inc.: Sebastopol,\nCA, USA,\
    \ 2020.\n26.\nMonteiro, J.; Sá, F.; Bernardino, J. Experimental Evaluation of\
    \ Graph Databases: JanusGraph, Nebula Graph, Neo4j, and\nTigerGraph. Appl. Sci.\
    \ 2023, 13, 5770. [CrossRef]\n27.\nKuijpers, J.; Fletcher, G.; Lindaaker, T.;\
    \ Yakovets, N. Path Indexing in the Cypher Query Pipeline. EDBT 2021, 582–587.\
    \ [CrossRef]\n28.\nGreen, A.; Guagliardo, P.; Libkin, L.; Lindaaker, T.; Marsault,\
    \ V.; Plantikow, S.; Voigt, H. Updating graph databases with Cypher.\nProc. VLDB\
    \ Endow. 2019, 12, 2242–2254. [CrossRef]\nFuture Internet 2023, 15, 276\n37 of\
    \ 38\n29.\nSeifer, P.; Härtel, J.; Leinberger, M.; Lämmel, R.; Staab, S. Empirical\
    \ study on the usage of graph query languages in open source\nJava projects. In\
    \ Proceedings of the 12th ACM SIGPLAN International Conference on Software Language\
    \ Engineering, Athens,\nGreece, 20–22 October 2019; pp. 152–166. [CrossRef]\n\
    30.\nDi Pierro, D.; Ferilli, S.; Redavid, D. LPG-Based Knowledge Graphs: A Survey,\
    \ a Proposal and Current Trends. Information 2023,\n14, 154. [CrossRef]\n31.\n\
    Ferilli, S.; Redavid, D.; Di Pierro, D. LPG-based Ontologies as Schemas for Graph\
    \ DBs. In Proceedings of the 30th Italian\nSymposium on Advanced Database Systems,\
    \ SEBD, Pisa, Italy, 19–22 June 2022; pp. 19–22. Available online: https://ceur-ws.\n\
    org/Vol-3194/paper31.pdf (accessed on 4 July 2023).\n32.\nFerilli, S. Integration\
    \ strategy and tool between formal ontology and graph database technology. Electronics\
    \ 2021, 10, 2616.\n[CrossRef]\n33.\nCompton, M.; Barnaghi, P.; Bermudez, L.; Garcia-Castro,\
    \ R.; Corcho, O.; Cox, S.; Taylor, K. The SSN ontology of the W3C semantic\nsensor\
    \ network incubator group. J. Web Semant. 2012, 17, 25–32. [CrossRef]\n34.\nBermudez-Edo,\
    \ M.; Elsaleh, T.; Barnaghi, P.; Taylor, K. IoT-Lite: A lightweight semantic model\
    \ for the internet of things and its\nuse with dynamic semantics. Pers. Ubiquitous\
    \ Comput. 2017, 21, 475–487. [CrossRef]\n35.\nBermudez-Edo, M.; Elsaleh, T.; Barnaghi,\
    \ P.; Taylor, K. IoT-Lite: A lightweight semantic model for the Internet of Things.\
    \ In\nProceedings of the 2016 INTL IEEE Conferences on Ubiquitous Intelligence\
    \ & Computing, Advanced and Trusted Computing,\nScalable Computing and Communications,\
    \ Cloud and Big Data Computing, Internet of People, and Smart World Congress,\n\
    Toulouse, France, 18–21 July 2016; pp. 90–97. [CrossRef]\n36.\nBattle, R.; Kolas,\
    \ D. Geosparql: Enabling a geospatial semantic web. Semant. Web J. 2011, 3, 355–370.\
    \ Available online:\nhttps://www.semantic-web-journal.net/sites/default/ﬁles/swj176_1.pdf\
    \ (accessed on 4 July 2023). [CrossRef]\n37.\nLawi, A.; Panggabean, B.L.; Yoshida,\
    \ T. Evaluating graphql and rest api services performance in a massive and intensive\
    \ accessible\ninformation system. Computers 2021, 10, 138. [CrossRef]\n38.\nKhan,\
    \ R.; Noor Mian, A. Sustainable IoT sensing applications development through graphQL-based\
    \ abstraction layer. Electronics\n2020, 9, 564. [CrossRef]\n39.\nHartig, O.; Pérez,\
    \ J. Semantics and complexity of GraphQL. In Proceedings of the 2018 World Wide\
    \ Web Conference, Lyon, France,\n23–27 April 2018; pp. 1155–1164. [CrossRef]\n\
    40.\nWerbrouck, J.; Senthilvel, M.; Beetz, J.; Bourreau, P.; Van Berlo, L. Semantic\
    \ query languages for knowledge-based web services in\na construction context.\
    \ In Proceedings of the 26th International Workshop on Intelligent Computing in\
    \ Engineering, EG-ICE 2019,\nLeuven, Belgium, 30 June–3 July 2019; Volume 2394.\
    \ Available online: https://ceur-ws.org/Vol-2394/paper03.pdf (accessed on\n4 July\
    \ 2023).\n41.\nLyon, W. Fullstack GraphQL Applications with GRANDstack Essential\
    \ Excerpts; Manning Publications: Shelter Island, NY, USA, 2022.\n42.\nFino, A.;\
    \ Vichi, F.; Leonardi, C.; Mukhopadhyay, K. An overview of experiences made and\
    \ tools used to inform the public on\nambient air quality. Atmosphere 2021, 12,\
    \ 1524. [CrossRef]\n43.\nErdemir, M.; Göz, F.; Mutlu, A.; Karagoz, P. Comparison\
    \ of Querying Performance of Neo4j on Graph and Hyper-graph Data\nModel. In Proceedings\
    \ of the KDIR, Vienna, Austria, 17–19 September 2019; pp. 397–404. [CrossRef]\n\
    44.\nVágner, A. Route planning on GTFS using Neo4j. In Annales Mathematicae et\
    \ Informaticae; Eszterházy Károly Egyetem Líceum\nKiadó: Eger, Hungary, 2021;\
    \ Volume 54, pp. 163–179. [CrossRef]\n45.\nChang, V.; Songala, Y.K.; Xu, Q.A.;\
    \ Liu, B.S.C. Scientiﬁc Data Analysis using Neo4j. In Proceedings of the FEMIB,\
    \ Online, 24–25\nApril 2022; pp. 75–84. [CrossRef]\n46.\nMQTT JMeter Plugin. Available\
    \ online: https://github.com/emqx/mqtt-jmeter/tree/master (accessed on 4 July\
    \ 2023).\n47.\nJung, I.H. Design and Implementation of MQTT Load Test System.\
    \ Turk. J. Comput. Math. Educ. 2021, 12, 564–572. [CrossRef]\n48.\nMishra, B.;\
    \ Mishra, B.; Kertesz, A. Stress-testing MQTT brokers: A comparative analysis\
    \ of performance measurements. Energies\n2021, 14, 5817. [CrossRef]\n49.\nEclipse\
    \ Mosquitto. Available online: https://mosquitto.org/ (accessed on 4 July 2023).\n\
    50.\nBender, M.; Kirdan, E.; Pahl, M.O.; Carle, G. Open-source mqtt evaluation.\
    \ In Proceedings of the 2021 IEEE 18th Annual Consumer\nCommunications & Networking\
    \ Conference (CCNC), Las Vegas, NV, USA, 9–12 January 2021; pp. 1–4. [CrossRef]\n\
    51.\nApache JMeter. Available online: https://jmeter.apache.org/ (accessed on\
    \ 4 July 2023).\n52.\nPeralta, J.H. Microservice APIs: Using Python, Flask, FastAPI,\
    \ OpenAPI and More; Manning Publications: Shelter Island, NY, USA, 2023.\n53.\n\
    Tragura, S.J.C. Building Python Microservices with FastAPI: Build Secure, Scalable,\
    \ and Structured Python Microservices from Design\nConcepts to Infrastructure;\
    \ Packt Publishing: Birmingham, UK, 2022.\n54.\nDuy, T.K.; Quirchmayr, G.; Tjoa,\
    \ A.; Hanh, H.H. A semantic data model for the interpretion of environmental streaming\
    \ data. In\nProceedings of the 2017 Seventh International Conference on Information\
    \ Science and Technology (ICIST), Da Nang, Vietnam,\n16–19 April 2017; pp. 376–380.\
    \ [CrossRef]\n55.\nSejdiu, B.; Ismaili, F.; Ahmedi, L. A Real-Time Integration\
    \ of Semantic Annotations into Air Quality Monitoring Sensor Data.\nIn International\
    \ Conference on Software Technologies; Springer International Publishing: Cham,\
    \ Switzerland, 2020; pp. 98–113.\n[CrossRef]\n56.\nSejdiu, B.; Ismaili, F.; Ahmedi,\
    \ L. IoTSAS: An integrated system for real-time semantic annotation and interpretation\
    \ of IoT sensor\nstream data. Computers 2021, 10, 127. [CrossRef]\nFuture Internet\
    \ 2023, 15, 276\n38 of 38\n57.\nNoussair, L.; Fernández Breis, J.T.; Zahir, J.;\
    \ Mousannif, H. Towards distributed learning in internet of things. Air quality\n\
    monitoring use case. In New Trends in Model and Data Engineering: MEDI 2019 International\
    \ Workshops, DETECT, DSSGA, TRIDENT,\nToulouse, France, October 28–31, 2019; Proceedings\
    \ 9; Springer International Publishing: Cham, Switzerland, 2019; pp. 154–159.\n\
    [CrossRef]\n58.\nRubí, J.N.S.; de Lira Gondim, P.R. IoT-based platform for environment\
    \ data sharing in smart cities. Int. J. Commun. Syst. 2021,\n34, e4515. [CrossRef]\n\
    59.\nElDahshan, K.; Elsayed, E.K.; Mancy, H. Semantic smart world framework. Appl.\
    \ Comput. Intell. Soft Comput. 2020, 2020, 8081578.\n[CrossRef]\n60.\nZhang, N.;\
    \ Chen, H.; Chen, X.; Chen, J. Semantic framework of internet of things for smart\
    \ cities: Case studies. Sensors 2016,\n16, 1501. [CrossRef]\n61.\nCalbimonte,\
    \ J.P.; Eberle, J.; Aberer, K. Semantic data layers in air quality monitoring\
    \ for smarter cities. In Proceedings of the Sixth\nWorkshop on Semantics for Smarter\
    \ Cities, Bethlehem, PA, USA, 11–12 October 2015; No. CONF. pp. 3–19. Available\
    \ online:\nhttps://infoscience.epﬂ.ch/record/212731 (accessed on 4 July 2023).\n\
    62.\nKristiani, E.; Yang, C.T.; Huang, C.Y.; Wang, Y.T.; Ko, P.C. The implementation\
    \ of a cloud-edge computing architecture using\nOpenStack and Kubernetes for air\
    \ quality monitoring application. Mob. Netw. Appl. 2021, 26, 1070–1092. [CrossRef]\n\
    63.\nOgawa, K.; Kanai, K.; Nakamura, K.; Kanemitsu, H.; Katto, J.; Nakazato, H.\
    \ IoT device virtualization for efﬁcient resource\nutilization in smart city IoT\
    \ platform. In Proceedings of the 2019 IEEE International Conference on Pervasive\
    \ Computing and\nCommunications Workshops (PerCom Workshops), Kyoto, Japan, 11–15\
    \ March 2019; pp. 419–422. [CrossRef]\n64.\nMuthanna, M.S.A.; Tselykh, A. Development\
    \ of Docker and Kubernetes Orchestration Platforms for Industrial Internet of\
    \ Things\nService Migration. In Proceedings of the 2022 International Conference\
    \ on Modern Network Technologies (MoNeTec), Moscow,\nRussia, 27–29 October 2022;\
    \ pp. 1–6. [CrossRef]\n65.\nMuralidharan, S.; Yoo, B.; Ko, H. Designing a semantic\
    \ digital twin model for IoT. In Proceedings of the 2020 IEEE International\n\
    Conference on Consumer Electronics (ICCE), Las Vegas, NV, USA, 4–6 January 2020;\
    \ pp. 1–2. [CrossRef]\n66.\nLiu, Y.; Al-Masri, E. Evaluating the reliability of\
    \ MQTT with comparative analysis. In Proceedings of the 2021 IEEE 4th\nInternational\
    \ Conference on Knowledge Innovation and Invention (ICKII), Taichung, Taiwan,\
    \ 23–25 July 2021; pp. 24–29.\n[CrossRef]\n67.\nSafaei, B.; Monazzah, A.M.H.;\
    \ Bafroei, M.B.; Ejlali, A. Reliability side-effects in Internet of Things application\
    \ layer protocols. In\nProceedings of the 2017 2nd International Conference on\
    \ System Reliability and Safety (ICSRS), Milan, Italy, 20–22 December\n2017; pp.\
    \ 207–212. [CrossRef]\n68.\nKondoro, A.; Dhaou, I.B.; Tenhunen, H.; Mvungi, N.\
    \ Real time performance analysis of secure IoT protocols for microgrid\ncommunication.\
    \ Future Gener. Comput. Syst. 2021, 116, 1–12. [CrossRef]\n69.\nNetperf Homepage.\
    \ Available online: https://hewlettpackard.github.io/netperf/ (accessed on 4 July\
    \ 2023).\n70.\nRuan, B.; Huang, H.; Wu, S.; Jin, H. A performance study of containers\
    \ in cloud environment. In Advances in Services Computing:\n10th Asia-Paciﬁc Services\
    \ Computing Conference, APSCC 2016, Zhangjiajie, China, 16–18 November 2016; Proceedings\
    \ 10; Springer\nInternational Publishing: Cham, Switzerland, 2016; pp. 343–356.\
    \ [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions and data contained\
    \ in all publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: '>'
  journal: Future internet
  limitations: '>'
  pdf_link: https://www.mdpi.com/1999-5903/15/8/276/pdf?version=1692366399
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'SEDIA: A Platform for Semantically Enriched IoT Data Integration and Development
    of Smart City Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.48175/ijarsct-12071
  analysis: '>'
  authors:
  - Ashitosh Ghatule
  - Mohansai Veeravalli
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Advanced Research in Science, Communication and
    Technology
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Increase in the Use of Virtualization in IoT: A Comprehensive Analysis'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/biomimetics8040373
  analysis: '>'
  authors:
  - Abdullah Alabdulatif
  - Navod Neranjan Thilakarathne
  citation_count: 0
  full_citation: '>'
  full_text: ">\nCitation: Alabdulatif, A.;\nThilakarathne, N.N. Bio-Inspired\nInternet\
    \ of Things: Current Status,\nBeneﬁts, Challenges, and Future\nDirections. Biomimetics\
    \ 2023, 8, 373.\nhttps://doi.org/10.3390/\nbiomimetics8040373\nAcademic Editors:\
    \ Heming Jia,\nLaith Abualigah and Xuewen Xia\nReceived: 25 July 2023\nRevised:\
    \ 14 August 2023\nAccepted: 15 August 2023\nPublished: 17 August 2023\nCopyright:\n\
    © 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an\
    \ open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the\
    \ Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nbiomimetics\nReview\nBio-Inspired Internet of Things: Current Status,\
    \ Beneﬁts,\nChallenges, and Future Directions\nAbdullah Alabdulatif 1\nand Navod\
    \ Neranjan Thilakarathne 2,*\n1\nDepartment of Computer, College of Sciences and\
    \ Arts in Al-Rass, Qassim University,\nAl-Rass 720223, Saudi Arabia; a.alabdulatif@qu.edu.sa\n\
    2\nDepartment of ICT, Faculty of Technology, University of Colombo, Colombo 00700,\
    \ Sri Lanka\n*\nCorrespondence: navod.neranjan@ict.cmb.ac.lk\nAbstract: There\
    \ is no doubt that the involvement of the Internet of Things (IoT) in our daily\
    \ lives has\nchanged the way we live and interact as a global community, as IoT\
    \ enables intercommunication of\ndigital objects around us, creating a pervasive\
    \ environment. As of now, this IoT is found in almost\nevery domain that is vital\
    \ for human survival, such as agriculture, medical care, transportation, the\n\
    military, and so on. Day by day, various IoT solutions are introduced to the market\
    \ by manufacturers\ntowards making our life easier and more comfortable. On the\
    \ other hand, even though IoT now\nholds a key place in our lives, the IoT ecosystem\
    \ has various limitations in efﬁciency, scalability,\nand adaptability. As such,\
    \ biomimicry, which involves imitating the systems found in nature within\nhuman-made\
    \ systems, appeared to be a potential remedy to overcome such challenges pertaining\n\
    to IoT, which can also be referred to as bio-inspired IoT. In the simplest terms,\
    \ bio-inspired IoT\ncombines nature-inspired principles and IoT to create more\
    \ efﬁcient and adaptive IoT solutions, that\ncan overcome most of the inherent\
    \ challenges pertaining to traditional IoT. It is based on the idea\nthat nature\
    \ has already solved many challenging problems and that, by studying and mimicking\n\
    biological systems, we might develop better IoT systems. As of now, this concept\
    \ of bio-inspired IoT\nis applied to various ﬁelds such as medical care, transportation,\
    \ cyber-security, agriculture, and so on.\nHowever, it is noted that only a few\
    \ studies have been carried out on this new concept, explaining\nhow these bio-inspired\
    \ concepts are integrated with IoT. Thus, to ﬁll in the gap, in this study, we\n\
    provide a brief review of bio-inspired IoT, highlighting how it came into play,\
    \ its ecosystem, its latest\nstatus, beneﬁts, challenges, and future directions.\n\
    Keywords:\nIoT; Internet of Things; bio-inspired IoT; bio-inspired computation;\
    \ bio-inspired\nalgorithms; artiﬁcial intelligence; cyber-security; optimization;\
    \ wireless sensor network\n1. Introduction\nThe proliferation of Information and\
    \ Communication Technologies (ICTs) early in\nthe 21st century has led to a revolution\
    \ in our daily lives in which we are able to perform\nmany tasks that were considered\
    \ difﬁcult with the use of available technologies at that\ntime [1]. Progressively,\
    \ this ICT has given birth to many advanced technologies, of which\nIoT can be\
    \ considered as one such major technology [2–5]. Over the years, this IoT has\
    \ been\nafﬁliated with many of the domains that are deemed important for human\
    \ survival, such\nas agriculture, manufacturing, transportation, and healthcare\
    \ [6–9]. Undoubtedly, as of\nnow, this IoT can be considered a major technology\
    \ that is an essential part of our daily\nlives. Day by day, IoT solutions are\
    \ becoming more closely integrated into our daily lives,\nand such IoT solutions\
    \ are being introduced to the market at a rapid rate. In general, the\nIoT has\
    \ the capability to connect digital devices/objects all around the world and allow\n\
    them to communicate with each other, creating a larger ubiquitous network [10–12].\n\
    Overall, the IoT is an ecosystem of connected devices that communicate with each\n\
    other and exchange data. The integration of the IoT and the worldwide web has\
    \ led to the\nBiomimetics 2023, 8, 373. https://doi.org/10.3390/biomimetics8040373\n\
    https://www.mdpi.com/journal/biomimetics\nBiomimetics 2023, 8, 373\n2 of 29\n\
    creation of new kinds of services and applications in different domains, such\
    \ as real-time\nsurveillance, plant disease diagnosis, remote healthcare, real-time\
    \ disease diagnosis, preci-\nsion agriculture, air quality monitoring, and so\
    \ on [1–5,12–16]. In general, IoT facilitates\nus to connect our digital belongings\
    \ to the worldwide web, anytime, anywhere in the\nworld [17–21], as depicted in\
    \ Figure 1.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n2  of  28 \n \n \ncreation of new kinds of services and applications in different domains, such as real‐time \n\
    surveillance, plant disease diagnosis, remote healthcare, real‐time disease diagnosis, pre‐\n\
    cision agriculture, air quality monitoring, and so on [1–5,12–16]. In general, IoT facilitates \n\
    us to connect our digital belongings to the worldwide web, anytime, anywhere in the \n\
    world [17–21], as depicted in Figure 1. \n \nFigure 1. The IoT ecosystem. \nDay by day, various IoT solutions are being introduced to the market owing to the \n\
    development of underlying infrastructure (e.g., communication facilities, computing fa‐\n\
    cilities) and the increasing technology competency of people. These ever‐growing IoT so‐\n\
    lutions are employed in a variety of domains and offer convenient facilities to the stake‐\n\
    holders engaged in these domains. According to the latest statistics, it is predicted that \n\
    there will be over 100 billion IoT devices by 2025 [5–10]. It is also evident that the IoT \n\
    market size is expected to reach over USD 140 billion by 2030 from USD 12 billion in 2020 \n\
    [5–10]. Overall, the IoT is transforming industries and revolutionizing the way we live \n\
    and work. However, even though IoT is a fast‐growing technology, it is still in its infancy, \n\
    and it will take years to become a stable technology [21–25]. As such, there are several \n\
    drawbacks and challenges associated with the incorporation and implementation of the \n\
    IoT (depicted in Figure 2), which are categorized and highlighted further in the following. \n\
     \nSecurity and privacy   \nSince IoT devices are always connected to the Internet, they can be vulnerable to \n\
    hacking, unauthorized access, and data breaches [10]. Further, weak security measures \n\
    and insufficient encryption can expose sensitive information, leading to privacy violations \n\
    and potential risks to individuals and organizations [26–28]. \n \nInteroperability issues \n\
    The IoT ecosystem involves a wide range of devices, protocols, and platforms from \n\
    various manufacturers [4]. Achieving seamless interoperability and compatibility among \n\
    these different components can be challenging whereas lack of standardized communica‐\n\
    tion protocols and fragmentation within the IoT industry can hinder device connectivity \n\
    and hinder the integration of IoT systems [4,5]. \n \nScalability and complexity \n\
    As the number of IoT devices increases, managing and scaling the infrastructure be‐\n\
    comes more complex [4,5]. Connecting and coordinating a large number of devices, man‐\n\
    aging  data  flows,  and  ensuring  efficient  data  processing  and  analysis \
    \ require  robust \nFigure 1. The IoT ecosystem.\nDay by day, various IoT solutions\
    \ are being introduced to the market owing to the de-\nvelopment of underlying\
    \ infrastructure (e.g., communication facilities, computing facilities)\nand the\
    \ increasing technology competency of people. These ever-growing IoT solutions\n\
    are employed in a variety of domains and offer convenient facilities to the stakeholders\n\
    engaged in these domains. According to the latest statistics, it is predicted\
    \ that there will\nbe over 100 billion IoT devices by 2025 [5–10]. It is also\
    \ evident that the IoT market size is\nexpected to reach over USD 140 billion\
    \ by 2030 from USD 12 billion in 2020 [5–10]. Overall,\nthe IoT is transforming\
    \ industries and revolutionizing the way we live and work. However,\neven though\
    \ IoT is a fast-growing technology, it is still in its infancy, and it will take\
    \ years\nto become a stable technology [21–25]. As such, there are several drawbacks\
    \ and challenges\nassociated with the incorporation and implementation of the\
    \ IoT (depicted in Figure 2),\nwhich are categorized and highlighted further in\
    \ the following.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n3  of  28 \n \nsystems and architectures. Thus, scaling up IoT deployments can be challenging, particu‐\n\
    larly when dealing with legacy systems and integrating with existing IT infrastructure [3]. \n\
     \nPower and energy requirements \nMany IoT devices are small, battery‐powered devices designed to operate for ex‐\n\
    tended periods without human intervention. However, maintaining constant connectiv‐\n\
    ity, data transmission, and processing can drain device batteries quickly [10–13]. Thus, \n\
    energy efficiency becomes a crucial factor, especially for IoT deployments that involve a \n\
    massive number of devices or remote locations (e.g., in agricultural lands, mines etc.) \n\
    where the power supply is limited. \n \nData overload and management \nIoT generates vast amounts of data from multiple sources and sensors, where effec‐\n\
    tively managing, storing, analyzing, and deriving actionable insights from these data can \n\
    be a daunting task [10–13]. Thus, organizations need robust data management strategies, \n\
    including data storage, processing, and analytics capabilities, to make sense of the infor‐\n\
    mation generated by IoT devices. \n \nReliability and downtime \nIoT devices heavily rely on network connectivity and uninterrupted Internet access \n\
    [4,5]. Network outages, connectivity issues, or server downtime can impact the function‐\n\
    ality of IoT systems. Hence, dependence on stable network infrastructure and the poten‐\n\
    tial for single points of failure pose reliability challenges for IoT deployments [4,5]. \n\
     \nFigure 2. Challenges pertaining to IoT. \nAddressing these inherent drawbacks of IoT requires concerted efforts from manu‐\n\
    facturers, policymakers, and technology experts, and it will take years to tackle all these \n\
    drawbacks. As IoT continues to evolve, there is an ongoing need to prioritize security, \n\
    standardization,  data  management,  and  privacy  considerations  to  mitigate \
    \ these  chal‐\nlenges. On the whole, all the aforementioned drawbacks can be mainly apportioned into \n\
    scalability,  efficiency,  security,  and  adaptability  challenges.  As  a  remedy \
    \ to  overcome \nsuch challenges, bio‐inspired IoT emerged as a new paradigm that combines the princi‐\n\
    Figure 2. Challenges pertaining to IoT.\nBiomimetics 2023, 8, 373\n3 of 29\n•\n\
    Security and privacy\nSince IoT devices are always connected to the Internet,\
    \ they can be vulnerable to\nhacking, unauthorized access, and data breaches [10].\
    \ Further, weak security measures and\ninsufﬁcient encryption can expose sensitive\
    \ information, leading to privacy violations and\npotential risks to individuals\
    \ and organizations [26–28].\n•\nInteroperability issues\nThe IoT ecosystem involves\
    \ a wide range of devices, protocols, and platforms from\nvarious manufacturers\
    \ [4]. Achieving seamless interoperability and compatibility among\nthese different\
    \ components can be challenging whereas lack of standardized communication\nprotocols\
    \ and fragmentation within the IoT industry can hinder device connectivity and\n\
    hinder the integration of IoT systems [4,5].\n•\nScalability and complexity\n\
    As the number of IoT devices increases, managing and scaling the infrastructure\n\
    becomes more complex [4,5]. Connecting and coordinating a large number of devices,\
    \ man-\naging data ﬂows, and ensuring efﬁcient data processing and analysis require\
    \ robust systems\nand architectures. Thus, scaling up IoT deployments can be challenging,\
    \ particularly when\ndealing with legacy systems and integrating with existing\
    \ IT infrastructure [3].\n•\nPower and energy requirements\nMany IoT devices are\
    \ small, battery-powered devices designed to operate for extended\nperiods without\
    \ human intervention. However, maintaining constant connectivity, data\ntransmission,\
    \ and processing can drain device batteries quickly [10–13]. Thus, energy\nefﬁciency\
    \ becomes a crucial factor, especially for IoT deployments that involve a massive\n\
    number of devices or remote locations (e.g., in agricultural lands, mines etc.)\
    \ where the\npower supply is limited.\n•\nData overload and management\nIoT generates\
    \ vast amounts of data from multiple sources and sensors, where effec-\ntively\
    \ managing, storing, analyzing, and deriving actionable insights from these data\
    \ can\nbe a daunting task [10–13]. Thus, organizations need robust data management\
    \ strate-\ngies, including data storage, processing, and analytics capabilities,\
    \ to make sense of the\ninformation generated by IoT devices.\n•\nReliability\
    \ and downtime\nIoT devices heavily rely on network connectivity and uninterrupted\
    \ Internet access [4,5].\nNetwork outages, connectivity issues, or server downtime\
    \ can impact the functionality of\nIoT systems. Hence, dependence on stable network\
    \ infrastructure and the potential for\nsingle points of failure pose reliability\
    \ challenges for IoT deployments [4,5].\nAddressing these inherent drawbacks of\
    \ IoT requires concerted efforts from manu-\nfacturers, policymakers, and technology\
    \ experts, and it will take years to tackle all these\ndrawbacks. As IoT continues\
    \ to evolve, there is an ongoing need to prioritize security,\nstandardization,\
    \ data management, and privacy considerations to mitigate these challenges.\n\
    On the whole, all the aforementioned drawbacks can be mainly apportioned into\
    \ scal-\nability, efﬁciency, security, and adaptability challenges. As a remedy\
    \ to overcome such\nchallenges, bio-inspired IoT emerged as a new paradigm that\
    \ combines the principles of\nbiology with IoT.\nIn general, these bio-inspired\
    \ solutions, also known as biomimetic or nature-inspired\nsolutions, refer to\
    \ the development of technologies, strategies, and designs that draw\ninspiration\
    \ from biological systems found in nature [3,4]. These solutions aim to solve\n\
    complex problems by emulating or adapting principles, structures, processes, and\
    \ behaviors\nobserved in living organisms. Incorporating such solutions with IoT\
    \ leads to the creation\nof innovative and efﬁcient solutions enabling IoT to\
    \ overcome its inherent drawbacks [1–4].\nAccording to the literature, in the\
    \ area of bio-inspired IoT, little research has been carried\nBiomimetics 2023,\
    \ 8, 373\n4 of 29\nout and no reviews have synthesized the latest knowledge pertaining\
    \ to the subject area\nowing to the novelty of the ﬁeld. Thus, motivated by the\
    \ synthesis of the latest knowledge\npertaining to bio-inspired IoT, the following\
    \ describes the key contributions of the study.\n1.\nFollowing the Introduction,\
    \ we provide a brief review of what is meant by bio-\ninspiration, bio-inspired\
    \ IoT, and the beneﬁts and applications of bio-inspired IoT.\n2.\nThe latest status\
    \ of bio-inspired IoT is presented with use cases (highlighting domains\nthat\
    \ they are used in).\n3.\nA summarization of the state of the art is presented,\
    \ providing a summary of recent re-\nsearch and survey studies followed by a brief\
    \ comparison of IoT and bio-inspired IoT.\n4.\nTo make this a comprehensive review,\
    \ challenges and anticipated future directions\npertaining to the bio-inspired\
    \ IoT are also highlighted.\nTo carry out the review, we have followed a systematic\
    \ approach in which the initial\nstep encompasses the identiﬁcation of key terms\
    \ relevant to the topic, “bio-inspired Internet\nof Things”, “IoT”, “bio-inspired\
    \ algorithms”, and “IoT algorithms”. To effectively retrieve\npertinent scholarly\
    \ content, we have searched through the IEEE Xplore, ACM Digital\nLibrary, PubMed,\
    \ Google Scholar, Scopus, and Web of Science scholarly databases. Upon\nexecuting\
    \ the search queries, the next phase involves the meticulous screening of search\n\
    results. Titles and abstracts of retrieved articles are carefully reviewed to\
    \ gauge their\nrelevance. To ensure the inclusion of high-quality and recent literature,\
    \ a set of inclusion\nand exclusion criteria is established where we have chosen\
    \ scholarly articles published\nfrom 2010 onwards. However, we have also referred\
    \ to the state of the art in 1998, 1999,\nand 2001, owing to the relevance of\
    \ the subject for our review (e.g., swarm intelligence).\nThe remainder of the\
    \ study is organized in the following order. Following the Introduc-\ntion, the\
    \ second section discusses bio-inspiration, bio-inspired solutions, and bio-inspired\n\
    IoT. Afterwards, the third section discusses the ecosystem of bio-inspired IoT,\
    \ highlighting\nthe architecture of bio-inspired IoT and bio-inspired algorithms.\
    \ Then, the fourth section\nsummarizes the state of the art. Challenges pertaining\
    \ to the bio-inspired IoT are high-\nlighted in Section 5 and current status and\
    \ future directions are highlighted in Section 6\nand, ﬁnally, the study concludes\
    \ with the conclusions derived from the study. The Table 1\nhighlights the acronyms\
    \ used in the study.\nTable 1. Acronyms found in this paper.\nAcronym\nDescription\n\
    IoT\nInternet of Things\nICT\nInformation and Communication Technology\nGA\nGenetic\
    \ Algorithm\nACO\nAnt Colony Optimization\nAI\nArtiﬁcial Intelligence\nANN\nArtiﬁcial\
    \ Neural Network\nEA\nEvolutionary Algorithm\nIA\nImmunological Algorithm\nSIA\n\
    Swarm Intelligence Algorithm\nPSO\nParticle Swarm Optimization\nBFO\nBacterial\
    \ Foraging Optimization\nFA\nFireﬂy Algorithm\nBA\nBat Algorithm\nBiomimetics\
    \ 2023, 8, 373\n5 of 29\nTable 1. Cont.\nAcronym\nDescription\nCS\nCuckoo Search\n\
    BA\nBee Algorithm\nGWO\nGrey Wolf Optimizer\nDEA\nDolphin Echolocation Algorithm\n\
    HIOA\nHybrid Intelligent Optimization Algorithm\nSCA\nSine–Cosine Algorithm\n\
    SSA\nSalp Swarm Algorithm\nANTPSOAODV\nANT Particle Swarm Optimization Adhoc On-demand\
    \ Distance Vector\nBiHCLR\nBio-inspired Cross-Layer Routing\nWSN\nWireless Sensor\
    \ Network\nMPSO\nModiﬁed Particle Swarm Optimization\nMCSO\nModiﬁed Cat Swarm\
    \ Optimization\nUAV\nUnmanned Aerial Vehicle\nMOO\nMulti-Objective Optimization\n\
    PSGWO\nParticle Swarm Grey Wolf Optimization\nBSCA\nBio-Inspired Self-Learning\
    \ Coevolutionary Algorithm\nGWO\nGrey Wolf Optimizer\nWOA\nWhale Optimization\
    \ Algorithm\nICA\nImperialist Competitive Algorithm\nCH\nCluster Head\nGRN\nGene\
    \ Regulatory Network\nBiO4SeL\nBio-Inspired Optimization for Sensor Network Lifetime\n\
    BIOSARP\nBio-Inspired Self-Organized Secure Autonomous Routing Protocol\nSDAR\n\
    Secured Data Assured Routing\n2. Bio-Inspired IoT\nWith the boom of ICTs happening\
    \ early in the 21st century, researchers and academics\nbegan drawing inspiration\
    \ from biological solutions when developing applications and\nsystems that are\
    \ dynamic, real-time, and resilient. They have found that biological solutions\n\
    are great for tackling real-world complicated engineering challenges because of\
    \ their ﬂexi-\nbility, robustness, and resilience to handle failure [3]. According\
    \ to the available literature,\nthe ﬁeld of bio-inspired study can be apportioned\
    \ into three primary ﬁelds [27–30], as\nshown in Figure 3.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n\
    5  of  28 \n \nHIOA \nHybrid Intelligent Optimization Algorithm   \nSCA \nSine–Cosine Algorithm \
    \  \nSSA \nSalp Swarm Algorithm   \nANTPSOAODV \nANT Particle Swarm Optimization Adhoc On‐demand Distance \n\
    Vector   \nBiHCLR \nBio‐inspired Cross‐Layer Routing   \nWSN \nWireless Sensor Network \n\
    MPSO \nModified Particle Swarm Optimization   \nMCSO \nModified Cat Swarm Optimization \
    \  \nUAV \nUnmanned Aerial Vehicle \nMOO \nMulti‐Objective Optimization   \nPSGWO \n\
    Particle Swarm Grey Wolf Optimization   \nBSCA \nBio‐Inspired Self‐Learning Coevolutionary Algorithm \
    \  \nGWO \nGrey Wolf Optimizer   \nWOA \nWhale Optimization Algorithm   \nICA \n\
    Imperialist Competitive Algorithm   \nCH \nCluster Head   \nGRN \nGene Regulatory Network \n\
    BiO4SeL \nBio‐Inspired Optimization for Sensor Network Lifetime \nBIOSARP \nBio‐Inspired Self‐Organized Secure Autonomous Routing \n\
    Protocol   \nSDAR \nSecured Data Assured Routing   \n2. Bio‐Inspired IoT \nWith the boom of ICTs happening early in the 21st century, researchers and academ‐\n\
    ics began drawing inspiration from biological solutions when developing applications \n\
    and systems that are dynamic, real‐time, and resilient. They have found that biological \n\
    solutions are great for tackling real‐world complicated engineering challenges because of \n\
    their flexibility, robustness, and resilience to handle failure [3]. According to the available \n\
    literature, the field of bio‐inspired study can be apportioned into three primary fields [27–\n\
    30], as shown in Figure 3. \n \nFigure 3. Fields of bio‐inspired study. \n1. \n\
    Bio‐inspired computing. \n2. \nBio‐inspired systems. \n3. \nBio‐inspired networking. \n\
    Figure 3. Fields of bio-inspired study.\nBiomimetics 2023, 8, 373\n6 of 29\n1.\n\
    Bio-inspired computing.\n2.\nBio-inspired systems.\n3.\nBio-inspired networking.\n\
    Bio-inspired computing focuses on optimization and efﬁcient computing and repre-\n\
    sents a class of algorithms that focus on efﬁcient computing, whereas bio-inspired\
    \ systems\nconstitute a class of system architectures for massively distributed\
    \ and collaborative sys-\ntems [25,29]. On the other hand, bio-inspired networking\
    \ is a set of approaches that are\nused for scabble and efﬁcient networking under\
    \ uncertain, volatile conditions [7,8,29].\nOverall, in order for a biological\
    \ idea to be applied, it needs to be comparable to an issue\nthat exists in the\
    \ actual world. It should be possible to put into action, and the procedure\n\
    for adapting it to a system in the actual world should be articulated in a way\
    \ that is obvious\nand concise. In this regard, the next section brieﬂy discusses\
    \ biomimicry, or bio-inspiration,\nand then the bio-inspired IoT solutions and\
    \ how they are formed.\n2.1. What Is Biomimicry?\nThe concept of biomimicry derives\
    \ its name from the combination of two Greek words,\n“bios”, meaning life, and\
    \ “mimesis”, meaning imitation [26]. Essentially, it involves imitat-\ning the\
    \ systems found in nature within human-made systems. Biomimicry encompasses\n\
    innovation inspired by nature, where engineers, knowledgeable about mechanics\
    \ and\ndynamic ﬂow systems in industrial processes, collaborate with biologists\
    \ who possess\nexpertise in the mechanics and dynamic ﬂow characteristics of living\
    \ processes [27–30].\nThroughout human existence, nature has provided solutions\
    \ to numerous complex\nproblems that engineers continue to face. By exploring\
    \ nature all around us, we can\ndiscover elegant and environmentally friendly\
    \ solutions that do not contribute to further\ndegradation. Nature avoids the\
    \ use of unnecessary toxic chemicals and manages waste\neffectively, either through\
    \ compensation or efﬁcient cleanup. For instance, Leonardo da\nVinci conceptualized\
    \ designs for helicopters and parachutes by studying natural systems,\nand the\
    \ Wright brothers examined birds to develop their ﬁrst ﬂying machine, which paved\n\
    the way for the development of modern aircraft [26–30]. This clearly indicates\
    \ how nature\nhas already solved many existing problems and how it holds the answers\
    \ for many of the\nchallenges that humankind is currently struggling with.\nOverall,\
    \ nature operates in a simple and sustainable manner. By emulating natural\nengineering,\
    \ individuals can strive for technological advancements while living harmo-\n\
    niously with nature and maintaining a balanced and equitable lifestyle. This approach\n\
    stands in contrast to current systems that disrupt harmony, pose risks to health\
    \ through\ntoxic elements, and strain ecosystem services. The emulation of nature’s\
    \ engineering\nsystems operates on three levels, according to [26].\n1.\nEmulating\
    \ the form and function of natural processes.\n2.\nEmulating the way nature produces\
    \ (engineers) biological components.\n3.\nExamining and understanding how nature\
    \ deals with all aspects of waste and regen-\neration through closed system thinking.\n\
    Starting from 1998, biomimicry has facilitated collaborations between engineering\n\
    ﬁrms and scientists to create eco-friendly and efﬁcient technology through redesign\
    \ and\nconstruction. Such example designs include modern automobiles, ﬁghter aircrafts,\
    \ bullet\ntrains, underwater submarines, etc. [26]. Overall, these nature-inspired\
    \ solutions have now\nbecome an essential part of our daily lives.\nHaving provided\
    \ a brief overview of what is meant by bio-inspiration, the next section\ndiscusses\
    \ such bio-inspired solutions in more detail.\n2.2. Bio-Inspired Solutions\nAs\
    \ aforementioned, the concept of bio-inspiration has inspired many domains to\n\
    create/implement novel solutions that can overcome many challenges that are otherwise\n\
    hard to overcome with traditional technologies. The process of designing bio-inspired\n\
    Biomimetics 2023, 8, 373\n7 of 29\nsolutions can be apportioned into ﬁve main\
    \ stages, as shown in Figure 4 [25,26,31]. It\ninvolves starting from understanding\
    \ the problem to be solved (problem), abstracting\nthe problem to be solved (reframe),\
    \ exactly identifying the problem and the solution\n(identify), analysis of biological\
    \ principles and abstraction to identify analogies, and, ﬁnally,\napplying bio-inspired\
    \ solutions to solve the problem (apply). For a better understanding,\nthe following\
    \ describes some of the remarkable bio-inspired solutions designed in recent\n\
    years inspired by the biological world.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n\
    7  of  28 \n \nthe following describes some of the remarkable bio‐inspired solutions designed in recent \n\
    years inspired by the biological world. \n \nFigure 4. Process of designing a bio‐inspired solution. \n\
     \nRobotics and locomotion \nResearchers study animal locomotion to create robots and vehicles that can move \n\
    more efficiently and adapt to various terrains [2,3]. Such examples include robots inspired \n\
    by insects, birds, or marine creatures and the design of the high‐speed bullet trains in \n\
    Japan, which was inspired by the beak shape and aerodynamic efficiency of the kingfisher \n\
    [26], where the streamlined nose design reduces noise and enhances speed, making it an \n\
    iconic bio‐inspired solution in transportation. Another example is swarm robotics which \n\
    involves the coordination and cooperation of multiple robots to achieve collective behav‐\n\
    ior [6,20,26]. Inspired by the behavior of social insects like ants or bees, swarm robotics \n\
    has applications in various fields, including environmental monitoring, search and rescue, \n\
    and industrial automation. Further, the flying patterns and behaviors of birds and insects \n\
    have inspired the development of autonomous drone systems where bio‐inspired algo‐\n\
    rithms enable drones to navigate through complex environments, adapt to obstacles, and \n\
    mimic swarming behavior for collaborative tasks [25,26]. \n \nMaterials and structures \n\
    Natural materials such as spider silk, lotus leaves, or seashells possess unique prop‐\n\
    erties that can be replicated for various applications. For instance, biomimetic materials \n\
    can be used to create self‐cleaning surfaces, lightweight and strong structures, or flexible \n\
    and stretchable materials [2,3,31]. \n \nEnergy and sustainability \nNatural systems often exhibit efficient energy conversion and storage mechanisms. \n\
    By  studying  photosynthesis,  researchers  have  developed  solar  cells  inspired \
    \ by  plant \nstructures. Additionally, swarm intelligence algorithms, inspired by the behavior of social \n\
    insect colonies can optimize energy consumption and resource allocation [25–28]. \
    \  \n \nMedicine and healthcare \nNature provides numerous examples of highly efficient and adaptive biological sys‐\n\
    tems that inspire medical advancements. Biomimicry can be applied to develop new drug \n\
    delivery systems, medical implants, tissue engineering techniques, or prosthetics [24–26]. \n\
    In recent times, prosthetic limbs and robotic exoskeletons have been developed to mimic \n\
    the movement and functionality of natural human limbs. These bio‐inspired solutions aim \n\
    to restore mobility and enhance the quality of life for individuals with limb impairments \n\
    [26]. \nFigure 4. Process of designing a bio-inspired solution.\n•\nRobotics and\
    \ locomotion\nResearchers study animal locomotion to create robots and vehicles\
    \ that can move more\nefﬁciently and adapt to various terrains [2,3]. Such examples\
    \ include robots inspired by\ninsects, birds, or marine creatures and the design\
    \ of the high-speed bullet trains in Japan,\nwhich was inspired by the beak shape\
    \ and aerodynamic efﬁciency of the kingﬁsher [26],\nwhere the streamlined nose\
    \ design reduces noise and enhances speed, making it an iconic\nbio-inspired solution\
    \ in transportation. Another example is swarm robotics which involves\nthe coordination\
    \ and cooperation of multiple robots to achieve collective behavior [6,20,26].\n\
    Inspired by the behavior of social insects like ants or bees, swarm robotics has\
    \ applications\nin various ﬁelds, including environmental monitoring, search and\
    \ rescue, and industrial\nautomation. Further, the ﬂying patterns and behaviors\
    \ of birds and insects have inspired the\ndevelopment of autonomous drone systems\
    \ where bio-inspired algorithms enable drones to\nnavigate through complex environments,\
    \ adapt to obstacles, and mimic swarming behavior\nfor collaborative tasks [25,26].\n\
    •\nMaterials and structures\nNatural materials such as spider silk, lotus leaves,\
    \ or seashells possess unique proper-\nties that can be replicated for various\
    \ applications. For instance, biomimetic materials can\nbe used to create self-cleaning\
    \ surfaces, lightweight and strong structures, or ﬂexible and\nstretchable materials\
    \ [2,3,31].\n•\nEnergy and sustainability\nNatural systems often exhibit efﬁcient\
    \ energy conversion and storage mechanisms.\nBy studying photosynthesis, researchers\
    \ have developed solar cells inspired by plant\nstructures. Additionally, swarm\
    \ intelligence algorithms, inspired by the behavior of social\ninsect colonies\
    \ can optimize energy consumption and resource allocation [25–28].\n•\nMedicine\
    \ and healthcare\nNature provides numerous examples of highly efﬁcient and adaptive\
    \ biological sys-\ntems that inspire medical advancements. Biomimicry can be applied\
    \ to develop new drug\nBiomimetics 2023, 8, 373\n8 of 29\ndelivery systems, medical\
    \ implants, tissue engineering techniques, or prosthetics [24–26].\nIn recent\
    \ times, prosthetic limbs and robotic exoskeletons have been developed to mimic\
    \ the\nmovement and functionality of natural human limbs. These bio-inspired solutions\
    \ aim to\nrestore mobility and enhance the quality of life for individuals with\
    \ limb impairments [26].\n•\nOptimization and algorithms\nBio-inspired algorithms,\
    \ such as Genetic Algorithms (GAs) and Ant Colony Opti-\nmization (ACO), have\
    \ inspired computational algorithms that solve complex optimization\nproblems.\
    \ Overall, these algorithms mimic the processes of evolution, cooperation, and\n\
    adaptation found in nature [24–28].\nFigure 5 depicts several bio-inspired solutions\
    \ that have been designed in recent years;\nsolar cells inspired by plants photosynthesis\
    \ procedures and robots inspired by the moving\npattern of insects.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n\
    8  of  28 \n \n \nOptimization and algorithms \nBio‐inspired algorithms, such as Genetic Algorithms (GAs) and Ant Colony Optimi‐\n\
    zation (ACO), have inspired computational algorithms that solve complex optimization \n\
    problems. Overall, these algorithms mimic the processes of evolution, cooperation, and \n\
    adaptation found in nature [24–28]. \nFigure  5  depicts  several  bio‐inspired \
    \ solutions  that  have  been  designed  in  recent \nyears; solar cells inspired by plants photosynthesis procedures and robots inspired by the \n\
    moving pattern of insects. \n \nFigure 5. Bio‐inspired solutions that have been introduced in recent years. \n\
    Having discussed what is meant by bio‐inspiration and bio‐inspired solutions, the \n\
    next section thoroughly discusses bio‐inspired IoT. \n2.3. What Is Bio‐Inspired IoT? \n\
    Bio‐inspired IoT is a concept that combines the principles of biology and IoT to create \n\
    a more efficient and adaptive system. It is based on the idea that nature has already solved \n\
    many complex problems, and by studying and mimicking biological systems, we can de‐\n\
    velop better IoT systems to enhance the functionality of such IoT systems toward improv‐\n\
    ing security, scalability, adaptability, efficiency, and so on [1–5,32–36]. Overall, bio‐in‐\n\
    spired IoT can be defined as the use of bio‐inspired computing techniques and algorithms \n\
    to develop creative/novel IoT systems that can overcome the inherent challenges of IoT, \n\
    such as resource constraints, low efficiency, and so on [17–20,37–40]. As of now, this bio‐\n\
    inspired IoT is applied to various fields such as agriculture, healthcare, transportation, \n\
    smart cities, and so on.   \nAccording to the state of the art, bio‐inspired IoT has several benefits over traditional \n\
    IoT systems, such as: \n \nScalability \nBio‐inspired IoT systems can scale easily due to the decentralized nature of biological \n\
    systems. They can handle a large number of devices and data without compromising ef‐\n\
    ficiency [23–25]. In this regard, bio‐inspired IoT algorithms, such as swarm intelligence \n\
    Figure 5. Bio-inspired solutions that have been introduced in recent years.\n\
    Having discussed what is meant by bio-inspiration and bio-inspired solutions,\
    \ the\nnext section thoroughly discusses bio-inspired IoT.\n2.3. What Is Bio-Inspired\
    \ IoT?\nBio-inspired IoT is a concept that combines the principles of biology\
    \ and IoT to create\na more efﬁcient and adaptive system. It is based on the idea\
    \ that nature has already\nsolved many complex problems, and by studying and mimicking\
    \ biological systems, we\ncan develop better IoT systems to enhance the functionality\
    \ of such IoT systems toward\nimproving security, scalability, adaptability, efﬁciency,\
    \ and so on [1–5,32–36]. Overall, bio-\ninspired IoT can be deﬁned as the use\
    \ of bio-inspired computing techniques and algorithms\nto develop creative/novel\
    \ IoT systems that can overcome the inherent challenges of IoT,\nsuch as resource\
    \ constraints, low efﬁciency, and so on [17–20,37–40]. As of now, this bio-\n\
    inspired IoT is applied to various ﬁelds such as agriculture, healthcare, transportation,\n\
    smart cities, and so on.\nAccording to the state of the art, bio-inspired IoT\
    \ has several beneﬁts over traditional\nIoT systems, such as:\nBiomimetics 2023,\
    \ 8, 373\n9 of 29\n•\nScalability\nBio-inspired IoT systems can scale easily due\
    \ to the decentralized nature of biological\nsystems. They can handle a large\
    \ number of devices and data without compromising efﬁ-\nciency [23–25]. In this\
    \ regard, bio-inspired IoT algorithms, such as swarm intelligence [9,20],\nenable\
    \ efﬁcient scalability in IoT systems by leveraging collective intelligence and\
    \ self-\norganization, allowing devices to interact and cooperate locally. On\
    \ the other hand, this\nscalability feature enables bio-inspired IoT systems to\
    \ handle a growing number of devices,\ninteractions, and data, without lacking\
    \ efﬁciency and performance.\n•\nEfﬁciency\nBio-inspired IoT systems are energy-efﬁcient\
    \ as they can adapt to changing environ-\nmental conditions and optimize their\
    \ operations accordingly. In general, they optimize en-\nergy consumption, adjust\
    \ resource usage based on demand, and enable energy-harvesting\ntechniques [39].\
    \ This focus on energy efﬁciency leads to sustainability, longer device battery\n\
    life, and reduced environmental impact [23–25].\n•\nAdaptability\nBio-inspired\
    \ IoT systems can adapt to changing conditions and learn from their\nenvironment.\
    \ They can dynamically adjust to changing environmental conditions, network\n\
    conﬁgurations, and resource availability. This adaptability allows bio-inspired\
    \ IoT systems\nto handle uncertainties, ﬂuctuations, and unexpected events more\
    \ effectively as opposed to\ntraditional IoT [5,26].\n•\nResilience and autonomous\
    \ behavior\nBiological systems have evolved to be resilient to external disturbances,\
    \ and bio-\ninspired IoT systems can inherit these properties. They can recover\
    \ from failures and\ncontinue to operate efﬁciently under adverse circumstances\
    \ [26–30]. On the other hand,\nbio-inspired IoT systems can incorporate Artiﬁcial\
    \ Intelligence (AI) and adaptive behavior.\nBy mimicking biological learning processes,\
    \ they can adapt and improve their performance\nover time. With the involvement\
    \ of AI, bio-inspired IoT systems can learn from data, adjust\ntheir parameters,\
    \ and make intelligent decisions, enhancing their autonomy and ability to\nhandle\
    \ complex tasks [9,16].\nBio-inspired IoT has a variety of applications across\
    \ various domains, as shown in\nFigure 6, which we have categorized according\
    \ to the state of the art. In the following, we\nbrieﬂy discuss these domains.\n\
    Biomimetics 2023, 8, x FOR PEER REVIEW \n9  of  28 \n \n[9,20], enable efficient scalability in IoT systems by leveraging collective intelligence and \n\
    self‐organization, allowing devices to interact and cooperate locally. On the other hand, \n\
    this scalability feature enables bio‐inspired IoT systems to handle a growing number of \n\
    devices, interactions, and data, without lacking efficiency and performance. \n\
     \nEfficiency \nBio‐inspired IoT systems are energy‐efficient as they can adapt to changing environ‐\n\
    mental conditions and optimize their operations accordingly. In general, they optimize \n\
    energy consumption, adjust resource usage based on demand, and enable energy‐harvest‐\n\
    ing techniques [39]. This focus on energy efficiency leads to sustainability, longer device \n\
    battery life, and reduced environmental impact [23–25]. \n \nAdaptability \n\
    Bio‐inspired IoT systems can adapt to changing conditions and learn from their en‐\n\
    vironment. They can dynamically adjust to changing environmental conditions, network \n\
    configurations, and resource availability. This adaptability allows bio‐inspired IoT sys‐\n\
    tems to handle uncertainties, fluctuations, and unexpected events more effectively as op‐\n\
    posed to traditional IoT [5,26]. \n \nResilience and autonomous behavior \nBiological systems have evolved to be resilient to external disturbances, and bio‐in‐\n\
    spired IoT systems can inherit these properties. They can recover from failures and con‐\n\
    tinue to operate efficiently under adverse circumstances [26–30]. On the other hand, bio‐\n\
    inspired IoT systems can incorporate Artificial Intelligence (AI) and adaptive behavior. \n\
    By mimicking biological learning processes, they can adapt and improve their perfor‐\n\
    mance over time. With the involvement of AI, bio‐inspired IoT systems can learn from \n\
    data, adjust their parameters, and make intelligent decisions, enhancing their autonomy \n\
    and ability to handle complex tasks [9,16]. \nBio‐inspired IoT has a variety of applications across various domains, as shown in \n\
    Figure 6, which we have categorized according to the state of the art. In the following, we \n\
    briefly discuss these domains. \n \nFigure 6. Domains of bio‐inspired IoT. \n\
     \nAgriculture \nBio‐inspired IoT solutions have been implemented in agriculture to improve crop \n\
    yields, optimize resource usage, and monitor environmental conditions [16,30–33]. For \n\
    i\nt\ni\ni\ni\nd b\nb\ni i\nI T d\ni\nit\nl\nt h\nlth b\nFigure 6. Domains of\
    \ bio-inspired IoT.\nBiomimetics 2023, 8, 373\n10 of 29\n•\nAgriculture\nBio-inspired\
    \ IoT solutions have been implemented in agriculture to improve crop\nyields,\
    \ optimize resource usage, and monitor environmental conditions [16,30–33]. For\n\
    instance, using sensors inspired by bee vision, IoT devices can monitor plant\
    \ health by\nanalyzing the reﬂection of light from leaves. This helps farmers\
    \ make informed decisions\nabout irrigation, fertilization, and pest control.\n\
    •\nHealthcare\nBio-inspired IoT devices are being used for remote health monitoring\
    \ and personalized\nmedicine. For example, wearable devices inspired by the structure\
    \ and functionality of\nhuman skin can continuously monitor vital signs, detect\
    \ abnormalities, and transmit data\nto healthcare providers in real time [17–21].\
    \ Nonetheless, bio-inspired IoT can be used to\nmonitor patients’ vital signs\
    \ and alert healthcare professionals in case of emergencies. It\ncan also be used\
    \ to track the spread of diseases and monitor outbreaks.\n•\nTransportation\n\
    Bio-inspired IoT can be used to optimize trafﬁc ﬂow and reduce congestion. It\
    \ can also\nbe used to monitor vehicle performance and reduce emissions [25–28].\n\
    •\nEnvironmental monitoring\nBio-inspired IoT systems can help monitor and manage\
    \ environmental conditions. For\ninstance, IoT sensors inspired by the sensory\
    \ capabilities of birds can detect air pollution,\nmonitor noise levels, or analyze\
    \ water quality in real time, contributing to early warning\nsystems and environmental\
    \ conservation efforts [18,25,26].\n•\nEnergy management\nInspired by the behavior\
    \ of social insect colonies, bio-inspired IoT systems can optimize\nenergy management\
    \ in smart grids or buildings [25–28]. By coordinating the energy\nconsumption\
    \ and production of multiple IoT devices, these systems can improve efﬁciency,\n\
    balance energy loads, and enable better integration of renewable energy sources.\n\
    •\nStructural health monitoring\nBio-inspired IoT solutions can be used to monitor\
    \ the structural health of buildings,\nbridges, and other infrastructure [3–5].\
    \ By mimicking the sensory capabilities of animals,\nsuch as bats or dolphins,\
    \ IoT sensors can detect and analyze vibrations, acoustic signals, or\nchanges\
    \ in electromagnetic ﬁelds to identify potential structural issues or defects.\n\
    •\nWildlife conservation\nIoT devices equipped with bio-inspired sensors and communication\
    \ mechanisms\nhave been deployed to monitor wildlife populations and protect endangered\
    \ species. For\nexample, researchers have developed bio-inspired camera traps\
    \ that mimic the visual and\nauditory cues of prey to attract and photograph elusive\
    \ or endangered animals [15,25,26].\n•\nMilitary\nBio-inspired IoT in the military\
    \ involves applying biological principles to design\nadaptable, resilient, energy-efﬁcient\
    \ IoT systems capable of self-organization, enhanced\nsensing, swarm intelligence,\
    \ stealth, and biometric security (e.g., swarm drones for recon-\nnaissance, biochemical\
    \ sensing, and energy-efﬁcient sensors) [25,26]. It aims to leverage\nnature-inspired\
    \ strategies for efﬁcient data processing, communication, and environmental\n\
    adaptation, enabling improved situational awareness, surveillance, reconnaissance,\
    \ and\nmission success.\n•\nSmart cities\nBio-inspired IoT can enhance the efﬁciency\
    \ of urban infrastructure and services. For\ninstance, researchers have looked\
    \ at the collective foraging behavior of ants to develop\nefﬁcient routing algorithms\
    \ for garbage collection and transportation networks [25,26].\nBiomimetics 2023,\
    \ 8, 373\n11 of 29\nBy applying these principles, IoT devices can optimize routes,\
    \ reduce congestion, and\nminimize energy consumption [3,25–28]. On the other\
    \ hand, bio-inspired IoT is used to\nmonitor air and water quality, detect and\
    \ prevent natural disasters, and improve energy\nefﬁciency in a typical smart\
    \ city.\n3. The Bio-Inspired IoT Ecosystem\nThe IoT is an ecosystem that comprises\
    \ various enabling technologies, of which\nIoT constitutes the core. The remaining\
    \ technologies that constitute an IoT ecosystem\ninclude cloud computing, fog\
    \ computing, edge computing, AI, underlying communication\ntechnologies, and so\
    \ on. Overall, the typical architecture of an IoT solution comprises\nthree or\
    \ four layers [32,33]. The three-layer architecture comprises a physical/sensing\n\
    layer, network/communication layer, and the application layer whereas the four-layer\n\
    architecture comprises an intermediate data-processing layer in between the network\
    \ and\nthe application layer [1,3,4]. On the other hand, when it comes to bio-inspired\
    \ IoT, the\npervasive ecosystem comprises underlying bio-inspired algorithms/techniques\
    \ that hold a\nkey place in the bio-inspired IoT ecosystem. The architecture of\
    \ bio-inspired IoT systems\nvaries depending on the speciﬁc application and the\
    \ level of bio-inspiration incorporated.\nHowever, there are certain common architectural\
    \ elements that are often present in bio-\ninspired IoT systems. To provide a\
    \ better understanding of the bio-inspired IoT ecosystem,\nthe next section discusses\
    \ further the architecture of bio-inspired IoT and underlying\nbio-inspired algorithms\
    \ that make the ecosystem comprehensive.\n3.1. The Architecture of Bio-Inspired\
    \ IoT\nBio-inspired IoT refers to the application of principles and concepts from\
    \ biological\nsystems to design and implement IoT architectures [26]. It aims\
    \ to leverage the efﬁciency,\nresilience, and adaptability observed in natural\
    \ systems to enhance the performance and\ncapabilities of IoT networks. The standard\
    \ architecture of a typical IoT solution consists of\nthree levels; however, some\
    \ researchers [32–36] have argued that it really has a four-layer\ndesign as aforementioned\
    \ [1,3,4]. While there is no speciﬁc standardized architecture for\nbio-inspired\
    \ IoT, their architecture varies depending on the speciﬁc application and the\n\
    level of bio-inspiration incorporated. However, there are certain common architectural\n\
    elements that are often present in bio-inspired IoT systems. In general, the architecture\
    \ of a\ntypical bio-inspired IoT solution can be apportioned into seven layers:\
    \ the physical layer,\nnetwork/communication layer, data-processing/decision-making\
    \ layer, adaptation and\nlearning layer, control layer, and application layer,\
    \ depicted in Figure 7.\nBiomimetics 2023, 8, x FOR PEER REVIEW \n \nThe IoT is an ecosystem that comprises various enabling technologies, of w\n\
    constitutes the core. The remaining technologies that constitute an IoT ecosystem\n\
    cloud computing, fog computing, edge computing, AI, underlying communicati\nnologies, and so on. Overall, the typical architecture of an IoT solution comprises\n\
    four layers [32,33]. The three‐layer architecture comprises a physical/sensing lay\n\
    work/communication layer, and the application layer whereas the four‐layer arch\n\
    comprises an intermediate data‐processing layer in between the network and the \n\
    tion layer [1,3,4]. On the other hand, when it comes to bio‐inspired IoT, the pervas\n\
    system comprises underlying bio‐inspired algorithms/techniques that hold a key\n\
    the bio‐inspired IoT ecosystem. The architecture of bio‐inspired IoT systems va\n\
    pending on the specific application and the level of bio‐inspiration incorporated\n\
    ever, there are certain common architectural elements that are often present in\n\
    spired IoT systems. To provide a better understanding of the bio‐inspired IoT eco\n\
    the next section discusses further the architecture of bio‐inspired IoT and underly\n\
    inspired algorithms that make the ecosystem comprehensive. \n3.1. The Architecture of Bio‐Inspired IoT \n\
    Bio‐inspired IoT refers to the application of principles and concepts from bi\n\
    systems to design and implement IoT architectures [26]. It aims to leverage the ef\n\
    resilience, and adaptability observed in natural systems to enhance the performa\n\
    capabilities of IoT networks. The standard architecture of a typical IoT solution \n\
    of three levels; however, some researchers [32–36] have argued that it really has\n\
    layer design as aforementioned [1,3,4]. While there is no specific standardized arch\n\
    for bio‐inspired IoT, their architecture varies depending on the specific applicat\n\
    the level of bio‐inspiration incorporated. However, there are certain common arch\n\
    elements that are often present in bio‐inspired IoT systems. In general, the archite\n\
    a typical bio‐inspired IoT solution can be apportioned into seven layers: the physic\n\
    network/communication  layer,  data‐processing/decision‐making  layer,  adaptat\n\
    learning layer, control layer, and application layer, depicted in Figure 7. \n\
     \nFigure 7. The typical architecture of bio‐inspired IoT solution. \n1. \nSensing layer \n\
    The sensing layer consists of a collection of sensors and actuators deploye\n\
    physical environment These sensors capture data from the surrounding envir\nFigure\
    \ 7. The typical architecture of bio-inspired IoT solution.\nBiomimetics 2023,\
    \ 8, 373\n12 of 29\n1.\nSensing layer\nThe sensing layer consists of a collection\
    \ of sensors and actuators deployed in the\nphysical environment. These sensors\
    \ capture data from the surrounding environment,\nsuch as temperature, humidity,\
    \ light intensity, or motion, mimicking the sensory organs of\nbiological organisms\
    \ [34–38].\n2.\nCommunication layer\nThe communication layer facilitates the exchange\
    \ of data between IoT sensing devices\nand the further layers in the hierarchy\
    \ [31–34]. It includes wireless communication protocols\nand networking infrastructure\
    \ for seamless connectivity. On the other hand, bio-inspired\ncommunication mechanisms\
    \ are also employed to optimize energy consumption, enhance\nreliability, or adapt\
    \ to dynamic network conditions [34–38].\n3.\nData-processing layer\nThe data-processing\
    \ layer is responsible for analyzing and processing the data col-\nlected by the\
    \ sensors. This layer may include bio-inspired algorithms for data fusion,\npattern\
    \ recognition, machine learning, or optimization, drawing inspiration from biological\n\
    processes like neural networks, genetic algorithms, or swarm intelligence [34–38].\n\
    4.\nDecision-making layer\nThe decision-making layer incorporates bio-inspired\
    \ mechanisms to enable autonomous\nand decentralized decision making. This layer\
    \ can involve algorithms inspired by collec-\ntive intelligence, such as swarm\
    \ intelligence, where individual IoT devices interact and\ncooperate to make decisions\
    \ [34–38].\n5.\nAdaptation and learning layer\nThe adaptation and learning layer\
    \ enables IoT devices to adapt their behavior and\nlearn from their environment.\
    \ It may include AI algorithms that enable devices to learn\nfrom data, adjust\
    \ their parameters, or optimize their performance over time, similar to the\n\
    adaptive behavior observed in biological systems [33–38].\n6.\nControl layer\n\
    The control layer coordinates and manages the operations of the IoT system. It\
    \ may\ninvolve hierarchical control mechanisms inspired by the organization and\
    \ coordination\nfound in biological systems, allowing for self-organization, self-healing,\
    \ and fault toler-\nance [34–38].\n7.\nApplication layer\nThe application layer\
    \ encompasses the speciﬁc applications and services enabled by\nbio-inspired IoT\
    \ systems used in various domains such as agriculture, smart city, and so on\n\
    as aforementioned.\nIt is noted that the architecture can be tailored to the speciﬁc\
    \ requirements of the\napplication. On the other hand, the level of bio-inspiration\
    \ can vary, ranging from incor-\nporating bio-inspired algorithms within speciﬁc\
    \ layers to developing fully bio-inspired\narchitectures [34–38]. Whilst developing\
    \ bio-inspired IoT solutions, the following key\nprinciples are also incorporated\
    \ into the architecture towards making sure such solutions\ncan overcome the challenges\
    \ associated with traditional IoT systems.\n•\nSelf-organization\nBio-inspired\
    \ IoT architectures emphasize self-organization, allowing devices to au-\ntonomously\
    \ form networks, adapt to changing conditions, and dynamically reconﬁgure\nthemselves\
    \ [10–13]. This concept draws inspiration from biological systems, such as ant\n\
    colonies or ﬂocking birds, where individual entities collectively organize and\
    \ collabo-\nrate [26].\nBiomimetics 2023, 8, 373\n13 of 29\n•\nSwarm intelligence\n\
    Bio-inspired IoT can leverage swarm intelligence, which is inspired by the collective\n\
    behavior of social insects like bees or ants. In this approach, IoT devices interact\
    \ and share\ninformation to achieve speciﬁc goals through distributed decision\
    \ making and coordination.\nSwarm intelligence helps especially in achieving scalability,\
    \ fault tolerance, and robustness\nin IoT networks [20–23].\n•\nHierarchical structures\n\
    Inspired by biological systems with hierarchical structures, bio-inspired IoT\
    \ archi-\ntectures often adopt layered or hierarchical arrangements. This allows\
    \ for efﬁcient data\nprocessing and decision making at different levels, enabling\
    \ distributed intelligence and\nreducing the need for centralized control [15–19].\n\
    •\nAdaptive and resilient\nBio-inspired IoT architectures aim to be adaptive and\
    \ resilient, capable of responding\nto changes and disruptions. They can dynamically\
    \ adapt to environmental conditions,\nreconﬁgure themselves in the presence of\
    \ failures or changes, and continue operating\nreliably [24–26].\n•\nEnergy efﬁciency\n\
    Energy efﬁciency is a critical consideration in IoT deployments. Bio-inspired\
    \ ap-\nproaches can help optimize energy consumption by taking cues from energy-efﬁcient\n\
    mechanisms observed in biological systems, such as efﬁcient communication, resource\n\
    allocation, and power management strategies [24–26].\n•\nSensing and actuation\n\
    Bio-inspired IoT architectures often emphasize advanced sensing capabilities,\
    \ drawing\ninspiration from biological sensors and perception mechanisms [5–8,26].\
    \ These architec-\ntures may also incorporate actuation mechanisms to enable devices\
    \ to interact with the\nphysical world, much like organisms found in nature.\n\
    3.2. Bio-Inspired IoT Algorithms\nHaving described the core part of bio-inspired\
    \ IoT, this section discusses further bio-\ninspired IoT algorithms. Bio-inspired\
    \ IoT algorithms refer to the use of nature-inspired\napproaches to develop efﬁcient\
    \ and adaptive algorithms for IoT systems [3,5,24–28]. These\nalgorithms are based\
    \ on the principles of biology and are designed to solve complex prob-\nlems more\
    \ efﬁciently and effectively [39,40]. Overall, bio-inspired optimization algorithms\n\
    are an emerging approach that is based on the principles of and inspiration from\
    \ the\nbiological evolution of nature to develop new and robust computing techniques.\
    \ There\nare various taxonomies available for bio-inspired algorithms [18,24,25],\
    \ each with its own\npros and cons, and the following Figure 8 depicts a possible\
    \ classiﬁcation of bio-inspired\nIoT algorithms.\n1.\nPhysically Inspired Algorithms\
    \ (PIAs)\nIn general, PIAs draw inspiration from physical principles and phenomena\
    \ to solve\ncomplex problems. These algorithms attempt to replicate or mimic physical\
    \ processes or\nbehaviors to develop efﬁcient and effective problem-solving strategies.\
    \ By harnessing the\nprinciples observed in the physical world, PIAs offer alternative\
    \ approaches to traditional\ncomputational algorithms [25]. e.g., simulated annealing,\
    \ harmony search algorithm.\n2.\nNeural Networks and Artiﬁcial Neural Networks\
    \ (ANNs)\nThese algorithms aim to simulate the structure and functionality of\
    \ biological neural\nnetworks, such as the human brain. In general, they are computational\
    \ models composed of\ninterconnected artiﬁcial neurons, which process and transmit\
    \ information to perform tasks\nlike pattern recognition, classiﬁcation, and prediction\
    \ [40–45]. e.g., feedforward neural\nnetworks, perceptron, convolutional neural\
    \ networks.\nBiomimetics 2023, 8, 373\n14 of 29\n3.\nEvolutionary Algorithms (EAs)\n\
    EAs are a class of computational optimization algorithms inspired by the principles\n\
    of biological evolution and natural selection. These algorithms mimic the process\
    \ of\nnatural evolution to search for optimal solutions to complex problems [45–47].\
    \ EAs operate\non a population of candidate solutions, evolving and improving\
    \ them over successive\ngenerations through the application of genetic operators\
    \ such as mutation, crossover, and\nselection. e.g., genetic algorithms.\n4.\n\
    Immunological Algorithms (IAs)\nIAs are inspired by the principles of the immune\
    \ system. These algorithms draw analo-\ngies from the behavior, mechanisms, and\
    \ processes of the immune system to solve complex\noptimization and pattern recognition\
    \ problems. IA models aim to mimic the adaptive and\nself-organizing nature of\
    \ the immune system to develop intelligent algorithms [25–27]. e.g.,\nartiﬁcial\
    \ immune systems, clonal selection algorithm, immune network algorithm.\n5.\n\
    Swarm Intelligence Algorithms (SIAs)\nSIAs are a class of computational methods\
    \ inspired by the collective behavior of social\ninsects, such as ant colonies\
    \ and bee swarms, or bird ﬂocks [6,9,27]. These algorithms\nmimic the decentralized\
    \ decision making and self-organization observed in nature, where\nindividual\
    \ agents interact locally with their environment and with each other to achieve\
    \ a\ncollective goal [27].\nBiomimetics 2023, 8, x FOR PEER REVIEW \n14 of 28\
    \ \n \n \nFigure 8. Taxonomy of bio-inspired algorithms. \n1. \nPhysically Inspired\
    \ Algorithms (PIAs) \nIn general, PIAs draw inspiration from physical principles\
    \ and phenomena to solve \ncomplex problems. These algorithms attempt to replicate\
    \ or mimic physical processes or \nbehaviors to develop efficient and effective\
    \ problem-solving strategies. By harnessing the \nprinciples observed in the physical\
    \ world, PIAs offer alternative approaches to traditional \ncomputational algorithms\
    \ [25]. E.g., simulated annealing, harmony search algorithm. \n2. \nNeural Networks\
    \ and Artificial Neural Networks (ANNs) \nThese algorithms aim to simulate the\
    \ structure and functionality of biological neural \nnetworks, such as the human\
    \ brain. In general, they are computational models composed \nof interconnected\
    \ artificial neurons, which process and transmit information to perform \ntasks\
    \ like pattern recognition, classification, and prediction [40,41,42,43,44,45].\
    \ E.g., \nfeedforward neural networks perceptron con olutional neural networks\n\
    Figure 8. Taxonomy of bio-inspired algorithms.\nSIAs have found applications in\
    \ various ﬁelds, including optimization, robotics, data\nclustering, and IoT.\
    \ In the context of IoT, SIAs can be leveraged to address several challenges\n\
    related to scalability, adaptability, and fault tolerance. These algorithms enable\
    \ IoT devices\nto cooperate and coordinate their actions to perform complex tasks\
    \ and solve problems\nefﬁciently [6,27,48–50]. One popular swarm intelligence\
    \ algorithm used in IoT is Ant\nColony Optimization (ACO). ACO is inspired by\
    \ the foraging behavior of ants and has\nbeen applied to solve optimization problems\
    \ in IoT networks. ACO works by simulating\nthe behavior of ants searching for\
    \ the shortest path between their colony and a food source.\nBiomimetics 2023,\
    \ 8, 373\n15 of 29\nThe pheromone trails left by ants guide the other ants in\
    \ their search, gradually converging\ntoward the optimal solution [27,48–50].\
    \ In the context of IoT, ACO can be used to optimize\nrouting paths, resource\
    \ allocation, or energy management in a network of interconnected\ndevices [48–50].\
    \ Another swarm intelligence algorithm is Particle Swarm Optimization\n(PSO),\
    \ which is inspired by the ﬂocking behavior of birds, where each individual (particle)\n\
    adjusts its position and velocity based on its own experience and the experience\
    \ of the\nbest-performing particle in the swarm. PSO has been successfully applied\
    \ to various IoT\napplications, including dynamic task scheduling, load balancing,\
    \ and sensor placement\noptimization. These are just a few examples of swarm intelligence\
    \ algorithms used in the\nconstruction of IoT solutions. Other swarm intelligence\
    \ algorithms like Genetic Algorithms\n(GAs), Bacterial Foraging Optimization (BFO),\
    \ and the Fireﬂy Algorithm (FA) have also\nbeen explored in the context of IoT\
    \ [27,48–50].\n6.\nIn addition to the bio-inspired algorithms mentioned earlier,\
    \ there are several other\nnotable bio-inspired algorithms. Here are a few more\
    \ examples:\nA.\nBat Algorithm (BA)\nThe BA takes inspiration from the echolocation\
    \ behavior of bats. It simulates\nthe movement and interaction of bats to search\
    \ for optimal solutions. Bats\nemit ultrasonic sounds and use the echo to detect\
    \ objects and navigate their\nenvironment. The algorithm incorporates this behavior\
    \ to optimize problem\nsolutions [27,48–50].\nB.\nCuckoo Search (CS)\nThe CS algorithm\
    \ is inspired by the brood parasitism behavior of cuckoos.\nCuckoos lay their\
    \ eggs in the nests of other bird species, and the algorithm\nmimics this behavior\
    \ to optimize solutions. It uses random walk and Lévy\nﬂights to explore the search\
    \ space and replace poor solutions with better\nones [27,48–50].\nC.\nBee Algorithm\
    \ (BA)\nThe BA is inspired by the foraging behavior of honeybees. It mimics the\n\
    process of food source exploration and exploitation by a bee colony to solve\n\
    optimization problems [27,48–50]. The algorithm employs employed bees,\nonlooker\
    \ bees, and scout bees to search for high-quality solutions.\nD.\nGrey Wolf Optimizer\
    \ (GWO)\nThe GWO is inspired by the social hierarchy and hunting behavior of grey\n\
    wolves. It imitates the leadership and cooperation of wolf packs to optimize\n\
    solutions. The algorithm deﬁnes four types of wolves (alpha, beta, delta, and\n\
    omega) and simulates their search for prey to ﬁnd optimal solutions [27].\nE.\n\
    Dolphin Echolocation Algorithm (DEA)\nThe DEA is inspired by the echolocation\
    \ behavior of dolphins. It mimics\nthe use of sound waves and echoes for navigation\
    \ and prey detection. The\nalgorithm employs the concept of wavefronts and sonar\
    \ sensing to optimize\nproblem solutions [27].\nAccording to our analysis, bio-inspired\
    \ IoT algorithms offer several advantages over\ntraditional algorithms when it\
    \ comes to solving complex problems pertaining to IoT sys-\ntems. The following\
    \ describes the beneﬁts of these bio-inspired IoT algorithms:\n1.\nAdaptability\n\
    Bio-inspired algorithms are inherently adaptable and can dynamically adjust to\
    \ chang-\ning conditions. They draw inspiration from biological systems that exhibit\
    \ adaptability\nand can handle uncertainties and ﬂuctuations effectively [23–25].\
    \ This adaptability allows\nbio-inspired IoT algorithms to respond to varying\
    \ network conditions, resource availability,\nor environmental changes, resulting\
    \ in improved system performance.\n2.\nScalability\nBiomimetics 2023, 8, 373\n\
    16 of 29\nBio-inspired algorithms, such as swarm intelligence, are well-suited\
    \ for large-scale\nIoT systems [27]. They enable devices to interact and cooperate\
    \ locally, leading to self-\norganization and decentralized decision making. This\
    \ scalability feature allows bio-inspired\nIoT algorithms to efﬁciently handle\
    \ a growing number of devices, interactions, and data in\ncomplex IoT networks.\n\
    3.\nOptimization and efﬁciency\nBio-inspired algorithms excel at optimization\
    \ tasks, resource allocation, and decision\nmaking. By mimicking natural processes\
    \ like genetic evolution or ant colony foraging be-\nhavior, bio-inspired IoT\
    \ algorithms can optimize routing, scheduling, energy management,\nand other resource-intensive\
    \ tasks [48–52]. This optimization leads to improved efﬁciency,\nreduced energy\
    \ consumption, and enhanced system performance [53–57].\n4.\nRobustness and resilience\n\
    Bio-inspired IoT algorithms often exhibit robustness and resilience similar to\
    \ biological\nsystems. They can handle failures, disruptions, or changes in the\
    \ system, thanks to their\ndecentralized and self-organizing nature. This resilience\
    \ helps bio-inspired IoT systems\nmaintain functionality and adapt to evolving\
    \ conditions, making them more reliable in\ndynamic and uncertain environments\
    \ [48–52,58–62].\n5.\nDistributed intelligence\nBio-inspired IoT algorithms enable\
    \ distributed intelligence and decision making. In-\nstead of relying on a centralized\
    \ authority, devices in bio-inspired IoT systems interact\nlocally and collectively\
    \ contribute to the decision-making process. This distributed intelli-\ngence\
    \ enhances fault tolerance, autonomy, and scalability while reducing dependence\
    \ on a\nsingle point of failure [48–52,63–65].\n6.\nSustainability and energy\
    \ efﬁciency\nBio-inspired algorithms often prioritize energy efﬁciency and resource\
    \ optimization,\naligning with sustainability goals. They leverage energy-efﬁcient\
    \ behaviors observed in\nbiological systems, helping reduce energy consumption\
    \ and environmental impact in IoT\ndeployments [6,13–16,64–68].\nOverall, bio-inspired\
    \ IoT algorithms offer a new approach to developing efﬁcient and\nadaptive algorithms\
    \ for IoT systems. As this ﬁeld continues to grow, we can expect to see\nmore\
    \ innovative and efﬁcient algorithms that are inspired by nature.\n4. A Summarization\
    \ of Related Work\nIn recent years, there has been a clear growth of research\
    \ studies seen in the area of\nbio-inspired IoT. Thus, to provide a better understanding,\
    \ Table 2 summarizes the latest\nresearch in terms of the domain it is applied\
    \ to, the key applications it is going to optimize,\nits main contributions, and\
    \ the scope of the work.\nTable 2. Summary of latest research pertaining to bio-inspired\
    \ IoT.\nReference Domain\nApplication/s\nMain Contribution\nScope of the Work\n\
    [1]\nIoT network\ncommunication\nSecurity\nProposes an AI-assisted\nbio-inspired\
    \ algorithm.\nThe authors proposed an AI-assisted bio-inspired\nalgorithm for\
    \ securing IoT communication. Their\nproposed framework comprises two components.\n\
    One component includes bio-inspired\nalgorithm-assisted blockchain technology\
    \ for\nauthentication and authorization, whereas the other\ncomponent includes\
    \ an AI algorithm that keeps an\neye on the IoT communication network.\nBiomimetics\
    \ 2023, 8, 373\n17 of 29\nTable 2. Cont.\nReference Domain\nApplication/s\nMain\
    \ Contribution\nScope of the Work\n[2]\nManufacturing\nScalability\nIntroduces\
    \ a novel\nbio-inspired control\narchitecture for modern\ncyber-physical\nmanufacturing\n\
    systems.\nThis research introduces a novel bio-inspired control\narchitecture\
    \ for modern manufacturing systems,\nwhich suggests an IoT-enabled framework for\n\
    detecting motor abnormalities using vibration\nsensors. The proposed approach\
    \ employs a real-time\nautoencoder for enhanced accuracy. In contrast to\nexisting\
    \ methodologies, this study focuses on\nanalyzing the behavior of anomaly detection\
    \ in\nreal time.\n[3]\nCyber-physical\nsystems\nSecurity\nPresents a bio-inspired\n\
    method for the\nidentiﬁcation of\nhardware trojans.\nThe authors present a bio-inspired\
    \ method for the\nidentiﬁcation of hardware trojans in cyber-physical\nsystems.\
    \ Further, they also developed a bio-inspired\ndevice-locking mechanism, which\
    \ they used in order\nto construct a design-for-trust architecture. The\nﬁndings\
    \ proved that the concept is suitable for\nresource-constrained situations that\
    \ have low\nhardware and power dissipation proﬁles.\n[4]\nIoT network\ncommunication\n\
    Security\nPresents a novel\nbio-inspired approach\nto enhance the security\nof\
    \ distributed IoT\ndevices.\nThe authors present a novel approach inspired by\n\
    biology to enhance the security of distributed IoT\ndevices. The main objective\
    \ of their proposed\nframework is to identify, refuse, and prevent\nunauthorized\
    \ external agents from accessing the\ndevices, both individually and in cooperation,\
    \ in\nreal time.\n[6]\nIoT network\ncommunication\nEnergy\nconsumption\nPresents\
    \ a novel\nclustering approach\nenabled by the\ncombination of\nbio-inspired algorithms\n\
    toward optimizing\nenergy consumption.\nThe authors have used fuzzy logic, chicken\
    \ swarm\noptimization, and a genetic algorithm to present an\noptimal cluster\
    \ formation as a Hybrid Intelligent\nOptimization Algorithm (HIOA) to minimize\
    \ overall\nenergy consumption in an IoT network.\n[7]\nIoT network\ncommunication\n\
    Network slicing\nA novel bio-inspired\nwireless resource\nallocation approach\
    \ is\nintroduced.\nA novel wireless resource allocation approach with\nslice characteristic\
    \ perception has been presented by\nthe authors for use in 5G-enabled IoT networks.\n\
    [8]\nIoT network\ncommunication\nRouting\nperformance\nA bio-inspired\ndecentralized\
    \ service\ndiscovery and selection\nmodel is introduced.\nUsing the bio-inspired\
    \ response threshold model as\ninspiration, this paper proposes a decentralized\n\
    service discovery and selection model. Obtained\nresults indicated that the proposed\
    \ method exhibits\nefﬁcient routing and scalability for IoT networks.\n[9]\nIoT\
    \ network\ncommunication\nSecurity\nA novel hybridized\nbio-inspired intrusion\n\
    detection system is\nintroduced.\nThe researchers present an innovative approach\
    \ for\nenhancing the security of the IoT framework through\na hybridized bio-inspired\
    \ intrusion detection system.\nThis system utilizes a combination of two\nbio-inspired\
    \ algorithms, namely the Sine–Cosine\nAlgorithm (SCA) and the Salp Swarm Algorithm\n\
    (SSA), to effectively analyze and identify essential\nnetwork trafﬁc patterns.\
    \ By extracting relevant\nfeatures, these characteristics are then forwarded to\
    \ a\nmachine learning classiﬁer, enabling the system to\naccurately detect and\
    \ classify intrusive trafﬁc.\nBiomimetics 2023, 8, 373\n18 of 29\nTable 2. Cont.\n\
    Reference Domain\nApplication/s\nMain Contribution\nScope of the Work\n[10]\n\
    IoT network\ncommunication\nSecurity\nA novel trust-based\nsafe data aggregation\n\
    approach and an\nenergy-efﬁcient safe\nrouting protocol\nare introduced.\nResearchers\
    \ propose ANT Particle Swarm\nOptimization Ad hoc On-demand Distance Vector\n\
    (ANTPSOAODV), a trust-based safe data\naggregation approach, and an energy-efﬁcient\
    \ safe\nrouting protocol for a multi-hop environment in an\nIoT-enabled wireless\
    \ sensor network.\n[11]\nIoT network\ncommunication\nResource\nutilization\nA\
    \ whale-based sensor\nclustering model\nis introduced.\nThe authors have proposed\
    \ a novel distributed\nmodel to effectively manage heterogeneous sensors\nand\
    \ select accurate ones in a dynamic IoT\nenvironment, using a bio-inspired clustering\n\
    algorithm: whale-based sensor clustering.\n[12]\nIoT network\ncommunication\n\
    Routing and\ntopology\nmaintenance\nA novel bio-inspired\nclustering algorithm\n\
    is proposed.\nThe authors have proposed a novel bio-inspired\nclustering algorithm\
    \ based on a honeybee algorithm,\ngenetic algorithm, and tabu search for IoT-enabled\n\
    mobile ad hoc networks.\n[13]\nIoT network\ncommunication\nRouting\nA new bio-inspired\n\
    cross-layer routing\nprotocol is purposed.\nThe researchers propose a new Bio-Inspired\n\
    Cross-Layer Routing (BiHCLR) protocol for efﬁcient\nand energy-efﬁcient routing\
    \ in IoT-enabled wireless\nsensor networks.\n[14]\nIoT network\ncommunication\n\
    Security\nA novel bio-inspired\nsecure IPv6\ncommunication\nprotocol is proposed.\n\
    The researchers propose a novel bio-inspired secure\nIpv6 communication protocol\
    \ for the IoT.\n[15]\nIoT network\ncommunication\nEnergy\nconsumption\nA new fusion\
    \ cluster\nhead selection\ntechnique is proposed.\nTo maximize the amount of time\
    \ that a wireless\nsensor network is operational, the optimal selection\nof cluster\
    \ heads is a crucial criterion that must be met.\nWith this in mind, the authors\
    \ present a new fusion\ncluster head selection technique that combines the\nadvantages\
    \ of the LEACH protocol and the\ndragonﬂy algorithm.\n[16]\nAgriculture\nEnergy\n\
    consumption\nand operational\ntime\nA bio-inspired\nself-learning\ncoevolutionary\n\
    algorithm is presented.\nThe authors present a bio-inspired self-learning\ncoevolutionary\
    \ algorithm for dynamic\nmulti-objective optimization of IoT services to cut\n\
    down on energy usage and service time.\n[17]\nIoT network\ncommunication\nRouting\n\
    A bio-inspired\nintelligent routing\nschema is proposed.\nTo reduce the amount\
    \ of energy an IoT network\nconsumes, an intelligent routing scheme based on a\n\
    bio-inspired technique is proposed that can\nsigniﬁcantly extend the IoT network’s\
    \ lifetime.\n[18]\nIoT network\ncommunication\nResource\nallocation\nA new bio-inspired\n\
    algorithm is presented\nfor distributed resource\nallocation.\nThe authors introduced\
    \ a multi-hop DESYNC\nalgorithm, which is a bio-inspired Time Division\nMultiple\
    \ Access (TDMA)-based strategy for\ndistributed resource allocation in sensor\
    \ networks.\nThe DESYNC algorithm draws inspiration from\nbiological systems to\
    \ allocate distributed\nresources efﬁciently.\n[19]\nIoT network\ncommunication\n\
    Routing\nA customized queen\nhoneybee migration\nalgorithm is presented.\nThe\
    \ researchers have enhanced the original queen\nhoneybee migration algorithm,\
    \ which was\nintroduced for efﬁcient mobile routing in WSN, using\nbinary testing\
    \ injection on the cooperative node’s\nselection on the IoT system.\nBiomimetics\
    \ 2023, 8, 373\n19 of 29\nTable 2. Cont.\nReference Domain\nApplication/s\nMain\
    \ Contribution\nScope of the Work\n[20]\nFog computing\nResource\nmanagement\n\
    A new bio-inspired\nalgorithm is presented\nfor resource allocation.\nThe authors\
    \ suggested a new bio-inspired hybrid\nalgorithm, which they referred to as the\
    \ NBI-HA.\nThis approach is a cross between Modiﬁed Particle\nSwarm Optimization\
    \ (MPSO) and Modiﬁed Cat\nSwarm Optimization (MCSO). The hybrid of the\nMPSO and\
    \ MCSO is utilized to manage resources at\nthe fog device level in the proposed\
    \ method.\n[21]\nEdge\ncomputing\nSecurity\nA novel bio-inspired\napproach is\
    \ presented\nfor enhancing the\nsecurity of IoT\napplications.\nThe authors have\
    \ demonstrated a combination of IoT\nperipheral sensors and low-power crypto engines.\n\
    Using bio-inspired systems as inspiration,\nTwo-Dimensional (2D) memtransistors\
    \ accomplish\nthe integration. This “all-in-one” solution seeks to\nenhance the\
    \ functionality and security of\nIoT applications.\n[24]\nIoT network\ncommunication\n\
    Performance\nand energy\nconsumption\nA novel bio-inspired\ntechnique is presented\n\
    in conjunction with\nfuzzy logic.\nThe authors present a technique that integrates\
    \ fuzzy\nlogic with various nature-inspired algorithms—grey\nwolf algorithm and\
    \ ﬁreﬂy algorithm—to effectively\nbalance the burden among IoT devices in a network.\n\
    [37]\nIoT network\ncommunication\nResource\nallocation\nA new ﬁreﬂy-based\nclustering\
    \ approach is\npresented.\nThe authors propose a new ﬁreﬂy-based clustering\n\
    approach for IoT applications.\n[38]\nUnmanned\nAerial Vehicles\n(UAVs)\nOptimal\
    \ path\nplanning\nA bio-inspired optimal\npath planning schema\nis presented.\n\
    Using a joint genetic algorithm and ant colony\noptimization, the authors have\
    \ proposed an optimal\nﬂight planning schema for UAVs.\n[39]\nIoT network\ncommunication\n\
    Energy\nconsumption\nA novel energy-aware\nclustering schema is\npresented.\n\
    Inspired by Particle Swarm Optimization (PSO), the\nauthors propose a novel energy-aware\
    \ bio-inspired\nclustering scheme (PSO-WZ) for IoT network\ncommunication.\n[40]\n\
    IoT network\ncommunication\nEnergy\nconsumption\nA novel bio-inspired\nenergy\
    \ optimization\napproach is presented.\nThe authors propose a novel Multi-Objective\n\
    Optimization (MOO) agent based on Particle Swarm\nGrey Wolf Optimization (PSGWO)\
    \ and inverse fuzzy\nranking for energy optimization of IoT networks.\n[43]\n\
    Smart vehicles\nEnergy\nconsumption\nA bio-inspired smart\nvehicle design is\n\
    presented.\nThe researchers have designed a bio-inspired smart\nvehicle with an\
    \ AI-enabled charging system.\n[44]\nIoT network\ncommunication\nData exchange\n\
    A novel bio-inspired\napproach is presented\nfor data exchange\nover WSNs.\nTwo\
    \ algorithms, Grey Wolf Optimizer (GWO) and\nWhale Optimization Algorithm (WOA),\
    \ in\nconjunction with the Imperialist Competitive\nAlgorithm (ICA)-based Cluster\
    \ Head (CH) selection\nand a novel approach, are proposed for\nheterogeneous networks.\
    \ These algorithms facilitate\ndata exchange over heterogeneous WSN\ninfrastructures\
    \ by addressing the buffer\noverﬂow issue.\n[46]\nSmart city\nEnergy\nconsumption\n\
    and quality of\ndata\nA novel bio-inspired\ndistributed\nevent-sensing and data\n\
    collection framework\nis presented.\nBased on Gene Regulatory Networks (GRNs)\
    \ in\nliving organisms, this paper proposes bioSmartSense,\na novel bio-inspired\
    \ distributed event-sensing and\ndata collection framework. The objective is to\
    \ make\nthe sensing and reporting processes more\nenergy efﬁcient.\nBiomimetics\
    \ 2023, 8, 373\n20 of 29\nTable 2. Cont.\nReference Domain\nApplication/s\nMain\
    \ Contribution\nScope of the Work\n[47]\nFog computing\nService\nallocation\n\
    A novel bio-inspired\nalgorithm is presented\nfor service allocation.\nThe researchers\
    \ have developed a hybrid algorithm\nusing a genetic algorithm and particle swarm\n\
    optimization technique to solve the service allocation\nproblems pertaining to\
    \ fog computing.\n[48]\nTransportation\nAnomaly\ndetection\n(detection of\nroad\
    \ cracks)\nA bio-inspired deep\nlearning approach is\npresented.\nThe authors\
    \ have proposed an IoT system with a\nbio-inspired deep learning approach for\
    \ accurate\nroad crack detection.\n[51]\nIoT network\ncommunication\nEnergy\n\
    consumption\nand routing\nA novel bio-inspired\nrouting algorithm is\npresented.\n\
    The researchers have presented a novel routing\nalgorithm designed to extend the\
    \ longevity of the\nnetwork and conserve the energy of sensor nodes\nconnected\
    \ to the WSN. The proposed algorithm is a\nhybrid of genetic and ant colony\n\
    optimization algorithms.\n[52]\nIoT network\ncommunication\nSecurity\nA novel\
    \ bio-inspired\nensemble classiﬁer is\nintroduced.\nThe authors have introduced\
    \ a novel bio-inspired\nensemble classiﬁer towards improving the\nperformance\
    \ of anomaly detection of IoT networks.\n[53]\nIoT network\ncommunication\nSecurity\n\
    A novel layered\nartiﬁcial immune\nsystem approach,\ninspired by the natural\n\
    immunity mechanism,\nis proposed.\nThe authors have introduced a novel layered\
    \ artiﬁcial\nimmune system approach, inspired by the natural\nimmunity mechanism,\
    \ and adapted an architecture\ncalled ImmuneGAN to identify the affected network\n\
    packets in the IoT network to detect\nsecurity anomalies.\n[54]\nIoT network\n\
    communication\nSecurity\nA novel secure and\nlightweight dynamic\nencryption bio-inspired\n\
    model is introduced.\nThe researchers have introduced a design for a novel\nsecure\
    \ and lightweight dynamic encryption\nbio-inspired model for IoT networks and\n\
    demonstrated that it applies to a broad range of\nlow-complexity IoT deployments.\n\
    [55]\nIoT network\ncommunication\nEnergy\nconsumption\nand routing\nA novel bio-inspired\n\
    algorithm is proposed\nfor determining the\noptimal path.\nResearchers propose\
    \ a novel algorithm based on ant\ncolony optimization for determining the optimal\n\
    path for data transmission in WSNs.\n[56]\nHealthcare\nImage\nprocessing\nA novel\
    \ swarm\nintelligence-based\nimage processing\napproach is introduced.\nThe authors\
    \ have proposed a novel swarm\nintelligence-based approach for lung cancer detection\n\
    and transmission of gathered data to the cloud.\n[57]\nIoT network\ncommunication\n\
    Routing\nA novel bio-inspired\nmiddleware for WSN is\nintroduced.\nThe authors\
    \ have introduced a novel bio-inspired\nmiddleware for WSNs, with the aim of introducing\n\
    self-adaptive architecture.\n[58]\nFog computing\n/ mist\ncomputing\nData\ndistribution\n\
    A bio-inspired\nalgorithm for data\ndistribution is\nintroduced.\nThe researchers\
    \ have proposed a novel bio-inspired\nalgorithm for data distributions in fog\
    \ and mist\ncomputing environments.\n[59]\nIoT network\ncommunication\nSecurity\n\
    A novel intrusion\ndetection system\ninspired by the grey\nwolf algorithm\nis\
    \ introduced.\nThe authors have introduced an intrusion detection\nsystem modeled\
    \ as a two-stage framework with\nfeature selection performed by a generalized\
    \ mean\ngrey wolf algorithm and an elastic net contractive\nautoencoder for classifying\
    \ malicious trafﬁc in\nIoT networks.\nBiomimetics 2023, 8, 373\n21 of 29\nTable\
    \ 2. Cont.\nReference Domain\nApplication/s\nMain Contribution\nScope of the Work\n\
    [62]\nIoT network\ncommunication\nRouting\nA novel ant colony\nmetaphor-based\n\
    approach is introduced\nfor optimized routing.\nThe researchers introduce AntNet,\
    \ a novel approach\nto the adaptive learning of routing tables in\ncommunications\
    \ networks.\n[68]\nUAVs\nRoute selection\nA novel bio-inspired\nclustering scheme\
    \ is\nintroduced.\nThe researchers propose a novel bio-inspired\nclustering scheme\
    \ using a dragonﬂy algorithm for\ncluster formation and management in route planning\n\
    for UAVs.\n[69]\nIoT network\ncommunication\nSelf-\norganization\nand routing\n\
    A novel swarm\nintelligence-based\nalgorithm is introduced\nfor performing\nself-organization\n\
    in WSNs.\nThe researchers present Bio-Inspired Optimization\nfor Sensor Network\
    \ Lifetime (BiO4SeL), a swarm\nintelligence-based algorithm, to perform\nself-organization\
    \ and optimization of a lifetime by\nmeans of routing into a WSN.\n[70]\nIoT\n\
    communication\nnetwork\nSecurity\nA novel bio-inspired\nself-organized secure\n\
    autonomous routing\nprotocol is introduced.\nThe authors present a Bio-Inspired\
    \ Self-Organized\nSecure Autonomous Routing Protocol (BIOSARP)\nand Secured Data\
    \ Assured Routing (SDAR) in WSNs.\n[71]\nIoT network\ncommunication\nSecurity\n\
    A novel bio-inspired\nself-organized secure\nautonomous routing\nprotocol is introduced.\n\
    The researchers introduce a Self-Organized Secure\nAutonomous Routing Protocol\
    \ (BIOSARP) which\nenhances a WSN in securing itself from abnormalities\nand most\
    \ common WSN routing attacks.\nWith the summarization of the literature we have\
    \ analyzed, it is evident that bio-\ninspired IoT is applied to almost all the\
    \ domains we have mentioned above, such as smart\ncities, transportation, agriculture,\
    \ and so on. Further, in terms of the speciﬁcal applications\nit is going to optimize,\
    \ we have noted several applications such as security, routing, energy\nconsumption,\
    \ path planning, anomaly detection, performance, and resource allocation.\n4.1.\
    \ Comparison of Recent Survey Studies\nThe following Table 3 provides a brief\
    \ summary and a comparison of recent survey\nstudies with our work. The survey\
    \ articles presented in the summary were chosen based on\nthe scope of the survey,\
    \ whether the authors have discussed bio-inspiration, bio-inspired\nalgorithms,\
    \ or bio-inspired IoT, and its latest status and anticipated future directions.\n\
    Table 3. Comparison of recent surveys (Yes—\x14, No—\x18).\nReference\nScope of\
    \ the Work\nDiscusses Bio-Inspiration\nDiscusses Bio-Inspired\nAlgorithms\nDiscusses\
    \ Bio-Inspired IoT\nThe Current Status of\nBio-Inspired IoT Is\nDiscussed\nChallenges\
    \ and Future\nDirections of Bio-Inspired\nIoT Are Discussed\n[5]\nHighlighted\
    \ the statistics pertaining to the use of bio-inspired\nsolutions and traditional\
    \ technologies to overcome the challenges\nassociated with IoT.\n\x14\n\x18\n\x18\
    \n\x14\n\x18\n[22]\nResearchers have examined the biologically inspired algorithms\
    \ used\nfor solving challenges posed by different sensor mobility schemes in\n\
    the context of IoT applications.\n\x18\n\x14\n\x18\n\x18\n\x18\nBiomimetics 2023,\
    \ 8, 373\n22 of 29\nTable 3. Cont.\nReference\nScope of the Work\nDiscusses Bio-Inspiration\n\
    Discusses Bio-Inspired\nAlgorithms\nDiscusses Bio-Inspired IoT\nThe Current Status\
    \ of\nBio-Inspired IoT Is\nDiscussed\nChallenges and Future\nDirections of Bio-Inspired\n\
    IoT Are Discussed\n[23]\nProvided a review of how IoT-based AI-enabled bio-inspired\n\
    solutions can be used as a remedy to ﬁght against cyber-crimes.\n\x14\n\x14\n\x18\
    \n\x18\n\x18\n[25]\nProvided a review of bio-inspired solutions that can be used\
    \ to solve\ncomplex engineering problems.\n\x18\n\x14\n\x18\n\x18\n\x18\n[27]\n\
    Presents a comprehensive review of the state of the art, nine\nbio-inspired computing\
    \ algorithms, and their applications.\n\x14\n\x14\n\x18\n\x18\n\x18\n[36]\nProvides\
    \ perspectives on bio-inspired technologies and offers a brief\ndiscussion on\
    \ how such technologies can be used to solve day-to-day\nchallenges in a low-cost\
    \ and sustainable way.\n\x14\n\x18\n\x18\n\x18\n\x18\n[41]\nExplores how bio-inspired\
    \ approaches can be used to secure\nIoT ecosystems.\n\x18\n\x14\n\x18\n\x18\n\x18\
    \n[45]\nExamines 5G network layer security for IoT applications and\nprovides\
    \ a list of network layer security vulnerabilities and\nrequirements for WSNs,\
    \ IoT, and 5G-enabled IoT. Secondly, it\nprovides a comprehensive review of the\
    \ presented network layer\nsecurity methods and bio-inspired techniques for IoT\
    \ applications\nexchanging data packets over 5G, including analysis of bio-inspired\n\
    algorithms in terms of providing a secure network layer for IoT\napplications\
    \ connected to 5G and beyond networks.\n\x18\n\x14\n\x18\n\x14\n\x14\n[49]\nThe\
    \ authors have provided a review of bio-inspired\noptimization algorithms.\n\x14\
    \n\x14\n\x18\n\x18\n\x18\n[60]\nThe authors have provided an in-depth analysis\
    \ of swarm\nintelligence models and how they can be applied to complex systems.\n\
    \x14\n\x14\n\x18\n\x18\n\x18\n[61]\nProvides an in-depth insight into how swarm\
    \ intelligence can be used\nto solve complex engineering problems.\n\x18\n\x14\
    \n\x18\n\x18\n\x18\n[63]\nThe authors discuss state-of-the-art bio-inspired research\
    \ for\ncommunication technology in IoT networks.\n\x14\n\x14\n\x18\n\x18\n\x18\
    \n[65]\nThe swarm intelligence algorithms in IoT are investigated with a\nspecial\
    \ focus on the Internet of Medical Things.\n\x18\n\x14\n\x18\n\x18\n\x18\n[66]\n\
    This study provides a review of swarm intelligence algorithms and\ntheir potential\
    \ use in IoT-based applications.\n\x14\n\x14\n\x18\n\x18\n\x18\n[67]\nThe researchers\
    \ provide an overview of the conﬂuence between big\ndata technologies and bio-inspired\
    \ computation.\n\x18\n\x14\n\x18\n\x18\n\x18\n[72]\nProvides a review of swarm\
    \ intelligence algorithms and summarizes\ntheir applications in the IoT.\n\x18\
    \n\x14\n\x18\n\x18\n\x18\n[73]\nProvides a review of a set of swarm intelligence\
    \ algorithms applied to\nthe main challenges introduced by the IoT.\n\x18\n\x14\
    \n\x18\n\x18\n\x18\nOur work\nPresents a comprehensive review on bio-inspired\
    \ IoT, how it came in\nto play, its ecosystem, state of the art, current status,\
    \ challenges, and\nfuture directions.\n\x14\n\x14\n\x14\n\x14\n\x14\nOverall,\
    \ in recent years there has been clear growth in the number of research activities\n\
    in the context of bio-inspired IoT whereas no reviews/surveys have been conducted\n\
    speciﬁcally on bio-inspired IoT, owing to the novelty of the ﬁeld. Thus, with\
    \ our review\nof bio-inspired IoT, we believe our work would inspire future research\
    \ in the context of\nbio-inspired IoT.\nBiomimetics 2023, 8, 373\n23 of 29\n4.2.\
    \ Comparison of IoT and Bio-Inspired IoT\nBased on the state of the art, the following\
    \ Table 4 highlights key differences between\ntraditional IoT and bio-inspired\
    \ IoT. Accordingly, it is evident that bio-inspired IoT is far\nahead of traditional\
    \ IoT as bio-inspired IoT is capable of overcoming most of the constraints\npertaining\
    \ to traditional IoT.\nTable 4. Difference between traditional IoT and bio-inspired\
    \ IoT.\nCriteria\nIoT\nBio-Inspired IoT\nDesign\nTechnology-driven and focused\
    \ on\nconnectivity and data\nBio-inspired algorithms are driven by\nbiological\
    \ principles\nOptimization\nCentralized control and optimization\nalgorithms\n\
    Decentralized decision making and\ncollective intelligence\nScalability\nScalability\
    \ challenges due to the\nincreasing number of devices\nSwarm intelligence allows\
    \ efﬁcient\nscalability\nResource efﬁciency\nOptimization focused on energy and\n\
    resource usage\nEfﬁciency in resource allocation and\nenergy management\nSecurity\
    \ and privacy\nTraditional security and privacy concerns\nBio-inspired algorithms\
    \ may introduce\nnew security challenges\nAdaptability\nLimited adaptability to\
    \ changing\nconditions\nAdaptive and robust to dynamic\nenvironments similar to\
    \ biological\norganisms\nLearning and adaptation\nMachine learning/deep learning\n\
    techniques applied for data analysis\nBio-inspired algorithms with adaptive\n\
    learning capabilities\n5. Challenges Pertaining to Bio-Inspired IoT\nWhile bio-inspired\
    \ IoT offers varying beneﬁts as opposed to traditional IoT, it also\nfaces certain\
    \ challenges. The following describes key challenges pertaining to bio-inspired\n\
    IoT as we have noted through the state of the art.\n1.\nComplexity and scalability\n\
    Bio-inspired algorithms often involve complex interactions and computations, espe-\n\
    cially when simulating swarm intelligence or evolutionary processes. Scaling up\
    \ these\nalgorithms to handle large-scale IoT systems with a massive number of\
    \ devices and data\npoints can be a challenging task. Thus, efﬁciently managing\
    \ the complexity and ensuring\nthe scalability of bio-inspired IoT solutions require\
    \ careful design and optimization [34–36].\n2.\nResource constraint nature\nIoT\
    \ devices are typically resource-constrained in terms of computational power,\
    \ mem-\nory, energy, and bandwidth [32]. Bio-inspired algorithms, especially those\
    \ involving\ncomplex computations or large populations, can impose signiﬁcant\
    \ resource demands\non IoT devices. Thus, designing bio-inspired IoT solutions\
    \ that are efﬁcient in terms\nof computational requirements and resource usage\
    \ becomes crucial to overcome these\nconstraints [32,34–36].\n3.\nAdaptability\
    \ and robustness\nBio-inspired algorithms are known for their adaptability and\
    \ robustness. However,\nadapting these algorithms to dynamic and evolving IoT\
    \ environments poses challenges.\nIoT systems experience changes in device availability,\
    \ network conditions, and data char-\nacteristics, requiring bio-inspired IoT\
    \ solutions to be resilient and adaptive to such varia-\ntions [27,35,49].\nBiomimetics\
    \ 2023, 8, 373\n24 of 29\n4.\nSecurity and privacy\nIn general, IoT systems raise\
    \ concerns about security and privacy, and bio-inspired\nIoT is no exception.\
    \ The interconnected nature of IoT devices and the use of bio-inspired\nalgorithms\
    \ can introduce vulnerabilities, such as attacks on swarm intelligence or genetic\n\
    processes [73]. Thus, ensuring the security and privacy of data, communications,\
    \ and\nalgorithms in bio-inspired IoT is an ongoing challenge that many researchers\
    \ are currently\nworking on [34–36].\n5.\nInteroperability and standardization\n\
    Bio-inspired IoT solutions may involve different devices, protocols, or platforms,\
    \ lead-\ning to interoperability challenges [32–36]. Integrating diverse devices,\
    \ algorithms, and data\nformats can be complex, requiring standardized interfaces\
    \ and protocols for seamless com-\nmunication and collaboration. Hence, developing\
    \ interoperable bio-inspired IoT solutions\nis crucial for their widespread adoption\
    \ and integration into existing IoT ecosystems.\n6.\nEthical and legal considerations\n\
    Bio-inspired IoT solutions may raise ethical and legal concerns, particularly\
    \ when they\ninvolve autonomous decision making, learning from data, or privacy-sensitive\
    \ information.\nAddressing issues related to accountability, fairness, transparency,\
    \ data privacy, and com-\nplying with available policies and regulations is essential\
    \ to ensure responsible deployment\nand use of bio-inspired IoT solutions.\nIn\
    \ summary, addressing all these challenges requires interdisciplinary research,\
    \ collab-\noration, and a holistic approach that considers the technical, computational,\
    \ environmental,\nsocial, and ethical aspects of bio-inspired IoT systems.\n6.\
    \ Current Status and Future Directions\nBio-inspired IoT aims to address various\
    \ challenges in traditional IoT systems, such\nas scalability, energy efﬁciency,\
    \ adaptability, and fault tolerance. Drawing inspiration\nfrom biological systems,\
    \ it aids in designing IoT systems that can self-organize, self-heal,\nand adapt\
    \ to changing environments. As of now, according to the latest statistics, there\n\
    are around 16 billion IoT devices, a number which is expected to double by 2030\
    \ [29–31].\nOn the other hand, the market size was valued at nearly USD 600 billion\
    \ in 2022, and it\nis expected to reach more than USD 3000 billion in 2030 [29–31].\
    \ Thus, being a rapidly\ngrowing technological ecosystem, it is expected that\
    \ the challenges that IoT may encounter\nmay also grow in the long run. Hence\
    \ even though the research in terms of bio-inspired IoT\nis still at an early\
    \ stage, it is expected that it will also continue to grow toward designing\n\
    robust, safe, and resilient IoT solutions in the long run [74,75]. According to\
    \ our review,\nit is evident that the integration of bio-inspired solutions with\
    \ the IoT holds tremendous\npotential for shaping the future of technology and\
    \ determining the future of the human\nrace, enabling us to overcome whatever\
    \ challenges we encounter. Such bio-inspired IoT\nsolutions would continue to\
    \ grow in the long run, and in this regard, anticipated future\ndirections of\
    \ bio-inspired IoT are highlighted in the following for better understanding.\n\
    1.\nHybrid approaches\nThe integration of bio-inspired algorithms with other computational\
    \ techniques, such\nas machine learning, deep learning, and data analytics, can\
    \ enhance the capabilities of\nbio-inspired IoT [63,64,73–78]. Hybrid approaches\
    \ that combine the strengths of different\nalgorithms and methodologies are likely\
    \ to emerge, enabling more powerful and adaptable\nsolutions [74,75,79].\n2.\n\
    Integration with edge computing/fog computing\nWith the growing emphasis on edge\
    \ /fog computing in IoT, bio-inspired algorithms\ncan be leveraged at the edge\
    \ to enable intelligent decision making and resource optimiza-\ntion [30–34].\
    \ Bio-inspired edge intelligence can lead to more autonomous, energy-efﬁcient,\n\
    Biomimetics 2023, 8, 373\n25 of 29\nand responsive IoT systems that process data\
    \ and make decisions locally, reducing latency\nand bandwidth requirements.\n\
    3.\nExplainability and interpretability\nAs bio-inspired IoT systems become more\
    \ complex and autonomous, the need for\nexplainable and interpretable models and\
    \ algorithms becomes critical. Research focusing on\nunderstanding and interpreting\
    \ the decision-making processes of bio-inspired algorithms\ncan lead to more trustworthy\
    \ and transparent IoT systems, enabling users to comprehend\nand validate the\
    \ outputs and behavior of such systems [48–50,73–75].\n4.\nCollaborative and cooperative\
    \ bio-inspired IoT systems\nExploring the collective behavior and cooperation\
    \ among multiple bio-inspired IoT\nsystems can lead to innovative solutions [76,77].\
    \ Research on collaborative algorithms,\ncoordination mechanisms, and collective\
    \ decision making can enable IoT systems to work\ntogether as intelligent collectives,\
    \ sharing information and optimizing tasks in a cooperative\nmanner [73].\n5.\n\
    Ethical and social considerations\nAs bio-inspired IoT becomes more integrated\
    \ into various aspects of daily life, ad-\ndressing ethical and social implications\
    \ is crucial. Hence, future research should focus on\nunderstanding and addressing\
    \ issues related to bias, fairness, accountability, transparency,\nand the social\
    \ impact of bio-inspired IoT systems [49,73–75].\n7. Conclusions\nWith the emergence\
    \ of bio-inspired IoT, researchers have been able to develop creative\nsolutions\
    \ to handle the complex issues faced by IoT deployments by pulling inspiration\n\
    from biological systems such as diverse ecosystems and swarms. In the study, we\
    \ have car-\nried out a review of what is meant by bio-inspiration, how bio-inspired\
    \ IoT can overcome\nthe challenges associated with traditional IoT, bio-inspired\
    \ solutions, and the ecosystem\nof bio-inspired IoT, highlighting challenges and\
    \ future directions. With the review per-\nformed, it is evident that bio-inspired\
    \ IoT has shown exceptional ﬂexibility and robustness\nin various domains where\
    \ traditional IoT solutions are not capable of delivering such\nbeneﬁts. According\
    \ to the state of the art, researchers have suggested decentralized and au-\n\
    tonomous designs for IoT networks based on the self-organizing and self-healing\
    \ qualities\nof natural systems, allowing them to dynamically adapt to changing\
    \ conditions, reorganize\nthemselves, and recover from failures. These bio-inspired\
    \ techniques have the potential to\nprovide extremely scalable and durable IoT\
    \ systems that can survive disturbances while\nmaintaining consistent connections.\
    \ Nonetheless, it is also evident that the bio-inspired\nIoT paradigm has considerable\
    \ environmental advantages where researchers have created\nenergy-efﬁcient communication\
    \ protocols, low-power sensor networks, and intelligent\ndata-processing approaches\
    \ by mimicking nature’s efﬁciency and sustainability. These\ndevelopments not\
    \ only reduce the carbon footprint of IoT installations but also allow\nIoT technologies\
    \ to be integrated into environmentally benign applications such as smart\nagriculture,\
    \ wildlife monitoring, and smart cities. However, while bio-inspired IoT systems\n\
    have enormous promise, there are several difﬁculties and prospects for further\
    \ study. The\nscalability and security of these systems continue to be signiﬁcant\
    \ challenges, similar to\ntraditional IoT solutions, necessitating more research\
    \ in the area. On the other hand, ethical\nproblems, privacy concerns, and the\
    \ responsible use of data must all be properly addressed\nfor bio-inspired IoT\
    \ to be a stable technology, which researchers are currently working\non. In conclusion,\
    \ bio-inspired IoT solutions will surely play a critical part in deﬁning the\n\
    next generation of smart and pervasive solutions enhancing the power of the biological\n\
    world, ushering us into a more efﬁcient, robust, and harmonious future as we continue\
    \ to\ninvestigate the synergy between nature and technology.\nBiomimetics 2023,\
    \ 8, 373\n26 of 29\nFunding: This research was funded by Qassim University.\n\
    Institutional Review Board Statement: Not applicable.\nData Availability Statement:\
    \ No new data is created.\nAcknowledgments: The researchers would like to thank\
    \ the Deanship of Scientiﬁc Research, Qassim\nUniversity for funding the publication\
    \ of this project.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nAlroobaea, R.; Arul, R.; Rubaiee, S.; Alharithi, F.S.; Tariq,\
    \ U.; Fan, X. AI-assisted bio-inspired algorithm for secure IoT communica-\ntion\
    \ networks. Clust. Comput. 2022, 25, 1805–1816. [CrossRef]\n2.\nAruquipa, G.;\
    \ Diaz, F. An IoT architecture based on the control of Bio Inspired manufacturing\
    \ system for the detection of\nanomalies with vibration sensors. Procedia Comput.\
    \ Sci. 2022, 200, 438–450. [CrossRef]\n3.\nJohnson, A.P.; Al-Aqrabi, H.; Hill,\
    \ R. Bio-Inspired Approaches to Safety and Security in IoT-Enabled Cyber-Physical\
    \ Systems.\nSensors 2020, 20, 844. [CrossRef] [PubMed]\n4.\nMariyanayagam, D.;\
    \ Shukla, P.; Virdee, B.S. Bio-Inspired Framework for Security in IoT Devices.\
    \ In Proceedings of the 5th\nWorld Conference on Smart Trends in Systems Security\
    \ and Sustainability, WS4 2021, London, UK, 29–30 July 2021; pp. 749–757.\n[CrossRef]\n\
    5.\nHamidouche, R.; Aliouat, Z.; Gueroui, A.M. Bio-Inspired vs Classical Solutions\
    \ to Overcome the IoT Challenges. In Proceedings\nof the 2018 3rd Cloudiﬁcation\
    \ of the Internet of Things (CIoT), Paris, France, 2–4 July 2018; pp. 1–7. [CrossRef]\n\
    6.\nKumar, M.; Kumar, S.; Kashyap, P.K.; Aggarwal, G.; Rathore, R.S.; Kaiwartya,\
    \ O.; Lloret, J. Green Communication in Internet of\nThings: A Hybrid Bio-Inspired\
    \ Intelligent Approach. Sensors 2022, 22, 3910. [CrossRef]\n7.\nWu, D.; Zhang,\
    \ Z.; Wu, S.; Yang, J.; Wang, R. Biologically Inspired Resource Allocation for\
    \ Network Slices in 5G-Enabled Internet\nof Things. IEEE Internet Things J. 2019,\
    \ 6, 9266–9279. [CrossRef]\n8.\nRapti, E.; Houstis, C.; Houstis, E.; Karageorgos,\
    \ A. A Bio-Inspired Service Discovery and Selection Approach for IoT Applications.\n\
    In Proceedings of the 2016 IEEE International Conference on Services Computing\
    \ (SCC), San Francisco, CA, USA, 27 June–2 July\n2016; pp. 868–871. [CrossRef]\n\
    9.\nSingh, R.; Ujjwal, R.L. Hybridized bio-inspired intrusion detection system\
    \ for Internet of Things. Front. Big Data 2023, 6, 1081466.\n[CrossRef] [PubMed]\n\
    10.\nChandnani, N.; Khairnar, C.N. Bio-Inspired Multilevel Security Protocol for\
    \ Data Aggregation and Routing in IoT WSNs. Mob.\nNetw. Appl. 2022, 27, 1030–1049.\
    \ [CrossRef]\n11.\nBouarourou, S.; Boulaalam, A.; Nfaoui, E.H. A bio-inspired\
    \ adaptive model for search and selection in the Internet of Things\nenvironment.\
    \ PeerJ Comput. Sci. 2021, 7, e762. [CrossRef]\n12.\nAhmad, M.; Hameed, A.; Ullah,\
    \ F.; Wahid, I.; Rehman, S.U.; Khattak, H.A. A bio-inspired clustering in mobile\
    \ adhoc networks for\ninternet of things based on honey bee and genetic algorithm.\
    \ J. Ambient. Intell. Humaniz. Comput. 2020, 11, 4347–4361. [CrossRef]\n13.\n\
    Tandon, A.; Kumar, P.; Rishiwal, V.; Yadav, M.; Yadav, P. A Bio-inspired Hybrid\
    \ Cross-Layer Routing Protocol for Energy\nPreservation in WSN-Assisted IoT. KSII\
    \ Trans. Internet Inf. Syst. 2021, 15, 1317–1341. [CrossRef]\n14.\nSaleem, K.;\
    \ Chaudhry, J.; Orgun, M.A.; Al-Muhtadi, J. A bio-inspired secure IPv6 communication\
    \ protocol for Internet of Things.\nIn Proceedings of the 2017 Eleventh International\
    \ Conference on Sensing Technology (ICST), Sydney, NSW, Australia, 4–6\nDecember\
    \ 2017; pp. 1–6. [CrossRef]\n15.\nDevassy, D.; Johnraja, J.I.; Paulraj, G.J.L.\
    \ NBA: Novel bio-inspired algorithm for energy optimization in WSN for IoT applications.\n\
    J. Supercomput. 2022, 78, 16118–16135. [CrossRef]\n16.\nYang, Z.; Jin, Y.; Hao,\
    \ K. A Bio-Inspired Self-Learning Coevolutionary Dynamic Multiobjective Optimization\
    \ Algorithm for\nInternet of Things Services. IEEE Trans. Evol. Comput. 2019,\
    \ 23, 675–688. [CrossRef]\n17.\nSackey, S.H.; Chen, J.; Ansere, J.A.; Gapko, G.K.;\
    \ Kamal, M. A Bio-Inspired Technique based on Knowledge Discovery for Routing\n\
    in IoT Networks. In Proceedings of the 2020 IEEE 23rd International Multitopic\
    \ Conference (INMIC), Bahawalpur, Pakistan, 5–7\nNovember 2020; pp. 1–6. [CrossRef]\n\
    18.\nKim, Y.-J.; Choi, H.-H.; Lee, J.-R. A Bioinspired Fair Resource-Allocation\
    \ Algorithm for TDMA-Based Distributed Sensor Networks\nfor IoT. Int. J. Distrib.\
    \ Sens. Netw. 2016, 12, 7296359. [CrossRef]\n19.\nAripriharta; Hao, W.Z.; Muladi;\
    \ Horng, G.-J.; Jong, G.-J. A New Bio-Inspired for Cooperative Data Transmission\
    \ of IoT. IEEE\nAccess 2020, 8, 161884–161893. [CrossRef]\n20.\nRaﬁque, H.; Shah,\
    \ M.A.; Islam, S.U.; Maqsood, T.; Khan, S.; Maple, C. A Novel Bio-Inspired Hybrid\
    \ Algorithm (NBIHA) for\nEfﬁcient Resource Management in Fog Computing. IEEE Access\
    \ 2019, 7, 115760–115773. [CrossRef]\n21.\nDodda, A.; Trainor, N.; Redwing, J.M.;\
    \ Das, S. All-in-one, bio-inspired, and low-power crypto engines for near-sensor\
    \ security\nbased on two-dimensional memtransistors. Nat. Commun. 2022, 13, 3587.\
    \ [CrossRef] [PubMed]\n22.\nHamidouche, R.; Aliouat, Z.; Gueroui, A.M.; Ari, A.A.A.;\
    \ Louail, L. Classical and bio-inspired mobility in sensor networks for IoT\n\
    applications. J. Netw. Comput. Appl. 2018, 121, 70–88. [CrossRef]\nBiomimetics\
    \ 2023, 8, 373\n27 of 29\n23.\nBalasaraswathi, M.; Sivasankaran, V.; Akshaya,\
    \ N.; Baskar, R.; Suganya, E. Internet of Things (IoT) Based Bio-inspired Artiﬁcial\n\
    Intelligent Technique to Combat Cybercrimes: A Review. In Internet of Things in\
    \ Smart Technologies for Sustainable Urban\nDevelopment; Kanagachidambaresan,\
    \ G.R., Maheswar, R., Manikandan, V., Ramakrishnan, K., Eds.; EAI/Springer Innovations\
    \ in\nCommunication and Computing; Springer International Publishing: Cham, Switzerland,\
    \ 2020; pp. 141–155. [CrossRef]\n24.\nSharma, D.K.; Mishra, J.; Singh, A.; Govil,\
    \ R.; Singh, K.K.; Singh, A. Optimized Resource Allocation in IoT using Fuzzy\
    \ Logic and\nBio-Inspired Algorithms. Wirel. Pers. Commun. 2023, 131, 1393–1413.\
    \ [CrossRef]\n25.\nSethi, M.A.J.; Ijaz, M.; Urooj, H.; Hussin, F.A. Bio-Inspired\
    \ Solutions and Its Impact on Real-World Problems: A Network on Chip\n(NoC) Perspective.\
    \ In Application Speciﬁc Integrated Circuits—Technologies, Digital Systems and\
    \ Design Methodologies; Fisher, E., Ed.;\nIntechOpen: London, UK, 2019. [CrossRef]\n\
    26.\nExamples of Bio-Inspired Solutions That Are More Efﬁcient Than Current Ones.\
    \ Human Kinetics. Available online: https://us.\nhumankinetics.com/blogs/excerpt/examples-of-bio-inspired-solutions-that-are-more-efﬁcient-than-current-ones\
    \ (accessed on\n17 May 2023).\n27.\nDarwish, A. Bio-inspired computing: Algorithms\
    \ review, deep analysis, and the scope of applications. Future Comput. Inform.\
    \ J.\n2018, 3, 231–246. [CrossRef]\n28.\nZegzhda, P.; Zegzhda, D.; Kalinin, M.;\
    \ Pechenkin, A.; Minin, A.; Lavrova, D. Safe Integration of SIEM Systems with\
    \ Internet of\nThings: Data Aggregation, Integrity Control, and Bioinspired Safe\
    \ Routing. In Proceedings of the 9th International Conference on\nSecurity of\
    \ Information and Networks, Newark, NJ, USA, 20–22 July 2016; ACM: New York, NY,\
    \ USA, 2016; pp. 81–87. [CrossRef]\n29.\nDressler, F.; Akan, O. Bio-inspired networking:\
    \ From theory to practice. IEEE Commun. Mag. 2010, 48, 176–183. [CrossRef]\n30.\n\
    IoT Sensors Market Size, Share & Analysis | Forecast—2030.\nAllied Market Research.\n\
    Available online: https://www.\nalliedmarketresearch.com/iot-sensors-market-A13095\
    \ (accessed on 19 May 2023).\n31.\nPentelovitch, N.; Nagel, J.K. Understanding\
    \ the Use of Bio-Inspired Design Tools by Industry Professionals. Biomimetics\
    \ 2022,\n7, 63. [CrossRef] [PubMed]\n32.\nGupta, B.B.; Quamara, M. An overview\
    \ of Internet of Things (IoT): Architectural aspects, challenges, and protocols.\
    \ Concurr.\nComput. Pract. Exp. 2020, 32, e4946. [CrossRef]\n33.\nA Reference\
    \ Architecture for the Internet of Things. Available online: https://wso2.com/whitepapers/a-reference-architecture-\n\
    for-the-internet-of-things/ (accessed on 23 May 2023).\n34.\nHegde, S.G. Study\
    \ of IoT: Understanding IoT Architecture, Applications, Issues and Challenges.\
    \ Int. J. Adv. Netw. Appl.\n2016, 478, 477–482.\n35.\nGardaševi´c, G.; Veleti´c,\
    \ M.; Maleti´c, N.; Vasiljevi´c, D.; Radusinovi´c, I.; Tomovi´c, S.; Radonji´c,\
    \ M. The IoT Architectural Framework,\nDesign Issues and Application Domains.\
    \ Wirel. Pers. Commun. 2017, 92, 127–148. [CrossRef]\n36.\nArena, P.; Bucolo,\
    \ M.; Buscarino, A.; Fortuna, L.; Frasca, M. Reviewing Bioinspired Technologies\
    \ for Future Trends: A Complex\nSystems Point of View. Front. Phys. 2021, 9, 750090.\
    \ Available online: https://www.frontiersin.org/articles/10.3389/fphy.2021.7\n\
    50090 (accessed on 23 May 2023). [CrossRef]\n37.\nJabeur, N.; Yasar, A.U.-H.;\
    \ Shakshuki, E.; Haddad, H. Toward a bio-inspired adaptive spatial clustering\
    \ approach for IoT\napplications. Future Gener. Comput. Syst. 2020, 107, 736–744.\
    \ [CrossRef]\n38.\nYang, Q.; Yoo, S.-J. Optimal UAV Path Planning: Sensing Data\
    \ Acquisition Over IoT Sensor Networks Using Multi-Objective\nBio-Inspired Algorithms.\
    \ IEEE Access 2018, 6, 13671–13684. [CrossRef]\n39.\nZhang, Y.; Wang, Y. A novel\
    \ energy-aware bio-inspired clustering scheme for IoT communication. J. Ambient.\
    \ Intell. Humaniz.\nComput. 2020, 11, 4239–4248. [CrossRef]\n40.\nGhorpade, S.;\
    \ Zennaro, M.; Chaudhari, B.S. Towards green computing: Intelligent bio-inspired\
    \ agent for IoT-enabled wireless\nsensor networks. Int. J. Sens. Netw. 2021, 35,\
    \ 121. [CrossRef]\n41.\nBanu, D.R. A Review on Biologically Inspired Approaches\
    \ to Security for Internet of Things (IoT). In Proceedings of the 2016\nInternational\
    \ Conference on Electrical, Electronics, and Optimization Techniques (ICEEOT),\
    \ Chennai, India, 3–5 March 2016.\n42.\nGracanin, D.; D’Amico, A.; Manuel, M.;\
    \ Carson, W.; Eltoweissy, M.; Cheng, L. Biologically inspired safety and security\
    \ for smart\nbuilt environments: Position paper. In Proceedings of the 2018 IEEE\
    \ Security and Privacy Workshops (SPW), San Francisco, CA,\nUSA, 25 May 2018;\
    \ IEEE: Piscataway, NJ, USA, 2018; pp. 293–298.\n43.\nJain, R.; Chakravarthi,\
    \ M.K.; Kumar, P.K.; Hemakesavulu, O.; Ramirez-Asis, E.; Pelaez-Diaz, G.; Mahaveerakannan,\
    \ R. Internet of\nThings-based smart vehicles design of bio-inspired algorithms\
    \ using artiﬁcial intelligence charging system, Nonlinear Engineering.\nNonlinear\
    \ Eng. 2022, 11, 582–589. [CrossRef]\n44.\nHamidouche, R.; Aliouat, Z.; Ari, A.A.A.;\
    \ Gueroui, M. An Efﬁcient Clustering Strategy Avoiding Buffer Overﬂow in IoT Sensors:\n\
    A Bio-Inspired Based Approach. IEEE Access 2019, 7, 156733–156751. [CrossRef]\n\
    45.\nSaleem, K.; Alabduljabbar, G.M.; Alrowais, N.; Al-Muhtadi, J.; Imran, M.;\
    \ Rodrigues, J.J.P.C. Bio-Inspired Network Security for\n5G-Enabled IoT Applications.\
    \ IEEE Access 2020, 8, 229152–229160. [CrossRef]\n46.\nRoy, S.; Ghosh, N.; Das,\
    \ S.K. bioSmartSense: A Bio-inspired Data Collection Framework for Energy-efﬁcient,\
    \ QoI-aware Smart\nCity Applications. In Proceedings of the 2019 IEEE International\
    \ Conference on Pervasive Computing and Communications\n(PerCom), Kyoto, Japan,\
    \ 11–15 March 2019; pp. 1–10. [CrossRef]\n47.\nYadav, V.; Natesha, B.V.; Guddeti,\
    \ R.M.R. GA-PSO: Service Allocation in Fog Computing Environment Using Hybrid\
    \ Bio-Inspired\nAlgorithm. In Proceedings of the TENCON 2019—2019 IEEE Region\
    \ 10 Conference (TENCON), Kochi, India, 17–20 October 2019.\nBiomimetics 2023,\
    \ 8, 373\n28 of 29\n48.\nAlfarraj, O. Internet of things with bio-inspired co-evolutionary\
    \ deep-convolution neural-network approach for detecting road\ncracks in smart\
    \ transportation. Neural Comput. Appl. 2020. [CrossRef]\n49.\nIadarola, G.; Poli,\
    \ A.; Spinsante, S. Analysis of galvanic skin response to acoustic stimuli by\
    \ wearable devices. In Proceedings of\nthe 2021 IEEE International Symposium on\
    \ Medical Measurements and Applications (MeMeA), Lausanne, Switzerland, 23–25\n\
    June 2021; pp. 1–6.\n50.\nCosoli, G.; Iadarola, G.; Poli, A.; Spinsante, S. 50\
    \ Learning classiﬁers for analysis of Blood Volume Pulse signals in IoT-enabled\n\
    systems. In Proceedings of the 2021 IEEE International Workshop on Metrology for\
    \ Industry 4.0 & IoT (MetroInd4.0&IoT), Rome,\nItaly, 7–9 June 2021; pp. 307–312.\
    \ [CrossRef]\n51.\nSaad, A.; Hegazy, I.; El-Horbaty, E.S.M. Efﬁcient Bio-Inspired\
    \ Routing Algorithm for IoT. In Proceedings of the 2021 Tenth\nInternational Conference\
    \ on Intelligent Computing and Information Systems (ICICIS), Cairo, Egypt, 5–7\
    \ December 2021; pp.\n303–310. [CrossRef]\n52.\nPokala, J.; Lalitha, B. A Novel\
    \ Intrusion Detection System for RPL Based IoT Networks with Bio-Inspired Feature\
    \ Selection and\nEnsemble Classiﬁer. Wirel. Pers. Commun. 2021, preprint. [CrossRef]\n\
    53.\nSoni, V.; Saxena, S.; Bhatt, D.P.; Yadav, N.S. ImmuneGAN: Bio-inspired Artiﬁcial\
    \ Immune System to Secure IoT Ecosystem. In\nLecture Notes in Networks and Systems,\
    \ Proceedings of the International Conference on Cyber Security, Privacy and Networking\
    \ (ICSPN\n2022), Bangkok, Thailand, 9–11 September 2021; Nedjah, N., Pérez, G.M.,\
    \ Gupta, B.B., Eds.; Springer International Publishing: Cham,\nSwitzerland, 2023;\
    \ Volume 599, pp. 110–121. [CrossRef]\n54.\nKataria, B.; Jethva, H.; Shinde, P.;\
    \ Banait, S.; Shaikh, F.; Ajani, S. SLDEB: Design of a Secure and Lightweight\
    \ Dynamic Encryption\nBio-Inspired Model for IoT Networks. Int. J. Saf. Secur.\
    \ Eng. 2023, 13, 325–331. [CrossRef]\n55.\nSharmin, A.; Anwar, F.; Motakabber,\
    \ S.M.A. A novel bio-inspired routing algorithm based on ACO for WSNs. Bull. Electr.\
    \ Eng.\nInform. 2019, 8, 718–726. [CrossRef]\n56.\nVenkatesh, C.; Bojja, P. Lung\
    \ Cancer Detection using Bio-Inspired Algorithm in CT Scans and Secure Data Transmission\
    \ through\nIoT Cloud. Int. J. Adv. Comput. Sci. Appl. 2020, 11, 373–379. [CrossRef]\n\
    57.\nEleftherakis, G.; Baxhaku, F.; Vasilescu, A. Bio-inspired Adaptive Architecture\
    \ for Wireless Sensor Networks. In Proceedings of\nthe 26th Pan-Hellenic Conference\
    \ on Informatics, Athens, Greece, 25–27 November 2022; Available online: https://dl.acm.org/\n\
    doi/fullHtml/10.1145/3575879.3575976 (accessed on 13 June 2023).\n58.\nVasconcelos,\
    \ D.; Andrade, R.; Severino, V.; Maia, M. Bio-Inspired Model for Data Distribution\
    \ in Fog and Mist Computing. In\nProceedings of the 2018 IEEE 42nd Annual Computer\
    \ Software and Applications Conference (COMPSAC), Tokyo, Japan, 23–27\nJuly 2018.\
    \ [CrossRef]\n59.\nMoizuddin, M.; Jose, M.V. A bio-inspired hybrid deep learning\
    \ model for network intrusion detection. Knowl.-Based Syst. 2022,\n238, 107894.\
    \ [CrossRef]\n60.\nBonabeau, E.; Dorigo, M.; Theraulaz, G. Swarm Intelligence:\
    \ From Natural to Artiﬁcial Systems; Oxford University Press: Oxford,\nUK, 1999.\
    \ [CrossRef]\n61.\nSwarm Intelligence; Elsevier: Amsterdam, The Netherlands, 2001.\
    \ [CrossRef]\n62.\nDi Caro, G.; Dorigo, M. AntNet: Distributed stigmergetic control\
    \ for communications networks. J. Artif. Intell. Res. 1998,\n9, 317–365. [CrossRef]\n\
    63.\nSari, I.R.F. Bioinspired algorithms for Internet of Things network. In Proceedings\
    \ of the 2017 4th International Conference on\nInformation Technology, Computer,\
    \ and Electrical Engineering (ICITACEE), Semarang, Indonesia, 18–19 October 2017;\
    \ p. 1.\n[CrossRef]\n64.\nCao, L.; Chen, H.; Chen, Y.; Yue, Y.; Zhang, X. Bio-Inspired\
    \ Swarm Intelligence Optimization Algorithm-Aided Hybrid\nTDOA/AOA-Based Localization.\
    \ Biomimetics 2023, 8, 186. [CrossRef]\n65.\nAlizadehsani, R.; Roshanzamir, M.;\
    \ Izadi, N.H.; Gravina, R.; Kabir, H.M.D.; Nahavandi, D.; Alinejad-Rokny, H.;\
    \ Khosravi, A.;\nAcharya, U.R.; Nahavandi, S.; et al. Swarm Intelligence in Internet\
    \ of Medical Things: A Review. Sensors 2023, 23, 1466. [CrossRef]\n66.\nZedadra,\
    \ O.; Guerrieri, A.; Jouandeau, N.; Spezzano, G.; Seridi, H.; Fortino, G. Swarm\
    \ intelligence-based algorithms within\nIoT-based systems: A review. J. Parallel\
    \ Distrib. Comput. 2018, 122, 173–187. [CrossRef]\n67.\nTorre-Bastida, A.I.; Díaz-de-Arcaya,\
    \ J.; Osaba, E.; Muhammad, K.; Camacho, D.; Del Ser, J. Bio-inspired computation\
    \ for big\ndata fusion, storage, processing, learning and visualization: State\
    \ of the art and future directions. Neural Comput. Appl. 2021.\n[CrossRef]\n68.\n\
    De Castro, M.F.; Ribeiro, L.B.; Oliveira, C.H.S. An autonomic bio-inspired algorithm\
    \ for wireless sensor network self-organization\nand efﬁcient routing. J. Netw.\
    \ Comput. Appl. 2012, 35, 2003–2015. [CrossRef]\n69.\nAftab, F.; Khan, A.; Zhang,\
    \ Z. Bio-inspired clustering scheme for Internet of Drones application in industrial\
    \ wireless sensor\nnetwork. Int. J. Distrib. Sens. Netw. 2019, 15, 155014771988990.\
    \ [CrossRef]\n70.\nNiranjana, G.; Poongodai, A.; Soujanya, K.L.S. Biological inspired\
    \ self-organized secure autonomous routing protocol and secured\ndata assured\
    \ routing in WSN: Hybrid EHO and MBO approach. Int. J. Commun. Syst. 2022, 35,\
    \ e5044. [CrossRef]\n71.\nSaleem, K.; Fisal, N.; Arifﬁn, S.H.S. BIOSARP: Biological\
    \ inspired self-organized secure autonomous routing protocol for wireless\nsensor\
    \ network. In Proceedings of the 11th WSEAS International Conference on Applied\
    \ Computer Science, Penang, Malaysia,\n3–5 October 2011; p. 165.\n72.\nSun, W.;\
    \ Tang, M.; Zhang, L.; Huo, Z.; Shu, L. A Survey of Using Swarm Intelligence Algorithms\
    \ in IoT. Sensors 2020, 20, 1420.\n[CrossRef]\nBiomimetics 2023, 8, 373\n29 of\
    \ 29\n73.\nAbualigah, L.; Falcone, D.; Forestiero, A. Swarm Intelligence to Face\
    \ IoT Challenges. Comput. Intell. Neurosci. 2023, 2023, 4254194.\n[CrossRef]\n\
    74.\nDillow, C. Six Ways Bio-Inspired Design Is Reshaping the Future. Popular\
    \ Science. 28 March 2011. Available online: https:\n//www.popsci.com/science/article/2011-03/gallery-six-ways-biomimicry-reshaping-future/\
    \ (accessed on 12 July 2023).\n75.\nWhat Does the Future Hold for Nature Inspired\
    \ Research? Available online: https://www.futurelearn.com/info/courses/\nrobotic-future/0/steps/26364\
    \ (accessed on 12 July 2023).\n76.\nZhang, Z.; Vogelbacher, F.; Song, Y.; Tian,\
    \ Y.; Li, M. Bio-inspired optical structures for enhancing luminescence. Exploration\
    \ 2023,\n3, 20220052. [CrossRef]\n77.\nFeng, C.; Tan, P.; Nie, G.; Zhu, M. Biomimetic\
    \ and bioinspired nano-platforms for cancer vaccine development. Exploration 2023,\n\
    3, 20210263. [CrossRef]\n78.\nYan, C.; Meng, L.; Li, L.; Zhang, J.; Wang, Z.;\
    \ Yin, J.; Zhang, J.; Sun, Y.; Zheng, B. Age-Invariant Face Recognition by Multi-Feature\n\
    Fusionand Decomposition with Self-attention. ACM Trans. Multimed. Comput. Commun.\
    \ Appl. 2022, 18, 1–18. [CrossRef]\n79.\nYan, C.; Gong, B.; Wei, Y.; Gao, Y. Deep\
    \ Multi-View Enhancement Hashing for Image Retrieval. arXiv 2020, arXiv:2002.00169.\n\
    [CrossRef] [PubMed]\nDisclaimer/Publisher’s Note: The statements, opinions and\
    \ data contained in all publications are solely those of the individual\nauthor(s)\
    \ and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)\
    \ disclaim responsibility for any injury to\npeople or property resulting from\
    \ any ideas, methods, instructions or products referred to in the content.\n"
  inline_citation: '>'
  journal: Biomimetics (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2313-7673/8/4/373/pdf?version=1692259522
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Bio-Inspired Internet of Things: Current Status, Benefits, Challenges, and
    Future Directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
