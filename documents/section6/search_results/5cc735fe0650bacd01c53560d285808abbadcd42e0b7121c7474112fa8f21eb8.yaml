- analysis: '>'
  authors:
  - Chen Y.
  - You J.
  - Xing Z.
  - Hu H.
  - Mei G.
  - Shi Z.
  - Liu H.
  citation_count: '8'
  description: 'It is needed to solve the problems such as relatively low input-output
    ratio and environmental pollution for Chinese agriculture, with the large amount
    of agricultural production and consumption. In the background of changing international
    situation and frequent natural disasters, transforming traditional agricultural
    production methods in China is an urgent. Driven by emerging technologies such
    as artificial intelligence, internet of things, cloud platform, automatic control,
    and new generation communication and so on, precision agriculture came out and
    was undoubtedly an effective way. Precision agriculture has become a common choice
    for developing sustainable and high-yield agriculture around the world. In order
    to obtain the development orientation of precision agriculture and successful
    practices in the world, this paper reviews the studies on precision agriculture
    developing status. The aim of this paper is to refine the experiences of precision
    agriculture developing in the main developed countries and regions and take a
    look at the precision agriculture development in China. Adopting the method of
    systematic literature analyzing and summary, Section 1 studies the development
    status of precision agriculture in the main developed countries and regions, such
    as America, Japan, European Union and Israel. The idea of precision agriculture
    was first proposed in America. Until today, America has developed mature precision
    agriculture system, which benefits from the highly developed technologies. Considering
    the serious contradiction between large population and less farmland, during 1970s,
    Japan took measures of consolidating farmland on a large scale and building farmland
    infrastructure and so on to improve the agricultural production conditions. The
    agricultural community was also formed to operate collaboratively the agricultural
    production. The development of precision agriculture in European Union is driving
    by digital technologies. The water-saving agriculture represented by drip-irrigation
    and sprinkler-irrigation has made remarkable results in Israel. The development
    experiences of precision agriculture in the main developed countries and regions
    enlighten us that: 1) the leading by government is the key; 2) the informatization
    construction is the foundation; 3) the advanced technology is the core; 4) the
    cultivation of new type of farmers is the guarantee. Section 2 analyzed the basements
    and weaknesses for developing precision agriculture in China. The weaknesses are
    the emphasis in this section. First, the farmland in China is scattered and the
    infrastructure is not perfect. Taking the informatization perspective, even though
    number of agriculture related information systems exist, the data and information
    are not interoperable between these systems. Second, at the present stage, we
    cannot acquire the temporal and spatial continuous agricultural information due
    to the rarity domestic satellite data and ground sensors for agriculture monitoring.
    Third, automatic variable operating system and equipment are lacking since the
    technology integration of information technology, communication and agricultural
    machine has not been achieved. Fourth, insufficient high-quality agricultural
    talents. Facing these weakness and Chinese conditions, Section 3 provided five
    suggestions to develop precision agriculture in China. Firstly, our government
    should overall plan and give guarantee in police making, infrastructure construction
    and financial support, etc. Secondly, we should improve the agricultural production
    condition through expanding moderately the operating scale of farmland and constructing
    the field infrastructure net and the national agricultural information platform.
    Thirdly, the key technology research, such as the information retrieval using
    remote sensing and technology integration of communication, automatic controlling,
    spatial information and smart machinery must be focused. Fourthly, the new type
    of personnel in agricultural field can be cultivated. Fifthly, pilot demonstration
    can be carried out according to the regional difference.'
  doi: 10.11975/j.issn.1002-6819.2021.11.036
  full_citation: '>'
  full_text: '>

    "EI CSA CABI 卓越期刊 CA Scopus CSCD 核心期刊 首页 关于我刊 编委会 投稿指南 期刊浏览 获奖文章 农业工程期刊 期刊订阅 联系我们
    EI收录本刊数据 English 文章导航 >  农业工程学报  > 2021  >  37(11) : 315-324.  > DOI: 10.11975/j.issn.1002-6819.2021.11.036
    引用本文: 陈媛媛, 游炯, 幸泽峰, 胡华浪, 梅国涛, 石智峰, 刘海启. 世界主要国家精准农业发展概况及对中国的发展建议[J]. 农业工程学报, 2021,
    37(11): 315-324. DOI: 10.11975/j.issn.1002-6819.2021.11.036 Citation: Chen Yuanyuan,
    You Jiong, Xing Zefeng, Hu hualang, Mei Guotao, Shi Zhifeng, Liu Haiqi. Review
    of precision agriculture development situations in the main countries in the world
    and suggestions for China[J]. Transactions of the Chinese Society of Agricultural
    Engineering (Transactions of the CSAE), 2021, 37(11): 315-324. DOI: 10.11975/j.issn.1002-6819.2021.11.036
    世界主要国家精准农业发展概况及对中国的发展建议 陈媛媛1,  游炯1,  幸泽峰1,  胡华浪1,  梅国涛2,  石智峰1,  刘海启1 1. 农业农村部耕地利用遥感重点实验室/农业农村部规划设计研究院，北京
    100121 2. 潍柴雷沃重工股份有限公司，潍坊 260000 基金项目: 农业农村部规划设计研究院自主研发项目（ZZYFXKFZ201904）；国家重点研发计划（2016YFB0501505）
    Review of precision agriculture development situations in the main countries in
    the world and suggestions for China Chen Yuanyuan1,  You Jiong1,  Xing Zefeng1,  Hu
    hualang1,  Mei Guotao2,  Shi Zhifeng1,  Liu Haiqi1 1. Key Laboratory of Cultivated
    Land Use, Ministry of Agriculture and Rural Affairs/Academy of Agricultural Planning
    and Engineering, Ministry of Agriculture and Rural Affairs, Beijing 100121, China
    2. Weichai Lovol Heavy Industry Co., Ltd, Weifang 260000, China 摘要 摘要 HTML全文 图(0)
    表(0) 参考文献(76) 相关文章 施引文献(71) 资源附件(0) 摘要: 中国是一个农业生产和消费大国，同时也面临着投入产出比率相对较低、环境污染等一系列问题，尤其在国际形势变化、自然灾害频发的背景下，中国传统农业生产方式亟需转型升级。在人工智能、物联网、云平台等新兴技术的带动下，精准农业孕育而生，成为了全球农业实现绿色、高产的有效途径。该文瞄准世界精准农业发展较好的发达国家和地区，通过文献梳理和总结，凝练出政府引导、信息化建设、科技支撑、新型农民培育等发达国家和地区发展精准农业的成功经验。在此基础上，着眼于中国大田种植，分析中国发展精准农业的基础，从农田配套设施及信息化建设、农业信息获取、自动变量作业系统及装备等方面充分认识中国发展精准农业的薄弱环节。该文旨在厘清中国精准农业的发展方向，借鉴国际经验，提出中国精准农业今后的发展建议，如强化政府组织领导作用、加强基础设施和信息化建设、聚焦核心技术研发、培养新型农业人才、分区域试点示范。   关键词:
    精准农业  /  信息技术  /  战略与政策  /  发达国家和地区  /  中国  /  发展建议   Abstract: It is needed to
    solve the problems such as relatively low input-output ratio and environmental
    pollution for Chinese agriculture, with the large amount of agricultural production
    and consumption. In the background of changing international situation and frequent
    natural disasters, transforming traditional agricultural production methods in
    China is an urgent. Driven by emerging technologies such as artificial intelligence,
    internet of things, cloud platform, automatic control, and new generation communication
    and so on, precision agriculture came out and was undoubtedly an effective way.
    Precision agriculture has become a common choice for developing sustainable and
    high-yield agriculture around the world. In order to obtain the development orientation
    of precision agriculture and successful practices in the world, this paper reviews
    the studies on precision agriculture developing status. The aim of this paper
    is to refine the experiences of precision agriculture developing in the main developed
    countries and regions and take a look at the precision agriculture development
    in China. Adopting the method of systematic literature analyzing and summary,
    Section 1 studies the development status of precision agriculture in the main
    developed countries and regions, such as America, Japan, European Union and Israel.
    The idea of precision agriculture was first proposed in America. Until today,
    America has developed mature precision agriculture system, which benefits from
    the highly developed technologies. Considering the serious contradiction between
    large population and less farmland, during 1970s, Japan took measures of consolidating
    farmland on a large scale and building farmland infrastructure and so on to improve
    the agricultural production conditions. The agricultural community was also formed
    to operate collaboratively the agricultural production. The development of precision
    agriculture in European Union is driving by digital technologies. The water-saving
    agriculture represented by drip-irrigation and sprinkler-irrigation has made remarkable
    results in Israel. The development experiences of precision agriculture in the
    main developed countries and regions enlighten us that: 1) the leading by government
    is the key; 2) the informatization construction is the foundation; 3) the advanced
    technology is the core; 4) the cultivation of new type of farmers is the guarantee.
    Section 2 analyzed the basements and weaknesses for developing precision agriculture
    in China. The weaknesses are the emphasis in this section. First, the farmland
    in China is scattered and the infrastructure is not perfect. Taking the informatization
    perspective, even though number of agriculture related information systems exist,
    the data and information are not interoperable between these systems. Second,
    at the present stage, we cannot acquire the temporal and spatial continuous agricultural
    information due to the rarity domestic satellite data and ground sensors for agriculture
    monitoring. Third, automatic variable operating system and equipment are lacking
    since the technology integration of information technology, communication and
    agricultural machine has not been achieved. Fourth, insufficient high-quality
    agricultural talents. Facing these weakness and Chinese conditions, Section 3
    provided five suggestions to develop precision agriculture in China. Firstly,
    our government should overall plan and give guarantee in police making, infrastructure
    construction and financial support, etc. Secondly, we should improve the agricultural
    production condition through expanding moderately the operating scale of farmland
    and constructing the field infrastructure net and the national agricultural information
    platform. Thirdly, the key technology research, such as the information retrieval
    using remote sensing and technology integration of communication, automatic controlling,
    spatial information and smart machinery must be focused. Fourthly, the new type
    of personnel in agricultural field can be cultivated. Fifthly, pilot demonstration
    can be carried out according to the regional difference.   Keywords: precision
    agriculture  /  information technology  /  strategy and policy  /  developed countries
    and regions  /  China  /  suggestion   We recommend Technique innovation and research
    fields of modern agricultural and ecological water-saving in the future Kang Shaozhong
    et al., Transactions of the Chinese Society of Agricultural Engineering, 2003
    Key technologies and practice of unmanned farm in China LUO Xiwen et al., Transactions
    of the Chinese Society of Agricultural Engineering Design and implementation of
    spatial differentiation-based system for identifying spatial features of well-facilitated
    farmland construction Li Shaoshuai et al., Transactions of the Chinese Society
    of Agricultural Engineering, 2020 Exploration and development prospect of eco-unmanned
    farm modes Lan Yubin et al., Transactions of the Chinese Society of Agricultural
    Engineering, 2021 Design of the detection system for the unmanned navigation parameters
    of field agricultural machines based on improved AOA mode Xie Binbin et al., Transactions
    of the Chinese Society of Agricultural Engineering, 2021 Design and implementation
    of monitoring system for agricultural environment based on WebGIS with Internet
    of Things Keming Du et al., Pacific Affairs, 2016 Analysis of the Development
    Trends in Global Agricultural Animal Gene Editing Fundamental Research ZHANG Meng-Meng
    et al., Journal of Agricultural Biotechnology, 2023 Farmland shelterbelt interval
    setting based on protection insurance rate Lekui Zhu et al., Pacific Affairs,
    2016 Combining Luhmann and Actor-Network Theory to See Farm Enterprises as Self-organizing
    Systems Authors: Noe et al., Cybernetics & Human Knowing, 2006 A review of the
    blue economy, potential, and opportunities in seven Caribbean nations pre-COVID-19
    Sui Phang et al., ICES Journal of Marine Science, 2023 Powered by PDF下载 ( 653
    KB) XML下载 导出引用 点击查看大图 计量 文章访问数:  865 HTML全文浏览量:  19 PDF下载量:  567 被引次数: 71 出版历程
    收稿日期:  2021-01-07 修回日期:  2021-05-07 发布日期:  2021-05-31 分享 友情链接> Aquacultural Engineering
    International Journal of Agricultural and Biological Engineering Journal of Irrigation
    and Drainage Engineering Paddy and Water Environment 版权所有 © 农业工程学报 京ICP备06025802号-3
    地址：北京朝阳区麦子店街41号（100125） 电话：010-59197078/7077/7076 邮箱：tcsae@tcsae.org 邮件订阅 RSS
    今日头条 抖音号 视频号 淘宝 微店 本系统由北京仁和汇智信息技术有限公司开发  "'
  inline_citation: '>'
  journal: Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural
    Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Review of precision agriculture development situations in the main countries
    in the world and suggestions for China
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ram C.R.S.
  - Ravimaran S.
  - Krishnan R.S.
  - Julie E.G.
  - Robinson Y.H.
  - Kumar R.
  - Son L.H.
  - Thong P.H.
  - Thanh N.Q.
  - Ismail M.
  citation_count: '23'
  description: Nowadays, smart farming involves the integration of advanced technologies
    that incorporate low-cost robots to meet the required knowledge and maintain the
    health of plants in farming. Technologies like precision agriculture are also
    used to optimize resources based on the field condition. Internet of Green Things
    is also one of the technologies to integrate and share the information between
    people and healthy farm things. Internet of Green Things gives the information
    like soil moisture, temperature, humidity, and nutrient level by means of respective
    sensors. Monitoring and information gathering in green houses with the help of
    robots is a tedious and expensive process. In this connection, information is
    shared among low-cost robots encouraging data availability of the current state
    of a plant with other robots. This will emphasize the monitoring of green houses
    in a well-organized way. In this article, a Flask-based framework through Raspberry
    Pi is proposed for interoperability among the low-cost ESP8266 robots. Data gathering
    is performed by smart robots that are accessible through Message Queuing Telemetry
    Transport subscribes by means of Representational State Transfer Application Programming
    Interface. A cloud-like database server is provided to stock up the data. The
    integration of robotics with Internet of Green Things gains more advantage in
    gathering about spatial information data that are connected with the irrigation.
    Visualization techniques and perspectives based on Internet of Green Things for
    precision agriculture in the field of farming are highlighted.
  doi: 10.1177/1550147720923477
  full_citation: '>'
  full_text: '>

    "We value your privacy We and our partners store and/or access information on
    a device, such as cookies and process personal data, such as unique identifiers
    and standard information sent by a device for personalised advertising and content,
    advertising and content measurement, audience research and services development.
    With your permission we and our partners may use precise geolocation data and
    identification through device scanning. You may click to consent to our and our
    1439 partners’ processing as described above. Alternatively you may click to refuse
    to consent or access more detailed information and change your preferences before
    consenting. Please note that some processing of your personal data may not require
    your consent, but you have a right to object to such processing. Your preferences
    will apply to this website only. You can change your preferences or withdraw your
    consent at any time by returning to this site and clicking the \"Privacy\" button
    at the bottom of the webpage. MORE OPTIONS DECLINE ALL ACCEPT ALL Skip to main
    content Search this journal Enter search terms... Search Advanced search I have
    access via: UNIV NEBRASKA LIBRARIES Access/Profile Cart Browse by discipline Information
    for International Journal of Distributed Sensor Networks JOURNAL HOMEPAGE Open
    access Research article First published online June 15, 2020 Internet of Green
    Things with autonomous wireless wheel robots against green houses and farms C
    Ramasamy Sankar Ram, S Ravimaran, […] , and Mahmoud Ismail https://orcid.org/0000-0003-2706-4621
    +7View all authors and affiliations All Articles https://doi.org/10.1177/1550147720923477
    Contents PDF / ePub Cite article Share options Information, rights and permissions
    Metrics and citations Figures and tables Abstract Nowadays, smart farming involves
    the integration of advanced technologies that incorporate low-cost robots to meet
    the required knowledge and maintain the health of plants in farming. Technologies
    like precision agriculture are also used to optimize resources based on the field
    condition. Internet of Green Things is also one of the technologies to integrate
    and share the information between people and healthy farm things. Internet of
    Green Things gives the information like soil moisture, temperature, humidity,
    and nutrient level by means of respective sensors. Monitoring and information
    gathering in green houses with the help of robots is a tedious and expensive process.
    In this connection, information is shared among low-cost robots encouraging data
    availability of the current state of a plant with other robots. This will emphasize
    the monitoring of green houses in a well-organized way. In this article, a Flask-based
    framework through Raspberry Pi is proposed for interoperability among the low-cost
    ESP8266 robots. Data gathering is performed by smart robots that are accessible
    through Message Queuing Telemetry Transport subscribes by means of Representational
    State Transfer Application Programming Interface. A cloud-like database server
    is provided to stock up the data. The integration of robotics with Internet of
    Green Things gains more advantage in gathering about spatial information data
    that are connected with the irrigation. Visualization techniques and perspectives
    based on Internet of Green Things for precision agriculture in the field of farming
    are highlighted. Introduction Recent advancement in the Internet and Web technologies
    has made availability of the pitch to users to create and use information as web
    services effectively. Web services incorporate much genuine data gathered by smart
    forms and provide the same to users. This stirring thought coined the term Internet
    of Green Things (IoGT). The Message Queuing Telemetry Transport (MQTT) protocol1–6
    was invented by Andy Stanford-Clark and Arlen Nipper in 1999. The properties such
    as bandwidth efficient, light weight, data agnostic, simple implementation, and
    session awareness are much helpful to implement this framework. JavaScript Object
    Notation (JSON) is basically a syntax for serializing the objects such as strings,
    numbers, arrays, and so on and used for swapping data that are outlined to be
    perceived clearly by humans and parsed logically and effortlessly by machines.
    As JSON itself is entirely language independent, it is sought-after often for
    dispatching data through the RESTful Web Services.7–9 Since a public Web API is
    accessible, it provides a programmatic access to the developers. API is usually
    outlined as a collection of Hypertext Transfer Protocol (HTTP) for requested messages;
    it also receives alongside the response message structure in the context of Web
    development. This article scrutinizes the MQTT’s publish/subscribe services on
    low-cost smart robots, optimization of Representational State Transfer Application
    Programming Interface (REST API) and JSON data from sensors, and a simple Raspberry
    Pi–based cloud for green house. Furthermore, how far it is utilized to process
    the data from the Web Application Programming Interfaces (APIs) is analyzed. A
    standard data pattern should be determined while creating an application to communicate
    with private and warehouse systems. There are ranges of public and standardized
    options available and the supreme choice and the ultimate selection depends on
    the vital demands and functionality of their applications. The data in an Extensible
    Markup Language (XML) payload are encapsulated to some extent of a Simple Object
    Access Protocol (SOAP)-based Web services.9–11 In many application frameworks,
    when XML performs professionally, it has some downsides that make it less than
    ideal for others. As a result, the creation of interactive web applications creates
    petulant user experience by its innumerable access. Ultimately, using JavaScript,
    these asynchronous calls originate on the end user and integrate formatting information,
    transfer it to a web server, parsing and processing with the actual response information.12–19
    JSON procures a standardized data exchange format, which is more appropriate for
    web applications, while many browsers are able to build, transfer, and parse XML.
    On the other side, JSON is an autonomous human-readable format with a broad range
    of implementation possibilities. Information will be intentionally formatted as
    per the JSON standard.20 It is now predominantly a format of data and is not limited
    to web applications virtually used in any framework where applications require
    the exchange or storage of structured information as text. Innumerable libraries
    for almost all programming languages grant simple parsing of JSON data, and most
    of the web frameworks currently reinforce generating JSON as response data.14,16
    In addition to the fact that JSON has a small-scale foot-print than XML, it is
    appropriate for situations where network speed is restricted. Evidently, mobile
    devices habitually have slower connections and hence welfare from a compact download.
    API is a group of procedures, conventions, and mechanisms for creating software
    applications.21–28 An API states how software elements communicate and are being
    exploited while programming the Graphical User Interface (GUI) components. In
    divergence to a private API, a public API is available widespread for all developers
    to fetch the green house data in gain access. They permit the developers to access
    data which can then be utilized to augment their own applications. Public APIs
    can remarkably enlarge income in the absence of the business to put money in recruiting
    brand new programmers who produce for them a very commercial software application.
    Nevertheless, it is essential to recall that opening the data from database to
    the public may result in a wide range of reliability and management challenges.
    For example, issuing public APIs can create rigidity for institutions to command
    experienced clients with their information benefits. Public API publishers cannot
    conclude that the client apps created on their APIs would provide a better user
    experience. The primary focus and usage of the MQTT protocol here are publishing
    and subscribing JSON-based data topics to open IoGT use cases.2,4,29–40 Low-cost
    android application (app) contained a smart home system prepared to remotely turn
    on/off a group of 208 devices using only four digital pins of an Arduino UNO board–based
    ATmega328microcontroller.41 The appliance-switching scheme requires approximately
    70% lower cable costs for real-life fitting in home correlation to the standard
    devices linked. The smart home system includes repeated alerts by light if it
    detects humans very near at night and the “exterior mode” will shut it down for
    each single machine connected to the system with a touch from the Android app
    when the user leaves. A smart security system is able to make an alarm, send a
    message, and call the user by Global System for Mobile Communications (GSM) module
    to probe several intrusions in the house. Home energy management system (HEMS)
    is a decentralized structural design based on a multi-agent system.42 This intellectual
    energy management system is to be developed by IEEE- and FIPA-accommodating multi-agent
    platform. This enables agents to communicate, interact, as well as negotiate by
    energy sources plus devices of the smart home to give energy usage to reduce the
    cost of electricity bill. Multi-agent systems are used for implementing HEMSs
    to illustrate the communication of agents among devices for energy sources in
    sequence.43–50 Presently, no interacting low-cost and highly autonomous robots
    are found in the green houses. In particular, sensors are placed and data manipulation
    has been done manually or with the help of web interfaces. Besides, some tasks
    such as information gathering about current status and health of a plant have
    long been considered to be too complex to automate completely. In addition, green
    houses face the problem of labor shortages. As a consequence, the production process
    is progressively affected. In this context, we surveyed the above-said approaches
    and applications focused on improving the operational conditions, liveliness,
    effectiveness, protection, efficiency, and profitability of agricultural processes,
    in cases where physical labor will not be able to replaced by but can be complemented
    with proposed low-cost robots. In this article, we propose a set of Flask-MQTT-based
    autonomous wheel robots working under the control of Raspberry Pi on which the
    broker is installed. These low-cost ESP8266 robots are interacting with each other
    about data gathering and updating with one another. The accumulated data from
    the robots are stored in the database. The integration of robotics with IoGT gains
    more advantage in acquiring spatial information data connected with irrigation.
    Visualization techniques and perspectives based on IoGT for precision agriculture
    in the field of farming are highlighted. Table 1 describes the functionality metrics
    of MQTT over HTTP. From the observation of the table given, the key contribution
    of this proposed work can be viewed as the smart autonomous wireless robots controlling
    the green house from anywhere providing the green house’s data of flask server
    at the Raspberry Pi. The MQTT-based publishing/subscribing system for interoperability
    among smart robots and REST API has also been developed in Flask. In REST API,
    how the JSON data are manipulated with the MQTT protocol is described in the following
    section. Table 1. Functional comparison between MQTT and HTTP. Functionality MQTT
    HTTP Data transmission Pub/sub GET/POST Performance Light weightand simple Complex
    Methodology Data-centric Document-centric Upper layer Runs over TCP Over UDP Data
    distribution One to many One to one Content size Small Large TCP: transmission
    control protocol; UDP: user datagram protocol; MQTT: message queuing telemetry
    transport; HTTP: hypertext transfer protocol. The organization of this work starts
    with various related works. From the observations, the significance of API and
    background technologies such as JSON and MQTT is explored. Then, implementation
    of IoGT—A Flask-based python framework—and REST API for accessing low-cost ESP8266
    wheeled robots through MQTT publish–subscribe technique is discussed. The results
    from device interactions, round trip time (RTT), and performance are analyzed
    consequently. Proposed system MQTT is a lightweight messaging protocol used frequently
    in the message interactions of Internet of Things. JSON is a self-describing and
    hierarchal structure. The syntax of JSON is predefined by two basic structures
    as name-value pairs described as ordered set of values.9 The value in the said
    structures can be any of the types listed such as number, array, object, string
    (unicode), Boolean (true or false), and null. These structures can be nested;
    nested arrays are the mostly used values in the JSON data interchange format.
    The JSON values cannot be a function. Since this flexible structure is used in
    RESTful Web services, we bring this on MQTT as topics while publishing or subscribing.
    Example of green things in JSON Listing 01 { “Title”: “Temperature”, “Description”:
    “DS18B20”, “Type”: “ONEWIRE”, “Properties”: { “Values”: { “ID”: “ESP-1”, “temp”:
    34.3445 } } } The values and keys are description of temperature sensor and respective
    values enclosed in double quotes. Double quotes are not necessary if the value
    is a number. If the JSON value is a number, it can be expressed as an integer
    or floating point. The file extension of the JSON data format is JSON. Both the
    JSON and the XML shall be exploited to measure the local and flexible objects
    in human-readable and text-based, data proxy format. Besides, these data exchange
    formats are more identical with the given text in any preferable format, and the
    same another one is grasped in the other format.9 Therefore, when determining
    an information exchange format, choosing one to the other is not a simple occurrence;
    instead, preferably, the format has the characteristics making it the appropriate
    choice for a particular implementation. JSON has preferably roots in programming
    languages and hence it yields a more accepted and readily accessible mapping to
    exchange the structured data whereas XML has its own style preferably for mapping.
    Formally, both JSON and XML both support internationalization since they are supporting
    Unicode. Finally, this convenient data format is more practical on the transactions
    between the smart house and the data center. Analysis of web API GUI provides
    simpler access for users to utilize programs and APIs create it easier for programmers
    to use precise technologies in creating applications. By extracting hidden implementations
    and disclosing objects or actions that only the developers require, an API minimizes
    the cognitive work on them. While a graphical interface for an email user might
    supply a user along with a button which exhibits all the procedures for extracting
    and highlighting new emails, an API for file input/output will provide the programmer
    a function that duplicates a file from one location to another. Web APIs provide
    access for programmers to exploit remote data by underlying protocols and certain
    standards for interaction which allows various technologies to perform together,
    despite of platform or language. Consider an example of Java Database Connectivity
    API that permits developers to query various kinds of databases with the similar
    group of operations. Java Remote Procedure Call (RPC) API utilizes the protocol
    to permit invocation functions to operate remotely (Figure 1). Consequently, remote
    APIs are convenient in preserving the object encapsulation in object-oriented
    programming. Web APIs are the predefined interfaces across which communications
    occur between an enterprise and applications that utilize its benefits. An API
    perspective is an architectural outline which spins everywhere, assigning programmable
    interfaces to a group of services to a variety of applications serving widespread
    types of consumers. Figure 1. Accessing data center via APIs. The proposal of
    an API has outstanding influence on its performance. The concept of data encapsulation
    explains the task of programming interfaces by folding the implementation information
    of the modules by which the users of modules do not perceive the difficulties
    inside the modules. Hence, the design of an API tries to issue only the mechanisms
    a user would expect. The design of programming interfaces constitutes a significant
    part of software component. Public Web APIs are available for most of the data
    requirements for the developers and the programmers. APIs may include data of
    various areas like books, business, cloud storage and file sharing, health, music,
    news, science, sports/fitness, transportation, university, and so on.9 The OpenWeatherMap
    is a public Web API which provides weather data for variety of mobile and web
    applications. This API provides free access to its subscribed customers. To access
    this API, users shall create an account and API key is provided for the subscribed
    user for accessing the Web API. Data for Weather Web API are collected from the
    weather stations in different format including current weather information, historical
    weather data, days, and an hour forecast information and daily forecast information.
    The current weather information format gives weather data for different geographical
    locations all over the world. This API is often updated from the weather stations
    established in different locations. The data are available in XML, HTML, and JSON
    formats. The user shall request the data in any format according to their need.
    The next format for retrieving weather data is historical weather data. This format
    provides historical data of the weather in hours for any location from 1 month
    and may be up to 5 years according to the user’s subscription. The days and hour
    forecast information contribute weather data for about 5 days. For these 5 days,
    the weather data for every 3 h are provided. The next format for this API is the
    daily forecast information. This format yields weather data for about 16 days.
    The weather data for any requested unique location or city can be retrieved by
    the name of the city, ID, coordinates, and by postal code. The city name and the
    country code of the city can be added to the request message. Then, the corresponding
    weather data for the given city can be obtained. The API provides a list of cities
    with corresponding IDs in their website. The weather data can be accessed using
    the city ID. The weather data can also be accessed by the use of geographic coordinates
    like latitude and longitude and by the city’s zip code. Along with this, the API
    provides the weather data for multiple cities. The weather forecasting for the
    cities within a zone (specified by the latitude and longitude) and the cities
    within a circle defined by center point can be obtained. The responds of the API
    contain only the originally measured and calculated data. The responds comprise
    many parameters like coordinates (latitude and longitude), temperature, humidity,
    pressure in sea level and ground level, wind speed and direction, and rain and
    snow volume. If any parameter is not found in the respond, it implies that the
    particular phenomenon has not happened in the weather stations at the time of
    measurement. The value of the parameters is retrieved in the specific format defined
    in the API documentation. The formats have different units. For example, the value
    of the temperature shall be retrieved in Celsius, Fahrenheit, and in Kelvin units.
    The values can be retrieved in the users’ required formats. The values shall be
    retrieved in integer and float. The response of the API call shall be obtained
    in multiple languages supported by the Web API. The Web API supports numerous
    languages so as to draw attention from the users all over the world.9,11 The API
    produces the data in the user requested formats. Similar to the OpenWeather Map
    API, we bring our own API developed by Flask framework to control and maintain
    the smart home data. Sample API call and respond API request in JSON Listing 02:
    API respond in JSON {“coord”: {“lon”:-3.74,“lat”:5.2}, “weather”:[{“id”:801,“main”:“Clouds”,“description”:“few
    clouds”,“icon”:“02d”}],} … “id”:2288873, “name”:“France”, “cod”:200} Listing 03:
    API request in XML <city id=“2288873” name=“France”> <coord lon=“-3.74” lat=“5.2”/>
    <country>CI</country> <sun rise=“2019-07-01T06:06:03” set=“2019-07-01T18:31:08”/>
    </city> … <weather number=“801” value=“few clouds” icon=“02d”/> <lastupdate value=“2019-07-01T18:27:44”/>
    </current> As JSON is simple to handle, it has become the typical format. The
    optimization of JSON files plays an important role while parsing the same. There
    are some requirements for the optimal performance and features of JSON files.
    Multiple JSON files are needed for better performance. Many of the JSON parsing
    libraries can read them from a stream when compared with reading from the string.
    As this is more efficient, preference shall be given for stream reading wherever
    it is possible.9,21 For achieving better optimization, the JSON files can be compressed
    up to 90%. The JSON files can be compressed in Zip format while communicating
    to the corresponding web services. Parsing of JSON can be avoided if it is not
    needed. In case the web app receives the JSON and stores it to a database or any
    other storage, it is not necessary to parse them. The process of serialization
    should be given more importance for better JSON optimization. It is not necessary
    to serialize all data fields. Instead, the null values can be omitted. The use
    of shorter field names makes it more human-readable and gives 5–10 percentage
    boost in performance and parsing. It also allows smaller data packets to transfer
    along the web. The API requests will be handled by HTTP/GET and raw data in response
    can be serialized by means of any comfortable serialization methods available
    in some elegant scripting languages such as iOS swift, Python, Hypertext preprocessor
    (PHP), and so on. Obviously, the optimization may be sensed in between 3 and 5 Mbps
    by subtle variations with different service caching among XML (SOAP), REST XML,
    and REST JSON. Table 2 demonstrates the HTTP topics of Web API. Table 2. HTTP
    topics of web API. HTTP method Action Topic GET Acquire information about a resource
    http://192.168.1.30/api/temp POST Make a new resource http://192.168.1.30/api/onewire
    PUT Update resource http://192.168.1.30/api/onewire DELETE Delete a resource http://192.168.1.30/api/onewire
    HTTP: hypertext transfer protocol; API: application programming interface. Implementation
    of Flask API for ESP8266-MQTT wireless robot Flask is a lightweight python web
    framework to construct a flexible API. In order to build the API framework, there
    are two extensions in Flask that help build RESTful services. The clients of web
    service are low-cost NodeMCU robots that command requesting the service to add,
    remove, and modify tasks. This is what is needed to device a method to store independent
    tasks. An appropriate method is to build a flexible database. The HTTP topics
    are normally generated by accessing the smart robots as depicted in Table 2. Flask
    Framework for green house is depicted in Figure 2 in which publish–subscribe is
    event-driven and readily pushes messages to smart robots. This involves an additional
    and essential communication point usually known as the MQTT broker,6 where the
    Raspberry Pi is in charge of transmitting all messages between senders and rightful
    robot clients. Raspberry Pi is responsible for monitoring the publishers as well
    as subscribers in the same way for the sake of knowledge about how many publishers
    are live. Every client robot that publishes a message to the Raspberry Pi includes
    a JSON URI as a topic into the message. The topic is normally the routing information
    for the Pi, and hence the robot that wants to receive messages, subscribes to
    a firm topic about holding the smart house data. The Pi brings all messages with
    the corresponding JSON URI or topic to the client who may or may not have to be
    familiar with each other. They insist to communicate the topic only. This construction
    facilitates highly scalable solutions without numerable dependencies between data
    producers and consumers. Figure 2. MQTT—Flask framework for green house. Web application
    is firmly developed using HTML, Flask (Python) web server platform, and JQuery
    (Figure 3). A call back function in the MQTT protocol is used here to send and
    receive data to green house. Web interface is made for controlling the smart robot
    and to monitor ONEWIRE (DS18B20) sensors data and each location of the green house.
    One of the benefits for the use of these sensors is that it allows digital input
    to make a network of sensors with a single outlet (GPIO). Figure 3. Flask-controlled
    web page for accessing smart robots. Validation In the assessment, temperature
    data are gathered from DS18B20 (mounted on ESP8266 robots) through Raspberry Pi
    via APIs of publish–subscribe within every second. The following steps have been
    discussed to acquire benefits of above-said Flask API server-based interface for
    a smart robot: 1. A web interface is implemented with a JSON endpoint. A separate
    JSON host is constructed in Flask to develop a responsive interface. 2. A web
    repository with Flask API with database is roughly used to build an interface
    for control application for implementation without hard-coding the technology
    of a device. 3. The experimental results have shown that it is better to adapt
    a lesser response time consumes MQTT than HTTP. 4. For the sake of convenience,
    the transmitted message is used as an effortless JSON object that can hold a single
    key-value pair along the publishes on smart robots. 5. The key alternate options
    for JSON are the standard methods of HTTP, usually GET or POST.6 However, they
    are not preserved due to the problems raised in content caching while gathering
    the sensor readings. It is evident that when selecting MQTT over HTTP, the RTT
    as depicted in Figure 4 is mostly lesser than a standard HTTP. It is important
    to reclaim similar connection to some extent. The efficiency of communication
    against a smart robot gains is significant compared with the HTTP standards since
    MQTT is data agnostic and light weight. The ultimate guarantee of efficiency in
    MQTT protocol gives importance to density for each payload message. This technique
    ensures additional defiant ways to attain composition against gathered data from
    sensors. The connection status and delivery of messages to the smart robots are
    depicted in Figure 5. The response time per connection cycle is examined in Table
    3. The critical approach is employed to decrease the payload size where enormous
    data could be transmitted by sensors eventually. Figure 4. Round trips between
    devices and server. Figure 5. Connection status and messages delivery to robots.
    Table 3. Response time per connection cycle (MQTT and HTTP). No. Property field
    against message Average response time/connection cycle (ms) Average. response
    time/field (ms)   MQTT HTTP MQTT HTTP MQTT HTTP 1 1 1 197 231 221 277 2 10 10
    237 299 21 29 3 100 100 191 263 2 4 4 500 500 329 412 – – MQTT: message queuing
    telemetry transport; HTTP: hypertext transfer protocol. Figure 6 demonstrates
    payload size for different numbers of percentages. The simulation result proves
    that the proposed method has used less amount of payload size. Figure 7 illustrates
    the performance comparison in spite of average computation cost for the normal
    class and also the modified class for the proposed method MQTT. Figure 6. Payload
    size comparison. Figure 7. Performance comparison. Conclusion This article proposed
    an MQTT-based Flask API framework in the IoGT to monitor and control greenhouse
    system with Raspberry Pi cloud. The proposed architecture presents the frequent
    publish–subscribe messages among the low-cost ESP8266-attached smart robots. An
    access interface was developed as a Flask web page for users to access green house
    from anywhere. JSON is a lightweight data interchange format when compared with
    the traditional XML. The response messages conspicuously retrieved in the JSON
    format are cached in effective when the public APIs are requested by the programmers
    rather than using response in XML. This work determined the higher parsing efficiency
    of the JSON for accessing backend data through available public Flask Web API.
    An interface was developed in Python Flask to gather information from smart farm’s
    ambient data to manage people with various sensors connected in low-cost robots.
    The main contributions of this research are as follow: 1. IoGT: A Flask-based
    python framework and REST API was developed for accessing low-cost ESP8266 wheeled
    robots. 2. Data gathered from the robots through MQTT publish–subscribe technique
    and successfully transferred (also stored for future references) to REST API.
    3. The data integrated by robots with IoGT gains more advantage in gathering about
    spatial information data connected with the irrigation. 4. Visualization techniques
    and perspectives based on IoGT helped for precision agriculture in the field of
    farming are highlighted. 5. Adapting a lower response time consumes MQTT than
    HTTP from the experimental results. 6. Implemented framework insisted that the
    incredibly lightweight JSON object hold data between the publishers and subscribers
    (ESP8266 robots). Further studies will create an adapted and responsive web application
    with the help of MQTT and machine learning methods51–61 to allow users to interact
    by topics against smart wireless robots with minimal efforts. Declaration of conflicting
    interests The author(s) declared no potential conflicts of interest with respect
    to the research, authorship, and/or publication of this article. Funding The author(s)
    received no financial support for the research, authorship, and/or publication
    of this article. ORCID iDs Y Harold Robinson https://orcid.org/0000-0002-4881-7103
    Mahmoud Ismail https://orcid.org/0000-0003-2706-4621 Footnote Handling Editor:
    Rongbo Zhu References 1. Ara SS, Shamszaman ZU, Chong I. Web-of-objects based
    user-centric semantic service composition methodology in the Internet of Things.
    Int J Distrib Sens N 2014; 10: 482873. GO TO REFERENCE Google Scholar 2. Khan
    M, Silva BN, Han K. A web of things-based emerging sensor network architecture
    for smart control systems. Sensors 2017; 17(2): 332. GO TO REFERENCE Crossref
    Google Scholar 3. Shelby Z, Hartke K, Bormann C. The constrained application protocol
    (CoAP). Fremont, CA: Internet Engineering Task Force (IETF), 2014. Crossref Google
    Scholar 4. Davoli L, Belli L, Cilfone A, et al. Integration of Wi-Fi mobile nodes
    in a web of things testbed. ICT Express 2016; 2(3): 96–99. GO TO REFERENCE Crossref
    Google Scholar 5. Hernández-Rojas DL, Fernández-Caramés TM, Fraga-Lamas P, et
    al. A plug-and-play human-centered virtual TEDS architecture for the web of things.
    Sensors 2018; 18: 2052. Crossref Google Scholar 6. Stanford-Clark A, Truong HL.
    MQTT for sensor networks (MQTT-SN) protocol specification, version 1.2. Armonk,
    NY: International Business Machines (IBM), 2013. Google Scholar 7. Ramlee RA,
    Othman MA, Leong MH, et al. Smart home system using android application. In: Proceedings
    of the international conference of information and communication technology (ICoICT),
    Bandung, Indonesia, 20–22 March 2013, pp.277–280. New York: IEEE. GO TO REFERENCE
    Google Scholar 8. Teymourzadeh R, Ahmed SA, Chan KW, et al. Smart GSM based home
    automation system. In: Proceedings of the IEEE conference on systems, process
    & control (ICSPC), Kuala Lumpur, Malaysia, 13–15 December 2013, pp.306–309. New
    York: IEEE. Google Scholar 9. Meng J, Mei S, Yan Z. RESTful web services: a solution
    for distributed data integration. In: Proceedings of the international conference
    on computational intelligence and software engineering, Wuhan, China, 11–13 December
    2009. New York: IEEE. Google Scholar 10. Piyare R, Tazil M. Bluetooth based home
    automation system using cell phone. In: Proceedings of the 15th international
    symposium on consumer electronics (ISCE), Singapore, 14–17 June 2011, pp.192–195.
    New York: IEEE. Google Scholar 11. Hamad H, Saad M, Abed R. Performance evaluation
    of RESTful web services for mobile devices. Int Arab J Inf Techn 2010; 1(3): 72–78.
    Google Scholar 12. Wenbo Y, Quanyu W, Zhenwei G. Smart home implementation based
    on Internet and WiFi technology. In: Proceedings of the 2015 34th Chinese control
    conference (CCC), Hangzhou, China, 28–30 July 2015, pp.9072–9077. New York: IEEE.
    GO TO REFERENCE Google Scholar 13. White M, Linares-Vásquez M, Johnson P, et al.
    Generating reproducible and replayable bug reports from android application crashes.
    In: Proceedings of the 23rd IEEE international conference on program comprehension
    (ICPC), Florence, 18–19 May 2015. New York: IEEE. Google Scholar 14. Bramantya
    W, Kusumo DS, Munajat B. Modularizing RESTful web service management with aspect
    oriented programming. In: Proceedings of the 3rd international conference on information
    and communication technology (ICoICT), Nusa Dua, Bali, 27–29 May 2015, pp.358–363.
    New York: IEEE. GO TO REFERENCE Google Scholar 15. Xanthopoulos S, Xinogalos S.
    A comparative analysis of crossplatform development approaches for mobile applications.
    In: Proceedings of the 6th Balkan conference in informatics, Thessaloniki, 19–21
    September 2013. New York: ACM. Google Scholar 16. Tian M, Voigt T, Naumowicz T,
    et al. Performance considerations for mobile web services. Comput Commun 2004;
    27(11): 1097–1105. GO TO REFERENCE Crossref Google Scholar 17. Santhi K, Zayaraz
    G, Vijayalakshmi V. Resolving aspect dependencies for composition of aspects.
    Arab J Sci Eng 2014; 40(2): 475–486. Crossref Google Scholar 18. Roh HG, Jeon
    M, Kim JS, et al. Replicated abstract data types: building blocks for collaborative
    applications. J Parallel Distr Com 2011; 71(3): 354–368. Crossref Google Scholar
    19. Nunes R, Rebouças M, Soares-Neto F, et al. Visualizing swift projects as cities.
    In: Proceedings of the 39th international conference on software engineering companion,
    Buenos Aires, Argentina, 20–28 May 2017, pp.368–370. New York: IEEE. GO TO REFERENCE
    Google Scholar 20. Pawlak R, Duchien L, Florin G, et al. Dynamic wrappers: handling
    the composition issue with JAC. In: Proceedings of the 39th international conference
    and exhibition on technology of object-oriented languages and systems (TOOLS 39),
    29 July–3 August 2001, pp.56–65. New York: IEEE. GO TO REFERENCE Google Scholar
    21. Richardson L, Amundsen M, Ruby S. RESTful web APIs. Newton, MA: O’Reilly Media,
    Inc., 2013. Google Scholar 22. Al-Masri E, Hamdi M. RFID-based approach for monitoring
    patient’s health inside hospitals. In: Elleithy K, Sobh T (eds) New trends in
    networking, computing, E-learning, systems sciences, and engineering. Cham: Springer,
    2015, pp.607–613. Crossref Google Scholar 23. Cook DJ, Youngblood M, Heierman
    EO, et al. MavHome: an agent-based smart home. In: Proceedings of the first IEEE
    international conference on pervasive computing and communications 2003 (PerCom
    2003), Fort Worth, TX, 26–26 March 2003, pp.521–524. New York: IEEE. Google Scholar
    24. Das SK, Cook DJ, Battacharya A, et al. The role of prediction algorithms in
    the MavHome smart home architecture. IEEE Wirel Commun 2002; 9(6): 77–84. Crossref
    ISI Google Scholar 25. Valtchev D, Frankov I. Service gateway architecture for
    a smart home. IEEE Commun Mag 2002; 40(4): 126–132. Crossref Google Scholar 26.
    Di Giorgio A, Pimpinella L. An event driven smart home controller enabling consumer
    economic saving and automated demand side management. Appl Energ 2012; 96: 92–103.
    Crossref Google Scholar 27. Byun J, Jeon B, Noh J, et al. An intelligent self-adjusting
    sensor for smart home services based on ZigBee communications. IEEE T Consum Electr
    2012; 58(3): 794–802. Crossref ISI Google Scholar 28. Lee N, Lee H, Lee H, et
    al. Smart home web of object architecture. In: Proceedings of the international
    conference on information and communication technology convergence (ICTC), Jeju,
    South Korea, 28–30 October 2015, pp.1212–1214. New York: IEEE. GO TO REFERENCE
    Google Scholar 29. Hafidh B, Al Osman H, Arteaga Falconi JS, et al. SITE: the
    simple Internet of Things enabler for smart homes. IEEE Access 2017; 5: 2034–2049.
    GO TO REFERENCE Crossref Google Scholar 30. Wu S, Rendall J, Smith M, et al. Survey
    on prediction algorithms in smart homes. IEEE Internet Things 2017; 4: 636–644.
    Crossref Google Scholar 31. Alam MR, Reaz MBI, Mohd Ali MA. SPEED: an inhabitant
    activity prediction algorithm for smart homes. IEEE T Syst Man Cy A 2012; 42(4):
    985–990. Crossref Google Scholar 32. Chen L, Thombre S, Järvinen K, et al. Robustness,
    security and privacy in location based services for future IoT: a survey. IEEE
    Access 2017; 5: 8956–8977. Crossref Google Scholar 33. Latif MA, Ullah F, Lee
    S. Extensible privacy framework for web of objects based ubiquitous services.
    In: Proceedings of the 2015 international conference on information and communication
    technology convergence (ICTC), Jeju, South Korea, 28–30 October 2015, pp.1081–1084.
    New York: IEEE. Google Scholar 34. Wang X, Mu Y. Communication security and privacy
    support in 6LoWPAN. J Inf Secur Appl 2017; 34: 108–119. Google Scholar 35. Majeed
    A, Ullah F, Lee S. Vulnerability-and diversity aware anonymization of personally
    identifiable information for improving user privacy and utility of publishing
    data. Sensors 2017; 17(5): 1059. Crossref Google Scholar 36. Zur Muehlen M, Nickerson
    JV, Swenson KD. Developing web services choreography standards—the case of REST
    vs. SOAP. Decis Support Syst 2005; 40(1): 9–29. Crossref Google Scholar 37. Elappila
    M, Chinara S, Parhi DR. Survivable path routing in WSN for IoT applications. Pervasive
    Mob Comput 2018; 43: 49–63. Crossref Google Scholar 38. Han SN, Crespi N. Semantic
    service provisioning for smart objects: integrating IoT applications into the
    web. Future Gener Comp Sy 2017; 76: 180–197. Crossref Google Scholar 39. Evans
    D. The internet of everything: how more relevant and valuable connections will
    change the world. San Jose, CA: Cisco IBSG, 2012, pp.1–9. Google Scholar 40. Gubbi
    J, Buyya R, Marusic S, et al. Internet of Things (IoT): a vision, architectural
    elements, and future directions. Future Gener Comp Sy 2013; 29(7): 1645–1660.
    GO TO REFERENCE Crossref ISI Google Scholar 41. Ahmadi-Karvigh S, Becerik-Gerber
    B, Soibelmanc L. Intelligent adaptive automation: a framework for an activity-driven
    and user-centered building automation. Energ Buildings 2019; 188–189: 184–199.
    GO TO REFERENCE Crossref Google Scholar 42. Janssen CP, Donkera SF, Brumby DP,
    et al. History and future of human-automation interaction. Int J Hum: Comput St
    2019; 131: 99–107. GO TO REFERENCE Crossref Google Scholar 43. Amershi S, Weld
    D, Vorvoreanu M, et al. Guidelines for human-AI interaction. In: Proceedings of
    the SIGCHI conference on human factors in computing systems, Glasgow, May 2019.
    New York: ACM. GO TO REFERENCE Google Scholar 44. Borojeni SS, Weber L, Heuten
    W, et al. From reading to driving: priming mobile users for take-over situations
    in highly automated driving. In: Proceedings of the 20th international conference
    on human-computer interaction with mobile devices and services, Barcelona, September
    2018. New York: ACM Press. Google Scholar 45. Chien SY, Lin YL, Lee PJ, et al.
    Attention allocation for human multi-robot control: cognitive analysis based on
    behavior data and hidden states. Int J Hum: Comput St 2018; 117: 30–44. Crossref
    Google Scholar 46. Gould SJ, Cox AL, Brumby DP. Influencing and measuring behaviour
    in crowd sourced activities. In: Filimowicz M, Tzankova V (eds) New directions
    in third wave human-computer interaction, vol. 2. Cham: Springer, 2018, pp.103–130.
    Google Scholar 47. Janssen CP, Boyle L, Kun AL, et al. A hidden Markov framework
    to capture human–machine interaction in automated vehicles. Int J Hum: Comput
    Int 2019; 35: 947–955. Crossref Google Scholar 48. Jha K, Doshi A, Patel P, et
    al. A comprehensive review on automation in agriculture using artificial intelligence.
    Artif Intell Agric 2019; 2: 1–12. Google Scholar 49. Post MA, Bianco A, Yan XT.
    Autonomous navigation with open software platform for field robots. In: Gusikhin
    O, Madani K (eds) Informatics in control, automation and robotics. ICINCO 2017
    (Lecture notes in electrical engineering), vol. 495. Cham: Springer, 2020, pp.425–450.
    Crossref Google Scholar 50. Tao B, Zhao XW, Ding H. Mobile-robotic machining for
    large complex components: a review study. Sci China Technol Sc 2019; 62: 1388–1400.
    GO TO REFERENCE Crossref Google Scholar 51. Garg R, Mittal M, Son HL. Reliability
    and energy efficient workflow scheduling in cloud environment. Cluster Comput
    2019; 22: 1283–1297. GO TO REFERENCE Crossref Google Scholar 52. Jha S, Kumar
    R, Son HL, et al. Deep learning approach for software maintainability metrics
    prediction. IEEE Access 2019; 7: 61840–61855. Crossref Google Scholar 53. Kapoor
    R, Gupta R, Kumar R, et al. New scheme for underwater acoustically wireless transmission
    using direct sequence code division multiple access in MIMO systems. Wirel Netw
    2019; 25: 4541–4553. Crossref Google Scholar 54. Khan T, Singh K, Son HL, et al.
    A novel and comprehensive trust estimation clustering based approach for large
    scale wireless sensor networks. IEEE Access 2019; 7: 58221–58240. Crossref Google
    Scholar 55. Krishnan RS, Julie EG, Robinson YH, et al. A new algorithm for high
    power node multicasting in wireless sensor networks. IEEE Access 2019; 7: 38584–38592.
    Crossref Google Scholar 56. Pal S, Kumar R, Son HL, et al. Novel probabilistic
    resource migration algorithm for cross-cloud live migration of virtual machines
    in public cloud. J Supercomput 2019; 75: 5848–5865. Crossref Google Scholar 57.
    Popa A, Hnatiuc M, Paun M, et al. An intelligent IoT-based food quality monitoring
    approach using low-cost sensors. Symmetry 2019; 11(3): 374. Crossref Google Scholar
    58. Robinson YH, Krishnan RS, Julie EG, et al. Neighbor knowledge-based rebroadcast
    algorithm for minimizing the routing overhead in mobile ad-hoc networks. Ad Hoc
    Netw 2019; 93: 101896–101909. Crossref Google Scholar 59. Robinson YH, Julie E,
    Kumar R, et al. Probability-based cluster head selection and fuzzy multipath routing
    for prolonging lifetime of wireless sensor networks. Peer Peer Netw Appl 2019;
    12(5): 1061–1075. Crossref Google Scholar 60. Sahu DP, Singh K, Manju M, et al.
    Heuristic search based localization in mobile computational grid. IEEE Access
    2019; 7: 78652–78664. Crossref Google Scholar 61. Tam NT, Hai DT, Son HL, et al.
    Improving lifetime and network connections of 3D wireless sensor networks based
    on fuzzy clustering and particle swarm optimization. Wirel Netw 2018; 24(5): 1477–1490.
    GO TO REFERENCE Crossref Google Scholar   Related content Similar articles: Available
    access Trails of Data: Three Cases for Collecting Web Information for Social Science
    Research Show details  Available access Building Information Modeling data interoperability
    for Cloud-based collaboration: Limitations and opportunities Show details  Open
    Access End-to-End Message Exchange in a Deployable Marine Environment Hierarchical
    Wireless Sensor Network Show details        View more Sage recommends: SAGE Research
    Methods Entry Web Scraping Show details SAGE Knowledge Entry Web Service Show
    details SAGE Knowledge Book chapter The Role of APIs in Data Sampling from Social
    Media Show details View more Also from Sage CQ Library Elevating debate Sage Data
    Uncovering insight Sage Business Cases Shaping futures Sage Campus Unleashing
    potential Sage Knowledge Multimedia learning resources Sage Research Methods Supercharging
    research Sage Video Streaming knowledge Technology from Sage Library digital services
    About About Sage Journals Accessibility guide Historical content Advertising disclaimer
    Permissions Terms of use Sage discipline hubs Sage microsites Information for
    Authors Editors Librarians Promoters / Advertisers Researchers Reviewers Societies
    Frequently asked questions International Journal of Distributed Sensor Networks
    ISSN: 1550-1329 Online ISSN: 1550-1477 About SageContact usCCPA - Do not sell
    my personal informationCCPA Privacy Policy Copyright © 2024 by SAGE Publications
    Ltd unless otherwise noted. Manuscript content on this site is licensed under
    Creative Commons Licenses"'
  inline_citation: '>'
  journal: International Journal of Distributed Sensor Networks
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of Green Things with autonomous wireless wheel robots against green
    houses and farms
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Marcu I.
  - Suciu G.
  - Bălăceanu C.
  - Vulpe A.
  - Drăgulinescu A.M.
  citation_count: '49'
  description: The Internet of Things (IoT) concept has met requirements for security
    and reliability in domains like automotive industry, food industry, as well as
    precision agriculture. Furthermore, System of Systems (SoS) expands the use of
    local clouds for the evolution of integration and communication technologies.
    SoS devices need to ensure Quality of Service (QoS) capabilities including service-oriented
    management and different QoS characteristics monitoring. Smart applications depend
    on information quality since they are driven by processes which require communication
    robustness and enough bandwidth. Interconnectivity and interoperability facilities
    among different smart devices can be achieved using Arrowhead Framework technology
    via its core systems and services. Arrowhead Framework is targeting smart IoT
    devices with wide applicability areas including smart building, smart energy,
    smart cities, smart agriculture, etc. The advantages of Arrowhead Framework can
    be underlined by parameters such as transmission speed, latency, security, etc.
    This paper presents a survey of Arrowhead Framework in IoT/SoS dedicated architectures
    for smart cities and smart agriculture developed around smart cities, aiming to
    outline its significant impact on the global performances. The advantages of Arrowhead
    Framework technology are emphasized by analysis of several smart cities use-cases
    and a novel architecture for a telemetry system that will enable the use of Arrowhead
    technology in smart agriculture area is introduced and detailed by authors.
  doi: 10.3390/s20051464
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 20 Issue 5 10.3390/s20051464 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Subscribe SciFeed Recommended
    Articles Related Info Links More by Authors Links Article Views 7074 Citations
    49 Table of Contents Abstract Introduction The Arrowhead Framework Arrowhead Framework
    in the Landscape of Smart City Frameworks Smart Agriculture in Arrowhead Framework
    Context New Research Lines, Open Issues, and Challenges Conclusions Author Contributions
    Funding Acknowledgments Conflicts of Interest References Altmetric share Share
    announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up
    Endorse textsms Comment first_page settings Order Article Reprints Open AccessReview
    Arrowhead Technology for Digitalization and Automation Solution: Smart Cities
    and Smart Agriculture by Ioana Marcu 1,*, George Suciu 2, Cristina Bălăceanu 2,
    Alexandru Vulpe 1 and Ana-Maria Drăgulinescu 1 1 Electronics, Telecommunication
    and Information Technology Faculty, University Politehnica of Bucharest, 061071
    Bucharest, Romania 2 R&D Department, BEIA Consult International, 010158 Bucharest,
    Romania * Author to whom correspondence should be addressed. Sensors 2020, 20(5),
    1464; https://doi.org/10.3390/s20051464 Submission received: 31 December 2019
    / Revised: 14 February 2020 / Accepted: 4 March 2020 / Published: 6 March 2020
    (This article belongs to the Special Issue Applications and Innovations on Sensor-Enabled
    Wearable Devices) Download keyboard_arrow_down     Browse Figures Versions Notes
    Abstract The Internet of Things (IoT) concept has met requirements for security
    and reliability in domains like automotive industry, food industry, as well as
    precision agriculture. Furthermore, System of Systems (SoS) expands the use of
    local clouds for the evolution of integration and communication technologies.
    SoS devices need to ensure Quality of Service (QoS) capabilities including service-oriented
    management and different QoS characteristics monitoring. Smart applications depend
    on information quality since they are driven by processes which require communication
    robustness and enough bandwidth. Interconnectivity and interoperability facilities
    among different smart devices can be achieved using Arrowhead Framework technology
    via its core systems and services. Arrowhead Framework is targeting smart IoT
    devices with wide applicability areas including smart building, smart energy,
    smart cities, smart agriculture, etc. The advantages of Arrowhead Framework can
    be underlined by parameters such as transmission speed, latency, security, etc.
    This paper presents a survey of Arrowhead Framework in IoT/SoS dedicated architectures
    for smart cities and smart agriculture developed around smart cities, aiming to
    outline its significant impact on the global performances. The advantages of Arrowhead
    Framework technology are emphasized by analysis of several smart cities use-cases
    and a novel architecture for a telemetry system that will enable the use of Arrowhead
    technology in smart agriculture area is introduced and detailed by authors. Keywords:
    Arrowhead technology; Arrowhead framework; IoT environment; smart cities; smart
    agriculture 1. Introduction Nowadays the term “smart” has multiple ramifications
    including “smart homes”, “smart cities”, “smart environment”, “smart agriculture”,
    etc. Most of them are “smart” because they benefit from IoT technology for interoperability
    between different communication devices with direct address to application level.
    The extended applicability areas of IoT imply the use of smart devices (sensors,
    actuators) and IoT products such as laptops, smartphones, smart gadgets, smart
    vehicles, etc. interconnected to the Internet (Figure 1) [1]. The advantages of
    IoT devices and products include energy, time, and money decreased consumption
    due to efficient automation and control, Machine-to-Machine (M2M) interaction,
    easy maintenance. Still, the disadvantages are yet to be overcome, and they refer
    to increased complexity, privacy and security unsolved issues, lack of a global
    international compatibility standard, etc. [2]. Figure 1. Extended applicability
    domains of Internet of Things (IoT) [1]. Smart sensors-based IoT platforms have
    a crucial role nowadays in technological, social, and economic landscape, with
    practical usage in different domains such as the medical domains where even the
    smartphone is used in complex medical systems. The aims of smart cities development
    consist in improving the urban infrastructure with minimized costs, encouraging
    thus innovation and upgrading the quality of life of citizens. This enhancement
    also includes smart healthcare that incorporates the latest smart digital IoT
    devices and technologies (mobile and ambient sensors, Machine Learning (ML), Artificial
    Intelligence (AI), etc.) to ensure progress in health activity [3,4]. For medical
    purposes a probabilistic framework for behavioral anomaly detection is developed
    in [5] based on wearable motion sensors. Although the system is tested only in
    a lab environment, the extension of analysis in order to upgrade the system in
    terms of dimensions and price is considered. Similarly, a wearable sweat sensor
    that can perform multiple tasks including simultaneous sweat sampling, chemical
    sensing, and vital-sign monitoring is implemented in [6]. The laser-engraved technology
    facilitates the scalability and flexibility of the sensor. Moreover, wearable
    sensors for table tennis stroke recognition (of five different stroke actions)
    are proposed in [7], based on Support Vector Machine (SVM) algorithm. The main
    advantage consists in ML technique use for recognition task. Wearable electronics
    for healthcare monitoring lack in providing power supply solutions that can ensure
    stand-alone functioning within the system. Therefore, a three-dimensional cellular
    sensor array (3D-CSA) with a rigid structure/function symmetry that provides self-powered
    biomedical monitoring is depicted in [8]. The efficiency of this solution was
    demonstrated when measuring human heartbeat, monitoring eyeball motions, and performing
    active tactile imaging. This sensor advantages of low-cost, size-efficiency, adaptability,
    structural symmetry makes it a great candidate for future skin electronics, as
    well as in artificial intelligence and human computer interface areas. Still,
    in life-threating medical conditions such as cystic fibrosis, strokes, heart attack
    or cancer, customized solutions are a must [9,10,11]. For early detection and
    treatment estimation, authors in [9] have developed a citrate-derived synthesis
    platform for new fluorescence sensors with high selectivity for chloride. Thus,
    a wearable device (smartphone-based chloride sensor) was designed to optimize
    the efficiency of chloride identification in sweat for early cystic fibrosis detection.
    For heart attack prevention/detection a heartbeat sensor is used to check the
    heartbeat reading and oxygen level and further send these data through a WiFi
    module [10]. Although several solutions for heart attack prevention are identified,
    such as Garmin or Fit Bit, they lack in providing accurate data in cold weather
    (Garmin) or in cases of immobilized patients. The current application in [10]
    is still under development. Yet, for early cancer detection nanobiosensing sensors
    are indicated due their high efficiency [11]. Authors in [11] provide a comprehensive
    study on nanobiosensors including signal transduction-based nanobiosensors and
    biorecognition-based nanobiosensors. Multiple solutions for the medical field
    using smartphones are given in [12,13,14,15,16,17,18]. Thus, the design of a smartphone-based
    Point-of-Care Testing (POCT) [12] represents an alternative to a mobile lab for
    analysis testing and has multiple advantages due to its portable feature. Several
    samples including blood, sweat, saliva, and tears are processed using “colorimetric,
    fluorescent, brightfield, and electrochemical methods” [12]. The POCT wearable
    device is a combination among different technologies such as the detection of
    using paper-based sensors (devices that are frequently used in disease diagnosis
    [19]), along with flexible sensors, and microfluidics. To illustrate this, test
    results depending on different POCT devices regarding the sweat sample information
    are presented in Table 1 [12]. Table 1. The information of sweat sample Point-of-Care
    Testing (POCT) device [12]. Another efficient and high-accurate POCT for tetracycline
    detection was developed using milk as a real sample [13]. The fluorescence changing
    from red to blue due to the presence of tetracycline can be achieved using a smartphone
    or a home-made portable device. Point-of-care testing devices developed in [12,13]
    have different hardware/software limitation and their applicability area is restricted.
    For a more facile classification and identification of biosensors point-of-care
    testing devices, in [14] authors provide a review of five types of smartphone-based
    microfluidic biosensor system: “Smartphone-based imaging biosensor, smartphone-based
    biochemical sensor, smartphone-based immune biosensor, smartphone-based hybrid
    biosensor with more than one sensing modality, and smartphone-based molecular
    sensor”. Among the still-existing challenges there are: Reduced-in-size sensors
    may not be as accurate and sensitive as desired; expensive and complex integrated
    chips are yet irreplaceable; accessories attached to the smartphone may directly
    influence the accuracy of the systems [14]. For POCT smartphones a custom application
    is presented in [15] and it contains different analytical procedures. The design
    of custom smart sensors and systems for health care consider not only life-threatening
    diseases but also medical conditions that produce discomfort to patients. One
    approach on obstructive sleep apnea-hypopnea syndrome is given in [20] and authors
    designed “a textile-based wireless biomonitoring system for self-powered personalized
    health care” using Internet-connected clothing/textiles. The system is based on
    a “textile-based sensor (TS)” with accurate results when testing on elderly and
    weak people and its utility resides in the assessment and diagnosis of health
    issues. Sensor-based IoT monitoring systems cover a large area of applicability
    from environmental monitoring [21], energy harvesting for IoT applications using
    Near-Field Communication (NFC) sensors [22] or “a linear-to-rotary hybrid nanogenerator
    for high-performance wearable biomechanical” [23], and in industrial equipment
    using wear sensor which can be 3D printed directly into the spiral using conductive
    material [24]. The expansion of smart cities and smart agriculture concepts takes
    advantage of IoT implementation together with the corresponding platforms and
    protocols including DIMMER platform [25], FLEXMETER platform [26], CISCO Kinetic
    for Cities [27] for smart cities, and Libelium/ADCON platforms [28,29] or Kaa
    open-source IoT Platform [30] for smart agriculture. At a large scale, IoT systems
    form heterogeneous Systems-of-Systems (SoS) which describe the large-scale reconciliation
    of numerous free independent IT frameworks to fulfill worldwide needs from residents,
    consider multisystem demands. The world becomes progressively interconnected,
    and the SoS depend on the European riches, security, and social welfare. Since
    they can become unpredictable, the need to oversee SoS turns into an earnest need
    for European culture. In addition, SoS have an eminent assessed served market
    measurement in different application regions such as crisis reaction, air traffic
    control, water management, roadway control, etc. [31,32]. Examples of SoS for
    applicability areas are illustrated in Figure 2 [33] and they show various areas
    from everyday simple systems (PCs, microwave ovens) to sophisticated systems such
    as “automobile networks that involve complex interactions between vehicles and
    the environment” [33]. Figure 2. Extended applicability domains of Systems-of-Systems
    (SoS) [33]. Each SoS is built from several various subsystems at application level
    and they must fulfill requirements related to operational functioning and management.
    Arrowhead Framework provides support for building and interconnecting SoS based
    on service-oriented architecture patterns [34]. Arrowhead can be reconfigured
    for all types of architectures not for one or few and manages to cover and fix
    all security breaches that might appear in real-time applications. Following a
    decentralized approach, Arrowhead architecture assumes that all data are converging
    to one centralized node and it is already used in products worldwide. The main
    features of Arrowhead Frameworks tools consist in limitless capacities, bandwidth,
    memory, number of devices, and is fundamentally distributed unlike all other similar
    existing solutions. Yet, the technology is still under development and researchers
    are still trying to integrate all the solutions received from engineering automation
    trials in different domains [35]. This paper aims to outline the advantages of
    Arrowhead Framework tools and in already existing IoT Framework-based architectures.
    Arrowhead architecture has been successfully used in several smart cities applications,
    smart farming and smart homes, examples that will be further reviewed. The paper
    is organized as follows: Section 2 illustrates the global concept of Arrowhead
    Framework including facilities and components; Section 3 outlines several important
    smart cities use-cases in which Arrowhead tools bring performances improvement
    (e.g., in terms of energy saving); Section 4 is dedicated to Smart Agriculture
    concept in Arrowhead Framework context including a novel proposed architecture
    for a telemetry system for precision agriculture that uses Arrowhead technology
    for efficiency. Section 5 provides new research lines, open issues and challenges
    and, finally, Section 6 concludes the paper. 2. The Arrowhead Framework Cloud-based
    technology has a strong development in all areas, being used in various applications.
    The results of a study conducted on different cloud concepts are outlined in [36].
    Most of the alternatives of global cloud do not fulfill the basic requirements
    for a local cloud: Automation regarding the latency of the communication and control
    computations; Scalability of automation systems that allow very large-dimensions
    integrated automation systems; Multi-party integration and speed of operations;
    Security and safety related to the automation systems; Simplify the process of
    creating applications. A simplified representation of local Cloud Concept depicts
    cloud concept as a sum of multiple and sustained actions that form “global cloud”
    technology [36]. The concept of “local cloud” is based on the idea that certain
    tasks of automation, from a geographical point of view, should be encapsulated
    and protected. These automation tasks facilitate the creation, operation, and
    maintenance process, as well as system’s safety and security. The basic idea of
    the local cloud concept is to enable it to include the devices and systems needed
    to perform the desired automation tasks, thus ensuring a local “room” that can
    be protected from outside activities [37]. In other words, the cloud system will
    impose a limit to open the Internet, in order to protect the inside of the local
    system from what the free Internet entails. Most applications used in smart cities
    or smart agriculture may require multiple cloud systems to build a large integrated
    automation system. Thus, the exchange of services between cloud systems should
    be allowed. Service exchanges between cloud systems do not ensure system delays
    most of the time, but properties that target security and ease of application
    creation are required. 2.1. Concepts and Functionalities The Arrowhead Framework
    innovative technology depends on the idea of local clouds that comprise of SoS.
    Considering the Service Oriented Architecture (SOA) basics and standards, essential
    features are required for a local cloud: Capability to register a service to the
    local cloud; Determine which services are registered with the local cloud; Enabling
    approximately coupled data exchange between producer and consumer systems—coordinate
    service exchanges; Authentication of consuming systems and granting Authorization
    of service exchanges. The main goal of the Arrowhead Framework architecture is
    to allow the development of local automation clouds considering several advantages
    compared to other similar architectures. These advantages derive from the fact
    that Arrowhead Framework architecture is based on SOA technology. Thus, there
    are empowered real time performance and security, combined with straightforward
    and low-cost building manufacturing, and at the same time, versatility through
    multi-cloud association is empowered. SOA technology together with the Arrowhead
    Framework orchestration system can lead to a service composition within a wireless
    network with IoT devices that minimizes the drawbacks of local cloud technology
    and increases the performance and robustness of the system [38]. Bringing together
    automatization and digitalization benefits, Arrowhead Tools enables building an
    open source platform for the structure and run-time engineering of IoT and SoS
    that meets the requirements for real-time performance, near-location devices,
    robust security, etc. [39]. The Arrowhead architecture consists of several systems
    which provide various administration. The result is an architecture from which
    independent automation clouds can be created. These clouds will further be capable
    of giving certain automation support services and provide support for bootstrapping,
    security, appropriate metadata, protocol, semantics straightforwardness, and for
    inter-cloud service exchanges [40]. Therefore, the architecture highlights three
    types of services by mandatory and support core systems, including application
    systems: Mandatory core services; Automation support core services; Application
    services. The existence of mandatory core systems and services allows the use
    of a slightest local automation cloud. Mandatory core services will empower the
    desired fundamental properties of a local cloud. Figure 3 illustrates the core
    systems currently defined within the Arrowhead Framework. Figure 3. Core systems
    of the Arrowhead Framework [41]. To build up an Arrowhead Framework local cloud
    three mandatory core systems are required: ServiceRegistry system: Enables a specialist
    organization to distribute its administration instance(s); enables a service consumer
    to find (discover) what service instance(s) it is interested in consuming. Authorization
    system: Enables a specialist co-op to figure out what consumer(s) to acknowledge.
    Orchestration system: Enables remote control (orchestration) of which service
    instance(s) a consumer shall consume. Using these main core systems in addition
    to SystemRegistry and DeviceRegistry systems, in [41] authors analyze an on-board
    functioning procedure required when Arrowhead Framework interacts with a new device
    (Figure 4). SystemRegistry and DeviceRegistry systems offer storage for “SW-systems
    registered within the local cloud” and “devices registered within the local cloud”
    and are efficient from security reasons whenever a foreign device tries to interact
    with the already existing Arrowhead local cloud [41]. Figure 4. The on-boarding
    procedure for an IoT device: IoT system A interaction with Arrowhead local cloud
    [41]. Use-cases for Arrowhead Framework architecture include smart medical, smart
    traffic (as part of smart cities), smart energy, smart farming, mobility, infrastructure,
    etc. This paper aims to provide an efficient overview over the implication and
    methods applied for smart cities and smart agriculture when implementing the Arrowhead
    Framework in order to emphasize its advantages. 2.2. Use-Cases According to [42],
    21 use-cases involving Arrowhead Tools are currently under research in different
    applicability areas such as health care, energy monitoring, cloud storage, wireless
    communications, etc. Some of the domain have already met the requirements for
    Arrowhead Framework and Table 2 illustrates the correspondence between different
    use-cases and their current applications existing on the market. Table 2. Use-cases
    and practical examples for Arrowhead Framework [42]. Some eloquent use-cases (examples
    in Table 2) are detailed below and their efficiency and performances are described.
    2.2.1. SoS Engineering of IoT Devices (Including Energy Domain) a. Energy management
    via Arrowhead Framework Engineering of IoT devices in energy domain implies the
    use of Arrowhead Framework (AF) in order to ensure interoperability among devices
    when refined energy management is a must [43]. The system addresses experiencing
    users with solid knowledge about energy services or markets. Thus, the FlexOffer
    concept used in the system is Arrowhead-compliant to facilitate the development
    of service oriented distributed applications. The implemented FlexHousing system
    uses (Figure 5): Figure 5. FlexHousing system with Arrowhead Framework Services
    [43]. - AF Orchestrator system: to collect data and merge systems and services;
    thus, they can configure protected communication channel that enable secure critical
    transmissions (Figure 6); Figure 6. Arrowhead Framework (AF)-based FlexHousing
    System of Systems [43]. - ServiceRegistry system: for ensuring flexible and dynamic
    interoperability between different devices (systems). In SoS, the ServiceRegistry
    system uses features of service producers for publishing their specific applications
    and identifying different users; - Authorization system: to control a certain
    service accessed by a specific user (based on a rules list). The research in [43]
    was intended to extend “to different smart plugs that obey to different interaction
    patterns, and data regarding the energy saved in real-world deployments will be
    collected”. b. Efficient energy monitoring chain The Arrowhead Framework approach
    in [44] assumes that the created tools will be interconnected using this new technology.
    Though the system is still under development, the authors introduce a Non-Intrusive
    Load Monitoring (NILM) method to monitor the power consumption of individuals
    from other consumptions at the same measurement point. The ring configuration
    of the implemented tools (Figure 7) consists of Signature Creator tool (supports
    the signature creation process) and Signature Manager tool (manages exchange of
    signatures). Figure 7. Tool ring configuration of the system [44]. To facilitate
    tools interconnection, to reduce the complexity and costs of the system, Arrowhead
    Framework is considered as a viable candidate for future experimental tests. It
    is considered that every tool will represent a compatible service offered to service
    providers and consumers. 2.2.2. Production Support, Energy Efficiency, and Flexible
    Data Acquisition System Production processes and equipment monitoring can prove
    to be efficient when a combination between IoT facilities, Arrowhead Framework
    capabilities, and Machinery Information Management Open Systems Alliance (MIMOSA)
    data model is used to fulfill this goal [45]. The configuration of Arrowhead Framework
    architecture can handle SoS requirements and adapt efficiently to dynamic changes
    in processes. A model for Arrowhead local cloud configuration for hoist operation
    monitoring is depicted in Figure 8. From the attached local edge devices, data
    is processed through the gateway to the cloud in a flexible way. At the gateway
    layer, process-related data are analyzed. Here, through the Service registry,
    Orchestration and Authorization, one can publish the application system services.
    Next, the consumers can subscribe to these services. The MIMOSA data model is
    used for the acquired data storage and can act also at edge, gateway, and cloud
    layers. For example, all sensory data are kept at gateway level. When necessary,
    the gateway posts the data to a MIMOSA database, which, further, can interact
    with the Cloud services and analytics. Figure 8. Arrowhead local cloud configuration
    for hoist operation monitoring [45]. The main advantages of Arrowhead Framework
    architecture identified by authors in [45] include: - Cloud and inter-cloud approach
    can be managed with different security methods; - The use of the Service Registry,
    Orchestration, and Authorization services in Arrowhead Framework provide efficiency
    in case of rapid change of SoS elements or introduction of a new system, or a
    redundant system takes over the service providing role from a failing one [45];
    - Additional services of Arrowhead Framework can be involved in the dynamic monitoring:
    Event Handling, QoS monitoring, Inter-Cloud servicing. Similarly, in [45], Arrowhead
    local clouds can be operated by Suppliers, Companies, and Customers in Industrial
    Internet of Things (IIoT) systems. Thus, by using Orchestration System, Authorization
    System, Service Registry, and Event Handler in Arrowhead Framework, a complex
    supply chain management process is illustrated in Figure 9. Figure 9. Arrowhead-based
    supply chain management [46]. In [46], the authors propose a use-case in Paper
    Production, thus demonstrating that Arrowhead Framework design enables Industrial
    IoT scenarios based on a service-oriented approach. The IIOT system is also described
    in [47] together with another use-case for Arrowhead Framework for data-driven
    workflow management. Taking advantage of Arrowhead Framework SOA-based architecture,
    digital production in IoT context is considered for cloud communication. From
    Arrowhead Framework, Orchestration System is used as an interface for modifying
    the interactions between application systems. Next, Event Handler sends notifications
    concerning the events and monitors these events over the network. The Arrowhead
    core systems represent the data-driven engine structure and the workflow is controlled
    by a Workflow Choreographer (automated workflow management engine of the Arrowhead
    framework) that exploits the “Orchestration Push” service. The information on
    services reservation are achieved via Event Handler (Figure 10). Figure 10. Arrowhead-based
    cloud interconnected with Workflow Choreographer [47]. Therefore, the Workflow
    Choreographer (formed as a new engine of the Arrowhead Framework) can ensure the
    necessary support for the IIoT System of Systems through its SOA-based principles
    derived from the Arrowhead Framework. 2.2.3. Local Clouds Autonomous Configuration.
    Deployment and Configuration of SoS Systems. Arrowhead local cloud autonomous
    configurations is the most common use-case developed nowadays [49,50,51,52,54,55].
    The studied use-cases refer to service interaction through gateways for inter-cloud
    collaboration within the Arrowhead Framework [39], secure and trusted inter-cloud
    communications in the Arrowhead Framework [48], interacting with the Arrowhead
    local cloud: On-boarding procedure [50] and a multi-usable cloud service platform:
    A case study on improved development pace and efficiency [51]. Starting from Arrowhead
    Framework architecture, in [51], authors have designed a multi-usable cloud service
    platform to be used in a micro/small/medium-sized enterprise in Sweden (Figure
    11). The proposed use-case referred to optimizing the recycling management. Figure
    11. General architecture for multi-usable cloud service platform [51]. The results
    outlined that the development pace and efficiency of the enterprise have been
    improved by 50–75% when using the Arrowhead Framework and changing development
    processes/practices. Not only criteria related to efficiency and security must
    be taken into consideration when using Arrowhead Framework architecture, but QoS
    should be a key performance parameter [53,54,55]. In [53], the performances of
    a Long-Term Evolution (LTE) network (with a maximum capacity of the radio cell
    of 60/30 mbps) in different scenarios of IIoT intra-cloud use cases are evaluated
    considering the model for the edge level Arrowhead Local Cloud in Arrowhead Framework
    and Arrowhead Core devices (provider and consumer). The LTE management tools is
    configured using a dedicated QoS Class Identifier (QCI) traffic class for the
    delay sensitive Arrowhead traffic. It was noticed that 10 ms delay in packet delay
    occurs when sending period of an Arrowhead application service provider (within
    5 to 20 ms range) (Figure 12). This delay is unacceptable in an LTE communication
    because it leads to QoS degradation in IIoT use cases. Figure 12. Use case (left):
    100 ms sending period without Quality of Service (QoS) prioritization/use case
    (right): 20 ms sending period without QoS prioritization [53]. This delay achieved
    with an Arrowhead application service provider can be overcome by using “SDR-less
    LTE micro-cells, or by the upcoming 5G networking technologies” [53]. According
    to [54], QoSSetup and Monitor are core services for QoS supporting in Arrowhead
    local clouds (Figure 13). Figure 13. Architecture for QoS in Arrowhead [54]. Testbed
    based on Flexible Time-Triggered Switched Ethernet (FTT-SE) protocol measures
    the time interval the consumer requires until it starts using a QoS-enabled orchestrated
    service, and the effect of QoS guarantees, considering that the service producer
    is limited to only one service. It was illustrated how QoS can be successfully
    applied to Arrowhead-compliant local clouds at an architecture level, at verification
    algorithms level, and how to configure this QoS. Use-cases for Arrowhead Framework
    architecture include smart medical, smart traffic (and at a larger scale smart
    cities), smart energy, smart farming, mobility, infrastructure, etc. This paper
    aims to provide an efficient overview over the implication and methods applied
    for smart cities and smart agriculture when implementing the Arrowhead Framework
    in order to emphasize its advantages. 3. Arrowhead Framework in the Landscape
    of Smart City Frameworks Smart municipality [55], smart city services [56,57],
    utilities systems control in urban environment [58], energy optimization and next-generation
    building management systems [59], public safety, transportation, healthcare and
    education [60] are examples of applications available in a smart cities context,
    aimed to increase the quality of life of the citizens [61]. All these applications
    are disjointed without a framework that integrates them, providing interoperability
    for heterogeneous devices and services, being capable to gather and manipulate
    reliable data sources [62] in a secure way and to transform them into valuable
    information for citizens and other stakeholders. To achieve these, several smart
    city frameworks were proposed. Frequently, these frameworks envisage the importance
    of social factors, Information and Communications Technology (ICT), legal compliances,
    sustainability, as well as different factors related to economy [63]: Potential
    for urban development [64] as a response to better services and infrastructures
    [65]. 3.1. Smart Municipality In [55], an incident management system takes into
    consideration the use of Arrowhead architecture to provide the IoT framework for
    relevant data from sensors collection and to offer security, real-time communication,
    and safety in local cloud automation for different incidents scenarios (Figure
    14). Figure 14. Smart municipality design [55]. Furthermore, the Arrowhead Framework
    should ensure interconnectivity between citizens and authorities’ applications
    in one cloud or distributed separate cloud [55]. 3.2. Smart City Services Arrowhead
    Framework architecture can be used to develop smart cities applications as illustrated
    in [56]. This project aims at areas such as Smart Buildings and Infrastructures,
    Energy Production and End-User Services, Virtual Market of Energy, etc. [56].
    The authors develop pilot applications for each domain in order to demonstrate
    the use of Arrowhead Framework (Figure 15). Two of the implemented applications
    (for managing and monitoring system for streetlights and for engine block heaters)
    show that the dimming of streetlights can be accomplished based on the luminance
    and the heating time of engine block heaters based on temperature. Figure 15.
    Software app for Engine Block Heater Controller based on Arrowhead Framework [56].
    The final integrated system that incorporates both streetlight and car heating
    systems included in the Arrowhead Application is illustrated in Figure 16. Figure
    16. Overall system with street lighting and car heating system [56]. The connections
    between producers and consumers are outlined by numbers. The Arrowhead core services
    (the Controller) searches for the appropriate service producer within the Arrowhead
    network consuming other controllers (named application service producers) such
    as Engine Block Heater, Light, and TL sensors. Aside from energy saving, the main
    advantage of the proposed solution in [56] by comparison with the solution in
    [57] consists in components reusability due to SOA technology. Another IoT solution
    for street lighting “Lighting-Enabled Smart City Applications and Ecosystems (LENSCAPEs)
    framework” [57] uses light-on-demand capability based on environmental sensing
    for energy-saving, as well as real-time monitoring of the lighting system (Figure
    17). Figure 17. IoT solution for Lighting-Enabled Smart City Applications and
    Ecosystems (LENSCAPEs) framework [57]. Two topologies (Figure 18) have been considered
    in [57] in order to evaluate the performances of IEEE 802.15.4g-based Outdoor
    Lighting Networks (OLNs) (the maximum throughput and network delivery delay given
    5K bytes per pole per day. The results are given in Table 3. Figure 18. Basic
    topologies for IEEE 802.15.4g-based Outdoor Lighting Networks (OLNs) evaluation
    [57]. Table 3. Comprehensive 802.15.4g network testing results [57]. From Table
    3, it can be noticed that the throughput decreases as the number of poles increase
    (for 10,000 poles, the throughput is significantly lower: 94.53 KB per day) and,
    as the number of poles doubles, the throughput doubles also. As expected, the
    delay increases with the number of poles and decreases with the decrease of the
    data rates. 3.3. Utility Systems Control and Energy Optimization Smart city approach
    with utilities systems control using the Event Handler core system of Arrowhead
    Framework is detailed in [58]. The Event Handler System is developed in a real
    urban environment as a Message Queuing Telemetry Transport (MQTT) service broker
    enabling interconnections between embedded devices such as sensors and actuators
    used for Smart Cities applications (cities utilities, heating, and constructions
    systems). The Event Handler system is depicted in Figure 19. Figure 19. Event
    Handler system design [58]. As depicted in Figure 19, the Event Producers send
    messages to different Event Consumers via Event Handler. Among the roles of Event
    Handler, there are storage of producers, consumers, and events, as well as events
    filtering. The communication protocol for Event Handler system is MQTT, a wide
    use protocol for IoT embedded devices used in various IoT applications such as
    smart agriculture, smart building, etc. Although the Event Handler system design
    was successful, the authors in [58] leave room for improvement in terms of system
    security, costs, and complexity. In [59], authors discuss IoT requirements and
    different architectures for smart building optimization from an energy point of
    view in smart cities. Figure 20 outlines the significant impact of IoT solutions
    (sensors, controllers, aggregation networks, cloud applications, etc.) over smart
    cities concept including smart homes, smart building, etc. Figure 20. Global IoT-environment
    solution for smart concepts [59]. For the IoT architecture several solutions including
    Arrowhead Framework, 3GPP, Industrial Internet Reference Architecture (IIRA),
    ISO/IEC WD 30,141 IoT reference architecture (IoT RA), Reference Architecture
    Model Industries 4.0 (RAMI 4.0); IEEE Standard for an Architectural Framework
    for the IoT are presented in [59]: - Arrowhead Framework: Incapsulates the idea
    of using TCP/IP everywhere. The architecture is SOA-based and ensures interconnectivity
    among all SOA environments. The framework was defined for smart cities (smart
    energy, smart homes, smart buildings, etc). The authors in [59] suggest that a
    possible efficient architecture may be Arrowhead architecture for ensuring data
    security due to its SOA-based concept. - IIRA: Is a standard-based architecture
    targeted on functionality domains. Enhanced interoperability and technology developments
    and standardizations are the main purposes of this architecture. - IoT-RA: Is
    an IoT model that enables interoperability among IoT devices with security aspects
    included. - RAMI 4.0: Is an unified reference architecture with assets description
    including sensors, actuators, controllers, etc. An “Administration Shell” (AS)
    which stands as Data-Warehouse for the asset ensures the virtual representation
    of the real asset [59]. - IEEE Standard for an Architectural Framework for the
    IoT: Is a concept IoT architecture with development based on security, protection,
    privacy, and safety aspects. In [62], CityPulse Framework is proposed as an adaptive
    framework able to gather raw smart city-related data, implementing tools for data
    processing and forwarding. Similar to Arrowhead Framework, CityPulse uses semantic
    annotation to achieve the interoperability of raw data. Moreover, both platforms
    are provided with device and data discovering capabilities. SmartSantander [66]
    is a three-tiered SmartCity platform built on two planes: IoT experimentation
    plane and Testbed observation and management plane. This separation between planes
    enables a facile and automatic resource management. In Figure 21, IoT node tier—comprising
    the IoT devices, IoT gateway—responsible for the communication between IoT devices
    and the core network—and server tier, in charge of data storage, as well as applications
    and service hosting, were depicted. Figure 21. SmartSantander Smart City architecture
    [66]. Similar to the Arrowhead Framework, SmartSantander proposed architecture
    uses several services and features to implement the expected functions such as
    Publish, Subscription, and Notify services to disseminate events and Authentication,
    Authorisation, and Accounting rules to enable the service provider to authorize
    a consumer to use a resource or to deny access. In Arrowhead system, reconfiguration
    and resource configuration-related information is located in the core system,
    which corresponds to SmartSantander to Server Tier. The authors in [66] mention
    the following use-cases, also valid for Arrowhead: Smart City: Environmental monitoring
    (Air quality, Waste management), Outdoor parking management, Driver Assistance,
    Smart Irrigation for parks and public gardens, Augmented reality (for museums,
    culture institutions and others), Participatory sensing (citizens devices connected
    to the platform feeding information to enable services dependent on the citizen).
    According to [67], an architecture comprising Smart Mobility features may be a
    key factor in reducing travel time and traffic jams. 4. Smart Agriculture in Arrowhead
    Framework Context 4.1. Use-Cases In the context of continuous growing of the population
    in large cities, agriculture will expand its evolvement around and in big cities
    in order to ensure food for everybody. Agricultural activities in smart cities
    can be tagged as smart agriculture activities and, similar to other worldwide
    activities, they present an increased need for data security, reliable interconnection
    between devices and equipment, certain QoS ensured, etc. By introducing the Arrowhead
    concept in agriculture, it is expected to reduce development costs and introduce
    flexible and secure automation solutions by 25–60% of the total implemented solutions.
    To facilitate the development of new applications, the basic services included
    in Arrowhead are installed in the analysis area, and the data transmission is
    secure by the Virtual Private Network (VPN). Smart Agriculture in the context
    of Arrowhead platform consists in the implementation of a decision support system
    for in-site specific of agricultural culture. It is based on a cloud IoT end-to-end
    solution that can integrate various traditional and novel sensors (weather stations,
    Very High Resolution satellite (VHR), and Unmanned Aerial Vehicle (UAV), portable
    biosensors), as well as an advanced analytical engine, including cutting edge
    approach to artificial intelligence techniques and blockchain technologies, for
    the processing, modelling, and securing of the collected data and their conversion
    in useful knowledge through the specific intelligent applications. Corresponding
    web and mobile interfaces for the visualization of results and recommendations
    by farmers can also be generated keeping in mind an easy understanding and usability.
    The objectives followed by an Arrowhead Framework design for smart agriculture
    include: Implementation and integration of a multisensory platform including;
    Development of intelligent modules and software components to establish potential
    correlations between collected data and other data sets available online; Development
    and validation of the IoT platform as intelligent decision support system by transferring
    knowledge and recommendations to farmers; Development of Blockchain for traceability
    of crops products; Final demonstration in an industrial environment. The core
    services of smart agriculture are included into, and shipped in the form of, Arrowhead
    Framework (Figure 22). Figure 22. Smart Agriculture platform. These services,
    through their supporting systems, take care of all the actions that do not pertain
    to the functional requirements of a particular use case, but are instead related
    to the maintenance of the local cloud itself and on the nonfunctional requirements
    of the use case in general. Even in the most minimal local cloud, the core provides
    registration and discovery of services, systems, and devices (ServiceDiscovery
    service, or SD), security (Authentication service, or AA), and orchestration of
    complex services (Orchestration service, or O). The application systems are also
    consumers of the core services, depicted in red, green, and blue, respectively.
    Open source systems are detailed in the Core services part of Arrowhead Framework
    (Figure 23). Figure 23. Open source system in Arrowhead Framework [20]. Vertical
    farming is developed by authors in [68] and the challenges consist in data security,
    scalability, and IoT framework. Arrowhead Framework is proposed to register IoT
    devices that allow interconnectivity between heterogeneous systems and components
    ensuring at the same time, data security [68]. Using the parameters adjusted for
    scalability, safety, security, and self-adaptability of the system, authors intend
    to implement further a robotic appliance. 4.2. SmartAgro Project SmartAgro [69]
    is a Romanian national precision agriculture project, that uses digitalization
    aspects for smart agriculture presented in [70], aspects related to global positioning
    systems, cloud computing, IoT, and their effects on intelligent farming. The aim
    of the project is to develop a telemetry system with self-reconfigurability and
    self-diagnosis functions that will enable the use of IoT/M2M communications in
    areas with limited Global System for Mobile Communications (GSM) signal. The proposed
    telemetry system will be used in all types of agricultural fields (viticulture,
    fruit growing, vegetable growing, cereal cultivation, etc.). Among the crops for
    which there are standard monitoring applications, verified on tens of thousands
    of stations installed in the world, there can be mentioned: Vines, apple, pear,
    potato, wheat, corn, etc. For vines, for example, the three main diseases, manna,
    mildew and rot, are managed differently, by accessing software extensions that
    incorporate the experience of many specialists in the field. The telemetry system
    also allows the measurement and storage (by dedicated sensors means) of the fundamental
    parameters for irrigation management, respectively the amount of precipitation,
    soil moisture, and evapotranspiration, as well as the remote control of irrigation
    systems. The system also provides other important data for precision agriculture,
    such as: The amount of heat received daily and the cumulation of culture (in degrees-days),
    the number of hours of frost/heat, daily statistics, monthly/annual for all measured
    parameters. 4.3. Proposed Smart Agriculture Architecture Based on Arrowhead Framework
    The proposed architecture (Figure 24) is different from the traditional architectures
    which use only four or five layers. Generally, the four-tier architectures include:
    Device layer, Network layer, Cloud layer, and Application layer. Figure 24. SmartAgro
    innovative architecture. The proposed Arrowhead Framework-based SmartAgro architecture
    aims to optimize the functions of the telemetry system on several layers by using
    the Arrowhead Framework concept of local clouds. It must be stated that the use
    of Arrowhead represents a novel approach in precision agriculture. The SmartAgro
    architecture consists of several local clouds, each corresponding to a stakeholder
    in agriculture (a farm, etc.) Each local cloud consists of the following subsystems:
    Parcel: The parcel represents the unit element of a local cloud. It corresponds
    roughly to a parcel in a farm, but may sometimes represent a group of parcels,
    depending on the application and use case. Each parcel is composed of several
    layers: ○ Monitoring devices and platform layer: This layer contains all the necessary
    hardware and software to collect the raw data in the field and to store them for
    short-term: Sensors, as well as professional telemetry stations can be used. ○
    Edge layer: The edge layer is where the novelty lies as it contains what the authors
    have termed a decisional unit based on sensor data merging and processing, as
    well as AI techniques used for decision support, which is likely to be extremely
    important in precision agriculture ○ Communication layer: This is where the communication
    between the parcel and the gateway happens. It is envisioned to use low-power
    and possible long-range technologies suitable for transmitting data with batteries
    that can last for years (e.g., LoRaWAN). Gateway: A logical entity, the gateway
    is the entry point to the SmartAgro cloud platform, lying in the middle of what
    we call the local cloud. The reason for a separate gateway is to leave the possibility
    of connecting other technology gateways besides (e.g., LoRa) and controlling the
    flow of information towards the local storage. Local Storage: The local storage
    consists in a Database Management system (DBMS) (Database Management system),
    as well as a client that transmits data towards the SmartAgro central cloud. The
    communication with the SmartAgro cloud will be based on a publish/subscribe mechanism
    (MQTT broker), which will be implemented within the cloud platform. This component
    is aimed to assure data persistence and to decrease the latency in some scenarios,
    when only a group of parcels is targeted for off-line tasks or processing. Arrowhead
    Local Cloud: After the MQTT broker, a Data Transformation Engine will extract
    and format the heterogeneous sensor data into structured data. Here, a new decision
    support component will take decisions based on the data from all parcels, previously
    processed and analyzed. In the Arrowhead Local Cloud, device and resource management
    services will be implemented and notifications and alerts will be sent when the
    parameters are outside the proper range or when there are signaled devices failure
    and faults. Currently the project is in the stage of testing and implementing
    Arrowhead tools and its efficiency is going to be compared to the previous solutions
    in the context of a new and innovative architecture for the telemetry system.
    5. New Research Lines, Open Issues, and Challenges We studied several use cases
    pertaining to using the Arrowhead Framework in smart cities and smart agriculture.
    The applications, architectures, and performance of those contributions have been
    reviewed and illustrated. This opens several research directions and open issues
    that are discussed in the following paragraphs. 5.1. Interoperability Even today,
    there is a plethora of proprietary IoT systems that use proprietary data formats.
    It is necessary, in order to enable the future SoS concept, that systems communicate
    successfully between them and are plug’n play systems. SoS actually pose significant
    technical challenges in terms of information interoperability that require overcoming
    conceptual and technological barriers. Even today, within many modern ICT systems,
    interoperability is not seen as a strong requirement within their design. This
    leads to limited interoperability between systems and a high cost associated with
    the alignment of the systems. Using Arrowhead as a core framework might enable
    the achievement of interoperability. Currently Arrowhead provides an interoperability
    core system supporting protocol and encoding translation with a wide variety of
    protocols, conditioned by agricultural use case requirements. 5.2. Scalability
    All systems must support adding new sensors, whether the same or different than
    the already existing types. Moreover, it is necessary to be able to deploy a system
    or a SoS on a wider scale starting from, e.g., an existing pilot. A necessary
    requirement is that service and application developers do not develop from scratch
    but instead reuse and adapt existing components to their needs. As Arrowhead Framework
    is designed to work with local clouds, this can enable a scalable approach where
    all local clouds have the same type of configuration, and automated systems can
    intrinsically scale. 5.3. Ontology and Semantic Data The key challenge of integrating
    different agricultural IoT systems is how to deal with the semantic heterogeneity
    of these multiple information resources. Therefore, one requirement includes an
    ontology-based approach to describe and extract the semantics of agriculture IoT
    objects and a mechanism for sharing and reusing agricultural specific knowledge.
    While for other disciplines (e.g., eHealth) ontologies have already been well
    established, for agriculture little efforts have been made especially since it
    might not seem necessary currently. The problem of semantics translation is very
    complex, but Arrowhead Framework is designed to tackle this. Now, there are experimental
    core systems that are to be further matured by such logical entities as Consumer—CodeGeneration,
    LegacyIntegration, ModbusTCP, and SemanticsTranslator. On top of this, specific
    ontologies for agriculture can be built. 5.4. Agricultural Service Discovery and
    Provision We see this as more and more prevalent in the future. In an agricultural
    infrastructure, where parts of an application are divided into several pieces
    (for example: Agri-services in a microservice infrastructure), there is usually
    the need to handle the client requests to a service by means of a load balancer.
    Therefore, service discovery will be an essential part of future smart agriculture,
    not only by means of simple pointing to a correct address of a service, but also
    by enabling advanced mechanisms such as service health checks or even self-healing.
    Another concept, the agricultural service provision, will be equally essential
    as the agricultural IoT services can be provisioned when connecting new devices
    by discovering and configuring the relevant endpoint and identifying the service
    capabilities offered by the platform. All this has the goal to offer to the end-user
    a fast and ready-to-use configuration of the system without the need for any specific
    ICT knowledge. As mentioned, the Arrowhead Framework contains the mandatory ServiceRegistry
    system, which enables systems within the local cloud to publish their services.
    However, it has to transition to an approach where the core system automatically
    discovers services contained in systems in the local cloud. On the other hand,
    if the systems in the local cloud do not have any, the AF can automatically provision
    it with the right services based on the identification of the system type. 5.5.
    Standards Currently there are no existing established smart farming standards,
    although many un-coordinated initiatives exist. There is a great need for standardized
    IoT agricultural data formats, IoT transmission protocols, and IoT agricultural
    specific reference architectures. Standards are needed to ensure the safety of
    agricultural platforms and devices, to ensure that agricultural products and materials
    are specifically made for their purpose, and to promote the interoperability of
    agricultural products and services. The existence of standards will enable the
    surpassing of all the aforementioned challenges (interoperability, scalability,
    ontologies and service discovery and provision.) Arrowhead is particularly suited
    to standardization, as its complete reliance on standardized formats, protocols,
    and technologies will influence standards and frameworks into being adopted. 5.6.
    User-friendliness and Visualization There are many initiatives presently for nonskilled
    agriculture stakeholders, however, we have to point out that for an end-user it
    is highly important to not only have relevant data in an at-a-glance, easy to
    understand visual format, but also to be offered already insight and decision
    support based on data analytics. Future smart agriculture SoSs should be highly
    adapted to the different way of processing/analyzing data according to who is
    the end-user: For example, a farmer or cooperative (in the first case it means
    a friendly and relatively punctual analysis, in the second case, a more complex
    analysis). 6. Conclusions Arrowhead Framework was designed with the main purpose
    to enable interoperability between IoT components and to implement SoS from separate
    IoT systems. The area of applicability for Arrowhead Framework and Tools expands
    from basic engineering systems up to smart applications and systems including
    smart grid, smart energy, smart cities, smart constructions, smart agriculture,
    etc. Basic advantages of Arrowhead derive from SOA capabilities: Scalability,
    large interconnectivity between different IoT devices, efficiency in resource
    allocation and consumption. In smart cities development, Arrowhead proves efficient
    in the components reusability utility system, improvement energy consumption,
    etc. Yet, solutions related to communication security in terms of data protection
    are still to be developed. Smart agriculture requires a high initial investment,
    efficient farming tools, and skilled and knowledgeable farmers or growers, among
    others. Moreover, the cloud-based platform is a breakthrough aspect of smart agriculture
    which is not common in the farming industry. Major factors restraining the growth
    of the smart agriculture market are high cost and limited technical knowledge
    and skills of farmers. Smart agriculture use-cases require multiple data resources
    integration achieved with an increased number of sensors. News systems based on
    innovative solution will rely on application of the necessary technologies to
    allow the generation of a technological platform with analytical capacity, both
    in real time and pseudo real time, providing predictive and self-learning capabilities.
    Typically, the data registered by sensors must be carried out by technologies
    linked to IoT. To this end, data capture buses will be implemented in real time
    to allow the disambiguation of the input data. This will be achieved by applying
    the semantic interpretation to the data and allowing its linkage to the analysis
    entities to be defined. To achieve this capture, protocols such as MQTT, Advanced
    Message Queuing Protocol (AMQP), or Java Message Service (JMS) will be applied
    to ensure the entry of messages in the system. This information will be routed
    by the messaging brokers. This messaging brokers in combination with the Real-Time
    Processing Systems (CEP) will allow the analysis through the combination of different
    input variables. When designing a smart agriculture solution with Arrowhead Framework
    architecture other innovative aspects include Smart Farming management, Cloud
    storage and Platform as a Service (PaaS), IoT ready, multiprotocol for connectivity,
    cybersecurity, and Traceability. Finally, analyzing the advantages of Arrowhead
    Framework, the SmartAgro project team decided to propose a novel Smart Agriculture
    architecture based on Arrowhead network. Being currently under testing, the results
    of the tests performed will be emphasized in a future work. Author Contributions
    I.M. and G.S. conceived the study; I.M., C.B., A.V., and A.-M.D. wrote, revised,
    and edited the manuscript. All authors have read and agreed to the published version
    of the manuscript. Funding This research was funded by the SmartAgro project subsidiary
    contract No. 8592/08.05.2018, from the NETIO project ID: P_40_270, MySmis Code:
    105976, and partially supported through A-Succes Project, contract No. 51675/09.07.2019
    POCU/380/6/13, MySmis Code: 125125 and by a grant of the Romanian National Authority
    for Scientific Research and Innovation, CCCDI – UEFISCDI, project number ERANET-ERAGAS-ICT-AGRI3-FarmSusteinaBl-1,
    within PNCDI III. Acknowledgments We are grateful to Ioana Petre from BEIA who
    helped in the initial discussions that lead to the proposal of this paper. Conflicts
    of Interest The authors declare no conflict of interest. References Challa, S.;
    Wazid, M.; Kumar Das, A.; Kumar, N.; Goutham Reddy, A.; Yoon, E.-J.; Yoo, K.-Y.
    Secure Signature-Based Authenticated Key Establishment Scheme for Future IoT Applications.
    IEEE Access 2017, 5, 3028–3043. [Google Scholar] [CrossRef] Saleem, J.; Hammoudeh,
    M.; Raza, U.; Adebisi, B.; Ande, R. IoT standardisation: Challenges, perspectives
    and solution. In Proceedings of the 2nd International Conference on Future Networks
    and Distributed Systems (ICFNDS’18), Amman, Jordan, 26–27 June 2018. [Google Scholar]
    Smarter Healthcare in Smart Cities. Available online: https://www.orange-business.com/en/magazine/smarter-healthcare-in-smart-cities
    (accessed on 12 February 2020). Cook, D.J.; Duncan, G.; Sprint, G.; Fritz, R.L.
    Using Smart City Technology to Make Healthcare Smarter. Proc. IEEE 2018, 106,
    708–722. [Google Scholar] [CrossRef] [PubMed] Zhu, C.; Sheng, W.; Li, M. Wearable
    Sensor-based Behavioral Anomaly Detection in Smart Assisted Living Systems. IEEE
    Trans. Autom. Sci. Eng. 2015, 4, 1225–1234. [Google Scholar] [CrossRef] Yang,
    Y.; Song, Y.; Bo, X.; Min, J.; Pak, O.S.; Zhu, L.; Wang, M.; Tu, J.; Kogan, A.;
    Zhang, H.; et al. A laser-engraved wearable sensor for sensitive detection of
    uric acid and tyrosine in sweat. Nat. Biotechnol. 2019. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Wang, H.; Li, L.; Chen, H.; Li, Y.; Qiu, S.; Gravina,
    R. Motion Recognition for Smart Sports Based on Wearable Inertial Sensors. Bodynets
    2019. [Google Scholar] [CrossRef] Yan, C.; Deng, W.; Jin, L.; Yang, T.; Wang,
    Z.; Chu, X.; Su, H.; Chen, J.; Yang, W. Epidermis-Inspired Ultrathin 3D Cellular
    Sensor Array for Self-Powered Biomedical Monitoring. ACS Appl. Mater. Interfaces
    2018, 10, 41070–41075. [Google Scholar] [CrossRef] Zhang, C.; Kim, J.P.; Creer,
    M.; Yang, J.; Liu, Z. A smartphone-based chloridometer for point-of-care diagnostics
    of cystic fibrosis. Biosens. Bioelectron. 2017, 97, 164–168. [Google Scholar]
    [CrossRef] Gajbhiye, S.; Vyas, B.; Shrikhande, S.; Janbandhu, A.; Nagpure, K.;
    Agashe, M. IoT Based Heart Attack Early Prediction. Int. J. Sci. Res. Comput.
    Sci. Eng. Inf. Technol. 2019, 5, 448–451. [Google Scholar] Shandilya, R.; Bhargava,
    A.; Bunkar, N.; Tiwari, R.; Goryacheva, I.Y.; Mishra, P.K. Nanobiosensors: Point-of-care
    approaches for cancer diagnostics. Biosens. Bioelectron. 2019, 130, 147–165. [Google
    Scholar] [CrossRef] Liu, J.; Geng, Z.; Fan, Z.; Liu, J.; Chen, H. Point-of-care
    testing based on smartphone: The current state-of-the-art (2017–2018). Biosens.
    Bioelectron. 2019, 132, 17–37. [Google Scholar] [CrossRef] Wang, T.; Mei, Q.;
    Tao, Z.; Wu, H.; Zhao, M.; Wang, S.; Liu, Y. A smartphone-integrated ratiometric
    fluorescence sensing platform for visual and quantitative point-of-care testing
    of tetracycline. Biosens. Bioelectron. 2020. [Google Scholar] [CrossRef] Xu, D.;
    Huang, X.; Guod, J.; Ma, X. Automatic smartphone-based microfluidic biosensor
    system at the point of care. Biosens. Bioelectron. 2018, 110, 78–88. [Google Scholar]
    [CrossRef] Escobedo, P.; Erenas, M.M.; Martínez-Olmos, A.; Carvajal, M.A.; Gonzalez-Chocano,
    S.; Capitán-Vallvey, L.F.; Palma, A.J. General-purpose passive wireless point–of–care
    platform based on smartphone. Biosens. Bioelectron. 2019. [Google Scholar] [CrossRef]
    Lin, Z.; Chen, J.; Li, X.; Zhou, Z.; Meng, K.; Wei, W.; Yang, J.; Wang, Z.L. Triboelectric
    Nanogenerator Enabled Body Sensor Network for Self-Powered Human Heart-Rate Monitoring.
    ACS Nano 2017, 11, 8830–8837. [Google Scholar] [CrossRef] Lin, Z.; Yang, J.; Li,
    X.; Wu, Y.; Wei, W.; Liu, J.; Chen, J.; Yang, J. Large-Scale and Washable Smart
    Textiles Based on Triboelectric Nanogenerator Arrays for Self-Powered Sleeping
    Monitoring. Adv. Funct. Mater. 2018, 28, 1704112. [Google Scholar] [CrossRef]
    Meng, K.; Chen, J.; Li, X.; Fan, W.; Zhou, Z.; Fan, X.; Zhang, Y.; Yang, J.; Wang,
    Z.L. Scalable Weaving Constructed Wearable Nanosensors Array for Self-Powered
    and Continuous Measurement of Human Pulse Wave and Blood Pressure. Adv. Funct.
    Mater. 2019, 29, 1806388. [Google Scholar] Singh, A.T.; Lantigua, D.; Meka, A.;
    Taing, S.; Pandher, M.; Camci-Unal, G. Paper-Based Sensors: Emerging Themes and
    Applications. Sensors 2018, 18, 2838. [Google Scholar] [CrossRef] [PubMed] [Green
    Version] Meng, K.; Zhao, S.; Zhou, Y.; Wu, Y.; Zhang, S.; He, Q.; Wang, X.; Zhou,
    Z.; Fan, W.; Tan, X.; et al. A Wireless Textile-Based Sensor System for Self-Powered
    Personalized Health Care. Matter 2020. [Google Scholar] [CrossRef] Wu, F.; Rüdiger,
    C.; Redouté, J.M.; Yuce, M.R. A Wearable Multi-sensor IoT Network System for Environmental
    Monitoring. Adv. Body Area Netw. 2018. [Google Scholar] [CrossRef] Lazaro, A.;
    Villarino, R.; Girbau, D. A Survey of NFC Sensors Based on Energy Harvesting for
    IoT Applications. Sensors 2018, 18, 3746. [Google Scholar] [CrossRef] [Green Version]
    Yan, C.; Gaoa, Y.; Zhao, S.; Zhang, S.; Zhou, Y.; Deng, W.; Li, Z.; Jiang, G.;
    Jin, L.; Tian, G.; et al. A Linear-to-Rotary Hybrid Nanogenerator for High-Performance
    Wearable Biomechanical Energy Harvesting. Nano Energy 2020. [Google Scholar] [CrossRef]
    Munasinghe, M.I.N.P.; Miles, L.; Paul, G. Direct-Write Fabrication of Wear Profiling
    IoT Sensor for 3D Printed Industrial Equipment. Comput. Sci. 2019. [Google Scholar]
    [CrossRef] Patti, E.; Acquaviva, A. IoT platform for Smart Cities: Requirements
    and implementation case studies. In Proceedings of the 2nd IEEE International
    Forum on Research and Technologies for Society and Industry Leveraging a better
    tomorrow (RTSI 2016), Bologna, Italy, 7–9 September 2016. [Google Scholar] Pau,
    M.; Patti, E.; Barbierato, L.; Estebsari, A.; Pons, E.; Ponci, F.; Montia, A.
    A cloud-based smart metering infrastructure for distribution grid services and
    automation. Sustain. Energy Grids Netw. 2018, 15, 14–25. [Google Scholar] [CrossRef]
    [Green Version] Cisco Kinetic for Cities. Available online: https://www.cisco.com/c/en/us/solutions/industries/smart-connected-communities/kinetic-for-cities.html
    (accessed on 10 November 2019). Libelium. Available online: http://www.libelium.com/
    (accessed on 20 August 2019). Suciu, G.; Ușurelu, T.; Beceanu, C.; Dobrea, M.A.
    IoT and Energy Efficiency for Smart Agriculture using Adcon Telemetry Devices.
    In Proceedings of the International Symposium on Fundamentals of Electrical Engineering
    (ISFEE), Bucharest, Romania, 1–3 November 2018. [Google Scholar] Solutions for
    Smart Farming (Agriculture IoT). Available online: https://www.kaaproject.org/smart-farming
    (accessed on 20 August 2019). Joannou, D.; Kalawsky, R.; Saravi, S.; Rivas Casado,
    M.; Fu, G.; Meng, F. A Model-Based Engineering Methodology and Architecture for
    Resilience in Systems-of-Systems: A Case of Water Supply Resilience to Flooding.
    Water 2019, 11, 496. [Google Scholar] [CrossRef] [Green Version] Cyber-Physical
    Systems. Available online: https://ec.europa.eu/digital-single-market/en/policies/cyber-physical-systems
    (accessed on 11 September 2019). Lewis, G.; Morris, E.; Simanta, S.; Smith, D.
    Service Orientation and Systems of Systems. IEEE Softw. 2011, 28, 58–63. [Google
    Scholar] [CrossRef] Arrowhead Core Systems & Services. Available online: https://forge.soa4d.org/plugins/mediawiki/wiki/arrowhead-f/index.php/Core_systems_%26_services
    (accessed on 11 September 2019). Evolving, Extending, Changing—Arrowhead Framework
    Unlimited? Available online: https://productive40.eu/2018/12/05/evolving-extending-changing-arrowhead-framework-unlimited/
    (accessed on 20 September 2019). Derhamy, H.; Eliasson, J.; Delsing, J.; Priller,
    P. A survey of commercial frameworks for the internet of things. In Proceedings
    of the Emerging Technologies & Factory Automation (ETFA), Luxembourg, 8–11 September
    2015. [Google Scholar] Local Area Network Word Cloud. Available online: https://www.shutterstock.com/image-illustration/local-area-network-word-cloud-1201312630
    (accessed on 10 October 2019). Delsing, J.; Eliasson, J.; Deventer, J.V.; Derhamy,
    H.; Varga, P. Enabling iot automation using local clouds. In Proceedings of the
    2016 IEEE 3rd World Forum on Internet of Things (WF-IoT), Reston, VA, USA, 12–14
    December 2016. [Google Scholar] Paniagua, C.; Eliasson, J.; Delsing, J. Efficient
    Device-to-Device Service Invocation Using Arrowhead Orchestration. IEEE Internet
    Things J. 2019. [Google Scholar] [CrossRef] Arrowhead Tools. Available online:
    https://www.innogrid2020.eu/projects/arrowhead-tools/ (accessed on 12 October
    2019). Delsing, J. IoT Automation: Arrowhead Framework; CRC Press: Boca Raton,
    FL, USA, 2017. [Google Scholar] Industrial Use Cases for Arrowhead. Available
    online: https://arrowhead.eu/arrowheadtools/about-arrowhead-tools/industrial-use-cases/
    (accessed on 30 January 2020). Rocha, R.; Albano, M.; Ferreira, L.L.; Relvas,
    F.; Matos, L. The Arrowhead Framework applied to Energy Management. In Proceedings
    of the 14th IEEE International Workshop on Factory Communication Systems (WFCS),
    Imperia, Italy, 13–15 June 2018. [Google Scholar] Brunelli, D.; Cinotti, T.S.;
    Woehrl, H.; Aguzzi, C.; Montori, F.; Benini, L. An interoperable tool-chain for
    energy monitoring applications. In Proceedings of the AEIT International Annual
    Conference (AEIT), Florence, Italy, 18–20 September 2019. [Google Scholar] Halme,
    J.; Jantunen, E.; Hästbacka, D.; Hegedűs, C.; Varga, P.; Björkbom, M.; Mesiä,
    H.; More, R.; Jaatinen, A.; Barna, L.; et al. Monitoring of Production Processes
    and the Condition of the Production Equipment through the Internet. In Proceedings
    of the 6th International Conference on Control, Decision and Information Technologies
    (CoDIT), Paris, France, 23–26 April 2019. [Google Scholar] Kozma, D.; Varga, P.;
    Hegedüs, C. Supply Chain Management and Logistics 4.0—A Study on Arrowhead Framework
    Integration. In Proceedings of the 8th International Conference on Industrial
    Technology and Management (ICITM), Cambridge, UK, 2–4 March 2019. [Google Scholar]
    Kozma, D.; Varga, P.; Larrinaga, F. Data-driven Workflow Management by utilising
    BPMN and CPN in IIoT Systems with the Arrowhead Framework. In Proceedings of the
    24th IEEE International Conference on Emerging Technologies and Factory Automation
    (ETFA), Zaragoza, Spain, 10–13 September 2019. [Google Scholar] Varga, P.; Hegedus,
    C. Service Interaction through Gateways for Inter-Cloud Collaboration within the
    Arrowhead Framework. In Proceedings of the 5th International Conference on Wireless
    Communications, Vehicular Technology, Information Theory and Aerospace & Electronic
    Systems (Wireless VITAE), Hyderabad, India, 13–16 December 2015. [Google Scholar]
    Hegedus, C.; Varga, P.; Frankó, A. Secure and trusted inter-cloud communications
    in the arrowhead framework. In Proceedings of the IEEE Industrial Cyber-Physical
    Systems (ICPS), St. Petersburg, Russia, 15–18 May 2018. [Google Scholar] Bicaku,
    A.; Maksuti, S.; Hegedus, C.; Tauber, M.; Delsing, J.; Eliasson, J. Interacting
    with the arrowhead local cloud: On-boarding procedure. In Proceedings of the IEEE
    Industrial Cyber-Physical Systems (ICPS), St. Petersburg, Russia, 15–18 May 2018.
    [Google Scholar] Lindström, J.; Hermanson, A.; Blomstedt, F.; Kyösti, P. A Multi-Usable
    Cloud Service Platform: A Case Study on Improved Development Pace and Efficiency.
    Appl. Sci. 2018, 8, 316. [Google Scholar] [CrossRef] [Green Version] Ferreira,
    L.L.; Albano, M.; Delsing, J. QoS-as-a-Service in the local cloud. In Proceedings
    of the 21st International Conference on Emerging Technologies and Factory Automation
    (ETFA), Berlin, Germany, 6–9 September 2016. [Google Scholar] Orosz, P.; Varga,
    P.; Soós, G.; Hegedűs, C. QoS Guarantees for Industrial IoT Applications over
    LTE—A Feasibility Study. In Proceedings of the International Conference on Industrial
    Cyber Physical Systems (ICPS), Taipei, Taiwan, 6–9 May 2019. [Google Scholar]
    Albano, M.; Barbosa, P.M.; Silva, J.; Duarte, R.; Ferreira, L.L.; Delsing, J.
    Quality of service on the arrowhead framework. In Proceedings of the 13th International
    Workshop on Factory Communication Systems (WFCS), Trondheim, Norway, 31 May–2
    June 2017. [Google Scholar] Smart Municipality. Available online: https://people.fh-burgenland.at/bitstream/20.500.11790/1302/1/EN119_Wolfgeher.pdf
    (accessed on 18 October 2019). Jokinen, J.; Latvala, T.; Martinez Lastra, J.L.
    Integrating Smart City Services using Arrowhead Framework. In Proceedings of the
    42nd Annual Conference of the IEEE Industrial Electronics Society (IECON 2016),
    Florence, Italy, 23–26 October 2016. [Google Scholar] Murthy, A.; Han, D.; Jiang,
    D.; Oliveira, T. Lighting-Enabled Smart City Applications and Ecosystems Based
    on the IoT. In Proceedings of the 2nd World Forum on Internet of Things (WF-IoT),
    Milan, Italy, 14–16 December 2015. [Google Scholar] Zabasta, A.; Kunicina, N.;
    Kondratjevs, K.; Patlins, A.; Ribickis, L.; Delsing, J. MQTT Service Broker for
    Enabling the Interoperability of Smart City Systems. In Proceedings of the Energy
    and Sustainability for Small Developing Economies (ES2DE), Funchal, Portugal,
    9–12 July 2018. [Google Scholar] Minoli, D.; Sohraby, K.; Occhiogrosso, B. IoT
    Considerations, Requirements, and Architectures for Smart Buildings—Energy Optimization
    and Next-Generation Building Management Systems. IEEE Internet Things J. 2017,
    4. [Google Scholar] [CrossRef] AL-Masri, A.N.; Ijeh, A.; Nasir, M. Smart City
    Framework Development: Challenges and Solutions. Smart Technol. Innov. Sustain.
    Future 2019. [Google Scholar] [CrossRef] Anthopoulos, L.G. Defining Smart City
    Architecture for Sustainability. In Proceedings of the 14th IFIP Electronic Government
    (EGOV) and 7th Electronic Participation (ePart), Thessaloniki, Greece, 30 August
    –3 September 2015. [Google Scholar] Puiu, D.; Barnaghi, P.; Tonjes, R.; Kumper,
    D.; Intizar Ali, M.; Mileo, A.; Parreira, J.X. CityPulse: Large Scale Data Analytics
    Framework for Smart Cities. IEEE Access 2016, 4, 1086–1108. [Google Scholar] [CrossRef]
    Joshia, S.; Saxena, S.; Godboleb, T.S. Developing Smart Cities: An Integrated
    Framework. Procedia Comput. Sci. 2016, 93. [Google Scholar] [CrossRef] [Green
    Version] Vinod Kumar, T.M. Smart Economy in Smart Cities. Smart Cities, Local
    Community and Socio-Economic Development: The Case of Bologna; Springer: Berlin/Heidelberg,
    Germany, 2017. [Google Scholar] Sánchez, L.; Elicegui, I.; Cuesta, J.; Muñoz,
    L.; Lanza, J. Integration of Utilities Infrastructures in a Future Internet Enabled
    Smart City Framework. Sensors 2013, 13, 14438–14465. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Sanchez, L.; Muñoz, L.; Galache, J.A.; Sotres, P.; Santana,
    H.R.; Gutierrez, V.; Ramdhany, R.; Gluhak, A.; Krco, S.; Theodoridis, E.; et al.
    SmartSantander: IoT Experimentation over a Smart City Testbed. Comput. Netw. 2014,
    61, 217–238. [Google Scholar] [CrossRef] [Green Version] Alam, M.D.; Porras, J.
    Architecting and Designing Sustainable Smart City Services in a Living Lab Environment.
    Technologies 2018, 6, 99. [Google Scholar] [CrossRef] [Green Version] Gnauer,
    C.; Pichler, H.; Tauber, M.; Schmittner, C.; Christl, K.; Knapitsch, J.; Parapatits,
    M. Towards a secure and self-adapting smart indoor farming framework. Elektrotechnik
    und Informationstechnik 2019, 136, 341–344. [Google Scholar] [CrossRef] [Green
    Version] SmartAgro Project. Available online: https://smartagro.beia-consult.ro/
    (accessed on 8 November 2019). The Arrowhead Framework Vision and Objective. Available
    online: https://www.arrowhead.eu/arrowheadframework/why-how (accessed on 8 November
    2019).  © 2020 by the authors. Licensee MDPI, Basel, Switzerland. This article
    is an open access article distributed under the terms and conditions of the Creative
    Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Marcu, I.; Suciu, G.; Bălăceanu, C.; Vulpe,
    A.; Drăgulinescu, A.-M. Arrowhead Technology for Digitalization and Automation
    Solution: Smart Cities and Smart Agriculture. Sensors 2020, 20, 1464. https://doi.org/10.3390/s20051464
    AMA Style Marcu I, Suciu G, Bălăceanu C, Vulpe A, Drăgulinescu A-M. Arrowhead
    Technology for Digitalization and Automation Solution: Smart Cities and Smart
    Agriculture. Sensors. 2020; 20(5):1464. https://doi.org/10.3390/s20051464 Chicago/Turabian
    Style Marcu, Ioana, George Suciu, Cristina Bălăceanu, Alexandru Vulpe, and Ana-Maria
    Drăgulinescu. 2020. \"Arrowhead Technology for Digitalization and Automation Solution:
    Smart Cities and Smart Agriculture\" Sensors 20, no. 5: 1464. https://doi.org/10.3390/s20051464
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   40
    Scopus   49 Web of Science   34 ads   10 PubMed   10 PMC   10 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 9.
    Jan 19. Jan 29. Jan 8. Feb 18. Feb 28. Feb 9. Mar 19. Mar 29. Mar 0k 2k 4k 6k
    8k For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Arrowhead technology for digitalization and automation solution: Smart cities
    and smart agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Jeppesen J.H.
  - Ebeid E.
  - Jacobsen R.H.
  - Toftegaard T.S.
  citation_count: '26'
  description: The terms Internet of Things and Big Data are currently subject to
    much attention, though the specific impact of these terms in our practical lives
    are difficult to apprehend. Data-driven approaches do lead to new possibilities,
    and significant improvements within a broad range of domains can be achieved through
    a cloud-based infrastructure. In the agricultural sector, data-driven precision
    agriculture shows great potential in facilitating the increase in food production
    demanded by the increasing world population. However, the adoption rate of precision
    agriculture technology has been slow, and information and communications technology
    needed to promote the implementation of precision agriculture is limited by proprietary
    integrations and non-standardized data formats and connections. In this paper,
    an open geospatial data infrastructure is presented, based on standards defined
    by the Open Geospatial Consortium (OGC). The emphasis in the design was on improved
    interoperability, with the capability of using sensors, performing cloud processing,
    carrying out regional statistics, and provide seamless connectivity to machine
    terminals. The infrastructure was implemented through open source software, and
    was complemented by open data from governmental offices along with ESA satellite
    imagery. Four use cases are presented, covering analysis of nearly 50 000 crop
    fields and providing seamless interaction with an emulated machine terminal. They
    act to showcase both for how the infrastructure enables modularity and interoperability,
    and for the new possibilities which arise from this new approach to data within
    the agricultural domain.
  doi: 10.1016/j.compag.2017.12.026
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related work 3. Infrastructure
    requirements 4. Infrastructure design and implementation 5. Use cases 6. Discussion
    7. Conclusion Acknowledgment References Show full outline Cited by (26) Figures
    (9) Show 3 more figures Tables (3) Table 1 Table 2 Table Computers and Electronics
    in Agriculture Volume 145, February 2018, Pages 130-141 Original papers Open geospatial
    infrastructure for data management and analytics in interdisciplinary research
    Author links open overlay panel Jacob Høxbroe Jeppesen a, Emad Ebeid b, Rune Hylsberg
    Jacobsen a, Thomas Skjødeberg Toftegaard a Show more Add to Mendeley Share Cite
    https://doi.org/10.1016/j.compag.2017.12.026 Get rights and content Highlights
    • A geospatial infrastructure conforming to OGC standards was implemented. • The
    entire work was based on open data and open source software. • Open data was used
    to analyze nearly 50 000 fields w.r.t. intra-field variations. • The standardized
    implementation results in easy transition to commercial products. Abstract The
    terms Internet of Things and Big Data are currently subject to much attention,
    though the specific impact of these terms in our practical lives are difficult
    to apprehend. Data-driven approaches do lead to new possibilities, and significant
    improvements within a broad range of domains can be achieved through a cloud-based
    infrastructure. In the agricultural sector, data-driven precision agriculture
    shows great potential in facilitating the increase in food production demanded
    by the increasing world population. However, the adoption rate of precision agriculture
    technology has been slow, and information and communications technology needed
    to promote the implementation of precision agriculture is limited by proprietary
    integrations and non-standardized data formats and connections. In this paper,
    an open geospatial data infrastructure is presented, based on standards defined
    by the Open Geospatial Consortium (OGC). The emphasis in the design was on improved
    interoperability, with the capability of using sensors, performing cloud processing,
    carrying out regional statistics, and provide seamless connectivity to machine
    terminals. The infrastructure was implemented through open source software, and
    was complemented by open data from governmental offices along with ESA satellite
    imagery. Four use cases are presented, covering analysis of nearly 50 000 crop
    fields and providing seamless interaction with an emulated machine terminal. They
    act to showcase both for how the infrastructure enables modularity and interoperability,
    and for the new possibilities which arise from this new approach to data within
    the agricultural domain. Previous article in issue Next article in issue Keywords
    Internet of ThingsRemote sensingOpen softwareOpen dataFarm management information
    systems 1. Introduction The Internet of Things (IoT) and Big Data have gained
    tremendous attention in recent years, and we are currently witnessing information
    and knowledge from data becoming a critically important tradable asset. Most domains
    are becoming increasingly data-centric, however, it is difficult to gain an overview
    of the specific benefits one might achieve from this. Furthermore, interoperability
    has, and still is, an issue, and standardization is necessary for achieving modularity,
    where a broad range of software and hardware modules can be seamlessly connected.
    This calls for a standardized cloud-based infrastructure with an eco-system approach,
    resulting in third-party vendors becoming able to develop add-ons to existing
    systems, much like apps for smartphones. The agricultural sector is required to
    increase yield production to meet the expected doubling of crop demand from 2005
    to 2050 (Tilman et al., 2011). Meanwhile, 70% of freshwater withdrawals are already
    devoted to irrigation and the agricultural sector is responsible for 30–35% of
    greenhouse gas emissions (Foley et al., 2011). This is partly caused by 50% of
    the global nitrogen applied not being absorbed by the crops they were distributed
    on (Stuart et al., 2014). Hence, there is a critical need for new methods for
    optimizing the agricultural domain. Precision agriculture employs technologies
    to manage spatial and temporal variability within fields to improve crop yield
    while decreasing the environmental impact. Hence, it facilitates site specific
    farming, such that e.g. irrigation and nitrogen fertilizer is distributed only
    where and when necessary. However, the adoption rate of precision agriculture
    has been slow, due to a range of factors, such as issues with interoperability,
    compatibility, and complexity (Aubert et al., 2012). Recent advances in open source
    software, open standards, and open interfaces show potential for overcoming these
    issues. The standardization of interfaces and formats by The Open Geospatial Consortium
    (OGC) can ensure interoperability of geographic information systems (GIS) (Nash
    et al., 2009, Nikkilä et al., 2010), which is an essential part of precision agriculture
    (Nikkilä et al., 2010). Furthermore, advances in cloud computing acts as an enabler
    for precision agriculture. The devices are interconnected, as seen in Fig. 1,
    and servers for storage, communication, processing, and analytics can use a variety
    of methods for extracting important knowledge from the vast amounts of data. Cloud
    computing capabilities are decreasing significantly in price, and high processing
    power along with large storage capabilities can be setup in an easy manner. Furthermore,
    open data provide valuable information for the agricultural practice. Although
    application maps based on satellite imagery has been found to improve profit while
    decreasing environmental impact (Seelan et al., 2003), the total cost of applying
    the system, alongside the implications regarding ease of use, made it infeasible.
    These issues have been significantly alleviated, due to the open multi-spectral
    satellite imagery from Sentinel-2 and Landsat satellites combined with the aforementioned
    advances in hardware and open software. Download : Download high-res image (225KB)
    Download : Download full-size image Fig. 1. An overview of a cloud-based data
    infrastructure, communicating with a broad range of devices. The work presented
    in this paper describes the geospatial data infrastructure required to facilitate
    data transfer, storage, processing, and analytics within precision agriculture.
    The contributions include an implementation of an OGC compliant infrastructure,
    including OGC standards for heterogeneous sensor webs. This covers important Information
    and Communications Technology (ICT) aspects of the precision agriculture practice,
    from satellite imagery or sensor data through cloud processing to tractor terminal,
    smartphone, or workstation. It is demonstrated how the infrastructure can be used
    to carry out large regional statistical analyses based on open data, which have
    not previously been viable. The infrastructure is implemented using open source
    software, and forms the foundation for interdisciplinary research with interoperability
    in mind, such that data can be shared in standardized formats, and visualized
    online. This results in the possibility for diverse research focusing on optimizing
    over the entire crop cycle. Finally, the infrastructure provides an easy transition
    to commercial products, hence coupling academic research with industrial objectives.
    The remainder of this paper is organized as follows: Section 2 covers related
    work, including the advances in open data and the current state of Farm Management
    Information Systems (FMIS) with regard to precision agriculture. Section 3 presents
    the requirements and needs for the geospatial data infrastructure, before Section
    4 describes the design and implementation of the proposed infrastructure. Section
    5 validates the infrastructure through four use cases. Section 6 provides a discussion
    on the findings. Finally, Section 7 concludes the paper. 2. Related work The Internet
    has provided an unprecedented platform for data sharing, where the cost of distribution
    to the public has become marginal. The availability of open data has progressed
    tremendously in recent years, and in 2013, the G8 countries decided to be trendsetters
    in open data policies (Castro and Korte, 2015). The financial benefits in 2008
    coming directly and indirectly from open data was estimated to be about 140 billion
    euro in Europe (Vickery, 2011). NASA opened data access to the LANDSAT satellite
    programme in 2008, and the impact of this decision is discussed in Wulder et al.
    (2012). They describe how the use of satellite imagery have increased significantly,
    and address several future benefits when data from several satellites, such as
    LANDSAT and Sentinel, can be used together. The record of distributed Landsat
    images per year before the open access was 25 000 in 2001 (Wulder et al., 2012),
    compared to 1 million distributed images in the first 17 days of March 2016 (Landsat).
    In Janssen et al. (2012), the benefits and barriers of adopting open data are
    discussed. The major technical barriers involve the absence of standardized data
    along with the lack of a central portal to access them. Within the agricultural
    sector, this is particularly true, as the sector has faced obstacles with respect
    to ICT due to vertical integrations and proprietary formats (Nash et al., 2009).
    The benefits of adopting open data cover economic growth and stimulation of innovation.
    Furthermore, there is a large potential for the use of open data for minimizing
    climate impact within the agricultural sector (Zaks and Kucharik, 2011). The advantages
    of employing decision support systems within the agricultural sector based on
    remote sensing, in particular satellite imagery, is described in Seelan et al.
    (2003), with several use cases proving the financial and ecological gains. The
    price of implementing such systems have decreased significantly, partly due to
    the open satellite data policies of NASA and ESA, and partly due to the reduced
    price of data communication and open software for data analysis. In Bivand (2011),
    a wide variety of open source GIS software tools are presented. According to Steiniger
    and Bocher (2009), open software can perform the advanced spatial analysis functions
    of the proprietary software. This is important, as the lack of standardization
    and the cost of required data and software are obstacles for precision agriculture
    (Seelan et al., 2003). Traditionally, FMISs have been operating on a field scale
    and did not include GIS data, which are essential for precision agriculture (Rains
    and Thomas, 2009). The complexity of employing GIS systems decreases, and the
    interoperability between software packages alongside with increasingly standardized
    transfer methods for spatial data have improved significantly, mainly due to the
    attention this matter has received within the GIS community (Nash et al., 2009).
    The adoption of web services based on open GIS standards are clear improvements
    for data transfer within the domain (Nash et al., 2009). A study performed in
    2015 of 144 FMIS solutions showed that only 40% supported site-specific farming,
    and only 15% supported a web interface (Fountas et al., 2015). These functionalities
    are core elements of future precision agriculture (Nikkilä et al., 2010). The
    lack of these functionalities is argued in the study, to be partly due to the
    development cost of them, followed by a lack of standardization. It is important
    to note, however, that a study of farmer experience with precision agriculture
    in 2005 found that 81% of Danish farmers, and 78% of American farmers, preferred
    to store data locally (Fountas et al., 2005). The knowledge gaps regarding ICT
    in agriculture are discussed in Mulla (2013). One advice for future research is
    to combine historic data from, e.g., satellites with real-time remote sensing
    data for improved decision making in farm operation. In Basso et al. (2013), it
    is discussed how remote sensed data can be used in collaboration with crop simulation
    models for improved precision. In Murakami et al. (2007), important requirements
    for obtaining precision agriculture are listed, and includes complete control
    of the system, more standardized computer systems, seamless integration and interoperability
    with other software packages, scalability, support for meta-data, and low cost.
    A review of the use of geospatial web services provided by OGC is discussed in
    Nash et al. (2009), however, the system is not implemented. In Chen et al. (2015),
    a system based on OGC standards and web services is proposed and implemented,
    however, they focus mainly on sensors in precision agriculture. An empirical analysis
    of the adoption rate of precision agriculture is presented in Aubert et al. (2012).
    They find that it is, in particular, the ease of use of the systems along with
    the compatibility of the systems with existing farming equipment, that limits
    the adoption rate. Interestingly, they also find that trialability has a negative
    impact on the adoption rate (Aubert et al., 2012). Hence, the farmers who try
    precision agriculture systems are less likely to adopt them, which indicates that
    the systems are more complex than farmers anticipate. Furthermore, they point
    out that the adoption of precision agriculture systems necessarily leads to an
    adoption of a range of components which are partially dependent, and that the
    complexity of such a systemic adoption has been underestimated, leading to a low
    adoption rate. This issue is addressed in this paper by introducing a modular
    approach towards precision agriculture, where each module can improve the farming
    practice without requiring a broad range of components to function. Furthermore,
    this software ecosystem approach provides the ability for third-party developers
    to easily add value to the setup. 3. Infrastructure requirements In this section,
    the requirements of the infrastructure, based on the ICT issues encountered in
    the precision agriculture domain are investigated. Lack of interoperability has
    been a major inhibitor for the adoption rate of precision agriculture, and continues
    to be a key issue (Fountas et al., 2015). It is advised that vendors should investigate
    open standards to ensure compatibility (Aubert et al., 2012) and that data should
    be delivered to cloud services providing OGC standardized interfaces and formats
    for the data consumers. Compatibility with existing farming equipment is important
    to improve the adoption rate of precision agriculture (Aubert et al., 2012), with
    seamless integration of new equipment for improved precision agricultural practices.
    An important benefit of applying the standardized formats and interfaces is the
    possibility for employing a highly modular service oriented architecture. This
    calls for a web services solution, where services can be added on top of the existing
    system and third-party vendors can contribute in an ecosystem approach. IoT is
    emerging at an immense pace, and sensor devices can be connected following OGC
    standards, namely the Sensor Web Enablement (SWE) initiative (Chen et al., 2015).
    Sensors such as weather stations and temperature sensors are already seen today,
    and they should be complemented by machine measurement data. This is required
    for future needs in fleet management and automated agricultural machinery. Cloud
    computing provides a large range of benefits, such as improved processing power,
    security, storage, and backup. The devices in the field should be terminals connecting
    to the cloud, such that the powerful server hardware can be utilized (Steinberger
    et al., 2009). This also improves possibilities for scalability significantly.
    Low cost is of significant importance (Murakami et al., 2007, Pierpaoli et al.,
    2013) and by employing open source software and open data, the price of the infrastructure
    can be minimized. Finally, the immediate benefits of employing precision agriculture
    should be clear to the farmer (Fountas et al., 2015). The requirements and needs
    for a geospatial data infrastructure for precision agriculture have been generalized
    to the following principles. Interoperability must be addressed and is advised
    to conform to the defined OGC standards. Modularity should be pursued, much like
    a software ecosystem, to avoid dependency on a whole system to engage with precision
    agriculture. The data pipeline should be transparent to the farmer and the raw
    data should be accessible to agronomists, scientists, and third-party vendors.
    Heterogeneous data sources should be combined in a seamless manner such that real-time
    sensor data can be combined with e.g. satellite imagery. Cloud computing with
    web based services should form the basis of the infrastructure, hence improving
    the possibilities for scalability, storage, and processing. Ease of use must be
    considered and non-technical users must be able to use the infrastructure through
    a simple user interface. Open data, software, and hardware should be prioritized
    to reduce price, minimize proprietary integrations, and to ease development for
    third-party vendors. 4. Infrastructure design and implementation The main focus
    in the design of the data infrastructure was to alleviate the current issues with
    interoperability, ease of use, modularity, streaming data, and cost. To meet the
    requirements stated in the preceding section, it was chosen that the geospatial
    data infrastructure should be a cloud-based solution, employing web services based
    on OGC standards. Furthermore, it should be based on open source software, to
    minimize cost. OGC provides open standardized formats and interfaces for geospatial
    data storage and communication, which is suitable for use in precision agriculture
    (Nash et al., 2009, Nikkilä et al., 2010). Of particular interest are: The Web
    Map Service (WMS), Web Coverage Service (WCS), Web Feature Service (WFS), and
    Web Processing Service (WPS). WMS is a protocol for serving maps over the Internet
    in a compressed format, such as Portable Network Graphics (PNG). The client requests
    a map within a certain geospatial area, e.g., a bounding box covering Denmark,
    and the server will respond with PNG images of a predefined size (referred to
    as tiles) such that it fills the requested bounding box. If the raw uncompressed
    pixel values are required, the WCS can be used in a similar way as WMS. However,
    it requires increased bandwidth due to the uncompressed data. WFS is used for
    requesting raw vector data such as a field polygon. If the raw vector data are
    not required, WMS can also be used to request a compressed image showing the drawn
    vector data. WPS can be used by the client to request the output of a process,
    such that the data are processed on the server, and the result is delivered to
    the client. This eases the implementation of applications based on geospatial
    calculations, as calculations can be defined in a standardized manner and processed
    in the cloud, rather than on the terminal device. Finally, OGC provides standards
    and formats for the SWE which is a set of standards enabling the use of sensors
    in a seamless way. The possibilities within these standards are pursued to support
    streaming data from a variety of sensors, which can be combined with, e.g., satellite
    imagery. The data are queried using the Sensor Observation Service (SOS), which
    is a protocol for querying sensor using a spatial and temporal filter. Finally,
    the infrastructure should be designed for horizontal scalability and be supposed
    to run on low-cost hardware. A conceptual architecture of the data infrastructure
    is provided in Fig. 2. Five layers illustrate the data pipeline from source to
    consumer, including the interfaces and software packages. The following sections
    will elaborate on the respective layers and describe the interfaces between them.
    Software packages are briefly described in Table 1. It should be noted that GeoNode
    consists of several software packages, with GeoServer and PostGIS as core elements,
    being the data manager and database respectively. Download : Download high-res
    image (546KB) Download : Download full-size image Fig. 2. Conceptual architecture
    of the infrastructure. The arrows denote the data flow directions. Table 1. List
    of open software packages and libraries used for implementation. Name Ver. Description
    GDAL 1.10.1 Library for geospatial data processing GeoNode 2.4 Geospatial content
    management system GeoServer 2.7.4 Data manager and WPS server (part of GeoNode)
    httpd (Apache) 2.4.7 Web server used for serving user friendly web applications
    OpenLayers 2.13.1/ 3.19.0 JavaScript library for GIS data, used for creating customized
    web services OpenSensorHub 1.1.0 System for streaming GIS sensor data, based on
    OGC SWE PostGIS 2.1.2 Spatial database (part of GeoNode) QGIS 2.18.2 GIS desktop
    software be used to process geospatial data Ubuntu 14.04.4 Operating system on
    virtual machines Zabbix 2.4.8 Server monitoring software used on all servers in
    the infrastructure 4.1. Layer 1: Data sources This layer includes data from both
    open data sources and sensors. Sensor data should be using OGC SWE standardized
    interfaces, such as SOS, as it enables interoperability with other OGC standardized
    software packages. An Android phone was used to emulate a machine terminal, and
    to stream sensor data to the OpenSensorHub server using the Android OpenSensorHub
    app. The data included GPS position, accelerometer data, and a video feed from
    the phone camera. It should be noted that these data serve as examples of streaming
    data transfer, and can be easily extended to include machine specific data. However,
    to employ data from existing farming equipment, the data must first be converted
    to OGC compliant formats. On the GeoNode web interface, data can be uploaded manually
    by a user, with the restriction that vector data must be in a shapefile and raster
    data must be in GeoTIFF format. This results in the users having the GIS data
    in a standardized manner on a central platform. The field polygons provided by
    The Danish AgriFish Agency were manually retrieved. Satellite data were downloaded
    from ESA, and topographic maps were delivered by the Danish Geodata Agency. Much
    more open data is available however, and the data presented here acts as a showcase
    of the potential in combining open data sources for decision support. 4.2. Layer
    2: Pre-processing In this layer, customized software translates data into standardized
    formats. This can be important for, e.g., the Sentinel-2 satellite data from ESA,
    which is provided in the compressed Jpeg2000 format, but is desired in GeoTIFF.
    In this work, the GDAL library was used to translate Jpeg2000 to GeoTIFF. More
    advanced cases can be seen in the case of, e.g., Sentinel-1 radar satellite, where
    raw data must be processed using specific processing algorithms for satellite
    radar data. 4.3. Layer 3: Data management This layer revolves around GeoNode,
    an open source GIS platform. GeoNode consists of multiple software packages, where
    two have been highlighted in Fig. 2, namely GeoServer and PostGIS. GeoServer acts
    as a data manager which provides a connection between the data storage and the
    web applications. GeoServer supports several OGC protocols such as WMS, WCS, WFS,
    and WPS. The data storage is a combination of a file system and a PostGIS database
    (a GIS extension to PostgreSQL). GeoNode provides a web interface with a user-based
    system for uploading, downloading, and visualizing GIS data. OpenSensorHub is
    an open source software platform for geospatial sensors, used in the infrastructure
    for streaming data. The key feature of it is the usage of OGC standards from the
    Sensor Web Enablement (SWE) initiative. The benefit of GeoNode and OpenSensorHub
    being based on OGC standards becomes apparent when developing user-friendly web
    applications. As mentioned earlier, four use cases will be presented in the following
    section, with one demonstrating a user-friendly web application designed to showcase
    the capabilities of the platform. It employs OpenLayers, a JavaScript library
    for handling GIS data, to query data from GeoNode and OpenSensorHub, and combine
    them in a standardized manner directly in the web application. This eases the
    implementation process significantly. Vertical scalability is often provided in
    an easy manner by the cloud provider, and horizontal scalability can be achieved
    in the application layer by setting up different GeoServer instances, depending
    on the geolocation of the data. Automated analytics based on data from different
    GeoServer instances can then be designed to run on low-traffic times of the day.
    Large scale data processing with GIS data is often easily parallelizable, and
    it has been shown that large amounts of data can be divided and processed efficiently
    in a horizontally scalable cloud infrastructure (Jacobsen et al., 2017). 4.4.
    Layer 4: Processing Server-side processing can be queried by a client through
    WPS. This is done by using HTTP POST to send an XML document to the server (in
    this case GeoServer), with the XML document containing a description of the processing
    tasks required, alongside the data needed to be processed. All data does not necessarily
    need to be inside the XML document, but pointers to other data sources can be
    used, including data already on the server. The WPS processes are executed in
    GeoServer in this implementation, but other WPS servers can be setup if desired.
    If the processing demands are high, the WPS services can be implemented to use
    horizontal scalability in an elastic cloud setup (Tan et al., 2015), such that
    results are delivered within the desired time limit. 4.5. Layer 5: Consumers This
    layer includes the consumers of the data. A machine terminal can query data, such
    as an application map for site specific fertilization, which eases the process
    compared to the USB storage devices currently used for data transfer to the machinery.
    Furthermore, the combination of data can be viewed on the terminal during operation,
    such as an Normalized Difference Vegetation Index (NDVI) map of the field combined
    with the positions of other machines. A Nexus 5X Android smartphone has been used
    to emulate a machine terminal to showcase how using Android along with standardized
    interfaces can significantly reduce implementation time. Trimble have recently
    released Android based terminals (MMX-070 and TMX-2050 (Trimble)). The status
    of the fields can be investigated through a user-friendly web application on a
    workstation, tablet, or smartphone. This is of high value for the farmer, as it
    provides an overview of current status of his crops. In this paper, the Google
    Chrome web browser was used on PCs and the Firefox web browser was used on the
    Android device in use case 3. When the calculations require increased processing
    power, they can be implemented as WPS processes to be sent to layer 4 for server-side
    processing in the cloud. Finally, the raw data in the data platforms can be downloaded
    to perform further analysis locally on, e.g., the agronomists own workstation
    using QGIS. 4.6. Hardware Cloud services were implemented on a DELL PowerEdge
    R430 virtualization server with 8 cores, 32 GB RAM, and a 400 GB SSD. It was employing
    Virsh and Kernel-based Virtual Machine (KVM) to run separate virtual machines
    (VMs) for GeoNode development, OpenSensorHub, Zabbix monitoring and the user-friendly
    web application. All VMs were based on Ubuntu 14.04.4 LTS, and were monitored
    using Zabbix, providing measurements of, e.g., CPU load, RAM load, and up-time.
    A Nexus 5X Android phone was used to emulate a machine terminal on the client
    side. Fig. 3 and Table 2 provides an overview of the virtual machines running
    the infrastructure. It should be noted that the GeoNode production environment
    server (VM3) has been setup at the IT department of Aarhus University to run GeoNode
    with improved backup solutions and storage capabilities. Download : Download high-res
    image (282KB) Download : Download full-size image Fig. 3. Overview of the virtual
    machines used for implementation, including the software packages installed on
    them. Table 2. List of virtual machines used for the implementation. Name Description
    VM1 - Zabbix Server 1 vCPU, 1 GB RAM VM2 - GeoNode Dev. 6 vCPUs, 8 GB RAM VM3
    - GeoNode Prod. 8 vCPUs, 16 GB RAM VM4 - OpenSensorHub 1 vCPU, 1 GB RAM VM5 -
    User-friendly Web Appl. 1 vCPU, 1 GB RAM 5. Use cases Four use cases were implemented
    to validate the design and to demonstrate the capabilities of the infrastructure.
    The first use case shows how open data can be used to perform regional scale analysis
    of several thousands of fields, identifying fields where the benefit of precision
    agriculture is maximized. This exemplifies one of the possibilities of data-driven
    agriculture which have become feasible due to the recent advances in open data
    and open source software. Additionally, application maps based on the NDVI maps
    are calculated for all analyzed fields. The second use case investigates categorized
    fields on the web interface of GeoNode, where possible reasons for the intra-field
    variation are inspected. Specifically, it uses open data to investigate if improper
    drainage is a possible cause for high intra-field variations in specific fields.
    The third use case revolves around machine terminal communication with the cloud,
    with the download of an application map from use case 1 through a user-friendly
    web application. Furthermore, data is continuously being streamed from the machine
    to the cloud during operation. The fourth use case combines heterogeneous data
    sources, and provides a combined view of the machine and the open data in a user-friendly
    web application, showing live updates with the machine carrying out the operation.
    This is useful for visualization and it provides the basis for more advanced services
    such as route optimization. 5.1. Use case 1: Regional scale analysis The access
    to open satellite data, alongside with modern high bandwidth Internet connections
    and low price hardware, has significantly decreased the complexity of performing
    regional scale statistics on thousands of fields at a time. This type of analysis
    provides a range of benefits for the entire value chain, including agronomists,
    farmers, and contractors. The infrastructure provides support for performing such
    analysis. In this paper, an NDVI map was used for analysis, which can be used
    to estimate biomass by comparing the reflectance in the visible red and infrared
    bands, following the equation: (1) where NIR and VIR are the infrared and visible
    red bands respectively (corresponding to band 8 and 4 for the Sentinel-2 satellite).
    The mean NDVI value of the individual fields can be compared (Jeppesen et al.,
    2016), or the standard deviation of the NDVI values inside the fields can be compared
    to identify fields exhibiting the highest amount of intra-field variation (Jeppesen
    et al., 2017). Following Jeppesen et al. (2017), 48 149 winter wheat fields distributed
    across the approximately 33 000 km2 area of Funen and Jutland, Denmark, were used
    for the analysis in this paper. Fig. 4 shows the results of the analysis, where
    the standard deviation of the NDVI values within the fields have been compared
    and used to categorize fields according to heterogeneity. The outermost 20 m of
    the field polygons were not included in the analysis, to account for the geometric
    imprecision of the Sentinel-2 satellite. It should be noted that NDVI was used
    due to the widespread use of the vegetation index, however a wide range of vegetation
    indices can be calculated based on the multi-spectral satellite imagery. The statistical
    analysis described here was carried out manually in QGIS. However, the analysis
    can be automated to be performed by automated cloud services on, e.g., every update
    of the used datasets. The flexibility makes it feasible for agronomists and researchers
    to perform regional scale analysis designed on their specific needs, and to automate
    and publish such analyses as an add-on to the existing system. Download : Download
    high-res image (2MB) Download : Download full-size image Fig. 4. An analysis of
    48 149 winter wheat fields in Jutland and Funen, Denmark. Two histograms are showing
    (a) the mean NDVI values and (b) the NDVI standard deviation values. In (c), a
    map of Jutland and Funen are shown, with fields categorized according to their
    standard deviation values (red color denotes a field in the highest variation
    category). (For interpretation of the references to color in this figure legend,
    the reader is referred to the web version of this article.) Based on the NDVI
    map, application maps were calculated for all analyzed winter wheat fields, according
    to the following basic equation: (2) Fig. 5 shows an application map created by
    using the multi-spectral satellite imagery. Such application maps can be created
    for all fields on a national scale, and provided to the individual farmers at
    a low cost, due to the open satellite imagery and open source software. The application
    maps will be used in use case 3 for download directly to the emulated machine
    terminal. It should be noted that it is not in the scope of this paper to provide
    an advanced expression of an application map, but rather to showcase the communication
    and processing possibilities. Using another vegetation index and a different expression
    for the application map is straightforward in the infrastructure. Download : Download
    high-res image (499KB) Download : Download full-size image Fig. 5. A winter wheat
    field with (a) an NDVI map and (b) an application map based on the NDVI map (cf.
    Eq. (2)). 5.2. Use case 2: Drainage analysis Field polygons categorized according
    to intra-field variation were uploaded to GeoNode and used with other data layers
    to create maps providing useful information for visual analysis of the fields.
    The Danish Meteorological Institute has published a rain distribution map, based
    on a digital elevation model, which contains polygons showing where 55 mm of rain
    would end in the landscape. By combining the categorized field polygons, an NDVI
    map, and the rain distribution map, one becomes able to investigate if improper
    drainage might be the cause of the high intra-field variation in the high variation
    category of fields. In Fig. 6, screenshots from the online data platform are used
    for investigation fields on Funen, Denmark. It is seen how the poor performing
    patches matches well with the rain distribution map, indicating that the reason
    for the high intra-field variation is caused by improper drainage. The investigation
    presented in this use case is purely based on visual inspection. More advanced
    analysis methods can be used to extract more information from the various data
    sets. One interesting case could be an investigation as to why the high variation
    fields seen in Fig. 6a seem to be grouped. A simple reason for having many high
    variation fields within a specific region might simply be due to it being a hilly
    area, but other unknown factors might be influential. Hence, by employing advanced
    analysis methods, one might reveal unknown patterns, which we are only able to
    discover as a consequence of the analysis methods available combined with the
    open data. Download : Download high-res image (1MB) Download : Download full-size
    image Fig. 6. Visualization on the data platform of Fields on Funen, Denmark,
    showing (a) an overview of the entire island, (b) a high-variation field on an
    NDVI map, and (c) the same high variation field with an NDVI map and a rain distribution
    map. It should be emphasized that although the data in this use case is presented
    on the data platform, it would be straightforward to create a commercial product
    based on it by using the OpenLayers library to create a user-friendly web application.
    Examples of this will be presented in use case 3 and 4. 5.3. Use case 3: Machine
    terminal communication As earlier mentioned, interoperability is a major inhibitor
    of the adoption of precision agriculture. Seamless connections between machinery
    and the cloud is important, and it should be possible to visualize and download
    data directly from the cloud to the machinery. This use case has been implemented
    to show how standardized interfaces can provide seamless communication with a
    machine terminal, and how WPS can be used for processing data in the cloud, based
    on a request from the client. As previously mentioned, a Nexus 5X Android smartphone
    is used to emulate the machine terminal. It queries an application map using WPS,
    such that the output of a cloud-based calculation is delivered directly to the
    terminal. Furthermore, the Nexus 5X sends sensor data to OpenSensorHub during
    operation, to demonstrate how machine data such as GPS position and speed is available
    in a centralized system in use case 3. The WPS process is described in Fig. 7,
    and uses GeoServer for the WPS operations. The sequence diagram shows how the
    user loads the page, selects a field, and downloads an application map. The process
    of creating the application map is described in an XML document, which is sent
    to GeoServer using HTTP POST. As described in the XML document, GeoServer projects
    the polygon to the desired coordinate reference system (CRS), crops the application
    map layer according to the polygon, and finally transforms the raster data to
    point in JSON format and returns it to the user. The application map data is queried
    directly from GeoServer, hence the client merely points to the data in the XML
    document. The strength of chaining standardized processes becomes clear when implementing
    new services, as they can simply be defined in the XML document, rather than being
    hand made on the server. Download : Download high-res image (328KB) Download :
    Download full-size image Fig. 7. Sequence diagram of the OGC services used for
    downloading an application map directly to the machine terminal. If it is not
    desired to have the final application map in JSON format, a different process
    can simply be defined in the XML document, and GeoServer will base the process
    on the new information. Furthermore, new processes can be created in, e.g., Python,
    and uploaded to the server. For instance, this can be useful for defining advanced
    calculations, which, contrary to above, is desired to be controlled on the server.
    This can be useful if it is desired to have an application map service where an
    advanced expression of the application map are defined server side. When implemented
    in this manner, the expression for the application map calculation can be altered
    by changing the process in GeoServer, hence resulting in no need for the implementation
    on the client side to be updated. Hence, WPS can be used for designing processes
    both on client and server side. In Fig. 8, the Nexus 5X is shown with the web
    application active. The NDVI map, application maps, and field polygons are shown
    along with three buttons for control. Using the touch interface to select a field,
    the application can be downloaded and saved to the device using the lower button.
    While the terminal is active, it continuously sends data to OpenSensorHub. These
    data include GPS position and a camera feed, and will be used in use case 4. The
    requirements for interoperability of precision agriculture machinery can be greatly
    helped on its way using the system presented in this use case. The communication
    to the farming equipment (e.g., fertilizer spreader) is not considered in this
    paper, as it is dependent on the manufacturers. The emphasis here is on having
    the machine terminal as the end-point, such that data can be transferred to it
    in an automated and simple manner. Download : Download high-res image (177KB)
    Download : Download full-size image Fig. 8. The Nexus 5X Android device emulating
    a machine terminal accessing the data in the cloud using the FireFox browser.
    The NDVI map can give an overview of the field, while the application map can
    be used by the machine for the farming operation. 5.4. Use case 4: Online visualization
    Ease of use has a significant effect on the adoption rate of precision agriculture
    (Aubert et al., 2012), alongside a simple user interface (Murakami et al., 2007).
    In this use case, a user-friendly web application is used to provide a complete
    overview of the analytics, the application map, and the machine carrying out the
    practice. Again, this use case shows one possible cloud service, however, the
    modular approach makes further development of new services available. In Fig.
    9, a web browser displays the overview page, combining data from the various cloud
    services. The NDVI map is overlaid with the field polygons, and an Android Device
    (Nexus 5X in this paper) is monitored on the screen. Additionally, a simulated
    GPS and a simulated weather station have been included, and the distance between
    the simulated GPS and the Android device is calculated at every update (every
    second) in the web application on the end-device. This provides the foundation
    for more advanced analysis, such as route optimization algorithms, fleet management,
    and decision support processed on the server. Download : Download high-res image
    (706KB) Download : Download full-size image Fig. 9. User-friendly web application
    providing an overview of an Android device, a simulated GPS, and a simulated weather
    station, mapped with a Sentinel-2 NDVI map and the field polygons. The Android
    device is streaming a video feed, as seen in the lower right corner. This use
    case demonstrates how the modularity in front-end applications for precision agriculture
    is implemented as a part of the infrastructure. The screenshot in Fig. 9 is from
    a laptop, however, it is possible to access the page from other devices, such
    as a smartphone, tablet, or a machine terminal running a web browser. An important
    point to consider regarding this is the simple manner in which applications can
    be developed through existing JavaScript libraries, such as OpenLayers. The entire
    web application is based on 402 lines of code, including all HTML, CSS, and JavaScript
    code, with an example of the OpenLayers code provided in Listing 1. Listing 1
    Code snippet of OpenLayers query of Open Street Maps and NDVI map to the user-friendly
    web application. // Open Street Maps new ol.layer.Tile({  source: new ol.source.OSM()
    }),  // NDVI map new ol.layer.Tile({  source: new ol.source.TileWMS({   url: ‘http://futurecropping.eng.au.dk/geoserver/wms’,   params:
    {‘LAYERS’: ‘geonode:ndvi’, ‘TILED’: true},   serverType: ‘geoserver’  }) }), 6.
    Discussion The tremendous progress in open data and open source software in recent
    years shows promising potential for improving the adoption rate of precision agriculture.
    In Atzberger (2013), it is stated that access to data is too complicated in the
    agricultural sector, and that data should be easily visualized and downloaded.
    This obstacle can be overcome partly by employing standards from the GIS community.
    Open source software, such as GeoNode, can provide a platform for data-sharing
    and visualization along with user authentication through a web-interface. Furthermore,
    the support of standardized formats such as GeoTIFF for raster data and shape
    files for vector data is an important factor to ensure interoperability with other
    software packages. Along with the support for web services, such as WMS and WFS,
    modern software can be of great assistance when ensuring GIS data support for
    future FMISs. With the availability of high-resolution satellite imagery, the
    farmer can perform sub-field scale analysis to, e.g., classify patches exhibiting
    poor growth, or simply to assess the status of his crops. Even more important,
    the farmer is able to determine the spatial extent of the patches, allowing for
    a more precise economical assessment. This provides financial gains (Seelan et
    al., 2003). Historical data including field polygons and satellite imagery are
    easily accessible in standardized formats. Several analysis opportunities arise
    from the seamless integration of software tools, such as QGIS, and the task of
    analyzing thousands of fields simultaneously has been alleviated significantly.
    It should be noted that the NDVI maps and the statistics based upon them do incorporate
    uncertainty. Issues such as atmospheric disturbances are not considered, but ESA
    is publishing atmospherically corrected Sentinel-2 data of imagery acquired after
    28 May 2017 (Sentinel-2). The choice of using NDVI for this work was made because
    it is widely used, and other vegetation indices might prove to be superior (Frampton
    et al., 2013, Delegido et al., 2011). It is of high importance to involve the
    domain experts (e.g., farmers or agronomists) in the development of analysis tools,
    which is discussed in Oliver et al., 2010, Seelan et al., 2003. They found that
    the farmer often has knowledge of the locations of poor-performing patches, but
    does not have in-depth knowledge of the spatial extent or the underlying reasons.
    They note however, that the farmers often have sufficient knowledge to capture
    the broad perspective regarding poor-performance crop patches, and to take the
    necessary action to reduce financial losses. In Janssen et al. (2012), it is stated
    that it is a myth that the open data automatically benefits the user, and it is
    emphasized that value lies in the relevant information and knowledge which can
    be obtained from the data. Although this statement seems straightforward, it is
    often forgotten when developing actual products (Janssen et al., 2012). The open
    geospatial infrastructure presented in this paper follows a simple installation
    procedure, and provides possibilities of cloud computing for storage, sharing,
    processing, and visualization. Furthermore, it is useful in other domains, and
    as the amount of open data increases, the analysis capabilities become even more
    relevant. Through the use cases, the infrastructure showed potential regarding
    the requirements described for a precision agriculture infrastructure in Section
    3. The future perspectives of the infrastructure includes fleet management by
    employing the SWE initiative from OGC, and it includes more advanced analytics
    services based on the large amount of open data available. 7. Conclusion In this
    paper, a geospatial data infrastructure, based on open standards and open source
    software, was demonstrated for precision agriculture. The infrastructure was implemented
    using off-the-shelf hardware and software, and was complemented by open data.
    Four use cases were presented, showcasing how the infrastructure handled regional
    scale analysis of agricultural fields, sub-field scale analysis for precision
    agricultural practices, data exchange between the cloud and an Android-based terminal
    device, and finally providing user-friendly web interface for online visualizations.
    The slow adoption rate of precision agriculture has been found to be partially
    caused by issues regarding interoperability, compatibility, ease of use, scalability,
    and security. These issues have been greatly alleviated through the advances in
    standardized formats and interfaces by OGC, and the impressive advance in open
    source software. Finally, open data, such as the multi-spectral Sentinel-2 satellite
    imagery provides valuable information, ready to be applied. The use of open data,
    software, and hardware, along with the possibilities for modularity ensures a
    low cost, both for developers and consumers. Rather than previous complete complex
    systems, it is proposed that the precision agriculture systems should be based
    on a modular approach, starting with optimizing the use of the existing equipment,
    with clear benefits to the individual farmers. Acknowledgment This work was funded
    by Innovation Fund Denmark as part of the Future Cropping project (J. nr. 5107-00002B).
    Open data was collected from The Danish AgriFish Agency, The Danish GeoData Agency,
    The Danish Meteorological Institute, and the European Space Agency. References
    Atzberger, 2013 C. Atzberger Advances in remote sensing of agriculture: context
    description, existing operational monitoring systems and major information needs
    Rem. Sens., 5 (2) (2013), pp. 949-981 CrossRefView in ScopusGoogle Scholar Aubert
    et al., 2012 B.A. Aubert, A. Schroeder, J. Grimaudo IT as enabler of sustainable
    farming: an empirical analysis of farmers’ adoption decision of precision agriculture
    technology Decis. Support Syst., 54 (1) (2012), pp. 510-520, 10.1016/j.dss.2012.07.002
    View PDFView articleView in ScopusGoogle Scholar Basso et al., 2013 Basso, B.,
    Cammarano, D., Carfagna, E., 2013. Review of crop yield forecasting methods and
    early warning systems. In: First Meet. Sci. Advis. Comm. Glob. Strateg. to Improv.
    Agric. Rural Stat., p. 1–56. Google Scholar Bivand, 2011 Bivand, R., 2011. Geocomputation
    and open source software: components and software stacks. SSRN Electron. J. (November).
    https://doi.org/10.2139/ssrn.1972280. Google Scholar Castro and Korte, 2015 Castro,
    D., Korte, T., 2015. Open Data in the G8: A Review of Progress on the Open Data
    Charter. Center for Data Innovation. Google Scholar Chen et al., 2015 N. Chen,
    X. Zhang, C. Wang Integrated open geospatial web service enabled cyber-physical
    information infrastructure for precision agriculture monitoring Comput. Electron.
    Agric., 111 (2015), pp. 78-91, 10.1016/j.compag.2014.12.009 View PDFView articleView
    in ScopusGoogle Scholar Delegido et al., 2011 J. Delegido, J. Verrelst, L. Alonso,
    J. Moreno Evaluation of sentinel-2 red-edge bands for empirical estimation of
    green LAI and chlorophyll content Sensors, 11 (7) (2011), pp. 7063-7081, 10.3390/s110707063
    View in ScopusGoogle Scholar Foley et al., 2011 J.A. Foley, N. Ramankutty, K.A.
    Brauman, E.S. Cassidy, J.S. Gerber, M. Johnston, N.D. Mueller, C.O. Connell, D.K.
    Ray, P.C. West, C. Balzer, E.M. Bennett, J. Sheehan, S. Siebert, S.R. Carpenter,
    J. Hill, C. Monfreda, S. Polasky, J. Rockstro, D. Tilman, D.P.M. Zaks Solutions
    for a cultivated planet Nature, 478 (7369) (2011), pp. 337-342, 10.1038/nature10452
    View in ScopusGoogle Scholar Fountas et al., 2005 S. Fountas, S. Blackmore, D.
    Ess, S. Hawkins, G. Blumhoff, J. Lowenberg-Deboer, C. Sorensen Farmer experience
    with precision agriculture in denmark and the us eastern corn belt Prec. Agric.,
    6 (2) (2005), pp. 121-141 CrossRefView in ScopusGoogle Scholar Fountas et al.,
    2015 S. Fountas, G. Carli, C. Sørensen, Z. Tsiropoulos, C. Cavalaris, A. Vatsanidou,
    B. Liakos, M. Canavari, J. Wiebensohn, B. Tisserye Farm management information
    systems: current situation and future perspectives Comput. Electron. Agric., 115
    (2015), pp. 40-50, 10.1016/j.compag.2015.05.011 View PDFView articleView in ScopusGoogle
    Scholar Frampton et al., 2013 W.J. Frampton, J. Dash, G. Watmough, E.J. Milton
    Evaluating the capabilities of Sentinel-2 for quantitative estimation of biophysical
    variables in vegetation ISPRS J. Photogramm. Rem. Sens., 82 (2013), pp. 83-92,
    10.1016/j.isprsjprs.2013.04.007 View PDFView articleView in ScopusGoogle Scholar
    Jacobsen et al., 2017 Jacobsen, R.H., Jeppesen, J.H., Laursen, K.F., Skovsgaard,
    J., Jensen, H.N., Toftegaard, T.S., 2017. A scalable cloud computing infrastructure
    for geospatial data analytics for change detection. In: 2017 Euromicro Conference
    on Digital System Design (DSD), 2017, pp. 403–410. https://doi.org/10.1109/DSD.2017.49.
    Google Scholar Janssen et al., 2012 M. Janssen, Y. Charalabidis, A. Zuiderwijk
    Benefits, adoption barriers and myths of open data and open government Inform.
    Syst. Manage., 29 (4) (2012), pp. 258-268, 10.1080/10580530.2012.716740 View in
    ScopusGoogle Scholar Jeppesen et al., 2016 Jeppesen, J.H., Jacobsen, R.H., Jørgensen,
    R.N., Toftegaard, T.S., 2016. Towards data-driven precision agriculture using
    open data and open source software. In: CIGR-AgEng Conference. http://conferences.au.dk/cigr-2016/full-papers/.
    Google Scholar Jeppesen et al., 2017 J.H. Jeppesen, R.H. Jacobsen, R.N. Jørgensen,
    A. Halberg, T.S. Toftegaard Identification of high-variation fields based on open
    satellite imagery Adv. Anim. Biosci., 8 (2) (2017), pp. 388-393, 10.1017/S2040470017000693
    View PDFView articleGoogle Scholar Landsat, 0000 Landsat, http://landsat.usgs.gov/Landsat_Project_Statistics.php
    (accessed 27-April-2016). Google Scholar Mulla, 2013 D.J. Mulla Twenty five years
    of remote sensing in precision agriculture: key advances and remaining knowledge
    gaps Biosyst. Eng., 114 (4) (2013), pp. 358-371 View PDFView articleView in ScopusGoogle
    Scholar Murakami et al., 2007 E. Murakami, A.M. Saraiva, L.C.M. Ribeiro Jr., C.E.
    Cugnasca, A.R. Hirakawa, P.L.P. Correa An infrastructure for the development of
    distributed service-oriented information systems for precision agriculture Comput.
    Electron. Agric., 58 (1) (2007), pp. 37-48, 10.1016/j.compag.2006.12.010 View
    PDFView articleView in ScopusGoogle Scholar Nash et al., 2009 E. Nash, P. Korduan,
    R. Bill Applications of open geospatial web services in precision agriculture:
    a review Prec. Agric., 10 (6) (2009), pp. 546-560, 10.1007/s11119-009-9134-0 View
    in ScopusGoogle Scholar Nikkilä et al., 2010 R. Nikkilä, I. Seilonen, K. Koskinen
    Software architecture for farm management information systems in precision agriculture
    Comput. Electron. Agric., 70 (2) (2010), pp. 328-336, 10.1016/j.compag.2009.08.013
    View PDFView articleView in ScopusGoogle Scholar Oliver et al., 2010 Y. Oliver,
    M. Robertson, M. Wong Integrating farmer knowledge, precision agriculture tools,
    and crop simulation modelling to evaluate management options for poor-performing
    patches in cropping fields Eur. J. Agron., 32 (1) (2010), pp. 40-50 View PDFView
    articleView in ScopusGoogle Scholar Pierpaoli et al., 2013 E. Pierpaoli, G. Carli,
    E. Pignatti, M. Canavari Drivers of precision agriculture technologies adoption:
    a literature review Proc. Technol., 8 (2013), pp. 61-69, 10.1016/j.protcy.2013.11.010
    View PDFView articleView in ScopusGoogle Scholar Rains and Thomas, 2009 G.C. Rains,
    D.L. Thomas Precision Farming: An Introduction University of Georiga (2009) Google
    Scholar Seelan et al., 2003 S.K. Seelan, S. Laguette, G.M. Casady, G.A. Seielstad
    Remote sensing applications for precision agriculture: a learning community approach
    Rem. Sens. Environ., 88 (1–2) (2003), pp. 157-169, 10.1016/j.rse.2003.04.007 View
    PDFView articleView in ScopusGoogle Scholar Sentinel2L2A, 0000 Sentinel-2, https://sentinel.esa.int/web/sentinel/missions/sentinel-2/news/-/article/pilot-production-of-sentinel-2-l2a-products-over-europe
    (accessed 09-May-2017). Google Scholar Steinberger et al., 2009 G. Steinberger,
    M. Rothmund, H. Auernhammer Mobile farm equipment as a data source in an agricultural
    service architecture Comput. Electron. Agric., 65 (2) (2009), pp. 238-246, 10.1016/j.compag.2008.10.005
    View PDFView articleView in ScopusGoogle Scholar Steiniger and Bocher, 2009 S.
    Steiniger, E. Bocher An overview on current free and open source desktop GIS developments
    Int. J. Geogr. Inform. Sci., 23 (10) (2009), pp. 1345-1370, 10.1080/13658810802634956
    View in ScopusGoogle Scholar Stuart et al., 2014 D. Stuart, R.L. Schewe, M. Mcdermott
    Land use policy reducing nitrogen fertilizer application as a climate change mitigation
    strategy: understanding farmer decision-making and potential barriers to change
    in the US Land Use Policy, 36 (2014), pp. 210-218, 10.1016/j.landusepol.2013.08.011
    View PDFView articleView in ScopusGoogle Scholar Tan et al., 2015 X. Tan, L. Di,
    M. Deng, J. Fu, G. Shao, M. Gao, Z. Sun, X. Ye, Z. Sha, B. Jin Building an elastic
    parallel OGC web processing service on a cloud-based cluster: a case study of
    remote sensing data processing service Sustainability (Switzerland), 7 (10) (2015),
    pp. 14245-14258, 10.3390/su71014245 View in ScopusGoogle Scholar Tilman et al.,
    2011 D. Tilman, C. Balzer, J. Hill, B.L. Befort Global food demand and the sustainable
    intensification of agriculture Proc. Nat. Acad. Sci., 108 (50) (2011), pp. 20260-20264
    CrossRefView in ScopusGoogle Scholar Trimble, 0000 Trimble, https://agriculture.trimble.com/precision-ag/products/displays/
    (accessed 25-June-2017). Google Scholar Vickery, 2011 G. Vickery Review of recent
    studies on psi re-use and related market developments Inform. Econ. (2011) Google
    Scholar Wulder et al., 2012 M.A. Wulder, J.G. Masek, W.B. Cohen, T.R. Loveland,
    C.E. Woodcock Opening the archive: how free data has enabled the science and monitoring
    promise of Landsat Rem. Sens. Environ., 122 (2012), pp. 2-10, 10.1016/j.rse.2012.01.010
    View PDFView articleView in ScopusGoogle Scholar Zaks and Kucharik, 2011 D.P.M.
    Zaks, C.J. Kucharik Data and monitoring needs for a more ecological agriculture
    Environ. Res. Lett., 6 (1) (2011), p. 014017, 10.1088/1748-9326/6/1/014017 View
    in ScopusGoogle Scholar Cited by (26) BIM compatibility and its differentiation
    with interoperability challenges as an innovation factor 2020, Automation in Construction
    Citation Excerpt : BIM uptake therefore remains slow, much to the frustration
    of industry and government policy makers. Scholars from different disciplines
    report that some reasons for the slow adoption rate of information systems such
    as BIM and graphic information systems (GIS) are associated to compatibility [22,23]
    and also interoperability with software packages required for different tasks
    [24]. At a technical level, interoperability refers to the ability of a technology
    to exchange information, communicate and cooperate with other systems without
    major modification of their structure. Show abstract Developing practical techniques
    for quantitative assessment of ecosystem services on farmland 2019, Ecological
    Indicators Citation Excerpt : Nevertheless, if such complexities could be encompassed
    within an application, then planning ecosystem service enhancements within a sophisticated
    GIS tool may be the more valuable approach. However, to date, the uptake of sophisticated
    decision support and GIS tools by land managers and farmers has been limited and
    with respect to GIS this is largely confined to precision farming applications
    rather than bespoke environmental planning and management (Aubert et al., 2012;
    Fountas et al., 2015; Jeppesen et al., 2018; Kaloxylos et al., 2012; Rose et al.,
    2016; Sørensen et al., 2010). When there are two or more approaches to assessing
    ecosystem services, although they may have different purposes and contexts it
    is important to have some understanding of any differences between them with respect
    to the results they provide. Show abstract Global Navigation Satellite Systems
    as State-of-the-Art Solutions in Precision Agriculture: A Review of Studies Indexed
    in the Web of Science 2023, Agriculture (Switzerland) Methodology for Creating
    a Geographic Information System for Transport Infrastructure Facilities 2023,
    International Journal of Technology Truth in a sea of data: adoption and use of
    data search tools among researchers and journalists 2023, Information Communication
    and Society Factors Influencing the Use of Geospatial Technology with LiDAR for
    Road Design: Case of Malaysia 2022, Sustainability (Switzerland) View all citing
    articles on Scopus View Abstract © 2017 Elsevier B.V. All rights reserved. Recommended
    articles Digitalization and agricultural transformation in developing countries:
    Empirical evidence from Tanzania agriculture sector Smart Agricultural Technology,
    Volume 7, 2024, Article 100379 Felician Andrew Kitole, …, Jeniffer Kasanda Sesabo
    View PDF Developing Faculty in Emerging Areas of Interdisciplinary Research The
    American Journal of Medicine, Volume 131, Issue 10, 2018, pp. 1257-1262 David
    L. Coleman, …, Patricia W. Finn View PDF Meta-inductive prediction based on Attractivity
    Weighting: Mathematical and empirical performance evaluation Journal of Mathematical
    Psychology, Volume 89, 2019, pp. 13-30 Paul D. Thorn, Gerhard Schurz View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 26 Captures Readers:
    147 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Open geospatial infrastructure for data management and analytics in interdisciplinary
    research
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
