- DOI: https://doi.org/10.1016/j.biosystemseng.2019.12.013
  analysis: '>'
  authors:
  - Andrés Villa‐Henriksen
  - Gareth Edwards
  - Liisa Pesonen
  - Ole Green
  - Claus Aage Grøn Sørensen
  citation_count: 204
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Keywords 1. Introduction 2. Review methodology 3. IoT implementation
    in arable farming 4. Current and potential applications 5. Challenges and solutions
    6. Conclusions and future perspectives Acknowledgements References Show full outline
    Cited by (222) Figures (5) Tables (2) Table 1 Table 2 Biosystems Engineering Volume
    191, March 2020, Pages 60-84 Review Internet of Things in arable farming: Implementation,
    applications, challenges and potential Author links open overlay panel Andrés
    Villa-Henriksen a b, Gareth T.C. Edwards b, Liisa A. Pesonen c, Ole Green b d,
    Claus Aage Grøn Sørensen a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.biosystemseng.2019.12.013
    Get rights and content Under a Creative Commons license open access Highlights
    • The role of Internet of Things in arable farming is reviewed. • Internet of
    Things is leading arable farming to become data-driven. • Implementation and application
    are described in depth. • Challenges, corresponding solutions and potentials are
    discussed thoroughly. The Internet of Things is allowing agriculture, here specifically
    arable farming, to become data-driven, leading to more timely and cost-effective
    production and management of farms, and at the same time reducing their environmental
    impact. This review is addressing an analytical survey of the current and potential
    application of Internet of Things in arable farming, where spatial data, highly
    varying environments, task diversity and mobile devices pose unique challenges
    to be overcome compared to other agricultural systems. The review contributes
    an overview of the state of the art of technologies deployed. It provides an outline
    of the current and potential applications, and discusses the challenges and possible
    solutions and implementations. Lastly, it presents some future directions for
    the Internet of Things in arable farming. Current issues such as smart phones,
    intelligent management of Wireless Sensor Networks, middleware platforms, integrated
    Farm Management Information Systems across the supply chain, or autonomous vehicles
    and robotics stand out because of their potential to lead arable farming to smart
    arable farming. During the implementation, different challenges are encountered,
    and here interoperability is a key major hurdle throughout all the layers in the
    architecture of an Internet of Things system, which can be addressed by shared
    standards and protocols. Challenges such as affordability, device power consumption,
    network latency, Big Data analysis, data privacy and security, among others, have
    been identified by the articles reviewed and are discussed in detail. Different
    solutions to all identified challenges are presented addressing technologies such
    as machine learning, middleware platforms, or intelligent data management. Previous
    article in issue Next article in issue Keywords Smart farmingInternet of thingsWireless
    sensor networkFarm management information systemBig dataMachine learning 1. Introduction
    The global population and its food consumption are growing alarmingly quickly,
    while climate change effects are simultaneously complicating the challenge of
    ensuring food security in a sustainable manner (Godfray et al., 2010, Tilman et
    al., 2011). Data-driven agriculture is one of the main strategies and concepts
    proposed to increase production efficiently while decreasing its environmental
    impact (Foley et al., 2011). Data-driven technologies in general are quickly advancing
    with the development of the Internet of Things (IoT), and may become an important
    part of the future of farming (Brewster et al., 2017, Jayaraman et al., 2016,
    Verdouw, 2016, Wolfert et al., 2017). Smart Farming, also called Agriculture 4.0
    or digital farming (CEMA, 2017), is developing beyond the modern concept of precision
    agriculture, which bases its management practices on spatial measurements largely
    thanks to Global Positioning System (GPS) signals. Smart farming bases its management
    tasks also on spatial data but is enhanced with context-awareness and is activated
    by real-time events, improving the performance of hitherto precision agriculture
    solutions (Sundmaeker et al., 2016, Wolfert et al., 2017). Additionally, Smart
    Farming usually incorporates intelligent services for applying and managing Information
    and Communication Technologies (ICT) in farming, and allows transverse integration
    throughout the whole agri-food chain in regards to food safety and traceability
    (Sundmaeker et al., 2016). IoT is therefore a key technology in smart farming
    since it ensures data flow between sensors and other devices, making it possible
    to add value to the obtained data by automatic processing, analysis and access,
    and this leads to more timely and cost-effective production and management effort
    on farms. Simultaneously, IoT enables the reduction of the inherent environmental
    impact by real-time reaction to alert events such as weed, pest or disease detection,
    weather or soil monitoring warnings, which allow for a reduction and adequate
    use of inputs such as agrochemicals or water. IoT eases documentation and supervision
    of different activities as well as the traceability of products, improving the
    environmental surveying and control in farms by the appropriate authorities. The
    IoT concept was introduced by Kevin Ashton in 1999 in relation to linking Radio-Frequency
    Identification (RFID) for supply chains to the internet (Ashton, 2009), but has
    no official definition. It implies, however, the connection of a network of “things”
    to or through the internet without direct human intervention. “Things” can be
    any object with sensors and/or actuators that is uniquely addressable, interconnected
    and accessible through the world-wide computer network, i.e. the Internet. The
    application of IoT in agriculture is advantageous because of the possibility to
    monitor and control many different parameters in an interoperable, scalable and
    open context with an increasing use of heterogeneous automated components (Kamilaris,
    Gao, Prenafeta-Boldu, & Ali, 2016), in addition to the inevitable requirement
    for traceability. As a result of IoT, agriculture is becoming data-driven, i.e.
    making informed real-time decisions for managing the farm, reducing uncertainties
    and inefficiencies, and as a consequence reducing its environmental impact. The
    application of IoT in agriculture, also called Ag-IoT (Zhai, 2017), AIoT (Zou
    & Quan, 2017), or IoF meaning Internet of Farming (Alahmadi, Alwajeeh, Mohanan,
    & Budiarto, 2017) or Internet of Food and Farm (Sundmaeker et al., 2016, Verdouw
    et al., 2017), has received exponentially increasing attention in the scientific
    community (Fig. 1). Even though the publications are mainly dominated by Asian
    scientists (Talavera et al., 2017, Verdouw, 2016), in Europe several large scale
    international pilot projects, such as IoF2020 (Sundmaeker et al., 2016, Verdouw
    et al., 2017), AIOTI (Pérez-Freire & Brillouet, 2015), SmartAgriFood (Kaloxylos
    et al., 2012), SMART AKIS (Djelveh & Bisevac, 2016), or more recently SmartAgriHubs
    (Chatzikostas et al., 2019), are aiming to implement IoT technologies in the agricultural
    industry in Europe. Similar projects elsewhere include the Accelerating Precision
    Agriculture to Decision Agriculture (P2D) project in Australia (Zhang, Baker,
    Jakku, & Llewellyn, 2017), which complement additional major investments with
    the aim to help farmers convert to smart farming (Higgins et al., 2017, Pham and
    Stack, 2018). Download : Download high-res image (95KB) Download : Download full-size
    image Fig. 1. Number of publications per year retrieved from SCOPUS with the following
    searching criteria: (Internet of things OR IoT) AND (agriculture OR farming).
    Several reviews have been done on IoT in agriculture in the relatively short time
    period in which publications about the subject have emerged (Ray, 2017, Stočes
    et al., 2016, Talavera et al., 2017, Tzounis et al., 2017, Verdouw, 2016). In
    addition, review papers have been published with a focus on specific subjects
    related to IoT applied in agriculture, such as Big Data (Kamilaris et al., 2017,
    Wolfert et al., 2017), modelling (O''Grady & O''Hare, 2017), Wireless Sensor Networks
    (WSN) (Jawad, Nordin, Gharghan, Jawad, & Ismail, 2017), food supply chain (Ramundo,
    Taisch, & Terzi, 2016), Internet of Underground Things (Vuran, Salam, Wong, &
    Irmak, 2018), chemical wireless sensors (Kassal, Steinberg, & Murkovi, 2018),
    or Farm Management Information Systems (FMIS) (Fountas, Sørensen et al., 2015;
    Kaloxylos et al., 2012). However, to the authors'' knowledge, no existing review
    has focused on arable farming, which has specific characteristics and challenges
    that differ from those in a controlled environment, i.e. greenhouses, or permanent
    crops such as fruit orchards. Arable farming poses particular challenges due to:
    • much larger farm sizes, which affect the design of the sensor networks, the
    data processing, analysis and extrapolation of limited stationary sensor data,
    and the consequent decision making with regards to actuators, vehicle logistics,
    etc.; • the larger farm sizes also imply that spatial data has a central role
    in arable farming, affecting the data processing, decision making and precision
    machinery employed to address in-field variability not at plant level as in most
    permanent crops, but at subfield level with automatic recognition and actuation
    (Zude-Sasse, Fountas, Gemtos, & Abu-Khalaf, 2016); • greater use of mobile sensors
    and other devices on vehicles, which have specific challenges. While other cropping
    systems may also use sensors and devices on operating machinery, arable farming
    often requires a fleet of vehicles to operate in a co-ordinated fashion. This
    creates issues particularly regarding network infrastructure (Martínez, Pastor,
    Álvarez, & Iborra, 2016), e.g. connectivity to the cloud of moving things that
    rely mainly on mobile networks, or vehicle to implement communication, which implies
    real-time interoperability between machines and devices from different manufacturers
    (Peets, Mouazen, Blackburn, Kuang, & Wiebensohn, 2012); • larger amounts of heterogeneous
    spatial data generated at different rates and from very disparate sources: stationary
    sensors, moving vehicles and implements, satellites, data from web services, etc.,
    which need to be intelligently integrated; • highly varying and uncertain environmental
    conditions, as annual crops are more susceptible to weather changes and other
    external factors than permanent crops, which are more resilient mainly due to
    their deeper roots (Zude-Sasse et al., 2016), or crops in controlled environments.
    This obligates the IoT system to handle both spatial and temporal data, increasing
    the complexity of the data processing as well as the decisions based on the data
    collected. • more diverse types of field tasks per growing season in arable farming,
    from soil preparation and crop establishment, through highly varying plant nursing
    tasks, to coordinated harvest, which increase the complexity and also the risks.
    The IoT in agriculture is a fast-developing field, which can make reviews obsolete
    quickly. This challenge can be overcome by focussing a critical view on the general
    principles, main application areas and identify the limitations and challenges.
    Summarising, the aim of the paper is to provide an up to date novel analytical
    review of the role of IoT in arable farming, with the following specific objectives:
    • Provide an overview of the current situation of IoT technologies deployed in
    arable farming. Focussing on the current use of communication technologies and
    protocols, the generation and analysis of data, and IoT architectures. • Outline
    the different applications and capabilities of IoT in arable farming. • Investigate
    the main challenges encountered by IoT enabling technologies applied to arable
    farming. • Present key potential fields of application where IoT could be employed,
    as well as future directions of the current trends. The remaining part of this
    paper is structured as follows: Section 2 describes the methodology used in this
    review paper. Section 3 provides an overview of the state of the art of IoT technologies
    used in arable farming; Section 4 presents an outline of the current and potential
    IoT-based applications in arable farming; Section 5 discusses the challenges and
    solutions found in its implementation; and lastly, the review closes with Section
    6 in which future directions are summarised. 2. Review methodology In order to
    address the specific objectives identified above, the literature listing from
    the SCOPUS database of the last 11 years has been reviewed. More precisely, the
    timeframe investigated was from 1 January 2008 to 31 December 2018, selected as
    the whole period in which any literature about the subject turned up in the studied
    database. SCOPUS was selected as the primary literature source as it is a key
    peer-reviewed research literature database. The specific keywords used in the
    search criteria where: (Internet of Things OR IoT) AND (agriculture OR farming).
    To ease the searching process, the keywords needed to be present in at least the
    title, abstract, highlights or keywords. Additionally, the articles had to be
    published in English. Articles concerning greenhouse, livestock or permanent crops
    were excluded from the survey, as were supply chain related articles. However,
    issues concerning traceability at farm level were included. The survey was performed
    in a systematic manner following three steps (see Fig. 2): • Firstly, a list of
    1193 articles meeting the search criteria mentioned above was retrieved from the
    database. • In the second step, by reading the titles, any article that was clearly
    not related to arable farming was excluded, leaving a list of 293 articles. •
    In the last step, a second screening was made by reading the abstracts, where
    articles outside the focus of this review were omitted. After this step, 167 articles
    were studied in detail, from which 69 articles were considered relevant, 27 as
    partially relevant, while the rest were considered of little relevance. Relevance
    concerned mainly the connection of the article to the subject studied. The content
    of a relevant article directly addresses the application of an IoT technology
    in an arable farming scenario. A partially relevant article studies a certain
    IoT technology in agriculture in a broader sense. In the distinction made regarding
    little relevant articles included off-topic, lack of novelty, as well as non-peer-reviewed
    articles that lacked scientific rigour, e.g. ambiguous information or absence
    of materials or methods description. Download : Download high-res image (208KB)
    Download : Download full-size image Fig. 2. Reviewing procedure tree diagram.
    The final 167 articles studied included: 77 journal papers, 88 conference papers
    and 4 book chapters, of which 19 were review papers. The final list of articles
    was complemented with other publications that expanded on some of the IoT related
    subjects and technologies mentioned in the studied articles, and did not contain
    the specified keywords. These were found by a targeted search for specific subjects.
    Lastly, in each article from the final list a special focus was made on the IoT
    technologies employed, the applications, the challenges encountered and, finally,
    on potential future perspectives. 3. IoT implementation in arable farming IoT
    has recently been gaining momentum in the farming industry as it can fulfil the
    urgent necessity for interoperability across brands, scalability and traceability
    (Kamilaris et al., 2016). Different technologies are implemented as IoT is still
    evolving, adapting to a great diversity of uses. To cover the range of technologies,
    protocols, standards, etc. employed, this review is addressing the layers in the
    IoT architecture. Three layers normally describe the architecture of the IoT in
    the literature reviewed (Ferrández-Pastor et al., 2018, Khattab et al., 2016,
    Köksal and Tekinerdogan, 2018, Na and Isaac, 2016, Tzounis et al., 2017, Verdouw,
    2016), though some authors divide it into more layers (Ferrández-Pastor et al.,
    2016, Ramundo et al., 2016, Ray, 2017, Talavera et al., 2017, Wang et al., 2014),
    depending on their definitions. More than three layers can especially be relevant
    in IoT systems with edge or fog computing, where an edge/fog computing layer can
    be considered in between the device and network layers (Ferrández-Pastor et al.,
    2016). Even though the naming of the layers also varies depending on the author,
    there is nonetheless a general trend to divide the layers into device, network
    and application layers (Fig. 3). Thus, this has been the adapted structure in
    this review. The device layer consists of the physical objects (things) that are
    capable of automatic identification, sensing or actuation, and connection to the
    internet. The network layer communicates the data to a gateway (or proxy server)
    to the internet (cloud) by the use of communication protocols. And the application
    layer typically stores and facilitates access for the end-user to the processed/analysed
    information. Download : Download high-res image (222KB) Download : Download full-size
    image Fig. 3. IoT architecture represented by device, network and application
    layer, in which the middleware platform is not always present. The collected data
    experience diverse stages during their transition from sensors to cloud, interfaces,
    and occasionally actuators, and these stages have considerable influence on the
    technologies applied in an IoT context. Six main stages regarding data flow have
    been identified in the literature reviewed: sensing/perception, communication/transport/transfer,
    storage, processing, analytics, and actuation and display (Fig. 4). The order
    of the stages is different depending on the IoT setup employed and the computing
    techniques used, e.g. fog and edge computing processes the data before communicating
    it to the cloud, an example of its application in precision farming is given by
    Ferrández-Pastor et al. (2016); while cloud computing processes the data in the
    cloud, examples of this are given by Hernandez-Rojas, Mazon-Olivo, Novillo-Vicuña,
    and Belduma-Vacacela (2018) and Na and Isaac (2016). Nonetheless, sensing/perception
    is normally the first stage, where data are captured by sensors, then the data
    can follow different paths and does not necessarily go through all the steps listed.
    In summary, IoT data is identified to be gathered or generated through three main
    processes: machine generated, which come from sensing devices; process-mediated,
    i.e. commercial data coming from business processes; and human-sourced, recorded
    by humans and digitalised later on (Balducci, Impedovo, Informatica, & Moro, 2018).
    These different sources have an influence on how to process, analyse and use the
    data in IoT solutions, and this needs to be taken into account in the overall
    data acquisition planning process. Download : Download high-res image (171KB)
    Download : Download full-size image Fig. 4. Different agricultural data flows
    in arable farming. 3.1. Device layer As mentioned above, the device layer consists
    of the physical objects (things) that are capable of automatic identification,
    sensing or actuating, and providing connection to the internet. Sensor devices
    measure and collect one or more parameters automatically and transmit the data
    wirelessly to the cloud. And, when the devices become actuators, they generally,
    in turn, receive data from the cloud in order to activate or deactivate some mechanical
    component, e.g. a valve in an irrigation system. The device layer is also often
    called perception layer (Tzounis et al., 2017, Zou and Quan, 2017), sensing layer
    (Na and Isaac, 2016, Wang et al., 2014), or physical layer (Ramundo et al., 2016,
    Talavera et al., 2017). The devices are constituted of a transceiver, a microcontroller,
    an interfacing circuit and one or more sensors and/or actuators. The sensor measures
    a physical parameter, e.g. air temperature that is interpreted and transformed
    into an equivalent analogue signal, i.e. electric voltage or current, which is
    then converted by the interfacing circuit, i.e. Analogue-to-Digital Converter
    (ADC), into a corresponding digital format. Afterwards, the microcontroller, sometimes
    also in the form of microprocessors or single-board computers (Talavera et al.,
    2017), collects the data in digital format from one or more sensors through the
    ADC, and sends them to the transceiver, i.e. a wireless communication module,
    which communicates the data to a gateway. A comparison of microcontrollers and
    single-board computers used in IoT in agriculture has been made by Ray (2017).
    In the case of edge computing, the microcontroller or single-board computer processes
    the data from one or more sensors before communicating them, with the intention
    of, for example, reducing the amount of data to be transferred to the cloud and
    accelerating the data processing (Ferrández-Pastor et al., 2016, Sundmaeker et
    al., 2016). In fog computing the data are processed in the local area network
    level, i.e. in a fog node or IoT gateway (Ahmed, Abdalla et al., 2018, Ahmed,
    De et al., 2018, Ferrández-Pastor et al., 2018). When employing an actuator, the
    signal is received by the transceiver, communicated to the microcontroller, where
    it is then converted to analogue signal by a Digital-to-Analogue Converter (DAC),
    i.e. the interfacing circuit, or to a digital signal by a Digital-to-Digital Converter,
    and finally interpreted by the actuator, which acts in accordance to the signal
    received. In arable farming, when agricultural machinery data are used, i.e. data
    from sensors and devices mounted on tractors or other agricultural machinery,
    the data in digital format is normally collected and accessible through the Controller
    Area Network (CAN) bus in the machine, although in some cases some data are accessible
    through other ports (Oksanen et al., 2016, Peets et al., 2012). Machine and operator
    performance information is accessible through the Machine and Implement Control
    System (MICS) of the machine, which can also be accessed through the CAN bus data.
    MICS data are used to allow machinery operators and farm managers to monitor and
    potentially improve the efficiency of their machines, by employing e.g. smart
    alerts or recommendation systems (Pfeiffer & Blank, 2015). Global Navigation Satellite
    System (GNSS) data, e.g. Real Time Kinematics GPS (RTK-GPS), are often also available
    through the CAN bus port, which allows, among others, vehicle monitoring and dynamic
    optimised route planning Edwards et al., 2017, Villa-Henriksen et al., 2018. Many
    different sensors and actuators are employed in arable farming. The type of device
    used depends on the purpose of the system in addition to the technologies implemented
    in the system. And the number of devices is steadily increasing. The number of
    IoT device installations in farms is expected to increase globally from 30 million
    installations in 2015 to 75 million in 2020. Furthermore, data points generated
    per day and farm are expected to increase from 190000 in 2014 to over half a million
    by 2020 (Meola, 2016). It was also estimated that by 2018 there would be 10 billion
    IoT devices employed in agriculture. However, the great amount of data generated
    is often unused or underutilised (Bennett, 2015), e.g. in countries like Denmark
    with a relative high ICT adoption in farms, in 2016 only 2–5% of farmers worked
    actively with the data generated (SEGES, 2016). Even if data usage is still relatively
    low, it is expected to increase rapidly (Bennett, 2015, Wolfert et al., 2017,
    World Bank, 2017) An overview about how they are implemented for different purposes
    is presented in the Applications section. 3.2. Network layer The network layer
    communicates the data initially to an intermediary platform and eventually to
    the internet (cloud), and from there to, for example, employed actuators. When
    the data are transferred to the intermediary platform, it typically uses wireless
    communication technologies, for instance RFID, WSN with Zigbee, LoRa (Long Range),
    etc., and more recently Near-Field Communication (NFC) (Kassal et al., 2018, Sundmaeker
    et al., 2016, Tzounis et al., 2017, Verdouw, 2016). The intermediary platform
    is normally an internet gateway located in the vicinity of the connected devices,
    also including sometimes a proxy server, where the data are collected and occasionally
    processed in order to send the information further to the end user through the
    internet by the use of e.g. MQTT standards, or HTML or XMPP protocols. The use
    of Android smart devices or other operating systems is also increasing in popularity
    among agricultural applications, as they can be employed as a gateway for 3G and
    4G networks, and they frequently include other wireless communication technologies,
    e.g. Bluetooth, Wi-Fi, GPRS and NFC. They also automatically conform to communication
    standards and protocols, in which way interoperability is increased (Balmos et
    al., 2016, Ferrández-Pastor et al., 2016, Gao and Yao, 2016, Hernandez-Rojas et
    al., 2018, Villa-Henriksen et al., 2018). In addition, Android and other smart
    devices can include GNSS and RGB camera sensors, and can relatively easily be
    programmed for computing data and displaying Graphical User Interface (GUI) applications
    being able to straightforwardly update the software if necessary. In that manner,
    Android and similar smart devices are represented in all three IoT layers, i.e.
    sensing in the device layer, node or gateway in the network layer, and computing
    data and displaying GUI in the application layer. Furthermore, the automatic software
    updating possibilities of smart devices allow remote installation of updates with
    new functionalities, bug fixes, etc. and easily improve the interoperability of
    the system (Ferrández-Pastor et al., 2016). Many different wireless technologies
    have been applied for diverse purposes in agriculture, depending on economic,
    accessibility and capability factors. Jawad et al., 2017, Ray, 2017 and Tzounis
    et al. (2017) have presented good overviews of the specifications of wireless
    communication technologies implemented in IoT in an agricultural context, which
    have been here collected in Table 1 and complemented with information from other
    relevant articles (Alahmadi et al., 2017, Elijah et al., 2018, Kassal et al.,
    2018, Sinha et al., 2017, Sundmaeker et al., 2016). The great variety of technologies,
    standards and frequency bands used exposes the relevant interoperability and application
    challenges found when applying IoT technologies. Potential communication standards
    for smart farming can be classified into short-range and long-range according
    to their communication distance, which determines their specific usability in
    different requirement settings. This is particularly the case in arable farming,
    where mobile network accessibility can be an issue in many rural areas, and where
    large farm sizes limit the use of some wireless technologies due to their reduced
    communication distance and due to the necessity to replace/recharge device batteries
    on nodes over large areas. These issues are addressed in the challenges section
    later. Table 1. Wireless communication technologies (adapted from Jawad et al.,
    2017, Ray, 2017 & Tzounis et al. (2017)). Technology Standard(s) Frequency Data
    rates Range Power ANT+ ANT + Alliance 2.4 GHz 1 Mb s−1 30–100 m 1 mW Cognitive
    Radio IEEE 802.22 WG 54–862 MHz 24 Mb s−1 100 km 1 W Bluetooth (2.0, 2.1, 3.0)
    Bluetooth, IEEE 802.15.1 2400–2483.5 MHz 1–24 Mb s−1 10–100 m 0.1–1 W BLE IoT
    Inter-connect 2400–2483.5 MHz 1 Mb s−1 10 m 10–500 mW EDGE 3GPP GSM 850/1900 MHz
    384 kb s−1 26 km/10 km 3 W/1 W GPRS 3GPP GSM 850/1900 MHz 171 kb s−1 25 km/10
    km 2 W/1 W HSDPA/HSUPA 3GPP 850/1700/1900 MHz 0.73–56 Mb s−1 27 km/10 km 4 W/1
    W ISM/SRD860 IEEE 802.11 433 MHz, 863–870 MHz 200 kb s−1 50 m–2 km Very low LoRaWAN
    LoRaWAN 868/900 MHz, various 0.3–50 kb s−1 2–15 km Very low LR-WPAN IEEE 802.15.4
    (ZigBee) 868/915 MHz, 2.4 GHz 40–250 kb s−1 10–20 m Low LTE 3GPP 700–2600 MHz
    0.1–1 Gb s−1 28 km/10 km 5 W/1 W NB-IoT 3GPP Rel.13 180 kHz DL: 234.7 kb s−1 DI:
    204.8 kb s−1 Using LTE/4G base stations Low NFC ISO/IEC 13157 13.56 MHz 424 kb
    s−1 0.1–0.2 m 1–2 mW RFID Many standards 13.56 MHz 423 kb s−1 1 m 1 mW SigFox
    SigFox 908.42 MHz 10–1000 b s−1 30–50 km N/A THREAD IEEE 802.15.4 2400–2483.5
    MHz 251 kb s−1 11 m 2 mW Weightless-N/W Weightless SIG 700/900 MHz 0.001–10 Mb
    s−1 5 km 40 mW/4 W WiFi IEEE 802.11 a/c/b/d/g/n 2.4, 3.6, 5, 60 GHz 1 Mb s−1–6.75
    Gb s−1 20–100 m 1 W WiMAX IEEE 802.16 2 GHz–66 GHz 1 Mb s−1–1 Gb s−1 (Fixed) 50–100
    Mb s−1 <50 km N/A ZigBee IEEE 802.15.4 2400–2483.5 MHz 250 kb s−1 10 m (100m)
    1 mW Z-Wave Z-Wave 908.42 MHz 100 kb s−1 30 m 1 mW 2G (GSM) GSM, CDMA 865 MHz,
    2.4 GHz 50–100 kb s−1 Mobile network area Medium 3G & 4G UMTS, CDMA2000 865 MHz,
    2.4 GHz 0.2–100 Mb s−1 Mobile network area Medium 5Ga 3GPP, ITU IMT-2020 0.6–6
    GHz, 26, 28, 38, 60 GHz 3.5–20 Gb s−1 (peak rates 10–100 Gb s−1) Mobile network
    area Medium 6LoWPAN IEEE 802.15.4 908.42 MHz or 2400e2483.5 MHz 250 kb s−1 100
    m 1 mW a Not yet publicly available. A WSN is formed by pervasive devices called
    motes or sensor nodes, which integrate sensors and actuators that communicate
    wirelessly forming a spatial network (Hernandez-Rojas et al., 2018, Jawad et al.,
    2017, Tzounis et al., 2017). In a WSN, base stations act as gateways forwarding
    the data to the cloud. Different communication technologies support different
    network node architectures, e.g. star, tree or mesh. Depending on the application,
    different wireless communication technologies are employed in a WSN as each has
    different node architecture possibilities, data rates, ranges, standards, among
    others, with the use of ZigBee, LoRa, Bluetooth/BLE, WiFi and SigFox being relatively
    common in agriculture. In arable farming, BLE has for example been employed for
    soil and air monitoring and irrigation control (Hernandez-Rojas et al., 2018);
    ZigBee was used in a WSN for monitoring soil conditions and actuating an irrigation
    system (Mafuta et al., 2012) and crop monitoring (Zhai, 2017); and LoRa for air
    and water temperature of rice paddy fields (Tanaka, 2018) and smart irrigation
    control (Zhao, Lin et al., 2018, Zhao, Lucani et al., 2018). In order to cover
    larger distances, GPRS is appropriate and has been used for irrigation control
    (López-Riquelme et al., 2017), and for remote maintenance of machinery (Miettinen,
    Oksanen, Suomi, & Visala, 2006). GPRS, or other technologies, such as LTE, or
    3G/4G, are also commonly used at the gateway to transmit data to the cloud. Regarding
    other less common communication technologies used in WSNs, RFID can be integrated
    into a WSN too by connecting the RFID tag readers to a radio-frequency transceiver
    (Costa et al., 2013). Passive and active RFID technologies are used to a great
    extent in agricultural research and industry (Ruiz-Garcia & Lunadei, 2011), especially
    for animal production (e.g. Kamilaris et al., 2016), as well as vegetable or fruit
    product traceability (e.g. Kodali, Jain, & Karagwal, 2017); however, in arable
    farming only few examples have been found: e.g. RFID tags used for irrigation
    scheduling (Vellidis, Tucker, Perry, Kvien, & Bednarz, 2008), for agrochemical
    traceability (Peets, Gasparin, Blackburn, & Godwin, 2009), for vehicle monitoring
    (Sjolander, Thomasson, Sui, & Ge, 2011), and even on a prototype for soil temperature
    monitoring (Hamrita & Hoffacker, 2005). Regarding NFC, no concrete examples of
    NFC used in arable farming have been found in the literature reviewed. Finally,
    the latest generation of mobile communications, i.e. 5G, has higher data rates,
    large coverage areas, higher peak throughput, and also improved flexibility, which
    can open new possibilities and may solve some of the challenges encountered by
    many IoT solutions (Alahmadi et al., 2017, Marsch et al., 2016). 5G allows new
    options for monitoring rural areas with no previous infrastructure for Internet
    connection (Faraci, Raciti, Rizzo, & Schembra, 2018). 5G can also improve vehicle-to-vehicle
    or vehicle-to-anything communication in e.g. logistics solutions, due to its low
    latency and new frequency bands (Marsch et al., 2016). A challenge for the 5G
    networks will be the great increase in devices to support once IoT becomes a standard
    solution not only in agriculture, but also in any sphere of everyday life. 3.3.
    Application layer The application layer is crucial in an IoT context as it is
    this layer that actually adds value to the sensed and communicated data through
    directly controlling devices, supporting farmers'' decision making, etc. In this
    layer, several important services occur such as data storage, data analytics,
    data access through an appropriate Application Programming Interface (API), as
    well as possibly a user interfaced software application. The layer may also include
    middleware platforms that aid handling the heterogeneous cloud data improving
    interoperability. Data storage can be cloud based, i.e. on multiple servers, or
    more local based, where data are stored in different types of databases, depending
    on the application and design. Even if relational databases, such as Structured
    Query Language (SQL) databases (Gao and Yao, 2016, Goap et al., 2018, Ray, 2017,
    Wang et al., 2014), MySQL (Kaloxylos et al., 2014), or PostgreSQL (Mazon-Olivo,
    Hernández-Rojas, Maza-Salinas, & Pan, 2018) are employed in some of the reported
    applications in the reviewed articles, non-relational databases, such as Not only
    SQL (NoSQL), or also SPARQL, a semantic query language based database, are gaining
    attention due to their flexibility and scalability, especially when dealing with
    Big Data. Their ability to store and manage large amounts of heterogeneous data
    makes them suitable in many IoT agricultural contexts (Huang and Zhang, 2017,
    Kamilaris et al., 2017). Examples of NoSQL employed in agriculture are Cassandra
    (Huang & Zhang, 2017), Dynamo (Xian, 2017), HBase (Ray, 2017, Wang et al., 2014)
    and MongoDB (Martínez et al., 2016). An example of SPARQL has been given by Jayaraman
    et al. (2016). Data analytics can be achieved by cloud computing, where computer
    resources are managed remotely to analyse data, often Big Data, or by distributed
    computing, e.g. edge and fog computing. Cloud computing has the advantage that
    it provides high quality services that allow independent execution of multiple
    applications as if they were isolated, even if they are on the same platform,
    e.g. in data centres, which is especially relevant when dealing with Big Data
    (Hernandez-Rojas et al., 2018, Martínez et al., 2016, Tzounis et al., 2017). However,
    cloud computing techniques mostly rely on general purpose cloud providers that
    do not comply with specific agricultural service requirements (López-Riquelme
    et al., 2017) and can experience latency issues, which are not acceptable in IoT
    solutions where monitoring, control and analysis require fast performance (Ferrández-Pastor
    et al., 2018). Examples of application of cloud computing related to arable farming
    are given by Khattab et al., 2016, Na and Isaac, 2016 and López-Riquelme et al.
    (2017). Khattab et al. (2016) present an IoT architecture with a cloud-based back-end
    where weather and soil data are processed and analysed for automatic activation
    of irrigation and spraying actions. Na and Isaac (2016) describe a human-centric
    IoT architecture with a list of cloud services, such as language translation,
    data simplification or updated market price information. And López-Riquelme et
    al. (2017) use FIWARE components for a cloud service for smart irrigation tasks,
    focussing on the benefits of using FIWARE as cloud provider. Regarding Big Data
    analysis and Big Data in general in an agricultural context, Kamilaris et al.
    (2017) and Wolfert et al. (2017) respectively have performed exhaustive reviews
    on the subject. The use of IoT middleware platforms is gaining interest due to
    its potential for solving different challenges found in the application of IoT,
    especially interoperability. IoT middleware platforms try to simplify the complex
    communication through the cloud due to heterogeneity of devices, communications
    and networks, by using enablers like standardised APIs and protocols (Jayaraman
    et al., 2016, Martínez et al., 2016, O''Grady and O''Hare, 2017). Examples of
    these are HYDRA, UBIWARE, UBIROAD, UBIDOTS, SMEPP, SIXTH, Think Speak, SensorCloud,
    Amazon IoT and IBM IoT, with focus on context aware functionality; SOCRADES, GSN
    and SIRENA, with more focus on security and privacy; Aneka, WSO2, PubNub, SmartFarmNet
    and FIWARE, with a wider services-oriented approach; and projects like IoT-A,
    OpenIoT, or ArrowHead (Gill et al., 2017, Jayaraman et al., 2015, Jayaraman et
    al., 2016, Kamilaris et al., 2016, Martínez et al., 2016, Ray, 2017, Sundmaeker
    et al., 2016). Even if all these and more solutions are found in the IoT market,
    an intelligent middleware solution that addresses most issues observed in smart
    farming successfully is yet to be implemented (Jayaraman et al., 2016, Martínez
    et al., 2016, Sundmaeker et al., 2016). However, FIWARE (Ferreira et al., 2017,
    López-Riquelme et al., 2017, Martínez et al., 2016, Rodriguez et al., 2018) and
    SmartFarmNet (Ferrández-Pastor et al., 2018, Jayaraman et al., 2016) have been
    implemented effectively for precision and smart farming applications. In order
    to communicate data across platforms and IoT devices, ensuring interoperability,
    APIs are essential. These should adapt to evolving or new standards in order to
    ensure a longer life span, which may become a limitation if the APIs are not updated.
    It is through the APIs that data are made available for the IoT applications (e.g.
    Goap et al., 2018, Hernandez-Rojas et al., 2018). These services may include tracing,
    monitoring, event management, forecasting or optimisation for agricultural activities
    and products. These applications related to arable farming are described in the
    next section. 4. Current and potential applications Multiple applications can
    be derived from the implementation of IoT in arable farming. These applications
    can always be conceptualised into the three IoT layers described previously, and
    are not to be confused with the application layer. Elaborations of the reviewed
    articles show that the applications have been differentiated and categorised as
    follows: monitoring, documentation, forecasting and controlling. Monitoring refers
    to timely sensing of very diverse parameters and is mostly the initial point of
    entry for other applications. Documentation covers the storing of sampled data
    for later use in e.g. farm management or traceability of produce. Forecasting
    employs different sources of data through precisely designed analytic methods
    for predicting concrete events. And controlling is the result of active monitoring,
    where processed data are used to automatically activate and control actuators
    in a predefined manner. A summarising table collects all the IoT applications
    in arable farming described in this chapter (Table 2). Most IoT-based systems
    include at least two of these applications and isolated applications are seldom
    seen. In addition, special attention has been paid to FMIS and associated decision
    support to improve operations and production processes involving vehicle positioning
    analytics, optimisation and logistics, which are key elements in arable farming
    (Bochtis et al., 2011, Bochtis et al., 2014) and have consequently got a section
    of their own. Table 2. IoT applications in arable farming. Applications Examples
    References Monitoring Crop Leaf area index Bauer and Aschenbruck (2018) Plant
    height and leaf parameters Okayasu et al. (2017) Soil Moisture (Brinkhoff et al.,
    2017, Kodali and Sahu, 2016) Chemistry Kassal et al. (2018) Irrigation water pH
    and salinity Popović et al. (2017) Weather Air (T, atm and RH), rainfall, radiation,
    and wind speed and direction Yan et al. (2018) Remote sensing Estimating crop
    biomass and N content Näsi et al. (2018) Irrigation scheduling and plant disease
    detection Khanal et al. (2017) Machinery Vehicle position and yield data Oksanen
    et al. (2016) Machine performance (Miettinen et al., 2006, Pfeiffer and Blank,
    2015) Farm facilities Crop storage temperature and moisture levels (Green et al.,
    2009, Juul et al., 2015) Environment Nutrient leaching Burton et al. (2018) Contaminants
    Severino et al. (2018) Emissions Manap and Najib (2014) Documentation and traceability
    Machinery Field mapping Fountas, Sørensen et al., 2015 Yield mapping for fertilisation
    planning Lyle et al. (2014) Soil mapping for site-specific amendment measures
    (Godwin and Miller, 2003, McBratney et al., 2003) Remote sensing Mapping crop
    development (Khanal et al., 2017, Näsi et al., 2018, Viljanen et al., 2018) Mapping
    soil texture and residue coverage Khanal et al. (2017) Supply chain Agri-food
    traceability (Bochtis and Sørensen, 2014, Pesonen et al., 2014) Forecasting Machine
    learning models Forecasting max. and min. T at field level Aliev (2018) Estimating
    levels of P in the soil (Estrada-López et al., 2018) Forecasting soil moisture
    Goap et al. (2018) Plant disease forecasting (Aasha Nandhini et al., 2017, Jain
    et al., 2018) Predicting irrigation recommendations Goldstein et al. (2018) Frost
    prediction (Diedrichs et al., 2018, Moon et al., 2018) Forecast of harvest and
    fertilisation dates Viljanen et al. (2018) Classical models Soil moisture and
    contaminant dynamics forecasting for irrigation scheduling Severino et al. (2018)
    Fungal disease forecast in cereals (El Jarroudi et al., 2017, Mäyrä et al., 2018)
    Forecasting field trafficability and workability for field operations Edwards
    et al. (2016) DAISY soil-crop-atmosphere model Abrahamsen and Hansen (2000) RUSLE
    soil erosion model Renard et al. (1991) Controlling Irrigation Fully autonomous
    irrigation scheme Goap et al. (2018) Machinery Variable rate fertilisation Peets
    et al. (2012) Site-specific weed control Christensen et al. (2009) In-row cultivation
    in precision seeding Midtiby et al. (2018) Adaptive route planning in field operations
    (Edwards et al., 2017, Seyyedhasani and Dvorak, 2018, Villa-Henriksen et al.,
    2018) Autonomous vehicles & robots Operations of autonomous vehicles Bechar and
    Vigneault (2016) In-field obstacle detection Christiansen et al. (2016) 4.1. Monitoring
    Automatic monitoring is the obvious first step in IoT applied to agriculture.
    Strategically placed sensors can automatically sense and transmit data to the
    cloud for further documentation, forecasting or controlling applications. Sensors
    are used to monitor crop parameters such as leaf area index (e.g. Bauer & Aschenbruck,
    2018), plant height and leaf colour, size and shape (e.g. Okayasu et al., 2017);
    soil parameters such as soil moisture (e.g. Brinkhoff et al., 2017, Kodali and
    Sahu, 2016) or soil chemistry (e.g. Kassal et al., 2018); irrigation water parameters
    such as pH and salinity (e.g. Popović et al., 2017); or weather parameters such
    as air temperature, air pressure, air relative humidity, rainfall, radiation,
    wind speed and wind direction (e.g. Yan et al., 2018). In addition, remote sensing
    can also be employed, i.e. instead of sensors placed in the field they are installed
    on satellites or Unmanned Aerial Vehicles (UAV). However, these measurements mostly
    require some form of processing and interpretation as the values sampled are not
    directly related to the targeted parameters. An example of monitoring through
    remote sensing is the estimation of crop biomass and nitrogen content by the use
    of hyper- and multispectral images (Näsi et al., 2018), or the use of thermal
    remote sensing, which has been applied for e.g. irrigation scheduling or plant
    disease detection (Khanal, Fulton, & Shearer, 2017). Furthermore, agricultural
    machinery can also be remotely monitored, e.g. vehicle position and yield data
    (Oksanen et al., 2016), or machine performance (Miettinen et al., 2006). This
    is especially relevant with the increasing appearance of autonomous vehicles and
    robots in agriculture (Sundmaeker et al., 2016). Finally, at farm level the storage
    of crops can also be monitored to ensure the correct control of, for example,
    temperature and moisture, and avoid losses due to damage (Green et al., 2009,
    Juul et al., 2015). Environmental impact indicators should be integrated into
    farm monitoring applications, so that leaching (Burton, Dave, Fernandez, Jayachandran,
    & Bhansali, 2018), contaminants (Severino, D’Urso, Scarfato, & Toraldo, 2018)
    or emissions (Manap & Najib, 2014) are addressed too. 4.2. Documentation and traceability
    Collected operations and process data once stored can be used for documentation.
    Documentation is usually the natural application of monitored data but it must
    be noted that it can also include other types of sampled data, such as manually
    input or documentation of performed control actions (Sørensen, Pesonen, Bochtis,
    Vougioukas, & Suomi, 2011). The data are stored as raw data or as processed data
    at different levels. Documentation is essential for decision-making, controlling
    or analytics, and is an indispensable element in FMIS (Kaloxylos et al., 2014).
    Mapping is also a form of documentation where data are spatially projected onto
    a map. On-the-go sensors installed on vehicles and implements can be used for
    automated field mapping (Fountas, Sørensen et al., 2015), e.g. yield mapping used
    for later fertilisation planning (Lyle, Bryan, & Ostendorf, 2014), or soil mapping
    for site-specific amendment measures (Godwin and Miller, 2003, McBratney et al.,
    2003). Remote sensing can also be used for mapping crop development (Khanal et
    al., 2017, Näsi et al., 2018, Viljanen et al., 2018), or soil texture and residue
    coverage (Khanal et al., 2017). Remote sensing is becoming a popular tool for
    monitoring and mapping, but is yet to be proven feasible for all its potential
    applications. When documentation data sets extend beyond the farm level so that
    they can be traced throughout the supply chain, it is often referred as traceability
    and this notion is a key element in agri-food supply chain management as a measure
    to satisfy, for example, consumer demands (Bochtis and Sørensen, 2014, Pesonen
    et al., 2014). 4.3. Forecasting Forecasting is one of the fundamental functions
    for decision making that IoT brings to agriculture. Access to “real-time” data
    and historical data is used for forecasting events that require some form of action
    for managing successfully the crop or field operation. Therefore, both monitoring
    and documentation are important prerequisites for enabling forecasting. Forecasting
    is employed as preventive measures that require some action due to a predicted
    event, e.g. weeding, irrigating or harvesting. Machine learning and scientific
    modelling are examples of tools employed for forecasting. Different machine learning
    models have been employed, e.g. Artificial Neural Networks for forecasting maximum
    and minimum temperatures at field level (Aliev, 2018) or for estimating levels
    of phosphorus (P) in the soil (Estrada-López, Castillo-Atoche, Vázquez-castillo,
    & Sánchez-Sinencio, 2018); support vector regression method for forecasting soil
    moisture (Goap et al., 2018) or plant disease detection (Aasha Nandhini, Hemalatha,
    Radha, & Indumathi, 2017); gradient boosting for predicting irrigation recommendations
    (Goldstein, Fink, & Meitin, 2018); Bayesian networks and random forest for frost
    prediction (Diedrichs, Bromberg, Dujovne, Brun-laguna, & Watteyne, 2018); multiple
    linear regression and random forest in estimating yield and fertilisation requirements
    for forecasting harvest and fertilisation dates (Viljanen et al., 2018); or also
    for frost prediction using four different machine learning algorithms: decision
    tree, boosted tree, random forest, and regression (Moon, Kim, Zhang, & Woo, 2018).
    A rather different forecasting approach was employed by Jain, Sarangi, Bhatt,
    and Pappula (2018), where three different models, i.e. random forest, support
    vector machine and artificial neural network were used for forecasting diseases
    and at the same time for adaptive data collection from the network of nodes in
    order to reduce data traffic and energy consumption of the network. Summarising,
    IoT is allowing the sampling of large amounts of data, which can be employed as
    training data by the machine learning algorithms to build predictive mathematical
    models. Machine learning is opening new possibilities for effectively forecasting
    events in arable farming, which might change the very nature of decision making
    in agriculture. Scientific modelling has also been employed for forecasting in
    an IoT context, e.g. soil moisture dynamics and contaminant migration forecasting
    using soil sensor data and precipitation forecasts for irrigation scheduling (Severino
    et al., 2018); fungal disease forecast in winter wheat (El Jarroudi et al., 2017)
    and barley (Mäyrä, Ruusunen, Jalli, Jauhiainen, & Leiviskä, 2018); or forecasting
    field trafficability and workability for field operations (Edwards, White, Munkholm,
    Sørensen, & Lamandé, 2016). These modelling tools have an important role in agriculture
    as they are conscientiously developed and validated by the scientific community,
    and can forecast events for which machine learning models are very limited. There
    is also considerable potential for integrating existing and acknowledged modelling
    tools such as the soil-crop-atmosphere system model DAISY (Abrahamsen & Hansen,
    2000) or the soil erosion model RUSLE (Renard, Foster, Weesies, & Porter, 1991)
    into an IoT solution. Many of these solutions can make agriculture in general,
    and arable farming in particular, more resource efficient, e.g. through smart
    irrigation, as well as environmentally friendly, e.g. by smart pest and disease
    management. 4.4. Controlling In IoT, controlling is the result of active monitoring
    in an automated system, where the monitored variables are automatically adjusted
    to, for example, predefined thresholds. Forecasting can also play an important
    role in controlling. This is, for example, the case in smart irrigation systems,
    where irrigation is activated before drought damage in the crop is recognised,
    thus reducing yield losses. Goap et al. (2018) employed real-time sensing of soil
    moisture and soil temperature in combination with weather forecasts to control
    a fully autonomous irrigation scheme. Sensors on-the-go installed in tractors
    and implements can also be used to control e.g. variable rate fertilisation (Peets
    et al., 2012), site-specific weed control technologies (Christensen et al., 2009),
    or in-row cultivation controlled by plant patterns in precision seeding (Midtiby,
    Steen, & Green, 2018). Controlling is crucial in smart farming as it allows the
    automation of systems, especially considering the operations of autonomous vehicles
    and robots in the fields (Bechar & Vigneault, 2016), where site-specific actions
    and sensing-based safety systems will play an important role, e.g. for in-field
    obstacle detection for autonomous vehicles (Christiansen, Nielsen, Steen, Jørgensen,
    & Karstoft, 2016). 4.5. FMIS FMIS can be defined as systems that store and process
    farm-related collected data and provide decision supporting tools for farm management
    (Paraforos et al., 2016). FMIS assist farmers in the execution and documentation
    of farm activities, their evaluation and optimisation, as well as in strategic,
    tactical and operational planning of the farm operations (Kaloxylos et al., 2014).
    FMIS are consequently systems that can encapsulate all the applications previously
    described, and are vital elements in smart farm management. However, the adoption
    of FMIS targeted to the new IoT technologies is slow. A study published in 2015
    showed that most FMIS architectures used at that time had been designed in the
    1980s by researchers. This may explain why most FMIS currently have a structure
    and an architecture that is not suitable for distributed and service oriented
    decision support required for supporting precision agriculture and smart farming
    solutions, e.g. 75% of FMIS are still PC-based, and functionalities regarding
    traceability, quality assurance and agronomic best practice estimate are still
    missing or in their initial development stages in most commercial FMIS (Fountas,
    Sørensen et al., 2015). FMIS are key in smart farming and they should support
    automatic data acquisition, monitoring, documenting, planning and decision making
    (Köksal & Tekinerdogan, 2018). The latest research on IoT-based FMIS is expected
    to become part of the commercial FMIS available in the near future and will cover
    different needs across the supply chain and needs of IoT-based agriculture as
    a whole, as well as complying with standards ensuring interoperability between
    systems. In addition, decision support systems (DSS) are essential in dealing
    with Big Data and assisting the farm manager in management and decision making
    in tasks such as farm financial analysis, business processes or supply chain functions
    (Fountas, Carli et al., 2015, Kaloxylos et al., 2012). In order to design an up-to-date
    FMIS, it is beneficial to make preliminary use of dedicated system analysis methodologies,
    such as soft system methodologies (SSM), for identifying required changes and
    constraints and proposing solutions, followed by a later hard system modelling
    for designing the required specifications and components of the system (Sørensen
    et al., 2010, Fountas, Sørensen et al, 2015). It is also necessary to base FMIS
    on the cloud as it allows interconnection with diverse additional services (Kaloxylos
    et al., 2014). This development points out the inevitable need for standardisation
    of APIs in order to achieve interoperability among applications and services as
    part of the FMIS. New technologies such as distributed management systems can
    also enhance the capabilities of FMIS to a great extent (Fountas, Sørensen et
    al., 2015). Furthermore, the introduction of agricultural moving robots in the
    near future, as well as the wireless and automatic control and monitoring of agricultural
    machinery, also needs to be considered in the design and development of FMIS (Fountas,
    Sørensen et al, 2015, Paraforos et al., 2016). The future FMIS will also be capable
    of emulating farmers different work habits, as the system will automate certain
    tasks previously performed by farmers, which will require additional training
    (Sørensen et al., 2011). Consequently, it is important to provide supportive adoption
    and transition strategies for conventional farming to convert into smart farming
    (Köksal & Tekinerdogan, 2018). Examples of current FMIS employed in arable farming
    are offered by different technology providers: machine manufacturers, institutions
    or targeted private companies. Some manufacturers provide their own farm management
    tools, such as Agricultural Management Solutions (AMS) from John Deere, or Precision
    Land Management (PLM) from New Holland. Across brands some FMIS have a more local
    approach, e.g. the Dutch Akkerweb developed by Wageningen University and Research,
    while other commercial solutions have a global approach, e.g. 365FarmNet, Agworld
    or FarmWorks. 4.6. Vehicle navigation, optimisation and logistics Navigation systems
    are widely used in arable farming with the successful implementation of auto-steering
    systems in tractors and harvesters. However, IoT-based solutions are still in
    their early stages. IoT-based field operation monitoring (Oksanen et al., 2016)
    or monitoring of motor and machine performance (Pfeiffer & Blank, 2015) have been
    effectively implemented on harvesting operations. Commercial examples of agricultural
    telematics are Trimble''s Connected Farm, AGCO''s AgCommand, John Deer JDLink,
    New Holland''s PLM Connect or CLAAS’ telematics; however, they are all closed
    systems, which limits greatly the possibilities of the IoT technologies, especially
    interoperability (Oksanen, Piirainen, & Seilonen, 2015). Regarding optimised route
    planning, pre-planning harvest operations based on field data using simulation
    models can improve the harvest capacity of the vehicle or fleet saving working
    hours as well as fuel consumption (Bakhtiari et al., 2011, Bochtis and Sørensen,
    2009, Busato et al., 2007, Jensen et al., 2012, Zhou et al., 2014). However, field
    complexity and vehicle fleet size can become major hurdles for the algorithms
    employed (Seyyedhasani et al., 2019, Skou-Nielsen et al., 2017). The accessibility
    of field and harvest data can be eased by IoT technologies that allow automated
    data collection and sharing via common communication protocols and standards,
    in interoperable data formats, with compatible data model hierarchies; however,
    this is not always the case (Tzounis et al., 2017). IoT also allows cloud or fog
    computing to be employed to solve the high computational requirements of these
    route planning models (Seyyedhasani et al., 2019), even though the computing can
    also be achieved at the edge (Villa-Henriksen et al., 2018). Data communication
    costs, latency problems and unstable mobile connectivity may pose important challenges
    for route planning applications that rely only on cloud computing, making mobile
    edge computing more adequate and robust for these systems. Nevertheless, true
    IoT-based dynamic route planning is still in its infancy but gaining increasing
    attention, especially with the arrival of agricultural robots (Bechar and Vigneault,
    2016, Kayacan et al., 2015). Concerning its application, until recently, harvest
    logistics has employed field sampled data, i.e. boundaries, obstacles, gates,
    etc., to optimise the route of the vehicles involved in the operation statically
    (e.g. Bakhtiari et al., 2011, Jensen et al., 2012), where the complete routes
    of all vehicles are planned a priori. Nevertheless, these plans often do not comply
    with real-world challenges as they do not adapt to variating inputs, e.g. vehicle
    speed changes or in-field yield variations, or to unforeseen situations, e.g.
    machine breakdowns, eventual out of field delays, non-trafficable wet spots, undefined
    obstacles, etc. There is consequently the need to integrate route optimisation
    and operation logistics in IoT systems, where the optimisation can adapt dynamically
    to varying input and unforeseen events. It is only in the last few years that
    harvest logistics really started adapting dynamically to parameters such as vehicles''
    behaviour or in-field yield variations (Edwards et al., 2017, Seyyedhasani and
    Dvorak, 2018, Villa-Henriksen et al., 2018). Today, new possibilities for optimising
    infield operations arrive with the large amount of data available via internet,
    e.g. remote sensing data or other collected spatial data. These could be adaptive
    planning based on trafficability maps for reducing soil compaction or avoiding
    vehicles getting stuck in wet spots; or selective harvesting based on predicted
    grain quality maps, which is expected to increase the value of the crop harvested.
    5. Challenges and solutions When implementing IoT in arable farming, as well as
    in other contexts, diverse challenges limit or affect the performance of the systems
    employed. The challenges identified in the literature reviewed (Fig. 5) can indicate
    which areas need to be taken into account when designing an IoT-based system or
    point out areas that require further research. However, the results presented
    in the figure are indicative and do not necessarily describe the importance of
    the challenges included, especially because of the multiple applications and implementation
    designs that are conceivable in arable farming. Any of the challenges can become
    crucial in different setups, and are therefore described. In addition, all challenges
    can be related to or have consequences for other challenges. Download : Download
    high-res image (464KB) Download : Download full-size image Fig. 5. Percentage
    of challenges mentioned by the literature reviewed, divided by time periods and
    grouped in IoT layers. Interoperability, in general, is a major hurdle in the
    application of IoT. There are different dimensions related to it: technical, syntactical,
    semantic and organisational (Serrano et al., 2015, Veer and Wiles, 2008). Technical
    interoperability refers mostly to the communication protocols which affect the
    hardware and software components implemented. Syntactical interoperability is
    usually related to data formats, their syntax and encoding. Semantic interoperability
    concerns the interpretation of data contents, i.e. the meaning of the information
    exchanged. And organisational interoperability involves intercommunication of
    meaningful information across organisations regardless of information systems
    and infrastructures in a world-wide scale. As interoperability is such a generic
    term, in this section, technical interoperability has been addressed as part of
    the communication protocol challenge, syntactical and semantic interoperability
    have been included under the data heterogeneity challenge, and organisational
    interoperability have been described under the scalability challenge. 5.1. General
    challenges 5.1.1. Revenue and affordability Often the investment for establishing
    an IoT-based solution is high and as such challenging for small-scale farmers,
    while larger farms can more easily acquire IoT-based technologies when investing
    in new equipment (Brewster et al., 2017). The uncertainty regarding required costs,
    e.g. fuel or water allocations, and selling prices of the product give little
    margin for many farmers for investing in new technologies (Higgins et al., 2017).
    Trust plays an important role when investing in IoT systems, and relieving the
    perceived risks by demonstrating the revenues from their adoption is essential
    (Ferrández-Pastor et al., 2016, Jayashankar et al., 2018). For example, in Europe
    70% of all fertilising and spraying machinery is equipped with at least one precision
    agriculture technology, but only 25% of farmers actually use precision agriculture
    components on their farms (Say, Keskin, Sehri, & Sekerli, 2017). Technology providers
    need to increase the perceived value by demonstrating the financial return from
    IoT in order to diminish the perceived risk of adoption many farmers have. Technology
    providers need also to provide robust tools that are aligned with farmer needs
    and practices in order to gain acceptance and trust of IoT technologies. These
    technologies need to reduce the workload, assist in decision making and improve
    the efficiency of the targeted practice. Additionally, technology providers need
    to develop interoperable and flexible solutions that can easily be integrated
    and comply with accepted standards. Governments can also incentivise IoT adoption
    by policies and regulations, especially regarding documentation and traceability
    as ICT eases paperwork and bureaucracy. A reduction in the percentage of mentions
    regarding this challenge (see Fig. 5) could indicate that IoT is being more adopted
    in arable farming. In addition, IoT is likely to reshape the arable farming business.
    The implementation of monitoring and control of farming operations are generating
    substantial amounts of valuable data that are essential for the business of technology
    providers. The way farmers will dive into the data economy, i.e. connecting their
    data to work in vertical and horizontal networks beyond the farm, will have an
    effect on their business models, as well as on the business models of technology
    providers. The point of view of the farmer''s business regarding IoT has not been
    fully addressed in the literature reviewed and will require further investigation.
    5.1.2. Data heterogeneity The diverse data sources and sensor manufacturers imply
    use of different unit systems, data structures and nomenclatures in different
    data formats, which result in reduced syntactical and semantic interoperability
    among IoT environments. Sensor data can be encoded in binary, or represented in
    formats such as json, xml, text (e.g. csv), shapefile, or even proprietary formats.
    The heterogeneity of data types and formats can also affect the performance of
    a protocol employed for communicating the information. Furthermore, this challenge
    becomes critical in situations such as system integration or sharing data with
    other systems (e.g. FMIS), which could imply developing data conversion tools
    or even redesign of the IoT setup. The use of standardised formats can help with
    this challenge. Some attempts have been made at producing standards or standardised
    formats that cover the great heterogeneity of agricultural data, e.g. ISO 11783
    (ISOBUS) developed by the Agricultural Industry Electronics Foundation (AEF) for
    tractors and agricultural machinery, which is very relevant in arable farming
    (Fountas, Sørensen et al, 2015, Miettinen et al., 2006, Oksanen et al., 2015,
    Peets et al., 2012) or AgroXML developed by the Association for Technologies and
    Structures in Agriculture (KTBL) mainly for FMIS (Kaloxylos et al., 2014, Köksal
    and Tekinerdogan, 2018, O''Grady and O''Hare, 2017, Peets et al., 2012). These
    are now being integrated by the non-profit organisation AgGateway through the
    ADAPT framework and SPADE project for seamlessly communicating agricultural machinery
    data to FMIS, trying to enhance the existing standards and as a consequence improve
    interoperability (Brewster et al., 2017). A drawback of comprehensive data models,
    which try to describe all attributes of agricultural data, is that they become
    too cumbersome to handle in many applications. Finally, the use of middleware
    platforms applicable in smart farming, e.g. FIWARE or SmartFarmNet, can also reduce
    the problems caused by data heterogeneity (Ferrández-Pastor et al., 2018, Ferreira
    et al., 2017, O''Grady and O''Hare, 2017, Serrano et al., 2015). 5.1.3. Scalability
    and flexibility Organisational interoperability is a key element concerning scalability
    and flexibility (Serrano et al., 2015, Tzounis et al., 2017, Verdouw, 2016). Many
    of the systems described in the literature reviewed are centralised, closed, difficult
    to integrate in other existing platforms or difficult to implement on larger scales,
    different farming systems or geographical areas. They are also challenging to
    integrate beyond the farm level and across the supply chain in order to provide
    agri-food safety and traceability. The use of standardised dynamic protocols,
    such as SOAP protocol (cloud-based infrastructures with extensible ontologies
    that cover the broad and diverse agricultural production systems and environments),
    fast and reliable APIs (e.g. RESTful) and middleware platforms applicable for
    smart agriculture, such as FIWARE with its generic enablers, are tools that are
    employed to achieve organisational interoperability and make the system developed
    more scalable and flexible (Ferreira et al., 2017, López-Riquelme et al., 2017,
    O''Grady and O''Hare, 2017, Serrano et al., 2015). Service-Oriented Architectures
    (SOA) also bring possibilities to effectively integrate ecosystems through open
    and standardised interfaces, increasing organisational interoperability (Kaloxylos
    et al., 2014, Köksal and Tekinerdogan, 2018, Kruize et al., 2016, Pesonen et al.,
    2014, Sørensen and Bochtis, 2010). Scalability and flexibility may also refer
    to WSNs in the literature, to their capacity to support an increasing number of
    devices/nodes, with the network architecture, the gateway and protocols used being
    the main constrains (Elijah et al., 2018). This challenge has been considered
    under the network size challenge. 5.1.4. Robustness and fault tolerance Many different
    factors can affect the overall robustness and fault tolerance of a system. Robust
    wireless connectivity is an important limitation in many setups (Oksanen et al.,
    2016, Vuran et al., 2018). In the design of an IoT-based solution dealing with
    faults, errors and unforeseen events need to be taken into account in order to
    ensure the reliability of the system. Many of these issues are related to the
    other challenges presented here and can be handled at the device level, but also
    need to be thought of in the overall IoT system design (Ferreira et al., 2017,
    Ray, 2017). 5.1.5. Complexity The agricultural system is complex and can be challenging
    to work with. It is complex not only because of the multifaceted nature of the
    physical, chemical and/or biological processes in the soil-crop-air system, but
    also because of the technical complexity of hardware and software interacting
    with it. Depending on the novelty of the IoT technology implemented and the background
    of the developer and user, the systems can become more or less complex. For example,
    software and hardware incompatibilities can challenge its implementation and integration
    (Ferrández-Pastor et al., 2016), as well as many other challenges, e.g. the great
    field task diversity in arable farming, that can add complexity to the system.
    Technical knowledge can become a major hurdle for the implementation of IoT in
    farms, and it is therefore important that user-friendliness and plug-and-play
    basis have a high priority for the technology providers (Sundmaeker et al., 2016,
    Zou and Quan, 2017). Complexity should be an issue for the technology provider
    and not for the customer. In addition, the co-created development and implementation
    of IoT systems in agriculture by a multi-actor approach is needed to overcome
    the complexity at different levels of integrating IoT in agriculture. Good examples
    of this are the European Union supported research and development efforts through
    multi-actor large-scale pilot projects, such as IoF2020 (Sundmaeker et al., 2016,
    Verdouw et al., 2017), AIOTI (Pérez-Freire & Brillouet, 2015), SmartAgriFood (Kaloxylos
    et al., 2012), SMART AKIS (Djelveh & Bisevac, 2016), or more recently SmartAgriHubs
    (Chatzikostas et al., 2019). 5.1.6. Lack of products In the early stages of precision
    agriculture and IoT in agriculture, products that integrated agronomy and ICT
    engineering were lacking, which hindered their adoption (Ferrández-Pastor et al.,
    2016, Kitchen and Roger, 2007). The large scales and diversity of environments
    in arable farming can challenge the products used even more than in controlled
    environments, as they are to be modelled to describe larger areas, send information
    through larger distances and be exposed to harsher environments. Even if Figure
    5 shows lack of references in the last couple of years, it is still relevant for
    some applications, e.g. for in-situ real-time soil nutrient sensing is still a
    real challenge, especially regarding calibration (Bünemann et al., 2018, Marín-González
    et al., 2013). 5.2. Device layer challenges 5.2.1. Power consumption The use of
    wireless devices has major advantages over wired systems, as they are more economical
    to establish and can cover much wider areas. However, their power consumption,
    with limited battery life, is a major drawback of many wireless systems, and needs
    to be accounted for. This issue is so important that it is the main identified
    challenge in the literature reviewed (Fig. 5), especially for WSNs (Jawad et al.,
    2017, Tan and Panda, 2010). The large distances to cover in arable farming make
    wireless devices indispensable, and solutions to reduce their power consumption
    and/or extend their battery life are required. These solutions can include energy
    harvesting, low power consumption sensors and communication technologies or power
    efficient management. Energy harvesting techniques can include solar cells, micro
    wind turbines or other interesting solutions which have been well described by
    Tuna and Gungor (2016) and Jawad et al. (2017). The power consumption of the communication
    technologies and sensors employed are also to be considered in the design of the
    IoT solution as there are big differences between devices (Balmos et al., 2016,
    Hernandez-Rojas et al., 2018, Jawad et al., 2017). Choosing low power sensors
    and communication devices needs to be taken into account when designing the IoT
    system (Estrada-López et al., 2018). Low power wireless technologies, such as
    BLE, have low power consumption but also low communication range, while Wi-Fi
    has somewhat higher communication range, but much higher power consumption (Table
    1), however data rates and other parameters are important factors to consider
    too. ZigBee and LoRa have been identified as appropriate candidates for many farming
    applications (Jawad et al., 2017). Power efficient management techniques of WSNs
    include sleep/active schemes, e.g. duty-cycling algorithms (Ahmed, Abdalla et
    al., 2018, Ahmed, De et al., 2018, Alahmadi et al., 2017, Balmos et al., 2016,
    Dhall and Agrawal, 2018, Temprilho et al., 2018); data mitigation schemes, e.g.
    data aggregation (Abdel-basset, Shawky, & Eldrandaly, 2018) or data compression
    (Moon et al., 2018); energy-efficient routing schemes, e.g. mobile sinks by the
    use of UAVs (Bacco, Berton, Ferro et al., 2018, Bacco, Berton, Gotta et al., 2018,
    Uddin et al., 2018); and other combined solutions, e.g. LEACH, a cluster architecture
    with Time Division Multiple Access (TDMA) based MAC protocol and data aggregation
    scheme (Kamarudin, Ahmad, & Ndzi, 2016), or dynamic power management by combining
    sleep/active states with dynamic data rates schemes (Estrada-López et al., 2018).
    Jawad et al. (2017) have provided a good overview and description of WSN power
    efficient management techniques. Lastly, techniques such as edge computing may
    have higher power requirements on the device, making cloud computing more desirable
    if power consumption is a constraint in the projected IoT solution. On the other
    hand, mounting sensors and devices on agricultural vehicles and implements allows
    connection to the power supply of the vehicle and as a consequence eliminate power
    consumption as a limiting factor. The type of sensors that are mounted on vehicles
    and their implements is quite limited, being currently mainly camera-based (e.g.
    Midtiby et al., 2018, Steen et al., 2012). Nevertheless, there is for example
    potential in employing sensors on the coulters of seed-drills for mapping soil
    properties (Nielsen et al., 2017), or other on-the-go sensors for mapping soil
    or crop variations (Peets et al., 2012). 5.2.2. Harsh device environment The natural
    environment in which sensors and other devices are placed can greatly challenge
    their functionality and longevity. Harsh weather conditions, e.g. large temperature
    variations, intense rainfall or prolonged high humidity can cause water condensation
    inside devices and consequently provoke corrosion and short circuits (Bauer &
    Aschenbruck, 2018). Sensors and other devices situated close to the ground experience
    exposure to dust, mud, or even corrosive chemicals, e.g. agro-chemicals, which
    can seriously damage the performance of the device or cause its total failure
    (Aliev, 2018, Bauer and Aschenbruck, 2018). Underground chemical sensors are also
    exposed to soil chemical and biological processes that deteriorate the sensors
    and can mislead the measurements, requiring unfeasible maintenance and re-calibrations
    (Burton et al., 2018, Kassal et al., 2018). Choosing adequate casing that does
    not interfere with the functionality of the device and also tolerates the environment
    they are located in is essential in the design of the IoT system. Sensors are
    also developed for different conditions, and need to match the system''s minimum
    requirements. RFID tags have been reported to perform flawlessly under extreme
    conditions and environments (Costa et al., 2013, Ruiz-Garcia and Lunadei, 2011);
    however, RFID technology is quite limited in its applications in arable farming,
    and suitable sensors and communication devices are therefore primarily dependent
    on the application and design of the IoT system. 5.3. Network layer challenges
    5.3.1. Latency, throughput and rate The large amounts of data generated in IoT
    applications do not only cause problems regarding data storage or handling, but
    also latency problems that reduce the throughput of the network employed. In arable
    farming, latency problems can be of great importance in some IoT solutions, e.g.
    in WSNs where high latency implies higher power consumption of a node (López-Riquelme
    et al., 2017), or in dynamic optimised route planning in vehicle logistics, which
    requires rapid responses to deviations in the route plan (Villa-Henriksen et al.,
    2018). For reducing latency problems, fog and edge computing can be employed,
    as these computing techniques decrease latency and network congestion (Elijah
    et al., 2018, Ferrández-Pastor et al., 2018), e.g. data compression at the edge
    reduces the large volumes of data communicated through the network (Moon et al.,
    2018). In addition, the use of lightweight protocols can also reduce latency problems,
    e.g. LP4S for sensors (Hernández-rojas, Fernández-Caramés, Fraga-Lamas, & Escudero,
    2018), or MQTT messaging protocol, which has a faster throughput than HTTP and
    works well for bandwidth limited networks (Estrada-López et al., 2018). The communication
    rate is important to have in mind when planning the wireless communication technology
    to implement, e.g. 5G can handle high-rates, while SigFox or IEEE 802.15.4-based
    protocols are for low-rates (Bacco, Berton, Ferro et al., 2018, Bacco, Berton,
    Gotta et al., 2018, Jawad et al., 2017). The throughput of the network affects
    the communication rate, and the communication rate also influences the power consumption,
    which equally has to be carefully considered. Fast response to events is achieved
    by data processing techniques such as data merging (Tanaka, 2018), data compression
    (Zhao, Lin et al., 2018, Zhao, Lucani et al., 2018), or dynamic and complex event
    processing rules for conditioning input data and immediately acting accordingly
    (Mazon-Olivo et al., 2018). These processes can be on the cloud or at the edge,
    i.e. devices. Finally, test-bed analysis prior to implementation of the network
    can simulate communication rates and possible latency and throughput issues (Stewart,
    Stewart, & Kennedy, 2017). 5.3.2. Wireless link quality A low wireless link quality
    affects greatly the QoS of an IoT system as it ends in unreliable communication
    between nodes (Klaina, Alejos, Aghzout, & Falcone, 2018). This can be caused by
    multipath propagation (Ruiz-Garcia & Lunadei, 2011), background noise (Mazon-Olivo
    et al., 2018), routing problems, e.g. packet collision or limited band width (Jawad
    et al., 2017), or even by harsh environmental conditions, which affect the transceivers
    and the quality of the data transmitted (Elijah et al., 2018). Adequate design
    and testing of the network are crucial for avoiding or reducing this challenge.
    However, techniques such as channel access methods, e.g. TDMA, can improve the
    link quality by reducing packet collisions (Temprilho et al., 2018). Regarding
    testing, the calculation of signal strengths in real-time on the base station
    helps estimating the wireless link quality of a WSN when establishing the system
    (Klaina et al., 2018). Packet loss characterisation can also be used to assess
    the wireless link quality of a connection (Bacco, Berton, Ferro et al., 2018,
    Bacco, Berton, Gotta et al., 2018). Additionally, blind entity identification
    can also help estimating the wireless link quality of a network (Mukherjee, Misra,
    Raghuwanshi, & Mitra, 2018). 5.3.3. Communication range The different wireless
    communication technologies have very diverse ranges, which need to be accounted
    for when designing the IoT solution, together with other factors such as data
    rate, power consumption, communication protocols or costs (Table 1). In arable
    farming, due to the larger farm sizes and because of the employment of mobile
    sensors and devices on vehicles, this challenge becomes even more critical. Furthermore,
    relying on the approximate communication range of a wireless technology can be
    misleading, e.g. WiFi is often described to have 100 m range, but a test analysing
    the packet delivery ratio with respect to distance to gateway shows packet losses
    at ≥ 60 m (Giordano, Seitanidis, Ojo, Adami, & Vignoli, 2018), while in another
    test using WiField devices, 2.6 km range was claimed to be reached still having
    reliable internet connection (Brinkhoff et al., 2017). Testing the communication
    range is therefore important for some settings. In addition to the choice of wireless
    technology, network topology in WSNs, such as mesh topologies can also increase
    the communication range by using nodes to communicate with the central node (Ahmed,
    Abdalla et al., 2018, Ahmed, De et al., 2018). Reduced range due to obstacles
    or topography is addressed in the propagation losses challenge later. 5.3.4. Communication
    protocols Differences in communication protocols can cause technical interoperability
    issues, which can lead to connectivity and compatibility issues among the hardware
    and software employed (Stočes et al., 2016). Network protocols are separated into
    diverse layers forming a protocol stack, where tasks are divided into smaller
    steps (Suhonen, Kohvakka, Kaseva, Hämäläinen, & Hännikäinen, 2012). In the infrastructure
    layer, some wireless standards that define communication protocols are commonly
    used by different wireless technologies, e.g. IEEE 802.15.4, which is used by
    ZigBee or 6LowPAN among others, or 3GPP, which is used by GPRS, LTE or 5G among
    others (see Table 1). In the application layer, standards such as HTTP (Ahmed,
    Abdalla et al., 2018, Ahmed, De et al., 2018, Kaloxylos et al., 2014), MQTT (Ferrández-Pastor
    et al., 2016, Mazon-Olivo et al., 2018) or XMPP (Köksal & Tekinerdogan, 2018)
    are commonly used in IoT applications in arable farming. Adequate protocols are
    especially relevant and challenging in vehicle-to-vehicle communication, and crucial
    in arable farming. Different standards in different layers require careful planning
    of the whole IoT solution, as they are not always compatible and can also have
    an effect on the data formats used, or sensors and gateways employed (Hernandez-Rojas
    et al., 2018). Middleware platforms can ease the integration of diverse protocols
    and standards by offering enough abstraction levels so that this diversity is
    effectively managed (O''Grady and O''Hare, 2017, Tuna et al., 2017). Edge computing
    can also ease technical interoperability issues as a local computing layer is
    created to process data and create control rules before sending the data to the
    cloud (Ferrández-Pastor et al., 2016). 5.3.5. Network management Managing a WSN
    can imply battery change, software updates, calibration of sensors, replacement
    of devices and similar maintenance activities that can be very time-consuming.
    Smart mobile devices, e.g. smart phones, can make remote software updating possible,
    and can sometimes even be used for updating some other IoT devices (Ferrández-Pastor
    et al., 2016). Using energy efficient devices and communication techniques can
    also be employed to extend the battery life of devices (Jawad et al., 2017). Some
    sensors may require recalibrations with a certain periodicity, which has to be
    accounted for in the projected IoT solution (Kassal et al., 2018). Nonetheless,
    the management of the network is always to be considered when implementing IoT
    solutions in arable farming, where distances and number of devices/nodes can be
    vast. 5.3.6. Network size WSN configuration schemes have a maximum number of sensor
    nodes per gateway that the network can handle, i.e. the network size. According
    to the analysis of the reviewed literature, network size is being identified more
    often in the last two years (see Fig. 5), which seems to indicate new possibilities
    for exploiting the capabilities of WSNs. Network size depends on the wireless
    communication technology employed and can affect other parameters, such as data
    latency or scalability of the network (Balmos et al., 2016). Network topologies
    can also influence the network size and vary from simple star network (e.g. Hernandez-Rojas
    et al., 2018) to more advanced multi-hop mesh networks (Ahmed, Abdalla et al.,
    2018, Ahmed, De et al., 2018, Langendoen et al., 2006) that can increase the network
    size by using network nodes as relays to reach a central node and gateway. Optimisation
    algorithms have been used to find the best spatial distribution of WSN nodes,
    and therefore to assist in the optimisation of its network size (Abdel-basset
    et al., 2018). 5.3.7. Propagation losses Even though propagation losses can become
    a big problem for WSNs in application areas like fruit orchards and tree plantations,
    in arable farming hedges, trees, big rocks or sheds, as well as pronounced topography,
    like hills and valleys, can also block, diffract or scatter the signal reducing
    the communication range and causing data packet losses. Additionally, weather
    conditions can also degrade the wireless connectivity propagation of signals (Jawad
    et al., 2017, Kamarudin et al., 2016, Stewart et al., 2017). To avoid or reduce
    these problems, adequate planning of the location of the sensor nodes, the antenna
    height, the communication protocols and the network topology is necessary. Regarding
    network topologies, mesh networks compared to star networks can reduce propagation
    losses as well as increase communication range (Kamarudin et al., 2016, Ruiz-Garcia
    and Lunadei, 2011). Moreover, propagation modelling can help planning, reduce
    communication tests and ensure Quality of Service (QoS) for heterogeneous wireless
    networks (Jawad et al., 2017, Stewart et al., 2017, Kamarudin et al., 2016, Klaina
    et al., 2018, Ruiz-Garcia and Lunadei, 2011). 5.4. Application layer challenges
    5.4.1. Data analysis Data analysis can in some cases become an important challenge,
    especially when dealing with Big Data, which is data in such amounts, heterogeneity
    and complexity that they need new data management techniques for analysis (Wolfert
    et al., 2017). Agricultural Big Data are worthless unless analysed; however, analysis
    can be very challenging because of the volume, diversity, and quality (e.g. errors
    and duplications). This is especially challenging in arable farming, where larger
    amounts of heterogeneous data are generated at diverse rates and from very different
    sources. The literature reviewed show an increased identification of this challenge
    in the last two years compared with the previous 6 years (see Fig. 5). This evolution
    might be caused by increased access and use of agricultural Big Data in recent
    times (Kamilaris et al., 2017, Pham and Stack, 2018). Techniques for lowering
    data dimensionality can ease the analysis by applying feature reduction models,
    which reduce data size by eliminating unnecessary data dimensions (Sabarina &
    Priya, 2015). Cloud computing provides the flexibility and scalability necessary
    for Big Data analysis, where numerous users operate simultaneously with the large
    and complex datasets (Gill et al., 2017). Likewise, cloud platforms are perfect
    for storing such large amounts of data, where NoSQL databases can store and manage
    these large unstructured datasets (Kamilaris et al., 2017). The analysis of Big
    Data can potentially be used, for example, for policy-making, reducing environmental
    negative impact, improve food-safety, as well as improved farm management and
    production, benefiting the different stakeholders involved (Kamilaris et al.,
    2017, Wolfert et al., 2017). Another facet to data analysis is the growing use
    of machine learning techniques, which are being used for exploring Big Data and
    identifying important factors and their interrelationship that affect agricultural
    production systems like, for example, identifying diverse patterns (e.g. crop
    development stages, weeds or diseases) as part of machine vision systems (Bacco,
    Berton, Ferro et al., 2018, Bacco, Berton, Gotta et al., 2018, Reshma and Pillai,
    2018). In these cases, the model is built upon a sample of data, often called
    training data, whose size and quality directly affects the final model. Choosing
    the adequate approach for building the model with the available data is also essential
    for the success of the IoT solution. 5.4.2. Data security and privacy Even though
    data security and privacy do not constitute a high challenge in the literature
    reviewed, they are certainly major concerns for the farmers, i.e. the suppliers
    of data and also end-users of the technology developed, who have little trust
    in service providers'' use of data (Jayashankar et al., 2018, Zhang et al., 2017).
    Also, data ownership needs to be taken into consideration as raw data and processed
    data in IoT systems have different ownership and are accessible by different actors,
    affecting the necessary requirements for data security and privacy (Kaloxylos
    et al., 2014). Research and development focus has been on sensing, processing,
    controlling and computing, while less effort has been devoted to solving security
    threats, risks and privacy (Tuna et al., 2017). Other issues like cost effectiveness
    in, for example, cloud services are also affecting the security of the data, which
    eventually affects the whole privacy and security of the IoT solution, as low-cost
    services have lower security (Dhinari, Newe, Lewis, & Nizamani, 2017). Technology
    providers should prioritise data security and privacy in their business models.
    The availability of privacy and security technologies that are dynamic enough
    to support the vast numbers and variety of stakeholders, as well as the complexity
    of the network, is still a major challenge that needs to be overcome (Verdouw,
    2016). Many solutions are being employed to reduce data security and privacy issues
    in each of the IoT layers of the system, e.g. encryption algorithms, intrusion
    detection mechanisms, authentication, secure routing protocols, anonymisation,
    etc. (Tuna et al., 2017, Tzounis et al., 2017). Middleware platforms are employed
    to add a security layer between network and applications, which can include confidentiality,
    anonymity and security to the system (Rodriguez et al., 2018, Serrano et al.,
    2015, Tuna et al., 2017, Tzounis et al., 2017). Additionally, newer technologies
    such as blockchain are aiming to solve many of the challenges related to privacy
    and security as well as transparency of the IoT. In agriculture, it is mainly
    being applied in the food supply chain (Bermeo-Almeida et al., 2018). Blockchain
    make sense for IoT platforms where large amounts of confidential data are handled.
    5.4.3. Data quality and availability Some of the challenges previously described
    have a direct influence on data quality, e.g. propagation losses, wireless link
    quality, robustness and fault tolerance. Anomaly detection and similar methods
    have been employed to identify faulty data before analysis (Cadavid et al., 2018,
    Lyle et al., 2014). The poor quality of data or its limited availability can limit
    many applications that involve Big Data analytics, modelling and machine learning,
    which can affect or even compromise the success of some IoT solutions (Balducci
    et al., 2018, O''Grady and O''Hare, 2017, Wolfert et al., 2017). In these setups,
    and specifically in arable farming, many datasets are integrated from different
    sources and sensors, and the quality or scarcity of some data can become a major
    hurdle to overcome. Ensuring quality and availability of the data before starting
    such a project is required. Even if it is not always possible to gather all the
    data necessary to develop models, perform correct analytics or train machine learning
    algorithms, scientific assumptions (Severino et al., 2018), data augmentation
    (Diedrichs et al., 2018) or simulated data (Wolanin et al., 2019) are used to
    help or solve the encountered challenge. 5.4.4. Context-awareness (metadata) Context-awareness
    is an important and distinctive feature of Smart Farming as compared to Precision
    Farming, because it automatically includes descriptive data from e.g. fields,
    sensors, machines, i.e. metadata. Metadata can include information about the date
    and time, node identification number, data of calibration, height and position
    information, or even descriptive data about an experiment objective, field, machinery,
    crop genotype or soil information at the sensor placement (Jayaraman et al., 2015).
    Metadata about sensor nodes in the system are crucial for providing contextual
    information so that correct data analysis can be performed (Jayaraman et al.,
    2016, Ray, 2017). Context-awareness helps computing techniques to decide what
    data is to be analysed, and consequently easing the computations, and the lack
    of this data complicate data analysis substantially. This is especially relevant
    in arable farming, where the system has to handle both spatial and temporal data
    and make decisions based on the data collected. The use of standards, formats
    and middleware that support metadata is therefore important to have in mind during
    the planning of an IoT solution (Peets et al., 2009, Ray, 2017). Context-awareness
    facilitates new business models and strategies for data analytics and DSS software
    providers. 6. Conclusions and future perspectives A literature review of current
    and foreseeable IoT technologies and systems in arable farming was carried out.
    This has included an overview of the state of the art of IoT technologies, an
    outline of the current and potential applications, and a thorough description
    of the challenges and solutions. From this survey, the role smart mobile phones
    play is highlighted, especially Android devices, which are employed in different
    ways for a wide diversity of applications, due to their availability, connectivity,
    interoperability, programmable ease and computational power. The introduction
    of 5G networks in the near future will enhance the capabilities of smart mobile
    devices due to their enhanced performance. The intelligent management of WSN as
    well as the capabilities of improved communication technologies can also solve
    some of the challenges IoT-based solutions are experiencing. The role of middleware
    platforms and generic enablers are expected to gain acceptance and importance,
    as they can solve system integration issues and interoperability challenges. In
    general, regarding challenges, interoperability is a main challenge throughout
    the whole IoT architecture, where development and/or acceptance of standards and
    protocols is required to ease the issues encountered by many IoT implementations.
    Furthermore, challenges such as revenue and affordability of IoT systems, the
    power consumption of wireless devices, latency and throughput problems during
    data transfer, as well as the complexity of data analysis, and data privacy and
    security have been identified in the reviewed literature as of high importance,
    and academic research should direct their resources toward solving or reducing
    these issues. Technology developers need to ensure that the solutions create a
    real benefit for farmers and are available and applicable for both large and small
    producers. How IoT generated farm data will affect the business models of farmers
    requires further investigation as it is not fully addressed in the literature
    reviewed. The combination of intelligent power efficient systems with power harvesting
    technologies should guarantee longer battery-life of wireless devices. Computing
    data at the edge, i.e. on the devices, as well as lightweight protocols can reduce
    network latency and capacity/throughput problems. The emergence of Big Data is
    posing significant challenges for data analysis, as the complexity and heterogeneity
    of the huge data sets require the application of new analysis techniques beyond
    those traditionally used. Techniques such as lowering data dimensionality, cloud
    platforms and cloud computing, including machine learning algorithms, can help
    in this area and new innovative solutions are expected to be developed. Finally,
    technology producers have to guarantee privacy and security of the data handled
    throughout all the layers by employing different secure methods without compromising
    the user-friendliness of the solutions employed. Middleware platforms can help
    improving the privacy and security of IoT solutions, and techniques such as blockchain
    can assist with privacy and security problems of IoT platforms when dealing with
    Big Data. In the near future, interoperable and service-oriented FMIS that are
    integrated in the supply chain with intelligent analytic tools will take over
    some of the management and decision-making tasks of farmers and advisors, which
    will require training for farmers to adapt to this type of FMIS. Key decision
    support functions include farm financial analysis, business processes, or supply
    chain functions, which will gain importance with Big Data analytics. In addition,
    DSS for vehicle logistics will grow in importance as a way to optimise field operations
    using route planning and sensor-based site-specific applications. Finally, the
    introduction of autonomous vehicles and robotics in arable farming in the near
    future is expected to completely change arable farming operations and production
    praxes requiring fully adopted IoT capabilities. Acknowledgements This work was
    supported by the European Union''s Horizon 2020 research and innovation programme
    under grant agreement no. 731884, Internet of Food and Farm (IoF2020). References
    Aasha Nandhini et al., 2017 S. Aasha Nandhini, R. Hemalatha, S. Radha, K. Indumathi
    Web enabled plant disease detection system for agricultural applications using
    WMSN Wireless Personal Communications, 1–16 (2017), 10.1007/s11277-017-5092-4
    Google Scholar Abdel-basset et al., 2018 M. Abdel-basset, L.A. Shawky, K. Eldrandaly
    Grid quorum-based spatial coverage for IoT smart agriculture monitoring using
    enhanced multi-verse optimizer Neural Computing & Applications, 4 (2018), 10.1007/s00521-018-3807-4
    Google Scholar Abrahamsen and Hansen, 2000 P. Abrahamsen, S. Hansen Daisy : An
    open soil-crop-atmosphere system model Environmental Modelling & Software, 15
    (2000), pp. 313-330, 10.1016/S1364-8152(00)00003-7 View PDFView articleView in
    ScopusGoogle Scholar Ahmed, Abdalla et al., 2018 E.M.E. Ahmed, K.H.B. Abdalla,
    I.K. Eltahir Farm automation based on IoT 2018 International conference on computer,
    control, electrical, and Electronics engineering (ICCCEEE), IEEE (2018), pp. 1-4
    Google Scholar Ahmed, De et al., 2018 N. Ahmed, D. De, S. Member, I. Hussain Internet
    of Things (IoT) for smart precision agriculture and farming in rural areas IEEE
    Internet of Things Journal, 5 (6) (2018), pp. 4890-4899, 10.1109/JIOT.2018.2879579
    View in ScopusGoogle Scholar Alahmadi et al., 2017 A. Alahmadi, T. Alwajeeh, V.
    Mohanan, R. Budiarto Wireless sensor network with always best connection for internet
    of farming V. Mohanan, R. Budiarto, I. Aldmour (Eds.), Powering the Internet of
    Things with 5G networks, IGI Global, Hershey, PA, USA (2017), pp. 176-201, 10.4018/978-1-5225-2799-2.ch007
    View in ScopusGoogle Scholar Aliev, 2018 K. Aliev Internet of plants application
    for smart agriculture IJACSA - International Journal of Advanced Computer Science
    and Applications, 9 (4) (2018), pp. 421-429, 10.14569/IJACSA.2018.090458 View
    in ScopusGoogle Scholar Ashton, 2009 K. Ashton That “internet of things” Thing
    RFID Journal (2009, June) Retrieved from http://www.rfidjournal.com/articles/view?4986
    Google Scholar Bacco, Berton, Ferro et al., 2018 M. Bacco, A. Berton, E. Ferro,
    C. Gennaro, A. Gotta, S. Matteoli, et al. Smart farming : opportunities, challenges
    and technology enablers 2018 IoT vertical and topical summit on agriculture -
    tuscany (IOT tuscany), IEEE (2018), pp. 1-6, 10.1109/IOT-TUSCANY.2018.8373043
    View in ScopusGoogle Scholar Bacco, Berton, Gotta et al., 2018 M. Bacco, A. Berton,
    A. Gotta, L. Caviglione IEEE 802.15.4 air-ground UAV communications in smart farming
    scenarios IEEE Communications Letters, 22 (9) (2018), pp. 1910-1913, 10.1109/LCOMM.2018.2855211
    View in ScopusGoogle Scholar Bakhtiari et al., 2011 A. Bakhtiari, H. Navid, J.
    Mehri, D.D. Bochtis Optimal route planning of agricultural field operations using
    ant colony optimization Agricultural Engineering International: CIGR Journal,
    13 (4) (2011), pp. 1-16 Retrieved from http://www.cigrjournal.org/index.php/Ejounral/article/view/1939
    Google Scholar Balducci et al., 2018 F. Balducci, D. Impedovo, D. Informatica,
    A. Moro Machine learning applications on agricultural datasets for smart farm
    enhancement Machines, 6 (38) (2018), pp. 1-22, 10.3390/machines6030038 Google
    Scholar Balmos et al., 2016 A.D. Balmos, A.W. Layton, A. Ault, J.V. Krogmeier,
    D.R. Buckmaster Investigation of Bluetooth communications for low-power embedded
    sensor networks in agriculture Transactions of the ASABE, 59 (5) (2016), pp. 1021-1029,
    10.13031/trans.59.11173 View in ScopusGoogle Scholar Bauer and Aschenbruck, 2018
    J. Bauer, N. Aschenbruck Design and implementation of an agricultural monitoring
    system for smart farming In 2018 IoT Vertical and topical Summit on agriculture
    (pp. 1–6), IEEE, Tuscany, Italy (2018), 10.1109/IOT-TUSCANY.2018.8373022 Google
    Scholar Bechar and Vigneault, 2016 A. Bechar, C. Vigneault Agricultural robots
    for field operations: Concepts and components Biosystems Engineering, 149 (2016),
    pp. 94-111, 10.1016/j.biosystemseng.2016.06.014 View PDFView articleView in ScopusGoogle
    Scholar Bennett, 2015 J.M. Bennett Agricultural big Data : Utilisation to discover
    the Unknown and instigate practice change Farm Policy Journal, 12 (1) (2015),
    pp. 43-50 Retrieved from http://www.farminstitute.org.au/publications-1/farm-policy-journals/2015-autumn-from-little-data-big-data-grow/agricultural-big-data-utilisation-to-discover-the-unknown-and-instigate-practice-change
    CrossRefView in ScopusGoogle Scholar Bermeo-Almeida et al., 2018 O. Bermeo-Almeida,
    M. Cardenas-Rodriguez, T. Samaniego-Cobo, E. Ferruzola-Gómez, R. Cabezas-Cabezas,
    W. Bazán-Vera Blockchain in Agriculture : A systematic literature review 4th International
    conference, CITI 2018, proceedings, Springer, Guayaquil, Ecuador (2018), pp. 44-56,
    10.1007/978-3-030-00940-3 View in ScopusGoogle Scholar Bochtis et al., 2011 D.
    Bochtis, O. Green, C.G. Sørensen Spatio-temporal constrained planning software
    for field machinery Journal of Agricultural Machinery Science, 7 (4) (2011), pp.
    399-403 Retrieved from https://dergipark.org.tr/download/article-file/118933 Google
    Scholar Bochtis and Sørensen, 2009 D.D. Bochtis, C.G. Sørensen The vehicle routing
    problem in field logistics part I Biosystems Engineering, 104 (4) (2009), pp.
    447-457, 10.1016/j.biosystemseng.2009.09.003 View PDFView articleView in ScopusGoogle
    Scholar Bochtis and Sørensen, 2014 D. Bochtis, C.G. Sørensen Special issue: Operations
    management - operations management in bio-production systems Operations Management
    in Bio-Production Systems, 120 (2014), pp. 1-116 Retrieved from https://www.sciencedirect.com/journal/biosystems-engineering/vol/120/suppl/C
    View in ScopusGoogle Scholar Bochtis et al., 2014 D.D. Bochtis, C.G.C. Sørensen,
    P. Busato Advances in agricultural machinery management : A review Biosystems
    Engineering, 126 (2014), pp. 69-81, 10.1016/j.biosystemseng.2014.07.012 View PDFView
    articleView in ScopusGoogle Scholar Brewster et al., 2017 C. Brewster, I. Roussaki,
    N. Kalatzis, K. Doolin, K. Ellis IoT in agriculture: Designing a europe-wide large-scale
    pilot IEEE Communications Magazine, 55 (9) (2017), pp. 26-33, 10.1109/MCOM.2017.1600528
    View in ScopusGoogle Scholar Brinkhoff et al., 2017 J. Brinkhoff, J. Hornbuckle,
    W. Quayle, C.B. Lurbe, T. Dowling WiField , an IEEE 802 . 11-based agricultural
    sensor data gathering and logging platform Eleventh International conference on
    sensing technology (ICST) (2017) Google Scholar Bünemann et al., 2018 E.K. Bünemann,
    G. Bongiorno, Z. Bai, R.E. Creamer, G. De Deyn, R. De Goede, et al. Soil quality
    – a critical review Soil Biology and Biochemistry, 120 (February) (2018), pp.
    105-125, 10.1016/j.soilbio.2018.01.030 View PDFView articleView in ScopusGoogle
    Scholar Burton et al., 2018 L. Burton, N. Dave, R.E. Fernandez, K. Jayachandran,
    S. Bhansali Smart gardening IoT soil sheets for real-Time nutrient analysis Journal
    of the Electrochemical Society, 165 (8) (2018), pp. 3157-3162, 10.1149/2.0201808jes
    Google Scholar Busato et al., 2007 P. Busato, R. Berruto, C. Saunders Optimal
    field-bin locations and harvest patterns to improve the combine field Capacity
    : Study with a dynamic simulation model CIOSTA 07 001. Vol. IX. Agricultural engineering
    International: The CIGR ejournal (2007) Retrieved from https://ecommons.cornell.edu/handle/1813/10619
    Google Scholar Cadavid et al., 2018 H. Cadavid, W. Garzón, A. Pérez, G. López,
    C. Mendivelso, C. Ramírez Towards a smart farming Platform : From IoT-based crop
    sensing Colombian conference on computing CCC 2018, communications and information
    science CCIS, Vol. 885 (2018), pp. 237-251, 10.1007/978-3-319-98998-3 View in
    ScopusGoogle Scholar CEMA, 2017 CEMA Digital farming: What does it really mean?
    (2017) Retrieved March 22, 2018 http://cema-agri.org/sites/default/files/CEMA_Digital
    Farming - Agriculture 4.0_ 13 02 2017.pdf Google Scholar Chatzikostas et al.,
    2019 G. Chatzikostas, D. Matic, D. Van Damme, P. Rakers, J. Vangeyte, A. De Visscher,
    et al. Smart agri hubs D3.1 innovation experiment guidelines (2019) Retrieved
    from https://smartagrihubs.eu/Deliverables/pdfs/D3.1_IE Guidelines_final.pdf Google
    Scholar Christensen et al., 2009 S. Christensen, H.T. Søgaard, P. Kudsk, M. Nørremark,
    I. Lund, E.S. Nadimi, et al. Site-specific weed control technologies Weed Research,
    49 (2009), pp. 233-241, 10.1111/j.1365-3180.2009.00696.x View in ScopusGoogle
    Scholar Christiansen et al., 2016 P. Christiansen, L.N. Nielsen, K.A. Steen, R.N.
    Jørgensen, H. Karstoft DeepAnomaly : Combining background subtraction and deep
    learning for detecting obstacles and anomalies in an agricultural field Sensors,
    16 (1904) (2016), pp. 1-21, 10.3390/s16111904 Google Scholar Costa et al., 2013
    C. Costa, F. Antonucci, F. Pallottino, J. Aguzzi, D. Sarriá, P. Menesatti A review
    on agri-food supply chain Traceability by means of RFID Technology Food and Bioprocess
    Technology, 6 (2) (2013), pp. 353-366, 10.1007/s11947-012-0958-7 View in ScopusGoogle
    Scholar Dhall and Agrawal, 2018 R. Dhall, H. Agrawal An improved energy efficient
    duty cycling algorithm for IoT based precision agriculture Procedia Computer Science,
    141 (2018), pp. 135-142, 10.1016/j.procs.2018.10.159 View PDFView articleView
    in ScopusGoogle Scholar Dhinari et al., 2017 L.L. Dhinari, T. Newe, E. Lewis,
    S. Nizamani Cloud computing and Internet of Things fusion: Cost issues Eleventh
    International conference on sensing technology (ICST) (2017), pp. 2-7 Google Scholar
    Diedrichs et al., 2018 A.L. Diedrichs, F. Bromberg, D. Dujovne, K. Brun-laguna,
    T. Watteyne Prediction of frost events using machine learning and IoT sensing
    devices IEEE Internet of Things Journal, 5 (6) (2018), pp. 4589-4597, 10.1109/JIOT.2018.2867333
    View in ScopusGoogle Scholar Djelveh and Bisevac, 2016 S. Djelveh, V. Bisevac
    D3.7. Smart-AKIS policy gaps and briefs (2016) Retrieved from https://www.smart-akis.com/wp-content/uploads/2018/08/SmartAKIS_D3.7_Final.pdf
    Google Scholar Edwards et al., 2017 G.T.C. Edwards, J. Hinge, N. Skou-Nielsen,
    A. Villa-Henriksen, C.A.G. Sørensen, O. Green Route planning evaluation of a prototype
    optimised infield route planner for neutral material flow agricultural operations
    Biosystems Engineering, 153 (2017), pp. 149-157, 10.1016/j.biosystemseng.2016.10.007
    View PDFView articleView in ScopusGoogle Scholar Edwards et al., 2016 G. Edwards,
    D.R. White, L.J. Munkholm, C.G. Sørensen, M. Lamandé Modelling the readiness of
    soil for different methods of tillage Soil and Tillage Research, 155 (2016), pp.
    339-350, 10.1016/j.still.2015.08.013 View PDFView articleView in ScopusGoogle
    Scholar El Jarroudi et al., 2017 M. El Jarroudi, L. Kouadio, M. El Jarroudi, J.
    Junk, C. Bock, A.A. Diouf, et al. Improving fungal disease forecasts in winter
    wheat: A critical role of intra-day variations of meteorological conditions in
    the development of septoria leaf blotch Field Crops Research, 213 (August) (2017),
    pp. 12-20, 10.1016/j.fcr.2017.07.012 View PDFView articleView in ScopusGoogle
    Scholar Elijah et al., 2018 O. Elijah, S. Member, T.A. Rahman An overview of Internet
    of Things (IoT) and data analytics in Agriculture : Benefits and challenges IEEE
    Internet of Things Journal, 5 (5) (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar Estrada-López et al., 2018 J.J. Estrada-López, A.A.
    Castillo-Atoche, J. Vázquez-castillo, E. Sánchez-Sinencio Smart soil parameters
    estimation system using an autonomous wireless sensor network with dynamic power
    management strategy Sensors Journal, 18 (21) (2018), pp. 8913-8923, 10.1109/JSEN.2018.2867432
    View in ScopusGoogle Scholar Faraci et al., 2018 G. Faraci, A. Raciti, S. Rizzo,
    G. Schembra A 5G platform for unmanned aerial monitoring in rural areas: Design
    and performance issues IEEE international conference on network softwarization
    (NetSoft 2018) - technical sessions, Vol. 1, IEEE (2018), pp. 237-241, 10.1109/NETSOFT.2018.8459960
    Google Scholar Ferrández-Pastor et al., 2018 F.J. Ferrández-Pastor, J.M. García-Chamizo,
    M. Nieto-Hidalgo, J. Mora-Martínez Precision agriculture design method using a
    distributed computing architecture on Internet of Things context Sensors, 18 (1731)
    (2018), pp. 1-21, 10.3390/s18061731 Google Scholar Ferrández-Pastor et al., 2016
    F. Ferrández-Pastor, J. García-Chamizo, M. Nieto-Hidalgo, J. Mora-Pascual, J.
    Mora-Martínez Developing ubiquitous sensor network platform using Internet of
    Things: Application in precision agriculture Sensors, 16 (8) (2016), p. 1141,
    10.3390/s16071141 View in ScopusGoogle Scholar Ferreira et al., 2017 D. Ferreira,
    P. Corista, J. Gião, S. Ghimire, J. Sarraipa, R. Jardim-gonçalves Towards smart
    agriculture using FIWARE enablers 2017 International conference on engineering,
    technology and Innovation (ICE/ITMC), IEEE, Funchal, Portugal (2017), pp. 1544-1551,
    10.1109/ICE.2017.8280066 View in ScopusGoogle Scholar Foley et al., 2011 J.A.
    Foley, N. Ramankutty, K.A. Brauman, E.S. Cassidy, J.S. Gerber, M. Johnston, et
    al. Solutions for a cultivated planet Nature, 478 (7369) (2011), pp. 337-342,
    10.1038/nature10452 Retrieved from View in ScopusGoogle Scholar Fountas, Carli
    et al., 2015 S. Fountas, G. Carli, C.G. Sørensen, Z. Tsiropoulos, C. Cavalaris,
    A. Vatsanidou, et al. Farm management information systems: Current situation and
    future perspectives Computers and Electronics in Agriculture, 115 (2015), pp.
    40-50, 10.1016/j.compag.2015.05.011 View PDFView articleView in ScopusGoogle Scholar
    Fountas, Sørensen et al, 2015 S. Fountas, C.G. Sørensen, Z. Tsiropoulos, C. Cavalaris,
    V. Liakos, T. Gemtos Farm machinery management information system Computers and
    Electronics in Agriculture, 110 (2015), pp. 131-138, 10.1016/j.compag.2014.11.011
    View PDFView articleView in ScopusGoogle Scholar Gao and Yao, 2016 C. Gao, K.
    Yao The design and implementation of portable Agricultural microclimate data acquisition
    system based on android platform Proceedings - 2015 8th international symposium
    on computational intelligence and design, ISCID 2015, Vol. 1 (2016), pp. 210-213,
    10.1109/ISCID.2015.275 Google Scholar Gill et al., 2017 S.S. Gill, I. Chana, R.
    Buyya IoT based agriculture as a cloud and big data service Journal of Organizational
    and End User Computing, 29 (4) (2017), pp. 1-23, 10.4018/JOEUC.2017100101 View
    in ScopusGoogle Scholar Giordano et al., 2018 S. Giordano, I. Seitanidis, M. Ojo,
    D. Adami, F. Vignoli IoT solutions for crop protection against wild animal attacks
    2018 IEEE International conference on environmental engineering (EE), IEEE (2018),
    pp. 1-5, 10.1109/EE1.2018.8385275 View in ScopusGoogle Scholar Goap et al., 2018
    A. Goap, D. Sharma, A.K. Shukla, C.R. Krishna An IoT based smart irrigation management
    system using Machine learning and open source technologies Computers and Electronics
    in Agriculture, 155 (May) (2018), pp. 41-49, 10.1016/j.compag.2018.09.040 View
    PDFView articleView in ScopusGoogle Scholar Godfray et al., 2010 H.C.J. Godfray,
    J.R. Beddington, I.R. Crute, L. Haddad, D. Lawrence, J.F. Muir, et al. Food Security
    : The challenge of feeding 9 billion people Science, 327 (5967) (2010), pp. 812-818,
    10.1126/science.1185383 View in ScopusGoogle Scholar Godwin and Miller, 2003 R.J.
    Godwin, P.C.H. Miller A review of the technologies for mapping within-field variability
    Biosystems Engineering, 84 (4) (2003), pp. 393-407 View PDFView articleView in
    ScopusGoogle Scholar Goldstein et al., 2018 A. Goldstein, L. Fink, A. Meitin Applying
    machine learning on sensor data for irrigation recommendations : Revealing the
    agronomist''s tacit knowledge Precision Agriculture, 19 (3) (2018), pp. 421-444,
    10.1007/s11119-017-9527-4 View in ScopusGoogle Scholar Green et al., 2009 O. Green,
    E.S. Nadimi, V. Blanes-Vidal, R.N. Jørgensen, I.M.L. Drejer Storm, C.G. Sørensen
    Monitoring and modeling temperature variations inside silage stacks using novel
    wireless sensor networks Computers and Electronics in Agriculture, 69 (2009),
    pp. 149-157, 10.1016/j.compag.2009.07.021 View PDFView articleView in ScopusGoogle
    Scholar Hamrita and Hoffacker, 2005 T.K. Hamrita, E.C. Hoffacker Development of
    a “smart” wireless soil monitoring sensor prototype using RFID technology Applied
    Engineering in Agriculture, 21 (1) (2005), pp. 139-143, 10.13031/2013.17904 View
    in ScopusGoogle Scholar Hernández-rojas et al., 2018 D.L. Hernández-rojas, T.M.
    Fernández-Caramés, P. Fraga-Lamas, C.J. Escudero Design and practical evaluation
    of a family of lightweight protocols for heterogeneous sensing through BLE beacons
    in IoT telemetry applications Sensors, 18 (1) (2018), pp. 1-33, 10.3390/s18010057
    Google Scholar Hernandez-Rojas et al., 2018 D. Hernandez-Rojas, B. Mazon-Olivo,
    J. Novillo-Vicuña, G. Belduma-Vacacela IoT android gateway for monitoring and
    control a WSN M. Botto-Tobar, N. Esparza-Cruz, J. León-Acurio, N. Crespo-Torres,
    M. Beltrán-Mora (Eds.), CITT 2017: Technology trends, Communications in computer
    and information science, Vol. 798, Springer, Cham (2018), pp. 18-32, 10.1007/978-3-319-72727-1_2
    View in ScopusGoogle Scholar Higgins et al., 2017 V. Higgins, M. Bryant, A. Howell,
    J. Battersby Ordering adoption: Materiality, knowledge and farmer engagement with
    precision agriculture technologies Journal of Rural Studies, 55 (2017), pp. 193-202,
    10.1016/j.jrurstud.2017.08.011 View PDFView articleView in ScopusGoogle Scholar
    Huang and Zhang, 2017 J. Huang, L. Zhang The big data processing platform for
    intelligent agriculture AIP Conference Proceedings, 1864 (2017), 10.1063/1.4992850
    Google Scholar Jain et al., 2018 P. Jain, S. Sarangi, P. Bhatt, S. Pappula Development
    of an energy-efficient adaptive IoT gateway model for precision agriculture 2018
    global Internet of Things Summit (GIoTS), IEEE (2018), pp. 1-6, 10.1109/GIOTS.2018.8534553
    Google Scholar Jawad et al., 2017 H. Jawad, R. Nordin, S. Gharghan, A. Jawad,
    M. Ismail Energy-efficient wireless sensor networks for precision agriculture:
    A review Sensors, 17 (8) (2017), p. 1781, 10.3390/s17081781 View in ScopusGoogle
    Scholar Jayaraman et al., 2015 P.P. Jayaraman, D. Palmer, A. Zaslavsky, A. Salehi
    Addressing information processing needs of digital agriculture with OpenIoT platform
    I. Podnar Žarko, K. Pripužić, M. Serrano (Eds.), Interoperability and open-source
    solutions for the Internet of Things. Lecture notes in computer science, Vol.
    9001, Springer, Cham (2015), pp. 137-152, 10.1007/978-3-319-16546-2_11 View in
    ScopusGoogle Scholar Jayaraman et al., 2016 P.P. Jayaraman, A. Yavari, D. Georgakopoulos,
    A. Morshed, A. Zaslavsky Internet of Things platform for smart farming: Experiences
    and lessons learnt Sensors (Switzerland), 16 (11) (2016), pp. 1-17, 10.3390/s16111884
    View in ScopusGoogle Scholar Jayashankar et al., 2018 P. Jayashankar, S. Nilakanta,
    W.J. Johnston, P. Gill, R. Burres, W.J. Johnston IoT adoption in agriculture :
    The role of trust , perceived value and risk Journal of Business & Industrial
    Marketing, 33 (6) (2018), pp. 804-821, 10.1108/JBIM-01-2018-0023 View in ScopusGoogle
    Scholar Jensen et al., 2012 M.A.F. Jensen, D. Bochtis, C.G. Sorensen, M.R. Blas,
    K.L. Lykkegaard In-field and inter-field path planning for agricultural transport
    units Computers & Industrial Engineering, 63 (4) (2012), pp. 1054-1061, 10.1016/j.cie.2012.07.004
    View PDFView articleView in ScopusGoogle Scholar Juul et al., 2015 J.P. Juul,
    O. Green, R.H. Jacobsen Deployment of wireless sensor networks in crop storages
    Wireless Personal Communications, 81 (2015), pp. 1437-1454, 10.1007/s11277-015-2482-3
    View in ScopusGoogle Scholar Kaloxylos et al., 2012 A. Kaloxylos, R. Eigenmann,
    F. Teye, Z. Politopoulou, S. Wolfert, C. Shrank, et al. Farm management systems
    and the Future Internet era Computers and Electronics in Agriculture, 89 (2012),
    pp. 130-144, 10.1016/j.compag.2012.09.002 View PDFView articleView in ScopusGoogle
    Scholar Kaloxylos et al., 2014 A. Kaloxylos, A. Groumas, V. Sarris, L. Katsikas,
    P. Magdalinos, E. Antoniou, et al. A cloud-based farm management system: Architecture
    and implementation Computers and Electronics in Agriculture, 100 (2014), pp. 168-179,
    10.1016/j.compag.2013.11.014 Retrieved from View PDFView articleView in ScopusGoogle
    Scholar Kamarudin et al., 2016 L.M. Kamarudin, R.B. Ahmad, D.L. Ndzi Simulation
    and analysis of LEACH for wireless sensor networks in agriculture ammar zakaria
    and kamarulzaman Kamarudin mohamed Elshaikh Elobaid Said Ahmed, 21 (1) (2016),
    pp. 16-26 View in ScopusGoogle Scholar Kamilaris et al., 2016 A. Kamilaris, F.
    Gao, F.X. Prenafeta-Boldu, M.I. Ali Agri-IoT: A semantic framework for internet
    of Things-enabled smart farming applications 2016 IEEE 3rd world Forum on Internet
    of Things, WF-IoT 2016, 442–447 (2016), 10.1109/WF-IoT.2016.7845467 Google Scholar
    Kamilaris et al., 2017 A. Kamilaris, A. Kartakoullis, F.X. Prenafeta-Boldú A review
    on the practice of big data analysis in agriculture Computers and Electronics
    in Agriculture, 143 (January) (2017), pp. 23-37, 10.1016/j.compag.2017.09.037
    View PDFView articleView in ScopusGoogle Scholar Kassal et al., 2018 P. Kassal,
    M.D. Steinberg, I. Murkovi Chemical wireless chemical sensors and biosensors :
    A review Sensors and Actuators B, 266 (2018), pp. 228-245, 10.1016/j.snb.2018.03.074
    View PDFView articleView in ScopusGoogle Scholar Kayacan et al., 2015 E. Kayacan,
    E. Kayacan, H. Ramon, W. Saeys Towards agrobots : Identification of the yaw dynamics
    and trajectory tracking of an autonomous tractor Computers and Electronics in
    Agriculture, 115 (2015), pp. 78-87, 10.1016/j.compag.2015.05.012 View PDFView
    articleView in ScopusGoogle Scholar Khanal et al., 2017 S. Khanal, J. Fulton,
    S. Shearer An overview of current and potential applications of thermal remote
    sensing in precision agriculture Computers and Electronics in Agriculture, 139
    (2017), pp. 22-32, 10.1016/j.compag.2017.05.001 View PDFView articleView in ScopusGoogle
    Scholar Khattab et al., 2016 A. Khattab, A. Abdelgawad, A. Khattab Design and
    implementation of a cloud-based IoT scheme for precision agriculture 28th International
    Conference on Microelectronics, Vols. 10–14 (2016), 10.1109/ICM.2016.7847850 Google
    Scholar Kitchen and Roger, 2007 N.R. Kitchen, R.D. Roger Emerging technologies
    for real-time and integrated agriculture decisions Computers and Electronics in
    Agriculture, 61 (2007), pp. 1-3, 10.1016/j.compag.2007.06.007 Google Scholar Klaina
    et al., 2018 H. Klaina, A.V. Alejos, O. Aghzout, F. Falcone Narrowband characterization
    of near-ground radio Sensors, 18 (2428) (2018), pp. 1-15, 10.3390/s18082428 Google
    Scholar Kodali et al., 2017 R.K. Kodali, V. Jain, S. Karagwal IoT based smart
    greenhouse IEEE region 10 humanitarian technology conference 2016, R10-HTC 2016
    - proceedings (2017), 10.1109/R10-HTC.2016.7906846 Google Scholar Kodali and Sahu,
    2016 R.K. Kodali, A. Sahu An IoT based soil moisture monitoring on Losant platform
    Proceedings of the 2016 2nd International conference on contemporary computing
    and informatics, IC3I 2016 (2016), pp. 764-768, 10.1109/IC3I.2016.7918063 View
    in ScopusGoogle Scholar Köksal and Tekinerdogan, 2018 Ö. Köksal, B. Tekinerdogan
    Architecture design approach for IoT - based farm management information systems
    Precision Agriculture, 1–33 (2018), 10.1007/s11119-018-09624-8 Google Scholar
    Kruize et al., 2016 J.W. Kruize, J. Wolfert, H. Scholten, C.N. Verdouw, A. Kassahun,
    A.J.M. Beulens Original papers A reference architecture for farm software ecosystems
    Computers and Electronics in Agriculture, 125 (2016), pp. 12-28, 10.1016/j.compag.2016.04.011
    View PDFView articleView in ScopusGoogle Scholar Langendoen et al., 2006 K. Langendoen,
    A. Baggio, O. Visser Murphy loves potatoes: Experiences from a pilot sensor network
    deployment in precision agriculture Proceedings 20th IEEE International parallel
    & distributed processing symposium, IEEE, Rhodes Island, Greece (2006), pp. 1-8,
    10.1109/IPDPS.2006.1639412 Google Scholar López-Riquelme et al., 2017 J.A. López-Riquelme,
    N. Pavón-Pulido, H. Navarro-Hellín, F. Soto-Valles, R. Torres-Sánchez A software
    architecture based on FIWARE cloud for Precision Agriculture Agricultural Water
    Management, 183 (2017), pp. 123-135, 10.1016/j.agwat.2016.10.020 View PDFView
    articleView in ScopusGoogle Scholar Lyle et al., 2014 G. Lyle, B.A. Bryan, B.
    Ostendorf Post-processing methods to eliminate erroneous grain yield measurements:
    Review and directions for future development Precision Agriculture, 15 (4) (2014),
    pp. 377-402, 10.1007/s11119-013-9336-3 View in ScopusGoogle Scholar Mafuta et
    al., 2012 M. Mafuta, M. Zennaro, A. Bagula, G. Ault, H. Gombachika, T. Chadza
    Successful deployment of a wireless sensor network for precision agriculture in
    Malawi 3rd International conference on networked embedded systems for every application
    (NESEA), IEEE (2012), pp. 1-7 CrossRefGoogle Scholar Manap and Najib, 2014 H.
    Manap, M.S. Najib A DOAS system for monitoring of ammonia emission in the agricultural
    sector Sensors and Actuators B: Chemical, 205 (2014), pp. 411-415, 10.1016/j.snb.2014.08.080
    View PDFView articleView in ScopusGoogle Scholar Marín-González et al., 2013 O.
    Marín-González, B. Kuang, M.Z. Quraishi, M.A. Muñóz-García, A.M. Mouazen On-line
    measurement of soil properties without direct spectral response in near infrared
    spectral range Soil and Tillage Research, 132 (2013), pp. 21-29, 10.1016/j.still.2013.04.004
    View PDFView articleView in ScopusGoogle Scholar Marsch et al., 2016 P. Marsch,
    I.D. Silva, Ö. Bulakci, M. Tesanovic, S. Eddine, E. Ayoubi 5G radio access network
    architecture – design guidelines and key considerations IEEE Communications Magazine,
    54 (11) (2016), pp. 24-32, 10.1109/MCOM.2016.1600147CM View in ScopusGoogle Scholar
    Martínez et al., 2016 R. Martínez, J.Á. Pastor, B. Álvarez, A. Iborra A testbed
    to evaluate the fiware-based iot platform in the domain of precision agriculture
    Sensors (Switzerland), 16 (11) (2016), 10.3390/s16111979 Google Scholar Mäyrä
    et al., 2018 O. Mäyrä, M. Ruusunen, M. Jalli, L. Jauhiainen, K. Leiviskä Plant
    disease outbreak – prediction by advanced data analysis SNE Short Note, 28 (3)
    (2018), pp. 113-115, 10.11128/sne.28.sn.10431 Google Scholar Mazon-Olivo et al.,
    2018 B. Mazon-Olivo, D. Hernández-Rojas, J. Maza-Salinas, A. Pan Rules engine
    and complex event processor in the context of Internet of Things for precision
    agriculture Computers and Electronics in Agriculture, 154 (February) (2018), pp.
    347-360, 10.1016/j.compag.2018.09.013 View PDFView articleView in ScopusGoogle
    Scholar McBratney et al., 2003 A. McBratney, M. Mendonça Santos, B. Minasny On
    digital soil mapping Geoderma, 117 (1–2) (2003), pp. 3-52 Retrieved from http://linkinghub.elsevier.com/retrieve/pii/S0016706103002234
    View PDFView articleView in ScopusGoogle Scholar Meola, 2016 A. Meola Why IoT,
    big data & smart farming are the future of agriculture. Business Insider - Dec
    20, 2016 (2016) Retrieved from https://www.businessinsider.com/internet-of-things-smart-agriculture-2016-10?r=US&IR=T
    Google Scholar Midtiby et al., 2018 H.S. Midtiby, K.A. Steen, O. Green In row
    cultivation controlled by plant patterns Computers and Electronics in Agriculture,
    153 (July) (2018), pp. 62-68, 10.1016/j.compag.2018.07.037 View PDFView articleView
    in ScopusGoogle Scholar Miettinen et al., 2006 M. Miettinen, T. Oksanen, P. Suomi,
    A. Visala Fault diagnosis in agricultural machines ASABE International conference
    on automation technology for off-road equipment, ASABE, Bonn, Germany (2006),
    pp. 1-10 Retrieved from https://www.computoolable.com/AgF4.pdf Google Scholar
    Moon et al., 2018 A. Moon, J. Kim, J. Zhang, S. Woo Evaluating fi delity of lossy
    compression on spatiotemporal data from an IoT enabled smart farm Computers and
    Electronics in Agriculture, 154 (March) (2018), pp. 304-313, 10.1016/j.compag.2018.08.045
    View PDFView articleView in ScopusGoogle Scholar Mukherjee et al., 2018 A. Mukherjee,
    S. Misra, N.S. Raghuwanshi, S. Mitra Blind entity identification for agricultural
    IoT deployments Internet of Things Journal, 1–8 (2018), 10.1109/JIOT.2018.2879454
    Google Scholar Na and Isaac, 2016 A. Na, W. Isaac Developing a human-centric agricultural
    model in the IoT environment 2016 International Conference on Internet of Things
    and applications, IOTA 2016 (2016), pp. 292-297, 10.1109/IOTA.2016.7562740 View
    in ScopusGoogle Scholar Näsi et al., 2018 R. Näsi, N. Viljanen, J. Kaivosoja,
    K. Alhonoja, T. Hakala, L. Markelin, et al. Estimating biomass and nitrogen amount
    of barley and grass using UAV and aircraft based spectral and photogrammetric
    features Remote Sensing, 10 (7) (2018), p. 1082, 10.3390/rs10071082 1–32 View
    in ScopusGoogle Scholar Nielsen et al., 2017 S.K. Nielsen, L.J. Munkholm, M. Lamandé,
    M. Nørremark, N. Skou-Nielsen, G.T.C. Edwards, et al. Seed drill instrumentation
    for spatial coulter depth measurements Computers and Electronics in Agriculture,
    141 (2017), pp. 207-214 Google Scholar Okayasu et al., 2017 T. Okayasu, A.P. Hugroho,
    A. Sakai, D. Arita, T. Yoshinaga, R. Taniguchi, et al. Affordable field environmental
    monitoring and plant growth measurement system for smart agriculture Eleventh
    International conference on sensing technology (ICST) (2017), pp. 7-10 Google
    Scholar Oksanen et al., 2016 T. Oksanen, R. Linkolehto, I. Seilonen Adapting an
    industrial automation protocol to remote monitoring of mobile agricultural machinery:
    A combine harvester with IoT IFAC-PapersOnLine 49–16, Elsevier (2016), pp. 127-131
    View PDFView articleView in ScopusGoogle Scholar Oksanen et al., 2015 T. Oksanen,
    P. Piirainen, I. Seilonen Remote access of ISO 11783 process data by using OPC
    Unified Architecture technology Computers and Electronics in Agriculture, 117
    (2015), pp. 141-148, 10.1016/j.compag.2015.08.002 View PDFView articleView in
    ScopusGoogle Scholar O''Grady and O''Hare, 2017 M.J. O''Grady, G.M.P. O''Hare
    Modelling the smart farm Information Processing in Agriculture, 4 (3) (2017),
    pp. 179-187, 10.1016/j.inpa.2017.05.001 View PDFView articleView in ScopusGoogle
    Scholar Paraforos et al., 2016 D.S. Paraforos, V. Vassiliadis, D. Kortenbruck,
    K. Stamkopoulos, V. Ziogas, A.A. Sapounas, et al. A farm management information
    system using future internet Technologies IFAC-PapersOnLine, 49 (16) (2016), pp.
    324-329, 10.1016/j.ifacol.2016.10.060 View PDFView articleView in ScopusGoogle
    Scholar Peets et al., 2009 S. Peets, C.P. Gasparin, D.W.K. Blackburn, R.J. Godwin
    RFID tags for identifying and verifying agrochemicals in food traceability systems
    Precision Agriculture, 10 (5) (2009), pp. 382-394, 10.1007/s11119-009-9106-4 View
    in ScopusGoogle Scholar Peets et al., 2012 S. Peets, A.M. Mouazen, K. Blackburn,
    B. Kuang, J. Wiebensohn Methods and procedures for automatic collection and management
    of data acquired from on-the-go sensors with application to on-the-go soil sensors
    Computers and Electronics in Agriculture, 81 (2012), pp. 104-112, 10.1016/j.compag.2011.11.011
    View PDFView articleView in ScopusGoogle Scholar Pérez-Freire and Brillouet, 2015
    L. Pérez-Freire, L. Brillouet Smart farming and food safety Internet of Things
    applications - challenges for large scale implementations. AIOTI WG06 (2015) Retrieved
    from https://aioti.eu/wp-content/uploads/2017/03/AIOTIWG06Report2015-Farming-and-Food-Safety.pdf
    Google Scholar Pesonen et al., 2014 L.A. Pesonen, F.K. Teye, A.K. Ronkainen, M.O.
    Koistinen, J.J. Kaivosoja, P.F. Suomi, et al. Cropinfra - an Internet-based service
    infrastructure to support crop production in future farms Biosystems Engineering,
    120 (2014), pp. 92-101, 10.1016/j.biosystemseng.2013.09.005 View PDFView articleView
    in ScopusGoogle Scholar Pfeiffer and Blank, 2015 D. Pfeiffer, S. Blank Real-time
    operator performance analysis in agricultural equipment. Understanding unused
    potential and ways to improve from day to day 73rd International conference on
    agricultural engineering, LANDTECHNIK AgEng 2015 proceedings - innovations in
    agricultural engineering for efficient farming. Hannover, Germany (2015) Retrieved
    from https://www.researchgate.net/profile/Sebastian_Blank2/publication/283643214_Real-time_Operator_Performance_Analysis_in_Agricultural_Equipment/links/564c7d8e08aeab8ed5e9dcf4/Real-time-Operator-Performance-Analysis-in-Agricultural-Equipment.pdf
    Google Scholar Pham and Stack, 2018 X. Pham, M. Stack How data analytics is transforming
    agriculture Business Horizons, 61 (1) (2018), pp. 125-133, 10.1016/j.bushor.2017.09.011
    View PDFView articleView in ScopusGoogle Scholar Popović et al., 2017 T. Popović,
    N. Latinović, A. Pešić, Ž. Zečević, B. Krstajić, S. Djukanović Architecting an
    IoT-enabled platform for precision agriculture and ecological monitoring: A case
    study Computers and Electronics in Agriculture, 140 (2017), pp. 255-265, 10.1016/j.compag.2017.06.008
    View PDFView articleView in ScopusGoogle Scholar Ramundo et al., 2016 L. Ramundo,
    M. Taisch, S. Terzi State of the art of technology in the food sector value chain
    towards the IoT 2016 IEEE 2nd International forum on research and technologies
    for society and Industry leveraging a better tomorrow (RTSI), 1–6 (2016), 10.1109/RTSI.2016.7740612
    Google Scholar Ray, 2017 P.P. Ray Internet of Things for smart agriculture: Technologies,
    practices and future direction Journal of Ambient Intelligence and Smart Environments,
    9 (4) (2017), pp. 395-420, 10.3233/AIS-170440 View in ScopusGoogle Scholar Renard
    et al., 1991 K.G. Renard, G.R. Foster, G.A. Weesies, J.P. Porter Rusle: Revised
    universal soil loss equation Journal of Soil & Water Conservation, 46 (1) (1991),
    pp. 30-33 View in ScopusGoogle Scholar Reshma and Pillai, 2018 S.R.J. Reshma,
    A.S. Pillai Proceedings of the eighth International conference on soft computing
    and pattern recognition (SoCPaR 2016), 614(SoCPaR 2016) (2018), 10.1007/978-3-319-60618-7
    Google Scholar Rodriguez et al., 2018 M.A. Rodriguez, L. Cuenca, A. Ortiz FIWARE
    open source standard platform in smart farming - a review L.M. Camarinha-Matos,
    H. Afsarmanesh, Y. Rezgui (Eds.), Collaborative networks of cognitive systems
    19th IFIP WG 5.5 working conference on Virtual enterprises, PRO-VE 2018, Vol.
    534, Springer International Publishing, Cardiff, UK (2018), pp. 581-589, 10.1007/978-3-319-99127-6
    View in ScopusGoogle Scholar Ruiz-Garcia and Lunadei, 2011 L. Ruiz-Garcia, L.
    Lunadei The role of RFID in agriculture: Applications, limitations and challenges
    Computers and Electronics in Agriculture, 79 (1) (2011), pp. 42-50, 10.1016/j.compag.2011.08.010
    View PDFView articleView in ScopusGoogle Scholar Sabarina and Priya, 2015 K. Sabarina,
    N. Priya Lowering data dimensionality in big data for the benefit of precision
    agriculture Procedia Computer Science, 48 (C) (2015), pp. 548-554, 10.1016/j.procs.2015.04.134
    View PDFView articleView in ScopusGoogle Scholar Say et al., 2017 S.M. Say, M.
    Keskin, M. Sehri, Y.E. Sekerli Adoption of precision agriculture Technologies
    in developed and developing countries adoption of precision agriculture technologies
    A. Isman, S. Dündar (Eds.), International science and technology conference (ISTEC)
    (2017), pp. 41-49 Berlin, Germany. Retrieved from https://www.researchgate.net/publication/320908156_Adoption_of_Precision_Agriculture_Technologies_in_Developed_and_Developing_Countries
    Google Scholar SEGES, 2016 SEGES Præcisionsjordbrug i Danmark. Barriererapport:
    Identificering af udfordringer og forhold, der hæmmer udvikling, produktion og
    anvendelse af præcisionsjordbrugsteknikker i planteavlen (2016) Retrieved from
    file:///C:/Users/AgroIntelli AVH/Downloads/Barriärrapportpraecisionsjordbrug-i-danmark.pdf
    Google Scholar Serrano et al., 2015 M. Serrano, P. Barnaghi, F. Carrez, P. Cousin,
    O. Vermesan, P. Friess Internet of Things IoT semantic interoperability: Research
    challenges, best practices, recommendations and next steps (2015) Retrieved from
    http://www.eglobalmark.com/wp-content/uploads/2016/06/2015-03-IoT-Semantic-Interoperability-Research-Challenges-Best-Practices-Recommendations-and-Next-Steps.pdf
    Google Scholar Severino et al., 2018 G. Severino, G. D''Urso, M. Scarfato, G.
    Toraldo The IoT as a tool to combine the scheduling of the irrigation with the
    geostatistics of the soils Future Generation Computer Systems, 82 (2018), pp.
    268-273, 10.1016/j.future.2017.12.058 View PDFView articleView in ScopusGoogle
    Scholar Seyyedhasani and Dvorak, 2018 H. Seyyedhasani, J.S. Dvorak Dynamic rerouting
    of a fleet of vehicles in agricultural operations through a dynamic multiple depot
    vehicle routing problem representation Biosystems Engineering, 171 (2018), pp.
    63-77, 10.1016/j.biosystemseng.2018.04.003 View PDFView articleView in ScopusGoogle
    Scholar Seyyedhasani et al., 2019 H. Seyyedhasani, J.S. Dvorak, E. Roemmele Routing
    algorithm selection for field coverage planning based on field shape and fleet
    size Computers and Electronics in Agriculture, 156 (December 2018) (2019), pp.
    523-529, 10.1016/j.compag.2018.12.002 View PDFView articleView in ScopusGoogle
    Scholar Sinha et al., 2017 R.S. Sinha, Y. Wei, S.H. Hwang A survey on LPWA technology:
    LoRa and NB-IoT ICT Express, 3 (1) (2017), pp. 14-21, 10.1016/j.icte.2017.03.004
    View PDFView articleView in ScopusGoogle Scholar Sjolander et al., 2011 A.J. Sjolander,
    J.A. Thomasson, R. Sui, Y. Ge Wireless tracking of cotton modules. Part 2: Automatic
    machine identification and system testing Computers and Electronics in Agriculture,
    75 (1) (2011), pp. 34-43, 10.1016/j.compag.2010.09.015 View PDFView articleView
    in ScopusGoogle Scholar Skou-Nielsen et al., 2017 N. Skou-Nielsen, A. Villa-Henriksen,
    O. Green, G.T.C. Edwards Creating a statistically representative set of Danish
    agricultural field shapes to robustly test route planning algorithms Precision
    agriculture (ECPA) 2017, 8:2 (2017), pp. 615-619, 10.1017/S2040470017000188 Edinburgh
    View PDFView articleGoogle Scholar Sørensen and Bochtis, 2010 C.G. Sørensen, D.D.
    Bochtis Conceptual model of fleet management in agriculture Biosystems Engineering,
    105 (1) (2010), pp. 41-50 View PDFView articleView in ScopusGoogle Scholar Sørensen
    et al., 2010 C.G. Sørensen, S. Fountas, E. Nash, L. Pesonen, D. Bochtis, S.M.
    Pedersen, et al. Conceptual model of a future farm management information system
    Computers and Electronics in Agriculture, 72 (1) (2010), pp. 37-47, 10.1016/j.compag.2010.02.003
    View PDFView articleView in ScopusGoogle Scholar Sørensen et al., 2011 C.G. Sørensen,
    L. Pesonen, D.D. Bochtis, S.G. Vougioukas, P. Suomi Functional requirements for
    a future farm management information system Computers and Electronics in Agriculture,
    76 (2011), pp. 266-276, 10.1016/j.compag.2011.02.005 View PDFView articleView
    in ScopusGoogle Scholar Steen et al., 2012 K.A. Steen, A. Villa-Henriksen, O.R.
    Therkildsen, O. Green Automatic detection of animals in mowing operations using
    Thermal cameras Sensors, 12 (6) (2012), pp. 7587-7597, 10.3390/s120607587 View
    in ScopusGoogle Scholar Stewart et al., 2017 J. Stewart, R. Stewart, S. Kennedy
    Internet of Things - propagation modelling for precision agriculture applications
    Wireless telecommunications symposium (2017), 10.1109/WTS.2017.7943528 Google
    Scholar Stočes et al., 2016 M. Stočes, J. Vaněk, J. Masner, J. Pavlík Internet
    of Things (IoT) in agriculture -selected aspects AGRIS On-Line Papers in Economics
    and Informatics, 1 (1) (2016), pp. 83-88, 10.7160/aol.2016.080108 View in ScopusGoogle
    Scholar Suhonen et al., 2012 J. Suhonen, M. Kohvakka, V. Kaseva, T.D. Hämäläinen,
    M. Hännikäinen Communication protocols Low-power wireless sensor networks protocols,
    services and applications (1st ed.), Springer-Verlag, New York (2012), pp. 27-41,
    10.1007/978-1-4614-2173-3 Google Scholar Sundmaeker et al., 2016 H. Sundmaeker,
    C. Verdouw, S. Wolfert, L. Pérez Freire Internet of food and farm 2020 O. Vermesan,
    P. Friess (Eds.), Digitising the industry Internet of Things connecting the physical,
    digital and virtual worlds, Vol. 49, River Publishers, Gistrup, Denmark (2016),
    pp. 1689-1699, 10.1017/CBO9781107415324.004 Google Scholar Talavera et al., 2017
    J.M. Talavera, L.E. Tobón, J.A. Gómez, M.A. Culman, J.M. Aranda, D.T. Parra, et
    al. Review of IoT applications in agro-industrial and environmental fields Computers
    and Electronics in Agriculture, 142 (118) (2017), pp. 283-297, 10.1016/j.compag.2017.09.015
    View PDFView articleView in ScopusGoogle Scholar Tanaka, 2018 K. Tanaka Low delay
    data gathering method for rice cultivation management system IoT specialized outdoor
    communication procedure 2018 International conference on Information and computer
    technologies (ICICT), IEEE (2018), pp. 139-143, 10.1109/INFOCT.2018.8356857 View
    in ScopusGoogle Scholar Tan and Panda, 2010 Y.K. Tan, S.K. Panda Review of energy
    harvesting Technologies for sustainable wireless sensor network Y.K. Tan, W. Seah
    (Eds.), Sustainable wireless sensor networks, InTech, Rijeka, Croatia (2010),
    pp. 15-43, 10.5772/663 View in ScopusGoogle Scholar Temprilho et al., 2018 A.
    Temprilho, L. Nóbrega, P. Pedreiras, P. Gonçalves, S. Silva M2M communication
    stack for intelligent farming Global Internet of Things summit (GIoTS) (2018),
    10.1109/GIOTS.2018.8534560 Google Scholar Tilman et al., 2011 D. Tilman, C. Balzer,
    J. Hill, B.L. Befort Global food demand and the sustainable intensification of
    agriculture Proceedings of the national academy of sciences of the United States
    of America, Vol. 108 (2011), pp. 20260-20264, 10.1073/pnas.1116437108 View in
    ScopusGoogle Scholar Tuna and Gungor, 2016 G. Tuna, V.C. Gungor Energy harvesting
    and battery technologies for powering wireless sensor networks Industrial Wireless
    Sensor Networks, Elsevier Ltd (2016), 10.1016/B978-1-78242-230-3.00002-7 Google
    Scholar Tuna et al., 2017 G. Tuna, D.G. Kogias, V.C. Gungor, C. Gezer, E. Taşkın,
    E. Ayday A survey on information security threats and solutions for Machine to
    Machine (M2M) communications Journal of Parallel and Distributed Computing, 109
    (2017), pp. 142-154, 10.1016/j.jpdc.2017.05.021 View PDFView articleView in ScopusGoogle
    Scholar Tzounis et al., 2017 A. Tzounis, N. Katsoulas, T. Bartzanas, C. Kittas
    Internet of Things in agriculture, recent advances and future challenges Biosystems
    Engineering, 164 (2017), pp. 31-48, 10.1016/j.biosystemseng.2017.09.007 View PDFView
    articleView in ScopusGoogle Scholar Uddin et al., 2018 M.A. Uddin, A. Mansour,
    D. Le Jeune, M. Ayaz, el-H.M. Aggoune UAV-assisted dynamic clustering of wireless
    sensor networks for crop health monitoring Sensors, 18 (2) (2018), p. 555, 10.3390/s18020555
    View in ScopusGoogle Scholar Veer and Wiles, 2008 H. van der Veer, A. Wiles Achieving
    Technical interoperability - the ETSI approach ETSI white paper (2008) Retrieved
    from https://www.etsi.org/images/files/ETSIWhitePapers/IOP whitepaper Edition
    3 final.pdf Google Scholar Vellidis et al., 2008 G. Vellidis, M. Tucker, C. Perry,
    C. Kvien, C. Bednarz A real-time wireless smart sensor array for scheduling irrigation
    Computers and Electronics in Agriculture, 61 (1) (2008), pp. 44-50, 10.1016/j.compag.2007.05.009
    View PDFView articleView in ScopusGoogle Scholar Verdouw, 2016 C. Verdouw Internet
    of Things in agriculture CAB reviews: Perspectives in agriculture, veterinary
    science, Nutrition and Natural Resources, 11 (35) (2016), 10.1079/PAVSNNR201611035
    Google Scholar Verdouw et al., 2017 C. Verdouw, S. Wolfert, G. Beers, H. Sundmaeker,
    G. Chatzikostas IOF2020 : Fostering business and software ecosystems for large-scale
    uptake of IoT in food and farming The International tri-conference for precision
    agriculture in 2017 (2017), 10.5281/zenodo.1002903 Google Scholar Viljanen et
    al., 2018 N. Viljanen, E. Honkavaara, R. Näsi, T. Hakala, O. Niemeläinen, Kai
    A novel machine learning method for estimating biomass of grass swards using a
    photogrammetric canopy height model , images and vegetation indices captured by
    a drone Agriculture, 8 (5) (2018), p. 70, 10.3390/agriculture8050070 1–28 View
    in ScopusGoogle Scholar Villa-Henriksen et al., 2018 A. Villa-Henriksen, N. Skou-Nielsen,
    C.A.G. Sørensen, O. Green, G.T.C. Edwards, et al. Internet-based harvest fleet
    logistic optimisation P.W.G. Groot Koerkamp (Ed.), Proceedings of the European
    Agricultural Conference, 8-12 July, Wageningen, the Netherlands, Wageningen University
    and Research, Wageningen (2018), pp. 56-61, 10.18174/471679 Accessed 14 Jan 2020
    Google Scholar Vuran et al., 2018 M.C. Vuran, A. Salam, R. Wong, S. Irmak Internet
    of underground things in precision agriculture : Architecture and technology aspects
    Ad Hoc Networks, 81 (2018), pp. 160-173, 10.1016/j.adhoc.2018.07.017 View PDFView
    articleView in ScopusGoogle Scholar Wang et al., 2014 H.Z. Wang, G.W. Lin, J.Q.
    Wang, W.L. Gao, Y.F. Chen, Q.L. Duan Management of big data in the internet of
    Things in agriculture based on cloud computing Applied Mechanics and Materials,
    548–549 (2014), pp. 1438-1444, 10.4028/www.scientific.net/AMM.548-549.1438 View
    in ScopusGoogle Scholar Wolanin et al., 2019 A. Wolanin, G. Camps-valls, L. Gómez-chova,
    G. Mateo-garcía, C. Van Der Tol, Y. Zhang, et al. Remote Sensing of Environment
    Estimating crop primary productivity with Sentinel-2 and Landsat 8 using machine
    learning methods trained with radiative transfer simulations Remote Sensing of
    Environment, 225 (March) (2019), pp. 441-457, 10.1016/j.rse.2019.03.002 View PDFView
    articleView in ScopusGoogle Scholar Wolfert et al., 2017 S. Wolfert, L. Ge, C.
    Verdouw, M.J. Bogaardt Big data in smart farming – a review Agricultural Systems,
    153 (2017), pp. 69-80, 10.1016/j.agsy.2017.01.023 View PDFView articleView in
    ScopusGoogle Scholar World Bank, 2017 World Bank ICT in agriculture: Connecting
    smallholders to knowledge, networks, and institutions (updated ed) The World Bank
    Group, Washington DC (2017), 10.1596/978-1-4648-1002-2 Google Scholar Xian, 2017
    K. Xian Internet of Things online monitoring system based on cloud computing International
    Journal of Online and Biomedical Engineering, 13 (9) (2017), pp. 123-131, 10.3991/ijoe.v13i09.7591
    View in ScopusGoogle Scholar Yan et al., 2018 M. Yan, P. Liu, R. Zhao, L. Liu,
    W. Chen, X. Yu, et al. Field microclimate monitoring system based on wireless
    sensor network Journal of Intelligent and Fuzzy Systems, 35 (2) (2018), pp. 1325-1337,
    10.3233/JIFS-169676 View in ScopusGoogle Scholar Zhai, 2017 A.F. Zhai Optimization
    of agricultural production control based on data processing Technology of agricultural
    Internet of Things Italian Journal of Pure and Applied Mathematics, 38 (2017),
    pp. 243-252 View in ScopusGoogle Scholar Zhang et al., 2017 A. Zhang, I. Baker,
    E. Jakku, R. Llewellyn Accelerating precision agriculture to decision agriculture
    : The needs and drivers for the present and future of digital agriculture in Australia
    A cross-industry producer survey for the Rural R&D for Profit ‘Precision to Decision’
    (P2D) project, EP175936 (2017) Google Scholar Zhao, Lin et al., 2018 W. Zhao,
    S. Lin, J. Han, R. Xu, L. Hou Design and implementation of smart irrigation system
    based on LoRa 2017 IEEE globecom workshops (GC wkshps), IEEE, Singapore, Singapore
    (2018), pp. 1-6, 10.1109/GLOCOMW.2017.8269115 Google Scholar Zhao, Lucani et al.,
    2018 X. Zhao, D.E. Lucani, X. Shen, H. Wang Reliable IoT Storage : Minimizing
    bandwidth use in storage without newcomer nodes IEEE Communications Letters, 22
    (7) (2018), pp. 1462-1465, 10.1109/LCOMM.2018.2831669 View in ScopusGoogle Scholar
    Zhou et al., 2014 K. Zhou, A. Leck Jensen, C.G. Sørensen, P. Busato, D.D. Bothtis
    Agricultural operations planning in fields with multiple obstacle areas Computers
    and Electronics in Agriculture, 109 (2014), pp. 12-22, 10.1016/j.compag.2014.08.013
    View PDFView articleView in ScopusGoogle Scholar Zou and Quan, 2017 Y. Zou, L.
    Quan A new service-oriented grid-based method for AIoT application and implementation
    Modern Physics Letters B, 31 (19–21) (2017), p. 1740064, 10.1142/S0217984917400644
    View in ScopusGoogle Scholar Zude-Sasse et al., 2016 M. Zude-Sasse, S. Fountas,
    T.A. Gemtos, N. Abu-Khalaf Applications of precision agriculture in horticultural
    crops European Journal of Horticultural Science, 81 (2) (2016), pp. 78-90, 10.17660/eJHS.2016/81.2.2
    View in ScopusGoogle Scholar Cited by (222) Design of an IoT ultrasonic-vision
    based system for automatic fruit sorting utilizing size and color 2024, Internet
    of Things (Netherlands) Show abstract Antecedents of smart farming adoption to
    mitigate the digital divide – extended innovation diffusion model 2023, Technology
    in Society Show abstract Advancements in smart farming: A comprehensive review
    of IoT, wireless communication, sensors, and hardware for agricultural automation
    2023, Sensors and Actuators A: Physical Show abstract Review of artificial intelligence
    and internet of things technologies in land and water management research during
    1991–2021: A bibliometric analysis 2023, Engineering Applications of Artificial
    Intelligence Show abstract Effects of laser scanner quality and tractor speed
    to characterise apple tree canopies 2023, Smart Agricultural Technology Show abstract
    A federated authentication and authorization approach for IoT farming 2023, Internet
    of Things (Netherlands) Show abstract View all citing articles on Scopus © 2020
    The Authors. Published by Elsevier Ltd on behalf of IAgrE. Recommended articles
    Effect of velocity ratio on performance characteristics of an active-passive combination
    tillage implement Biosystems Engineering, Volume 191, 2020, pp. 1-12 Ganesh Upadhyay,
    Hifjur Raheman View PDF Architecting user-centric internet of things for smart
    agriculture Sustainable Computing: Informatics and Systems, Volume 23, 2019, pp.
    88-102 Akash Sinha, …, Prabhat Kumar View PDF Smart farming IoT platform based
    on edge and cloud computing Biosystems Engineering, Volume 177, 2019, pp. 4-17
    Miguel A. Zamora-Izquierdo, …, Antonio F. Skarmeta View PDF Show 3 more articles
    Article Metrics Citations Policy Citations: 5 Citation Indexes: 205 Captures Readers:
    835 Mentions News Mentions: 22 Social Media Shares, Likes & Comments: 3 View details
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: Biosystems engineering
  limitations: '>'
  pdf_link: null
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things in arable farming: Implementation, applications, challenges
    and potential'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s18061731
  analysis: '>'
  authors:
  - Francisco-Javier Ferrández-Pastor
  - Juan Manuel García‐Chamizo
  - Mario Nieto-Hidalgo
  - José Mora-Martínez
  citation_count: 127
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nPrecision Agriculture Design Method Using\na Distributed\
    \ Computing Architecture on Internet\nof Things Context †\nFrancisco Javier Ferrández-Pastor\
    \ * ID , Juan Manuel García-Chamizo, Mario Nieto-Hidalgo ID\nand José Mora-Martínez\n\
    Department of Computer Technology, University of Alicante, P.O. Box 99, E-03080\
    \ Alicante, Spain;\njuanma@dtic.ua.es (J.M.G.-C.); mnieto@dtic.ua.es (M.N.-H.);\
    \ jose.mora.martinez.es@gmail.com (J.M.-M.)\n* Correspondence: fjferran@dtic.ua.es;\
    \ Tel.: +34-65903400 (ext. 3002)\n† This paper is an expanded version of “User-Centered\
    \ Design of Agriculture Automation Systems Using\nInternet of Things Paradigm”\
    \ published in Proceedings of the UCAmI 2017: Ubiquitous Computing and\nAmbient\
    \ Intelligence, Philadelphia, PA, USA, 7–10 November 2017.\nReceived: 14 April\
    \ 2018; Accepted: 25 May 2018; Published: 28 May 2018\n\x01\x02\x03\x01\x04\x05\
    \x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: The Internet of Things (IoT)\
    \ has opened productive ways to cultivate soil with the use\nof low-cost hardware\
    \ (sensors/actuators) and communication (Internet) technologies. Remote\nequipment\
    \ and crop monitoring, predictive analytic, weather forecasting for crops or smart\
    \ logistics\nand warehousing are some examples of these new opportunities.\nNevertheless,\
    \ farmers are\nagriculture experts but, usually, do not have experience in IoT\
    \ applications. Users who use IoT\napplications must participate in its design,\
    \ improving the integration and use. In this work, different\nindustrial agricultural\
    \ facilities are analysed with farmers and growers to design new functionalities\n\
    based on IoT paradigms deployment. User-centred design model is used to obtain\
    \ knowledge and\nexperience in the process of introducing technology in agricultural\
    \ applications. Internet of things\nparadigms are used as resources to facilitate\
    \ the decision making. IoT architecture, operating rules\nand smart processes\
    \ are implemented using a distributed model based on edge and fog computing\n\
    paradigms. A communication architecture is proposed using these technologies.\
    \ The aim is to help\nfarmers to develop smart systems both, in current and new\
    \ facilities. Different decision trees to\nautomate the installation, designed\
    \ by the farmer, can be easily deployed using the method proposed\nin this document.\n\
    Keywords: Internet of Things; precision agriculture; fog and edge computing\n\
    1. Introduction\nPrecision Agriculture (PA) is a whole-farm management approach\
    \ using information technology,\nremote sensing and proximal data gathering. These\
    \ technologies have the goal of optimising returns\non inputs while potentially\
    \ reducing environmental impacts. Farmers and agronomists have already\nbegun\
    \ employing technologies in order to improve the efﬁciency of their work. Sensors\
    \ placed\nin greenhouses allow farmers to obtain detailed data on real-time as\
    \ variables such as soil and\nambient temperature, irrigation water and soil conductivity,\
    \ soil and irrigation water PH, nutrient\ncomposition data, irrigation water properties,\
    \ etc. These data can be transmitted and analysed using\ncommunication technologies\
    \ and Artiﬁcial Intelligence (AI) paradigms could be applied. Farmers use\ntheir\
    \ smartphones to remotely monitor their crops and equipments and to run some statistical\
    \ data.\nAll of these techniques help make up PA. Nowadays, the farmers are using\
    \ resources developed by\ninformation and communication technologies. These ﬁrst\
    \ resources are easy to use but they are general\nSensors 2018, 18, 1731; doi:10.3390/s18061731\n\
    www.mdpi.com/journal/sensors\nSensors 2018, 18, 1731\n2 of 21\npurpose and, therefore,\
    \ not adapted to the speciﬁc needs of each farmer. In this work an user-centred\n\
    method is proposed to design intelligent and adapted services where each farmer\
    \ decides its own\ninstallation using edge and fog paradigms (distributed computing)\
    \ on Internet of Things technologies\n(Figure 1). This method is designed on different\
    \ use cases and tested in an automated greenhouse as\nan example of utility. The\
    \ work is an expanded version presented in [1]. This paper is organized as\nfollows:\
    \ Section 2 reviews precision agriculture scenarios, how to use centred design\
    \ methodologies,\nIoT technologies and their deployment, the capabilities and\
    \ potential of edge and fog computing\nparadigms in these scenarios. Different\
    \ greenhouses are analysed and farmers are consulted. Section 3\nproposes a method\
    \ to deploy distributed IoT architecture using edge and fog nodes that offer a\
    \ set\nof new resources that can be used in any type of installation which facilitates\
    \ the involvement of\nthe farmer. In Section 4, experiments including services\
    \ on edge and fog nodes, connected by IoT\ncommunication protocols, are performed.\
    \ Finally, Section 5 provides conclusions and future works.\nFigure 1. Agricultural\
    \ System.\n2. Related Works\nAlthough more complex deﬁnitions exist, the simple\
    \ description of the PA is a way to “apply the\nright treatment in the right place\
    \ at the right time” [2].\nPrecision agriculture comprises a set\nof technologies\
    \ that combine sensors, information systems, enhanced machinery and informed\n\
    management to optimize production by accounting for variability and uncertainties\
    \ within agricultural\nsystems. It is a farming management concept based upon\
    \ observing, measuring and responding to\ninter and intra-ﬁeld variability in\
    \ crops [3]. Methods and technologies to decide how, where and when\nto use sensors\
    \ and machinery should involve all the main actors: that is, farmers and information\n\
    and communication technicians. User-centred methods and IoT communication technologies\
    \ applied\non precision agriculture are revised in this section. Finally, different\
    \ greenhouses are analysed and\nfarmers are consulted.\n2.1. User-Centred Design\
    \ Models\nIn PA context, User-Centred Design (UCD) describe a design process where\
    \ farmers inﬂuence the\nprocess of how the design takes shape. There are several\
    \ ways in which the user (agricultural specialist)\ncan be involved in the process.\
    \ This term describes a set of methods to create models on which\ndesign adapted\
    \ solutions. The user-centred design process works against subjective assumptions\n\
    about user behaviour. It requires proof that the design decisions are effective.\
    \ If user-centred design is\nproperly done, applications becomes an outcome of\
    \ actively engaging users. Therefore, any design\ndecisions that were made by\
    \ observing and listening to them will not be based on personal preferences.\n\
    User experience (UX) is one of the many focuses of UCD. It includes the user’s\
    \ entire experience with\nthe product, including physical and emotional reactions.\
    \ UCD is objective and often relies on data\nSensors 2018, 18, 1731\n3 of 21\n\
    to support design decisions [4]. According to [5], user centred design is a development\
    \ method that\nguarantees that product, software or web site will be easy to use.\
    \ The International Usability Standard\n(ISO 13407) [6], speciﬁes the principles\
    \ that underlie user centred design:\n•\nRequirements gathering, understanding\
    \ and specifying the context of use\n•\nRequirements speciﬁcation, specifying\
    \ the user and organisational requirements\n•\nDesign, producing designs and prototypes\n\
    •\nEvaluation, carrying out user-based assessment of the site\nThe design is based\
    \ upon an explicit understanding of users, tasks and environments. Users are\n\
    involved throughout design and development. The process is iterative. The design\
    \ is driven and\nreﬁned by user-centred evaluation. The design addresses the whole\
    \ user experience. The design team\nincludes multidisciplinary skills and perspectives.\n\
    2.2. Internet of Things: Architectures and Protocols\nIot is developed using architectures\
    \ based on layers capable of connecting a huge number of\ndevices with each other\
    \ and with the established services. The basic model of IoT has a 3 layer\narchitecture\
    \ which are of Perception, Network and Application Layers. IoT faces several challenges,\n\
    especially in the ﬁeld of privacy and security, so to overcome these issues new\
    \ standard architectures\nneed to be more focused on many essential factors like\
    \ Quality of Services (QoS), data integrity,\nsustainability, conﬁdentiality,\
    \ etc. The IAB (Internet Architecture Board) has published the RFC\n7452 document:\
    \ Architectural Considerations in Smart Object Networking. This document offers\n\
    guidance to engineers designing Internet-connected smart objects. A Request for\
    \ Comments (RFC),\nin the context of Internet governance, is a type of publication\
    \ from the Internet Engineering Task Force\n(IETF) and the Internet Society (ISOC),\
    \ the principal technical development and standards-setting\nbodies for the Internet.\n\
    Table 1 illustrates different works that apply the layer model in the\nIoT architecture.\n\
    Table 1. IoT architecture: Layers.\nLayers Proposed\nCharacteristics\n3\nPerception,\
    \ Network, Application [7,8]\n4\nThings, Edge, Network, Application [9]\n5\nBusiness,\
    \ Application, Service, Object abstration, Objects [10]\nIoT needs protocols adapted\
    \ to the new requirements. Traditional protocols are extended and\nnew protocols\
    \ are proposed offering different options on different contexts. IoT has now a\
    \ wide\nrange of applications. A smart devices can have wired or wireless connection.\
    \ As far as the wireless\nIoT is the main concern, many different wireless communication\
    \ technologies and protocols can be\nused to connect the smart device such as\
    \ Internet Protocol Version 6 (IPv6), over Low power Wireless\nPersonal Area Networks\
    \ (6LoWPAN), ZigBee, Bluetooth Low Energy (BLE), Z-Wave and Near Field\nCommunication\
    \ (NFC). They are short range standard network protocols, while SigFox and Cellular\n\
    are Low Power Wide Area Network (LPWAN).standard protocols. In [11] a review and\
    \ comparison of\ndifferent communication protocols in IoT is realised. This comparison\
    \ aims at presenting guidelines\nfor the researchers to be able to select the\
    \ right protocol for different applications. Table 2 illustrates\ndifferent protocols\
    \ used in the architecture layers.\nSensors 2018, 18, 1731\n4 of 21\nTable 2.\
    \ IoT protocols.\nLayer\nProtocols\nSession/Application\nMQTT, CoAP, AMQT, HTTP,\
    \ SOAP, ...\nNetwork\n6LowPAN, RPL, CORPL, IPSec, TCP/UDP, DTLS\nPerception/Things\n\
    WiFi, Bluetooth Low Energy, Z-Wave, ZigBee, LoraWan, IEEE 802.15.4, LTE, ...\n\
    Choosing the most appropriate protocol depends on several facts of which most\
    \ important are:\nenvironmental conditions, network characteristics, the amount\
    \ of data to be transferred, security levels\nand quality of service requests\
    \ [12]. CoAP network is primarily a one-to-one protocol for transferring\nstate\
    \ information between client and server while MQTT is a many-to-many communication\n\
    protocol for exchanging messages between multiple clients. CoAP runs over UDP\
    \ which means\nthat communication overhead is signiﬁcantly reduced. If constrained\
    \ communication and battery\nconsumption is not an issue, RESTful services can\
    \ be easily implemented and interact with the Internet\nusing the worldwide HTTP\
    \ [13]. If the targeted ﬁnal applications require massive updates of the same\n\
    value, MQTT protocol is more suitable. In this work different protocols (MQTT,\
    \ HTTP, Bluetooth, WiFi,\nLTE, ...) can be used to develop proposed architecture.\n\
    2.3. Internet of Things Technologies Applied on PA Scenarios\nAdvance in electronics,\
    \ computing and telecommunications are allowing the development of\nnew devices\
    \ (sensors, actuators and computing nodes) with wireless communication capabilities,\n\
    installed at any location, smaller, energy efﬁcient, autonomous, more powerful\
    \ and low cost [14–18].\nIoT works using user-driven service modeling is proposed\
    \ in [19]. Low-cost IoT devices that need\nto gather and transmit sensor data\
    \ and receive remote commands is shown in [20–22]. IoT uses the\nconnection between\
    \ devices to improve their efﬁciency and user experience, being the communication\n\
    one of the main elements for a proper IoT network. A review of the most common\
    \ wired and wireless\ncommunication protocols, discussion of their characteristics,\
    \ advantages and disadvantages as well as\na comparison study to choose the best\
    \ bidirectional sensor network composed by low power devices is\nrealised in [23].\
    \ Previous works show the degree of development of IoT technology, which has also\n\
    been experienced in precision agriculture in recent years.\nIoT technologies are\
    \ proposed in PA scenarios. In [24] this paradigm is analysed as a solution in\n\
    precision farming. IoT Smart farming application include farm parameters tracking,\
    \ monitoring, ﬁeld\nobservation and storage monitoring. The work Internet of Things\
    \ Platform for Smart Farming [25]\npresents a platform based on IoT technologies\
    \ that can automate the collection of environmental, soil,\nfertilisation, and\
    \ irrigation data; automatically correlate such data and ﬁlter-out invalid data\
    \ from\nthe perspective of assessing crop performance; and compute crop forecasts\
    \ and personalised crop\nrecommendations for any particular farm. This platform\
    \ (SmartFarmNet) can integrate virtually any\nIoT device, including commercially\
    \ available sensors, cameras, weather stations, etc., and store their\ndata in\
    \ the cloud for performance analysis and recommendations. An evaluation of the\
    \ SmartFarmNet\nplatform and the experiences and lessons learnt in developing\
    \ this system concludes the paper.\nSmartFarmNet is the ﬁrst and currently largest\
    \ system in the world (in terms of the number of\nsensors attached, crops assessed,\
    \ and users it supports) that provides crop performance analysis\nand recommendations.\n\
    In [9] a greenhouse with hydroponic crop production was designed, developed and\
    \ tested using\nUbiquitous Sensor Network monitoring and control on Internet of\
    \ Things paradigm. The experimental\nresults showed that the Internet technologies\
    \ and Smart Object Communication Patterns can be\ncombined to encourage development\
    \ of Precision Agriculture. They demonstrated added beneﬁts\n(cost, energy, smart\
    \ developing, acceptance by agricultural specialists) when a project is launched.\n\
    Other related work is shown in [26] with Zig Bee technology: Artiﬁcial intelligence\
    \ and decision\nsupport approaches have been developed. This work develop technology\
    \ for real-time monitoring\nSensors 2018, 18, 1731\n5 of 21\nof citrus soil moisture\
    \ and nutrients and the research on the integration of fertilization and irrigation\n\
    decision support system. The results showed that the system could help the grower\
    \ to scientiﬁcally\nfertilize or irrigate, improve the precision operation level\
    \ of citrus production, reduce the cost and\nreduce the pollution caused by chemical\
    \ fertilizer. A review into the state-of-the-art of Big Data\napplications in\
    \ Smart Farming is performed in [27]. Malche et al. [28] proposed a prototype\
    \ IoT system\nfor water level monitoring which can be implemented in future smart\
    \ villages in India. Manufacturers\nof the agricultural sector highlights the\
    \ importance of IoT in [29–32]. PA is effectively a suite of\nmethods, approaches\
    \ and instrumentation that farmers should examine in detail to decide which is\n\
    the most suitable for their business.\n2.4. Internet of Things, Cloud and Machine\
    \ Learning Evolution: Edge and Fog Computing Paradigms\nInternet of Things (IoT)\
    \ aims to bring every object (e.g. smart cameras, environmental sensors,\ncontrol\
    \ appliances, machine learning analysis) on line, hence generating massive amounts\
    \ of data that\ncan overwhelm storage systems and data analytic applications.\
    \ Cloud computing offers services at\nthe infrastructure level that can scale\
    \ to IoT storage and processing requirements. However, there are\napplications\
    \ such as sensor monitoring, control and analysis response that require low latency\
    \ therefore,\ndelay caused by transferring data to the cloud and then back to\
    \ the application can seriously impact\ntheir performances. To overcome this limitation,\
    \ Fog and Edge computing paradigms have been\nproposed, where cloud services are\
    \ extended to the edge of the network to decrease the latency and\nnetwork congestion\
    \ [33]. Both fog computing and edge computing involve pushing intelligence and\n\
    processing capabilities down closer to where the data originates from pumps, motors,\
    \ sensors, relays,\netc. The key difference between the two architectures is exactly\
    \ where that intelligence and computing\npower is placed:\n•\nFog computing pushes\
    \ intelligence down to the local area network level, processing data in a fog\n\
    node or IoT gateway\n•\nEdge computing pushes the intelligence, processing power\
    \ and communication capabilities of an\nedge gateway or appliance directly into\
    \ devices like programmable automation controllers (PACs)\nWith IoT implementation\
    \ now becoming more widespread, devices will generate a lot of data at\nthe end\
    \ of the network and many applications will be deployed at the edge to process\
    \ the information.\nCisco Systems predicts that an estimated 50 billion devices\
    \ will connect to the Internet by 2020 [34–36].\nSome of the applications they\
    \ run might require very short response times, some might involve private\ndata,\
    \ and some might produce huge quantities of data. Cloud computing cannot support\
    \ these IoT\napplications. Edge and Fog computing paradigms, on the other hand,\
    \ can do so and will promote\nmany new IoT applications.\nThe work done in [37]\
    \ concludes that the wireless sensor and actuator networks based on Edge\ncomputing\
    \ are experiencing fast development and opportunities in the post-Cloud era, and\
    \ are used\nin more and more applications. In [38] a Fog Computing Based on radio\
    \ access networks is proposed\nfor smart-cities services.\n2.5. Automated Technologies\
    \ in Greenhouses\nDifferent greenhouses in the south east of Spain have been visited\
    \ to analyse the type of installation\nand to ask expert users. The greenhouse\
    \ with the highest level of automation showed a complete\nnumber of sensors and\
    \ actuators; however, not all the sensors could be related. There are two large\n\
    subsystems in self-assembled greenhouses that are not interoperable. These subsystems\
    \ install different\ntypes of control and technologies:\n•\nIrrigation and nutrition\n\
    •\nAir conditioning and ventilation.\nSensors 2018, 18, 1731\n6 of 21\nIn these\
    \ facilities, an ambient temperature sensor of the air conditioning system is\
    \ not related to\nan irrigation water temperature sensor of the irrigation system.\
    \ Figure 2 shows different automated\ngreenhouses where main subsystems are listed.\n\
    Figure 2. Automated greenhouses: main subsystems in current facilities.\n3. User\
    \ Centred and Computing Method Model: Distributed Computing Architecture Based\
    \ on\nEdge and Fog Nodes\nThe current agricultural facilities are divided in subsystems\
    \ (irrigation, light, climate, soil, crop\nand energy) that are not interconnected.\
    \ Industrial logic programmable controllers and specialised\nsensors give basic\
    \ automation services in each subsystem. Internet and electronic devices (smartphones)\n\
    provide new functionalities based on information access, control and monitoring.\
    \ Human interfaces\non smartphones connected to web servers are examples of new\
    \ services developed over the past years.\nAgricultural technician and farmers\
    \ have knowledge that can be converted on expert rules for device\ncontrol. These\
    \ rules are programmed and implemented on actual programmable devices; however,\n\
    they are static rules which means that do not evolve when new conditions occur,\
    \ neither do they\nadapt to the singularities of each installation. The farmer\
    \ has to decide how to set the rules: what pH\nthe irrigation water must have,\
    \ how much water should be programmed in irrigation process, etc.\nAlso, each\
    \ rule only has effects in a subsystem (irrigation, climate), there is no interoperability.\n\
    Considering this context, new facilities design and development method are proposed\
    \ in this\nwork. The aim is that the farmer participates in the automated activities\
    \ and that the subsystems\nbecome interoperable. A method that implement automatic\
    \ rules and automate the decision making\nconsidering the behaviour of the installation\
    \ itself are also proposed. The phases of the proposed\nmodel are shown in Figure\
    \ 3.\n•\nAnalysis: two kind of users are identiﬁed in this phase (agriculture\
    \ user expert and ICT technician).\nExpert users in agriculture are interviewed\
    \ to deﬁne main processes to control. All these issues are\nrelated with ICT expert\
    \ in a participatory design. The results of this ﬁrst approach are the things\n\
    required to design services and control. In this phase an user-centred methodology\
    \ captures the\nfarmer requirements.\nSensors 2018, 18, 1731\n7 of 21\n•\nDesign:\
    \ the model is based on an architecture with three levels: edge, fog and cloud\
    \ services.\nIn this phase an adapted architecture using these levels is designed.\
    \ The adapted architecture is\nshown in Figure 4.\n•\nIntegration and data analysis:\
    \ Installation and Integration subsystems are developed in this phase.\nData analysis\
    \ is proposed to design machine learning services based on expert rules with farmer.\n\
    •\nStart up, measure and feedback: Test and feedback are launched.\nThe ﬁrst expert\
    \ rules\nare integrated with farmer supervision.\nNew rules are designed with\
    \ feedback processes.\nAutomatic and adapted rules are developed using artiﬁcial\
    \ intelligence systems with machine\nlearning platforms.\nFigure 3. User centred\
    \ model based on design and integration of edge and fog communication levels.\n\
    Cloud services and machine learning processes are integrated using this method.\n\
    Figure 4. Architecture: communication levels with different functionality.\nSensors\
    \ 2018, 18, 1731\n8 of 21\n3.1. User-Centred Analysis and Design\nThere are two\
    \ cases treated:\n•\nAgricultural installation with some automated facilities\
    \ already installed\n•\nNew agricultural installation\nThe method is the same\
    \ for both. Expert users in agriculture are interviewed to deﬁne new\nprocesses\
    \ to control. In this ﬁrst approach, the things (objects) required, their relationships\
    \ and the\npotential services are detected. Once objects and services have been\
    \ detected, they must be related\nto the necessary communication and control technologies\
    \ (IoT protocols). Human Interfacing are\nadjusted. Expert rules and intelligent\
    \ services are analysed (Edge and Fog computing proposal). Finally,\nthe installation,\
    \ maintenance and operation methods are designed. All this is designed between\
    \ user\nagricultural technician and information technologies expert.\nThe results\
    \ of this ﬁrst approach are the things required to design services and control.\
    \ A ﬁrst set\nof sensors, actuators, variables, processes and controllers are\
    \ designed considering production facility.\nThis set of objects will be considers\
    \ like things in the next stage.\nIn this description, a thing is formed by an\
    \ object/entity and a context with data associated.\nEach thing has a n-tuple\
    \ data structure (ID, time, date, location, relations, state) where ID, data,\n\
    location, relations with other things and states are deﬁned. Table 3 represents\
    \ different things.\nExpert users design control rules using the things deﬁned.\
    \ These control rules are part of control\nprocesses (climate, soil, irrigation,\
    \ crop, energy or image) that are distributed in different embedded\nsystems connected\
    \ to the network (intranet/internet). Things are a virtual representation of all\n\
    available resources that can be deployed in the different subsystems of the installation.\n\
    At this level all objects/things are recognized by designers. Basic control algorithms\
    \ of all\nsubsystems are designed.\nTable 3. Things context designed in smart\
    \ control processes.\nObject/Thing\nContext\nSensori\n(ID, time, date, location,\
    \ relations, state)\nActuatori\n(ID, time, date, location, relations, state)\n\
    Variablei\n(ID, time, date, location, relations, state)\nProcessi\n(ID, time,\
    \ date, location, relations, state)\nControlleri\n(ID, time, date, location, relations,\
    \ state)\n3.2. Integration: Architecture Development\nIn the previous phase objects\
    \ and their relationship with basic algorithms has been designed.\nAn architecture\
    \ adapted to the facility available is developed in this phase. Requirements are:\n\
    1.\nInterconnection and data access of all subsystems data\n2.\nFacilities and\
    \ resources to implement expert rules\n3.\nConﬁguration, operation and modiﬁcation\
    \ processes\nIoT and AI paradigms provide resources to propose an innovative architecture\
    \ that can be used in\nnew smart precision agriculture services. Edge computing\
    \ used on control devices and fog computing\nnodes installed on local network\
    \ provide powerful technologies to implement conﬁguration, operation\nand improvement\
    \ processes.\nIoT protocols provide resources to capture and communique all subsystems\
    \ data. Each subsystem\nis composed by objects/things (sensor/actuator) that can\
    \ be connected and processed using nodes on\nsensor networks with IoT protocols.\
    \ The requirements established for PA scenarios are:\n•\nStandard and interoperable\
    \ communication protocols to develop open and reusable applications.\nSensors\
    \ 2018, 18, 1731\n9 of 21\n•\nLow-power consumption of all devices installed improve\
    \ the establishment and development.\n•\nEasy access and maintenance. Users are\
    \ not specialized in information technologies. It is important\nto improve its\
    \ acceptability.\n•\nSupport the integration of new smart modules (modularity\
    \ and scalability software and hardware).\n•\nNon-proprietary hardware-software\
    \ to reduce dependencies.\n•\nLow cost devices selection increases the level of\
    \ penetration.\nIoT protocols are designed to work on communication scenarios\
    \ and requirements established.\nThey are optimised for control and two-way open\
    \ communication channels. In these works [39–41]\nMessage Queuing Telemetry Transport\
    \ (MQTT) protocol is proposed as communication paradigm\nbetween sensors, actuators,\
    \ communication nodes, devices and subsystems. Some of the features that\nmakes\
    \ it especially suitable for this project are:\n•\nMQTT is a publish-subscribe\
    \ messaging protocol developed for resource-constrained devices [42],\na model\
    \ already in use by enterprises worldwide, and can work with legacy systems.\n\
    •\nAll messages have a topic path composed of words separated by slashes. A common\
    \ form is\n/place/device-type/device-id/measurement-type/status. The subscribers\
    \ may use wild-cards to\nsubscribe to all measurements coming from a speciﬁc class\
    \ of device.\n•\nThe bandwidth requirements are extremely low, and the nature\
    \ of the protocol makes it\nvery energy-efﬁcient.\n•\nThe programming interface\
    \ is very simple, and the client memory footprint is small, making it\nespecially\
    \ suitable for embedded devices.\n•\nThree Quality of Service (QoS) levels provide\
    \ reliable operations [43].\nUbiquitous networks allow an n-to-m nodes communication\
    \ model. Any node is able to query\nand be queried by other nodes. In addition,\
    \ any node may play the role of a base station (skin node)\ncapable of transmitting\
    \ its information to remote processing places using a gateway device. USN local\n\
    nodes can use and process local data, with a gateway these nodes have a global\
    \ accessibility and\nthey offer extended services on an IoT scenario.\nLocal and\
    \ global access over the same node\n(sensor/device/actuator) has different possibilities\
    \ and beneﬁts. Whereas a local data processing\nis necessary in basic process\
    \ control (security, system start-stop, etc.), global processing (analytic)\n\
    can be used in pattern detection and information generation. In this sense, the\
    \ proposed platform\nuses both technologies combined: different USN over a local\
    \ network area (intranet) connected to\ncloud-IoT services (internet). A computing\
    \ layer in local area, called edge computing, will serve as\ninterface between\
    \ control processes and cloud-services. This layer will be able to process data\
    \ before\ncommunicating to cloud.\n3.3. Data Analysis: Edge and Fog Computing\
    \ Conﬁguration\nThe development of edge and fog computing can be understood in\
    \ three phases:\n•\nConnection: Numerous heterogeneous, real time connections\
    \ between terminals and devices\nwill serve edge computing, as will automatic\
    \ network deployment and operation. Additionally,\nsecurity, reliability, and\
    \ interoperability of connections should be guaranteed. An application of\nthis\
    \ phase is remote automatic soil parameters and ambient conditions data reading\n\
    •\nData treatment on edge computing devices: In this phase, data analysis and\
    \ automatic services\ndevelop new capabilities that are implemented on the new\
    \ edge nodes. Applications of this\nphase can be data ﬁltering, predictive calculation\
    \ of climatic data, classiﬁcation services or\ndetection events\n•\nServices on\
    \ fog computing nodes: Enabled by technologies such as AI and IoT communication\n\
    protocols. Fog computing nodes carries out smart analysis and computing, as well\
    \ as implementing\ndynamic, real-time self-optimization, and executing policy\
    \ adjustments. Applications of this phase\nare prediction of water consumption,\
    \ smart detection or unattended production\nSensors 2018, 18, 1731\n10 of 21\n\
    Figure 5 shows the architecture implemented using edge and fog nodes. When automated\n\
    subsystems are already installed it is necessary to interleaved embedded devices\
    \ (edge-nodes) between\ncontrollers and sensors/actuators. This devices maintain\
    \ the initial services and allow to initiate\na supervised learning process. New\
    \ algorithms are tested and approved on edge and fog nodes.\nIn Figure 6 different\
    \ services are proposed on each node.\nFigure 5. Architecture proposed on facilities\
    \ already automated: edge nodes interleaved between\ndevices already installed\
    \ and fog nodes that interconnect all subsystems.\nFigure 6. Architecture implemented:\
    \ services proposed.\nSensors 2018, 18, 1731\n11 of 21\n3.4. Test and Feedback\
    \ Developing\nIn machine learning systems the output is not ﬁxed. It will change\
    \ over time as the solution\nknows more and as the model on which the machine\
    \ learning system is built evolves as it is fed more\ndata. This forces the testing\
    \ professional to think differently and adopt test strategies that are very\n\
    different from traditional testing techniques. To test machine learning systems\
    \ is essential:\n1.\nObtaining data sets: This refers to a data set with main\
    \ variables captured and stored to analyse\nand design the model. In irrigation\
    \ process data set are: irrigation programming used (time and\nﬂow), ambient conditions\
    \ (humidity, temperature) and soil conditions (humidity, temperature,\npH and\
    \ conductivity) captured by sensors. All this data are monitored and stored.\n\
    2.\nTraining data sets: This refers to a data set used for training the model.\
    \ It is a subset of the\nprevious dataset. In irrigation process training data\
    \ set are: irrigation programming automated\nby the model (time and ﬂow decision)\
    \ considering ambient conditions (soil, ambient and crop).\nThis data is usually\
    \ prepared by collecting data in a semi-automated way. The results of this\nprocess\
    \ are validated with agronomists.\n3.\nTesting data sets: It is a dataset used\
    \ to to measure the model quality.\n4.\nValidation test suites on real scenarios.\
    \ Taking the irrigation example, test scenarios include\ncategorizing needs of\
    \ water for a kind of crop considering climatic conditions and its growth\nphase.\
    \ Automated irrigation decisions by the model are analysed in this phase.\n5.\n\
    Building validation suites. It is necessary to understand the algorithm. The model\
    \ has algorithm\nthat analyse the data provided, looks for speciﬁc patterns, and\
    \ uses the results of this analysis\nto develop optimal parameters for creating\
    \ the model. The model is reﬁned as the number of\niterations and the richness\
    \ of the data increase.\n6.\nCommunicating test results in statistical terms.\
    \ Models based on machine learning algorithms\nwill produce approximations and\
    \ not exact results. Quality of results must be analysed in the\nsame context.\
    \ The testing community will need to determine the level of conﬁdence within a\n\
    certain range.\n7.\nModel evolution. Support to develop new AI services or modiﬁcations\
    \ on algorithms\nimplemented. Supervised and automatic changes are processes to\
    \ maintain the operating models.\n3.5. Comparison with Industrial Facilities.\
    \ Novelty Elements Proposed\nCurrently, industrial facilities that use PA technologies\
    \ are based on integration of internet and web\nservices with automation and control\
    \ using industrial technology. Proprietary systems are designed for\nmonitoring\
    \ large production plants. Related work analysed show that the Agriculture Control\
    \ system\nfor production, irrigation, or climate proposes different monitoring\
    \ and control technologies, based on\nwireless sensor network and industrial control.\
    \ Monitoring systems analyse crop environment and the\nmethod to improve the decision\
    \ making by analysing statistics and reactive algorithms. This work\nproposes\
    \ two main novelty elements: optimization of architecture levels integration of\
    \ edge and fog\nlayers and proposes the integration the farmer in the design of\
    \ new improvements using data analysis\nobtained with the new architecture developed.\n\
    4. Experimental Work\nDifferent agricultural facilities have been analysed to\
    \ introduce the method proposed. Three kind\nof installations summarize the different\
    \ types:\n•\nInstallation automated but subsystems not interoperable\n•\nPartial\
    \ automation without any interconnection and non-interoperable systems\n•\nManual\
    \ control\nIn all of them, the services based on AI are not yet installed. In\
    \ this context, the method proposed\nusing edge-computing on basic controllers\
    \ and fog-computing on gateway nodes can design common\nSensors 2018, 18, 1731\n\
    12 of 21\nservices for the three types of facilities cited. With this conﬁguration,\
    \ subsystems interoperability and\nAI support are achieved. Control signals of\
    \ already installed controllers in automated installations\nbecome inputs to edge\
    \ nodes and a fog node which acts as an interface for all facility nodes. In all\n\
    greenhouses, irrigation and internal environment control are basic processes.\
    \ Agronomist users know\nhow to program reactive controls and how to conﬁgure\
    \ automated devices. Optimization of these\nresources (water, energy) are two\
    \ potential services that agronomist perform through their experience.\nThis knowledge\
    \ can be transferred to intelligent systems that integrate it through techniques\
    \ based on\nAI paradigms. Interconnection of subsystems also are one of the proposed\
    \ improvement. A deployment\nfor an automated installation is designed and implemented.\
    \ This case shows how to implement\nwhen there are already automated installations.\
    \ This case also serves as a guide for other types of\ngreenhouse installations.\n\
    4.1. Analysis\nThe farmer, together with the technician in information technologies,\
    \ propose a set\nof improvements:\n•\nMonitoring and control interfaces on the\
    \ Internet (control and communication services)\n•\nEvent and change communication\
    \ service (communication services)\n•\nInterconnection of irrigation and air conditioning\
    \ subsystems (interoperability services)\n•\nIntegration of automation to optimize\
    \ water consumption (AI services)\nThe work carried out designs an installation\
    \ that deploy the necessary hardware and software\nresources using the proposed\
    \ method Figure (Figure 7) shows agricultural subsystems and model\ndeployed on\
    \ distributed nodes.\nFigure 7. Greenhouse design. Fog and edge nodes relations\
    \ on agriculture subsystems.\nIntelligent irrigation control is installed in an\
    \ experimental greenhouse based on tomato\nhydroponic cultivation (Table 4). Following\
    \ the proposed method, the experimental phases are:\nSensors 2018, 18, 1731\n\
    13 of 21\n1.\nThings, communication and context design: objects (things) and its\
    \ context are detected and\nrelated using IoT protocols and services (user-centred,\
    \ architecture and IoT protocols design)\n2.\nHardware devices and software modules:\
    \ edge and fog nodes with the services that will be\nimplemented are proposed\
    \ (integration and AI services)\n3.\nInstalling: how the model is tested and deployed\
    \ (testing process)\nTable 4. Growth crop process on experimental station. Tomato\
    \ plant growth stages.\nIrrigation actual (Total liters) = 5 L/m2 (initial phase)\n\
    Average Temperature = 20 ◦C\nEnergy used = 60 Wh/m2/day\nAverage water PH = 6.5\n\
    Solar irradiance = 4 kWh/m2/day (NASA HOMER web)\nAverage water EC = 2850 µS/cm\n\
    Example of new service designed by user: Decision Tree to reduce water consumption\n\
    Solutions\nTechnological results\nDevelop a reference model based on distributed\
    \ IoT paradigms\nNew PA processes automated\nGraphics Interfaces use simple and\
    \ universal access\nTools, facilities and resources adapted for agronomist\nGUI\
    \ interfaces used on Internet\nNew ways of data access and Low-cost deployment\n\
    Users design DECISION TREE to optimize water consumption\n4.2. Design: Things,\
    \ Communication and Context\nIrrigation process, soil parameters, environmental\
    \ conditions inside and outside the greenhouse\nand energy consumption deﬁne objects\
    \ and context. Sensors, actuators and processes and their\nrelationship (context)\
    \ are shown in Table 5. Context vector are (ID, time, date, GH1, relations, state)\
    \ for\neach object/thing, where GH1 is the location ID of greenhouse.\nAll objects\
    \ are interoperable using MQTT protocol. Publisher and subscriber communication\n\
    model that implement this protocol allows interconnect all devices and things.\
    \ Broker device are\ninstalled on fog node. Publishers and subscribers are implemented\
    \ on different nodes.\n4.3. Hardware Devices and Software Modules\nTwo edge nodes\
    \ and one fog node are proposed to control climate and irrigation processes.\n\
    Objects (things) and processes are deployed on all nodes. Irrigation and climate\
    \ control are installed\nin edge nodes, AI services are implemented in fog node.\
    \ Process control architecture is used in\nthe ﬁrst node type (edge) and data-centred\
    \ architecture is used in the second node type (fog) and\nin the cloud services\
    \ implemented. In edge node the ﬂow of data comes from a set of variables\n(things\
    \ and internal variables) which control the processes execution. Agronomist and\
    \ expert users\ndesigns basic control algorithms. After learning and training\
    \ process, these algorithms will be adjusted\nand modiﬁed following the results\
    \ of the expert system (machine learning). The aim is to optimize\nresources (water,\
    \ energy) without losing productivity. Two main control processes are executed\
    \ in\ntwo edge nodes and one machine learning process is implemented in a fog\
    \ node. Table 5 shows these\nprocesses and their relationship. Algorithms are\
    \ implemented in Python and developed using open\nsource criteria. Minimal hardware\
    \ embedded devices requirements are shown in Table 6.\nSensors 2018, 18, 1731\n\
    14 of 21\nTable 5. Things context identiﬁed in experimental greenhouse.\nObject/Thing\n\
    Context\nType\nRelation\nSoiltemp\n(ID1, time, date, GH1, ◦C)\ninput\nID16, ID17\n\
    Soilmoisture\n(ID2, time, date, GH1, %)\ninput\nID16, ID17\nSoilPH\n(ID3, time,\
    \ date, GH1, int)\ninput\nID16\nSoilEC\n(ID4, time, date, GH1, µS/cm2)\ninput\n\
    ID16\nWatertemp\n(ID5, time, date, GH1, ◦C)\ninput\nID16\nWaterPH\n(ID6, time,\
    \ date, GH1, int)\ninput\nID16\nWaterEC\n(ID7, time, date, GH1, µS/cm2)\ninput\n\
    ID16\nInsidetemp\n(ID8, time, date, GH1, ◦C)\ninput\nID17\nInsidehum\n(ID9, time,\
    \ date, GH1, %)\ninput\nID17\nInsidelum\n(ID10, time, date, GH1, lux)\ninput\n\
    ID17\nOutsidetemp\n(ID11, time, date, GH1, ◦C)\ninput\nID17\nOutsidehum\n(ID12,\
    \ time, date, GH1, %)\ninput\nID17\nOutsidewind\n(ID12, time, date, GH1, m/s)\n\
    input\nID17\nEvalvewater1\n(ID13, time, date, GH1, ON-OFF)\noutput\nID16, ID17\n\
    Evalvewater2\n(ID14, time, date, GH1, ON-OFF)\noutput\nID16, ID17\nEpumpwater\n\
    (ID15, time, date, GH1, ON-OFF)\noutput\nID16, ID17\nP_Irrigation1\n(ID16, time,\
    \ date, edgenode1, [Ev1, Ev2, Ev3])\nprocess\nID17\nP_Air_cond1\n(ID17, time,\
    \ date, edgenode2, [M1, M2])\nprocess\nID16\nPredictionweather\n(ID18, time, date,\
    \ GH1, [Water, Energy])\ninput\nID16, ID17, ID19\nForecastweather\n(ID19, time,\
    \ date, GH1, [Tem, Hum, Wind])\ninput\nID16, ID17, ID18\nEnergymeter\n(ID20, time,\
    \ date, GH1, [powermeasured, powerpredicted])\ninput\nID16, ID17\nHMIweb\n(ID21,\
    \ time, date, webserver, [I/O])\ninterface\n[ID1, ..., ID20])\nP_Machine_Learning\n\
    (ID22, time, date, f og_node, [management, supervision])\nprocess\n[ID1, ...,\
    \ ID20])\nWaterf low\n(ID4, time, date, GH1, m3/h)\ninput\nID16\nTable 6. Minimal\
    \ hardware requirements of edge and fog nodes.\nRequirement\nMinimal Resources\n\
    Node Type\nProcessor\nmulti_core ≥ 1000 MHz\nfog\nProcessor\ncore ≥ 700 MHz\n\
    edge\nVideo\nGPU ≥ 400 MHz\nedge\nStorage\npermanent ≥ 1 GB\nfog\nStorage\npermanent\
    \ ≥ 600 MB\nedge\nCommunicationports\nUSB 2.0, ethernet, WIFI\nedge and fog\n\
    Communicationprotocols\nserial, tcp/ip\nedge and fog\nGPIOports\nportI/O\nedge\n\
    Operating System\nLinux, Windows, OSx, Android, others\nedge and fog\nProgramming\n\
    C, C + +, Python\nedge\nProgramming\nC, C + +, Python, web\nfog\n4.4. Installing\
    \ and Testing\nIn facilities already automated, edge nodes are interleaved between\
    \ the installed controllers\nand actual sensors and actuators. Some new sensors\
    \ are installed to complete services designed\n(energy meter). In current facilities\
    \ edge nodes are deployed and allows:\n•\nWork in the same way as before (initial\
    \ learning stage, analysis and model selection).\n•\nChange to a new control using\
    \ new expert and automatic rules using AI processes (supervised stage\nand training)\n\
    •\nTest and reconﬁgure expert rules (testing and maintenance)\nFigure 8 shows\
    \ an edge node to irrigation control and how is deployed in the experimental\n\
    greenhouse built in this work, without previous installation. Agronomists and\
    \ farmers preferences are\nSensors 2018, 18, 1731\n15 of 21\nthose that drive\
    \ the design: interfaces, maintain and optimize control processes. In irrigation\
    \ process a\ntime schedule with the selected flow rate is programmed by the user\
    \ according to the period of crop\ngrowth. In learning stage, edge node captures\
    \ the data and sends it to the fog node. Fog node process\ndiary water uses, ambient\
    \ and soil conditions, type of crop and its growth. Using these data crop\ntype\
    \ is classified. Crop production results are added as data to analyse it together\
    \ with the stored ones.\nProduction, water consumption, crop growing stage, time,\
    \ date, soil parameters, current weather, forecast\nweather and ambient green\
    \ house conditions are captured as inputs to machine learning platform.\n(a) Hardware\
    \ device\n(b) Software processes\nFigure 8. Hardware and software deployed on\
    \ experimental greenhouse edge node.\nIn future crop productions the irrigation\
    \ schedule can be automated, first with human supervision\nand then automated.\
    \ Biophysical variables (plant, soil, canal flow, and weather conditions) that\
    \ are\nmeasured during the growing seasons are used as inputs to build the models.\
    \ Information about\ncrop phenology (growth stages), soil moisture, and weather\
    \ variables will be compiled. The analysis\nof irrigation decisions is important\
    \ because this can help in the estimation of short-term irrigation\ndemands. If\
    \ the automated process decisions are known, It can help canal operators to better\
    \ manage\nwater deliveries and avoid unexpected delays and operational conditions\
    \ that increase canal losses.\nInformation about these demands can also be helpful\
    \ for the evaluation of expected future agricultural\nsupplies. It can never be\
    \ possible to know the exact reasons why a farmer decided to irrigate, all farmers\n\
    are different and prefer their own decision processes. Data analysis with farmer\
    \ in in its own installation\ninfer automated farmer actions. This data is used\
    \ to build the models and these learnt frameworks will\nbe used to predict irrigation\
    \ decisions. The specific objectives planned with farmer are:\n1.\nIdentify the\
    \ main variables contributing to an irrigation behaviour by training the models\
    \ with\nrelevant data\n2.\nGroup the irrigation decisions into distinct classes\n\
    3.\nIdentify the decisions taken\n4.\nDetect the patterns in farmer decisions\n\
    5.\nInfer future irrigation decisions using the information and modelling tools.\
    \ Design decision tree\nalgorithms to reduce water consumption\nFog Computing\
    \ node is shown in Figure 9. This paradigm extends the Cloud Computing to the\n\
    edge of the network, thus enabling a new breed of applications and services. Deﬁning\
    \ characteristics\nof the Fog are: (a) Low latency and location awareness; (b)\
    \ Wide-spread geographical distribution;\n(c) Mobility; (d) Very large number\
    \ of nodes; (e) Predominant role of wireless access; (f) Strong presence\nof streaming\
    \ and real time applications; (g) Heterogeneity [44].\nSensors 2018, 18, 1731\n\
    16 of 21\nIn this paper, fog node is used to carry out the machine learning processes,\
    \ storage data and\ncommunicate with cloud services (monitoring interfaces). Figures\
    \ 10 and 11 and shows different\nvariables (soil moisture, soil temperature and\
    \ conductivity means) that farmer decide to use in\nirrigation control to design\
    \ new rules to optimize production. Before, control irrigation was controlled\n\
    only by a time schedule. Now, it takes into account data sensors to decide if\
    \ watering and growth\ncontrol can be optimized with decision trees.\nFigure 9.\
    \ Communication and processes on edge and fog nodes.\nFigure 10. Decision Tree\
    \ developed on irrigation control designed by agronomist and integrated on\nedge\
    \ node. This decision tree aims to optimize water consumption.\nThis new rule\
    \ is designed by\nfarmer observing the evolution of the data during the plant\
    \ growth.\nSensors 2018, 18, 1731\n17 of 21\nFigure 11. Decision Tree on irrigation\
    \ control designed by agronomist and integrated on edge node.\nThis decision tree\
    \ aims to optimize plant growth control. This new rule is designed by farmer observing\n\
    the evolution of the data during the plant growth.\nCloud services designed are\
    \ monitoring data accessed through a Human Machine Interface (HMI).\nIoT platforms\
    \ push data from any Internet-Enabled Device and prompt them to quickly get\n\
    started.\nSimilar platforms with similar services show the state of commercial\
    \ IoT technology:\nAzure [45], Ubidots [46], Thingspeak [47], are some examples\
    \ of companies that provide IoT\nservices. These platforms are built with similar\
    \ architectures and provide, usually, the same resources:\nApplication Programming\
    \ Interface (API) communication between clients and IoT server.\nAll these platforms\
    \ provide dashboard designs to monitor data using HMI formats pre-built.\nUsing\
    \ API services, processes in fog node are implemented to send new data to each\
    \ dashboard.\nThe API Documentation speciﬁes the structure of the data that is\
    \ exchanged between your devices and\nthe Ubidots and Mobile-Alerts Cloud, along\
    \ with code examples and libraries to speed up the project.\nFigure 12 shows a\
    \ dashboard (interface HMI) designed by users on Ubidots cloud platform. The system\n\
    can use standard protocols in the different layers and platforms that implement\
    \ these protocols.\nSensors 2018, 18, 1731\n18 of 21\nFigure 12. Dashboards designed\
    \ for irrigation programming and monitoring.\n5. Conclusions and Future Work\n\
    In this work the state-of-the-art of PA and IoT technologies in agricultural scenarios,\
    \ have been\nanalysed. PA presents difﬁculties to be implemented by farmers. These\
    \ include cultural perception,\nlack of local technical expertise, infrastructure\
    \ constraints, knowledge and technical gaps and high\nstart-up costs. Farmers\
    \ must be involved in the design and integration of these technologies in their\n\
    facilities. To carry out this solution there must be methods to facilitate such\
    \ integration. This work\nproposes a new method to integrate the farmer in the\
    \ development of new solutions using low cost\nsensing technologies and innovative\
    \ communication paradigms. An architecture based on two new\nlevels of communication\
    \ and processing nodes (edge and fog nodes) form the technological core\nof the\
    \ proposed method. Each level performs a set of interconnected functionalities.\
    \ The proposed\ninfrastructure can be installed either in already automated installations\
    \ or in the design of new facilities.\nIn the already automated installations,\
    \ the method introduces new possibilities for the development of\nintelligent\
    \ and interconnected control. An experimental work has been carried out in a greenhouse.\n\
    In this work, communication nodes have been installed and a new service based\
    \ on a decision tree\nparadigm has been designed by expert user. The facilities\
    \ that use the proposed model make the\nclimate control and irrigation subsystems\
    \ interoperable and allow the farmer to design new integrated\ncontrol rules.\
    \ The new distributed communication model allows the farmer to analyse changes\
    \ and\nimprovements. This experimental work initiates a new methodology of work\
    \ for the farmer who can\nuse these new technologies more easily. Future control\
    \ rules and services using a machine learning\nplatform and AI paradigms will\
    \ allow to optimize and improve the results.\nAuthor Contributions: F.J.F.-P.\
    \ and J.M.G.-C. performed the analysis. Model design was proposed by F.J.F.-P.\
    \ and\nM.N.-H. Experimental work on IoT was implemented by M.N.-H. and F.J.F.-P.,\
    \ experimental work on greenhouse\ncrop growing was developed by J.M.-M.\nFunding:\
    \ This research was supported by Industrial Computers and Computer Networks program\
    \ (I2RC)\n(2016/2017) funded by the University of Alicante.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nSensors 2018, 18, 1731\n19 of 21\n\
    Abbreviations\nThe following abbreviations are used in this manuscript:\nAI\n\
    Artiﬁcial Intelligence\nAPI\nApplication Programming Interface\nHMI\nHuman Machine\
    \ Interface\nIAB\nInternet Architecture Board\nIETF\nInternet Engineering Task\
    \ Force\nIoT\nInternet of Things\nISO\nInternational Organization for Standardization\n\
    ISOC\nInternet Society\nMQTT\nMessage Queuing Telemetry Transport\nPA\nPrecision\
    \ Agriculture\nQoS\nQuality of Service\nRFC\nRequest for Comments\nUCD\nUser Centred\
    \ Design\nUX\nUser Experience\nReferences\n1.\nFerrandez-Pastor, F.J.; Garcia-Chamizo,\
    \ J.M.; Nieto-Hidalgo, M.; Mora-Martinez, J. User-Centered Design of\nAgriculture\
    \ Automation Systems Using Internet of Things Paradigm. In Proceedings of the\
    \ UCAmI 2017:\nUbiquitous Computing and Ambient Intelligence, Philadelphia, PA,\
    \ USA, 7–10 November 2017; pp. 56–66.\n2.\nGebbers, R.; Adamchuk, V.I. Precision\
    \ Agriculture and Food Security. Science 2010, 327, 828–831. [CrossRef]\n[PubMed]\n\
    3.\nEuropean-Parliament. Precision Agriculture: An Opportunity for EU Farmers—Potential\
    \ Support with the\nCAP 2014-2020. 2014. Available online: http://www.europarl.europa.eu/RegData/etudes/note/join/2014/\n\
    529049/IPOL-AGRI_NT%282014%29529049_EN.pdf (accessed on 16 April 2018).\n4.\n\
    Lowdermilk, T. What is centered-user design? In User-Centered Design. A Developer’s\
    \ Guide to Building\nUser-Friendly Applications; O’Reilly Media: Sebastopol, CA,\
    \ USA, 2013; pp. 13–15.\n5.\nFoundation, I.D. What Is User Centred Design? 2015.\
    \ Available online: https://www.interaction-design.\norg/literature/topics/user-centered-design\
    \ (accessed on 16 April 2018).\n6.\nTeoh, C. User-Centred Design (UCD)—6 Methods.\
    \ 2009. Available online: http://www.webcredible.com/\nblog/user-centered-design-ucd-6-methods/\
    \ (accessed on 16 April 2018).\n7.\nYang, Z.; Yue, Y.; Yang, Y.; Peng, Y.; Wang,\
    \ X.; Liu, W. Study and application on the architecture and\nkey technologies\
    \ for IOT. In Proceedings of the 2011 International Conference on Multimedia Technology,\n\
    Hangzhou, China, 26–28 July 2011; pp. 747–751.\n8.\nWu, M.; Lu, T.J.; Ling, F.Y.;\
    \ Sun, J.; Du, H.Y. Research on the architecture of Internet of Things. In Proceedings\n\
    of the 2010 3rd International Conference on Advanced Computer Theory and Engineering\
    \ (ICACTE),\nChengdu, China, 20–22 August 2010; Volume 5, pp. V5-484–V5-487.\n\
    9.\nFerrandez-Pastor, F.J.; Garcia-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Pascual,\
    \ J.; Mora-Martinez, J.\nDeveloping Ubiquitous Sensor Network Platform Using Internet\
    \ of Things: Application in Precision\nAgriculture. Sensors 2016, 16, 1141. [CrossRef]\
    \ [PubMed]\n10.\nKhan, R.; Khan, S.U.; Zaheer, R.; Khan, S. Future Internet: The\
    \ Internet of Things Architecture, Possible\nApplications and Key Challenges.\
    \ In Proceedings of the 2012 10th International Conference on Frontiers of\nInformation\
    \ Technology, Islamabad, Pakistan, 17–19 December 2012; pp. 257–260.\n11.\nAl-Sarawi,\
    \ S.; Anbar, M.; Alieyan, K.; Alzubaidi, M. Internet of Things (IoT) communication\
    \ protocols:\nReview. In Proceedings of the 2017 8th International Conference\
    \ on Information Technology (ICIT), Singapore,\n27–29 December 2017; pp. 685–690.\n\
    12.\nHe ¯di, I.; Špeh, I.; Šarabok, A. IoT network protocols comparison for the\
    \ purpose of IoT constrained networks.\nIn Proceedings of the 2017 40th International\
    \ Convention on Information and Communication Technology,\nElectronics and Microelectronics\
    \ (MIPRO), Opatija, Croatia, 22–26 May 2017; pp. 501–505.\nSensors 2018, 18, 1731\n\
    20 of 21\n13.\nYassein, M.B.; Shatnawi, M.Q.; Al-zoubi, D. Application layer protocols\
    \ for the Internet of Things: A survey.\nIn Proceedings of the 2016 International\
    \ Conference on Engineering MIS (ICEMIS), Agadir, Morocco,\n22–24 September 2016;\
    \ pp. 1–4.\n14.\nIoT-Now-Mag. The Industrial Internet: Towards the 4th Industrial\
    \ Revolution. 2016. Available online: https:\n//www.iot-now.com/2016/10/20/53811-the-industrial-internet-towards-the-4th-industrial-revolution\n\
    (accessed on 16 April 2018).\n15.\nHortelano, D.; Olivares, T.; Ruiz, M.C.; Garrido-Hidalgo,\
    \ C.; Lopez, V. From Sensor Networks to Internet of\nThings. Bluetooth Low Energy,\
    \ a Standard for This Evolution. Sensors 2017, 17, 372. [CrossRef] [PubMed]\n\
    16.\nChen, Y.; Lee, G.M.; Shu, L.; Crespi, N. Industrial Internet of Things-Based\
    \ Collaborative Sensing Intelligence:\nFramework and Research Challenges. Sensors\
    \ 2016, 16, 215. [CrossRef] [PubMed]\n17.\nBaños-Gonzalez, V.; Afaqui, M.S.; Lopez-Aguilera,\
    \ E.; Garcia-Villegas, E. IEEE 802.11ah: A Technology to\nFace the IoT Challenge.\
    \ Sensors 2016, 16, 1960. [CrossRef] [PubMed]\n18.\nOrsino, A.; Araniti, G.; Militano,\
    \ L.; Alonso-Zarate, J.; Molinaro, A.; Iera, A. Energy Efﬁcient IoT Data\nCollection\
    \ in Smart Cities Exploiting D2D Communications. Sensors 2016, 16, 836. [CrossRef]\
    \ [PubMed]\n19.\nChoi, H.S.; Rhee, W.S. IoT-Based User-Driven Service Modeling\
    \ Environment for a Smart Space Management\nSystem. Sensors 2014, 14, 22039–22064.\
    \ [CrossRef] [PubMed]\n20.\nIlchev, S.; Ilcheva, Z. Internet-of-Things Communication\
    \ Protocol for Low-Cost Devices in Heterogeneous\nWireless Networks.\nIn Proceedings\
    \ of the 18th International Conference on Computer Systems and\nTechnologies,\
    \ Ruse, Bulgaria, 23–24 June 2017; pp. 272–279.\n21.\nSivanathan, A.; Sherratt,\
    \ D.; Gharakheili, H.H.; Sivaraman, V.; Vishwanath, A. Low-cost ﬂow-based security\n\
    solutions for smart-home IoT devices. In Proceedings of the 2016 IEEE International\
    \ Conference on Advanced\nNetworks and Telecommunications Systems (ANTS), Bangalore,\
    \ India, 6–9 November 2016; pp. 1–6.\n22.\nNew-Electronics-Site. Low Cost Sensors\
    \ Will Help the IoT to Be Realised. 2017. Available online:\nhttp://www.newelectronics.co.uk/electronics-technology/low-cost-sensors-will-help-the-iot-to-be-\n\
    realised/166151/ (accessed on 16 April 2018).\n23.\nCercas, F.; Souto, N.M.B.\
    \ Comparison of communication protocols for low cost Internet of Things devices.\n\
    In Proceedings of the 2017 South Eastern European Design Automation, Computer\
    \ Engineering, Computer\nNetworks and Social Media Conference (SEEDA-CECNSM),\
    \ Kastoria, Greece, 25–27 September 2017; pp. 1–6.\n24.\nTech-Target. IoT as a\
    \ Solution for Precision Farming. 2017. Available online: http://internetofthingsagenda.\n\
    techtarget.com/blog/IoT-Agenda/IoT-as-a-solution-for-precision-farming (accessed\
    \ on 16 April 2018).\n25.\nJayaraman, P.P.; Yavari, A.; Georgakopoulos, D.; Morshed,\
    \ A.; Zaslavsky, A. Internet of Things Platform for\nSmart Farming: Experiences\
    \ and Lessons Learnt. Sensors 2016, 16, 884. [CrossRef] [PubMed]\n26.\nZhang,\
    \ X.; Zhang, J.; Li, L.; Zhang, Y.; Yang, G. Monitoring Citrus Soil Moisture and\
    \ Nutrients Using an IoT\nBased System. Sensors 2017, 17, 447. [CrossRef] [PubMed]\n\
    27.\nWolfert, S.; Ge, L.; Verdouw, C.; Bogaardt, M.J. Big Data in Smart Farming—A\
    \ review. Agric. Syst. 2017,\n153, 69–80. [CrossRef]\n28.\nMalche, T.; Maheshwary,\
    \ P. Internet of Things (IoT) Based Water Level Monitoring System for Smart Village.\n\
    In Proceedings of International Conference on Communication and Networks; Modi,\
    \ N., Verma, P., Trivedi, B., Eds.;\nSpringer: Singapore, 2017; pp. 305–312.\n\
    29.\nJohn-Deere. How the IoT Is Creating ‘Precision Farming’. 2018. Available\
    \ online: http://precisionagricultu.\nre/how-the-iot-is-creating-precision-farming-2/\
    \ (accessed on 16 April 2018).\n30.\nIBM. IBM Research Precision Agriculture.\n\
    2018. Available online:\nhttps://www.ibm.com/us-en/\nmarketplace/agri-resrch-innov\
    \ (accessed on 16 April 2018).\n31.\nMotorleaf.\nIntelligence Powered Indoor Cultivation.\
    \ 2018.\nAvailable online: http://motorleaf.com\n(accessed on 16 April 2018).\n\
    32.\nBiomax.\nAgriculture IoT System. 2018.\nAvailable online: http://www.biomax.com.tw/en/product/\n\
    Agriculture-IoT-System/agriculture_iot_system.html (accessed on 16 April 2018).\n\
    33.\nGupta, H.; Dastjerdi, A.V.; Ghosh, S.K.; Buyya, R. iFogSim: A Toolkit for\
    \ Modeling and Simulation of\nResource Management Techniques in Internet of Things,\
    \ Edge and Fog Computing Environments. arXiv\n2016, arXiv:1606.02007. [CrossRef]\n\
    34.\nShi, W.; Dustdar, S. The Promise of Edge Computing. Computer 2016, 49, 78–81.\
    \ [CrossRef]\n35.\nHao, Z.; Novak, E.; Yi, S.; Li, Q.\nChallenges and Software\
    \ Architecture for Fog Computing.\nIEEE Internet Comput. 2017, 21, 44–53. [CrossRef]\n\
    Sensors 2018, 18, 1731\n21 of 21\n36.\nDastjerdi, A.V.; Buyya, R. Fog Computing:\
    \ Helping the Internet of Things Realize Its Potential. Computer\n2016, 49, 112–116.\
    \ [CrossRef]\n37.\nMa, X.; Liang, J.; Liu, R.; Ni, W.; Li, Y.; Li, R.; Ma, W.;\
    \ Qi, C. A Survey on Data Storage and Information\nDiscovery in the WSANs-Based\
    \ Edge Computing Systems. Sensors 2018, 18, 546. [CrossRef] [PubMed]\n38.\nChen,\
    \ Y.S.; Tsai, Y.T. A Mobility Management Using Follow-Me Cloud-Cloudlet in Fog-Computing-Based\n\
    RANs for Smart Cities. Sensors 2018, 18, 489. [CrossRef] [PubMed]\n39.\nDavis,\
    \ E.G.; Calveras, A.; Demirkol, I. Improving Packet Delivery Performance of Publish/Subscribe\n\
    Protocols in Wireless Sensor Networks. Sensors 2013, 13, 648–680. [CrossRef] [PubMed]\n\
    40.\nAlvarez-Campana, M.; López, G.; Vázquez, E.; Villagrá, V.A.; Berrocal, J.\
    \ Smart CEI Moncloa: An IoT-based\nPlatform for People Flow and Environmental\
    \ Monitoring on a Smart University Campus. Sensors 2017,\n17, 2856. [CrossRef]\
    \ [PubMed]\n41.\nAtmoko, R.A.; Riantini, R.; Hasin, M.K. IoT real time data acquisition\
    \ using MQTT protocol. J. Phys. Conf. Ser.\n2017, 853, 012003. [CrossRef]\n42.\n\
    MQTT-org. MQTT Protocol. 2018. Available online: https://www.mqtt.org (accessed\
    \ on 16 April 2018).\n43.\nMQTT. MQTT Essentials Part 6: Quality of Service. 2018.\
    \ Available online: https://www.hivemq.com/\nblog/mqtt-essentials-part-6-mqtt-quality-of-service-levels\
    \ (accessed on 16 April 2018).\n44.\nBonomi, F.; Milito, R.A.; Zhu, J.; Addepalli,\
    \ S.\nFog computing and its role in the internet of things.\nIn Proceedings of\
    \ the First Edition of the MCC Workshop on Mobile Cloud Computing, Helsinki, Finland,\n\
    17 August 2012.\n45.\nMicrosoft. Connect, Monitor, and Manage Billions of IoT\
    \ Assets. 2018. Available online: https://azure.\nmicrosoft.com/en-us/services/iot-hub/\
    \ (accessed on 16 April 2018).\n46.\nUbidots. Data Drives Decision. 2018. Available\
    \ online: https://ubidots.com/ (accessed on 16 April 2018).\n47.\nThingspeak.\
    \ Understand Your Things. 2018. Available online: https://thingspeak.com/ (accessed\
    \ on\n16 April 2018).\nc⃝ 2018 by the authors. Licensee MDPI, Basel, Switzerland.\
    \ This article is an open access\narticle distributed under the terms and conditions\
    \ of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/18/6/1731/pdf?version=1527488897
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Precision Agriculture Design Method Using a Distributed Computing Architecture
    on Internet of Things Context
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2022/8011525
  analysis: '>'
  authors:
  - Adil El Mane
  - Younes Chihab
  - Khalid Tatane
  - Redouan Korchiyne
  citation_count: 2
  full_citation: '>'
  full_text: ">\nResearch Article\nAgriculture Supply Chain Management Based on Blockchain\n\
    Architecture and Smart Contracts\nAdil El Mane\n,1 Younes Chihab\n,1 Khalid Tatane,2\
    \ and Redouan Korchiyne\n1\n1Computer Research Laboratory, Superior School of\
    \ Technology, Ibn Toufail University, Kenitra 14000, Morocco\n2Computer Science,\
    \ Mathematics and Applications Laboratory, Institute of National School of Applied\
    \ Sciences,\nIbn Zohr University, Agadir 80000, Morocco\nCorrespondence should\
    \ be addressed to Adil El Mane; adil.elmane@uit.ac.ma\nReceived 7 July 2022; Revised\
    \ 23 September 2022; Accepted 30 September 2022; Published 21 October 2022\nAcademic\
    \ Editor: Imran Ashraf\nCopyright © 2022 Adil El Mane et al. Tis is an open access\
    \ article distributed under the Creative Commons Attribution License,\nwhich permits\
    \ unrestricted use, distribution, and reproduction in any medium, provided the\
    \ original work is properly cited.\nSince the commercialization of agriculture\
    \ technology, there has been a surge in interest in agricultural data. However,\
    \ these\ndata are notoriously chaotic, and analysts are concerned about their\
    \ authenticity because there is a big possibility that others\nmay have infuenced\
    \ data quality at various points along the data stream. Tis article suggests a\
    \ new blockchain architecture to\nprotect the integrity of agricultural data.\
    \ Te goal of this architecture is to provide farmers with safe storage. Te agriculture\n\
    data inserted cannot be modifed without some rules. Many procedures are completed\
    \ automatically using smart contracts to\nlimit the danger of manipulation. One\
    \ of the suggested architectures is the proof of concept. It connects a traditional\
    \ farm\nsystem with the blockchain accompanied by smart contracts to facilitate\
    \ the entire agri-supply chain. Te conceptual ar-\nchitecture will eliminate the\
    \ faws discovered in prior studies. Sensors are used in this approach to provide\
    \ us with envi-\nronmental data. As a result, we store our data in blocks using\
    \ the blockchain system. Ten, we built some unique agricultural\nsmart contracts\
    \ to handle all transactions and automatize decisions based on the source code\
    \ of these automated contracts. Tis\nstrategy would be more efcient and secure.\n\
    1. Introduction\nAgriculture is a big part of the economy of any country because\n\
    it helps feed the entire population. It connects and commu-\nnicates with all\
    \ of the related industries. If the agriculture base is\nstrong, it is generally\
    \ regarded as a socially and politically stable\nsociety. Many modern farms make\
    \ use of cutting-edge tech-\nnology and scientifc and technological ideas [1].\n\
    Te following are some of the reasons for food supply\nchain problems and processing\
    \ environment challenges.\nTe maximization of the profts relies on some farmers’\n\
    vegetables and fruits with chemicals. Chemical fertilizers,\ninsecticides, and\
    \ other compounds are used in several plants\nand fruits.\nAs a result, pesticide\
    \ residues in vegetables and fruits\nbecome excessive. It is a signifcant health\
    \ risk.\nFood gets contaminated with heavy metals. Te irriga-\ntion water source\
    \ of crops is polluted by the excessive\nintrusion of heavy metal elements such\
    \ as lead, tin, mercury,\nand zinc, which are dangerous to human health.\nFood\
    \ additives are used excessively in food processing.\nSome nefarious enterprises\
    \ use excessive food additives,\nantibiotics, hormones, and harmful substances\
    \ [2].\nTe following are some of the most common blockchain\napplications [1]:\n\
    (i) Agribusiness insurance.\n(ii) Smart farming.\n(iii) Traceability.\n(iv) Land\
    \ registration.\n(v) Food supply chain.\n(vi) Security and safety farms.\n(vii)\
    \ Agricultural product e-commerce.\nAs a formal defnition, the blockchain is a\
    \ distributed\nledger to share transactions or sensitive data across\nHindawi\n\
    Applied Computational Intelligence and So Computing\nVolume 2022, Article ID\
    \ 8011525, 23 pages\nhttps://doi.org/10.1155/2022/8011525\nuntrusted multiple\
    \ stockholders in a decentralized network.\nTe data are recorded in a sequential\
    \ chain of hash-linked\nblocks that facilitate the data distribution to be more\n\
    manageable than other traditional data storage formats. Te\nblocks are veriﬁed\
    \ and uploaded into the chain-like system\nby selected nodes via an agreed consensus\
    \ protocol. Tis\nconsensus mechanism allows all the parties to engage in the\n\
    monitoring process when adding data ﬂow. In addition, the\nduplicates of these\
    \ data are stored in all involved nodes to\nensure no tampering.\nTo make agricultural\
    \ applications more eﬃcient and\nreliable, we can divide blockchain applications\
    \ into four\ncategories. Te ﬁrst is the provenance of traceability and\nfood authenticity.\
    \ Te second category is smart agricultural\ndata management. Te third category\
    \ is trading ﬁnance in\nsupply chain management. Te last is the category of other\n\
    information management systems [3].\nIn agriculture, collecting data is frequently\
    \ prohibitively\nexpensive. Te blockchain provides a dependable source of\ntruth\
    \ about the state of crops, inventories, and contracts.\nFood provenance is tracked\
    \ using blockchain technology,\nwhich aids in the creation of trustworthy food\
    \ supply chains\nand develops trust between producers and consumers. It also\n\
    enables timely payments among stakeholders generated by\ndata changes when used\
    \ conjointly with smart contracts [4].\nMany characteristics of the blockchain\
    \ make it unique\nand promising for future industrial applications. For example,\n\
    blockchain is decentralized, transparent, immutable, irre-\nversible, autonomous,\
    \ open-source, ownership, provenance\n(authenticity and origin), and task automation.\n\
    Contract automation (smart contracting) eliminates the\nneed for a traditional\
    \ contract while improving security and\nlowering transaction costs. Smart contracts\
    \ are designed\nwith rules and actions that applied to all parties participating\n\
    in the transaction [5].\nE-agriculture, or smart farming, refers to building in-\n\
    novative methods to use modern information and com-\nmunication technologies (ICTs),\
    \ such as the Internet of\nTings (IoT), cloud computing, machine learning, big\
    \ data,\nand blockchain, to move towards more feasible agricultural\nand farming\
    \ practices. Blockchain technology in agriculture\nis gaining traction because\
    \ of its ability to move away from\nthe centralized approach that now governs\
    \ the farm value\nchain. Te new technologies have produced Agriculture 4.0\nor\
    \ smart farming [6].\nSmart contracts help manage the challenges in imple-\nmenting\
    \ the revenue sharing algorithm and improve pro-\nductivity, transparency, security,\
    \ traceability, and full\nintegration between supply chain levels.\nSmart contracts\
    \ are considered a ﬂexible type of plan-\nning because they provide cost metrics\
    \ that get used to\naccomplishing high productivity within plans for producing\n\
    and delivering products in the context of current market\nrestrictions and then\
    \ executing the established programs [7].\nAll innovation results from an attempt\
    \ to solve a\nproblem, and blockchain technology is no exception. After\nlearning\
    \ about the origins of blockchain technology, it is\nevident that blockchain solves\
    \ a ﬂaw in existing centralized\nagricultural systems.\nAt the security level,\
    \ we can never eliminate vulnera-\nbility; it can only be decreased and lessened.\
    \ When parties\nsought to establish an agreement, groups have always\nfunctioned\
    \ as third-party lawmakers to reduce suspicion.\nOne party expects fair goods,\
    \ while the other hopes to re-\nceive the negotiated cash. Even though the buyer\
    \ and seller\nhave no reason to trust one another, they complete the deal\nbecause\
    \ they trust the third party. Blockchain claimed to\novercome these issues by\
    \ helping apps develop in a\ndecentralized and safe way and ensuring some guaranteed\n\
    level. One of the critical reasons for blockchain’s widespread\nadoption was this.\
    \ Implementing blockchain and smart\ncontracts and proﬁting from their advantages\
    \ is a big mo-\ntivation to improve the agricultural system model and make\nit\
    \ more secure.\nOn the blockchain, all transactions are securely recor-\nded.\
    \ Te controller may use this technology with smart\ncontracts and the Internet\
    \ of Tings to control the supply\nchain management, store farm data, and manage\
    \ identity,\namong other things. On the blockchain, personal data are\nmasked\
    \ and need permission control to access them. In-\nformation gets stored over\
    \ multiple computers (distributed\nledger) rather than on a single server; this\
    \ system makes it\nharder for hackers to alter data. By maintaining a track audit,\n\
    blockchain can instantaneously trace commodities or goods,\nassisting in delivering\
    \ proof and revealing weaknesses in any\nsupply chain. Furthermore, smart contracts\
    \ will automate\ntransactions and enhance eﬃciency. Smart contracts elim-\ninate\
    \ the dependence on human intervention and ignore the\nreliance on third parties.\n\
    In our architectural scheme, IoT will play a role of\ncollecting the environmental\
    \ data. Smart contracts will play\nthe role of data science analyzer, which means\
    \ dealing with\ndata for actionable insights, while blockchain records and\nvalidates\
    \ data. Tis scheme uses algorithms created to\ngovern interactions with various\
    \ data segments. Te next\nstep of this system is to create a blockchain system\
    \ auto-\nmated by smart contracts and make the correct predictions\nafter analyzing\
    \ the collected data. Tis project will guarantee\nthe enhancement of farm production.\
    \ Te application\nplatform will allow all the participants on the network\n(providers,\
    \ farmers, customers, and distributors) to visualize\ndata and trace product growth.\
    \ Blockchain validates data\nusing a decentralized consensus algorithm and encryption,\n\
    making it nearly hard to alter owing to the massive amount\nof computer power\
    \ needed. As previously stated, block-\nchain’s validated data are organized,\
    \ comprehensive, and\nimmutable.\nWhen we talk about the tracked product, we discuss\
    \ the\ncollected environmental data in which the goods have\ngrown. Te network\
    \ members will get all the growth hu-\nmidity, temperature, light, and soil pH\
    \ details. Tey have\ncode that says “If x event occurs, perform y action.” Te\n\
    participant will receive the updated data every period. When\nthe customer knows\
    \ all data about the product that he will\nbuy, he will be satisﬁed with all this\
    \ shared information and\nglad to be a part of this commercial deal. Also, when\
    \ the\nfarmer controls all the necessary conditions to grow the\noptimum quality,\
    \ he will build the conﬁdence to share\n2\nApplied Computational Intelligence\
    \ and Soft Computing\ninformation with customers and gain their trust. Another\n\
    example of an advantage for the supply chain management\nprovided by the scheme\
    \ is allocating goods arrived and\nwhich container is in it. Blockchain allows\
    \ tracking and\nstoring information such as order receipts, product status,\n\
    shipment details, and regulatory information to increase\ntransparency and customer\
    \ satisfaction.\nSmart contracts are composed of codes that analyze\ncollected\
    \ data and display to members if the sensor results\nare on the optimum values.\
    \ Tese contracts help track the\nproduct supply chain by keeping eyes on product\
    \ identiﬁ-\ncation and detecting the member that holds the product.\nFurthermore,\
    \ the block cannot store the data until it is\nveriﬁed and validated by control\
    \ members, so the case in\nwhich an entity can be malicious is signiﬁcantly minimized\n\
    compared to other centralized systems. In general, the truth\nis that blockchain\
    \ systems and smart contracts can perform\nmiddleman duties independently.\nConcerning\
    \ the prospective research gap and research\nchallenge, we noticed that many researchers\
    \ built a scheme\nthat consists of a single blockchain that stores data about\n\
    farms, entities, products, ﬁnancial business, deals, and trades\nall in one distributed\
    \ ledger. We reckon that the data in our\nsystem need to be more structured. Te\
    \ research challenge is\nplacing data related to individuals into “the user block-\n\
    chain,” data describing products into “the product info\nblockchain,” and data\
    \ related to deals between entities into\n“the transaction blockchain.”\nAlso,\
    \ the relationship between entities builds on trust,\nand each participant knows\
    \ their responsibilities and rights.\nOn the other hand, we have seen that some\
    \ researchers do\nnot automate speciﬁc tasks, such as detecting environmental\n\
    sensor data without intervention. So after doing some\nstudies, we have decided\
    \ to work with smart contracts as a\nblockchain companion.\nGenerally speaking,\
    \ the blockchain system aids by taking\nadvantage of its solid security-protecting\
    \ approach (simul-\ntaneously dispatching the last version of data to all network\n\
    members). Since agricultural data are sensitive and essential,\nthe blockchain\
    \ helps to entirely transform how the infor-\nmation is seen by adding an end-to-end\
    \ encrypted system to\nthe blocks. It is important to remember that distributed\
    \ data\nguard against fraud and illegal behavior. Participants in the\nnetwork\
    \ get secured data, and their personal information is\nanonymized. Attackers cannot\
    \ access or alter the data be-\ncause the information is not kept on a single\
    \ server and the\nvalidated blocks have a very minimal possibility of being\n\
    reversed.\nBecause\nblockchain\nemploys\na\ndistributed\nledger,\ntransactions\
    \ are recorded identically in many places without\nthe need for synchronization,\
    \ and guaranteeing transpar-\nency is another signiﬁcant beneﬁt (improve speed\
    \ pro-\ncessing). Additionally, this method aids in data tracking for\nanalysis\
    \ and reveals weak links in any supply chain. Smart\ncontracts automate transactions,\
    \ speeding up processing\ntime and minimizing human involvement. In this study,\
    \ the\nsmart contract helps analyze the values, verify environ-\nmental data,\
    \ and identify the crops with optimal growth\nstatus.\nIn the following sections,\
    \ we will discuss how we can\ncombine these technologies to create a robust scheme.\
    \ Of\ncourse, the adoption of IoT is always advantageous since the\ndata collected\
    \ from these sensors are more exact and in real\ntime. All these elements are\
    \ unexplored areas, limit the scope,\nand deﬁne the conceptual boundaries in our\
    \ research ﬁeld,\nwhich will boost our chances of having a better research study.\n\
    We will provide further comparisons between the\nproposed and past approaches.\
    \ Previous work will be listed\nin the upcoming paragraphs for sure. Still, the\
    \ main point we\nare trying to convey is that the smart contracts developed in\n\
    our architecture are innovative and have the potential to\nobtain sensors’ values\
    \ automatically, such as the optimum\ntemperature, humidity, light composure,\
    \ and soil pH values.\nTe components of the smart contract’s Solidity script are\n\
    considered the source of the idea’s novelty. Besides, decent\ndata structure organization\
    \ on the blockchain layer con-\nstantly improves data management. Tese details\
    \ will guide\nus to generate new observations or insights based on pre-\ndiction\
    \ while incorporating other innovative technologies\nlike artiﬁcial intelligence.\n\
    1.1. Comparison between Existing Agricultural Schemes and\nthe Proposed Model.\
    \ Figure 1 shows the diﬀerence between\nthe existing agriculture supply chain\
    \ (using the centralized\ndatabase), a standard blockchain-based agricultural\
    \ supply\nchain, and the proposed blockchain-based agrarian architecture.\nTe\
    \ key reason we chose to work with blockchain and\nincorporate its features into\
    \ our architecture was the absence\nof need for third parties. Additionally, the\
    \ control over a\ndecentralized ledger stays with the user rather than a cen-\n\
    tralized authority.\nAnother beneﬁt of blockchain is that there are no data\n\
    breaches and hacks. However, the scalability of a centralized\nsystem with a single\
    \ server is limited.\nImplementing a blockchain system protects data so it\ncannot\
    \ be changed or erased. But the recorded data in the\nstandard blockchain architecture\
    \ are not well organized, and\nmany previous works did not use smart contracts,\
    \ which\nfacilitate some operations and tasks without the involvement\nof network\
    \ participants.\nTe suggested model includes several blockchain ledgers\nthat\
    \ divide the data into user information, agri product\ninformation, and transaction\
    \ information. Additionally,\nsmart contracts are considered a signiﬁcant factor\
    \ in this\nmodel, which automate many tasks.\nMost blockchain systems implement\
    \ smart contracts\nprovided by the Ethereum platform and its extension\nplatform,\
    \ Quorum: they compile using Solidity or Serpent\ninto Ethereum virtual machine\
    \ (EVM) bytecodes. Hyper-\nledger Fabric and Sawtooth, the most active platforms\
    \ in the\nHyperledger family, use Golong, Java, Python, and Java-\nScript as the\
    \ major programming languages for smart\ncontract development [3].\n1.2. Related\
    \ Work. Te only way to verify and validate\ntransactions in the system is to use\
    \ IoT devices that are\nphysical consortium members. With the RAFT consensus\n\
    Applied Computational Intelligence and Soft Computing\n3\nalgorithm, the proposed\
    \ blockchain platform becomes not\nonly energy-eﬃcient but also faster and scalable\
    \ that can\nrecord thousands of conﬁrmed transactions per second\nacross multiple\
    \ ledgers. Tird, the blockchain with the RAFT\nconsensus mechanism provides a\
    \ transparent, secure, and\ntrusted platform for faster exchange of all types\
    \ of services\namong stakeholders. Te RAFT consensus mechanism\nguarantees integrity\
    \ if more than 50% of transacting nodes\nare honest. Several consensus algorithms\
    \ are proposed for\nreaching a consensus among several action nodes, including\n\
    proof of work (PoW), proof of stake (PoS), practical Byz-\nantine fault tolerance\
    \ (PBFT), and RAFT. Te public\nblockchain generally uses PoW and PoS, although\
    \ they lack\nthe speed of conﬁrmation. As a decision, our consensus\nmechanism\
    \ decreases the use of the blockchain to connect\nvarious agri-based IoTdevices.\
    \ Te RAFTconsensus method\nis more convenient to employ in a private blockchain\
    \ [8].\n“A secure ﬁsh farm platform based on blockchain for\nagriculture data\
    \ integrity” research [9] mentioned that smart\nfarming necessitates scalable\
    \ security. Terefore, various\nstudies have focused on developing new paradigms\
    \ based on\nblockchains.\nTe technology of SkuChain focuses on establishing\n\
    direct contacts while also increasing trust in the supply\nchain. More than half\
    \ of blockchain discussions are around\nretail and agricultural input and output\
    \ tracking.\nWe can get agriculture data from many sources, such as\nsoil sensors,\
    \ weather satellites, drones, and farm equipment.\nIt can be saved in a distributed\
    \ store using the blockchain\nwith secure long-term agriculture progress.\nTe\
    \ distributed ledger records all of the activities of the\nfarm. It is tied to\
    \ the data collected by agricultural sensors.\nFurthermore, smart contracts are\
    \ used to automate agri-\nculture data processing, including outlier ﬁltering,\
    \ before\ngenerating records in the ledger. Smart contracts could\nactivate and\
    \ execute particular actions based on data\nrecorded in the blockchain.\nTe blockchain\
    \ has access control that determines who\ngets permission to reach network resources\
    \ or perform\nactions on them.\nTe blockchain is a continuously expanding collection\
    \ of\ndocuments known as blocks. A block often contained the\nhash value of the\
    \ preceding block, a timestamp, transaction\ndata, and much other information.\
    \ It is impossible to tamper\nwith the data without breaking the hash links. Te\
    \ block-\nchain network contains many peers, each of which has a\nsmart contract.\n\
    A block must include signatures from a certain number\nof people. Tis technology\
    \ eliminates the risk of data dis-\nclosure and guarantees that no unauthorized\
    \ user can\ntamper with a transaction on the blockchain.\nBlockchain\nfunctions\n\
    are\ntransaction\nveriﬁcation,\nidentity validation, and peer-to-peer communication.\
    \ Also,\nsome network services are available as web APIs, allowing\nexternal systems\
    \ or client apps to connect.\nTe smart contract is distributed across a blockchain\n\
    network in a single package. Once the contract is deployed,\nall of the smart\
    \ contracts included inside it are available to\napplications.\nTe smart contract\
    \ deﬁnes a collection of transactions.\nParticipants in the blockchain network\
    \ (for example, a\nfarmer) or assets (anything of value) are used as resources\n\
    (for example, water level data). Te supported operations are\nCREATE, READ, UPDATE,\
    \ and DELETE.\n(i) Te water level sensor can CREATE and Collect the\nWater Level\
    \ transaction.\n(ii) Te farm owner can CREATE many transactions\nsuch as Predict\
    \ Water Level, Energy Consumption,\nUser Management, and Sensor Management.\n\
    The majority of previous works did not own smart\ncontracts, hence we can observe\
    \ a lack of automation\nin various systems. Additionally, we can see more\nhuman\
    \ intervention than the suggested architecture.\nMost works are based on single\
    \ blockchain as a\ndistributed ledger. The BC is quite disorganized and\nmight\
    \ be expensive given the degree of resources\nspent because it contains all of\
    \ the data that has been\nrecorded about all of the members, the farm, and the\n\
    products.\nSensors\nThe Smart contract on the suggested system helps to\nautomate\
    \ various tasks, such as handling the recorded\ndata that has been received from\
    \ the sensors and\ndetermining whether the values are at their optimum\nlevels.The\
    \ Smart contract can organize the\ndistribution process and many other activities.\n\
    Sensors\nThe proposed system contains multiple blockchain \nledgers for more of\
    \ data organization\nUser Information BC : includes all data about\nnetwork members\
    \ like farmers,\ndistributors, costumers...\nAgri Product Information BC : includes\
    \ all data about\nthe farm and the Agri products.\nTransaction Information BC\
    \ : includes every piece of\ninter mediate data, including transactional business,\n\
    logistical data, and other aggregated data.\nTemperature, humidity, light exposure,\
    \ soil pH\nSensors\nThe data get stored in centralized ledger the\nopposite of\
    \ decentralized ledger\n(which is also the opposite of\nblockchain structure).\n\
    Agricultural supply chain with centralized database\nStandard Blockchain-based\
    \ Agricultural supply chain \nThe proposed Blockchain-based Agricultural supply\n\
    Figure 1: Comparison between existing agricultural schemes and the proposed model.\n\
    4\nApplied Computational Intelligence and Soft Computing\n(iii) Te water pump\
    \ has access to ALL operations for\nthe Control Water Pump transaction.\n(iv)\
    \ Te farm owner and the farmer can READ many\ntransactions such as Water Level\
    \ History, Predicted\nWater Level History, Energy Consumption History,\nand Water\
    \ Pump History.\nTe following research represents the article “Blockchain\nand\
    \ smart contract for IoTenabled smart agriculture” [10]. It\nmentioned that seed\
    \ storage, supply stores, producers,\ndistributors, wholesalers, and retailers\
    \ are the main actors in\nthe system. In addition, the contract deployer is another\n\
    actor here. Te interaction method between the actors and\nthe system is accomplished\
    \ through several components.\nTe sections below demonstrate the role of each\
    \ actor.\n(i) Contract Owner. Te contract owner has more\ncontrol over the system\
    \ than anyone else. Te\nowner enters the contract into the system and\nchecks\
    \ to see if the rule gets correctly implemented.\n(ii) Seed Storage. Seed and\
    \ other agricultural products\nare stored in the seed storage.\n(iii) Supply Shops.\
    \ Tey collect and sell a signiﬁcant\nquantity of seed, fertilizer, and other agricultural\n\
    materials to growers.\n(iv) Producers. Te farmers are considered the most\nbasic\
    \ rung in production. Tey are in charge of all\ntasks\nrelating\nto\nagricultural\n\
    planting\nand\nharvesting.\n(v) Distributors. Distributors are in charge of safely\n\
    transporting crops from one location to another.\n(vi) Wholesalers. Wholesalers\
    \ buy a decent quantity of\ncrops and agriproducts and resell them to retailers.\n\
    (vii) Retailers. Retailers buy commodities and products\nfrom wholesalers and\
    \ sell them to consumers on a\nsmall scale in open markets.\n(viii) Consumers.\
    \ Tey are a large group of individuals\nthat rely on agricultural products. Tey\
    \ play a big\npart in the system by constantly creating demand.\nFarMarketplace\
    \ is a novel digital marketplace [6]. It fully\nexploits the advantages of blockchain\
    \ capabilities by pro-\nposing smart contract templates between farmers, con-\n\
    sumers,\nand deliverers. FarMarketplace\nis considered\ninnovative in three aspects.\n\
    FarMarketplace oﬀers three main smart contracts coded in\nSolidity programming\
    \ language. Te ﬁrst smart contract is\n“atomContract.sol.” In this contract, the\
    \ user buys the contract.\nTe funds were added to the balance. Te buyer gets identiﬁed.\n\
    After that, the buyer receives the object of the contract, and the\nseller receives\
    \ the money.\nTe second smart contract is coded in Solidity pro-\ngramming language.\
    \ Tis ﬁle creates the smart contracts, sets\ntheir value, and monitors their status.\
    \ Tis ﬁle can also\nmodify the accessibility from available to unavailable or\
    \ vice\nversa. Some methods determine if the conditions are met\nand, as a result,\
    \ generate an error.\nTe second smart contract is “ownable.sol.”\nTe ownable contract\
    \ has an owner address and provides\nsimple authorization control functions. Tis\
    \ system makes\nuser permissions easier to implement. Te ownable con-\nstructor\
    \ sets the original owner of the contract to the sender\naccount. Tis ﬁle also\
    \ can let the current owner transfer\ncontrol of the smart contract to a new owner.\n\
    Te article “Securing parked vehicle assisted fog com-\nputing with blockchain\
    \ and optimal smart contract design”\n[11] mentioned that the blockchain provides\
    \ complete se-\ncurity for parked vehicle assisted fog computing (PVFC). As\n\
    a result, PVFChain, a speciﬁc blockchain system for com-\nputation oﬄoading, is\
    \ established to record and conﬁrm\ncrucial information about requesters and performers.\n\
    Without any third parties, the decentralized PVFC is built\nby relying on a majority\
    \ of consensus nodes. Smart contracts\norganize the posting of requests, the completion\
    \ of workloads,\nthe grading of tasks, and the distribution of rewards.\nAny registered\
    \ entity to PVFChain is controlled to follow\nthe contact-based agreement via\
    \ smart contract execution.\nDue to the inbuilt transparency and accountability\
    \ of smart\ncontracts, fraudulent requesters and performers are exposed\ncompletely.\
    \ Accessible records regarding the activities of\nrequesters are tamper-resistant\
    \ because of data auditing.\nFinally, PVFChain protects against network vulnerabilities\n\
    by supporting identity authentication, request validation,\ncomputation veriﬁcation,\
    \ and reward integrity.\nTe feasibility of PVFChain depends on the identiﬁca-\n\
    tion of critical network entities. Requester, performer, and\nminer are the three\
    \ main network entities.\nWhen a mobile car runs a compute-intensive application\n\
    on the road, it sends a computing job to PVFChain. Tis\nprevious operation triggers\
    \ a smart contract. PVFChain\nsystem transmits a task to a responsible administrative\
    \ agent.\nAt the vehicular network edge, the agent organizes the\noﬄoading service.\
    \ In the PVFC environment, the agent\nlooks for a fog server near a parking lot\
    \ and uses that to\ncomplete cooperative tasks.\nTere are various business platforms\
    \ available nowadays.\nFor example, Ethereum is a common platform that facilitates\n\
    smart contracts on the blockchain. On the PVFChain, each\nsmart contract has its\
    \ address, allowing us to describe business\nlogic for constraining network behaviors\
    \ in oﬄoading activities.\nIn summary, the operations of the smart contract are\
    \ as\nfollows:\nStep 1. Te requester sends a computing task containing\ntask requirements\
    \ and a deposit to PVFChain. After that,\nthe assignment gets allocated to a particularized\
    \ agent.\nStep 2. Trough the clients, performers can see the\noﬄoading requests\
    \ and the work criteria.\nStep 3. Some performers respond positively to the\n\
    requests and upload basic task execution information\nwith their replies.\nApplied\
    \ Computational Intelligence and Soft Computing\n5\nStep 4. Te agent is authorized\
    \ to recognize and pick\nsuitable performances based on prior knowledge. Te\n\
    agent also assigns various rewards for performers.\nStep 5. Te client of the requester\
    \ oﬀers attractive\ncompensation to the performers.\nStep 6. Te performers select\
    \ a portion of the workload\nto process based on the rewards oﬀered, and the agent\n\
    provides the necessary input data for task execution.\nStep 7. Te actors distribute\
    \ computing resources to\nobtain output outcomes. Te smart contract contains\n\
    their identities, node types, a total of processing\nworkloads, and output results.\n\
    Step 8. A speciﬁc transaction in the smart contract\nauthorizes miners and analyzes\
    \ the output results. Te\nminers choose suitable third-party methods to present\n\
    evaluation ﬁndings.\nStep 9. Te agent collects all the output results and\naggregates\
    \ them into a ﬁnal result before sending it to\nthe requester.\nStep 10. Finally,\
    \ the requester oﬀers additional pay-\nments. Qualiﬁed performers get promising\
    \ prizes.\nTe article “Smart contract-based agricultural food\nsupply chain traceability”\
    \ [12] suggests that tracking and\nexecuting transactions in the agricultural\
    \ food supply chain\nnecessitates applying the Hyperledger Fabric to establish\n\
    consortium chains and smart contracts called Chaincode.\nTe entire process of\
    \ the agricultural food supply chain\nfrom farm to fork is as follows:\n(i) Agricultural\
    \ Bureau. It is an entity that keeps track\nof farmers, seed information, plot\
    \ information, and\nyield data to assure the accuracy of source data. Te\ndata\
    \ are saved in IPFS, and the blockchain con-\nserves the hash value.\n(ii) Farmer.\
    \ He is in charge of sowing crops, utilizing\nsensors to monitor and record crop\
    \ growth in the\ngrowing environment, such as water, air, sunlight,\nand soil\
    \ quality. Te farmer saves the information\nabout the crop growth process in IPFS.\
    \ Further-\nmore, the farmer is responsible for generating\nsmart contracts and\
    \ storing IPFS data hashes.\n(iii) Processor. Te farmer gathers the crop and sells\
    \ it to\nthe processor, who transforms the raw crops into\nproducts for the ﬁnal\
    \ customer and records batch\ninformation, quantity, and other information in\n\
    IPFS. Te data hash is saved in the blockchain, and\nthe data label is created\
    \ and put on the product\npackage.\n(iv) Quality Supervision Bureau. It is in\
    \ charge of\noverseeing qualities and conducting mandatory\ninspections of manufacturing\
    \ companies. All the\ntasks help respect regulations concerning stan-\ndardization\
    \ and quality and penalize rule violators.\n(v) Distributor. Before reaching the\
    \ retailer, the ﬁn-\nished product may go through several tiers of\ndistribution.\
    \ Te distributor is in charge of storing\nand selling processed agricultural products\
    \ to re-\ntailers in batches. Company information, product\nselling times, prices,\
    \ and other data are kept in\nIPFS. Te hash value is stored in the blockchain,\n\
    just as it is for the quality supervision bureau, to\nensure that the succeeding\
    \ data are unchangeable.\n(vi) Retailer. He purchases products from distributors\n\
    and then sells them to consumers in modest\namounts. IPFS stores on the blockchain\
    \ some basic\ninformation about the retailer. For example, it\nstores the time\
    \ of sale, the quantity sold, and the\nhash value.\n(vii) Consumers. Tese are\
    \ the people who buy and eat\nthe ﬁnalized agricultural food, and they can get\
    \ the\ncomplete supply chain information about it by\nscanning the barcode, RFID,\
    \ or QR code on the\nproduct package, which makes tracking food easier.\nTe smart\
    \ contracts interact with the blockchain par-\nticipants. Our network participants\
    \ and their objectives are\nlisted in the “Blockchain-based soybean traceability\
    \ in ag-\nricultural supply chain” research [13].\n(i) Seed company maintains\
    \ local records and pro-\nduces seeds. Tese seeds get labeled by the EAN-\nUCC\
    \ global standard.\n(ii) Farmer purchases recognized seeds from seed\ncompanies,\
    \ harvests the crop, and sets up the smart\ncontract. Data are also saved on the\
    \ decentralized\nﬁle system IPFS by the farmer.\n(iii) Grain elevator: a grain\
    \ elevator is an agricultural\ninstitution. Tese organizations decide the quality\n\
    of the product by managing the sensing data and\nstorage duration of the harvested\
    \ crop.\n(iv) Grain processor purchases grain from the elevator,\nreﬁnes it, removes\
    \ foreign matter, and produces the\nﬁnished product.\n(v) Distributor is in charge\
    \ of the product distribution\nprocedure.\n(vi) Retailer purchases traceable items\
    \ from manufac-\nturers and sells them in small quantities to\nconsumers.\n(vii)\
    \ Customer is the person who uses the product and\nconsumes it.\nAny smart contract\
    \ code can be handled using the\nEthereum virtual machine (EVM). Tis EVM is in\
    \ charge of\ncomprehending every command code and ensuring that the\nsmart contract\
    \ is executed on all nodes.\nTe research employs Ganache as a local Ethereum test\n\
    network rather than the whole Ethereum network. Te\npurpose of this movement is\
    \ to make the test stage easier.\nTe following are some of the most signiﬁcant\
    \ smart\nagriculture notions:\n(i) Sensors and surveillance cameras.\n(ii) Te\
    \ network participants like farmers, suppliers,\ncustomers, and so on.\n6\nApplied\
    \ Computational Intelligence and Soft Computing\n(iii) Computing equipment like\
    \ microcontroller systems\nand cloud computing.\n(iv) Applications and libraries\
    \ include mobile device\napps, machine-to-machine communication, API,\nand a blockchain\
    \ web app.\nTe agricultural zone is equipped with an IoTcontroller,\nsensors,\
    \ and cameras. Te controller will encrypt the en-\nvironmental (sensing) data\
    \ before sending them to the\nblockchain network. At this point, the controller\
    \ will use\nmachine-to-machine communication to connect with the\nblockchain network\
    \ [14].\nPrecise measurement is critical in agriculture. Te soil\ntype and the\
    \ climate inﬂuence the monitored metrics on a\nﬁeld. Te following are a few of\
    \ them [15]:\n(i) Air Temperature and Humidity. Seed germination\ngets relative\
    \ to the optimum temperature because\nthe phases of biochemical mechanisms depend\
    \ on\nenzyme activation and hydration. Also, humidity\ngets deﬁned as the water\
    \ vapor pressure in moist\nair.\n(ii) Soil Temperature and Humidity. As a carbon\
    \ storage\ntank, the soil is a considerable component in irri-\ngation scheduling.\
    \ Te watering period is deter-\nmined\nby\nthe\ndriblet\nirrigation\ntechnology\n\
    employed or the techniques of deep wells.\n(iii) Te fundamental goal of this type\
    \ of irrigation is to\nimprove plant water quality standards. Sunlight and\nhumidity\
    \ have a signiﬁcant impact on soil tem-\nperature. Te temperature of the soil\
    \ is generally\nhigher than that of the air.\n(iv) Evapotranspiration. It is a\
    \ component of the hy-\ndrologic process that is the most elemental. Con-\nsumptive\
    \ usage includes plant transpiration and\nwater evaporation from the soil.\nAgriOnBlock\
    \ [16] ensures non-repudiation and con-\nﬁrms the authenticity by encrypting and\
    \ decrypting the\ntransaction with the private key and public key of a cryp-\n\
    tography mechanism like RSA.\n(1) When a retailer wishes to get a product from\
    \ the\nwarehouse, it communicates with AgriOnBlock and\nthe bank, specifying the\
    \ identity product, the item\ncode, the quantity, and the rate per unit.\n(2)\
    \ Te retailer has adequate funds, and its credentials\nare veriﬁed. Te required\
    \ amount gets transferred\nfrom the account of the retailer to AgriOnBlock.\n\
    (3) Te bank informs AgriOnBlock that the payment\ntransaction was successful.\n\
    (4) Once AgriOnBlock receives the proof of payment\nfrom the bank, it directly\
    \ notiﬁes the warehouse to\ntransfer the requested item in the stated amount to\n\
    the retailer.\n(5) Te transaction gets recorded in the AgriOnBlock.\nTe steps\
    \ for the interactions between some agricultural\nsupply chain entities are as\
    \ follows:\n(1) Te\nfarmer\nlodges\nan\ninsurance\nclaim\nto\nAgriOnBlock.\n(2)\
    \ AgriOnBlock delivers the information to the in-\nsurance carrier when it gets\
    \ veriﬁed.\n(3) Te insurance company sends the claim to a surveyor\nfor physical\
    \ inspection.\n(4) Te surveyor physically visits the site to do the\nsurvey.\n\
    (5) Te surveyor submits a report to the insurance\ncompany, accompanied by the\
    \ amount of the in-\nsurance claim for payment.\n(6) Te insurance company notiﬁes\
    \ the bank to reim-\nburse the farmer after obtaining the report from\nsurveyor.\n\
    (7) Te bank pays the farmer.\n(8) Te insurance company informs AgriOnBlock of\
    \ the\ntransaction.\nSmart contract algorithm for AgriOnBlock supply chain\nmanagement:\n\
    Step 1. If the farmer does not have the ready harvest,\nstay on step 1; otherwise,\
    \ proceed to step 2.\nStep 2. If the farmer prepares a crop invoice and sends\
    \ it\nto the retailer, the request to pick up the crop gets\nforwarded to the\
    \ shipping company.\nStep 3. If the retailer conﬁrms the invoice received from\n\
    the farmer, it will transmit a conﬁrmation to the\nshipping company (and proceed\
    \ to phase 4); otherwise,\nit will go to the error step (error code = 1).\nStep\
    \ 4. Te shipping company picks up the produce\nfrom the farmer and delivers it\
    \ to the retailer and then\nupdates the transaction on the AgriOnBlock after re-\n\
    ceiving the invoice from the farmer and conﬁrmation\nfrom the retailer.\nStep\
    \ 5. If the transaction updated by the shipping\ncompany on AgriOnBlock is veriﬁed,\
    \ the smart con-\ntract between the retailer and the farmer gets executed\nto\
    \ inform the bank to transfer the amount from the\nretailer to the farmer, and\
    \ the transaction gets updated\non AgriOnBlock; otherwise, go to error step (error\n\
    code = 2).\nStep 6. Te retailer creates a crop invoice and sends it to\nthe distributor.\n\
    Step 7. If the distributor conﬁrms the invoice sent by the\nretailer, he submits\
    \ a request to the shipping company,\nand then the transaction gets added to the\
    \ AgriOn-\nBlock. Otherwise, you will be directed to the error step\n(error code\
    \ = 3).\nStep 8. If the shipping company validates the bill received\nfrom the\
    \ distributor, the shipping company produces the\ncrop from the retailer to the\
    \ distributor and updates the\ntransaction on the AgriOnBlock. If the shipping\
    \ com-\npany does not validate the invoice received from the\ndistributor, go\
    \ to the error step (error code = 4).\nStep 9. Go to step 11.\nApplied Computational\
    \ Intelligence and Soft Computing\n7\nStep 10. Error: if the error code is 1,\
    \ the retailer informs\nthe farmer of the reasons for refusing to accept the\n\
    invoice. If the problem code is 2, the retailer and the\nfarmer notify about a\
    \ failed bank transaction. If the\nproblem number is 3, the distributor informs\
    \ the re-\ntailer of the reasons for not accepting the invoice. Fi-\nnally, if\
    \ the problem code is 4, the shipping company\ncontacts the distributor about\
    \ the reasons for not ap-\nproving the invoice.\nStep 11. Stop.\n“Blockchain and\
    \ edge computing technology enabling\norganic agricultural supply chain: a framework\
    \ solution to\ntrust crisis” research proposed that the physical layer, edge\n\
    data layer, smart contract layer, cloud/blockchain layer, and\nuser layer are\
    \ the ﬁve levels that make up the concept. Tis\nviewpoint is from the standpoint\
    \ of data ﬂow [17].\n(i) Physical Layer. A smart contract gets placed in this\n\
    layer, consisting of numerous sensors, controllers,\nand IoT devices. Tese devices\
    \ are either encapsu-\nlated with the smart contract address of the client or\n\
    discovered by a discovery service. Furthermore,\nnumerous wireless protocols such\
    \ as Wi-Fi, Zigbee,\nor LoRa are commonly used in agricultural farms.\n(ii) Edge\
    \ Data Layer. Te edge nodes make up this layer\nfor deploying containerized microservices,\
    \ data\ninfrastructure, IoT devices, and QoS control. Te\nedge data layer takes\
    \ data from the physical layer. It\nanalyzes, compresses, transforms, and splits\
    \ the data\ninto local and cloud ones. Te data rights or the\nidentiﬁcation of\
    \ the data creator is initially com-\npleted by this layer. As a result, this\
    \ layer enables oﬀ-\nchain veriﬁcation of tracking data from a cloud-\nbased blockchain.\
    \ Local servers are in charge of\nstoring oﬀ-chain data. Tis testing overcomes\
    \ the\nblockchain\nimplementation\nproblem,\nprivacy,\ntransmission bandwidth,\
    \ energy usage, and latency,\nto name a few.\n(iii) Smart Contract Layer. Tis\
    \ layer is responsible for\nassembling a group of smart contracts. It enables\n\
    eﬀective, distributed, and heavily automated OASC\nworkﬂows. Smart law contracts,\
    \ decentralized au-\ntonomous organizations (DAO), and application\nlogic contracts\
    \ are included in this tier of smart\ncontracts, which go beyond the transfer\
    \ of simple\ncurrency values. Te law contracts specify strict legal\nremedies\
    \ to prevent contracting parties from car-\nrying out their obligations. DAO is\
    \ a blockchain-\nbased community that can design a list of norms\nexpressed in\
    \ smart contract code. Each participant\nshould respect these rules and have the\
    \ right to seek\nrecourse if the program gets stopped.\n(iv) Cloud/Blockchain\
    \ Layer. Tis layer combines a cloud\nstorage repository with a blockchain-like\
    \ ledger that\nsupports three types of blockchains: public, alliance,\nand private.\
    \ Tis layer takes advantage of the alliance\nchain to include all stakeholders\
    \ in OASCs. Tis type\nof chain combines public and private chains. Cloud/\nblockchain\
    \ layer introduces an InterPlanetary File\nSystem (IPFS) and BigchainDB. IPFS\
    \ is new content-\naddressable storage. On each computer, the same ﬁle\nhas the\
    \ same name, and any change in the data ﬁle\ncauses the modiﬁcation in the ﬁle\
    \ name. Due to data\nstorage constraints, the process only keeps the hash\nvalue\
    \ of the ﬁle content in the cloud blockchain, and\nthe ﬁle itself gets saved at\
    \ the edge. Tis layer also\nutilized BigchainDB, a data storage and search en-\n\
    gine, to suit the query speciﬁcations of ﬁles.\n(v) User Layer. Te user layer\
    \ is the main gateway for\nanyone interested in tracking organic products or\n\
    maintaining OASCs. Te blockchain ecosystem gets\nlinked to this layer via the\
    \ blockchain bridge, which\nresembles an Ethereum bridge Metamask and is\navailable\
    \ as a browser add-on. Furthermore, this\nlayer oﬀers a variety of APIs.\nTe article\
    \ “Blockchain for Internet of Tings: a survey”\n[18] mentioned that the Internet\
    \ of Tings (IoT) is a sig-\nniﬁcant part of this revolutionary transformation\
    \ by\nbridging the gap between the physical industrial system and\nthe cyber-physical\
    \ system (CPS). Because of its increased\nconnectivity, safety, protection, dependability,\
    \ and ﬂexibil-\nity, blockchain is essentially the ideal companion to IoT.\nIoT\
    \ devices are capable to interact with one another\nwithout the assistance of\
    \ a reliable third party. Smart\ncontracts can help us reach this ﬂexibility.\
    \ Contract pro-\nvisions included in smart contracts, in particular, will be\n\
    done automatically in a speciﬁc circumstance.\nMany IoT devices make up the perception\
    \ layer, such as\nsensors, QR code tags, RFID tags, smart meters, actuators,\n\
    regulators, and other wireless tools. Tese gadgets can\nperceive and gather information\
    \ about the zone.\nIoT gateways, Wi-Fi access points, small base stations,\nand\
    \ macro-base stations may link with various wireless\nsensors, RFIDs, regulators,\
    \ and other tags to establish an\nindustrial network at the communication layer.\
    \ Diﬀerent\ncommunication protocols facilitate the connection, in-\ncluding Bluetooth,\
    \ low-power wireless personal area net-\nwork (LoW-PAN), near-ﬁeld communication,\
    \ and wireless\nhighway addressable remote transducers.\nConcerning traceability,\
    \ a timestamp gets appended to\neach transaction stored on the blockchain. After\
    \ examining\nthe blockchain data with matching timestamps, users may\nquickly\
    \ check and track the provenance of the last data.\nIntegrating IoT systems with\
    \ blockchain technologies\n(such as smart contracts) can strengthen the network’s\
    \ se-\ncurity by continuously refreshing IoT device ﬁrmware to ﬁx\nsecurity ﬂaws.\
    \ However, developing smart contracts is dy-\nnamic and involves several agreement\
    \ cycles. Meanwhile, it\nalso involves several groups, including stakeholders,\
    \ regu-\nlators, and software developers.\nSoftware-deﬁned networking (SDN) technology\
    \ can\ndeliver distributed IoTwith adaptability. Networks may now\nbe more agile\
    \ and ﬂexible to serve diﬀerent application and\nperformance needs thanks to SDN\
    \ technology and network\nfunction visualization (NFV). Te mixture of blockchain\
    \ and\n8\nApplied Computational Intelligence and Soft Computing\nSDN can eliminate\
    \ the drawbacks. However, various con-\nditions in the hybrid environment are\
    \ required to enhance\nand deploy network and computer assets.\nOne of China’s\
    \ famous supply chain architectures im-\nplements both RFID and blockchain. Data\
    \ on the food\nsupply chain’s tracing are maintained by this approach. Te\nresearch\
    \ demonstrates how blockchain might sweeten food\nquality by making traceability\
    \ of goods available. Also,\nsituations showed that customers could follow the\
    \ entire\nproduct manufacturing process if blockchain formed in the\nfood supply\
    \ chain.\nTe research “Te performance evaluation of blockchain-\nbased security\
    \ and privacy systems for the Internet of Tings:\na tutorial” [19] discussed security\
    \ levels and how we can\nimplement blockchain systems and IoT in one architecture.\n\
    Te validator gathers new transactions, checks that they\nadhere to the rules,\
    \ and then adds them to the block to\nprepare it. After several durations, the\
    \ network participants\ncan no longer change the information stored in the blocks.\n\
    When a transaction appears in a validated block, it is\nregarded as proved. Each\
    \ block has a unique hash code\nstored in it as its identiﬁcation.\nTe application\
    \ of blockchain technology in IoT agri-\nculture concentrates on three aspects:\n\
    (i) Helping farmers track down the source of their fresh\nproduce.\n(ii) Enabling\
    \ peer-to-peer agro-based transactions via\nsmart contracts.\n(iii) Ensuring the\
    \ integrity of agriculture data by\nboosting sales of fresh vegetables and addressing\
    \ the\nproblem of environmental pollution.\nGiven the overall mobility and group-based\
    \ behavior,\nIoT devices in blockchain applications furnish meaningful\nconﬁdentiality.\n\
    Te four levels that made the software-deﬁned network\n(SDN) architectures and\
    \ network function virtualization\n(NFV) are the perception layer, data plane,\
    \ virtualization\nand control plane, and blockchain layer.\nData collection from\
    \ the environment completes at the\nperception layer. Data ﬂow to and from the\
    \ perception layer\nvia IoT bridges is achieved by the data plane. Resources are\n\
    typically assigned to controllers using the virtualization and\ncontrol plane.\
    \ Te blockchain layer’s duties include data\nstorage, broadcasting transactions,\
    \ and P2P network man-\nagement via a consensus mechanism.\nWe can explain some\
    \ keywords that are required to be\ndeﬁned.\nGanache is a private Ethereum blockchain\
    \ that executes\nscripts and tests, builds smart contracts, and creates apps.\n\
    Te Ganache testbed is a blockchain testing platform\ndesigned to execute data\
    \ trades and assess the charges of\nsmart contracts. Both desktop program and\
    \ command-line\ntool are available.\nA decentralized framework called Ethereum\
    \ Geth uses\nthe Ethereum protocol to operate smart contracts. Te\nprivate blockchain\
    \ network and smart contract deployment\nare carried out via the Geth Ethereum\
    \ client using the Go\nprogramming language. In addition, for calculating the\
    \ time\nrequired to pack data into the blockchain system, Ethereum\nGeth is employed.\n\
    Te Rinkeby Ethereum testnet is a development and\ntesting condition for Ethereum,\
    \ a proof-of-authority con-\nsensus-based platform. Te eﬃcacy of the blockchain-based\n\
    fog computing system is assessed using this testnet.\nFor Ethereum, Truﬄe is a\
    \ development and testing\nenvironment that includes an asset workﬂow and network\n\
    management for deploying public and private networks.\nRemix Ethereum IDE is a\
    \ browser-based compiler that\nhelps users construct Ethereum contracts in the\
    \ Solidity\nprogramming language and inspect transactions.\nTe article “Security\
    \ challenges and opportunities for\nsmart contracts in Internet of Tings: a survey”\
    \ [20] says that\nthe smart contract system is still not advanced or reliable.\n\
    Distributed autonomous organizations (also known as\nDAO), the largest blockchain\
    \ initiative to be crowdfunded\nwith assets worth roughly USD 60 million, are\
    \ responsible\nfor the most well-known smart contract accident. Te DAO\nwas hijacked\
    \ in 2016, causing a signiﬁcant loss because of a\nrecursive call that the attackers\
    \ had cruelly changed its smart\ncontract. Given that research on blockchain-based\
    \ IoT has\nbeen gaining steam recently, it is critical to investigate the\npotential\
    \ threat as soon as attainable.\nAnother frequent security issue with smart contracts\
    \ is\nprogramming vulnerabilities, particularly with a new lan-\nguage like Solidity.\
    \ Hackers would likely use these ﬂaws to\ntarget IoT and smart contract systems.\n\
    For instance, the unchecked call/send functions return a\nBoolean result to represent\
    \ the success or failure of the call.\nTe transaction performing these functions\
    \ will not get\nrolled back if the external call fails, an error will arise, and\n\
    there will not be a rollback if the return value has not yet\nbeen under complete\
    \ veriﬁcation. As a result, the attacker\ngains illegal entry into the smart contract’s\
    \ protected\noperations.\nWhen Solidity types are used for direct calls, the calling\n\
    party must deﬁne the interface of the recipient and cast it to\nthe recipient’s\
    \ address.\nAs an integer variable may only represent a speciﬁc range\nof values,\
    \ the EVM provides a ﬁxed-size data format for\nintegers.\nEvery Ethereum smart\
    \ contract has an address object\nand can contact other addresses. Te address\
    \ of the ac-\ncount that initially made the global variable tx.origin\nreturns\
    \ the query or transaction. Tis variable fully tra-\nverses the call stack. Utilizing\
    \ this variable to approve IoT\nusers is prohibited as it increases the risk of\
    \ phishing\nattacks.\nTrough constructors in smart contracts, programmers\nmay\
    \ initialize contract objects. However, since the con-\nstructor’s name diﬀers\
    \ from the contract’s name and is a\npublic type, anybody may call the absent\
    \ constructor due to\nits vulnerability. Furthermore, constructors get often used\n\
    when initializing the contract to specify the administrator’s\naddress, the number\
    \ of tokens, and other details. As a result,\nseveral parts of the IoTinfrastructure,\
    \ such as network access\nand token control, will be essentially destroyed.\n\
    Applied Computational Intelligence and Soft Computing\n9\nMany owners’ interests\
    \ have been gravely impacted by\nthe abovementioned problems, particularly in\
    \ modern IoT\nsetups. Tankfully, other academics are now looking at ways\nto address\
    \ these problems. Tey looked for solutions such as\nﬁxing block timestamps’ dependence,\
    \ the inherently vul-\nnerable particularities, and security audits for programming\n\
    vulnerabilities (using SCaaS, for example, a smart contract\naudit engine via\
    \ signature matching and machine learning\nalgorithms).\nSmart contract encryption\
    \ is a brilliant concept to ensure\nthe privacy and security of the private data\
    \ used in smart\ncontracts. For IoT service providers and customers, the\ntransaction\
    \ details of the trade entities, the contract code,\nand the blockchain processing\
    \ mechanism are precious.\nTerefore, a more dependable and cost-eﬀective IoT system\n\
    is predicted in the real world due to the adoption of privacy-\npreserving smart\
    \ contracts. Tis kind of security is achieved\nvia various encryption mechanisms,\
    \ including TEEs.\nAdopting appropriate communication protocols is a\nvaluable\
    \ element in increasing the eﬀectiveness of data\ntransmission for sporadic IoT\
    \ networks. Named data net-\nworking (NDN) is a new form of network design that\
    \ in-\ncludes useful features.\nBecause of its unique properties like data immutability\n\
    and transparency, blockchain can accomplish tasks to make\nclinical trials traceable\
    \ and increase public conﬁdence in an\nopen and equitable process, including all\
    \ stakeholders. Te\nsmart contract safely automates these clinical trial processes\n\
    while ensuring traceability and preventing a probability of\nreconstruction. Te\
    \ viability of the intended solution de-\npends on a proof of concept of Hyperledger\
    \ Fabric in clinical\nmanagement research for numerous clinical studies. Tis\n\
    model [21] is a Hyperledger Fabric type of blockchain with\npermissions,\nsmart\n\
    contracts,\nand\ngood\nsecurity\nperformances.\nClinical trials produce sizable\
    \ clinical research data to\nestablish novel medications, devices, and medical\
    \ or surgical\nprocedures. Investigators take vital signs, variations in\nsymptoms,\
    \ and side eﬀects in the study of all these recorded\ndata. In general, evaluating\
    \ the data quality is a diﬃcult task\nand keeping the data quality at an acceptable\
    \ level needs\nknowledge about the business and data modeling.\nMany stakeholders\
    \ are certiﬁed with blockchain tech-\nnology certiﬁcation to ensure secure data\
    \ transformation\nacross many parties. Without a third party, clinical trial\n\
    procedures are automated using a smart contract.\nNumerous clinical trial-related\
    \ service scenarios are\ndemonstrated to show how the smart contract can manage\n\
    tasks such as medical data gathering and audit queries. Using\nHyperledger Fabric,\
    \ a proof of concept shows how well the\nsuggested solution works by carrying\
    \ out the connected\nprocesses to clinical trials among various organizations\
    \ for\nvarious clinical trials. Additionally, a web-based application\nlets users\
    \ communicate with the blockchain platform.\nTe model’s architecture includes\
    \ three layers: the\nphysical layer, which contains all the necessary equipment,\n\
    the medical pillbox, and blood analysis tools. Tis layer is\nconnected to the\
    \ service layer, composed of the blockchain\nnetwork and its services such as\
    \ smart contracts, consensus\nalgorithms, distributed ledger, and certiﬁcate authority.\
    \ Te\nledger maintains replicated and shared data across the whole\nplatform.\
    \ Te smart contract deﬁnes the business logic\nconcerning all operations of clinical\
    \ trials. Te last layer is\nthe application layer, which manages devices, eCRF,\
    \ and\nusers and deals with audit queries.\nAll transactions are generally available\
    \ to apps after the\nsmart contract launches and conﬁgures the network. Re-\n\
    markably, the network administrator can initiate or pause\nthe network and its\
    \ functions. By calling the relevant\ntransaction, it can manage a subject’s proﬁle.\
    \ Additionally,\nthe smart contract provides a speciﬁc rule list to determine\n\
    whether or not a user is permitted to access or alter network\nresources.\nTe\
    \ experiment starts utilizing ten clients in a two-\nchannel network of 8 organizations\
    \ and 12 endorser peer\nnodes using the simulation program Hyperledger Caliper.\n\
    Te ordering service is in solo mode, and the block size sets\nto 10 transactions\
    \ per block, creating a new block every\n250 ms.\nTough it includes the medical\
    \ area, this model is the\nclosest research to my architecture. A multi-blockchain\n\
    system with smart contracts and a physical layer consists of\nthe tools required\
    \ to collect priceless data, such as pillboxes,\nblood pressure monitors, and\
    \ airﬂow sensors. Tis medical\nresearch and our research share many similarities.\
    \ However,\nwhile our research focuses on agriculture, the other is in the\nmedical\
    \ ﬁeld.\nAccording to Hang et al.’s [22] research results, the\nthroughput, latency,\
    \ number of transactions, and scalability\nwere some of the indicators used to\
    \ analyze Hyperledger\nFabric’s eﬃciency. Te increased transaction has a consid-\n\
    erable inﬂuence on network performance, notably latency.\nHowever, the throughput\
    \ closes on zero as the network hits\nits capacity. Te authors tested the eﬀectiveness\
    \ of Hyper-\nledger Fabric in terms of transaction throughput and net-\nwork latency\
    \ using various scenarios. Based on the network\nconﬁgurations, performance constraints\
    \ vary somewhat at\neach level. In these cases, the eﬀects of factors like batch-\n\
    timeout, batch size, and the number of peers are examined.\nNode.js is the programming\
    \ language utilized to develop\nthis blockchain, with smart contract implementations\
    \ and a\nmaximum of 5 clients or network participants. Te block\ncontains a maximum\
    \ of 10 transactions, and its frequency is\na maximum of 250 ms.\nTis study introduces\
    \ a unique fuzzy logic-based\ntransaction traﬃc management method that helps boost\n\
    blockchain speed. Te model automatically carries out\nvarious operations on transactions\
    \ received following cur-\nrent network circumstances; the fuzzy controller gets\
    \ em-\nbedded in the smart contract. Without the involvement of a\nthird party,\
    \ the fuzzy-based transaction traﬃc controller in\nthe smart contract may autonomously\
    \ manage the traﬃc\nﬂow following the observed network circumstances.\nTe system\
    \ architecture comprises the Hyperledger\nFabric network, the admin, a blockchain\
    \ adapter, a\nbenchmark database, and a transaction traﬃc measurement\nanalyzer.\
    \ Te distributed ledger and the smart contract get\nduplicated by diﬀerent peers\
    \ that constitute the Fabric\n10\nApplied Computational Intelligence and Soft\
    \ Computing\nnetwork. Te administrator can set up network ﬁles and\nbenchmarks\
    \ for performance analysis. A network conﬁgu-\nration ﬁle summarizes the tested\
    \ system and the conditions\nfor connecting to the network.\nA benchmark conﬁguration\
    \ ﬁle deﬁnes the user-speci-\nﬁed test ﬁles and the performance benchmark workload.\
    \ Te\nclient where the workload occurs transmits transactions to\nthe blockchain\
    \ adapter, receiving them and sending in-\nstructions to start the blockchain.\
    \ By calling the smart\ncontract functions, many clients can send transactions\
    \ to the\nnetwork and receive replies to those transactions. Te\nbenchmark ﬁndings\
    \ are stored in the benchmark DB by the\ntransaction traﬃc measurement analyzer\
    \ once it has read\npredetermined statistics. Te fuzzy controller modiﬁes the\n\
    transaction approval rate by evaluating the acceptance rate,\ntransaction throughput,\
    \ and transaction delay.\nBoth transaction throughput and latency are the fuzzi-\n\
    ﬁer’s input parameters. Te inference engine assesses rules.\nTe acceptance rate\
    \ is transformed into non-fuzzy values by\nthe defuzziﬁer. Te transaction control\
    \ module obtains the\noutput value, which then modiﬁes the transaction accep-\n\
    tance rate. Te procedure gets repeated, allowing the Fabric\nnetwork to keep a\
    \ proper degree of transaction processing\ncapabilities\ndynamically.\nTransaction\n\
    throughput\nand\ntransaction latency are speciﬁed as the fuzzy variables for\n\
    membership functions on the approach, and the acceptance\nrate is evaluated as\
    \ “low,” “acceptable,” and “high.”\nTe network model of Kumar et al.’s [23] research\
    \ has\neight core elements. Trusted authority, IoT devices, un-\nmanned aerial\
    \ vehicles, intrusion detection systems, cloud\nservers, InterPlanetary File Systems,\
    \ smart contracts, and\nblockchain networks are these eight elements.\nBefore\
    \ installation, the trusted authority must register\nIoT devices, unmanned aerial\
    \ vehicles, and smart contracts.\nUsing the established session keys, the authentication\
    \ and\nkey management phase of the Internet of Tings (IoT)\nbegins with mutual\
    \ authentication and key agreement be-\ntween two IoT devices, between an IoT\
    \ device and any as-\nsociated unmanned aerial vehicle, and between associated\n\
    unmanned aerial vehicles and the cloud server.\nTe safe contact between the involved\
    \ entities is\nmaintained throughout this phase. Te IoT device installed\nin each\
    \ ﬂying zone has the potential to extract agricultural\nvalues. Unmanned aerial\
    \ vehicles (UAVs) are connected to\neach ﬂying area to gather data from IoT devices.\
    \ Te cloud\nserver saves transmitted transactions. In further detail, every\n\
    cloud server mines valid transactions using smart contracts.\nTis process keeps\
    \ them in IPFS and maintains the returned\ntransaction hash in the global blockchain\
    \ network.\nEach miner packs the IPFS hashes of the validated\ntransactions into\
    \ the current block while generating the\nblock hash and Merkle root for the next\
    \ block.\nTis model has speciﬁc veriﬁcation procedures to guard\nagainst diﬀerent\
    \ kinds of threats. Te attackers impersonate a\nreal user by creating a temporary\
    \ identiﬁcation and a partial\nprivate key. However, a session-based technique\
    \ conﬁrms\neach device’s identiﬁcation. Access rights are given if all\ncredentials\
    \ match; connections are also promptly terminated.\nAs a result, this strategy\
    \ guards against spooﬁng attacks.\nTe attackers may be insiders and have access\
    \ to all\ncredentials, including timestamps, pseudo-identities, and\nIoTdevice\
    \ identiﬁcation. However, the model can only grant\naccess following session-based\
    \ entity veriﬁcation. Tus, the\nmethod avoids insider attacks by not allowing\
    \ access without\nauthorization.\nWith the strikes of man-in-the-middle (MITM)\
    \ through\nunsecured channels and communications, the attacker may\nbe able to\
    \ obtain information about IoT devices. Attackers\nmay provide information to\
    \ UAVs, so they can carry out\nspeciﬁc tasks. Te UAVs, however, verify the session\
    \ and\nlook up the timestamp. As a result, the attacker is unable to\nconduct\
    \ the MITM threat.\nFertilizers are crucial in smart agriculture by improving\n\
    proﬁt and decreasing waste. Tis paper [24] discussed the\nresearch diﬃculties\
    \ of monitoring and managing farming\nland by enhancing crop yield and lowering\
    \ resource, energy,\nfertilizer, and human interaction wastage. Information from\n\
    the agricultural ﬁeld is gathered using the multi-modal\nsensor. IoT-based agricultural\
    \ systems assist in minimizing\nhuman contact and developing new valuable methods.\n\
    Any farmer may join the blockchain network without\npermission,\na\ntype\nof\n\
    permission-less\nprogrammable\nblockchain, and they can carry out numerous transactions\
    \ in\na database. Diﬀerent users connect to knowledge support\nsystems through\
    \ an intelligent interface device. Data about\nthe land environment is gathered\
    \ from various sensors and\nsent to the database server in the cloud environment.\
    \ Te\nMYSQL cloud database stores the acquired data. Data are\ncompiled by the\
    \ system at multiple intervals and sent to a\ncloud database. Te machine learning\
    \ algorithm creates\nknowledge patterns.\nEvery edge node in the network has a\
    \ unique identity on\nthe Hyperledger blockchain. Te member service provider\n\
    (MSP), which issues cryptographic certiﬁcates using a public\nkey primitive, issues\
    \ certiﬁcates to every network partici-\npant. Te user of the network receives\
    \ a login and password.\nTe user gets enrollment and transaction certiﬁcates to\
    \ send\ntransactions. In this approach, the chain code includes the\nbusiness\
    \ logic that establishes the state of the transaction.\nTe ledger states that\
    \ matching bock numbers get stored in\nthe state database. Hyperledger oﬀers a\
    \ secure, scalable, and\nadaptable blockchain technology for agricultural knowledge\n\
    systems.\n2. The Research\nAll old concepts are in service of the suggested theoretical\n\
    architecture (see Figure 2). It is a multi-layer design, which is\nthe cause why\
    \ it will be easier to control. Te Internet of\nTings (IoT) layer is the ﬁrst.\
    \ It consists of essential sensors\nlike humidity, temperature, pressure, acceleration,\
    \ and other\nvariables connected to ARDUINO boards. Bluetooth or a\nwireless network\
    \ is used to communicate between the de-\nvices. Te Arduino features will provide\
    \ us with data, which\nwill be exploited in the subsequent layers. Te ﬁrst layer\
    \ can\nsupply us with reliable environmental data.\nTe blockchain layer contains\
    \ three particular block-\nchains, and the agri-product information blockchain\
    \ is the\nApplied Computational Intelligence and Soft Computing\n11\nﬁrst. Te\
    \ user information blockchain is the second one. It\nhas all the information about\
    \ the network participants.\nTe transaction information blockchain is the last\
    \ one on\nthe list. It holds a wealth of information, including user\npersonal\
    \ information, intermediate information, transac-\ntions, logistics, and agricultural\
    \ product data. Smart con-\ntracts are used in this paradigm. Tose automated contracts\n\
    use the highest level of data encryption currently available in\nthe security\
    \ industry. As a result, it will conﬁrm the quality of\nthe decision and guarantee\
    \ clarity and eﬀective communi-\ncation between entities [25].\nMany sides will\
    \ attempt to check the average transaction\nfees because the whole system comprises\
    \ a multi-blockchain\nsystem. But let us see the other meaning of the blockchain\n\
    model. Te suggested architecture concurrently distributes\nsecure data to all\
    \ network participants. It is regarded as\nsigniﬁcant advantage that can increase\
    \ the eﬃcacy agri-\ncultural system.\nTe block will be full of transactions containing\
    \ recorded\ndata, and we will get multiple veriﬁed transactions at once.\nCombining\
    \ numerous transactions into a single block each\nperiod is cost and space-eﬃcient.\
    \ So, batching allows for\nreducing\nper-transaction\nfees\nby\naggregating\n\
    various\ntransactions into one. Following this protocol beneﬁts you\nand keeps\
    \ the fees low across the board for everyone. We can\nuse cryptocurrencies for\
    \ frequent transfers across platforms\nif we want to add crypto money to our model.\
    \ Teir\ntransaction fees are virtually nothing, for example, Ripple or\nLitecoin,\
    \ because generally, cryptocurrencies are con-\nstructed for lowering or eliminating\
    \ fees.\nTe research does not focus on cryptocurrencies or\ntransaction fees because\
    \ the goal of our blockchain is just\nstoring and transmitting data simultaneously\
    \ to members,\nand that is all. But, if it is obligatory to mention some info,\
    \ in\nthis case, everything on Ethereum’s transaction fees was\nbased on “gas,”\
    \ and the payment system will adopt the\nEthereum payment process based on the\
    \ calculated proce-\ndure. In 2021, the average bitcoin fees were between 2 and\
    \ 5\ndollars. Te average ETH transaction fee ranges from 2 to 7\ndollars or 0.00056\
    \ to 0.002 ETH.\nTe block size is crucial because it can signiﬁcantly\nimpact\
    \ the speed and capacity of the network. After dis-\ncovering some related research,\
    \ the average block size\nneeded in our model over 24 hours is between 0.75 and\
    \ 1.25\nmegabytes. Te average transactions per block required in\nour model over\
    \ 24 hours are between 1200 and 2200. Te\naverage number of payments per block\
    \ needed to get seen in\nour model over 24 hours is between 2500 and 5500.\nTe\
    \ members of this system are farmers, providers,\ndistributors, retailers, clients,\
    \ and controllers that help as a\nprocessing node for validating transactions,\
    \ for example, to\nadministrate the data provided by sensors and check if data\n\
    (temperature, humidity, light exposure, and soil pH) are\nreasonable. Tere is\
    \ no problem with hardware devices.\nControllers can check the data traceability\
    \ and the ware-\nhouse stock and quantity.\nBlockchains layer\nSmart Contract\
    \ System\nContract\nGeneration\nContract\nPerformance\nCustomer\nUser Information\
    \ BC\nTransaction Information BC\nAgri Product Information BC\nUser\nInformation\
    \ DB\nTransaction\nInformation DB\nAgri-Product\nInformation DB\nHumidity sensor\n\
    Light sensor\nSENSOR\nTemperature sensor\nSoil pH sensor\nRetailer\nFigure 2:\
    \ Te proposed smart contract and blockchain architecture.\n12\nApplied Computational\
    \ Intelligence and Soft Computing\nTe class diagram in the Uniﬁed Modeling Language\n\
    (UML) (see Figure 3) explains the structures, classes, at-\ntributes, methods,\
    \ and relationships between objects to\nprovide extra information about our model.\
    \ Class user stores\ninformation about the network’s participants, including\n\
    farmers, distributors, and customers. Te members who are\non the blockchain network\
    \ can visualize the database as well\nas place orders for the products they desire.\
    \ Te sensors send\nenvironmental information to ProductStatus, providing\nvalues\
    \ and conditions to determine whether they are at their\noptimum level or not.\
    \ Tese products belong to a unique\ncategory or sub-category. We added a class\
    \ named Order-\nDetails since the order class has a lot of data.\nTis use case\
    \ diagram (see Figure 4) represents the actors\nin the system model. It displays\
    \ the context and require-\nments of our system. It functions as an outsider’s\
    \ perspective\non a system that deﬁnes how users engage with its services.\nTe\
    \ farmer, distributor, and customer types of users are\ndescribed in the ﬁgure.\
    \ For example, farmers may provide a\nproduct that persuades a consumer to place\
    \ an order for it.\nDistributors transported the goods from the farms to the\n\
    consumer. Te user can view a wide range of information on\ncrop growth conditions\
    \ using the soil pH, humidity, tem-\nperature, and light exposure sensors.\nTe\
    \ food supply chain can be used to monitor a product\nfrom its raw material (e.g.,\
    \ tomato) on the farm to the\nﬁnished product (e.g., tomato sauce) on the shelf\
    \ in the retail\nstore. Tis solution depends on many Solidity ﬁles. Te ﬁrst\n\
    ﬁle contains Farmer Struct (Struct types are used to rep-\nresent an organized\
    \ structure). Tis structure is composed of\nthe ID and the name of the farmer.\
    \ Te second struct is the\nexpected yields which contain the location of the land,\
    \ the\ncorps, the amount, the estimated price, and the expiration\ndate. Te deal\
    \ struct is the third one, containing the terms,\nthe amount, and the addresses\
    \ of both the farmer and the\ncustomer. Tis contract can control farmers, manage\
    \ their\nyields, organize deals, and recharge wallets. Te farmer does\nnot need\
    \ to wait for a bank loan or other types of ﬁnancing to\nget started. Te consumers\
    \ could provide the fund with zero\ninterest. Furthermore, the farmers are not\
    \ susceptible to\nlengthy and complicated bank ﬁnancing procedures.\nTe food supply\
    \ chain is controlled by the second ﬁle,\nwhich contains three Solidity structs.\
    \ Te ﬁrst is the goods\nquality report, which includes the address of the inspector,\n\
    the quantity, the sample size, and any remarks about the\ngoods. Te processor\
    \ report is the second struct, containing\nthe notes, shipment data, and the received\
    \ quality report.\nTe last struct is the retailer report, which comprises the\n\
    name of products, the raw material, remarks, the manu-\nfactured date, the quantity\
    \ produced, and the processor\nreport received earlier. Companies can use the\
    \ system to\ntrack unsafe products back to their source and discover\nwhere they\
    \ got dispersed. Tese advantages can save lives\nand money by preventing diseases.\
    \ In addition, no one can\ntamper with the details of the quality reports (which\
    \ get\nstored on the blockchain network) for their gain. Te history\nof some products\
    \ can get tracked in real time from their\ninception to their current state. Consumers\
    \ may obtain high-\nquality items at lower prices because they are sponsoring\
    \ the\ncrops from the start. Consumers in the low-income category\ncan fund crops\
    \ according to their requirements and avoid\nmarket volatility in product costs.\
    \ Tere is no need for vast\nfarmlands. Even small-scale and family farmers can\
    \ sell their\nproducts and make more money.\nOn the distributed public ledger,\
    \ farmers can list their\nprospective crops. Consumers can look over the infor-\n\
    mation and assess the credibility of the farmers based on\nprevious cultivation\
    \ and supply. Tis system establishes a\ntransparent and tamper-proof digital market\
    \ platform for\nfarm products. As a result, the contract can be reached\nbetween\
    \ the farmer and the customer, allowing the\nconsumer to support particular crops\
    \ or ﬁelds and acquire\nthe production or a proﬁt percentage of its market value.\n\
    Based on previous agricultural production experiences, a\nranking system gets\
    \ adopted to enhance farmer and\nconsumer trust. Eventually, the system will create\
    \ a\ndecentralized agro-market where farmers can raise funds\nfor production while\
    \ also having clients buy their pro-\nduce. Alternatively, customers can secure\
    \ quality products\nat a lower cost by investing in crops early. Customers and\n\
    farmers will beneﬁt from establishing a trusting atmo-\nsphere for future collaboration.\
    \ Farmers will make the\nmost money from their produce, and the investors\n(consumers)\
    \ will be able to feed their families high-quality\nfood.\nNext, there is the\
    \ ownable contract, which has an owner\naddress. It provides sample authorization\
    \ control. It makes\nuser permissions easier to implement. Te OWNABLE\nconstructor\
    \ sets the sender as the OWNER (the user who\nowes the product). Te existing owner\
    \ can also transfer the\nownership of his contract to a new owner under this con-\n\
    tract. Te migration ﬁle facilitates the distribution of con-\ntracts to the network\
    \ and serves as a staging area for your\ndeployment activities. Tey get developed\
    \ with the notion\nthat your deployment requirements will evolve simulta-\nneously\
    \ with the blockchain evolution.\nAdditionally, we can embrace the product delivery\
    \ ﬁle\nand drop it on our architecture. Te food delivery ﬁle is a\nsmart contract\
    \ for a decentralized food delivery service.\nTe system uses some features of\
    \ Solidity code, such as\nthe unsigned integer UINT, which corresponds to the\n\
    product ID and cannot have a negative value. Te mapping is\nused to organize the\
    \ order of products. Te contract allows\nfor the creation of products and the\
    \ option of receiving\nthem. Various functions check the contents of the smart\n\
    contract, which the client will review and trigger if it is\ncorrect. Only customers\
    \ will be able to inspect it, and only\ncustomers will queue outside to obtain\
    \ the number of\nproducts. Te contract adds or removes traces from a\nproduct\
    \ and calculates a total of product traces for statistical\npurposes. Te system\
    \ also manages and controls tempera-\nture, retrieves an array of temperatures,\
    \ and returns the\nnumber of traced places.\nWe must not overlook the contract\
    \ that entails self-\nmonitoring the humidity, temperature, soil Ph, and light\n\
    exposure. Also, if these environmental data are beyond the\nthreshold, below the\
    \ threshold, or ideal, this ﬁle detects\nviolations and triggers alarms.\nApplied\
    \ Computational Intelligence and Soft Computing\n13\nTe next step is upgrading\
    \ the model to Ethereum 2.0, an\nupdate to the present Ethereum blockchain. It\
    \ intends to\nimprove the Ethereum network’s speed, eﬀectiveness, and\nsustainability\
    \ by boosting the number of transactions. When\ncompared to the prior version,\
    \ it features several signiﬁcant\nstructural transformations. “Proof of stake”\
    \ and “sharding”\nare these eﬀective modiﬁcations.\nValidators, rather than miners,\
    \ are used in the proof of\nstake consensus method. Teir primary function is to\n\
    propose new blocks and oﬀer computer power, storage, and\nbandwidth for transaction\
    \ validation. Validators are paid in\nETH regularly (deposit contract of 32 ETH\
    \ to validators).\nSharding is the process of breaking up a single block-\nchain\
    \ into numerous shards. As a result, the network be-\ncomes more solid since a\
    \ single validator does not need to\nhandle the entire architecture.\nTe consensus\
    \ process type is the main diﬀerence be-\ntween Ethereum 2.0 and its predecessor.\
    \ Ethereum 2.0\nemploys a proof of stake (PoS) method. In contrast,\nEthereum\
    \ utilizes a proof of work (a power procedure in\nwhich miners decode complicated\
    \ mathematical challenges\nusing high processor quality and computer equipment).\n\
    Because Ethereum 2.0 will use fragment chains, it can\nprocess up to 10,000 transactions\
    \ per second, whereas\nEthereum can only handle 30.\nBecause the cryptographic\
    \ approach is more straight-\nforward in Ethereum 2.0, it consumes signiﬁcantly\
    \ less\nenergy. Furthermore, because of its eﬀectiveness, the im-\nprovement is\
    \ projected to lower transaction fees inside the\nnetwork, allowing for smaller\
    \ transactions.\nAgricultural production is inﬂuenced by various ex-\nternal elements\
    \ such as climate and harvest quality. Te\nsystem links all of these participants\
    \ with the end pur-\nchasers, allowing anyone to intercommunicate in the\nproﬁts\
    \ while ensuring that customers get their healthy\ncrops. Ethereum 2.0 can improve\
    \ supply chain transpar-\nency and assist producers and customers in eliminating\n\
    ineﬃcient workﬂow. Validators can provide a perfect\nenvironment from the farm\
    \ to the market. As a result, the\ngoods’ transaction costs will be decreased.\
    \ Te proof of\nstake can easily locate and track a product from a local\nstore.\
    \ Tis mechanism can also determine the farm that\nprovided a crop as well as the\
    \ date of harvest. Te sharding\nprocess in Ethereum 2.0 can allow us to maximize\
    \ the\nblockchain organization level by classifying user infor-\nmation from product\
    \ information. Te mechanism did not\ndesign validators in Ethereum 2.0 to resolve\
    \ mathematical\nproblems to validate transactions; instead, they must check\n\
    data integrity.\nA technical stack, sometimes referred to as a technology\ninfrastructure\
    \ or solutions stack, is currently crucial for\ncreating scalable, maintainable\
    \ applications. A technology\nstack is a collection of technologies layered on\
    \ top of each\nother to develop any application. Te technology stack in-\nﬂuences\
    \ the sort of apps you may design, the degree of\ncustomization you can make,\
    \ and the resources you require\nto build your application.\nProof of concept\
    \ (PoC) is an essential component of\nevery software project since they reduce\
    \ possible risks and\ndemonstrate the project’s perspective.\nProof of concept\
    \ should be the foundation of every\nsoftware development process since it has\
    \ several beneﬁts for\nprojects. PoC takes care of everything, from reducing failure\n\
    risks to evaluating the possibility of scalability. To improve\nthe overall research,\
    \ we have collected all the advantages of\nthis procedure.\nRisk minimization\
    \ is by far a proof of concept’s most\nsigniﬁcant beneﬁt. Te development team\
    \ analyzes potential\nproblems before beginning the procedure.\nIt is just as\
    \ crucial to plan your scaling approach as it is to\nrelease a top-notch product.\
    \ In the long term, you need to\nknow\nhow\nto\nbuild\nyour\nsolution\ntechnically\n\
    and\ncommercially.\nDuring a seed round, supporting the idea with concrete\nevidence\
    \ of its potential is essential. Nobody pays for ab-\nstract ideas.\n- User Address\
    \ String\n- User Address2:String\n- UserCity:String\n- UserCountry:String\n- UserDescription:String\n\
    - UserEmail:String\n- UserFirstName:String\n- UserID:String\n- UserLastName:String\n\
    - UserMobileNumber:Integer\n- UserPass:String\n- UserRegistrationData:String\n\
    - UserState:String\nUser\n- ClientAddr:String\n- ClientrID:int\n- OrderAmount:int\n\
    - OrderCity:String\n- OrderCountry:String\n- OrderCurrency:String\n- OrderDate:Date\n\
    - OrderEmail:String\n- OrderID:int\n- OrderOfferor:String\n- OrderShipAddr:String\n\
    - OrderShipMethod:String\n- OrderShipped:boolean\n- OrderShipping:String\n- OrderState:String\n\
    - OrderTax:double\n- OderTrackingNbr:int\nOrder\n- CategoryID:int\n- ProdCodeBar:int\n\
    - ProdDescription:String\n- ProdExpirationDate:Date\n- ProdLocation:String\n-\
    \ ProdName:String\n- ProdPrice:double\n- ProdProducerSupplier:String\n- ProdProducerSupplierAddr:String\n\
    - ProdProductionDate:Date\n- ProdQuantity:int\n- ProdRowMaterials:String\n- ProdStatusID:int\n\
    - ProdWeight:double\nProduct\nCategoryProduct\n- CategoryDescription:String\n\
    - CategoryID:int\n- CategoryName:String\nSensors\n+ Check ():void\n+ control ():void\n\
    SoilpHSensor\nLightSensor\nTemperatureSensor\nHumiditySensor\nProductStatus\n\
    - ProdCodeBar:int\n- ProdHumidityStatus:String\n- ProdHumidityValue:double\n-\
    \ ProdLightStatus:String\n- ProdLightValue:double\n- ProdSoilPhStatus:String\n\
    - ProdSoilPhValue:int\n- ProdStatusDescription:String\n- ProdStatusID:int\n- ProdTemperatureStatus:String\n\
    - ProductTemperatureValue:double\nOrderDetails\n- DetailDescription:String\n-\
    \ DetailID:int\n- DetailPrice:double\n- DetailQty:int\n- OrderID:int\n- ProdCodeBar:int\n\
    Farmer\n- FarmerID:String\n- FarmName:String\nCustomer\n- CustomerID:String\n\
    Distributor\n- DistributorID:String\n1\ndata reception\n0..*\n+sub-category\n\
    0..*\n+parent\n0..1\n1\ncontains\n0..*\n1\n1..*\nconstitue\nof\norders\n0..*\n\
    1\nmore details\n1\n1\nstatus\n1\n1..*\nFigure 3: Te class diagram of the proposed\
    \ model.\n14\nApplied Computational Intelligence and Soft Computing\nBuilding\
    \ a PoC to test concepts in actual settings and\nobtain early feedback involves\
    \ selecting the right technology\nstack and creating the architecture.\nFigure\
    \ 5 shows the technology stack of the proposed\nmodel.\nTe physical or infrastructure\
    \ layer assists in gathering\nenvironmental data, such as soil pH, temperature,\
    \ humidity,\nand light exposure measurements. We also have nodes,\nwhich are network\
    \ members. A node is any device that has\npermission to access blockchain network.\n\
    Blockchain, as a concept, organizes data into user data,\nagricultural product\
    \ data, and transaction data. Blockchains\nemploy consensus methods to make sure\
    \ the nodes reach an\nagreement. It is a fantastic procedure to increase the net-\n\
    work’s eﬃciency by introducing a new degree of depend-\nability and achieving\
    \ information security.\nLarge portions of the model are at the level of smart\n\
    contracts. Te middleman got just eliminated. You will not\nhave to worry about\
    \ trust issues since there are standards\nprotecting everyone’s legal rights.\
    \ Since everything gets\ncomputerized, higher authorities cannot have any impact,\n\
    and the procedure is quite open.\nTe Kaleido interface serves as a functional\
    \ testing\nplatform. It assists in facilitating access to the decentralized\n\
    ledger. Te users receive great help from this layer. Tis\nplatform enables access\
    \ to all data. Peer-to-peer server\nnetworks allow users to connect to the blockchain\
    \ network.\nWe have selected the blockchain network and its tools/\nservices.\
    \ Te system software, database, server, and\nframeworks comprise most of the backend\
    \ or server-side\ntechnology stack. Tese technologies are appropriate for\nour\
    \ planned research. For the automation of various\nfunctions, we also have the\
    \ opportunity of dealing with\nsmart contracts.\nTe front end of choice for most\
    \ online apps stays the\nsame. Te research will use a cutting-edge web application\n\
    System One\nRegistration\nAuthentif\n-ication\nInvalid\nCheck product\nstatus\n\
    Ask product\nqueries\nAnswer\nproduct\nqueries\nVisualize Agri-\nProduct info\n\
    Upload data of\ntransport\nDistribute\nproduct\nBuy product\nOﬀer product\nWeather\n\
    details\nIrrigation\ndetails\nEquipment\ndetails\nCorp details\nLight details\n\
    SoilpH details\nProductivity\ndetails\nFarmer\nCustomer\nDistributor\nNetwork\
    \ member\n«include»\n«include»\n«extend»\n«extend»\n«extend»\n«extend»\n«extend»\n\
    «extend»\n«extend»\n«include»\n«extend»\nFigure 4: Use case diagram of the proposed\
    \ model.\nApplied Computational Intelligence and Soft Computing\n15\nbuilt on\
    \ the foundations of HTML, CSS, JavaScript, and\nTypeScript to deliver additional\
    \ functionalities.\nProgramming languages handle the crucial business logic\n\
    required by the applications. It is necessary to utilize the\nSolidity programming\
    \ language and create source code that\nwill automate various functions, such\
    \ as identifying the cir-\ncumstances of crop growth. However, no technology can\n\
    provide complete 100% security. Te blockchain network\nconsistently adheres to\
    \ best practices to guarantee the highest\ndata and transaction protection level\
    \ and reduce risks.\nFuture testing will focus on the new Web 3.0 blockchain\n\
    technology stack, which diﬀers from earlier iterations.\nHowever, transitioning\
    \ from client-server architecture to a\ndecentralized web will not be radical.\
    \ Te changes are sig-\nniﬁcant and distinct.\nWeb 3.0 blockchain technology stacks\
    \ are still devel-\noping and maturing step by step. Even though they are safer,\n\
    they are often a little bit slower. As a result, the transition\nwould initially\
    \ include building a partially decentralized\nnetwork before going decentralized.\n\
    3. Testing and Analysis\nTe ﬁgures depict the tested blockchain system. Te tested\n\
    architecture contains one environment, one member, and\nthree smart contract script\
    \ codes (ﬁnance, storage envi-\nronment, and traceability).\nFigure 6 depicts\
    \ the dashboard system, which allows the\nuser to learn about the testing environment.\
    \ Among these\ndata, we can ﬁnd information about network participants\nlike the\
    \ membership name, the membership ID, the primary\ncontact e-mail, and the joining\
    \ date.\nTe KALEIDO organization issues a membership cer-\ntiﬁcate with a common\
    \ name and a serial code. In this\nsituation, the dashboard shows a list of applications\
    \ directly\nconnecting to our blockchain system, like our smart contract\nscript\
    \ codes.\nFigure 7 shows the current condition of the blockchain\nsystem, such\
    \ as the creation date, block height, network\nparticipants, release version,\
    \ and protocol utilized (Geth/\nPoa). We established two nodes (node 1 and node\
    \ 2) for\ntesting, and one of them is inserted by smart contract codes.\nTere\
    \ is also the node that has the name system monitor.\nTese nodes have all got\
    \ started.\nTe details of the block node injected with the smart\ncontract script\
    \ are shown in Figure 8. Among these details,\nwe can ﬁnd the node name (node\
    \ 1), the node ID, the node\nsize (small), the owner, the status (started or paused),\
    \ and\nthe AWS region because we have used the Amazon Web\nServices, along with\
    \ the date it was formed and the date it\nwas last modiﬁed.\nApp platorm\nSmart\
    \ contracts\nBlockchain\nnetwork\nPhysic layer\nenvironmental\nsensors\nNodes\n\
    Distributed\nledger\nInformation\nsecurity\nData\nOrganization\nVeriﬁcation\n\
    of data\ncorrectness\nPeer to peer\nnetwork\nConsensus\naigorithm\nSolidity\n\
    programming\nlanguage\nAutomation\nVeriﬁcation of\nenviromental\nvalues\nDecision\n\
    helper\nKaleido\ninterface\nKaleido\nAnalysis\nKaleido\nSharts\nFigure 5: Te technical\
    \ stack of the proposed model.\n16\nApplied Computational Intelligence and Soft\
    \ Computing\nTe details include\n(i) Te blockchain node ID.\n(ii) Te consensus\
    \ role (non-signer).\n(iii) Te consensus ID.\n(iv) Te runtime version.\n(v) Te\
    \ user accounts.\nIn general, the ﬁgure represents all of the metadata for\nnode\
    \ 1.\nFigure 9 shows all of the smart contracts added to the\nblockchain. Finance,\
    \ storage environment, and traceability\nare the three aspects of smart contracts.\
    \ Solidity is the\nprogramming language used to create them. Te Solidity\nprogramming\
    \ language exists only to facilitate the creation\nof smart contracts on the Ethereum\
    \ blockchain.\nTe smart contract algorithm is depicted in Figure 10.\nTe blockchain\
    \ system now includes these algorithms. As\nyou can see, this ﬁgure shows some\
    \ functions in the storage\nenvironment Solidity ﬁle. For instance, consider the\n\
    Figure 6: Characteristics of the testing environment.\nFigure 7: Implementing\
    \ the smart contracts on node 1.\nFigure 8: Te metadata of node 1.\nApplied Computational\
    \ Intelligence and Soft Computing\n17\nprogramming method that evaluates light\
    \ exposure, soil pH,\ntemperature, and humidity. Tere are other functions, such\n\
    as the one that identiﬁes environmental violations.\nIn addition, the script code\
    \ displays the current state of\nall these factors and the variety of additional\
    \ features. Tis\nsection is concerned with creating the best possible envi-\n\
    ronment for seeds and products at farms and warehouses.\nTe quantity of resources\
    \ required to run these script\ncodes deﬁnes their complexity. Time and memory\
    \ con-\nstraints are given special attention. Tese processes should\ntake the\
    \ same time on a particular system regardless of the\ninput size. Another resource\
    \ that gets used is the number of\narithmetic operations.\nTese graphs (see Figure\
    \ 11) illustrate that injecting\nsmart contract code has a minor impact on the\
    \ resources.\nTe memory used by the smart contracts was just about 150\nmegabytes.\
    \ In addition, the smart contracts only utilized\nroughly 40 megabytes of disk\
    \ space. Tese numbers boost\neﬃciency speed and have no negative impact on the\
    \ system,\ncomputer nodes, or RAM.\nFigure 12 depicts several successful block\
    \ node trans-\nactions. Tese ﬁndings indicate that smart contracts might\nget\
    \ used on a sensor dataset in the future (temperature, light,\nhumidity, and soil\
    \ pH).\nTe system is divided into three major categories. Te\nﬁrst one is distribution\
    \ and traceability, which encompasses\nall aspects of tracking and tracing a product\
    \ from start to\nﬁnish. Te second category is ﬁnance, which involves all\naspects\
    \ of ﬁnancial transactions. Finally, storage is the third\ncategory, which covers\
    \ all violation management and reg-\nulates the environmental data of the farm\
    \ and the\nwarehouse.\nAfter employing IoT devices to insert product infor-\n\
    mation into the system, the associated authority can verify\nthe real-time temperature,\
    \ humidity, soil pH, and light\nexposure conditions. Te contract self-checks data\
    \ to keep\nFigure 9: Te blockchain includes smart contracts.\nFigure 10: Some\
    \ of the functionalities of the smart contract.\n18\nApplied Computational Intelligence\
    \ and Soft Computing\ntrack of status and violations. Te system displays tem-\n\
    perature, humidity, soil pH, and light exposure values and\nchecks whether or\
    \ not they are close to ideal conditions.\nTe suggested architecture also maintains\
    \ conﬁdence\nbetween entities. Before acquiring a product, it guarantees\nthat\
    \ the consumer is adequately informed about the repu-\ntation of other sides (the\
    \ seller). Furthermore, the early\nwarning feature is added to reduce the usage\
    \ of chemicals\nand establish the safety of agricultural produce.\nTough bitcoin\
    \ popularized blockchain transactions,\nputting it in a real-world use case still\
    \ has various diﬃculties\nand many goals to achieve. Nevertheless, blockchain\
    \ is still\nin its early phases and contains serious ﬂaws. Also, the\napplications\
    \ are a considerable challenge to optimize the\nsolutions and the entire food\
    \ supply chain.\nWe all agree that the procedures are automated and\ndependable\
    \ after these analyses. Smart contracts periodically\nself-check data, keep track\
    \ of all the details, and help save\ndata to the blockchain. When it comes to\
    \ the blockchain, the\ndate, time, and product identiﬁer allow all participants\
    \ to\ntrack products and assure that they have access to infor-\nmation about\
    \ the source of the products. Te integrity is not\nthreatened because the only\
    \ participants authorized were\nthose who could execute operations. Furthermore,\
    \ using\nsmart contracts eliminates the need for an intermediary\nparty, and no\
    \ one can alter the data inside the blockchain\nafter it is veriﬁed.\nSo, it will\
    \ be impossible to change the data if someone\ndoes something wrong or by mistake.\
    \ Also, data collection\nrelies on IoT devices; if they get broken, data collection\
    \ is\nimpossible. Furthermore, IoT devices are sometimes subject\nto security\
    \ vulnerabilities.\nPossibly, some participants cannot comprehend the\nsystem\
    \ or blockchain technology. Tey may have limited\nknowledge or a lack of understanding\
    \ of some functional-\nities. Perhaps we cannot persuade some participants to\
    \ give\ninformation. But, in general, the system oﬀers a radical\nchange in all\
    \ aspects of an existing business.\nTe comparison system (see Table 1) provides\
    \ all the\ndetails we have discussed. It is conceivable that the proof-of-\nwork\
    \ consensus mechanism is the algorithm that operates\nwhen the system employs\
    \ the Ethereum platform. However,\nwe have found that many studies neglect to\
    \ include this\npoint.\n4. Performance Evaluation\nTroughput is probably the most\
    \ misunderstood perfor-\nmance testing principle that beginner testers occasionally\n\
    have trouble mastering. In general, “throughput” refers to\nMemory\nMemory\nTis\
    \ node’s memory (RAM) utilization over the past 24 hours\n200 MB\n150 MB\n100\
    \ MB\n50 MB\n0 MB\nDisk\nDisk\n50 MB\n40 MB\n30 MB\n20 MB\n10 MB\n0 MB\n2 PM\n\
    3 PM\n4 PM\n5 PM\n6 PM\n7 PM\n8 PM\n9 PM\n10 PM 11 PM Dec 29 1 AM\n2 AM\n3 AM\n\
    4 AM\n5 AM\n6 AM\n7 AM\n8 AM\n9 AM 10 AM 11 AM 12 PM\n1 PM\n4 PM\n8 PM\nDec 27\n\
    4 AM\n8 AM\n12 PM\n4 PM\n8 PM\nDec 28\n4 AM\n8 AM\n12 PM\n4 PM\n8 PM\nDec 29\n\
    4 AM\n8 AM\n12 PM\nTime\nTime\nDec 29, 1:00 PM\nDisk: 39 MB\nSystem Monitor\n\
    Dec 29, 6:20 PM\nMemory: 136 MB\nnode 1\nFigure 11: Te minor impact of the smart\
    \ contract script on the machine resources.\nFigure 12: Several successful block\
    \ node transactions.\nApplied Computational Intelligence and Soft Computing\n\
    19\nTable 1: System comparison with existing methods.\nRef\nIoT app\nIoT devices\n\
    Consensus algo.\nSecurity\nanalysis\ntechniques\nEnergy\nand data\nsize tests\n\
    Platform\nEnvironment\ncontrol smart\ncontracts\nTrace and\ndistribution\nsmart\
    \ contract\nFinancing\nsmart\ncontract\nOther smart\ncontracts and notes\n[12]\n\
    Yes\nTemperature sensor,\nwater level sensor,\noxygen sensor, pH\nsensor, and\
    \ water pump\nPBFT\nNot\nmentioned\nYes\nHyperledger\nFabric\nNo\nBasic\nNo\n\
    Records history of\nall transactions and\ndevice\nmanagement\n[13]\nYes\nTemperature\
    \ sensor, light\nsensor, and humidity\nsensor\nNot mentioned\nNot\nmentioned\n\
    Yes\nEthereum\nYes\nYes\nBasic\nStorage smart\ncontracts\n[14]\nNo\nNo IoT app\
    \ mentioned\nPoW\nNot\nmentioned\nYes\nEthereum\nNo\nYes\nYes\nNo other smart\n\
    contracts\n[15]\nNo\nNo IoT app mentioned\nPoW\nYes\nYes\nEthereum\nNo\nNo\nNo\n\
    Te agent\norchestrates\noﬄoading services\n[16]\nYes\nSensors that manage\nwater,\
    \ air, sunlight, and\nsoil quality escarpments\nNot mentioned\nYes\nBasic\nHyperledger\n\
    Fabric\nNo\nYes\nYes\nStorage of planting\nand farm\ninformation\n[17]\nYes\n\
    Sensors, cameras, GPS\nlocator, and 4G\ncommunication\nNot mentioned\nNot\nmentioned\n\
    Basic\nEthereum\nYes\nYes\nYes\nUse case of soybean\nsupply chains\n[20]\nNot\n\
    mentioned\nNo equipment\nmentioned\nNot mentioned\nYes\nNo\nEthereum\nNo\nYes\n\
    Yes\nInsurance claim\n[21]\nYes\nCameras, smart sensors,\nRFID, and GPS\nTeir\
    \ consensus\nmechanism\n(OASCs’\nconsensus\nnetwork)\nYes\nYes\nIt looks like\
    \ an\nEthereum sys.\nNo\nYes\nBasic\nAutomated\nworkﬂows of\nOASCs\nOur\nsurvey\n\
    Yes\nTemperature sensor,\nhumidity sensor, light\nexposure sensor, and soil\n\
    pH sensor\nPoW (in future\nPoS)\nYes\nYes\nEthereum (in\nfuture\nEthereum 2.0)\n\
    Yes\nYes\nBasic\nNo other smart\ncontracts\n20\nApplied Computational Intelligence\
    \ and Soft Computing\nthe volume of transactions generated throughout the test.\
    \ It\nmay also be described as the minimum amount of capacity\nthat an application\
    \ or website can handle.\nAdditionally, it is typical to set a throughput goal\
    \ for the\napplication before beginning a performance test run so that\nit can\
    \ handle a certain number of requests per hour.\nTe suggested model, for instance,\
    \ uses multiple\nblockchains. User information blockchain, agri-product\ninformation\n\
    blockchain,\nand\ntransaction\ninformation\nblockchain are the three blockchains.\
    \ Let us assume that,\nregardless of the volume or quantity of the data, it always\n\
    takes one second to save a new set of three records on each\nblock of the blockchain\
    \ that we have.\nA performance report for this scenario would reveal that\nthe\
    \ throughput is three records per moment. For more\nexplanation, the user information\
    \ blockchain can save the\nﬁrst recording data, the agri-product information block-\n\
    chain can keep the second recording data, and the trans-\naction information blockchain\
    \ can save the third recording\ndata. Tis thinking is our maximum throughput,\
    \ but the goal\nnow is to increase it by updating the programming level of\nsmart\
    \ contracts by incorporating new methods and func-\ntions that reduce execution\
    \ time and work to prevent\nbottlenecks in the blockchain network.\nTe ﬁrst issue\
    \ users have represented in transaction\nlatency is the delay between initiating\
    \ a transaction or\npayment and receiving conﬁrmation that it is valid. You\n\
    would anticipate a ﬂattening of the throughput once all users\nhave logged in,\
    \ begun to work, and sent requests. In our case,\nhowever, we have not added cryptocurrency-based\
    \ ﬁnancial\ntransactions yet, and the project’s goal is to simultaneously\nreceive\
    \ data from sensors and send it to the blockchain\nnetwork. Hence, the automated\
    \ system of smart contracts\nhelps data arrive in any case and in good time for\
    \ analyses.\nWith minimal competition, throughput varies by simply\nadjusting\
    \ the load while latency remains constant. Te\nreason is that whatever comes in\
    \ comes out directly since\nthere is a reasonable minimum cost to complete a trans-\n\
    action, and the queuing time is zero at low congestion.\nEvery newly formed block\
    \ has a timestamp. Te\nblockchain system uses timestamps to count the number of\n\
    blocks added and produced during speciﬁc time intervals,\nsuch as per hour. Te\
    \ transaction latency metric can be\ncalculated by looking up each transaction’s\
    \ timing and\ncomparing the time it got completed to the time it was\napproved\
    \ and saved. Tis measure can also reveal the speed\nat which consensus methods\
    \ got used. Te outcomes of these\ntests provide evaluations of the blockchain\
    \ system’s func-\ntionality and scalability.\nA 3.5 GHz CPU device with 32 GB\
    \ RAM and a 3 TB hard\ndrive\nwill\nexecute\nthe\nmodel\n(Ethereum\nblockchain\n\
    network—8 nodes) with a margin of 100–120 seconds for\nlatency and a margin of\
    \ 235–260 transactions per second\n(TPS) for throughput. Data must wait to get\
    \ transferred\nwhen the local network’s capacity gets exceeded by traﬃc.\nNaturally,\
    \ there will be more delay as a result. Te latency\nwill increase as the network\
    \ becomes more crowded and we\nhave many activities simultaneously. However, solid\
    \ wireless\nsignals make it possible for data to be transported from the\nsource\
    \ to the destination within a short period and decrease\nlatency. Adding more\
    \ controllers or validators who conﬁrm\nblockchain transactions may boost performance.\n\
    Te analyzers must measure a large-scale distributed\nsystem to identify obstacles\
    \ or blockages and predict ex-\npected behavior under pressure.\n4.1. Security\
    \ Analysis. Now we will go on to the security\nanalysis part, where we will list\
    \ all of the model’s compo-\nnents and discuss how they can provide security services\
    \ and\nhow they operate together to secure our data and deliver\naccurate information\
    \ to all network members.\nSmart contracts, apps, and the blockchain environment\n\
    are vulnerable to attacks if the model gets weakly built. Let us\nstart with the\
    \ blockchain-based system, a public ledger of\ndata kept on all nodes, with all\
    \ participants receiving the\nsame version of information and updates in real\
    \ time as data\nchanges. Furthermore, users authenticate using public-key\ncryptography,\
    \ and validators check the data for accuracy\nbefore storing them in blocks; thus,\
    \ all data transactions\nought to have acceptance from all nodes in the network.\n\
    Finally, once transactions get preserved in blocks, no one or\nentity may edit\
    \ or alter the block’s content.\nTe level of security in the blockchain scheme\
    \ is in-\ntriguing, but let us now discuss smart contract security,\nwhich is\
    \ more than simply a software program that gets run\nautomatically. It is a part\
    \ of the system. In our example, it\ncan receive, transmit, and store data about\
    \ the environment,\nsuch as temperature, humidity, light, and soil pH. It can\
    \ also\ntrack down the merchandise and determine which company\nowns it. We must\
    \ not forget that smart contracts specify the\nextent of an agreement between\
    \ business parties by deﬁning\ncriteria that function as a trigger event in the\
    \ contractual\nterms. Te code gets performed, and the results get displayed\n\
    on all of the network’s nodes. Smart contracts get written\nconditionally, using\
    \ if-then expressions, and thus neglect\nmany of the problems caused by regular\
    \ agreements, such as\nfraud. Te use of blockchain to establish these types of\n\
    arrangements eliminates the need for an intermediary. As a\nresult, the total\
    \ expenditures of the company get reduced. To\nprevent losses, professionals make\
    \ timely code optimiza-\ntions, conduct frequent code audits, and monitor the\
    \ ab-\nerrant behavior of implemented deals.\nUnless you install protection, IoT\
    \ devices might be the\nweakest link in terms of security. For example, the IoT\n\
    confronts fake cell tower assaults and threats such as man-\nin-the-middle attacks\
    \ and SMS attempts such as phishing.\nBlockchain technology has been a remarkable\
    \ example of\nproviding safety in transactions and information transfer. It\n\
    oﬀers a unique data structure in addition to integrated se-\ncurity measures.\
    \ Consensus, decentralization, and cryp-\ntography—which ensure the trust of transactions—are\
    \ the\nfoundations of the blockchain.\nHowever, poor technical implementation\
    \ has led to\nseveral security vulnerabilities with blockchain. Although\nblockchain\
    \ has signiﬁcant security ﬂaws, cyber security\nexperts with special analytical\
    \ and technical skills may take\nsome steps to minimize these problems and implement\n\
    Applied Computational Intelligence and Soft Computing\n21\nblockchain in the safest\
    \ possible way. Although the sug-\ngested approach may not stop these attempts,\
    \ it makes it\ndiﬃcult for hackers to carry them out.\nA 51% assault happens when\
    \ one person or group of\nhackers gather more than half of the hash rate and takes\
    \ over\nthe entire system, which may be fatal for blockchains that\nhandle ﬁnancial\
    \ transactions. In this case, hackers can alter\ntransactions and stop the veriﬁcation\
    \ process. In sequence,\nthe entire model will not add the transactions to the\
    \ blocks.\nTe attackers can even undo already ﬁnished transactions,\nwhich leads\
    \ to double-spending. Tankfully, by increasing\nthe hash rate and reducing the\
    \ usage of proof-of-work\ntechniques, we can avoid 51% assaults. Te results conclude\n\
    that this particular threat does not beneﬁt the attacker itself\nbecause the main\
    \ goal of the suggested agricultural model is\nto organize farm environmental\
    \ data, distribute it to all\nnetwork participants, and provide a layer of security\
    \ and\nconﬁdentiality to these data.\nPhishing attacks are seriously impacting\
    \ blockchain\nnetworks. Te purpose of a phishing attack is for the hacker\nto\
    \ obtain the user’s login information. To the owner of the\nwallet key, they may\
    \ send emails that appear to be honest.\nTe user must enter their login information\
    \ into a false\nhyperlink that is connected. A user’s passwords and other\nsensitive\
    \ information may be compromised, which may\ncause harm to both the individual\
    \ and the blockchain\nnetwork. If blockchain network members get an e-mail\nasking\
    \ for login information, they must conﬁrm with the\npartner (other members, for\
    \ example). Additionally, in-\nstalling malicious link detection software might\
    \ aid in\ndefending against this threat. We can point out that con-\nnecting to\
    \ the blockchain through public Wi-Fi could be\nrisky.\nRouting attacks, for example,\
    \ are attacks when a hacker\nuses the anonymity of a user account to intercept\
    \ data as they\nget sent to Internet service providers. Data transfer and\nactivities\
    \ continue as usual in the case of a routing attack, so\nthe participants are\
    \ typically oblivious to the threat. How-\never, establishing a secure routing\
    \ protocol will solve this\nissue. Te users of the network must use strong passwords\n\
    and update them often. In practice, some farms are pretty\nlikely to adopt this\
    \ architecture, and there is a critical need to\nnotify every blockchain participant\
    \ of the risks related to\ndata security.\nUsers connect with the blockchain using\
    \ electronic\ndevices like computers and smartphones, which are the\nendpoints\
    \ of the blockchain network. Hackers can target\ndevices and monitor user activity\
    \ to obtain the user’s key.\nTe participants should not save blockchain keys on\
    \ com-\nputers as text ﬁles by network users. Identifying dangers and\nsecuring\
    \ the device include installing antivirus software.\nHackers could consider creating\
    \ plenty of phony net-\nwork nodes (Sybil attack). Tey can gain majority consensus\n\
    and stop the chain’s transactions using this technique.\nMassive Sybil strikes\
    \ implied a 51% attack. Te suggested\napproach utilizes suitable consensus methods\
    \ and keeps\ntrack of the actions of other nodes.\nSmart contract vulnerabilities\
    \ can be risky because they\ncan lead to security ﬂaws in the source code. In\
    \ this case, the\ncode is straightforward, only analyzes information, detects\n\
    crop growth conditions, and assesses the state of the product.\nOur smart contract\
    \ source code will continually get updated.\nFor instance, we may utilize the\
    \ Oyente Analysis Tool to ﬁnd\nvulnerabilities in contracts built on Ethereum.\
    \ Tis tech-\nnique evaluates the bytecode of the Ethereum blockchain.\nTe goal\
    \ of analyzing and measuring connectivity,\nmonitoring sensors, and making intelligent\
    \ modiﬁcations\nand enhancements is to maximize price and quality. IoT\ndevices\
    \ generally use Linux operating system, typically the\ncustomized version. Data\
    \ are protected when they ﬂow from\nthe local machine to the other scheme stages\
    \ in IoT security\n(blockchain and smart contract layer). IoTdevices frequently\n\
    have a mobile application and are used to connect to devices\nvia the Internet.\
    \ When monitoring the sensors wirelessly,\nuse a VPN to connect to them. Man-in-the-middle\
    \ attacks\nwill never be possible with a VPN solution. Block unneeded\nnetwork\
    \ ports, for example, the Telnet port should be\ndeactivated to prevent further\
    \ Telnet protocol attacks. By\nallowing traceable proof of ownership of products\
    \ and by\nintegrating unique tags (e.g., RFID, NFC, and QR codes) to\ncreate smart\
    \ tags, we can add a few supply chain logistics to\nensure traceability and protect\
    \ the information exchanged\nthrough blockchain.\n5. Conclusion and Future Work\n\
    In conclusion, blockchain and IoT technologies can aid in\ndeveloping a secure,\
    \ transparent, open, and innovative\necological agriculture system that involves\
    \ all participants.\nTis work aims to provide a possible technique to build\n\
    practical blockchain-based applications and change the\nagriculture industry,\
    \ even though the evolution of block-\nchain and agriculture research studies\
    \ is still in its infancy.\nTis model is considered a prototype for reducing ﬁnancial\n\
    loss and agricultural pollution. Te system deﬁnes the three\nprimary entities\
    \ in the agriculture domain: data, process, and\nstakeholders. Adding a cryptocurrency\
    \ process for the in-\nteraction between the entities and registering/tracking\
    \ the\nseller’s land will be a big step for this blockchain system\nmodel.\nData\
    \ Availability\nTe data used to support the ﬁndings of this study are\navailable\
    \ from the corresponding author upon request.\nConflicts of Interest\nTe authors\
    \ declare that they have no conﬂicts of interest.\nReferences\n[1] G. S. Sajja,\
    \ K. P. Rane, K. Phasinam, T. Kassanuk,\nE. Okoronkwo, and P. Prabhue, “Towards\
    \ applicability of\nBlockchain in Agriculture sector,” Materials Today Proceed-\n\
    ings, vol. 5, 2021.\n[2] J. Lin, Z. Shen, A. Zhang, and Y. Chai, “Blockchain and\
    \ IoT\nBased\nFood\nTraceability\nfor\nSmart\nAgriculture,”\nin\n22\nApplied Computational\
    \ Intelligence and Soft Computing\nProceedings of the 3rd International Conference\
    \ on Crowd\nScience and Engineering, Singapore, 2018.\n[3] W. Lin, X. Huang, V.\
    \ Wang et al., “Blockchain technology in\ncurrent agricultural systems: from techniques\
    \ to applica-\ntions,” IEEE Access, vol. 8, pp. 143920–143937, 2020.\n[4] H. Xiong,\
    \ T. Dalhaus, P. Wang, and J. Huang, “Blockchain\ntechnology for agriculture:\
    \ applications and rationale,” IEEE\nAccess, vol. 3, pp. 1–7, 2020.\n[5] P. Dutta,\
    \ T. M. Choi, S. Somani, and R. Butala, “Blockchain\ntechnology in supply chain\
    \ operations: Applications, chal-\nlenges and research opportunities,” Transportation\
    \ Research\nPart E: Logistics and Transportation Review, vol. 142, Article\nID\
    \ 102067, 2020.\n[6] G. Leduc, S. Kubler, and J. P. Georges, “Innovative Block-\n\
    chain-based farming marketplace and Smart contract per-\nformance evaluation,”\
    \ Journal of Cleaner Production, vol. 306,\npp. 1–15, 2021.\n[7] P. Bottoni, N.\
    \ Gessa, G. Massa, R. Pareschi, H. Selim, and\nE. Arcuri, “Intelligent smart contracts\
    \ for innovative supply\nchain management,” Frontiers in Blockchain, vol. 3, no.\
    \ 52,\n2020.\n[8] K. Dey and U. Shekhawat, “Blockchain for sustainable\ne-agriculture:\
    \ literature review,” Architecture for data man-\nagement, and implications, Journal\
    \ of Cleaner Production,\nvol. 316, pp. 1–17, 2021.\n[9] L. Hang, I. Ullah, and\
    \ D. Kim, “A secure ﬁsh farm platform\nbased on Blockchain for agriculture data\
    \ integrity,” Com-\nputers and Electronics in Agriculture, vol. 170, pp. 1–15,\
    \ 2020.\n[10] T. H. Pranto, A. A. Noman, A. Mahmud, and A. K. M. Haque,\n“Blockchain\
    \ and Smart contract for IoT enabled smart agri-\nculture,” 2021, https://arxiv.org/abs/2104.00632.\n\
    [11] X. Huang, D. Ye, and L. Shu, “Securing parked vehicle assisted\nfog computing\
    \ with Blockchain and optimal Smart contract\ndesign,” IEEE/CAA Journal of Automatica\
    \ Sinica, vol. 7, no. 2,\npp. 426–441, 2020.\n[12] L. Wang, L. Xu, S. Liu et al.,\
    \ “Smart contract-based agri-\ncultural food supply chain traceability,” IEEE\
    \ Access, vol. 9,\npp. 9296–9307, 2021.\n[13] K. Salah, N. Nizamuddin, and M.\
    \ Omar, “Blockchain-based\nsoybean traceability in agricultural supply chain,”\
    \ IEEE Ac-\ncess, vol. 7, pp. 73295–73305, 2019.\n[14] I. Widi Widayat and M.\
    \ K¨oppen, Blockchain Simulation\nEnvironment on Multi-Image Encryption for Smart\
    \ Farming\nApplication, Springer International Publishing, Berlin, Ger-\nmany,\
    \ 2021.\n[15] C. M. Balaceanu, I. Marcu, and G. Suciu, “Telemetry System\nfor\n\
    Smart\nAgriculture,”\nBusiness\nInformation\nSystems\nWorkshops, Springer, Berlin,\
    \ germany, 2019.\n[16] H. Patel and B. Shrimali, “AgriOnBlock: Secured data har-\n\
    vesting for agriculture sector using Blockchain technology,”\nICT Express, vol.\
    \ 10, 2021.\n[17] S. Hu, S. Huang, J. Huang, and J. Su, “Blockchain and edge\n\
    computing technology enabling organic agricultural supply\nchain: a framework\
    \ solution to trust crisis,” Computers &\nIndustrial Engineering, vol. 153, pp.\
    \ 1–12, 2021.\n[18] H. N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for internet\
    \ of\nTings: a survey,” IEEE Internet of Tings Journal, vol. 6, no. 5,\npp. 8076–8094,\
    \ 2019.\n[19] M. A. Shu and L. Shu, “Te performance evaluation of\nblockchain-based\
    \ security and privacy systems for the internet\nof Tings: a tutorial,” IEEE Internet\
    \ of Tings Journal, vol. 8,\nno. 24, pp. 17236–17260, 2021.\n[20] K. Peng, M.\
    \ Li, C. Wang, S. Wan, and K.-K. R. Choo, “Security\nchallenges and Opportunities\
    \ for smart contracts in internet\nof Tings: a survey,” IEEE Internet of Tings\
    \ Journal, vol. 8,\nno. 15, pp. 12004–12020, 2021.\n[21] L. Hang, B. Kim, K. Kim,\
    \ and D. Kim, “A permissioned\nblockchain-based clinical trial service platform\
    \ to improve\ntrial data transparency,” BioMed Research International,\nvol. 2021,\
    \ no. 22, 2021.\n[22] L. Hang, B. Kim, and D. Kim, “A transaction traﬃc control\n\
    approach based on fuzzy logic to improve hyperledger fabric\nperformance,” Wireless\
    \ Communications and Mobile Com-\nputing, vol. 2022, Article ID 2032165, 19 pages,\
    \ 2022.\n[23] R. Kumar, P. Kumar, A. Aljuhani, A. K. M. Najmul Islam,\nA. Jolfaei,\
    \ and S. Garg, “Deep learning and smart contract-\nassisted secure data sharing\
    \ for IoT-based intelligent agri-\nculture,” IEEE Intelligent Systems, vol. 99,\
    \ 2022.\n[24] J. DafniRose and J. DafniRose, “Blockchain-enabled smart\nagricultural\
    \ knowledge discovery system using edge com-\nputing,” Procedia Computer Science,\
    \ vol. 202, pp. 73–82, 2022.\n[25] A. E. Mane, M. Chihab, O. Bencharef, and C.\
    \ Younes, “Ar-\nchitectural scheme of a multi-Blockchain in the Agricultural\n\
    ﬁeld,” E3S Web of Conferences, vol. 297, no. 4, 2021.\nApplied Computational Intelligence\
    \ and Soft Computing\n23\n"
  inline_citation: '>'
  journal: Applied computational intelligence and soft computing (Print)
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/acisc/2022/8011525.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Agriculture Supply Chain Management Based on Blockchain Architecture and
    Smart Contracts
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
