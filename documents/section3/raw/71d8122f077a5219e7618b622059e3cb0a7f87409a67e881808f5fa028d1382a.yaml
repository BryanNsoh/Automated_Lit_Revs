- analysis: '>'
  authors:
  - Liu L.
  - Qiao X.
  - Liang W.z.
  - Oboamah J.
  - Wang J.
  - Rudnick D.R.
  - Yang H.
  - Katimbo A.
  - Shi Y.
  citation_count: '1'
  description: Groundwater resources in Nebraska, U.S. are closely monitored by 23
    Natural Resources Districts (NRDs) located across the state. Growers who use groundwater
    for irrigation are required to have flow meters installed at wells to monitor
    their water usage. However, many of these flow meters are still being read and
    recorded through in-person visits, which can be time-consuming and costly. Although
    some flow meters in Nebraska are monitored remotely by telemetry-enabled camera
    systems, yearly telemetry costs are high and making long-term operation financially
    burdensome. Using less expensive network protocol, such as Internet of Things
    (IoT), to transmit flow meter readings could enable new monitoring opportunities.
    However, there are challenges in directly transmitting flow meter images via IoT
    due to limited bandwidth. Therefore, in this study, we developed an algorithm
    using object detection deep learning techniques, i.e. You Only Look Once (YOLO)
    that can be programmed at an IoT node which can recognize readings from images
    of flow meters onsite before transmitting. The developed algorithm could significantly
    reduce data size and is essential for flow meter monitoring in an IoT network
    setting. The developed algorithm achieved 95.35% accuracy when recognizing 1,248
    real-world flow meter images obtained at the courtesy of North Platte Natural
    Resources District (NPNRD) in western Nebraska. The framework and algorithm were
    also tested in a real-world scenario on a flow meter installed on a linear-move
    sprinkler irrigation system and showed promising results. By leveraging IoT and
    deep learning techniques, this research has the potential to revolutionize flow
    meter monitoring, reducing costs and improving efficiency in the management of
    groundwater resources in Nebraska, and potentially in other regions as well.
  doi: 10.1016/j.atech.2023.100236
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords Introduction Materials and methods Results and discussion
    Discussion of failed cases Conclusion Declaration of competing interest Acknowledgement
    Data availability References Show full outline Cited by (1) Figures (8) Show 2
    more figures Tables (3) Table 1 Table 2 Table 3 Smart Agricultural Technology
    Volume 5, October 2023, 100236 An Edge-computing flow meter reading recognition
    algorithm optimized for agricultural IoT network Author links open overlay panel
    Le Liu a, Xin Qiao b c, Wei-zhen Liang b c, Joseph Oboamah c d, Jun Wang e, Daran
    R. Rudnick b f, Haishun Yang g, Abia Katimbo b f, Yeyin Shi b Show more Add to
    Mendeley Share Cite https://doi.org/10.1016/j.atech.2023.100236 Get rights and
    content Under a Creative Commons license open access Abstract Groundwater resources
    in Nebraska, U.S. are closely monitored by 23 Natural Resources Districts (NRDs)
    located across the state. Growers who use groundwater for irrigation are required
    to have flow meters installed at wells to monitor their water usage. However,
    many of these flow meters are still being read and recorded through in-person
    visits, which can be time-consuming and costly. Although some flow meters in Nebraska
    are monitored remotely by telemetry-enabled camera systems, yearly telemetry costs
    are high and making long-term operation financially burdensome. Using less expensive
    network protocol, such as Internet of Things (IoT), to transmit flow meter readings
    could enable new monitoring opportunities. However, there are challenges in directly
    transmitting flow meter images via IoT due to limited bandwidth. Therefore, in
    this study, we developed an algorithm using object detection deep learning techniques,
    i.e. You Only Look Once (YOLO) that can be programmed at an IoT node which can
    recognize readings from images of flow meters onsite before transmitting. The
    developed algorithm could significantly reduce data size and is essential for
    flow meter monitoring in an IoT network setting. The developed algorithm achieved
    95.35% accuracy when recognizing 1,248 real-world flow meter images obtained at
    the courtesy of North Platte Natural Resources District (NPNRD) in western Nebraska.
    The framework and algorithm were also tested in a real-world scenario on a flow
    meter installed on a linear-move sprinkler irrigation system and showed promising
    results. By leveraging IoT and deep learning techniques, this research has the
    potential to revolutionize flow meter monitoring, reducing costs and improving
    efficiency in the management of groundwater resources in Nebraska, and potentially
    in other regions as well. Previous article in issue Next article in issue Keywords
    Deep learningDigits recognitionInternet of ThingsFlow meterAgricultural water
    use Introduction Irrigation is critical to the success of crop production. In
    U.S., Nebraska is one of the most irrigated state, accounting for approximately
    3.78 million ha of irrigated production land. Groundwater is vital to the well-being
    of Nebraskans and economic prosperity of the state. According to the 2018 Nebraska
    Groundwater Quality Monitoring Report [1], Nebraska has 96,593 active irrigation
    wells and 30,932 active domestic wells. Dynamic and real-time information on water
    quantity drawn from these wells is essential to water users and management agencies.
    Out of the 23 Natural Resources Districts (NRDs) in Nebraska, who regulates groundwater
    usage, 18 NRDs have mandatory requirements on installation of flow meters on all
    groundwater wells or at least on newly installed wells in their districts in order
    to monitor groundwater usage. Most of these flow meters require NRDs’ staff to
    visit in person to record the numbers. Due to the large footprint that an NRD
    can cover, manually reading all flow meters can be extremely time and labor consuming,
    and therefore difficult to obtain frequent readings. For instance, the North Platte
    NRD (NPNRD) at the Nebraska Panhandle covers 1.21 million ha in 5 counties. Currently,
    NPNRD is remotely monitoring around 800 groundwater wells in Scotts Bluff County
    using a commercial flow meter monitoring system (Fig. 1). The system utilizes
    a camera and cellular telemetry equipped at each flow meter to send captured images
    back to be transcribed. Besides the initial cost of hardware, cellular telemetry
    subscription is charged per device per year (∼$60, based on personal communication
    with NPNRD) resulting in a significant long-term expense. This also limits NRDs’
    ability to scale up their remote monitoring capability. Therefore, finding new
    ways to obtain reliable and frequent readings from flow meters remotely, yet low-cost
    to operate, is key to help Nebraska NRDs or other water management agencies to
    increase their monitoring capability and efficiency. To achieve such goals, it
    is key to use low-cost telemetry for real-time data transmission. Long range wide
    area network, or LoRaWAN, is one of the data transmission protocols that has been
    rapidly developing for many Internet of Things (IoT) applications. With one LoRaWAN
    gateway, it has the capability of connecting to large number of battery-powered
    sensors at low power consumption with a transmission range up to 15 km in suburban
    areas [[2], [3]]. The limitation of LoRaWAN is that its data transmission rate
    is much lower than traditional telemetry, at a maximum speed of 27 kb/s [2] and
    therefore not suitable for directly transmitting large size data such as flow
    meter images. However, if images are pre-processed and stored onsite, and only
    processed results are transmitted, the size of data package would reduce from
    ∼1000 kb to 2–3 kb which will be suitable for LoRaWAN. Download : Download high-res
    image (613KB) Download : Download full-size image Fig. 1. Flow meters (blue circles)
    that North Platte Natural Resources District (NPNRD) monitor as of 2013. Red dashed
    line highlights Scotts Bluff County. Photo downloaded from NPNRD website. Previous
    recognition techniques for detection of digits in meters are usually categorized
    into two groups: traditional methods and more recent convolutional neural network
    (CNN)-based methods. A traditional method utilizes computer vision and image processing
    techniques such as pixel projections [4], connected components [5], and matching
    a prior template Zhao et al. [6] to recognize readings from images. It is usually
    composed of multiple stages including 1) detecting and extracting a region of
    interest (ROI) which encloses the target digits from the input image, 2) segmenting
    subregions containing each individual digits from the ROI, and 3) recognizing
    these digits. To determine ROI, several methods have been developed to detect
    counters by utilizing pixel projections [4,[6], [7], [8]]. Specifically, a binarization
    of an input image is first computed, a ROI is then determined by counting the
    number of white pixels of the binary image along the vertical and horizontal directions,
    respectively. The major limitation of such method is that the accuracy of the
    detection highly depends on intrinsic characteristics of images. For instance,
    the layout and complexity of the image content, and features of the input image,
    such as the resolution, color contrast, distortion, as well as image qualities,
    etc. As these features can vary significantly in different application scenarios,
    pixel projection method usually only produces promising results under a determined
    analysis task with similar spatial layouts of digits and color characteristics.
    Once a ROI is determined, a traditional method subsequently segments the contours
    or silhouettes of individual digits from the ROI. Some techniques achieve segmentation
    by computing the connected components from the binarization of the ROI [4,5].
    Alternatively, a support vector machine (SVM) can be used to compute the segmentation
    of digits [8,9]. By using this method, the binarization of the ROI is parameterized
    into a higher dimensional space, and then, a certain number of hyperplanes are
    computed by solving a predefined optimization equation to separate these hyperparameters
    into different classes, representing background and foreground. Unfortunately,
    both methods can easily fail when the input images are not from similar distribution,
    i.e. the characteristics of images vary significantly. The last stage of a traditional
    method is to recognize digits from the previously determined segmentations. Many
    techniques have been developed including template matching, SVM, and histogram
    of oriented gradient (HOG) [4,[8], [9], [10]]. Some of these methods produce promising
    results, but the accuracy relies extremely on the success of binarization and
    segmentation computed from the previous two stages. Therefore, they are not robust
    enough for more general application contexts. For this study, since flow meters
    are mostly installed at outdoor environment that are susceptible to dust, dew,
    abrasions, images taken from such complex scenes, e.g., various flowmeter types,
    different camera views, and messy environments, can be quite challenging to recognize
    using aforementioned traditional methods [11]. Beyond the traditional methods,
    more recently, another line of research employs the power of artificial intelligence
    techniques to automatically recognize readings of meters. Gao et al. [11] developed
    a two-stage framework by first adopting aggregated channel features to detect
    a ROI, and subsequently recognizing readings by combining CNN and bidirectional
    long short-term memory (LSTM) techniques [12]. While the author reported high
    accuracy using this method, the images were with high degree of clarity and similarity.
    In addition, it fails to process rotated images. Similarly, Laroca et al. [13]
    proposed another two-stage framework, detecting ROIs of digits using the FastYOLO
    and recognizing the digits in the detected ROIs using CR-NET. Even though this
    method eliminates the segmentation stage, reducing the source of uncertainty of
    accuracy, and achieving promising results, this method employs two deep learning
    models and does not fit the IoT application context. The reason is that a computer
    node in an IoT system is usually not as powerful as a desktop or cloud computer
    node so that minimizing computational resources is essential for on-board computation
    and processing. Yet, initializing the two deep learning architectures proposed
    in [13] and loading and executing their corresponding trained models requires
    much memory and computational time. Alternatively, Gomez et al. [14] reported
    another CNN-based method without explicitly locating target digits. However, high
    accuracy can only be achieved by training a large dataset, i.e., 222,198 images
    in their study, which is not possible in this study with much more limited training
    dataset. Therefore, the objective of this study was to develop an algorithm using
    object detection and recognition deep learning techniques that is compact enough
    to be able to reside at a IoT node device and can execute to process images taken
    from flow meters onsite to significantly reduce data size to facilitate data transmission
    in an IoT network setting. Materials and methods Flow meter data and image labeling
    In this study, 3248 flow meters images were obtained from NPNRD. The images were
    divided into two sets, including 2000 images for training and the remaining 1248
    for validation. As the images were taken from real-world scenario, they post many
    challenges and would require good robustness for the recognition algorithm. The
    challenges included: the images were taken using multiple random camera devices,
    inducing variations of device-related factors such as focal length, angle of view,
    lens distortion, and photo resolution. In addition, the images were taken manually
    at varied angles, heights, distances, weather and lighting conditions, which in
    turn added variations to the image clarity, glare, completeness of showing a flow
    meter, and the area ratio between the number of pixels to the background of the
    flow meters. Fig. 2 shows an example of an analog-styled flow meter (McCrometer
    Inc., Hemet, CA, U.S.A.) that are commonly deployed in the study area. The flow
    meter contains digits with different information. At top of the flow meter, the
    sequence of numbers indicates land-specific information. At bottom of the flow
    meter, the black block contains numbers representing accumulative water flow.
    Finally, the flow meter also has tick marks all around for reading instant water
    flow rate. In this study, the target number is the accumulated water flow, which
    is what NRDs use for regulation purposes. The 2000 training images were manually
    labeled using an open-source tool: Yolo Mark (AlexeyAB) to train the deep learning
    model. Using Yolo Mark, a text file was generated for each image with information
    of individual digits, x and y coordinates of bounding boxes of these digits, and
    dimensions (width and height) of the bounding boxes. The coordinates and dimensions
    are relative to the width and height of the input images. For cases where the
    meter was rolling between two digits, two labels would be created (Fig. 6a). Download
    : Download high-res image (311KB) Download : Download full-size image Fig. 2.
    An example of a McCrometer Flow Meter (McCrometer Inc., Hemet, CA, USA) installed
    in the North Platte Natural Resource District. Numbers on the dial include land
    ID at the top of the meter (pseudo land legal IDs are used here for privacy protection),
    accumulative water flow (ACRE INCHES X 0.01 as shown) in the lower center, and
    tick markers around edge of the meter which are used to read instant water flow
    (gallons per minute). The image recognition algorithm Selection of deep learning
    model - You only Look Once (YOLOv3) The image processing employed in this study
    has two stages: digits recognition and post-processing which includes filtering
    and rearrangement. The first step of the proposed algorithm is to automatically
    recognize all possible digits, including their actual value and locations from
    an input image. This was achieved by adopting the YOLOv3 deep learning model,
    which is one of the novel deep learning detection techniques implemented based
    on the Darknet framework [15]. YOLOv3 was chosen for several reasons. First, Darknet
    is an open-source neural network framework implemented using the C programming
    language. It can be easily compiled and executed on an operating system with a
    C compiler, which is a built-in for any Linux-based operating systems, e.g., Ubuntu,
    that is able to be installed on IoT node devices. Second, the Darknet is a light-weight
    framework. Its source code is sized about 15 Mb and it requires no additional
    libraries or packages for compiling and execution. Comparing to other deep learning
    frameworks such as the Caffe, Tensorflow, and Pytorch, which have heavy dependency
    on libraries, the Darknet is more flexible, resource-saving, and thus would be
    better suited on a IoT node device that has limited storage space and computation
    power. In this study, a Raspberry Pi computer was assumed to be the IoT node device
    to take and process flow meter images. The proposed framework is shown in Fig.
    3, where the Raspberry Pi-based node device will take images of flow meter, process
    images using the developed algorithm, send data via LoRaWAN or other IoT communication
    protocols, and display results at a visualization platform. Physical constraints
    of the imagined IoT node devices were considered. Compared to cloud computer server
    or desktop computers, Raspberry Pi has less CPU cores and memories. It also lacks
    GPU devices that are needed by most deep learning techniques. As YOLOv3 can be
    executed in systems with CPU only, and for previously mentioned reasons, it was
    chosen as base of this recognition algorithm. Although YOLOv4 [16], a newer version
    of YOLO model, was released during development of this study, it was not adopted
    because the major improvements of YOLOv4 focus on increasing the accuracy of detecting
    multiple overlapping objects and it is not a concern with flow meter images. Download
    : Download high-res image (324KB) Download : Download full-size image Fig. 3.
    . Proposed processing framework to recognize flow meter images in this study,
    where the Raspberry Pi-based node device will take images of flow meter, process
    images using developed algorithm, send data via LoRaWAN or other IoT communication
    protocols, and display results at a visualization platform. Setup of backbone
    and head for YOLOv3 Like any modern deep learning-based object detectors, YOLOv3
    has two components: a backbone and a head. A backbone is a specific design of
    deep neural networks pre-trained on ImageNet [17], which is a large image database.
    A backbone is responsible for extracting low level features from images such as
    lines and edges. The structure of the backbone of YOLOv3 is described in Fig.
    4. where a pink box with CONV represents a convolutional layer. YOLOv3 designs
    a convolutional layer by utilizing Leaky ReLu [18] activation function and batch
    normalization [19] technique to improve the performance of the network. A convolutional
    layer, together with batch normalization and Leaky ReLu, form the base layers
    of the YOLOv3 architecture, which are represented using green boxes in Fig. 3.
    Blue boxes, denoted as RSExN, represent residual blocks with two base layers that
    have been repeated N times [20]. As this backbone has 53 convolutional layers,
    it is referred to as Darknet-53 by its original author [21]. Download : Download
    high-res image (524KB) Download : Download full-size image Fig. 4. . The model
    structure of YOLOv3. BL indicates a sequence of components including a convolutional
    layer, a batch normalization and a leaky ReLU activation function. RESxN indicates
    repeating RES combination N times, a RES represents a combination of two BLs and
    ADD indicates adding current results to the previous one. Subsequent to a backbone,
    several additional layers are designed to predict different object classes. In
    this study, the object classes include digits of the flow meter readings and their
    bounding boxes. These additional layers are usually referred as a head of a neural
    network (Fig. 4). The head of YOLOv3 is enclosed by a gray dashed box in Fig.
    4. While most alternative heads predict classes (digits in this case) and bounding
    boxes through two separate routines, YOLOv3 predicts them in a single process,
    significantly speeding up the prediction. Specifically, it simultaneously predicts
    , , , , , and , where , , , and are the four coordinate offsets of a bounding
    box relative to the top left corner of the input image, indicates the objectness,
    i.e. the possibility of existences of an object prediction of this bounding box,
    and indicates the class prediction if there is an object detected in this bounding
    box. In addition, to increase the accuracy of detections, YOLOv3 predicts the
    detections across three different resolution scales, combining both the global
    context and fine-grained features of the images. As shown in Fig. 3, the low-resolution
    prediction only uses information from the last layer of the backbone, while the
    mid and high-resolution predictions integrate coarse-grained information computed
    from early layers. For each individual scale, it also predicts three bounding
    boxes with different sizes. Therefore, the output of each scale is a 3d tensor
    with a depth of [3x(4 + 1 + N)], where 3 represents three bounding boxes, 4 represents
    the four offsets of a bounding box, 1 indicates the objectness prediction, and
    N represents the number of possible classes. In this implementation, as it has
    10 different digits, i.e., 10 different classes, N equals 10, and thus, the depth
    of the 3d tensor is 45. Another important configuration of utilizing YOLOv3 is
    to determine the bounding box priors at the three resolution scales. This study
    started with nine priors computed via the k-means clustering method proposed in
    [15] by using the distance metric relative to the intersection of union of bounding
    box centroids, and adjusted these priors based preliminary experimental results.
    The final priors are (10,13), (16,30), and (33,23) for a low-resolution scale,
    (30,61), (62,45), and (59,119) for a middle-resolution scale, and (116,90), (156,198),
    and (373,326) for a high-resolution scale, each pair represents the width and
    height priors of a bounding box. Post-processing: Filtering and rearrangement
    As mentioned earlier, the digits that are most interested to this project are
    accumulative water flow. A filtering process was created to filter out non-necessary
    digits. First, the filtering process looped through all the raw detections and
    merged close ones in terms of the intersection over union (IoU) of their bounding
    boxes. Specifically, given two bounding boxes B0 and B1, the IoU between them
    is defined as . For each pair of bounding boxes, if their IoU was greater than
    a predefined threshold, which is 0.1 in this implementation, they were merged
    using the one with a higher prediction score. Subsequently, the merged predictions
    were spatially sorted from left to right along the x direction to form the accumulative
    flow meter reading. Implementation in real-world To assess the performance of
    the framework and algorithm in real-world conditions, an analog-style flow meter
    (McCrometer Inc., Hemet, CA, USA) was installed on a linear-move sprinkler irrigation
    system (Lindsay Corporation, Omaha, NE, USA) at the Panhandle Research and Extension
    Center of the University of Nebraska-Lincoln. The research site is located in
    Scottsbluff, NE, USA, with an average elevation of 1189 m and GPS coordinates
    of 41°53′34.93″N, 103°41′2.04″W. The irrigation system travels in the direction
    of south to north. To capture data from the flow meter, an edge-computing camera
    unit, named AI-FlowCAM, was programmed with the developed algorithm and installed
    atop the flow meter using a customized enclosure and 3D-printed mounts on the
    west side of the irrigation system where water inlet is located. The AI-FlowCAM
    was comprised of a Raspberry Pi 4 computer (Raspberry Pi Foundation, U.K.), a
    battery, a PiJuice HAT power management board (Pi Supply, U.K.) for managing sleep
    and wake schedules, a solar panel, a Raspberry Pi 8 megapixel RGB camera (2592
    × 1944 pixels), Raspberry Pi LoRa node pHAT (Pi Supply, U.K.), and an external
    915 MHz LoRa antenna (Laird Connectivity, Akron, OH, USA). A Sentrius RG1xx LoRaWAN-enabled
    gateway (Laird Connectivity, Akron, OH, USA) was set up on the rooftop of a nearby
    office building as the receiving gateway. Flow meter readings captured by the
    AI-FlowCAM, as well as LoRa transmission parameters such as received signal strength
    indicator (RSSI), signal-to-noise ratio (SNR), and airtime, were recorded and
    stored on a cloud server. The flowmeter readings recognized by the AI-FlowCAM
    were also verified manually by human inspection. Fig. 5 shows the setup and an
    image taken by AI-FlowCAM (Fig. 5d). Download : Download high-res image (1MB)
    Download : Download full-size image Fig. 5. a. a linear-move sprinkler irrigation
    system at Panhandle Research and Extension Center, University of Nebraska-Lincoln,
    Scottsbluff, NE, USA. b. an analog-style vertical flow meter. c. an AI-FlowCAM
    mounted on top of the flow meter. d. an image taken by AI-FlowCAM. Results and
    discussion Model training results The proposed model was trained and evaluated
    on the computer cluster at Holland Computing Center (HCC) at the University of
    Nebraska-Lincoln. The training was completed on a computer node with 32 CPU cores,
    each node has 4 GB memory. To speed up the training process a NVIDIA V100 GPU
    with 32 GB memory was utilized. The complete training process took about 14 h.
    The recall of training was 0.92, and the mean average precision, with IoU threshold
    setting at 50%, is 93.59%, the average lose was 0.288924. To maximize the performance,
    the batch size was set to 64, image resolution was set to 416 × 416, and learning
    rate was set to 0.01. When training a detection model, YOLO first normalizes all
    training images of different resolutions into a unified resolution. It is noticed
    that the accuracy of the model was decided relative to this unified resolution.
    Setting this parameter to an inappropriately small number will downscale the training
    data significantly, losing too much information and resulting in a low recognition
    accuracy. On the other hand, as the study dataset has a wide variation in image
    resolutions, setting this parameter to a very large number will induce interpolation
    errors when up-sampling small images and increase the uncertainty of the model.
    This study finally selected 416 × 416 for the unified resolution, which led to
    the best accuracy. Model validation results - Quantitative evaluation A correct
    recognition case is considered only when all digits of accumulative water flow
    reading are correctly recognized. The validation was done on using the AI-FlowCAM
    at a lab setting. Processing each individual image took 6–10 s. This system was
    first evaluated by examining the performance in terms of recognizing individual
    digits. The results are summarized in Table 1, where the digit indicates the class
    of digits; the precision is defined as the fraction between the number of correct
    recognitions of a digit and the total number of recognitions of this digit; the
    recall is defined as the fraction between the number of correct recognitions of
    a digit and the total frequency of this digit in the dataset; the average precision
    (AP) is computed using the area under curve approach with IoU of 0.5 [22] and
    the frequency indicates the frequency of a digit in the dataset. The last row
    reports the mean of the precision, recall and AP, respectively. Table 1. . Recognition
    results of individual digits. The first column indicates the class of digits.
    Accuracy refers to the fraction between the number of correct recognitions of
    a digit to the total number of recognitions of this digit. Recall is defined as
    the fraction between the number of correct recognitions of a digit and the total
    frequency of this digit in the dataset. The fourth column indicates average accuracy
    which is computed using the area under curve approach with IoU of 0.5 [22]. The
    last column indicates the frequency of a digit in the dataset. Digit Accuracy
    (%) Recall (%) Average Accuracy (%) Frequency 0 95.45 98.64 98.71 1107 1 91.36
    94.75 94.41 781 2 95.30 96.28 96.72 779 3 91.35 96.20 96.12 736 4 95.69 96.96
    97.79 756 5 92.04 97.67 97.58 687 6 94.18 95.75 97.28 659 7 94.78 95.66 96.52
    645 8 95.21 96.57 97.56 700 9 94.41 97.91 98.76 621 Average 93.78 96.64 97.15
    As reported in Table 1, the high accuracy suggests that this algorithm is very
    likely to make a valid prediction of the target digits; while the high recall
    rate indicates that these recognitions cover the ground truth of individual digits
    with a high degree of completeness. The AP and the mean of AP (mAP) are widely
    adopted as an evaluation metric in the community of objects detecting, and the
    results indicate that this recognition system obtains a superior balance between
    validity and completeness. The algorithm was then tested on the 1248 validation
    flow meter images in terms of detecting accumulative flow meter readings (all
    digits). The results are shown in Table 2. It successfully recognized readings
    of 1190 images, resulting in an accuracy of 95.35%. Among the 58 failed cases,
    46 of them missed 1 digit while 12 of them missed multiple digits. Table 2. .
    Recognition results of complete accumulative water flow readings. Empty Cell Percentage
    (%) Number of cases Correct recognitions 95.35 1190 Incorrect recognitions Missed
    1 digit 3.69 46 Missed multiple digits 0.96 12 Total 100 1248 Model validation
    results - Qualitative evaluation In addition to evaluating the system using quantitative
    metrics, a qualitative analysis was also conducted. This system was able to successfully
    process images that have wide variations in many aspects, making it more robust
    in both the real-world application this work is investigating and other potential
    generalized scenarios. Such robustness is demonstrated in Fig. 6, where each image
    presents a difficult situation to be processed by alternative techniques or even
    read by a human-being but are accurately recognized using this system. Because
    of the data privacy restrictions, the device IDs have been masked using gray boxes.
    The robustness of this algorithm is reflected in different aspects. First, the
    proposed algorithm was able to successfully process images with incomplete information.
    As shown in Fig. 6a, the last digit is between 4 and 5 and these two numbers are
    only partially seen, but the system developed here recognized both two digits
    correctly. Fig. 6d shows another difficult case where the surface of a flow meter
    is worn and the area containing the target digits is blurred. Second, this system
    is robust in recognizing images with different foreground-background ratio, i.e.
    the ratio between the number of pixels of a flow meter relative to the background.
    For instance, Fig. 6a, 6d, and 6f have larger foreground-background ratios, while
    in Fig. 6b, 6c, and 6e have smaller foreground-background ratios. In addition,
    the flow meter images were taken under different lighting conditions so that there
    were variations in color hues of the images. For example, Fig. 6a and 6b appear
    to have a yellow tint while Fig. 6c had a blue tint and 6d and 6f had white tint.
    Furthermore, this algorithm was able to extract numbers from blurry images, which
    are frequently encountered in a real-world application, and make accurate predictions.
    This was shown in Fig. 6e, where the image had low resolution, and the digits
    of the reading were hard to read even if it is enlarged to be read by human. Lastly,
    the proposed system was accurate when recognizing images taken from a rotated
    angle (Fig. 6f). Alternative techniques usually process such case by first extracting
    long horizontal or vertical lines from the image, and subsequently use them as
    references to rotate the image by a degree so that the digits block is parallel
    to the truly horizontal line (x axis). Accuracy of this approach is sensitive
    to the a priori assumption of the references and can easily fail when contents
    of images are complicated. In contrast, the proposed approach in this study was
    able to directly make the correct recognition without computing the rotation angle,
    suggesting the generality and efficiency of this approach. The success of predicting
    these images indicates that the proposed algorithm is not only capable in a specific
    controlled environment but robust in a wide spectrum of real-world application
    scenarios. Download : Download high-res image (904KB) Download : Download full-size
    image Fig. 6. . Examples of successfully recognized accumulative water flow (digits
    in black box on the dial) in the flow meter images. Caption under each image shows
    recognized readings from the proposed algorithm. Discussion of failed cases Beyond
    the successful cases, this work also analyzed the incorrect recognitions and summarized
    them into four categories. The first is shown in Fig. 7a. Although this image
    is in good resolution and the contents are seen clearly, some of the digits were
    covered by dirt so that they appear to be incomplete or confused with digits.
    Such noises mislead the algorithm to make false predictions, e.g., the second
    digit 8 and fifth digit 9 were both recognized as 3. The second category is that
    the flow meter was shattered heavily where the cracks were on top of the digits,
    making it extremely difficult to distinguish them visually (Fig. 7b). In this
    example, the first digits 8, which is white color, are covered by scratches which
    also appear to be white in the image. This information is mixed in such a way
    that the features of this area extracted by the deep neural network may not match
    the features of other areas that may contain digit 8, and lead to incorrect reading
    as 5. The third category is that a large portion of the first digit was blocked
    by the meter pointer needle, as shown in Fig. 7c, in which case even a human being
    is not able to recognize it correctly. However, in such cases the first digit
    could be estimated according to the previous reading in real applications so it
    would not be a major concern. The last case is that the digits are too small in
    the image to be recognized, as shown in Fig. 7d. In this situation the information
    of the area containing these digits may quickly be eliminated or diluted when
    the tensor encoding this image is convoluted in the first couple of convolutional
    layers. The loss of information results in a high degree of uncertainty to make
    the recognition. These challenges could be resolved or mitigated by having fixed
    camera type, lighting condition, and mounting location to achieve standardized
    images. Download : Download high-res image (390KB) Download : Download full-size
    image Fig. 7. . Examples of failed recognized accumulative water flow (digits
    in black box on the dial) in the flow meter images. Caption under each image shows
    recognized readings from the proposed algorithm. Real-world evalulation results
    During a 10-day evaluation on a linear irrigation system, AI-FlowCAM was installed
    and tested. The camera was programmed to capture images and send data at hourly
    intervals, resulting in a total of 262 images collected. Out of these images,
    107 were deemed valid as they had distinctive flow meter readings during irrigation,
    while 155 were considered invalid due to repetitive readings. Repetitive images
    with the same flow meter reading were not counted towards the final performance
    statistics. All image readings were successfully sent and received by the gateway.
    The average processing time for each image was 9.16 s using the configuration
    of AI-FlowCAM. The average airtime to send the processed image data from AI-FlowCAM
    to the gateway was 0.051 s, with an average RSSI of −51, and a maximum and minimum
    SNR of 12 and 6, respectively. Out of the 107 valid images, 79 images were recognized
    correctly, accounting for 73.8% of the total images, while 28 images were not
    recognized correctly, representing 26.2% of the total images. Among the 28 images,
    24 images were able to recognize the first 4 digits but were missing the last
    2 digits, while 4 images reported no detection even though images were taken by
    the camera. The issue of missing digits could be attributed to the fact that the
    colors of the testing flow meter were different from the colors of the training
    images. The training images had flow meter with white background with a black
    box containing the digits, whereas the test flow meter had a deep blue background,
    causing difficulties for the algorithm to locate the correct area containing the
    digits, especially when the irrigation was running, and the digits were rolling
    on the flow meter. The reason for the 4 images reporting zero reading despite
    successfully capturing images is unclear and could possibly be due to a busy CPU
    when processing the images. Table 3 provides a summary of the performance of AI-FlowCAM
    during the testing period. Table 3. Performance summary of AI-FlowCAM during the
    10-day real-world testing period. Empty Cell Percentage (%) Number of cases Correct
    recognitions 73.8 79 Incorrect recognitions 26.2 28 Other performance parameters
    Average runtime (seconds) 9.16 Average RSSI −51 Maximum SNR 12 Minimum SNR 6 Average
    airtime (seconds) 0.051 The testing period for the proposed framework was limited
    to only 10 days due to freezing temperatures. However, during this period, it
    was demonstrated that the framework has the potential to work effectively in real-world
    scenarios. It''s worth noting that no graphical user interface (GUI) was designed
    to visualize the readings during this brief testing period. For a similar setup
    involving the design and testing of an edge-computing camera sensor for capturing
    crop canopy cover images, processing the images onsite, and transmitting the processed
    images using LoRa to a website-based GUI, readers can refer to Liang et al. [23]
    (Fig. 8). Download : Download high-res image (403KB) Download : Download full-size
    image Fig. 8. An example of an edge-computing camera node using framework proposed
    in this study that was used to capture image, process image, and transmit processed
    results in Liang et al. [23]. Figure shows the camera node was able to capture
    canopy cover development at a dry edible bean field during 2-month testing period.
    This figure and sensor reading can be accessed at: https://phrec-irrigation.com/#/f/58/sensors/236.
    Conclusion This paper presents an approach for automatic recognition of accumulative
    water flow readings for analog-style commercial flow meter, specifically for irrigation
    water usage monitoring within an agricultural IoT application scenario. The approach
    involves training a YOLOv3-based deep learning model to recognize potential digits
    and their bounding boxes in input images. Subsequently, a process is developed
    to filter out unnecessary digits obtained from the deep learning model and rearrange
    the remaining digits to form the correct reading. The system achieves a recognition
    accuracy of 95.35% using 1248 real-world flow meter images, while remaining lightweight
    and efficient, making it suitable for deployment and execution on IoT node devices,
    such as Raspberry Pi. Qualitative evaluation indicates high robustness of this
    approach, although there may be cases where it is not able to recognize numbers
    due to dirt, water, or meter pointer obstructions in real-world applications.
    The framework and algorithm were also tested in a real-world scenario on a flow
    meter installed on a linear-move sprinkler irrigation system, showing promising
    results. However, future improvements may be needed to address issues related
    to differences in colors between the flow meter in real-world scenarios and training
    images. Overall, the proposed IoT and edge-computing-based approach has the potential
    to significantly reduce monitoring costs for irrigators and government agencies,
    while increasing their monitoring capacity. Furthermore, it can be integrated
    with other sensors to inform irrigation management decisions. Declaration of competing
    interest None. Acknowledgement We appreciate the support from North Platte Natural
    Resources District for providing the flow meter images. We also would like to
    acknowledge the funding support from USDA with Award No. 2019–67021–29227. Data
    availability The authors do not have permission to share data. References [1]
    Nebraska Groundwater Quality Monitoring Report, Nebraska Department of Environmental
    Quality, 2018. https://nebraskalegislature.gov/FloorDocs/106/PDF/Agencies/Environment_and_Energy__Nebraska_Department_of_/702_20201130-150859.pdf.
    Accessed on March 9th, 2022. Google Scholar [2] Lora Alliance, 2015. https://lora-alliance.org/resource_hub/what-is-lorawan/.
    Google Scholar [3] F. Adelantado, X. Vilajosana, P. Tuset-Peiro, B. Martinez,
    J. Melia-Segui, T. Watteyne Understanding the limits of LoRaWAN IEEE Commun. Mag.,
    55 (9) (2017), pp. 34-40 View in ScopusGoogle Scholar [4] A. Anis, M. Khaliluzzaman,
    M. Yakub, N. Chakraborty, K. Deb Digital electric meter reading recognition based
    on horizontal and vertical binary pattern 3rd International Conference on Electrical
    Information and Communication Technology (2017), pp. 1-6 View in ScopusGoogle
    Scholar [5] M. Cerman, G. Shalunts, D. Albertini A mobile recognition system for
    analog energy meter scanning International Symposium on Visual Computing (2016),
    pp. 247-256 CrossRefView in ScopusGoogle Scholar [6] S. Zhao, B. Li, J. Yuan,
    G. Cui Research on remote meter automatic reading based on computer vision IEEE/PES
    Transmission & Distribution Conference & Exposition: Asia and Pacific (2005),
    pp. 1-4 View in ScopusGoogle Scholar [7] D. Shu, S. Ma, C. Jing Study of the automatic
    reading of watt meter based on image processing technology 2nd IEEE Conference
    on Industrial Electronics and Applications (2007), pp. 2214-2217 CrossRefView
    in ScopusGoogle Scholar [8] V. Edward, C. Paul Support vector machine based automatic
    electric meter reading system IEEE International Conference on Computational Intelligence
    and Computing Research (2013), pp. 1-5 CrossRefGoogle Scholar [9] I. Gallo, A.
    Zamberletti, L. Noce Robust angle invariant GAS meter reading International Conference
    on Digital Image Computing: Techniques and Applications (2015), pp. 1-7 CrossRefGoogle
    Scholar [10] L.A. Elrefaei, A. Bajaber, S. Natheir, N. AbuSanab, M. Bazi Automatic
    electricity meter reading based on image processing IEEE Jordan Conference on
    Applied Electrical Engineering and Computing Technologies (2015), pp. 1-5 CrossRefGoogle
    Scholar [11] Y. Gao, C. Zhao, J. Wang, H. Lu Automatic watermeter digit recognition
    on mobile devices International Conference on Internet Multimedia Computing and
    Service (2017), pp. 87-95 Google Scholar [12] H. Sak, A.W. Senior, F. Beaufays
    Long short-term memory based recurrent neural network architectures for large
    covabulary speech recognition arXiv preprint (2014) https://arxiv.org/abs/1402.1128
    Google Scholar [13] R. Laroca, V. Barroso, M.A. Diniz, G.R. Gonçalves, W.R. Schwartz,
    D. Menotti Convolutional neural networks for automatic meter reading J. Electron.
    Imag., 28 (1) (2019), pp. 13-23 Google Scholar [14] L. Gómez, M. Rusinol, D. Karatzas
    Cutting Sayre''s Knot: Reading Scene Text Without Segmentation. Application to
    Utility Meters 13th IAPR International Workshop on Document Analysis Systems (2018),
    pp. 97-102 View in ScopusGoogle Scholar [15] Redmon, J., and Farhadi, A., 2018.
    YOLO: real-time object detection. https://pjreddie.com/darknet/yolo/. Google Scholar
    [16] A. Bochkovskiy, C.-.Y. Wang, H.-Y.M. Liao YOLOv4: optimal speed and accuracy
    of object detection arXiv preprint (2020) https://arxiv.org/abs/2004.10934v1 Google
    Scholar [17] J. Deng, W. Dong, R. Socher, L.-.J. Li, K. Li, F.-.F. Wang Imagenet:
    a large-scale hierarchical image database IEEE conference on computer vision and
    pattern recognition (2009), pp. 248-255 View in ScopusGoogle Scholar [18] B. Xu,
    N. Wang, T. Chen, M. Li Empirical evaluation of rectified activations in convolutional
    network arXiv preprint (2015) https://arxiv.org/abs/1505.00853 Google Scholar
    [19] S. Ioffe, C. Szegedy Batch normalization: accelerating deep network training
    by reducing internal covariate shift International conference on machine learning
    (2015) Google Scholar [20] K. He, X. Zhang, S. Ren, J. Sun Deep residual learning
    for image recognition 2016 IEEE conference on computer vision and pattern recognition
    (2016), pp. 770-778 Google Scholar [21] Redmon, J., 2013. Darknet: open source
    neural network in C. https://pjreddie.com/darknet/. Google Scholar [22] M. Everingham,
    L. Van Gool, C.K.I. Williams The PASCAL visual object classes (VOC) challenge
    Int. J. Comput. Vis., 88 (2010), pp. 303-338, 10.1007/s11263-009-0275-4 Google
    Scholar [23] W. Liang, J. Oboamah, X. Qiao, Y. Ge, B. Harveson, D.R. Rudnick,
    J. Wang, H. Yang, A. Gradiz CanopyCAM – an edge-computing sensing unit for continuous
    measurement of canopy cover percentage of dry edible beans Comput. Electron. Agric.,
    204 (2023), p. 2023 Google Scholar Cited by (1) Quadratic Interpolation Optimization
    (QIO): A new optimization algorithm based on generalized quadratic interpolation
    and its applications to real-world engineering problems 2023, Computer Methods
    in Applied Mechanics and Engineering Show abstract © 2023 The Authors. Published
    by Elsevier B.V. Part of special issue Smart Irrigation Techniques Edited by Dr.
    Vasileios Liakos vliakos@uth.gr View special issue Recommended articles AgroAPI
    platform: An initiative to support digital solutions for agribusiness ecosystems
    Smart Agricultural Technology, Volume 5, 2023, Article 100247 Luciana A.S. Romani,
    …, Silvia M.F.S. Massruhá View PDF Secured telemetry based on time-variant sensing
    matrix – An empirical study of spectroscopic profiling Smart Agricultural Technology,
    Volume 5, 2023, Article 100268 Yinsheng Zhang, Menglei Liu View PDF A production
    capacity investment decision-making tool for the indoor vertical farming industry
    Smart Agricultural Technology, Volume 5, 2023, Article 100244 Ben Schulman, …,
    Richard Donald View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 1 Captures Readers: 17 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Edge-computing flow meter reading recognition algorithm optimized for
    agricultural IoT network
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Pagano A.
  - Croce D.
  - Tinnirello I.
  - Vitale G.
  citation_count: '26'
  description: This article provides a survey on the adoption of LoRa in the agricultural
    field and reviews state-of-the-art solutions for smart agriculture, analyzing
    the potential of this technology in different infield applications. In particular,
    we consider four reference scenarios, namely, irrigation systems, plantation and
    crop monitoring, tree monitoring, and livestock monitoring, which exhibit heterogeneous
    requirements in terms of network bandwidth, density, sensors' complexity, and
    energy demand, as well as latency in the decision process. We discuss how LoRa-based
    solutions can work in these scenarios, analyzing their scalability, interoperability,
    network architecture, and energy efficiency. Finally, we present possible future
    research directions and point out some open issues which might become the main
    research trends for the next years.
  doi: 10.1109/JIOT.2022.3230505
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 10 Issue: 4 A Survey on LoRa for Smart Agriculture: Current Trends and
    Future Perspectives Publisher: IEEE Cite This PDF Antonino Pagano; Daniele Croce;
    Ilenia Tinnirello; Gianpaolo Vitale All Authors 23 Cites in Papers 4697 Full Text
    Views Open Access Under a Creative Commons License Abstract Document Sections
    I. Introduction II. LoRa and Its Perspectives in Agriculture III. Smart Agriculture
    Applications and Challenges IV. Generic LoRa-Based Platforms V. Application-Specific
    LoRa Platforms Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: This article provides a survey on the adoption of LoRa in the
    agricultural field and reviews state-of-the-art solutions for smart agriculture,
    analyzing the potential of this technology in different infield applications.
    In particular, we consider four reference scenarios, namely, irrigation systems,
    plantation and crop monitoring, tree monitoring, and livestock monitoring, which
    exhibit heterogeneous requirements in terms of network bandwidth, density, sensors’
    complexity, and energy demand, as well as latency in the decision process. We
    discuss how LoRa-based solutions can work in these scenarios, analyzing their
    scalability, interoperability, network architecture, and energy efficiency. Finally,
    we present possible future research directions and point out some open issues
    which might become the main research trends for the next years. Published in:
    IEEE Internet of Things Journal ( Volume: 10, Issue: 4, 15 February 2023) Page(s):
    3664 - 3679 Date of Publication: 20 December 2022 ISSN Information: DOI: 10.1109/JIOT.2022.3230505
    Publisher: IEEE Funding Agency: SECTION I. Introduction In the near future, the
    agricultural sector is called to face a significant challenge due to increasingly
    scarce resources, extreme weather conditions, a growing population, and a reduction
    in arable land [1]. Indeed, according to the FAO, by 2050, the world’s population
    will reach about 10 billion and, to be able to feed everyone, we will have to
    produce 70% more food [2], [3]. A practical and feasible solution is to move from
    the old farming concept to smart agriculture, with the adoption of information
    and communications technologies (ICTs) that help farmers to monitor, manage, and
    optimize their operations more effectively [4]. In particular, the introduction
    of the Internet of Things (IoT) applications, every single step of agricultural
    production can be improved: from soil management to minimizing water consumption,
    from plant protection to animal health and farm automation [5], [6]. Smart devices
    located infields are able to collect information and control the evolution of
    the different processes at various production stages. Besides, the miniaturization
    of electronic components allows to implement IoT sensors with reduced form factor
    and energy consumption, monitoring many variables of interest, such as temperature,
    humidity, wind speed and direction, soil conditions, chemical concentrations,
    crop growth, and solar exposure, as well as possible damages caused by drought,
    hail, or flooding. IoT systems integrate all this and other data and turn it into
    useful statistics: for example, predictive analysis allows farmers to use the
    strictly necessary resources (water, pesticides, fertilizers, etc.) and only where
    there is a real need, e.g., for poorly irrigated areas of the field, weak or sick
    plants, etc. [7], [8]. Despite such potential benefits, the deployment of smart
    agriculture systems is still in its infancy. Indeed, an obstacle to the digitization
    of agriculture is the lack or limitations of Internet connectivity in many areas.
    In the literature, several communication protocols have been proposed, with different
    characteristics related to cost, coverage, power consumption, and reliability
    [9]. Among the available technologies (summarized in Fig. 1 in terms of power
    consumption and coverage range), low-power wide-area networks (LPWANs), enlightened
    in a dashed box in Fig. 1 represent the best solution for supporting smart agriculture
    requirements. One of the most adopted LPWAN technology is LoRaWAN, which offers
    wide network coverage, built-in security, low cost, and limited power consumption
    during operation [10]. Fig. 1. Classification of wireless technologies: power
    consumption versus communication range [11]. Show All Indeed, LoRaWAN is an open
    system based on a very robust modulation (called LoRa), which provides several
    interesting features for covering rural areas with simple devices [9]. For such
    reasons, LoRa has been widely employed and tested in the agricultural field, connecting
    environmental sensors measuring temperature, air/soil moisture, etc., or to control
    different kinds of actuators (e.g., irrigation valves), and in applications, such
    as tractor communications, livestock monitoring, and location tracing [12], [13],
    [14]. Differently from existing surveys, which either treat LoRa together with
    all other IoT solutions or consider very specific technological aspects, we consider
    the adoption of these systems from an holistic perspective. For example, LoRa
    is cited in [5] in the general framework of IoT; [7] cites LoRa among the most
    promising technologies for agricultural IoT, and the same plan is followed by
    [8] which dedicated a Section to LoRa in Enabling Communication Technologies;
    similarly [15] includes LoRa in IoT communication protocols suitable for smart
    agriculture. On the other hand, [16] is specific to LoRa but is focused only on
    the protocol performance, [13] takes into consideration only the energy consumption
    of LoRa, [17] discusses the application of the technologies of industry 4.0 in
    the context of smart agriculture. Papers [18] and [19] deal with specific issues
    meaning the decision support system (DSS) and robotics in agriculture, respectively.
    Instead, in this article, we strive to provide a thorough and focused analysis
    on LoRa/LoRaWAN application in smart agriculture, offering a comprehensive view
    of the advancements and in-field applications of this IoT technology. LoRaWAN
    relies on LoRa modulation, a robust chirp-based modulation scheme, patented by
    Semtech [20]. It supports wireless connectivity with limited data rates over large
    areas and without the need of an operator. LoRaWAN is widely used in smart industry,
    smart home, smart city and, increasingly, in the smart agriculture environment.
    In the view of the authors of this article, LoRaWAN possesses five main strengths
    (low-cost, long-range, low-power, no-operator, and unlicensed spectrum) that can
    bridge the gap between smart agriculture and smart cities or industries. Moreover,
    several recent improvements on the resource allocation, channel access protocol,
    and network planning can enhance the efficiency of LoRaWAN networks, reducing
    capital and operational costs [21]. In rural areas, several experiments have demonstrated
    good coverage of LoRa [22], [23], [12]. Coverage ranges of up to 5 and 47 km have
    been obtained in the non-line-of-sight (NLOS) and line-of-sight (LOS) propagation
    conditions, respectively. In addition, in the case of NLOS propagation, the coverage
    range can be increased by using an unmanned aerial vehicle (UAV) [24], [25]. In
    terms of power consumption, LoRa offers up to 15 years of battery life to its
    devices. The low power consumption is a key feature of LoRa that makes it an ideal
    choice for smart agriculture applications. It was demonstrated experimentally
    that the estimated battery lifetime of a LoRa device may be six times that of
    a Wi-Fi device and two times that of a ZigBee device [26]. In this article, we
    provide a broad survey of LoRa-based smart agriculture systems, analyzing the
    state-of-the-art and highlighting for each solution the possible adoption of Machine
    Learning, control automation techniques, and energy autonomy features. We classify
    these works in four main categories: 1) irrigation systems; 2) plantation and
    crop monitoring; 3) tree monitoring; and 4) livestock monitoring. These LoRa systems
    are analyzed in terms of scalability, interoperability, network architecture,
    energy efficiency, and point out some open issues which traverse most of the current
    smart agriculture systems. References have been selected based on recent papers
    dealing with smart agriculture; however, some contributions in different fields
    useful as a benchmark are cited as well. Finally, we present the lessons learned
    and draw future research directions which we think crucial for the success and
    widespread of such technologies. The remainder of this article is structured as
    follows. Section II provides an overview of LoRa technology and its perspectives
    in agriculture, while Section III offers a brief summary on smart agriculture
    applications and their main challenges. Section IV reports on general purpose
    LoRa-based IoT platforms applied to smart agriculture. Section V, instead, discusses
    specific vertical solutions for smart agriculture, according to the four above-mentioned
    categories. Lessons learned and future research directions are proposed in Section
    VI. Finally, conclusions are drawn in Section VII. SECTION II. LoRa and Its Perspectives
    in Agriculture LoRa technology is a proprietary physical layer technology patented
    by Semtech, which is revealing as a promising solution for large-scale low-power
    IoT deployments, including smart agriculture applications. Indeed, by operating
    in the unlicensed industrial, scientific, and medical (ISM) radio bands and with
    a robust chirp-based modulation scheme, LoRa provides a cheap solution for supporting
    wireless connectivity with limited data rates (from 0.3 to 27 kb/s) in large areas
    and without the need of an operator. Moreover, LoRa transmissions are regulated
    by having a maximum transmission power of 25 mW (14 dBm) in the uplink, a configurable
    bandwidth of 125, 250, or 500 kHz, and a duty cycle of 0.1%, 1.0%, and 10%, which
    permit low energy consumption. In some scenarios, the battery of LoRa devices
    can last up to 15 years. Although LoRa technology is limited to the physical layer,
    different network solutions can be built on top of it, by exploiting its transmission
    interfaces. Among these, the most consolidated one is the open-source solution
    promoted by the LoRa Alliance, which is called LoRaWAN [27]. LoRaWAN networks
    are based on a simple star of star topology (Fig. 2): end-devices (EDs), such
    as sensors or actuators deployed infield, transmit packets on the wireless medium
    to fixed nodes called gateways (GWs), which, in turn, forward the collected packets
    to a central network server (NS) interacting with several application servers
    (ASs) [28]. The network infrastructure between GWs, NS, and ASs is typically based
    on a wired Internet technology, while EDs are not associated to a specific GW,
    which greatly simplifies implementation (e.g., in case of mobility [29]): in case
    a duplicate packet is simultaneously received by multiple GWs, the NS is responsible
    of filtering these packets and performs other simple decisions on network configuration.
    Fig. 2. LoRaWAN typical architecture. Show All To minimize the protocol complexity
    and the energy consumption, LoRaWAN employs a simple Aloha MAC protocol and defines
    three classes of devices (Fig. 3). Device classes represent different ways of
    managing the reception operations performed by the EDs. Class A devices, corresponding
    to the lowest energy profile, can receive downlink packets only in two time windows
    following the transmission of their own packet to the GW. In other words, devices
    can sleep all the time and downlink transmissions are triggered only after an
    uplink one. Class B devices add to this possibility a periodic scheduling of reception
    windows, by keeping a time synchronization with the GW. Finally, class C devices
    are constantly listening to the channel for downlink packets. Any time that a
    new packet is ready for transmission, devices attempt to transmit by randomly
    selecting one of the available channels in the ISM bands (e.g., in the 868 MHz
    there are 16 channels in Europe), together with a modulation parameter called
    spreading factor (SF). More into details, six different SFs are used in LoRa (from
    SF7 to SF12), which result in different symbol times and in almost orthogonal
    transmissions: when two signals modulated at different SFs overlap, the GW is
    able to decode both transmissions in a wide range of power ratios among the signals
    [30]. Unlike many other IoT technologies, the LoRaWAN specification offers dedicated
    end-to-end encryption to application providers, together with network-level security
    primitives, which allow sharing the same network among multitenant applications
    [31]. Fig. 3. LoRaWAN technology stack. Show All Summarizing, the ease of deployment
    with excellent coverage, the availability of devices with very low energy demand,
    and intrinsic security mechanisms make these systems very suitable for innovative
    agriculture applications. Indeed, several state-of-the-art IoT applications in
    smart agriculture are based on LoRa/LoRaWAN networks. For example, LoRa is used
    to connect sensor nodes measuring environmental parameters or to control different
    kinds of actuators (e.g., solenoid valve for irrigation purposes), and in applications
    such as livestock monitoring and location tracing [13], [10], [14]. These applications
    are not critical for data rates and latency, but often require to work in large
    rural areas, with limited access to energy grids and the Internet, and with decision
    mechanisms which benefit from data-driven learning. SECTION III. Smart Agriculture
    Applications and Challenges While industrial production processes have already
    become smarter and autonomous thanks to the implementation of the so called Industry
    4.0 concept, the integration of technologies such as IoT, artificial intelligence
    (AI), robotics, and big data is more recent in agriculture. The availability of
    IoT technologies for supporting wireless connectivity in rural areas and controlling
    infields smart objects shows a great potential for improving the agricultural
    sector, toward the so called smart agriculture [17], [18], [19]. Indeed, farm
    monitoring and automation can make production more efficient and sustainable [7],
    by promptly detecting and reacting to water or moisture stress, wastes of raw
    materials, crops’ diseases, pests, and nutrient deficiencies, as well as problems
    related to the wellbeing of farm animals. The interest on the development of smart
    agriculture applications has been demonstrated by the recent commercialization
    of agricultural sensors and robots (called Agribots), specifically designed for
    reducing the intense physical labor traditionally required in agriculture [15].
    Apart from the availability of smart devices for interacting with the farm in
    the physical world, smart agriculture applications require to build a digital
    representation of the farm status and a decision logic based on the collected
    data. Different protocols can be envisioned both for providing the wireless connectivity
    to heterogeneous devices (from simple low-cost temperature sensors, to complex
    remote-controlled robots) and exporting data for analysis and decisions [32],
    [33]. Since a large amount of data can be produced by agricultural sensors, big
    data analysis can provide efficient monitoring and processing methods [34]. Data
    processing may involve various features such as data loading, validation, aggregation,
    prediction, classification, image or video processing, and data mining. Thus,
    based on the acquired data, DSSs can optimize the productivity and reduce the
    ecological footprint of the farm. Researchers recognize that digitization of farming
    processes and activities is an important challenge for the adoption of smart agriculture
    technologies [32], [35]. In particular, the major challenges to digitization in
    agriculture can be categorized as follows. Communication Issues: As we will detail
    later, large-scale implementations of IoT solutions require robust and secure
    network architectures. The reliability of communicating information still represents
    a challenge to be addressed in the agricultural context and justifies the adoption
    of LoRa/LoRaWAN technologies. Energy Management: The power supply in devices for
    smart agriculture is a significant challenge and energy harvesting systems are
    a relevant area of research. The main issue concerns the sensor’s power supply
    and how to optimize efficiently the power consumption. Moreover, distributed nodes
    can execute some computations (Edge computing) which consumes more energy, while
    sensor batteries have a limited capacity. Consequently, smart devices require
    efficient energy storage and supply. Data/Device Heterogeneity: In general, the
    agricultural data is produced by heterogeneous sensors (soil sensors, weather
    sensors, trunk sensors, leaf sensors, etc.). In addition, IoT devices generally
    use different network protocols and platforms. Thus, in addition to sensors heterogeneity,
    network and protocol heterogeneity should be considered as well. Getting these
    technologies to work together is often an issue, especially for unskilled farmers.
    Physical Deployments: Spatial deployment of devices on farms proves to be a significant
    challenge, especially when the entire farm needs to be monitored across a large
    area and with different application scenarios (soil, plants, trees, animals, etc.).
    Data Management: The difficulty of interpreting the data can be a huge barrier:
    indeed, numerous sensors are necessary and big data analysis could be required
    to better understand and forecast the unpredictability of agricultural ecosystems.
    Generic Platform: To promote the adoption of smart agriculture technologies is
    often required to develop user friendly software platforms. The challenge here
    is to build a universal platform that can be easily modified to support different
    types of monitoring ranging from specific crop to livestock. These challenges,
    together with the cost of infrastructure investment, the complexity of technologies,
    lack of farmers’ education and training, data ownership, and privacy and security
    concerns, has motivated the research and development of innovative platforms,
    specific network technologies, and new architectures for smart agriculture [32],
    [35]. SECTION IV. Generic LoRa-Based Platforms Since agricultural applications
    are widely different, varying from soil and air monitoring, to irrigation automation
    and livestock breeding, several general purpose IoT platforms have been adapted
    for farmers to accommodate all these applications together under a unified, easy
    to understand and simple to use interface. Therefore, in this section, we will
    discuss some of these LoRa-based platforms horizontally designed for smart agriculture,
    while in the next one, we will dig into more vertical and application-specific
    systems, focusing on the four reference scenarios depicted in Fig. 4. Fig. 4.
    Four reference applications in smart agriculture. Show All Generic and open IoT
    platforms can indeed help to digitize farms by integrating numerous agriculture
    applications, harmonizing specific sensing devices, actuators, and decision logics,
    which exhibit heterogeneous requirements in terms of network bandwidth, latency,
    sensors’ complexity, and energy requirements. A clear example is constituted by
    FIWARE [36], a powerful open-source platform, sponsored by the European Commission,
    that provides standardized interfaces for many different IoT sectors including
    agriculture. The FIWARE platform includes several parts called generic enablers
    (GEs), which provide components and reference implementations that support specific
    APIs, and can integrate data collected from heterogeneous sensors using different
    communication technologies, to create custom applications [37], [38]. Several
    GEs are available making it easier to interface with IoT systems, and the IoT
    Agent for LoRaWAN offers a bridge between LoRaWAN and the FIWARE Context Broker
    (the core component of the “Powered by FIWARE” platforms). Moreover, FIWARE can
    be combined with other third-party platforms to provide accessible tools to worldwide
    farmers and consumers too [39]. Another example is the work in [40] where low-cost,
    LoRa-based devices are used for soil temperature and humidity monitoring, and
    the data is processed and sent to the Cayenne IoT Platform for storage and visualization
    [41]. This platform is a drag and drop project builder for developers and engineers
    that can be used in different IoT applications. It encompasses cloud-based web
    applications as well as mobile apps for Android and IOS devices. Cayenne can integrate
    any tool into the library with a wide variety of IoT ready-to-use devices and
    connectivity options. Other LoRaWAN-based IoT platforms are more specific to the
    agricultural world, aiming at improving the management of generic farms in a highly
    customizable way. For example, the LoRaFarM platform [42] has a generally applicable
    “core” infrastructure, which can be completed with specialized ad-hoc modules
    depending on the farm’s characteristics and requirements. The LoRaFarM platform
    derives its topological structure from the LoRaWAN architecture, since low-level
    communication patterns are built around the LoRaWAN technology (see Fig. 5). Hence,
    expansion modules can be added at farm level (or low level), if they include physical
    hardware to be installed in the deployment (sensors or actuators), as well as
    a high level, in case data processing is needed. The middleware, in the LoRaFarM
    domain, refers to the set of entities and technologies by which data coming from
    farm-level modules are collected, stored, and exposed to high-level modules. This
    middleware can be defined as a sort of “connecting layer” between the farm and
    the back-end domain. Fig. 5. LoRaFarM platform: levels and parallelism with LoRaWAN
    [42]. Show All One of the main advantages of the LoRaFarM platform is that heterogeneous
    subnetworks, in terms of capabilities (transmission range, data throughput, and
    energy consumption), can be incorporated without altering the platform structure
    and, thus, making it highly scalable, flexible, and suitable for a wide range
    of scenarios. Indeed, this gives the freedom to choose the most suitable communication
    protocols and traffic policy to monitor and control the farm different areas,
    such as greenhouses and fields. Messages between nodes employing different protocols
    are translated by a multiprotocol GateWay (mpGW), enabling communications between
    non-LoRaWAN-enabled nodes and the LoRaFarM middleware, in a seamless way. Its
    protocol translation functionality, the mpGW can be enriched with edge computing
    features, to process and aggregate sensor data. Moreover, LoRaFarM can be extended
    with new functionalities like data analysis and prediction of the evolution of
    environmental parameters to prevent plant diseases, relying on AI and Machine
    Learning techniques. Finally, the mySense environment proposed by Silva et al.
    [58] is a sensor data integration framework aimed to systematize data acquisition
    procedures to address common smart agriculture issues. It facilitates the use
    of low cost platforms such as Arduino and Raspberry Pi, making available a set
    of free tools based on the do it yourself (DIY) concept. The mySense platform
    builds over a 4-layer technological structure (sensor nodes, crop field and sensor
    networks, cloud services and front-end applications) and is accordingly divided
    into four levels of operation: Level 1, for data collection using common data
    transfer technologies (ZigBee, GSM/GPRS, LoRa, etc.); Level 2, for GWs (possibly)
    running local tasks according to the fog or edge computing paradigms; Level 3
    for storing data in the cloud; and Level 4 for high-level applications. Data can
    arrive from any device provided that complies with the data formats allowed by
    the platform. Summary and Insights: This Section discussed LoRa-based platforms
    which can be exploited to unify different applications into one simple and easy-to-use
    platform. Platforms such as Fiware, Cayenne, LoRaFarM, and mySense provide standardized
    interfaces to integrate different agricultural applications with each other. These
    platforms provide ready-to-use solutions and connectivity between heterogeneous
    networks. With these platforms, LoRa can integrate and complement existing systems
    based on other network technologies (ZigBee, Bluetooth, etc.), making them highly
    scalable. SECTION V. Application-Specific LoRa Platforms In this section, we provide
    an in-depth review focusing four reference scenarios: 1) irrigation systems; 2)
    plantation and crop monitoring; 3) tree monitoring; and 4) livestock monitoring,
    which broadly cover most of smart agriculture applications. A. Irrigation Systems
    Accurate monitoring of the soil water status allows to achieve seasonal water
    savings of up to 90% compared to traditional management, increasing productivity
    and introducing significant savings in energy costs for the water pumps management
    [59]. To improve water management in agriculture, it is necessary to analyze and
    monitor the complex water interactions that occur in field, following the concept
    of soil-plant-atmosphere (SPA) continuum systems [60]. Indeed, the knowledge of
    the water status of the SPA system plays a significant role for understanding
    the crop water stress and implement water saving mechanisms with a minimal effect
    on the production [59]. Measuring the evapotranspiration (ET), which refers to
    the amount of water that passes from the soil into the air due to the combined
    effect of plant transpiration and evaporation, is another complex task. Examples
    of these sensors are the lysimeters or sophisticated micro-meteorological sensors
    (e.g., Eddy covariance), whose cost and complexity limit their application to
    research studies [61]. Cheaper systems are the time domain reflectometry (TDR)
    technique or gravimetric methods [62], whose main limit is the difficulty in calibration
    and automation. Some LoRa-based irrigation systems are implemented using development
    boards such as Arduino, ESP32, Pycom, or STM32, e.g., [43], [44], [47], [48],
    [46], and [51]. Few of them also include energy harvesting modules, such as an
    hydroelectric generator, allowing them to operate for decades. For example, the
    LoRaWAN-based irrigation system in [51] comprises an energy-neutral irrigation
    node (Fig. 6) with the following modules: controller module, power module, irrigation
    module, and transmitter module. Fig. 6. Energy-neutral irrigation node described
    in [51]. Show All Exploiting AI and data coming from different sensor, such as
    air temperature and humidity, soil temperature and humidity, light intensity,
    etc. makes possible to develop and train specific irrigation models to calculate
    the exact amount of water to be distributed. For example, the works [54], [55],
    [56] provide machine-learning-based smart irrigation systems, all employing LoRa
    technology. In particular, in [55], a random forest classifier predicts the soil
    moisture and, thus, irrigation is planned accordingly. In [54], instead, multiple
    linear regression algorithm is employed to train the model using two highest correlation
    coefficient features: 1) light intensity and 2) soil humidity. Data is collected
    with a LoRa P2P network, which uses a master–slave and TDMA-based MAC protocol.
    Each slave node has a unique address and can transmit a packet in each of the
    reserved TDMA time slots. Alternatively, a Penman-Monteith-based irrigation model
    allows for an optimal irrigation strategy for different crop growth periods and
    uses the ET parameter to estimate the amount of water [63]. This solution requires
    an integration of actuators, sensors and a meteorological station in a LoRa network
    [49], [50]. In addition, third-party services such as weather information or fog
    computing may be needed to decide on irrigation schedules [57]. Since in LoRaWAN,
    the latency of downlink communication from GW to Class-A nodes (sensors or actuators)
    is relatively long (must first wait for an uplink transmission), few systems employ
    alternative Master/Slave protocols [52], [53], [54]. These protocols increase
    the stability of the LoRa irrigation system, avoiding packet collisions and, thus,
    can save water during the close command of the solenoid valve. Finally, AREThOU5A
    [43] is an example of a water management system that combines data collected from
    wireless sensor networks (WSNs) in the field and satellite data provided by international
    weather forecast services, to achieve efficient water usage strategies for farmers.
    It employs a WSN with two different sensors for measuring the temperature and
    the soil moisture in field. A routing subsystem controls and routes the data and
    information through LoRaWAN and TCP/IP with SSL network interfaces. The LoRa network
    is used to collect data from the EDs and perform administration processes, while
    the TCP/IP SSL works as a bridge to the rest of the network architecture. Summary
    and Insights: Comparing the characteristics of different irrigation systems, summarized
    in Table I, it is relevant to note that most of these LoRa-based irrigation systems
    adopt temperature, humidity, and soil moisture sensors. However, albeit all cited
    papers are recently published, ML is used only in 1/3 of the applications. TABLE
    I LoRa-Based Irrigation System Comparison Furthermore, only 13% of these irrigation
    systems used an evapotranspiration-based methodology. This strategy, which is
    often expensive, may be accomplished by combining inexpensive sensors and AI (with
    a more comprehensive approach integrating meteorological variables measured by
    a weather station with variables measured by soil sensors into the system), significantly
    lowering the cost of direct evapotraspiration measurements. Such improvements
    could lead to more effective water management, with the simultaneous impact of
    decreasing water usage and increase crop output. Finally, LoRaWAN communications
    can be tuned to adapt the duty cycle and manage the system optimally: for example,
    when the irrigation system is not in use, sensor data could be collected every
    hour or even less, while when irrigation is taking place the measurements could
    be increased to every 5–10 min. This way, the use of water and energy could be
    further reduced [71]. B. Plantation and Crop Monitoring Plantation and crop monitoring
    requires a large number of sensors to obtain an effective control and, thus, increase
    productivity, especially when agricultural fields are very heterogeneous. For
    example, in order to optimize the production while minimizing the ecological footprint,
    it is necessary to control the injection of pesticides and fertilizers [72], [73],
    increasing yields up to 10% and saving fertilizers up to 37% [74]. Such control
    can be performed by varying the pesticides and fertilizer application rate over
    time and space. Crops do not always need a uniform application, as some areas
    have different requirements due to their location (sunlight, soil features, etc).
    Over-fertilization can deteriorate water quality, favor weed growth, and reduce
    profit. Vice-versa under-fertilization restricts yield or reduces crop quality
    [75]. The application rate can be modified based on weather impacts, nutrient
    availability, and seasonal cycles [73], [75]. Some optical or ultrasonic sensors
    indirectly assess the nutrient request (nitrogen, phosphorus, potassium, etc.)
    of the crop at the time of application [72]. In addition, to reduce the loss of
    productivity in crops, surveillance systems can be adopted [76]. Providing visual
    monitoring to growers can prevent crops from getting damaged by intruders, ensure
    the field conditions or enable the detection of pests attacks remotely. Although
    there are plenty of devices which can be exploited for building a real-time visual
    monitoring system, deploying them in a wide area and over wireless channels can
    be challenging [77], [78], [79]. Table II summarizes the main characteristics
    of several plantation and crop monitoring systems, based on LoRa technology. The
    nodes used in these systems should be of small dimensions, self-sufficient in
    terms of energy, relatively cheap, and often able to acquire a large variety of
    parameters. For example, three different sensor nodes have been developed by Valente
    et al. [64] and tested in a vineyard field: node 1, with an ultrasonic anemometer
    (that measures the direction and speed of the wind) and a sensor that monitors
    bulk electrical conductivity, in addition to volumetric water content (by measuring
    soil permittivity) and soil and air temperature; node 2, an irrometer watermark
    soil water tension sensor; and node 3, an all-in-one weather station with 12 sensors
    to measure air temperature, relative humidity, vapor pressure, barometric pressure,
    wind speed, gust and direction, solar radiation, precipitation, lightning strike
    counter, and distance. It should be remarked that each node contains sensors which
    differ for the sampling rate, accuracy, and supplied energy. The nodes send data
    using LoRaWAN to a GW that is connected to a the things network (TTN) server.
    In the TTN server, data is decoded and sent to the ThingSpeak [80] platform for
    visualization and possible analysis and aggregation. Fig. 7 summarizes the different
    blocks composing the nodes: 1) a maximum power point tracker (MPPT) applied to
    a photovoltaic source and connected with a storage system; 2) a dc/dc switching
    converter to interface the source with the storage system and loads; 3) the LoRaWAN
    module for communication; and 4) the analog-to-digital converter (ADC) module
    to convert the signals available from sensors. TABLE II LoRa-Based Plantation
    and Crop Monitoring System Comparison Fig. 7. Block diagram of the sensor nodes
    taken from [64]. Show All In [66] a LoRa-based IoT monitoring system for starfruit
    plantation is presented. The LoRa network implemented includes three nodes and
    one master, and it can cover a range of 700 m. For optimal growth, starfruit plants
    need soil pH conditions between 5.5–7.5. Thus, thanks to the proposed LoRa system,
    the farmers can make important and precise decisions about how to grow the crop.
    Similarly, works [65], [67], [68], [69], [58] present solutions to increase production
    and fruit quality, with optimal use of resources through LoRa-based networks.
    The Smart Mushroom Cultivation is a system used to automatize the production of
    expensive mushrooms [67]. The smart system includes devices to monitor and control
    humidity and C O 2 levels through sensors and actuators all connected using LoRaWAN.
    The sensor nodes measure the ambient condition inside Mushroom House (humidity,
    temperature, and C O 2 ), and data is sent to the remote server for monitoring
    and analysis. An automatic control maintains the ambient conditions between the
    required levels. Finally, there are cases where anomaly detection near the sensor
    is required to allow decisions and actions as soon as possible. In this direction,
    Brunelli et al. [70] proposed a new paradigm of monitoring and pest detection
    to improve the performance of an apple orchard. They add intelligence to the LoRa
    nodes, shifting the detection of anomalies near the sensor. The application is
    developed on a low-energy platform powered by a solar panel, realizing an energy-autonomous
    system capable of operating unattended continuously over LoRa networks. Summary
    and Insights: Plantation and crop monitoring requires the control of numerous
    parameters, captured by different heterogeneous sensors deployed in the agricultural
    fields. Some of the sensors used in the cited papers are specific to the type
    of crop, while others (e.g., temperature, humidity, etc.) are deployed in almost
    all of the literature works. In addition, the use of AI is not yet widely adopted,
    and only three out of nine papers adopt automatic control for the implementation
    of DSSs. An innovative approach in this context would be to add intelligence to
    the LoRa nodes, while moving the DSS closer to the sensor. Finally, note that
    the maximum size of the LoRa payload is 250 bytes; this allows a wide variety
    of parameters to be monitored and transferred in a single packet. For example,
    Sacaleanu and Kiss [69] send eight agri-meteorological measurements in a single
    LoRa packet of only 16 bytes. C. Tree Monitoring Trees are essential in modern
    society and are widely applied in a great number of scenarios including soil erosion
    prevention, air purification, wood or fruit production. For supporting the managers
    of urban/rural green infrastructures and forests, it is important to constantly
    monitor the tree conditions, in terms of growth rate and failure risk, as well
    as micro-climate parameters in the tree surrounding areas. The analysis of this
    data allows the characterization of the trees functional responses to their environment
    and a prompt action in case of problems. Tree monitoring also requires reliable
    long-range communications in the presence of foliage, large sensor densification
    (i.e., one sensor per tree), and measurements of various physiological/biological
    parameters from specific locations (at the root, the trunk, or the branch) as
    a function of vegetation type to obtain accurate readings [83]. In these systems,
    it is also important to measure changes in position over time or instantaneous
    trunk accelerations. Table III summarizes the main characteristics of relevant
    Monitoring systems. TABLE III LoRa-Based Sensors Applications in Tree Farms One
    of the main properties to be measured is the water transport in the xylem of the
    trunk (called the sap flow). A possible measurement method is the Heat Balance
    Method, developed by Granier [91], [92], which is based on analyzing the temperature
    difference among two probes inserted into the stem wood at a 10 cm distance along
    the vertical trunk axis. The probe in the higher position is heated, while the
    lower one provides the stem wood reference temperature. The temperature difference
    generated between the probes represents an index of the transpiration activity
    of the plant, expressed as a variation of the flux density. This method can be
    used for accurate measurements of sap flow in plants, providing a reliable calibration
    procedure to relate the temperature difference to the actual sap flow [93]. For
    example, the TreeTalker (TT) [81] is a device that measures sapflow (water transport
    in the trunk), wood temperature and humidity, multispectral signature of light
    transmitted through the canopy, tree trunk radial growth, accelerations along
    a 3-D coordinate system used to detect tree movements, air temperature, and relative
    humidity, which can be additionally complemented by soil temperature and volumetric
    water content. A TT node is connected via LoRa wireless connection to a GW, that
    manages up to 48 devices in one cluster. The GW is, in turn, connected to the
    Internet via GPRS and sends data to a computer server. This technology can be
    applied to monitor the root plate tilt, as well as the flexion and the accelerations
    that tree trunks receive under the force of the wind for the evaluation of tree
    failure risk. Another solution to analyze the health condition of a tree consists
    on the electrical impedance spectroscopy (EIS), it is a well-known technique with
    a wide range of applications. EIS has been applied to characterize solids, liquids,
    both in the laboratory and industrial environments. Moreover, assessment of physiological
    states of some trees (pinus, chestnut, etc.) has also been studied. The method
    based on bioimpedance indexes allows determining three distinct physiological
    states: healthy and watered plants, plants with a high level of hydric stress,
    and plants with disease [94], [95], [96]. For example, Amaro et al. [82] integrated
    an EIS system in a sensor node to analyze the health condition of the tree and
    transfer the results through the LoRaWAN protocol. Finally, tree monitoring systems
    are often influenced by the presence of foliage which can severely impact wireless
    communication systems performance. This generally leads to node densification
    to increase coverage levels, especially in large areas, resulting in additional
    costs and constraining the design of LoRa systems in nonhomogeneous vegetation
    environments [84], [85], [97]. For such reasons, a small drone with a GW is sometimes
    required for collecting data from nodes and solving the Fresnel zone radio propagation
    issues encountered in tree farms [98], [86]. Summary and Insights: In this section,
    some methodologies for monitoring tree health have been discussed. It is important
    to highlight how LoRa can be easily integrated into these systems, e.g., to measure
    the lymph flow or bio-impedance of trees. In case the parameter to be monitored
    involves roots, it has been shown that LoRa can be used for under-ground or near-ground
    communications too [12], [99]. Finally, the use of drones for data collection
    has been exploited to solve the problem of foliage scattering. D. Livestock Monitoring
    System Smart livestock practices aim at improving the productive and reproductive
    parameters, feeding and handling of feces, producing a direct effect on the increment
    of the farmers’ income, and also better milk and meat production [100]. The implementation
    of these practices requires to monitor the general health conditions of the animals,
    by tracking some biological signals to be associated to symptoms of disease, estrus
    and calving [101]. Wearable sensor technologies provide the possibility of remotely
    managing individual animals facilitating urgent interventions, responding to time
    and labor-intensive concerns in a more efficient way [87]. In extensive livestock
    production systems, the absence of access to networking and animal contact presents
    a barrier to the effective use of these technologies. Wearable sensors, to be
    more practical for extensive management settings, must: 1) network over longer
    distances; 2) have reliable power supplies (preferably renewable); 3) be low-cost
    so that damaged and lost sensors are less economically impactful; and 4) transmit
    data in real time. For these reasons, LoRaWAN technology is indicated for above
    described applications, some of which are summarized in Table IV. Primarily, these
    systems are used to monitor the animal health, but by integrating LoRa technology
    with a GPS, remote grazing systems can be implemented [87], [88]. TABLE IV LoRa-Based
    Sensor Applications in Livestock Monitoring Animal monitoring can involve completely
    different scenarios; as a consequence, the LoRa network architecture could require
    a more specific design effort to work either in indoor or outdoor settings. For
    example, the work in [89] proposes two different versions of GWs: an indoor GW,
    designed for installation in sheltered areas such as barns and cowsheds and oriented
    toward dairy cattle livestock scenarios, and an outdoor version, more specific
    for open areas such as paddocks and pasture lands, and designed for beef cattle
    livestock scenarios. The indoor GW is conceived for monitoring several important
    physical parameters typical of the shed environment, such as temperature, relative
    humidity, illuminance, carbon dioxide (C O 2 ) , and ammonia (N H 3 ) concentration,
    while the main purpose of the outdoor GW is to manage nodes in remote areas, far
    from the shed, directly on the pasture land. In the open field scenario, weather
    parameters (temperature and humidity) are collected, for purposes of correlation
    with the animal health status. Moreover, in the presence of large herds, the high
    node density could cause an increase in collisions between sent packets. In such
    scenarios, a MAC layer that includes a listen-before-talk (LBT) mechanism could
    prevent as much as possible packet collisions among nodes. Indeed, LBT-based carrier-sense
    multiple access with collision avoidance (CSMA/CA) can be incorporated with the
    physical layer of LoRa [89]. The CA mechanism is based on a random retransmission
    time that randomizes the access of the nodes to the wireless medium. The size
    of the pasture area is another factor to consider in deploying the LoRaWAN network.
    In particular, it has been shown that in large areas of pasture, the use of a
    mobile GW that moves along the track is a better solution than the use of one
    or more static GWs [90]. Contrarily, when the livestock area is not too large,
    using only one static GW is preferable because the data extraction rate value
    is high enough and the energy consumption is lower compared to multiple static
    GWs or one mobile GW. The instance of cattle monitoring in New Mexico, as described
    by Actility [102], is one of the successful illustrations of a large-scale LoRaWAN-enabled
    deployment. Due to the large size of these desert ranches (10000–20000 hectares)
    and the large number of cows to track (up to 7000), monitoring and obtaining information
    regarding cattle wellbeing can be time consuming and expensive. Indeed, while
    the cattle were previously followed using traditional GPS devices, the absence
    of reliable cellular connection throughout the whole grazing region made this
    method ineffective. These issues were solved with an off-the-shelf LoRaWAN solution
    because of its extensive range and good coverage. Finally, LoRa technology can
    be used for sharing the short text messages and voice messages in the absence
    of cellular coverage. For example, COWShED [103] is used for supporting livestock
    transhumance in Senegal. Summary and Insights: In this section, we showed how
    LoRa is used to collect information about the movements and health of livestock,
    as well as on the conditions of grassland. LoRa can also aid herders in achieving
    remote grazing by combining data with electronic fences, to identify whether animals
    have crossed it. In addition, LoRa has been used to monitor environmental parameters
    of barns, demonstrating how this technology can be adopted in both outdoor and
    indoor scenarios. Additionally, innovative MAC schemes, such as LBT method could
    be implemented to minimize packet collisions when big herds present, and to mitigate
    the limits on the effective duty cycle of channel occupation. Finally, in the
    absence of cellular coverage, LoRa/LoRaWAN solutions have been used for large-scale
    cattle monitoring or even supporting livestock transhumance for text/voice messages.
    SECTION VI. Lessons Learned and Open Issues This Section discusses the lessons
    learned and the open research challenges for using LoRa technology in smart agriculture.
    According to the aim of this article, it was learned that, given the wide variety
    of sensors used in smart farming systems, different communication protocols need
    to be integrated, particularly when different platforms/vendors coexist and data
    must be collected from the various subsystems. In addition, since power supplies
    are frequently unavailable in a large agricultural area, nodes should be as energy
    self-sufficient as possible. Using local or edge data processing could mitigate
    this problem, optimizing the energy consumption. Moreover, keeping the logic on
    the Edge of the network could alleviate the hurdle on LoRa’s centralized communications
    (especially on the downlink). The development of interoperability in smart agriculture
    systems can also be accelerated by platforms such as FIWARE and Cayenne, while
    machine learning can be used to model and analyze technical problems, improving
    scalability of LoRa networks and predicting network congestion. The experience
    gained in Industry 4.0 can be transferred to agriculture, considering some peculiarities,
    including the need to cover large spaces that cannot be manned. In addition, there
    is the need to provide device power supply and data security (partially solved
    by leveraging on LoRaWAN built-in security schemes). Another significant factor
    is the initial cost of the system, which must be as low as possible since the
    pay-back time also depends on elements that cannot be predicted during the year,
    such as weather. Finally, it has been recognized that although ICT has long-term
    sustainability issues to be solved, they show great potential for improving the
    usage of natural resources, especially when cyber–physical systems (CPSs) are
    combined with IoT, AI, machine learning, and neuromorphic computing techniques
    [104]. Through the study carried out in this article, it is also possible to understand
    in which area LoRa has been applied and is emerging in recent years. In particular,
    among the application areas discussed in Section V, Fig. 8 shows in a pie chart
    that more than 40% of the analyzed studies focus on water management, while almost
    25% are dedicated on crop monitoring, followed by tree monitoring. This result
    is in line with recent market surveys on LPWANs (e.g., [105]), and other general
    studies on communications protocols for smart agriculture [9]. Fig. 8. Distribution
    of the LoRa papers according to smart agriculture application areas. Show All
    All this confirms the great potential of implementing smart agriculture solutions
    using IoT, and LoRa technology in particular. However, there are still some open
    issues that need to be faced: for example, LoRaWAN works quite well in uplink
    when it needs to collect data from sensors, while downlink connections might suffer
    high latency. In what follows, we briefly discuss future research directions related
    to downlink latency, energy management, device heterogeneity and interoperability,
    data management, and scalability. These open issues must be solved for LoRa systems
    to be widely adopted in smart agriculture. We conclude the Section with an eye
    on other wireless technologies, different from LoRa/LoRaWAN. A. LoRa Downlink
    Performance The downlink performance of LPWAN systems still represents a challenge
    since it is related to the energy consumption. In particular, LoRaWAN allows different
    tradeoffs between communication latency on the downlink channel and energy consumption.
    Nodes are classified by classes: they can receive only after an uplink transmission
    (Class A), or at regular time intervals (Class B), or at any time (Class C). The
    modern trend is to optimize energy efficiency, hence, data are transmitted only
    when necessary or periodically. According to the authors’ opinion, a further optimization
    could be retrieved by local data processing. As a matter of fact, even if nodes
    remain asleep most of the time, as in [57], or with scheduling intervals of reception
    windows of 10–20 min as in [48] and [50] or a few hours [58], local processing
    always lowers the data to be transmitted decreasing the transmission time; it
    has been successfully tested in [42] where edge processing on the GW allows a
    more effective control of the actuator nodes. This last approach improves also
    reliability since it allows farms to work even if the Internet connection of the
    LoRa GW is absent for a few hours. Reliability can also be improved by a Master/Slave
    access control method for the LoRa network [52], [53], [54]. Alternatively, for
    short-range communication, a Wake-up Radio (WuR) can be adopted. WuR technology
    is an ultralow-power receiver that is continuously listening to the channel while
    spending a few nanowatts or microwatts depending on the circuit’s design. WuRs
    work in parallel to the main LoRa transceiver and allow asynchronous wake-up of
    the nodes with low latency. With the LoRa-WuR scheme, the downlink latency can
    be reduced by almost 90% compared to the traditional LoRa protocol for a ten nodes
    cluster [106], [107]. B. Energy Efficiency Considerations In addition to downlink
    communication performance just explained, the energy consumption in an agricultural
    ED can include turning on booster pumps or solenoid valves, activating sensors
    over a long period, use of GPS and data transmission, etc. Nodes should be autonomous
    as much as possible since usually power supplies are not available in a wide agricultural
    area. Besides, the use of batteries needs to minimize disposal costs and pollution.
    Providing solutions to avoid the use of batteries by harvesting energy from the
    environment would encourage the deployment of wireless devices in smart agriculture.
    The use of different energy sources, such as solar energy, piezoelectricity, thermal,
    wind, water, and radiofrequency is consolidated [108]. However, making a device
    completely energy-neutral requires a thorough analysis of power consumption in
    different working states [109]. One facilitation is the availability of a renewable
    energy source as in [51]; on the other hand, a high energy consumption due to
    the heating of one probe as in [91] requires a different design or the remote
    monitoring of the energy available or harvested as in [110]. It is evident that
    there are many factors that influence the analysis of offering-demanding energy,
    it varies on a case-by-case basis and does not lend itself to systematic analysis;
    on the other hand, in this context, machine learning algorithms can give a significant
    contribution. Infact, the ML approach has been already successfully applied in
    different contexts allowing to implement an efficient renewable energy selection
    based on the geographic location [111], or to retrieve a good energy prediction
    [112]. An application example is given by the energy-neutral system for pest detection
    [70] which takes advantage of ML algorithms. C. Heterogeneity and Interoperability
    Smart agriculture systems are quite heterogeneous in terms of sensors and, in
    some cases, it is also required to integrate different communication technologies,
    e.g., when multiple platforms coexist and data arrives from different subsystems.
    LoRa platforms are used with ZigBee to implement hybrid communications managing
    different sensors clusters or with the IEEE 802.11s-based system to build a mesh
    networking architecture. The path for the integration of different technologies,
    such as cloud, IoT, and software-defined networking, with AI is proposed in [113]
    with the related challenges and opportunities. Assuring communications in heterogeneous
    smart agriculture systems is a critical issue that has been studied for example
    in [114], where LoRa and ZigBee hybrid communications are implemented. Precisely,
    two LoRa sensor clusters and two ZigBee sensor clusters are used and combined
    with two ZigBee-to-LoRa converters to communicate in a network managed by a LoRa
    GW. The token ring protocol in the ZigBee network and polling mechanism in the
    LoRa network is used. The system can work with a packet loss rate of less than
    0.5% when the communication distance is 630 m for the ZigBee network and 3.7 km
    for the LoRa network. An hybrid LoRa/IEEE 802.11s-based mesh networking architecture
    is proposed in [115], where an effective network protocol selection mechanism
    is developed to choose the right interface. Protocol selection is based on multiple
    parameters, including network communication interface type, GNSS position of the
    APs, RSSI of nearby nodes, type and amount of data to be transmitted. Large data
    to be transferred in a short time can rely on the IEEE 802.11s-based network while
    small data can be transmitted through a LoRa-based mesh network. Platforms such
    as FIWARE [116], Cayenne [41] and mySense [58], discussed in Section IV, can also
    give a push to achieve interoperability in the smart agriculture systems. The
    above described solutions can benefit of an “industry 4.0”-based approach where
    the integration of different protocols cooperate to address the needs of automating
    computing and technology processes [113], [18]. D. Machine Learning and Big Data
    Management The integration of big data analysis with machine learning can provide
    predictions about future outcomes, such as fruit quality or detect crops’ diseases
    using historical data, analytical techniques, and statistical modeling [117].
    The benefits of ML in the agriculture are relevant [118]. However, the deployment
    of models is the most challenging step to bring the ML algorithms in the production
    fields, and thanks to its advantages, LoRa technology could make a big contribution
    to taking this step. Collected data can be used to implement an intelligent system
    capable of supporting the identification of varieties and predicting the quality
    of the final product [64]. In fact, exploiting ML, the data can be used by the
    biologists to develop crop models and perform disease prediction [68]. The agricultural
    industry produces a large amount of data collected by heterogeneous sensors, so
    best practices should include the mechanisms to reduce the memory and time for
    data analysis. Thus, to pursue such objectives, edge computing models are also
    applied [119]. Distributed data process, such as MapReduce [120], may avoid bottlenecks
    when transferring all data to a single server, as in [121] where the proposed
    method adopts smart sensors to measure the soil quality indicators, while the
    preelaborated data is transmitted using the LoRaWAN protocol. The Apache Spark
    environment is then used to implement a parallel algorithm for statistical models
    based on the soil indicator data obtained from the experimental field. E. LoRa
    Scalability and Network Improvement As concerns scalability, some open points,
    shared with general applications, are recognized. For this reason, most of the
    reference literature does not directly address issues related to agriculture.
    Indeed, scalability is a key feature in LoRa networks due to its long-range and
    large number of devices can concurrently reach a given GW. The network scales
    quite well if dynamic transmission parameters are used, in combination with multiple
    sinks. However, the correct behavior of the NS is not easy to be evaluated [122].
    In fact, the NS presents some challenges from the point of view of its optimization,
    such as processing duplicate packets or packets from other networks, or bringing
    down the entire network in case of Internet connection loss. LoRa networks are
    bound by strict legal requirements, particularly where no LBT schemes are utilized.
    The transmission duty cycle (TDC) regulates the ISM bands to determine the maximum
    time that the band can be occupied, typically bounded to 1%. This implies that
    devices may not occupy the ISM band for more than 36 s per hour, forbidding the
    transmission of new packets when this limit is attained [123]. Machine learning
    can be applied to model and analyze technical problems, improving the scalability
    of LoRa networks and predicting network congestion [124]. Further developments
    could include enhanced ADR mechanisms, optimization of GW locations, and interference
    cancelation techniques [125]. Finally, some challenges remain such as the widespread
    adoption of multihop communications in LoRaWAN. Literature has shown that multihop
    or mesh topologies can extend the coverage of LoRaWAN networks and improve energy
    efficiency in certain scenarios [126]. These solutions propose intermediate nodes
    to forward messages to other EDs to extend the coverage. Other open points include
    the use of GWs as intermediate nodes, GW-to-GW communications, and practical large-scale
    deployment of LoRaWAN mesh networks. F. Other Communication Technologies The choice
    of a specific communication technology is central to the performance of IoT-based
    agricultural applications. Other than LoRa, many standards for wireless communications
    can be employed, including Bluetooth, ZigBee, Z-Wave, RFID, Sigfox, and NB-IoT.
    Some of them work well in the short-range (within 100 m), while others are more
    useful to cover long distances (up to tens of kilometers). Examples of the former
    are Bluetooth, ZigBee, Z-Wave, and passive and active RFID systems, while in the
    latter, standards are Sigfox and NB-IoT (and LoRa of course). As discussed previously,
    the deployment of a massive number of IoT devices might cause interference problems
    especially for technologies using the unlicensed spectrum, such as ZigBee, Wi-Fi,
    Sigfox, and LoRa. On the other hand, IoT devices operating with a licensed spectrum
    eliminate interference problems but might increase costs significantly. Several
    papers have analyzed different aspects of wireless communication protocols for
    smart agriculture, studying possible applications and comparing their performance.
    For example, ZigBee-based smart agriculture systems are described in [127], [128],
    [129], [130], and [131]. The biggest challenges for ZigBee networks are the limited
    range and increased power consumption (compared to LPWANs) and relatively low
    data rate (e.g., compared to BLE or WiFi). Therefore, ZigBee is better suited
    for small-scale scenarios [130], while the use of this protocol is not suitable
    when the agricultural area is vast and the distance between sensor nodes is large.
    On the other hand, the works [132], [133], [134], [135] represent successful examples
    of NB-IoT applications in smart agriculture. Indeed, extensive coverage, adaptable
    power consumption (depending on the mode of operation), and low interference among
    nodes, are features that make NB-IoT an interesting protocol for various agricultural
    systems [136]. However, NB-IoT employs licensed frequency channels, which results
    in higher subscription prices for the associated system even if it offers a higher
    data throughput than LoRa. Moreover, when there is an existing LTE infrastructure
    already in place, the need for hardware update may be another source of expense
    for such a system. This might be a drawback in the context of smart agriculture
    if the projected return on investment is not high enough to cover these costs
    [137]. Overall, the choice of the communication technology in smart agriculture
    needs to consider many factors and requirements, such as support for roaming,
    suitability of technology to small-scale, medium-scale, and large-scale deployments,
    geographical location, costs, etc. For example, it has been shown that Sigfox
    and LoRaWAN excel on network capacity, battery lifetime, and cost, whereas NB-IoT
    achieves higher quality of service and lower latency [27]. Finally, while LoRaWAN
    has been considered the most suitable communication network for IoT in smart agriculture
    [16], it is still difficult to tell which technology will dominate the market,
    or if several technologies will coexist, perhaps specializing on different application
    domains. SECTION VII. Conclusion Although the expected transition to smart agriculture
    has already begun, researchers around the world are still looking for new solutions
    to improve agricultural productivity through IoT architectures. Indeed, albeit
    applications in agriculture can benefit from the experience gained in Industry
    4.0, they require specific knowledge regarding sensor management, energy optimization,
    and data processing. LoRa technology is widely adopted, as it allows building
    an autonomous network that meets some of the requirements of the smart agriculture,
    such as low-power and long-range communication. The adoption of LoRa-based systems
    in agriculture results in an effective way to improve the connectivity of farms,
    encourage the deployment of DSSs and consequently improve their management, leading
    the agricultural sector toward smart agriculture. In order to provide a more focused
    and comprehensive view of the applications in the field, in this article, we restricted
    our focus to LoRa/LoRaWAN technology and its uses in the context of smart agriculture.
    We presented many LoRa applications in the field, and we discussed some open issues
    and research areas for future improvements. The main challenges analyzed using
    LoRa Technology in smart agriculture, are: latency on the downlink channel, energy
    management, heterogeneity and interoperability of the devices, data management,
    and scalability. All of these can benefit from the use of machine learning algorithms.
    Indeed, AI and edge computing are still scarcely used but related algorithms and
    technologies are now mature and may be successfully applied in this field. Finally,
    the optimization of multiple GW locations and multihop topologies to extend the
    coverage of LoRa networks have been recently tested to further improve the performance
    and coverage. NOTE Open Access funding provided by ‘Università degli Studi di
    Palermo’ within the CRUI CARE Agreement Authors Figures References Citations Keywords
    Metrics More Like This Internet of Things and Wireless Sensor Networks for Smart
    Agriculture Applications: A Survey IEEE Access Published: 2023 Weighted Connected
    Vertex Cover Based Energy-Efficient Link Monitoring for Wireless Sensor Networks
    Towards Secure Internet of Things IEEE Access Published: 2021 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey on LoRa for Smart Agriculture: Current Trends and Future Perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Diaz F.J.
  - Ahmad A.
  - Viciano-Tudela S.
  - Sendra S.
  - Lloret J.
  citation_count: '0'
  description: The importance of vertical farming is increasing day by day, given
    its numerous benefits including the possibility to cultivate a crop in the minimum
    available space. Similarly, the primary sector also needs technology incorporation
    to ensure sustainability. Therefore, this paper presents the design and deployment
    of a wireless sensor network (WSN) responsible for monitoring the quality of irrigation
    water in terms of salinization for vertical farming. The study presents 2 prototypes
    of salinity sensors, based on a single coil, which can determine the salt levels
    of the liquid in which they are introduced. Both prototypes are tested and compared
    with professional equipment, and then subjected to a validation process. Finally,
    the network traffic generated by such an installation for different numbers of
    nodes is analyzed, and the results show that the bandwidth consumed by a node
    like ESP32 is extremely low, with average bandwidth values of around 700 Bps.
  doi: 10.1109/WINCOM59760.2023.10322887
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 10th International Confe... Wireless
    Sensor Network for Water Salinization Monitoring in Irrigation of Vertical Farming
    Publisher: IEEE Cite This PDF Francisco Javier Diaz; Ali Ahmad; Sandra Viciano-Tudela;
    Sandra Sendra; Jaime Lloret All Authors 35 Full Text Views Abstract Document Sections
    I. Introduction II. Related Work III. Proposed System IV. Materials and Methods
    V. Results Show Full Outline Authors Figures References Keywords Metrics Abstract:
    The importance of vertical farming is increasing day by day, given its numerous
    benefits including the possibility to cultivate a crop in the minimum available
    space. Similarly, the primary sector also needs technology incorporation to ensure
    sustainability. Therefore, this paper presents the design and deployment of a
    wireless sensor network (WSN) responsible for monitoring the quality of irrigation
    water in terms of salinization for vertical farming. The study presents 2 prototypes
    of salinity sensors, based on a single coil, which can determine the salt levels
    of the liquid in which they are introduced. Both prototypes are tested and compared
    with professional equipment, and then subjected to a validation process. Finally,
    the network traffic generated by such an installation for different numbers of
    nodes is analyzed, and the results show that the bandwidth consumed by a node
    like ESP32 is extremely low, with average bandwidth values of around 700 Bps.
    Published in: 2023 10th International Conference on Wireless Networks and Mobile
    Communications (WINCOM) Date of Conference: 26-28 October 2023 Date Added to IEEE
    Xplore: 22 November 2023 ISBN Information: ISSN Information: DOI: 10.1109/WINCOM59760.2023.10322887
    Publisher: IEEE Conference Location: Istanbul, Turkiye SECTION I. Introduction
    New agricultural techniques have been developed in the last century to meet the
    growing demand for food and agricultural products [1]. However, this continuous
    demand puts high pressure on our planet’s limited natural resources. The challenge
    lies in finding ways to meet food needs without depleting the planet’s resources
    [2]. As awareness of the negative effects of agriculture on the environment increases
    [3], it is necessary to develop approaches and techniques that minimize the environmental
    footprint of agriculture. These approaches must be able to meet future food demand
    sustainably [4]. The development of new technologies such as geospatial, Internet
    of Things (IoT), big data analysis, and artificial intelligence (AI) could be
    used to make informed management decisions to increase crop production [5] [6].
    Precision Agriculture (PA) is a management strategy that uses a set of advanced
    information, communication, and data analysis techniques in the decision-making
    process. This allows for the optimization and increased efficiency of agricultural
    inputs and production, thereby reducing losses [7]. Furthermore, the use of remote
    sensing technologies for PA has rapidly increased in recent decades. Remote sensing
    systems, utilizing information and communication technologies, often generate
    a large volume of spectral data with high resolution, necessary for their application
    in PA [8]. Some new data processing technologies such as big data analysis, AI,
    and machine learning (ML) are used to extract useful information from this large
    volume of data [9]. Furthermore, cloud-based computing systems are used to store,
    process, distribute, or utilize this data and apply it to PA [10]. All these advanced
    data acquisition and processing techniques are employed to facilitate the decision-making
    process during monitoring, irrigation management, disease and pest control, nutrient
    application, and yield prediction in crop fields [5] [6]. The main driver of PA
    is Wireless Sensor Networks (WSNs). These networks are based on a network of multiple
    wireless nodes connected to each other, which monitor the physical parameters
    of the environment. Each node consists of a radio transceiver, microcontroller,
    sensors, antenna, and other circuits. All these components allow it to communicate
    with a gateway, which transmits the information collected by the sensors [11]
    measuring physical parameters and sending the collected information to the controller,
    which in turn transmits this information to the cloud or a portable device. The
    agricultural sector has specific requirements based on soil properties, crop nature,
    climate, fertilizers, and water. Sensors control these parameters, and thanks
    to advances in WSN technologies, the size, and cost of the sensors have been significantly
    reduced, making their implementation feasible in many sectors, including agriculture
    [12]. Since the main objective of PA is to generate surpluses by optimizing the
    use of resources such as water, pesticides, and fertilizers, the use of sensors
    allows farmers to quantify the resources needed to sustain crop growth. Water
    scarcity is a serious problem affecting our planet, reducing its levels of surface
    and groundwater. Groundwater resources are subject to increasing pressure, accelerating
    their depletion in terms of quantity and quality. This impact is particularly
    concerning in coastal areas, where socioeconomic and environmental conditions
    exacerbate the situation [13]. In such areas, the salinization of water resources,
    both naturally and due to human activities, is a widespread and alarming phenomenon
    [14]. Due to the growing demand for freshwater for human consumption and agriculture,
    studies on groundwater salinization have been necessary since it exhibits high
    resistance to contamination and has a large storage capacity [15]. Therefore,
    agricultural irrigation poses a potential threat, especially in those areas with
    high evapotranspiration rates and precipitation variability [16]. This irrigation
    increases the amount of water in the soil, which increases the recharge of groundwater
    [17], resulting in negative impacts on its quality. Furthermore, the constant
    extraction of groundwater for irrigation has led to the depletion and deterioration
    of aquifers worldwide [18]. Another associated problem that exacerbates groundwater
    salinization is irrigation during periods of drought. Additionally, the connection
    between aquifers can result in a high-quality aquifer being affected by the drainage
    of water from a saline aquifer, thus deteriorating the quality of the groundwater
    [19]. The goal of this work is to develop a sensor network that allows for the
    establishment of conductivity values associated with the amount of dissolved salt
    in irrigation water. To achieve this, different elutions were studied after adding
    a specific concentration of salt to a soil sample with a certain amount of water.
    The main novelty of this study is the development of a low-cost monitoring sensor
    network that can obtain these values and make a series of decision-making processes
    to evaluate their response and possible actions to save and reuse water. The rest
    of this paper is structured as follows. Section 2 presents some related works.
    The system is detailed in Section 3. Subsequently, Section 4 provides a detailed
    description of the test bench. The results are discussed in Section 5. Finally,
    Section 6 presents the conclusion and future work. SECTION II. Related Work In
    this section, we provide a detailed overview of previous works on PA and sensor
    implementation in relation to irrigation regulation. A recent study by Cobbenhagen
    et al. [20] emphasized the need to use PA to increase crop production per available
    area while significantly reducing the use of resources such as water, pesticides,
    and herbicides to minimize environmental impact and enhance the sustainability
    of the food production chain. In another study, Sanjeevi et al. [21] proposed
    a scalable architecture of WSN using the IoT for monitoring and control in agriculture
    and cultivation in remote areas. Experimental results demonstrated that this approach
    outperformed conventional IoT-based systems, improving performance, latency, signal-to-noise
    ratio, mean square error, and coverage area in precision agriculture and cultivation.
    Similarly, Khan et al. [22] implemented a system to monitor water quality parameters
    and the use of effluent treatment plants using WSN, IoT devices, and a GSM module
    for data transmission. The proposed system collected data from temperature, turbidity,
    and pH sensors through an Arduino Uno R3 microcontroller, which was then sent
    to an IoT-based cloud server. The Water Quality Index (WQI) was calculated, demonstrating
    excellent performance, and compared with the cloud status to ensure accurate water
    quality reporting. More recently, Siregar et al. [23] reported on the types of
    digital technologies used in vertical farming, innovative agricultural relationships,
    the level of development, and the adopted intelligent models, as well as the challenges
    and barriers to leveraging opportunities for implementing smart vertical farming
    systems. The authors identified the use of IoT in vertical farming, including
    sensor technology, monitoring systems, and LED applications, with a focus on soil
    research models (28%), hydroponics (18%), and lighting and irrigation (22%). The
    study highlights the need to explore and implement intelligent models and technologies
    in vertical farming to overcome challenges related to costs and improve sustainability
    and food security. Singh and Sobti [24] discussed the challenges of urbanization
    and the need for advanced solutions in sustainable development. The authors emphasized
    the importance of urban agriculture in smart cities and highlighted its various
    elements. This study also focused on the importance of efficient utilization of
    agricultural resources, particularly irrigation water, and presented a design
    for precision irrigation for field monitoring. The design offered a long-range,
    real-time, and scalable solution for monitoring irrigation requirements based
    on soil and climate conditions, addressing challenges related to sensor node range
    coverage, scalability, data logging, energy, and cost. The use of IoT for soil
    and climate monitoring was also discussed, along with the development of a low-cost
    weather station with long-range soil sensor nodes. Similarly, Siddiqi and Al-Mulla
    [25] investigated variations in sap flow and volumetric water content in date
    palm trees under traditional flood irrigation systems and modern drip irrigation
    systems. They reported the use of soil and plant-based sensors to collect real-time
    data for precision irrigation. According to the authors, the sensors collected
    data on temperature, net solar radiation, vapor pressure deficit, and wind speed,
    and proved effective in determining the actual water use efficiency. Although
    innovative technologies such as IoT, WSN, AI, etc., have been reported to significantly
    contribute to precision agriculture, there is still a need to develop low-cost,
    fast, reliable, and economical solutions. The complexity and implementation challenges
    of the developed technology represent a major obstacle in the field of precision
    agriculture. To the best of our knowledge, only a few studies have been reported
    to address the aforementioned challenges. For example, Sendra et al. [26] addressed
    the problem of salinization in water sources used for irrigation in Mediterranean
    areasThe authors developed a low-cost wireless sensor network based on LoRa that
    monitored the salinity concentration in water sources for smart agriculture. Similar
    findings were reported by Diaz et al. [27], who presented an effective and economical
    sensor model for estimating fertilizer concentration in irrigation water. However,
    these studies did not provide detailed information on sensor accuracy and calibration
    or information on the scalability of the proposed system. Therefore, the present
    study was conducted on the development and application of low-cost sensors in
    the context of vertical farming and sustainable irrigation. SECTION III. Proposed
    System This section presents the complete system. Firstly, an overview of the
    developed system is provided. The sensor designed for measuring irrigation water
    salinity will also be presented. Finally, the irrigation system control algorithm
    will be introduced. A. Overall Description A vertical farming system is an innovative
    technique that aims to maximize food production in limited vertical spaces by
    using stacked structures. Instead of growing plants in open fields, structures
    such as towers or racks equipped with artificial lighting, automated irrigation,
    and environmental control systems are utilized. In some cases, excess irrigation
    water can be reused. However, it is crucial to determine the suitability of this
    water, particularly in terms of the amount of dissolved salts since continuous
    irrigation with unsuitable water can result in crop loss. In our proposal, we
    intend to install conductivity sensors in the different channels where crops are
    grown. Using Arduino-type nodes or similar devices with a wireless interface,
    the data will be sent to a local server, which will decide whether the excess
    water is suitable for reuse in this particular crop or if it should be used for
    other crops, such as tomatoes, which thrive well in saline water. Finally, the
    data will be transmitted to cloud storage for future use, analysis, or applications.
    Fig. 1 provides an overview of the proposed system. Fig. 1. General description
    of the proposed system. Show All Fig. 2. Coils used for monitoring water salinization
    Show All B. Developed sensor for measuring water salinity For the measurement
    of salinity in water, a small solenoid-type coil is developed, which is used together
    with a resistor to form an LR circuit. An LR circuit is an electrical circuit
    that combines a coil or inductor (L) and a resistor (R). These circuits exhibit
    an inductive transient response and a variation in impedance with the frequency
    of the input signal. The principle of operation of this coil is based on the fact
    that when the core of a coil varies, the value of the inductance also changes.
    The change in inductance generates a change in the cutoff frequency of the filter
    created by the LR circuit. This fact implies a change in the gain of the circuit
    itself which will directly affect the signal filtered by the circuit. Therefore,
    the water salinity value is directly related to the value of the signal obtained.
    Such circuits have various applications in electronics and communications, such
    as passive filters, timing circuits, and current stabilization. They are also
    used in fields such as audio engineering, control systems, and power electronics.
    Fig. 2 shows an actual image of the coils, while Table I displays the characteristics
    of the designed coils. These coils are made using enameled copper wire of different
    diameters, similar to the wire used in loudspeaker manufacturing. Finally, the
    windings are coated with transparent lacquer, which provides them with robustness
    and resistance. As a first step, before using the developed prototype, it is necessary
    to determine its maximum resonance frequency. For this purpose, the LR circuit
    is powered with a 6 Vpp sine signal at different frequencies. For the model 1
    coil, a frequency sweep is performed from 0.25 MHz to 4 MHz, while for model 2,
    the frequency sweep is conducted in the range of 3 MHz to 8 MHz. Fig. 3 shows
    the operating frequency for coil 1, while Fig. 4 illustrates the operating frequency
    for coil 2. As observed, the highest amplitude for coil 1 is registered at 2.5
    MHz, while the operating frequency for coil 2 is around 7 MHz. It is worth noting
    that these frequencies are relatively high compared to other prototypes developed
    in previous works. However, the small size of the coils contributes to these high
    frequencies. To use the LR circuit as part of the sensing system, a small signal
    generator board based on the AD9850 integrated circuit [28] capable of generating
    signals up to 40 MHz is required. On the other hand, the output voltage of the
    circuit, directly measured at the resistor terminals, provides a value proportional
    to the amount of salt content in the water. This value is collected using an Arduino
    Mega [29] or a similar node as an analog signal, and we only need to record the
    maximum voltage value. This value is associated with the monitored channel or
    crop and stored in a local database for subsequent decision-making. Finally, we
    need to extract the behavior model of our coils and study their optimal working
    range by comparing the measured results with those obtained from a professional
    conductivity meter. Fig. 5 illustrates how the sensors would be installed inside
    the channels, as well as the circuit connection with the sensor node. TABLE I
    Features of Coils C. Control Algorithm for Sustainable Irrigation Once the sensor
    is developed, an algorithm controls the water salinity levels, assesses the plant’s
    water needs, and determines the appropriate actions based on the recorded values.
    Fig. 6 shows the irrigation control algorithm for the complete system. Initially,
    the system will check each channel to determine whether it needs irrigation. If
    no irrigation is required, the system will wait until the moisture check is performed
    again. If irrigation is necessary, the first step is to verify if the stored excess
    irrigation water in the channel has the appropriate salinity levels. It is important
    to remember that the water can contain dissolved salts from the water itself,
    nutrients, or fertilizers. If the channel needs to be irrigated and the water
    is suitable, the system will recirculate the water for reuse. On the other hand,
    if the water is not suitable, the system will check if it can be used for irrigation
    in other crops such as tomatoes, as some studies indicate that this type of crop
    can thrive in slightly saline water. If the water salinity levels are excessively
    high, it will need to be filtered or used for other purposes. Fig. 3. Working
    frequency for coil 1 Show All Fig. 4. Working frequency for coil 2 Show All Fig.
    5. Sensing system installed in each gutter Show All Fig. 6. Decision-making algorithm
    to determine the use of water Show All TABLE II Features of Samples Used in Test
    Bench SECTION IV. Materials and Methods This section describes, on the one hand,
    the materials used to develop the experimental part to carry out this study. On
    the other hand, it describes the methodology, as well as the protocol that has
    been used for the preparation and acquisition of the data. A. Materials Peat substrate,
    tap water, and NaCl (common salt) have been used to prepare the samples. As for
    the laboratory equipment, a precision scale has been used to weigh the salt and
    substrate. Furthermore, a glass graduated cylinder was used to measure the volume
    of water. Beakers were used for sample collection and homogenization. Filter paper
    and a glass funnel were used for filtration. The resulting liquid to be tested
    was collected using Pasteur pipettes and deposited into glass tubes. Finally,
    a commercial conductivity meter was used for measurements. B. Sample Preparation
    and processing For sample processing, first, 50 mg of the substrate is weighed.
    Then, 50 ml of tap water is measured using a graduated cylinder. The corresponding
    amount of NaCl is added to the water. The NaCl is dissolved in the water. The
    tap water-NaCl solution is poured into a beaker and homogenized with the substrate.
    Next, the soil moisture is measured using an electrode system. The sample is poured
    into a glass funnel containing filter paper for filtration. The samples are left
    to settle for 24 hours. After this time, the filtered water from the sample is
    collected in a test tube for further processing with the commercial conductivity
    meter. It should be noted that a minimum of 5 ml is needed to measure the conductivity
    of the sample, ensuring complete coverage of the electrode. Table II shows the
    prepared standards for the construction of the calibration curve. The substrate’s
    weight and water volume are kept constant for all points. It is worth mentioning
    that three replicates were performed for each of the standards to minimize errors.
    The results have been obtained using a commercial conductivity meter. The results
    were compared with the developed coils, validating the functioning of the coils.
    Regarding the sample processing using the two tested coils, 5 ml of the wash obtained
    through substrate filtration with different salt concentrations is used. The coil
    is completely immersed in the liquid. A power supply is required to establish
    the working frequency, and an oscilloscope is used to obtain the peak-to-peak
    voltage data. SECTION V. Results This section presents the results of the tests
    carried out with both coil prototypes and the validation process of the extracted
    mathematical models. Finally, the network traffic generated in an agricultural
    installation of this nature is shown based on the number of nodes present in the
    network. A. Salinity Sensor Results Fig. 7 shows the salt concentrations in g/1
    on the X-axis plotted against the voltage in mV. The values for coil 1 are represented
    in blue, while the data for coil 2 is shown in orange. It can be observed that
    both coils decrease the voltage as the salt concentration in the irrigation water
    increases. However, it should be noted that coil 2 exhibits more significant differences
    than coil 1. Fig. 8 displays the voltage values (mV) for coil 1 plotted against
    the conductivity (mS/cm). The trend line shows a decrease in conductivity values
    for higher voltages. The R-squared value for coil 1 was 0.6493. Whereas Fig.9
    shows the voltage values (mV) plotted against the conductivity (mS/cm) for coil
    2. Similar to coil 1, the trend line has a negative slope, representinghigher
    voltage values, which correspond tolower conductivity of the samples. Considering
    the obtained data (Figure 8 and Figure 9) and the R-squared values, coil 2 performs
    better than coil 1, with an R-squared value of 0.8329 compared to coil l’s R-squared
    value of 0.6493. B. Sensor Operation Validation Table III presents the samples
    prepared for the system validation. In this case, just like for the calibration
    curve samples, the weight of the substrate and the volume of water is kept constant.
    As observed, coil 2 exhibits the lowest error in estimating water salinity, with
    a maximum error of 10%. C. Network Traffic Based on the Number of Sensor Devices
    Finally, network traffic is measured in terms of consumed bandwidth for different
    numbers of nodes to determine network design parameters. Adafruit Huzzah ESP32
    modules were used for this purpose. Fig. 10 shows the consumed bandwidth for networks
    with different numbers of nodes. As observed, the average consumption of a transmitting
    node is approximately 650-700 Bps when using an IEEE 802.11n connection and considering
    that each node transmits the measured data every 5 seconds. SECTION VI. Conclusions
    and Future Work Precision agriculture, especially vertical farming, is gaining
    momentum due to its potential to reduce the required space for cultivation. However,
    technology incorporation still entails greater room, considering the perspective
    of reducing the use of natural resources. Therefore, this article has presented
    a WSN, designed to monitor the salinity of crop channels in order to analyze and
    determine whether the excess water from irrigation can be reused in the same crop
    or, due to its degradation, should be used in another crop or for other purposes.
    For this purpose, two salinity sensor prototypes based on a single coil have been
    tested. After conducting various tests, it has been determined that coil model
    2 provides quite good results, with an average error of around 5%. Additionally,
    different combinations of nodes have been tested, and the consumed bandwidth has
    been measured to determine the network design. It has been observed that, on average,
    a wireless node like ESP32 has a consumption of approximately 700 Bps when only
    transmitting measured data, indicating that its network occupancy is quite low.
    Despite numerous studies conducted, none of the previous studies have delved into
    the potential in vertical agriculture. Therefore, we explored an economically
    viable, dependable solution that offers heightened accessibility, ongoing monitoring
    capabilities, and a substantial reduction in operational costs for a salinity
    sensor. Considering the limitations of the study, an assessment of the durability
    of the materials employed, which have been covered with lacquer, has not been
    conducted Fig. 7. Output voltage (mV) as a function of the NaCl concentration
    (g/l) for both coils Show All Fig. 8. Conductivity (mS/cm) as a function of voltage
    for coil 1. Show All Fig. 9. Conductivity (mS/cm) as a function of voltage for
    coil 12 Show All Fig. 10. Bandwidth in bps for networks with different numbers
    of wireless nodes. Show All TABLE III Unkonwn Samples For Validation Process As
    for future work, the implementation of AI on a collaborative network is planned
    to automate the process and consider other parameters such as the water source
    and the detection of pesticides and fertilizers in the water. Likewise, the implementation
    of the proposed system should be evaluated for hydroponic and vertical farming
    systems. ACKNOWLEDGMENT This work is partially funded by the Programa Estatal
    de I + D + i Orientada a los Retos de la Sociedad, en el marco del Plan Estatal
    de Investigación Científica y Técnica y de Innovación 2017–2020 project PID2020-114467RR-C33/
    AEI/10.13039/501100011033 and by “Proyectos Estratégicos Orientados a la Transición
    Ecológica y a la Transición Digital” project TED2021-131040B-C31. Authors Figures
    References Keywords Metrics More Like This Design of Wireless Sensor Network (WSN)
    with RF Module for Smart Irrigation System in Large 2018 International Conference
    on Computer Engineering, Network and Intelligent Multimedia (CENIM) Published:
    2018 Provisioning QoS in Wireless Sensor Networks Using a Simple Max-Min Fair
    Bandwidth Allocation 2009 WRI World Congress on Computer Science and Information
    Engineering Published: 2009 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 10th International Conference on Wireless Networks and Mobile
    Communications, WINCOM 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Wireless Sensor Network for Water Salinization Monitoring in Irrigation of
    Vertical Farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Loukatos D.
  - Lygkoura K.A.
  - Maraveas C.
  - Arvanitis K.G.
  citation_count: '11'
  description: The digital transformation of agriculture is a promising necessity
    for tackling the increasing nutritional needs of the population on Earth and the
    degradation of natural resources. Focusing on the “hot” area of natural resource
    preservation, the recent appearance of more efficient and cheaper microcontrollers,
    the advances in low-power and long-range radios, and the availability of accompanying
    software tools are exploited in order to monitor water consumption and to detect
    and report misuse events, with reduced power and network bandwidth requirements.
    Quite often, large quantities of water are wasted for a variety of reasons; from
    broken irrigation pipes to people’s negligence. To tackle this problem, the necessary
    design and implementation details are highlighted for an experimental water usage
    reporting system that exhibits Edge Artificial Intelligence (Edge AI) functionality.
    By combining modern technologies, such as Internet of Things (IoT), Edge Computing
    (EC) and Machine Learning (ML), the deployment of a compact automated detection
    mechanism can be easier than before, while the information that has to travel
    from the edges of the network to the cloud and thus the corresponding energy footprint
    are drastically reduced. In parallel, characteristic implementation challenges
    are discussed, and a first set of corresponding evaluation results is presented.
  doi: 10.3390/s22134874
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 22 Issue 13 10.3390/s22134874 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Sigfredo Fuentes
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 2632 Citations 11 Table of Contents Abstract Introduction Background
    and Design Overview Implementation Details Results and Evaluation Conclusions
    Author Contributions Funding Institutional Review Board Statement Informed Consent
    Statement Data Availability Statement Acknowledgments Conflicts of Interest References
    Altmetric share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle Enriching IoT Modules with Edge AI Functionality to
    Detect Water Misuse Events in a Decentralized Manner by Dimitrios Loukatos *,
    Kalliopi-Agryri Lygkoura , Chrysanthos Maraveas and Konstantinos G. Arvanitis
    Department of Natural Resources Management and Agricultural Engineering, Agricultural
    University of Athens, 75 Iera Odos Str., Botanikos, 11855 Athens, Greece * Author
    to whom correspondence should be addressed. Sensors 2022, 22(13), 4874; https://doi.org/10.3390/s22134874
    Submission received: 10 May 2022 / Revised: 22 June 2022 / Accepted: 27 June 2022
    / Published: 28 June 2022 (This article belongs to the Special Issue APRAS-AI-Empowered
    Self-Adaptive Federation of Platforms for Efficient Economic Collaboration in
    Rural Areas) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract
    The digital transformation of agriculture is a promising necessity for tackling
    the increasing nutritional needs of the population on Earth and the degradation
    of natural resources. Focusing on the “hot” area of natural resource preservation,
    the recent appearance of more efficient and cheaper microcontrollers, the advances
    in low-power and long-range radios, and the availability of accompanying software
    tools are exploited in order to monitor water consumption and to detect and report
    misuse events, with reduced power and network bandwidth requirements. Quite often,
    large quantities of water are wasted for a variety of reasons; from broken irrigation
    pipes to people’s negligence. To tackle this problem, the necessary design and
    implementation details are highlighted for an experimental water usage reporting
    system that exhibits Edge Artificial Intelligence (Edge AI) functionality. By
    combining modern technologies, such as Internet of Things (IoT), Edge Computing
    (EC) and Machine Learning (ML), the deployment of a compact automated detection
    mechanism can be easier than before, while the information that has to travel
    from the edges of the network to the cloud and thus the corresponding energy footprint
    are drastically reduced. In parallel, characteristic implementation challenges
    are discussed, and a first set of corresponding evaluation results is presented.
    Keywords: water resource preservation; Internet of Things; Edge Computing; Machine
    Learning; Edge AI; Smart Sensing; Precision Agriculture; Arduino; Raspberry; Edge
    Impulse 1. Introduction The degradation of natural resources in quality and quantity
    has a direct impact on the global food production numbers. According to FAO [1],
    the agricultural sector should increase its productivity by 60 per cent to counterbalance
    the depletion of natural resources and the population growth on Earth. The utilization
    of innovative technologies seems to be a key factor for addressing these issues.
    In this regard, toward a successful digital transformation of agriculture, it
    is promising that the rapid development of the electronics industry has managed
    to increase the production numbers and the quality of several components, such
    as microcontroller units (MCUs), single board computers, sensors, and radio transceivers,
    at very affordable cost levels. More specifically, the recently appeared new generation
    of microcontrollers, apart from orchestrating typical sensing and acting tasks,
    can support composite operations at reduced execution times, as they have faster
    and more efficient processors and larger memory. In parallel, the advances in
    radio technology deliver low-power modules capable of long-range communication
    at reduced energy levels. These high-end components are not only widely available
    but are also accompanied by very fluent documentation and software tools that
    facilitate their programming, leading to improved implementations. These characteristics
    can lead to a more efficient approach regarding serious problems, such as the
    preservation of natural resources. Nevertheless, any fusion of software and hardware
    elements has first to address potential implementation bottlenecks, prior to the
    delivery of any effective solution. Indeed, as the world will be populated by
    billions of connected devices [2] of limited resources, interacting with the surrounding
    environment and users, the bottleneck will be the increased amount of data traffic
    that could congest the network and generate several latency, reliability and privacy
    problems [3,4]. The deployment of enhanced processing features on Internet of
    Things (IoT) devices, for example Machine Learning (ML), reduces the network congestion
    by allowing computations to be performed close to the data sources, and thus it
    preserves privacy in uploading data, and reduces power consumption for wireless
    transmission to gateways or cloud servers [4]. In this regard, one of the options
    is to run the intelligent algorithms locally on the end devices (e.g., on the
    sensor nodes hardware). If the tasks are performed by smaller devices, less power
    will be required to keep them running and more flexible energy management will
    be applied, compared with the typical central system case. Small devices can operate
    on batteries for months or even for years, while a diverse set of energy harvesting
    options is offered for elongated operation duration. Thankfully, the recent technological
    advances delivered end devices with improved hardware characteristics (i.e., processing
    capabilities and memory size), thus making it possible for these devices to execute
    machine learning algorithms in an efficient and cost-effective manner. Not only
    do the microcontrollers become better performing, but the application of machine
    learning techniques on them, such as the artificial neural networks (ANNs), have
    also become more efficient, due to the improvement of the corresponding software
    platforms and tools. In greater detail, the execution/utilization phase of an
    ANN requires less computational power than its training phase. In fact, during
    the training, a large amount of data is used to calculate the weights and biases
    of the network, and thus a quite powerful machine is needed. Once the learning
    has been completed and the network has been trained, the model can be used for
    inference actions with lower computational requirements [4]. Consequently, the
    AI algorithms can more likely be run on devices with less resources, as microcontrollers,
    allowing local data processing. Nevertheless, as the trained models may still
    remain comparatively heavy for the in situ MCUs, tools such as TensorFlow Lite
    [5], in the context of TinyML [6], make possible the creation of trimmed-down
    versions that can be fit safely in the improved generation of MCUs, but still
    of limited computational and memory capacity. Finally, the improved transmission
    range characteristics of the low power wide area network (LPWAN) technologies,
    such as LoRa, perfectly fit to the reduced network traffic profiles [7]. The balanced
    utilization of the discussed technological innovations can deliver applications
    that can be very helpful for solving real-world problems, e.g., the preservation
    of water resources. Water is one of the most critical resources on the Earth as,
    apart from humans, both plants and animals depend on it, while many processes
    from irrigation to washing or food preparation, cannot be accomplished without
    it. Despite its necessity, large amounts of water are being wasted due to a variety
    of reasons, from water pipe or valve failures to human inattention. It is noteworthy
    that according to the World Bank [8], the non-revenue water (NRW) level in developing
    countries ranges from 40% to 50% of the water pumped into the distribution systems.
    Furthermore, 80 per cent of wastewater in the world flows back into the ecosystem
    without being treated or reused, and 70 per cent of the world’s natural wetland
    extent has been lost [9]. Sustainable Development Goal 6 (SDG 6) [9] on water
    and sanitation, adopted by United Nations (UN) Member States as part of the 2030
    Agenda for Sustainable Development [10], highlights in practice the importance
    of the proper water resource management, from both quantitative and qualitative
    perspective. As agriculture remains the largest consumer of water globally, the
    significance of water for keeping the food produce to satisfactory levels is crucial.
    Targeted at the preservation of water resources with emphasis on their impact
    on agriculture, in this work, the pilot implementation of a smart water usage
    alerting system is presented. The whole approach exploits the findings of the
    approach described in [11] toward the delivery of a more compact and efficient
    solution with artificial intelligence (AI) capabilities. The latter task is addressed
    by utilizing recently-appeared, cost effective but powerful microcontroller boards
    and software, for supporting the in situ machine learning operations, and a low-power
    and long-range radio network technology based on the LoRa protocol. The combination
    of these elements results in reduced power consumption and in less network traffic
    and processing load for the central entities of the network, as the water usage
    classification decisions are taken locally, at the edges of the network, and only
    notification messages have to travel toward the end user. Response times are also
    reduced, while privacy is better preserved. The water usage episodes that the
    smart system had been trained to intercept were of comparatively short duration,
    but the methods being used and the accuracy being achieved make the proposed arrangements,
    only with minor modifications, to be applicable for supporting a wide variety
    of water preservation/misuse detection scenarios. Apart from this introductory
    section, in order to better highlight the main objectives of this research, the
    rest of this paper is organized as follows: Section 2 highlights the motives and
    the challenges behind this work and the design directions being necessary. Section
    3 provides interesting implementation details. Section 4 is dedicated to evaluation
    results and discussion. Finally, Section 5 contains important concluding remarks.
    2. Background and Design Overview 2.1. Motives and Challenges for Agriculture
    Internet of things (IoT) is an emerging technology that includes devices connected
    to the Internet equipped with sensors, transducers, radio transceivers, and actuators
    comprising a functioning of the whole that gathers, interchanges and responds
    to information [12]. In this regard, the IoT makes agricultural automation more
    efficient, and thus fosters production [13]. Recent works emphasize the contribution
    of the IoT technologies in critical agricultural operations [14,15], including
    precision farming, livestock, and greenhouses, with the irrigation and water management
    activities to be of among the open issues of growing interest [16]. Machine Learning
    (ML) is a very welcome companion for any IoT solution and provides multiple solutions
    to problems that were among the most difficult to be tacked without, some years
    ago. The exploitation of the ML potential by agriculture is a necessity that follows
    several directions [17], even beyond Agriculture 4.0 [18]. The most significant
    advantage of machine learning techniques is that they can provide generally applicable
    solutions, with minor human intervention and in a way that does not require meticulous
    a priori knowledge of the idiosyncracies of the system the solution is being tailored
    for. This makes satisfactorily-working solutions to be generated easily and quickly
    by people with less expertise in a specific area. Apparently, the role of the
    “experts” of the sector cannot be overlooked, but their involvement into the whole
    process remains consulting and supervising, as they do not have to inject “magic”
    threshold values into conventional and difficult to maintain blocks of code. The
    Edge Computing (EC) is a newcomer to the equation of tackling modern problems
    more efficiently using IoT and ML. Indeed, a traditional IoT solution (a few years
    ago) typically required a large amount of real-time sensor data to be destined
    to a central computer entity in the cloud which in its turn had to process this
    increased amount of data, to take the necessary decisions and probably had to
    deliver the corresponding responses back to the appropriate nodes. This organization
    had to tackle high communication and processing loads, while any potential failure
    of the central entity would result in total system collapse. Furthermore, data
    privacy concerns were also very reasonable, as third-party communication, storage
    and/or decision entities had to get involved in the whole process. On the contrary,
    by increasing the intelligence at the edges of the network (i.e., on or nearby
    the sensor nodes), decisions and any potential action are addressed locally, in
    a faster, cheaper and more private way, thus leaving considerably less (or none
    at all) work for the central entity [4,19]. Typically, only sporadic metadata
    information updates are necessary toward the central entity, mainly for supervision
    purposes. The enrichment of IoT with Edge Computing and Machine Learning functionality
    is often referred as Edge Artificial Intelligence (Edge AI) and tries to exploit
    the advantages of these technologies, for serving a wide set of applications in
    a better manner, with the agricultural sector not to be an exception [20]. In
    this regard, the approach being presented is trying to highlight how these elements
    of innovation can be combined to ease the intense problem of water resource waste.
    Demographics continue changing and unsustainable economic practices are affecting
    the quantity and quality of the water being available, thus making it an increasingly
    scarce and expensive resource [9]. Inevitably, water is at the core of sustainable
    development and is closely linked to poverty reduction and climate change. As
    agriculture remains the largest consumer of water globally and irrigation is responsible
    for 70% of its use worldwide, water is the most valuable resource for keeping
    the quality and the quantity of plant and animal production to satisfactory levels.
    The way water is utilized for both urban and rural use directly impacts its future
    availability and thus, emphasis must be placed on water management and irrigation
    efficiency and make sure clean water can be provided for all people. Apart from
    the more conventional bare IoT solutions for water resource management and utilization,
    mainly with focus on agriculture, there is a growing interest for the exploitation
    of ML in order to achieve better results [21,22,23,24]. The fusion with Edge AI
    functionality has yet a lot to offer. The potential exploitation of modern microcontrollers
    for water usage related applications with embedded ML functionality has already
    started delivering interesting outcomes [25], in neighboring scientific areas,
    with the selection of devices and functions for communication between sensor appliances
    to remain a key challenge [26] for success. On the other hand, recent studies
    show that farmers are still facing concerns for adopting the IoT technologies
    in their everyday activities. This skepticism is attributed to a variety of reasons,
    from privacy concerns due the cloud-based nature of many solutions to fears for
    job cuts and for high purchase and maintenance costs [27,28], while it is really
    hard to find experts having the necessary set of talents at a satisfactory degree
    and being available for fluent cooperation, at the same time. Furthermore, while
    the machine learning methods seem to provide accurate and less expensive solutions
    [23] for water misuse detection events such as leaks, there is enough room for
    further improvements. Indeed, due to the very recent character of the innovative
    hardware and software components supporting in situ (i.e., on-device node) machine
    learning techniques, in the agricultural sector for water utilization report/classification
    purposes, few works combine these assets toward the delivery of a cost effective
    and efficient solution with Edge AI characteristics. There are research contributions
    that exploit IoT infrastructures for water monitoring purposes, but without incorporating
    AI functionality [29] or there are contributions that exploit machine learning
    methods that either require central processing of the data being collected [30,31]
    or that they are not optimized to be executed by the new low-cost and high-efficiency
    microcontrollers [32]. These remarks are in line with recent review findings in
    agriculture [24] and reflect a problem already specified in the wider IoT area
    [4,33]. Trying to bridge this gap, the proposed solution indicates that, for water
    usage characterization/report delivery, a quite accurate model can now be trained,
    using flexible tools, be executed on the end device and communicate its classification
    reports using almost negligible power and bandwidth resources. Combining decentralized
    intelligence and low-cost design, provision is made for reduced to null amount
    of information to travel toward the cloud. These arrangements are addressing data
    privacy and reliability issues as well. 2.2. Functionality Overview and Component
    Selection This section reports briefly on the components being selected as well
    as on their role, in order to develop a system capable of intercepting and characterizing
    water usage events. This system includes sensor nodes, placed in situ, at the
    edge points where the water is actually being used, as well as the suitable sink/gateway
    node(s) able to collect the reports delivered by the aforementioned peripheral
    nodes. The “key” point of the approach being presented is that the edge (sensor)
    nodes, apart from collecting time series corresponding to events containing the
    instantaneous water consumption data, are “smart” enough to classify these events
    into categories of proper or improper use of water, without assistance from external
    entities. Thus, via this “filtering”, only the classification reports have to
    travel toward the gateway and the cloud (if the latter is necessary). The analytical
    (low quality and high volume) information of the instantaneous water consumption
    might flood the network infrastructures and exhaust the batteries of the edge
    nodes. The user can easily monitor the operation of the whole system via their
    portable equipment (e.g., their tablet, smart phone, or laptop) using conventional
    connectivity options (e.g., Wi-Fi or 3G/4G), either locally or remotely (e.g.,
    via a virtual private networking (VPN) service). The proposed architecture is
    depicted in Figure 1. Figure 1. Functionality overview of the proposed water usage
    event characterization solution. The proposed implementation exploited the experience
    gained during the activities described in [11] with the excellent Arduino Nano
    33 BLE Sense [34] microcontroller that offers plenty of sensors and connectivity
    options, but utilized an even newer generation of cheaper microcontroller modules
    that were able to host and to execute composite machine learning algorithms, at
    the same price levels with the “traditional” units. For this reason, the Raspberry
    Pi Pico [35] microcontroller board (that costs about 6€) was selected, which,
    apart from its very attractive price, has fluent processing power and memory (due
    to its new RP2040 chip). More specifically, the Raspberry Pi Pico unit, grace
    at its new RP2040 chip, has fluent processing power and memory, that allows for
    larger and faster program execution compared to the typical Arduino Uno [36] standard,
    as it exhibits 64 times more flash memory (i.e., program memory), 128 times more
    random access memory (RAM) and a much faster dual-core processor. Consequently,
    the Raspberry Pi Pico board was able to support, apart from the basic water consumption
    metering process, the necessary machine learning functionality to invoke the corresponding
    water usage alert message generation. For the final deployment, the absence of
    a radio interface on the Raspberry Pi Pico unit was counterbalanced by the adoption
    of a cost effective microcontroller board, running at 8 MHz and equipped with
    a LoRa radio, namely a LoRa32u4 unit [37]. For programming both systems, the preferred
    option was the well-supported Arduino IDE [38] environment. During the implementation
    and testing stages, an ESP8266 based module [39], namely an ESP-01 unit, offering
    Wi-Fi connectivity, was utilized. The water flow meter device is a Hall-effect
    counter sensor (YF-S201 [40] model), which can detect the flow changes as the
    water passes through it and the rotor rolls. Furthermore, the MIT App Inventor
    cloud-based programming environment [41] was selected for the easy creation of
    a mobile application for inspecting the water usage activity, via the smart phone/tablet
    device of the user. To add machine learning functionality, it was necessary to
    prepare and incorporate a trained artificial neural network (ANN) model into the
    software running on the Raspberry Pi Pico. An artificial neural network is based
    on the operation of neurons in the human brain. This structure has one input layer,
    one or more hidden layers, being interconnected, and an output layer for delivering
    the results. A very simple and efficient manner to prepare (i.e., to train and
    to extract/compile) a suitable ANN model was the Edge Impulse [42] cloud environment.
    The latter processing environment incorporates the functionality of the TensorFlow
    Lite engine for training neural networks. More specifically, it is equipped with
    fluent graphical interface and network connectivity options for importing sensor
    data, designing the ANN model, applying assistive processing blocks, for creating,
    testing and deploying the final version of it. Finally, the coefficients describing
    the ANN are stored in the memory of the Raspberry Pi Pico microcontroller, and
    thus the AI algorithm can be executed on a device with comparatively low but enough
    capacity, in terms of processing power and RAM. The Edge Impulse platform, from
    February of 2022, provides full support from the Raspberry Pi Pico board. The
    gateway node, gathers the classification decision information from the peripheral
    (edge) sensor nodes, stores and makes it available for the end device (e.g., smart
    phone, tablet or laptop) of the user, via common network services installed on
    it, or posts the information to the cloud, for better visualization and post-processing.
    Details referred to the latter choice are beyond the scope of this research work.
    3. Implementation Details In accordance with the design and functionality directions
    provided in Section 2.2, Section 3 is dedicated in presenting characteristic details
    of the implementation process. The analytic steps being followed for the training
    are illustrated in Figure 2. Figure 2. The analytic steps being necessary for
    the training of the proposed water usage event characterization solution. More
    specifically, the basic water flow sensing unit connection and programming arrangements
    are highlighted, in order to gather efficient data for training the ANN model
    (step 1), and thus, to add machine learning capabilities to the whole system.
    The details for this training are also explained (steps 2 and 3), as well as the
    incorporation of the trained ANN model into the microcontroller of the flow-metering
    system (step 4) for enhancing its functionality. In parallel, the corresponding
    network node(s) arrangements are discussed, as well as the characteristics of
    a pairing end-user mobile application, for the delivery of a fluently working
    solution. 3.1. Initial Sensor Node Preparation The Raspberry Pi Pico is a 3.3
    V level unit, for this reason, the flow sensor was connected to its 3.3 V supply
    pin, in order to generate 3.3 V logic compatible pulse signals to its output.
    The 3.3 V level was adequate for the operation of the specific flow metering device
    being selected. Furthermore, the output of the latter sensor was connected with
    an interrupt (input) digital pin of the microcontroller, and the ground pins of
    both components were also wired together. The sensor was connected to a testing
    tap via a pipe, and thus, it could be exposed to a variety of water consumption
    scenarios potentially being invoked by human, according to empirical assumptions.
    The Arduino IDE environment was customized properly by downloading and installing
    the necessary libraries corresponding to the Raspberry Pi Pico, according to the
    instructions of the its official page, for facilitating the programming process
    of the microcontroller, via a computer through a USB port connection. The pulses
    that the flow sensor was generating correspond to the rotations of its blades
    and thus to the water flow passing through it. More specifically, according to
    the basic algorithm, as the flow sensor signal generated a pulse signal any time
    2.22 mL water quantity, approximately, passed through it, the Raspberry Pi Pico
    intercepted these pulses as interrupt triggers to be counted and, in turn, calculated
    an one-second average value corresponding to the water flow (in mL). The sequence
    of these flow values was output to the serial port of the microcontroller. After
    compiling the program (sketch) and uploading it to the Raspberry Pi Pico board,
    the sequence of the flow measurements was acquired via the USB cable. The latter
    measurements were fed into the machine learning platform, in order to train the
    suitable ANN model, as the Edge Impulse environment offers options for automated
    uploading of the values being measured. 3.2. Training the Neural Network The corresponding
    ANN model to be generated had to be simple and lightweight enough for the microcontroller’s
    potential but still precise enough. In this regard, the system was trained to
    recognize three characteristic kinds of water utilization profiles: the Normal
    Use or NU, Water Leak or WL and Water Waste or WW. The proper training of an ANN
    requires data series corresponding to each of these categories to be collected
    and to be uploaded to the Edge Impulse engine. The total data length was 5 h 55
    min 47 s (148 files) for all three cases. According to Edge Impulse platform requirements,
    the duration of the data length had to be approximately the same for all categories,
    in order for the final model to be more accurate. Nevertheless, the number of
    profiles for each case may differ (NU: 69, WL: 44, WW: 44 profiles). During the
    profile collection process, the lowest flow value that the flow sensor could record
    was about 10–15 mL/s, while the maximum flow being recorded was in the range between
    250 and 280 mL/s. The network was trained using empirical data based on human
    observations for classifying samples (water usage episodes) into categories. In
    general, NU profiles were created so as to contain low to moderate flow values
    and having duration below 180 s, making the training pattern hypothesis that a
    non-WL water usage scenario would last for 3 min at maximum. Similarly, it was
    assumed that WL profiles exhibited continuous flow duration of more than 180 s
    and that most WW profiles had flow consumption over 160 mL/s and duration of more
    than 160 s, as it would be more likable for the classification experiment, during
    the episodes to use water for shorter time and at lower flow rate. Some typical
    profiles for each category are given in Figure 3, where the water flow was measured
    in ml/s and the time was measured in seconds (s). For each category, there is
    a diversification among the profiles being recorded and fed to the training system.
    This diversification results in increased accuracy under real-world conditions.
    Figure 3. (a,b) Normal Use profiles; (c,d) Water Leak profiles; (e,f) Water Waste
    profiles. In the next stage, the water flow data (raw data) were uploaded to the
    Edge Impulse cloud platform, via the Data Acquisition menu category, and were
    split into training and testing data, automatically, while the data labelling
    was performed manually. For training of the ANN model, the window size was set
    at 200,000 ms (i.e., 200 s), according to the profiles that were fed into the
    training system and by taking into consideration the maximum time that a person
    might use the tap. Similarly, the window increase was set at 1000 ms (i.e., at
    1 s) and the frequency at 1 Hz (i.e., for 1 sps sampling rate). Furthermore, “Raw
    Data” was selected as the preferred processing block and “Classification (Keras)”
    as the ANN learning block. The option “Raw Data” means that no additional prepossessing
    was made (e.g., a spectral characteristics extraction) before using the original
    data for the training process. This option does not reduce the number of features
    to be fed to the input layer of the network, but also preserves as many characteristics
    of the initial data as possible and, as it is explained right below, it fits easily
    in the microcontroller being selected. Furthermore, the number of training cycles
    was set to the moderate value of 50, to avoid overfitting, and the learning rate
    at 0.0005, via the NN Classifier configuration section, as the Edge Impulse suggests.
    The final neural network structure has an input layer with 200 features (window
    size), two hidden layers, with the first one to have 20 neurons and the second
    one 10 neurons, and an output layer with 3 classes (NU, WL, WW). This architecture
    for the NN provided an optimal combination between performance and computer resource
    allocation (i.e., model accuracy versus time needed for a decision to be made
    and memory size needed for hosting the program in the flash and for executing
    it in RAM). For the specific model, in the quantized version, the RAM usage was
    1.9 KB and the flash memory usage was 22.5 KB, values that are far below the capacity
    limit of the Raspberry Pi Pico unit. It must be noted though that during the actual
    operation of the microcontroller, more memory will be needed as along with the
    NN model coexist several variables and code parts dedicated to other tasks. The
    Edge Impulse platform allows for easy experimentation with various candidate settings
    and for saving the model with the best performance after the end of the training
    process. Finally, there is the option to download the model from the Edge Impulse
    cloud platform, via the “Deployment” section of Edge Impulse menu category, as
    code that includes library and sketches to be compiled and uploaded to the microcontroller
    via the Arduino IDE environment. 3.3. Sensor Node Software Enhancement As explained
    in Section 3.2, the code generated by the Edge Impulse platform, in the form of
    a generic Arduino library, provides customizable examples (sketches) for the Arduino
    environment, with the Raspberry Pi Pico board to be among the models being supported,
    and thus, being compatible with the generated model parameters. The selection
    of the “Arduino library” option (instead of the tailored firmware output one)
    provides freedom to combine the machine learning engine with further algorithmic
    behaviors being necessary to be executed by the hosting microcontroller. In this
    regard, the final software running on the microcontroller had to be updated so
    as to be able to perform (almost simultaneously) some simple but sharp calculations/tasks
    of different time granularity: Intercept the interrupt signals corresponding to
    the rotor roll pulses of the water flow sensor module; Calculate the instantaneous
    water consumption, at a fixed and specific rate, typically 1 or 2 times per second,
    update the aggregate metrics, and trigger the classification process every time
    the predefined number of samples (i.e., 200) was gathered; Deliver system status
    data and water usage reports via USB to the hosting computer, or wirelessly to
    a gateway node or to the operator’s smart phone/tablet; As expected, the above
    tasks had to be performed without blocking or delaying each other, constraints
    that required meticulous programming (e.g., using timer events) to achieve fluent
    operation. Optimally, the delivery of information toward the gateway had to take
    place once, after the end of each classification process utilizing the 200 consecutive
    samples. Nevertheless, for debugging or training purposes, all 200 values had
    to be transmitted toward the gateway node. Communication with the LoRa32u4 radio
    module was achieved through the serial TTL level port of the microcontroller.
    3.4. Gateway Node and User-End Software For the reception (and the inspection)
    of the remote alerts through Wi-Fi, an android smart phone or a tablet device,
    which most modern people are familiar with, was a satisfactory solution. The MIT
    App Inventor environment was utilized in order to deploy a simple monitoring application.
    The necessary programming was completed using visual blocks, based on the information
    provided in [43,44]. The initial deployment involved direct connection between
    the smart water sensor node and the end user equipment (e.g., a tablet device),
    typically through a Wi-Fi connection link. This solution is not optimal if multiple
    sensors units exist and deliver water usage reports in parallel. Furthermore,
    the latter sensors may be placed at comparatively long distances from the user.
    These facts made necessary the development of a gateway/sink node to gather the
    corresponding data and the migration to LoRa radio links. For implementing the
    latter gateway node, a Raspberry Pi 3 Model A+ had been selected [45], due to
    its reduced size and energy footprint and its fluent programming and interfacing
    options. The Raspberry Pi Model 3 A+ unit allows for fast implementation of code
    that intercepts the data reports from the peripheral smart sensor nodes, storing
    them into files or a simple database, and making them available via the proper
    TCP/IP based service. This request could be either asynchronous or periodic (i.e.,
    generated by a proper application running on the user’s mobile phone). These tasks
    are served using python and Linux shell scripts, inter process communication (IPC)
    techniques exploiting IP sockets, and the activation of preexisting applications
    such as the Apache web server, the SSH server and/or a Virtual Private Networking
    (VPN) service. Furthermore, the gateway node, properly combined with VPN networking
    techniques, assured monitoring functions from distant locations, based on the
    availability of Wide Area Network (WAN) wired or wireless technologies (i.e.,
    3G/4G, DSL, etc.). 3.5. Summary of IoT Deployment Steps The Edge AI tasks had
    to be performed fluently, while deployment in open-field environments using long-range
    radios, such as LoRa, was an important priority. The final functionality being
    implemented can be summarized in the following steps/cases: Use a Wi-Fi radio
    transceiver (e.g., an ESP-01 module), attached to the sensor node, to provide
    communication between the sensor node and the user’s smart phone/tablet, for testing
    purposes, during the initial deployment; Use a Raspberry Pi Model 3 A+ and a LoRa
    radio module as a LoRa gateway/web server, in conjunction with the LoRa radio
    transceiver modules being attached to the (preferably more than one) smart sensor
    nodes; Increase user-friendliness by adding services using the Raspberry Pi Model
    3 A+ unit of the gateway node and well-known web-based applications. Case 1 was
    suitable for verifying the basic wireless connectivity potential of the sensor
    node via the tablet/smart phone device of the user, being nearby the sensor. This
    arrangement made easy for the user to inspect the status of the water activity
    characterization system for one smart sensor and from short distances. The need
    to have a more complete on-demand view of the status of more than one water use
    points, at increased distance, was favoring the adoption of a local gateway node
    facilitating the whole monitoring process, as explained in case 2. The sensor
    nodes were sending water usage notifications toward this local gateway, over LoRa.
    It must be noted though that the TCP/IP technology, as a solution for the delivery
    of data (i.e., the sporadic metadata) from the sensors to the gateway, is not
    optimal, in terms of energy consumption, complexity and range coverage. Indeed,
    in a typical application scenario, the distance between the sensor nodes and the
    gateway node is limited to a hundred meters, approximately. If willing to extend
    this distance to the kilometer range or beyond, without special and expensive
    equipment, transceivers utilizing technologies such as LoRa are more suitable.
    In case of the LoRa solution, the LoRa32u4 board, as a transceiver, was the optimal
    selection for both the sensor and gateway nodes, due to its low cost and its easy
    programming. The RadioHead software package [46] is a very efficient library that
    supports several critical LoRa protocol functions, and thus, it was adopted for
    adjusting the LoRa32u4 modules. These modules were programmed easily via the Arduino
    IDE environment. Consequently, the microcontroller of each sensor node was connected
    (typically via its hardware serial TTL interface) with a LoRa32u4 board in order
    to relay the water usage information from the machine learning engine toward the
    gateway node. A Lora32u4 board was also connected via USB with the Raspberry Pi
    3 Model A+ unit implementing the gateway functions. The necessary code was written
    in python to bridge the serial port of the LoRa32u4 board with an IP socket service
    running on the gateway node. Characteristic deployment arrangements are depicted
    in Figure 4a,b. More specifically, Figure 4a depicts the smart water sensor node
    implementation using a Raspberry Pi Pico unit and a LoRa radio, while in Figure
    4b the gateway/sink node implementation is depicted using a Raspberry Pi 3 Model
    A+ and a LoRa radio. The information exchanged between the LoRa radios was packetized
    and encrypted using the RadioHead library and the Arduino Cryptography Library
    [47], in order to hide the sensitive data from non-authorized users. Figure 4.
    (a) Smart water sensor node deployment using Raspberry Pi Pico and LoRa radio;
    (b) Gateway/sink node implementation using Raspberry Pi 3 Model A+ and LoRa radio.
    Initial experiments were performed using USB powering via the hosting computer
    and/or power banks. Later updates included LiPo or Li-ion batteries, mainly of
    18650 type which are cheap and robust, as well as small photovoltaic panels (e.g.,
    2 W units). It must be noted though that the absence of a permanent power supply
    source nearby is not always the rule, and thus the operation of the alerting system
    was facilitated. 4. Results and Evaluation This work is putting emphasis on intercepting
    water usage events and on characterizing them properly. Via fluently-working machine
    learning techniques, applied at the edges of the network, the amount of information
    that needs to travel from the peripheral nodes to the central node and the cloud
    is minimized. This fact signifies reduced communication load and energy consumption,
    and better autonomy and privacy. The adoption of simple, long-range and low-energy
    radios facilitates the whole process. Relevant details are given into the following
    Section 4.1, Section 4.2, Section 4.3 and Section 4.4. 4.1. Testing the Acuracy
    of the Model For classification evaluation algorithms, accuracy is the most frequently
    used indicator, and it is defined as the proportion of the correctly classified
    samples to the total number of samples. After the training process, based on the
    testing data, the system generated the right outcome for the NU category with
    77.8% accuracy. Similarly, for the WW and WL categories, 100% success was achieved,
    according to Edge Impulse cloud environment. These performance results made the
    final model to have a 98.5% expected accuracy, using the testing data set, in
    the Quantized (int8) version. At next stage, actual water consumption episodes
    of known type (i.e., NU, WW or WL) had to be invoked, by rotating the tap head
    properly, thus letting the proposed machine learning engine to perform classification
    according to the flow data being collected (i.e., in chunks of 200 consecutive
    values). The corresponding results were recorded. Figure 5 depicts the proposed
    sensor node connected in-line with a water tap. This process was matching the
    steps being followed during the training stage of the system. Figure 5. The proposed
    sensor node connected in-line with a water tap. It must be noted that the in-parallel
    visual inspection of the ongoing process was drastically facilitating the experiments.
    More specifically, further arrangements were made in order for the whole sequence
    of the analytical flow readings to arrive to the smart phone/tablet device, using
    a modified version of the application created for the end user (as presented in
    Section 3.4). This application variant provided detailed real-time graphs (into
    the form of histograms) reflecting the instantaneous water consumption during
    each episode, for direct comparison and adjustments. Figure 6a–f illustrate indicative
    smart phone screenshots reflecting typical water usage characterization decisions
    during the actual testing process, corresponding to the NU, WL and WW categories,
    respectively. Figure 6. (a–f) Indicative smart phone screenshots during the in
    situ testing process, reflecting typical water usage characterization decisions
    for the categories NU, WL and WW, respectively. The combination of the trained
    ANN model implementation with simple more conventional programming techniques
    was improving the accuracy and the response times of the system being presented.
    For instance, the in situ module logic was modified so as to ignore the zero-flow
    events, as an episode (i.e., event) started being recorded only after the arrival
    of the first non-zero flow value. Table 1 contains the confusion matrix that corresponds
    to the testing of the real system, after classifying 100 water consumption episodes.
    The processing of the data being collected revealed that the actual accuracy was
    91% (i.e., 91 over 100 samples were classified correctly), after testing the model
    with user-generated water consumption profiles, using the proposed smart flow
    metering system. It is important to mention that the model could clearly recognise
    the undesirable WL profiles, achieving accuracy values reaching 100%. On the other
    hand, there were some incorrect predictions, where the neural model was classifying
    an actual WW scenario as NU or WL (with percentages 5.1% and 7.7%, respectively).
    In fewer cases, the model was classifying an NU as WW or WL (with percentages
    equal to 2.8%). These failures can be attributed to the fact that there was a
    small area where the borders of those categories were overlapped, thus confusing
    the neural network classifier. An additional 0.4 certainty threshold was programmed
    on the microcontroller for more reliable characterizations. This performance is
    close to the one expected according to the testing of the model. The overall performance
    is lower than the one achieved by other machine learning approaches [23] using
    more composite systems, but remains high and can be easily achieved by the proposed
    low-cost equipment. The accuracy can be further improved by using more extensive
    training and samples. Table 1. The confusion matrix corresponding to the trained
    neural network model, created by classifying 100 water consumption episodes, of
    specific (and known) type each. 4.2. Networking and Power Consumption Issues According
    to the specifications of the experimental system being presented, although 200
    consecutive samples had to be recorded before a classification decision to be
    make, this decision was taken locally, and thus only the (final) characterization
    message had to travel toward the gateway (and to the end user) instead of 200
    messages containing the corresponding analytical flow values. The packet payload
    information needed to travel from the peripheral sensor nodes toward the gateway
    node did not exceed 10 bytes in binary format, thus resulting in a bellow 50-byte
    description per episode in textual format, in the final log files on the Raspberry
    Pi Model 3 A+ unit of the gateway. The size requirements of the analytical data
    would be roughly 200 times higher. In addition to that, the cost for performing
    the classification at the central node was not necessary any more. Figure 7 provides
    indicative details of the water flow episode/event specific information as stored
    into the log files on the Raspberry Pi Model 3 A+ unit implementing the gateway
    node functionality. These files were directly available through the Apache web
    server and typically contained an arrival timestamp, node address, episode type
    (i.e., NU/WW/WL), flow value per each sample into a specific episode (in debug
    mode only), total water consumption per episode, as well as sensor battery voltage
    and RSSI indicator. Figure 7. Characteristic details of the water flow episode/event
    specific information as stored into the log files on the Raspberry Pi Model 3
    A+ unit implementing the gateway node. Some stability problems were experienced
    when using the highest baud rate (i.e., the 115,200 bps value) between the Raspberry
    Pi Pico and the LoRa32u4 module. For this reason the data rate was set to the
    “safe” 38,400 bps value. The techniques being followed for testing the effective
    communication range of the proposed system were utilizing the methods presented
    in [7,48]. The gateway node, apart from the water flow specific information, for
    each node, was collecting assistive data, such as sensor battery status and received
    signal strength indicator (RSSI). The latter information was collected for sensor
    nodes being at various distances from the gateway node, for both Wi-Fi and LoRa
    radio cases. The left part of Figure 8 depicts a LoRa radio transceiver during
    the in situ radio coverage experiments. According to results being gathered, by
    using ESP-01 Wi-Fi transceivers, the maximum range coverage was at about 100 m,
    while by using LoRa modules with custom wire antennas the communication distance
    was extended to 300 m in free space. By using standard but still cheap antennas,
    the LoRa link scenario was easily achieving communication coverage of above 1
    km. These results are justified by the fact that the receiver sensitivity limit
    for nodes equipped with Wi-Fi radios was around −90 dBm, while for the LoRa, the
    sensitivity being achieved was reaching the −130 dBm level. Figure 8. Experiments
    for testing the range coverage (left) and the energy consumption (right) of the
    prototype sensor nodes. In order to better capture and study the short-scale dynamics
    of the smart sensor modes, a measuring circuit was built, according to the directions
    provided in [49]. More specifically, an Arduino Uno board was utilized to calculate
    the voltage drops over a resistor of known value, connected in series with the
    load of interest (i.e., the smart water sensor node); the right part of Figure
    8 depicts the corresponding experimental setup. The actual measuring process was
    performed via a separate ADC module (namely an ADS1015 unit) capable of true differential
    measurements, of satisfactory resolution (i.e., of 12 bits) and of adjustable
    gain. The communication of this module with the hosting Arduino board was completed
    using an I2C interface. The presence of the Arduino Uno unit allowed for the additional
    processing of data and quick graphical inspection. Consequently, for the system
    under testing, amperage consumption traces could be easily captured, at a typical
    time resolution of 100 sps and at an approximate amperage resolution of 1 mA,
    via the Serial Monitor or the Serial Plotter component of the Arduino IDE environment.
    By using the specific measuring setup, several results were collected. The behavior
    of the sensor nodes was on the focus of this study, as, typically, the gateway
    node was considered of having fixed power supply and its consumption was around
    250 mA. More specifically, the consumption of a bare node, equipped only with
    a Raspberry Pi Pico unit was 27 mA, approximately, with the water flow metering
    unit to absorb 3–4 mA of this quantity. When activating the radio modules on the
    system and letting them transmit information, further data were collected. For
    debugging purposes, apart from the standard settings where only the water usage
    decision was reported, the analytical flow data could also be transmitted toward
    the gateway, limited only by the maximum data rate being supported by the selected
    radio modules. Referring to the Wi-Fi communication case, Figure 9 provides characteristic
    details of the short time dynamics of the scanning and connection establishment
    stages that were mandatory before the utilization of the radio modules. The inspection
    of the results revealed that the scanning process was extremely energy-consuming,
    reaching the level of 90 mA (in total) with additional and non-negligible sporadic
    spikes exceeding that level. The whole scanning process lasted for 2 to 3 s, and
    after that, the overall consumption was stabilized to the 40 mA level, with peaks
    of additional 50 mA corresponding to the water flow event reports toward the gateway.
    The high cost for the Wi-Fi initialization link (especially in optimized radio
    sleep/wakeup scenarios), along with its limited range coverage were favoring the
    assessment of other communication alternatives, such as LoRa. Figure 9. Short
    time dynamics of the mandatory scanning and connection establishment stages, following
    the activation of the Wi-Fi radio module that smart sensors were equipped with.
    Similarly, Figure 10 depicts characteristic short-time dynamics for the LoRa communication
    alternative. Namely, from the LoRa module activation (left) to the energy peaks
    reflecting the water usage notification packet transmission events (top right)
    and to the corresponding textual information content as intercepted by the gateway
    (bottom right). The LoRa32u4 LoRa board consumed 12–13 mA, approximately, at idling,
    with the radio enabled, while the transmission events at the standard radio parameter
    settings (i.e., having Coding Rate—CR set to 4/5, Bandwidth—BW to 128 kHz, Spreading
    Factor—SF set to 7) and with the transmit power at 15 dBm, resulted in spikes
    of 70 mA (at 3.3 V), having an approximate duration of 50 ms, thus requiring around
    12 mJ each. It must be noted that the whole process lacked the high connection
    establishment cost (in both time and energy) characterizing the Wi-Fi case. The
    tradeoff of LoRa was the far lower communication rate, which was not an issue
    for the specific application case that only a few bytes had to be transmitted
    per sensor unit, every 2 to 3 min, at the fastest utilization activity scenario.
    Figure 10. Characteristic short-time dynamics for the LoRa communication alternative:
    From the LoRa module activation (left) to the energy peaks reflecting the packet
    transmission events (top right) and to the corresponding textual information content
    as intercepted by the gateway (bottom right). According to the overall performance
    description presented herein, it can be inferred that typically, the benefits
    of the pilot implementation being discussed were maximized in application cases
    where many water consumption check points were needed, spread into an area of
    a few kilometres. 4.3. Node Cost Issues The total cost of each of the discussed
    nodes, after adding the 6€ for the Raspberry Pi Pico unit, the 15€ for the LoRa
    equipped module, the 8€ for the YF-S201 flow sensor, the 8€ for LiPo batteries
    and the 5€ needed for a good-quality plastic enclosure box, was around 42€. The
    utilization of a LoRa transceiver instead of a typical Wi-Fi radio saved energy
    and offered improved distance coverage. The decision of using the LoRa32u4 board
    added some extra cost (of about 5€, compared with a bare LoRa chip) but provided
    further GPIO pins and connectivity options, as well as fast programming and testing
    of the diverse communication and arithmetic processing variants, thus counterbalancing
    the almost 15 min of time required for the compilation of the code containing
    the trained neural network model destined for the Raspberry Pi Pico unit. The
    gateway node needed 30€ for a Raspberry Pi Model 3 A+, 15€ for the LoRa32u4 board,
    5€ for a plastic enclosure box, and 5€ for a power supply, resulting in cost below
    60€. 4.4. Further Discussion This work presented a pilot implementation targeted
    at intercepting water usage events and characterizing them properly, with the
    emphasis to be put on misuse cases, such as leakages or wastes. The rapid growth
    of electronics and of the pairing software allowed for very cost-effective but
    efficient solutions, with cutting-edge features. Indeed, the adoption of machine
    learning techniques at the edge points (i.e., where the water sensors are) was
    drastically reducing the amount of information that needed to travel from the
    peripheral nodes to the central node and the cloud. This fact resulted in reduced
    communication load and energy consumption, while it increased autonomy and privacy.
    The focus was put on the in situ processing and the pairing with simple, long-range
    and low-energy radios, e.g., the LoRa technology ones. The water usage episodes
    the experimental system was trained to intercept were of comparatively short duration,
    but the software and hardware methods being used, and the accuracy being achieved,
    make the proposed arrangements, only with minor configuration modifications, to
    be applicable for supporting a wide variety of water preservation/misuse detection
    scenarios. Apparently, several issues are still open, requiring more elaboration
    for the delivery of an out-of-the-box solution. The time interval between the
    fixed, in number (e.g., 200), consecutive flow data required for a characterization
    decision, was set to 1 s during the training. The same trained model, can still
    be valid considering intervals of much longer value (e.g., of 30 s instead of
    1 s), provided that the proper normalization in flow values will be made and that
    the activity will be classified in following the same pattern. Nevertheless, gathering
    richer data sets, reflecting further realistic use cases, can train the model
    more accurately, and is an apparent priority for wider applicability. This training
    can follow the same generic principles and methods described herein. The option
    of using a bare LoRa chip with the Raspberry Pi Pico unit is amongst the future
    priorities toward a more commercially-friendly version of the prototype presented
    herein. While the adoption of the LoRa protocol allows for better flexibility,
    the LoRaWAN solution is also feasible, either via implementing the necessary protocol
    stack, via software on the 32u4 LoRa board, or by utilizing native LoRaWAN chips.
    Furthermore, these processes can become more efficient by introducing a sleep/wakeup
    energy management schema which will allow the Raspberry Pi Pico to wake up (via
    interrupts) whenever water flow activity is intercepted by the flow sensor. The
    task of the efficient powering the system at the absence of permanent power supply
    nearby is also quite challenging. Indeed, more than one alternative can be adopted,
    from using solar panels or a tiny wind generator, to pairing the rotating blades
    of the flow sensor unit with a tiny electric generator [50]. Finally, as the adoption
    of a Raspberry Pi Model 3 A+ as a central/gateway node was providing an adequate
    but poor level of functionality, via elementary web and archiving or database
    services, linking with well-known and more user-friendly cloud services is also
    a case worth investigating in the future. 5. Conclusions In this paper, the synergy
    between several innovative and low-cost electronic components and software was
    exploited, in order to monitor and remotely report characteristic water consumption/misuse
    events. The whole approach introduces modern Edge AI techniques (i.e., combining
    IoT, ML and Edge Computing principles) that up until recently was not possible
    to be executed with traditional low-cost microcontrollers. The challenges for
    the delivery of a generally applicable and inexpensive alerting system for either
    urban or rural water resource usage were further highlighted. The system being
    presented can work in a decentralized manner as the amount of information that
    has to travel from the edges to the cloud is drastically reduced, or becomes practically
    unnecessary, thus resulting in energy requirement minimization and increased privacy.
    Only the final decision (water usage characterization) information has to be transmitted
    to the final user (e.g., the farmer), and the cloud is necessary only in case
    that the latter user is not nearby or asks for sophisticated information post
    processing. As for the future, more optimized variants of the proposed system
    will be assessed, in terms of hardware selection (e.g., of flow sensor units),
    neural network model accuracy, networking options and energy autonomy. Great companies,
    such as Arduino, Raspberry, ESP or Adafruit, during their noble competition, will
    continue to produce excellent parts with leveraged application support potential.
    Finally, an out-of-the box version of the functionality being presented, of commercial
    standards, exploiting additional well-known services, and thus exhibiting increased
    user-friendliness, will be a significant future priority. Author Contributions
    Conceptualization, D.L.; methodology, D.L. and K.-A.L.; software, D.L.; validation,
    D.L., K.-A.L., C.M. and K.G.A.; investigation, D.L., K.-A.L. and C.M.; data curation,
    K.-A.L.; writing—original draft preparation, D.L. and K.-A.L.; writing—review
    and editing, D.L., K.-A.L., C.M. and K.G.A.; visualization, D.L. and K.-A.L.;
    supervision, K.G.A. All authors have read and agreed to the published version
    of the manuscript. Funding This research received no external funding. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement Available upon request. Acknowledgments The authors
    would like to thank the personnel and the students of the Dept. of Natural Resources
    Management & Agricultural Engineering of the Agricultural University of Athens,
    Greece, for their assistance in the deployment and testing of the discussed system.
    Conflicts of Interest The authors declare no conflict of interest. References
    FAO. Climate-Smart Agriculture Sourcebook. 2013. Available online: http://www.fao.org/3/i3325e/i3325e.pdf
    (accessed on 25 March 2022). Statista. IoT: Number of Connected Devices Worldwide
    2012–2025. Available online: https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/
    (accessed on 8 June 2022). Dastjerdi, A.V.; Buyya, R. Fog Computing: Helping the
    Internet of Things Realize Its Potential. IEEE Comput. Soc. 2016, 49, 112–116.
    [Google Scholar] [CrossRef] Merenda, M.; Porcaro, C.; Iero, D. Edge machine learning
    for AI-Enabled IoT devices: A review. Sensors 2020, 20, 2533. [Google Scholar]
    [CrossRef] [PubMed] TensorFlow Lite. Available online: https://www.tensorflow.org/lite
    (accessed on 8 June 2022). TinyML. Available online: https://www.tensorflow.org/lite
    (accessed on 8 June 2022). Loukatos, D.; Arvanitis, K.G. Multi-Modal Sensor Nodes
    in Experimental Scalable Agricultural IoT Application Scenarios; Springer: Berlin/Heidelberg,
    Germany, 2021; pp. 101–128. [Google Scholar] [CrossRef] Kingdom, B.; Liemberger,
    R.; Marin, P. The Challenge of Reducing Non-Revenue (NRW) Water in Developing
    Countries. How the Private Sector Can Help: A Look at Performance-Based Service
    Contracting; Water Supply and Sanitation (WSS) Sector Board Discussion Paper N.
    8; The World Bank: Washington, DC, USA, 2006. [Google Scholar] United Nations
    SDG6. Available online: https://sdgs.un.org/goals/goal6 (accessed on 20 February
    2022). Sustainable Development Goals. Available online: https://sdgs.un.org/goals
    (accessed on 20 February 2022). Loukatos, D.; Lygkoura, K.-A.; Misthou, S.; Arvanitis,
    K.G. Internet of Things Meets Machine Learning: A Water Usage Alert Example. In
    Proceedings of the 2022 IEEE Global Engineering Education Conference (EDUCON),
    Tunis, Tunisia, 28–31 March 2022. [Google Scholar] Singh, D.; Tripathi, G.; Jara,
    A.J. A survey of internet-of-things: Future vision, architecture, challenges,
    and services. In Proceedings of the IEEE World Forum on Internet of Things, Seoul,
    Korea, 6–8 March 2014; pp. 287–292. [Google Scholar] [CrossRef] Lova Raju, K.;
    Vijayaraghavan, V. IoT Technologies in Agricultural Environment: A Survey. Wirel.
    Pers. Commun. 2020, 113, 2415–2446. [Google Scholar] [CrossRef] Farooq, M.S.;
    Riaz, S.; Abid, A.; Umer, T.; Zikria, Y.B. Role of IoT Technology in Agriculture:
    A Systematic Literature Review. Electronics 2020, 9, 319. [Google Scholar] [CrossRef]
    [Green Version] Zude-Sasse, M.; Akbari, E.; Tsoulias, N.; Psiroukis, V.; Fountas,
    S.; Ehsani, R. Sensing in Precision Horticulture. In Sensing Approaches for Precision
    Agriculture; Kerry, R., Escolà, A., Eds.; Progress in Precision Agriculture; Springer:
    Cham, Switzerland, 2021. [Google Scholar] [CrossRef] Islam, N.; Rashid, M.M.;
    Pasandideh, F.; Ray, B.; Moore, S.; Kadel, R. A Review of Applications and Communication
    Technologies for Internet of Things (IoT) and Unmanned Aerial Vehicle (UAV) Based
    Sustainable Smart Farming. Sustainability 2021, 13, 1821. [Google Scholar] [CrossRef]
    Liakos, K.G.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning
    in Agriculture: A Review. Sensors 2018, 18, 2674. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Ahmad, L.; Nabi, F. Agriculture 5.0: Artificial Intelligence,
    IoT, and Machine Learning, 1st ed.; CRC Press: Boca Raton, FL, USA, 2021. [Google
    Scholar] [CrossRef] Garcia Lopez, P.; Montresor, A.; Epema, D.; Datta, A.; Higashino,
    T.; Iamnitchi, A.; Barcellos, M.; Felber, P.; Riviere, E. Edge-centric computing:
    Vision and challenges. ACM SIGCOMM Comput. Commun. Rev. 2015, 45, 37–42. [Google
    Scholar] [CrossRef] Gia, T.N.; Qingqing, L.; Queralta, J.P.; Zou, Z.; Tenhunen,
    H.; Westerlund, T. Edge AI in Smart Farming IoT: CNNs at the Edge and Fog Computing
    with LoRa. In Proceedings of the 2019 IEEE AFRICON, Accra, Ghana, 25–27 September
    2019; pp. 1–6. [Google Scholar] [CrossRef] Bu, F.; Wang, X. A smart agriculture
    IoT system based on deep reinforcement learning. Future Gener. Comput. Syst. 2019,
    99, 500–507. [Google Scholar] [CrossRef] Huang, R.; Ma, C.; Ma, J.; Huangfu, X.;
    He, Q. Machine learning in natural and engineered water systems. Water Res. 2021,
    15, 117666. [Google Scholar] [CrossRef] [PubMed] Mashhadi, N.; Shahrour, I.; Attoue,
    N.; El Khattabi, J.; Aljer, A. Use of Machine Learning for Leak Detection and
    Localization in Water Distribution Systems. Smart Cities 2021, 4, 1293–1315. [Google
    Scholar] [CrossRef] Ramachandran, V.; Ramalakshmi, R.; Kavin, B.P.; Hussain, I.;
    Almaliki, A.H.; Almaliki, A.A.; Elnaggar, A.Y.; Hussein, E.E. Exploiting IoT and
    Its Enabled Technologies for Irrigation Needs in Agriculture. Water 2022, 14,
    719. [Google Scholar] [CrossRef] Roy, A.; Dutta, H.; Griffith, H.; Biswas, S.
    An On-Device Learning System for Estimating Liquid Consumption from Consumer-Grade
    Water Bottles and Its Evaluation. Sensors 2022, 22, 2514. [Google Scholar] [CrossRef]
    [PubMed] Slama, S.-B. Prosumer in smart grids based on intelligent edge computing:
    A review on Artificial Intelligence Scheduling Techniques. Ain Shams Eng. J. 2022,
    13, 101504. [Google Scholar] [CrossRef] Gaspar, P.D.; Fernandez, C.M.; Soares,
    V.N.G.J.; Caldeira, J.M.L.P.; Silva, H. Development of Technological Capabilities
    through the Internet of Things (IoT): Survey of Opportunities and Barriers for
    IoT Implementation in Portugal’s Agro-Industry. Appl. Sci. 2021, 11, 3454. [Google
    Scholar] [CrossRef] McCaig, M.; Rezania, D.; Dara, R. Is the Internet of Things
    a helpful employee? An exploratory study of discourses of Canadian farmers. Internet
    Things 2022, 17, 100466. [Google Scholar] [CrossRef] Nkosi, S.H.; Chowdhury, S.P.D.
    Automated Irrigation and Water Level Management System Using Raspberry PI. In
    Proceedings of the 2018 IEEE PES/IAS PowerAfrica, Cape Town, South Africa, 26–29
    June 2018; pp. 804–809. [Google Scholar] [CrossRef] Gosavi, G.; Gawde, G.; Gosavi,
    G. Smart water flow monitoring and forecasting system. In Proceedings of the 2017
    2nd IEEE International Conference on Recent Trends in Electronics, Information
    & Communication Technology (RTEICT), Bangalore, India, 19–20 May 2017; pp. 1218–1222.
    [Google Scholar] [CrossRef] Glória, A.; Dionisio, C.; Simões, G.; Cardoso, J.;
    Sebastião, P. Water Management for Sustainable Irrigation Systems Using Internet-of-Things.
    Sensors 2020, 20, 1402. [Google Scholar] [CrossRef] [Green Version] Attallah,
    N.A.; Horsburgh, J.S.; Beckwith, A.S., Jr.; Tracy, R.J. Residential Water Meters
    as Edge Computing Nodes: Disaggregating End Uses and Creating Actionable Information
    at the Edge. Sensors 2021, 21, 5310. [Google Scholar] [CrossRef] Neto, A.R.; Soares,
    B.; Barbalho, F.; Santos, L.; Batista, T.; Delicato, F.C.; Pires, P.F. Classifying
    Smart IoT Devices for Running Machine Learning Algorithms. In Anais do XLV Seminário
    Integrado de Software e Hardware; SBC: Nashville, TN, USA, 2018. [Google Scholar]
    Arduino Nano 33 BLE Sense. Overview of the Arduino Nano 33 BLE Sense Microcontroller
    Unit. 2022. Available online: https://store.arduino.cc/products/arduino-nano-33-ble-sense
    (accessed on 25 February 2022). Raspberry Pi Pico. Overview of the Raspberry Pi
    Pico Microcontroller Unit. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-pico/
    (accessed on 25 March 2022). Arduino Uno. Arduino Uno Board Description on the
    Official Arduino Site. 2022. Available online: https://store.arduino.cc/arduino-uno-rev3
    (accessed on 20 February 2022). LoRa32u4. The LoRa32u4 Module Description. 2022.
    Available online: https://www.diymalls.com/LoRa32u4-II-Lora-Development-Board-868mhz-915mhz-Lora-Module
    (accessed on 25 March 2022). Arduino Software IDE. 2022. Available online: https://www.arduino.cc/en/Guide/Environment
    (accessed on 20 February 2022). ESP8266. The ESP8266 Low-Cost Wi-Fi Microchip.
    2022. Available online: https://en.wikipedia.org/wiki/ESP8266 (accessed on 20
    February 2022). Twinschip. Water Flow Meter. 2022. Available online: https://www.twinschip.com/Water-Flow%20Sensor-Control-Effect-Flowmeter-Hall--YF-S201
    (accessed on 20 February 2022). MIT App Inventor Programming Environment. Available
    online: http://appinventor.mit.edu/explore/ (accessed on 20 February 2022). EdgeImpulse.
    2022. Available online: https://www.edgeimpulse.com/ (accessed on 20 March 2022).
    TCP/IP Extension. Description of the TCP Extension for the MIT App Inventor Environment.
    2022. Available online: https://community.appinventor.mit.edu/t/tcp-ip-extension/7142
    (accessed on 20 March 2022). UDP/IP Extension. Description of the UDP Extension
    for the MIT App Inventor Environment. 2022. Available online: https://ullisroboterseite.de/android-AI2-UDP-en.html
    (accessed on 20 March 2022). Raspberry Pi 3 Model A+. Raspberry Pi 3 Model A+
    Board Description on the Official Raspberry Site. 2022. Available online: https://www.raspberrypi.com/products/raspberry-pi-3-model-a-plus/
    (accessed on 25 March 2022). RadioHead. The RadioHead Library to Support LoRa
    Modules. 2022. Available online: https://www.airspayce.com/mikem/arduino/RadioHead/
    (accessed on 25 February 2022). Arduino Cryptography Library. Description of the
    Arduino Cryptography Library. 2022. Available online: https://www.arduino.cc/reference/en/libraries/crypto/
    (accessed on 25 February 2022). Loukatos, D.; Fragkos, A.; Arvanitis, K. Experimental
    Performance Evaluation Techniques of LoRa Radio Modules and Exploitation for Agricultural
    Use. In Information and Communication Technologies for Agriculture—Theme I: Sensors;
    Bochtis, D.D., Lampridi, M., Petropoulos, G.P., Ampatzidis, Y., Pardalos, P.,
    Eds.; Springer International Publishing: Cham, Switzerland, 2022; pp. 101–120.
    [Google Scholar] [CrossRef] Loukatos, D.; Dimitriou, N.; Manolopoulos, I.; Kontovasilis,
    K.; Arvanitis, K.G. Revealing Characteristic IoT Behaviors by Performing Simple
    Energy Measurements via Open Hardware/Software Components. In Proceedings of the
    Sixth International Congress on Information and Communication Technology—ICICT
    2021, London, UK, 25–26 February 2021; Springer: Singapore, 2022; pp. 1045–1053.
    [Google Scholar] [CrossRef] Micro Water Turbine—Hydroelectric Generator. Description
    of the 5V DC water turbine miniature electric generator. Available online: https://www.seeedstudio.com/Micro-Water-Tubine-Generator-DC-5V-p-4512.html
    (accessed on 19 June 2022). Publisher’s Note: MDPI stays neutral with regard to
    jurisdictional claims in published maps and institutional affiliations.  © 2022
    by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Loukatos, D.; Lygkoura, K.-A.; Maraveas, C.; Arvanitis, K.G.
    Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events
    in a Decentralized Manner. Sensors 2022, 22, 4874. https://doi.org/10.3390/s22134874
    AMA Style Loukatos D, Lygkoura K-A, Maraveas C, Arvanitis KG. Enriching IoT Modules
    with Edge AI Functionality to Detect Water Misuse Events in a Decentralized Manner.
    Sensors. 2022; 22(13):4874. https://doi.org/10.3390/s22134874 Chicago/Turabian
    Style Loukatos, Dimitrios, Kalliopi-Agryri Lygkoura, Chrysanthos Maraveas, and
    Konstantinos G. Arvanitis. 2022. \"Enriching IoT Modules with Edge AI Functionality
    to Detect Water Misuse Events in a Decentralized Manner\" Sensors 22, no. 13:
    4874. https://doi.org/10.3390/s22134874 Note that from the first issue of 2016,
    this journal uses article numbers instead of page numbers. See further details
    here. Article Metrics Citations Crossref   10 Web of Science   6 Scopus   11 ads   3
    PubMed   2 PMC   2 Google Scholar   [click to view] Article Access Statistics
    Article access statistics Article Views 5. Jan 15. Jan 25. Jan 4. Feb 14. Feb
    24. Feb 5. Mar 15. Mar 25. Mar 0k 1k 2k 3k For more information on the journal
    statistics, click here. Multiple requests from the same IP address are counted
    as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content Alert Further
    Information Article Processing Charges Pay an Invoice Open Access Policy Contact
    MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians
    For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum
    MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series
    Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications
    and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel,
    Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Enriching IoT Modules with Edge AI Functionality to Detect Water Misuse Events
    in a Decentralized Manner
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Majumdar P.
  - Mitra S.
  - Bhattacharya D.
  citation_count: '1'
  description: Massive technological advancements in the IoT is contributing a lot
    to make our day-to-day life smarter but this also leads to e-waste production,
    energy use, and toxic emissions. The Green IoT (GIoT) is gradually reducing the
    detrimental effects of IoT. The significance for IoT-based smart and efficient
    agricultural methods is increasing very rapidly for getting a maximum good quality
    harvest by controlling irrigation based on automated environment parameter prediction
    and the enhancement of IoT to GIoT aims at reducing carbon footprints and promotes
    usage of energy-efficient methods. The edge-cloud platform and machine learning
    (ML) algorithms in a smart irrigation and monitoring system provide real-time
    insights into the crops of the farmers. Edge computing process data at the edge
    of network to conserve bandwidth and also helps to reduce the processing load
    over the cloud. A ML process makes an intelligent prediction by correlating the
    sensor originated raw data with weather predictions which enables a farmer to
    make an informed decision for the actuation of irrigation pumps. This study aims
    to describe the recent advancements in energy-saving practice and strategy for
    achieving a strong vision of GIoT-enabled smart farming coupled with ML provided
    prediction intelligence. A GIoT prototype is formulated using ML to determine
    the outline of irrigation conditional to non-linear weather changes. The core
    aspect of this review article consists of surveys and discussions of the vital
    topics in GIoT-based smart farming and their enabler technologies. .
  doi: 10.1002/9781119792642.ch29
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register Handbook of Intelligent Computing and Optimization for Sustainable
    Development Chapter 29 Full Access Green IoT for Smart Agricultural Monitoring:
    Prediction Intelligence With Machine Learning Algorithms, Analysis of Prototype,
    and Review of Emerging Technologies Parijata Majumdar,  Sanjoy Mitra,  Diptendu
    Bhattacharya Book Editor(s):Mukhdeep Singh Manshahia,  Valeriy Kharchenko,  Elias
    Munapo,  J. Joshua Thomas,  Pandian Vasant First published: 11 February 2022 https://doi.org/10.1002/9781119792642.ch29Citations:
    1 PDF TOOLS SHARE Summary Massive technological advancements in the IoT is contributing
    a lot to make our day-to-day life smarter but this also leads to e-waste production,
    energy use, and toxic emissions. The Green IoT (GIoT) is gradually reducing the
    detrimental effects of IoT. The significance for IoT-based smart and efficient
    agricultural methods is increasing very rapidly for getting a maximum good quality
    harvest by controlling irrigation based on automated environment parameter prediction
    and the enhancement of IoT to GIoT aims at reducing carbon footprints and promotes
    usage of energyefficient methods. The edge-cloud platform and machine learning
    (ML) algorithms in a smart irrigation and monitoring system provide real-time
    insights into the crops of the farmers. Edge computing process data at the edge
    of network to conserve bandwidth and also helps to reduce the processing load
    over the cloud. A ML process makes an intelligent prediction by correlating the
    sensor originated raw data with weather predictions which enables a farmer to
    make an informed decision for the actuation of irrigation pumps. This study aims
    to describe the recent advancements in energy-saving practice and strategy for
    achieving a strong vision of GIoT–enabled smart farming coupled with ML provided
    prediction intelligence. A GIoT prototype is formulated using ML to determine
    the outline of irrigation conditional to non-linear weather changes. The core
    aspect of this review article consists of surveys and discussions of the vital
    topics in GIoT–based smart farming and their enabler technologies. References
    Citing Literature Handbook of Intelligent Computing and Optimization for Sustainable
    Development References Related Information Recommended IoT/cloud‐enabled smart
    services: A review on QoS requirements in fog environment and a proposed approach
    based on priority classification technique Amel Ksentini,  Maha Jebalia,  Sami
    Tabbane International Journal of Communication Systems Cloud IoT Ruchi Bhatnagar,  Rawat
    Prof (Dr.) Paramjeet,  Garg Dr. Amit Emerging Computing Paradigms: Principles,
    Advances and Applications, [1] Metropolitan intelligent surveillance systems for
    urban areas by harnessing IoT and edge computing paradigms Rustem Dautov,  Salvatore
    Distefano,  Dario Bruneo,  Francesco Longo,  Giovanni Merlino,  Antonio Puliafito,  Rajkumar
    Buyya Software: Practice and Experience LoRa based intelligent soil and weather
    condition monitoring with internet of things for precision agriculture in smart
    cities Dushyant Kumar Singh,  Rajeev Sobti,  Anuj Jain,  Praveen Kumar Malik,  Dac-Nhuong
    Le IET Communications Green IoT and Machine Learning for Agricultural Applications
    Keshavi Nalla,  Seshu Vardhan Pothabathula Green Internet of Things and Machine
    Learning: Towards a Smart Sustainable World, [1] Additional links ABOUT WILEY
    ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage Cookies Accessibility
    Wiley Research DE&I Statement and Publishing Policies Developing World Access
    HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES
    Subscription Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley
    Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related
    companies. All rights reserved, including rights for text and data mining and
    training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: Handbook of Intelligent Computing and Optimization for Sustainable Development
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Green IoT for smart agricultural monitoring: Prediction intelligence with
    machine learning algorithms, analysis of prototype, and review of emerging technologies'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Gore S.
  - Patil S.
  - Khalane V.
  citation_count: '0'
  description: A change in agricultural practices is necessary to prevent future food
    shortages caused by global overpopulation. With the Internet of Things (IoT) and
    low-power and low-cost devices, the agriculture industry can automate irrigation
    systems to efficiently use water resources by monitoring farm fields. Low Power
    Wide Area Networks (LPWAN), along with IoT, can solve bandwidth, coverage and
    power problems which are the main drawbacks of other wireless communication technologies.
    Long Range Wide Area Network (LoRaWAN) protocol is known as LoRa in LPWAN space.
    This protocol provides additional benefits like security, scalability, and robustness.
    In this paper, a smart agriculture model is proposed to assist in farmers' decision-making
    and help them to get more productive results. The result of this paper is a prototype
    equipment for measuring humidity and soil moisture content done by combining the
    data obtained from the sensors via a LoRaWAN network. This model sends sensor
    Data such as temperature (degree Celsius), soil moisture (percentage), and humidity
    (percentage) from the transmitter node to the receiver node using the LoRa communication
    method. The readings from these nodes are transmitted and then forwarded to the
    network server through a single gateway. The Wi-Fi-enabled receiving node track
    data daily on the ThingSpeak platform. The primary goal of this paper is to help
    farmers monitor their farms more effectively.
  doi: 10.1109/IBSSC56953.2022.10037261
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2022 IEEE Bombay Section Sign... Intelligent
    Farm Monitoring System using LoRa Enabled IoT Publisher: IEEE Cite This PDF Shraddha
    Gore; Shital Patil; Vivek Khalane All Authors 1 Cites in Paper 151 Full Text Views
    Abstract Document Sections I. Introduction II. Literature Review III. Fundamentals
    of LoRa IV. System Architecture V. Implementation Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: A change in agricultural practices
    is necessary to prevent future food shortages caused by global overpopulation.
    With the Internet of Things (IoT) and low-power and low-cost devices, the agriculture
    industry can automate irrigation systems to efficiently use water resources by
    monitoring farm fields. Low Power Wide Area Networks (LPWAN), along with IoT,
    can solve bandwidth, coverage and power problems which are the main drawbacks
    of other wireless communication technologies. Long Range Wide Area Network (LoRaWAN)
    protocol is known as LoRa in LPWAN space. This protocol provides additional benefits
    like security, scalability, and robustness. In this paper, a smart agriculture
    model is proposed to assist in farmers'' decision-making and help them to get
    more productive results. The result of this paper is a prototype equipment for
    measuring humidity and soil moisture content done by combining the data obtained
    from the sensors via a LoRaWAN network. This model sends sensor Data such as temperature
    (degree Celsius), soil moisture (percentage), and humidity (percentage) from the
    transmitter node to the receiver node using the LoRa communication method. The
    readings from these nodes are transmitted and then forwarded to the network server
    through a single gateway. The Wi-Fi-enabled receiving node track data daily on
    the ThingSpeak platform. The primary goal of this paper is to help farmers monitor
    their farms more effectively. Published in: 2022 IEEE Bombay Section Signature
    Conference (IBSSC) Date of Conference: 08-10 December 2022 Date Added to IEEE
    Xplore: 14 February 2023 ISBN Information: DOI: 10.1109/IBSSC56953.2022.10037261
    Publisher: IEEE Conference Location: Mumbai, India SECTION I. Introduction The
    IoT technology has the potential to provide various solutions that will modernize
    agriculture. There are now numerous efforts being made to improve agricultural
    productivity while maintaining food quality and preserving the environment. In
    this regard, several studies and initiatives using Internet of Things principles
    emphasize precision agriculture [17]. It uses sensors and embedded technology
    that connects them in a network, enabling real-time data collection, transmission
    and monitoring. Farmers can use IoT to deploy different types of soil and environmental
    sensors and leverage the insights gained from sensed data. IoT in agriculture
    is used to analyze plant development and produce the highest possible crop yields
    by detecting soil moisture information, weather information, and information about
    the availability of limited water resources to avoid wastage [7]. Data is collected
    by the microcontroller (Arduino UNO) and transmitted to the server. The data is
    processed, and tailored feedback is provided. For predictive analysis, time series
    data are created for each temperature and humidity variable. The model proposed
    in this paper uses LoRaWAN technology with IoT and has a soil moisture sensor,
    temperature and humidity. This paper presents a method for tracking soil moisture,
    ambient temperature, and relative humidity by using a model. It transmits data
    using the LoRaWAN protocol and stores it in a database in real-time, allowing
    historical data logging and access via an IoT platform. The following sections
    are organised section II contains a literature review, and section III talks about
    the fundamentals of LoRa. Section IV repre-sents system architecture, Section
    V gives information about implementation. SECTION II. Literature Review Several
    investigations have produced conflicting results in the last fifteen years. According
    to a 2005 report, the prospects for decision support system (DSS) acceptability
    and approval remain dim due to such a system''s sluggish and gradual uptake and
    deployment. The results of this study imply that for contemporary DSS to be extensively
    used, they must be generally successful. To do this, they must be affordable,
    low-cost, and flexible enough to adapt to any given situation [12]. Even though
    they underline that DSS are the foundation of precision agriculture, the findings
    from research published in 2014 remained the same after nine years [8]. DSS still
    need to be generally recognized and used [6]. Finally, Hungarian research revealed
    that farmers, particularly those in Europe, are reluctant to adopt precision farming
    because of DSS. If precision farming is not implemented with efficient DSS, these
    systems cause increased working hours and high op-erating expenses, which prevent
    agriculture from becoming e-agricultural [7]. Prototypes of IoT-integrated, cloud-based,
    and GPS-based environmental monitoring systems have been shown by Fang et al.
    [6]. A web API was created by the company to gather meteorological data in Xinjiang.
    On Malaysia''s university of Teknologi PETRONAS’ campus, Han et al. used a mesh
    topology Wireless sensor together with IoT to measure the weather and humidity.
    They utilized the findings gained through web applications. A wireless network
    was used to detect PM 2.5, and PM 10 air pollution by Xu et al. IoT architecture
    was submitted by Shinde et al. to assess the interior and outdoor surroundings.
    Cunin et al. utilized data from IoT devices for environmental monitoring at the
    University of Limerick in Ireland and displayed it via a mobile application and
    website [5]. With web apps, Mulani et al. incorporated temperature, humidity,
    barometer, and gas sensors into IoT devices and utilized fuzzy logic to assist
    with system environmental decisions. ESP8266 node MCUs were developed by Martha
    et al. [7] to transmit and receive real-time ecological data. All of these studies,
    it can be argued, will only be able to function if the sensor that sends the data
    is linked to the internet; as a result, these studies cannot be employed in rural
    regions owing to the constraints of information receipt and transmission. The
    power supply issue cannot be provided in open spaces [9]. SECTION III. Fundamentals
    of LoRa A. Overview of LoRa Technology LoRaWAN technology is preferred over other
    traditional wireless technology for having a long transmission range. In addition,
    it is chosen for its vast coverage area and low power consumption. Long Range
    (LoRa) is a physical layer and data link layer protocol licensed by Semtech corporation.
    It is on the chirp spread spectrum (CSS) modulation technique. Lora employs modifications
    to frequency shift modulation to transmit data over long distances with minimal
    power. Its transmission range is up to 15 Kilometres in rural regions and 5 Kilometres
    in urban regions [1]. LoRaWAN is designed to function as a long -distance transmission
    range having frequency for industrial, scientific and medical (ISM) bands of 433
    megahertz (MHz),868 MHz and 915 MHz [1]. Chirp Spread Spectrum (CSS) modulation
    uses a frequency increase or decreases technique over time, increasing its efficiency
    and resistance to interference, making it transmit data at low sampling frequencies
    [2]. Each country has a different frequency band. For example, India has adopted
    865 to 867 MHZ, Brazil has 915 MHz, and Europe has 868 MHz. Also, in most countries,
    time restrictions are imposed on utilising the air interface by using 1% duty
    cycle [3]. Lora uses CSS modulation with data rates from 250 bits/second to 5.5-kilobits/second
    and 50 bits/second with a frequency shift key (FSK). The LoRaWAN network comprises
    three components: the end devices, the gateway and the LoRaWAN network server.
    The end devices are in charge of data collection and network activation. Gateways
    are responsible for receiving messages from all the end devices and then forwarding
    them to a network server. The LoRaWAN uses a star-to-star topology where all the
    end devices transmit their data directly to a gateway. A LoRa device is set up
    to adjust link performance and energy consumption using LoRaWAN fundamentals.
    Cellular networks provide extensive high-speed data coverage. However, high-speed
    data is not necessary for the Internet of Things applications. Cellular network-based
    de-vices frequently have relatively short battery lives and mul-tiple coverage
    gaps. Mesh networks and ZigBee are utilised in home automation. They provide low
    to medium-distance performance. However, these must be better for long dis-tances
    (a few kilometres) [11]. Although Bluetooth/BLE gives reasonably excellent data
    speeds, its range is a significant drawback. For long-range Internet of Things
    applications, the range provided is just unacceptable. The IEEE802.11 WLAN standard
    is one of the most extensively adopted of all the wireless technologies. It is
    because of the high bandwidth and data rate alone. Sadly, it has a very narrow
    operating range and uses battery power [10]. Wi-Fi-enabled devices have short
    lifespans and frequently require proximity to the access point to function effectively.
    Moreover, the waves have high operating frequencies (2.4 and 5 GHz), which makes
    it difficult for them to pass past barriers. LoRaWAN technology is quickly developing
    and incorporated into various IoT-driven applications for addressing those issues.
    B. Spreading Factor (SF) LoRa is based on CSS technology, which uses chirps to
    carry data, also known as symbols. The spreading factor regulates the chrips rate,
    which is the data transmission speed. A low spreading factor indicates faster
    Chrip, which results in faster data transmission [14]. The chrip rate is divided
    into equal parts for every increase in the spreading factor; data transmission
    is also divided. The more chrips utilized to represent a symbol, that is, data,
    the higher the spreading factor Value will be, which means the receiver has more
    processing gain. As a result, the receiver can recognize data transmissions with
    low signal-noise Ratios (SNR). The spreading factor has an integer value from
    7 to 12. C. Bandwidth (BW) The frequency range in the transmission band is referred
    to as bandwidth. Higher bandwidth results in more data flow which means less time
    on air. However, more noise is added to the signal, reducing its sensitivity.
    A 125-kilo cycles per second (kcps) chip rate corresponds to a 125 kHz bandwidth.
    So LoRaWAN uses frequencies of 125 kHz, 250 kHz or 500 kHz. D. Transmission Power
    (TP) and Coding Rate (CR) Transmission Power is set to 2 dBm to 20 dBm in 1 dB
    steps. Power levels above 17 dBm are used with a 1% duty cycle. The coding rate
    protects against burst interference. It is set with 4/5, 4/6, 4/7 or 4/8. Greater
    Value offers high protection, but at the same time, it increases the time on air.
    Because the packet header is 4/8-encoded and stores the coding rate of the payload,
    different coding rates can communicate with one another. [4]. E. Signal to Noise
    Ratio (SNR) and Link Budget LoRa signal to noise Ratio (SNR) lies between -20
    dB to +10 dB . The receiver signal is less distorted when the value is closer
    to +10 dB . It operates above the noise floor level when SNR is more significant
    than zero and below the noise floor level when SNR is smaller than zero. However,
    LoRa can work below the noise level and demodulate the signals between the range
    of -7.5 dB to -20 dB below the noise level [4]. A link budget is comprehensive
    of all gains and losses experienced from the transmitter to the receiver as they
    pass through the medium, also called free space. It is a method of measuring link
    performance. The receiver sensitivity is the lowest power level at which the receiver
    can detect or demodulate the signal. SECTION IV. System Architecture Fig. 1. LoRaWAN
    system architecture Show All A. LoRa Nodes or End Devices LoRa means wireless
    modulation and physical layer that es-tablishes long-distance networks for communication.
    LoRa al-liance has standardized this network protocol. The LoRaWAN architecture
    is a layered architecture. LoRa defines the physical layer, while LoRaWAN defines
    the communication protocol and system architecture (refer figure 1). The sensors
    or the applications that perform sensing and controlling are known as LoRa End
    devices. Those sensors collect data and commu-nicate it to gateways via the LoRaWAN
    capabilities integrated into them. These nodes are placed remotely. B. LoRa Gateways
    and Network Server Gateways are base stations that receive transmitted data. They
    perform the function of a router having a LoRa con-centrator installed within
    them and accepting LoRa packets. All end devices can communicate in both directions.
    Data is transmitted to the network server. Wifi connects gateways and network
    servers. All intelligence resides on the network server. It performs the security
    Check, filters out duplicate packets from several gateways and sends an acknowledgement
    (ACK) signal to the gateways. The application layer is the packet''s final destination,
    and the network server forwards the data to the particular application server.
    It also the authentication of the network devices. Network Server has different
    device classes such as class A, B, and C (refer figure 2) [15]. Fig. 2. LoRaWAN
    communiction stack Show All C. LoRaWAN Media Access Control (MAC) Layer and Physical
    Layer LoRaWAN''s MAC layer is the second layer of the open system interconnection
    (OSI) model. It assigns spreading code, frequency and data rate to each device.
    It also schedules ac-knowledgements by adapting different data rates. LoraWAN''s
    physical layer uses region-specific and licence-free ISM bands. But it is also
    configured to operate on lower frequency bands of 433 MHz and 169 MHz [12] SECTION
    V. Implementation A. LoRaWAN RFM95 Transceivers LoRaWAN RFM 95 transceiver (refer
    figure 3) is incorpo-rated with LoRa modem, which requires very little power and
    provides an ultra-long range spread spectrum for communication. It uses low-cost
    crystal and bill of material (BOM) and reaches a sensitivity of over -148 decibels
    per milliWatt (dBm) [16]. It has high sensitivity and a power amplifier with a
    build of +20 dBm , which leads to a link budget, making it perfect for any application
    requiring range and durability [13]. Fig. 3. LoRaWAN RFM95 transmitter Show All
    Fig. 4. LoRaWAN RFM95 transmitter with sesnor set up Show All B. Capacitive Soil
    Moisture Sensor Version 1.2 The volumetric water content of the soil is determined
    using a soil moisture sensor. They are two types that are resistive and capacitive.
    Two probes are used in resistive-type sensors to measure the volumetric water
    content of the soil. Current can flow through the ground through the probes, and
    the resistance value determines how much moisture is in the soil. Corrosion of
    the sensor probes is a severe issue with this type of sensor [2]. Soil moisture
    sensors, capacitive rather than resistive, are more corrosion-resistant and provide
    a bette readout of moisture content (refer figure 4 and 6) [6]. I addition, the
    sensor''s groundbreaking soil moisture solutio-is self-contained and portable.
    Calibration of the soil moistur sensor is done to determine the threshold between
    wet an dry. It is done by embedding a sensor in the soil, and water i poured into
    the sample by observing the values change whe the soil changes its moisture from
    dry to wet. This value wi then be called the threshold. A given soil comprises
    numerou components with relative dielectric permittivity ranging fror 2 to 6 when
    dry [18]. As a point of comparison, the dielectri constant of air is approximately
    1 (the same as that of vacuur space). For ordinary temperature and pressure, the
    dielectri constant of water is around 80. This high permittivity allow electricity
    to flow more freely, increasing capacitance an resulting in a lower resonance
    value. Because of the relativ impact of water on electrical permittivity in soil
    material capacitance is an excellent measure of soil moisture [16]. C. Atmospheric
    Temperature and Humidity Sensor AHT10 The AHT10 sensor (refer figure 7) produces
    a calibrated digital output. It offers long-term stability and reliability. Also,
    it has a meagre cost. It consists of a sensor chip package which provides excellent
    calibration and precision. In addition, it has re-flow soldering capabilities.
    It comprises a dual-row flat lead-less surface mount device (SMD) package with
    a bottom dimension of 4x5 mm and a height of 1.6 mm. It has a power supply range
    of 1.8 to 3.6 volts, while 3.3 volts is the recommended operating voltage. [4].
    D. Processing Unit Arduino UNO For processing, an Arduino UNO with an Atmega controller
    is employed. Sensors are connected with analogue and digital pins to this processing
    unit Arduino UNO, a microcontroller. LoRa chip is connected through a serial peripheral
    interface (SPI). It is an open-source electronics platform built on simple hardware
    and software [8]. Fig. 5. Receiver data Show All Fig. 6. Capacitive soil moisture
    sensor Show All Fig. 7. AHT10 sensor Show All Fig. 8. Arduino connected with LoRa
    module Show All Fig. 9. Collection of live data in graphical form on ThingSpeak
    Show All E. Experimental Setup and Result The AHT10 sensor senses the surrounding
    temperature and humidity. In addition, a capacitive soil moisture sensor measures
    moisture content in the soil [11]. The transmitter side consists of one LoRa transmitter
    model. Both sensors are connected and programmed as per the requirement. Using
    the LoRa modulation technique, the transmitter sends data to the receiver, another
    LoRa module. Finally, the data is displayed in the graphical format on the ThingSpeak
    web interface. Accurate assessment of soil water content is critical for agronomy
    and botany applications, where under and over-watering of soil can result in useless
    or lost resources. If the soil moisture value lies between 2 to 6, it indicates
    the soil is dry, and watering will be required. Based on different soil compositions,
    these values vary. If the moisture content is more than 8, it is inferred that
    the soil is moist enough and would require the same watering sequence as the farmer.
    This analysis prevents over-watering, which maintains the soil nutrition and hence
    maintains the cultivated crop quality. The Arduino platform programs a microcontroller
    that reads an analogue signal from a capacitive sensor and outputs a voltage.
    Using gravimetric methods, the inverse of this voltage can be linearly fit to
    estimate volumetric soil moisture content. The goal of hardware development is
    to make each gadget work together as intended. For example, the Arduino UNO is
    seen in Figure 8, linked. Hardware package devices are composed of 5 circuits,
    including an Arduino UNO connected circuit board to the ATH10 temperature and
    humidity sensor LoRaWAN RFM 95 model device location sensor and version 2.1 of
    the soil moisture sensor model. Fig. 10. Implemented nodes transmitter reciever
    output Show All F. Visual Implementation An information system is a webpage that
    converts different values to be shown in graphical form. ThingSpeak is an application
    that gathers data from client nodes to analyze the findings and display them on
    a webpage. The ThingSpeak is an open-source IoT platform for data collecting,
    processing, visualization, and device management. Figure 9 depicts a dashboard
    panel that displays the environment values as a consequence. The graph indicates
    the serial monitoring of the parameters as time and date variants. Farmers can
    evaluate the environment in the cultivation plot based on the values collected
    and look at various values to make knowledgeable and ideal judgments for the growth
    and maintenance of crops. The test request performance package from the test data
    and the graph demonstrate that distance impacts the network connection request;
    the longer the distance, the more times the connection request will need to be
    made before the data is sent, resulting in delays. Fig. 11. Flow chart of IOT
    sytem for smart agriculture Show All Fig. 12. Transmitter node data with serial
    monitoring Show All Conclusion This paper proposes a model for agriculture improvement
    based on LoRaWAN technology with an IoT platform. The data is collected through
    sensors and is processed. LoRa has become a suitable technology for agriculture
    since it can increase scalability to put IoT devices in farm areas. These end
    devices of LoRa can overcome bandwidth limitations and are economical and energy
    efficient. Temperature, humidity, and soil moisture are collected and monitored
    variables. A user (farmer) can evaluate the data on a cloud platform after the
    sensors have collected the data. Authors Figures References Citations Keywords
    Metrics More Like This Application of Message Queuing Telemetry Transport (MQTT)
    Protocol in the Internet of Things to Monitor Mushroom Cultivation 2020 7th International
    Conference on Information Technology, Computer, and Electrical Engineering (ICITACEE)
    Published: 2020 Monitoring of Soil Moisture and Atmospheric Sensors with Internet
    of Things (IoT) Applied in Precision Agriculture 2020 XIV Technologies Applied
    to Electronics Teaching Conference (TAEE) Published: 2020 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IBSSC 2022 - IEEE Bombay Section Signature Conference
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intelligent Farm Monitoring System using LoRa Enabled IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '9'
  description: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the application of precise and exact amount of input level of
    water and fertilizer to the crop at the required time for increasing the yield.
    Since agriculture relies on direct rainfall than irrigation and the prediction
    of rainfall date is easily available from web source, the integration of rainfall
    prediction with precision agriculture helps to regulate the water consumption
    in farms. In this work, an edge computing model is developed for predicting soil
    moisture in real time and managing the water usage in accordance with rain prediction.
    A soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-making techniques with live environmental parameters including
    weather parameters for the prediction of soil moisture through the impact of precipitation.
    Numerous algorithms with the combination of regression + clustering are estimated,
    and it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage.
  doi: 10.1515/jisys-2022-0046
  full_citation: '>'
  full_text: '>

    "Skip to content Authenticated with University of Nebraska - Lincoln What does
    this mean? $ USD € EUR - Euro £ GBP - Pound $ USD - Dollar EN 0 University of
    Nebras... SUBJECTS FOR AUTHORS SERVICES PUBLICATIONS ABOUT Open Access Published
    by De Gruyter May 27, 2022 IoT-enabled edge computing model for smart irrigation
    system S. Premkumar and AN. Sigappi From the journal Journal of Intelligent Systems
    https://doi.org/10.1515/jisys-2022-0046 Cite this Share this 11 Abstract Precision
    agriculture is a breakthrough in digital farming technology, which facilitates
    the application of precise and exact amount of input level of water and fertilizer
    to the crop at the required time for increasing the yield. Since agriculture relies
    on direct rainfall than irrigation and the prediction of rainfall date is easily
    available from web source, the integration of rainfall prediction with precision
    agriculture helps to regulate the water consumption in farms. In this work, an
    edge computing model is developed for predicting soil moisture in real time and
    managing the water usage in accordance with rain prediction. A soil moisture prediction
    hybrid algorithm (SMPHA) has been developed that revolves around the decision-making
    techniques with live environmental parameters including weather parameters for
    the prediction of soil moisture through the impact of precipitation. Numerous
    algorithms with the combination of regression + clustering are estimated, and
    it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage. Keywords: smart irrigation; edge-based irrigation; edge computing;
    precision agriculture; soil moisture prediction; irrigation management system;
    IoT; offloading mechanism 1 Introduction It is evident that agriculture always
    has a specialized role in the anthrophonic evolution and has been serving as an
    important economic factor for the growth of a country [1]. Around 58% of the population
    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural products have declined over these years as several
    factors have influenced the crop productivity both directly and indirectly. Some
    major factors that affect the crop production are climatic changes, global warming,
    and water scarcity [2]. The agricultural land’s productivity is affected by the
    direct and indirect changes in climate [3,4]. The crop growth has been already
    affected by the changes in climate incurred by global warming. The nutrition quality
    of soil, ground water level, sea, and ocean are affected by the modifications
    in average temperature, rainfall, and extreme weather conditions such as hail
    storms, dust storms, heatwaves, etc. due to global warming [5,6]. Degradation
    of soil is primarily created by various methods including 93.7% by water erosion,
    9.5% by wind erosion, 5.9% by salinity and alkalinity, etc. Further changes in
    climate would influence adversely the crop production [7]. Since water is an indispensable
    requirement for plants and cultivation, the high level of soil is eroded and thereby
    the fertility is also declined. Due to the ever-changing climate, water scarcity
    has become a huge problem. Drought-like conditions is already formed in several
    areas and thereby the present and conventional farming practices are not suitable.
    New and unique environment preserving techniques are the need of the hour [8].
    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in technology [9]. These new improved methodologies ensure optimized
    utilization of resources, accurate forecast of water needs and environmental parameters,
    reduction of human intervention, etc. [10]. Consequently, the outcomes of crops
    in terms of yield and quality are higher with cost-effective methods. One such
    booming technology is the Internet of things (IoT) [11]. IoT is the collection
    of components embedded in the sensor for measuring and transferring data via network
    devices as sensed from pumps and tractors to weather stations. Primarily, IoT
    deals with the transmission and reception of data related to farms through devices
    using the Internet for prediction and providing decisions to the farmers. IoT-based
    methodologies has brought a changeover in agricultural patterns and farming approaches
    [12]. IoT devices can gather information about soil moisture, chemical properties,
    dam levels, livestock health, and weather details in real time. The information
    acquired from IoT devices facilitates the farmers in tracking farms periodically.
    Farmers can save time and money by responding faster to farm conditions. Cloud
    computing models integrated with on-field agricultural sensors need to be incorporated
    for tackling the issue of processing huge voluminous data. One of the major challenges
    of IoT is the processing of huge datasets in a sequential way. Some of the key
    factors that need to be focused on this process are as follows: information about
    the type and nature of data, the way of acquiring the data, etc. The preliminary
    stage comprises acquiring the data and ingesting the data to the system. Substantial
    cognizance of data are achieved as the data pass through all the gateways where
    it is cleansed and transformed before entering into the system. In the near future,
    dynamic prediction of soil moisture and precipitation techniques are to be developed
    for smart irrigation systems. Therefore, a system is developed for efficient and
    optimal utilization of fresh water in irrigation along with drip irrigation system.
    It aids in finding which one of the plants fails to get sufficient water. When
    the water supply is provided the next day, this delay should not disturb the system.
    It becomes important for the farmers to understand the optimal usage of water
    and fertilizers to bring out sustenance in the agricultural industry. Therefore,
    processing must be done for analyzing the data, so that patterns can be analyzed
    and planning can be done for the long term, accordingly. Hence, it gives a broad
    vision in deciding where the processing is to be done exactly. Therefore, it is
    obvious that not all data are crucial, and it provides a clear view of which data
    need to be stored, discarded, and retained for both long-term and short-term purposes.
    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are actually highlighted. The poor quality of Internet access in
    developing nations makes the implementation quite challenging. An applicable solution
    to solve this problem is through edge computing where the essential data could
    be offloaded from the cloud over the edge of the cloud, and this is the exact
    point where the approach of smart sensing with edge computing gets in. With the
    purpose of broadening the potential of edge computing and using it in the agriculture
    domain, a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the IoT devices deployed at the farm. Here, the data acquired
    from IoT components undergo preprocessing and ML models on the edge nodes to analyze
    and assess the appropriate results for providing the best instructions for controlling
    the actuators (e.g., light, pumps at different locations) in the farms. This article
    presents an automated system, as shown in Figure 1, to predict the soil moisture
    using the field information acquired from the self-designed sensor node deployed
    at the field and the forecast information of weather via Internet. A unique algorithm
    has been developed that revolves around the machine learning techniques for the
    prediction of soil moisture. Here, many algorithms with the combination of regression
    + clustering was estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic combinations, and therefore, it is deployed for the prediction
    of soil moisture in the proposed work. The proposed algorithm makes effective
    irrigation decisions with optimized usage of water in a more accurate and reliable
    manner. The effective decision-making refers to the process of predicting the
    rainfall, thereby reducing the water usage in advance by the proposed algorithm
    in accordance with the predicted rainy days. Through this automatic decision-making,
    over watering is avoided by saving the soil. The server-side software is developed
    with node-side connectivity using the information for visualization and decision
    support features. This proposed algorithm is implemented in edge to prove the
    efficiency of the edge server handling the automated system better than the cloud
    control. The performance of the decentralized edge-based architecture has been
    evaluated for downloading the hybrid algorithm from cloud in real time execution.
    The performance can be enhanced by adopting edge computing architecture and measured
    with the help of network parameters like latency, bandwidth, and response time.
    Edge computing capacity is also estimated using the CPU processor and memory consumption
    while executing the proposed algorithm with irrigation scheduling. Figure 1 Architecture
    of the proposed system. 2 Related work In ref. [13], a smart irrigation system
    not affected by communication disconnection and delay is developed using edge
    nodes deployed at the farms. Environmental parameters have an intricate impact
    on the plant growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation environment for comparing AI models under the same conditions.
    Due to the working of existing irrigation systems on the cloud, communication
    is instable in the concurrent evaluation of AI models. However, the instability
    does not induce an edge node in its performance. The factors such as type of plant,
    soil, climate, humidity, temperature, and soil moisture need to be considered
    for the irrigation system packed with potential smart decisions. The nature and
    type of plant, soil, and climate are queried by ontology (branch of metaphysics
    dealing with the nature of being), whereas other factors such as temperature,
    humidity, and soil moisture are sensed by the sensor network. The trained ML model
    predicts the watering decisions based on ontology and other factors as mentioned
    earlier. Smart irrigation has three modules: (i) sensor network modules that sense
    the parameters impacting the water requirement by using sensors DHT22, light sensor
    BH1750, and HL-69 hygrometer for sensing the temperature, soil moisture, light,
    and humidity in air. (ii) Edge and IoT server’s module to send and receive data
    through HTTP requests. (iii) Training module in which KNN is applied on the sample
    dataset for training and decision-making regarding the water needs. Based on the
    input values, the trained model categorizes the input into five possible classes:
    highly not needed, not needed, average, needed, and highly needed [14]. A decentralized
    smart irrigation approach is proposed for strawberry greenhouses in contrast to
    conventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale smart irrigation system in an actual strawberry greenhouse
    environment is developed after a small-scale smart irrigation networking prototype
    system and a reference architecture targeting edge data distribution for strawberry
    greenhouse applications are framed. A three-step industrial approach is formed
    for designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and keeping the corresponding data at the edge of the network at
    the same time: (i) A small-scale smart irrigation prototype solution with off-the-shelf
    hardware and software equipment is tested and evaluated on various types of plants
    for gaining useful insights for deployments on a large scale. (ii) A reference
    network architecture is designed for targeting smart irrigation and edge data
    distribution specifically for strawberry greenhouses. (iii) A large-scale system
    in an actual strawberry greenhouse environment is developed in Greece, incorporating
    the proposed reference architecture [15]. Edge computing is proposed for addressing
    the issues by taking advantage of computing resources in the edge of the network.
    The issues such as an edge mobile device make it easier to achieve low end-to-end
    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the privacy policies of its owner prior to the release of
    the data to the cloud through edge analytics. If a cloud service becomes unavailable
    due to network failure, cloud failure, or a denial-of-service attack, a fallback
    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control functions are extended to the edge nodes from the cloud
    data center. Edge nodes facilitate the timely monitoring of sensors in smart farming
    by the reduced latency and enhanced data transmission. Due to these factors, edge
    computing is applied through farming [16,17]. A three-tier open-source software
    platform we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge computing and fog computing. An network functions virtualization
    (NFV)-based approach is deployed for performing the local operational decisions
    at the edge level for mitigating the influence of network failures while using
    cloud data centers [18]. For control processing in smart farming, a platform enabling
    cost-effective sensor/actuator network based on IoT, utilizes edge computing [19,20].
    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the values given by a sensor matrix on the ground. Due to the huge
    interval in measurements (10 minutes), the model presented estimated error by
    more than 10%. This methodology has incorporated the online approach by making
    the sensors to send data every minute to edge devices without time-based interruption.
    The authors of ref. [22] applied a combinative approach of using field sensor
    network’s data along with weather forecast station’s data for the management of
    optimality in water conditions for the enhanced growth of grapes. The generated
    data are forwarded to a web server, which displays graphics without statistical
    analysis of such data. The analysis must be performed a posteriori by the user.
    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation model without acquiring any pre-processed data. A prototype application
    is developed, which gets adapted to the parameters needed in irrigation after
    a couple of human-made irrigations. With the usage of various ML algorithms, several
    tests are devised for manual and automated irrigations for the performance evaluation.
    After the evaluation using four different ML algorithms such as logistic regression
    (LR), K-nearest neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting
    regression trees (GBRT), it is found that GBRT outperforms other algorithms. To
    analyze the overall performance, a test bed for the sensor edge, mobile client,
    and the decision service on the cloud is established. Two different indoor species
    are selected as test items for the prototype, namely, Peace lily and Sardinia.
    The outcomes were quite good, and it is inferred that the prototype has learned
    the patterns of irrigation and making decisions automatically with a high rate
    of accuracy [23]. The authors from ref. [24] adopted the deep learning methodology
    for detecting the type and the category of the plant using an automated plant
    irrigation system. The water necessity of the plant is determined using the recognition
    of predefined set of plant images and data set acquired from farm. It utilizes
    the database for fetching the irrigation information after the recognition process
    is completed. Modeling the training processes are time consuming as voluminous
    set of images needs to be stored. The authors in refs [25,26] incorporated ML
    methods in the irrigation decision support model using a pre-processed irrigation
    data set. A model is developed for learning the irrigation needs of any plants
    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their precision for concluding the irrigation decisions. Manual
    irrigations are performed two times before making precise decisions. Due to the
    dynamicity in model, data processing is done progressively, and it can be applied
    to several plants having varying irrigation conditions. There is a need for the
    learning model that can be trained by itself using a comparatively lighter learning
    process using environmental parameters that do not need larger storage in the
    system but need higher computation. From the aforementioned survey for making
    a precise decision with instant computation locally, edge computing needs to be
    integrated into the irrigation system. This article is directed towards presenting
    a platform that implies IoTs and edge computing in monitoring soil moisture via
    sensors, data communication between sensors and edge devices, and an Analytics-as-a-Service
    cloud. It analyzes the collected data in the form of a density map of soil moisture
    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to the geographical point data by satellite mapping,
    and it actually denotes the point of dry area and watery area through soil moisture
    detection point. This point is averaged among areas of irrigation to be done and
    the irrigation process is controlled with prediction of rainfall using the proposed
    system. 3 The proposed system The proposed learning model for irrigation is implemented
    in a prototype IoT system that has four components: (i) Edge node layer – This
    layer consists of sensors, actuator, and two microcontrollers. In this layer,
    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water pumps to start irrigation. (ii) Edge server layer – This layer
    consists of Raspberry Pi that act as edge server and capable of multitask processing.
    Here, edge server controls the edge nodes for sending signal and receiving data
    at regular interval of time. It is also connected to the cloud server for receiving
    developed and trained machine learning model to be deployed and make irrigation
    decision for controlling edge nodes. (iii) Edge service layer – This layer is
    deployed in the edge server and it is responsible for controlling the whole system
    through a developed web dashboard. The dashboard has live feed data, control of
    edge nodes, and cloud services access. This service layer also has the control
    access of the proposed machine learning model. (iv) Cloud server layer – This
    layer composed of cloud services and cloud storage where its role is to train
    the machine learning model and store the data in database. It sends the trained
    proposed model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive interconnections in the system are shown in Figure 2. The proposed
    IoT-based smart irrigation system includes five major components: field deployed
    module, Web-based interface, Web API weather input, soil moisture prediction mechanism,
    and edge communication model. Figure 2 Components of the proposed system. 3.1
    Field deployed module In the field requirements, a wireless sensor network of
    the sensor nodes needs to be deployed as shown in Figure 3. Here, field data collection
    device accommodates four different sensors: Capacitive Soil Moisture Sensor V2.0,
    DS18B20 Water Proof Temperature Sensor Probe for soil temperature, ultraviolet
    (UV) Light Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511
    Analog Output Ultra-Violet Light Sensor Module. An Arduino Mega connected to Raspberry
    Pi 4 Model-B read, the output of these sensors where the program is developed
    in Python for the Pi model to fetch the hourly data from sensors and store the
    data in MongoDB [27] database. It is then synchronized with the server database
    using the developed web service. A Wi-Fi-enabled Arduino controls the water pump
    connected to a relay switch. Figure 3 Real-time prototype of the proposed edge
    model. For the real time monitoring, a trigger is made for controlling the web
    service from the responsive web-based interface. The irrigation decisions are
    checked periodically by the proposed model performed in the server. The water
    pump is actuated, and irrigation process is started only if the server makes any
    irrigation decision. A wireless sensor network (WSN) [28] scenario with ZigBee
    [29] technology can be implemented for a large farming area in which several sensor
    nodes can be affixed in the specified area and every sensor node possesses sensors
    similar to a standalone device. Then, the Arduino Mega reads the sensor output
    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it in MongoDB locally and also for transferring the
    data via web service to the edge server. 3.2 Web-based interface The proposed
    framework consists of a web-based application to allow farmers visualize the growing
    data and interacting with the garden in real time. In addition, users can also
    be able to examine and analyze the historical growing data, if needed, through
    functionalities such as irrigation control, motor control prediction model deployment,
    and manual data entry implemented in this web application. Here, Node.js was chosen
    for developing the web application [30,31], while MongoDB [27] was utilized as
    the database system. Data stored in the database, which is deployed in the cloud,
    will be used for further data analysis in the future. The web application’s functions
    are designed following a software design pattern called model-view-controller
    (MVC) as shown in Figure 4. In the frontend, ChartJS is used to represent data
    through dynamic charts. The web application is also used as an interface to manage
    all the physical devices/actuators in the garden. To deploy the web-server to
    the cloud, a cloud platform as a service (PaaS), namely, Heroku, had been utilized.
    Heroku is a cloud platform that provides platform as a service (PaaS), facilitates
    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and functionality by integrating several add-on services.
    The field data are sent to the server by Raspberry Pi using this web service.
    This web service manages the network outage/fluctuation during data synchronization
    from the field device to the server by taking the help of flag settings at the
    database level. The interface facilitates the scheduling of irrigation along with
    visualizing real time sensors and predicted soil moisture for upcoming days and
    precipitation information. By using the denoted threshold value of soil moisture
    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold value depending on the predicted pattern of soil moisture
    and precipitation information. The process of irrigation is initiated automatically
    and stopped after the specified threshold value generated from the proposed algorithm
    of soil moisture when it is reached. Figure 4 Web interface for the irrigation
    system. 3.3 Web API weather input The weather prediction data are collected by
    a web service developed in Python. The forecast data such as humidity, temperature,
    ultra violet index, precipitation, and cloudiness of web forecasting portals like
    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted information in HTML, XML, or JSON format. The predicted
    data with JSON format are read by the developed web and stored in database at
    the edge server, which is concerned in the prediction algorithm. Also, these data
    are utilized as testing dataset in the ML model for predicting the soil moisture.
    3.4 Soil moisture prediction mechanism An algorithm for predicting the soil moisture
    based on data derived from field sensors and weather forecasting using the combination
    of supervised and unsupervised machine learning techniques has been developed
    underpinned by regression algorithms and k-means clustering for estimating the
    difference/change in soil moisture owing to weather conditions. Many regression
    algorithms are compared against each other and infusing each of them with k-means
    to check the preciseness in mean square error (MSE), R2, accuracy and mean absolute
    percentage error (MAPE) for prediction of soil moisture of upcoming days with
    the help of sensor data and weather forecasting days. The information about soil
    moisture for the upcoming days and suggestions for irrigation in accordance with
    the prescribed levels of soil moisture and predicted precipitation values, thereby
    saving energy and water, is presented by the algorithm. The information generated
    from the device and the predicted values from the algorithm soil moisture prediction
    hybrid algorithm (SMPHA) are stored in the server. 3.5 Edge communication model
    The communication protocols in the proposed framework are flexible and transparent
    in nature for accepting both wired and wireless methodologies. For the maximum
    utilization of potentiality in edge computing components, the communication among
    various components in the edge-IoT system requires intense probing by using the
    versatility among the devices in network edges. For transferring the data gathered
    from pivot sensors, a communication technology such as Zigbee [35] is needed for
    the irrigation systems. Therefore, the communication component in the proposed
    work is classified into three main areas as shown in Figure 5. The Message Query
    Telemetry Transport (MQTT) protocol is used for the communication in the proposed
    system. The analysis in ref. [36] presented seven IoT messaging protocols (MQTT,
    CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols that
    play a major role in smart farming. The authors have concluded that MQTT proved
    to be the most secure protocol after probing all the protocols with respect to
    latency, energy and bandwidth requirements, throughput, reliability, and security.
    Moreover, MQTT is secure in both end-to-end architecture and gateway server architecture.
    In an MQTT setup, a MQTT server termed as MQTT broker executes on the IoT solution
    [37]. Under a common identifier, a “publisher” and a “subscriber” link among themselves
    to this broker. In the IoT solution, publishers and subscribers are the IoT devices
    and IoT hubs or control devices, respectively. When the publishers have new data
    for recording, the data are published to the broker. The broker then flags that
    it has new publisher data, and the corresponding data are read by the subscriber.
    Then, the subscriber analyzes the data and reacts accordingly. Figure 5 Proposed
    edge communication model. The first level accomplishes with connecting the end
    users to system with the help of mobile or web-based applications through the
    Internet. The next level (cloud computing server) deals with the connection of
    web server and MQTT broker for directing the user requests and other components
    at the edge landscape or from the farms to the right cloud-based services like
    displaying the real time status of the farm for the users, triggering a new deployment
    of the updated ML model to the corresponding edge node. The third level (farming
    area) is directed toward the deployment of sensors and IoT devices (actuators)
    for communicating with other components in the entire system. 4 Deployment of
    soil moisture prediction hybrid algorithm The watering mechanism of the plant
    has different approaches in the proposed model. Primarily, the system is trained
    with manual irrigations datasets during the process of learning with respect to
    suggestions defined by agronomists. The model is trained to learn the needs of
    irrigation in the first level of deployment in cloud without the inclusion of
    pre-processed data. After acquiring the required data and training, the proposed
    system is initiated to grasp the plant’s watering needs by undergoing plenty of
    manual irrigations. Thereafter, manual irrigation is not required and the system
    makes automated decisions in watering using the gathered data and the application
    of ML methods. The proposed model then decides the irrigation strategies automatically
    using ML methods without the need including collected datasets in the automatic
    irrigation process. The proposed model can be improved through the learning process
    when the number of precise irrigation inputs is provided to the model at each
    stage of training. The decision-making procedure is developed with two modules
    for irrigation strategies according to the soil moisture prediction for upcoming
    days. The first module deals with training the model in cloud with manual irrigation
    datasets through steps such as data collection, data preprocessing, training,
    and model development. The system acquires values of air temperature (TH), soil
    temperature (SMT), soil moisture (SM), humidity (HU), and ultraviolet rays (UV)
    periodically from the physical environment in the data collection stage, which
    is essentially required for arriving at the watering decisions. Also, the time
    of performing the manual irrigation is recorded in the database. These data are
    timestamped and stored in as datasets to aid in making decisions for knowing the
    time of irrigation. In the next step of pre-processing, inconsistencies are eliminated
    and outliers caused by sensor errors are detected from the irrigation dataset,
    thereby helping in the removal of broken data. The training stage involves the
    application of supervised machine learning (ML) algorithms. Here the regression
    algorithms such as support vector regression (SVR), multiple linear regression
    (MLR), lasso regression (LR), decision tree regressor (DTR), random forest regressor
    (RF), and XG-boost regressor (XB) techniques are used for the deployment. The
    regression algorithms are trained using the collected datasets. Finally, through
    training, regression models are created, namely, SVR model, MLR model, LR model,
    DTR model, RF model, and XB model that are been combined with the second module
    for decision-making. The second module caters to the prediction of irrigation
    for upcoming days by infusing the weather data as an input to the regression trained
    models. The live datasets from the weather API for future prediction of soil moisture
    variable are used. The dependent variables from weather forecast data like temperature
    (TH), humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the
    aforementioned model for soil moisture prediction. Then, the regression trained
    model is evaluated and deployed using the weather testing data for the prediction
    of soil moisture in accordance with the precipitation. After the prediction of
    data for the upcoming days, these developed regression models are combined with
    unsupervised ML algorithm named k-means clustering for estimating the changes
    incurred in soil moisture prediction due to the impact of weather conditions.
    Further, each regression models with k-means algorithm are evaluated for performances
    in terms of irrigation decision-making process as shown in Table 1. The combined
    algorithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The estimation and computation of these parameters are detailed
    by the authors in ref. [38]. Table 1 Comparison of performance metrices obtained
    from various ML algorithms Algorithms used Accuracy R 2 MSE MAPE (%) Execution
    time Power (J) SVR + k-means 0.96 0.96 0.25 1.98 0.06078 1164.85 MLR + k-means
    0.94 0.88 0.31 2.15 0.02075 429.30 LR + k-means 0.95 0.94 0.32 2.23 0.02482 351.35
    DTR + k-means 0.93 0.95 0.29 1.62 0.15687 914.70 RF + k-means 0.95 0.91 0.27 1.57
    0.16745 1475.13 XB + k-means 0.97 0.98 0.20 1.08 0.03547 537.87 XGBoost + k-means
    (XB+k-means) approach provides more accuracy with less MSE comparatively and also
    the R2 with 98% in soil moisture prediction using combined approach is given in
    Table 1. It is evident that the proposed combination performs better when compared
    to other regression + k-means-based approaches. XB + k-means-based hybrid machine
    learning algorithm is applied in irrigation planning module on account of aforementioned
    performance metrices of ML. Although it performs moderately in terms of execution
    time and power usage, it is selected for the deployment in edge computing as it
    has better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil moisture for the upcoming days from the proposed algorithm
    (XB+k-means) is nearer to the actual value as shown in Table 2, and hence, XB+k-means
    is selected for the implementation of SMPHA in edge-based irrigation scheduling.
    Table 2 Comparison of predicted SM value with actual SM value Date Average SM
    value from sensor Average predicted SM value (XB+k-means) 28-09-2021 35.23 34.04
    29-09-2021 36.41 37.20 30-09-2021 31.57 30.46 01-10-2021 34.66 33.15 02-10-2021
    36.73 37.12 03-10-2021 32.88 33.01 4.1 Hardware setup IoT system is crucial to
    handle, collect, and transfer the data to the computing nodes at the edge or in
    the cloud. These devices are connected to the edge nodes through wireless communication
    protocols like ZigBee. It is used in reducing the latency and loss of data. An
    Arduino micro-control unit controls the combined IoT sensors and actuators at
    the same part of a field into a cluster, each connected to a Raspberry Pi that
    acts as an edge node in processing the gathered data and controlling the actuators.
    For example, Figure 2 shows an edge architecture with a Raspberry Pi connected
    to two components: Arduino Uno and Arduino Mega units via ZigBee connection. The
    first Arduino Mega node is responsible for collecting data from sensors and the
    second one is for controlling the actuators in the field. Depending on the sensor
    type with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling Arduino uno joins with actuators in the field and controls
    (turn on/off) them in accordance with upper layers (from the edge web server).
    The trained (cloud) and deployed ML model in edge nodes provides the necessary
    instructions to the edge nodes. 4.2 Web layer setup The deployment of web server
    assists the user in planning and managing the irrigation system. It visualizes
    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live irrigation with real time updates in the form of various
    charts. In accordance with the selected field, the web application redirects the
    user to the field’s dashboard as shown in Figure 4. The dashboard consists of
    field parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer. These signals are denoted as switch buttons, and each switch
    controls (turn on/off) a particular kind of actuator (for instance, water pump
    to start and stop the irrigation). The user interface facilitates remote controlling
    of the field by just clicking on the buttons as shown in Figure 4. 4.3 Edge layer
    setup The edge node acts as a computing center where incoming data are analyzed
    and fed as the input vector to the ML model for processing and to return the control
    signals for activating or deactivating the actuators placed at the farm. Edge
    node processes the physical data (real time) at every end device such as the collected
    and processed data via the Raspberry Pi nodes presented in the proposed scheme.
    The prediction model is designed using TensorFlow API and trained, tested on Google
    Colab in this work. Amazon Web Service (AWS) offers a library named Boto3 having
    many APIs to upload and download objects. After the development of model, it is
    transferred to Amazon S3, a service provided by AWS. The edge node utilizes the
    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is delivered based on real time data analysis at the edge node and
    transmitted to Arduino nodes in the fields landscape immediately for controlling
    the actuators. In another flow, the data collected from sensors are filtered so
    as to keep only the modified data at the edge node before being sent back for
    mitigating the communication cost to the database in the cloud. These data are
    used in the updation of the ML model to enhance its efficiency. 4.4 Analytics
    setup The main goal of this experiment lies in gathering the various physical
    parameters of a farming land via sensors and utilizing the fetched data along
    with weather forecast information for developing an algorithm using hybrid machine
    learning approach to infuse higher accuracy in predicting the soil moisture for
    the upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation, the algorithm provides a predictable estimate of soil moisture
    with the assistance of various statistical measures as shown in Table 1. The measures
    are adopted for estimating the appropriateness and error rate of the proposed
    algorithm. It is inferred from the experiment that, optimal irrigation is feasible
    using a good estimation (close to the actual value) of the soil moisture (Table
    2), with the support of field data and forecast information, thereby utilizing
    the natural rain efficiently. The SMPHA ML model is interdependent on dynamic
    changes in weather environment where the models deployed on edge nodes need to
    change the controls accordingly after model gets trained continuously. For the
    process of retraining, the trained model needs to be updated. The parameters such
    as TM, HU, ST, UV, SM about grown plants are logged for the training purpose,
    and these generated datasets are recorded from the already developed manual mode
    system [39]. The growth of the Indian Mundu Chilli [40] is taken for the observation
    from the first stage to the last grown stage for 95 days. While retraining the
    model, the training is carried in cloud without causing effect to the functionalities
    at edge nodes. A signal is transferred to the corresponding edge server for triggering
    the task of updating the SMPHA model from the web server. At that time, the newly
    trained model is downloaded to replace the existing one at the considering edge
    server. From then, the ML model at the edge server is called to be updated with
    the real-world knowledge and is ready for its garden controlling tasks (to apply
    in the next farming season). 4.5 Work flow The flowchart in Figure 6 depicts the
    working of the proposed system based on the decision support system that is beneficial
    for irrigation needed for the growth of vegetables. The chilli plant is grown
    in a growbag attached with sensors and Pi as shown in Figure 3 and monitored for
    95 days of data collection. To bring out optimality in the irrigation system,
    features relating to climate, soil, crop, and field infrastructure are to be considered.
    To provide several recommendations in the production of vegetables, decision support
    systems (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of soil moisture differences (SMD) model [41] developed
    for soil moisture prediction. The threshold values of soil moisture are used in
    the SMD model where the system schedules the irrigation date based on the predicted
    soil moisture and weather forecast (precipitation) information automatically using
    SVR+ k-means modeling. Therefore, in the extension of the aforementioned work,
    further more number of sensors are used to log soil moisture value, which is averaged
    in the proposed model. This model is developed in two divisions of flowchart as
    shown in Figure 7, where both are interconnected. It is observed that the prediction
    of XB + k-mean approach provides better results as presented in Table 2. Figure
    6 Flow chart of the proposed edge model. Figure 7 Average response time with 10
    test scenarios. The first phase of the flowchart describes the hybrid algorithm
    for the soil moisture prediction (SMPHA) using the combination of XB + k-means
    algorithm. During the data collection step, the sensor data for the parameters,
    namely, TM, HU, ST, UV, and SM, are collected. During preprocessing, null values
    and outliers are removed and the preprocessed data are used to train the XG-Boost
    model. The developed model is then trained with variables of live weather features
    (TM, HU, UV, PC) obtained from Weather API for the prediction of SM data. These
    data are given as input to k-means clustering algorithm to predict the soil moisture,
    which is defined as SMPHA value to be infused in the next phase of the flowchart.
    The second phase of the flowchart defines the automatic irrigation planning setup.
    The setup starts obtaining the soil moisture maximum (SMMax) and soil moisture
    minimum (SMMin) values in the dashboard for setting the maximum and minimum level
    of soil moisture. Then, the current soil moisture (CuSM) is sensed and compared
    against the threshold SMMin. If the resulting value is less than SMMin, the process
    proceeds with SMPHA. On the contrary, it stops the irrigation process by sending
    0 to the relay. In SMPHA, the nearest precipitation date is selected and it is
    assigned to the predicted soil moisture (PSM). The SMMax is decided by finding
    the minimum of (PSM + SMMin, SMMax), and the predicted SMMax is further checked
    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start irrigation. If the condition fails, then it sends
    0 to stop irrigation. The process of automatic irrigation ends by forecasting
    the irrigation schedule in accordance with the live weather parameters. 5 Experimental
    setup and evaluation The test bed is developed and deployed, and the data are
    collected for the analysis in irrigation management. Here, Heroku cloud platform
    is used to deploy the cloud web server. The same cloud is also installed at a
    local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n connections
    to denote the edge nodes. JMeter application is used to get sequential accesses
    to the web page from various users for evaluating the network parameters. The
    specification of these servers is given in Tables 3 and 4. Table 3 Configuration
    of raspberry Pi CPU Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC
    @ 1.5 GHz RAM 8 GB LPDDR4-3200 SDRAM Network 2.4 GHz and 5.0 GHz IEEE 802.11ac
    wireless, Bluetooth 5.0, BLE, Gigabit Ethernet Pinboard 8 GB LPDDR4-3200 SDRAM
    Operating system, language Raspbian , Python 3 Table 4 Configuration of Heroku
    cloud Country United states Service Amazon web service S3 Processor 2.4 GHz Intel
    Xeon E5-2676 v3 Processor CPU Power 8 GB Virtual CPUs 3–5 We evaluated the performance
    of the proposed IoT-based smart farm on two different platforms, namely, in the
    cloud and on the local computer to show the feasibility and the benefit of the
    edge computing scheme. Further many parameters are considered for evaluation and
    discussed in the next section to show that edge deployment is better than cloud.
    5.1 Evaluation A hybrid machine learning methodology is used in evaluating the
    first stage of the proposed model. The predicted value of the soil moisture is
    better in terms of their accuracy and error rate. From the comparison of the other
    ML algorithms as shown in Table 2, XB + k-means performs better and taken further
    to be deployed in edge and cloud to check its efficiency with each other. Therefore,
    for analyzing the efficiency of the edge server in accordance with the proposed
    hybrid algorithm SMPHA is evaluated in terms of the time taken to train the ML
    model in edge and cloud. In this experiment Raspberry Pi is used to train the
    SMPHA model with 196,400 rows, that is, input data sample size and takes around
    1,710,000 ms (approximately 28.5 min). The same model when it is trained in Google
    Colab cloud environment, it takes 204,000 ms (approximately 3.4 min) as depicted
    in Table 5. The main purpose is to run the trained model on edge not to train
    the model at edge. So due to the lack of computing capability at the edge, it
    takes more time to train the model, but it can be ignored as it does not affect
    the purpose of the proposed model. Here, edge is introduced to obtain the task
    of computing from the cloud (i.e., offloading the task) by making the system more
    edge-oriented deployment. It can be accomplished rapidly as it requires only 14
    s to download a trained SMPHA model from the cloud to the edge node with a size
    of 3,101 kb as given in Table 5. The time to download varies according to the
    size of the trained model. So, from this process it can be inferred that downloading
    the trained model saves time when compared to training the model at the edge.
    Through this in real time, deployment of the trained SMPHA model in edge is better
    compared to deployment in cloud services. Furthermore, network parameters like
    latency, throughput, bandwidth, and response time are adopted to measure the performance
    improvements in edge computing. Table 5 Comparison of model training time Edge
    Cloud Model training time 28.4 min 3.4 min Downloading time Not applicable 14
    s The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The latency of an application is the product of two factors: computing
    latency and transmission latency. The time spent on data processing and transmission
    between end devices to cloud servers is termed as computing latency and transmission
    latency, respectively. The computational capacity of the system decides the computing
    latency as the network servers possess a considerable amount of capacity to make
    the data processing faster, whereas the sensors come with limited computing capacity.
    The latency in transmission is increased by the end devices and cloud servers.
    Bandwidth: As large number of sensors are deployed in IoT, data generated would
    be huge that consumes an intense range of bandwidth and leads to several problems
    such as delay in transmission and loss of packets. It becomes unacceptable for
    the data to be transferred directly to cloud servers without applying compression.
    Therefore, data preprocessing and aggregation are needed for IoT gateways before
    redirecting them to remote cloud servers. Then, the issue to be confronted is
    to control the traffic flow by migrating data processing and aggregation tasks
    optimally to decrease the bandwidth needs of the end users while maintaining the
    data quality. Response time: The total response time is calculated by adding up
    transmission and processing time. The local deployment of the proposed model for
    controlling IoT-based irrigation are deployed on two modes: (i) Cloud mode: The
    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to manage the irrigation process. The data are stored and processed
    at the cloud server itself where it uses Heroku platform. (ii) Edge mode – Raspberry
    Pi is deployed as an edge server that involves in processing of the SMPHA model
    controlling the IoT sensor nodes. Here, the data are stored and processed locally
    within the edge servers. This SMPHA model from both the edge and cloud does the
    job of controlling the actuators to initiate and quit the working of water flow
    motors. Through this deployment in both the environments, performance of edge
    server and cloud server can be checked in terms of latency, throughput, bandwidth,
    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is not feasible to calculate while deploying in real time,
    so the aforementioned scenarios of two modes are virtually created by generating
    many request and response threads between the servers. This sampling, load test,
    and distributed testing are conducted through JMeter application [43] and also
    verified with Wireshark [44] in cloud servers. The test scenario is created here
    by data of sending and receiving sampling data between cloud to IoT sensors and
    between Edge to IoT sensors. The sampling data considered in this work refer to
    the approximate number of requests generated by Arduino to cloud and Arduino to
    Raspberry Pi that are calculated in real time. The test scenario is divided into
    10 days of sampling data collected for each day. The evaluation results are depicted
    for latency and response times in 10 days perspective. In latency parameter, edge
    service has decreased by an average of 77.85% time compared to the with cloud.
    In the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud service. In throughput calculation, sampling data are calculated
    for an hourly basis for the 10 hours data in a day. From the hourly comparisons
    of throughput value, edge outperforms with 67.17% high Mbps usage. Through this
    analysis as shown in Table 6, it is evident that the proposed edge computing methodology
    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach. Figure 8 Average latency with 10 test scenarios. Figure 9 Average throughput
    value with 10 h test scenarios. Table 6 Performance metrices for cloud and edge
    services Performance metrices Cloud service Edge service Throughput (Mbps) 0.04944
    0.08265 Latency (ms) 1415.8 313.6 Response time (ms) 1519.6 393.8 Bandwidth (bps)
    86 1,365 Finally, to illustrate the efficiency of resource management in edge
    computing, CPU and memory utilization are considered for the analysis as both
    factors rely on the service execution model and the computational needs of the
    services being fired from off-loaders. Figure 10 depicts the utilization of CPU
    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of SMPHA model on it. As shown in Figure 10, the SMPHA model affects
    the CPU of the Raspberry Pi node significantly as it consumed around 41.2% of
    the CPU compared to only 3.5% when it does not host the SMPHA model. However,
    the memory (RAM) utilization in both the cases (with and without deployment of
    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have much difference in with and without SMPHA. It is worthwhile to note
    that, the CPU utilization is still much lower than the 50% of total CPU capacity
    in Raspberry Pi. Therefore, it becomes feasible for adopting edge server implementation
    in the proposed irrigation system. Figure 10 CPU and memory utilization with and
    without SMPHA. 6 Conclusion This article proposed a novel approach to edge-based
    irrigation system to facilitate decision-making on watering the plants on scheduled
    time. The proposed approach applying IoT with an edge computing framework enables
    the farming system to adapt to the changes in environmental conditions automatically
    and efficiently. The process of automatic irrigation regulates irrigation according
    to the live weather parameters for forecasting the irrigation process. Soil moisture
    prediction was performed using major regression algorithms that are again combined
    with k-means clustering for estimating the changes incurred in soil moisture prediction.
    These techniques were compared through metrics such as MAPE, MSE, speed, and power
    consumption from which XB + k-means was found to perform better. The XB + k-means
    algorithm was further used for the implementation of decision mechanism on the
    developed edge computing model. The proposed edge model saves the data communication
    cost and reduces the response time of IoT services. It can be deployed on existing
    devices on the network edges serving as edge nodes, thereby reducing the overall
    implementation cost of a large-scale IoT system. The edge-based approach was found
    to perform better than the cloud-based approach in terms of response time, latency,
    throughput, and bandwidth usage. Finally, the edge model was analyzed through
    CPU and memory usage while running with and without the algorithm. In both cases,
    the memory utilization is almost lower to total available resource of the edge
    device. From this, edge device can allocate its remaining resource for other computing
    services, which increases the efficiency of edge computing device. The number
    of end edge nodes can be increased according to the field area and then to check
    the potency of the system. Conflict of interest: The authors declare no conflict
    of interest. Data availability statement: All data that support the findings of
    this study are included within the article. References [1] India: Issues and Priorities
    for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/2012/05/17/india-agriculture-issues-priorities.Search
    in Google Scholar [2] India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.Search
    in Google Scholar [3] Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR,
    Baylis M, et al. Scientists’ warning to humanity: Microorganisms and climate change.
    Nature Rev Microbiol. 2019;17(9):569–86. 10.1038/s41579-019-0222-5. Search in
    Google Scholar PubMed PubMed Central [4] Huong NTL, Bo YS, Fahad S. Economic impact
    of climate change on agriculture using Ricardian approach: A case of Northwest
    Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. 10.1016/j.jssas.2018.02.006.
    Search in Google Scholar [5] Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A,
    Malyan SK. Global warming impacts of nitrogen use in agriculture: An assessment
    for India since 1960. Carbon Management. 2020;11(3):291–301. 10.1080/17583004.2020.1752061.
    Search in Google Scholar [6] Sarkar S, Chatterjee S, Misra S. Assessment of the
    suitability of fog computing in the context of internet of things. IEEE Trans
    Cloud Comput. 2018;6(1):46–59. 10.1109/TCC.2015.2485206. Search in Google Scholar
    [7] Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food
    security and food production systems. In: Field CB, Barros VR, Dokken DJ, Mach
    KJ, Mastrandrea MD, Bilir TE, et al., editors. Climate Change 2014: Impacts, Adaptation,
    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of the Intergovernmental Panel on Climate
    Change Cambridge, United Kingdom: Cambridge University Press and New York, NY,
    USA; 2014. p. 485–533.Search in Google Scholar [8] Lal R. Adaptation and mitigation
    of climate change by improving agriculture in India. In: S. SherazMahdi (Ed.),
    Climate Change and Agriculture in India: Impact and Adaptation. Cham: Springer
    International Publishing; 2019. p. 217–27. 10.1007/978-3-319-90086-5_17Search
    in Google Scholar [9] Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research
    on implementation and deployment of IoT projects in smart cities. Hershey: IGI
    global, 2019. 10.4018/978-1-5225-9199-3Search in Google Scholar [10] Baylis A.
    Advances in precision farming technologies for crop protection. Outlooks Pest
    Manag. 2017;28(4):158–61. 10.1564/v28_aug_04Search in Google Scholar [11] Mulla
    D, Khosla R. Historical evolution and recent advances in precision farming. Soil-Specific
    Farming Precision Agriculture. Boca Raton: CRC Press; 2015. 10.1201/b18759-2Search
    in Google Scholar [12] Dutta L, and Basu TK. Extraction and optimization of leaves
    images of mango tree and classification using ANN. IJRAET 2013;1(3):46–51. Search
    in Google Scholar [13] Kawai T, Mineno H. Evaluation environment using edge computing
    for artificial intelligence-based irrigation system. 2020 16th International Conference
    on Mobility, Sensing and Networking (MSN). Tokyo, Japan: IEEE; 2020. p. 214–9.
    10.1109/MSN50589.2020.00046Search in Google Scholar [14] Munir MS, Bajwa IS, Ashraf
    A, Anwar W, Rashid R. Intelligent and smart irrigation system using edge computing
    and IoT. Complexity. 2021;2021:1–16. 10.1155/2021/6691571Search in Google Scholar
    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in strawberry greenhouses. Comput
    Netw. 2020;167:107039. 10.1016/j.comnet.2019.107039Search in Google Scholar [16]
    Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.
    10.1109/MC.2017.9Search in Google Scholar [17] Shi W, Dustdar S. The promise of
    edge computing. Computer. 2016;49(5):78–81. 10.1109/MC.2016.145Search in Google
    Scholar [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha
    Rodrigues G, Saquette LR, et al. Low-cost fog computing platform for soil moisture
    management. In: 2020 International Conference on Information Networking (ICOIN).
    Barcelona, Spain: IEEE; 2020. p. 499–504. 10.1109/ICOIN48656.2020.9016572Search
    in Google Scholar [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M,
    Mora-Pascual, J, Mora-Martínez, J. Developing ubiquitous sensor network platform
    using internet of things: application in precision agriculture. Sensors. 2016;16(7):1141.
    10.3390/s16071141Search in Google Scholar PubMed PubMed Central [20] Xu X, Liu
    X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement for smart
    cities in edge computing. IEEE Internet Things J. 2020;7(5):4084–91. 10.1109/JIOT.2019.2959124Search
    in Google Scholar [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement
    scheduling and estimation using compressive sensing. In: 2012 ACM/IEEE 11th International
    Conference on Information Processing in Sensor Networks (IPSN). Beijing, China:
    IEEE; 2012. p. 1–11. 10.1145/2185677.2185679Search in Google Scholar [22] Kameoka
    T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart sensing in
    a Vineyard for advanced viticultural management. In: Proceedings of the 2014 International
    Workshop on Web Intelligence and Smart Sensing. Saint Etienne France; 2014. p.
    1–4. 10.1145/2637064.2637091Search in Google Scholar [23] Cagri Serdaroglu K,
    Onel C, Baydere S. IoT-based smart plant irrigation system with enhanced learning.
    In: 2020 IEEE Computing, Communications and IoT Applications (ComComAp.) Beijing,
    China: IEEE; 2020. p. 1–6. 10.1109/ComComAp51192.2020.9398892Search in Google
    Scholar [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated
    plant recognition using deep learning. In: Proceedings of the 10th International
    Conference on Computer Modeling and Simulation - ICCMS2018. Sydney, Australia:
    ACM Press; 2018. p. 87–91. 10.1145/3177457.3177506Search in Google Scholar [25]
    Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying machine
    learning on sensor data for irrigation recommendations: Revealing the agronomist’s
    tacit knowledge. Precision Agricult. 2018;19(3):421–44. 10.1007/s11119-017-9527-4Search
    in Google Scholar [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A.
    IoT and machine learning approaches for automation of farm irrigation system.
    Proc Comput Sci. 2020;167:1250–7. 10.1016/j.procs.2020.03.440Search in Google
    Scholar [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases.
    Int J Scientific Eng Res. 2016;7(5):1035–7. Search in Google Scholar [28] Ojha
    T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture: The state-of-the-art
    in practice and future challenges. Comput Electr Agricult. 2015;118:66–84. 10.1016/j.compag.2015.08.011Search
    in Google Scholar [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara
    MA. Automated irrigation system using a wireless sensor network and GPRS module.
    IEEE Trans Instrument Measurement. 2014;63(1):166–76. 10.1109/TIM.2013.2276487Search
    in Google Scholar [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT
    system design with real time stream processing and data flow integration. In:
    2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok, Thailand: IEEE;
    2019. p. 1–5. 10.1109/RI2C48728.2019.8999968Search in Google Scholar [31] Lv H,
    Wang S. Design and application of IoT microservices based on Seneca. USA: DEStech
    Transactions on Computer Science and Engineering, (icte.). 2016. 10.12783/dtcse/icte2016/4814Search
    in Google Scholar [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing
    using AES under HEROKU cloud. In: 2018 27th Wireless and Optical Communication
    Conference (WOCC). Hualien: IEEE; 2018. p. 1–5. 10.1109/WOCC.2018.8372705Search
    in Google Scholar [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural
    model for a high-performance fog/edge/cloud IoT platform. In: 2019 IEEE 5th world
    forum on internet of things (WF-IoT.) Limerick, Ireland: IEEE; 2019. p. 633–8.
    10.1109/WF-IoT.2019.8767282Search in Google Scholar [34] Weather API. Retrieved
    from https://openweathermap.org/api.Search in Google Scholar [35] Drew Gislason.
    Zigbee wireless networking, 1st ed. Newnes, London: Elsevier Publisher; 2008.
    Search in Google Scholar [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing
    for MQTT applications. In: Virvou M, Nakagawa H, Jain LC. (Eds.), Knowledge-Based
    Software Engineering: 2020. Cham: Springer International Publishing; 2020. p.
    47–59. 10.1007/978-3-030-53949-8_5Search in Google Scholar [37] Babun L, Denney
    K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms: Communication,
    security, and privacy perspectives. Comput Netw. 2021;192:108040. 10.1016/j.comnet.2021.108040Search
    in Google Scholar [38] Rastogi K, Lohani D. Edge computing-based internet of things
    framework for indoor occupancy estimation. Int J Ambient Comput Intell. 2020;11(4):16–37.
    10.4018/978-1-6684-5700-9.ch031Search in Google Scholar [39] Premkumar S, Sigappi
    AN. Functional framework for edge-based agricultural system. In: AI, Edge and
    IoT-based Smart Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.
    10.1016/B978-0-12-823694-9.00029-3Search in Google Scholar [40] Phani Kumar J,
    Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan K. Genetic divergence
    among Ramnad mundu chilli (Capsicum annuum L.) genotypes for yield and quality.
    Electr J Plant Breeding. 2021;12(1):228–34. Search in Google Scholar [41] Goap
    A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation management
    system using Machine learning and open source technologies. Comput Electronic
    Agricult. 2018;155:41–9. 10.1016/j.compag.2018.09.040Search in Google Scholar
    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy, benchmarks and standards for future
    research. Internet Things. 2020;12:100273. 10.1016/j.iot.2020.100273Search in
    Google Scholar [43] Sunardi A, Suharjito MVC architecture: a comparative study
    between Laravel framework and slim framework in freelancer project monitoring
    system web based. Proc Comput Sci. 2019;157:134–41. 10.1016/j.procs.2019.08.150Search
    in Google Scholar [44] Robert Shimonski. The wireshark field guide, 1st ed. New
    York: Syngress Press, Elsevier; 2013. 10.1016/B978-0-12-410413-6.00001-2Search
    in Google Scholar Received: 2022-01-10 Revised: 2022-02-28 Accepted: 2022-03-16
    Published Online: 2022-05-27 © 2022 S. Premkumar and AN. Sigappi, published by
    De Gruyter This work is licensed under the Creative Commons Attribution 4.0 International
    License. Download article (PDF) From the journal Journal of Intelligent Systems
    Volume 31 Issue 1 Submit manuscript Journal and Issue This issue All issues Articles
    in the same Issue Research Articles Construction of 3D model of knee joint motion
    based on MRI image registration Evaluation of several initialization methods on
    arithmetic optimization algorithm performance Application of visual elements in
    product paper packaging design: An example of the “squirrel” pattern Deep learning
    approach to text analysis for human emotion detection from big data Cognitive
    prediction of obstacle''s movement for reinforcement learning pedestrian interacting
    model The application of neural network algorithm and embedded system in computer
    distance teach system Machine translation of English speech: Comparison of multiple
    algorithms Automatic control of computer application data processing system based
    on artificial intelligence A secure framework for IoT-based smart climate agriculture
    system: Toward blockchain and edge computing Application of mining algorithm in
    personalized Internet marketing strategy in massive data environment On the correction
    of errors in English grammar by deep learning Research on intelligent interactive
    music information based on visualization technology Extractive summarization of
    Malayalam documents using latent Dirichlet allocation: An experience Conception
    and realization of an IoT-enabled deep CNN decision support system for automated
    arrhythmia classification Masking and noise reduction processing of music signals
    in reverberant music Cat swarm optimization algorithm based on the information
    interaction of subgroup and the top-N learning strategy State feedback based on
    grey wolf optimizer controller for two-wheeled self-balancing robot Research on
    an English translation method based on an improved transformer model Short-term
    prediction of parking availability in an open parking lot PUC: parallel mining
    of high-utility itemsets with load balancing on spark Image retrieval based on
    weighted nearest neighbor tag prediction A comparative study of different neural
    networks in predicting gross domestic product A study of an intelligent algorithm
    combining semantic environments for the translation of complex English sentences
    A study on automatic correction of English grammar errors based on deep learning
    A novel fingerprint recognition method based on a Siamese neural network A hidden
    Markov optimization model for processing and recognition of English speech feature
    signals Crime reporting and police controlling: Mobile and web-based approach
    for information-sharing in Iraq CRNet: Context feature and refined network for
    multi-person pose estimation Improving the efficiency of intrusion detection in
    information systems Research on reform and breakthrough of news, film, and television
    media based on artificial intelligence An optimized solution to the course scheduling
    problem in universities under an improved genetic algorithm An adaptive RNN algorithm
    to detect shilling attacks for online products in hybrid recommender system Computing
    the inverse of cardinal direction relations between regions An improved Jaya optimization
    algorithm with ring topology and population size reduction Review Articles A review
    on voice pathology: Taxonomy, diagnosis, medical procedures and detection techniques,
    open challenges, limitations, and recommendations for future directions An extensive
    review of state-of-the-art transfer learning techniques used in medical imaging:
    Open issues and challenges Special Issue: Explainable Artificial Intelligence
    and Intelligent Systems in Analysis For Complex Problems and Systems Tree-based
    machine learning algorithms in the Internet of Things environment for multivariate
    flood status prediction Evaluating OADM network simulation and an overview based
    metropolitan application Radiography image analysis using cat swarm optimized
    deep belief networks Comparative analysis of blockchain technology to support
    digital transformation in ports and shipping IoT network security using autoencoder
    deep neural network and channel access algorithm Large-scale timetabling problems
    with adaptive tabu search Eurasian oystercatcher optimiser: New meta-heuristic
    algorithm Trip generation modeling for a selected sector in Baghdad city using
    the artificial neural network Trainable watershed-based model for cornea endothelial
    cell segmentation Hessenberg factorization and firework algorithms for optimized
    data hiding in digital images The application of an artificial neural network
    for 2D coordinate transformation A novel method to find the best path in SDN using
    firefly algorithm Systematic review for lung cancer detection and lung nodule
    classification: Taxonomy, challenges, and recommendation future works Special
    Issue on International Conference on Computing Communication & Informatics Edge
    detail enhancement algorithm for high-dynamic range images Suitability evaluation
    method of urban and rural spatial planning based on artificial intelligence Writing
    assistant scoring system for English second language learners based on machine
    learning Dynamic evaluation of college English writing ability based on AI technology
    Image denoising algorithm of social network based on multifeature fusion Automatic
    recognition method of installation errors of metallurgical machinery parts based
    on neural network An FCM clustering algorithm based on the identification of accounting
    statement whitewashing behavior in universities Emotional information transmission
    of color in image oil painting College music teaching and ideological and political
    education integration mode based on deep learning Behavior feature extraction
    method of college students’ social network in sports field based on clustering
    algorithm Evaluation model of multimedia-aided teaching effect of physical education
    course based on random forest algorithm Venture financing risk assessment and
    risk control algorithm for small and medium-sized enterprises in the era of big
    data Interactive 3D reconstruction method of fuzzy static images in social media
    The impact of public health emergency governance based on artificial intelligence
    Optimal loading method of multi type railway flatcars based on improved genetic
    algorithm Special Issue: Evolution of Smart Cities and Societies using Emerging
    Technologies Data mining applications in university information management system
    development Implementation of network information security monitoring system based
    on adaptive deep detection Face recognition algorithm based on stack denoising
    and self-encoding LBP Research on data mining method of network security situation
    awareness based on cloud computing Topology optimization of computer communication
    network based on improved genetic algorithm Implementation of the Spark technique
    in a matrix distributed computing algorithm Construction of a financial default
    risk prediction model based on the LightGBM algorithm Application of embedded
    Linux in the design of Internet of Things gateway Research on computer static
    software defect detection system based on big data technology Study on data mining
    method of network security situation perception based on cloud computing Modeling
    and PID control of quadrotor UAV based on machine learning Simulation design of
    automobile automatic clutch based on mechatronics Research on the application
    of search algorithm in computer communication network Special Issue: Artificial
    Intelligence based Techniques and Applications for Intelligent IoT Systems Personalized
    recommendation system based on social tags in the era of Internet of Things Supervision
    method of indoor construction engineering quality acceptance based on cloud computing
    Intelligent terminal security technology of power grid sensing layer based upon
    information entropy data mining Deep learning technology of Internet of Things
    Blockchain in distribution network faults Optimization of shared bike paths considering
    faulty vehicle recovery during dispatch The application of graphic language in
    animation visual guidance system under intelligent environment Iot-based power
    detection equipment management and control system Estimation and application of
    matrix eigenvalues based on deep neural network Brand image innovation design
    based on the era of 5G internet of things Special Issue: Hybrid Fuzzy Systems
    for Mobile Robots and Their Applications IoT-enabled edge computing model for
    smart irrigation system Convex optimization for additive noise reduction in quantitative
    complex object wave retrieval using compressive off-axis digital holographic imaging
    Special Issue: Cognitive Cyber-Physical System with Artificial Intelligence for
    Healthcare 4.0. Auxiliary diagnosis study of integrated electronic medical record
    text and CT images A hybrid particle swarm optimization with multi-objective clustering
    for dermatologic diseases diagnosis An efficient recurrent neural network with
    ensemble classifier-based weighted model for disease prediction Design of metaheuristic
    rough set-based feature selection and rule-based medical data classification model
    on MapReduce framework Special Issue: Human-Centred Artificial Intelligence for
    Web 4.0 Construction of an IoT customer operation analysis system based on big
    data analysis and human-centered artificial intelligence for web 4.0 Human-centered
    artificial intelligence-based ice hockey sports classification system with web
    4.0 Subjects Architecture and Design Arts Asian and Pacific Studies Business and
    Economics Chemistry Classical and Ancient Near Eastern Studies Computer Sciences
    Cultural Studies Engineering General Interest Geosciences History Industrial Chemistry
    Islamic and Middle Eastern Studies Jewish Studies Law Library and Information
    Science, Book Studies Life Sciences Linguistics and Semiotics Literary Studies
    Materials Sciences Mathematics Medicine Music Pharmacy Philosophy Physics Social
    Sciences Sports and Recreation Theology and Religion Services For Journal Authors
    For Book Authors For Librarians Rights & Permissions Publications Publication
    types Open Access About Contact Career About De Gruyter Partnerships Press FAQs
    Social Facebook Instagram LinkedIn X / Twitter YouTube Winner of the OpenAthens
    Best Publisher UX Award 2022  Help/FAQ Privacy policy Cookie Policy Accessibility
    Terms & Conditions Legal Notice © Walter de Gruyter GmbH 2024 Consent to website
    analysis We use cookies and other technologies. Some of them are necessary for
    the website to function and are always set. Cookies for website analysis are not
    required and are set only with your consent. Some services for analysis process
    personal data in the USA. With your consent to use these services, you also consent
    to the processing of your data in the USA. Your consent is voluntary and can be
    revoked at any time. For more information, please see our Cookie Policy. Accept
    optional analytics cookies Reject non-essential cookies"'
  inline_citation: '>'
  journal: Journal of Intelligent Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Chauhan D.
  - Bahad P.
  - Pathak R.
  citation_count: '0'
  description: The exponential growth of the global data and information volume has
    given the impetus to the development of the Internet of Things (IoT) and the omnipresence
    of related devices. Today, the Internet of Things is an integral part of our everyday
    lives and this development cannot be kept away. As per Statista, there will be
    more than 75 billion Internet of Things (IoT) connected devices in use by 2025.
    Data volume created by IoT connections is projected to reach a massive total of
    79.4 zettabytes by 2025. Wired or wireless networks will connect a variety of
    devices, machines, vehicles and almost everything. IoT makes way for unlimited
    business prospects in all fields, and agriculture is no exception. The use of
    IoT technology in agriculture will increase crop production to new heights. In
    this chapter, we will focus on the applications of IoT in agriculture. The chapter
    also discusses about the usage of IoT in the intelligent irrigation system and
    classifies different sensors.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Green Computing and Its Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: internet of things (IoT) in agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rao T.V.N.
  - Duggirala A.
  - Kurni M.
  - Sultana S.T.
  citation_count: '1'
  description: IoT has opened a huge portal of possibilities where every gadget or
    thing can be connected on the internet to participate in data exchange. Presently,
    it is used across a wide spectrum of applications like irrigation and other agricultural
    activities, retail, healthcare, smart vehicles, and so on. IoT has encountered
    several drawbacks in terms of security, data storage, and efficiency, which led
    to several companies thinking twice before incorporating IoT into their projects.
    Data on the cloud is more often than not compromised, and with the increasing
    number of users and devices on the internet, data management is inefficient. However,
    these drawbacks are being rectified as new ways of using IoT are taking shape.
    In the coming decades, the world awaits several advancements that will gracefully
    improve the existing systems; for instance, the introduction of edge computing
    will transubstantiate cloud computing by minimizing the technicalities, hence
    maintaining data privacy rightful usage of bandwidth. The future of IoT is quite
    promising, what with its growing popularity and consistent improvement, it's destined
    to pave a new way of technological development. This chapter focuses on the current
    trends in IoT, its limitations, and the scope for future advancements.
  doi: 10.1002/9781119792253.ch11
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register Smart Healthcare System Design: Security and Privacy Aspects Chapter
    11 Full Access IoT in the Current Times and its Prospective Advancements T. Venkat
    Narayana Rao,  Abhishek Duggirala,  Muralidhar Kurni,  Syed Tabassum Sultana Book
    Editor(s):SK Hafizul Islam,  Debabrata Samanta First published: 17 June 2021 https://doi.org/10.1002/9781119792253.ch11Citations:
    1 PDF TOOLS SHARE Summary IoT has opened a huge portal of possibilities where
    every gadget or thing can be connected on the internet to participate in data
    exchange. Presently, it is used across a wide spectrum of applications like irrigation
    and other agricultural activities, retail, healthcare, smart vehicles, and so
    on. IoT has encountered several drawbacks in terms of security, data storage,
    and efficiency, which led to several companies thinking twice before incorporating
    IoT into their projects. Data on the cloud is more often than not compromised,
    and with the increasing number of users and devices on the internet, data management
    is inefficient. However, these drawbacks are being rectified as new ways of using
    IoT are taking shape. In the coming decades, the world awaits several advancements
    that will gracefully improve the existing systems; for instance, the introduction
    of edge computing will transubstantiate cloud computing by minimizing the technicalities,
    hence maintaining data privacy rightful usage of bandwidth. The future of IoT
    is quite promising, what with its growing popularity and consistent improvement,
    it''s destined to pave a new way of technological development. This chapter focuses
    on the current trends in IoT, its limitations, and the scope for future advancements.
    References Citing Literature Smart Healthcare System Design: Security and Privacy
    Aspects References Related Information Recommended Introduction to the Internet
    of Things Detlef Schoder Internet of Things A to Z: Technologies and Applications,
    [1] Cloud IoT Ruchi Bhatnagar,  Rawat Prof (Dr.) Paramjeet,  Garg Dr. Amit Emerging
    Computing Paradigms: Principles, Advances and Applications, [1] SmartHerd management:
    A microservices‐based fog computing–assisted IoT platform towards data‐driven
    smart dairy farming Mohit Taneja,  Nikita Jalodia,  John Byabazaire,  Alan Davy,  Cristian
    Olariu Software: Practice and Experience Reliance on Artificial Intelligence,
    Machine Learning and Deep Learning in the Era of Industry 4.0 T. Venkat Narayana
    Rao,  Akhila Gaddam,  Muralidhar Kurni,  K. Saritha Smart Healthcare System Design:
    Security and Privacy Aspects, [1] Advancements and Applications in Fog Computing
    Sumit Bansal,  Mayank Aggarwal,  Himanshu Aggarwal Security Designs for the Cloud,
    Iot, and Social Networking, [1] Additional links ABOUT WILEY ONLINE LIBRARY Privacy
    Policy Terms of Use About Cookies Manage Cookies Accessibility Wiley Research
    DE&I Statement and Publishing Policies Developing World Access HELP & SUPPORT
    Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES Subscription
    Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley Network Wiley
    Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related companies.
    All rights reserved, including rights for text and data mining and training of
    artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: 'Smart Healthcare System Design: Security and Privacy Aspects'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT in the current times and its prospective advancements
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Jimenez J.M.
  - Parra L.
  - García L.
  - Lloret J.
  - Mauri P.V.
  - Lorenz P.
  citation_count: '5'
  description: Water quality may be affected by aspects such as pollution from industries,
    agricultural fertilizers and pesticides, and waste produced by humans. This contamination
    can affect the produce of the fields irrigated by untreated water. Therefore,
    it is necessary to add a treatment process in irrigation systems. In this paper,
    an architecture, communication protocol, and a data analysis algorithm for a wastewater
    treatment system intended for irrigation are presented. Our system includes a
    smart group-based wireless sensor network that is able to detect high salinity
    levels and pollution stains, such as oil spills. When contamination is detected,
    the water is led into auxiliary canals that perform the biosorption process to
    treat the water and dump it back into the main canal. Simulations were performed
    to assess the amount of data stored on the secure digital (SD) card, the consumed
    bandwidth, and the energy consumption of our proposal. The results show the system
    has a low bandwidth consumption with a maximum of 2.58 kbps for the setting of
    two daily data transmissions of the node in the last auxiliary canal. Furthermore,
    it can sustain the energy consumption in adverse conditions, where the node with
    the highest energy consumption reaches the lowest energy value of 12,320 mW/h.
  doi: 10.3390/app11083648
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Applied Sciences All Article Types
    Advanced   Journals Applied Sciences Volume 11 Issue 8 10.3390/app11083648 Submit
    to this Journal Review for this Journal Propose a Special Issue Article Menu Academic
    Editor Nir Krakauer Subscribe SciFeed Recommended Articles Related Info Link More
    by Authors Links Article Views 2001 Citations 5 Table of Contents Abstract Introduction
    Materials and Methods Results Discussion Conclusions Author Contributions Funding
    Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Conflicts of Interest References Altmetric share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    New Protocol and Architecture for a Wastewater Treatment System Intended for Irrigation
    by Jose M. Jimenez 1,2, Lorena Parra 1,3, Laura García 1,2, Jaime Lloret 1,*,
    Pedro V. Mauri 3 and Pascal Lorenz 2 1 Instituto de Investigación para la Gestión
    Integrada de Zonas Costeras, Universitat Politècnica de València, 46730 Grau de
    Gandia, Valencia, Spain 2 Network and Telecommunication Research Group, University
    of Haute Alsace, 34 Rue du Grillenbreit, 68008 Colmar, France 3 Instituto Madrileño
    de Investigación y Desarrollo Rural, Agrario y Alimentario (IMIDRA), Finca “El
    Encin”, A-2, Km 38, 2, 28805 Alcalá de Henares, Madrid, Spain * Author to whom
    correspondence should be addressed. Appl. Sci. 2021, 11(8), 3648; https://doi.org/10.3390/app11083648
    Submission received: 29 March 2021 / Revised: 13 April 2021 / Accepted: 15 April
    2021 / Published: 18 April 2021 (This article belongs to the Special Issue Advanced
    Sensing Technologies for Precision Agriculture) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract Water quality may be affected by aspects such
    as pollution from industries, agricultural fertilizers and pesticides, and waste
    produced by humans. This contamination can affect the produce of the fields irrigated
    by untreated water. Therefore, it is necessary to add a treatment process in irrigation
    systems. In this paper, an architecture, communication protocol, and a data analysis
    algorithm for a wastewater treatment system intended for irrigation are presented.
    Our system includes a smart group-based wireless sensor network that is able to
    detect high salinity levels and pollution stains, such as oil spills. When contamination
    is detected, the water is led into auxiliary canals that perform the biosorption
    process to treat the water and dump it back into the main canal. Simulations were
    performed to assess the amount of data stored on the secure digital (SD) card,
    the consumed bandwidth, and the energy consumption of our proposal. The results
    show the system has a low bandwidth consumption with a maximum of 2.58 kbps for
    the setting of two daily data transmissions of the node in the last auxiliary
    canal. Furthermore, it can sustain the energy consumption in adverse conditions,
    where the node with the highest energy consumption reaches the lowest energy value
    of 12,320 mW/h. Keywords: sensor network; LoRa; water quality; contamination;
    precision agriculture 1. Introduction As a great part of agricultural produce
    is intended for human consumption, the quality of the water utilized for irrigation
    is essential. However, water quality may be affected by many aspects such as pollution
    from industries, agricultural fertilizers and pesticides, and waste produced by
    humans. UNESCO estimates the amount of contaminated water on the planet as 12,000
    km3 [1]. Poorer regions of the planet are the most affected by contaminated water.
    Contaminated water is able to cause numerous health problems in the population.
    The WHO estimates the number of deaths caused by contaminated water consumption
    to be 842,000 [2]. Furthermore, it is estimated that there are 200,000 deaths
    per year due to pesticide consumption, with nearly 3 million people poisoned per
    year [3]. In India, 29% of the pesticide consumption is used on rice and 9% is
    used on vegetables. Thus, it is imperative to assure irrigation water is treated
    correctly so as to reduce water pollution as much as possible. Considering the
    repercussions of water contamination on people, it is necessary to add a treatment
    process in irrigation systems. Even though irrigation water may have been treated
    prior to distribution, the characteristics of the distribution canals may not
    avoid the incursion of water pollutants during water transport. There are a variety
    of water treatment processes, including advanced oxidation processes (AOPs) [4],
    and adsorption, both organic and inorganic, among other water treatment processes
    [5]. Biosorption is a physical wastewater treatment that employs biomass to adsorb
    chemicals, metals, and other pollutants [6]. This process may employ different
    types of biomass such as marine algae, bacteria, fungi, peat moss, bark, and yeast
    and each type may present better results with different types of pollutants [7].
    Agricultural waste materials are also being considered as an economic and ecologic
    biomass source. Agricultural waste biomass is abundant, reduces the waste generated
    from agriculture, and it has a low cost and high efficiency as an absorbent. Some
    of the already tested agricultural waste biomass absorbents are sawdust, coconut
    shells, rice bran, wheat bran, sugarcane bagasse, sugar beet pulp, maize corn
    cob, orange peels, waste tea leaves, and hazelnut shells, among other agricultural
    waste from different produce types [8]. The remnant of the wastewater biosorption
    process is treated with anaerobic digestion, dewatering, incineration, thermal
    drying, or pyrolysis [9]. In order to include water treatment in irrigation systems,
    an evaluation of the quality of the water that reaches the irrigation system must
    be performed before irrigation. Water quality monitoring can be performed with
    chemical or physical sensors. Physical sensors allow monitoring water quality
    in real time and do not require continuous supervision and manipulation. Thus,
    physical water quality monitoring sensors are suitable for remote water quality
    monitoring in smart irrigation systems. Physical sensors use the electromagnetic
    field, optical properties, and resistance variations in order to assess changes
    in the characteristics of the monitored environment [10]. Therefore, optical sensors
    can be utilized to monitor turbidity or the presence of an oil layer. Coils can
    be employed to determine the conductivity of the water. Moreover, image processing
    performed on the images obtained from cameras can be utilized to detect the presence
    of objects or animals. Furthermore, currently available low-cost sensors can be
    used to monitor water quality, with results comparable to those obtained from
    more expensive commercialized probes for water quality assessment. The amount
    of information generated from these types of sensors and smart systems applied
    to precision agriculture can be significantly large. Thus, data processing algorithms
    are necessary to analyze the data and determine the actions that the actuators
    must perform. These algorithms may also consider reducing the amount of forwarded
    data in order to reduce energy consumption and the amount of generated traffic.
    Fault tolerance is another aspect that is usually considered by the algorithms
    employed in wireless sensor networks (WSNs) and Internet of Things (IoT) solutions.
    Moreover, some solutions consider soil moisture and other factors such as weather
    predictions to determine whether the irrigation system must start or stop [11].
    In this paper, a communication protocol and a data analysis algorithm for a wastewater
    treatment system intended for irrigation are presented. Our system includes a
    smart group-based wireless sensor network that is able to detect, locate, monitor,
    and track high salinity levels and pollution stains, such as oil spills. Moreover,
    a new kind of water treatment plant is proposed to depollute the water before
    the irrigation. The system will use artificial intelligence techniques and data
    fusion methodologies in order to quantify the amount of pollution in the source
    and to detect and predict its movement and form. These techniques will allow the
    system to be conscious of what is happening in the water environment and send
    alarms through the warning system. This information will be used to define one
    treatment or other before using the water for smart irrigation. The rest of the
    paper is organized as follows. The description of our proposal is given in Section
    2. The results are presented in Section 3. Section 4 discusses the related work.
    Finally, the conclusion and future work are presented in Section 5. 2. Materials
    and Methods In this section, the different nodes, sensors, and actuators proposed
    to collect data from the field and carry out the corresponding actions that allow
    treating the water are described. Furthermore, the architecture, the proposed
    communication protocol, and a data analysis algorithm for a wastewater treatment
    system intended for irrigation are presented. 2.1. Node Description In this subsection,
    the description of the characteristics of the node, the sensors, and the actuators
    are performed. In our proposed system, the nodes are deployed throughout the expanse
    of the canals, both for urban areas and farming areas. The quantity of nodes depends
    on the number of canals and their specific needs. The employed nodes are Arduino
    Mega 2560 [12]. The node has 16 analog input pins and 54 digital input/output
    pins, allowing for connecting many sensors to one single node. Moreover, it provides
    a universal serial bus (USB) connection, 4 universal asynchronous receiver-transmitter
    (UART) serial ports, a power jack, a 16 MHz crystal oscillator, an in-circuit
    serial programming (ICSP) header, and a reset button. However, as the node does
    not provide an integrated wireless interface, it is necessary to incorporate wireless
    modules. The nodes can be provided with long-range wide area network (LoRaWAN)
    connectivity by employing the module F8L10D-N [13] which transmits in the 868
    Mhz band. The sensor used to monitor water quality will be used to monitor turbidity
    and conductivity. For the detection of turbidity, optical sensors are used, while
    for conductivity monitoring, inductive sensors are used. The turbidity sensor
    is based on that presented in [14]. It is made with two light emitting diodes
    (LED) that emit at different wavelengths and two light detectors. One of the LEDs
    has a maximum wavelength of 612–625 nm and the other of 850 nm. The light detectors
    are a light-dependent resistor (LDR) that responds to the visible light of the
    first LED and a photodiode that responds to the infrared (IR) light of the second
    LED. The turbidity sensor is placed before and after the application of the filters
    to treat the water. The LEDs are powered at 3.3 V using the 3.3 V output voltage.
    The conductivity sensor is based on the prototype described in [10]. It is composed
    of two copper coils. The first coil is powered with a sine wave and the second
    coil is induced. The induced voltage depends on the conductivity of the water.
    The powered coil is powered with the Arduino using an analog output (PWM) pin.
    The generated voltage in the induced coil is measured. Both the turbidity sensor
    and the conductivity sensor are connected to the same node. They are placed before
    and after the filters and will monitor the correct operation of the wastewater
    treatment filters by registering the changes in water quality. Additionally, we
    use a sensor to detect the presence of hydrocarbon in the water. The sensor is
    based on the photoluminescence effect linked to the hydrocarbons. In the design
    of the sensor, different light colors are used to excite the molecules of a hydrocarbon.
    The light source is an LED and a photodetector is used as a receptor of the emitted
    light. In order to execute the actions determined by the system, some nodes need
    to include an actuator. As an actuator connected to an Arduino node, a linear
    actuator can be utilized. The linear actuator is a device that converts the rotational
    motion of a low-voltage direct current (DC) motor into linear motion. This device
    can be utilized to open and close the gate for controlling the water in the canal.
    2.2. Architecture In this subsection, the proposed architecture is presented.
    The example of the area where the nodes are to be deployed is presented in Figure
    1. As it can be seen in the image, there are several urban areas. These areas
    are zones with a population that may discharge wastewater into the canals that
    transport the water to the fields and is therefore subject to spill control. Furthermore,
    these areas have access to the electricity grid and the telecommunications infrastructure.
    The other area is the canal area. This area is located in an irrigation canal
    that leads to the fields. As it can be seen, in the canal areas, there is a comb-shaped
    structure that is formed by auxiliary canals that are connected with one another
    and have several gates that connect to the main canal. These auxiliary canals
    are prepared to implement the biosorption process that treats the water and removes
    contamination. Figure 1. Deployment of node areas. The sensor nodes deployed within
    the different zones communicate through wireless connections. Moreover, the communication
    between each of the zones is established wirelessly as well. In one of the urban
    areas, which in Figure 2 is called Urban Area 0, the gateway will establish a
    wired connection to transmit the data to the data center for storage and data
    analysis. The data that are received with information from the different nodes
    will be treated with artificial intelligence (AI), to respond with appropriate
    measures in our system. Lastly, the adopted measures will be forwarded to the
    actuator nodes to let the contaminated water go through the biosorption process.
    Figure 2. Example of canal zone in detail. Figure 2 allows for visualizing in
    greater detail the location of the nodes in one of the canal zones. As can be
    seen, there are nodes to which different types of sensors and actuators are connected.
    Several auxiliary canals are found as well. These are comb-shaped canals where
    the biomass is located. The biomass is responsible for the decontamination of
    the water. As seen in the image, the biomass canals are replicated and connected,
    so the water can go through one or several decontamination phases, depending on
    the results of the samples obtained by the sensors, which are located at the end
    of each biomass canal. The actuator nodes are connected to lock-gates that allow
    for regulating the passage of the water flow. The proposed architecture, formed
    by three layers, being Nodes Sensors & Actuators, Storage & Activation, and Artificial
    Intelligence, is shown in Figure 3. In the Nodes, Sensors & Actuators layer, all
    the nodes of the network are located. The different sensors that take measures
    of the water quality are connected to the nodes. Then, the data are periodically
    forwarded to the data center situated in the upper layer, where the data are stored.
    Furthermore, the actuators are connected to the nodes that are located at the
    gates of the canals so that the appropriate actions that have been decided in
    the higher layers are performed. Figure 3. Proposed architecture. On the other
    hand, the Storage & Activation layer hosts the devices where the information received
    from all the sensors is stored. Furthermore, this layer also hosts the system
    that allows for sending orders to the actuators so as to carry out the actions
    established by the decision-making process that is performed in the upper layer.
    Lastly, the systems that allow for processing the data that were stored in the
    lower layer are located in the Artificial Intelligence layer. This layer oversees
    the decision-making process whose result will be sent to the action functionality
    in the lower layer. The protocol stack is presented in Figure 4. As it can be
    seen, the Network Interface layer uses an ethernet protocol in the wired network,
    and a LoRaWAN protocol to perform wireless transmissions. The wired network is
    based on the stack defined by the transmission control protocol/internet protocol
    (TCP/IP) reference model. IPv4 and IPv6 protocols are used in the Network layer.
    The protocols TCP and user datagram protocol (UDP) are used in the Transport layer.
    Finally, the Application layer can use any protocol of this layer to implement
    the proposed system. On the other hand, for the wireless network, the physical
    layer utilizes the LoRa modulation. Then, the Medium Access Control layer utilizes
    LoRaWAN. Lastly, the Application layer employs the proposed protocol. Figure 4.
    Protocol stack. 2.3. Proposed Algorithm In this subsection, the performance algorithm
    of the elements of the proposed system is presented. The proposed algorithm has
    been divided into two parts. The first part shows the algorithm used by the sensor
    nodes to obtain the data and transmit them to a central node. This node is called
    Central Node and it is located in Urban Area 0, from which the data and alarms
    are sent to the AI and storage systems. The second part presents the manner in
    which the data are stored in the Storage Server and treated in the AI computers
    so as to later send the response action to the actuator nodes. The algorithm presented
    in Figure 5 shows the operation process of a group of nodes. As can be seen in
    Figure 2, a sensor node is not deployed on its own but in a group of three nodes
    that measure at the same point. This group is formed by one sensor node named
    Central Node, and two more sensor nodes. All sensor nodes are capable of detecting
    different parameters related to water pollution. All the sensors connected to
    the nodes take measurements every minute. If there are variations with respect
    to the reference values, the data are sent to the Central Node of the group, and
    at the same time the data are stored in the SD card. In addition to performing
    the usual functions of any other sensor node, distributed Central Nodes are responsible
    for sending data and alarms with information from any node in their group. These
    alarms and information are forwarded to the Central Node located in Urban Area
    0, via wireless communication. This grouping of nodes allows for guaranteeing
    fault tolerance. If only one node detects pollution, the node sends an update
    to the Central Node of their group, and this Central Node checks if itself or
    the other sensor of the group has also detected pollution. If pollution is not
    detected by more than one node, it is considered a false positive. Figure 5. Algorithm
    for node groups. All the groups of nodes located in the different areas, urban
    or canal, can send updates to their Central Nodes via wireless communication.
    The Central Nodes send the information, via wireless communication as well, to
    the Central Node of Urban Area 0. The Central Node of Urban Area 0 is responsible
    for sending all information and alarms collected in all areas to the data center
    through a wired/wireless transmission medium. The data center is primarily responsible
    for storing the data, which can be consulted at any time, and generating analytical
    and machine learning models. In addition, it is also responsible for generating
    the actions that the actuator nodes must take. Generally, the action resulting
    from the detection of an alarm is associated with the start-up of one actuator
    node at least in one area. When the Central Node of Urban Area 0 receives an alarm,
    if it is known and has been previously treated, this node decides an action and
    makes an order to the actuator nodes so that the corresponding action is carried
    out. Moreover, the Central Node of Urban Area 0 sends the alarm to the storage
    and AI data analysis system. The second algorithm that we propose so as to store
    the data and alarms that are generated in the sensor nodes is provided in Figure
    6. Once saved, they are processed by AI and then the decisions that are made are
    forwarded to the actuator nodes. Figure 6. Algorithm for storage data, obtain
    patrons’ big data and take decision to actuator nodes. Initially, when the data
    are received in the Storage Server, the system must differentiate if it is an
    alarm or if it is the data that have been obtained during an observation period.
    In case of an alarm, the received data will be tagged before being stored. If
    it is not an alarm, the data are stored directly. Then, they go to the computer
    where they are treated by AI. In this way, patterns of behavior can be detected.
    Depending on the problems that can be detected and the place where actions should
    be applied, several decision rules have been created. Those rules are applied
    based on the detected patterns. Finally, the decisions that have been made based
    on the rules are sent to the actuator nodes so that they are put into action in
    an appropriate manner. 2.4. Protocol Description In this subsection, the protocol
    utilized to make the proposed system work is presented. Our proposed protocol,
    as can be seen in Figure 7, is divided into four fundamental phases, which are:
    Discovering Neighbors, Send Data, Storage and Data Processing, and Action. As
    its name suggests, in the Discovering Neighbors phase, the different sensor nodes
    send wireless signals to discover the nodes that are part of the group. Then,
    the sensor nodes determine the Central Node, and the Central Node identifies the
    gateway which is the Central Node in Urban Area 0. Therefore, a LoRa multi-hop
    network is established as in [15,16]. Figure 7. Proposed protocol. Once the nodes
    are activated and their connection is established, they go into the Send Data
    phase. The different sensors that are connected to each node begin to measure
    their respective parameters. The data collection period has been set to take place
    every minute. If the observed data differ by an amount greater than a previously
    established threshold, the measurement is sent to the Central Sensor Node of the
    group, and this node will store the data and compare them to check if they exceed
    the alarm threshold. It also checks if the alarm has been detected by more than
    one of the sensors of the group in order to provide fault tolerance capabilities.
    In case of exceeding the alarm threshold, the data are forwarded to the Central
    Sensor Node of Urban Area 0. Then, it is forwarded to the central storage system
    in the data center. In case of not exceeding the alarm threshold, the data are
    stored in the Central Sensor Node of the group until all the data are sent every
    24 h period. Every day, the Central Sensor Node of Urban Area 0 will send all
    data to the Storage Server through the wired network. The next phase is responsible
    for making the decisions to correct anomalies. It is the Data Processing phase.
    In this phase, the data are sent from the Storage Server to the AI system. This
    system will be responsible for making the pertinent decisions that will be sent
    to the actuators. Finally, during the Action phase, the operation that the AI
    system considers adequate to solve the problem detected by the sensors will be
    sent to the Actuator Nodes. 2.5. Simulation Description In this section, the considerations
    under which the simulation was conducted are detailed. 2.5.1. Water Details For
    the simulation, we have considered a region that entails two urban areas (UAs)
    with their channel to collect the water, the main channel, and one irrigation
    channel (IC) with the small pools (POs) in which water is treated. A total of
    6 locations are considered in this simulation: 2 urban areas (UA1 and UA 2), the
    irrigation channel (IC 1), and the 3 pools (PO 1, PO 2, and PO 3.). In each one
    of these areas, a total of three nodes (a cluster) is located. The cluster comprises
    three nodes with LoRa interfaces. The six locations are close enough to ensure
    good coverage with a single LoRa gateway. Since we are going to simulate our results
    using the algorithms described above, we need to generate different values of
    pollution in the monitored areas. To generate these values, we have included in
    our simulations the movement of water from point to point and some pollution inputs
    generated by random numbers at different intervals. The generated pollution coming
    from UAs and the pollution from the IC is diluted into the channel and flows to
    the next station. The pollution levels are maintained along with the IC. They
    only decrease in the pools where biosorption material is cleaning the water. Each
    pool has the capacity to reduce 50% of the pollution present in the water. The
    following consideration is the probability of a false positive or a false negative
    due to an abnormal monitored value of one of the sensors. We have defined the
    chance of giving a false positive as 5% and 1% for a false negative. The simulation
    has a duration of one week in which each sensor measures the water quality once
    per minute. This timing is required since the arrival of pollution to the fields
    can transfer the problem of pollution from the water to the soil, and in this
    medium, the recovery is more complex. The simulation is carried out in two different
    periods of the year, in summer and in winter. This will affect only the energetic-related
    parameters. 2.5.2. Network Details Regarding the packets sent through the network,
    we consider that the sensed data have a length of 37 bits for each measurement.
    The headers of the packets sent through LoRa comprise a preamble of 8 bytes and
    a header of 13 bytes. The data packets that are forwarded over LoRa will have
    a minimum size of 141 bits, which corresponds to a message with one measurement.
    Furthermore, the maximum packet size is 4176 bits, which is the maximum size allowed
    by LoRa. Lastly, the LoRa acknowledgements (ACK) have a size of 21 bytes which
    corresponds to the preamble and the header. The simulation for the energy consumption
    of the LoRaWAN nodes is performed according to the energy consumption model presented
    in [17]. The total energy consumption of the node is presented in Equation (1).
    ETotal = EMicrocontroller + ESensors + Etx + Erx (1) where EMicrocontroller is
    the energy consumed by the microcontroller, ESensors is the energy consumed to
    activate the sensors and gather the data, Etx is the energy consumed to transmit
    the data, and Erx is the energy consumed to receive the ACK from the gateway,
    which according to [17] is 0.27 mJ. Equation (2) is utilized to determine the
    energy consumption per bit at the transmission. Ebit = (Power Consumption x ToA)/(8
    x (Preamble + Header + Payload)) (2) As for the LoRaWAN parameters, considering
    that our system requires a minimum range of 2 km, all possible settings would
    meet the requirement in the scenario of free space for a frequency of 868 MHz
    (See Figure 8). However, as there are vegetation and trees in the area, we consider
    a scenario with few obstacles, as presented in Figure 9. Therefore, for a transmission
    power of 7 dBm, the settings of BW250-SF7 and BW500-SF7 would not meet the requirement.
    For the case of 433 MHz, the required maximum theoretical distance is reached
    with all settings. Figure 8. Maximum theoretical distance at 868 MHz for free
    space. Figure 9. Maximum theoretical distance at 868 MHz for few obstacles. Considering
    the results of the theoretical distances for each LoRa setting, the settings selected
    for our system are the EU 863–870 frequency band, BW 125 kHz, and SF 8. Therefore,
    for the selected settings and a selected transmission power of 13 dBm with its
    power consumption of 92.4 mW/h, the energy consumed per bit for each sensor is
    45.55 μJ. 3. Results In this section, we present the results of our simulation.
    First of all, the storing and sending procedure of each node is represented as
    the SD status. Then, the bandwidth of the full network is depicted. Finally, the
    issues related to the remaining energy in the node are evaluated. 3.1. Status
    of the SDs Considering the protocol described in Figure 7, one of the main aspects
    of this protocol is storing data, instead of sending it, waiting until the moment
    in which the water quality changes to send all stored data. We have to consider
    that the nodes which are not a Cluster Head (CH) store the data before sending
    them to the CH once the node detects a change. This procedure implies that the
    CH node stores large amounts of data just before sending them. Figure 10 and Figure
    11 show the stored information in the SD of each one of the included nodes in
    our topology. While Figure 10 focuses on the first 60 min of the simulation, allowing
    for seeing some of the processes in detail, Figure 11 summarizes the whole simulated
    period. Figure 10. Stored information in the SDs cards of nodes. Details of the
    first 60 min of operation. Different letters (a) to (f) denote the different locations
    of the cluster: (a) UA1, (b) UA2, (c) IC1, (d) PO1, (e) PO2, and (f) PO 3. Figure
    11. Stored information in the SDs cards of nodes. Summary of the whole simulated
    period. Different letters (a) to (f) denote different locations of the cluster:
    (a) UA1, (b) UA2, (c) IC1, (d) PO1, (e) PO2, and (f) PO 3. In Figure 10, we can
    identify the stored information in the SDs of the clusters of six included locations:
    (a) UA1, (b) UA2, (c) IC1, (d) PO1, (e) PO2, and (f) PO 3. Focusing on Figure
    10a, we can identify that the three nodes store information until minute 35. In
    minute 35, Node 3 and Node 2 detect a change in water quality. Node 1 has a false
    negative. Node 3 sends data to Node 2 and erases the data. Then, Node 2 checks
    that both nodes registered a change and sends all the data stored in the SD to
    the gateway. We can identify that Node 3 continues storing information during
    the rest of the period. In UA2, in Figure 10b, we can see the same case in minute
    5, in this case, Node 3. Then, we identify a case in which the three sensors detect
    a water pollution change, see minute 52. In that case, the two nodes (Node 1 and
    Node 3) send the CH node data. Thus, the stored information is incremented three
    times. At that moment, the SD of the CH node stored 5550 bits of information.
    Similar cases can be seen in Figure 10c in minutes 41, 47, 51, and 59, and in
    Figure 10d in minutes 51 and 57. This delay of 10 min between IC1 and PO1 is the
    simulated time that the water remains in each pool. Finally, Figure 10e,f show
    the normal data storage process in the SDs. Since water is treated twice and three
    times, there are fewer water quality changes. On the other hand, Figure 11 shows
    the SD usage for each node along the simulated period of one week. We can identify
    that locations UA1, UA2, and IC1 have a similar trend. All these areas, in Figure
    11a–c, have low volumes of data stored in the SDs due to the constant exchange
    of information with the gateway caused by changes in water quality. Meanwhile,
    PO1, PO2, and PO3 are clusters characterized by larger amounts of data stored
    in the SDs, particularly during the second day of our simulation. In general terms,
    we can see that areas characterized by a lot of change follow the patterns seen
    in Figure 10. We can have false positives, false negatives, or true positives
    related to the water quality, which induce the sending event of stored data. In
    addition, we can see a secondary pattern here, mainly in the areas characterized
    by a lower degree of change. In these cases, when no changes are detected, Node
    1 and Node 3 send all the information to the CH at midday to free their SDs, and
    as a method of control, as explained in Figure 5. This behavior can be particularly
    identified in the node of PO3, in which the unique movements of data in the SDs
    are related to the process. Thus, we identify a pattern of storing information
    until midday when all the data are sent to Node 2, and then Node 2 sends data
    to the gateway to free its SD. The maximum amount of stored information is 106,486
    bits (13.3 Kbytes). 3.2. Consumed Energy Figure 12 and Figure 13 show the node
    energy. The nodes have an energy harvesting system that has been dimensioned to
    ensure that it can cover the node’s energy requirements. In comparison, Figure
    12 shows the remaining energy along with the simulation in each location in the
    worst scenario (winter with three consecutive days with a reduced energy harvesting).
    We can see the different locations in Figure 12a–f. In all four locations, we
    identify a similar trend. Node 2 is the node that consumes more energy since it
    receives the information of Nodes 1 and 3 and sends all the information to the
    gateway. Nodes 1 and 3 of each location have the same tendency in their energy
    levels in general terms. No significant differences can be seen among the energy
    levels of Nodes 1 and 3, along with the locations. Nonetheless, the energy of
    CHs differs from one location to another. Figure 12. Energy consumed by the nodes.
    Summary of the whole simulated period. Different letters (a) to (f) denote different
    locations of the cluster: (a) UA1, (b) UA2, (c) IC1, (d) PO1, (e) PO2, and (f)
    PO 3. Figure 13. Energy consumed by the nodes. Summary of the whole simulated
    period. Different letters (a–f) denote different ambient conditions: (a) winter
    period with reduced energy harvesting for three days, (b) winter period with full
    energy harvesting, (c) summer period. The CHs of locations with greater changes
    in water quality (Figure 12a–c) send more packets which are translated into more
    energy consumption. The CH with higher energy consumption is the CH of UA2 (Figure
    12b). This node reaches a minimum energy of 12,320 mW/h just before the sunrise
    of the fifth day. The rest of the CHs, located in areas with fewer or no changes
    in water quality (Figure 12d–f) have higher energy levels. Another interesting
    trend can be identified in PO3 (Figure 12f). We can see a sharp decrease in energy
    levels at midday due to the large amounts of data sent at that moment. The absence
    of water quality conditions causes this during the rest of the day. Since the
    other CHs send data when the nodes detect a change, this decrement of energy level
    is distributed throughout the day. Finally, Figure 13 shows the energy level of
    CHs in three different simulations for which we have modified the energy harvesting
    conditions. Figure 13a represents the worst conditions, the winter period with
    just 9 h of energy harvesting and three consecutive days with a reduction of 50%
    in the energy harvesting. These results summarize the data shown in Figure 12.
    Figure 13b shows a period of winter but without attenuated energy harvesting.
    We can identify that the CH of UA2 still has lower levels of energy than the others.
    Nevertheless, the difference is lower than in the previous scenario. On the other
    hand, Figure 13c shows a period of summer without attenuated energy harvesting.
    In this case, we have 14 h of energy production. We can see that the energy levels
    of CHs are similar to those in previous cases. During summer, nodes have their
    batteries full for most of the day. 3.3. Consumed Bandwidth Figure 14 portrays
    the entire network’s consumed bandwidth, including the communication inside each
    cluster and the communication between the CHs and the gateway. A detail of the
    consumed bandwidth of a short period can be seen in Figure 14a. It represents
    the first 720 min of the simulated network, the first half of the day. We can
    see that in a considerable amount of time, the network does not generate any packet
    exchange due to the application of the algorithm described in Figure 5. In this
    simulation, during the first 720 min, we can identify that in 612 min, there is
    no exchange of information in our network. Minute 661 is the moment when all the
    information is sent to the gateway. At this moment, we reach the maximum bandwidth
    usage, 177,187 bits/min (2.95 kbps). Figure 14. Details of consumed bandwidth
    in our simulation. Different letters denote different details: (a) initial period,
    (b) whole period, (c) summary of the maximum bandwidth of 40 simulations. Considering
    Figure 14b, we can identify the consumed bandwidth during the whole simulated
    period. We can find seven peaks in the consumed bandwidth, which correspond to
    the seven middays. The maximum peak in this period is found on the second day.
    At that moment, a consumed bandwidth of 381,357 bits/min (6.35 kbps) can be identified.
    It is important to note that among the 40 performed simulations, we have represented
    the one with the highest maximum bandwidth. Figure 14c shows the box and whiskers
    diagram of the maximum bandwidth of all the 40 simulations. The average maximum
    bandwidth is 306,411 bits/min (5.1 kbps). With the selected LoRa settings, the
    maximum data rate is 3125 bps [18]. Therefore, we conclude that the data of the
    third cluster should be forwarded in two periods to avoid peaks of bandwidth consumption
    above 3125 bps. A second simulation was performed to verify that changing the
    data forwarding settings of cluster three to two data forwarding times, being
    9 h and 21 h, allows the bandwidth to remain below the maximum 3125 bps. The consumed
    bandwidth in the second simulation is presented in Figure 15. Figure 15a shows
    the results for a short period of time. In this case, the first 1400 min are shown
    as the system spends more than 1100 min with low bandwidth consumption. Then,
    there is a peak of 155,011 bits/min (2.58 kbps). The results for the complete
    simulated period are shown in Figure 15b. The peak with the highest bandwidth
    consumption is the same as the one displayed in Figure 15a. The second highest
    bandwidth consumption peak reached 142,764 bits/min (2.37 kbps). Figure 15. Details
    of consumed bandwidth in second simulation. Different letters denote different
    details: (a) initial period, (b) whole period, (c) summary of the maximum bandwidth
    of 40 simulations. Another 40 simulations were performed to obtain the box and
    whiskers diagram of the maximum bandwidth for this simulation scenario (See Figure
    15c). The average maximum bandwidth was 128,204 bits/min (2.13 kbps). Furthermore,
    the change produced in the simulation does not have relevant repercussions on
    the global energy consumption of the proposed system. 4. Discussion In this section,
    a discussion is given on the previous related works on protocols designed to be
    applied to WSNs that are employed in agricultural monitoring systems or to reduce
    the consumed energy for their functioning. Furthermore, the positioning of the
    water quality sensors and previous works on this topic are discussed as well.
    WSNs have specific requirements and several protocols were developed specifically
    for these types of networks. Many systems for agricultural monitoring employ these
    protocols to forward the data obtained from the sensors. U. B. Nagesh et al. presented
    in [19] the usage of a message queuing telemetry transport (MQTT) protocol applied
    to precision farming and weather monitoring. The proposed system monitored humidity,
    temperature, and power and utilized a Raspberry Pi as the controller. The Eclipse
    Paho MQTT client was utilized to implement the subscriber and an open-source MQTT
    broker was utilized to access the data. A system for controlling and monitoring
    a smart greenhouse employing IoT and the MQTT protocol was presented by Dipen
    J. Vyas et al. in [20]. The system comprised an ESP8266 Wi-Fi module and an Atmega328
    board with temperature, humidity, and soil moisture sensors. For the MQTT broker,
    the authors utilized Mosquitto. Ravi Kisore Kodali et al. introduced in [21] a
    low-cost smart irrigation system that employed MQTT as the communication protocol.
    The system comprised the ESP8266 NodeMCU-12E, a soil moisture sensor, a temperature
    and humidity sensor, and a relay. Junsung Park et al. presented in [22] a greenhouse
    monitoring and control system. Communication among the nodes was performed over
    ZigBee employing the UDP-based CoAP communication protocol. Nodes sent the gathered
    information from the sensors to the gateway which converted the CoAP message into
    an HTTP one so as to forward the data to the server. Finally, A. Paventhan et
    al. performed in [23] a comparison of two different protocols for WSNs in agricultural
    environments. The authors compared a simple network management protocol (SNMP)
    and a constrained application protocol (CoAP) in its message format, security,
    and resource management, and the user interface. They concluded that the CoAP
    presented better integration with the web and was expected to grow in usage for
    WSN applications. Other protocols were created so as to address specific requirements
    of precision agriculture. Awais Ahmed et al. presented in [24] a routing protocol
    for WSNs to improve energy efficiency in environmental monitoring deployments.
    The energy-efficient sensor network routing (EESNR) protocol reduced the overhead
    of control messages. All the nodes were able to become the cluster head as long
    as the constraint on energy life and the established criteria was met. The authors
    performed simulations in NS3, comparing the proposed protocol to other existing
    protocols for WSNs like LEACH and its variations. The results showed an improvement
    of 27.8% of the lifespan of the sensors compared to the other protocols. A routing
    protocol for sensor networks intended for agriculture monitoring based on the
    efficient zone was developed by Lutful Karim et al. in [25]. An energy-efficient
    zone-based routing protocol (EEZRP) assigned different zones to the nodes depending
    on their distance to the base station and considering that nodes closest to the
    base station consume more energy. The proposed protocol considered the sensing
    range. The number of active nodes was fewer than in other protocols, but it might
    perform more processing and control operations. Simulations were performed to
    compare the energy consumption of the nodes to other protocols intended for WSNs
    like LEACH and DSC. The results showed a significant reduction of the consumed
    energy compared to other protocols. S. Bhagyashree et al. proposed, in [26], Apteen,
    a protocol intended for expanding the lifetime of the nodes in WSNs for precision
    agriculture. It is a cluster-based hierarchical routing protocol that groups the
    nodes into clusters comprising a cluster head and member nodes. The sensed parameters,
    thresholds, time division multiple access (TDMA) schedules, and the count time
    were broadcast from the cluster head. The messages were forwarded utilizing ZigBee
    in order to send the data to a database. Karim Fathallah et al. presented, in
    [27], partition aware RPL (PA-RPL), a routing protocol for IoT in precision agriculture.
    It was a version of the routing protocol for LLN (RPL) protocol that considered
    the partitions in farmlands to perform the routing topology. The protocol only
    considered one sink node. Simulations were performed employing the Cooja simulator.
    The results showed that the protocol was able to construct the network covering
    all the parcels. Lastly, a MAC protocol for precision agriculture based on storage
    and delivery intended for air–ground collaborative wireless networks (SD-MAC)
    was introduced by Song-Yue Liew et al. in [28]. In their proposal, an unmanned
    aerial vehicle (UAV) flew over the sensors in order to collect the gathered data.
    This way, a reduction in the duplication of data was obtained and the cost was
    reduced as a single UAV was able to gather the data from a large area. The proposed
    protocol forwarded the packets only when the UAV was within the range of the sensor.
    Sensors were deployed outside of the range of other sensors so as to avoid interferences.
    When the UAV was not close to the sensor, the sensor stored the information until
    the UAV was within range. Simulations were performed, comparing the proposed protocol
    to ALOHA. The results showed that the proposed protocol outperformed ALOHA. Regarding
    sensor networks for water quality monitoring and wastewater treatment, the contamination
    of the wastewater may not only affect the quality of the water but also the treatment
    plants or the sewer systems. Therefore, it is important to deploy a monitoring
    network to detect contamination and contain the affected areas. In their study,
    Mariacrocetta Sambito et al. [29] compared different sensor positioning techniques
    intended for nonconservative immanent pollutants. The results showed that the
    optimal solution could be reached with less computational effort by implementing
    pre-screening and gray information techniques. Stefania Piazza et al. utilized
    an optimization approach by using the NSGA-II algorithm to compare the positioning
    of the sensor probes to the results obtained from experimental tests [30]. The
    results showed that the sensors positioned at the center of the network minimize
    the redundancy and maximize the detection likelihood. Our work has presented a
    new algorithm and protocol for the detection and treatment of waters that other
    authors have not previously defined. We have utilized LoRaWAN, a low-power wide
    area network (LPWAN) protocol that supports low-cost, mobile, and secure bi-directional
    communication for the Internet of Things (IoT), which allowed a high level of
    energy saving and transmission over distances of several kilometers. Therefore,
    the proposed system allows its implementation in areas where it is difficult to
    get electric power to keep the devices active. Our devices, due to their low consumption,
    can be powered by batteries that are recharged through solar panels. 5. Conclusions
    Produce can be affected by the quality of the irrigation water and, therefore,
    affect the people that consume it. Therefore, monitoring water quality is important
    to ensure food safety. In this paper, we have proposed an architecture and communication
    protocol for an irrigation water quality monitoring system for precision agriculture.
    It is based on groups of sensor nodes that monitor the water quality of the main
    canal and of biosorption auxiliary canals to determine if the water needs to be
    treated. Simulations were performed to determine the amount of data stored on
    the SD card of the nodes, the consumed bandwidth, and the energy consumption of
    the system. The results show that the proposed system is able to transmit the
    necessary information and alerts with a low bandwidth generation. However, the
    scheduled data forwarding of the central node of the last auxiliary canal had
    to be modified to two transmissions instead of one to ensure the fair access policy
    of LoRa. Lastly, the system is able to sustain energy consumption even on winter
    days with fewer hours of light and adverse weather conditions. Therefore, when
    considering data transmissions for wireless networks using LoRa communications,
    the addition of data pre-processing techniques would be beneficial to reduce energy
    consumption and ensure that the fair access policy is not violated. For future
    work, the proposed protocol will be adapted to include the monitoring of the field
    area and tests will be performed on different vegetated environments. Furthermore,
    data pre-processing techniques will be implemented to improve the performance
    of the system. Author Contributions Conceptualization, J.M.J. and L.P.; methodology,
    J.M.J., L.P., and L.G.; formal analysis, J.M.J. and L.P.; investigation, J.M.J.,
    L.P., and L.G.; resources, J.L. and P.V.M.; writing—original draft preparation,
    J.M.J., L.P., and L.G.; writing—review and editing, L.G.; supervision, J.L.; project
    administration, J.L. and P.L.; funding acquisition, J.L., P.V.M., and P.L. All
    authors have read and agreed to the published version of the manuscript. Funding
    This research was partially funded by the European Union through the ERANETMED
    (Euromediterranean Cooperation through ERANET joint activities and beyond) project
    ERANETMED3-227 SMARTWATIR. This work has also been partially funded by the Universitat
    Politecnica de Valencia through the post-doctoral PAID-10-20 program and by Conselleria
    de Educación, Cultura y Deporte with the Subvenciones para la contratación de
    personal investigador en fase postdoctoral, grant number APOSTD/2019/04. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement The data presented in this study are available on
    request from the corresponding author. The data are not publicly available due
    to privacy constraints. Conflicts of Interest The authors declare no conflict
    of interest. References UNESCO. Agua para todos, Agua Para la Vida: Informe de
    las Naciones Unidas Sobre el Desarrollo de los Recursos Hídricos en el Mundo.
    2017. Available online: https://www.un.org/esa/sustdev/sdissues/water/WWDR-spanish-129556s.pdf
    (accessed on 5 March 2021). World Health Organization. Drinking-Water. Available
    online: http://www.who.int/news-room/fact-sheets/detail/drinking-water (accessed
    on 5 March 2021). Yadav, I.C.; Devi, N.L.; Syed, J.H.; Cheng, Z.; Li, J.; Zhang,
    G.; Jones, K.C. Current status of persistent organic residues in air, water, and
    soil, and their possible effect on neighboring countries: A comprehensive review
    of India. Sci. Total Environ. 2015, 511, 123–137. [Google Scholar] [CrossRef]
    [PubMed] Andreozzi, R.; Caprio, V.; Insola, A.; Marotta, R. Advanced oxidation
    processes (AOP) for water purification and recovery. Catal. Today 1999, 53, 51–59.
    [Google Scholar] [CrossRef] Parra, L.; Rocher, J.; García, L.; Lloret, J.; Tomás,
    J.; Rodilla, M.; Falco, S.; Sebastiá, M.T.; Mengual, J.; González, J.A.; et al.
    Design of a WSN for Smart Irrigation in Citrus Plots with Fault-Tolerance and
    Energy-Saving Algorithms. Netw. Protoc. Algorithms 2018, 10, 95–115. [Google Scholar]
    [CrossRef] [Green Version] Kiser, M.A.; Ryu, H.; Jang, H.; Hristovki, K.; Westerhoff,
    P. Biosorption of nanoparticles to heterotrophic wastewater biomass. Water Res.
    2010, 44, 4105–4114. [Google Scholar] [CrossRef] [PubMed] Yin, P.; Yu, Q.; Jin,
    B.; Ling, Z. Biosorption removal of cadmium from aqueous solution by using pretreated
    fungal biomass cultured from starch wastewater. Water Res. 1999, 33, 1960–1963.
    [Google Scholar] [CrossRef] Sud, D.; Mahajan, G.; Kaur, M.P. Agricultural waste
    material as a potential absorbent for sequestering heavy metal ions from aqueous
    solutions–A review. Bioresour. Technol. 2008, 99, 6017–6027. [Google Scholar]
    [CrossRef] [PubMed] Hospido, A.; Moreira, M.T.; Martín, M.; Rigola, M.; Feijoo,
    G. Environmental Evaluation of Different Treatment Process for Sludge from Urban
    Wastewater Treatments: Anaerobic Digestion versus Thermal Processes. Int. J. Life
    Cycle Assess. 2005, 10, 336–345. [Google Scholar] [CrossRef] Parra, L.; Ortuño,
    V.; Sendra, S.; Lloret, J. Low-Cost Conductivity Sensor Based on Two Coils. In
    Proceedings of the First International Conference on Computational Science and
    Engineering (CSE 2013), Valencia, Spain, 25–31 August 2013; pp. 107–112. [Google
    Scholar] Sales, N.; Remédios, O.; Arsenio, A. Wireless Sensor and Actuator System
    for Smart Irrigation on the Cloud. In Proceedings of the IEEE 2nd World Forum
    on Internet of Things, Milan, Italy, 14–16 December 2015; pp. 693–698. [Google
    Scholar] Arduino Mega, Arduino Webpage. Available online: https://www.arduino.cc/en/Main/arduinoBoardMega/
    (accessed on 5 March 2021). F8L10D LoRa Module Technical Specification. Available
    online: https://en.four-faith.com/uploadfile/2017/1122/20171122095336388.pdf (accessed
    on 5 March 2021). Parra, L.; Rocher, J.; Escrivá, J.; Lloret, J. Design and development
    of low cost smart turbidity sensor for water quality monitoring in fish farms.
    Aquac. Eng. 2018, 81, 10–18. [Google Scholar] [CrossRef] Liao, C.H.; Zhu, G.;
    Kuwabara, D.; Suzuki, M.; Morikawa, H. Multi-hop LoRa Networks Enabled by Concurrent
    Transmission. IEEE Access 2017, 5, 21430–21446. [Google Scholar] [CrossRef] Abrado,
    A.; Pozzebon, A. A Multi-Hop LoRa Linear Sensor Network for the Monitoring of
    Underground Environments: The Case of the Medieval Aqueducts in Siena, Italy.
    Sensors 2019, 19, 402. [Google Scholar] [CrossRef] [PubMed] [Green Version] Bouguera,
    T.; Diouris, J.; Chaillout, J.; Jaouadi, R.; Andrieux, G. Energy Consumption Model
    for Sensor Nodes Based on LoRa and LoRaWAN. Sensors 2018, 18, 2104. [Google Scholar]
    [CrossRef] [PubMed] [Green Version] Blenn, N.; Kuipers, F. LoRaWAN in the Wild:
    Measurements from the Things Network. arXiv 2017, arXiv:1706.03086. [Google Scholar]
    Nagesh, U.B.; Uday, D.V.; Talekar, S.G.; Pooja, S. Application of MQTT Protocol
    for Real Time Weather Monitoring and Precision Farming. In Proceedings of the
    International Conference on Electrical, Electronics, Communication, Computer and
    Optimization Techniques, Mysuru, India, 15–16 December 2017; pp. 1–6. [Google
    Scholar] Vyas, D.J.; Rudani, N.N. MQTT & IOT Based Control and Monitoring of Smart
    Green House. Int. J. Eng. Dev. Res. 2018, 6, 235–240. [Google Scholar] Kodali,
    R.K.; Sarjerao, B.S. A Low Cost Smart Irrigation System Using MQTT Protocol. In
    Proceedings of the IEEE 10 Symposium (TENSYMP), Cochin, India, 19 October 2017;
    pp. 1–5. [Google Scholar] Park, J.; Yoe, H. Greenhouse Environment Monitoring
    and Control System using CoAP. Adv. Sci. Technol. Lett. 2015, 95, 168–172. [Google
    Scholar] Paventhan, A.; Krishna, S.; Krishna, H.; Kesavan, R.; Mohan Ram, N. WSN
    Monitoring for Agriculture: Comparing SNMP and Emerging CoAP Approaches. In Proceedings
    of the Texas Instruments India Educators’ Conference, Bangalore, India, 4–6 April
    2014; pp. 353–358. [Google Scholar] Ahmed, A.; Pasha, M.A.; Ahmad, Z.; Masud,
    S.; Sikora, A. Energy Efficient Sensor Network Routing (EESNR) Protocol For Large
    Distributed Environmental Monitoring Applications. In Proceedings of the IEEE
    International Conference on Intelligent Data Acquisition and Advanced Computing
    Systems: Technology and Applications, Bucharest, Romania, 21–23 September 2017;
    pp. 740–745. [Google Scholar] Karim, L.; Nasser, N.; El Salti, T. Efficient Zone-Based
    Routing Protocol of Sensor Network in Agriculture Monitoring Systems. In Proceedings
    of the International Conference on Communications and Information Technology,
    Aqaba, Jordan, 29–31 March 2011; pp. 167–170. [Google Scholar] Bhagyashree, S.;
    Prashanthi, S.; Anandkumar, K.M. Enhancing Network Lifetime in Precision Agriculture
    Using Apteen Protocol. In Proceedings of the IEEE Technological Innovation in
    ICT for Agriculture and Rural Development, Chennai, India, 10–12 July 2015; pp.
    44–48. [Google Scholar] Fathallah, K.; Abid, M.A.; Hadj-Alouane, N.B. PA-RPL:
    A Partition Aware IoT Routing Protocol for Precision Agriculture. In Proceedings
    of the 14th International Wireless Communications & Mobile Computing Conference,
    Limassol, Cyprus, 25–29 June 2018; pp. 672–677. [Google Scholar] Liew, S.; Azad,
    S.; Goh, H.G.; Ooi, B.Y.; Rahman, A. A Store-and-delivery Based MAC Protocol for
    Air-Ground Collaborative Wireless Networks for Precision Agriculture. In Proceedings
    of the IEEE 21st International Conference on Parallel and Distributed Systems,
    Melbourne, VIC, Australia, 14–17 December 2015; pp. 792–796. [Google Scholar]
    Sambito, M.; Freni, G. Strategies for Improving Optimal Positioning of Quality
    Sensors in Urban Drainage Systems for Non-Conservative Contaminants. Water 2021,
    13, 934. [Google Scholar] [CrossRef] Piazza, S.; Sambito, M.; Feo, R.; Freni,
    G.; Puleo, V. Optimal Positioning of Water Quality Sensors in Water Distribution
    Networks: Comparison of Numerical and Experimental Results. In Proceedings of
    the CCWI 2017 15th International Conference on Computing and Control for the Water
    Industry, Sheffield, UK, 5–7 September 2017. [Google Scholar] Publisher’s Note:
    MDPI stays neutral with regard to jurisdictional claims in published maps and
    institutional affiliations.  © 2021 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Jimenez, J.M.; Parra, L.; García, L.; Lloret,
    J.; Mauri, P.V.; Lorenz, P. New Protocol and Architecture for a Wastewater Treatment
    System Intended for Irrigation. Appl. Sci. 2021, 11, 3648. https://doi.org/10.3390/app11083648
    AMA Style Jimenez JM, Parra L, García L, Lloret J, Mauri PV, Lorenz P. New Protocol
    and Architecture for a Wastewater Treatment System Intended for Irrigation. Applied
    Sciences. 2021; 11(8):3648. https://doi.org/10.3390/app11083648 Chicago/Turabian
    Style Jimenez, Jose M., Lorena Parra, Laura García, Jaime Lloret, Pedro V. Mauri,
    and Pascal Lorenz. 2021. \"New Protocol and Architecture for a Wastewater Treatment
    System Intended for Irrigation\" Applied Sciences 11, no. 8: 3648. https://doi.org/10.3390/app11083648
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   5
    Web of Science   3 Scopus   5 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 5. Jan 15. Jan 25. Jan 4. Feb
    14. Feb 24. Feb 5. Mar 15. Mar 25. Mar 0 500 1000 1500 2000 2500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Appl. Sci., EISSN 2076-3417, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Applied Sciences (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: New protocol and architecture for a wastewater treatment system intended
    for irrigation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Elsheakh D.
  - Shawkey H.
  citation_count: '0'
  description: Recently, soil dielectric constant detection has been used in the irrigation
    of vastly differing farming conditions. Soil monitoring has seen a push toward
    fifth generation (5G) telecommunications technology, due to the higher speed and
    bandwidth required to connect a huge number of sensor nodes simultaneously. A
    novel architecture for a fully integrated, unequal arms dipole antenna is presented
    in this article. The proposed on-chip antenna is implemented using UMC180 nm CMOS
    technology. A dipole radiator is added on the upper metal layer, a ground sheet
    set at the lower metal layer and a patch layer is added on the intermediate metal
    layer. This configuration has improved the antenna impedance bandwidth by 38%.
    In addition, it increased the electrical length of the dipole antenna to reduce
    the antenna resonant frequency by 10 GHz. The proposed antenna has a total area
    1300 × 250 μm, and its wide bandwidth extends from 21 to 40 GHz at reflection
    coefficient |S11| < –7 dB, which makes it suitable for on-chip wireless sensor
    network applications in 5G technology. All Simulations are completed by using
    the Ansys HFSS (high-frequency structure simulator) ver.15 and the simulated results
    show a good comparison with measurements. To investigate the proposed antenna's
    performance in different environmental conditions, practical measurements for
    soil dielectric constant in different compositions with variable moisture ratios
    are applied. The resulting values are used in antenna simulation and have ultimately
    proved the antenna's improved capability to sense soil moisture in different conditions.
  doi: 10.1002/mmce.22556
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register International Journal of RF and Microwave Computer-Aided Engineering
    REVIEW ARTICLE Full Access 5G wideband on-chip dipole antenna for WSN soil moisture
    monitoring Dalia Elsheakh,  Heba Shawkey First published: 05 February 2021 https://doi.org/10.1002/mmce.22556Citations:
    1 SECTIONS PDF TOOLS SHARE Abstract Recently, soil dielectric constant detection
    has been used in the irrigation of vastly differing farming conditions. Soil monitoring
    has seen a push toward fifth generation (5G) telecommunications technology, due
    to the higher speed and bandwidth required to connect a huge number of sensor
    nodes simultaneously. A novel architecture for a fully integrated, unequal arms
    dipole antenna is presented in this article. The proposed on-chip antenna is implemented
    using UMC180 nm CMOS technology. A dipole radiator is added on the upper metal
    layer, a ground sheet set at the lower metal layer and a patch layer is added
    on the intermediate metal layer. This configuration has improved the antenna impedance
    bandwidth by 38%. In addition, it increased the electrical length of the dipole
    antenna to reduce the antenna resonant frequency by 10 GHz. The proposed antenna
    has a total area 1300 × 250 μm, and its wide bandwidth extends from 21 to 40 GHz
    at reflection coefficient |S11| < –7 dB, which makes it suitable for on-chip wireless
    sensor network applications in 5G technology. All Simulations are completed by
    using the Ansys HFSS (high-frequency structure simulator) ver.15 and the simulated
    results show a good comparison with measurements. To investigate the proposed
    antenna''s performance in different environmental conditions, practical measurements
    for soil dielectric constant in different compositions with variable moisture
    ratios are applied. The resulting values are used in antenna simulation and have
    ultimately proved the antenna''s improved capability to sense soil moisture in
    different conditions. 1 INTRODUCTION Smart farming is a development that emphasizes
    the use of information and communication technology in the cyber-physical farm
    management cycle. New technologies are expected to leverage this development and
    introduce more robots and artificial intelligence in farming.1 This is encompassed
    by the phenomenon of big data, where massive volumes of data, in a wide variety
    of forms, can be captured, analyzed, and used for decision-making. Recently, fifth
    generation (5G) technology with integrated communication capabilities has the
    strong potential for the robust, sustainable, and informed resource management
    in urban and rural communities. It provides real-time data on the effects of agricultural
    practices, and offers unprecedented opportunity for analytics. These new abilities
    to monitor, track, and quickly automate systems are giving rise to “smart farming.”
    Wireless sensor networks (WSNs) are expected to become one of the 5G applications
    for sensing and monitoring,2 which needs high-data rate and high-speed transmission.
    They are widely used for environmental condition monitoring to improve traditional
    methods of farming by predicting crop health and production quality over time
    in smart farms. Irrigation scheduling is predicted with WSNs by monitoring the
    soil moisture and weather conditions. As shown in Figure 1, environment-monitoring
    systems consists of large numbers of dense wireless sensor nodes distributed in
    an agricultural environment and responsible for measurement of temperature, humidity,
    and other parameters.3 FIGURE 1 Open in figure viewer PowerPoint Wireless sensor
    network deployed for agricultural applications The collected data is transmitted
    to a base-station to then be sent to a remote user through other, more powerful
    nodes with the functionality to make a processing decision. Literature has described
    low power fully integrated sensors for WSN applications,4-7 but the lack of an
    integrated antenna discourages its usage for sensing applications. In modern microwave
    remote sensing, several bands are used: L-band (1-2 GHz), C-band (4-8 GHz), X-band
    (8-12 GHz), and K-band (12-40 GHz).8 This gives rise to the demand for fully integrated,
    miniaturized antennas that require performance optimization to fulfill different
    soil states. The dielectric constant of soil varies according to soil composition,
    humidity, rainfall, and other factors, and could affect antenna performance, causing
    resonance frequency shift out of the sensor node''s frequency band. This variation
    in resonant frequency could be detected to determine irrigation periods and quantity
    for different crops.9 These many factors that could affect dielectric constant
    variation (as soil depth, rainfall, humidity, temperature, soil composition, etc.)
    can thus lead to a large deviation in resonance frequency. In order to monitor
    all soil changes (environmental, fertilization, nutrition levels, moisture, etc.),
    many sensors are integrated in a sensor node, and each should have its own separate
    frequency channel. With a large number of sensor nodes required to cover the farming
    area, wide bandwidth is required to cover all sensing conditions. This article
    describes an on-chip, unequal arms dipole antenna with wide impedance bandwidth
    extends from 26.5 to 36.5 GHz with percentage 30% at |S11| ≤ −10 dB. In addition,
    the operating bandwidth of the proposed antenna at |S11| ≤ −7 dB10-14 is extended
    from 21 to 40 GHz, with 61% fraction impedance bandwidth. The proposed antenna
    is implemented using six metal layers UMC 180 nm CMOS technology, were only three
    metal layers are used for antenna implementation. It consists of three layers:
    a dipole structure layer, a ground sheet layer, and a patch intermediate layer
    located between them. This patch layer added extra length to reduce the dipole
    resonant frequency from 42 to 32 GHz, with no need to increase the implementation
    antenna size area. A major concern in the integration of OCAs is the electromagnetic
    interference (EMI) resulting from mutual coupling between the antenna and the
    high-frequency front end through silicon substrate.15 To ensure the stability
    of the proposed antenna, the ground sheet layer is set between the antenna and
    the substrate to prevent the wave propagation through the substrate to avoid EMI,
    as well as it increased the antenna bandwidth, which is needed to meet resonance
    frequency deviations. Practical measurements for soil dielectric constant under
    different composition and humidity states are carried out to obtain values in
    several sensing conditions for the operating antenna bandwidth. The proposed antenna
    is simulated using these measured values, and the provided wideband of the proposed
    antenna covers all frequency deviation that could be occurred. The remainder of
    this article is organized as follows: Section 2 describes details of the antenna
    dipole design and simulations; Section 3 presents the measurement of the proposed
    antenna and mixture soil, while Section 4 presents the practical measurements
    of soil dielectric constant in different soil states and studies its effect on
    antenna performance. Finally, the article is concluded in Section 5. 2 ANTENNA
    DESIGN AND SIMULATIONS Frequency spectrum for 5G technology extends in four licensed
    bands in addition to a new unlicensed band.16-19 The licensed bands include a
    low frequency band from 3 to 7 GHz and three upper frequency bands at 28 GHz (27.5-28.35 GHz),
    37 GHz (37-38.6 GHz), and 39 GHz (38.6-40 GHz). In this work, restricted band
    from 21 GHz to 40 GHz has been selected.20, 21 The proposed antenna is realized
    using UMC 180 nm CMOS technology. The technology layers consist of a low-resistivity
    Si substrate, six metal layers (M1-M6) embedded in inter-dielectric layers, with
    the upper metal layer M6 is covered with a passivation layer. Figure 2A shows
    the 3D configuration of the proposed antenna with three layers: the dipole structure
    at upper metal layer M6, the patch layer at intermediate metal layer M4, and the
    ground sheet at metal layer M1. Figure 2B shows detailed description for each
    layer. FIGURE 2 Open in figure viewer PowerPoint A, 3D configuration with its
    three layers structure. B, Proposed 2D wideband antenna The dipole comprises a
    half wavelength dipole radiating element implemented at a length of 1300 μm, the
    ground sheet has a total area of 1300 × 250 μm2 while the intermediate patch layer
    has an area of 1100 × 50 μm2. This intermediate patch layer in M4 acts as a parasitic
    element, which adds extra electric length to the one dipole arm to reduce the
    resonant frequency from 42 to 32 GHz, with a 31% reduction in area from original
    dipole size. Furthermore, this layer created a staggered resonant frequency, which
    contributed to the broadening of the bandwidth of the on-chip antenna from 23%
    to 61% at |S11| ≤ –7 dB.22 A ground layer is set at the bottom metal layer M1
    with total area 1300 × 250 μm. The patch layer is stacked to the dipole through
    VIA1. A signal PAD and ground PAD each with an area 80 × 60 μm are separated by
    150 μm. The ground layer is connected to the Ground PAD through VIA2. The separation
    between the ground sheet and the dipole arm is 2.1 μm while separation between
    the dipole arm and dipole layer is 3.56 μm. The proposed dipole antenna with its
    unequal arms is designed in this article to reduce the resonant frequency and
    improved the antenna bandwidth. The design, modeling, and simulation of the proposed
    dipole antenna are done using high-frequency structure simulator (HFSS) ver. 15,
    which is a three-dimensional electromagnetic field simulator. The simulated antenna
    reflection coefficient is shown in Figure 3A, while the resulting input impedance
    real and imaginary values are shown in Figure 3B. The current distribution of
    the proposed dipole at different resonant frequencies is shown in Figure 4. FIGURE
    3 Open in figure viewer PowerPoint A, Reflection coefficient vs frequency of the
    proposed antenna. B, Input impedance real and imaginary FIGURE 4 Open in figure
    viewer PowerPoint Surface current distribution of the proposed antenna at different
    resonant frequency. A, 28 GHz. B, 30 GHz. C, 34 GHz 3 PROPOSED ANTENNA PERFORMANCE
    MEASUREMENT The proposed dipole antenna reflection coefficient is measured in
    the microstrip Lab-Electronics Research Institute (ERI). The measured reflection
    coefficient is achieved by using on-wafer probing. The measurements setup shown
    in Figure 5, composed of one GSG 67 GHz PicoProbe-RF probe (pitch: 150 μm) and
    ZVA67 Rohde and schwarz vector network analyzer from 10 MHz to 67 GHz. The fabricated
    UMC180nm setup die (miniasic 1.525 × 1.525 mm) is fixed at PM5 KarlSuss manual
    probe-station. The photo of the fabricated antenna is shown in Figure 6A with
    four ground PADS all connected to the ground metal layer M1, the extra PADS have
    no effect on antenna performance but was added due to measurements concerns. To
    ensure the accuracy and reliability of measurements proper fixture is applied.
    The die is fixed on the probe-station holder using vacuum pump while the GSG probe
    and the positioner are held by a manipulator that has magnetic fixture to ensure
    accurate contact between the die and the GSG probe. Other measurement problems
    that can cause uncertainty of measurements8 was avoided by using a calibration
    substrate at the beginning of the measurements to ensure accurate calibration
    for the complete setup (network analyzer, cabling, and probe) whenever it produces
    a reading different than the standard. Besides, before each measurement experiment
    the VNA was calibrated using (the open short, through calibration kit). Figure
    6B shows the comparison of the reflection coefficient between the simulated and
    measured data. There is good agreement between the start and the end of the designed
    dipole bandwidth, which indicates the reliability of measurements. There are some
    ripples in the measured results could be attributed from metal holder are not
    considered. As well as the influence of larger wafer with the chuck and the uncertainty
    in the dielectric material properties. Moreover, the dielectric material properties
    are specified up to 15 GHz and the dielectric material properties of the layer
    are identify up to 40 GHz. In the simulations, these values have been used for
    the characterization of the structure at 65 GHz. FIGURE 5 Open in figure viewer
    PowerPoint The setup of the reflection coefficient measurement FIGURE 6 Open in
    figure viewer PowerPoint A, Phoo of the fabricated dipole antenna and B, proposed
    antenna performance measured and simulated of |S11| So that the permittivity of
    the dielectric layer is somewhat higher than the permittivity that is identify
    at 15 GHz. furthermore, the thickness of the layer can introduce some tolerance
    on the thickness. Realized antenna gain and radiation efficiency vs frequency
    of the proposed dipole antenna depicted in Figure 7A. The peak gain of the proposed
    antenna is 1 dBi at 28 GHz while the radiation efficiency is about 55%, this value
    is almost high for on chip antenna and accepted for addressed monopole antenna.18,23-27
    Due to high losses of silicon substrate in the millimeter-wave (MMW) range, negative
    gain occurs. This can be compensated by adding an extra gain stage in the RF-front
    end of the sensor node as Power amplifiers. The extra gain stage can fulfill the
    transmitted power requirements, with a slight increase in implementation area.
    The simulated 3D radiation pattern for the total realized antenna shown in Figure
    7B-D at three resonant frequencies 28, 30, and 34 GHz, respectively. The normalized
    of the three main antenna coordinates plane at different resonant frequency are
    shown in Table 1. Due to no radiation pattern measurement equipment are available
    in ERI laboratory, the presented gain and radiation pattern are only simulated
    results. As the measured S-parameters has a good agreement with simulation results,
    it could be attributed that the simulated results of the radiation pattern are
    near to measured values. FIGURE 7 Open in figure viewer PowerPoint A, Gain and
    radiation efficiency vs frequency and B-D, 3D radiation pattern and antenna gain
    at 28, 30, and 34 GHz, respectively TABLE 1. The 2D polar radiation pattern Φ
    = 00, Φ =900, and Θ =900 at different resonant frequencies 28 GHz 30 GHz 34 GHz
    4 SOIL DIELECTRIC PROPERTIES MEASUREMENTS The percentage of the water in the soil
    or moisture content effects on the soil properties are studied in this section.
    Wireless sensors emanate as active tools for real-time, nondestructive, and continuous
    sensing of moisture content, temperature, humidity, and other environmental parameters
    should be used to identify the quality of a product and its processing conditions
    as irrigation periods and quantity. The WSN soil monitoring could meet change
    in the dielectric constant in a composite material of the soil such as the mud
    soil, and sandy soil structures, which have permittivity that is mainly governed
    by the presence of liquid water. The measurements of the dielectric parameters
    have been proposed by using different conventional methods as the microstrip resonator,
    the time-domain reflectometry (TDR), as well as the phase shift detection of the
    transmission line or parallel-plate electrode.28, 29 In these measurements, the
    soil under test conditions must be brought into contact with microstrip line or
    using near field of the probing electrodes. However, the traditional methods are
    difficult to apply to the wireless applications in the far field, such as monitoring
    the moisture in the soil. The dielectric assessment kit System (DAKS-3.5 Speag)
    as probe method used in the Electronics Research Institute shown in Figure 8 is
    very broad in frequency range from 10 MHz to 67 GHz to measure the electrical
    properties of different types of soil. Three types of soil compositions are tested
    as sand, mud, and mixture soil between mud and sand with different water concentrations.
    FIGURE 8 Open in figure viewer PowerPoint The DAKS-3.5 Speag to obtain the electrical
    properties of different types of soil The dielectric constant measurements are
    done at four different soil moisture ratios. First, a dry soil which is a 100 mL
    of soil with no existing water then different volumes of water (25, 50, and 75 mL)
    are added successively to the 100 mL of dry soil to obtain the 25%, 50% and 75%
    soil moisture ratios. The accuracy of measurements is influenced by input impedance,
    so a full one port SOLT (short, open, load, and through) calibration for the complete
    setup is performed during each measurement case. Figures 9, 10, and 11 show that
    the different dielectric value (real, imaginary, conductivity, and tangent loss
    tan δ) with different water concentration in the proposed antenna operation frequency
    range extended from 20 to 40 GHz. Figure 9 shows the dielectric constant for the
    sand soil changes from 1.5 to 18 and from 0.005 to 0.7 real and imaginary parts,
    respectively. As well as conductivity changes from 0.008 to 0.08 S/m and tangent
    loss changes from 0.005 to 0.065. Figure 10 shows the measured results of mud
    soil dielectric constant changes from 2 to 22.5 and from 0.03 to 0.55 (real and
    imaginary parts respectively), conductivity changes from 0.01 to 0.08 S/m and
    tangent loss changes from 0.005 to 0.06. Finally, Figure 11 shows the results
    of the composite soil 50% mud and 50% sand dielectric constant changes from 2
    to 22 and from 0.01 to 0.065 (real and imaginary parts respectively), conductivity
    changes from 0.025 to 0.08 S/m and tangent loss changes from 0.001 to 0.07. The
    average values over the frequency operating band of the four water concentrations
    are summarized in Table II (A, B, and C). FIGURE 9 Open in figure viewer PowerPoint
    The electrical properties of the sand A, real value, B, imaginary value, C, conductivity,
    and D, tangent loss FIGURE 10 Open in figure viewer PowerPoint The electrical
    properties of the mud soil A, real value, B, imaginary value, C, conductivity,
    and D, tangent loss FIGURE 11 Open in figure viewer PowerPoint The electrical
    properties of the mixture soil A, real value, B, imaginary value, C, conductivity,
    and D, tangent loss TABLE II. Average values of the electrical properties of soil
    (A) Sandy soil Water % ε''(Real) ε'' (Imaginary) Conductivity S/m Tan δ Dry 1.5
    0.002 0.008 0.05 25% 10 0.08 0.04 0.03 50% 16 0.04 0.06 0.04 75% 18 0.08 0.08
    0.06 Water % (B) Mud soil Dry 2.5 0.008 0.005 0.005 25% 14 0.08 0.04 0.035 50%
    17 0.35 0.06 0.04 75% 22 0.55 0.08 0.065 Water % (C) Mixture soil Dry 2 0.011
    0.02 0.005 25% 13 0.03 0.04 0.038 50% 16 0.42 0.06 0.065 75% 21 0.066 0.08 0.07
    Figure 12A presents the simulation model used for the proposed dipole antenna
    performance tested in different soil three different soil. The average measured
    dielectric constant are used in the HFSS simulator to complete the simulation
    case to check its performance and frequency shift in different soil states, with
    the proposed antenna impeded in thick layer that represents the soil with cuboid
    dimensions W × L × H are equal to 50 × 40 × 30 mm3 with different dielectric constant
    according to soil state. The simulation in case of sandy soil, mud soil, and the
    mixture soil are shown in Figure 12B-D, respectively. No practical measurements
    for the antenna in the presence of soil is applied, as fixing the antenna and
    the measurement probe is not possible due to the tiny size of the fabricated die.
    The practical measurements for similar systems have been described for complete
    IC fixed on PCB.30-32 FIGURE 12 Open in figure viewer PowerPoint A, Configuration
    of the proposed antenna impeded in the soil, B, Sand soil, C, Mud soil, and D,
    Mixture soils According to water concentration increased the real and imaginary
    values of the soil dialectic constant are set. The simulation results show that
    the variations of the soil moisture cause slight deviation in the antenna resonance
    frequency and the values of the reflection coefficient. The frequency variations
    are located within the designed bandwidth, which confirms the reliability of the
    proposed antenna to operate in different environmental conditions. In addition,
    the amount of change of the antenna frequency and reflection coefficient could
    indicate the water concentration percentage of the soil. The variation of the
    antenna performance in different soil with different water percentage is shown
    in Table III. Table III shows that the most significant variation done in both
    frequency and the |S11| in the sandy soil then mixture soil and less significant
    occurs in mud soil. Resonance frequency deviation can be detected using frequency
    to voltage comparator and used to determine soil water content. TABLE III. Comparison
    of dipole antenna performance with different soil Water % ∆F (MHz) ∆|S11| (dB)
    25% 50% 75% 25% 50% 75% Sand 500 1000 2000 1 3 5 Mud 450 750 1000 2 2.5 4 Mixture
    600 1000 2500 1.5 2 3 A supervised learning method as support vector machine learning
    could be used to generate an in-laboratory calibration curves for the predetermined
    soil state at different conditions. For example at a certain soil composition
    and fixed sensor depth, many graphs for dielectric constant values vs resonance
    frequency could be extrapolated, each at a certain climate condition (sun light,
    rain full, temperature, humidity, etc.) Later, during sensing process the measured
    value of frequency deviation is compared with the stored in-laboratory value at
    the present climate to obtain the soil dielectric constant and extract the moisture
    content to determine appropriate irrigation period and quantity. PVT (process-voltage-temperature)
    variations lead to instability of antenna performance, reduce its reliability,
    and increase the uncertainty for the LUTs (Look up tables) of stored data. To
    obtain a realistic assessment for the measured values, repeated updated measurements
    on reference soil mixtures should be applied during fixed periods. The division
    between the stored data and the updated measurements can be used to adjust of
    the antenna measurements. The effectiveness of this approach depend on the identification
    of suitable reference soil mixtures used. The comparison of the performance parameters
    between the proposed antenna and other MMW antennas are shown in Table IV. The
    proposed unequal arms dipole antenna indicates a significant gain improvement
    with area reduction. Its wideband with small area makes it a good choice for WSN
    miniaturized nodes, besides its frequency band is compatible with CMOS frequency
    operation range. TABLE IV. COMPARISON OF THE PROPOSED ANTENNA WITH OTHER LITERATURE
    OF THE 180NM CMOS TECHNOLOGY Reference 18 33 34 35 36 37 This work Freq. (GHz)
    at |S11| ≤ -10 dB 138-142 24 0.902-0.928 5.2 56-66 8-10 26-37 |S11 −15 – −15 −20
    −15 – −12 Average gain (dBi) −2 −11 – −20 −2.2 – −2 Area (mm2) 0.72 0.8 2.52 3.84
    2.4 4 0.325 5 CONCLUSION In this article, a wideband antenna is proposed for WSN
    applications in 5G technology. An unequal arms dipole antenna consists of a dipole
    structure stacked with a patch layer in a lower metal layer and a ground metal
    sheet is designed. The proposed structure is fabricated using UMC 180 nm CMOS
    process with a total area 1300 × 250 μm. Simulation is done and compared with
    measurements and shows operation range extended from 21 to 40 GHz with average
    gain about −2 dBi. Practical measurement for soil dielectric constant in different
    compositions and water concentrations are applied. Simulation of the dipole antenna
    using the measured dielectric constant values confirms the reliability of this
    antenna and proved its ability to sense the moisture of the soil in different
    compositions. Comparison with previous on-chip antenna works shows significant
    gain improvement and size reduction, which is a good solution for on-chip fully
    integrated applications. Biographies Dalia M. Elsheakh received the B.Sc., M.Sc.,
    and PhD degrees from Ain Shams University in 1998, 2005, and 2010, respectively.
    M.S. Thesis was on the design of Microstrip PIFA for mobile handsets. PhD through
    channel with Hawaii University, USA at 2008, her thesis was in Electromagnetic
    Band-Gap Structure. From 2010 to 2015, she was Assistant professor and from 2016
    until now she is Associate Prof. in Microstrip Department, Electronics Research
    Institute. She was Assistant Prof. at the HCAC, College of Engineering, Hawaii
    University USA at 2014 and 2018. Dr. Elsheakh acts in editorial boards in several
    Journal and published several paper in peer-refereed journals and about 50 papers
    in International Conferences. She has five books and three patents. She is a single
    and co-author in more than 60 Journal papers. She is a supervisor on master and
    PhD theses in different universities in Egypt. She has a member in many contracted
    projects (13 research and development project) as Co PI funded from many funding
    agencies such as ASRT, NTRA, NSF, STDF, etc. She is awarded several prizes as
    Award for the third Best Researcher in Electronics Research Institute in 2015,
    2018, and 2020. She is included in several biographical indexes and acts as reviewer
    in many international societies in her field as IEEE AP-S. Heba A. Shawkey received
    her BSc and MSc in Electrical Engineering, in 1993 and 2000, respectively, from
    Ain Shams University-Egypt and her PhD degree in 2005 from the Cairo University,
    Egypt. Dr. Heba has been working in Electronics Research Institute since 1994
    and her main research interests are wireless communication systems design, analog/mixed-signal/RF
    circuits, especially high-speed PLL and frequency synthesizers. She also has many
    publications in low power digital circuit design, biomedical sensors read-out
    circuits, interconnect modeling and low power networks on chip (NoC). Now she
    is a member in nanotechnology Lab and now she is working in the field of nanomaterial
    electronics applications as graphene and CNT. REFERENCES Citing Literature Volume31,
    Issue4 April 2021 e22556 Figures References Related Information Recommended A
    novel wideband high‐gain modified biquad dipole antenna Ehsan Amin,  Behbod Ghalamkari,  Mohammad
    Naser-Moghadasi International Journal of RF and Microwave Computer-Aided Engineering
    Design of printed dipole antenna for ultra wideband applications K. Shambavi,  Zachariah
    C. Alex Microwave and Optical Technology Letters Low Profile UWB Log‐Periodic
    Dipole Antenna for Wireless Communication with Notched Band M. K. Khandelwal,  Binod
    Kr Kanaujia,  A. K. Gautam Microwave and Optical Technology Letters An efficient
    tunable decoupling and matching method for simplifying compact dual-band mobile
    terminal antennas Yi Chen,  Changzhou Hua,  Jun Xu,  Yunlong Lu,  Jifu Huang International
    Journal of RF and Microwave Computer-Aided Engineering Design of a printed log‐periodic
    dipole array antenna with high gain for millimeter‐wave applications Osama M.
    Haraz,  Abdel-Razik Sebak,  Saleh A. Alshebeili International Journal of RF and
    Microwave Computer-Aided Engineering Download PDF Additional links ABOUT WILEY
    ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage Cookies Accessibility
    Wiley Research DE&I Statement and Publishing Policies Developing World Access
    HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES
    Subscription Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley
    Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related
    companies. All rights reserved, including rights for text and data mining and
    training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: International Journal of RF and Microwave Computer-Aided Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 5G wideband on-chip dipole antenna for WSN soil moisture monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lacerda L.N.
  - Cohen Y.
  - Snider J.
  - Huryna H.
  - Liakos V.
  - Vellidis G.
  citation_count: '4'
  description: Remotely sensed-based surface temperature is an important tool for
    crop monitoring and has great potential for improving irrigation management. However,
    current thermal satellite platforms do not display the fine spatial resolution
    required for identifying crop water status patterns at the field scale. The thermal
    sharpening (TsHARP) utility provides a technique for downscaling coarse thermal
    images to match the finer resolution of images acquired in the visible and near
    infrared bandwidths. This sharpening method is based on the inverse linear relationship
    between vegetation fraction calculated from the normalized difference vegetation
    index (NDVI) and land surface temperature (LST). The current study used the TsHARP
    method to sharpen low-resolution thermal data from the Moderate Resolution Imaging
    Spectrometer MODIS (1 km) to the finer resolution of Sentinel-2 (10 m) and Vegetation
    and Environment New micro-Spacecraft (VENµS) (5 m) visible-near infrared images.
    The sharpening methodology was evaluated at scene and field scales in southern
    Georgia and northern Mississippi, USA. A comparison of sharpened temperature was
    made with reference temperatures from Landsat-8 Operational Land Imager (OLI)
    in four different spatial resolutions (30, 60, 120, and 240 m) for method validation.
    Coarse resolution comparison on the dates in which imagery from both sensors were
    acquired on the same day resulted in average observed mean absolute error (MAE)
    of 1.63◦C, and R2 variation from 0.34 to 0.74. Temperature errors at the field
    scale ranged from 0.25 to 3.11◦C using both Sentinel-2 and VENµS. Sharpened maps
    at 120 and 60 m resolution showed the highest consistency for all fields and dates.
    Maps sharpened using VENµS images showed comparable or higher accuracy than maps
    sharpened using Sentinel-2. The superior performance coupled with the better revisit
    time indicates that the VENµS platform has high potential for frequent in-season
    crop monitoring. Further research with ground data collection is needed to explore
    field use limitations of this methodology, but these results give useful insights
    of potential benefits of implementing the TsHARP technique as a tool for crop
    stress monitoring.
  doi: 10.3390/rs13061155
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Remote Sensing All Article Types Advanced   Journals
    Remote Sensing Volume 13 Issue 6 10.3390/rs13061155 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editor Clement
    Atzberger Subscribe SciFeed Recommended Articles Related Info Link More by Authors
    Links Article Views 3290 Citations 4 Table of Contents Abstract Introduction Materials
    and Methods Results and Discussion Conclusions Author Contributions Funding Acknowledgments
    Conflicts of Interest Appendix A. Coordinates and Area of All Fields Selected
    for This Study References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle Field Scale Assessment of the TsHARP Technique
    for Thermal Sharpening of MODIS Satellite Images Using VENµS and Sentinel-2-Derived
    NDVI by Lorena N. Lacerda 1,*, Yafit Cohen 2, John Snider 1, Hanna Huryna 3, Vasileios
    Liakos 4 and George Vellidis 1 1 Department of Crop and Soil Sciences, University
    of Georgia, Tifton, GA 31793, USA 2 Institute of Agricultural Engineering, Agricultural
    Research Organization (ARO), Volcani Center, Rishon Leziyyon 7505101, Israel 3
    The Blaustein Institutes for Desert Research, Ben-Gurion University of the Negev,
    Sede Boqer Campus, Midreshet, Ben-Gurion 84990, Israel 4 Department of Agronomy
    and Agrotechnology, University of Thessaly, 41500 Larissa, Greece * Author to
    whom correspondence should be addressed. Remote Sens. 2021, 13(6), 1155; https://doi.org/10.3390/rs13061155
    Submission received: 28 December 2020 / Revised: 12 March 2021 / Accepted: 14
    March 2021 / Published: 18 March 2021 (This article belongs to the Special Issue
    Remote Sensing for Crop Water Stress Detection and Irrigation Management) Download
    keyboard_arrow_down     Browse Figures Versions Notes Abstract Remotely sensed-based
    surface temperature is an important tool for crop monitoring and has great potential
    for improving irrigation management. However, current thermal satellite platforms
    do not display the fine spatial resolution required for identifying crop water
    status patterns at the field scale. The thermal sharpening (TsHARP) utility provides
    a technique for downscaling coarse thermal images to match the finer resolution
    of images acquired in the visible and near infrared bandwidths. This sharpening
    method is based on the inverse linear relationship between vegetation fraction
    calculated from the normalized difference vegetation index (NDVI) and land surface
    temperature (LST). The current study used the TsHARP method to sharpen low-resolution
    thermal data from the Moderate Resolution Imaging Spectrometer MODIS (1 km) to
    the finer resolution of Sentinel-2 (10 m) and Vegetation and Environment New micro-Spacecraft
    (VENµS) (5 m) visible-near infrared images. The sharpening methodology was evaluated
    at scene and field scales in southern Georgia and northern Mississippi, USA. A
    comparison of sharpened temperature was made with reference temperatures from
    Landsat-8 Operational Land Imager (OLI) in four different spatial resolutions
    (30, 60, 120, and 240 m) for method validation. Coarse resolution comparison on
    the dates in which imagery from both sensors were acquired on the same day resulted
    in average observed mean absolute error (MAE) of 1.63 °C, and R2 variation from
    0.34 to 0.74. Temperature errors at the field scale ranged from 0.25 to 3.11 °C
    using both Sentinel-2 and VENµS. Sharpened maps at 120 and 60 m resolution showed
    the highest consistency for all fields and dates. Maps sharpened using VENµS images
    showed comparable or higher accuracy than maps sharpened using Sentinel-2. The
    superior performance coupled with the better revisit time indicates that the VENµS
    platform has high potential for frequent in-season crop monitoring. Further research
    with ground data collection is needed to explore field use limitations of this
    methodology, but these results give useful insights of potential benefits of implementing
    the TsHARP technique as a tool for crop stress monitoring. Keywords: image sharpening;
    thermal remote sensing; TsHARP; VENµS; Sentinel-2; MODIS; Landsat-8 1. Introduction
    Thermal remote sensing uses thermal infrared (TIR) bands in the 8 to 14 µm region
    of the electromagnetic spectrum in which atmospheric absorption effects are attenuated
    [1]. At the molecular level, plant absorption in the TIR bands is influenced by
    the absorption properties of leaf tissues driven by molecular vibration [2]. At
    the physiological level, absorption is directly influenced by the transpiration
    rate [3]. In drought conditions, plants that exhibit isohydric behavior tend to
    close their stomata to maintain leaf water potential (LWP). This decreases their
    transpiration rate significantly, leading to an increase in leaf temperature [4].
    The direct relationship between changes in leaf temperature resulting from changes
    in LWP makes TIR bands more sensitive to detecting water stress than other regions
    of the electromagnetic spectrum. Because of this, thermal imagery has become increasingly
    important in monitoring of water status for irrigation management [5] in crops
    such as coffee [6], cereals [7,8], and soybean and cotton [9]. Thermal infrared
    temperature maps can be used to estimate LWP and create LWP maps at the field
    scale. In turn, the LWP maps may be used to delineate LWP-based irrigation management
    zones (IMZs) for site-specific irrigation [10]. The spatial resolution of currently
    available satellite-based thermal imagery is not fine enough to identify crop
    water status patterns at the field scale. Satellite platforms such as Terra MODIS
    (Moderate Resolution Imaging Spectroradiometer) and NOAA-AVHRR (National Oceanic
    and Atmospheric Administration–Advanced Very High-Resolution Radiometer) have
    a very high temporal resolution (1 day), but a coarse spatial resolution of 1
    km [11]. Conversely, Landsat Thematic Mapper—TM, Landsat Enhanced Thematic Mapper
    Plus—ETM+, and Landsat Operational Land Imager—OLI, have higher spatial resolution
    of 120, 60, and 100 m respectively, but a low revisit time of 16 days. While Landsat
    datasets have a finer resolution, its low temporal resolution is not adequate
    for frequent monitoring required during the growing season for irrigation decisions.
    The occurrence of clouds can further decrease the availability of usable images.
    To address this tradeoff problem between low-resolution images with high revisit
    time and high-resolution images with low revisit time, sharpening methodologies
    to downscale TIR coarse resolution have been proposed [12]. These techniques to
    disaggregate land surface temperature (LST) are found in the literature under
    a variety of terms, such as thermal sharpening, subpixel temperature estimation,
    downscaling LST, component temperature retrieval, spatial enhancement of LST,
    and others [13], but they can be classified into two main categories, called temperature
    unmixing and thermal sharpening. The main difference between these two groups
    is that in temperature unmixing, the goal is to decompose the coarse mixed pixel
    temperature into its existing elements through temporal, spatial, and spectral
    observations, while thermal sharpening aims to enhance the thermal image by exploring
    the correlation between LST and auxiliary data such as vegetation cover [14].
    Thermal sharpening is the category most frequently used for downscaling thermal
    images. One of the earliest works using spatial sharpening dates back to 1985,
    wherein Landsat-4 Thematic Mapper (TM) thermal imagery was sharpened to 30 m resolution
    using a multiband least squares method [15]. This approach was possible due to
    the high correlation between the TM bands in agricultural scenes. A thermal image
    estimate was created using a coefficient predicted from Landsat-4 TM visible and
    infrared bands that was then used to enhance the spatial resolution on the original
    thermal band. Over the last 30 years, a variety of new sharpening algorithms have
    been suggested including the thermal sharpening (TsHARP) technique that was improved
    from the Disaggregation procedure for radiometric surface temperature (DisTrad)
    algorithm developed by Kustas et al. [16]. The DisTrad method uses the relationship
    between radiometric surface temperature and the Normalized Difference Vegetation
    Index (NDVI) to disaggregate temperature data at the NDVI finer image resolution.
    The NDVI resolution is first aggregated to the coarser resolution of the brightness
    temperature (BT) image and a second degree polynomial least-squares regression
    is fitted between the two variables. In this study, airborne images were used
    to estimate temperatures over the southern Great Plains by sharpening MODIS images
    to 200 m and provided temperature errors of ~1.5 °C. Agam et al. [11] proposed
    an improvement from the DisTrad algorithm by using vegetation fraction as the
    dependent variable instead of NDVI. Different types of land cover in a scene can
    cause increased number of outliers in the two ends of NDVI values. A summary study
    published in 2013 [13] indicated that Landsat TM and Terra Advanced Spaceborne
    Thermal Emission and Reflection Radiometer (ASTER) were the satellite platforms
    most frequently used for LST disaggregation. At the time, MODIS was a much younger
    platform, and since then has become widely utilized in downscaling approaches
    due to the high temporal frequency in which images are made available. With MODIS
    images collected on a daily basis, the availability of datasets for sharpening
    during the growing season depends on the satellite platforms used to derive visual
    and NIR (VNIR) data. Landsat 7 ETM+ [14,17] and Landsat-8 OLI [18] are commonly
    used to build the LST-NDVI regression and can generate roughly two sharpened images.
    Sentinel-2 has a higher revisit time and offers the potential of more sharpened
    images during the season. Clouds may greatly reduce the availability of useable
    images, especially in areas with frequent cloud cover. Sentinel-2 is a two-satellite
    platform operated by the European Space Agency (ESA) as part of the Copernicus
    earth observation program which became operational [19] in 2015. The two satellites
    are in the same orbit but spaced 180° apart. They provide data in 13 different
    spectral bands (443–2190 nm) with spatial resolutions of 10, 30, and 60 m and
    a revisit time of 5 days. Sanchez et al. [20] used Sentinel-2 VNIR data to sharpen
    MODIS images to a 10 m resolution over experimental fields in southeastern Spain.
    Over a period of 2 months, they sharpened LST images on 6 different days. In 2017,
    a super-spectral micro-satellite resulting from a partnership between the Israel
    Space Agency (ISA) and the French National Centre for Space Studies (CNES) was
    launched [21,22]. The Vegetation and Environment New micro-Spacecraft (VENµS)
    was intended to increase land data acquisition to, among other purposes, improve
    modeling of vegetation processes. This minisatellite has a revisit time of 2 days,
    a spatial resolution of 5.3 m, and a spectral resolution of 12 bands (420–910
    nm). Although the unique features of this low-orbit satellite show great potential
    for increased dataset frequency, to our knowledge, no studies have explored the
    use of VENµS in thermal sharpening methodologies. The majority of sharpening studies
    cited above explored the use of sharpening for large scene scales. However, very
    few studies have been conducted exploring the feasibility of using this technique
    in crop fields to aid in management decisions. In this context, the main goal
    of this work was to assess the use of the TsHARP technique to sharpen MODIS images
    using Sentinel-2 and VENµS in the southeastern USA at field scale and to assess
    if sharpened images have the potential to be used at the field scale for delineating
    irrigation management zones (IMZs) for variable rate irrigation in cotton. Applying
    this technique to this region is especially challenging because of frequent cloud
    cover during the growing season. The TsHARP use at scene scale was also assessed.
    Specific objectives were to compare the performance of the TsHARP technique using
    data from the two satellite platforms on overlapping dates. 2. Materials and Methods
    2.1. Study Sites This study was conducted in three different locations of the
    southeastern USA in which cotton is an important crop (Figure 1) using imagery
    from the 2019 growing season. The first and second study sites are located in
    southwestern Georgia and centered around 84°44′28″W, 31°11′28″N, and 84°33′7″W,
    31°26′42″N. The third study site is located in northeastern Mississippi centered
    around 88°51′42″W, 34°31′58″N. The Miller County scene (hereafter referred as
    to scene 1) is mostly composed of cotton fields, followed by woody wetlands, pine
    forest, and peanut fields. Land cover in scene 2, located in Baker County, Georgia,
    was 40% woody wetlands followed by pine forest, and cotton and peanut fields.
    The land cover in scene 3, located around Union County, Mississippi, was composed
    mostly of various types of forest, followed by pasture and soybean fields. All
    locations have similar subtropical climates with high humidity and hot summers,
    with the average air temperature of the hottest month (July) being equal to or
    greater than 22 °C [23,24]. The minimum and maximum average temperatures from
    July to November in the last 20 years were 15.6 and 27.4 °C [25]. Figure 1. Study
    locations for (a) the polygons used to define the satellite scenes and Sentinel-2
    false color composite of scenes used for thermal sharpening for study sites in
    (b) Miller County, Georgia (Scene 1) (c) Baker County, Georgia (Scene 2) and (d)
    Union County, Mississippi (Scene 3). The United States Department of Agriculture
    (USDA) National Agricultural Statistics Service’s (NASS) Cropland Data Layer (CDL)
    hosted by CropScape (https://nassgeodata.gmu.edu/CropScape/ (accessed on 9 July
    2020)) was used to identify fields that were planted with cotton during the 2019
    growing season. Extensive agricultural ground truth data acquired from the Common
    Land Unit (CLU) data from the USDA Farm Services Agency (FSA) is coupled with
    moderate resolution satellite images to create yearly crop-specific land cover
    maps of the whole continental United States [26]. A total of 22 cotton fields
    were identified for this study, with field sizes ranging from 14 to 164 ha (Table
    A1). 2.2. Satellite Images Acquisition and Processing Thermal images from MODIS
    and Landsat-8 Operational Land Imager (OLI) were acquired in all three locations
    on dates within the cotton growing period ranging from August to November 2019
    (Table 1). The MODIS product used was MODIS/Thermal Bands Daily L2B-Lite Global
    (MODTBGA), and it was download from the National Aeronautics and Space Administration
    (NASA) Earth Data Search website (https://search.earthdata.nasa.gov/search (accessed
    on 15 April 2020)). MODTBGA version 6 is available daily with a spatial resolution
    of 1 km (km) with sinusoidal projection, and it consists of brightness temperature
    data from three MODIS bands (bands 20, 31, and 32) [27]. After download, MODIS
    images were pre-processed using ArcGIS (Esri, Redlands, CA, USA). In ArcMap version
    10.2.2 (Esri, Redlands, CA, USA), MODIS band 31 was re-projected to the World
    Geodetic System (WGS) 1984 zone 16, and a scale factor of 0.01 was used to obtain
    brightness temperature values. Landsat-8 OLI images were downloaded directly from
    the United States Geological Survey (USGS) Earth Explorer website (https://earthexplorer.usgs.gov/
    (accessed on 20 April 2020)). Landsat-8 provides images with 15 (panchromatic),
    30, and 100 m (thermal) spatial resolution. However, thermal bands are disaggregated
    to 30 m resolution images by the Landsat Science team and are made publicly available.
    Landsat-8 pre-processing was performed by using the Semi-Automatic Classification
    Plugin (SCP) in QGIS 3.14.0 (QGIS Development Team, 2020) [28]. SCP offers pre-processing
    and post-processing tools for a variety of satellite images [29]. Radiometric
    calibration was performed on Landsat-8 thermal infrared band 10 (10.6–11.19 μm),
    where the DOS1 (Dark Object Subtraction) atmospheric correction technique was
    used to convert data to Top of Atmosphere (TOA), and correct for solar irradiance
    effects. SCP was also used to convert values to brightness temperature in Celsius.
    Table 1. Satellites’ data acquisition dates for all three locations and selected
    dates for field scale validation of the Moderate Resolution Imaging Spectrometer
    MODIS for both Sentinel-2 and VENµS (gray). Visual-near infrared (VNIR) data from
    Sentinel-2 was used for sharpening in all three locations. Images were downloaded
    from the USGS Earth Explorer website. SCP was used to perform atmospheric correction
    in all Sentinel-2A images. The SCP used DOS1 atmospheric correction for Sentinel-2
    images as well. Band 8 (842 nm) and band 4 (665 nm) were used to calculate NDVI.
    VNIR images from VENµS were also utilized for thermal sharpening of MODIS. VENµS
    data were only available for the scenes in Georgia (Miller and Baker counties).
    Images were download from the Theia Data and Services Center for continental surfaces
    (https://www.theia-land.fr/en/data-and-services-for-the-land/ (accessed on 20
    April 2020)). VENµS-based NDVI was calculated using bands 11 (865 nm) and 5 (620
    nm) from the level 2 product. VENµS level 2 product provides fine cloud and shadow
    mask, and it is already atmospherically corrected. Due to the differences in satellite
    temporal resolution, and frequent cloud coverage during the summer in the study
    areas, the difference in acquisition date among the satellites used for TsHARP
    implementation (MODIS, Sentinel-2, and VENµS) was up to one day and up to five
    days for validation (MODIS and Landsat-8). 2.3. TsHARP Methodology As described
    previously, the TsHARP technique is based on the inverse relationship between
    LST and vegetation cover. The fractional vegetation cover (fc) is estimated from
    NDVI using Equation (1) [30]: 𝑓c=1− ( NDVI max −NDVI NDVI max − NDVI min ) 0.625
    (1) where NDVImax and NDVImin are the maximum and minimum NDVI values in the scene
    and NDVI is the index value in an individual pixel. The fc image is aggregated
    to a coarser resolution to match with the coarse resolution of the LST image,
    and an empirical linear regression model is fitted, as shown by Equation (2):
    𝐿𝑆 𝑇 𝑐𝑜𝑎𝑟𝑠𝑒 =a+b𝑓 c 𝑐𝑜𝑎𝑟𝑠𝑒 (2) where a and b are the intercept and slope resulting
    from the linear regression between LST and fc at coarse resolution. Coefficients
    a and b are then applied to the fine-resolution fc data (fc fine) and fine-resolution
    NDVI to predict LST at a finer resolution (Equation (3)) [19]. Coefficients a
    and b are also applied to the fc image at coarse resolution to derive a new LST
    image. The difference between the original LST image and the newly derived image
    is used to calculate the residual error image at coarse resolution. The residual
    error image is then disaggregated to a fine resolution and applied to the LST
    at finer resolution to increase the prediction accuracy (Equation (4)). A detailed
    explanation of the TsHARP algorithm was provided by Agam et al. [11]. 𝐿𝑆 𝑇 𝑓𝑖𝑛𝑒
    =a+b𝑓 c 𝑓𝑖𝑛𝑒 (3) 𝐿𝑆 𝑇 𝑝𝑟𝑒𝑑𝑖𝑐𝑡𝑒𝑑 =𝐿𝑆 𝑇 𝑓𝑖𝑛𝑒 +𝑟𝑒𝑠𝑖𝑑𝑢𝑎𝑙 𝑒𝑟𝑟𝑜𝑟 (4) 2.4. TsHARP Validation
    and Assessment The complete workflow of the TsHARP technique can be divided into
    two steps (Figure 2. Flowchart of the thermal sharpening (TsHARP) methodology,
    including inputs, outputs, and processing steps, and methodology validation using
    Landsat-8 images (modified after Huryna et al. [19]). The first step is the sharpening
    of MODIS images using Sentinel-2- and VENµS-derived NDVI to finer resolutions.
    The second step is the validation of the method by comparing the sharpened temperature
    with a reference temperature from Landsat-8 images at 30, 60, 120, and 240 m spatial
    resolution. The TsHARP validation was performed by fitting a linear regression
    model to MODIS BT and Landsat-8 BT images in the coarse and finer resolutions.
    The validation was performed at the scene scale for all dates for which images
    were downloaded and for selected dates at the field scale (See Table 1). Figure
    2. Flowchart of the thermal sharpening (TsHARP) methodology, including inputs,
    outputs, and processing steps, and methodology validation using Landsat-8 images
    (modified after Huryna et al. [19]). The methodology performance assessment was
    estimated using different quantitative statistics approaches [31]. Coefficient
    of determination (R2), root mean square error (RMSE), mean absolute error (MAE),
    and bias (Equations (5)–(8)) were calculated to estimate the level of agreement
    between predicted and reference temperatures: 𝑅 2 =1− ∑ ( 𝑇 𝑠ℎ𝑎𝑟𝑝 − 𝑇 𝑟𝑒𝑓  ) 2
    ∑ ( 𝑇 𝑠ℎ𝑎𝑟𝑝 − 𝑇 𝑟𝑒𝑓_𝑚𝑒𝑎𝑛  ) 2 (5) 𝑅𝑀𝑆𝐸=  ⎢ ⎣ ⎢ ⎢ 𝑛 −1 ∑ 𝑖=1 𝑛 ( 𝑇 𝑠ℎ𝑎𝑟𝑝 − 𝑇 𝑟𝑒𝑓
    ) 2 ⎥ ⎦ ⎥ ⎥ 1/2 (6) 𝑀𝐴𝐸=  ⎢ ⎣ ⎢ ⎢ 𝑛 −1 ∑ 𝑖=1 𝑛 ( 𝑇 𝑠ℎ𝑎𝑟𝑝 − 𝑇 𝑟𝑒𝑓 ) ⎥ ⎦ ⎥ ⎥ (7)
    𝑏𝑖𝑎𝑠=  ∑ 𝑛 𝑖 1( 𝑇 𝑠ℎ𝑎𝑟𝑝 − 𝑇 𝑟𝑒𝑓 ) 𝑛 (8) 3. Results and Discussion 3.1. Scene Scale
    The thermal sharpening validation was performed for a total of 14 dates using
    the MODIS/Sentinel-2 and MODIS/VENµS BT-NDVI regressions (Table 1). 3.1.1. Sensors’
    Comparison at Coarse Resolution The correlations between MODIS brightness temperature
    (BT) and aggregated Landsat-8 BT at coarse resolution are shown in Figure 3. Results
    showed that the correlations between the BT of the two sensors were similar towards
    the end of the season (end of October and beginning of November) when average
    temperatures were in the low 20 °C or below, with coefficients of determination
    (R2) ranging from 0.68 in scene 1 to 0.74 in scene 3. The regression model coefficients,
    however, were different. Despite having the highest R2 among the three scenes,
    the sensor comparison of scene 3 presented the highest RMS error and positive
    bias of 3.54 °C. In scenes 1 and 2, the RMS errors in this period were below 1.25
    °C, with a negative bias lower than 0.95. Figure 3. Relationship between MODIS
    BT and Landsat-8 BT at coarse resolution (930 m) in selected periods for Sentinel-2
    at (a) scene 1 (Miller County, GA, USA), (b) scene 2 (Baker County, GA, USA),
    and (c) scene 3 (Union County, MS, USA). MODIS acquisition dates were used as
    the reference date. In the months of August and September, correlations were overall
    lower, and varied with location. The lowest R2 values were observed in scene 1
    (0.31) followed by the third date in scene 3 (0.41) and first date in scene 2
    (0.44). The low relationship in these three dates can be attributed to cloud coverage
    in one or more images. Parts of the respective scenes were cropped to exclude
    areas affected by the clouds, substantially decreasing the number of pixels. In
    addition, methods utilized to mask clouds were not effective in removing areas
    under the clouds’ shadow. The combination of reduced number of pixels and BT values
    affected by cloud shadow led to a weaker relationship between sensor responses.
    A negative bias was observed in 7 out of 9 dates and indicates that temperatures
    extracted from MODIS scene were cooler when compared to Landsat-8. The comparison
    between these two sensors yielded RMS errors no higher than 1.92 °C in 6 out of
    9 dates. In the second date of scene 2, and the first and last dates in scene
    3, the RMSE values observed were higher, with errors ranging from 2.75 to 3.45
    °C. In 2 out of these 3 dates, the bias was positive and not negative like in
    most of the dates. No clear factors were found that can explain these deviations.
    Similar results were observed in the selected dates for VENµS analysis (Figure
    4). As mentioned earlier, VENµS images were only available for the two scenes
    in Georgia. The relationship between MODIS BT and Landsat BT was strong at the
    end of October when temperatures were lower, and weaker in the months of August
    and September. In the remaining dates, R2 values in scene 2 were again stronger
    than the ones observed in scene 1. The RMS errors varied between 1.03 to 2.14
    °C in both locations. Similar to MODIS/Sentinel-2 sharpening, a negative bias
    was observed for 3 out of 5 dates, while a positive bias was obtained for the
    other 2 dates. Figure 4. Relationship between MODIS BT and Landsat-8 BT at coarse
    resolution (930 m) in selected periods for VENµS at (a) scene 1 and (b) scene
    2. MODIS acquisition dates were used as the reference date. A study conducted
    in 2014 [32] reported differences between MODIS and Landsat satellite LST spatial
    distribution. Maximum temperatures showed a difference of about 15 °C. The range
    between minimum and maximum temperatures from Landsat were always wider than observed
    in MODIS (Table 2). In the study described here, towards the end of October, most
    of the crops were already harvested and fields had exposed soil, causing a more
    evident BT difference between dense vegetation and exposed soil, which could be
    more easily detected by the coarse spatial resolution from MODIS. During the months
    of August, September, and mid-October, most fields in the scenes still had vegetation
    cover from the crops, thus temperature changes were more subtle across different
    land covers. These subtle changes were depicted in the finer resolution from Landsat,
    leading to a wider range of temperature values compared to the smaller range from
    MODIS, resulting in a lower R2. Table 2. Scene minimum, maximum, and temperature
    ranges for MODIS (1 km) and Landsat-8 (30 m) original images. Coarse resolution
    sensor comparison showed that the BT range values of Landsat were always wider
    than observed in MODIS (Table 2). At one date (8/29), the Landsat BT range was
    double the MODIS BT and the max difference was as high as 6.4 °C. Similar results
    were observed by Weng et al. [32] when comparing Landsat TM LST to MODIS. In the
    two dates used in their study, similarities were observed only between minimum
    surface temperatures. Landsat TM maximum temperatures were considerably higher
    than in MODIS, causing great discrepancies in LST spatial patterns. Essa et al.
    [33] stated that surface temperature from MODIS were substantially lower than
    Landsat 7 ETM+ temperatures. A 5 °C mean temperature difference between the two
    sensors was achieved on six occasions. The results from 10 out of 14 dates examined
    in this paper showed a similar trend, where a negative bias was found between
    the two sensors. This consistently lower temperature presented by MODIS when comparing
    with Landsat sensors can be described as a systematic bias. Yet, the fact that
    some occasions showed different trends casts a shadow over this determination.
    The concept of systematic bias was discussed by Liu et al. [34]. A consistent
    bias between two satellites could be introduced by sensor measurement errors such
    as random noise. Satellite sensor-specific characteristics such as bandwidth,
    acquisition time, and orbit parameters are further causes of bias [32]. 3.1.2.
    TsHARP Validation Landsat-8 thermal images were aggregated to 60, 120, and 240
    m to perform validation at the four spatial resolutions proposed, including Landsat’s
    original resolution of 30 m. Table 3 and Table 4 show the statistics of sharpened
    images compared to reference maps in all the scenes studied using both VENµS-
    and Sentinel-2-based NDVI, respectively. Validation of thermal sharpening resulted
    in an overall higher R2 than only comparing sensor brightness temperatures at
    coarse resolution. Sharpened accuracy was higher in coarser resolutions (120 and
    240 m) in 10 of the 14 dates analyzed. In most remaining dates in which accuracy
    at 240 m was slightly lower than finer resolutions, portions of the scene had
    to be excluded prior to the analysis due to cloud cover. The decrease in the number
    of pixels in the 240 m resolution could have affected the sharpening accuracy.
    Based on the results, sharpening efficiency tended to decrease with increased
    targeted resolution. These findings are corroborated by results observed by Huryna
    et al. [19]. In their study, Landsat-8 and Sentinel-3 thermal imagery were resampled
    and then sharpened to 240, 120, and 60 m resolutions using Landsat-8 and Sentinel-2,
    respectively. In both cases, R2 values decreased and temperature uncertainty values
    increased as resolution increased, with highest error values of 1.17 and 1.45
    °C for Landsat and Sentinel-3, respectively. Table 3. Quantitative analysis of
    sharpened thermal maps using VENµS-derived normalized difference vegetation index
    (NDVI) in comparison to reference images from Landsat. Lag shows the difference
    in days between sharpened and Landsat-8 images. Table 4. Quantitative analysis
    of sharpened thermal maps using Sentinel-2-derived NDVI in comparison to reference
    images from Landsat. Lag shows the difference in days between sharpened and Landsat-8
    images. The coefficient of determination for Sentinel-2 validation dates in scene
    1 ranged from 0.55 at 30 m resolution to 0.76 at 240 m, with highest values occurring
    on 28 October, while for VENµS dates, the lowest value was 0.48 at 30 m, and the
    highest value was 0.8 at 240 m (Table 4). In scene 2, the method’s accuracy in
    dates available tended to be higher than achieved in scene 1 for both Sentinel-2
    and VENµS dates, with only three R2 values below 0.6. Remaining values for Sentinel-2
    varied from 0.6 to 0.8 and for VENµS, from 0.63 to 0.79. In this scene (scene
    1), the three weakest relationships were observed at the finer resolutions of
    30 and 60 m. Scene 3 displayed a similar performance as the two previous scenes,
    with values ranging from 0.50 to 0.77, except on 3 October, wherein the Landsat-8
    image had large areas in the middle of the scene covered by clouds and cloud shadow
    that were difficult to remove. The remaining affected pixels that were not excluded
    by the masking process affected the accuracy of validation. A 3 days difference
    in acquisition time between sharpened and reference images was observed and could
    have also been a cause of higher error, although no trend between error magnitude
    and time lag between satellites was observed. Validation of sharpened maps had
    slightly higher RMS errors than the sensors’ BT comparison at coarse resolution,
    with uncertainty increasing as the aimed resolution became finer. The highest
    errors were observed in the first and third dates of scene 3, with error values
    around 3.04 and 3.78 °C. It is worth emphasizing that MODIS and Landsat had a
    1-day difference in acquisition time when the highest error of almost 4 °C was
    observed. Lowest overall errors were observed in the last date of scene 2 for
    both Sentinel-2 and VENµS selected dates, with uncertainty around 1 °C at 240
    m spatial resolution. Although MAE values also tended to increase with increased
    resolution, its response was not the same as RMSE. Images sharpened to 120 and
    240 m resulted in MAEs similar or even lower than the mean errors from the temperature
    comparison at coarse resolution. Figure 5 shows the temperature error (sharpened
    T (°C) − reference T (°C)) maps at 60 m resolution at the three individual scenes
    and their respective land cover types. Error maps were created from MODIS/Sentinel-2
    from 27 October in scene 1, 28 October in scene 2, and 29 August in scene 3. Error
    maps were selected from dates in which there was a maximum of 1-day lag between
    images. In general, the sharpened BT was lower than the reference temperature.
    This corresponds with the systematic bias found with the sensor comparison in
    this paper. Scene 3 is composed in its majority by various types of forests with
    a lower percentage of grassland and small areas of sparse vegetation (crop fields)
    (Figure 5g). The low variability in land cover type in this scene led to a more
    homogeneous temperature error distribution (Figure 5h). Brightness temperatures
    were underestimated across the whole scene, with forest areas presenting the biggest
    differences in temperature between sharpened and reference maps. The land cover
    distribution in scenes 1 and 2 are more varied between dense and sparse vegetation
    (Figure 5a,d). Differently from scene 3, sharpened temperatures in scenes 1 and
    2 were frequently overestimated in woody wetlands and underestimated in cultivated
    fields with sparse vegetation and/or exposed soil. The higher variability in temperature
    errors across different land covers resulted in a lower accuracy of sharpening
    in these two scenes in Georgia when compared to the scene in Mississippi. Figure
    5. Land cover maps of (a) scene 1, (d) scene 2, and (g) scene 3, (b,e,h) are the
    respective temperature error maps (sharpened T (°C) − reference T (°C)) at 60
    m resolution, and (c,f,i) are the respective error histograms. Error maps/histograms
    presented were created from MODIS/Sentinel-2 sharpening from the last date of
    scenes 1 and 2, and first date of scene 3. Highest errors were observed in areas
    covered by wetland and bare soil. Huryna et al. [19] achieved conflicting results
    when sharpening Sentinel-3 images, with temperatures being underestimated over
    dense vegetation and overestimated over agricultural fields, with errors of 1.5
    to 3 °C in riparian areas. The bias between original MODIS and Landsat-8 images
    at coarse resolution were similar to errors seen at finer resolution and might
    help explain the conflicting results between the two studies. Great variability
    in the TsHARP performance was observed among the scenes and dates. LST–NDVI relationships
    were higher in the scenes with more homogenous land cover, resulting in overall
    higher accuracy. A high-temperature sharpening performance can be achieved when
    there is a good correlation between LST and vegetation cover [35]. Nevertheless,
    the linear relationship expected between LST and vegetation fraction does not
    always hold, leading to increased sharpening errors. Factors such as albedo and
    soil moisture can cause great variations in LST in areas with low NDVI [11]. The
    different moisture levels in these areas cause great variability in evaporation
    that drives surface temperatures to be lower or higher [35,36]. This temperature
    variation is hardly detected by the vegetation index, resulting in a triangular
    shape in the NDVI–LST feature space. Further causes of error can be associated
    to situations that do not follow the LST–NDVI inverse relationship. When in high
    air temperature and sunlight conditions with limited water availability, low LST
    values are expected in high NDVI areas such as dense vegetation due to high transpiration
    [37,38]. However, in a scenario in which energy is the limiting factor, transpiration
    and evaporation are decreased, leading to an often-positive correlation between
    NDVI and LST. These findings suggest that the LST–NDVI relationship is geographically
    variable. The use of geographically weighted regression-based algorithms might
    be beneficial to address local variations in LST–NDVI correlation [39]. 3.1.3.
    TsHARP Validation Comparison between VENµS and Sentinel-2 The validation results
    of MODIS coarse images’ thermal sharpening using VENµS VNIR was compared to results
    from sharpening using Setninel-2 on 28 October at scenes 1 and 2 (Figure 6). The
    sharpening performance using both satellites was comparable for both scenes, yielding
    similar temperature errors, accuracy, and bias. The relationship between sharpened
    and reference temperatures was strong in all instances with values ranging from
    0.68 to 0.80, and temperature uncertainty ranging from 1 to 1.47 °C. Although
    similar, MODIS/Sentinel-2 performance was slightly higher at 120 and 240 m in
    scene 2 when compared to scene 1, with R2 values of 0.77 and 0.8, while VENµS
    sharpening showed higher accuracy in scene 1 at all four different spatial resolutions.
    MODIS/VENµS was also slightly more accurate than MODIS/Sentinel-2 in scene 1 in
    all spatial resolutions, with R2 values of 0.71 and 0.69 at 30 m, 0.75 and 0.72
    at 60 m, 0.78 and 0.75 at 120 m, and 0.80 and 0.76 at 240 m resolutions for MODIS/VENµS
    and MODIS/Sentinel-2 respectively, while in scene 2, both models had the same
    R2 at 30 and 60 m, with Sentinel-2 achieving higher R2 at 120 and 240 m. Overall,
    scene 2 showed lower RMSE, MAE, and bias than scene 1 in both models, with highest
    values of 1.16, 0.93, and −0.80 for VENµS, and 1.18, 0.96, and −0.80 for Sentinel-2,
    respectively. Figure 6. Quantitative statistics of TsHARP validation yielded by
    MODIS sharpening using (a) scheme 2 and (b) VENµS at scenes 1 and 2. 3.2. Field
    Scale Field boundaries were extracted from sharpened and reference images at 30,
    60, 120, and 240 m to perform validation at a field scale for each individual
    field. The field selection criteria relied solely on the crop cultivated. Cotton
    fields were identified using USDA-NASS CropScape data layer from 2019. 3.2.1.
    MODIS/Sentinel-2 TsHARP Validation The validation of the sharpening algorithm
    in scene 2 was performed in eight fields on 9 September (Figure 7). An overall
    strong relationship between sharpened and reference temperatures was observed
    in fields 1 and 3 across all spatial resolutions, with R2 values ranging from
    0.60 at 30 m to 0.94 at 240 m, and 0.64 at 30 m to 0.88 at 120 m, respectively.
    The weakest relationships were observed for fields 8 and 4, wherein the model’s
    accuracy was below 0.5 in all resolutions. Remaining fields showed strong relationships
    at 60, 120, and 240 m, with the exception of field 5, in which higher accuracy
    was obtained only at coarser resolutions of 120 and 240 m. Only three fields showed
    moderate to strong relationships at the finest targeted resolution, while for
    the other resolutions, temperature estimation results were more reliable, with
    most fields having higher accuracy maps. Temperature uncertainty of higher than
    2 °C was obtained for fields 1, 2, and 5, while field 6 resulted in errors lower
    than 1 °C (Figure 7b). Figure 7. Quantitative statistics between sharpened and
    reference temperatures at field scale for fields selected in scene 2, including
    (a) coefficient of determination (b) RMSE, and bias. The negative bias shown in
    all areas indicated an underestimation of BT when compared to reference data and
    it is consistent with the results obtained for the scene scale. The residual errors
    resulted from the linear regression between BT and NDVI showed errors ranging
    from −0.5 to 1 °C in the areas that fields were located. Nevertheless, temperature
    underestimation in sharpened maps was as high as 2.5 °C in some fields, likely
    due to a discrepancy in temperatures collected by both thermal sensors in these
    specific areas, rather than due to a weak relationship between BT and NDVI. This
    temperature difference can be a result of biases caused by sensor parameters such
    as bandwidth, acquisition time, and geolocation errors [32]. The field scale validation
    results for scene 3 are shown in Figure 8. Due to the lower number of cotton fields
    in this scene and their smaller size, only five fields were selected for analysis.
    Nevertheless, a higher number of dates throughout the growing season were available
    for validation. Figure 8. Quantitative statistics between sharpened and reference
    temperatures at field scale for fields selected in scene 3 on three different
    dates, including coefficient of determination on (a) 29 August (b) 15 September
    and (c) 3 October, and (d–f) RMSE and bias for the same dates, respectively. High
    performances were observed in September (Figure 8b,e) and October (Figure 8c,f),
    in which most fields showed a strong relationship between sharpened and reference
    temperatures coupled with the low-temperature errors. A positive bias in September
    indicates that temperatures were overestimated at an average of 0.95 °C in all
    fields. Despite the high agreement between sharpened and reference temperatures
    observed for all fields in August, in one or more resolutions, temperature error
    was higher than in subsequent months (Figure 8a,d). Spatial resolutions of 60
    and 120 m displayed the most consistent results along the three dates, with strong
    relationships in most fields. High R2 values were observed in four out of five
    fields at 60 m resolution on the second and third dates, and two fields on the
    first date, while at 120 m, all five fields had strong relationships on the first
    date, four on the third, and three on the second. Sharpened maps at 30 m had the
    weakest performance, with a maximum of 2 fields presenting moderate relationships
    and overall temperature errors higher than coarser resolutions. Maps at 240 m
    had weaker performance in this scene due to the low or insufficient number of
    pixels for correlation caused by the smaller field sizes. The resulting statistics
    indicated that the thermal sharpening of coarse MODIS images at the four finer
    resolutions are field-specific. The accuracy of sharpened temperatures in field
    5 was high at all resolutions on the first date and was consistently high at 60
    and 120 m in subsequent months. High-temperature maps’ accuracy was observed in
    at least three resolutions at fields 2 and 3 in September and October, and at
    240 m in the first month. The weakest performance was observed in field 4, in
    which sharpened maps had very low accuracy among all dates in most spatial resolutions
    when compared to Landsat reference temperatures. The fields that showed the strongest
    (field 5) and the weakest performances (field 4) were located side by side in
    the scene, suggesting that the sharpening results might be affected by field individual
    characteristics, planting date, and management practices. High agreement between
    sharpened and reference maps at 60 m resolution was observed in field 1 for all
    three dates (Figure 9). Despite the higher temperature difference between sharpened
    and reference maps in August, the BT distribution patterns still showed great
    similarities. A high correlation between sharpened and reference maps was also
    shown on the subsequent dates. The high agreement between sharpened and reference
    maps shown in the validation process evidences great consistency in the TsHARP
    results. The robust results from the use of Sentinel-2 VNIR for sharpening presented
    in this study are corroborated by studies previously mentioned [19,20]. Figure
    9. Field 1 sharpened temperature maps at 60 m resolution in Mississippi on (a)
    29 August (b) 15 September and (c) 3 October, in comparison with respective (d–f)
    reference temperature maps. (g–i) Temperature error maps (sharpened T (°C)–reference
    T (°C)) for each date at 60 m resolution. Quantile method was used for classification.
    3.2.2. MODIS/VENµS TsHARP Validation Figure 10 shows the quantitative statistics
    for TsHARP validation at two different dates in scene 1. The algorithm’s performance
    presented variability between dates and areas, as previously observed. The model’s
    accuracy was consistent across three out of the nine fields selected, with strong
    relationships in all resolutions in field 6 at both dates, and at the second date
    for fields 2 and 5. On 29 August, high-accuracy sharpened maps for fields 2 and
    5 were observed at 60 and 120 m only. Fields 7 and 8 showed high R2 values between
    sharpened and reference temperatures only at the coarser resolutions of 120 and
    240 m, while in remaining fields, the overall accuracy was low either on all or
    one of the dates. Disaggregated maps at 120, 240, and 60 m resolutions were the
    most consistent in terms of correlation with reference temperature maps. Temperature
    uncertainty was relatively low in most fields at both dates, with values ranging
    from 1.25 to 2.17 °C in August and 0.66 to 2.13 °C in September. An overestimation
    of sharpened temperatures was observed in August with a positive bias of 2.17
    °C, while in September, sharpened temperatures were up to 2.01 °C lower than reference
    temperatures. On this date, temperature overestimation was observed only in field
    4, in which sharpened temperatures were on average 0.66 °C higher than the reference.
    Figure 10. Quantitative statistics between sharpened and reference temperatures
    at field scale for fields selected in scene 1 including coefficient of determination,
    (a) 29 August and (b) 10 September, and (c,d) RMSE and bias for respective dates.
    In scene 2, the MODIS images’ sharpening using VENµS NDVI was validated on one
    date in the beginning of September, with three days difference from the MODIS/Sentinel-2-derived
    sharpened image (Figure 11). A field scale comparison between these two sharpened
    maps was not performed because of the time difference, however similarities in
    the results were observed. Fields 8 and 4 had weak relationships between sharpened
    and reference temperatures in all spatial resolutions, repeating the weak performance
    seen in the MODIS/Sentinel-2 scene. These results suggest that the poor accuracy
    of the sharpened maps was caused by subfield land cover variability that was not
    depicted in the coarse MODIS pixel resolution, such as a mix of exposed soil and
    canopy cover. The possible effects of different field conditions will be discussed
    in the next subsection. Figure 11. Quantitative statistics between sharpened and
    reference temperatures at field scale for fields selected in scene 2 including
    (a) coefficient of determination and (b) RMSE and bias. Overall, sharpening accuracy
    was high at 60, 120, and 240 m, with at least half of the fields showing R2 values
    higher than 0.62. Only three fields had moderate to strong relationship at 30
    m, with the highest value of 0.68. Overall, RMS errors were below 1.73 at all
    four resolutions. Temperature uncertainty as low as 0.25 °C was achieved at 240
    m in field 2 and as low as 0.38 °C at 30 m. Bias indicated that sharpened temperatures
    were overestimated in all fields (Figure 11b). High-accuracy sharpened maps were
    achieved for all resolutions in field 3 (Figure 12). Sharpened map with 30 m pixel
    size provided the most detailed insight in the BT distribution in the field (Figure
    12a). The same BT patterns were maintained when pixel size was doubled, and sharpening
    accuracy increased from 0.68 to 0.8 (Figure 12e,f). The two coarser maps presented
    even higher accuracy of 0.89 and 0.86, but temperature distribution patterns in
    the field became harder to identify (Figure 12c,d). Exposed soil at the northern
    part and in the middle of the lower half of the field, most likely caused by erosion
    processes over the years, resulted in an overestimation of sharpened temperatures
    in those pixels. In these areas, sharpened temperatures were around 30.8 °C, while
    in the reference image, the same pixels varied from 28 to 29 °C, causing a decrease
    in the overall accuracy at 30 m. Background soil reflectance can also affect the
    sharpening performance throughout the season, once the low vegetation cover in
    the first stages of crop development can lead to high amounts of mixed pixel reflectance
    and consequently, an overestimation of canopy sharpened temperatures. Figure 12.
    Field 3 sharpening maps of MODIS images using VENµS at (a) 30 (b) 60 (c) 120 and
    (d) 240 m resolution, and (e–h) the respective validation regressions. Disaggregation
    methods are often studied in large scene scales. Few authors have attempted to
    use this methodology for small agricultural areas. Sánchez et al. [20] used Sentinel-2
    to sharpen MODIS coarse thermal images to 10 m resolutions over a semi-arid agricultural
    area in southeast Spain. An average temperature uncertainty of 2 °C was observed.
    Temperature errors between 2 and 3 °C were observed by Bisquert et al. [14]. In
    a simulated experiment, Landsat 7 thermal images were aggregated to coarse resolution
    and then sharpened, achieving temperature uncertainty of ~1 °C [40]. In the present
    study, temperature errors for field scale ranged from 0.25 to 3.11 °C using both
    Sentinel-2 and VENµS, following results found by the other authors. Furthermore,
    it has been reported that absolute temperature errors of up to 1.5 °K are suitable
    for agricultural management decisions [20,41,42]. Results from this paper are
    encouraging. A great number of fields presented low errors at 240 and 120 m, and
    at the finer resolutions of 60 m and in lesser cases of 30 m. The high-accuracy
    maps generated from this methodology with relatively low errors show a great potential
    in the use of TsHARP in MODIS/Sentinel-2 and MODIS/VENµS combinations for field
    scale. Figure 13 shows field 3 sharpened temperature distribution in relation
    to air temperature on 5 days throughout the growing season from June to September
    at 60 m resolution. Air-canopy temperature difference is a well-recognized indicator
    of water stress in cotton [43,44]. Field canopy temperatures in June were less
    than 3 °C below air temperature, while in August and September, this difference
    was as high as 5 °C. Air-canopy temperature distribution was very similar throughout
    the field in the first and last dates. In the dates from mid-June to early September,
    a slight variability in air-canopy temperature distribution is observed. The use
    of a high spatial resolution satellite such as VENµS with high revisit time to
    sharpen coarse thermal images presents great potential to enable a more frequent
    monitoring of canopy temperature changes across the field throughout the growing
    season, with a fine resolution with the aim to identify crop water stress patterns
    in the field for management zone delineation. It is important to note that for
    a better estimation of plant water status, the sharpened BT values should be converted
    to LST [45]. Figure 13. Field 3 time series of canopy temperature (Tc) - air temperature
    (Tair) distribution throughout the season. Canopy temperature used was extracted
    from the sharpened temperature maps. 3.2.3. Effects of In-Field Land Cover Variability
    on TsHARP Performance Two fields from scene 1 in Miller county were selected to
    demonstrate how different field conditions can positively or negatively affect
    the accuracy of resulting sharpened maps in a field scale. Figure 14 shows an
    example of the comparison between before and after exclusion of selected areas
    within fields 3 and 9. Land patches covered by vegetation other than the cultivated
    crop, roads, flow channels caused by erosion, exposed soil, and waterlogged areas
    were extracted from the field boundaries for validation (Figure 14e–h). These
    areas were usually responsible for decreasing the level of accuracy between reference
    (Figure 14a,c) and sharpened (Figure 14b,d) maps. This difference was likely caused
    by the sharpening technique reliance on the BT–NDVI relationship, once many of
    these land cover types mentioned have low NDVI values resulting in high sharpened
    temperatures, while reference images are dependent on the temperature variability
    itself and not on the NDVI patterns throughout the area. Figure 14. Field map
    comparison between reference and sharpened (MODIS/VENµS) maps before and after
    pixel removal. (a–d) Reference and sharpened maps of the whole area within fields
    3 and 9. (e–h) Visual imagery and field boundary for both fields. (i–l) Reference
    and sharpened maps after pixel extraction for fields 3 and 9. Reference and sharpened
    maps after the pixel removal process of fields 3 and 9 are shown in Figure 14i–l.
    Note that the temperature distribution at sharpened and reference maps appear
    to become more alike in field 3 after removal of unwanted pixels. A circular area
    around the pivot, a narrow road, and a waterlogged area were excluded in this
    field, increasing the sharpening accuracy. This stronger relationship between
    the two maps was likely due to two factors: (1) exposed soil pixels from the road
    had low NDVI values, resulting in finer pixels with overestimated temperature
    at the sharpened map, and (2) the two remaining excluded areas had high moisture,
    which explains the lower temperature relative to the rest of the field in the
    reference map, while in the sharpened map, pixel temperatures were higher in these
    areas than in the remaining field due to the low NDVI values of water patches
    and wet soil. Conversely, the extraction process did not yield the same results
    for field 9 once BT pattern differences were still evident in the remainder of
    the field. Based on the temperature range in the reference image and on the premise
    that stressed cotton plants are usually up to 5 °C above air temperature [46,47],
    it is possible to infer that the whole field was well-watered either due to rain
    or irrigation events. The TsHARP algorithm may not detect the moisture variability
    caused by irrigation, since it accounts for the subpixel temperature variability
    related to the vegetation fraction, thus making irrigation events a common source
    of error [40]. Although little information about most of the fields studied is
    known, it can be assumed that field-specific conditions are a determinant factor
    in the accuracy of sharpened temperatures. For instance, different authors have
    pointed out the limitations of thermal disaggregation in irrigated fields [14,48].
    Surface temperature can rapidly respond to water stress, while NDVI has a slower
    response after initial stress [36]. Agam et al. [40] discussed the importance
    of excluding selected pixels that do not conform to the inverse linear relationship
    between LST and vegetation fraction, such as water bodies that present both low
    NDVI and surface temperature. Furthermore, areas that have high NDVI variability
    may be a source of errors once this variability cannot be depicted by the coarse
    resolution pixels of MODIS images. Temperature data from field 9 collected with
    Landsat resulted in higher temperature along the entire west edge of the field,
    potentially due to a mixed pixel response between the crop and the grassed area
    adjacent to the field. However, vegetation cover in the same area was high, leading
    to an opposing result in the sharpened image. The observations on the effect of
    undesirable pixels’ removal on the thermal pixel disaggregation performance are
    reinforced by statistics shown in Figure 15. A higher level of agreement between
    the sharpened and reference temperatures was displayed after pixel extraction
    in field 3 on both dates, as well as a decrease in temperature errors, whereas
    in field 9, the accuracy decreased at 30 and 120 m, despite slightly lower errors
    being achieved. Figure 15. Fields 3 and 9 comparison statistics between sharpened
    and reference temperatures before and after pixel removal on 29 August and 10
    September, including (a) coefficient of determination and (b) RMSE. 4. Conclusions
    Corroborating findings found in the literature, results from this study highlighted
    the differences in coarse-resolution BT between MODIS and Landsat. For the five
    dates for which imagery from both sensors were acquired on the same day, observed
    average MAE was 1.63 °C. Coefficient of determination within the same dates varied
    from 0.34 to 0.74, with scene MODIS BT frequently being cooler than Landsat-8.
    Further research can benefit from implementation of intercalibration between MODIS
    and Landsat-8 before sharpening validation to attenuate errors caused by the sensors’
    individual characteristics. Despite the inconsistent correlations in coarse resolution
    caused by these differences and the presence of clouds in one or both images,
    relationships between sharpened MODIS and Landsat were stronger at all finer resolutions.
    Field-scale agreement between sharpened and reference temperatures showed some
    level of independence from the scene scale. Agricultural fields located in regions
    of the scene with smaller residual errors or not affected by cloud cover can show
    higher temperature accuracy than other areas. These findings suggest that sharpened
    maps can be used with caution for small scales even if coarse comparison between
    sensors in the scene scale shows weaker relationships. Sharpened maps at 120 and
    60 m resolution showed the highest consistency within all fields and dates using
    both VENµS and Sentinel-2. Maps sharpened to 240 m showed high accuracy, but greatly
    depended on the field size because of the lack of pixels available in smaller
    areas. Resolutions finer than 60 m presented the least consistent relationships,
    with accurate maps being very field-specific. Very few studies have explored the
    performance of thermal sharpening in field scales, and the use of VENµS multispectral
    data. Findings from this research show that considering the combination of pixel
    size, and temperature estimation accuracy and error, sharpened MODIS at 60 m are
    the most reliable for season-long cotton monitoring. The comparison between sharpened
    images using VENµS and Sentinel-2 was performed to evaluate a potential agreement
    between results, due to the lack of information available in the use of VENµS
    for thermal disaggregation. VENµS results showed comparable or higher accuracy
    than Sentinel-2. The superior performance coupled with the better revisit time
    evidences the great potential of using VENµS for frequent in-season crop monitoring
    for IMZ delineation. This work is the first to report the use of VENµS images
    for thermal sharpening. Nevertheless, only an initial study was performed to explore
    the possibility of using sharpening at field scale for monitoring purposes. Further
    research with ground data collection is needed to explore field use limitations
    of this methodology, but these results give useful insights of potential benefits
    of implementing the TsHARP technique as a tool for crop stress monitoring. Author
    Contributions The contribution of authors are as follows: conceptualization, Y.C.
    and H.H.; methodology, Y.C. and H.H; software, L.N.L. and H.H.; validation, L.N.L.
    and H.H.; formal analysis, L.N.L.; writing—original draft preparation, L.N.L.;
    writing—review and editing, Y.C., J.S., V.L., and G.V.; visualization, L.N.L.,
    Y.C., J.S., H.H., V.L., and G.V.; funding acquisition, Y.C., J.S., V.L., and G.V.
    All authors have read and agreed to the published version of the manuscript. Funding
    This research was funded by US-Israel Binational Research and Development Fund
    (BARD) Research Project US-4991-1. Acknowledgments The authors thank the Israel
    Space Agency for providing us images from the VENµS mission. Conflicts of Interest
    The authors declare no conflict of interest. Appendix A. Coordinates and Area
    of All Fields Selected for This Study Table A1. List of study sites and cotton
    fields for all three locations.       References Ishimwe, R.; Abutaleb, K.; Ahmed,
    F. Applications of Thermal Imaging in Agriculture—A review. Adv. Rem. Sens. 2014,
    3, 128–140. [Google Scholar] [CrossRef] [Green Version] Ribeiro da Luz, B. Attenuated
    total reflectance spectroscopy of plant leaves: A tool for ecological and botanical
    studies. New Phytol. 2006, 172, 305–318. [Google Scholar] [CrossRef] [PubMed]
    Hsiao, T. Plant Responses to water stress. Ann. Rev. Plant Physiol. 1973, 24,
    519–570. [Google Scholar] [CrossRef] Bodner, G.; Nakhforoosh, A.; Kaul, H.-P.
    Management of crop water under drought: A review. Agron. Sustain. Dev. 2015, 35,
    401–442. [Google Scholar] [CrossRef] Falkenberg, N.R.; Piccinni, G.; Cothren,
    J.T.; Leskovar, D.I.; Rush, C.M. Remote sensing of biotic and abiotic stress for
    irrigation management of cotton. Agric. Water Manag. 2007, 87, 23–31. [Google
    Scholar] [CrossRef] Costa, J.O.; Coelho, R.D.; Barros, T.H.S.; Junior, E.F.F.;
    Fernandes, A.L.T. Canopy thermal responses to water deficit of coffee plants under
    drip irrigation. Irrig. Drain. 2020, 69, 472–482. [Google Scholar] [CrossRef]
    Panigada, C.; Rossini, M.; Meroni, M.; Cilia, C.; Busetto, L.; Amaducci, S.; Boschetti,
    M.; Cogliati, S.; Picchi, V.; Pinto, F.; et al. Fluorescence, PRI and canopy temperature
    for water stress detection in cereal crops. Int. J. Appl. Earth Obs. Geoinf. 2014,
    30, 167–178. [Google Scholar] [CrossRef] Elsayed, S.; Elhoweity, M.; Ibrahim,
    H.H.; Dewir, Y.H.; Migdadi, H.M.; Schmidhalter, U. Thermal imaging and passive
    reflectance sensing to estimate the water status and grain yield of wheat under
    different irrigation regimes. Agric. Water Manag. 2017, 189, 98–110. [Google Scholar]
    [CrossRef] O’Shaughnessy, S.A.; Evett, S.R.; Colaizzi, P.D.; Howell, T.A. Using
    radiation thermography and thermometry to evaluate crop water stress in soybean
    and cotton. Agric. Water Manag. 2011, 98, 1523–1535. [Google Scholar] [CrossRef]
    Cohen, Y.; Alchanatis, V.; Saranga, Y.; Rosenberg, O.; Sela, E.; Bosak, A. Mapping
    water status based on aerial thermal imagery: Comparison of methodologies for
    upscaling from a single leaf to commercial fields. Precis. Ag. 2017, 18, 801–822.
    [Google Scholar] [CrossRef] Agam, N.; Kustas, W.P.; Anderson, M.C.; Li, F.; Neale,
    C.M.U. A vegetation index based technique for spatial sharpening of thermal imagery.
    Remote Sens. Environ. 2007, 107, 545–558. [Google Scholar] [CrossRef] Cohen, Y.;
    Agam, M.; Klapp, I.; Karnieli, A.; Beeri, O.; Alchanatis, V.; Sochen, N. Future
    approaches to facilitate large-scale adoption of thermal based images as key input
    in the production of dynamic irrigation management zones. Adv. Anim. Biosci. 2017,
    8, 546–550. [Google Scholar] [CrossRef] Zhan, W.; Chen, Y.; Zhou, J.; Wang, J.;
    Liu, W.; Voogt, J.; Zhu, X.; Quan, J.; Li, J. Disaggregation of remotely sensed
    land surface temperature: Literature survey, taxonomy, issues, and caveats. Remote
    Sens. Environ. 2013, 131, 119–139. [Google Scholar] [CrossRef] Bisquert, M.; Sanchez,
    J.M.; Caselles, V. Evaluation of Disaggregation Methods for Downscalling MODIS
    Land Surface Temperature to Landsat Spatial Resolution in Barrax Test Site. IEEE
    J. Sel. Top. Appl. Earth Obs. Remote Sens. 2016, 9, 1430–1438. [Google Scholar]
    [CrossRef] Tom, V.T.; Carlotto, M.J.; Scholten, D.K. Spatial Sharpening of Thematic
    Mapper Data Using a Multiband Approach. Opt. Eng. 1985, 24, 1026–1029. [Google
    Scholar] [CrossRef] Kustas, W.P.; Norman, J.M.; Anderson, M.C.; French, A.N. Estimating
    subpixel surface temperatures and energy fluxes from the vegetation index-radiometric
    temperature relationship. Remote Sens. Environ. 2003, 85, 429–440. [Google Scholar]
    [CrossRef] Bindhu, V.M.; Narasimhan, B.; Sudheer, K.P. Development and verification
    of a non-linear disaggregation method (NL-DisTrad) to downscale MODIS land surface
    temperature to the spatial scale of Landsat thermal data to estimate evapotranspiration.
    Remote Sens. Environ. 2013, 135, 118–129. [Google Scholar] [CrossRef] Wang, R.;
    Gao, W.; Peng, W. Downscale MODIS Land Surface Temperature Based on Three Different
    Models to Analyze Surface Urban Heat Island: A Case Study of Hangzhou. Remote
    Sens. 2020, 12, 2134. [Google Scholar] [CrossRef] Huryna, H.; Cohen, Y.; Karnieli,
    A.; Panov, N.; Kustas, W.; Agam, N. Evaluation of TsHARP Utility for Thermal Sharpening
    of Sentinel-3 Satellite Images Using Sentinel-2 Visual Imagery. Remote Sens. 2019,
    11, 2304. [Google Scholar] [CrossRef] [Green Version] Sánchez, J.M.; Galve, J.M.;
    González-Piqueras, J.; López-Urrea, R.; Niclòs, R.; Calera, A. Monitoring 10-m
    LST from the Combination MODIS/Sentinel-2, Validation in a High Contrast Semi-Arid
    Agroecosystem. Remote Sens. 2020, 12, 1453. [Google Scholar] [CrossRef] Ferrier,
    P.; Crebassol, P.; Dedieu, G.; Hagolle, O.; Meygret, A.; Tinto, F.; Yaniv, Y.;
    Herscovitz, J. VENµS (Vegetation and Environment Monitoring on A New Micro Satellite).
    In Proceedings of the Institute of Electrical and Electronics Engineers (IEEE)
    International Geoscience Remote Sensing Symposium, Honolulu, HI, USA, 25–30 July
    2010; pp. 3736–3739. [Google Scholar] [CrossRef] Sharing Earth Obeservation Resources
    eoPortal Directory. Available online: https://directory.eoportal.org/web/eoportal/satellite-missions/v-w-x-y-z/venus
    (accessed on 25 August 2020). Kottek, M.; Grieser, J.; Beck, C.; Rudolf, B.; Rubel,
    F. World Map of the Köppen-Geiger climate classification updated. Meteorol. Z.
    2006, 15, 259–263. [Google Scholar] [CrossRef] Beck, H.; Zimmermann, N.; McVicar,
    T.; Vergopolan, N.; Berg, A.; Wood, E. Present and future Köppen-Geiger climate
    classification maps at 1-km resolution. Sci. Data 2018, 5, 1–12. [Google Scholar]
    [CrossRef] [Green Version] NOAA National Centers for Environmental information,
    Climate at a Glance: Regional Time Series, Published December 2020. Available
    online: https://www.ncdc.noaa.gov/cag/ (accessed on 23 December 2020). Boryan,
    C.; Yang, Z.; Mueller, R.; Craig, M. Monitoring US agriculture: The US Department
    of Agriculture, National Agricultural Statistics Service, Cropland Data Layer
    Program. Geocarto Intern. 2011, 26, 341–358. [Google Scholar] [CrossRef] MODTBGA
    MODIS/Terra Thermal Bands Daily L2G-Lite Global 1 km SIN Grid V006. Available
    online: https://lpdaac.usgs.gov/products/modtbgav006/ (accessed on 24 August 2020).
    QGIS Development Team. QGIS Geographic Information System; Open Source Geospatial
    Foundation: Beaverton, OR, USA, 2020. [Google Scholar] Leroux, L.; Congedo, L.;
    Bellón, B.; Gaetano, R.; Bégué, A. Land Cover Mapping Using Sentinel-2 Images
    and the Semi-Automatic Classification Plugin: A Northern Burkina Faso Case Study.
    In QGIS and Application in Agriculture and Forest; Baghdadi, N., Mallet, C., Zribi,
    M., Eds.; Wiley: Hoboken, NJ, USA, 2018; pp. 119–151. [Google Scholar] Choudhury,
    B.; Ahmed, N.; Idso, S.; Reginato, R.; Daughtry, C. Relations between evaporation
    coefficients and vegetation indices studied by model simulations. Remote Sens.
    Environ. 1994, 50, 1–17. [Google Scholar] [CrossRef] Willmott, C.J. Some Comments
    on the Evaluation of Model Performance. Bull. Am. Meteorol. Soc. 1982, 63, 1309–1313.
    [Google Scholar] [CrossRef] [Green Version] Weng, Q.; Fu, P.; Gao, F. Generating
    daily land surface temperature at Landsat resolution by fusing Landsat and MODIS
    data. Remote Sens. Environ. 2014, 145, 55–67. [Google Scholar] [CrossRef] Essa,
    W.; Verbeiren, B.; Van Der Kwast, J.; Batelaan, O. Improved DisTrad for Downscaling
    Thermal MODIS Imagery over Urban Areas. Remote Sens. 2017, 9, 1243. [Google Scholar]
    [CrossRef] [Green Version] Liu, Y.; Hiyama, T.; Yamaguchi, Y. Scaling of land
    surface temperature using satellite data: A case examination on ASTER and MODIS
    products over a heterogenous terrain area. Remote Sens. Environ. 2006, 105, 115–128.
    [Google Scholar] [CrossRef] Chen, X.; Li, W.; Chen, J.; Rao, Y.; Yamaguchi, Y.
    A Combination of TsHARP and Thin Plate Spline Interpolation for Spatial Sharpening
    of Thermal Imagery. Remote Sens. 2014, 6, 2845–2863. [Google Scholar] [CrossRef]
    [Green Version] Sandholt, I.; Rasmussen, K.; Andersen, J. A simple interpretation
    of the surface temperature/vegetation index space for assessment of surface moisture
    status. Remote Sens. Environ. 2002, 79, 213–224. [Google Scholar] [CrossRef] Anderson,
    M.C.; Allen, R.G.; Morse, A.; Kustas, W.P. Use of Landsat thermal imagery in monitoring
    evapotranspiration and managing water resources. Remote Sens. Environ. 2012, 122,
    50–65. [Google Scholar] [CrossRef] Karnieli, A.; Agam, N.; Pinker, R.T.; Anderson,
    M.; Imhoff, M.L.; Gutman, G.G.; Panov, N.; Goldberg, A. Use of NDVI and Land Surface
    Temperature for Drought Assessment: Merits and Limitations. J. Clim. 2010, 23,
    618–633. [Google Scholar] [CrossRef] Li, X.; Xin, X.; Jiao, J.; Peng, Z.; Zhang,
    H.; Shao, S.; Liu, Q. Estimating Subpixel Surface Heat Fluxes through Applying
    Temperature-Sharpening Methods to MODIS Data. Remote Sens. 2017, 9, 836. [Google
    Scholar] [CrossRef] [Green Version] Agam, N.; Kustas, W.P.; Anderson, M.C.; Li,
    F.; Colaizzi, P.D. Utility of thermal sharpening over Texas high plains irrigated
    agricultural fields. J. Geophys. Res. 2007, 112, D19110. [Google Scholar] [CrossRef]
    [Green Version] Sobrino, J.A.; Jiménez-Muñoz, J.C.; Sòria, G.; Ruescas, A.B.;
    Danne, O.; Brockmann, C.; Ghent, D.; Remedios, J.; North, P.; Merchant, C.; et
    al. Synergistic use of MERIS and AATSR as a proxy for estimating Land Surface
    Temperature from Sentinel-3 data. Remote Sens. Environ. 2016, 179, 149–161. [Google
    Scholar] [CrossRef] Ghent, D.J.; Corlett, G.K.; Remedio, J.J. Global Land Surface
    Temperature From the Along-Track Scanning Radiometers. J. Geophys. Res. Atmos.
    2017, 122, 12167–12193. [Google Scholar] [CrossRef] [Green Version] Jackson, R.D.;
    Idso, S.B.; Reginato, R.J.; Pinter, P.J., Jr. Canopy Temperature as a Crop Water
    Stress Indicator. Water Resour. Res. 1981, 17, 1133–1138. [Google Scholar] [CrossRef]
    Wanjura, D.F.; Upchurch, D.R. Canopy temperature characterizations of corn and
    cotton water stress. Trans. ASAE 2000, 43, 867–875. [Google Scholar] [CrossRef]
    Li, F.; Jackson, T.J.; Kustas, W.P.; Schmugge, T.J.; French, A.N.; Cosh, M.H.;
    Bindlish, R. Deriving land surface temperature from Landsat 5 and 7 during SMEX02/SMACEX.
    Remote Sens. 2004, 92, 521–534. [Google Scholar] [CrossRef] Idso, S.B.; Jackson,
    R.D.; Pinter, P.J., Jr.; Reginato, R.J.; Hatfield, J.L. Normalizing the stress-degree-day
    parameter for environmental variability. Agric. Meteorol. 1981, 24, 45–55. [Google
    Scholar] [CrossRef] Cohen, Y.; Alchanatis, V.; Meron, Y.; Saranga, Y.; Tsipris,
    J. Estimation of leaf water potential by thermal imagery and spatial analysis.
    J. Exp. Bot. 2005, 56, 1843–1852. [Google Scholar] [CrossRef] [Green Version]
    Merlin, O.; Duchemin, B.; Hagolle, O.; Jacob, F.; Coudert, B.; Chehbouni, G.;
    Dedieu, G.; Garatuza, J.; Kerr, Y. Disaggregation of MODIS surface temperature
    over an agricultural area using a time series of Formosat-2 images. Remote Sens.
    Environ. 2010, 114, 2500–2512. [Google Scholar] [CrossRef] [Green Version] Publisher’s
    Note: MDPI stays neutral with regard to jurisdictional claims in published maps
    and institutional affiliations.  © 2021 by the authors. Licensee MDPI, Basel,
    Switzerland. This article is an open access article distributed under the terms
    and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Lacerda, L.N.; Cohen, Y.; Snider, J.; Huryna,
    H.; Liakos, V.; Vellidis, G. Field Scale Assessment of the TsHARP Technique for
    Thermal Sharpening of MODIS Satellite Images Using VENµS and Sentinel-2-Derived
    NDVI. Remote Sens. 2021, 13, 1155. https://doi.org/10.3390/rs13061155 AMA Style
    Lacerda LN, Cohen Y, Snider J, Huryna H, Liakos V, Vellidis G. Field Scale Assessment
    of the TsHARP Technique for Thermal Sharpening of MODIS Satellite Images Using
    VENµS and Sentinel-2-Derived NDVI. Remote Sensing. 2021; 13(6):1155. https://doi.org/10.3390/rs13061155
    Chicago/Turabian Style Lacerda, Lorena N., Yafit Cohen, John Snider, Hanna Huryna,
    Vasileios Liakos, and George Vellidis. 2021. \"Field Scale Assessment of the TsHARP
    Technique for Thermal Sharpening of MODIS Satellite Images Using VENµS and Sentinel-2-Derived
    NDVI\" Remote Sensing 13, no. 6: 1155. https://doi.org/10.3390/rs13061155 Note
    that from the first issue of 2016, this journal uses article numbers instead of
    page numbers. See further details here. Article Metrics Citations Crossref   4
    ads   4 Web of Science   4 Scopus   4 Google Scholar   [click to view] Article
    Access Statistics Article access statistics Article Views 5. Jan 15. Jan 25. Jan
    4. Feb 14. Feb 24. Feb 5. Mar 15. Mar 25. Mar 0k 1k 2k 3k 4k For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Remote Sens., EISSN 2072-4292, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Remote Sensing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Field scale assessment of the tsharp technique for thermal sharpening of
    modis satellite images using venµs and sentinel-2-derived ndvi
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '5'
  description: Over the past decade, there has been sustained research in the Internet
    of Things (IoT), significantly contributing to health, retail, transport, logistics,
    security, and agriculture. Device-enabling platforms have an incredibly strategic
    advantage of enabling related IoT growth. This technology is largely handled through
    cloud computing, where the raw generated data from IoT sensors are stored and
    computed for decision making, irrespective of the application areas. The adoption
    of IoT in agriculture faces numerous challenges such as latency, energy, bandwidth,
    and storage cost. These issues will affect sustainable agricultural activities
    such as live decision making, prediction, monitoring, and controlling of farming
    activities. These issues can be addressed by integrating edge computing technology
    with IoT-enabled monitoring devices. The edge computing framework needs to be
    designed for the rapid identification of methods for deployment in the field.
    The edge computing agricultural framework will act as middleware between the cloud
    and IoT sensors; it would serve as a medium to fulfill the demands of a real-time
    monitoring system. In the proposed framework, an edge server is designed to predict
    the rainfall locally using the microcomputer Raspberry Pi through the analysis
    of the local environmental and weather parameters. The system is constructed with
    two edge nodes, where one handles the monitoring of the live data such as soil
    moisture, soil temperature, air temperature, humidity, and wind. The other node
    takes care of artificial irrigation according to the local and global weather
    data controlled by the edge server. The edge server stores live data locally and
    sends the average daily analysis data to the ThingSpeak server. Data stored in
    the edge and cloud can be used in the future to increase plant growth, leading
    to increased yield. The proposed framework helps in accurate watering considering
    the local environmental conditions, leading to the sequential evolution of plants
    until the vegetables are fully grown and available for harvest. In this way, an
    edge-based framework for an agricultural system can be used to fill the gaps in
    precision agriculture.
  doi: 10.1016/B978-0-12-823694-9.00029-3
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln Access through another institution
    University of Nebraska-Lincoln Libraries does not subscribe to this content on
    ScienceDirect. Article preview Abstract Cited by (5) AI, Edge and IoT-based Smart
    Agriculture Intelligent Data-Centric Systems 2022, Pages 71-100 Chapter 5 - Functional
    framework for edge-based agricultural system Author links open overlay panel S.
    Premkumar, A.N. Sigappi Show more Share Cite https://doi.org/10.1016/B978-0-12-823694-9.00029-3
    Get rights and content Abstract Over the past decade, there has been sustained
    research in the Internet of Things (IoT), significantly contributing to health,
    retail, transport, logistics, security, and agriculture. Device-enabling platforms
    have an incredibly strategic advantage of enabling related IoT growth. This technology
    is largely handled through cloud computing, where the raw generated data from
    IoT sensors are stored and computed for decision making, irrespective of the application
    areas. The adoption of IoT in agriculture faces numerous challenges such as latency,
    energy, bandwidth, and storage cost. These issues will affect sustainable agricultural
    activities such as live decision making, prediction, monitoring, and controlling
    of farming activities. These issues can be addressed by integrating edge computing
    technology with IoT-enabled monitoring devices. The edge computing framework needs
    to be designed for the rapid identification of methods for deployment in the field.
    The edge computing agricultural framework will act as middleware between the cloud
    and IoT sensors; it would serve as a medium to fulfill the demands of a real-time
    monitoring system. In the proposed framework, an edge server is designed to predict
    the rainfall locally using the microcomputer Raspberry Pi through the analysis
    of the local environmental and weather parameters. The system is constructed with
    two edge nodes, where one handles the monitoring of the live data such as soil
    moisture, soil temperature, air temperature, humidity, and wind. The other node
    takes care of artificial irrigation according to the local and global weather
    data controlled by the edge server. The edge server stores live data locally and
    sends the average daily analysis data to the ThingSpeak server. Data stored in
    the edge and cloud can be used in the future to increase plant growth, leading
    to increased yield. The proposed framework helps in accurate watering considering
    the local environmental conditions, leading to the sequential evolution of plants
    until the vegetables are fully grown and available for harvest. In this way, an
    edge-based framework for an agricultural system can be used to fill the gaps in
    precision agriculture. References (0) Cited by (5) Reshaping agriculture using
    intelligent edge computing 2024, Advances in Computers Show abstract Integrated
    machine learning approach for healthcare disabilities tracing and detection: Applied
    intelligent techniques 2023, Applications of Synthetic Biology in Health, Energy,
    and Environment Energy monitoring and control in the smart grid: Integrated intelligent
    IoT and ANFIS 2023, Applications of Synthetic Biology in Health, Energy, and Environment
    Applications of synthetic biology in health, energy, and environment 2023, Applications
    of Synthetic Biology in Health, Energy, and Environment IoT-enabled edge computing
    model for smart irrigation system 2022, Journal of Intelligent Systems View full
    text Copyright © 2022 Elsevier Inc. All rights reserved. Recommended articles
    Cyberespionage: Socioeconomic implications on sustainable food security AI, Edge
    and IoT-based Smart Agriculture, 2022, pp. 477-486 Charles Oluwaseun Adetunji,
    …, Kingsley Eghonghon Ukhurebor Integration of RFID and sensors in agriculture
    using IOT AI, Edge and IoT-based Smart Agriculture, 2022, pp. 361-372 Himadri
    Nath Saha, …, Reek Roy Decision-making system for crop selection based on soil
    AI, Edge and IoT-based Smart Agriculture, 2022, pp. 449-475 Jitendra Singh, …,
    P.K. Pandey Show 3 more articles Article Metrics Citations Citation Indexes: 5
    Captures Readers: 28 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: AI, Edge and IoT-based Smart Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Functional framework for edge-based agricultural system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Alvaro Á.
  - Sobrino J.
  - Mira C.
  - Gonzalez-Dugo V.
  - Belenguer T.
  - Cifuentes A.
  - Moreno J.
  citation_count: '1'
  description: 'The MORERA program has recently been selected as one of the "Missions
    Science and Innovation"from the Spanish CDTI, an innovative program targeting
    solutions for deep social problems through innovation. The main Spanish industry
    is Agriculture (11% GDP), but this sector is threatened by climate change, as
    34% of the Spanish irrigated surface is considered out of balance. Difficulty
    of providing useful and fully processed information to the end-users for supporting
    their decisions severely affect the optimization of the resources. Well informed
    decisions optimize resources and costs, maximizing productivity. To solve this
    problem, MORERA involves in a unique project the complete value chain, from sensor
    to user, thanks to a solid consortium, and it is based on three pillars: - Final
    personalized irrigation requirements that will be directly provided to the user
    using a mobile device. - Artificial intelligence techniques will be used to combine
    all relevant data to build a final watering recommendation. - A compact and highly
    specific freeform optical instrument will be used to estimate evapotranspiration
    data at farm level with required TIR bandwidth and spatial resolution. Since no
    present instrument fulfills these requirements, it will be developed in the framework
    of the project. The MORERA concept can be extrapolated to many remote sensing
    applications, and to take advantage of this, it has been conceived as a modular
    system, where each module may be adapted with minor impact. This first system
    is focused on providing precise irrigation and fertilization recommendations,
    as well as self-learning yield estimations.'
  doi: 10.1117/12.2596842
  full_citation: '>'
  full_text: '>

    "This website uses cookies to provide you with a variety of services and to improve
    the usability of our website. By using the website, you agree to the use of cookies
    in accordance with our Privacy Policy. Close    12 September 2021 Get Citation
    MORERA: latest Earth observation system to translate big data to agriculture Ángel
    Alvaro, Jose Sobrino, Concepción Mira, Victoria Gonzalez-Dugo, Tomás Belenguer,
    Andrés Cifuentes, Javier Moreno Author Affiliations +         Proceedings Volume
    11856, Remote Sensing for Agriculture, Ecosystems, and Hydrology XXIII; 1185603
    (2021) https://doi.org/10.1117/12.2596842 Event: SPIE Remote Sensing, 2021, Online
    Only DOWNLOAD PAPER SAVE TO MY LIBRARY ARTICLE MENU     Abstract The MORERA program
    has recently been selected as one of the “Missions Science and Innovation” from
    the Spanish CDTI, an innovative program targeting solutions for deep social problems
    through innovation. The main Spanish industry is Agriculture (11% GDP), but this
    sector is threatened by climate change, as 34% of the Spanish irrigated surface
    is considered out of balance. Difficulty of providing useful and fully processed
    information to the end-users for supporting their decisions severely affect the
    optimization of the resources. Well informed decisions optimize resources and
    costs, maximizing productivity. To solve this problem, MORERA involves in a unique
    project the complete value chain, from sensor to user, thanks to a solid consortium,
    and it is based on three pillars: - Final personalized irrigation requirements
    that will be directly provided to the user using a mobile device. - Artificial
    intelligence techniques will be used to combine all relevant data to build a final
    watering recommendation. - A compact and highly specific freeform optical instrument
    will be used to estimate evapotranspiration data at farm level with required TIR
    bandwidth and spatial resolution. Since no present instrument fulfills these requirements,
    it will be developed in the framework of the project. The MORERA concept can be
    extrapolated to many remote sensing applications, and to take advantage of this,
    it has been conceived as a modular system, where each module may be adapted with
    minor impact. This first system is focused on providing precise irrigation and
    fertilization recommendations, as well as self-learning yield estimations. Conference
    Presentation  © (2021) COPYRIGHT Society of Photo-Optical Instrumentation Engineers
    (SPIE). Downloading of the abstract is permitted for personal use only. Citation
    Download Citation Ángel Alvaro, Jose Sobrino, Concepción Mira, Victoria Gonzalez-Dugo,
    Tomás Belenguer, Andrés Cifuentes, and Javier Moreno \"MORERA: latest Earth observation
    system to translate big data to agriculture\", Proc. SPIE 11856, Remote Sensing
    for Agriculture, Ecosystems, and Hydrology XXIII, 1185603 (12 September 2021);
    https://doi.org/10.1117/12.2596842 ACCESS THE FULL ARTICLE ORGANIZATIONAL Sign
    in with credentials provided by your organization. Organizational Username Organizational
    Password Show Password INSTITUTIONAL Select your institution to access the SPIE
    Digital Library. SELECT YOUR INSTITUTION PERSONAL Sign in with your SPIE account
    to access your personal subscriptions or to use specific features such as save
    to my library, sign up for alerts, save searches, etc. PERSONAL SIGN IN No SPIE
    Account? Create one PURCHASE THIS CONTENT SUBSCRIBE TO DIGITAL LIBRARY 50 downloads
    per 1-year subscription Members: $195 Non-members: $335 ADD TO CART 25 downloads
    per 1 - year subscription Members: $145 Non-members: $250 ADD TO CART PURCHASE
    SINGLE ARTICLE Includes PDF, HTML & Video, when available Members: $17.00 Non-members:
    $21.00 ADD TO CART Advertisement Subscribe to Digital Library Receive Erratum
    Email Alert Access provided by Univ. of Nebraska-Lincoln                      Site
    Map Information for Authors Information for Reviewers Information for Librarians
    Contact & Support    © 2024 SPIE Connect"'
  inline_citation: '>'
  journal: Proceedings of SPIE - The International Society for Optical Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'MORERA: Latest Earth observation system to translate big data to agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sirimorok N.
  - As M.
  - Yoshida K.
  - Köppen M.
  citation_count: '2'
  description: The estimation of soil moisture content is required for agriculture,
    mainly to build the irrigation scheduling model. In this study, we present a smart
    watering system to deal with various factors derived from the stochastic information
    in the agricultural operational, i.e., air temperature, air humidity, soil moisture,
    soil temperature, and light intensity. The methodology consists of exploiting
    the Internet of Things (IoT) using Low-Bandwidth Distributed Applications (LBDA)
    in cloud computing to integrate the real data sets collected by the several sensor
    technologies. We conducted experiments for the watering system used two types
    of soil and different plant. Here, the Long Short Term Memory Networks (LSTMs)
    approach in deep learning techniques used to build smart decisions concerning
    watering requirements and deal with heterogeneous information coming from agricultural
    environments. Results show that our models can effectively improve the prediction
    accuracy for the watering system over various soil and plants.
  doi: 10.1007/978-3-030-57796-4_43
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Advances in Intelligent Networking
    and Collaborative Systems Conference paper Smart Watering System Based on Framework
    of Low-Bandwidth Distributed Applications (LBDA) in Cloud Computing Conference
    paper First Online: 21 August 2020 pp 447–459 Cite this conference paper Access
    provided by University of Nebraska-Lincoln Download book PDF Download book EPUB
    Advances in Intelligent Networking and Collaborative Systems (INCoS 2020) Nurdiansyah
    Sirimorok, Mansur As, Kaori Yoshida & Mario Köppen  Part of the book series: Advances
    in Intelligent Systems and Computing ((AISC,volume 1263)) Included in the following
    conference series: International Conference on Intelligent Networking and Collaborative
    Systems 825 Accesses 1 Citations Abstract The estimation of soil moisture content
    is required for agriculture, mainly to build the irrigation scheduling model.
    In this study, we present a smart watering system to deal with various factors
    derived from the stochastic information in the agricultural operational, i.e.,
    air temperature, air humidity, soil moisture, soil temperature, and light intensity.
    The methodology consists of exploiting the Internet of Things (IoT) using Low-Bandwidth
    Distributed Applications (LBDA) in cloud computing to integrate the real data
    sets collected by the several sensor technologies. We conducted experiments for
    the watering system used two types of soil and different plant. Here, the Long
    Short Term Memory Networks (LSTMs) approach in deep learning techniques used to
    build smart decisions concerning watering requirements and deal with heterogeneous
    information coming from agricultural environments. Results show that our models
    can effectively improve the prediction accuracy for the watering system over various
    soil and plants. Access provided by University of Nebraska-Lincoln. Download conference
    paper PDF Similar content being viewed by others Smart Water Resource Management
    by Analyzing the Soil Structure and Moisture Using Deep Learning Chapter © 2023
    An IoT Low-Cost Smart Farming for Enhancing Irrigation Efficiency of Smallholders
    Farmers Article 11 August 2022 A Smart Plant Watering System for Indoor Plants
    with Optimum Time Prediction for Watering Chapter © 2021 1 Introduction The Food
    and Agriculture Organization (FAO) provides recommendations that all agricultural
    sectors need to be managed using innovative technology. The concept of agricultural
    development that has been developed at this time is the concept of intelligent
    farming and is also commonly called smart agriculture [25]. This concept refers
    to the Internet of Things (IoT) technologies in the modern farming system. The
    system of this technology makes it possible to obtain data from the agricultural
    environment, process the data, and manipulate the state of the farm environment.
    The primary purpose of the application of the technology is to carry out optimization
    in the form of increased yield (quality and quantity) and efficient use of resources
    [24, 25]. Meanwhile, one of the crucial factors for producing high-quality agriculture
    products is required careful management in every production stage, including field
    management practices in the watering system. The watering system is an automated
    watering schedule that uses information about environmental conditions like soil
    moisture to ensure your plants get the optimum amount of water [17]. Naturally,
    the lack of in the watering system is an important production factor and that
    delaying irrigation may result in loss of water and crop yield [8, 24]. Due to
    the various devices of sensor have been developed and are commercially available
    to measure the soil moisture rapidly. In recent year, several studies used a sensor
    based smart irrigation controller’s technologies to measure soil moisture content
    has shown significant progress in modern agriculture [7]. In their studies, the
    sensor installed in the soil (land) and root area of plants or trees, the sensors
    diagnose the moisture level in the soil and send the reading data to the server.
    The studies have shown that type of the soil moisture measurement devices has
    its benefits in terms of precision and reliability for determining soil water
    content [3, 23]. Also, their model was able to diagnose when and how much water
    is needed the plants on the soil periodically [14, 18]. Thus, Information of soil
    moisture as the primary focus for assessing plants water requirement, water absorption,
    water storage capacity of the soil, and quantity of water movement. Munir, M.S,
    and Bajwa, I.S [18], researched the amount of water concerning the consumption
    level of water in the medium-scale area is known as Smart Watering System (SWS)
    for controlling and watering the garden automatically. A server-side application
    was built with a web-based interface to deal with the proposed model. Then, the
    decision support system based on fuzzy logic was used in making intelligent decisions
    on data achieved from the sensors. This study focused on the relationship between
    plants and environmental conditions such as soil moisture content, light intensity,
    air humidity, and temperature. Their studies have succeeded in providing a watering
    system with the flexibility and efficiency to deal with the environmental conditions.
    However, they suggested using more types of plants and implanting more sensors
    to generate more precise predictions. In the other study, a smart system for monitoring
    and managing irrigation has designed and implemented [14], by focusing on the
    real data collected from sensors, and the data are processed using two-class boosted
    decision tree algorithm (train and process the data). The model successfully produces
    the weather forecast system and providing a decision to the farmer when the watering
    is necessary. Moreover, a smart conceptual architecture is proposed in [20] with
    a control system on the farming irrigation using arduino devices [1], the study
    proposed a persuasive technique on the Internet of Things (IoT) as being the gateway
    for communication between the sensor and other devices to develop smart farming.
    Furthermore, the study involved the concept of the kalman filtering algorithm
    to remove inaccuracies in the physical data from one sensor to another sensor
    for obtaining more accurate values [20] and then using the decision tree model
    to decide when it is suitable to start watering using specific standards [14].
    In general, most of the approaches presented above have been intended to build
    a smart watering system mainly used environmental conditions, sensor devices,
    and IoT technology. With this model, provide better control of time on the farmer
    watering system, save water, and as decision support. However, in those prototype,
    different soil samples and various plants for calibration at various moisture
    levels have not been tested [18]. Besides, Susha Lekshmi et al., [23] reported
    that the requirements for fast, reliable and spatially distributed in the soil
    moisture measurement we have to consider soil specific parameters i.e., sunlight,
    rainfall, ambient temperature, presence of the organic matter, type of soil, etc.
    [18, 21]. Likewise the characteristics of plants on water consumption like the
    type of plants, plants age, leaf width, etc. are not being fulfilled by the currently
    available techniques. On the other hand, Deep Learning (DL) techniques have shown
    the progress to examine the stochastic of ecosystems like evaporation processes,
    soil moisture, and temperature in modern agriculture [2, 11]. An essential advantage
    of DL techniques implemented in agriculture is feature learning, i.e., the automatic
    feature extraction from real data, with features from higher levels of the hierarchy
    being formed by the composition of lower-level components [24]. DL techniques
    be able to deal with more complex problems, particularly adequately and quickly,
    due to more complex models used, which allow extensive parallelization [17]. These
    advanced models employed in DL techniques can improve the classification/prediction
    performance or decrease errors value on the stochastic data problems in heterogeneous
    agricultural environments [15]. Therefore, the main objective of this study is
    to propose a smart watering system based on the framework of Low-Bandwidth Distributed
    Applications (LBDA) in cloud computing. We presented a distributed application
    in the Internet of Things (IoT) technology in terms of inter-dependencies application
    to make it a low-bandwidth system and enable it to use in real-life agriculture.
    In our proposed model, the data is collected through a collection of sensors that
    have a better diagnose of the soil moisture level, light intensity, air humidity,
    and temperature. The information is then transformed using The Long Short Term
    Memory Networks (LSTMs) methods in deep learning techniques to build the watering
    system. Next, the remaining paper is organized as follows: In Sect. 2, the materials
    and methods, the problem will be addressed and algorithm that we used; In Sect.
    3, results and discussion includes data visualization and results of prediction;
    In Sect. 4, we summarized the solution and the limitations that follow the future
    work. 2 Materials and Methods 2.1 Materials The first challenge that will be addressed
    is the varying soil moisture for different types of plants. Each variety of plant
    typically requires a different amount of water, temperature, and soil content
    to optimize growth. Thus, they need an unusual amount of watering time and regularity.
    So, soil water content is an extensive variable, it’s changes with size and situation
    and type of plants [18, 21]. Therefore, to find the characteristics of soil content,
    two typical plants were selected with different growing environments, i.e., lettuce
    and chili that cultivated on the peat and loam soil in 95 cm pots with soil pH
    are slightly acidic to neutral 6.5 to 7.0 and spacing plants 18 to 25 cm without
    fertilizer with aims to keep constant of soil content. Then, we used the sun exposure
    directly and for the watering, we treated the same method for both plants (Fig.
    1). Fig. 1. Framework of smart watering system using Low-Bandwidth Distributed
    Applications (LBDA) in cloud computing Full size image As shown in Table 1, we
    did not attempt to choose plants with similar variety, since that was important
    for testing the soil moisture characteristics in each different plants. In this
    experiment, the chili plants had a height of approximately 45 cm, with the more
    30 leaves count and six branches. In addition, for the lettuce plants reaching
    up to 20 cm tall, with age 15 days and leaf width approximately 7 cm. While the
    moisture sensors were installed in soil, the environmental conditions in the experiment
    area monitored using a temperature/relative humidity sensor (light sensor tag)
    and an ultraviolet light sensor (UVB Sensor). Then we tracking the soil moisture
    relative [6] to present a smart management rule which defines moisture condition;
    Soil moisture \\(>=\\)21%: Wet, Soil moisture \\(>=\\)18%: Medium wet, Soil moisture
    \\(>=\\)12%: Optimal, Soil moisture \\(>=\\)9%: Medium stress and Soil moisture
    \\(<9\\)%: Extreme stress. The goal is to keep moisture in the optimal section,
    then the next that the soil moisture level will be used to predict the next watering
    cycle. Since, the light intensity and soil temperature are two environmental factors
    that have major effects on plant growth [21]. Therefore in this study, we also
    investigate the light intensity using an ultraviolet light sensor (UVB Sensor)
    and use that information to predict soil moisture in each plants. The results
    obtained in the morning peak (09:00–12:00), Midday (12:00–14:00) and afternoon
    peak (14:00–17:00) the average of light intensity 19.8%, 40.6% and 20.5%, respectively.
    Table 1. Plants and material experiment Full size table Meanwhile, almost the
    soil sensors commercial has its default factory calibration. The existence of
    the calibration model usually was taken from the average of many different soil
    types or of a specific soil type [7]. So, to avoid the possibility if the calibrated
    value in the sensor will not match the soil type [12], we used two kinds of soil,
    i.e., first, the loam soil, this soil is a combination of sand, silt, and clay
    such that the beneficial properties from each are included. For instance, it can
    retain moisture and nutrients; hence, it is more suitable for farming. Second,
    the peat soil, this soil is high in organic matter and maintains a large amount
    of moisture [4, 5]. Table 1 shows the types of plants and materials that we used
    in this experiment. 2.2 Methods Firstly in the standalone scenario, the data collection
    consists of three types of sensors devices was installed. The output of these
    sensors has obtained the information of soil moisture, humidity, and temperature
    in https://my.wirelesstag.net and output of UV light sensor is the information
    of light intensity are provided by Vernier Data Share in which is synched with
    web service. Then we built a web service an automated line for deploying the Low-Bandwidth
    Distributed Applications (LBDA) in the cloud computing, which includes a decentralized
    protocol for self-configuring the virtual application machines [13]. The web service
    is written in PHP with a light weighted REST APIs to communicate the data between
    the Wireless Tag data, the cloud computing and OpenSimulator based virtual worlds.
    Next, to handle the best options in automatic learning systems for the soil moisture
    prediction that tends to be heterogeneous, as discussed in Sect. 2.1, the Long
    Short Term Memory Networks (LSTMs) is a part of artificial Recurrent Neural Networks
    (RNNs) architecture was implemented [9]. Here, we briefly introduce the Long Short
    Term Memory Networks (LSTMs) methods that were used to build the soil moisture
    content prediction. The LSTMs is a transformed variant of Recurrent Neural Networks
    (RNNs) in Deep Learning (DL) techniques, which makes it more accessible to remember
    past data in memory [9]. The vanishing gradient problem of RNNs is determined
    here. So, LSTMs is well-suited to classify process and estimate time series given
    time lags of unknown duration. In LSTMs method contains three gates, i.e., input
    gate, forget gate, and output gate. So that, in each iteration process, between
    the three gates, prevents vanishing/exploding gradient problem of the original
    RNNs and allows the network to retain state information over longer periods of
    time [17, 22]. The first process carried out by LSTMs is to determine the value
    in which is not used (forget gate) with the following equation: $$\\begin{aligned}
    f_{t}=\\sigma (W_{f}.[h_{t-1},x_{t}]+b_{f}) \\end{aligned}$$ (1) Second, the process
    for determining input gates with the following equation: $$\\begin{aligned} i_{t}=\\sigma
    (W_{i}.[h_{t-1},x_{t}]+b_{i}) \\end{aligned}$$ (2) $$\\begin{aligned} C_{t}=tanh(W_{c}.[h_{t-1},x_{t}]+b_{c})
    \\end{aligned}$$ (3) Then equation for input data as follow: $$\\begin{aligned}
    C_{t}=f_{t}*C_{t-1}+i_{t}*C_{t} \\end{aligned}$$ (4) The last is the process for
    determining the output data (output gates) with the following equation: $$\\begin{aligned}
    o_{t}=\\sigma (W_{o}.[h_{t-1},x_{t}]+b_{o}) \\end{aligned}$$ (5) $$\\begin{aligned}
    h_{t}=o_{t}*tanh(C_{t}), \\end{aligned}$$ (6) where \\(i_{t},f_{t}\\) and \\(o_{t}\\)
    are the input gate, forget gate and output gate, respectively. \\(\\sigma \\)
    represents sigmoid function, \\(W_{x}\\) and \\(b_{x}\\) are weight for the respective
    gate x and biases at neurons, \\(h_{t-1}\\) is output of the previous LSTMs block
    for input at current timestamp \\(x_{t}\\). While, \\(C_{t}\\) is memory at timestamp
    t for the cell state, candidate cell state and the final output. Meanwhile, the
    process for calculating the error value we using Mean Square Error (MSE) with
    the following equation: $$\\begin{aligned} MSE=\\frac{1}{n}\\sum _{i=1}^{n}(y_{x}-y_{i})^{2}
    \\end{aligned}$$ (7) The error value is calculated by calculating the difference
    between the actual value and the predicted value, where \\(y_{i}\\) is the actual
    value and \\(y_{x}\\) is the predicted value. The prediction model was performed
    by Weka Software (version 3.9.3) with the WekaDeeplearning4j package. The package
    support for the Weka Graphical User Interface (GUI), it is produced to include
    the advanced ways of Deep Learning (DL) techniques [16]. In order to verify the
    prediction performance of our model, the average of daily data, i.e., air temperature,
    air humidity, soil moisture, soil temperature, and light intensity are used as
    input data. Then, the soil moisture prediction target is classified as follows:
    Extreme Stress, Medium Stress, Optimal, Medium Wet, and Wet. Meanwhile, the trained
    network using a separate test data set, which is usually referred to as a generation
    test data. So, in this work has re-trained using the full training set (i.e.,
    1498 record data from 64 days and each day contains 24 h average data) with the
    proportion 60% for training and 40% for testing. Next, we implemented the prediction
    model based on the framework of Low-Bandwidth Distributed Applications (LBDA)
    in cloud computing. The framework is a part of a cloud computing that enables
    fog communication between the application program interfaces (APIs) and data services
    to reduce the traffic bandwidth in IoT technologies [19]. Therefore, for communication
    between the client and the server, we built an application LBDA server in IoT
    devices, where the LBDA become flexible proxying services to minimize the communication
    capacities by efficiently encoding binary message content and adapting application
    protocol operation to affect the number of exchanged messages; it further reduces
    the traffic for the end device. 3 Results and Discussion 3.1 Data Visualization
    Since we considered the characteristics of soil moisture based on air temperature,
    air humidity, soil temperature, and light intensity. The first stage is to analyze
    soil moisture information that has been taken from a moisture sensor in the soil
    on each plants (soil pot). These parameters are considered for analyzing the soil
    moisture in each pot based on the pattern of soil moisture in Sect. 2.1 and then
    apply learning systems in Long Short Term Memory Networks (LSTMs) method to predict
    the watering system. Here, we have investigated the water consumption in each
    plants type based on the moisture (%) and temperature (C) of soil from day to
    day for 24 h. Figures 2 and 3 shows the soil temperature, and soil moisture level
    tends to vary in each pot throughout for 64 days. Although the soil temperature
    tends to vary in day to day, between two pots (lettuce and chili), there is no
    significant difference. However, the interesting thing is the soil moisture (water
    content) between two pots due to there is a significant difference in the water
    content. This can be seen in Fig. 2 the lettuce plants in pot 1 for the soil moisture
    tends stable become dry in day to day. While for the chili plants in pot 2, the
    soil moisture tends wet, and this proves that the water consumption of the lettuce
    plants tends to be more than the chili plants. In this case, similar results have
    been previously reported that the patterns of time-varying consumption of water
    for different plants. The growth rate and leaf number are impacting the amount
    of water consumption over a day in each plants type significantly [5]. So, applying
    daily data of soil moisture per hour for 64 days, the water consumption of plants
    could then be determined. Additionally, different variety of plants need a different
    quantity of water, so that a smart system is required for efficient utilization
    of the watering system for more efficient plants growth. Fig. 2. Soil moisture
    in the Pot 1 and Pot 2 Full size image Fig. 3. Soil temperature in the Pot 1 and
    Pot 2 Full size image On the other hand, several studies have noted that the effect
    of variation air temperature and humidity on soil moisture (water content) has
    a very high correlation [21]. While In Japan between March, April and May is spring
    season wherein the temperature increases with large short-term fluctuations. Sunlight
    duration is long in the second half of spring due to the predominance of anticyclonic
    rules as well the stormy season begins in early May [10]. Therefore, in this study,
    we also investigate the variations of air temperature and humidity. Figure 4 shows
    the results that the significant change in air temperature and humidity tends
    to vary in each day. It is also observed, during the air temperature decrease,
    the soil moisture also reduces; this can be seen in Figs. 2 and 3. Particularly
    in May, when the variation air temperature significantly increases, the average
    of soil temperature also change and soil moisture in each pot tends to vary. Fig.
    4. Variation of temperature and air humidity in each day on March, April and May,
    2020 Full size image 3.2 Results Prediction In Table 2 shows the results performance
    of the soil temperature in each pot, it can be seen that for classification of
    pot 1 lettuce plants obtained performance accuracy 91.71%, while pot 2 chili plants
    obtained 87.32%. Also, it has been observed here that for lettuce plants, in classification
    performance, provide better results than chili plants. However, as we discussed
    in Sect. 2.1 that lettuce has a relatively high water requirement and very risky
    for changes in temperature and air humidity. Table 2. Accuracy classification
    of smart watering system Full size table Table 3. Classification of soil moisture
    (water) for Pot 1 lettuce with a LSTM performance Full size table Table 4. Classification
    of soil moisture (water) for Pot 2 chili with a LSTM performance Full size table
    The analysis of data acquired for each type of plants (moisture pot 1 and pot
    2) is shown in Tables 3 and 4. The data of the different quantity/content of soil
    moisture of using the Long Short Term Memory Networks (LSTMs) for predicting the
    content of soil moisture was classified. Sixty-four days of data were used to
    train and test for all categories of soil moisture content. The results were measured
    in terms of true positive rate (TPR), false-positive rate (FPR), precision, and
    recall. In this experiment for the classification of soil moisture on the pot
    1 lettuce plants for all categories, the mean per-type of true positive rate obtained
    0.97%, the false positive rate achieved 0.015%, precision, and recall 0.922% and
    0.917%, respectively. While for the classification of soil moisture for all categories,
    the mean per-type of true positive rate obtained 0.873%, false positive rate obtained
    0.037%, precision and recall were 0.891% and 0.873%. From the results obtained,
    it can be said that determining all categories of soil moisture content for the
    smart watering system provided promising prediction results. So, it can be concluded,
    that using the modern system such as a soil moisture sensor and IoT technology
    with the Long Short Term Memory Networks (LSTMs) approach has the potential for
    improving the smart watering system although in the soil is a heterogeneous natural
    environment, with complex processes and uncertainty mechanisms [17]. 3.3 Discussion
    In order to get the most accurate configuration for the plants watering system,
    a smart system has been developed to automatically detect the type of the plants,
    which is based on deep learning techniques, especially the Long Short Term Memory
    Networks (LSTMs) approach. The implementation is based on the following tools
    and environments: air temperature and air humidity sensor, soil temperature and
    moisture sensor, and light intensity. Moreover, we employed the Internet of Things
    (IoT) and Low-Bandwidth Distributed Applications (LBDA) in cloud computing for
    collecting and processing data. Then, two typical plants were selected with different
    growing environments, i.e., lettuce plants using peat soil and chili plants using
    loam soil. The results providing excellent accuracy in terms of soil moisture
    classification and have the potential for improving the smart watering system.
    Moreover, in our study has obtained the better performance in the two different
    testing datasets, as mentioned above in Table 2, accuracy prediction of lettuce
    plants (91.71%) and accuracy prediction of chili plants lower values (87.32%)
    have been reported. These show that the LSTMs method was able to generalize well
    to different datasets. However, more comparisons between the method in DL techniques
    are necessary, due to a considerable drawback and barrier is the need for large
    datasets, which would serve as the input during the training procedure. So, more
    complex architectures and tasks would appear, comparing various DL techniques
    and classifiers together, or combining with an automatic method by using various
    models, will improve the overall result [11]. In addition, due to the experiment
    lasted three months, the weather each year is unpredictable. We also noted the
    land area has to be considered because particles and water absorption by the soil
    are highly correlated with the depth and width of the land [4]. 4 Conclusions
    and Future Work The soil moisture is a crucial parameter for building a smart
    watering system. The soil moisture is affected significantly by several environmental
    variables, e.g., air temperature, air humidity, light intensity, soil temperature,
    and type of soil and plants. With the advancement in sensor and IoT technologies,
    the smart watering system accuracy has improved significantly and data can be
    used for the prediction of changes in the soil moisture. For future work, more
    complex experimental studies may compare more plants varieties, metabolism, photosynthesis
    and gene expression. References Arvindan, A., Keerthika, D.: Experimental investigation
    of remote control via android smart phone of Arduino-based automated irrigation
    system using moisture sensor. In: 2016 3rd International Conference on Electrical
    Energy Systems (ICEES), pp. 168–175. IEEE (2016) Google Scholar   Balducci, F.,
    Impedovo, D., Pirlo, G.: Machine learning applications on agricultural datasets
    for smart farm enhancement. Machines 6(3), 38 (2018). https://doi.org/10.3390/machines6030038
    Article   Google Scholar   Bittelli, M.: Measuring soil water potential for water
    management in agriculture: a review. Sustainability 2(5), 1226–1251 (2010). https://doi.org/10.3390/su2051226
    Article   Google Scholar   Buschmann, C., Röder, N., Berglund, K., Berglund, Ö.,
    Lærke, P.E., Maddison, M., Mander, Ü., Myllys, M., Osterburg, B., van den Akker,
    J.J.: Perspectives on agriculturally used drained peat soils: Comparison of the
    socioeconomic and ecological business environments of six European regions. Land
    Use Policy 90, 104,181 (2020) Google Scholar   Chen, T., Wang, X.: A correlation
    model on plant water consumption and vegetation index in mu us desert, in China.
    Procedia Environ. Sci. 13, 1517–1526 (2012). https://doi.org/10.1016/j.proenv.2012.01.144
    Article   Google Scholar   Douville, H.: Relative contribution of soil moisture
    and snow mass to seasonal climate predictability: a pilot study. Climate Dynamics
    34(6), 797–818 (2010). https://doi.org/10.1007/s00382-008-0508-1 Article   Google
    Scholar   Francesca, V., Osvaldo, F., Stefano, P., Paola, R.P.: Soil moisture
    measurements: comparison of instrumentation performances. J. Irrig. Drainage Eng.
    136(2), 81–89 (2010). https://doi.org/10.1061/ASCE0733-94372010136:281 Article   Google
    Scholar   Galioto, F., Chatzinikolaou, P., Raggi, M., Viaggi, D.: The value of
    information for the management of water resources in agriculture: Assessing the
    economic viability of new methods to schedule irrigation. Agricult. Water Manag.
    227, 105,848 (2020). https://doi.org/10.1016/j.agwat.2019.105848 Gao, Y., Glowacka,
    D.: Deep gate recurrent neural network. In: Asian Conference on Machine Learning,
    pp. 350–365 (2016) Google Scholar   JMA: Overview of japan’s climate. https://www.jma.go.jp/jma/indexe.html.
    Accessed: 30 Sept 2010 Kamilaris, A., Prenafeta-Boldú, F.X.: Deep learning in
    agriculture: a survey. Comput. Electron. Agricult. 147, 70–90 (2018). https://doi.org/10.1016/j.compag.2018.02.016
    Article   Google Scholar   Karim, N.B.A., Ismail, I.B.: Soil moisture detection
    using electrical capacitance tomography (ect) sensor. In: 2011 IEEE International
    Conference on Imaging Systems and Techniques, pp. 83–88. IEEE (2011). https://doi.org/10.1109/IST.2011.5962195
    Köeppen, M., Yoshida, K.: The price of unfairness. In: 2016 International Conference
    on Intelligent Networking and Collaborative Systems (INCoS), pp. 463–468 (2016)
    Google Scholar   Kissoon, D., Deerpaul, H., Mungur, A.: A smart irrigation and
    monitoring system. Int. J. Comput. Appl. 163(8), 39–45 (2017). https://doi.org/10.5120/ijca2017913688
    Article   Google Scholar   Kwok, J., Sun, Y.: A smart IoT-based irrigation system
    with automated plant recognition using deep learning. In: Proceedings of the 10th
    International Conference on Computer Modeling and Simulation, pp. 87–91. Association
    for Computing Machinery (2018). https://doi.org/10.1145/3177457.3177506 Lang,
    S., Bravo-Marquez, F., Beckham, C., Hall, M., Frank, E.: Wekadeeplearning4j: a
    deep learning package for Weka based on deeplearning4j. Knowl.-Based Syst. 178,
    48–50 (2019) Article   Google Scholar   Lu, Y., Salem, F.M.: Simplified gating
    in long short-term memory (LSTM) recurrent neural networks. In: 2017 IEEE 60th
    International Midwest Symposium on Circuits and Systems (MWSCAS), pp. 1601–1604.
    IEEE (2017) Google Scholar   Munir, M.S., Bajwa, I.S., Cheema, S.M.: An intelligent
    and secure smart watering system using fuzzy logic and blockchain. Comput. Electr.
    Eng. 77, 109–119 (2019). https://doi.org/10.1016/j.compeleceng.2019.05.006 Article   Google
    Scholar   Pustišek, M., Dolenc, D., Kos, A.: LDAF: low-bandwidth distributed applications
    framework in a use case of blockchain-enabled IoT devices. Sensors 19(10), 2337
    (2019) Article   Google Scholar   Putjaika, N., Phusae, S., Chen-Im, A., Phunchongharn,
    P., Akkarajitsakul, K.: A control system in an intelligent farming by using Arduino
    technology. In: 2016 Fifth ICT International Student Project Conference (ICT-ISPC),
    pp. 53–56. IEEE (2016) Google Scholar   Quanqi, L., Xunbo, Z., Yuhai, C., Songlie,
    Y.: Water consumption characteristics of winter wheat grown using different planting
    patterns and deficit irrigation regime. Agricult. Water Manage. 105, 8–12 (2012).
    https://doi.org/10.1016/j.agwat.2011.12.015 Article   Google Scholar   Sainath,
    T.N., Vinyals, O., Senior, A., Sak, H.: Convolutional, long short-term memory,
    fully connected deep neural networks. In: 2015 IEEE International Conference on
    Acoustics, Speech and Signal Processing (ICASSP), pp. 4580–4584. IEEE (2015) Google
    Scholar   Su, S.L., Singh, D., Baghini, M.S.: A critical review of soil moisture
    measurement. Measurement 54, 92–105 (2014). https://doi.org/10.1016/j.measurement.2014.04.007
    Torres-Sanchez, R., Navarro-Hellin, H., Guillamon-Frutos, A., San-Segundo, R.,
    Ruiz-Abellón, M.C., Domingo-Miguel, R.: A decision support system for irrigation
    management: analysis and implementation of different learning techniques. Water
    12(2), 548 (2020). https://doi.org/10.3390/w12020548 Article   Google Scholar   Trendov,
    N.M., Varas, S., Zeng, M.: Digital technologies in agriculture and rural areas.
    FAO, Rome, Italy (2019) Google Scholar   Download references Author information
    Authors and Affiliations Graduate School of Computer Science and Systems Engineering,
    Kyushu Institute of Technology, Fukuoka, Japan Nurdiansyah Sirimorok Graduate
    School of Life Science and Systems Engineering, Kyushu Institute of Technology,
    Kitakyushu, Japan Mansur As Department of Life Science and Systems Engineering,
    Kyushu Institute of Technology, Kitakyushu, Japan Kaori Yoshida Department of
    Creative Informatics, Kyushu Institute of Technology, Fukuoka, Japan Mario Köppen
    Corresponding author Correspondence to Nurdiansyah Sirimorok . Editor information
    Editors and Affiliations Department of Information and Communication Engineering
    Faculty of Information Engineering, Fukuoka Institute of Technology, Fukuoka,
    Japan Leonard Barolli Department of Electrical and Computer Engineering, University
    of Victoria, Victoria, BC, Canada Kin Fun Li School of Science and Technology,
    Kwansei Gakuin University, Sanda, Japan Hiroyoshi Miwa Rights and permissions
    Reprints and permissions Copyright information © 2021 Springer Nature Switzerland
    AG About this paper Cite this paper Sirimorok, N., As, M., Yoshida, K., Köppen,
    M. (2021). Smart Watering System Based on Framework of Low-Bandwidth Distributed
    Applications (LBDA) in Cloud Computing. In: Barolli, L., Li, K., Miwa, H. (eds)
    Advances in Intelligent Networking and Collaborative Systems. INCoS 2020. Advances
    in Intelligent Systems and Computing, vol 1263. Springer, Cham. https://doi.org/10.1007/978-3-030-57796-4_43
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-030-57796-4_43
    Published 21 August 2020 Publisher Name Springer, Cham Print ISBN 978-3-030-57795-7
    Online ISBN 978-3-030-57796-4 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the
    following link with will be able to read this content: Get shareable link Provided
    by the Springer Nature SharedIt content-sharing initiative Publish with us Policies
    and ethics Sections Figures References Abstract Introduction Materials and Methods
    Results and Discussion Conclusions and Future Work References Author information
    Editor information Rights and permissions Copyright information About this paper
    Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Advances in Intelligent Systems and Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart watering system based on framework of low-bandwidth distributed applications
    (LBDA) in cloud computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Aafreen R.
  - Neyaz S.Y.
  - Shamim R.
  - Beg M.S.
  citation_count: '10'
  description: Maintaining suitable environmental conditions like soil moisture, temperature,
    humidity etc. is required for good crop produce in industrial greenhouses. Internet
    of Things (IoT) can enable a complete remote visualisation and control of greenhouse
    environmental parameters in real time. The state of art systems use zigbee based
    wireless sensor networks for monitoring and control, which have a limited range
    of operation, bandwidth and cognitive abilities. This paper presents a novel IoT
    based system for telemetry and control of greenhouse environment. The developed
    system provides real time wireless sensor data transmission, data visualization
    and processing at the central monitoring server / PC via ThingSpeak cloud and
    ubiquitous GSM infrastructure. The use of lightweight and fast Blynk IoT platform
    for implementing the mobile app for messaging and control of greenhouse environment
    is a key feature of the developed system. Real time irrigation needs are received
    via messages on the Blynk app installed on the mobile phone. The experimental
    results show that the proposed system is an effective solution for energy efficient
    smart farming in greenhouse and thus contribute towards a sustainable and green
    environment.
  doi: 10.1109/UPCON47278.2019.8980258
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2019 International Conference... An IoT
    based system for telemetry and control of Greenhouse environment Publisher: IEEE
    Cite This PDF Rubeena Aafreen; Salwa Yasmeen Neyaz; Raaziyah Shamim; M. Salim
    Beg All Authors 10 Cites in Papers 412 Full Text Views Abstract Document Sections
    I. Introduction II. System Architecture III. System Implementation IV. System
    Working and Results V. Conclusions Authors Figures References Citations Keywords
    Metrics Abstract: Maintaining suitable environmental conditions like soil moisture,
    temperature, humidity etc. is required for good crop produce in industrial greenhouses.
    Internet of Things (IoT) can enable a complete remote visualisation and control
    of greenhouse environmental parameters in real time. The state of art systems
    use zigbee based wireless sensor networks for monitoring and control, which have
    a limited range of operation, bandwidth and cognitive abilities. This paper presents
    a novel IoT based system for telemetry and control of greenhouse environment.
    The developed system provides real time wireless sensor data transmission, data
    visualization and processing at the central monitoring server / PC via ThingSpeak
    cloud and ubiquitous GSM infrastructure. The use of lightweight and fast Blynk
    IoT platform for implementing the mobile app for messaging and control of greenhouse
    environment is a key feature of the developed system. Real time irrigation needs
    are received via messages on the Blynk app installed on the mobile phone. The
    experimental results show that the proposed system is an effective solution for
    energy efficient smart farming in greenhouse and thus contribute towards a sustainable
    and green environment. Published in: 2019 International Conference on Electrical,
    Electronics and Computer Engineering (UPCON) Date of Conference: 08-10 November
    2019 Date Added to IEEE Xplore: 06 February 2020 ISBN Information: ISSN Information:
    DOI: 10.1109/UPCON47278.2019.8980258 Publisher: IEEE Conference Location: Aligarh,
    India SECTION I. Introduction According to the UN Food and Agriculture Organization
    (FAO), providing adequate food for the increasing world population is one of the
    most serious challenges of the 21st century. Limited cultivable land, declining
    freshwater resource, unsuitable climate, inadequate light for photosynthesis and
    constrained financial resources are some of the major challenges to increasing
    agricultural produce. In this context, industrial greenhouses have a huge potential
    in providing food security in many parts of the world, particularly if they are
    used properly and efficiently. However, greenhouse ecosystem is a complex system
    coupled with dynamics of environmental factors like soil moisture, temperature,
    humidity, light and CO2 concentration. Maintaining an optimal greenhouse environment
    may lead to significant improvements in crop produce and hence a key goal for
    today''s advanced agriculture and this is the motivation behind carrying out the
    work described in this paper. IoT driven agriculture monitoring may potentially
    revolutionize the agriculture industry. It enables quality remote monitoring and
    control from anywhere at any time through a combination of devices and also improved
    access to quality information. Reduction in electricity and labour costs, and
    higher convenience are added advantages. The use of IoT based systems for the
    purpose of monitoring and control of greenhouse ecosystem provide several advantages
    over existing methods. A reduction in wiring deployment and maintenance cost,
    quick and easy retrofitting in the existing infrastructure, convenient and non-invasive
    remote monitoring and control without disturbing the plant biome by frequent visits,
    less disturbance to normal farming operations are some of the benefits. In addition
    to these benefits, these systems are more reliable, easily scalable and can be
    extended to more advanced functionalities such as fusion of information from more
    than one sensor node for better inference and precise control of the environment.
    A research carried out by LOFAR Agro Consortium in Netherlands is reported where
    wireless sensor network is used to monitor temperature and humidity for potato
    crop cultivation and hence control Phytophtora Infestans fungous disease [1].
    Zhang et al. developed a small network for monitoring humidity and temperature
    at various points in a plant nursery [2]. Belasare et al. developed a system to
    monitor Vapour Pressure Deficit (VPD) in a greenhouse using WSN and visualize
    the data on LabView [3]. Roop Pahuja et al. proposed a GSM based system for remote
    control of various parameters such as humidity, light and temperature using ARM7
    microcontroller in a greenhouse [4]. Ravi et al. (2016) monitored nitrogen, phosphorus,
    potassium and other minerals in soil using electrochemical sensors, and carry
    out drip fertigation when required [5]. Koprda et al. implemented a GSM based
    system for monitoring and control of soil moistures using soil humidity sensors
    [6]. The control is done using Android app. Nattapol et al. proposed the use of
    Wireless Sensing Networks (WSN) and smartphone for monitoring and control of various
    crop parameters like soil moisture, temperature and humidity [7]. Sekulic'' et
    al. developed a smart spraying system for disease forecasting of grapevine downy
    mildew (Plasmopara Viticola) in the vineyard region of Montenegro [8]. The system
    collects weather data from the sensor nodes. Based on the measurements, grapevine
    growth stages and field monitoring of the pathogen development, the system is
    calibrated for disease forecasting. The above-mentioned literature report monitoring
    and control of temperature, soil moisture, soil nutrient content, vapour pressure
    deficit etc. However, research suggests that quality of air as well as intensity
    of individual spectral components of light also affect the growth of plants. Besides,
    most of the systems mentioned above use zigbee based wireless sensor networks
    for monitoring and control, with a limited range of operation, a limited bandwidth
    and lack of cognitive abilities due to limited computing power. In the work presented
    in this paper, an IoT based cloud integrated telemetry and control system is developed
    to remotely monitor and maintain environment suitable for plant sustenance and
    growth in greenhouse. The proposed cloud integrated IoT system has no range limitations,
    the only constraint is the availability of GSM and ethernet/WiFi connections.
    The main objective of the design was to develop a low cost, user friendly system
    for field measurement with the aim of reducing the manual operations and using
    the measured data from the sensor nodes for intelligent inference and remote control.
    The developed system provides realtime wireless sensor data transmission, data
    visualization and processing at the central monitoring server / PC via ThingSpeak
    cloud and ubiquitous GSM infrastructure. The use of lightweight and fast Blynk
    IoT platform for implementing the mobile app for messaging and control of greenhouse
    environment is a key feature of the developed system. Blynk platform enables a
    multilateral connection with the sensor node, Blynk server/software, and mobile
    phone. Real time irrigation needs are received via messages on the Blynk app installed
    on the mobile phone. In order to test system developed in this work, experimental
    tests were conducted in greenhouse by us and the results obtained have been presented
    and discussed in this paper. The paper is organized as follows: Section II describes
    the overall architecture of the proposed system. Section III and IV give the hardware
    and software details of the system, respectively. Section V and VI report the
    experimental results and conclusions, respectively. SECTION II. System Architecture
    Fig. 1. gives the system architecture of the IoT based remotely monitored and
    controlled greenhouse ecosystem. The system comprises of three major components:
    GPRS enabled sensor nodes deployed at various locations in the field, an Ethernet
    connected central monitoring server/PC at the remote station, and mobile controlling
    of actuator connected to the switches controlling devices. A. Sensor Node (SN)
    Each sensor node comprises of sensors, a microcontroller and GSM shield for communication.
    The sampled sensor data is processed, packetized and transmitted wirelessly to
    the server through General Packet Radio Service (GPRS). B. Central Monitoring
    Server The central monitoring server receives, stores, displays and analyse live
    data from the sensor nodes. It may also be programmed/configured to generate/send
    notifications under certain conditions. The server processes the received information,
    makes suitable inferences and send control command to the actuator node. C. Mobile
    Phone Based Monitoring and Control Unit /AN The actuator node (AN) is used to
    wirelessly receive and execute the control commands from the Blynk server. It
    has connections to various coloured LEDs, irrigation pumps fan/cooler etc. Fig.
    1: Data flow architecture of IoT based telemetry and control system for a greenhouse
    Show All SECTION III. System Implementation A. Sensor Node The sensor node employed
    in this work for IoT based greenhouse monitoring uses an Arduino Mega 2560 microcontroller
    based on ATMega1280. The board requires a power supply of 7-12V supplied either
    at VIN via an on-board regulator or USB. It operates at frequencies of up to 1
    MHz. It includes up to 128 kB of flash memory, up to 8 kB of SRAM, USB Device
    interface, SPI interface, 4 UART serial ports, digital input-output pins, 1 PWM
    pins and 1 analog input pins[9]. The soil moisture sensor used in the node is
    EVANA SM12. It estimates the soil volumetric water content by measuring the dielectric
    constant (soil bulk permittivity) of the soil. The soil water content and dielectric
    constants are directly proportional to each other. This sensor measures the resistance
    between two pins of its Printed Circuit Board (PCB). Hence, it gives a lower resistance
    when soil moisture is high and vice-versa. The operation of the sensor requires
    a biasing voltage of 3.3-5V. The sensor has a digital as well as analog output
    interface (EVANA SM12 Datasheet) [10]. The ambient light intensity sensor used
    is BH1750. It measures the intensity of the incident light using a photo diode.
    It has a measurement range of 1–553 lx and a resolution of 0.1 lx. The maximum
    input voltage of BH1750 is 4.5V and the operating voltage being around is 3.6V.
    The influence of the infrared radiations on the sensor output is small [11]. The
    air quality sensor MQ135 is used in the node to monitor the CO2 content of the
    atmosphere. As the concentration of CO2 increase, the conductivity of gas sensor
    also increases. It is assumed that the other gases like ammonia, aromatic compounds,
    Sulphur, benzene vapor, smoke etc. to which the sensor is sensitive are constant
    in the atmosphere. The output of MQ135 can be an analog signal that can be read
    with an analog input port of the Arduino or a digital TTL output that can be read
    with a digital input port of the Arduino [12]. GSM Shield SIM900A is used to enable
    communication of the developed sensor node with remote server. The interfacing
    of sensor node electronics comprising microcontroller, sensors and GSM Shield
    is shown in Fig. 2. The function of the sensor node include periodically measuring
    the environmental parameters, data processing and packetization, and wireless
    transmission to ThingSpeak channel. These functions were implemented by a program
    in embedded C language, uploaded on the microcontroller using Arduino IDE (Integrated
    Development Environment). When the sensor node is powered on the program automatically
    starts and follows the logic in the flowchart indicated in Fig. 3. B. Central
    Monitoring Server In the prototype in this work, ThingSpeak is used as a monitoring
    cloud server. ThingSpeak is an IoT analytics platform that enables real time data
    collection, visualization and analysis. The information can be viewed by the user
    when required. Online analysis and processing of the data may also be done in
    MATLAB. Fig. 4 shows the program flow for cloud server used in this work. Fig.
    2: Sensor node electronics Show All Fig. 3: Sensor node program flow Show All
    C. Mobile Phone Based Monitoring and Control Unit (AN) The actuator node consists
    of a microcontroller programmed to sense any control commands from Blynk app installed
    on the remote mobile phone. Whenever, the intensity of light displayed at ThingSpeak
    channel is outside the desired ambient light intensity range, a command is sent
    from the Blynk app to switch on / off the light. Likewise, the irrigation pump
    is switched on / off when the received sensed soil moisture values fall outside
    the desired levels. Microcontroller executes the received commands by controlling
    the relevant switches via the digital input / output pins and connected relays.
    The flowchart for actuator node is shown in Fig. 5. Fig. 4: Cloud server routine
    Show All Fig. 5: Actuator node routine for environment controlling devices Show
    All SECTION IV. System Working and Results The working of the developed system
    is shown in Fig. 6. The working of the developed system is shown in Fig. 6. The
    developed system was tested to perform a real-time remote environmental monitoring
    of soil moisture, air quality and light for cultivation of tomato plants. The
    sensor and the actuator nodes were installed in the in-vitro culture lab, Department
    of Botany, Faculty of Life Sciences, Aligarh Muslim University (AMU). The monitoring
    started since November 16, 2017 with every one minute interval of measurement.
    The central monitoring server was placed at Advanced Communication Laboratory,
    Department of Electronics Engineering, AMU. The environmental data comprising
    air quality, light intensity and soil moisture was monitored for seven days. Fig.
    7. shows the implemented system setup at the in-vitro culture lab, Department
    of Botany. The actuation function was successfully tested for controlling the
    irrigation pump, air conditioner and artificial lights. Fig. 6: Working of the
    developed system Show All Fig. 7: Testing of the implemented system prototype
    Show All Fig. 8. shows the successful real-time visualization of received measurements
    on ThingSpeak server for a) soil moisture sensor b) light sensor and c) air quality
    sensor. Offline measurement data were also observed on the personal computer.
    The offline measurement record may help keep continuity and robustness of monitoring
    in case of unstable GSM network. The offline data observed on serial monitor of
    Arduino IDE is shown in Fig. 9. Table 1 shows a sample series of successfully
    received environmental data for soil moisture, light intensity and air quality
    over time. Soil moisture sensor values above 1000 indicate the need for irrigation.
    Light intensity values less than 50 indicate darkness. Similarly, air quality
    measurements more than 350 indicate poor air quality. The data can be utilized
    to support daily farm activity. In view of the use of cloud-based system, the
    measured environmental data could be checked using PCs and smartphones anytime
    and anywhere. Depending upon the measured sensor values, required actuation of
    devices can be performed via Blynk app. Analog voltage values measured by the
    above sensors can be calculated from raw mentioned values using the formula: Analog
    sensor voltage output= raw sensor output value 1023 View Source These voltages
    are proportionally indicative of soil moisture percentage, light intensity and
    air quality respectively. Table I: Reading of different sensors collected by ThingSpeak
    server Fig. 8: ThingSpeak server data for different sensors Show All Fig. 9: Data
    on serial monitor of arduino IDE Show All As soon as the levels rise/fall below
    the set threshold for soil moisture sensor, the ThingSpeak server displays an
    alert notification on mobile as shown in Fig. 10. Fig. 10: Alert notification
    received on mobile Show All The control of these parameters is done remotely and
    wirelessly via Blynk app which allows user to press a button and turn on/off the
    equipments. This wireless control via Blynk app was tested for switching ON/OFF
    the LED and the results are shown in Fig. 11. These LEDs were replaced by relays
    connecting to the appliances used for actual actuation. Fig. 11: Testing control
    via blynk app Show All SECTION V. Conclusions In this paper, a prototype cloud
    integrated Internet of Things system for tele-monitoring and control of greenhouse
    environment is developed and successfully tested. The system collects measured
    environmental sensor data on ThingSpeak cloud server from the GPRS enabled sensor
    nodes. The sensor node data can be monitored from anywhere using an Internet connected
    laptop / mobile phone. The ThingSpeak platform can analyse the effect of greenhouse
    environment on plant growth from the received sensor data. Through the analysis,
    it enables intelligent control of the greenhouse environment suitable for plant
    growth. The use of lightweight and fast Blynk IoT platform for implementing the
    mobile app for messaging and control of greenhouse environment is a key feature
    of the developed system. Blynk platform enables a multilateral connection with
    the sensor node, Blynk server/software, and mobile phone. Real time irrigation
    needs are received via messages on the Blynk app installed on the mobile phone.
    Fan, lights and irrigation pump in greenhouse are also successfully controlled
    via Blynk mobile phone app using GPRS transmission to the sensor node. Computing
    and telecommunications technologies are still not widely adopted for agriculture
    applications, in many regions of the world. Increasing bandwidths in terms of
    high speed mobile and internet services to rural areas are gradually becoming
    available in these regions. In this scenario, the work presented in this paper
    assumes great significance as the advent of IoT has a great potential to revolutionise
    farming and agricultural practices. ACKNOWLEDGMENT The paper authors would like
    to place on record their acknowledgement for the financial assistance by TEQIP
    for the procurement of components. The authors would also like to acknowledge
    the support and facilities provided by the Department of Electronics Engineering
    and Department of Botany at AMU, Aligarh. Authors Figures References Citations
    Keywords Metrics More Like This Precision Agriculture for Greenhouses Using a
    Wireless Sensor Network 2017 Palestinian International Conference on Information
    and Communication Technology (PICICT) Published: 2017 Design and implementation
    of a wireless sensor network for rose greenhouses monitoring 2015 6th International
    Conference on Automation, Robotics and Applications (ICARA) Published: 2015 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 2019 International Conference on Electrical, Electronics
    and Computer Engineering, UPCON 2019
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An IoT based system for telemetry and control of Greenhouse environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mayoral C.Q.
  - Garcia Gonzalez C.
  - Galarregui J.C.I.
  - Marin D.
  - Gaston D.
  - Miranda C.
  - Gonzalo R.
  - Maestrojuan I.
  - Santesteban L.G.
  - Ederra I.
  citation_count: '7'
  description: 'This paper presents the real-time monitoring of a grapevine''s water
    content that flows up through the xylem tissue by means of a frequency-modulated
    continuous-wave radar. The application of an optimization process, based on the
    super-resolution multiple signal classification algorithm, has enabled the reduction
    of the bandwidth required to discern the xylem water content and, thus, the operating
    frequency, achieving a depth resolution of at least 3 mm. This design advantage
    has resulted in a significant step forward toward a real life application, allowing
    the use of fully-integrated off-the-shelf components in order to implement a completely
    portable low-power cost-effective radar at 23.1 GHz with a 3.4-GHz bandwidth.
    The sensor performance has been evaluated by means of three different experiments:
    irrigation cycles, day/night cycles, and comparison between irrigation cycles
    at different temperatures. From the experimental results, it is possible to assert
    that the contactless sensor presented in this paper is very sensitive to changes
    in the plant''s water content, differentiating between daytime and nighttime.
    In addition, it has been proven that temperature has a noticeable influence over
    the evapotranspiration, observing negative drying slopes of 5.62 and 6.28 mV/cycle
    at 23 °C and 26 °C, respectively.'
  doi: 10.1109/TGRS.2019.2900565
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Geoscien...
    >Volume: 57 Issue: 8 Water Content Continuous Monitoring of Grapevine Xylem Tissue
    Using a Portable Low-Power Cost-Effective FMCW Radar Publisher: IEEE Cite This
    PDF Carlos Quemada Mayoral; Cebrián García González; Juan Carlos Iriarte Galarregui;
    Diana Marín; Diego Gastón; Carlos Miranda; Ramón Gonzalo All Authors 6 Cites in
    Papers 460 Full Text Views Abstract Document Sections I. Introduction II. Background
    III. Measurement Methodology IV. Results V. Conclusion Show Full Outline Authors
    Figures References Citations Keywords Metrics Abstract: This paper presents the
    real-time monitoring of a grapevine''s water content that flows up through the
    xylem tissue by means of a frequency-modulated continuous-wave radar. The application
    of an optimization process, based on the super-resolution multiple signal classification
    algorithm, has enabled the reduction of the bandwidth required to discern the
    xylem water content and, thus, the operating frequency, achieving a depth resolution
    of at least 3 mm. This design advantage has resulted in a significant step forward
    toward a real life application, allowing the use of fully-integrated off-the-shelf
    components in order to implement a completely portable low-power cost-effective
    radar at 23.1 GHz with a 3.4-GHz bandwidth. The sensor performance has been evaluated
    by means of three different experiments: irrigation cycles, day/night cycles,
    and comparison between irrigation cycles at different temperatures. From the experimental
    results, it is possible to assert that the contactless sensor presented in this
    paper is very sensitive to changes in the plant''s water content, differentiating
    between daytime and nighttime. In addition, it has been proven that temperature
    has a noticeable influence over the evapotranspiration, observing negative drying
    slopes of 5.62 and 6.28 mV/cycle at 23 °C and 26 °C, respectively. Published in:
    IEEE Transactions on Geoscience and Remote Sensing ( Volume: 57, Issue: 8, August
    2019) Page(s): 5595 - 5605 Date of Publication: 19 March 2019 ISSN Information:
    DOI: 10.1109/TGRS.2019.2900565 Publisher: IEEE Funding Agency: SECTION I. Introduction
    Water availability is one of the key factors that determine agricultural production
    worldwide [1]. Water is essential for transpiration, a process directly coupled
    with photosynthesis and, therefore, with carbohydrate production [2]. Growers
    need tools that allow a proper estimation of plant water status in order to adjust
    irrigation to plant water requirement, to maximize crop water efficiency, and
    to avoid unnecessary periods of water shortage [3]. On account of this, real-time
    monitoring of plant water content is an essential issue in the control of plant
    hydration level. There are different techniques to monitor plant water status
    that can be primarily categorized as destructive [4]–[6] and nondestructive [7]–[15]
    approaches. Although destructive techniques, such as leaf water potential and
    thermogravimetric measurements, have proved to be highly reliable, they cannot
    be applied to the same plant for a long-term monitoring. Among the nondestructive
    measurements, contactless measurements based on ultrasonic or electromagnetic
    waves (mostly at microwave and infrared frequencies) have been increasingly employed
    recently. Electromagnetic techniques are applied to several parts of the plant,
    such as individual leaves [7]–[9], trunk [10], [11], or canopy [12]–[15]. By means
    of those applied to whole canopies, which consist of radars or radiometers operating
    at microwave frequencies, it is not possible to determine the water content of
    an individual plant. Those applied to single leaves, in turn, might face additional
    positioning problems for in situ continuous monitoring, primarily due to the movement
    of the leaves. For this reason, more robust parts of the plant, such as trunk
    or branches, seem to be more appropriate to implant contactless devices for perennial
    species such as fruit trees and vines. Concerning the contactless measurements
    on trunk or branches, all references found in the bibliographic compilation use
    laboratory equipment, making field measurements very complicated. In this paper,
    the continuous monitoring of a grapevine’s water status by means of reflectivity
    measurements on the plant’s trunk using a portable radar at 23.1 GHz is presented.
    The reason to choose this operating frequency is that water is highly reflective
    in this microwave band, what means that radar transceivers in this frequency band
    can be excellent noncontact sensors of water content in biological tissues. A
    first approach was followed in the experiments performed in 2015 [10] and 2016
    [11] based on the continuous-wave monitoring of grapevines by means of general
    purpose laboratory equipment, in particular a vector network analyzer. Signal
    postprocessing allowed the spatial discernment and the behavior study of different
    plant tissues. In this paper, a step forward toward a real life application is
    given, since a completely portable low-power radar is proposed. In addition, it
    makes use of off-the-shelf components, which makes it a cost-effective device.
    The whole device has been designed by Anteral, Pamplona, Spain, and optimized
    for vegetative tissues of specific dimensions. This design flow includes the choice
    of the operating frequency and bandwidth, the hardware implementation with the
    corresponding choice of the suitable electronic components, and the proper signal
    processing using high-resolution algorithms if necessary. This optimization process
    has enabled the reduction of the bandwidth and, thus, the operating frequency,
    required to discern the water content that flows up from the root to the leaves
    through the xylem. This design advantage has resulted in a reduction of the total
    power consumption and cost of the final device, as well as in the use of fully-integrated
    off-the-shelf components that have allowed the implementation of a completely
    portable low-power cost-effective radar. This paper is organized as follows. Section
    II introduces the most important theoretical aspects related to the detection
    of water content in vegetative tissues by means of microwave radars. Afterward,
    the measurement methodology and setup are described in Section III. Section IV
    presents the most remarkable experimental results obtained during the measurement
    stage, and finally, Section V concludes this paper. SECTION II. Background A.
    Dielectric Properties of Water Found in Vegetation When a dielectric material
    is placed in the presence of an electric field, its atoms and molecules are polarized,
    creating electric dipole moments. The capability of a material to resist the applied
    electric field is given by its dielectric permittivity [16]. The water molecule
    possesses a permanent electric dipole moment and responds readily to the application
    of an electromagnetic field. On account of this, pure water in liquid phase has
    a high dielectric constant compared to other substances found in vegetation [17].
    Since the percentage of water in vegetative tissues is significantly high, taking
    into account both free and bound water, large reflections will be generated, which
    depend on the water content of different tissue layers. As a consequence, as it
    is demonstrated in this paper, radar backscattering can constitute a very effective
    technique to monitor plant water content in real time by means of a nondestructive
    method. Water in plants is distributed in the form of free and bound water [5].
    Free water is the amount of water directly available for evapotranspiration and
    the one that flows up through the xylem. Therefore, from an agricultural point
    of view, this free form is the most relevant, and the one intended to be detected
    in this paper. On account of this, the estimation of its dielectric properties
    is a crucial issue in order to reach enough resolution to be able to detect this
    tissue. In [5], a thorough model to describe the dielectric constant of free water
    in vegetation tissues, based on the Debye model [18], is presented. Considering
    that water salinity is negligible at 23.1 GHz [5] and calculating the model at
    the average working temperature (24.5 °C), the real and imaginary parts of the
    relative permittivity can be expressed as follows: ϵ ′ r = ϵ ′′ r = 4.9+ 73.46
    1+ ( f 19.4 ) 2 ≈−1.54f+70.85 73.46( f 19.4 ) 1+ ( f 19.4 ) 2 ≈−0.27f+42.37 (1)
    (2) View Source where f is the operating frequency in gigahertz. The bandwidth
    of the frequency-modulated continuous-wave (FMCW) radar used in this paper is
    small enough to apply a linear approximation with a tolerable error, as it is
    presented in the right side of (1) and (2). The absolute value of the relative
    error at 23.1 GHz when the linear approximation is applied to ϵ ′ r and ϵ ′′ r
    is 0.02% and 0.12%, respectively. At the lower and upper ends of the frequency
    range, the maximum error of ϵ ′ r and ϵ ′′ r increases up to 0.4% and 0.1% approximately.
    As it will be presented in Section II-C, the depth resolution of an FMCW radar
    depends on the group velocity at which the electromagnetic wave propagates in
    the medium. It is possible to derive the relation of group velocity to the propagation
    constant β using the following equation [19]: V g = ( 1 2π dβ df ) −1 ∣ ∣ ∣ f=
    f 0 (3) View Source where f 0 is the central operating frequency (23.1 GHz). Considering
    a lossy dielectric medium, the propagation constant can be calculated by means
    of the following equation [19]: β= 2πf c ϵ ′ r 2 ( 1+ ( ϵ ′′ r ϵ ′ r ) 2 − − −
    − − − − − − √ +1) − − − − − − − − − − − − − − − − − − −  ⎷   (4) View Source
    where c is the speed of light in vacuum. Differentiating β with respect to f according
    to (3), it is possible to obtain the following expression for V g as a function
    of f , ϵ ′ r , ϵ ′′ r , dϵ ′ r /df , dϵ ′′ r /df , and |ϵ|=( ϵ r ′ 2 + ϵ ′ ′ 2
    r ) 1/2 . For further details of this derivation, see Appendix V g = 2 2 – √ c|ϵ|
    ϵ ′ r +|ϵ| − − − − − − √ 2|ϵ | 2 +f( ϵ ′ r d ϵ ′ r df + ϵ ′′ r d ϵ ′′ r df )+|ϵ|(2
    ϵ ′ r +f d ϵ ′ r df ) . (5) View Source It is important to note that in order
    to simplify the final expression for V g and taking into account that ϵ ′ r and
    ϵ ′′ r possess similar values at the working frequency (23.1 GHz), ϵ ′ r and ϵ
    ′′ r can be replaced in (5) by one half of the sum of ϵ ′ r and ϵ ′′ r after applying
    the linear approximation given by (1) and (2). In this way, the final expression
    for V g is given by V g = c 56.61−0.9 − − − − − − − − − √ f 62.25−1.63f . (6)
    View Source The group velocity at the central working frequency (23.1 GHz) using
    (5) is 0.737⋅ 10 8 m/s. The absolute value of the relative error committed at
    23.1 GHz when the linear approximation is applied is 0.87%, while at the lower
    and upper ends of the frequency range, the error increases up to 3.4% approximately.
    B. Wood Structure of the Grapevine Trunk Trunks and branches, once formed, do
    not grow anymore in length, but they just increase their width through the cellular
    multiplication processes that occur in the vascular cambium. In this vegetative
    tissue, which is comprised of several thin cell layers, the two major kinds of
    wood tissues are generated: the phloem, growing outwards, and the xylem, inward
    [20]. The main role of the phloem is carbohydrate transportation, whereas water
    movement takes place majorly through the conductive vessels in the xylem [21].
    Within the xylem area, the sapwood and the heartwood can be usually distinguished.
    The sapwood is the truly functional part of the xylem, whereas in the latter,
    little or no water transport occurs due to vessel clogging with resins or tylose
    outgrowths as the trunk or branch gets older. In the case of grapevines, not being
    truly a tree plant, but a liana, the same structure pattern is observed [22],
    [23] with average-size conducting xylem vessels [24]. Fig. 1 shows the transversal
    section of a three-year-old stem of Vitis vinifera. The functional part of the
    grapevine xylem is mainly constrained to the growth of the last two–three years,
    due to the great tendency of the plant to generate tylosoids [25], and become
    totally nonfunctional in six–seven years [26]. Taking into account that the annual
    trunk growth is between 1.5 and 2.5 mm in radius for an average vineyard, and
    that the bark can be easily removed and the phloem as a whole can account for
    the outer 1 mm (unpublished data), the thickness of the functional xylem should
    be between 3 and 5 mm for an average annual growth of 2 mm and considering the
    last two–three years. Fig. 1. Transversal section of a three-year-old stem of
    Vitis vinifera [23]. Show All C. FMCW Radar The radar used in this paper has been
    developed by the company Anteral, and it is based on the SiGe 24-GHz transceiver
    BGT24MTR11 from Infineon Technologies, Munich, Germany, the fractional frequency
    synthesizer ADF4158 from Analog Devices, Norwood, MA, USA, a low-pass filter for
    the phase-locked loop (PLL), an analog-to-digital converter (ADC) in order to
    sample the I and Q signals previously amplified, a patch antenna array with an
    18-dBi-gain pencil beam pattern, an antialiasing low-pass filter, and a high-pass
    filter that prevents the transceiver from saturating when objects are placed very
    close to the antenna. Fig. 2 shows a block diagram of its architecture. Fig. 2.
    FMCW radar architecture. Show All This radar follows an FMCW architecture. In
    recent decades, the range of applications for this type of radars has increased
    significantly due to their advantages, such as high resolution and accuracy, lower
    peak power, and higher operating frequency. In the end, these benefits are reflected
    in the design of low-power, cost-effective, and miniaturized devices. Obviously,
    all these performance characteristics mainly depend on the signal bandwidth, working
    frequency, distance range, voltage-controlled oscillator (VCO) linearity, and
    VCO phase noise. Among these applications, it is possible to highlight level meters,
    accurate meters for small displacements and vibrations of particles of different
    machines and mechanisms, ice thickness measuring systems, water content sensors,
    concealed weapon and explosives detectors, aircraft landing aid systems, highway
    traffic monitoring devices, and medical applications [27]–[29]. Different from
    other techniques, such as the pulse radar, FMCW radar radiates continuous radio
    frequency (RF) power and changes its operating frequency during the measurement.
    This frequency modulation is usually generated by means of a frequency synthesizer
    that offers several modulation ramps. In the case of this paper, a sawtooth waveform
    has been used for this purpose. FMCW radar divides the transmitted power into
    two signals. One of them is used as local oscillator (LO) for the receiver mixer,
    and it is considered the reference signal. The other one, called RF signal, is
    radiated toward the target, in this case the grapevine, reflected, and sent back
    to the receiver to be mixed with the reference signal. Due to the delay between
    both signals at the mixer input, their frequencies at each instant are different
    and the time delay can be obtained from this frequency difference. Finally, the
    distance R to the reflecting object can be determined by the following equation
    [28]: R= cΔf T r 2BW (7) View Source where c is the speed of light in vacuum,
    Δf is the frequency difference measured between both signals, T r is the modulation
    wave period or ramp time, and BW is the bandwidth of the transmitted signal. If
    the medium is different from vacuum, the speed of light must be replaced by the
    group velocity V g calculated by means of (5). The depth resolution ΔR , defined
    as the minimum separation in depth between two targets of equal cross section
    that can be resolved as separate targets, can be expressed as follows [28]: ΔR=
    V g 2BW . (8) View Source In the particular case of this paper, the mixer used
    to implement the receiver is an IQ mixer whose outputs I and Q have a phase difference
    of 90° and can be calculated as I= Q= A Rf A Lo 2 cos[2π( f Rf − f Lo )t+ φ 0
    ] A Rf A Lo 2 sin[2π( f Rf − f Lo )t+ φ 0 ] (9) (10) View Source where A Rf and
    A Lo are the amplitudes in volts of the mixer input RF and LO signals, respectively,
    f Rf and f Lo are their frequencies, and φ 0 is the phase difference between the
    initial phases of the RF and LO signals. In order to obtain the mixer output signal
    in frequency domain, the most basic signal processing involves calculating the
    fast Fourier transform (FFT) of the signal I−jQ . Since the frequency difference
    between LO and RF signals is related to the distance R according to (7), it is
    possible to obtain the aforementioned transform as a function of R . Considering
    the 3.4-GHz bandwidth of the used radar, by means of (8), a depth resolution of
    10.83 mm is obtained. This result has been obtained using a value for the group
    velocity in the xylem of 0.737⋅ 10 8 m/s, which has been calculated in Section
    II-A. This resolution could be considered a limiting distance in order to discern
    different layers of the trunk. Hence, a very wide bandwidth might be needed to
    satisfy the range resolution requirements in this multilayered structure. Since
    this option would represent a technological limitation and make the system more
    expensive, a software solution has been adopted by means of the use of the multiple
    signal classification (MUSIC) algorithm [30]. This spectral super-resolution technique
    offers higher resolution compared to conventional FFT-based techniques by performing
    an eigenvalue decomposition of the covariance matrix of the time domain signal.
    Different from the FFT, the MUSIC algorithm is able to estimate unknown spectral
    components buried in the noise by using the orthogonality property between the
    signal and noise subspaces at the expense of computational cost. D. MUSIC Algorithm
    This section will briefly describe the fundamentals of the MUSIC algorithm. Considering
    a multilayered structure, the time domain signal sampled at the ADC output during
    one modulation period can be expressed as [31] s(n)= ∑ k=1 K α k e −j2π f k n
    T s +w(n),n=1,2,…,N (11) View Source where K is the total number of interfaces
    inside the structure, α k is the reflection coefficient at the kth interface,
    f k is the beat frequency corresponding to the wave reflected at the kth interface,
    T s is the sampling period, N is the total number of samples per modulation period,
    and w(n) is a Gaussian noise process with zero mean and variance σ 2 /2 . Using
    matrix notation, (11) can be written as s=Aα+w (12) View Source where s=[s(1),s(2),…,s(N)
    ] T is the signal vector, α= [ α 1 , α 2 ,…, α K ] T is the vector of reflection
    coefficients, w= [w(1),w(2),…,w(N)] T is the noise vector, and the matrix A is
    defined as A= ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ ⎢ e −j2π f 1 T s e −j2π f 1 2T s e −j2π f 2 T s e −j2π
    f 2 2 T s ⋮ e −j2π f 1 NT s e −j2π f 2 N T s ⋯ ⋱ ⋯ e −j2π f K T s e −j2π f K 2T
    s ⋮ e −j2π f K NT s ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⎥ . (13) View Source The covariance matrix of
    the signal vector s is calculated as Φ=E{s s H }=Aα α H A H + σ 2 I (14) View
    Source where I is the identity matrix and the superscript H denotes the conjugate
    transpose of a matrix or vector. Using the matrix Φ , it is possible to apply
    the MUSIC algorithm in order to estimate the beat frequencies from the received
    signal with high resolution. Therefore, in order to apply the MUSIC algorithm,
    the first step is to calculate the covariance matrix of s according to (14). Afterward,
    it is necessary to apply the eigenvalue decomposition to the covariance matrix.
    The following equation is obtained: ΦV=V ⎡ ⎣ ⎢ ⎢ λ 1 ⋮ 0 ⋯ ⋱ ⋯ 0 ⋮ λ N ⎤ ⎦ ⎥ ⎥
    (15) View Source where λ i is the i th eigenvalue of Φ such that λ 1 ≤ λ 2 ≤…
    ≤λ N and V is the matrix whose columns are the corresponding eigenvectors. The
    noise subspace is composed of the vectors corresponding to the first N−K columns
    of V , which are arranged in a new matrix V w , and the K remaining columns constitute
    the signal subspace. Now, it is possible to calculate the MUSIC frequency spectrum
    as S MUSIC ( f k )= 1 a s ( f k ) V w V H w a H s ( f k ) (16) View Source where
    a s ( f k )= [ e −j2π f K T s , e −j2π f K 2T s ,…, e −j2π f K NT s ] T is the
    frequency scanning vector that corresponds to the columns of A . In the literature,
    it has been heuristically demonstrated that MUSIC algorithm offers higher resolution
    than conventional FFT-based techniques. However, as this resolution improvement
    depends on multiple parameters such as the available bandwidth, the signal-to-noise
    ratio, the relative phase difference between different scatterers, and the number
    of data samples, it is not possible to accurately quantify its value [32]. Because
    of this, an experimental comparison between both techniques will be presented
    in Section III-B. SECTION III. Measurement Methodology A. Measurement Setup In
    order to assure accuracy and reliability in the control of external conditions,
    mainly temperature and lighting, the whole setup, which includes the grapevine
    and the measurement system, has been settled inside a growth chamber. It is important
    to note that plant water content depends considerably on these conditions and,
    therefore, they should be able to be changed at will in order to reproduce different
    outdoor situations in a short period of time. Different sensors and mechanical
    devices are in charge of monitoring lighting conditions, temperature, and humidity
    and can be precisely adjusted to achieve specific plant behaviors. Humidity measurement
    is based on the soil volumetric water content (VWC) monitoring by means of the
    capacitance soil moisture probe EC10 from Decagon Devices Inc., Pullman, WA, USA,
    inserted in the pot. This sensor estimates soil volumetric moisture by determining
    the apparent permittivity of the soil. Among different grapevines available for
    experimental purpose in the greenhouse, a very smooth-trunk plant without any
    nodes has been chosen in order to avoid the scattering of the reflected signal
    in multiple directions and penetrate a specific area of the plant that possesses
    xylem vessels and, consequently, high water content. At the beginning of the experiment,
    the plant was 14 years old and had been transplanted from the field into a pot
    three years before the experiment started, sufficient time for the plant to acclimate
    to its new habitat. The measurement system consists of an FMCW radar at 23.1 GHz
    with a 3.4-GHz bandwidth, an ADC to sample the I and Q signals at the mixer output,
    a data logger with temperature, humidity, and light sensors that records data
    periodically, and a PC that controls all the previous devices. Fig. 3 shows an
    illustrative diagram of the measurement setup. Fig. 3. Measurement setup for monitoring
    the grapevine water status by means of an FMCW radar. It is comprised by an ADC
    to sample the data at the mixer output, a data logger with several sensors to
    record environmental data periodically, and a PC to control all the previous devices.
    Show All Both the entire FMCW radar and the software application have been optimized
    in order to improve its sensitivity to water content of vegetative tissues with
    a structure similar to the grapevine morphology. The hardware part is based on
    the transceiver BGT24MTR11 from Infineon Technologies, a silicon germanium monolithic
    microwave integrated circuit (MMIC) for signal generation, and reception operating
    from 24 up to 26 GHz. The VCO and two switchable frequency prescalers are included
    in the MMIC and have been used to accurately tune the transmitter output frequency
    by means of the frequency synthesizer ADF4158 from Analog Devices. Among different
    modulation ramps offered by this PLL, a sawtooth waveform with a ramp time of
    5 ms has been selected. In order to cover the whole voltage range of the ADC and
    reduce the conversion error, and remove the dc offset of the mixer output signals
    I and Q , the combination of a high-pass filter and an amplifier has been chosen.
    Depending on the distance range to measure, the high-pass filter attenuates a
    specific frequency range according to its cutoff frequency, which corresponds
    to a specific distance range. In this experiment, the radar is placed 10 cm away
    from the trunk. Afterward, the amplifier gain is selected in order to reach the
    maximum voltage range of the ADC. Both the high-pass filter and the amplifier
    gain have been selected according to the distance at which the grapevine is positioned
    and its dimensions. Finally, the two signals I and Q have been sampled by means
    of analog sampling provided by the open-source prototyping platform Arduino Genuino
    Zero that includes a 12-bit ADC. In Fig. 4, a photograph of the FMCW radar-based
    measurement setup is presented. The total power consumption and size of the FMCW
    radar are 170 mA at 5 V and 85 mm ×60 mm ×11 mm, respectively. Fig. 4. Photograph
    of the FMCW radar used to monitor the grapevine. Show All Another important aspect
    related to radar signal processing is the calibration technique used to reduce
    the influence of drifts on the measurements. Two types of calibration have been
    experimented in this paper: the first one is based on open-air measurements without
    any target and the second one involves measuring the reflection of a piece of
    absorbent material before every grapevine measurement. Although both methods have
    been proved satisfactorily, the first type of calibration has been selected for
    this paper because of its simplicity and accuracy. B. Bandwidth Optimization The
    manufacturing process of the FMCW radar includes a design flow that optimizes
    the water detection process of vegetative tissues depending on the specific dimensions
    of the tissue under study. This design flow includes the choice of the operating
    frequency and bandwidth, the hardware implementation with the corresponding choice
    of the electronic components, and the proper signal processing using high-resolution
    algorithms if necessary. Since the objective of this paper is to detect the water
    content of vegetative tissues by means of a low-power and cost-effective device,
    the first step of the design flow is particularly important. On account of this,
    it is necessary to estimate the resolution improvement after applying the MUSIC
    algorithm in order to not oversize the final design. This resolution enhancement
    has been calculated from the experimental results obtained in this paper. As commented
    in Section II-C, considering a bandwidth of 3.4 GHz, a depth resolution of 10.83
    mm is obtained, which is a limiting distance in order to discern different layers
    of the trunk, especially the xylem that possesses a width of at least 3 mm (Section
    II-B). In order to satisfy the range resolution requirements in this multilayered
    structure, instead of raising the bandwidth, the MUSIC algorithm has been adopted
    trying to reduce the cost of the final system. The I and Q signals at the mixer
    output are sampled at 200 kHz every 2 min. This means that a MUSIC spectrum is
    calculated every time both signals are sampled. In order to show the improvement
    achieved by means of the MUSIC algorithm, a comparison between the FFT and MUSIC
    spectral techniques has been performed after applying the radar to the same grapevine
    under study whose experimental results will be presented in Section IV. Since
    the sampling frequency of the time domain signal is 200 kHz and the ramp time
    is 5 ms, the number of samples per ramp is 1000. In addition, from all waves reflected
    on the multilayered structure, a number of K=40 have been selected to compute
    the MUSIC algorithm. Fig. 5 shows the comparison of the FFT and MUSIC spectra
    for a specific sampling of the I and Q signals (belonging to the 36th six-hour
    cycle of the experimental results shown in Section IV) as a function of the distance
    evaluated from the radar position. Since the trunk is placed at 10 cm, the total
    distance range has been limited to 1 m. Observing Fig. 5, it is clear that MUSIC
    spectrum possesses sharper spectral components that the ones of the FFT spectrum,
    improving the resolution and allowing the discernment of different trunk layers.
    Another important conclusion drawn from this comparison is that MUSIC algorithm
    ignores most of the false components considered in the FFT spectrum, which are
    mainly due to the sidelobes of the main reflections. For the particular case of
    this paper, the spectral component that corresponds to the xylem tissue is the
    second one, positioned at approximately 18.8 cm from the radar position. All results
    presented in Section IV are based on variations of the maximum value of this spectral
    component. Among the rest of the components, it is worth highlighting the first
    component placed at approximately 15.7 cm, which corresponds to the first interface
    between the air and the trunk. This distance does not coincide with the real distance
    due to the nonlinearity of the VCO. Regarding the position of the second component,
    it is necessary to add that the dielectric constant of the vegetative tissue positioned
    between the air and the xylem is different from the one to the air. On account
    of this, it would be necessary to use the group velocity of the electromagnetic
    field in this zone in order to calculate the real distance. In order to obtain
    a reliable value for the permittivity in this zone as a function of the frequency
    and, thus, a reliable value for the group velocity, it would be necessary to section
    the trunk, measure the permittivity, and create an empirical model as a function
    of the frequency. Since this study would go beyond the objective of this paper,
    which is to detect the xylem tissue rather than calculating its positioning, and
    the phloem transports free water, it is possible to estimate the group velocity
    by using the value 0.737⋅ 10 8 m/s calculated in Section II-A. This results in
    an approximated real distance of 0.76 cm between both peaks. Fig. 5. Comparison
    between the FFT and MUSIC spectra used to calculate the resolution improvement
    at 18.8 cm by using the MUSIC algorithm. The first peak at 15.7 cm corresponds
    to the first interface between the air and the trunk, and the second peak at 18.8
    cm corresponds to the xylem tissue. Show All Comparing the full-width at half-maximum
    of the spectral component that corresponds to the xylem tissue (positioned at
    approximately 18.8 cm) for both spectra in Fig. 5, an approximately five times
    resolution improvement is achieved. Taking into account that the part of the xylem
    through which the water flows is at least about 3 mm thick, as it has been presented
    in Section II-B, a resolution of 15 mm (five times higher) would be enough to
    detect this part on the condition that the MUSIC algorithm is applied afterward.
    Using now (8), it is possible to estimate that a bandwidth of 2.45 GHz is required
    to fulfill this resolution requirement. Applying a safety margin of about 1 GHz,
    a bandwidth of 3.4 GHz and an output frequency of 23.1 GHz have been chosen. Another
    aspect in Fig. 5 that is worth discussing is the difference between the depth
    resolution value of 10.83 mm calculated in Section II-C and the 3-dB peakwidth
    (44 mm) of the second peak in Fig. 5 for the FFT plot. First of all, it is necessary
    to clarify that the FFT plot in Fig. 5 has been calculated using the speed of
    light in vacuum. In order to obtain the 3-dB peakwidth of the second peak, the
    group velocity in this zone should be used. Consider that the whole peak is due
    to the xylem tissue and, thus, using a group velocity of 0.737⋅ 10 8 m/s, an approximated
    real value of 10.81 mm is obtained. In addition to this, some other factors could
    affect this difference. As a matter of fact, depth resolution, given by (8), is
    a theoretical calculation that does not consider important real factors, as the
    VCO phase noise and the scattering on the plant’s trunk, which significantly affect
    the final result [27]. SECTION IV. Results With the objective of proving that
    this portable low-power contactless sensor is able to estimate the plant’s water
    status, three different experiments have been performed: irrigation cycles, day/night
    cycles, and comparison between irrigation cycles at different temperatures. A.
    Irrigation Cycles This experiment started on November 2, 2017. The grapevine was
    submitted to irrigation and drying periods during 18 days with day/night cycles
    of 6 h. Therefore, the duration of a day in the growth chamber was forced to be
    12 h in order to obtain more information in a shorter time period. Since the grapevine
    is a multilayered dielectric structure, different peaks will appear in every spectrum
    due to different reflections that take place in the interfaces between layers
    where a change of permittivity occurs. Among all these maximum values, the one
    referred to the xylem tissue, through which the water flows, has been identified
    by choosing the highest peak of every spectrum at distances shorter than the separation
    between the trunk and the radar plus the trunk diameter, which has been previously
    measured. This peak corresponds to the second one, as shown in Fig. 5. Fig. 6
    shows the amplitude of the signal reflected by the xylem tissue and the soil VWC
    as a function of the time. Considering 12-h days, the irrigation days were: the
    1st (the first six-hour cycle), the 10th (the 20th six-hour cycle), and the 22nd
    (the 44th six-hour cycle) day of the experiment. The dark areas in Fig. 6 correspond
    with the night periods. The plot for the soil VWC, a surrogate variable for plant
    water status, has been obtained from the data provided by the humidity probe and
    for the reflected signal by plotting the maximum values of the second peak of
    the signal’s spectrum at the mixer output calculated by using the MUSIC algorithm
    and a moving average over 100 samples. The sharp peaks observed for a few minutes
    at each irrigation event correspond to the irrigation itself when the water content
    around the soil moisture probe increases, taking some time to return to a state
    of equilibrium between the soil and the plant’s water content. Fig. 6. Irrigation
    cycles conducted during the experiment. The grapevine was submitted to three irrigation
    cycles during 18 days with day/night cycles of 6 h (12-h days). This figure shows
    the amplitude of the signal reflected by the xylem tissue and the soil VWC as
    a function of the time. Show All In order to better understand how Fig. 6 has
    been obtained, Fig. 7 shows the 3-D MUSIC spectrum for the second irrigation cycle
    depicted in Fig. 6 as a function of the distance between the radar and the trunk
    and the time in minutes. The highest spectral component, placed at approximately
    18.8 cm, corresponds to the xylem tissue. It can be seen that the maximum values
    of each MUSIC spectrum draw the second irrigation depicted by the reflected signal
    in Fig. 6. Finally, another aspect to be noted is that the MUSIC spectrum in Fig.
    5 is obtained by means of the intersection of the 3-D MUSIC spectrum in Fig. 7
    and the plane 17.26 six-hour cycles. Fig. 7. 3-D MUSIC spectrum for the second
    irrigation cycle in Fig. 6 as a function of the distance between the radar and
    the trunk, and the time in six-hour cycles. The maximum values at each instant
    of time draw the reflected signal for the second irrigation cycle in Fig. 6. Show
    All Three irrigation events can be distinguished in Fig. 6. The amount of water
    used in the first one was 4 L, whereas in the second and third ones, the amount
    of water was 8 L. This difference is due to the initial hydration level of the
    grapevine before the first irrigation, higher than the one before the other two
    irrigation events. This explains why the initial reflected signal at the first
    irrigation event increases up to a higher level than the one of the other two
    irrigations, despite the smaller amount of water used for watering. According
    to the results shown in Fig. 6, it is possible to assert that the contactless
    sensor presented in this paper is very sensitive to changes in plant water content.
    The reflected signal plot follows the trend of VWC closely, even in the instants
    when a change from day to night happens. If the three drying periods are compared,
    it is possible to realize that after the first irrigation the plant follows a
    trend slightly different from the one after the other two irrigation cycles. At
    the beginning of the first drying period, the reflected signal decreases more
    abruptly than in the other two ones. This might be due to the hydration level
    of the plant when the watering occurs (0.2). Since at the beginning of the second
    and the third drying period the hydration level is relatively lower (0.172), the
    plant experiences a period of acclimatization and needs to retain water before
    increasing the transpiration rate. Finally, another important aspect to consider
    is that the reflected signal increases at the time of watering a little sooner
    than the VWC (100 min). The reason why this occurs is that a moving average over
    100 samples has been applied in order to smooth the reflected signal plot. With
    the objective of quantifying the degree of similarity between the reflected signal
    and the VWC, both plots have been related by means of the second order curve fitting
    shown in Fig. 8. This fitting has been performed for the first and third drying
    periods. For the first one, the relationship between both magnitudes is given
    by the curve y=−45.2625 x 2 +18.649x−1.8261 with a coefficient of determination
    R 2 =0.9954 . For the third one, the fitting curve y=−43.0654 x 2 +18.0513x−1.8046
    is obtained with a coefficient of determination R 2 =0.9893 . Although both curves
    have the same trend, different factors, such as the water status of the plant
    before watering, the amount of water used for each irrigation, and the time of
    year, could cause a difference between the mean values of both plots. It is important
    to mention that the water status of the plant and the amount of water used for
    watering are different for the first and third irrigation cycles. Fig. 8. Second-order
    curve fitting between the VWC and the reflected signal for the first and third
    drying periods. For the first one, the relationship between both magnitudes is
    given by the curve y=−45.2625 x 2 +18.649x−1.8261 with a coefficient of determination
    R 2 =0.9954 . For the third one, the fitting curve y=−43.0654 x 2 +18.0513x−1.8046
    is obtained with a coefficient of determination R 2 =0.9893 . Show All B. Day/Night
    Cycles In order to explain the grapevine’s behavior during the day and night periods,
    a zoomed-in view of the graphs in Fig. 6 between the 40th and 44th six-hour cycles
    is presented in Fig. 9. Since the observation time period is smaller and a greater
    similarity between both plots is intended to show, a moving average of ten samples
    has been used. The first thing to be highlighted is that the trend followed by
    both plots is very similar. As in Section IV-A, the degree of similarity between
    both plots has been quantified by means of the linear regression shown in Fig.
    10. The relationship between both magnitudes is given by the straight line y=1.5982x−0.2357
    with a coefficient of determination R 2 =0.9834 . Fig. 9. Zoomed-in view of the
    graphs in Fig. 6 between the 40th and 44th six-hour cycles. Show All Fig. 10.
    Linear regression analysis between the VWC and the reflected signal. The relationship
    between both magnitudes is given by the straight line y=1.5982x−0.2357 with a
    coefficient of determination R 2 =0.9834 . Show All In addition to this, if a
    detailed inspection is performed at the plots in Fig. 9, it is easy to realize
    that the reflected signal value decreases during the day and keeps constant during
    the night. This phenomenon may be explained by the evapotranspiration process
    of the grapevine. At dawn, as the presence of light stimulates, photosynthesis
    stomata are opened and the plant loses water content by transpiration. Since water
    possesses a high relative permittivity, the reflected signal power decreases during
    the day. On account of this, new water is uptake through the roots in order to
    replace the lost quantity. This can be seen in Fig. 9 where both plots, the VWC
    and the reflected signal, decrease at the same time between the 40th and 41st
    and 42nd and 43rd six-hour cycles. On the other hand, during the night, due to
    the absence of light, stomata are closed and the plant keeps the amount of water
    that had at the end of the day. C. Comparison Between Drying Cycles at Different
    Temperatures In order to prove the influence of temperature on plant transpiration,
    a third experiment based on the comparison between drying periods at different
    temperatures has been performed. The results of this experiment are presented
    in Fig. 11, in which the reflected signal is plotted for three irrigation cycles
    at two different temperatures. During the first two drying periods, the grapevine
    was submitted at a temperature of 23 °C, whereas during the third period, the
    temperature was increased to 26 °C. For a fair comparison, it would be necessary
    to compare both drying cycles after the period of acclimatization by choosing
    the most linear zone of the plots. Taking this into account, only the last 6 six-hour
    cycles of each period have been considered. For the drying period at 23 °C, a
    negative slope of 5.62 mV/cycle is obtained, whereas at 26 °C, the reflected signal
    decreases with a slope of 6.28 mV/cycle. From this result, it is possible to assert
    that temperature has a noticeable influence over the evapotranspiration and it
    seems clear that the higher the temperature, the higher the evapotranspiration
    will be. Fig. 11. Drying cycles at different temperatures. During the first two
    periods, the temperature of the growth chamber was set at 23 °C, whereas during
    the third period, the temperature was increased to 26 °C. It is the same plot
    as the one of Fig. 6 for the reflected signal with a different color for the third
    irrigation cycle. Show All SECTION V. Conclusion Different from other approaches,
    which use general purpose laboratory equipment making field measurements very
    complicated, this paper presents a nondestructive low-power cost-effective portable
    water content monitoring system for vegetative tissues at 23.1 GHz. This contactless
    sensor, based on an FMCW radar, has been developed and optimized for monitoring
    vegetative tissues of specific dimensions. For the particular case of this paper,
    since a bandwidth of 3.4 GHz does not provide enough resolution, the MUSIC algorithm
    has been used. Once this sensor was implemented, three types of measurements were
    performed: irrigation cycles, day/night cycles, and comparison between irrigation
    cycles at different temperatures. From these measurements, it is possible to assert
    that the contactless sensor presented in this paper is very sensitive to changes
    in plant water content following the trend of VWC closely. In addition, this monitoring
    system is able to detect plant evapotranspiration differentiating between daytime
    and nighttime. Finally, it has been proven that temperature has a noticeable influence
    over the evapotranspiration, coming to the conclusion that the higher the temperature,
    the higher the evapotranspiration will be. In addition to this application for
    water content detection, the potential use of this technology in other research
    areas might be unique and competitive. The contactless sensor proposed in this
    paper could be used to control the drought stress in plants, as well as to detect
    crop diseases that cause dehydration of vegetative tissues inside the trunk. Another
    important application could be the monitoring of the sap flow velocity passing
    through the xylem, closely related to the transpiration rate and, thus, to the
    vapor pressure deficit. Appendix This appendix describes the derivation of (5).
    To start with, the propagation constant β can be expressed as follows: β= 2 –
    √ π c f 2 A − − − − √ (17) View Source where A is given by A= ϵ r ′ 2 + ϵ r ′′
    2 − − − − − − − − √ + ϵ ′ r . (18) View Source In order to better understand the
    total derivation process, the derivative of f 2 A with respect to f is calculated
    d( f 2 A) df =2f(|ϵ|+ ϵ ′ r )+ f 2 ⎛ ⎝ d ϵ ′ r df + ϵ ′ r d ϵ ′ r df + ϵ ′′ r
    d ϵ ′′ r df |ϵ| ⎞ ⎠ . (19) View Source Applying the definition of group velocity
    given by (3), the following equation is obtained: V g = 2 2 – √ c f 2 A − − −
    − √ d( f 2 A) df . (20) View Source Replacing in (20), the derivative of f 2 A
    with respect to f by the expression given by (19), choosing |ϵ| as common denominator
    in (19) and rearranging terms, it is possible to obtain the expression for V g
    given by (5). Authors Figures References Citations Keywords Metrics More Like
    This Snow Cover Monitoring Using Microwave Radars: Dielectric Characterization,
    Fabrication, and Testing of a Synthetic Snowpack IGARSS 2018 - 2018 IEEE International
    Geoscience and Remote Sensing Symposium Published: 2018 Dielectric ring resonators
    as chipless temperature sensors for wireless machine tool monitoring 2017 11th
    European Conference on Antennas and Propagation (EUCAP) Published: 2017 Show More
    IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Transactions on Geoscience and Remote Sensing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Water Content Continuous Monitoring of Grapevine Xylem Tissue Using a Portable
    Low-Power Cost-Effective FMCW Radar
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ramprabu G.
  - Sivakami S.
  - Kanmani M.
  citation_count: '4'
  description: Internet of Things (IoT) is the greatest emergent technique throughout
    the World. Large amounts of the people (70%) in India are depending on farming.
    This circumstance is a motivation, that encumbering the improvement of nation.
    In order to resolve this difficulty smart agriculture could be executed by appending
    innovative technical systems as an alternative of current conventional farming
    schemes. Therefore we proposed innovative IoT scheme with cloud computing and
    Li-Fi. Wi-Fi is immense for universal wireless exposure inside structures, while
    Li-Fi is wireless data exposure with elevated concentration in restricted area.
    Li-Fi offers enhanced bandwidth, effectiveness, accessibility and protection than
    Wi-Fi and has previously attained blisteringly elevated rate in the lab. Initially
    this research work embraces remote proscribed procedure to execute assignments
    like weeding, spraying, animal and bird scaring, moisture sensing, keeping vigilance,
    etc. Secondly it embraces smart warehouse supervision which embraces humidity
    protection, temperature preservation and burglary revealing in the stockroom.
    Finally, intellectual assessment creation depends on perfect actual instance meadow
    information for elegant irrigation with elegant manage. Scheming of all these
    procedures would be during any isolated smart mechanism or computer associated
    to Internet and the procedures will be executed by edging sensors, cameras, ZigBee
    or Li-Fi modules.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Engineering and Advanced Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Performance analysis of IoT based smart agriculture system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Syafarinda Y.
  - Akhadin F.
  - Fitri Z.E.
  - 'Yogiswara '
  - Widiawanl B.
  - Rosdiana E.
  citation_count: '21'
  description: Precision agricultural techniques are widely developed to monitor and
    control growth of plant in greenhouse. The use of greenhouses is suitable for
    the countries that have unpredictable weather e.g. Indonesia. The main monitors
    and controls in greenhouse are sensor networks and actuators. Some examples of
    the precision agriculture technique are monitoring of fertilizer needs and smart
    irrigation. This paper presents a develpment of precision agriculture based on
    Wireless Sensor Network (WSN) with Message Queuing Telemetry Transport (MQTT protocol.
    The WSN system involves Internet of Things (IoT) technology to connect devices,
    collect and distribute information. IoT integration with cloud computing is aimed
    to overcome limitations of the IoT devices in remote monitoring and control. WSN
    development uses MQTT protocols that have advantages that are lightweight, simple,
    can run on a small bandwidth and more advanced compared to Hypertext Transfer
    Protocol (HTTP ). In this paper the SHT3x and TSL2561 sensors are used to observe
    temperature, humidity and light intensity of the greenhouse. Test results of three
    sensors in data transmission speeds indicate that the MQTT protocol run with very
    small bandwidth. It can transmit data on the 4G network of AXIS provider with
    download capability of 0.02 kbps and upload 1.65 kbps. The average data transmission
    speed is approximately 1 second.
  doi: 10.1088/1755-1315/207/1/012059
  full_citation: '>'
  full_text: '>

    "We apologize for the inconvenience... To ensure we keep this website safe, please
    can you confirm you are a human by ticking the box below. If you are unable to
    complete the above request please contact us using the below link, providing a
    screenshot of your experience. https://ioppublishing.org/contacts/ Incident ID:
    9d0e80b9-8427-4405-a74f-6d08575a14c7"'
  inline_citation: '>'
  journal: 'IOP Conference Series: Earth and Environmental Science'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: The Precision Agriculture Based on Wireless Sensor Network with MQTT Protocol
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 49 papers. The topics discussed include: plug-and-play
    irrigation control at scale; walkway discovery from large scale crowdsensing;
    monitoring meteorological parameters with crowdsourced air traffic control data;
    on the ability of mobile sensor networks to diffuse information; charm: exploiting
    geographical diversity through coherent combining in low-power wide-area networks;
    codecast: supporting data driven in-network processing for low-power wireless
    sensor networks; interference-resilient ultra-low power aperiodic data collection;
    a stitch in time and frequency synchronization saves bandwidth; energy efficient
    mobile data collection from sensor networks with range-dependent data rates; applications
    on the signpost platform for city-scale sensing; and multiple door opening/closing
    detection system using infrasound sensor.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Proceedings - 17th ACM/IEEE International Conference on Information Processing
    in Sensor Networks, IPSN 2018
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Proceedings - 17th ACM/IEEE International Conference on Information Processing
    in Sensor Networks, IPSN 2018
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kodali R.K.
  - Yerroju S.
  - Sahu S.
  citation_count: '38'
  description: Agricultural practices need to be transformed in order to overcome
    future food scarcity due to overpopulation across the globe. By employing emerging,
    disruptive technologies like IoT in the agricultural sector, it is possible to
    monitor farm fields using low-cost and low-power consuming devices, to automate
    irrigation systems for efficient usage of water resources. Weather forecast using
    IoT can help to plan farm filed activities like sowing, harrowing, harvesting,
    etc. This reduces negative impacts like yield losses due to uncertain weather
    changes. LPWAN technologies serve IoT applications in a better possible way so
    that these applications can overcome bandwidth, power and coverage constraints
    which are main drawbacks in other wireless communication technologies. In agricultural
    fields, LoRaWAN protocol or LoRa in LPWAN space gives additional advantages like
    scalability, security and robustness in designing IoT applications. In this paper,
    a smart farm monitoring model is proposed. This model utilizes LoRa communication
    mechanism to send sensor data like temperature (°C), humidity (%) and soil moisture
    (%) from the transmitter node to receiver node. The receiving node which is Wi-Fi
    enabled uses MQTT services to monitor the data in IBM Watson IoT platform and
    to store the same data in IBM cloud DB service.
  doi: 10.1109/ICGCIoT.2018.8753086
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2018 Second International Con... Smart
    Farm Monitoring Using LoRa Enabled IoT Publisher: IEEE Cite This PDF Ravi Kishore
    Kodali; Subbachari Yerroju; Shubhi Sahu All Authors 29 Cites in Papers 1690 Full
    Text Views Abstract Document Sections I. Introduction II. Proposed Smart Farming
    model using LoRa enabled IoT devices III. Conclusion Authors Figures References
    Citations Keywords Metrics Abstract: Agricultural practices need to be transformed
    in order to overcome future food scarcity due to overpopulation across the globe.
    By employing emerging, disruptive technologies like IoT in the agricultural sector,
    it is possible to monitor farm fields using low-cost and low-power consuming devices,
    to automate irrigation systems for efficient usage of water resources. Weather
    forecast using IoT can help to plan farm filed activities like sowing, harrowing,
    harvesting, etc. This reduces negative impacts like yield losses due to uncertain
    weather changes. LPWAN technologies serve IoT applications in a better possible
    way so that these applications can overcome bandwidth, power and coverage constraints
    which are main drawbacks in other wireless communication technologies. In agricultural
    fields, LoRaWAN protocol or LoRa in LPWAN space gives additional advantages like
    scalability, security and robustness in designing IoT applications. In this paper,
    a smart farm monitoring model is proposed. This model utilizes LoRa communication
    mechanism to send sensor data like temperature (°C), humidity (%) and soil moisture
    (%) from the transmitter node to receiver node. The receiving node which is Wi-Fi
    enabled uses MQTT services to monitor the data in IBM Watson IoT platform and
    to store the same data in IBM cloud DB service. Published in: 2018 Second International
    Conference on Green Computing and Internet of Things (ICGCIoT) Date of Conference:
    16-18 August 2018 Date Added to IEEE Xplore: 08 July 2019 ISBN Information: DOI:
    10.1109/ICGCIoT.2018.8753086 Publisher: IEEE Conference Location: Bangalore, India
    SECTION I. Introduction A. Internet of Things in Agriculture and Recent works
    According to UN Food and Agriculture Organization, 70% more food is needed to
    feed the additional 2.3 billion people across the globe by 2050. To make this
    happen it is required to adopt the emerging technologies into the agricultural
    sector. IoT can be implemented in some use cases in the agricultural sector like:
    Real-time monitoring of farm Weather prediction modeling Custom fertilizer profiles
    based on soil chemistry Water conservation using IoT To make better decisions
    in the nowadays farming sector, Using IoT, the farmers can deploy different types
    of sensors like environment and soil sensors and they can make use of insights
    from sensed data. IoT driven sensor data like CO2, rainfall, temperature, humidity,
    soil moisture and plant health can improve the operational efficiency and helps
    in making strategic plans for higher productivity and profitable crop yield. These
    real-time monitoring applications to check nutrients present in the soil can minimize
    the wrong pattern fertilization practice in agriculture. The non-economic existing
    chemical lab testing practices can be replaced by IoT designs. With small affordable
    sensing devices, it is possible to monitor pH, temperature and humidity of the
    soil in more effective and convenient manner. The data from different sensors
    like temperature, humidity and pH sensors are measured using wi-fi enabled micro-controllers
    and stored in the cloud. The data is processed and about the soil quality to the
    user customized feedback is tailored. As per the lack of knowledge about the weather
    forecast information, farming sector is facing many problems due to climate changes.
    Farmers can make strategic decisions to prevent the damages due to uncertain weather
    changes using the Internet of Things weather predictive models. And farmers can
    easily predict the rains, control pesticide waste, they can build advanced irrigation
    systems. For a suitable planning of a farm or to perform form operations, the
    weather forecast is necessary. Right from withheld or undertake sowing, to irrigate
    a crop or not, to know when to apply fertilizer, to start complete harvesting
    or withhold it, in storage and transportation of food grains, in taking right
    measures to fight frost, in managing other activities like plugging, harrowing
    the soil, etc. And to protect livestock weather forecast helps [1]. Designing
    smart irrigation meters and to implement smart water conservative methods in agriculture
    using IoT are important to preserve the available water resources for the future
    use. In [2], [3] the authors proposed an IoT based agricultural devices which
    are portable hand-held devices to find the state of environment and soil. These
    devices consist temperature, humidity sensors, pH sensor, EC sensor and a colour
    sensor for both soil and environment and also GPS, ZigBee modules for radio communication.
    The sensed data is sent to cloud service at regular intervals for analysis purpose.
    In [4], [5], [6], it is given that weather forecast can be done using data from
    low-powered IoT devices and sensors. Formation of time series data of each variable
    like temperature and humidity used for weather forecast models with some predictive
    analytics. The sensed data is being analyzed and processed using structural and
    time series based algorithms like Multiple linear regression, Linear regression,
    Autoregressive integrated moving average and Support vector regression in a central
    server by combining real weather attributes. Based on the performance evaluation
    of mentioned algorithms using root mean square error parameter the author suggested
    Autoregressive integrated moving average is the best prediction model. Even though
    water is a scarce resource, overall 50% of water is wasted in agriculture due
    to the improper scheduling of irrigation [7]. In this context, the real-time monitoring
    of water usage in the fields can prevent misusage of water [8]. In [9], The author
    proposed a system which is designed using IoT consists of soil Hygrometer and
    GSM module. Based on the requirement of irrigation indicated by the sensor, using
    SMS service from the mobile, the motor can be turned ON or OFF. This gives way
    out to reduce the water wastage. B. Drawbacks in different wireless communication
    technologies for IoT applications Cellular networks are widely popular for the
    high-speed data coverage they offer. High-speed data is not a major requirement
    for IoT applications. Devices using cellular networks often have very poor battery
    life and there are several gaps in the network coverage. ZigBee type mesh networks
    are being widely used in home automation. This is because of the performance it
    offers at low to medium distances. But, when it comes to long distances (few Kms),
    these fail terribly. Bluetooth/BLE offers moderately good data rates but is greatly
    limited by range. The range offered is simply not acceptable for long range IoT
    applications. The IEEE802.11 WLAN standard is undoubtedly one of the most widely
    used standards among all the wireless standards. This is solely because of the
    high data rate and bandwidth it offers. Sadly, its range is very limited and it
    is very heavy on the battery. Devices using Wi-Fi do not last long and must often
    be close to the Wi-Fi access point in order to communicate properly. Due to the
    high operating frequencies (2.4 and 5 GHz), the waves do not penetrate through
    obstacles easily. In order to overcome these drawbacks, LoRaWAN technology is
    emerging very rapidly and it is going to be adopted by IoT driven applications
    in many areas. C. LPWAN and LoRa To build a smarter world in a few years global
    and national regional networks will connect trillions of wireless devices which
    are connected to send and receive a vast amount of data. An open nonprofit collaborative
    association, LoRa alliance brings Low power wide area networks to enable the Internet
    of Things to build carrier-grade communication networks and sensing applications.
    LoRa wide area network protocol also knows as LoRa can guarantee interoperability
    among LP-WAN networks with added advantages like easy installation, more economic,
    flexibility, scalability, bi-directional, security, encryption, etc. LPWAN (Low-power
    wide area network) technologies support a large portion of billions of devices
    to forecast Internet of Things. This LPWAN technology offers efficient battery
    life-time for projected volumes of sensor-based IoT driven applications where
    the only small amount of sensed data needs to be sent over long distances. To
    optimize range, battery-lifetime, cost for such IoT applications LoRaWAN is designed
    in the LPWAN space [10]. This long range, low data rate based communication link
    establishment technology is designed by SEMtech. Fig. 1. The key features of LoRa
    Show All In MAC layer of the LoRa protocol stack, The end devices are classified
    into three different classes based on uplink time slots and power consumption.
    Class A devices which are bidirectional and consumes very less power among three
    classes. class A devices uplink data to gateway along with two simultaneous short
    windows for downlink. Class B devices are bi-directional and these devices have
    scheduled receiver slots where a sync-beacon is periodically sent by the gateway
    to the end device to ensure that the end device is listening. Class C devices
    have maximum continuous receiver slots. These Class C devices consume more power.
    The comparison of different features of LoRa technology with other wireless communication
    technologies are given in TABLE I. The comparison of different LPWAN technologies
    along with LoRa are given in TABLE II. SECTION II. Proposed Smart Farming model
    using LoRa enabled IoT devices The block diagram of the proposed scheme is shown
    in Fig. 2 where two smart devices communicate each other using LoRa scheme and
    at the receiver end the data is stored in a cloud platform using MQTT service.
    Fig. 2. The block diagram of proposed model Show All A. Hardware Heltec ESP32
    LoRa module: The LoRa based Heltec development board makes use of an ESP32 based
    SOC to handle the computation and processing work and makes use of the Semtech
    SX1276 LoRa transceiver module to send and receive messages over the air interface.
    Fig. 3. Heltec ESP32 LoRa transmitter and receiver nodes [14] Show All The SX1276
    makes use of LoRa spread spectrum technology which enables it to achieve very
    long range when compared to existing systems based on FSK modulation. Even when
    it is operating at the highest data rate, its sensitivity is at least 8dB greater
    than FSK. LoRa also has better selectivity and blocking performance which improves
    the communication reliability. The spread spectrum modulation bandwidth (BW),
    error correction rate (CR) and spreading factor (SF) are to be selected by the
    user. Each spread factor is orthogonal to one another which lets the use of multiple
    signals on the same frequency channel without much interference. The standard
    FSK based systems can also co-exist with the LoRa signals. The module can also
    be used to generate FSK, OOK and HMSP modulated signals in addition to LoRa signals.
    The list of some important features of SX1276 is tabulated in TABLE III. TABLE
    I SX1276 Features B. Experimental Setup and Results The experimental setup for
    the proposed farm monitoring model with DHT-11 sensor, soil moisture sensor and
    Heltec ESP32 lora modules is shown in Fig. 4. The DHT-11 sensor is used to find
    the surrounding temperature and humidity values. The soil moisture sensor gives
    water level present in the soil. The transmitter nodes consist of one Heltec LoRa
    ESP32 module which is connected with the sensors, programmed as per the requirement
    and placed in the farm that senses temperature, humidity and soil moisture in
    the field environment. The transmitted senors information is observed in OLED
    display at the transmitter node. Using LoRa modulation scheme, the transmitter
    nodes send data to the receiver node. TABLE II ESP32 FEATURES Fig. 4. Experimental
    setup for the smart farm monitoring proposed model Show All SECTION III. Conclusion
    LPWAN supports a large number of IoT driven applications in various fields. Particularly
    LoRaWAN satisfies all the requirements for designing IoT applications. It became
    appropriate technology to adopt in agricultural sector since LoRa can increase
    the scalability in order to deploy IoT devices in farm fields. These LoRa based
    end devices which are cost efficient, energy efficient and also overcome bandwidth
    constraints as well. In this paper, importance of IoT in agricultural sector is
    explained. And drawbacks of different wireless communication technologies like
    Wi-Fi, Bluetooth/BLE, ZigBee, LTE, etc. in designing IoT driven applications are
    mentioned. Adopting LoRaWAN technology in IoT applications is most suitable method
    to overcome all those drawbacks. In this work, a smart farm monitoring model is
    proposed based on LoRa technology. The end nodes which are sensor enabled can
    be deployed on a large scale in the farm field. These nodes transmit data to the
    receiver node. The received data like temperature, humidity and soil moisture
    are monitored in IBM Watson IoT platform and stored in IBM cloud DB. Authors Figures
    References Citations Keywords Metrics More Like This IoT agriculture system based
    on LoRaWAN 2018 14th IEEE International Workshop on Factory Communication Systems
    (WFCS) Published: 2018 Smart Agriculture Monitoring and Management System using
    IoT-enabled Devices based on LoRaWAN 2022 37th International Technical Conference
    on Circuits/Systems, Computers and Communications (ITC-CSCC) Published: 2022 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the 2nd International Conference on Green Computing and
    Internet of Things, ICGCIoT 2018
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart Farm Monitoring Using LoRa Enabled IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 55 papers. The topics discussed include: feasibility-check-based
    phase-filter design; GSM based solar automatic irrigation system using moisture,
    temperature and humidity sensors; lumped element equivalent circuit for wireless
    power transfer; comparison of l1-norm surrogate functions used for the recovery
    of MR images; an evaluation of Ethernet based signal exchange among several machines
    in automation industry; a novel singly fed wideband circularly polarized cylindrical
    multilayer DRA using conformal hook-shaped metal strip; circularly polarized bandwidth
    enhancement using hollow cylindrical DRA; the performance of Wi-Fi protected access
    2 on 2.4GHz WLAN network; the performance of different ieee802.11 security protocol
    standard on 2.4GHz and 5GHz WLAN networks; attendance management system (AMS):
    comparison of two different approaches; anterior cruciate ligament (ACL) injury
    classification system using support vector machine (SVM); analysis of the e-commerce
    use behavior on music products; initial study of applying random midpoint displacement
    for rain radar''s rain rate interpolation; an experimental method to determine
    maximum resolving power in antenna array for transient radio telescope system;
    consideration for nuclear energy in Malaysia; and development of plastic optical
    fiber as color sensor.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: 2017 International Conference on Engineering Technology and Technopreneurship,
    ICE2T 2017
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 2017 International Conference on Engineering Technology and Technopreneurship,
    ICE2T 2017
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 26 papers. The topics discussed include: REAPer
    - adaptive micro-source energy-harvester for wireless sensor nodes; automating
    human motor performance ability testing: the case of backward step detection;
    WHISPER: wirelessly synchronized distributed audio sensor platform; an optical-camera
    complement to a PIR sensor array for intrusion detection and classfication in
    an outdoor environment; mobile data collection from sensor networks with range-dependent
    data rates; vehicular speed learning in the future smart-cities'' paradigm; selection
    of energy efficient routing protocol for irrigation enabled by wireless sensor
    network; QoS-oriented adaptation management in networked multi-vehicle cruise
    control systems; users on the move: on relationships between QoE ratings, data
    volumes and intentions to churn; defending against intrusion of malicious UAVs
    with networked UAV defense swarms; security and privacy in the internet of medical
    things: taxonomy and risk assessment; AZSPM: autonomic zero-knowledge security
    provisioning model for medical control systems in fog computing environments;
    sphere in a box: practical and scalable EurValve activity monitoring smart home
    kit; load aware routing in wireless mesh networks: which is the right metric?;
    a time sharing based approach to accommodate similar gain users in NOMA for 5G
    networks; algorithm for trust based policy hidden communication in the Internet
    of Things; and I-DTMC: an integrated-discrete time Markov chain model for performance
    analysis in future WLANs.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Proceedings - 2017 IEEE 42nd Conference on Local Computer Networks Workshops,
    LCN Workshops 2017
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Proceedings - 2017 IEEE 42nd Conference on Local Computer Networks Workshops,
    LCN Workshops 2017
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mekala M.
  - Viswanathan P.
  citation_count: '70'
  description: Internet of Things (IoT) is one of the fastest developing technologies
    throughout the India. But, most of the population (70%) in India depending on
    agriculture. This situation is one of the reason, that hindering the development
    of country. in order to solve this problem only one solution that, smart agriculture
    by adding new technological methods instead of present traditional agriculture
    methods. Hence we proposed new IoT technology with cloud computing and Li-Fi.
    Wi-Fi is great for general wireless coverage within buildings, whereas Li-Fi[10]
    is wireless data coverage with high density in confined area. Li-Fi provides better
    bandwidth, efficiency, availability and security than Wi-Fi and has already achieved
    blisteringly high speed in the lab. First this project includes remote controlled
    process to perform tasks like spraying, weeding, bird and animal scaring, keeping
    vigilance, moisture sensing, etc. Secondly it includes smart warehouse management
    which includes temperature maintenance, humidity maintenance and theft detection
    in the warehouse. Thirdly, intelligent decision making based on accurate real
    time field data for smart irrigation with smart control. Controlling of all these
    operations will be through any remote smart device or computer connected to Internet
    and the operations will be performed by interfacing cameras, sensors, Li-Fi or
    ZigBee modules.
  doi: 10.1109/I-SMAC.2017.8058280
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2017 International Conference... A novel
    technology for smart agriculture based on IoT with cloud computing Publisher:
    IEEE Cite This PDF Mahammad Shareef Mekala; P. Viswanathan All Authors 54 Cites
    in Papers 2191 Full Text Views Abstract Document Sections I. Introduction(Heading
    1) II. Aricultural Monitoring System Based on Sensors III. Sensor-Based Agriculture
    Monitoring Systems in Developing Countries IV. Proposed Sensor-Based Agricultural
    Monitoring System V. Practical Results Show Full Outline Authors Figures References
    Citations Keywords Metrics Abstract: Internet of Things (IoT) is one of the fastest
    developing technologies throughout the India. But, most of the population (70%)
    in India depending on agriculture. This situation is one of the reason, that hindering
    the development of country. in order to solve this problem only one solution that,
    smart agriculture by adding new technological methods instead of present traditional
    agriculture methods. Hence we proposed new IoT technology with cloud computing
    and Li-Fi. Wi-Fi is great for general wireless coverage within buildings, whereas
    Li-Fi[10] is wireless data coverage with high density in confined area. Li-Fi
    provides better bandwidth, efficiency, availability and security than Wi-Fi and
    has already achieved blisteringly high speed in the lab. First this project includes
    remote controlled process to perform tasks like spraying, weeding, bird and animal
    scaring, keeping vigilance, moisture sensing, etc. Secondly it includes smart
    warehouse management which includes temperature maintenance, humidity maintenance
    and theft detection in the warehouse. Thirdly, intelligent decision making based
    on accurate real time field data for smart irrigation with smart control. Controlling
    of all these operations will be through any remote smart device or computer connected
    to Internet and the operations will be performed by interfacing cameras, sensors,
    Li-Fi or ZigBee modules. Published in: 2017 International Conference on I-SMAC
    (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC) Date of Conference: 10-11
    February 2017 Date Added to IEEE Xplore: 05 October 2017 ISBN Information: DOI:
    10.1109/I-SMAC.2017.8058280 Publisher: IEEE Conference Location: Palladam, India
    SECTION I. Introduction(Heading 1) All most all countries population is depending
    on agriculture by using water and land resources optimally. Still most of the
    countries depending on labor work and they do not use proper pest/disease control,
    crop management and quality management systems. Hence in addition to that, still
    in traditional agriculture they don''t use proper optimal uniform water distribution
    in field''s. Hence, a novel IoT [1] technology based agricultural monitoring system
    is greatly required for IT people, farmers in developing countries. It is predicted
    that 87% world''s using fresh water for irrigation and 33% of world''s population
    produced food uses irrigation at every year. Hence, per capita fresh water is
    declining. On the other hand, world global warming increases. Fig. 1. Sensor-based
    machine communication networks. Show All The above diagram shows Hundreds of energy,
    low cost and computational power wireless sensor nodes are mostly used as agricultural
    monitoring system. IoT[2] devices are included in M2M area networks since cameras;
    sensors can be deployed easily, monitored remotely and controlled automatically.
    26% of world population depends on irrigation for present food production. Soil
    nutrients and food production dependent on each other. Because, soil nutrients
    of agriculture fields are decreased than food production also decreased of the
    developing countries. Hence, a new technology based agricultural monitoring system
    is greatly required. Machine to machine (M2M) communication [2], [12] is a new
    g technological framework in which daily human life use machines such as micro-oven,
    refrigerator, laptop, cell phone, smart phone, tablet, electric meter can communicate
    with each other when they are included with internet network and send data to
    the cloud central server or cloud through agriculture area networks (e.g., Li-Fi,
    sensor, Bluetooth, RFID) and core networks (e.g., WiMAX, 3GPP, IP, Li-Fi, WLAN).
    Agriculture monitoring systems mainly focus on monitoring and controlling the
    growth of crops, irrigation systems, monitoring and control of animals disturbance.
    Fig. 2. Low level agriculture monitoring system Show All The IoT refers to the
    coverage area with networked interconnection of everyday tools, devices, objects,
    or computers. These things may be vary with respect to place and time and they
    may be large or small. The idea is to tag every object using a related sensor
    or RFID or electronic technology such as GPS. Cloud computing refers an Internet
    cloud of resources can be either a distributed or a centralized computing system.
    The cloud applies parallel or distributed computing, or both. Clouds can be built
    with virtualized or physical resources over large data centers that are distributed
    or centralized. Li-Fi stands for Light-Fidelity. Li-Fi technology, proposed by
    the German physicist-Harald Haas, provides transmission of data through light
    illumination by sending data through an light bulb LED that varies in fast intensity
    when compared with human eye can follow. The proposed system focuses on developing
    a Li-Fi based system and analyzes its performance with respect to existing technology.
    Wi-Fi is better useful for general wireless coverage within buildings, whereas
    Li-Fi is high density wireless data coverage in confined area interference issues.
    Li-Fi provides greater bandwidth, availability, efficiency and security than Wi-Fi
    and it has already proved with high speed in the lab. Basically low-cost is the
    nature of LEDs and with lighting units they has many opportunities to prove this
    medium, from general public internet access through street light lamps to auto-light
    fitted cars that communicate through their headlights. SECTION II. Aricultural
    Monitoring System Based on Sensors A. Precision Agricultural Precision agriculture
    (PA)[l] is playing a vital role mainly in developing countries. In PA, there are
    many types of the agriculture related parameters such as humidity, temperature,
    rainfall, soil moisture among different fields are considered. Based on these
    parameters we can analyzed how far these required resource efficiently utilized
    like utilizing water, fertilizer, pesticides, seeds etc in fields. Hence, it is
    used to increase the profit, maintain quality products and reduce waste. Though,
    GPS and GIS are used for PA, but they are costly. Wireless communication cameras,
    sensor networks provide a low cost technological solution for PA, for instance,
    in field crop management [12] where wireless cameras, sensor networks monitor
    crop conditions/growth for a longer period of time without fail and they also
    made a decision remotely and generate or evaluate the potential of new crops.
    Moreover, using the data collected from wireless cameras and sensors, it is possible
    to create a new related database or knowledge base of in-fields crops. Graphical
    user interfaces are integrated and adopted with the wireless camera and sensor
    network in these monitoring systems. The PA can evaluate agriculture area fields
    differently based on the ground level of water, saline, area field structure etc.
    The prototype maps of the fields help to manage the fields and design the relevant
    topology of wireless camera and sensor network (e.g., grid architecture). In this
    connection, different agriculture area field management zones can be defined based
    on the humidity, temperature, sand quantity and water availability etc.”. B. Field
    Assessment Agriculture farmers are follows traditional methods that require the
    state of the crop field to decide about the irrigation, applying required fertilizers
    and pesticides. Farmers mostly rely on their mental models (traditional methods)
    for this purpose; however, mental models might not always be perfect optimal.
    Hence we propose wireless camera and sensor network based area field management
    and monitoring system for this purpose, in which uses solar powered moisture nodes
    and low resolution camera for long of use. Hence, the collected information from
    cameras and sensors are in two different sources are available for assessment,
    comparison and analysis. Self-powered, self contained low resolution, long performance
    sensor, camera nodes send the height, coverage and greenness information of the
    agriculture area field grass through wireless sensor and camera networks to the
    base server or BS. Then the BS allocates time for these wireless camera nodes
    to send images. The camera, sensor nodes can also be used to observe cattle position
    and behavior C. Cattle Monitoring and Behavior Control Observing and monitoring
    the behavior of animals or cattle that is, how they interact to destroy in area
    field each other and movements towards to the field are very important in order
    to utilize properly the limited field resources (e.g. grass). For this purpose,
    Wark et al. propose wireless sensor network based cattle monitoring system [11]
    where Fleck-2 cattle nodes (sensors) are contained in a plastic box before putting
    into the collars(protection component) that the animals wear into neck. GPS, radio
    antenna and two batteries are also placed in the collar. The design of the collars
    (protection component) is very important so that animals cannot damage it easily.
    Authors propose placing the radio frequency antenna horizontal on top of the collar.
    Zebranet [10] is a related project to monitor zebras using GPS positioning data.
    Controlling animals from craft is a challenge in the agricultural monitoring systems
    because their mental and positional state (e.g., stress, desire, mood) are very
    difficult to calculate or measure. Moreover, the animal''s behavior depends on
    many factors such as season, age, temperature, food availability etc. Sensor-based
    M2M networks can play a vital role in behavior measure/control. In [9], Wark et
    al. focus on modeling cattle behavior based on their inertial and position data.
    Hence, adjusting the inertial or position of sensors is very important to get
    needful information. A sensor calibration/monitoring model is developed based
    on the distribution of inertial or position data. For example, during day time,
    the activities of animals are a lot more than that of during night time. Hence,
    their ruminating, sleeping, grazing, (behavioral) data will have different time
    in different shape (e.g., day and night). Calibration model is based on comparing
    these dataset to different parameters. From inertial sensors can collecting data
    about the speed, movement energy and turning rate of cattle. These collected information
    help identifying cattle behavior. Wark et al. [11] also propose to integrate radio
    frequency identification tag (RFID) with wireless camera, sensor networks to record/track
    the amount of food each animal takes and send this information through the wireless
    network communication. SECTION III. Sensor-Based Agriculture Monitoring Systems
    in Developing Countries This sensor based agriculture monitoring system should
    include a decision support system to maximize production, optimize resource utilization
    and can decrease environmental hazards. Moreover, this system should be autonomous,
    affordable (by poor farmers), accurate and remotely controllable. The lifetime
    of this sensor based agriculture monitoring system should be at least one crop
    season (4 −6 months) in developing countries. Though sensor-based agriculture
    monitoring systems had a high potential in traditional agriculture in developing
    countries, only a few project have been implemented in developing regions, which
    are still in evaluation, iteration or exploratory phase. A. Design Challenges
    in Developing Countries As sensor based agriculture monitoring networks are application
    specific, designing a sensor network for each application leads to the problem
    with limited resources and cost. Designing sensor-based agriculture monitoring
    communication[12] framework to use in multiple applications can optimize these
    problems. On the other hand, sensor-based agriculture systems used in the precision
    agriculture of developed countries are not suitable in developing countries because
    almost throughout world 87% farmers are depending on labor. It is different in
    developing countries to collect required data as eeconomic conditions and information
    of field to the farmers. Thus, the existing sensor-based M2M agriculture monitoring
    systems[12] are required to be modified in this context. Cost-is the most important
    factor in the case of developing countries. Cost can be reduced by using sensor-based
    agriculture monitoring communication networks in which it is not currently being
    used in agricultural monitoring systems. Moreover, this single framework of sensor-based
    agriculture monitoring network can be used in multiple applications and also in
    precision agriculture in which require densely deployed camera, sensor nodes.
    Reliability-in all most developing countries, sensor and camera nodes are climates
    extreme and scarce. Hence, important point those sensor nodes must be covered
    to protect from outdoor conditions including heat and moisture. One important
    challenge is availability and reliability of telecommunications and wireless infrastructure
    in rural areas of developing countries are very difficult. Resource-throughout
    world most of poor farmers are relying on rain fed farming for production of food.
    Moreover, traditional irrigation methodology is not efficient in semiarid areas
    in developing countries. Hence, a sensor-based agriculture monitoring irrigation
    systems with a decision support system is required to maximize food production
    of irrigation while minimize the intake of good water. A limited number of node
    deployments prevent a novel sensor agriculture monitoring network management scheme
    that uses alternate node scheduling. It also limits the usage of a power aware
    multi-hop routing that requires more camera and sensor nodes. B. Technical Frameworks
    of Sensor-Based Monitoring Systems Topology-one of the important primary requirement
    of this sensor based agriculture monitoring network fields in developing countries
    are homogeneous in terms of soil type, crop and structure type, one preferable
    method is zone-based topology can be used, which requires less number of sensor-based
    MTC devices. However, the zone-based topology suffers from network coverage problem
    and reliability (i.e., how the system works when a node in a zone fails). In [5],
    Kabashi and Elmirghani propose a dynamic zone-based topology for the VESEL project.
    Initially, nodes are distributed to the zones based on the optimized condition
    that each node remains within the range of the nodes of at least two zones. Hence,
    this overcomes the problem of node isolation. Then, each node identifies their
    neighboring nodes by broadcasting node/zone ID that is assigned by the gateway/coordinator
    nodes. Each zone node elects nodes in the neighboring zones to which they can
    connect with a minimum transceiver power. This generates several connected graphs,
    and the graph that requires minimum transmission power is selected for routing.
    Task Scheduling-This is another important basic requirement for better performance.
    Task scheduling considers or includes the parameters for sensing data, environmental
    factors (that affect sensing and network operations) and energy of the resources.
    This mechanism effectively schedules three system parameters: frequency of transmission,
    sampling rate and bit resolution. Initially, all values of these parameters are
    optimized for assigned or scheduled and then, adaptively rescheduled by a trigger
    from another neighbor environmental sensor (as agriculture parameters are inter-dependent).
    For example, rainfall or humidity sensors are triggered with soil moisture sensors.
    On other hand to adjust the parameters is based on the profile of the parameters.
    available node energy is the based on depending of System parameters. For instance,
    when the energy is crucial, the bit resolution can be decreased to save the energy
    in conversion process and analog-to-digital converter. Task scheduling is done
    at application layer by coordinator nodes and external server. Routing-Kabashi
    and Elmirghani [5] propose a delay back-link/storage aware and tolerant multi-sink
    architecture routing protocol for the VESEL project. Multiple sinks provide more
    distributed data collection and storage capabilities. several sink nodes have
    a aggregated data. at the edge of a field located with Sinks and thus, it supports
    automatic data logging when some hand-held community devices such as PDA (with
    wireless communication capabilities) pass by the sinks. In back-link/storage aware
    routing protocol, sinks and other nodes broadcast available memory/storage capacity.
    balances or optimizes memory usage. SECTION IV. Proposed Sensor-Based Agricultural
    Monitoring System Based on the design challenges and existing technical framework
    of the agriculture monitoring systems we identify and present differences in sensor-based
    agriculture monitoring systems of developed and developing countries. Considering
    all these challenges and technical frameworks, we propose a novel agriculture
    monitoring systems (with improved Li-Fi technology, topology and routing protocol)
    for farmers in developing countries. In this proposed technology is proved with
    the below mentioned results. Usually low level network system was fixed in with
    IoT devices. Like sensors, relevant object and cameras are covered with communication
    network i.e Li-Fi technology which is clearly mentioned in above phases. A. Block
    Diagram of Praposed System Architechture The below mentioned diagram represents
    with new technology. At first relevant fields data are collected from relative
    sensors and that data/information sends to data collection server. This communication
    done with new Li-Fi technology because that area was fixed with topology based
    on area structure. Actually lot of technologies is present with previous methods.
    But lack of communication leakage we are forwarded to this present technology
    for better performance. Fig. 3. System architecture Show All After receiving data
    from sensors that information must transfer to cloud server with the help of GPRS
    and WImax technologies. Than cloud server take a responsible to analysis the data
    based on requirement. Based on collected data sever will take a decision and that
    decision need to distribute over the subscribed users. Mean while any disturbance
    are accrued than that notification must received through mobile. This process
    is called alarm with beep sound. B. Flowchart for Process Management This proposed
    method can be explained with step by step process like flow of sequentional process
    with the below figure (4). Fig. 4. Flow chart of proposed method Show All The
    proposed system starts and first executed by user validation weather that user
    is authorized or not. If user valid that all connected sensors are activated than
    that collected information send to cloud server. That will take an action regarding
    that query. Actually that data is two types compared and assessed. at last if
    the problem solved that the process terminated otherwise recycle that execution
    process. 1): Tempareture SensorA temperature sensor refer a device, usually an
    RTD (resistance temperature detector) that recived the data about temperature
    from a particular source sensors and make a convertion of the data into human
    understandable form for an observer or a device. Temperature sensors are used
    in many more applications like HVand AC system food processing units, environmental
    controls, medical devices, automotive and chemical handling under the food monitoring
    and controlling systems, etc. One of the most commonly used temperature sensor
    is a thermometer, in which temperature can measure of solids, liquids and gases.
    This sensor is mostly used for nonscientific purposes because it is not so accurate.
    Different types of temperature sensors are as follows: Thermocouples Resistor
    temperature detectors Thermistors Now we explained briefly about each and every
    sensor in detailed manner. •: ThermocouplesOne of the most commonly used temperature
    sensor is a thermocouple and it is abbreviated as TC.TC is used for long distance
    because it is extremely rugged, low-cost. There are many types of temperature
    sensors that have a wide range of applications. Fig. 5. Thermocouple sensor Show
    All A thermocouple can be used as a voltage device because it indicates temperature
    by measuring a change in the voltage. It consists of two different metals: opened
    and closed. The principle used for working of these metals is thermoelectric effect.
    When two dissimilar metals produce a voltage, a thermal difference exists between
    the two metals. Thermocouple voltage rises when the temperature rises. •: Resistor
    Temperature DetectorsRTD is one of the most commonly used accurate sensors. In
    a resistor temperature detector, the resistance is proportional to the temperature.
    Platinum, nickel & copper is used for preparing this sensor\\cdot Fig. 6. RTD
    sensor Show All RTD can be used for measuring a wide range of temperature. It
    can be used to measure a temperature between 270oC to +850oC. To function properly
    it requires an external current source. The current produces heat in a resistive
    element causing an error in the temperature measurements. The error is calculated
    by this formula: DeltaT= P ∗ S View Source Where, ‘T’ is temperature, ‘P’ is I
    squared power produced and‘S’ is a degree C/mill watt. •: ThermistorsThe other
    type of temperature sensor is a thermistor. It is relatively inexpensive, adaptable,
    and easy to use. When the temperature changes like RTD sensor it changes its resistance.
    Oxides of manganese &nickel are used in the manufacture of thermistor because
    they are susceptible to damages. So, these materials are called ceramic materials.
    Thermistor offers high sensitivity compared to resistor temperature detectors.
    In the thermistors temperature increases when the resistance decreases. so, thermistor
    has a negative temperature coefficient. Fig. 7. Thermistor temperature sensor
    Show All 2): Soil Moisture SensorIn the life of plant Soil moisture plays a key
    role. Nutrients in the soil solution provide the plant with the food it needs
    to grow. By using transpiration, water is the essential element for regulating
    the temperature. when growing in moist soil plant root elements are well developed.
    Excessive levels of soil moisture, however, can lead to anaerobic conditions that
    can promote the growth of plant and soil pathogens. Fig. 8. Soil moisture sensor
    Show All For measuring soil moisture tensiometric and volumetric are the two primary
    sensor types. Tensiometric sensors measure soil moisture tension. Tensiometers
    are sensitive to soil properties by measuring how tightly a particular soil type
    retains water. The actual volume of water in the soil is measured by volumetric
    sensor. Soil moisture sensors work with irrigation system by signaling the need
    for water and turning on the system. Soil moisture sensors can prevent sprinklers
    from coming on if there''s enough moisture in the soil. 3): Water Level SensorBased
    on the specific application of sensor wide spectrum of sensors is available in
    the market. Fig. 9. Water level sensor Show All Sensor is also called as humidity
    sensor because it is used for measuring humidity. It is also called as pressure
    sensor, because it is used for measuring pressure. sensor used for measurement
    of displacement is called position sensor and the principle used is sensing principle.
    The sensor used for measurement of fluid levels is called a level sensor. Base
    server/station-A base station is a wireless communication station. A base station
    is used to communicate and is installed at a fixed location. It is also called
    as a push-to-talk two-way radio system Data Analysis Table 1 Different agriculture
    values SECTION V. Practical Results End users can analyze output result in things
    peak application. That the below figure shows practical representation. This involved
    a lot of IoT devices. Fig. 10. Experimental setup Show All The below figure shows
    optimized results of temperature value of soil in the area field. Fig. 11. Analysis
    of temperature value Show All Fig. 12. Analysis of light value Show All The above
    figure shows optimized output value for light which is related to IoT devices.
    The below graph shows the moisture value of weather and that value is used to
    take decision about pesticides etc. that is also discussed with table (1) about
    agriculture related calculations and necessary action for better food production.
    Fig. 13. Analysis of moisture value Show All The beside below mentioned graph
    for calculating the requirement of rain fall water. Because, overall 33% of world
    population depends on rain water for irrigation. Fig. 14. Analysis of rain fall
    value Show All Conclusion Better improvement of production in crop is a major
    challenge in well developing countries like India should take novel smart technologies
    under agriculture stream that leads to green population country. so in order to
    reach we proposed a new agriculture technology based on IoT association with cloud
    computing. Here Li-Fi technology was introduced for fixed area structure topology
    for better performance. Usually GPRS technology was used for better results within
    low cost. This system made with ability for further improvement by incorporating
    new self learning techniques in which easy deployment in to cloud to understand
    behavior of sensor collected data and can take individual or autonomous decisions
    Authors Figures References Citations Keywords Metrics More Like This Adaptive
    wireless sensor networks for high-definition monitoring in sustainable agriculture
    2014 IEEE Topical Conference on Wireless Sensors and Sensor Networks (WiSNet)
    Published: 2014 Wireless Sensor Network for Precise Agriculture Monitoring 2011
    Fourth International Conference on Intelligent Computation Technology and Automation
    Published: 2011 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the International Conference on IoT in Social, Mobile, Analytics
    and Cloud, I-SMAC 2017
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A novel technology for smart agriculture based on IoT with cloud computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Cambra C.
  - Sendra S.
  - Lloret J.
  - Garcia L.
  citation_count: '125'
  description: Wireless Sensor Networks (WSNs), Internet of things (IoT) and aerial
    mapping are nowadays being used very much in agriculture. The challenge of joining
    those technologies requires a new and smart wireless network topology for devices
    communication. Problems like scalability and manageability are important challenges
    when there are many devices. This paper presents the design of a smart IoT communication
    system manager used as a low cost irrigation controller. The proposal is a powerful
    irrigation tool that uses real time data such as the variable rate irrigation
    and some parameters taken from the field. The field parameters, the index vegetation
    (estimated using aerial images) and the irrigation events, such as flow level,
    pressure level or wind speed, are periodically sampled. Data is processed in a
    smart cloud service based on the Drools Guvnor (a Business Rules Manager). The
    developed multimedia platform can be controlled remotely by a mobile phone. Finally,
    we measured the bandwidth consumed when the system is sending different kinds
    of commands and data.
  doi: 10.1109/ICC.2017.7996640
  full_citation: '>'
  full_text: '>

    ""'
  inline_citation: '>'
  journal: IEEE International Conference on Communications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An IoT service-oriented system for agriculture monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
