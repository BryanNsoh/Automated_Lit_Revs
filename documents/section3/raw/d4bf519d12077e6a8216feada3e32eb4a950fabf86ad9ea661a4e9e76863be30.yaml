- DOI: https://doi.org/10.1109/access.2020.2975142
  analysis: '>'
  authors:
  - Maanak Gupta
  - Mahmoud Abdelsalam
  - Sajad Khorsandroo
  - Sudip Mittal
  citation_count: 275
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Security
    and Privacy in Smart Farming: Challenges and Opportunities Publisher: IEEE Cite
    This PDF Maanak Gupta; Mahmoud Abdelsalam; Sajad Khorsandroo; Sudip Mittal All
    Authors 271 Cites in Papers 50232 Full Text Views Open Access Comment(s) Under
    a Creative Commons License Abstract Document Sections I. Introduction and Motivation
    II. Smart Farming Landscape & Architecture III. Security & Privacy Issues IV.
    Smart Farming Ecosystem Cyber Attacks V. Existing Research Show Full Outline Authors
    Figures References Citations Keywords Metrics Footnotes Abstract: Internet of
    Things (IoT) and smart computing technologies have revolutionized every sphere
    of 21 st century humans. IoT technologies and the data driven services they offer
    were beyond imagination just a decade ago. Now, they surround us and influence
    a variety of domains such as automobile, smart home, healthcare, etc. In particular,
    the Agriculture and Farming industries have also embraced this technological intervention.
    Smart devices are widely used by a range of people from farmers to entrepreneurs.
    These technologies are used in a variety of ways, from finding real-time status
    of crops and soil moisture content to deploying drones to assist with tasks such
    as applying pesticide spray. However, the use of IoT and smart communication technologies
    introduce a vast exposure to cybersecurity threats and vulnerabilities in smart
    farming environments. Such cyber attacks have the potential to disrupt the economies
    of countries that are widely dependent on agriculture. In this paper, we present
    a holistic study on security and privacy in a smart farming ecosystem. The paper
    outlines a multi layered architecture relevant to the precision agriculture domain
    and discusses the security and privacy issues in this dynamic and distributed
    cyber physical environment. Further more, the paper elaborates on potential cyber
    attack scenarios and highlights open research challenges and future directions.
    A Roadmap of Cybersecurity Research and Challenges in Smart Farming. Published
    in: IEEE Access ( Volume: 8) Page(s): 34564 - 34584 Date of Publication: 19 February
    2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.2975142 Publisher: IEEE
    CCBY - IEEE is not the copyright holder of this material. Please follow the instructions
    via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles
    and stipulations in the API documentation. SECTION I. Introduction and Motivation
    According to the United Nations (UN), the world population is expected to exceed
    9 billion people by 2050, growing by almost a third of the current population
    [1], [2]. Such an increase in the population demands a boost of almost 70 percent
    in the food production rate, according to the Food and Agriculture Organization
    of the United Nations.1 This rapidly growing population also introduces a variety
    of other problems such as increasing competition and exploitation of land, water
    and other natural resources. These issues present an urgent need to reduce the
    dependence of food system on our environment. Consequently, the need for an evolutionary
    agricultural paradigm to keep up with growing demand of food and crop production
    is necessary to guarantee a sustainable development [3]. Smart farming technologies2
    and precision agriculture3 [4] are gaining more attraction for their potential
    to fulfill such an increasing demand and meet global food supply needs. Smart
    farming technologies involve integration of technology and data driven agriculture
    applications to increase crop yield and quality of food products. There are numerous
    smart farming use cases [5]–[7] present globally indicating the impact of this
    new paradigm of practicing agriculture. As an example, the use of remote sensors
    placed in the soil for measuring blueberry irrigation in Chile has reduced the
    volume of water used in farming by 70 percent [8]. In India, farm data has been
    used to predict and prevent crop diseases, which reduced the risk associated with
    the failure of crop production [9]. Similar data driven approaches have helped
    fruit farmers in Slovenia effectively fight against pests.4 Smart farming, however,
    goes beyond primary production. In fact, it has impacted the complete food supply
    chain, by employing big data analytics to provide useful insights about the entire
    farming process [10] by facilitating real-time operational decision making, and
    revolutionizing existing agriculture business models. Smart farming enhances conventional
    farming practices by introducing on-field smart sensors and devices. These sensors
    and devices work in a synergistic manner to provide efficient farming experiences,
    as well as, an improved crop yield. Although beneficial to the productivity of
    the industry, the use of heterogeneous, internet-connected devices has exposed
    potential cyber attacks and vulnerabilities in the agriculture sector. These attacks
    introduce the ability to remotely control and exploit on-field sensors and autonomous
    vehicles (tractors, aerial vehicles, etc). Potential agricultural attacks can
    create an unsafe and unproductive farming environment. For example, exploits that
    have the ability to destroy an entire field of standing grown crops, flood the
    farmlands, over spray pesticides using smart drones, etc. can cause unsafe consumption
    as well as economic deterioration. Such attacks in a large coordinated manner,
    also referred to as agro-terrorism [11], also have the potential of disrupting
    the economy of an agriculture-dependent nation. A report [12] released by the
    U.S. Department of Homeland Security extensively elaborates various cyber threat
    scenarios in precision agriculture, further emphasizing the need for research
    in this critical domain. The Agriculture industry adds 6.4 percent of the world’s
    economic production with a total of $5,084,800 million.5 Agriculture, food, and
    related industries contributed $1.053 trillion to U.S. gross domestic product
    (GDP) in 2017.6 At the same time, United State’s farms contributed $132.8 billion
    of this sum which is almost 1 percent of GDP. Agriculture contributed 1.2 % to
    the European Union’s (EU) GDP in 2017 whereas EU’s agricultural industry added
    gross value of EUR 188.5 billion in 20177 at a record high. Out of 226 countries,
    nine countries have agriculture sector as the dominant sector in their economy.
    The U.S. food and agriculture system has a total economic impact of $7.06 trillion8
    and one-fourth of the overall jobs in the country are connected to it. Most countries
    globally export agricultural products. As a result, cyber vulnerabilities can
    have a significant impact on global food security. A sophisticated agro-terrorism
    attack on a (large) exporting country like the U.S. could harm the health of millions
    of consumers world-wide. In addition, attacks could reduce confidence on domestic
    consumption and destroy the United State’s status as a trusted food exporter.
    A report released in 2018 by the Council of Economic Advisors,9 “The Cost of Malicious
    Cyber Activity to the U.S. Economy” suggests the agriculture sector as one of
    the 16 critical infrastructure sectors that are important to both the U.S. economy
    and national security for which cyber protection is particularly important. It
    also reported that the agriculture sector experienced 11 cyber incidents in 2016.
    According to the World Health Organization,10 420,000 people die every year from
    food-related illnesses and 600 million people fall ill as a result of food contaminated
    with bacteria, viruses, toxins or chemicals. A cyber attack on the food ecosystem
    targeted at farms, transportation system, or food processing industrial control
    systems (ICSs) may increase these numbers exponentially. Other important industries
    like energy, financial or healthcare have understood the need for resilient infrastructure
    and have hardened their defenses. However, the food and agriculture industry is
    still a low hanging fruit for threat actors. Food Protection and Defense Institute
    (FPDI) at the University of Minnesota has discovered that food industry ICSs may
    be distinctly vulnerable to cyberattacks.11 Food industry operations technology
    personnel, in particular, those responsible for operating and maintaining ICSs,
    are experts trained in food and production safety production and not in cybersecurity.
    This presents a huge gap between employing smart farm technology and securing
    it correctly and persistently. If not continuously monitored, cyber attacks on
    smart agriculture technologies can have grave implications on several stakeholders
    in the ecosystem. These groups include farmers, end consumers, food processing
    industries, agriculture co-operatives, livestock, government agencies and nations
    critically dependent on agriculture. Figure 1, shows an end to end interaction
    among various entities involved in smart farming ecosystem. Physical sensors and
    livestock in the field generate data and receive command operations via user applications.
    These on-farm devices are connected to gateway supported edge nodes, which help
    enable in-farm device communication, filter sensor data and real time agronomy
    analytics. At the same time, data lakes in the cloud hold a large amount of data
    and information including but not limited to, environmental information (e.g.
    soil moisture level and fertility status), monitoring information (e.g. sensors
    and smart machinery status), energy management data, and other sensitive information.
    In terms of security and data privacy, it is needless to say that manipulation
    and leakage of such data, as well as the impairment of physical equipment and
    software systems, can induce serious consequences. FIGURE 1. A model of end-to-end
    interaction between various stakeholders in smart farming. Show All Extensive
    research on secure IoT devices [13]–[15], smart vehicles [16]–[19], drones [20],
    [21], edge cloud [22]–[24], wireless communication [25]–[27] is already available
    and might be extended to the smart farming ecosystem. However, most of the time,
    research is conducted on these technologies without consideration of the environment
    they are used. The dynamic smart farming environment, has unique characteristics
    such as farm equipment, labor sharing, and operational decisions, influenced by
    environmental conditions. Domain specific issues such as like location, user skill
    set, insider threats, generated data, need smart-farming-specific security mechanisms.
    The development of smart farm technologies therefore, demands further research
    before wide adoption in the community. The current state of the art and our review
    (discussed in Section V) on smart farming, demands further research in security
    and privacy aspects of this evolving domain. As the research, on cybersecurity
    for smart farming is in its infancy, our objective in this review is to provide
    a holistic view of cybersecurity developments in smart farming. In this paper,
    we discuss current threats, analyze potential cybersecurity attacks, review the
    existing scattered security research, and summarize open research challenges in
    the smart farming field as illustrated in Figure 2. FIGURE 2. A roadmap of cybersecurity
    research and challenges in smart farming. Show All This paper has the following
    key contributions: It provides an overview of smart farming focused multi-layered
    architecture, highlighting multiple entry points and communication across layers.
    It identifies potential cybersecurity issues in smart farming and illustrates,
    scenario specific cyber attacks, which have been categorized into data, network,
    supply chain, and other common attacks. It presents an extensive evaluation of
    the current cybersecurity research, countermeasures in smart farming, and also
    enlists the focus, contributions and weaknesses of current research works. It
    provides a clear view of the open security research challenges in different areas
    including next generation network security, trustworthy supply chain and compliance,
    adversarial machine learning and AI, and access control, trust and information
    sharing. The remainder of this paper is as follows. Multi-layered architecture
    for smart farming is discussed in Section II. Section III elaborates security
    and privacy issues, whereas Section IV discusses different attacks on the smart
    farming ecosystem including the supply chain side. Existing research and state
    of the art in smart farming security is discussed in Section V. Section VI highlights
    open research challenges and possible approaches to solutions. Finally, Section
    VII draws conclusion to this research paper. SECTION II. Smart Farming Landscape
    & Architecture Figure 3, depicts a multi layer architecture for the smart farming
    ecosystem. The proposed architecture adapts and extends widely discussed IoT and
    Cyber Physical System (CPS) multi-layer architectures [28]–[31]. These architectures
    recognize the use of cloud and edge services, and the infinite capabilities provided
    by them to fully harness the data generated from smart devices at the physical
    layer [32]–[37]. Our smart farming architecture, also reflects different user
    applications which can be envisioned at various layers. It also considers, vast
    amounts of data collected at edge or cloud layers, and highlights the need for
    various multi-cloud or edge-cloud scenarios. Overall the architecture consists
    of four layers: Physical layer, Edge layer, Cloud layer, and Network Communication
    layer. The latter spans across all three previous layers and connect them. FIGURE
    3. Multi layer smart farming architecture. Show All A. Physical Layer The bottom
    layer in the architecture comprises of real physical sensors and gateway devices
    which are spread across agriculture farms or in greenhouse buildings. These devices
    include drones flying in the air, autonomous tractors, sensors embedded in livestock,
    or hub devices installed to provide communication among smart objects or with
    a central cloud. These devices are responsible for data sensing and based on the
    information gathered, help in actuating other devices to realise various smart
    farming use cases. They collect real time information about weather conditions,
    soil moisture level, or cattle’s body temperature, which can be sent to the edge
    or cloud supported intelligent decision making systems to provide recommendations
    and enable automation. For example, data gathered from soil moisture sensing device
    in the field, after getting processed in the edge or cloud, can help in determining
    the amount of water needed at the farm, optimize irrigation schedule and offers
    a convenient experience to the end farmers. B. Edge Layer This layer is near to
    the end-users and end-devices for local real-time computations and decisions.
    It reduces the computation load off the centralized cloud layer and also the network
    load. Edge computing layer consists of multiple edge nodes. Each node represents
    a gateway that include services such as: data capturing, security monitoring and
    detection, prediction and real-time decision support. Data capturing services
    include, data aggregation, filtering, encrypting and encoding of real-time data
    streams. Prediction services usually rely on machine learning models trained on
    the central cloud and deployed on the edge layer. They are used to predict and/or
    categorize certain events related to plant or livestock such as, prediction of
    crop yield, categorization of plants or livestock health, predictions about the
    amount of fertilizer and water needed for a patch of land, so as to maximize yield,
    or estimating soil erosion. Security monitoring and detection mechanisms can be
    deployed for real-time monitoring of anomalous events and classifying these events
    as malicious or benign. This includes services like, anomaly detection and device
    failures prediction. C. Cloud Layer Precision Agriculture (PA) and cloud computing
    paradigms offer advances to enhance PA connectivity. The cloud layer is generally
    virtualized in data centers and communicates with the other layers using the Internet.
    Generally, these cloud layer platforms follow the Platform as a Service (PaaS)
    architecture model where the users can focus on running applications and importing
    their data. The PaaS provider runs and maintains a data broker that collects data
    being pushed in from the edge layer and saves these records in a Distributed File
    System (DFS). This stored data is used by analytic software to mine knowledge.
    This data analytics component computes insights and these are pushed to the end
    user through a client application running on the users’ machine. Popular farm
    equipment manufacturers like, John Deere,12 Farmers Business Network,13 etc. have
    created several cloud based products that help users monitor various sensors and
    vehicles used on a farm. These PaaS systems generally run on popular cloud computing
    platforms like Amazon Web Services,14 Google Cloud,15 etc. The way these farming
    PaaS systems are built using these popular cloud computing platforms also introduce
    various security challenges in smart farming ecosystem. D. Network Communication
    Layer The common theme for most, if not all, current technologies is “connectivity”.
    With a growing need for a boundary-less Internet, the idea of a network of smart
    devices has become a reality. This concept, known as the Internet of Things (IoT),
    allows connected devices to be monitored, controlled, and shared data among each
    other. This data can be analyzed and used by multiple applications. In smart farming,
    as shown in Figure 3, the network layer not only facilitates edge and physical
    layer connectivity, but also provides an interface for them to interact with the
    cloud layer. From exchanging soil temperature through a peer-to-peer sensor communication
    system, to sending farm monitoring data to the cloud data stores through high
    speed mobile networks such as 5G [38], or updating the farmer about corp quality
    via a wireless adhoc topology [39], network layer offers a means of communication
    to bind all other layers. Network layer has two main responsibilities in a smart
    farming system. Firstly, there are diverse set of heterogeneous devices in every
    layers of a smart farming system. The network layer provides a secure and efficient
    network stack where, wire, wireless and mobile sub-networks can communicate in
    a compatible and cross-layer manner. The second responsibility of the layer is
    to preserve connectivity and therefore, increase availability. From bigdata processing
    systems used to analyze collected data to individual sensors that collect information
    from the field, this layer is needed for system-wide cyber communication. Real
    World Smart Farming Use Cases: The proposed smart farming architecture is constructed
    based on multiple literature and real world smart farming use cases. It can be
    viewed as a general smart farming architecture that satisfies most of the use
    cases. However, it should be noted that not all use cases will include all four
    layers as proposed in the architecture. Blackhills Farm in New Zealand, a 400-hectare
    property with over 2000 cattle and 800 sheep, has adopted the use of SCADAfarm16
    system which allows the owners to remotely monitor water and energy consumption,
    location of irrigators, soil moisture measurements and real-time weather information.
    The farm uses Schneider Electrics’s EcoStuxture IoT architecture17 which corresponds
    to our physical layer and sensors. It also utilizes Microsoft Azure18 IoT suite
    with communication provided by the Vodafone New Zealand cellular network which
    corresponds to the cloud and network layer in out framework. Similarly, a 7,000-acre
    farm at Beltsville Area Research Center, was developed by the United States Department
    of Agriculture (USDA) to act as a testbed for smart farming technologies. The
    farm was equipped with a physical layer including sensors, drones and IoT-enabled
    farm equipment for a public-private program called Farmbeats [5]. The farm adopts
    a two-layer hybrid network: a layer based on TV White Spaces [40] technology for
    connectivity over long range which connects the farmer’s home Internet connection
    to IoT base stations on the farm, and a layer based on Wi-Fi technology which
    connects smart sensors to the IoT base stations. Such IoT base stations (gateways)
    are equivalent to the edge cloud layer (Figure 3) in our proposed general architecture.
    Additionally, the data collected at the IoT stations are pushed to the cloud layer
    which employs AI algorithms for data analysis. Another usecase is a revolutionary
    step towards smart crop health monitoring. A group of researchers19 along with
    local farmers are developing a distributed airborne monitoring system to detect
    possible zones of crop damage or nutrient deficiency at a 492-acre farm in in
    North Carolina, United States. In order to accommodate rapidly-growing food demands
    and increase the quality and quantity of agricultural production, it is necessary
    to improve farming management practices and technological developments in agricultural
    fields. Accordingly, unlike traditional crop management methods that use farmers
    or ground vehicles for assessing crop health status, this collaborative smart
    farming project is using autonomous technology to perform aerial monitoring of
    agricultural fields to save time and money, while preventing damage to crops.
    In this project, a group of drones which monitor the field are working in the
    physical layer, as depicted in Figure 3. Drones communicate with each other through
    network layer, using which they also send collected data and images to land processing
    bases (i.e. the edge layer in our proposed architecture) for initial data cleaning
    and pre-processing. Finally, pre-processed data is sent to the cloud layer for
    storing and knowledge extraction functionalities. SECTION III. Security & Privacy
    Issues The adoption of sensor based technologies and cloud supported smart applications
    in agriculture has unleashed opportunities for adversaries to orchestrate cyber
    attacks. Therefore, it is important to first understand major security and privacy
    issues in smart farming domain before discussing specific cyber attacks. In this
    section, we will elaborate these issues in detail followed by attacks in the following
    section. A. Data Security & Privacy In a smart farm, an enormous amount of complex,
    dynamic and spatial data gets generated from many heterogeneous sensors, devices
    and equipment. Leakage of such information either through unauthorized access
    or by an insider can cause potential threats. For example, leakage of agriculture
    anti-jamming devices information can help an attacker bypass these security measures,
    while leakage of soil, crop, and agriculture purchase information can cause severe
    economic losses to farmers, if such information is used by competitors or hostile
    actors. On a larger scale, aggregating important agricultural information on a
    particular country is also a potential threat. As such data security and privacy
    is a very important requirement and one of the primary objectives to ensure the
    reliable operation in a smart farming ecosystem. Data on the Edge: Smart farms
    leverage Internet of Things (IoT), state-of-the-art communications (e.g., 5G),
    and artificial intelligence. Such systems mostly require fast response times,
    than those of a traditional model in which data is transmitted to a centralized
    data center (e.g., cloud) for processing and results are returned to a user. As
    such, the need of edge cloud is on the rise. Although moving data processing and
    analytics to the edge enhances agility and efficiency, to say the least, it also
    imposes huge security risks due to the increased attack surface primarily because
    of the highly diverse use of IoT devices which are usually not built with security
    in mind. This gives attackers an easy entry point to the network since remote
    access to the edge layer, in most cases, is essential. Additionally, finding the
    IP addresses of edge endpoints become an easy task especially when considering
    websites like Shodan,20 a search engine for all IoT connected devices. Beside
    directly compromising IoT devices or edge endpoints to gain access to the smart
    farm network, an indirect attack to compromise third parties is also a potential
    risk. As an example, smart farms often use third party agronomy analytics to analyze
    the collected data which can be used in many research areas such as plant biology
    and genetics, agriculture economy, supply forecasts, and disease predictions.
    Those parties might be given direct access to smart farm data on the edge for
    real-time analytics. An attacker might phish for such third parties, compromise
    their systems and inject malicious software to redirect the data sent to external
    servers for data theft. Such attacks are very hard to detect, since attackers
    are using legitimate stolen third party credentials. B. Authorization & Trust
    In smart farming applications, connected entities including autonomous tractors,
    flying drones, on field sensors etc. communicate and interact with each other,
    and issue command and control operations to provide automated and efficient experience.
    Such communication can be direct machine to machine or via a cloud or edge assisted
    network which can support Message Queue Telemetry Transport (MQTT21), Constrained
    Application Protocol (CoAP22) or other IoT communication protocols. In either
    case, it is essential to ensure that the messages are sent from a trusted authorized
    entity, rather from a malicious adversary. This exchange of information, like
    moisture level of soil, information about crop yield, cost of fertilizer, or sensitive
    data about the livestock like health, current location, breeding decision information
    and other farm related private data sent to the cloud or to a third-party application
    must be authorized by the owner of the field or a concerned party. Livestock are
    important part of agriculture, and a big component of a farmer’s income. Sensors
    can be embedded in the cattle [41]–[43] which can monitor their health and can
    be used to remotely inject medicines or enable preventive actions from a doctor.
    Even in case of livestock purchase, buyer can be given temporary access to the
    data of an animal they are interested in, which can help them analyse it before
    purchase. As these animals are kept in monitored environments, remotely controlling
    the temperature or making adverse conditions in barn can affect the yield of animals,
    and can also result in epidemics and widespread disease. Over the air (OTA) updates
    for the equipment’s firmware must be from a trusted party, a bad software patch
    received for a critical agriculture equipment can curtail a farmer from using
    it at the needed time of harvesting and planting. Cross cloud and multi cloud
    trust models [44], [45] are needed when entities associated at different cloud
    providers interact and access data remotely. In case of a mechanic trying to diagnose
    an engine of an autonomous tractor, or a doctor trying to access data of a cattle
    located in a private cloud, trust levels need to be established so as to enable
    such access. Several access control models have been proposed for IoT [46]–[58]
    like systems, however their feasability in dynamic smart farming is still to be
    investigated. Proper authorization is needed for a farmer to issue a command,
    to a smart water sprinkler, or to fetch the latest readings from a soil moisture
    sensor. Farm rivalry can exploit such connectivity to the sensors, and may flood
    a farmer’s field, or make it parched. Usually in farms, labor is hired on a temporary
    basis mostly at the time of harvesting and sowing, therefore, temporary access
    to smart equipment can be delegated to on field workers for non-critical operations.
    It may be the case that a critical operation, like running an autonomous tractor
    on the field, or flying a drone over the field to spray pesticides may need multi
    level authorization. C. Authentication & Secure Communication One of the most
    important aspects of security and privacy in smart farming is authentication of
    connected devices. Devices need to be authenticated first in order to get connected
    to various services on a smart farming system. They are usually low power devices,
    with limited processing power, memory, and storage, so legacy public-key infrastructure
    (PKI) authentication mechanisms cannot be considered as feasible solutions. Alternatively,
    secure lightweight multi-factor authentication protocols which are offered as
    a service [13], [59] are more realistic solutions in a smart farming network environment.
    In fact, an intermediary Certifying Authority (CA) can facilitate the authentication
    of a connecting device [60]. Such authentication mechanisms do not consume devices’
    limited resources for authentication processing, but also unauthorized devices
    will be prevented from connecting and accessing the network in an efficient way
    [61]. Moreover, devices may sometime join or leave different layers of a smart
    farming ecosystem. This entails dynamic authenticated mechanisms that apply authentication
    on demand to ensure that only legitimate devices are allowed to have access to
    different services spanning over different layers. Providing end to end secure
    communication in a smart farming setting requires securing the communication between
    devices in a particular layer and also securing the inter-layer communication
    [62]. While cryptography-based solutions prove their effectiveness in securing
    both intra-layer and inter-layer communications, employing them on constrained
    IoT devices is a big concern. There are, however, limited attempts to apply lightweight
    cryptography solutions to a smart farming ecosystem [14]. Additionally, quantum-based
    cryptography for a secure end to end communication for IoT devices is under active
    investigation [63] as a futuristic solution. However, the feasibility of such
    solutions have not been evaluated in real world scenarios. D. Compliance and Regulations
    Smart farming and precision agriculture raises various legal issues, which remain
    partially unanswered. The following are some of the major issues in this area.
    1) Contracts and Agreements A smart farm involves different parties like the farmers,
    the cloud service providers, the networking infrastructure providers, to name
    a few (See Section II). These different parties need to negotiate and agree on
    various parts of contracts [12], [64]. These contracts include data privacy, security
    and intellectual property protection clauses. Data protection is essential for
    the development of smart farms and is a major part of these contracts. Such contracts
    between interested parties are crucial to protect the value and confidentiality
    of the data as an important asset. Farmers who use smart farming tools also need
    to negotiate in advance finer elements of these contracts. For example, which
    party shall be responsible in case data processing and analysis lead to wrong
    decisions affecting different downstream tasks in the pipeline. Another important
    contractual element example is the decision involving use of self-driving tractors,
    which are subject to the set of obligations applicable to self-driving cars. In
    this scenario, strong compensation and limitation of liability clauses may help
    the farmers. 2) Data Security and Privacy Farmers who deploy smart infrastructure
    fear that their data might be stolen by competitors or be publicly released. Hence,
    data security is crucial and agreements with technology providers should include
    specific clauses. Although most smart farming techniques process non-personal
    data, linking of such information to a particular personally identifiable information
    (PII) poses serious concerns [12], [64]. For example, data of livestock directly
    referring to their owner; crops conditions linked to farmers’ personal details.
    In this case, privacy clauses should be included to prohibit personal data processing
    to a certain degree. Further issues may arise when smart farming equipment, such
    as drones or tractors, have the functionality to monitor their users [12], [64].
    3) Intellectual Property (IP) An important question from a compliance perspective
    is who owns the data collected on a smart farm. This is specially important as
    data privacy laws cannot solve this issue. As per the current regulatory setup,
    data itself cannot be protected, however copyright provisions can be utilized
    to achieve high level of safeguards. Most farmers include IP protection clauses
    [64] in contracts that they create with smart farming technology providers [12].
    4) Regulatory Agriculture and livestock production is a highly regulated industry.
    Various countries across the globe have many laws, regulations, and supervisory
    authorities [65]–[67]. These touch upon specific compliance requirements for producing
    and selling of products. Such compliance can be achieved easier by using smart
    farming technology that help farmers and regulators track, audit, and inspect
    every step of the production pipeline. 5) Cyber Insurance Cyber Insurance allows
    victims to protect themselves from various cyber risks. However, cyber insurance
    policies in agriculture have lagged in the coverage of cyber incidents and events.
    Most of the current available agriculture based cyber insurances are very ambiguous
    and limited in their coverage [64]. SECTION IV. Smart Farming Ecosystem Cyber
    Attacks This section elaborates possible cyber attacks in smart farming ecosystem.
    We have categorized attacks into four different classes as shown in Figure 4.
    We have discussed data specific and network specific attacks orchestrated on smart
    farms including IoT based farming sensors. We have also explored cyber attacks
    from the supply chain side to highlight the vulnerabilities as more and more systems
    get connected to the internet and generating sensitive data. FIGURE 4. Smart farming
    ecosystem cyber attacks. Show All A. Data Attacks 1) Insider Data Leakage Farmers
    fear leakage of confidential data the most among other threats as it can be used
    against them in the commodity market. An insider (like a disgruntled employee)
    can leak such data to intentionally cause harm or sell data for money. For example,
    a former engineer at Allen and Hoshall was able to access the company’s data over
    a period of two years.23 Data this employee accessed included engineering schematic,
    project proposals, and marketing information which had an estimated value of $500,000.
    2) Cloud Data Leakage Smart farming data is very sensitive and can reveal a lot
    of confidential agriculture and economic information about the entire country.
    Cloud data centers are distributed across the world and, in some instances, virtual
    machines might be placed in data centers located in different countries. Data
    might be less secure if it is stored in data centers in other countries. These
    countries could place less strict security requirements on companies. Additionally,
    their governments might also intercept or collect that data stored on servers
    within their own jurisdictions. For these reasons, countries have started adding
    laws for sensitive data localization. For instance, China has placed a new cybersecurity
    law24 into effect in 2017 stating, among other things, that personal data must
    be stored on domestic servers. As such, companies like Microsoft, Google and Amazon
    started taking steps to transfer control of Chinese data to Chinese firms. 3)
    False Data Injection Attack In this attack, an attacker attempts to change/falsify
    data that contributes to important real-time decisions, with the assumption that
    adversary has the knowledge of the system and its configuration. For example,
    injecting false information about the soil moisture level will result in over
    watering and, in turn, damaging the crops. 4) Misinformation Attack In this attack,
    the aim is to endanger data integrity. An attacker may release false data about
    a smart farm claiming the outbreak of a disease in crops or livestock. Such false
    data reports mimic the form of an actual report released by the targeted smart
    farm. As a result, it will take a lot of time, effort and money to prove that
    the released report is false. B. Networking and Equipment Attacks 1) Radio Frequency
    (FR) Jamming Attack In many cases, smart farming equipment rely on radio frequency
    communication, like cellular or satellite networks. A smart farming equipment
    often use global navigation satellite systems (GNSS) to improve efficiency with
    products and techniques such as path planning, auto steering, seeding and spray
    rates. GNSS is achieved by combining GPS with real time kinematics (RTK) technology
    to enhance the precision of real-time position data. Attackers may jam GNSS for
    malicious purpose by deploying many distributed low power jammers to disrupt GNSS
    over wide areas and, in turn, prevent smart farming equipment from functioning
    properly. 2) Malware Injection Attack One of the most prevalent threats to smart
    farming is malware injection attack [68], where an attacker injects a malware
    into a connected smart device. Malware is a very common threat in large scale
    systems since, in most cases, it acts and propagates through the system automatically,
    hence making it a very attractive target to attackers. Precision agriculture is
    being adopted widely, meaning that more farms are connected to the internet. Typically,
    most of these farm deployments use similar software components (e.g., usage of
    LoRa25 and ZigBee26). As a result, a malware that infects a particular smart farm
    will most likely infect other farms with similar deployments. The damage caused
    by malware comes in many shapes and types. Malware can steal information about
    the consumption of agricultural materials, purchase information of fruits, vegetables
    and livestock, data about agricultural machinery etc. It can also recruit smart
    devices as part of a botnet which will be used for committing malicious acts controlled
    by an attacker. Further, malware can hinder the functions of physical smart equipment
    which, in turn, can have a devastating effect on a particular crop harvest or
    farm area. 3) Denial of Service Attack IoT devices used in smart farming environments
    can always be used to launch large scale denial of service (DoS) attacks [69]
    similar to what happened in 2016 using Mirai botnet [70]. In that occasion, an
    army of dummy CCTVs was exploited to launch one of the biggest DoS attacks that
    happened recently. There are usually a large number of inter-connected nodes and
    groups in a farm, and thus, similar type of attacks are possible in context of
    smart farming. These attacks not only can disrupt normal functions of different
    modules in an individual farm but also can be leveraged to interrupt legitimate
    cyber services in other domains. 4) Botnet With IoT everything is capable of getting
    connected to the internet. In smart farming ecosystem, there are many IoT related
    devices at each architectural layer. These devices are prone to attacks and can
    then be controlled by a central malicious system. This forms a so called ‘Botnet
    of Things’ [71]. A zombie army of infected farm IoT devices [72] can easily be
    used to infect many other networks through different mediums and hence a smart
    farm may turn out to be an internet of vulnerabilities for cyber criminals. Smart
    farm devices are not built with security as a concern and even if they do, users
    usually neglect the basic steps of setting adequate cybersecurity defense mechanisms.
    5) Side Channel Attack Attacks which have their roots in gaining information from
    how a system is implemented rather than what weakness exists in the system implementation
    are called side channel attacks. Smart farming is one of the IoT use case and
    hence it inherits some common IoT vulnerabilities including side channel attacks
    [73]. In such attacks, there are different channels which can be exploited by
    attackers. In timing channel attacks, for example, computation time along with
    cache miss and cache hit timing patterns are among those attacks vectors which
    can be exploited by adversaries. Hardware glitching in forms of voltage fluctuations
    and variances in system clock period during execution tasks are other possible
    attack channels. Other channels for launching a successful attack are power consumption
    patterns, possible electromagnetic leaks or even sound and acoustic channels.
    C. Supply Chain Attacks The entire agriculture ecosystem and the notion of ‘farm
    to plate’ involves several entities which work in tandem to provide quality food
    to the end consumer in a just-in time environment. This supply chain system [74]
    starts from the farm, which produces raw material that, in turn, is stored and
    processed by the food industry. The processed food is packed and sent to distribution
    retailer from where the end customer purchases processed goods. With IoT technology
    at each stage of the supply chain, it introduces potential cybersecurity threats
    since a security breach in just-in-time distribution system could also have a
    serious cascading effects on the entire supply chain. The massive scale of attacks
    like WannaCry27 ransomware, and the recent spate of ransomwares in cities28 across
    the US, suggest that even a breach or data freeze at a single inter-dependent
    entity will be enough to disrupt the whole chain and possibly the economy of a
    country. An attack on the agriculture equipment and fertilizer provider companies
    could potentially disable critical connected machinery needed at a prime time.
    It could manipulate the amount of nutrients in the fertilizers [64] which could
    seriously destroy the crops rather than nourishing them. The smart devices can
    be infected by malware which are controlled and commanded remotely. In such a
    scenario, large scale attacks can be orchestrated on all the smart farms utilizing
    those compromised machinery resulting in massive disruption in the sector. Needless
    to say that the suppliers of such machinery might loose trust and confidence of
    their customers. Such smart machinery needs dynamic calibration to determine the
    distance at which seeds need to be planted or the amount of fertilizers to be
    sprayed based on historical crop data. This calibration related information is
    uploaded in the machine software over-the-air (OTA), which suggests that deliberate
    uploading of false information to the machine software can have larger scale impact.
    US Foods29 has more than 250,000 customers which purchase supplies, will be affected
    badly if US Foods IT infrastructure is hit by a ransomware or a cyber attack disrupting
    its computer assisted facility and impacting critical processes. Temperature and
    conditions under which the produce is transferred is an important factor to maintain
    the freshness of the product. Smart monitors ensure that products are processed
    and packed at appropriate temperatures. Adversaries can manipulate these sensor
    readings or issue a command to change the temperature that could result in inappropriate
    temperature conditions for produce, which can impact the end consumers as well
    as the entire supply chain. These attacks are not limited to direct stakeholders,
    but for example, contaminated water from a compromised water treatment facility
    used in irrigation can destroy the whole crop field. Even attacks on smart grid
    due to sudden surge in demand and grid overloading can result in blackout which
    in-turn can spoil the stored produce in large storage houses, inducing huge losses
    to the supplier. Blockchain30 based solutions have been proposed to ensure the
    provenance of the food products in the chain, which offers transparency and assure
    quality of the food. However, the entire cost to use this system will not be clear
    unless widely adopted [75]. Smart farming goes beyond agriculture where livestock
    sector is also considered an important part. An attack on this sector can also
    have massive disruptions, where a malicious actor can publish false data about
    a disease outbreaks or unapproved genetic modifications of crops. Similarly, sensors
    and smart devices in the buildings where these livestock are kept can be attacked
    or altered to change the temperature, which can put to harm the entire livestock
    on the farm. Also, for livestock feed products, if an IT system monitoring the
    ingredients of the feed is compromised, it can potentially lead to wide-spread
    contamination in livestock which can easily reach humans as well. D. Other Relevant
    Attacks 1) Compliance and Regulation Food production and farming are a highly
    regulated industry with different countries having multiple national agencies
    monitoring food production. In the United States, Environment Protection Agency
    [65] and the Department of Agriculture [66] enforce various regulations and industry
    standards. In the European Union, Department of Agriculture and Rural Development
    [67] undertakes this responsibility with similar authorities in other countries.
    These federal authorities issue compliance directives to ensure quality food production.
    With the advent of smart farming technology these agencies are relying more and
    more on data produced by farm based sensors. An adversary attacking a smart farm
    can specifically inject false data that will then impact various compliance certification
    processes. This certification process if invalidated, can impact a nation’s food
    supply, affect crop price, etc. The complex smart farming ecosystem, creates a
    broad attack surface that needs to be protected to ensure data integrity. 2) Cyber
    Terrorism The increased use of digital interconnected system in agriculture sector
    brings new opportunities for terrorists to attack places that previously were
    too remote or difficult to strike. Cyber terrorism is a relatively low-cost venture
    with high payoff potential, making the risks of agro-terrorism too large to ignore.
    Therefore, it is important to find solutions that guarantee trust and transparency
    within smart farming concept, as well as protect critical resources. 3) Cloud
    Computing Attacks Cloud is a very diverse, decentralized, heterogeneous and powerful
    ecosystem. The enormous amount of distributed resources make the cloud a hard
    target. However, with the introduction of new cloud concepts (e.g., on-demand
    services, auto-scaling, and self provisioning), attackers have used such resources
    in their favor and, in turn, cloud has become one of the most desirable targets
    to attacker. For example, with the introduction of auto-scaling in cloud, a large
    part of the virtual machines hosted on cloud are similarly configured. If one
    of the virtual machines is vulnerable, it is highly likely that all auto-scaled
    virtual machines are vulnerable as well. As such, a malware that infected one
    virtual machine can propagate to other virtual machines quickly. The infected
    machines can be employed as a part of global botnets which, consequently, can
    be used to launch a large scale distribute DoS (DDoS) attacks enough to hinder
    the functionality of cloud. For example, in 2018, a large scale DDoS attack was
    launched on github resulting in a record-breaking sudden traffic increase to 1.35
    terabits per second. Inevitably, DDoS attacks are becoming more frequent, more
    powerful and more sophisticated. A large scale DDoS attack with an overwhelming
    number of requests, packets or messages can deny services to smart farms, thereby
    paralyzing the brain of smart farms. Further, DDoS attacks might not be specifically
    targeting smart farms’ virtual machines. Even though, an attack might be directed
    at a different target, if virtual machines used by smart farms are on the save
    physical server, it will naturally block off other’s traffic as well. SECTION
    V. Existing Research Table 1 summarizes state-of-the-art research, challenges
    and contributions with respect to security and privacy issues in smart farming.
    We have categorized the literature into different subsections based on the focus
    areas they address. TABLE 1 Projects and Research Addressing Cybersecurity in
    Smart Farming A. Cyber Attacks, Threats and Proposed Solutions Researchers and
    federal agencies have started gauging the impact cyber-attacks as more and more
    farmers and communities are adopting technologies in the farms. The U.S. Department
    for Homeland Security released a report [12] which emphasizes the importance of
    precision agriculture (PA) and associated cybersecurity threat and potential vulnerabilities.
    The report highlights the confidentiality, integrity, and availability model of
    information security in farming. It defines different technologies involved in
    PA including in-farm devices, location and remote sensing technologies, machine
    learning, etc. It briefly discusses the impacted groups by the misuse of technologies
    in farming including farmers, livestock producers, and also industries that support
    or rely on agriculture. This report also discusses hypothetical threat scenarios
    on real life examples. Another promising work [76] highlights the vulnerabilities
    and risks due to introduction of technologies in the field of precision agriculture.
    This thesis work illustrates data collection and related empirical study, however
    falls short of security solutions in the domain. The work from Jahn [64] discuss
    implications of using smart devices in the agriculture sector. The authors make
    strong argument about how the lack of a cyber insurance framework is going to
    have a big impact on various agribusinesses. They also highlight the fact that
    a regulatory response is needed to protect the interests of farmers who adopt
    the use of smart devices. Barreto and Amaral [77] use empirical methodology based
    on the analysis of information and experiences collected in the Internet Security
    Alliance,31 the European Cyber Security Organization32 and the National Institute
    of Standards and Technology33 to highlight security challenges in smart farming.
    Some major threats discussed include security and privacy issues, social engineering,
    denial of service, cyber-espionage agroterrorism, ransomware etc. The research
    also highlights a security framework to enable farmers to better understand security
    implications. However, the paper is unable to discuss open research issues, and
    challenges to secure the environment without evidence of how the discussed attacks
    are orchestrated in the domain. Peer to Peer (P2P) is a network paradigm which
    has use cases in smart farming communication. The device authentication methods
    in this type of communication, however, rely heavily on public key infrastructure.
    Although the system is trustworthy, it puts unnecessary computation load on resource
    constrained smart farm IoT devices participating in a secure P2P communication.
    Accordingly, authors in [78] proposed a lightweight device authentication solution
    in which session keys and public keys are combined to expedite the encryption/decryption
    tasks. It results in a fast and light-weight authentication solution which is
    a good fit for smart farming communication purposes. Additionally, West [79] introduced
    a framework to understand vulnerabilities in emerging technologies and the use
    of such technologies in a smart-farming-specific environment. The framework goal
    is to quantify the degree to which the use of smart farming new technologies are
    vulnerable to cyber-attacks. It uses the common vulnerability scoring system (CVSS)
    for the threat prediction model assessment. The work shows the trade-offs between
    technology maturity and adaptation in the smart farming environment which can
    lead to system compromise. The approach in the paper uses three parameters: basic
    parameters, temporal parameters and environmental parameters for constructing
    a CVSS score. Basic parameters indicate the intrinsic and severity of a vulnerability,
    whereas temporal parameters indicate how a vulnerability might change and affect
    the system over time due to technical changes. Environmental parameters reflect
    the specifications of a vulnerability present in a smart-farming-specific environment.
    Although CVSS score has become a standard in the industry for understanding the
    severity of vulnerabilities and prioritizing their patches, it has some shortcomings.
    Smart farming is a diverse environment with many connected devices and systems.
    CVSS score deals with individual vulnerabilities and fails to accurately capture
    impact of connections within the entire system. B. Blockchain Related Research
    Recently, the usefulness of blockchain in domains other than cryptocurrency and
    financial transactions has been acknowledged [93]–[95]. Agriculture and food supply
    chain is one of the domains in which blockchain technology has shown its capabilities.
    Accordingly, the authors in [81] study overall implications, challenges and potential
    of existing blockchain-based projects in the field. Besides, it critically reviews
    maturity of such projects and elaborates on possible barriers and challenges,
    which hinder acceptability of such projects among farmers and existing cyber farming
    systems. Lin et al. [80] also focused on the use of blockchain technology for
    food safety. Authors created a system that tracks and monitors food production
    cycle, including the processes of raw materials, cultivation/breeding, processing,
    transporting, warehousing, and selling. The system also uses various IoT based
    sensors to replace manual recording and verification with sensor based verification.
    Other works [82], [84], [96] focused on providing case studies of using blockchain
    and smart contracts in smart farming. Awan et al. [82] proposed a framework based
    on IoT and blockchain technology for agriculture product tracking life cycle.
    They used smart contracts to eliminate the involvement of middlemen or third-party
    intermediaries and as such increase credibility and trust. The authors implemented
    a use case based on their proposed framework which included 120 IoT nodes and
    20 blockchain producers. Further, they validated their system based on it’s throughput
    considering different block sizes. However, this work has several drawbacks. Very
    few related works are included and comparison to other works in the literature
    is lacking. Additionally, the authors didn’t include much details about the nature
    of workload used in their experiments and they failed to add a baseline benchmark
    for the validation results for a fair comparison. Patil et al. [84] proposed a
    light-weight security framework for smart greenhouse farms based on blockchain.
    Every IoT node can elect cluster head leader which helps preventing a single point
    of failure in case an attacker targets the leader node. Additionally, the authors
    provided discussion of the security threats on their proposed framework following
    the traditional confidentiality, integrity and availability (CIA) triad model
    as well as their corresponding attacks. Although, this work is interesting, the
    framework is conceptual with no implementation or experiments. Further, the paper
    didn’t include related work nor a comparison to other proposed frameworks. Besides
    proposing blockchain-based frameworks and implementations [97], real world use
    cases of blockchain in smart farming are discussed in the blockchain research
    institute article [83]. In this work, authors explore applications of blockchain
    beyond the typical financial use cases in agriculture. Accordingly, they focused
    on three classes of applications: food safety, sustainable agriculture and the
    local economy and agriculture finance. The authors accompanied each class of applications
    with real world use cases. However, these use cases are discussed on a very high
    level aspect with no implementation details or results. C. AI and Machine Learning
    Assisted Work The advent of new age technologies such as artificial intelligence
    (AI) and machine learning (ML) not only facilitate the adaptation of advanced
    analytics in smart farming, but also create an ecosystem for improving the cybersecurity
    of services. Fusion of these technologies enable farmers to achieve higher average
    yield and better price control over their products in highly competitive markets.
    Design and implementation of a low cost IoT based security monitoring system have
    been proposed by Shabadi and Biradar [85]. The system focuses on physical layer
    of smart farming where it collects data from sensors. This data is sent to a controller
    where data is analyzed to make decisions like activating the actuators for water
    sprinkler in the farms. The proposed work is focused more on implementing the
    basic functionalities of smart farming than addressing security and privacy issues.
    It is very limited to simple threshold based decisions, like, if the soil temperature
    is above a certain threshold, then activate water sprinkler. Real time security
    monitoring for a remote farm is another current application of ML in smart farming.
    In scenarios where real time monitoring and notifications are paramount to farm
    and cybersecurity, the image(s) detected through a surveillance system can be
    processed by open-source computer vision programming supported by AI. For example,
    Abuan et al. [86] proposed a neural based face recognition system which is able
    to be invariant to changes in illumination for background and illumination conditions
    through a neural network training. The agricultural and farming industries have
    been widely influenced by the disruption of the IoT. However, the impact of the
    IoT is limited in countries with less penetration of mobile internet. The boom
    of low-power wide-area networks (LPWAN) in the last decade, with technologies
    such as LoRa or NB-IoT, has mitigated this by providing a relatively cheap infrastructure
    that enables low-power and long-range transmissions. Nonetheless, the benefits
    that LPWAN technologies have the disadvantage of low-bandwidth transmissions.
    Therefore, the integration of edge and fog computing, moving data analytics and
    compression near end devices, is key in order to extend functionality. By integrating
    AI at the local network layer, referred as edge AI, authors in [87] proposed a
    system architecture and implementation that expands the possibilities of smart
    agriculture and farming applications with edge and fog computing using LPWAN technology
    for large area coverage. In another research work [88], Support Vector Machines
    (SVM) along with Artificial Neural Networks (ANN) are used to create an integration
    platform for big data analysis for smart farming. Such a platform not only expedites
    processing huge amounts of data collected from farms and livestocks, but also
    gives smart farming stakeholders the ability to detect and respond against possible
    cyber attacks more efficiently. D. Other Relevant Literature Chi et al. [89] present
    a framework for cybersecurity approaches in precision agriculture and discussed
    challenges of using Wireless Sensor Networks (WSN) in digital virtual farms. They
    also present a framework for secure data capture. Security challenges in agrifood
    sector has been extensively discussed in [90]. The report provides an overview
    of emerging technologies in smart farming. Most smart farms are data-driven with
    respect to automating agriculture processes, decision making, and predictions.
    It also raises important questions of how important is data security? How risk
    assessment is done considering the entire supply chain? Who should take responsibility
    and who should be involved? The report serves to raise awareness addressing the
    importance of cybersecurity in agrifood sector. Authors in [98] provide an overview
    of cross-section of cybersecurity in food and agriculture sectors. They also discuss
    cyber-terrorism, policies, and plans. Spaulding and Wolf [99] detail the needs
    for educating farmers about various cybersecurity threats. Authors in [100] show
    the impact of cyber attacks on smart farming infrastructure via simulations using
    NETA with OMNET++ framework. Huning et al. [101] created a system to enable privacy
    preserving crowd sourcing techniques to estimate different smart farming parameters.
    Cybersecurity perception is also changing among farmers and agribusiness owners.
    Geil et al. [91] conducted an assessment of cybersecurity practices in the United
    States agriculture industry. Insights from their work reflect that over half of
    the respondents have been victims of a computer security incident, demonstrating
    that even individuals working in agriculture can be impacted by cybersecurity
    incidents. Cyberbiosecurity [92] is a multidisciplinary domain consists of cybersecurity,
    bio-security, and cyber-physical security. It discusses how current and emerging
    information technologies affect the cybersecurity of large portion of U.S. economy
    which is based on food and agriculture (i.e. Bio-economy). As Peccoud et al. [102]
    discuss, food and agricultural sectors are immensely diverse and require advanced
    technologies and efficiencies that rely on computer technologies, big data, cloud-based
    data storage, and internet accessibility, at the same time are vulnerable to cybersecurity
    incidents. Based on our literature review, it can be emphasised that, there is
    a dearth of security related research done in smart farming domain. There are
    numerous unanswered important security questions and open research challenges
    as discussed in the following section. SECTION VI. Open Challenges and Research
    Areas This section discusses open research challenges for improving security and
    privacy in smart farming ecosystem, as well illustrated in Figure 5. These open
    problems have been divided into four subsections as follows. FIGURE 5. Open research
    challenges and future directions for cybersecurity in smart farming. Show All
    A. Access Control, Trust & Privacy Perspective The multi-layered architecture
    discussed in section II recognizes possibilities of cyber threat challenges, which
    needs to be addressed by extending and adapting current access control foundational
    research, as well as developing sophisticated access control solutions to assist
    dynamic and agile environments in cyber-physical systems like smart farms. In-farm
    and cross farm operations need authorized interaction among sensors and labor/farmers
    working at multiple farms operating different sets of smart devices. What kind
    of operations they can do must be checked, which may require single level or multiple
    level access control depending on the risk factor associated with the operation?
    For example, consider sowing the field with autonomous tractor as compared to
    turning ON an irrigation system during the rainy season. Delegation and revocation
    of access rights to operate on a farm must be automatically performed based on
    the contract agreement, for example, in case temporary labor hired during harvesting
    season. Such access control requirements need further investigation to be adopted
    in such dynamic environment. The notion of trust can also be developed where labor
    who has worked earlier or an equipment borrowed from a ‘known’ old friend may
    have higher trust level as compared to machine and manpower hired from co-operative
    market. Self-configurable AI assisted smart access control policies need to be
    developed in a sharing-dominated CPS domain like smart farming. Cyber physical
    systems introduce the notion of virtual objects (which can be created in cloud
    or edge environment) corresponding to real physical sensors. An important challenge
    here is the location of cyber entities created as a part of connection with cloud
    or edge environments, for example, AWS device shadows34 or Microsoft Azure device
    twins.35 Research needs to determine: a) how cyber entity will move from one cloud
    (or edge) to another if the corresponding device is borrowed from one farmer to
    another? b) how the control of virtual entities will be delegated to the lending
    farmer, whether both the farmers need to use same application? c) how the applications
    will allow to delegate access for machine operation? d) Can the virtual objects
    or equipment across farms communicate with each other, whether at the physical
    level or using the virtual entities? If it is the virtual entity across different
    accounts in the same cloud provider, how such interaction will take place? In
    case it is across different cloud providers, how cross cloud and federated cloud
    environments will ensure such trust levels? Suppose in case a farmer has borrowed
    an equipment from a friend farmer, will the original owner be able to have access
    to it, or the access will be completely revoked? Is it possible to control a device
    through different remote clouds? All are relevant questions in smart farming domain.
    Further, how to establish trust mechanisms among different cloud service providers
    which the farmer is using for services and alerts? Manufacturer of the device
    may hold digital twin [103] and the cloud used by farmers will get data from on-field
    sensor and the cloud provider via pre-defined and signed negotiations. Such negotiations
    can also define what kind of data will be shared with required permissions of
    the owner farmer. Another important question is, how to establish trust between
    physical sensor objects? One approach is sensors at the same farm trust each other
    more for the shared information as compared to sensors across different farms.
    IoT and CPS specific cross cloud access controls and related security models are
    still in infancy stage and need more attention. Livestock and animals also have
    sensors embedded, which require appropriate authorized access. However, current
    literature does not provide strong access control mechanisms that can restrict
    such operations and secure critical data sharing from cattle and livestock at
    the farm. These wearable and health monitoring devices are attached to livestock
    and collect sensitive data, which can be used by adversaries to control the animal
    or even effect the sale/purchase of a cattle, for example, having the information
    about which cow is having low milk production. Efficient access controls [104]–[106]
    are needed to safeguard such sensitive data in cloud, which needs more research
    considering the spate of breaches heard every now and then. Usually in case of
    wearable IoT devices, a human which has the device controls what kind of data
    he/she wants to be shared. However, it is not in case of livestock which has a
    master (like the owner of the farm or caretaker) to decide control. Also, as a
    cattle is sold/purchased and moves from one owner to another, relevant data sharing
    security policies need to be specified and will require automatically configured
    information sharing. Studies [107], [108] have shown vulnerabilities in human
    used fitness devices, however, such studies and research are still an open challenge
    in case of livestock devices. Since data is collected from smart devices spread
    across farms, different applications require to access to this data. Consequentially,
    it is important to limit the sharing of data across applications and across nearby
    friend farmers, who may also get some value or receive alerts for their farms.
    How and when to share such information requires adaptive security policies to
    control and supervise data transferred by sensors to the cloud platform. Further,
    if data is sharing across multi cloud systems, cross cloud trust also needs to
    be addressed. Appropriate attribute based fine grained access controls [109],
    [110] and privacy preserving schemes need to be deployed to ensure confidentiality
    of the data. Evidently, farmers must decide the level and type of data sharing
    needed to ensure the privacy of critical information. B. Data Perspective The
    most noticeable feature of smart farming is its communication ability between
    the smart devices, resulting in an unprecedented amount of generated data [7],
    [111]. This provides many challenges as discussed in section III and open doors
    for several research opportunities. Machine learning is an attractive solution
    for processing big data, and implementing effective security solutions. Insider
    data leakage detection has always been a daunting task as users already have legitimate
    access to the system, making it hard to detect and predict such attacks. Several
    research works have been conducted on insider data leakage [22], [112], [113];
    however, none has been targeting smart farming settings. Further investigation
    is needed to understand the possibility of adopting insider data leakage defense
    mechanisms into smart farming and whether unique characteristics of smart farming
    can help to improve these mechanisms. Smart farms are highly connected systems,
    which allow malware to easily propagate through the network infecting all interconnected
    devices. An interesting question is how to detect malware in smart farming IoT
    environment, especially considering all heterogeneous devices in place. For instance,
    a malware detection technique that works against a malware that infects smart
    farming equipment might not work against malware that infects edge or cloud systems
    since the malware’s end goal is different. Many AI assisted malware detection
    techniques [114]–[120] are proposed and used in practice; however, there are no
    smart-farming-specific malware detection techniques that consider the context
    and environment in which smart farms reside. Smart farms generate diverse and
    vast amount of unstructured data. It is almost impossible for one party to analyze
    and make use of the entire datasets. For this reason, threat information sharing
    is a viable approach for data security. For instance, each smart farm can employ
    a malware detection technique; however, it is guaranteed that none of these employed
    techniques is comprehensive enough to catch all types of malware. Information
    sharing between smart farms can prove very useful. It can be used as an asset
    to share threat information about attack patterns or malware that was detected
    by collaborating smart farms. In a similar case, if a deployed detection technique
    in a farm detected supplied water with high toxin content, it is relevant to share
    that information with nearby farms who may also be impacted by similar issue.
    This can save analysis cost and money for every participating smart farm as it
    prevents doing work that someone else already did before. What kind of data, meta-data
    or analysis can be shared remains an open question and what kind of threat information
    sharing process can be used remain an open question for resource constrained farmers.
    Smart farming is an emerging field, so it is highly likely to encounter zero-day
    attacks which have not been detected before. Anomaly detection [121]–[125] is
    a very appealing solution against such attacks. Anomaly detection techniques look
    for any abnormal behavior that deviates from the pre-established database of normal
    behavior. These normal behaviour profiles are constructed based on collection
    of historical observations and patterns. Building smart farms behavior profiles
    is a challenging task since their behaviors are so dynamic in nature. External
    factors are a major reason for this dynamism. For example, less irrigation is
    needed during a rainy weather than dry weather which will cause a different behavior
    for irrigation systems. Can weather forecast information be used as an indication
    of such change of behavior? What kind of data contribute to building smart farms
    behavior profiles? Do some data fields weigh more than others? These are all open
    research questions that need to be investigated. Detection mechanisms are used
    to detect faulty and compromised sensors by monitoring the data sent for any tampered
    or abnormal values. Employing a simple threshold based mechanism can easily be
    bypassed by an attacker, so in most cases, more sophisticated machine learning
    based mechanisms need to be deployed. However, smart attackers can still bypass
    these models by (1) exploiting the sensors and a little tweaking of data sent
    by these sensors just to lead the machine learning model in place to misclassify/mispredict
    the outcome (such attack is called adversarial machine learning attack), and (2)
    poisoning the model during training phase by injecting bad data into the model’s
    training database, and in turn get it to learn something it shouldn’t. Some research
    addressed mitigation against adversarial attacks; however, it is not clear whether
    these technologies can be adopted to smart farming domain which is very dominant
    on changing environment conditions. Another open research challenge is to create
    various artificial intelligence systems that collect and parse Cyber Threat Intelligence
    (CTI36) about smart devices, software, cloud systems etc. used in the smart farming
    ecosystem. These systems have been developed to collect CTI in other areas [126]–[129]
    and need to be extended to ensure coverage of various smart farming devices, equipment
    and software. C. Network Perspective Cybersecurity threats to smart farming and
    its devices include a diverse range of security risks due to certain characteristics
    of the underlying networking and communication technologies which are used in
    the domain. First, both virtual and physical communication environments get connected.
    Many IoT devices in a smart farm system are capable of functioning on the data
    they receive from their respective environments which shortens the distance between
    virtual and physical systems. While convenient for the users, it allows cyber
    threats to convert to physical consequences more quickly, thereby having a bigger
    impact. Second, devices and layers involved in a smart farm system create a complex
    communication environment. Hyper connected farming environments exist due to the
    growing availability and diversity of IoT devices. ‘Complex’ in this context means
    that large number of devices are working in a single smart farm environment such
    that dynamic interactions between them are possible. This complexity expands the
    capabilities of an environment, but at the cost of a wider attack surface. Smart
    farming like other emerging technologies is embracing new networking paradigms
    to tackle today’s sophisticated attacks. Software defined network (SDN) [130]–[132]
    is one such promising networking revolution. Through decoupling control plane
    from data plane and giving credit to network programmable, it offers interesting
    technical capabilities to network providers. This causes an intense adaption of
    SDN in almost every fields of networking, from data center networks to WANs, wireless,
    5G and recently IoT. Using SDN in smart farm networking is attracting to both
    academia and industry for certain reasons. SDN supports both physical and virtual
    networking scenarios very well. It also offers a reliable way of practicing networking
    in highly diverse and naturally heterogeneous smart farms networking environment.
    Moreover, using SDN, smart farms are able to form a holistic view of all the connected
    devices along with how they interact in a near real time manner. Such a holistic
    view not only improves agility, scalability, and manageability of smart farm networking
    but also empowers a large smart farm network to enforce robust security counter
    measure against possible sophisticated cyber attacks. It is important to research
    further the adaptability of SDN and other 5G related next generation communication
    technologies in smart farming and precision agriculture domain. SDN can enable
    smart farms to get the most benefit out of complex machine learning and AI algorithms
    to automate network management of large number of sensors, wireless and wired
    networks used in a smart farming ecosystem. It also facilitates implementing advanced,
    cross-layer network security solutions which are very time and resource consuming,
    if not impossible, otherwise. Finally, SDN expedites edge networking and hence
    cloud-based security-as-a-service delivery model becomes a more approachable solution
    in large smart farming deployments. D. Compliance and Supply Chain Perspective
    With the ubiquitous use of sensors, automated drones, blockchain, artificial intelligence
    integration, different agricultural businesses are falling back on compliance,
    regulation and cyber insurance to protect themselves [64]. With the development
    of targeted malware and other cyber threats, the entire food supply chain is at
    risk [12], [64]. A hostile actor specifically interested in disrupting the supply
    chain can target various organizations and companies that supply raw material
    to farms or process food for the end user. A potential solution to this problem
    is to develop industry standards that enable trust between various raw material
    suppliers and downstream food processors [64]. The development of these standards
    enforced by national governments through regulation, has been slow. One example
    of such a shortcoming, is the existence of a few cybersecurity standards for the
    many smart devices used in the food supply chain. Various legislation are being
    introduced to set ‘minimal cybersecurity operational standards for internet connected
    devices’. In specific cases where various governments do not wish to regulate
    these interactions, it is up to various agriculture businesses to protect themselves
    by asking their supply chain to ‘self-regulate’ cybersecurity best practices [64].
    Such developments can be pushed through market demands, competitive pressure,
    etc. The food supply chain also lacks robust cyber insurance policies. With the
    constant development of smart applications, AI, smart farming equipment, etc.
    cyber insurance providers are unable to predict and quantify various cyber risks
    involved in these systems. Specific research needs to be done so as to develop
    standard legal jargon and metrics to quantify cyber risk in smart farming. These
    will help create robust cyber insurance markets for precision agriculture. Various
    systems [133]–[136] also need to be built to make it easier for the end users
    to understand and parse these complex legal documents, cyber insurance policies,
    agreements, contracts, etc. Research on these open challenges will help wide adoption
    of precision agriculture technologies. SECTION VII. Conclusion The proliferation
    of smart devices with communication and sensing capabilities have unleashed plethora
    of user services, and at the same time made tasks more convenient and efficient
    for humans. However, wide adoption of such internet connected devices and data
    driven applications across various domains have raised security and privacy issues,
    making these systems vulnerable to cyber-attacks. This paper discusses such cybersecurity
    challenges in smart farming and elaborates open research questions. The paper
    first outlines a multi-layer smart farming architecture illustrating different
    entities pertinent to real time use-cases supported by edge and cloud environments.
    Based on the architecture, the paper outlines security and privacy issues and
    highlights different attacks scenarios in smart farms as well as scenarios affecting
    the entire food supply chain. Thereafter, this article surveys the state-of-the-art
    research and acknowledges important works related to cybersecurity in the domain.
    Finally, the paper illustrates several open challenges and research problems pertinent
    to security and privacy aspects in precision agriculture. We envision this paper
    will simulate research to solve platitude of security and data privacy issues
    in fast growing and economically important smart farming sector. ACKNOWLEDGMENT
    The authors would like to thank Dr. B. Leckie, Associate Professor in the School
    of Agriculture at Tennessee Technological University, for his domain expertise,
    insightful comments, and suggestions, to make this manuscript more comprehensible.
    (All authors contributed equally to this work.) Authors Figures References Citations
    Keywords Metrics Footnotes More Like This Enhanced real time system of evoting
    using finger print 2013 International Conference on Electronics, Computer and
    Computation (ICECCO) Published: 2013 Control and Communication Challenges in Networked
    Real-Time Systems Proceedings of the IEEE Published: 2007 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09003290.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Security and Privacy in Smart Farming: Challenges and Opportunities'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.21273/horttech.23.6.725
  analysis: '>'
  authors:
  - David Kohanbash
  - George Kantor
  - Todd Martin
  - Lauren Crawford
  citation_count: 25
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: '>'
  journal: HortTechnology (Alexandria, Va.)
  limitations: '>'
  pdf_link: https://journals.ashs.org/downloadpdf/journals/horttech/23/6/article-p725.pdf
  publication_year: 2013
  relevance_score1: 0
  relevance_score2: 0
  title: 'Wireless Sensor Network Design for Monitoring and Irrigation Control: User-centric
    Hardware and Software Development'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.25165/j.ijabe.20181101.3557
  analysis: '>'
  authors:
  - Xingye Zhu
  - Prince Chikangaise
  - Weidong Shi
  - Wenhua Chen
  - Shuxia Yuan
  citation_count: 26
  full_citation: '>'
  full_text: '>

    NOTIFICATIONS View Subscribe USER Username Password Remember me JOURNAL CONTENT
    Search Search Scope      All Authors Title Abstract Index terms Full Text      Browse
    By Issue By Author By Title DONATIONS FONT SIZE  INFORMATION For Readers For Authors
    For Librarians Journal Help OPEN JOURNAL SYSTEMS HOME ABOUT LOGIN REGISTER SEARCH
    CURRENT ARCHIVES ANNOUNCEMENTS MOST-CITED Home > Vol 11, No 1 (2018) > Zhu Review
    of intelligent sprinkler irrigation technologies for remote autonomous system
    Xingye Zhu, Prince Chikangaise, Weidong Shi, Wen-Hua Chen, Shouqi Yuan  Abstract  Changing
    of environmental conditions and shortage of water demands a system that can manage
    irrigation efficiently. Autonomous irrigation systems are developed to optimize
    water use for agricultural crops. In dry areas or in case of inadequate rainfall,
    irrigation becomes difficult. So, it needs to be automated for proper yield and
    handled remotely for farmer safety. The aim of this study is to review the needs
    of soil moisture sensors in irrigation, sensor technology and their applications
    in irrigation scheduling and, discussing prospects. The review further discusses
    the literature of sensors remotely communicating with self-propelled sprinkler
    irrigation systems, distributed wireless sensor networks, sensors and integrated
    data management schemes and autonomous sprinkler control options. On board and
    field-distributed sensors can collect data necessary for real-time irrigation
    management decisions and transmit the information directly or through wireless
    networks to the main control panel or base computer. Communication systems such
    as cell phones, satellite radios, and internet-based systems are also available
    allowing the operator to query the main control panel or base computer from any
    location at any time. Selection of the communication system for remote access
    depends on local and regional topography and cost. Traditional irrigation systems
    may provide unnecessary irrigation to one part of a field while leading to a lack
    of irrigation in other parts. New sensors or remotely sensing capabilities are
    required to collect real time data for crop growth status and other parameters
    pertaining to weather, crop and soil to support intelligent and efficient irrigation
    management systems for agricultural processes. Further development of wireless
    sensor applications in agriculture is also necessary for increasing efficiency,
    productivity and profitability of farming operations. Keywords: intelligent sprinkler
    irrigation, precision agriculture, soil moisture sensors, wireless sensor network,
    remote data management, autonomous system DOI: 10.25165/j.ijabe.20181101.3557  Citation:
    Zhu X Y, Chikangaise P, Shi W D, Chen W H, Yuan S Q. Review of intelligent sprinkler
    irrigation technologies for remote autonomous system. Int J Agric & Biol Eng,
    2018; 11(1): 23–30.  Keywords  intelligent sprinkler irrigation, precision agriculture,
    soil moisture sensors, wireless sensor network, remote data management, autonomous
    system  Full Text: PDF References  Luo X W, Liao J, Hu L, Zhang Y, Zhou Z Y. Improving
    agricultural mechanization level to promote agricultural sustainable development.
    Transactions of the CSAE, 2016; 32(1): 1–11. (in Chinese) Giagnocavo C, Bienvenido
    F, Li M, Zhao Y R, Sanchez-Molina J A, Yang X T. Agricultural cooperatives and
    the role of organisational models in new intelligent traceability systems and
    big data analysis. Int J Agric & Biol Eng, 2017; 10(5): 115–125. Wolfert S, Ge
    L, Verdouw C, Bogaardt M J. Big data in smart farming: A review. Agricultural
    Systems, 2014; 153:69–80. Shah N G, Das I. Precision irrigation sensor network
    based irrigation, problems, perspectives and challenges of agricultural water
    management. IIT Bombay, India, 2012; pp. 217–232. Yuan S Q, Darko R O, Zhu X Y,
    Liu J P, Tian K. Optimization of movable irrigation system and performance assessment
    of distribution uniformity under varying conditions. Int J Agric & Biol Eng, 2017;
    10(1): 72–79. Thompson R B, Gallardo M, Valdez L C, Fernández M D. Using plant
    water status to define threshold values for irrigation management of vegetable
    crops using soil moisture sensors. Agric Water Manag, 2007; 88: 147–158. Hsiao
    T C, Steduto P, Fereres E. A systematic and quantitative approach to improve water
    use efficiency in agriculture. Irrig Sci, 2007; 25: 209–231. Sadeghi S H, Peters
    T, Shafii B, Amini M Z, Stöckle C. Continuous variation of wind drift and evaporation
    losses under a linear move irrigation system. Agric Water Manag, 2017; 182 (3):
    39–54. Zhu M, Zhou X Q, Zhai Z F. Research progresses in technological innovation
    and integration of agricultural engineering. Int J Agric & Biol Eng, 2016; 9(6):
    1－9. Keller J, Bliesner R D. Sprinkler and trickle irrigation. The Blackburn Press,
    Caldwell, 2000. Peters R T, Evett S R. Spatial and temporal analysis of crop stress
    using multiple canopy temperature maps created with an array of center-pivot-mounted
    infrared thermometers. Transactions of ASABE, 2007; 50(3): 919–927. Zhu X Y, Peters
    T, Neibling H. Hydraulic performance assessment of LESA at low pressure. Irrig
    Drain, 2016; 65(4): 530–536. Liu J P, Yuan S Q, Li H, Zhu X Y. Experimental and
    combined calculation of variable fluidic sprinkler in agriculture irrigation.
    Agricultural Mechanization in Asia, Africa, and Latin America, 2016; 47(1): 82–88.
    Shankar V, Ojha C S P, Prasad K S H. Irrigation scheduling for maize and Indian-mustard
    based on daily crop water requirement in a semi-arid region, International Journal
    of Civil and Environmental Engineering, 2012; 6: 476–485. Lan Y B, Thomson S J,
    Huang Y B, Hoffmann W C, Zhang H H. Current status and future directions of precision
    aerial application for site-specific crop management in the USA. Comput Electron
    Agric, 2010; 74(1): 34–38. Li L H, Zhang X Y, Qiao X D, Liu G M. Analysis of the
    decrease of center pivot sprinkling system uniformity and its impact on maize
    yield. Int J Agric & Biol Eng, 2016; 9(4): 108–119. Duan F Y, Liu J R, Fan Y S,
    Chen Z, Han Q B, Cao H. Influential factor analysis of spraying effect of light
    hose-fed traveling sprinkling system. Journal of Drainage and Irrigation Machinery
    Engineering, 2017; 35(6): 541–546. (in Chinese) Lin Y Y, Zhang Z X, Xu D, Nie
    T Z. Effect of water and fertilizer coupling optimization test on water use efficiency
    of rice in black soil regions. Journal of Drainage and Irrigation Machinery Engineering,
    2016; 34(2): 151–156. Yan H J. Study on water distribution irrigation uniformity
    of center pivot and later move irrigation system based on variable rate technology.
    Doctoral Thesis, China Agricultural University, 2005; pp.95–96. (in Chinese) Peters
    T R, Evett S R. Automation of a center pivot using the temperature-time threshold
    method of irrigation scheduling. J Irrig Drain Eng ASCE, 2008; 134(1): 286–291.
    Sadler E J, Evans R G, Stone K C, Camp C R. Opportunities for conservation with
    precision irrigation. Journal of Soil and Water Conservation, 2005; 60(6): 371–379.
    Zhu X Y, Yuan S Q, Liu J P. Effect of sprinkler head geometrical parameters on
    hydraulic performance of fluidic sprinkler. J Irrig Drain Eng ASCE, 2012; 138(11):
    1019–1026. Buchleiter G W, Camp C, Evans R G, King B A. Technologies for variable
    water application with sprinklers In: Proc. 4th Decennial Natl. Irrigation Symp.
    Phoenix, AZ. Edited by Evans R G, Benham B L, and Trooien T P. November 14-16,
    2000. ASAE, St. Joseph, MI. (Publication 701P0004), 2000; pp. 316–321. Evans R
    G, Buchleiter G W, Sadler E J, King B A, Harting G B. Controls for precision irrigation
    with self-propelled systems. In: Proc. 4th Decennial Natl. Irrigation Symp. Phoenix,
    AZ. Edited by Evans R G, Benham B L, and Trooien T P. November 14-16, 2000. ASAE,
    St. Joseph, MI. (Publication 701P0004), 2000; pp. 322–331. Sadler E J, Evans R
    G, Buchleiter G W, King B A, Camp C R. Site-specific irrigation - management and
    control. In: Proc. 4th Decennial Natl. Irrigation Symp. Phoenix, AZ. Edited by
    Evans R G, Benham B L, and Trooien T P. November 14-16, 2000. ASAE, St. Joseph,
    MI. (Publication 701P0004), 2000; pp. 304–315. Perry C D, Dukes M D, Harrison
    K A. Effects of variable-rate sprinkler cycling on irrigation uniformity. ASABE
    Paper No. 041117. St. Joseph, MI: ASABE, 2004. Christiansen J E. Irrigation by
    sprinkling. California Agricultural Experiment Station. Bulletin 670. University
    of California, Berkeley, CA, 1942. McCarthy A C, Hancock N H, Raine S R. VARIwise:
    A general-purpose adaptive control simulation framework for spatially and temporally
    varied irrigation and sub-field scale. Comput Electron Agric, 2010; 70: 117–128.
    Gowda P H, Chávez J L, Colaizzi P D, Evett S R, Howell T A, Tolk J A. ET mapping
    for agricultural water management: present status and challenges. Irrig Sci, 2008;
    26: 223–237. Mahan J R, Conaty W, Neilsen J, Payton P, Cox S B. Field performance
    in agricultural settings of a wireless temperature monitoring system based on
    a low-cost infrared sensor. Comput Electron Agric, 2010; 71: 176–181. Gil E, Arnó
    J, Llorens J, Sanz R, Llop J, Rosell J R, et al. Advanced technologies for the
    improvement of spray application techniques in Spanish viticulture: An overview.
    Sensors, 2014; 14(1): 691–708. Darko R O, Yuan S Q, Liu J P, Yan H F, Zhu X Y.
    Overview of advances in improving uniformity and water use efficiency of sprinkler
    irrigation. Int J Agric & Biol Eng, 2017; 10(2): 1–15. Peters R T, Evett S R.
    Using low-cost GPS receivers for determining field position of mechanical irrigation
    systems. Appl Engr Agric, 2005; 21(5): 841–845. Liu J P, Yuan S Q, Li H, Zhu X
    Y. A theoretical and experimental study of the variable-rate complete fluidic
    sprinkler. Appl Engr Agric, 2013; 29(1): 17–24. Liu J P, Yuan S Q, Li H, Zhu X
    Y. Numerical simulation and experimental study on a new type variable-rate fluidic
    sprinkler. Journal of Agricultural Science and Technology, 2013; 15(3): 569–581.
    Lan Y B, Chen S D, Fritz B K. Current status and future trends of precision agricultural
    aviation technologies. Int J Agric & Biol Eng, 2017; 10(3): 1–17. Xuan C Z, Wu
    P, Zhang L N, Ma Y H, Liu Y Q. Compressive sensing in wireless sensor network
    for poultry acoustic monitoring. Int J Agric & Biol Eng, 2017; 10(2): 94–102.
    Camilli A, Cugnasca C E, Saraiva A M, Hirakawa A R, Correa P L P. From wireless
    sensors to field mapping: anatomy of an application for precision agriculture.
    Comput Electron Agric, 2007; 58(1): 25–36. Wang P, Luo X W, Zhou Z Y, Zang Y,
    Hu L. Key technology for remote sensing information acquisition based on micro
    UAV. Transactions of the CSAE, 2014; 30(18): 1–12. (in Chinese) Ma H Q, Huang
    W J, Jing Y S. Wheat powdery mildew forecasting in filling stage based on remote
    sensing and meteorological data. Transactions of the CSAE, 2016; 32(9): 165–172.
    (in Chinese) Zhu H P, Masoud S, Robert D F. A portable scanning system for evaluation
    of spray deposit distribution. Comput Electron Agric, 2011; 76: 38–43. Shock C
    C, David R J, Shock C A, Kimberling C A. Innovative, automatic, low cost reading
    of Watermark soil moisture sensors. In Proc. 1999 Irrigation Association Technical
    Conference, The Irrigation Association, Falls Church, VA, 1999; pp.147–152. Andales
    A A, Bauder T A, Arabi M. A mobile irrigation water management system using a
    collaborative GIS and weather station networks. In: Ahuja L R, Ma L, Lascano R.
    (Eds.), Practical Applications of Agricultural System Models to Optimize the Use
    of Limited Water, Advances in Agricultural Systems Modeling. ASA, CSSA, and SSSA,
    Madison, WI, USA, 2014; pp. 53–84. Zhang H H, Lan Y B, Charles P C S, Westbrook
    J, Hoffmann W C, Yang C H. Fusion of remotely sensed data from airborne and ground-based
    sensors to enhance detection of cotton plants. Comput Electron Agric, 2013; 93:
    55–59. Song Y, Sun H, Li M, Zhang Q. Technology application of smart spray in
    agriculture: A review. Intelligent Automation and Soft Computing, 2015; 21(3):
    319–333. Andrade-Sánchez P, Upadhyaya S K, Jenkins B M. Development, construction,
    and field evaluation of a soil compaction profile sensor, Transactions of the
    ASABE, 2007; 50(3): 719−725. Willers J L, Jenkins J N, Ladner W L, Gerard P D,
    Boykin D L, Hood K B. Site-specific approaches to cotton insect control. Sampling
    and remote sensing analysis techniques. Precision Agriculture, 2005; 6: 431–452.
    Han X Z, Kim H J, Jeon C W, Moon H C, Kim J H. Development of a low-cost GPS/INS
    integrated system for tractor automatic navigation. Int J Agric & Biol Eng, 2017;
    10(2): 123–131. Kang F, Pierce F J, Walsh D B, Zhang Q, Wang S. An automated trailer
    sprayer system for targeted control of cutworm in vineyards. Transactions of the
    ASABE, 2011; 54(4): 1511–1519. Mulla D J. Twenty five years of remote sensing
    in precision agriculture: Key advances and remaining knowledge gaps. Biosyst Eng,
    2013; 114(4): 358–371. Piekarczyk J. Application of remote sensing in agriculture.
    Geoinformatica Polonica, 2014; 13(1): 69–75. Montoya F G, Gómez J, Cama A, Sierra
    A Z, Martínez F, de la Cruz J L, et al. A monitoring system for intensive agriculture
    based on mesh networks and the android system. Comput Electron Agric, 2013; 99:
    14–20. Wu C, Tang Y, Tang L D, Chen J, Li K. Characteristic parameter wireless
    monitoring system of hydraulic turbine based on Android. Journal of Drainage and
    Irrigation Machinery Engineering, 2017; 35(4): 362–368. (in Chinese) Huang Y B,
    Thomson S J, Brand H J, Reddy K N. Development of low-altitude remote sensing
    systems for crop production management. Int J Agric & Biol Eng, 2016; 9(4): 1–11.
    Yu F H, Xu T Y, Du W, Ma H, Zhang G S, Chen C L. Radiative transfer models (RTMs)
    for field phenotyping inversion of rice based on UAV hyperspectral remote sensing.
    Int J Agric & Biol Eng, 2017; 10(4): 150–157. Wang P, Zhang J X, Lan Y B, Zhou
    Z Y, Luo X W. Radiometric calibration of low altitude multispectral remote sensing
    images. Transactions of the CSAE, 2014; 30(19): 199–206. (in Chinese) Liang Q,
    Yuan D, Wang Y, Chen H H. A cross-layer transmission scheduling scheme for wireless
    sensor networks. Computer Communications, 2007; 30: 2987–2994. King B A, Wall
    R W, Wall L R. Supervisory control and data acquisition system for closed-loop
    center pivot irrigation. ASABE Paper No. 002020. St. Joseph, MI: ASABE, 2000.
    Wall R W, King B A. Incorporating plug and play technology into measurement and
    control systems for irrigation management. ASABE Paper No. 042189. St. Joseph,
    MI: ASABE, 2004. O’Shaughnessy S A, Evett S R. Developing wireless sensor networks
    for monitoring crop canopy temperature using a moving sprinkler system as a platform.
    Appl Engr Agric, 2010; 26(2): 331–341. Vellidis G, Tucker M, Perry C, Kvien C,
    Bednarz C. A real-time wireless smart sensor array for scheduling irrigation.
    Comput Electron Agric, 2008; 61(1): 44–50. Pierce F J, Elliott T V. Regional and
    on-farm wireless sensor networks for agricultural systems in eastern Washington.
    Comput Electron Agric, 2008; 61(1): 32–43. Diaz S E, Perez J C, Mateos A C, Marinescu
    M C, Guerra B B. A novel methodology for the monitoring of the agricultural production
    process based on wireless sensor networks. Comput Electron Agric, 2011; 76: 252–265.
    Kim Y, Evans R G, Iversen W M. Remote sensing and control of an irrigation system
    using a wireless sensor network. IEEE Transactions on Instrumentation and Measurement,
    2008; 57(7): 1379–1387. Kim Y, Evans R G. Software design for wireless sensor-based
    site-specific irrigation. Comput Electron Agric, 2009; 66(2): 159–165. Zhang Z.
    Investigation of wireless sensor networks for precision agriculture. ASAE/CSAE
    Annual International Meeting. Paper No. 041154. St. Joseph, MI: ASAE, 2004. Oksanen
    T, Ohman M, Miettinen M, Visala A. Open configurable control system for precision
    farming. ASABE Paper No. 701P1004. St. Joseph, MI: ASABE, 2004. Lee W S, Burks
    T F, Schueller J K. Silage yield monitoring system. ASABE Paper No. 021165. St.
    Joseph, MI: ASABE, 2002. Dowla F. Handbook of RF and wireless technologies. Burlington,
    MA: Elsevier Science, 2006. Li Y, Ephremides A. A joint scheduling, power control,
    and routing algorithm for ad hoc wireless networks. Ad Hoc networks, 2007; 5(7):
    959–973. Demirkol I, Esroy C. Energy and delay optimized contention for wireless
    sensor networks. Computer Networks, 2009; 53: 2106–2119. Hebel M A. Meeting wide-area
    agricultural data acquisition and control challenges through Zigbee wireless network
    technology. Proc. International Conference of Computers in Agriculture and Natural
    Resources. July 24-26, 2006. Lake Buena Vista, FL. 2006; pp. 234–239. Goense D,
    Thelen J. Wireless sensor networks for precise phytophthora decision support.
    Proc. ASAE Annual International Meeting, July 17-20, 2005, Tampa, Florida. Paper
    No. 053099. 2005. Andrade-Sanchez P, Pierce F J, Elliott T V. Performance assessment
    of wireless sensor networks in agricultural settings. St. Joseph, Mich.: ASABE,
    Paper No. 073076, 2007. Blonquist J M, Jones S B, Robinson D A. Precise irrigation
    scheduling for turfgrass using a subsurface electromagnetic soil moisture sensor.
    Agric Water Manag, 2006; 84: 153–165. Huang Y B, Thomson S J, Lan Y B, Maas S
    J. Multispectral imaging systems for airborne remote sensing to support agricultural
    production management. Int J Agric & Biol Eng, 2010; 3(1): 50–62. Son N T, Chen
    C F, Chen C R, Chang L, Duc H, Nguyen L. Prediction of rice crop yield using MODIS
    EVI-LAI data in the Mekong Delta, Vietnam. International Journal of Remote Sensing,
    2013; 34(20): 7275–7292. Johnson D M. An assessment of pre- and within-season
    remotely sensed variables for forecasting corn and soybean yields in the United
    States. Remote Sensing of Environment, 2014; 141(4): 116–128. Bhattacharya B K,
    Chattopadhyay C. A multi-stage tracking for mustard rot disease combining surface
    meteorology and satellite remote sensing. Comput Electron Agric, 2013; 90: 35–44.
    Jonas F, Gunter M. Multi-temporal wheat disease detection by multi-spectral remote
    sensing. Precision Agriculture, 2007; 8(3): 161–172. Berk P, Hocevar M, Stajnko
    D, Belsak A. Development of alternative plant protection product application techniques
    in orchards, based on measurement sensing systems: A review. Comput Electron Agric,
    2016; 124: 273–288. Van H L, Tang X. An efficient algorithm for scheduling sensor
    data collection through multi-path routing structures. Journal of Network and
    Computer Applications, 2014; 38(2): 150–162. Hutchinson M, Oh H, Chen W H. A review
    of source term estimation methods for atmospheric dispersion events using static
    or mobile sensors. Information Fusion, 2017; 36 (11): 130–148. Wu B F, Gommes
    R, Zhang M, Zeng H W, Yan N N, Zou W T, et al. Global crop monitoring: a satellite-based
    hierarchical approach. Remote Sensing, 2015; 7(4): 3907–3933. Sherine M, Abd E
    K, Basma M, Mohammad E B. Precision farming solution in Egypt using the wireless
    sensor network technology. Egyptian Informatics Journal, 2013; 14: 221–233. Aqeel-Ur-Rehman,
    Abbasi A Z, Islam N, Shaikh Z A. A review of wireless sensors and networks applications
    in agriculture. Comput Stand Interfaces, 2014; 36: 263–270. Blonquist J M, Jones
    S B, Robinson D A. Precise irrigation scheduling for turf grass using a subsurface
    electromagnetic soil moisture sensor, Agric Water Manag, 2006; 84: 153–165. Dias
    P C, Roque W, Ferreira E C, Siqueira Dias J A. A high sensitivity single-probe
    heat pulse soil moisture sensor based on a single non junction transistor. Comput
    Electron Agric, 2013; 96: 139–147. Xiao D, Feng J, Wang N, Luo X, Hu Y. Integrated
    soil moisture and water depth sensor for paddy fields. Comput Electron Agric,
    2013; 98: 214–221. Kim Y, Evans R G, Iversen W M. Evaluation of closed-loop site-specific
    irrigation with wireless sensor network. J Irrig Drain Eng ASCE, 2009; 135(1):
    25–31. Cao H, Guo F T, Fan Y S, Duan F Y, Han Q B, Jia Y H, et al. Running speed
    and pressure head loss of the light and small sprinkler irrigation system. Journal
    of Drainage and Irrigation Machinery Engineering, 2016; 34(2): 179–184. (in Chinese)
    Cai S B, Zhu D L, Ge M S, Liu K N, Li D. Photovoltaic optimization of solar-powered
    linear move sprinkler irrigation system. Journal of Drainage and Irrigation Machinery
    Engineering, 2017; 35(5): 417–423. (in Chinese) Bautista-Capetillo C, Robles O,
    Salinas H, Playán E. A particle tracking velocimetry technique for drop characterization
    in agricultural sprinklers. Irrig Sci, 2014; 32(6): 437–447. Sayyadi H, Nazemi
    A H, Sadraddini A A, Delirhasannia R. Characterising droplets and precipitation
    profiles of a fixed spray-plate sprinkler. Biosyst Eng, 2014; 119(1): 13–24. Liu
    J P, Liu X F, Zhu X Y, Yuan S Q. Droplet characterisation of a complete fluidic
    sprinkler with different nozzle dimensions. Biosyst Eng, 2016; 148(6): 90–100.
    Liu J P, Yuan S Q, Darko R O. Characteristics of water and droplet size distributions
    from fluidic sprinklers. Irrig Drain, 2016; 65(4): 522–529. Zhu X Y, Yuan S Q,
    Jiang J Y, Liu J P, Liu X F. Comparison of fluidic and impact sprinklers based
    on hydraulic performance. Irrig Sci, 2015; 33(5): 367–374. Zhang L, Merley G P,
    Pinthong K. Assessing whole-field sprinkler application uniformity. Irrig Sci,
    2013; 31: 87–105. Dwomoh F A, Yuan S, Hong L. Field performance characteristics
    of fluidic sprinkler. Appl Engr Agric, 2013; 29(4): 529–536. Karmeli D, Peri G.
    Basic principles of pulse irrigation. J Irrig Drain Div ASCE, 1974; 100(IR3):
    309–319. Wang Y X, Xu S S, Li W B, Kang F, Zheng Y J. Identification and location
    of grapevine sucker based on information fusion of 2D laser scanner and machine
    vision. Int J Agric & Biol Eng, 2017; 10(2): 84–93. Evans R G, Harting G B. Precision
    irrigation with center pivot systems on potatoes. In Proceedings of ASCE 1999
    International Water Resources Engineering Conference. R. Walton and R.E. Nece,
    eds. Reston, VA: ASCE, 1999; CD-ROM. Evans R G, Han S, Schneider S M, Kroeger
    M W. Precision center pivot irrigation for efficient use of water and nitrogen.
    In Proceedings of the 3rd International Conference on Precision Agriculture. Eds.
    Roberts P C, Rust R H, Larsen W E. Madison, WI: ASA-CSSA, 1996; pp.75–84. Bao
    Y, Liu J P, Liu X F, Tian K, Zhang Q. Experimental study on effects of pressure
    on water distribution model of low-pressure sprinkler. Journal of Drainage and
    Irrigation Machinery Engineering, 2016; 34(1): 81–85. (in Chinese) Chávez J L,
    Pierce F J, Evans R G. Compensating inherent linear move water application errors
    using a variable rate irrigation system. Irrig Sci, 2010; 28(3): 203–210. Chávez
    J L, Pierce F J, Elliot T V, Evans R G, Kim Y, Iversen W M. A remote irrigation
    monitoring and control system for continuous move systems. Par B: field testing
    and results. Precision Agriculture, 2010; 11(1): 11–26. King B A, Kincaid D C.
    A variable flow rate sprinkler for site-specific irrigation management. Appl Engr
    Agric, 2004; 20(6): 765–770. Liu J P, Liu W Z, Bao Y, Zhang Q, Liu X F. Drop size
    distribution experiments of gas-liquid two phases fluidic sprinkler. Journal of
    Drainage and Irrigation Machinery Engineering (JDIME), 2017; 35(8): 731–736. (in
    Chinese) Tian K, Zhu X Y, Wan J H, Bao Y. Development and performance test of
    lateral move irrigation system. Journal of Drainage and Irrigation Machinery Engineering,
    2017; 35(4): 357–361. (in Chinese) Wan J H, Zhu X Y, Tian K, Bao Y. Translocating
    speed ration effect on water distribution uniformity of lightweight lateral move
    irrigation system. Water Saving Irrigation, 2016; (9): 87–89, 93. (in Chinese)
    Camp C R, Sadler E J, Evans D E, Usrey L J, Omary M. Modified center pivot system
    for precision management of water and nutrients. Appl Engr Agric, 1998; 14(1):
    23–31. Lyle W M, Bordovsky J P. Low energy precision application (LEPA) irrigation
    system. Transactions of ASABE, 1981; 26(5): 1241–1245. Roth R L, Gardner B R.
    Modified self-moving irrigation system for water-nitrogen crop production studies.
    ASAE paper No.89-0502, St. Joseph, MI: ASAE, 1989.    Copyright (c)    2023-2026
    Copyright IJABE Editing and Publishing Office'
  inline_citation: '>'
  journal: International Journal of Agricultural and Biological Engineering
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Review of intelligent sprinkler irrigation technologies for remote autonomous
    system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.30574/wjarr.2023.18.3.1241
  analysis: '>'
  authors:
  - Martin Otieno
  citation_count: 3
  full_citation: '>'
  full_text: ">\nCorresponding author: Martin Otieno \nCopyright © 2023 Author(s)\
    \ retain the copyright of this article. This article is published under the terms\
    \ of the Creative Commons Attribution Liscense 4.0. \nAn extensive survey of smart\
    \ agriculture technologies: Current security posture \nMartin Otieno * \nSchool\
    \ of Informatics and Innovative Systems, Jaramogi Oginga Odinga University of\
    \ Science and Technology, Kenya. \nWorld Journal of Advanced Research and Reviews,\
    \ 2023, 18(03), 1207–1231 \nPublication history: Received on 15 May 2023; revised\
    \ on 22 June 2023; accepted on 24 June 2023 \nArticle DOI: https://doi.org/10.30574/wjarr.2023.18.3.1241\
    \ \nAbstract \nSmart agriculture, enabled by advanced technologies such as internet\
    \ of things, artificial intelligence and data analytics, \noffers immense potential\
    \ for optimizing farming practices and increasing agricultural productivity. However,\
    \ as the \nadoption of smart agriculture systems continues to grow, it brings\
    \ forth various security issues that need to be \naddressed to protect farming\
    \ operations, data integrity, and privacy. This paper provides an overview of\
    \ the security \nissues in smart agriculture, including vulnerabilities in internet\
    \ of things devices, lack of standardized security \nprotocols, limited security\
    \ awareness among farmers, and challenges in securing data and communication networks.\
    \ In \naddition, it highlights the need for robust security measures to mitigate\
    \ risks such as unauthorized access, data \nbreaches, and disruption of operations.\
    \ Moreover, emphasis should be laid on the importance of collaborative efforts\
    \ \nbetween technology providers, agricultural stakeholders, researchers, and\
    \ policymakers to develop effective security \nsolutions and standards that ensure\
    \ the trustworthiness and resilience of smart agriculture systems. \nKeywords:\
    \ Smart Agriculture; Precision Agriculture; Attacks; Security; Threats; Vulnerabilities\
    \ \n1. Introduction\nSmart farming, also known as precision agriculture, is an\
    \ innovative approach to agricultural practices that leverages \nadvanced technologies\
    \ to optimize efficiency, productivity, and sustainability in farming operations\
    \ [1]-[4]. As shown \nin Fig. 1, it involves the integration of various technologies,\
    \ such as Internet of Things (IoT), artificial intelligence (AI), \ndata analytics,\
    \ robotics, and remote sensing, to make informed decisions and automate processes\
    \ in agricultural \nsystems. The primary goal of smart farming is to enhance crop\
    \ production, minimize resource waste, reduce \nenvironmental impact, and improve\
    \ overall profitability. By utilizing a network of interconnected devices and\
    \ sensors \n[5], farmers can collect real-time data on various factors such as\
    \ soil moisture levels, weather conditions, crop health, \nand pest infestations.\
    \ This data is then analyzed to provide actionable insights, allowing farmers\
    \ to make data-driven \ndecisions and implement precise interventions [6]-[8].\
    \ \nOne of the key components of smart farming is the use of IoT devices and sensors.\
    \ These devices are deployed \nthroughout the farmland to monitor and control\
    \ different variables [8]-[11]. For instance, soil moisture sensors can \nprovide\
    \ information about the water requirements of crops, enabling farmers to apply\
    \ water precisely where and when \nit is needed, reducing water wastage. Similarly,\
    \ weather stations and satellite imagery can offer accurate and localized \nweather\
    \ data, helping farmers optimize planting schedules and manage crop diseases.\
    \ \nAccording to [12], artificial intelligence plays a crucial role in smart farming\
    \ by analyzing the collected data and \nproviding intelligent recommendations.\
    \ Machine learning algorithms can identify patterns and correlations in the data,\
    \ \nenabling predictive models for crop growth, pest outbreaks, and yield estimation\
    \ [13]-[16]. This information assists \nfarmers in making informed decisions regarding\
    \ the optimal use of fertilizers, pesticides, and other inputs, leading to \n\
    improved resource management and reduced environmental impact. As explained in\
    \ [17], robots and drones can be \nWorld Journal of Advanced Research and Reviews,\
    \ 2023, 18(03), 1207–1231 \n1208 \nutilized in smart farming to automate labor-intensive\
    \ tasks. Robots can perform activities like seeding, weeding, and \nharvesting\
    \ with precision and efficiency, reducing the need for manual labor and increasing\
    \ productivity [18]-[20]. As \nshown in Fig.2, drones equipped with cameras and\
    \ sensors [21] can gather high-resolution images and collect data over \nlarge\
    \ areas, helping farmers monitor crop health, detect early signs of diseases or\
    \ nutrient deficiencies, and identify \nareas requiring attention. \n \nFigure\
    \ 1 Typical smart agriculture scenario \n \nFigure 2 Drones in smart agriculture\
    \ \nResearchers in [22] point out that smart agriculture relies on various sensors\
    \ to collect real-time data about \nenvironmental conditions, crop health, soil\
    \ characteristics, and livestock parameters. These sensors provide critical \n\
    insights that enable farmers to make informed decisions and optimize farming practices.\
    \ As shown in Fig. 3, examples \nof sensors commonly used in smart agriculture\
    \ include weather sensors, soil moisture sensors, soil pH sensors, nutrient \n\
    sensors, crop health sensors, light sensors, livestock monitoring sensors, water\
    \ quality sensors, gas sensors and insect \ntraps sensors. Here, weather sensors\
    \ measure atmospheric conditions such as temperature, humidity, rainfall, wind\
    \ \nspeed, and solar radiation [23]–[26]. They help farmers understand weather\
    \ patterns, predict storms, and optimize \nirrigation schedules based on evapo-transpiration\
    \ rates. On the other hand, soil moisture sensors measure the water \ncontent\
    \ in the soil, allowing farmers to monitor [27] soil moisture levels and determine\
    \ irrigation needs. These sensors \nhelp prevent overwatering or underwatering,\
    \ optimize water usage, and prevent water stress in crops. However, soil \npH\
    \ sensors measure the acidity or alkalinity of the soil. By monitoring soil pH,\
    \ farmers can determine the soil's nutrient \navailability and adjust soil amendments\
    \ accordingly [28]. Maintaining optimal pH levels is crucial for healthy plant\
    \ \ngrowth and nutrient uptake. As explained in [29], nutrient sensors measure\
    \ the concentration of essential nutrients in \nthe soil, such as nitrogen, phosphorus,\
    \ and potassium. These sensors provide valuable data for precise fertilizer \n\
    application, ensuring that crops receive the right amount of nutrients for optimal\
    \ growth and yield. On the other hand, \ncrop health sensors detect indicators\
    \ of plant stress, diseases, and pests [30]. They can measure parameters such\
    \ as leaf \ntemperature, chlorophyll content, and vegetation indices to assess\
    \ crop health and detect early signs of disease or pest \ninfestation. This data\
    \ helps farmers take timely preventive measures and implement targeted pest management\
    \ \nWorld Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n\
    1209 \nstrategies. On their part, light sensors measure the intensity and quality\
    \ of light in the crop canopy [31]. They provide \ninformation about photosynthetic\
    \ activity, plant growth stages, and light requirements. This data helps optimize\
    \ \nlighting conditions in controlled environment agriculture (CEA) systems, such\
    \ as greenhouses or vertical farms. On the \nother hand, livestock monitoring\
    \ sensors are used to track parameters related to animal health and well-being\
    \ [32]. For \nexample, temperature sensors [33] can monitor body temperature,\
    \ activity sensors can track animal movement, and \nrumen pH sensors can assess\
    \ digestive health in ruminant animals. Livestock sensors enable early detection\
    \ of health \nissues and support proactive animal management. \n \nFigure 3 Smart\
    \ agriculture \nWater quality sensors measure parameters such as pH, dissolved\
    \ oxygen, conductivity, and turbidity in irrigation water \nsources or aquaculture\
    \ systems [34]. Monitoring water quality ensures that crops or aquatic organisms\
    \ receive clean \nand suitable water, preventing adverse effects on plant health\
    \ or aquatic ecosystems. However, gas sensors detect and \nmeasure the concentration\
    \ of gases, such as carbon dioxide (CO2) or ethylene, which are important indicators\
    \ of plant \nrespiration and ripening processes [35]. Gas sensors can be used\
    \ to optimize storage conditions and shelf life of \nharvested crops. On their\
    \ part, insect traps equipped with sensors and lures capture and monitor insect\
    \ populations \n[36]. These sensors help farmers assess pest infestation levels,\
    \ identify specific pest species, and implement targeted \npest management strategies.\
    \ These sensors, among others, provide critical data points that enable farmers\
    \ to monitor \nand manage agricultural systems effectively. Integrating sensor\
    \ data with advanced analytics and decision support \nsystems empowers farmers\
    \ to optimize resource allocation, improve crop yields, and make informed decisions\
    \ for \nsustainable and efficient farming practices. \nIn a nutshell, smart farming\
    \ holds great promise for transforming agriculture into a more sustainable and\
    \ productive \nindustry. By harnessing the power of technology and data, farmers\
    \ can optimize their operations, improve crop yields, \nconserve resources, minimize\
    \ environmental impact, and contribute to global food security in a rapidly evolving\
    \ world.  \nIn this paper, an extensive review of the current status of smart\
    \ agriculture technologies and their security posture is \ngiven. Towards the\
    \ end of this paper, some research gaps are identified which needs to be filled\
    \ by future researches.  \n2. Need for smart agriculture \nSmart agriculture,\
    \ or precision agriculture, is increasingly becoming a necessity due to several\
    \ pressing challenges and \nneeds in the agricultural sector. Table 1 discusses\
    \ some key reasons why smart agriculture is crucial. \n \n \nWorld Journal of\
    \ Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1210 \nTable 1 Necessity\
    \ of smart agriculture \nNecessity \nDiscussion \nResource Scarcity \nResources\
    \ such as water, land, and energy are limited and face increasing pressure due\
    \ to \npopulation growth and climate change [37]. Smart agriculture enables precise\
    \ resource \nmanagement, minimizing waste and maximizing the efficient [38] use\
    \ of inputs like water, \nfertilizers, and energy. \nCost Optimization \nTraditional\
    \ farming practices often involve overuse or misuse of inputs, leading to higher\
    \ \ncosts [39]. Smart agriculture allows farmers to make data-driven decisions,\
    \ optimizing the \nuse of fertilizers, pesticides, and water, thereby reducing\
    \ costs and increasing profitability \n[40]. \nLabor Efficiency and \nSafety \n\
    Farm labor shortages are a significant challenge in many regions. Smart agriculture\
    \ \nintroduces automation and robotics, reducing the reliance on manual labor\
    \ for tasks such \nas planting, weeding, and harvesting. This not only improves\
    \ efficiency [43] but also \nenhances worker safety by minimizing exposure to\
    \ hazardous conditions. \nClimate Change and \nEnvironmental \nSustainability\
    \ \nClimate change impacts agriculture through extreme weather events, changing\
    \ rainfall \npatterns, and the spread of pests and diseases. Smart agriculture\
    \ helps farmers adapt to \nclimate change by providing real-time data on weather\
    \ conditions, enabling timely \ninterventions, and reducing environmental impact\
    \ through optimized resource usage [44], \n[45]. \nTraceability \nand \nQuality\
    \ Assurance \nConsumers are increasingly concerned about the origin and quality\
    \ of the food they \nconsume [46], [47]. Smart agriculture technologies enable\
    \ improved traceability [48], \nallowing farmers to track the entire supply chain,\
    \ ensure food safety, and provide \ntransparent information to consumers. \nData-Driven\
    \ Decision \nMaking \nSmart agriculture generates vast amounts of data through\
    \ sensors, drones, and satellite \nimagery [49], [50]. Analyzing this data using\
    \ AI and data analytics helps farmers gain \nvaluable insights, make informed\
    \ decisions, and optimize farming practices for better \noutcomes [51]. \nPopulation\
    \ \nGrowth \nand Food Demand \nThe global population is projected to reach 9.7\
    \ billion by 2050, which will significantly \nincrease the demand for food. Smart\
    \ agriculture offers a way to increase agricultural \nproductivity and efficiency\
    \ to meet this growing demand [52]. \nCrop Monitoring and \nManagement \nSmart\
    \ agriculture technologies enable continuous monitoring [53] of crops, including\
    \ \nfactors like soil moisture, temperature, and nutrient levels. This data-driven\
    \ approach helps \nfarmers detect crop stress, diseases, and nutrient deficiencies\
    \ early on, allowing timely \ninterventions and reducing crop losses [54], [55].\
    \ \n \nBasically, the need for smart agriculture arises from the need to address\
    \ challenges such as population growth, resource \nscarcity, climate change, cost\
    \ optimization, and labor efficiency. By integrating advanced technologies, smart\
    \ agriculture \noffers the potential to transform traditional farming practices\
    \ into more sustainable, productive, and environmentally \nfriendly systems. \n\
    2.1. Technologies driving smart agriculture \nSmart agriculture is driven by various\
    \ technologies that enable advanced monitoring, automation, and decision-making\
    \ \nin agricultural practices. These technologies play a crucial role in optimizing\
    \ resource management, improving crop \nyields, and enhancing overall efficiency\
    \ in farming operations. Some of the prominent key driving technologies in smart\
    \ \nagriculture are presented in Fig. 4 and are discussed in the sub-sections\
    \ below. \n2.1.1. Internet of Things (IoT) \nIoT technology forms the backbone\
    \ of smart agriculture by connecting physical devices and sensors to the internet,\
    \ \nenabling data collection and remote monitoring [56]-[58]. IoT devices such\
    \ as weather stations, soil moisture sensors, \nand crop health sensors provide\
    \ real-time data on environmental conditions, plant growth, and livestock health.\
    \ This \ndata enables farmers to make data-driven decisions and optimize resource\
    \ allocation [59]. \nWorld Journal of Advanced Research and Reviews, 2023, 18(03),\
    \ 1207–1231 \n1211 \n \nFigure 4 Key technological drivers for smart agriculture\
    \ \n2.1.2. Remote Sensing and Satellite Imaging \nRemote sensing technologies,\
    \ including satellite imaging and aerial drones, provide valuable insights into\
    \ crop health, \nwater stress, and pest infestation [60]-[62]. These technologies\
    \ capture high-resolution images and multispectral data, \nallowing farmers to\
    \ monitor large agricultural areas and detect anomalies or crop stress indicators.\
    \ Remote sensing \nhelps in early pest detection, disease prevention, and precision\
    \ agriculture practices. \n2.1.3. Big Data Analytics \nThe ability to process\
    \ and analyze large volumes of data is vital in smart agriculture. Big data analytics\
    \ techniques \nextract meaningful insights from various data sources, including\
    \ weather data, soil data, sensor data, and historical crop \nrecords [63]-[67].\
    \ By analyzing this data, farmers can gain valuable insights into crop performance,\
    \ predict yield \noutcomes, optimize irrigation and fertilization, and identify\
    \ trends for better decision-making. \n2.1.4. Artificial Intelligence (AI) and\
    \ Machine Learning (ML) \nAI and ML technologies are instrumental in smart agriculture\
    \ applications. AI-powered algorithms and ML models can \nanalyze vast amounts\
    \ of data and generate predictive models for disease outbreak detection, crop\
    \ yield forecasting, and \npest management [68]-[71]. These technologies enable\
    \ automated decision-making, real-time monitoring, and \nautonomous operations\
    \ in smart agriculture systems. \n2.1.5. Robotics and Automation \nRobotics and\
    \ automation technologies are transforming traditional farming practices [72].\
    \ Autonomous robots and \ndrones equipped with sensors and cameras can perform\
    \ tasks like seeding, spraying, and harvesting with precision and \nefficiency\
    \ [73]-[76]. Robotic systems can also assist in weed detection and removal, reducing\
    \ the need for manual labor \nand minimizing the use of chemical herbicides. \n\
    2.1.6. Precision Agriculture and Variable Rate Technology (VRT) \nPrecision agriculture\
    \ utilizes technology to optimize resource application based on specific field\
    \ conditions [77]. VRT \nsystems analyze data from sensors [78] and mapping tools\
    \ to precisely deliver inputs such as water, fertilizers, and \npesticides. This\
    \ technology ensures that resources are used efficiently, minimizing waste and\
    \ environmental impact \nwhile maximizing crop productivity. \n2.1.7. Cloud Computing\
    \ and Edge Computing \nCloud computing enables the storage, processing, and analysis\
    \ of agricultural data on remote servers, providing \nscalability and accessibility\
    \ [79]-[83]. Edge computing, on the other hand, brings computing capabilities\
    \ closer to the \ndata source, reducing latency and enabling real-time decision-making\
    \ at the field level. Both cloud and edge computing \nsupport the seamless integration\
    \ of data from various sources and enable efficient data management and analysis\
    \ in \nsmart agriculture. \n2.1.8. Agricultural Robotics and Sensing \nAdvanced\
    \ robotic systems equipped with sophisticated sensors and actuators have the potential\
    \ to revolutionize \nagricultural practices [84], [85]. These systems can perform\
    \ tasks such as selective harvesting, precision spraying, and \nWorld Journal\
    \ of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1212 \nsoil sampling\
    \ with high accuracy and efficiency. Sensing technologies, including hyperspectral\
    \ imaging and \nmultispectral cameras, enable detailed crop analysis and monitoring.\
    \ \nIt is important to note that these  technologies are continuously evolving\
    \ and becoming more sophisticated, enabling \nfarmers to make data-driven decisions,\
    \ optimize resource allocation, and improve overall agricultural productivity.\
    \ As \nthese technologies continue to advance, they hold immense potential to\
    \ address the global challenges of food security, \nsustainable agriculture, and\
    \ environmental conservation. \n3. General challenges in smart agriculture \n\
    Although smart agriculture brings numerous benefits, there are several challenges\
    \ that need to be addressed for its \nwidespread adoption and successful implementation.\
    \ Some of the general challenges in smart agriculture are described \nin the sub-sections\
    \ below. \n3.1.1.  High Initial Investment \nThe upfront costs of implementing\
    \ smart agriculture technologies can be a significant barrier for many farmers,\
    \ \nespecially small-scale and resource-constrained operations. The cost of purchasing\
    \ and installing sensors, IoT devices, \ndrones, robotics, and data management\
    \ systems can be prohibitive [86], [87]. Governments, organizations, and \nstakeholders\
    \ need to provide financial support, incentives, and subsidies to make these technologies\
    \ more accessible. \n3.1.2. Limited Technical Expertise \nSmart agriculture requires\
    \ a certain level of technical expertise in areas such as data analytics, AI,\
    \ and IoT [88]-[91]. \nHowever, many farmers may lack the necessary knowledge\
    \ and skills to effectively implement and utilize these \ntechnologies. Training\
    \ programs, workshops, and educational initiatives are crucial to bridge this\
    \ knowledge gap and \nempower farmers to leverage smart agriculture solutions\
    \ effectively. \n3.1.3. Connectivity and Infrastructure \nSmart agriculture heavily\
    \ relies on reliable and high-speed internet connectivity, especially in rural\
    \ areas [92]. However, \nin some regions, internet infrastructure is inadequate\
    \ or nonexistent. Poor connectivity can hinder real-time data \ncollection, remote\
    \ monitoring [93], and the seamless operation of IoT devices [94], [95]. Governments\
    \ and private \nstakeholders must invest in improving rural connectivity to ensure\
    \ widespread adoption of smart agriculture. \n3.1.4. Data Privacy and Security\
    \ \nSmart agriculture involves the collection, storage, and analysis of vast amounts\
    \ of data, including sensitive information \nabout crops, farms, and farmers [96]-[99].\
    \ Ensuring data privacy and security is paramount to protect farmers' and \nconsumers'\
    \ interests. Strong data encryption, secure cloud storage, and robust cybersecurity\
    \ measures must be \nimplemented to prevent unauthorized access, data breaches,\
    \ and misuse of information. \n3.1.5. Data Interoperability and Integration \n\
    Smart agriculture systems often involve multiple technologies and platforms, which\
    \ may use different data formats and \nprotocols [100]-[104]. Ensuring seamless\
    \ data interoperability and integration across various systems can be \nchallenging.\
    \ Standardization of data formats, open APIs (Application Programming Interfaces),\
    \ and data-sharing \nprotocols are essential for efficient data exchange and collaboration\
    \ between different smart agriculture solutions. \n3.1.6. Adoption and User Acceptance\
    \ \nFarmers may be resistant to change or skeptical about adopting new technologies.\
    \ Lack of awareness, concerns about \ntechnology reliability, and the perceived\
    \ complexity of smart agriculture solutions can hinder adoption rates [105]-\n\
    [109]. Demonstrating the tangible benefits, providing training and support, and\
    \ showcasing successful case studies are \ncrucial to building trust and encouraging\
    \ widespread adoption. \n3.1.7. Data Management and Analysis \nSmart agriculture\
    \ generates large volumes of data, and effectively managing, analyzing, and interpreting\
    \ this data can \nbe overwhelming [110]-[114]. Farmers need user-friendly data\
    \ management tools and analytics platforms that can \nprocess and present data\
    \ in a meaningful way, providing actionable insights. Simplified data visualization,\
    \ user-friendly \ninterfaces, and user training can help farmers effectively utilize\
    \ the data generated. \nWorld Journal of Advanced Research and Reviews, 2023,\
    \ 18(03), 1207–1231 \n1213 \n3.1.8. Regulatory and Policy Frameworks \nAs smart\
    \ agriculture involves the use of new technologies, regulatory frameworks need\
    \ to keep pace with these \nadvancements. Issues related to data ownership, data\
    \ sharing, privacy regulations, and standardization should be \naddressed through\
    \ appropriate policies [115]-[117]. Governments need to establish clear guidelines\
    \ and regulations to \nensure ethical and responsible use of smart agriculture\
    \ technologies. \nBy addressing these challenges, stakeholders can promote the\
    \ adoption of smart agriculture and leverage its potential \nto revolutionize\
    \ the agricultural sector, improve productivity, and achieve sustainable and efficient\
    \ food production. \n3.2. Security issues in smart agriculture \nSmart agriculture,\
    \ like any other technological system, is susceptible to various security issues\
    \ that need to be addressed \nto ensure the integrity, confidentiality, and availability\
    \ of data and operations [118], [119]. Fig. 5 shows the various \nlayers of the\
    \ smart agriculture environment. \n \nFigure 5 Smart agriculture environment layers\
    \ \nAccording to [120], some of these security issues specific to smart agriculture\
    \ include unauthorized access, data privacy \nand confidentiality, data integrity,\
    \ network security, device security, physical security, supply chain security,\
    \ as well as \nawareness and training. Fig. 6 shows the layered depiction of these\
    \ smart agriculture security challenges. Unauthorized \nindividuals gaining access\
    \ to smart agriculture systems can disrupt operations, manipulate data, or even\
    \ cause physical \ndamage [122]-[123]. It is crucial to implement strong access\
    \ controls, such as secure authentication mechanisms, to \nprevent unauthorized\
    \ access to devices, networks, and data [124]. On the other hand, authors in [125]\
    \ explain that \nsmart agriculture involves the collection and storage of sensitive\
    \ data, including farm management information, crop \nyields, and farmer details.\
    \ Ensuring data privacy and confidentiality is essential to protect farmers' and\
    \ consumers' \ninterests. Robust encryption techniques, secure storage, and proper\
    \ data access controls should be implemented to \nsafeguard sensitive information\
    \ [126]-[129]. In addition, maintaining the integrity of data is crucial in smart\
    \ agriculture \nsystems. This is because any unauthorized modification, tampering,\
    \ or corruption of data can lead to incorrect decisions \nand impact the overall\
    \ farming operations. Implementing data validation mechanisms, digital signatures,\
    \ and secure \ncommunication channels can help ensure data integrity [130]-[134].\
    \ As explained in [135], smart agriculture systems \nrely on networks and communication\
    \ channels for data transmission. These networks are vulnerable to various threats\
    \ \nWorld Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n\
    1214 \nsuch as eavesdropping, data interception, and denial-of-service (DoS) attacks\
    \ [136]-[139]. Implementing secure \nnetwork protocols, firewalls, intrusion detection\
    \ systems, and regular network monitoring are essential to protect \nagainst network-based\
    \ attacks. \n \nFigure 6 Layered security challenges in smart agriculture \nIoT\
    \ devices, sensors, and actuators play a significant role in smart agriculture\
    \ [140]-[144]. However, these devices can \nbe potential entry points for attackers.\
    \ Ensuring the security of these devices through measures like strong \nauthentication,\
    \ regular firmware updates, and secure configurations is crucial to prevent unauthorized\
    \ access and \ncompromise of the entire system. Researchers in [145] discuss that\
    \ smart agriculture systems may include physical \ninfrastructure like weather\
    \ stations, drones, and robots. Securing these physical assets from theft, vandalism,\
    \ or \nphysical tampering is vital. Implementing access controls, surveillance\
    \ systems, and physical barriers can help protect \nthe physical components of\
    \ smart agriculture. On their part, the authors in [146] argue that smart agriculture\
    \ systems \nrely on various vendors and suppliers for hardware, software, and\
    \ services. Ensuring the security of the entire supply \nchain is crucial to prevent\
    \ the introduction of compromised or malicious components [147], [148]. Conducting\
    \ thorough \nvendor assessments, implementing secure development practices, and\
    \ performing regular security audits are important \nfor maintaining a secure\
    \ supply chain. In addition, human error and lack of awareness can contribute\
    \ to security \nvulnerabilities [149]. Farmers and operators should receive proper\
    \ training and awareness programs to understand \nsecurity best practices, identify\
    \ potential threats, and respond to security incidents promptly. \nAddressing\
    \ these security issues requires a multi-layered approach that combines technical\
    \ controls, policies, training, \nand regular security assessments. Collaboration\
    \ between farmers, technology providers, and cybersecurity experts is \ncrucial\
    \ to identify and mitigate security risks, ensuring the safe and secure implementation\
    \ of smart agriculture systems. \n4. Ways of securing smart agriculture \nSecuring\
    \ smart agriculture systems involves implementing various techniques and best\
    \ practices to protect data, \ndevices, and infrastructure. Table 2 describes\
    \ some techniques for securing smart agriculture. \nTable 2 Techniques for securing\
    \ smart agriculture \nTechnique \nDescription \nStrong Authentication \nand Access\
    \ Controls \nImplement robust authentication mechanisms, such as multi-factor\
    \ authentication, to \nensure that only authorized individuals can access the\
    \ smart agriculture system [150]-\n[154]. Additionally, enforce strict access\
    \ controls to limit privileges and restrict access to \nsensitive data and critical\
    \ functionalities. \nRegular Patching and \nUpdates \nKeep all software, firmware,\
    \ and operating systems up to date with the latest security \npatches [155]-[158].\
    \ Regularly update IoT devices, sensors, and other components to \naddress any\
    \ known vulnerabilities [159] and ensure that they are running on the most \n\
    secure versions. \nWorld Journal of Advanced Research and Reviews, 2023, 18(03),\
    \ 1207–1231 \n1215 \nNetwork Segmentation \nSegment the smart agriculture network\
    \ into different zones or subnets to separate critical \ncomponents, such as IoT\
    \ devices, sensors, and data storage systems [160]-[163]. This helps \ncontain\
    \ security breaches and limits unauthorized access to sensitive areas of the network.\
    \ \nSecure Communication \nChannels \n \nUse secure protocols and encryption techniques\
    \ (e.g., SSL/TLS) to ensure the \nconfidentiality and integrity of data transmitted\
    \ between devices, sensors, and the central \nsystem [164]-[168]. Secure communication\
    \ channels prevent eavesdropping, data \ninterception, and tampering during data\
    \ transmission. \nPhysical \nSecurity \nMeasures \nSecure physical components\
    \ of smart agriculture systems, including weather stations, \ndrones, and robots,\
    \ to prevent theft, tampering, or unauthorized access [169]. Implement \nphysical\
    \ barriers, surveillance systems, and access controls to protect physical assets\
    \ \n[170]-[173]. \nEmployee Training and \nAwareness \nProvide comprehensive training\
    \ programs to farmers, operators, and other stakeholders \nto raise awareness\
    \ about security best practices, social engineering threats, and safe \nhandling\
    \ of data and devices. Educate users about potential risks and how to identify\
    \ and \nreport security incidents [174]. \nSecurity \nMonitoring \nand Incident\
    \ Response \nImplement robust monitoring tools and techniques to continuously\
    \ monitor the smart \nagriculture system for potential security incidents [175].\
    \ Establish an incident response \nplan to handle security breaches, including\
    \ procedures for investigation, containment, \neradication, and recovery [176]-[178].\
    \ \nIntrusion \nDetection \nand \nPrevention \nSystems \nDeploy intrusion detection\
    \ and prevention systems (IDPS) to monitor network traffic, \ndetect suspicious\
    \ activities, and prevent potential attacks [179], [180]. IDPS can identify \n\
    and respond to malicious behavior, such as unauthorized access [181] attempts\
    \ or \nabnormal data patterns. \nData Encryption and \nPrivacy \n \nImplement\
    \ strong encryption algorithms to protect sensitive data both at rest and in \n\
    transit. Encrypt data stored on devices, databases, and cloud storage to prevent\
    \ \nunauthorized access [182]-[186]. Also, ensure compliance with privacy regulations\
    \ and \nestablish clear policies on data handling and sharing. \nRegular \nSecurity\
    \ \nAssessments \nConduct regular security assessments, penetration testing, and\
    \ vulnerability scanning to \nidentify and address any potential weaknesses in\
    \ the smart agriculture system [187]-[191]. \nRegular assessments help ensure\
    \ that security measures are up to date and effective in \nprotecting against\
    \ emerging threats. \n \nBy implementing these techniques, smart agriculture systems\
    \ can significantly enhance their security posture and \nprotect against potential\
    \ threats, ensuring the integrity, confidentiality, and availability of data and\
    \ operations. \n5. Issues with current smart agriculture protection techniques\
    \ \nThere are several protection techniques available for securing smart agriculture\
    \ systems. However, there are still some \nissues and challenges associated with\
    \ their implementation. The following sub-sections discuss some common issues\
    \ \nwith current smart agriculture protection techniques. \n5.1 Lack of Standardization\
    \ \nThe smart agriculture industry lacks standardized security protocols and frameworks,\
    \ making it challenging to ensure \nconsistent and interoperable security measures\
    \ across different systems and devices [192], [193]. The absence of \nwidely accepted\
    \ standards hinders seamless integration and can lead to compatibility issues\
    \ when implementing \nsecurity solutions. \n5.2 Limited Security Awareness and\
    \ Expertise \nMany farmers and agricultural professionals may have limited knowledge\
    \ and awareness of cybersecurity risks and \nbest practices. The lack of security\
    \ expertise among end-users can result in improper implementation of security\
    \ \nmeasures, such as weak passwords, misconfigurations, or failure to update\
    \ software/firmware promptly [194], [195]. \nWorld Journal of Advanced Research\
    \ and Reviews, 2023, 18(03), 1207–1231 \n1216 \n5.3 Vulnerabilities in IoT Devices\
    \ \nIoT devices used in smart agriculture systems may have inherent security vulnerabilities\
    \ [196]. These vulnerabilities \ncan be exploited by attackers to gain unauthorized\
    \ access, manipulate data, or disrupt operations [196]-[199]. The rapid \nproliferation\
    \ of IoT devices and their diverse manufacturers make it challenging to ensure\
    \ consistent security standards \nacross all devices. \n5.4 Complexity and Cost\
    \ \nImplementing comprehensive security measures can be complex and expensive\
    \ for farmers, particularly small-scale \noperations with limited budgets. The\
    \ costs associated with purchasing, deploying, and maintaining security solutions\
    \ \ncan be prohibitive, deterring widespread adoption of robust security measures\
    \ [200], [201]. \n5.5 Legacy Systems and Infrastructure \nMany agricultural systems\
    \ still rely on legacy equipment and infrastructure that may not have built-in\
    \ security features \nor support modern security protocols [202], [203]. Integrating\
    \ security solutions with existing legacy systems can be \nchallenging and may\
    \ require additional investments in upgrading or replacing outdated components\
    \ [204]. \n5.6 Lack of Security Updates and Support \nSome smart agriculture solutions\
    \ may lack regular security updates and ongoing support from vendors [205]-[207].\
    \ \nThis can leave systems vulnerable to emerging threats, as security patches\
    \ and updates are essential for addressing \nnewly discovered vulnerabilities\
    \ and ensuring the long-term security of the system. \n5.7 Physical Security Risks\
    \ \nWhile digital security is crucial, physical security risks in smart agriculture\
    \ systems cannot be overlooked [209], [210]. \nComponents such as sensors, drones,\
    \ or weather stations are vulnerable to physical tampering, theft, or damage.\
    \ \nEnsuring adequate physical security measures, such as access controls and\
    \ surveillance, is essential but can be \nchallenging in remote or expansive farming\
    \ environments. \n5.8 Integration and Compatibility Challenges \nSmart agriculture\
    \ systems often involve the integration of various technologies, platforms, and\
    \ third-party solutions. \nEnsuring seamless integration and compatibility between\
    \ different components can be complex, as they may have \ndifferent security requirements,\
    \ protocols, or interfaces [211]-[214]. Incompatibility issues can create security\
    \ gaps and \nincrease the risk of vulnerabilities. \nAddressing these issues requires\
    \ collaborative efforts between technology providers, agricultural stakeholders,\
    \ and \npolicymakers. It involves promoting security standards and best practices,\
    \ providing security training and awareness \nprograms, encouraging security-by-design\
    \ principles in IoT device manufacturing, and fostering partnerships to \ndevelop\
    \ cost-effective security solutions tailored for the agricultural sector [215]-[219].\
    \ \n6. Future research scope \nBased on the shortcomings of the current smart\
    \ agriculture defense mechanisms, future research can explore several \nareas\
    \ to enhance the protection of agricultural systems and address emerging challenges.\
    \ Some potential research \nscopes include the following: \n6.1 Threat Modeling\
    \ and Risk Assessment \nThere is need to develop advanced threat modeling techniques\
    \ specific to smart agriculture systems to identify potential \nvulnerabilities\
    \ and attack vectors [220]-[225]. Conduct comprehensive risk assessments to understand\
    \ the potential \nimpact of security breaches and prioritize security measures\
    \ accordingly. \n6.2 Blockchain Technology \nInvestigate the applicability of\
    \ blockchain technology in smart agriculture security. Explore how blockchain\
    \ can enhance \ndata integrity, traceability, and secure transactions in supply\
    \ chains, ensuring transparency and trustworthiness in \nagricultural operations\
    \ [226]-[231]. \nWorld Journal of Advanced Research and Reviews, 2023, 18(03),\
    \ 1207–1231 \n1217 \n6.3 Secure Data Analytics \nDevelop secure and privacy-preserving\
    \ data analytics techniques for smart agriculture [232]-[235]. Explore methods\
    \ \nfor secure aggregation, processing, and analysis of sensitive agricultural\
    \ data while maintaining confidentiality and \nprotecting against data leaks.\
    \ \n6.4 Intrusion Detection Systems for Agricultural Networks \nDesign and develop\
    \ intrusion detection systems (IDS) specifically tailored for agricultural networks\
    \ [236]-[239]. Create \nIDS algorithms and models capable of detecting and mitigating\
    \ attacks targeting IoT devices, sensor networks, and \ncommunication channels\
    \ in smart agriculture systems. \n6.5 Machine Learning for Anomaly Detection \n\
    Explore the application of machine learning algorithms [240] for anomaly detection\
    \ in smart agriculture systems. \nDevelop intelligent models capable of detecting\
    \ unusual patterns, behaviors, or deviations in sensor data, signaling \npotential\
    \ security breaches or attacks [241]-[245]. \n6.6 Security-aware IoT Device Design\
    \ \nInvestigate methods for designing and manufacturing IoT devices with built-in\
    \ security features [246]-[248]. Develop \nsecure firmware, authentication mechanisms,\
    \ and communication protocols for IoT devices used in smart agriculture, \nensuring\
    \ resilience against common attack vectors [249], [250]. \n6.7 Security Information\
    \ and Event Management (SIEM) for Agriculture \nAdapt existing SIEM techniques\
    \ to address the specific requirements and challenges of smart agriculture systems\
    \ [251]-\n[253]. Design SIEM architectures capable of handling the large volume\
    \ of heterogeneous data generated by agricultural \nsensors, devices, and networks.\
    \ \n6.8 Secure Communication Protocols \nDevelop and evaluate secure communication\
    \ protocols [254] tailored for smart agriculture systems. Investigate \nlightweight\
    \ and energy-efficient protocols suitable for resource-constrained IoT devices,\
    \ ensuring secure and reliable \ncommunication in remote agricultural environments\
    \ [255]-[259]. \n6.9 Privacy and Data Protection \nResearch privacy-preserving\
    \ techniques for smart agriculture data, ensuring that personally identifiable\
    \ information \nand sensitive farm data are protected [260]-[263]. Explore anonymization,\
    \ differential privacy, and encryption \ntechniques to balance data utility [264]\
    \ with privacy requirements. \n6.10  Security-aware Farm Management Systems \n\
    Investigate the integration of security features into farm management systems.\
    \ Develop intelligent decision support \nsystems that consider security risks\
    \ and constraints while optimizing farming operations, resource allocation, and\
    \ risk \nmanagement [265], [266]. \n6.11 Social and Ethical Considerations \n\
    Study the social, ethical, and legal implications of smart agriculture security\
    \ [267]. Investigate the impact of security \nbreaches on farmers, consumers,\
    \ and the environment [268]. Address ethical concerns related to data ownership,\
    \ \nprivacy, and responsible use of technology in agriculture. \nThese research\
    \ scopes aim to advance the field of smart agriculture security, addressing the\
    \ evolving security challenges \nand developing innovative solutions to protect\
    \ agricultural systems, data, and stakeholders. \n7 Conclusion \nSecurity issues\
    \ in smart agriculture pose significant challenges that need to be addressed to\
    \ ensure the integrity, \nconfidentiality, and availability of data and operations.\
    \ The protection of smart agriculture systems is crucial to prevent \nunauthorized\
    \ access, data breaches, tampering, and disruption of farming operations. This\
    \ paper has highlighted several \nfactors that contribute to the complexity and\
    \ vulnerability of these systems. For example, lack of standardized security \n\
    World Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1218\
    \ \nprotocols and frameworks, limited security awareness and expertise among farmers,\
    \ and vulnerabilities in IoT devices \nhave been shown to be major concerns. Additionally,\
    \ the complexity and cost associated with implementing \ncomprehensive security\
    \ measures, legacy systems and infrastructure, and the need for regular security\
    \ updates and \nsupport pose additional challenges. Physical security risks and\
    \ integration and compatibility issues further compound \nthe security landscape\
    \ of smart agriculture. To overcome these challenges, future research and development\
    \ efforts \nshould focus on threat modeling, risk assessment, blockchain technology,\
    \ secure data analytics, intrusion detection \nsystems, machine learning for anomaly\
    \ detection, security-aware IoT device design, secure communication protocols,\
    \ \nSIEM for agriculture, privacy and data protection, security-aware farm management\
    \ systems, and social and ethical \nconsiderations. It has been shown that addressing\
    \ security issues in smart agriculture requires collaborative efforts \nbetween\
    \ technology providers, agricultural stakeholders, researchers, and policymakers.\
    \ It is crucial to develop and \nimplement robust security measures, promote security\
    \ standards and best practices, provide security training and \nawareness programs,\
    \ and foster partnerships to develop cost-effective security solutions tailored\
    \ for the agricultural \nsector. By addressing these security issues comprehensively,\
    \ we can ensure the trustworthiness, resilience, and \nsustainability of smart\
    \ agriculture systems, thereby unlocking their full potential to revolutionize\
    \ the agricultural \nindustry, improve productivity, and contribute to global\
    \ food security. \nCompliance with ethical standards \nAcknowledgments \nAll the\
    \ efforts and help offered to me by my colleagues when I was developing this manuscript\
    \ are highly appreciated. \nReferences \n[1] \nShaikh TA, Rasool T, Lone FR. Towards\
    \ leveraging the role of machine learning and artificial intelligence in \nprecision\
    \ agriculture and smart farming. Computers and Electronics in Agriculture. 2022\
    \ Jul 1;198:107119. \n[2] \nKwaghtyo DK, Eke CI. Smart farming prediction models\
    \ for precision agriculture: a comprehensive survey. \nArtificial Intelligence\
    \ Review. 2023 Jun;56(6):5729-72. \n[3] \nBoursianis AD, Papadopoulou MS, Diamantoulakis\
    \ P, Liopa-Tsakalidi A, Barouchas P, Salahas G, Karagiannidis G, \nWan S, Goudos\
    \ SK. Internet of things (IoT) and agricultural unmanned aerial vehicles (UAVs)\
    \ in smart farming: a \ncomprehensive review. Internet of Things. 2022 May 1;18:100187.\
    \ \n[4] \nJavaid M, Haleem A, Singh RP, Suman R. Enhancing smart farming through\
    \ the applications of Agriculture 4.0 \ntechnologies. International Journal of\
    \ Intelligent Networks. 2022 Jan 1;3:150-64. \n[5] \nMutlaq KA, Nyangaresi VO,\
    \ Omar MA, Abduljabbar ZA. Symmetric Key Based Scheme for Verification Token \n\
    Generation in Internet of Things Communication Environment. InApplied Cryptography\
    \ in Computer and \nCommunications: Second EAI International Conference, AC3 2022,\
    \ Virtual Event, May 14-15, 2022, Proceedings \n2022 Oct 6 (pp. 46-64). Cham:\
    \ Springer Nature Switzerland. \n[6] \nBacco M, Barsocchi P, Ferro E, Gotta A,\
    \ Ruggeri M. The digitisation of agriculture: a survey of research activities\
    \ \non smart farming. Array. 2019 Sep 1;3:100009. \n[7] \nWolfert S, Ge L, Verdouw\
    \ C, Bogaardt MJ. Big data in smart farming–a review. Agricultural systems. 2017\
    \ May \n1;153:69-80. \n[8] \nBucci G, Bentivoglio D, Finco A. Precision agriculture\
    \ as a driver for sustainable farming systems: state of art in \nlitterature and\
    \ research. Calitatea. 2018 Mar 1;19(S1):114-21. \n[9] \nEncinas C, Ruiz E, Cortez\
    \ J, Espinoza A. Design and implementation of a distributed IoT system for the\
    \ monitoring \nof water quality in aquaculture. In2017 Wireless telecommunications\
    \ symposium (WTS) 2017 Apr 26 (pp. 1-7). \nIEEE. \n[10] Ting L, Khan M, Sharma\
    \ A, Ansari MD. A secure framework for IoT-based smart climate agriculture system:\
    \ \nToward blockchain and edge computing. Journal of Intelligent Systems. 2022\
    \ Jan 1;31(1):221-36. \n[11]  Nyangaresi VO. Extended Chebyshev Chaotic Map Based\
    \ Message Verification Protocol for Wireless Surveillance \nSystems. InComputer\
    \ Vision and Robotics: Proceedings of CVR 2022 2023 Apr 28 (pp. 503-516). Singapore:\
    \ \nSpringer Nature Singapore. \n[12] Akkem Y, Biswas SK, Varanasi A. Smart farming\
    \ using artificial intelligence: A review. Engineering Applications \nof Artificial\
    \ Intelligence. 2023 Apr 1;120:105899. \nWorld Journal of Advanced Research and\
    \ Reviews, 2023, 18(03), 1207–1231 \n1219 \n[13] Williams MJ, Sikder MN, Wang\
    \ P, Gorentala N, Gurrapu S, Batarseh FA. The application of artificial intelligence\
    \ \nassurance in precision farming and agricultural economics. InAI Assurance\
    \ 2023 Jan 1 (pp. 501-529). Academic \nPress. \n[14] Foster L, Szilagyi K, Wairegi\
    \ A, Oguamanam C, de Beer J. Smart farming and artificial intelligence in East\
    \ Africa: \nAddressing indigeneity, plants, and gender. Smart Agricultural Technology.\
    \ 2023 Feb 1;3:100132. \n[15] Thorat T, Patle BK, Kashyap SK. Intelligent insecticide\
    \ and fertilizer recommendation system based on TPF-CNN \nfor smart farming. Smart\
    \ Agricultural Technology. 2023 Feb 1;3:100114. \n[16]  Ghrabat MJ, Hussien ZA,\
    \ Khalefa MS, Abduljabba ZA, Nyangaresi VO, Al Sibahee MA, Abood EW. Fully automated\
    \ \nmodel on breast cancer classification using deep learning classifiers. Indonesian\
    \ Journal of Electrical Engineering \nand Computer Science. 2022 Oct;28(1):183-91.\
    \ \n[17] Prajapati JB, Barad R, Patel MB, Saini K, Prajapati D, Engineer P. Smart\
    \ Farming Ingredients: IoT Sensors, \nSoftware, Connectivity, Data Analytics,\
    \ Robots, Drones, GIS-GPS. InApplying Drone Technologies and Robotics for \nAgricultural\
    \ Sustainability 2023 (pp. 31-49). IGI Global. \n[18] Pal D, Joshi S. AI, IoT\
    \ and Robotics in Smart Farming: Current Applications and Future Potentials. In2023\
    \ \nInternational Conference on Sustainable Computing and Data Communication Systems\
    \ (ICSCDS) 2023 Mar 23 \n(pp. 1096-1101). IEEE. \n[19] Güven B, Baz İ, Kocaoğlu\
    \ B, Toprak E, Erol Barkana D, Soğutmaz Özdemir B. Smart Farming Technologies\
    \ for \nSustainable Agriculture: From Food to Energy. InA Sustainable Green Future\
    \ 2023 (pp. 481-506). Springer, Cham. \n[20] Sajid J, Hayawi K, Malik AW, Anwar\
    \ Z, Trabelsi Z. A Fog Computing Framework for Intrusion Detection of Energy-\n\
    Based Attacks on UAV-Assisted Smart Farming. Applied Sciences. 2023 Mar 17;13(6):3857.\
    \ \n[21]  Nyangaresi VO, Morsy MA. Towards privacy preservation in internet of\
    \ drones. In2021 IEEE 6th International \nForum on Research and Technology for\
    \ Society and Industry (RTSI) 2021 Sep 6 (pp. 306-311). IEEE. \n[22] Priya PL,\
    \ Harshith NS, Ramesh NV. Smart agriculture monitoring system using IoT. Int.\
    \ J. Eng. Technol.(UAE). \n2018;7:308-11. \n[23] Kapoor P, Barbhuiya FA. Cloud\
    \ based weather station using IoT devices. InTENCON 2019-2019 IEEE Region 10 \n\
    Conference (TENCON) 2019 Oct 17 (pp. 2357-2362). IEEE. \n[24] Wang Y, Zhang X,\
    \ Ning W, Lazzara MA, Ding M, Reijmer CH, Smeets PC, Grigioni P, Heil P, Thomas\
    \ ER, Mikolajczyk \nD. The AntAWS dataset: a compilation of Antarctic automatic\
    \ weather station observations. Earth System Science \nData. 2023 Jan 24;15(1):411-29.\
    \ \n[25] Muñoz LE, Campozano LV, Guevara DC, Parra R, Tonato D, Suntaxi A, Maisincho\
    \ L, Páez C, Villacís M, Córdova J, \nValencia N. Comparison of Radiosonde Measurements\
    \ of Meteorological Variables with Drone, Satellite Products, \nand WRF Simulations\
    \ in the Tropical Andes: The Case of Quito, Ecuador. Atmosphere. 2023 Jan 28;14(2):264.\
    \ \n[26] Li ZL, Wu H, Duan SB, Zhao W, Ren H, Liu X, Leng P, Tang R, Ye X, Zhu\
    \ J, Sun Y. Satellite remote sensing of global \nland surface temperature: definition,\
    \ methods, products, and applications. Reviews of Geophysics. 2023 \nMar;61(1):e2022RG000777.\
    \ \n[27]  Abduljabbar ZA, Nyangaresi VO, Ma J, Al Sibahee MA, Khalefa MS, Honi\
    \ DG. MAC-Based Symmetric Key Protocol \nfor Secure Traffic Forwarding in Drones.\
    \ InFuture Access Enablers for Ubiquitous and Intelligent Infrastructures: \n\
    6th EAI International Conference, FABULOUS 2022, Virtual Event, May 4, 2022, Proceedings\
    \ 2022 Sep 18 (pp. \n16-36). Cham: Springer International Publishing. \n[28] Siddiqui\
    \ MS, Aslam M. Highly Stable and Reusable 3D Graphene-Quinizarin Voltammetric\
    \ pH Sensor. Journal of \nThe Electrochemical Society. 2023 Apr 24;170(4):047511.\
    \ \n[29] Belgiu M, Marshall M, Boschetti M, Pepe M, Stein A, Nelson A. PRISMA\
    \ and Sentinel-2 spectral response to the \nnutrient composition of grains. Remote\
    \ Sensing of Environment. 2023 Jul 1;292:113567. \n[30] He J, Chen K, Pan X, Zhai\
    \ J, Lin X. Advanced biosensing technologies for monitoring of agriculture pests\
    \ and \ndiseases: A review. Journal of Semiconductors. 2023 Feb 1;44(2):023104.\
    \ \n[31] Schipper R, Van der Meer M, De Visser PH, Heuvelink E, Marcelis LF. Consequences\
    \ of intra-canopy and top LED \nlighting for uniformity of light distribution\
    \ in a tomato crop. Frontiers in plant science. 2023;14. \n[32] Mancuso D, Castagnolo\
    \ G, Porto SM. Cow Behavioural Activities in Extensive Farms: Challenges of Adopting\
    \ \nAutomatic Monitoring Systems. Sensors. 2023 Apr 8;23(8):3828. \nWorld Journal\
    \ of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1220 \n[33]  Nyangaresi\
    \ VO, Ogundoyin SO. Certificate based authentication scheme for smart homes. In2021\
    \ 3rd Global \nPower, Energy and Communication Conference (GPECOM) 2021 Oct 5\
    \ (pp. 202-207). IEEE. \n[34] Jamroen C, Yonsiri N, Odthon T, Wisitthiwong N,\
    \ Janreung S. A standalone photovoltaic/battery energy-powered \nwater quality\
    \ monitoring system based on narrowband internet of things for aquaculture: Design\
    \ and \nimplementation. Smart Agricultural Technology. 2023 Feb 1;3:100072. \n\
    [35] Wu Y, Li J, Lv M, Zhang X, Gao R, Guo C, Cheng X, Zhou X, Xu Y, Gao S, Major\
    \ Z. Selective detection of trace carbon \nmonoxide at room temperature based\
    \ on CuO nanosheets exposed to (111) crystal facets. Journal of Hazardous \nMaterials.\
    \ 2023 Jan 15;442:130041. \n[36] Guo Q, Wang C, Xiao D, Huang Q. Automatic monitoring\
    \ of flying vegetable insect pests using an RGB camera and \nYOLO-SIP detector.\
    \ Precision Agriculture. 2023 Apr;24(2):436-57. \n[37] Race D, Gentle P, Mathew\
    \ S. Living on the margins: Climate change impacts and adaptation by remote \n\
    communities living in the Pacific Islands, the Himalaya and desert Australia.\
    \ Climate Risk Management. 2023 Jan \n1;40:100503. \n[38] Eid MM, Arunachalam\
    \ R, Sorathiya V, Lavadiya S, Patel SK, Parmar J, Delwar TS, Ryu JY, Nyangaresi\
    \ VO, Zaki \nRashed AN. QAM receiver based on light amplifiers measured with effective\
    \ role of optical coherent duobinary \ntransmitter. Journal of Optical Communications.\
    \ 2022 Jan 17(0). \n[39] Thakur N, Nigam M, Mann NA, Gupta S, Hussain CM, Shukla\
    \ SK, Shah AA, Casini R, Elansary HO, Khan SA. Host-\nmediated gene engineering\
    \ and microbiome-based technology optimization for sustainable agriculture and\
    \ \nenvironment. Functional & Integrative Genomics. 2023 Mar;23(1):57. \n[40]\
    \ Linaza MT, Posada J, Bund J, Eisert P, Quartulli M, Döllner J, Pagani A, G.\
    \ Olaizola I, Barriguinha A, Moysiadis T, \nLucat L. Data-driven artificial intelligence\
    \ applications for sustainable precision agriculture. Agronomy. 2021 Jun \n17;11(6):1227.\
    \ \n[41] Botta A, Cavallone P, Baglieri L, Colucci G, Tagliavini L, Quaglia G.\
    \ A review of robots, perception, and tasks in \nprecision agriculture. Applied\
    \ Mechanics. 2022 Jul 5;3(3):830-54. \n[42] Sparrow R, Howard M. Robots in agriculture:\
    \ prospects, impacts, ethics, and policy. precision agriculture. 2021 \nJun;22:818-33.\
    \ \n[43]  Nyangaresi VO, El-Omari NK, Nyakina JN. Efficient Feature Selection\
    \ and ML Algorithm for Accurate Diagnostics. \nJournal of Computer Science Research.\
    \ 2022 Jan 25;4(1):10-9. \n[44] Adamides G, Kalatzis N, Stylianou A, Marianos\
    \ N, Chatzipapadopoulos F, Giannakopoulou M, Papadavid G, \nVassiliou V, Neocleous\
    \ D. Smart farming techniques for climate change adaptation in Cyprus. Atmosphere.\
    \ 2020 \nMay 27;11(6):557. \n[45] Mohamed ES, Belal AA, Abd-Elmabod SK, El-Shirbeny\
    \ MA, Gad A, Zahran MB. Smart farming for improving \nagricultural management.\
    \ The Egyptian Journal of Remote Sensing and Space Science. 2021 Dec 1;24(3):971-81.\
    \ \n[46] Zhang A, Mankad A, Ariyawardana A. Establishing confidence in food safety:\
    \ is traceability a solution in \nconsumers’ eyes?. Journal of Consumer Protection\
    \ and Food Safety. 2020 Jun;15(2):99-107. \n[47] Mesías FJ, Martín A, Hernández\
    \ A. Consumers’ growing appetite for natural foods: Perceptions towards the use\
    \ \nof natural preservatives in fresh fruit. Food Research International. 2021\
    \ Dec 1;150:110749. \n[48]  Omollo VN, Musyoki S. Global Positioning System Based\
    \ Routing Algorithm for Adaptive Delay Tolerant Mobile \nAdhoc Networks. International\
    \ Journal of Computer and Communication System Engineering. 2015 May 11; 2(3):\
    \ \n399-406. \n[49] Goel RK, Yadav CS, Vishnoi S, Rastogi R. Smart agriculture–Urgent\
    \ need of the day in developing countries. \nSustainable Computing: Informatics\
    \ and Systems. 2021 Jun 1;30:100512. \n[50] Huuskonen J, Oksanen T. Soil sampling\
    \ with drones and augmented reality in precision agriculture. Computers \nand\
    \ electronics in agriculture. 2018 Nov 1;154:25-35. \n[51] Atitallah SB, Driss\
    \ M, Boulila W, Ghézala HB. Leveraging Deep Learning and IoT big data analytics\
    \ to support the \nsmart cities development: Review and future directions. Computer\
    \ Science Review. 2020 Nov 1;38:100303. \n[52] Saiz-Rubio V, Rovira-Más F. From\
    \ smart farming towards agriculture 5.0: A review on crop data management. \n\
    Agronomy. 2020 Feb 3;10(2):207. \nWorld Journal of Advanced Research and Reviews,\
    \ 2023, 18(03), 1207–1231 \n1221 \n[53] Nyangaresi VO. Privacy Preserving Three-factor\
    \ Authentication Protocol for Secure Message Forwarding in \nWireless Body Area\
    \ Networks. Ad Hoc Networks. 2023 Apr 1;142:103117. \n[54] Paul K, Chatterjee\
    \ SS, Pai P, Varshney A, Juikar S, Prasad V, Bhadra B, Dasgupta S. Viable smart\
    \ sensors and their \napplication in data driven agriculture. Computers and Electronics\
    \ in Agriculture. 2022 Jul 1;198:107096. \n[55] van Etten J, de Sousa K, Cairns\
    \ JE, Dell’Acqua M, Fadda C, Guereña D, Heerwaarden JV, Assefa T, Manners R, Müller\
    \ \nA, Enrico Pè M. Data-driven approaches can harness crop diversity to address\
    \ heterogeneous needs for breeding \nproducts. Proceedings of the National Academy\
    \ of Sciences. 2023 Apr 4;120(14):e2205771120. \n[56] Tripathy PK, Tripathy AK,\
    \ Agarwal A, Mohanty SP. MyGreen: An IoT-enabled smart greenhouse for sustainable\
    \ \nagriculture. IEEE Consumer Electronics Magazine. 2021 Feb 1;10(4):57-62. \n\
    [57] Ray PP. Internet of things for smart agriculture: Technologies, practices\
    \ and future direction. Journal of Ambient \nIntelligence and Smart Environments.\
    \ 2017 Jan 1;9(4):395-420. \n[58]  Hussien ZA, Abdulmalik HA, Hussain MA, Nyangaresi\
    \ VO, Ma J, Abduljabbar ZA, Abduljaleel IQ. Lightweight \nIntegrity Preserving\
    \ Scheme for Secure Data Exchange in Cloud-Based IoT Systems. Applied Sciences.\
    \ 2023 \nJan;13(2):691. \n[59] Raja L, Vyas S. The study of technological development\
    \ in the field of smart farming. InSmart Farming \nTechnologies for Sustainable\
    \ Agricultural Development 2019 (pp. 1-24). IGI Global. \n[60] Easterday K, Kislik\
    \ C, Dawson TE, Hogan S, Kelly M. Remotely sensed water limitation in vegetation:\
    \ Insights from \nan experiment with unmanned aerial vehicles (UAVs). Remote Sensing.\
    \ 2019 Aug 9;11(16):1853. \n[61] Singh P, Pandey PC, Petropoulos GP, Pavlides\
    \ A, Srivastava PK, Koutsias N, Deng KA, Bao Y. Hyperspectral remote \nsensing\
    \ in precision agriculture: Present status, challenges, and future trends. InHyperspectral\
    \ remote sensing \n2020 Jan 1 (pp. 121-146). Elsevier. \n[62] Yang G, Liu J, Zhao\
    \ C, Li Z, Huang Y, Yu H, Xu B, Yang X, Zhu D, Zhang X, Zhang R. Unmanned aerial\
    \ vehicle remote \nsensing for field-based crop phenotyping: current status and\
    \ perspectives. Frontiers in plant science. 2017 Jun \n30;8:1111. \n[63]  Nyangaresi\
    \ VO, Moundounga AR. Secure data exchange scheme for smart grids. In2021 IEEE\
    \ 6th International \nForum on Research and Technology for Society and Industry\
    \ (RTSI) 2021 Sep 6 (pp. 312-316). IEEE. \n[64] Chergui N, Kechadi MT. Data analytics\
    \ for crop management: a big data view. Journal of Big Data. 2022 Dec;9(1):1-\n\
    37. \n[65] Saggi MK, Jain S. A survey towards an integration of big data analytics\
    \ to big insights for value-creation. \nInformation Processing & Management. 2018\
    \ Sep 1;54(5):758-90. \n[66] Van Evert FK, Fountas S, Jakovetic D, Crnojevic V,\
    \ Travlos I, Kempenaar C. Big data for weed control and crop \nprotection. Weed\
    \ Research. 2017 Aug;57(4):218-33. \n[67] Kamilaris A, Kartakoullis A, Prenafeta-Boldú\
    \ FX. A review on the practice of big data analysis in agriculture. \nComputers\
    \ and Electronics in Agriculture. 2017 Dec 1;143:23-37. \n[68]  Honi DG, Ali AH,\
    \ Abduljabbar ZA, Ma J, Nyangaresi VO, Mutlaq KA, Umran SM. Towards Fast Edge\
    \ Detection \nApproach for Industrial Products. In2022 IEEE 21st International\
    \ Conference on Ubiquitous Computing and \nCommunications (IUCC/CIT/DSCI/SmartCNS)\
    \ 2022 Dec 19 (pp. 239-244). IEEE. \n[69] Arumugam K, Swathi Y, Sanchez DT, Mustafa\
    \ M, Phoemchalard C, Phasinam K, Okoronkwo E. Towards \napplicability of machine\
    \ learning techniques in agriculture and energy sector. Materials Today: Proceedings.\
    \ \n2022 Jan 1;51:2260-3. \n[70] Jerhamre E, Carlberg CJ, van Zoest V. Exploring\
    \ the susceptibility of smart farming: Identified opportunities and \nchallenges.\
    \ Smart Agricultural Technology. 2022 Dec 1;2:100026. \n[71] Nabi F, Jamwal S,\
    \ Padmanbh K. Wireless sensor network in precision farming for forecasting and\
    \ monitoring of \napple disease: a survey. International Journal of Information\
    \ Technology. 2022 Mar;14(2):769-80. \n[72] Fountas S, Espejo-Garcia B, Kasimati\
    \ A, Mylonas N, Darra N. The future of digital agriculture: technologies and \n\
    opportunities. IT professional. 2020 Feb 11;22(1):24-8. \n[73] Zaki Rashed AN,\
    \ Ahammad SH, Daher MG, Sorathiya V, Siddique A, Asaduzzaman S, Rehana H, Dutta\
    \ N, Patel SK, \nNyangaresi VO, Jibon RH. Signal propagation parameters estimation\
    \ through designed multi layer fibre with \nhigher dominant modes using OptiFibre\
    \ simulation. Journal of Optical Communications. 2022 Jun 23(0). \nWorld Journal\
    \ of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1222 \n[74] Maddikunta\
    \ PK, Hakak S, Alazab M, Bhattacharya S, Gadekallu TR, Khan WZ, Pham QV. Unmanned\
    \ aerial vehicles \nin smart agriculture: Applications, requirements, and challenges.\
    \ IEEE Sensors Journal. 2021 Jan \n6;21(16):17608-19. \n[75] Roldán JJ, del Cerro\
    \ J, Garzón-Ramos D, Garcia-Aunon P, Garzón M, De León J, Barrientos A. Robots\
    \ in agriculture: \nState of art and practical experiences. Service robots. 2018\
    \ Jan 4:67-90. \n[76] Aslan MF, Durdu A, Sabanci K, Ropelewska E, Gültekin SS.\
    \ A comprehensive survey of the recent studies with UAV \nfor precision agriculture\
    \ in open fields and greenhouses. Applied Sciences. 2022 Jan 20;12(3):1047. \n\
    [77] Sanjeevi P, Prasanna S, Siva Kumar B, Gunasekaran G, Alagiri I, Vijay Anand\
    \ R. Precision agriculture and farming \nusing Internet of Things based on wireless\
    \ sensor network. Transactions on Emerging Telecommunications \nTechnologies.\
    \ 2020 Dec;31(12):e3978. \n[78]  Nyangaresi VO, Petrovic N. Efficient PUF based\
    \ authentication protocol for internet of drones. In2021 \nInternational Telecommunications\
    \ Conference (ITC-Egypt) 2021 Jul 13 (pp. 1-4). IEEE. \n[79] Emmi L, Fernández\
    \ R, Gonzalez-de-Santos P, Francia M, Golfarelli M, Vitali G, Sandmann H, Hustedt\
    \ M, Wollweber \nM. Exploiting the Internet Resources for Autonomous Robots in\
    \ Agriculture. Agriculture. 2023 May 2;13(5):1005. \n[80] Motalo K, Nojeem L,\
    \ Ewani J, Opuiyo A, Browndi I. Algebraic Multigrid and Cloud Computing: Enhancing\
    \ \nScalability and Performance. International Journal of Technology and Scientific\
    \ Research. 2023 Mar;12:342-8. \n[81] Saban M, Bekkour M, Amdaouch I, El Gueri\
    \ J, Ait Ahmed B, Chaari MZ, Ruiz-Alzola J, Rosado-Muñoz A, Aghzout O. \nA Smart\
    \ Agricultural System Based on PLC and a Cloud Computing Web Application Using\
    \ LoRa and LoRaWan. \nSensors. 2023 Mar 2;23(5):2725. \n[82] Hazra A, Rana P,\
    \ Adhikari M, Amgoth T. Fog computing for next-generation internet of things:\
    \ fundamental, state-\nof-the-art and research challenges. Computer Science Review.\
    \ 2023 May 1;48:100549. \n[83]  Nyangaresi VO, Abood EW, Abduljabbar ZA, Al Sibahe\
    \ MA. Energy Efficient WSN Sink-Cloud Server \nAuthentication Protocol. In2021\
    \ 5th International Conference on Information Systems and Computer Networks \n\
    (ISCON) 2021 Oct 22 (pp. 1-6). \n[84] Mehta CR, Chandel NS, Dubey K. Smart Agricultural\
    \ Mechanization in India—Status and Way Forward. InSmart \nAgriculture for Developing\
    \ Nations: Status, Perspectives and Challenges 2023 Mar 9 (pp. 1-14). Singapore:\
    \ \nSpringer Nature Singapore. \n[85] Mesías-Ruiz GA, Pérez-Ortiz M, Dorado J,\
    \ de Castro AI, Peña JM. Boosting precision crop protection towards \nagriculture\
    \ 5.0 via machine learning and emerging technologies: A contextual review. Frontiers\
    \ in Plant Science. \n2023;14. \n[86] Dutta PK, Mitra S. Application of agricultural\
    \ drones and IoT to understand food supply chain during post COVID‐\n19. Agricultural\
    \ Informatics: Automation Using the IoT and Machine Learning. 2021 Mar 19:67-87.\
    \ \n[87] Wajs J, Trybała P, Górniak-Zimroz J, Krupa-Kurzynowska J, Kasza D. Modern\
    \ solution for fast and accurate \ninventorization of open-pit mines by the active\
    \ remote sensing technique—case study of mikoszów granite mine \n(lower silesia,\
    \ sw poland). Energies. 2021 Oct 19;14(20):6853. \n[88]  Abduljabbar ZA, Omollo\
    \ Nyangaresi V, Al Sibahee MA, Ghrabat MJ, Ma J, Qays Abduljaleel I, Aldarwish\
    \ AJ. Session-\nDependent Token-Based Payload Enciphering Scheme for Integrity\
    \ Enhancements in Wireless Networks. Journal \nof Sensor and Actuator Networks.\
    \ 2022 Sep 19;11(3):55. \n[89] Ouafiq EM, Saadane R, Chehri A. Data Management\
    \ and Integration of Low Power Consumption Embedded \nDevices IoT for Transforming\
    \ Smart Agriculture into Actionable Knowledge. Agriculture. 2022 Feb 24;12(3):329.\
    \ \n[90] Lin J, Shen Z, Zhang A, Chai Y. Blockchain and IoT based food traceability\
    \ for smart agriculture. InProceedings of \nthe 3rd international conference on\
    \ crowd science and engineering 2018 Jul 28 (pp. 1-6). \n[91] Ferrández-Pastor\
    \ FJ, García-Chamizo JM, Nieto-Hidalgo M, Mora-Martínez J. Precision agriculture\
    \ design method \nusing a distributed computing architecture on internet of things\
    \ context. Sensors. 2018 May 28;18(6):1731. \n[92] Math RK, Dharwadkar NV. IoT\
    \ Based low-cost weather station and monitoring system for precision agriculture\
    \ \nin India. In2018 2nd international conference on I-SMAC (IoT in social, mobile,\
    \ analytics and cloud)(I-SMAC) I-\nSMAC (IoT in social, mobile, analytics and\
    \ cloud)(I-SMAC), 2018 2nd international conference on 2018 Aug 30 \n(pp. 81-86).\
    \ IEEE. \nWorld Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231\
    \ \n1223 \n[93]  Nyangaresi VO. Masked Symmetric Key Encrypted Verification Codes\
    \ for Secure Authentication in Smart Grid \nNetworks. In2022 4th Global Power,\
    \ Energy and Communication Conference (GPECOM) 2022 Jun 14 (pp. 427-\n432). IEEE.\
    \ \n[94] Mekala MS, Viswanathan P. A novel technology for smart agriculture based\
    \ on IoT with cloud computing. In2017 \nInternational Conference on I-SMAC (IoT\
    \ in Social, Mobile, Analytics and Cloud)(I-SMAC) 2017 Feb 10 (pp. 75-\n82). IEEE.\
    \ \n[95] Islam N, Rashid MM, Pasandideh F, Ray B, Moore S, Kadel R. A review of\
    \ applications and communication \ntechnologies for internet of things (Iot) and\
    \ unmanned aerial vehicle (uav) based sustainable smart farming. \nSustainability.\
    \ 2021 Feb 8;13(4):1821. \n[96] Almalki FA, Soufiene BO, Alsamhi SH, Sakli H.\
    \ A low-cost platform for environmental smart farming monitoring \nsystem based\
    \ on IoT and UAVs. Sustainability. 2021 May 24;13(11):5908. \n[97] Farooq MS,\
    \ Riaz S, Abid A, Abid K, Naeem MA. A Survey on the Role of IoT in Agriculture\
    \ for the Implementation \nof Smart Farming. Ieee Access. 2019 Oct 25;7:156237-71.\
    \ \n[98] Kalyani Y, Collier R. A systematic survey on the role of cloud, fog,\
    \ and edge computing combination in smart \nagriculture. Sensors. 2021 Sep 3;21(17):5922.\
    \ \n[99]  Nyangaresi VO, Alsamhi SH. Towards secure traffic signaling in smart\
    \ grids. In2021 3rd Global Power, Energy \nand Communication Conference (GPECOM)\
    \ 2021 Oct 5 (pp. 196-201). IEEE. \n[100] Roussaki I, Doolin K, Skarmeta A, Routis\
    \ G, Lopez-Morales JA, Claffey E, Mora M, Martinez JA. Building an \ninteroperable\
    \ space for smart agriculture. Digital Communications and Networks. 2023 Feb 1;9(1):183-93.\
    \ \n[101] Carolan M. Publicising food: big data, precision agriculture, and co‐experimental\
    \ techniques of addition. \nSociologia Ruralis. 2017 Apr;57(2):135-54. \n[102]\
    \ Shafi U, Mumtaz R, García-Nieto J, Hassan SA, Zaidi SA, Iqbal N. Precision agriculture\
    \ techniques and practices: \nFrom considerations to applications. Sensors. 2019\
    \ Sep 2;19(17):3796. \n[103] Rao NH. Big data and climate smart agriculture-status\
    \ and implications for agricultural research and innovation \nin India. InProc.\
    \ Indian Natl. Sci. Acad 2018 Sep 1 (Vol. 84, No. 3, pp. 625-640). \n[104] Mohammad\
    \ Z, Nyangaresi V, Abusukhon A. On the Security of the Standardized MQV Protocol\
    \ and Its Based \nEvolution Protocols. In2021 International Conference on Information\
    \ Technology (ICIT) 2021 Jul 14 (pp. 320-\n325). IEEE. \n[105] Long TB, Blok V,\
    \ Coninx I. Barriers to the adoption and diffusion of technological innovations\
    \ for climate-smart \nagriculture in Europe: evidence from the Netherlands, France,\
    \ Switzerland and Italy. Journal of cleaner \nproduction. 2016 Jan 20;112:9-21.\
    \ \n[106] Kernecker M, Knierim A, Wurbs A, Kraus T, Borges F. Experience versus\
    \ expectation: Farmers’ perceptions of \nsmart farming technologies for cropping\
    \ systems across Europe. Precision Agriculture. 2020 Feb;21:34-50. \n[107] Giua\
    \ C, Materia VC, Camanzi L. Smart farming technologies adoption: Which factors\
    \ play a role in the digital \ntransition?. Technology in Society. 2022 Feb 1;68:101869.\
    \ \n[108] Annosi MC, Brunetta F, Monti A, Nati F. Is the trend your friend? An\
    \ analysis of technology 4.0 investment \ndecisions in agricultural SMEs. Computers\
    \ in Industry. 2019 Aug 1;109:59-71. \n[109] Nyangaresi VO, Mohammad Z. Session\
    \ Key Agreement Protocol for Secure D2D Communication. InThe Fifth \nInternational\
    \ Conference on Safety and Security with IoT: SaSeIoT 2021 2022 Jun 12 (pp. 81-99).\
    \ Cham: Springer \nInternational Publishing. \n[110] Issad HA, Aoudjit R, Rodrigues\
    \ JJ. A comprehensive review of Data Mining techniques in smart agriculture. \n\
    Engineering in Agriculture, Environment and Food. 2019 Oct 1;12(4):511-25. \n\
    [111] Rahman MU, Baiardi F, Ricci L. Blockchain smart contract for scalable data\
    \ sharing in IoT: a case study of smart \nagriculture. In2020 IEEE Global Conference\
    \ on Artificial Intelligence and Internet of Things (GCAIoT) 2020 Dec \n12 (pp.\
    \ 1-7). IEEE. \n[112] Lee K, Silva BN, Han K. Deep learning entrusted to fog nodes\
    \ (DLEFN) based smart agriculture. Applied sciences. \n2020 Feb 24;10(4):1544.\
    \ \n[113] Pathan M, Patel N, Yagnik H, Shah M. Artificial cognition for applications\
    \ in smart agriculture: A comprehensive \nreview. Artificial Intelligence in Agriculture.\
    \ 2020 Jan 1;4:81-95. \nWorld Journal of Advanced Research and Reviews, 2023,\
    \ 18(03), 1207–1231 \n1224 \n[114] Al Sibahee MA, Nyangaresi VO, Ma J, Abduljabbar\
    \ ZA. Stochastic Security Ephemeral Generation Protocol for 5G \nEnabled Internet\
    \ of Things. InIoT as a Service: 7th EAI International Conference, IoTaaS 2021,\
    \ Sydney, Australia, \nDecember 13–14, 2021, Proceedings 2022 Jul 8 (pp. 3-18).\
    \ Cham: Springer International Publishing. \n[115] Kamilaris A, Gao F, Prenafeta-Boldu\
    \ FX, Ali MI. Agri-IoT: A semantic framework for Internet of Things-enabled \n\
    smart farming applications. In2016 IEEE 3rd World Forum on Internet of Things\
    \ (WF-IoT) 2016 Dec 12 (pp. 442-\n447). IEEE. \n[116] Radoglou-Grammatikis P,\
    \ Sarigiannidis P, Lagkas T, Moscholios I. A compilation of UAV applications for\
    \ precision \nagriculture. Computer Networks. 2020 May 8;172:107148. \n[117] Taylor\
    \ M. Climate-smart agriculture: what is it good for?. The Journal of Peasant Studies.\
    \ 2018 Jan 2;45(1):89-\n107. \n[118] Kumar R, Bhatia MP. A Systematic review of\
    \ the security in cloud computing: Data integrity, confidentiality and \navailability.\
    \ In2020 IEEE International Conference on Computing, Power and Communication Technologies\
    \ \n(GUCON) 2020 Oct 2 (pp. 334-337). IEEE. \n[119] Nyangaresi VO. Target Tracking\
    \ Area Selection and Handover Security in Cellular Networks: A Machine Learning\
    \ \nApproach. InProceedings of Third International Conference on Sustainable Expert\
    \ Systems: ICSES 2022 2023 Feb \n23 (pp. 797-816). Singapore: Springer Nature\
    \ Singapore. \n[120] Demestichas K, Peppes N, Alexakis T. Survey on security threats\
    \ in agricultural IoT and smart farming. Sensors. \n2020 Nov 12;20(22):6458. \n\
    [121] Basharat A, Mohamad MM. Security Challenges and Solutions for Internet of\
    \ Things based Smart Agriculture: A \nReview. In2022 4th International Conference\
    \ on Smart Sensors and Application (ICSSA) 2022 Jul 26 (pp. 102-\n107). IEEE.\
    \ \n[122] Yazdinejad A, Zolfaghari B, Azmoodeh A, Dehghantanha A, Karimipour H,\
    \ Fraser E, Green AG, Russell C, Duncan \nE. A review on security of smart farming\
    \ and precision agriculture: Security aspects, attacks, threats and \ncountermeasures.\
    \ Applied Sciences. 2021 Aug 16;11(16):7518. \n[123] de Araujo Zanella AR, da\
    \ Silva E, Albini LC. Security challenges to smart agriculture: Current state,\
    \ key issues, and \nfuture directions. Array. 2020 Dec 1;8:100048. \n[124] Abduljaleel\
    \ IQ, Abduljabbar ZA, Al Sibahee MA, Ghrabat MJ, Ma J, Nyangaresi VO. A Lightweight\
    \ Hybrid Scheme \nfor Hiding Text Messages in Colour Images Using LSB, Lah Transform\
    \ and Chaotic Techniques. Journal of Sensor \nand Actuator Networks. 2022 Dec;11(4):66.\
    \ \n[125] Lopez ID, Grass JF, Figueroa A, Corrales JC. A proposal for a multi‐domain\
    \ data fusion strategy in a climate‐smart \nagriculture context. International\
    \ Transactions in Operational Research. 2023 Jul;30(4):2049-70. \n[126] Kumar\
    \ PR, Raj PH, Jelciana P. Exploring data security issues and solutions in cloud\
    \ computing. Procedia Computer \nScience. 2018 Jan 1;125:691-7. \n[127] Mahajan\
    \ HB, Rashid AS, Junnarkar AA, Uke N, Deshpande SD, Futane PR, Alkhayyat A, Alhayani\
    \ B. Integration of \nHealthcare 4.0 and blockchain into secure cloud-based electronic\
    \ health records systems. Applied Nanoscience. \n2022 Feb 4:1-4. \n[128] Achar\
    \ S. Cloud Computing Security for Multi-Cloud Service Providers: Controls and\
    \ Techniques in our Modern \nThreat Landscape. International Journal of Computer\
    \ and Systems Engineering. 2022 Sep 13;16(9):379-84. \n[129] Nyangaresi VO. A\
    \ Formally Verified Authentication Scheme for mmWave Heterogeneous Networks. Inthe\
    \ 6th \nInternational Conference on Combinatorics, Cryptography, Computer Science\
    \ and Computation (605-612) 2021. \n[130] Li X, Wei L, Wang L, Ma Y, Zhang C,\
    \ Sohail M. A blockchain‐based privacy‐preserving authentication system for \n\
    ensuring multimedia content integrity. International Journal of Intelligent Systems.\
    \ 2022 May;37(5):3050-71. \n[131] Gupta DS, Karati A, Saad W, da Costa DB. Quantum-defended\
    \ blockchain-assisted data authentication protocol \nfor internet of vehicles.\
    \ IEEE Transactions on Vehicular Technology. 2022 Jan 25;71(3):3255-66. \n[132]\
    \ Das S, Namasudra S. A novel hybrid encryption method to secure healthcare data\
    \ in IoT-enabled healthcare \ninfrastructure. Computers and Electrical Engineering.\
    \ 2022 Jul 1;101:107991. \n[133] Chen CL, Yang J, Tsaur WJ, Weng W, Wu CM, Wei\
    \ X. Enterprise data sharing with privacy-preserved based on \nhyperledger fabric\
    \ blockchain in IIOT’s application. Sensors. 2022 Feb 2;22(3):1146. \nWorld Journal\
    \ of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1225 \n[134] Abduljabbar\
    \ ZA, Abduljaleel IQ, Ma J, Al Sibahee MA, Nyangaresi VO, Honi DG, Abdulsada AI,\
    \ Jiao X. Provably \nsecure and fast color image encryption algorithm based on\
    \ s-boxes and hyperchaotic map. IEEE Access. 2022 Feb \n11;10:26257-70. \n[135]\
    \ Dhruva AD, Prasad B, Kamepalli S, Kunisetti S. An efficient mechanism using\
    \ IoT and wireless communication for \nsmart farming. Materials Today: Proceedings.\
    \ 2023 Jan 1;80:3691-6. \n[136] Sontowski S, Gupta M, Chukkapalli SS, Abdelsalam\
    \ M, Mittal S, Joshi A, Sandhu R. Cyber attacks on smart farming \ninfrastructure.\
    \ In2020 IEEE 6th International Conference on Collaboration and Internet Computing\
    \ (CIC) 2020 \nDec 1 (pp. 135-143). IEEE. \n[137] Alahari HP, Yelavarthi SB. Performance\
    \ analysis of denial of service dos and distributed dos attack of application\
    \ \nand network layer of iot. In2019 Third International Conference on Inventive\
    \ Systems and Control (ICISC) 2019 \nJan 10 (pp. 72-81). IEEE. \n[138] Al-issa\
    \ AI, Al-Akhras M, ALsahli MS, Alawairdhi M. Using machine learning to detect\
    \ DoS attacks in wireless \nsensor networks. In2019 IEEE Jordan International\
    \ Joint Conference on Electrical Engineering and Information \nTechnology (JEEIT)\
    \ 2019 Apr 9 (pp. 107-112). IEEE. \n[139] Nyangaresi VO, Ma J. A Formally Verified\
    \ Message Validation Protocol for Intelligent IoT E-Health Systems. \nIn2022 IEEE\
    \ World Conference on Applied Intelligence and Computing (AIC) 2022 Jun 17 (pp.\
    \ 416-422). IEEE. \n[140] Prathibha SR, Hongal A, Jyothi MP. IoT based monitoring\
    \ system in smart agriculture. In2017 international \nconference on recent advances\
    \ in electronics and communication technology (ICRAECT) 2017 Mar 16 (pp. 81-\n\
    84). IEEE. \n[141] Gupta B, Madan G, Md AQ. A smart agriculture framework for\
    \ IoT based plant decay detection using smart croft \nalgorithm. Materials Today:\
    \ Proceedings. 2022 Jan 1;62:4758-63. \n[142] Jaiswal SP, Bhadoria VS, Agrawal\
    \ A, Ahuja H. Internet of Things (IoT) for smart agriculture and farming in \n\
    developing nations. International Journal of Scientific & Technology Research.\
    \ 2019;8(12):1049-56. \n[143] Lakhwani K, Gianey H, Agarwal N, Gupta S. Development\
    \ of IoT for smart agriculture a review. InEmerging Trends \nin Expert Applications\
    \ and Security: Proceedings of ICETEAS 2018 2019 (pp. 425-432). Springer Singapore.\
    \ \n[144] Nyakomitta PS, Nyangaresi VO, Ogara SO. Efficient authentication algorithm\
    \ for secure remote access in wireless \nsensor networks. Journal of Computer\
    \ Science Research. 2021 Aug;3(4):43-50. \n[145] Charania I, Li X. Smart farming:\
    \ Agriculture's shift from a labor intensive to technology native industry. Internet\
    \ \nof Things. 2020 Mar 1;9:100142. \n[146] McFadden J, Njuki E, Griffin T. Precision\
    \ Agriculture in the Digital Era: Recent Adoption on US Farms. \n[147] Rünzel\
    \ MA, Hassler EE, Rogers RE, Formato G, Cazier JA. Designing a smart honey supply\
    \ chain for sustainable \ndevelopment. IEEE Consumer Electronics Magazine. 2021\
    \ Feb 17;10(4):69-78. \n[148] Musa SF, Basir KH. Smart farming: towards a sustainable\
    \ agri-food system. British Food Journal. 2021 Aug \n13;123(9):3085-99. \n[149]\
    \ Nyangaresi VO. Provably Secure Pseudonyms based Authentication Protocol for\
    \ Wearable Ubiquitous Computing \nEnvironment. In2022 International Conference\
    \ on Inventive Computation Technologies (ICICT) 2022 Jul 20 (pp. \n1-6). IEEE.\
    \ \n[150] Ahmad MO, Tripathi G, Siddiqui F, Alam MA, Ahad MA, Akhtar MM, Casalino\
    \ G. BAuth-ZKP—A Blockchain-Based \nMulti-Factor Authentication Mechanism for\
    \ Securing Smart Cities. Sensors. 2023 Mar 2;23(5):2757. \n[151] Otta SP, Panda\
    \ S, Gupta M, Hota C. A Systematic Survey of Multi-Factor Authentication for Cloud\
    \ Infrastructure. \nFuture Internet. 2023 Apr 10;15(4):146. \n[152] Carrillo-Torres\
    \ D, Pérez-Díaz JA, Cantoral-Ceballos JA, Vargas-Rosales C. A Novel Multi-Factor\
    \ Authentication \nAlgorithm Based on Image Recognition and User Established Relations.\
    \ Applied Sciences. 2023 Jan \n20;13(3):1374. \n[153] Marasco E, Albanese M, Patibandla\
    \ VV, Vurity A, Sriram SS. Biometric multi‐factor authentication: On the usability\
    \ \nof the FingerPIN scheme. Security and Privacy. 2023 Jan;6(1):e261. \n[154]\
    \ Abood EW, Abdullah AM, Al Sibahe MA, Abduljabbar ZA, Nyangaresi VO, Kalafy SA,\
    \ Ghrabta MJ. Audio \nsteganography with enhanced LSB method for securing encrypted\
    \ text with bit cycling. Bulletin of Electrical \nEngineering and Informatics.\
    \ 2022 Feb 1;11(1):185-94. \nWorld Journal of Advanced Research and Reviews, 2023,\
    \ 18(03), 1207–1231 \n1226 \n[155] Bauwens J, Ruckebusch P, Giannoulis S, Moerman\
    \ I, De Poorter E. Over-the-air software updates in the internet \nof things:\
    \ An overview of key principles. IEEE Communications Magazine. 2020 Feb 14;58(2):35-41.\
    \ \n[156] Hu JW, Yeh LY, Liao SW, Yang CS. Autonomous and malware-proof blockchain-based\
    \ firmware update platform \nwith efficient batch verification for Internet of\
    \ Things devices. Computers & Security. 2019 Sep 1;86:238-52. \n[157] Ruge J,\
    \ Classen J, Gringoli F, Hollick M. Frankenstein: Advanced wireless fuzzing to\
    \ exploit new bluetooth \nescalation targets. InProceedings of the 29th USENIX\
    \ Conference on Security Symposium 2020 Aug 12 (pp. 19-\n36). \n[158] Mantz D,\
    \ Classen J, Schulz M, Hollick M. InternalBlue-Bluetooth binary patching and experimentation\
    \ framework. \nInProceedings of the 17th Annual International Conference on Mobile\
    \ Systems, Applications, and Services 2019 \nJun 12 (pp. 79-90). \n[159] Nyangaresi\
    \ VO. Lightweight anonymous authentication protocol for resource-constrained smart\
    \ home devices \nbased on elliptic curve cryptography. Journal of Systems Architecture.\
    \ 2022 Dec 1;133:102763. \n[160] Sapra L, Mathani A, Bhatnagar G. A thorough Analysis\
    \ of Blockchain's Potential for Internet of Things Applications \nin Precision\
    \ Agricultural Networks. Mathematical Statistician and Engineering Applications.\
    \ 2022 Sep \n28;71(4):4141-59. \n[161] Bodkhe U, Tanwar S, Bhattacharya P, Kumar\
    \ N. Blockchain for precision irrigation: Opportunities and challenges. \nTransactions\
    \ on Emerging Telecommunications Technologies. 2022 Oct;33(10):e4059. \n[162]\
    \ Rayes A, Salam S. Internet of things from hype to reality. Cham: Springer International\
    \ Publishing; 2019. \n[163] Mehmood MY, Oad A, Abrar M, Munir HM, Hasan SF, Muqeet\
    \ HA, Golilarz NA. Edge computing for IoT-enabled \nsmart grid. Security and Communication\
    \ Networks. 2021 Jul 13;2021:1-6. \n[164] Hussain MA, Hussien ZA, Abduljabbar\
    \ ZA, Ma J, Al Sibahee MA, Hussain SA, Nyangaresi VO, Jiao X. Provably \nthrottling\
    \ SQLI using an enciphering query and secure matching. Egyptian Informatics Journal.\
    \ 2022 Dec 1; \n23(4):145-62. \n[165] Dinculeană D, Cheng X. Vulnerabilities and\
    \ limitations of MQTT protocol used between IoT devices. Applied \nSciences. 2019\
    \ Feb 27;9(5):848. \n[166] Gupta S, Garg R, Gupta N, Alnumay WS, Ghosh U, Sharma\
    \ PK. Energy-efficient dynamic homomorphic security \nscheme for fog computing\
    \ in IoT networks. Journal of Information Security and Applications. 2021 May\
    \ \n1;58:102768. \n[167] Mrabet H, Belguith S, Alhomoud A, Jemai A. A survey of\
    \ IoT security based on a layered architecture of sensing \nand data analysis.\
    \ Sensors. 2020 Jun 28;20(13):3625. \n[168] Hatzivasilis G, Soultatos O, Ioannidis\
    \ S, Verikoukis C, Demetriou G, Tsatsoulis C. Review of security and privacy \n\
    for the Internet of Medical Things (IoMT). In2019 15th international conference\
    \ on distributed computing in \nsensor systems (DCOSS) 2019 May 29 (pp. 457-464).\
    \ IEEE. \n[169] Nyangaresi VO. Lightweight key agreement and authentication protocol\
    \ for smart homes. In2021 IEEE AFRICON \n2021 Sep 13 (pp. 1-6). IEEE. \n[170]\
    \ Salih FI, Abas HB, Azizan A, Daud SM. Enhancement of Physical Security Control\
    \ for Data Centre and Perimeter in \nBanking: A Case Study of Central Bank of\
    \ Sudan (CBOS). Open International Journal of Informatics (OIJI). 2018 \nNov 27:67-84.\
    \ \n[171] Silva MA. Security Measures: Physical Security. InStrategic Security\
    \ Management 2019 Sep 5 (pp. 123-153). CRC \nPress. \n[172] Al-Fedaghi S, Alsumait\
    \ O. Towards a conceptual foundation for physical security: Case study of an it\
    \ department. \nInternational Journal of Safety and Security Engineering. 2019\
    \ Jun 30;9(2):137-56. \n[173] Al Zaabi SH, Zamri R, Yassin SW. Developing a Conceptual\
    \ Model for Integrating FRT in Oil and Gas Company \nPhysical Security: A Comparative\
    \ Study of Security Models. resmilitaris. 2023 Mar 2;13(2):4528-46. \n[174] Alshaikh\
    \ M, Naseer H, Ahmad A, Maynard SB. Toward sustainable behaviour change: an approach\
    \ for cyber \nsecurity education training and awareness. \n[175] Sinha BB, Dhanalakshmi\
    \ R. Recent advancements and challenges of Internet of Things in smart agriculture:\
    \ A \nsurvey. Future Generation Computer Systems. 2022 Jan 1;126:169-84. \nWorld\
    \ Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1227 \n\
    [176] Nyangaresi VO, Ahmad M, Alkhayyat A, Feng W. Artificial neural network and\
    \ symmetric key cryptography based \nverification protocol for 5G enabled Internet\
    \ of Things. Expert Systems. 2022 Dec;39(10):e13126. \n[177] Hazrati M, Dara R,\
    \ Kaur J. On-farm data security: practical recommendations for securing farm data.\
    \ Front. \nSustain. Food Syst. 6: 884187. doi: 10.3389/fsufs. 2022 Jun 21. \n\
    [178] Sharma V, Tripathi AK, Mittal H. Technological revolutions in smart farming:\
    \ Current trends, challenges & future \ndirections. Computers and Electronics\
    \ in Agriculture. 2022 Aug 13:107217. \n[179] Birkinshaw C, Rouka E, Vassilakis\
    \ VG. Implementing an intrusion detection and prevention system using \nsoftware-defined\
    \ networking: Defending against port-scanning and denial-of-service attacks. Journal\
    \ of Network \nand Computer Applications. 2019 Jun 15;136:71-85. \n[180] Thapa\
    \ S, Mailewa A. The role of intrusion detection/prevention systems in modern computer\
    \ networks: A review. \nInConference: Midwest Instruction and Computing Symposium\
    \ (MICS) 2020 Apr 28 (Vol. 53, pp. 1-14). \n[181] Al Sibahee MA, Abdulsada AI,\
    \ Abduljabbar ZA, Ma J, Nyangaresi VO, Umran SM. Lightweight, Secure, Similar-\n\
    Document Retrieval over Encrypted Data. Applied Sciences. 2021 Jan;11(24):12040.\
    \ \n[182] Saxena UR, Alam T. Role-based access using partial homomorphic encryption\
    \ for securing cloud data. \nInternational Journal of System Assurance Engineering\
    \ and Management. 2023 Mar 30:1-7. \n[183] Abd-El-Atty B, ElAffendi M, El-Latif\
    \ AA. A novel image cryptosystem using Gray code, quantum walks, and Henon \n\
    map for cloud applications. Complex & Intelligent Systems. 2023 Feb;9(1):609-24.\
    \ \n[184] Deepak S, Abimanyu NK, Kumar H. Review On Prevention of Data Leakage\
    \ in Cloud Server by Utilizing \nWatermarking and Double Encryption Techniques.\
    \ In2023 9th International Conference on Advanced \nComputing and Communication\
    \ Systems (ICACCS) 2023 Mar 17 (Vol. 1, pp. 1619-1625). IEEE. \n[185] Lin H, Xue\
    \ Q, Feng J, Bai D. Internet of things intrusion detection model and algorithm\
    \ based on cloud computing \nand multi-feature extraction extreme learning machine.\
    \ Digital Communications and Networks. 2023 Feb \n1;9(1):111-24. \n[186] Nyangaresi\
    \ VO. Terminal independent security token derivation scheme for ultra-dense IoT\
    \ networks. Array. \n2022 Sep 1;15:100210. \n[187] Anand P, Singh Y, Selwal A,\
    \ Alazab M, Tanwar S, Kumar N. IoT vulnerability assessment for sustainable \n\
    computing: threats, current solutions, and open challenges. IEEE Access. 2020\
    \ Sep 9;8:168825-53. \n[188] West J. A prediction model framework for cyber-attacks\
    \ to precision agriculture technologies. Journal of \nAgricultural & Food Information.\
    \ 2018 Oct 2;19(4):307-30. \n[189] Yaacoub JP, Salman O, Noura HN, Kaaniche N,\
    \ Chehab A, Malli M. Cyber-physical systems security: Limitations, \nissues and\
    \ future trends. Microprocessors and microsystems. 2020 Sep 1;77:103201. \n[190]\
    \ Watkins L, Ramos J, Snow G, Vallejo J, Robinson WH, Rubin AD, Ciocco J, Jedrzejewski\
    \ F, Liu J, Li C. Exploiting \nmulti-vendor vulnerabilities as back-doors to counter\
    \ the threat of rogue small unmanned aerial systems. \nInProceedings of the 1st\
    \ ACM MobiHoc workshop on mobile IoT sensing, security, and privacy 2018 Jun 26\
    \ (pp. \n1-6). \n[191] Abood EW, Hussien ZA, Kawi HA, Abduljabbar ZA, Nyangaresi\
    \ VO, Ma J, Al Sibahee MA, Kalafy A, Ahmad S. \nProvably secure and efficient\
    \ audio compression based on compressive sensing. International Journal of \n\
    Electrical & Computer Engineering (2088-8708). 2023 Feb 1;13(1). \n[192] Senoo\
    \ EE, Akansah E, Mendonça I, Aritsugi M. Monitoring and Control Framework for\
    \ IoT, Implemented for Smart \nAgriculture. Sensors. 2023 Mar 1;23(5):2714. \n\
    [193] Glaroudis D, Iossifides A, Chatzimisios P. Survey, comparison and research\
    \ challenges of IoT application protocols \nfor smart farming. Computer Networks.\
    \ 2020 Feb 26;168:107037. \n[194] Aljedaani B, Ahmad A, Zahedi M, Babar MA. End-users’\
    \ knowledge and perception about security of clinical \nmobile health apps: A\
    \ case study with two Saudi Arabian mHealth providers. Journal of Systems and\
    \ Software. \n2023 Jan 1;195:111519. \n[195] Qin ZZ, Barrett R, del Mar Castro\
    \ M, Zaidi S, Codlin AJ, Creswell J, Denkinger CM. Early user experience and lessons\
    \ \nlearned using ultra-portable digital X-ray with computer-aided detection (DXR-CAD)\
    \ products: A qualitative \nstudy from the perspective of healthcare providers.\
    \ Plos one. 2023 Feb 24;18(2):e0277843. \nWorld Journal of Advanced Research and\
    \ Reviews, 2023, 18(03), 1207–1231 \n1228 \n[196] Nyangaresi VO. A Formally Validated\
    \ Authentication Algorithm for Secure Message Forwarding in Smart Home \nNetworks.\
    \ SN Computer Science. 2022 Jul 9;3(5):364. \n[197] Telo J. Smart City Security\
    \ Threats and Countermeasures in the Context of Emerging Technologies. International\
    \ \nJournal of Intelligent Automation and Computing. 2023 Feb 27;6(1):31-45. \n\
    [198] Islam SN, Baig Z, Zeadally S. Physical layer security for the smart grid:\
    \ Vulnerabilities, threats, and \ncountermeasures. IEEE Transactions on Industrial\
    \ Informatics. 2019 Jul 26;15(12):6522-30. \n[199] Sayed MA, Atallah R, Assi C,\
    \ Debbabi M. Electric vehicle attack impact on power grid operation. International\
    \ \nJournal of Electrical Power & Energy Systems. 2022 May 1;137:107784. \n[200]\
    \ Javaid M, Haleem A, Khan IH, Suman R. Understanding the potential applications\
    \ of Artificial Intelligence in \nAgriculture Sector. Advanced Agrochem. 2023\
    \ Mar 1;2(1):15-30. \n[201] Juncal MJ, Masino P, Bertone E, Stewart RA. Towards\
    \ nutrient neutrality: A review of agricultural runoff \nmitigation strategies\
    \ and the development of a decision-making framework. Science of The Total Environment.\
    \ \n2023 May 20;874:162408. \n[202] Kitchin R, Dodge M. The (in) security of smart\
    \ cities: Vulnerabilities, risks, mitigation, and prevention. Journal of \nurban\
    \ technology. 2019 Apr 3;26(2):47-65. \n[203] Nyangaresi VO. Hardware assisted\
    \ protocol for attacks prevention in ad hoc networks. InEmerging Technologies\
    \ \nin Computing: 4th EAI/IAER International Conference, iCETiC 2021, Virtual\
    \ Event, August 18–19, 2021, \nProceedings 4 2021 (pp. 3-20). Springer International\
    \ Publishing. \n[204] Gill SS, Xu M, Ottaviani C, Patros P, Bahsoon R, Shaghaghi\
    \ A, Golec M, Stankovski V, Wu H, Abraham A, Singh M. AI \nfor next generation\
    \ computing: Emerging trends and future directions. Internet of Things. 2022 Aug\
    \ \n1;19:100514. \n[205] Jakku E, Taylor B, Fleming A, Mason C, Fielke S, Sounness\
    \ C, Thorburn P. “If they don’t tell us what they do with \nit, why would we trust\
    \ them?” Trust, transparency and benefit-sharing in Smart Farming. NJAS-Wageningen\
    \ \nJournal of Life Sciences. 2019 Dec 1;90:100285. \n[206] Gayatri MK, Jayasakthi\
    \ J, Mala GA. Providing Smart Agricultural solutions to farmers for better yielding\
    \ using IoT. \nIn2015 IEEE Technological Innovation in ICT for Agriculture and\
    \ Rural Development (TIAR) 2015 Jul 10 (pp. 40-\n43). IEEE. \n[207] Khanna A,\
    \ Kaur S. Evolution of Internet of Things (IoT) and its significant impact in\
    \ the field of Precision \nAgriculture. Computers and electronics in agriculture.\
    \ 2019 Feb 1;157:218-31. \n[208] Mitra A, Vangipuram SL, Bapatla AK, Bathalapalli\
    \ VK, Mohanty SP, Kougianos E, Ray C. Everything you wanted to \nknow about smart\
    \ agriculture. arXiv preprint arXiv:2201.04754. 2022 Jan 13. \n[209] Nyangaresi\
    \ VO, Mohammad Z. Privacy preservation protocol for smart grid networks. In2021\
    \ International \nTelecommunications Conference (ITC-Egypt) 2021 Jul 13 (pp. 1-4).\
    \ IEEE. \n[210] Heideker A, Ottolini D, Zyrianoff I, Neto AT, Cinotti TS, Kamienski\
    \ C. IoT-based measurement for smart \nagriculture. In2020 IEEE International\
    \ Workshop on Metrology for Agriculture and Forestry (MetroAgriFor) \n2020 Nov\
    \ 4 (pp. 68-72). IEEE. \n[211] Popović T, Latinović N, Pešić A, Zečević Ž, Krstajić\
    \ B, Djukanović S. Architecting an IoT-enabled platform for \nprecision agriculture\
    \ and ecological monitoring: A case study. Computers and electronics in agriculture.\
    \ 2017 \nAug 1;140:255-65. \n[212] Pranto TH, Noman AA, Mahmud A, Haque AB. Blockchain\
    \ and smart contract for IoT enabled smart agriculture. \nPeerJ Computer Science.\
    \ 2021 Mar 31;7:e407. \n[213] Jayaraman PP, Yavari A, Georgakopoulos D, Morshed\
    \ A, Zaslavsky A. Internet of things platform for smart \nfarming: Experiences\
    \ and lessons learnt. Sensors. 2016 Nov 9;16(11):1884. \n[214] Qiu Z, Ma J, Zhang\
    \ H, Al Sibahee MA, Abduljabbar ZA, Nyangaresi VO. Concurrent pipeline rendering\
    \ scheme based \non GPU multi-queue and partitioning images. InInternational Conference\
    \ on Optics and Machine Vision (ICOMV \n2023) 2023 Apr 14 (Vol. 12634, pp. 143-149).\
    \ SPIE. \n[215] Bazzana D, Foltz J, Zhang Y. Impact of climate smart agriculture\
    \ on food security: an agent-based analysis. Food \nPolicy. 2022 Aug 1;111:102304.\
    \ \nWorld Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n\
    1229 \n[216] Amiri-Zarandi M, Hazrati Fard M, Yousefinaghani S, Kaviani M, Dara\
    \ R. A platform approach to smart farm \ninformation processing. Agriculture.\
    \ 2022 Jun 10;12(6):838. \n[217] Shaaban AM, Chlup S, El-Araby N, Schmittner C.\
    \ Towards Optimized Security Attributes for IoT Devices in Smart \nAgriculture\
    \ Based on the IEC 62443 Security Standard. Applied Sciences. 2022 Jun 2;12(11):5653.\
    \ \n[218] Riaz AR, Gilani SM, Naseer S, Alshmrany S, Shafiq M, Choi JG. Applying\
    \ Adaptive Security Techniques for Risk \nAnalysis of Internet of Things (IoT)-Based\
    \ Smart Agriculture. Sustainability. 2022 Sep 2;14(17):10964. \n[219] Nyangaresi\
    \ VO. Provably secure protocol for 5G HetNets. In2021 IEEE International Conference\
    \ on Microwaves, \nAntennas, Communications and Electronic Systems (COMCAS) 2021\
    \ Nov 1 (pp. 17-22). IEEE. \n[220] Al Asif MR, Hasan KF, Islam MZ, Khondoker R.\
    \ STRIDE-based cyber security threat modeling for IoT-enabled \nprecision agriculture\
    \ systems. In2021 3rd International Conference on Sustainable Technologies for\
    \ Industry 4.0 \n(STI) 2021 Dec 18 (pp. 1-6). IEEE. \n[221] Cho SH, Kang DS, Kang\
    \ MS, Kim HS, Bae JW, Lee CI, Ji HB, Won YH, Hong HK, Kim K. A study on threat\
    \ modeling \nin smart greenhouses. \n[222] Catalano C, Paiano L, Calabrese F,\
    \ Cataldo M, Mancarella L, Tommasi F. Anomaly detection in smart agriculture \n\
    systems. Computers in Industry. 2022 Dec 1;143:103750. \n[223] Valenza F, Karafili\
    \ E, Steiner RV, Lupu EC. A hybrid threat model for smart systems. IEEE Transactions\
    \ on \nDependable and Secure Computing. 2022 Oct 11. \n[224] Rodríguez JP, Montoya-Munoz\
    \ AI, Rodriguez-Pabon C, Hoyos J, Corrales JC. IoT-Agro: A smart farming system\
    \ to \nColombian coffee farms. Computers and Electronics in Agriculture. 2021\
    \ Nov 1;190:106442. \n[225] Nyangaresi VO. ECC based authentication scheme for\
    \ smart homes. In2021 International Symposium ELMAR \n2021 Sep 13 (pp. 5-10).\
    \ IEEE. \n[226] Liu W, Shao XF, Wu CH, Qiao P. A systematic literature review\
    \ on applications of information and communication \ntechnologies and blockchain\
    \ technologies for precision agriculture development. Journal of Cleaner Production.\
    \ \n2021 May 20;298:126763. \n[227] Chaganti R, Varadarajan V, Gorantla VS, Gadekallu\
    \ TR, Ravi V. Blockchain-based cloud-enabled security \nmonitoring using Internet\
    \ of Things in smart agriculture. Future Internet. 2022 Aug 24;14(9):250. \n[228]\
    \ Shyamala Devi M, Suguna R, Joshi AS, Bagate RA. Design of IoT blockchain based\
    \ smart agriculture for \nenlightening safety and security. InEmerging Technologies\
    \ in Computer Engineering: Microservices in Big Data \nAnalytics: Second International\
    \ Conference, ICETCE 2019, Jaipur, India, February 1–2, 2019, Revised Selected\
    \ \nPapers 2 2019 (pp. 7-19). Springer Singapore. \n[229] Sajja GS, Rane KP, Phasinam\
    \ K, Kassanuk T, Okoronkwo E, Prabhu P. Towards applicability of blockchain in\
    \ \nagriculture sector. Materials Today: Proceedings. 2023 Jan 1;80:3705-8. \n\
    [230] Xiong H, Dalhaus T, Wang P, Huang J. Blockchain technology for agriculture:\
    \ applications and rationale. frontiers \nin Blockchain. 2020 Feb 21;3:7. \n[231]\
    \ Nyangaresi VO, Abd‐Elnaby M, Eid MM, Nabih Zaki Rashed A. Trusted authority\
    \ based session key agreement and \nauthentication algorithm for smart grid networks.\
    \ Transactions on Emerging Telecommunications Technologies. \n2022 Sep;33(9):e4528.\
    \ \n[232] Kumar R, Kumar P, Tripathi R, Gupta GP, Gadekallu TR, Srivastava G.\
    \ SP2F: A secured privacy-preserving \nframework for smart agricultural Unmanned\
    \ Aerial Vehicles. Computer Networks. 2021 Mar 14;187:107819. \n[233] Song J,\
    \ Zhong Q, Wang W, Su C, Tan Z, Liu Y. FPDP: Flexible privacy-preserving data\
    \ publishing scheme for smart \nagriculture. IEEE Sensors Journal. 2020 Aug 18;21(16):17430-8.\
    \ \n[234] Yang X, Shu L, Chen J, Ferrag MA, Wu J, Nurellari E, Huang K. A survey\
    \ on smart agriculture: Development modes, \ntechnologies, and security and privacy\
    \ challenges. IEEE/CAA Journal of Automatica Sinica. 2021;8(2):273-302. \n[235]\
    \ Nyakomitta SP, Omollo V. Biometric-Based Authentication Model for E-Card Payment\
    \ Technology. IOSR Journal \nof Computer Engineering (IOSRJCE). 2014;16(5):137-44.\
    \ \n[236] Friha O, Ferrag MA, Shu L, Maglaras L, Choo KK, Nafaa M. FELIDS: Federated\
    \ learning-based intrusion detection \nsystem for agricultural Internet of Things.\
    \ Journal of Parallel and Distributed Computing. 2022 Jul 1;165:17-31. \nWorld\
    \ Journal of Advanced Research and Reviews, 2023, 18(03), 1207–1231 \n1230 \n\
    [237] El-Ghamry A, Darwish A, Hassanien AE. An optimized CNN-based intrusion detection\
    \ system for reducing risks \nin smart farming. Internet of Things. 2023 Jul 1;22:100709.\
    \ \n[238] Saba T, Rehman A, Sadad T, Kolivand H, Bahaj SA. Anomaly-based intrusion\
    \ detection system for IoT networks \nthrough deep learning model. Computers and\
    \ Electrical Engineering. 2022 Apr 1;99:107810. \n[239] Kheddar H, Himeur Y, Awad\
    \ AI. Deep Transfer Learning Applications in Intrusion Detection Systems: A \n\
    Comprehensive Review. arXiv preprint arXiv:2304.10550. 2023 Apr 19. \n[240] Al\
    \ Sibahee MA, Ma J, Nyangaresi VO, Abduljabbar ZA. Efficient Extreme Gradient\
    \ Boosting Based Algorithm for \nQoS Optimization in Inter-Radio Access Technology\
    \ Handoffs. In2022 International Congress on Human-\nComputer Interaction, Optimization\
    \ and Robotic Applications (HORA) 2022 Jun 9 (pp. 1-6). IEEE. \n[241] Wang M,\
    \ Yang N, Weng N. Securing a Smart Home with a Transformer-Based IoT Intrusion\
    \ Detection System. \nElectronics. 2023 May 4;12(9):2100. \n[242] Martins I, Resende\
    \ JS, Sousa PR, Silva S, Antunes L, Gama J. Host-based IDS: A review and open\
    \ issues of an \nanomaly detection system in IoT. Future Generation Computer Systems.\
    \ 2022 Mar 15. \n[243] Fernandes G, Rodrigues JJ, Carvalho LF, Al-Muhtadi JF,\
    \ Proença ML. A comprehensive survey on network anomaly \ndetection. Telecommunication\
    \ Systems. 2019 Mar 15;70:447-89. \n[244] Bécue A, Praça I, Gama J. Artificial\
    \ intelligence, cyber-threats and Industry 4.0: Challenges and opportunities.\
    \ \nArtificial Intelligence Review. 2021 Jun;54(5):3849-86. \n[245] Nyangaresi\
    \ VO, Abduljabbar ZA, Ma J, Al Sibahee MA. Verifiable Security and Privacy Provisioning\
    \ Protocol for \nHigh Reliability in Smart Healthcare Communication Environment.\
    \ In2022 4th Global Power, Energy and \nCommunication Conference (GPECOM) 2022\
    \ Jun 14 (pp. 569-574). IEEE. \n[246] Escobedo P, Ramos-Lorente CE, Ejaz A, Erenas\
    \ MM, Martínez-Olmos A, Carvajal MA, García-Núñez C, de Orbe-\nPayá I, Capitán-Vallvey\
    \ LF, Palma AJ. QRsens: Dual-purpose Quick Response code with built-in colorimetric\
    \ \nsensors. Sensors and Actuators B: Chemical. 2023 Feb 1;376:133001. \n[247]\
    \ Shrivastava A, Krishna KM, Rinawa ML, Soni M, Ramkumar G, Jaiswal S. Inclusion\
    \ of IoT, ML, and blockchain \ntechnologies in next generation industry 4.0 environment.\
    \ Materials Today: Proceedings. 2023 Jan 1;80:3471-5. \n[248] Dehlaghi-Ghadim\
    \ A, Balador A, Moghadam MH, Hansson H, Conti M. ICSSIM—A framework for building\
    \ industrial \ncontrol systems security testbeds. Computers in Industry. 2023\
    \ Jun 1;148:103906. \n[249] Nandy T, Idris MY, Noor RM, Kiah LM, Lun LS, Juma’at\
    \ NB, Ahmedy I, Ghani NA, Bhattacharyya S. Review on \nsecurity of internet of\
    \ things authentication mechanism. IEEE Access. 2019 Oct 16;7:151054-89. \n[250]\
    \ Omollo VN, Musyoki S. Blue bugging Java Enabled Phones via Bluetooth Protocol\
    \ Stack Flaws. International \nJournal of Computer and Communication System Engineering.\
    \ 2015 Jun 9, 2 (4):608-613. \n[251] Radoglou-Grammatikis P, Sarigiannidis P,\
    \ Iturbe E, Rios E, Martinez S, Sarigiannidis A, Eftathopoulos G, Spyridis \n\
    Y, Sesis A, Vakakis N, Tzovaras D. Spear siem: A security information and event\
    \ management system for the smart \ngrid. Computer Networks. 2021 Jul 5;193:108008.\
    \ \n[252] Morufu O, Juliana N, Abdulhamid SI, Odey P. Performance Analysis of\
    \ Security Information and Event \nManagement Solutions Detecting Web-Based Attacks.\
    \ Proceedings of the Cyber Secure Nigeria 2019 Conference, \nCBN International\
    \ Training Institute, Maitama, Abuja, Nigeria. \n[253] Miloslavskaya N, Tolstoy\
    \ A. IoTBlockSIEM for information security incident management in the internet\
    \ of things \necosystem. Cluster Computing. 2020 Sep;23:1911-25. \n[254] Alsamhi\
    \ SH, Shvetsov AV, Kumar S, Shvetsova SV, Alhartomi MA, Hawbani A, Rajput NS,\
    \ Srivastava S, Saif A, \nNyangaresi VO. UAV computing-assisted search and rescue\
    \ mission framework for disaster and harsh \nenvironment mitigation. Drones. 2022\
    \ Jun 22;6(7):154. \n[255] Noguchi T, Nakagawa M, Yoshida M, Ramonet AG. A Secure\
    \ Secret Key-Sharing System for Resource-Constrained \nIoT Devices using MQTT.\
    \ In2022 24th International Conference on Advanced Communication Technology \n\
    (ICACT) 2022 Feb 13 (pp. 147-153). IEEE. \n[256] Singh P, Acharya B, Chaurasiya\
    \ RK. Lightweight cryptographic algorithms for resource-constrained IoT devices\
    \ \nand sensor networks. InSecurity and Privacy Issues in IoT Devices and Sensor\
    \ Networks 2021 Jan 1 (pp. 153-\n185). Academic Press. \nWorld Journal of Advanced\
    \ Research and Reviews, 2023, 18(03), 1207–1231 \n1231 \n[257] Suárez-Albela M,\
    \ Fraga-Lamas P, Castedo L, Fernández-Caramés TM. Clock frequency impact on the\
    \ performance \nof high-security cryptographic cipher suites for energy-efficient\
    \ resource-constrained IoT devices. Sensors. 2018 \nDec 20;19(1):15. \n[258] Thakor\
    \ VA, Razzaque MA, Khandaker MR. Lightweight cryptography algorithms for resource-constrained\
    \ IoT \ndevices: A review, comparison and research opportunities. IEEE Access.\
    \ 2021 Jan 19;9:28177-93. \n[259] Nyangaresi VO, Ibrahim A, Abduljabbar ZA, Hussain\
    \ MA, Al Sibahee MA, Hussien ZA, Ghrabat MJ. Provably Secure \nSession Key Agreement\
    \ Protocol for Unmanned Aerial Vehicles Packet Exchanges. In2021 International\
    \ \nConference on Electrical, Computer and Energy Technologies (ICECET) 2021 Dec\
    \ 9 (pp. 1-6). IEEE. \n[260] Chukkapalli SS, Ranade P, Mittal S, Joshi A. A Privacy\
    \ Preserving Anomaly Detection Framework for Cooperative \nSmart Farming Ecosystem.\
    \ In2021 Third IEEE International Conference on Trust, Privacy and Security in\
    \ \nIntelligent Systems and Applications (TPS-ISA) 2021 Dec 13 (pp. 340-347).\
    \ IEEE. \n[261] Yan Q, Lou J, Vuran MC, Irmak S. Scalable Privacy-preserving Geo-distance\
    \ Evaluation for Precision Agriculture \nIoT Systems. ACM Transactions on Sensor\
    \ Networks (TOSN). 2021 Jul 22;17(4):1-30. \n[262] Huning L, Bauer J, Aschenbruck\
    \ N. A privacy preserving mobile crowdsensing architecture for a smart farming\
    \ \napplication. InProceedings of the First ACM Workshop on Mobile Crowdsensing\
    \ Systems and Applications 2017 \nNov 6 (pp. 62-67). \n[263] Zhou M, Zheng Y,\
    \ Guan Y, Peng L, Lu R. Efficient and privacy-preserving range-max query in fog-based\
    \ agricultural \nIoT. Peer-to-Peer Networking and Applications. 2021 Jul;14(4):2156-70.\
    \ \n[264] Rashed AN, Ahammad SH, Daher MG, Sorathiya V, Siddique A, Asaduzzaman\
    \ S, Rehana H, Dutta N, Patel SK, \nNyangaresi VO, Jibon RH. Spatial single mode\
    \ laser source interaction with measured pulse based parabolic index \nmultimode\
    \ fiber. Journal of Optical Communications. 2022 Jun 21. \n[265] Tiwari S, Jain\
    \ A, Sapra V, Koundal D, Alenezi F, Polat K, Alhudhaif A, Nour M. A smart decision\
    \ support system to \ndiagnose arrhythymia using ensembled ConvNet and ConvNet-LSTM\
    \ model. Expert Systems with Applications. \n2023 Mar 1;213:118933. \n[266] Wuni\
    \ IY, Mazher KM. Ending the suitability quantification dilemma: intelligent decision\
    \ support system for \nmodular integrated construction in a high-density metropolis.\
    \ Construction Innovation. 2023 Jan 11(ahead-of-\nprint). \n[267] Gardezi M, Stock\
    \ R. Growing algorithmic governmentality: Interrogating the social construction\
    \ of trust in \nprecision agriculture. Journal of Rural Studies. 2021 May 1;84:1-1.\
    \ \n[268] Ofori M, El-Gayar O. Drivers and challenges of precision agriculture:\
    \ a social media perspective. Precision \nAgriculture. 2021 Jun;22:1019-44. \n"
  inline_citation: '>'
  journal: World Journal Of Advanced Research and Reviews
  limitations: '>'
  pdf_link: https://wjarr.com/sites/default/files/WJARR-2023-1241.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'An extensive survey of smart agriculture technologies: Current security
    posture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2021.3074081
  analysis: '>'
  authors:
  - Andrew S. Holmes
  - Michail E. Kiziroglou
  - Shusen Yang
  - Yuan Cai
  - David E. Boyle
  - D. M. Lincoln
  - J. D. J. McCabe
  - Paul Szasz
  - S. C. Keeping
  - Daryl R. Williams
  - Eric M. Yeatman
  citation_count: 4
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 9 Issue: 16 Minimally Invasive Online Water Monitor Publisher: IEEE Cite
    This PDF A. S. Holmes; M. E. Kiziroglou; S. K. E. Yang; C. Yuan; D. E. Boyle;
    D. M. Lincoln; J. D. J. McCabe; P. Szasz; S. C. Keeping; D. R. Williams All Authors
    5 Cites in Papers 859 Full Text Views Open Access Under a Creative Commons License
    Abstract Document Sections I. Introduction II. Minimally Invasive Multisensor
    III. Multisensor Probe Design IV. Sensor Node Electronics V. Evaluation Setup
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    Sensor installation on water infrastructure is challenging due to requirements
    for service interruption, specialized personnel, regulations and reliability as
    well as the resultant high costs. Here, a minimally invasive installation method
    is introduced based on hot-tapping and immersion of a sensor probe. A modular
    architecture is developed that enables the use of interchangeable multisensor
    probes, nonspecialist installation and servicing, low-power operation and configurable
    sensing and connectivity. A prototype implementation with a temperature, pressure,
    conductivity and flow multisensor probe is presented and tested on an evaluation
    rig. This article demonstrates simple installation, reliable and accurate sensing
    capability as well as remote data acquisition. The demonstrated minimally invasive
    multisensor probes provide an opportunity for the deployment of water quality
    sensors that typically require immersion, such as pH and spectroscopic composition
    analysis. This design allows dynamic deployment on existing water infrastructure
    with expandable sensing capability and minimal interruption, which can be key
    to addressing important sensing parameters, such as optimal sensor network density
    and topology. Published in: IEEE Internet of Things Journal ( Volume: 9, Issue:
    16, 15 August 2022) Page(s): 14325 - 14335 Date of Publication: 19 April 2021
    ISSN Information: DOI: 10.1109/JIOT.2021.3074081 Publisher: IEEE Funding Agency:
    CCBY - IEEE is not the copyright holder of this material. Please follow the instructions
    via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles
    and stipulations in the API documentation. SECTION I. Introduction The objective
    of monitoring water infrastructure is to facilitate a safe, sustainable, reliable
    and cost-effective service. Water distribution wireless sensor networks typically
    employ sensors measuring various quantities, including level, temperature, pressure,
    flow, turbidity, pH, chlorine concentration, as well as other chemical properties
    [1]–[3]. They provide low-level knowledge, such as availability, usage, leakage,
    backflow events, quality, and contamination. This information can be transformed
    into higher level knowledge, such as reservoir availability, environmental impact,
    network utility, condition of network infrastructure, distribution performance,
    reliability, sustainability, safety and security, and quality of service. Such
    system knowledge can underpin services, including network surveillance and active
    management, operational optimization, economic forecasting, asset and risk management,
    scheduled maintenance, and service billing, and may be extended to irrigation
    scheduling in precision agriculture and management of decentralized systems like
    gray water reuse networks [4]. A schematic overview of this hierarchy for water
    sensing technology is shown in Fig. 1. Fig. 1. From sensor to service: a hierarchical
    overview of water sensing technology. Show All Wireless sensing technologies have
    been rapidly advancing in the last decade, offering multiple sensors, powerful
    data processing and fast remote communication capabilities to water networks.
    In addition, abstractive data analysis software enables new opportunities for
    node and network level intelligence. At a sensor node level, various integrated
    water quality systems have emerged recently. For example, in [5], a single-substrate
    pH, chlorine and temperature electrochemical multisensor is demonstrated as an
    in-situ analysis system, in integration with a commercial microcontroller and
    communication platform or a field programmable gate array (FPGA) microchip [6].
    An ultraviolet–visible spectrophotometry analyzer has also been developed for
    chemical oxygen demand and ammonia-nitrogen determinations [7]. Unresolved challenges
    in the state-of-the-art solutions of this type include efficient energy provision
    and management at the sensor node level, and installation requirements which are
    often not compatible with existing water distribution infrastructure. This challenge
    is especially important because existing, predominantly old infrastructure is
    more prone to leakage, quality issues and malfunction and is therefore a priority
    for monitoring. Typically, commercial water monitoring systems require the insertion
    of a separate pipe assembly containing the measurement devices into the pipeline
    [8]–[10]. This necessitates major interruptive installation works, involving valve-to-valve
    underground access, specialized personnel, and the installation of pipe assemblies
    with different materials and technologies. These are key limiting factors for
    the large-scale deployment of sensor networks in water infrastructure. Noninvasive,
    acoustic technologies for pipeline corrosion monitoring have been used successfully,
    mainly as portable diagnostic tools, and such methods for sensing other quantities,
    including liquid flow, have been commercialized in recent years [11], [12]. However,
    these acoustic methods still face a number of challenges around their installation
    and operation. On the other hand, water quality metrics, such as pH, conductivity,
    and spectroscopic analysis require direct contact with the water sample of interest.
    In this article, a minimally invasive method for installing sensor nodes on existing
    water distribution infrastructure is presented. It is based on a small-scale hot-tapping
    method and the insertion of a small diameter sensing probe with a multisensing
    head. A prototype system has been developed, including a tapping and sealing mechanical
    design adaptable to pipe diameters in the 25–300-mm range with interchangeable
    multisensor probes, integrated with data acquisition, processing, transmission
    and cloud reception capabilities. Device tests demonstrate successful installation
    and acquisition of calibrated data with adequate accuracy for water temperature,
    flow, pressure and conductivity, as well as for external temperature, pressure
    and vibration sensing. Some of the ideas and findings reported in this article
    are being protected. This article is organized as follows. The minimally invasive
    hot-tapping method is introduced in Section II. The design and fabrication of
    the mechanical and electronic components of the prototype sensor system are presented
    in Sections III and IV, respectively. A water flow test rig developed and used
    as an evaluation setup is presented in Section V. In Section VI, experimental
    sensor test results are presented and discussed. This article concludes in Sections
    VII and VIII by discussing the benefits and opportunities arising from minimally
    invasive multisensors for water networks. SECTION II. Minimally Invasive Multisensor
    A. Sensor Overview Our aim in this work was to demonstrate a compact and rapidly
    deployable multiparameter wireless sensor node that could monitor at least three
    of the following quantities at a single location within the water distribution
    network: pressure, temperature, flow, conductivity, pH and turbidity. The inclusion
    of conductivity, pH and turbidity in this list precluded an entirely noninvasive
    approach, and consequently the device reported here is invasive, requiring a small
    access hole in the pipe wall. However, by exploiting state-of-the-art sensor technology
    we have been able to limit the diameter of this access hole to just 6.3 mm. At
    this size the hole has negligible effect on the mechanical integrity of the pipe,
    and as such we describe the sensor as minimally invasive. Fig. 2 shows a sketch
    of a prototype sensor node mounted on a DN 100 (114.8-mm diameter) pipe. At the
    core of the device is a 6.0-mm diameter sensor probe which protrudes into the
    flow and carries the sensing elements, in this case a combined pressure/temperature
    sensor, a conductivity sensor and a differential pressure sensor which is used
    to measure the flow speed. The probe passes through an isolation valve which allows
    the access hole to be closed off during installation and replacement of the probe.
    A commercial ball valve has been used in the prototype; however, in future we
    expect to replace this by a customized gate valve as this will allow a reduction
    in the overall size of the sensor node. The isolation valve is mounted on a baseplate
    which interfaces to the pipe via a saddle flange. The isolation valve and baseplate
    together are referred to as the sensor port. Fig. 2. Minimally invasive sensor
    node comprising saddle flange, sensor port (isolation valve on baseplate), probe
    adaptor, sensor probe, electronics module, and battery. Show All The sensor outputs
    are fed to an electronics module which consists of a sensor-specific frontend
    submodule and a generic main submodule. The frontend submodule contains the sensor
    readout circuits and a low-power microcontroller unit (MCU) for managing the sensors
    and digitizing the sensor readings. The main submodule contains a wireless MCU
    with Bluetooth capability, a narrowband IoT (NB-IoT) MCU, an secure digital (SD)
    card for data logging and additional environmental sensors for temperature, humidity
    and acceleration/vibration. Communication between the submodules is via a 2-wire
    serial link. Power for the sensors and electronics is provided by a 4800-mAh lithium-polymer
    battery. The sensor node is enclosed in a stainless-steel housing which is sealed
    to IP68. An SMA connector in the housing wall allows a whip antenna to be mounted
    directly on the device; alternatively, a cable can be run to a remote antenna,
    for example when the sensor node is deployed underground. The housing is 75-mm
    long (axial direction) and 50-mm wide, and the height from the bottom of the baseplate
    is 95 mm. The complete sensor node installed on a sensor test rig is shown in
    Fig. 3. The multisensor probe is shown in the inset. Fig. 3. Picture of the complete
    enclosed system as installed on a water flow test rig. A picture of the multisensor
    probe is shown in the inset. Show All B. Sensor Installation A key requirement
    for the minimally invasive sensor node was that it should be possible to install
    the device by hot tapping, i.e., without interrupting the flow of water in the
    pipe. A custom hot-tapping tool was designed for this purpose. This Section outlines
    the hot-tapping procedure which takes around 30 min for a metal-walled pipe. The
    first step is to mount the saddle flange, securing it to the pipe with steel straps
    and/or adhesive. A water-tight seal is formed between the flange and the pipe
    wall either by an O-ring or a gasket. The sensor port is then mounted on the saddle
    flange, and hot-tapping is carried out as outlined in Fig. 4. The hot-tapping
    tool consists essentially of a drive shaft that sits between a standard electric
    drill and the drill bit. The drive shaft moves inside a cylinder which acts as
    a drill guide and also forms a seal that prevents escape of the water that leaks
    from the pipe once the pipe wall has been breached. The drive shaft is hollow,
    allowing cutting fluid to be fed to the drilling zone if a suitable “oil-feed”
    drill bit with coolant channels is deployed. Fig. 4. Hot tapping procedure showing:
    (a) initial drilling phase with through-tool delivery of cutting fluid; (b) end
    of second drilling phase, with flushing of valve bore by process water; (c) after
    withdrawal of cutter and closure of isolation valve; and (d) after removal of
    hot-tapping tool. Show All The hot-tapping tool is screwed into the valve port,
    and the valve is opened to allow access to the pipe wall. Drilling then proceeds
    with a suitable water-based cutting fluid being applied through the drill bit.
    As in any machining operation, the cutting fluid provides cooling and lubrication,
    and also carries swarf away from the drilling zone. The cutting fluid is replaced
    by water before the pipe wall is breached, and once drilling is complete the water
    leaking from the pipe is used to flush the valve [Fig. 4(b)]. To complete the
    process the drill is withdrawn, the valve is closed [Fig. 4(c)] and the tool is
    removed from the valve port [Fig. 4(d)]. To complete the sensor node installation,
    the sensor probe is inserted (see Section III), the electronics module and battery
    are fitted, and a basic functional test is carried out. Finally, the housing is
    screwed into place. These steps take approximately 10 min, so the overall installation
    time for the sensor node, including hot-tapping, is around 40 min. SECTION III.
    Multisensor Probe Design A. Probe Structure Table I shows the sensor elements
    included in the prototype multisensor probe reported here. The static water pressure
    is monitored by a silicon absolute pressure sensor with piezoresistive readout
    (Merit Sensor type H1T-0170-L2 [13]). This device also incorporates a p-n diode
    for temperature compensation, which is also used to monitor the water temperature.
    The sensor is 2.1×2.1×1.4 mm3 in bare die format, making it small enough to be
    accommodated in the end of the 6 mm-diameter probe tip. TABLE I Sensor Chips in
    Prototype Probe The local flow velocity is measured using the differential pressure
    technique [14]. Here, the flow speed is inferred from the pressure difference
    that naturally arises between points fore and aft on a bluff body (in this case
    the probe tube) placed in the flow. This approach is well known in larger scale
    systems and in this work we have adapted it and demonstrated its efficacy at small
    scale. As it was not possible to source a differential pressure sensor small enough
    to fit within the probe tube, the sensor chip (Analog Microelectronics GmbH type
    AMS 5195-0200-D-B, [15]) is housed in the probe head, and the fore and aft pressures
    at the probe tip are conveyed to the chip via 1.0 mm internal diameter stainless-steel
    capillaries. Currently these capillaries are open and filled with air when the
    probe is installed. The fourth sensor in the prototype probe is a conductivity
    sensor (Innovative Sensor Technology AG type LFS1305, [16]) comprising an array
    of parallel electrodes on a ceramic substrate, accommodated as shown in Fig. 5.
    This device works by making a 4-point measurement where the outer electrodes are
    driven with an AC excitation voltage and the conductivity is estimated from the
    ratio of the excitation current to the voltage measured between the inner electrodes.
    Fig. 5. Minimally invasive sensor probe incorporating pressure, temperature, flow,
    and conductivity sensors. Show All Fig. 5 shows the overall layout of the prototype
    multisensor probe and a cut-away detail of the probe tip showing how the p/T and
    conductivity sensors are positioned and how their electrical connections are routed
    to the probe head. The components in the probe tip are potted in a water-resistant
    epoxy that is expected to allow continuous submersion in cold water for several
    years. B. Probe Installation and Replacement The inclusion of an isolation valve
    on the sensor port makes it possible to “hot-swap” the multisensor probe, i.e.,
    replace it without interrupting the flow in the pipe. Fig. 6 outlines the procedures
    for inserting and removing the probe. Before installing the probe, a probe adaptor
    is screwed into the valve port. This part incorporates a seal that can be tightened
    down onto the probe tube by means of a locking ring. Fig. 6. Procedures for “hot”
    insertion (a) → (b) and extraction (b) → (a) of minimally invasive sensor probe.
    Show All To insert a new probe, the probe is inserted into the adaptor so that
    it stops just short of the isolation valve, as shown in Fig. 6(a). The valve is
    then opened and the probe is inserted into the flow. Finally the locking ring
    is tightened to improve the integrity of the seal [Fig. 6(b)]. To remove the probe
    the above sequence is simply reversed: the seal is loosened, the probe is partially
    withdrawn, and the valve is closed. The probe can then be completely withdrawn
    without any water escaping. The entire hot-swapping process, including disconnection
    and reconnection of the probes, can be completed in several minutes. Ease of replacement
    is an important consideration for probes incorporating chemical sensors as these
    generally have lifetimes measured in months rather than years. SECTION IV. Sensor
    Node Electronics A. Sensor Node Electronics Fig. 7 shows the system diagram of
    the sensor node electronics being divided into two submodules. The frontend module
    consists of readout circuits that connects to the sensor chips in the prototype
    probe via flexible flat cables (FFCs) and flexible printed circuit (FPC) connectors.
    The Texas Instruments CC2650 chip is a low-power MCU employed to support the readout
    circuit for the prototype sensor probe. Fig. 7. System diagram of the sensor node
    electronics, with frontend submodule and main submodule as indicated. Show All
    A DC/DC converter is used to provide 5 V for the pressure and conductivity sensors
    [17]. The outputs of the pressure sensor and the temperature diode are amplified
    using instrumentation amplifiers to take advantage of the full scale of the MCU’s
    ADC channels. The differential pressure sensor only requires 3.3 V as power supply
    so it can be powered up by the GPIO pins of the MCU, and its data is obtained
    using I 2 C . The conductivity sensor requires an AC excitation signal to prevent
    electrolysis so that the concentration of ions in the solution remains constant.
    Therefore, a switching regulator is used to produce ±5 V supply rails and using
    PWM from the MCU, an AC voltage signal of 5 kHz is produced for the sensor. The
    AC signal is fed into an amplifying drive circuit comprising an inverting amplifier
    with switchable gain so that the sensor gives two measurement ranges—0– 100 μS
    /cm and 0–10 mS/cm. The resulting signal is then converted back to DC and read
    by an ADC channel of the MCU. Once the frontend sensor data is obtained, it is
    compiled and sent to the main submodule via UART. The main MCU in the module is
    the nRF52840, a multiprotocol System on Chip (SoC) with Bluetooth low energy (BLE)
    capability [18]. It offers low energy consumption through an adaptive power management
    system, and library support for external SD storage through a serial peripheral
    interface (SPI), which is important for local data storage during offline operation.
    The nRF52840 communicates with a second MCU, the SARA-N2 [19] power-optimized
    NB-IoT module, to provide cellular connectivity and large geographic area coverage.
    Additional environmental sensors (Si7021-A20 [20] and LIS3DH [21]) are also connected
    to the nRF52840 using I 2 C . The environmental sensor details are shown in Table
    II. TABLE II Environmental Sensor Chips Fig. 8 shows a photograph of the frontend
    submodule (left) and the main submodule (right). The main submodule has two boards
    stacked together for confinement within the sensor port housing. The smaller board
    contains the SD card circuit and power-on indicator LED whereas the rest of the
    circuits are implemented on the larger board. Fig. 8. Frontend and main circuit
    boards. From left to right: Back view of the frontend board, front view of the
    frontend board (in compartment), front view of main board (in compartment), and
    back view of main board. Show All B. Connectivity/Acquisition The system comprises
    three communication interfaces. The first interface is a local USB interface.
    It offers initial programming, testing and servicing through the Joint Test Action
    Group (JTAG) interfaces of the MCUs and their respective development boards, using
    a computer and a simple network terminal interface, such as PuTTY [22]. This interface
    also makes the electronic architecture expandable to provide local display and
    external digital connectivity during normal operation. Further to the local communication
    interface available for both submodules, the main board provides a BLE and an
    NB-IoT interface for local and cellular data transfer. The nRF52840 uses Bluetooth
    5 Low Energy, which allows communications at distances over 240 m, which is about
    4 times the range of Bluetooth 4.2 and has a higher bit rate of 2 Mb/s [23]. The
    nRF52840 also communicates with the SARA-N2 to establish Internet connection using
    NB-IoT. NB-IoT is a standards-based low-power wide area network (LPWAN) technology
    that has low-power consumption and wide area coverage [24]. It uses a narrower
    bandwidth compared to LTE-M which allows for better indoor/underground penetration
    [24]. An survey of IoT and upcoming 5G connectivity solutions can be found in
    [25]. C. Power Supply and Energy Management The battery used for the prototype
    is the 3.7 V, 4800 mAh lithium polymer LP735977JH by Jauch Quartz GmbH [26]. A
    discharge test was done to verify the performance of the battery at different
    temperatures, using a 2 W ( 8Ω ) load, which is 67% of the 0.2°C (3 W) load at
    which the nominal capacity is specified. The resulting discharge curves and battery
    capacities calculated by discrete integration are shown in Fig. 9. The battery
    cuts off at around 10–11 h, demonstrating adequate operation as expected by nominal
    specifications, for all temperatures. In the −11°C test, a varying voltage drop
    is observed, which is attributed to a reduction of Li ion mobility in the polymer
    electrolyte. Fig. 9. LP735977JH battery discharge test at different temperatures.
    Show All An additional test at a lower, 0.6 W ( 26Ω ) load was performed, which
    corresponds to the expected maximum system power consumption. The results, shown
    in the inset of Fig. 9 demonstrated a capacity of 20.2 Wh, which is again within
    the nominal battery specification tolerance range. The duration of power autonomy
    offered by the battery depends on system usage. For example, if it is assumed
    that the battery should power the device for at least a year, the average current
    consumption should be lower than 0.55 mA. The MCUs provide various sleep and low-power
    operation modes which can be employed by duty cycling in accordance with a given
    sensing scenario, to obtain the desired balance between power autonomy duration
    and average current consumption, i.e., sensing intensity. Table III shows the
    nominal current consumption for each system component. Significant current is
    consumed by the conductivity sensor circuit and during SARA-N2 transmission, which
    is set at −3 dBm. It is apparent that continuous high sampling rates would result
    in unacceptably high power consumption. Therefore, different sensors and their
    required MCU peripherals need to be duty cycled. For example, sampling the conductivity
    sensors for 2 s every 15 min and the other sensors for 2 s every 5 min yields
    an average current consumption below 0.3 mA. TABLE III Nominal Current Consumption
    of Different Components and Peripherals Duty cycling can also be used in operating
    the internal and wireless communication modules of the system. The main-submodule
    has the option to either use BLE or NB-IoT depending on the application. The nRF52840
    uses a UART to receive data from the frontend module To prevent it from consuming
    a constant 0.6 mA as shown in Table III, the UART can be turned on only for a
    brief period of time, e.g., for 15 s when the frontend board is ready to send
    data. Wireless data transmission can be performed at a very low duty cycle (e.g.,
    0.2% or 180 s per day) to reduce the power used by BLE or NB-IoT. Sensor data
    is stored locally in an external SD card before the bulk of data is transmitted.
    An example duty cycling operation scenario that allows a 1-year power autonomy
    with the selected battery is summarized in Table IV, for the cases of BLE and
    NB-IoT. The data transmission time accounted for NB-IoT is significantly longer
    as it requires time to connect to a supported base station and establish an Internet
    connection, but it may still allow several communication sessions within a 24-h
    period. TABLE IV Current Consumption Table for Frontend and Main Boards. Average
    Supply Voltage = 3.6 V Adding both current consumption for the frontend submodule
    and main submodule gives a resultant current consumption of 0.34 mA (BLE) and
    0.5 mA (NB-IoT) as shown in Table IV. More changes can be made to reduce the current
    consumption further, for example by reducing the sampling rate of the environmental
    sensors, increasing the advertising and connection interval for BLE, or reducing
    the transmission power of the BLE/NB-IoT signal. SECTION V. Evaluation Setup To
    examine the performance of the prototype, we built a flow rig and a static pressure
    test rig to conduct experimental evaluation tests. ISO 5167 [27] states that a
    specific minimum length of upstream and downstream pipe should be installed before
    and after pressure differential devices. Considering the availability and dimension
    of the test facility, a flow rig with 1-inch and 2-inch test sections was built,
    which is shown in Fig. 10. Water is pumped from the water tank using the CRESTPUMP
    AM-50 water pump into the test sections controlled by a Parker AC10 motor controller.
    An ABB FEP611 electromagnetic flow meter was used as the reference volumetric
    flow meter with an accuracy of 0.4%. Fig. 10. Water flow test rig layout. Show
    All The water distribution system commonly uses 4-inch and 6-inch pipes, therefore
    we built another 4-inch static pressure test rig, which is displayed in Fig. 11,
    to evaluate the sealing and the pressure sensor. The reference value of pressure
    was given by WIKA DG-10 pressure gauge with an accuracy of 0.5%, and a pressure
    relief valve was installed for protection in case of excess pressure. The pressure
    range of the static test rig was 0–10 bar. Fig. 11. Static pressure test rig.
    Show All SECTION VI. System Characterization The test rigs described above were
    used to evaluate the performance of the pressure, temperature, conductivity and
    flow sensors in the prototype multisensor node. Pressure sensor testing was carried
    out on the static test rig of Fig. 11. In total 5 runs were launched in the range
    of 0 to 8 bar. The results are shown in Fig. 12. A correlation between sensor
    output and reference pressure value was established according to the data of 4
    runs P=4.2103⋅ V p −1.0863 (1) View Source where P denotes gauge pressure (bar)
    and V p denotes voltage output (V) of the pressure sensor. The fifth test run
    as shown in the inset of Fig. 12 was used to evaluate (1) and the relative errors
    ranged from −0.69% to 0.19%. Fig. 12. Performance of the pressure sensor. Show
    All The temperature sensor was tested in a Spark Holland Mistral temperature control
    device. The temperature accuracy and stability of this device were found to be
    better than 0.1°C. The reference temperature meter was Rotronic HP32/HC2, which
    has a nominal 0.1°C accuracy itself. The temperature was varied from 5 to 50°C
    (see Fig. 13), and a correlation was established (2) between sensor output and
    reference temperature T=−18.8251⋅ V 2 t +138.4403⋅ V t −178.6271 (2) View Source
    where T denotes temperature (°C) and V t denotes voltage output (V) of temperature
    sensor. Equation (2) was applied to predict temperatures of the test run and the
    results are shown inset in Fig. 13. The absolute errors of (2) range from −0.29
    to 0.19 °C. Fig. 13. Performance of the temperature sensor. Show All The assessment
    of the conductivity sensor was performed using sodium chloride solutions with
    different concentrations. Sensor outputs were then compared with the readings
    from a HI-98304 pocket conductivity meter. The resolution and the accuracy of
    the reference meter are 0.01 mS/cm and 2% F.S., respectively. Two sets of tests
    were carried out with different conductivity ranges: 0 to 100 μS /cm and 0 to
    10 mS/cm, by switching the gain of the inverting amplifier in the readout circuit.
    According to the data in Fig. 13, the following fitting equation was established
    for the conductivity sensor: C=2.9888⋅ V c +0.0023. (3) View Source Here, C denotes
    conductivity (mS/cm) and V c denotes the voltage output (V) of the conductivity
    sensor. Fig. 13 shows the accuracy of (3) in predicting conductivities. The relative
    errors range from −2.06% to 0.77%. Another test was done for the conductivity
    sensor with a lower measurement range of 0–100 μS /cm by switching the gain of
    the inverting amplifier in the readout circuit, and the results are shown in Fig.
    14. Fig. 14. Performance of the conductivity sensor. Upper: 0–10 mS/cm. Lower:
    0–100 mS/cm. Show All Flow sensor testing was performed in both the 1-inch and
    2-inch test sections of the flow rig. The water flow was set between 20 L/min
    and 80 L/min by the pump controller. As the reference meter was installed in the
    1-inch test section, the pump motor speed was adopted as reference of the tests
    on the 2-inch section. The test results are plotted in Fig. 15 and the following
    correlations were established by data fitting: 1−inch test: 2−inch test: Q=1.0425⋅
    Δ P − − − − √ +2.0128 ω=0.1664⋅ Δ P − − − − √ +0.2372. View Source Here, Q denotes
    water flow rate (L/min), ΔP is the differential pressure (Pa), and ω is the motor
    speed (krpm). To assess these equations, another two sets of experiment were conducted
    and the relative errors of (4) and (5) were from −3.00% to 4.70%, and −5.05% to
    3.43%, respectively. Fig. 15. Performance of flow sensor. Upper: 1-inch test section.
    Lower: 2-inch test section. Show All It is noted that the sensing translation
    (1)–(4) are presented here with full parametric accuracy (i.e., number of significant
    digits), for consistency with the reported accuracy values. These calibration
    values are programmable and can be adjusted by calibration during installation
    or dynamically during operation in a self-calibration scheme, if adequate feedback
    references are provided. For data transmission using BLE, a laptop was used as
    the central BLE device. A LabVIEW user interface together with a USB BLE dongle
    was used to visualize sensor data; the same set-up could potentially allow more
    user control for sensor sampling rates, battery information, etc. Acquired sensor
    results are available in a Git repository [28]. The nRF52840 – SARA-N2 interface
    functionally was confirmed by AT command communication tests. The NB-IoT connectivity
    was not demonstrated as the corresponding network level service is currently only
    offered in pilot laboratories operating in certain regions, such as the Vodafone
    OpenLab in Newbury, U.K. [29]. SECTION VII. Opportunities The multisensor architecture
    introduced in this article includes a simple and effective electronic design,
    adequate sensing accuracy and repeatability, and a multistage parametric duty-cycling
    protocol for power consumption minimization. It also includes a modular and expandable
    design, with interchangeable sensing probes, adaptation to different pipeline
    diameters and a methodical, hot-tapping installation method. It integrates external
    environment sensors that can provide complementary data and expand the sensing
    services range. Finally, the system demonstrates adequate sealing and state-of-the-art
    Industrial Internet-of-Things connectivity. These features are validated experimentally,
    and they offer a complete sensor node deployment solution. The introduction of
    small scale hot-tapping for sensing in particular, in combination with the modular
    architecture, offers a minimal required installation and configuration expertise,
    minimal disruption, retrofitting capability of a high-end sensing solution. The
    installation solution offered is demonstrated in integration with sensing and
    connectivity operation. It opens the way forward for development and testing of
    a range of highly desirable water monitoring features and capabilities, some of
    which are summarized in the remainder of this Section. Leakage detection continues
    to be a central priority of WSNs in the water supply chain, mainly due to the
    extended scale at which it occurs [30]. Apart from its economic impact, it is
    often discussed as a priority for preserving water as a valuable commodity and
    to ensure sustainable use for the near and long term future, but also for regions
    with limited water access [3]. On the other hand, monitoring and control of quality
    is very diverse and includes chemical analysis as well as the detection of events
    and operational parameters that affect quality, such as turbidity, flow, and backflow
    [2], [31]–[44]. It also includes reservoir stations, such as stormwater retentions
    ponds [45]. In the particular case of contamination, early and localized detection
    [46], [47] is critical to safety, and therefore, the density of sensors, along
    with installation topology strategy, is decisive for the effective application
    of data analysis and detection algorithms and subsequently for control, alarming,
    infiltration and various response methods [48]. The sensor architecture introduced
    in this article is applicable to both leakage and quality monitoring through its
    modular, minimally invasive multisensor node approach. Additional sensors, such
    as pH, turbidity, and particle concentration meters can be added straightforwardly,
    as corresponding commercial components suit the probe immersion approach and fit
    onto the Ø 6 mm probe size used. The density of sensor deployment required in
    a water network is key to achieving a sufficient monitoring service at reasonable
    cost. It is a very important parameter and is closely related to the value and
    use of monitoring data at network level. The water network topology in combination
    with general rules and exceptions about locations and moments of special interest
    is required to identify a suitable number of sensors. This information is not
    readily available and in practice is very difficult to know in advance. Therefore,
    a gradual deployment strategy may often be preferable, in which a sparse initial
    grid is installed initially, and points of interests for more detailed sensing
    are subsequently identified. In this direction, the minimally invasive and portable
    architecture proposed in this article offers the possibility of selectable, configurable,
    multistage or dynamic deployment and activation. Apart from the aforementioned
    direct water leakage and quality benefits, another important case of interest
    for water monitoring, which is also linked to its increasing value as a commodity
    for demographic and climate change reasons, is its monitoring for blocking potential
    security threats, including malicious attacks by deliberate water network contamination.
    Such a threat has been determined as one of the most difficult to address. Therefore,
    the installation of an effective water contamination monitoring system is of strategic
    importance both for counteracting malicious events as well as for discouraging
    threats and increasing the sense of safety and security among the global population.
    Again, adequate sensor density and optimized topology are critical for the efficiency
    of such monitoring systems. In [49], a comparison of different WSN solutions,
    coined the battle of the water sensor networks, was presented, employing common
    figures of merit for the efficiency of 15 different WSN approaches. The security
    of sensors and sensing data is in turn also critical. Data integrity and protection
    from tampering and theft can be enhanced by sensor location tracking and software
    activity logging. Including authenticated security logs in data package network
    traffic could offer a measurable level of confidence for the validity and protection
    of gathered data. Hardware implemented location tracking and authentication could
    offer a significant advantage for infrastructure sensor deployment in this direction,
    especially for sensitive data applications [50]–[52]. Finally, infrastructure
    surveillance also benefits from the deployment of WSNs, including availability,
    utility, optimization of operations, and real-time meters at reservoirs, distribution
    points and consumer locations. Potential advantages that have been identified
    include measurement accuracy, fault and theft detection, remote control, exploitation
    of real-time data for efficient and environmentally friendly consumption, usage
    balancing, and enforcement of restrictions during drought periods. The introduced
    sensor node architecture offers the necessary data to the network for further
    analysis and exploitation. This article describes the performance and measurements
    available for a single multisensor node. The expected benefits to an operator
    are at the higher system level in terms of insights and actionable information
    related to the specific challenges faced (productivity, water quality, network
    performance, pipe burst, etc). The normal approach to instrumenting a network
    will depend on the WSNs specific requirements and areas of focus. Today’s instruments
    typically measure a single measurand; therefore the operator will rarely be able
    to instrument a system to an ideal or desired level. The multisensor design presented
    here can be configured with specific measurands relevant to the challenges faced
    by a WSN and in many cases retrofitted. Using wireless communication, the data
    from an array of multisensor nodes and existing instruments can be aggregated
    and data analytics applied to deliver a system level overview with specific insights
    into a particular challenge. A shift toward overall sensing solutions which consider
    the process at a macrolevel can deliver targeted benefits to operators. SECTION
    VIII. Conclusion Water sensor networks can improve usage efficiency by leakage
    reduction, quality assurance and operations optimization, with important economic,
    life quality and environmental benefits. As the sensor node and network technologies
    have progressed rapidly and reached adequate maturity in the last decade, integration
    and installation methods are becoming key elements to their adoption by the infrastructure
    industry. This is especially important for water quality sensors, which typically
    require immersion. In addition, a quantified estimation of sensing cost and benefit
    is often not straightforward, and important questions on required data scale,
    topography and frequency as well as on data exploitation and value are pending.
    In this article, an integrated multisensor architecture for water infrastructure
    monitoring is presented. A minimally invasive hot-tapping installation method
    is introduced that offers a practical, cost-effective and scalable option for
    immersion sensors. A modular design approach allows interchangeable, serviceable,
    and upgradeable multisensor probes to be developed and used. A prototype offering
    water pipeline pressure, temperature, flow and conductivity sensing, as well as
    complementary external environmental sensing of pressure, temperature, and vibration,
    is presented, in integration with internal storage, processing and wireless communication
    capabilities, including BLE and NB-IoT. Operation at adequate sensing resolution
    is demonstrated, including static pressure tests which also demonstrate a successful
    sealed installation for pressures over 8.5 bar. An overview of opportunities arising
    from the proposed multisensor architecture and installation method reveals that
    a scalable, multistage deployment approach may be beneficial in terms of reduced
    initial investment cost, identification of locations and measurands of priority
    interest, quantification of sensing benefit, and a gradual development according
    to requirements and limitations of water infrastructure. Priorities identified
    by potential technology users include leakage detection, quality, security and
    threat management, data transparency and operational optimization. Overall, the
    system level demonstration of a minimally invasive, modular, multisensor has been
    presented, comprising state-of-the-art sensing, processing and networking subsystems,
    which contributes a key and likely pivotal missing element toward the implementation
    of leakage and quality sensor networks. Authors Figures References Citations Keywords
    Metrics More Like This A Robust Uniaxial Force Sensor for Minimally Invasive Surgery
    IEEE Transactions on Biomedical Engineering Published: 2010 Neural Probes with
    Integrated Temperature Sensors for Monitoring Retina and Brain Implantation and
    Stimulation IEEE Transactions on Neural Systems and Rehabilitation Engineering
    Published: 2017 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE internet of things journal (Online)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6488907/9852161/09406941.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Minimally Invasive Online Water Monitor
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.5120/ijca2017915722
  analysis: '>'
  authors:
  - Prajakta Deshpande
  - Anuja Damkonde
  - Vaibhav Chavan
  citation_count: 4
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International journal of computer applications
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'The Internet of Things: Vision, Architecture and Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.56726/irjmets39455
  analysis: '>'
  authors: []
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Research Journal of Modernization in Engineering Technology
    and Science
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: SMART FARMING AND CROP MONITORING TECHNOLOGY
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy13112756
  analysis: '>'
  authors:
  - Alicia Lopez-Guerrero
  - Arantxa Cabello-Leblic
  - E. Fereres
  - Domitille Vallée
  - Pasquale Steduto
  - Ihab Jomaa
  - Osama Owaneh
  - Itidel Alaya
  - Mahmoud Bsharat
  - Ayman Ibrahim
  - Kettani Abla
  - Alaa Mosad
  - Abdallah Omari
  - Rim Zitouna-Chebbi
  - J.A.J. Berni
  citation_count: 0
  full_citation: '>'
  full_text: ">\nCitation: Lopez-Guerrero, A.;\nCabello-Leblic, A.; Fereres, E.;\n\
    Vallee, D.; Steduto, P.; Jomaa, I.;\nOwaneh, O.; Alaya, I.; Bsharat, M.;\nIbrahim,\
    \ A.; et al. Developing a\nRegional Network for the\nAssessment of Evapotranspiration.\n\
    Agronomy 2023, 13, 2756. https://\ndoi.org/10.3390/agronomy13112756\nAcademic\
    \ Editor: Jose Manuel\nGonçalves\nReceived: 12 September 2023\nRevised: 20 October\
    \ 2023\nAccepted: 27 October 2023\nPublished: 31 October 2023\nCopyright:\n© 2023\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nagronomy\nArticle\nDeveloping a Regional Network for the Assessment\n\
    of Evapotranspiration\nAlicia Lopez-Guerrero 1,*, Arantxa Cabello-Leblic 1,*,\
    \ Elias Fereres 1,2, Domitille Vallee 3, Pasquale Steduto 3,\nIhab Jomaa 4, Osama\
    \ Owaneh 3, Itidel Alaya 5, Mahmoud Bsharat 6, Ayman Ibrahim 7, Kettani Abla 8\n\
    ,\nAlaa Mosad 9,10, Abdallah Omari 11,12\n, Rim Zitouna-Chebbi 5\nand Jose A.\
    \ Jimenez-Berni 2\n1\nAgronomy Department, University of Cordoba, 14071 Cordoba,\
    \ Spain\n2\nInstitute for Sustainable Agriculture, Spanish National Research Council\
    \ (IAS-CSIC), 14004 Cordoba, Spain;\nberni@ias.csic.es\n3\nFood and Agriculture\
    \ Organisation, Regional Ofﬁce for Near East and North Africa, Cairo 2223, Egypt;\n\
    domitille.vallee@fao.org (D.V.); psqlsdt@gmail.com (P.S.); osama.owaneh@fao.org\
    \ (O.O.)\n4\nIrrigation and AgroMeteorology Department, Lebanese Agricultural\
    \ Research Institute, Beirut 287, Lebanon;\nijomaa@lari.gov.lb\n5\nNational Research\
    \ Institute in Rural Engineering, Waters and Forests, Carthage University,\nLR16INRGREF02-LRVENC,\
    \ Ariana 2080, Tunisia; alayai@yahoo.fr (I.A.); rimzitouna@gmail.com (R.Z.-C.)\n\
    6\nField Irrigation Department, Ministry of Agriculture, Ramallah 197, Palestine;\n\
    b_mahmoud70@yahoo.com\n7\nMechanical and Electrical Department, Ministry of Water\
    \ Resources and Irrigation, Cairo 3855402, Egypt;\nayman16@hotmail.com\n8\nRural\
    \ Engineering Department, Hassan II Institute of Agronomy and Veterinary Medicine\
    \ Institute,\nRabat 6202, Morocco; abla.kettani@live.fr\n9\nAgriculture Research\
    \ Center, Kafr El Sheikh University, Kafr El Sheikh 33717, Egypt;\nalaamosad993@yahoo.com\n\
    10\nInternational Center for Agricultural Research in the Dry Areas, Maadi 11728,\
    \ Egypt\n11\nPalestinian National Agricultural Research Center, Jenin 042, Palestine;\
    \ abdallah.alimari@ptuk.edu.ps\n12\nPalestine Technical University (PTUK), Kadoorie\
    \ 022, Palestine\n*\nCorrespondence: g12logua@uco.es (A.L.-G.); o82calea@uco.es\
    \ (A.C.-L.)\nAbstract: Determining evapotranspiration (ET) is essential for water\
    \ accounting and for the manage-\nment of irrigated agriculture from farm to region.\
    \ We describe here a collaborative initiative aimed at\nestablishing a prototype\
    \ ET network in six countries of North Africa and the Near East (NENA region).\n\
    The network utilizes a low-cost and open-source system, termed the CORDOVA-ET,\
    \ consisting of a base\nstation and sensing nodes to collect the weather data\
    \ needed to determine the reference and actual ET\n(ETo and ETa). Here, we describe\
    \ the network-deployment processes, system architecture, data-collection\nmethodology,\
    \ quality-control procedures, and some of the ET results obtained so far during\
    \ a four-year\nperiod, starting in 2018. The network has been developed as an\
    \ iterative and collaborative process, where\ntraining and capacity building have\
    \ been the main drivers. The feedback and experiences gathered\nfrom the users\
    \ have helped improve the different versions of the prototypes and enhance their\
    \ assembly,\ndeployment, reliability, and ease of operation. At the same time,\
    \ the involvement in the construction,\nmaintenance, and data analysis has also\
    \ provided valuable insight into calculating ET from energy-\nbalance methods.\
    \ The network operated during six cropping seasons and the results were mixed,\
    \ while\ndata integrity (hourly and daily) varied from 95 to 23% depending on\
    \ the country and season. Validation\nof the ET estimates was performed using\
    \ the ECMWF ERA5 dataset as an independent reference. The\nenergy-balance algorithm\
    \ implemented in the system to determine the ETa was validated using the\nOpenCropLib\
    \ Python library. While the results of the data validation demonstrated the reliability\
    \ and\naccuracy of the CORDOVA-ET system, network operations required significant\
    \ support and special\nmotivation on the part of the users. It is concluded that\
    \ collaboration among users, together with the\nsupport services and participation\
    \ of different stakeholders interested in agricultural water management,\nwould\
    \ be essential elements to ensure the sustainability of the ET network.\nKeywords:\
    \ evapotranspiration; CORDOVA-ET; ET network; irrigation management; agrometeorology\n\
    Agronomy 2023, 13, 2756. https://doi.org/10.3390/agronomy13112756\nhttps://www.mdpi.com/journal/agronomy\n\
    Agronomy 2023, 13, 2756\n2 of 28\n1. Introduction\nGiven the current situation\
    \ of rising temperatures and the changes in precipitation pat-\nterns inﬂuenced\
    \ by climate change together with the occurrence of more intense droughts,\nthe\
    \ optimization of water use is becoming a central issue, particularly in countries\
    \ with\nchronic water scarcity. Regarding agricultural water resource usage, the\
    \ focus should be on\nobtaining the maximum yield with the minimum amount of water\
    \ via optimal irrigation\npractices. Knowledge of crop water consumption or evapotranspiration\
    \ (ET) is essential to\ndetermine the adequate amount and frequency of irrigation\
    \ water applications. The two ET\ncomponents, evaporation from soil and crop transpiration,\
    \ which are difﬁcult to separate in\npractice, constitute the crop water requirements\
    \ and, after deducting the effective rainfall,\nthe net irrigation needs.\nThe\
    \ California Irrigation Management Information System (CIMIS) in the USA, for\n\
    instance, is a network of over 145 automated weather stations in California that\
    \ began in\n1982 [1]. These stations collect agrometeorological variables to provide\
    \ reference evapo-\ntranspiration information for different regions [2]. The data\
    \ are free and available online to\nfarmers, water managers, and the public. CIMIS\
    \ network is extensively used in Califor-\nnia for irrigation scheduling, water\
    \ management, and weather forecasting [3]. Similarly,\nthe “Red de Información\
    \ Agroclimática de Andalucía” (RIAA) [4] in Andalusia, Spain,\noperational since\
    \ 1999, has about one hundred automatic weather stations distributed\nthroughout\
    \ all irrigable areas, that offer essential meteorological data and ETo information,\n\
    especially crucial for irrigation scheduling in a drought-prone region [5]. In\
    \ Texas, there\nhave been substantial efforts in utilizing ET data for irrigation\
    \ management, though it has\nfaced challenges in sustaining its ET networks over\
    \ extended periods [6]. These efforts\nemphasize the need for network coordination\
    \ and integration to avoid errors from lack of\nstandardization and varying ET\
    \ computation methods. Moreover, these networks require\nextensive maintenance\
    \ of equipment, data collection, and quality assessment for their\nexpansion to\
    \ other countries and regions.\nTo establish a successful regional ET information\
    \ network, several requisites must be\nmet. Firstly, the network must be able\
    \ to provide accurate ET data that can be effectively used\nby policymakers, water\
    \ managers, and other end-users. Secondly, the network must have a\ncost-effective\
    \ and sustainable operational model. Thirdly, the network must be able to provide\n\
    timely data to potential users and must be properly maintained over the long run.\n\
    The FAO project “Water efﬁciency, productivity and sustainability in the NENA\n\
    regions” (Project GCP/RNE/009/SWE) funded the establishment of a regional ET network\n\
    in countries of the Near East and North Africa region. The project aimed to provide\
    \ experts\nand water users with accurate ET data to enable them to make informed\
    \ decisions about\nwater accounting and water productivity. The deployment of\
    \ the ET network involved\nseveral steps, starting with the development of a novel,\
    \ cost-effective ET measuring device\nwhich is fully described in Jimenez-Berni\
    \ et al. [7]. The next steps included identifying\nsuitable partners and locations,\
    \ station deployment, equipment calibration, adequate team\ntraining, and, ﬁnally,\
    \ collecting, analyzing, and disseminating the ET data.\nIdeally, the network\
    \ should be integrated into the existing water-management informa-\ntion systems\
    \ to provide timely and accurate data to potential users. Regional ET networks\n\
    can provide a platform for collecting and sharing data, identifying best practices,\
    \ and devel-\noping applications to assist in regional water-management strategies.\
    \ The establishment of\nregional networks, however, can be challenging, requiring\
    \ high upfront costs and regular\nmaintenance for their sustainability.\nRegarding\
    \ agrometeorological information, the standard is a weather station with\nresearch-grade\
    \ sensors typically used in scientiﬁc applications, which are costly. An\nalternative,\
    \ tested in this work, is an inexpensive device which uses industrial-grade and\n\
    commercial off-the-shelf sensors. Jimenez-Berni et al. [7] presents the description\
    \ and\ntest of the CORDOVA-ET station, a cost-effective and easy-to-maintain unit\
    \ which has\nAgronomy 2023, 13, 2756\n3 of 28\nbeen used in the ET regional network\
    \ described herein. An important advantage of this\nsystem is that it permits\
    \ collecting crop ET (ETa) data in addition to determining the ETo [7].\nThe objectives\
    \ of this work are to describe the deployment of such stations in different\n\
    countries and institutions of the NENA region, to assess their performance in\
    \ determining\nthe ETa and ETo, to describe the major issues associated with network\
    \ development, and to\nevaluate the suitability of the CORDOVA-ET for use in an\
    \ ET network in the NENA region.\n2. Materials and Methods\n2.1. Network Components\n\
    2.1.1. The CORDOVA-ET System\nThe COnductance Recording Device for Observation\
    \ and Validation of EvapoTran-\nspiration (CORDOVA-ET) system [7] is a device\
    \ designed for measuring the actual evapo-\ntranspiration (ETa) using the energy-balance\
    \ approach. The system consists of hardware\ncomponents to measure primary meteorological\
    \ variables, a communication infrastruc-\nture based on wireless protocols, and\
    \ data-handling devices and algorithms to generate\nETa estimates. A standard\
    \ deployment of the CORDOVA-ET consists of four sensing\nnodes, a pyranometer\
    \ node, and a base station. The following is a brief description which\nsummarizes\
    \ the system components:\nThe sensing node consists of various sensors for measuring\
    \ different variables: Air\ntemperature and humidity, canopy temperature, and\
    \ soil temperature. These sensors are\nconnected to a low power operation microcontroller\
    \ that allow network communication\nand programming capabilities. The base station\
    \ includes a commercial weather station and\na gateway that receives nodes data\
    \ and transmits them to the cloud. The pyranometer node\nconsists of a commercial\
    \ pyranometer and a microcontroller that transmits the data the\nsame way as the\
    \ sensing nodes do. The system is solar and battery powered. The system\noperates\
    \ wirelessly using LoRaWAN, a low-power communication protocol. The data\nare\
    \ encrypted and managed by The Things Network (TTN), a LoRaWAN infrastructure.\n\
    They are then retrieved using Message Queuing Telemetry Transport (MQTT) protocol\
    \ and\nstored in InﬂuxDB, a time-series database. Real-time visualization is achieved\
    \ through\nGrafana, an open-source monitoring tool. All components can be deployed\
    \ on physical\nor cloud servers, utilizing Docker containers for easy replication.\
    \ Table 1 summarizes the\nmain components of the system hardware Full description\
    \ and details can be found in [7].\nThe device was conceived as an open-source\
    \ and hardware alternative to commercial\nequipment, and using a collaborative\
    \ approach that would allow a community of users to\nbuild their own system.\n\
    All the details regarding the CORDOVA-ET device and its ﬁeld validation tests\
    \ can be\nfound in Jimenez-Berni et al. 2023 [7]. This study is focused on the\
    \ data obtained during\nthe six study seasons from 2020 to 2022 in various crops\
    \ in different areas of countries in\nthe NENA region.\n2.1.2. Participant Countries\n\
    Institutions of seven participant countries (Algeria, Egypt, Jordan, Lebanon,\
    \ Morocco,\nTunisia, and Palestine) of the FAO “Water efﬁciency, productivity\
    \ and sustainability in\nthe NENA region” project joined the development of a\
    \ regional network for the ﬁeld\nmeasurements of evapotranspiration. At least\
    \ two sites were established in each country,\nexcept in the case of Algeria,\
    \ where the efforts to deploy the stations encountered diverse\nproblems, making\
    \ it difﬁcult to correctly operate them. Therefore, we report here the\ndata collection\
    \ in six countries. Table 2 presents the list of locations, institutions, and\
    \ the\nCORDOVA-ET versions deployed.\nThe CORDOVA-ET systems were delivered at\
    \ different times to the participating coun-\ntries. Egypt was the earliest adopter\
    \ of the system. The first version of the prototype was\ndeployed in February\
    \ 2019 in Egypt, while Palestine installed its first station in 2022. The rest\n\
    of the countries deployed their systems between December 2019 and February 2020\
    \ (Table 3).\nOne major reason for the variations of delivery times among countries\
    \ of the different versions\nAgronomy 2023, 13, 2756\n4 of 28\nof the CORDOVA-ET\
    \ was related to the custom requirements, which differed among countries,\nwith\
    \ the consequent delays in the deliveries to the different countries.\nTable 1.\
    \ Summary of the main components of the CORDOVA-ET system.\nComponent\nModel\n\
    Manufacturer\nSensing node\nAir Temperature and Humidity sensor\nSHT35\nSensirion,\
    \ Staefa, Switzerland\nCanopy Infrared Termperature sensor\nMLX90614\nMelexis,\
    \ Tessenderlo, Belgium\nSoil Temperature sensor\nDS18S20\nAnalog Devices, Wilmington,\
    \ MA, USA\nMicrocontroller\nLoPy4\nPycom Ltd., Hampshire, UK\nPyranometer\nnode\n\
    Pyranometer\nSP-110\nApogee Instruments, Inc., North Logan, UT, USA\nMicrocontroller\n\
    LoPy4\nPycom Ltd., Hampshire, UK\nBase station\nGateway\nDLOS8\nDragino Technology\
    \ Co. Ltd., Shenzhen, China\nWeather station\nFroggit\nWH3000SE\nHS Group GmbH\
    \ & Co. KG, Köln, Germany\nTable 2. Locations where the CORDOVA-ET equipment was\
    \ deployed in every country.\nCountry\nLocation\nInstitution\nVersion\nLatitude\n\
    Longitude\nEGYPT\n(EGY)\nZankaloun\nMWRI\nv1 + upgrade\n30.580285\n31.433497\n\
    Kafr El-Shaikh\nSWERI-ARC\nv1 + upgrade\n31.096579\n30.922311\nMenia\nMWRI\nV3.0\n\
    28.101070\n30.746473\nJORDAN\n(JOR)\nDayr ‘Allah\nNARC\nv1 + upgrade\n32.190515\n\
    35.617575\nAmman\nNARC\nv1 + upgrade\n32.079358\n35.843737\nAmman\nNARC\nV3.0\n\
    32.079358\n35.843737\nLEBANON\n(LBN)\nTal Amara\nLARI\nv1 + upgrade\n33.859088\n\
    35.987759\nTal Amara\nLARI\nV3.0\n33.859088\n35.987759\nTal Amara\nLARI\nV3.0\n\
    33.859088\n35.987759\nTal Amara\nLARI\nV3.0\n33.859088\n35.987759\nMOROCCO\n(MAR)\n\
    Berrechid\nIAV Hassan II\nv1 + upgrade\n33.219246\n−7.713618\nSouss Massa\nORMVA-SM\n\
    v3.0\n30.186812\n−9.540337\nMerchouch\nICARDA\nv3.0\n33.616349\n−6.71542\nTUNISIA\n\
    (TUN)\nJendouba\nINRGREF\nv1 + upgrade\n36.5465347\n9.0140506\nJendouba\nINGC\n\
    v3.0\n36.5460449\n9.0128499\nSfax\nIO\nv3.0\n34.735041\n10.734543\nDegache\nCRRAO\n\
    v3.0\n33.977490\n8.21010\nPALESTINE\n(PSE)\nAqaba\nNARC\nV3.0\n32.3635299\n35.3351885\n\
    Jenin\nNARC\nV3.0\n32.4293937\n35.2606194\nJericho\nNARC\nV3.0\n31.860192\n35.499435\n\
    Table 3. Growing seasons or campaigns in each country, showing the crops, start\
    \ and end dates, and\nlocation for each season.\nCountry\nSeason 1\nSeason 2\n\
    Season 3\nSeason 4\nSeason 5\nSeason 6\nEGY\nWinter Wheat\nSummer Maize\nWinter\
    \ Wheat\nSummer Rice\nWheat\nMaize\n1 December\n2019–13 May\n2020\n20 July 2020–21\n\
    October 2020\n25 November\n2020–30 April\n2021\n16 June 2021–20\nOctober 2021\n\
    5 December\n2021–1 March\n2022\n13 July 2022–15\nOctober 2022\nKafr El-Shaikh\n\
    Kafr El-Shaikh\nKafr El-Shaikh\nKafr El-Shaikh\nKafr El-Shaikh\nMenia\nJOR\nWinter\
    \ Wheat\nSummer Maize\nFodder Vetch\nMaize\nOnion\nMaize\n25 December\n2019–5\
    \ May 2020\n15 July 2020–20\nOctober 2020\n13 January\n2021–30 April\n2021\n14\
    \ June 2021–9\nSeptember 2021\n1 January\n2022–13 June\n2022\n2 July 2022–5\n\
    October 2022\nDayr ‘Allah\nDayr ‘Allah\nDayr ‘Allah\nDayr ‘Allah\nDayr ‘Allah\n\
    Dayr ‘Allah\nAgronomy 2023, 13, 2756\n5 of 28\nTable 3. Cont.\nCountry\nSeason\
    \ 1\nSeason 2\nSeason 3\nSeason 4\nSeason 5\nSeason 6\nLBN\nWheat\nPotato Fallow\n\
    Faba bean\nMaize\nWheat\nSoybean\n7 December\n2019–2 July 2020\n1 March 2020–31\n\
    July 2020\n3 December 2020–\n6 May 2021\n17 June 2021–8\nOctober 2021\n1 December\n\
    2022–5 June 2022\n27 August\n2022–19\nNovember 2022\nTal Amara\nTal Amara\nTal\
    \ Amara\nTal Amara\nTal Amara\nTal Amara\nMAR\nMaize\nBeetroot\nDurum Wheat\n\
    NA\nBarley\nSorghum\n23 February\n2020–3 July 2020\n27 August\n2020–11\nNovember2020\n\
    11 January\n2021–31 May\n2021\n16 November\n2021–7 May 2022\n12 May 2022–1\nSeptember\
    \ 2022\nBerrechid\nBerrechid\nBerrechid\nMarchouch\nMarchouch\nTUN\nWheat\nMaize\n\
    Faba bean\nSorghum\nWheat\nSorghum\n3 December\n2019–23 June\n2020\n19 July 2020–3\n\
    November 2020\n19 December\n2020–26 May\n2021\n9 August 2021–2\nNovember 2021\n\
    26 November\n2021–20 June\n2022\n10 August\n2022–23\nNovember 2022\nJendouba\n\
    Jendouba\nJendouba\nJendouba\nJendouba\nJendouba\nPSE\nWheat\nDurum Wheat\n2 January\
    \ 2022–5\nJune 2022\n21 July 2022–5\nOctober 2022\nJenin\nJenin\nFor each location,\
    \ available ETa data were retrieved for six different cropping seasons,\nstarting\
    \ in December 2019 and ending in December 2022.\nTable 3 summarizes the crops\
    \ and their sowing and harvest dates for every season in\neach country.\n2.1.3.\
    \ Data Collection\nThe data from the different deployments are uploaded to a central\
    \ server in real time\nusing the LoRaWAN infrastructure of The Things Networks.\
    \ The data are stored in a\ndatabase (InﬂuxDB) and available for quick visualization\
    \ using Grafana as the front-end.\nThis is a very dynamic way to visualize the\
    \ real-time data, and identify gaps and issues\n(e.g., faulty sensors). The data\
    \ can be downloaded directly from Grafana or, easier, from a\nweb-based tool called\
    \ “CORDOVA-ET Data Download” (current version: 2.2.0), either from\nthe main menu\
    \ in Grafana or directly accessed from a direct link. In the tool, users have\
    \ the\noption to choose the CORDOVA-ET deployment they want based on factors such\
    \ as the\ncountry, season, and crop. They can specify the start and end dates\
    \ for the deployment,\nand also select the preferred data format from the available\
    \ drop-down menu. A small\ngraph for visualizing the data status presents the\
    \ air temperature from the weather station\nas a quick way to identify potential\
    \ data gaps. When the user presses Download, the data\nare generated in the server\
    \ and prepared for download as an Excel ﬁle. The meaning of\neach of the column\
    \ headers is detailed in Appendix A (Table A2).\nThe application is built using\
    \ Python and leveraging the power of Plotly-Dash,\nhttps://plotly.com/dash/ (accessed\
    \ on 20 October 2023) and the OpenCropLib library [8]\nfor the ET calculations\
    \ using energy balance. At present, the web-based application is\nrunning successfully\
    \ on Heroku, a popular cloud platform. The metadata required for the\napplication\
    \ of the different algorithms (e.g., deployment location, sensor height, calibration\n\
    coefﬁcients for pyranometers) are hosted in GitHub, https://github.com/OpenAgriTech/\n\
    CORDOVA-ET-metadata (accessed on 20 October 2023) and publicly available to ensure\n\
    traceability and repeatability of the data.\nDifferent formats are available for\
    \ download at different timesteps and information\nlevels; for example, raw data\
    \ from weather station and nodes can be downloaded in 10\nand 30 min timesteps.\
    \ Energy-balance calculations of the ETo and ETa can be downloaded\nat 30, 60\
    \ m, and daily. This includes not just the ETa calculated at each node, but also\
    \ the\nAgronomy 2023, 13, 2756\n6 of 28\nintermediate calculations of the energy\
    \ components: sensible heat, aerodynamic resistance,\nnet radiation, and latent\
    \ heat. The application also allows exporting to standard data\nformats, such\
    \ as comma-separated values (CSVs) and Excel.\n2.1.4. Participant Involvement\n\
    For the correct implementation of the CORDOVA-ET station network, close communi-\n\
    cation with the core developers from the Institute for Sustainable Agriculture\
    \ (IAS-CSIC)\nand the Universidad of Cordoba was crucial, named here as the Network\
    \ Development\nTeam (ND team). The ND team oversaw the logistics of the delivery\
    \ of the stations, in-\nspected the correct deployment of the equipment, either\
    \ through ﬁeld missions in the\ndifferent countries or remotely, and carried out\
    \ the data and sensor measurements’ quality\ncontrol. Additionally, there was\
    \ a local expert responsible that belonged to the institution\nto which the station\
    \ was assigned by the FAO, as well as a group of technicians and engi-\nneers\
    \ who participated in the data collection, management, and maintenance. This group\n\
    interacts directly with the person in charge at the country level, since there\
    \ is more than\none station in different institutions in each country; this hierarchy\
    \ in communications was\nestablished to accelerate the speed of response and to\
    \ optimize resources.\n2.2. Methodology for Data Validation\nTo validate the data\
    \ collected by the CORDOVA-ET at the different locations and ﬁeld\nseasons, a\
    \ standard dataset for gridded weather variables was needed in the absence of\n\
    high-quality weather station datasets. We have used the ERA5 from the European\
    \ Centre\nfor Medium-Range Weather Forecasts (ECMWF) for this purpose. The ERA5\
    \ provides a\nrange of meteorological variables, such as temperature, humidity,\
    \ wind speed and direction,\natmospheric pressure, and precipitation, at various\
    \ spatial and temporal resolutions. The\ndata are produced using a combination\
    \ of observations from various sources, such as\nsatellites, ground-based stations,\
    \ aircraft, and a numerical weather-prediction model.\nERA5 is the ﬁfth generation\
    \ of ECMWF’s atmospheric reanalysis dataset, which spans\nthe period from 1979\
    \ to the present. It is widely used for a range of applications, including\nclimate\
    \ research, meteorology, and weather forecasting. The data are available to the\
    \ public\nthrough ECMWF’s data servers and can be accessed using various software\
    \ tools and\nprogramming languages.\nThe validation methodology used here is similar\
    \ to the one followed by other re-\nsearchers who were investigating the feasibility\
    \ of using ERA5 in crop modeling to comple-\nment, or even replace, the observations\
    \ of local weather stations [9–12].\nHourly data for the main weather variables\
    \ (air temperature and humidity at 2 m,\nwind speed at 10 m and solar radiation)\
    \ were downloaded from ERA5 using Python scripts.\nDaily aggregates of the weather\
    \ variables required for the calculation of the ETo using\nFAO56 were downloaded\
    \ using the local time zone for each site.\nThe raw data from the weather station\
    \ and nodes were downloaded from the CORDOVA-ET\nserver and aggregated into hourly\
    \ and daily intervals. The ETo was calculated on an hourly\nbasis, as well as\
    \ daily, following FAO56 and ASCE using the refET library https://github.com/\n\
    WSWUP/RefET (accessed on 20 October 2023). In cases where the height for the weather\
    \ station\nwas not standard (2 m), a correction for the wind speed was performed\
    \ according to FAO56.\nFor each country, the data for each season were calculated\
    \ and plotted showing the\nETo estimates of the CORDOVA-ET and the ETo extracted\
    \ from ERA5 for the coordinates of\neach site. Daily ETa was calculated as described\
    \ in Jimenez-Berni et al. [7], where the sum of\nthe latent heat (LE) was converted\
    \ to mm/day. For cases where daily data were incomplete,\nan estimate of the daily\
    \ ETa was calculated based on the partial observations of hourly\ninstantaneous\
    \ calculations (ETa alt). The algorithm is similar to the approach followed by\n\
    algorithms used with remote sensing, where the observations are instantaneous\
    \ (taken at\nAgronomy 2023, 13, 2756\n7 of 28\nthe time of satellite ﬂights over\
    \ the area). The evaporative fraction, EF, (hourly ETa/ETo) is\nthen extrapolated\
    \ to the rest of the day:\nETaalt = EToEFhourly\nc\n(1)\nwhere ETa and ETo are\
    \ daily estimates, and EF is the average of ETa/ETo values calculated\nfrom the\
    \ hourly data when solar radiation is above 400 W/m2.\n3. Results and Discussion\n\
    3.1. Training, Communication, and Support\n3.1.1. Training and Coaching\nThe initial\
    \ philosophy behind the network was to fully empower all the participants\nwith\
    \ the knowledge required to assemble, deploy, and run the CORDOVA-ET instrument,\n\
    and also to analyze the collected data and maintain the equipment. Therefore,\
    \ users’\ntraining was considered a crucial step in the development of the network.\
    \ It was considered\nimportant to ensure that all users would understand well\
    \ how to assemble, use, and\nmaintain the equipment correctly. Training took many\
    \ forms, such as instructional videos,\nuser manuals, and in-person or online\
    \ training sessions.\nThe ND team trained all personnel from the participant countries\
    \ in the use, assembly,\ndeployment, and maintenance of the CORDOVA-ET system.\
    \ Several in-person workshops\nwere conducted in Cordoba and in the NENA region,\
    \ as well as online. This training\ntargeted technical specialists in the ﬁeld\
    \ of agrometeorology to provide them with the\nknowledge needed to adopt the CORDOVA-ET\
    \ system.\nParticipants received the materials and instruction necessary to assemble\
    \ and operate a\ncomplete CORDOVA-ET system. Upon completion of the program, country\
    \ representatives\ntook ownership of their CORDOVA-ET systems, transporting and\
    \ installing them at the\nagreed-upon sites within their countries. Once operative,\
    \ they were responsible for operation\nand maintenance. Under this framework,\
    \ the training had the following specific objectives:\n1.\nTo give participants\
    \ a deeper understanding of the various ways to determine evapo-\ntranspiration,\
    \ focusing on the calculation method behind the CORDOVA-ET system;\n2.\nTo provide\
    \ an overview of the system components and the manufacturing process,\nfrom procurement\
    \ to assembly;\n3.\nTo review the critical steps in the set-up of the equipment,\
    \ data retrieval, and quality checks;\n4.\nTo develop the autonomy of the participant\
    \ to monitor, update, and maintain the equipment;\n5.\nTo devise the ET measurement\
    \ plans according to the project objectives in each of the\ncountries involved.\n\
    As the system evolved, several online workshops were conducted to provide training\n\
    to the members of the network on the new features and advancements made. These\
    \ work-\nshops served as a platform to educate participants about the latest updates,\
    \ enhancements,\nand improvements which were incorporated into the system over\
    \ time.\nThe combination of in situ training and local problem-solving through\
    \ backstopping\nmissions strengthened the capacity of the participating countries\
    \ to effectively utilize\nand maintain the technology. It also fostered a closer\
    \ relationship between the ND team\nand the local stakeholders, promoting collaboration\
    \ and knowledge exchange. Overall,\nthe backstopping missions played a crucial\
    \ role in ensuring the successful adoption and\nsustainable use of the technology\
    \ within the participating countries.\n3.1.2. Establishing a Support Network\n\
    At the early stages of the network, there were two main ways for communication\n\
    among the users and developers of the ET network:\n•\nBy video conferencing using\
    \ a collaboration platform that uniﬁes chat, voice, video,\nand ﬁle sharing (e.g.,\
    \ Zoom). It is designed to be used by local, remote, and distributed\nwork groups.\
    \ It was mainly used to carry out e-training and webinars;\nAgronomy 2023, 13,\
    \ 2756\n8 of 28\n•\nMultiple chat groups (WhatsApp) were established for the ET\
    \ network participants,\nserving distinct purposes facilitating real-time communication,\
    \ enabling active en-\ngagement, and quick problem-solving for the community.\
    \ Separate chat groups were\ncreated for each speciﬁc country, allowing participants\
    \ to address country-speciﬁc\nconcerns, exchange localized ideas, and address\
    \ unique challenges efﬁciently. The\ndynamic nature of these chat groups promoted\
    \ effective and seamless communication.\nAlthough there were multiple communication\
    \ channels, the community involved in\nthe training courses, the deployment of\
    \ the stations, and data collection and manipulation\ndid not have a single platform\
    \ established where the users could interact among them and\nwith the ND team.\
    \ Therefore, in December 2020, it was proposed to create a web-based\nportal for\
    \ discussion and exchange between CORDOVA-ET users and the ND team to\nfacilitate\
    \ effective online communication, feedback, and collaboration.\nTo enable every\
    \ person working on the CORDOVA-ET system to exchange experiences,\nideas, problems\
    \ found, and possible solutions, the platform was required to meet the\nfollowing\
    \ requisites:\n1.\nAccessible meeting place with a graphical interface;\n2.\n\
    Ease of use;\n3.\nEffective and affordable;\n4.\nPermanent access;\n5.\nLongevity;\n\
    6.\nEasy ﬁle storage and exchange.\nThe best platform that meets the requirements\
    \ listed above is Dgroups. In terms of\nformal organization, the Dgroups Partnership\
    \ is a cofunded project of Bellanet/IDRC,\nﬁnanced by the partners and members,\
    \ comprising a diverse group, including international\nor intergovernmental organizations,\
    \ such as the World Bank, UNAIDS, FAO, CTA; govern-\nment agencies, such as Danida,\
    \ DFID, IDRC, Sida, SDC; national and international NGOs,\nlike ICCO, Hivos, OneWorld,\
    \ KIT, SNV; ICT- and knowledge-focused institutes/projects,\nsuch as IICD and\
    \ Bellanet [13].\nThe Dgroups platform was selected for the following reasons:\n\
    1.\nAll the groups participating in the project were already members of it;\n\
    2.\nThere was already an active community created on Water Productivity and Agriculture\n\
    https://dgroups.org/fao/waterproductivity (accessed on 3 October 2023);\n3.\n\
    There was the possibility to create a subgroup under the Water Productivity group,\
    \ so\nthat the CORDOVA-ET users would have access to all the documentation, not\
    \ only\nrelated to the CORDOVA-ET, but also other topics related to water productivity;\n\
    4.\nThe users did not need to change platforms to organize their knowledge and\
    \ ﬁles;\n5.\nFiles were easily accessible;\n6.\nWhile WhatsApp is fast and easy,\
    \ it is very difﬁcult to have all conversations organized\nand accessible to everyone.\
    \ Dgroups allows you to access the organized conversations\nand ﬁles easily at\
    \ any time.\nThe use of the Dgroups platform did not exclude the use of the WhatsApp\
    \ chat, but\ncomplemented it. However, a forum tends to be asynchronous and visitors\
    \ can catch up the\nconversations at any time reading previous posts. This is\
    \ not viable in WhatsApp, where a\nconversation or topic could be easily missed.\n\
    3.2. CORDOVA-ET System Upgrades\nThese prototypes evolved over time through a\
    \ trial-and-error process based on our\nown experience, and more importantly,\
    \ thanks to the feedback received from the early\nadopters and initial users.\
    \ The expansion and adoption of the system therefore followed a\ncollaborative\
    \ approach.\nSince the original system development, several components have been\
    \ upgraded, as\ndescribed below.\nAgronomy 2023, 13, 2756\n9 of 28\n3.2.1. Sensor\
    \ Upgrades\nThe sensors integrated in the nodes are a fundamental component of\
    \ the CORDOVA-\nET, as they sense the infrared temperature and air temperature\
    \ and humidity required\nfor the calculation of the sensible heat used in the\
    \ energy-balance approach followed to\nestimate the actual evapotranspiration.\
    \ Figure A1 of Appendix A depicts pictures of both\nthe original and the improved\
    \ sensors used in the CORDOVA-ET station. Below is a\ndescription of the issues\
    \ found and the implemented solutions:\n•\nThe initial prototypes of the air-temperature\
    \ sensor used the BME280 (Bosch, Gerlin-\ngen, Germany) sensor, integrated into\
    \ a completely 3D-printed radiation shield and\nsensor holder. The large size\
    \ of the electronic board provides large thermal mass and\nmakes it not really\
    \ suitable for precise applications; therefore, the second prototype,\nbased on\
    \ the SHT35 (Sensirion, Stäfa, Switzerland) manufactured by ClosedCube\n(London,\
    \ UK), was used and integrated into the 3D-printed radiation shield. This\nnew\
    \ sensor provided a thermal design based on the manufacturer’s speciﬁcations and\n\
    included a protective cap to avoid water and dust to enter in the sensor. A newly\n\
    upgraded sensor, also based on the SHT35, was tested (Hunan Rika Electronic Tech\n\
    Co.,Ltd., Changsha, Hunan, China). The new sensor is completely encapsulated and\n\
    isolated from direct water and dust due to a PTFE membrane. Also, this new sensor\n\
    does not require soldering to connect it to the system, as the connector comes\
    \ already\nintegrated according to our speciﬁcations. The sensor comes as a kit\
    \ with a commercial\nradiation shield with a stainless-steel mounting bracket.\
    \ This represents a quantum\nleap from the original 3D-printed sensors;\n•\nThe\
    \ original Canopy Infrared Temperature sensors have undergone a modiﬁcation to\n\
    include connector and preassembled cables, which provide plug-and-play without\n\
    need of any soldering. On the other hand, the 3D-printed enclosure for the canopy-\n\
    temperature sensor remains unchanged; designs and 3D printer ﬁles are available\n\
    in GitHub: https://github.com/OpenAgriTech/CORDOVA-ET-Hardware (accessed\non 20\
    \ October 2023). The removal of soldering steps and the shipment of preprinted\n\
    sensors improved the efﬁciency and ensured the availability of spare parts at\
    \ all times;\n•\nA soil-temperature sensor was also included in the initial prototypes,\
    \ with the goal of\nmeasuring soil temperature for crop simulation purposes and\
    \ potentially calculating\nsoil heat ﬂux. The sensor is relatively simple, uses\
    \ the One-Wire protocol, and has\nnot been problematic. The main issues were due\
    \ to damaged cables by tillage or\nanimals, as well as incorrect assembly. The\
    \ initial version used ﬁeld-replaceable\nconnectors, which required certain experience\
    \ to ensure proper assembly. A plug-and-\nplay solution was provided by substituting\
    \ an unassembled sensor for a soil sensor\nthat had the connector integrated;\n\
    •\nThe initial pyranometer sensor prototypes included a custom design based on\
    \ a multi-\nspectral sensor (AS7262, AMS-Osram, Premstaetten, Austria) and a 3D-printed\
    \ housing.\nThe idea behind using multispectral sensors is that it could help\
    \ to estimate shortwave\nradiation as well as the PAR component. Also, a version\
    \ in the red–NIR region (AS7263)\ncould be potentially used to estimate NDVI and\
    \ other spectral indices when combined\nwith a downward-looking sensor. However,\
    \ because of the importance of solar radiation\nin the energy balance, a new commercial\
    \ pyranometer, SP-110-SS, (Apogee Instruments,\nInc., North Logan, UT, USA) was\
    \ incorporated into the upgraded CORDOVA-ET. It was\ndecided to have only one\
    \ high-quality pyranometer for the whole system to keep down\nthe costs and to\
    \ remove the original pyranometers from the four nodes, assuming that\nradiation\
    \ does not vary within the distances among the nodes. The new pyranometer\nnode\
    \ consists of the pyranometer itself, the data logger based on the original node\
    \ and\nan accurate 18-bit analog-to-digital converter, and a solar panel, as described\
    \ in detail in\nJimenez-Berni et al. [7]. The node provides a rugged circular\
    \ connector for easy connec-\ntion to data loggers and controllers, and it simplifies\
    \ sensor removal and replacement for\nmaintenance and recalibration.\nAgronomy\
    \ 2023, 13, 2756\n10 of 28\n3.2.2. Data Logger\nUsers also found some difﬁculties\
    \ building the initial versions of the data logger.\nTherefore, there has been\
    \ some evolution in this component as well.\n•\nBaseboard. A custom-designed printed\
    \ circuit board (PCB) is used to hold the LoPy4\nmicrocontroller and interface\
    \ the different sensors. The board evolved from using\nthrough-hole components\
    \ to the surface-mount to avoid any soldering. Also, the board\nhas been designed\
    \ to ﬁt the speciﬁc enclosure without the need of any mounting plate.\nAll the\
    \ connections are clearly marked and are aligned with the circular connectors\n\
    for the sensors that are unique for each sensor to avoid confusion. Additionally,\
    \ two\nswitches were incorporated on the baseboard for power and selecting between\
    \ the\ndifferent operating modes: run, ﬁrmware upgrade, or setup. This facilitates\
    \ easy\nmanagement and conﬁguration of the node as needed. Another upgrade requested\n\
    by the users was the possibility of providing ofﬂine data recording to avoid data\
    \ loss\nwhen the LoRaWAN network was ofﬂine. A microSD card slot was added and\
    \ the\nsoftware adapted to provide local storage into comma-separated values (CSV).\
    \ Since\nthe LoPy4 does not have a battery-backed real-time clock (RTC) that allows\
    \ it to hold\nthe time during power cycle or reset, it has a connector for an\
    \ external RTC device.\nThe software was modiﬁed to provide a way to synchronize\
    \ the internal clock and\nRTC with the LoRaWAN server regularly.\n•\nSolar-regulator\
    \ connectors. The original solar regulator required soldering and screw\nterminals\
    \ for the power output and inputs, respectively. The new power supply\ncomponents\
    \ were modiﬁed to make it plug-and-play without any need for soldering.\nThis\
    \ eliminated several issues of damaged cables or solder joints in this component,\n\
    resulting in improved reliability.\n•\nData-logging software. The software that\
    \ reads the sensor data and transmits the\nmeasurements over LoRaWAN has undergone\
    \ several iterations, which can be sum-\nmarized as follows\no\nThe LoRaWAN keys\
    \ are unique for each board and generated from the hardware\naddress of the LoRa\
    \ and SigFox radios. In the initial versions, users generated\nthe LoRaWAN keys\
    \ from The Things Network (TTN) console, which required\nprogramming each node\
    \ individually with the specific keys. This could have led\nto mistakes and duplicated\
    \ keys in different nodes. Now, the software will show\nthe keys in a serial terminal,\
    \ and users can copy these keys when registering the\nnodes in the TTN, avoiding\
    \ potential issues with the key generation;\no\nThe code is unique for all the\
    \ node types (different hardware revisions, normal\nnodes, and pyranometers).\
    \ The user can select the operating mode using the\nserial console or remotely\
    \ using LoRaWAN downlink messages. This prevents\nconﬁguration issues, and nodes\
    \ can be programmed only once;\no\nAn interactive mode is available on the serial\
    \ console for conﬁguration and\ndebugging. When the mode switch is moved to the\
    \ setup position, the board\nenters into an interactive mode that can be accessed\
    \ when connected with the\nserial console or by WiFi. This allows users to read\
    \ the LoRaWAN keys, test\nthe sensors, or change the type of the node from standard\
    \ to pyranometer. This\nwas very effective during the setup process;\no\nA time-synchronization\
    \ routine is executed twice a day for time synchroniza-\ntion from the LoRaWAN\
    \ server. The routine determines the offset between the\ninternal LoPy4 clock\
    \ and the server, which upgrades the clock accordingly and\nprovides actual time\
    \ for data storage in the microSD card;\no\nThe nodes can upgrade the software\
    \ and ﬁrmware using WiFi if they are close\nenough to the WiFi provided by the\
    \ base station. This over-the-air (OTA)\nupgrade can be triggered manually in\
    \ the setup mode or remotely using a\nLoRaWAN downlink command.\nAgronomy 2023,\
    \ 13, 2756\n11 of 28\n3.2.3. Base Station\nThe solar-powered base station includes\
    \ the LoRaWAN gateway and a 4G modem.\nThe initial solar capacity was insufﬁcient\
    \ and was upgraded from 25 W to 50 W, with larger\npanels or double the number\
    \ of smaller panels. The battery was also upgraded using two\n9 Ah standard batteries\
    \ or one 14 Ah that ﬁt in the standard enclosure.\n•\nGateway and modem improvements.\
    \ The initial version of the base station consisted\nof separated components for\
    \ the LoRaWAN gateway (TTN Indoor Gateway, The Thing\nIndustries, Amsterdam, Netherlands)\
    \ and the 4G modem (RUT 240, Teltonika, Vilnius,\nLithuania). These components\
    \ were rated for indoor use; therefore, they were put in\nan enclosure to provide\
    \ ingress protection. Having only an internal antenna could\nlimit the range of\
    \ the LoRaWAN communications. A second version of the base station\nused a single\
    \ device that included the LoRaWAN module and 4G communications\n(DLOS8, Dragino,\
    \ China) in an outdoor-rated device. This simpliﬁed installation and\nconﬁguration,\
    \ as there is only one device.\n•\nCommercial weather station. The original weather\
    \ station (WH4000 SE, Froggit,\nBrandenburg, Germany) included an interactive\
    \ display that showed the weather\nvariables while providing WiFi data upload\
    \ to a custom server. In a second hardware\niteration, the station was upgraded\
    \ to the model WH3000SE, that used a small WiFi\nreceiver for WiFi transmission,\
    \ reducing the size and power consumption. This\nreceiver supports other instruments\
    \ from Froggit, such as the soil-moisture sensors.\n3.3. Communication Issues\
    \ and Data Integrity\nAn analysis of data completeness was performed by calculating\
    \ the ratio of actual\nobservations over the theoretical number of observations\
    \ for every season, taking into\naccount the duration of each crop cycle.\nThe\
    \ general analysis of data integrity shows a strong variation in performance across\n\
    the different countries (Egypt, eg; Jordan, jo; Lebanon, le; Morocco, ma; Palestine,\
    \ ps;\nTunisia, tn) and seasons (season 1 = 1UTC; season 2 = 2UTC; . . . ). The\
    \ analysis at the daily\nscale (Figure 1), using complete days where the ETo can\
    \ be estimated, shows that Lebanon\nhas almost 100% of data availability for the\
    \ ETo calculation. In this particular case, the gaps\nin the weather data from\
    \ the CORDOVA-ET were ﬁlled with backup data from the weather\nstation deployed\
    \ in the ﬁeld owned by the Lebanese Agricultural Research Institute (LARI),\n\
    providing seamless integration with the data-processing algorithms. In other countries,\n\
    data integrity ranged from 23 to 93% depending on the country and season.\nThe\
    \ hourly data integrity (Figure 2), calculated as the number of hours when the\
    \ ETa\ncan be calculated, shows less completeness, mostly due to problems in the\
    \ communication\nor power issues in the base station. If the base station stops,\
    \ all the communication from\nthe nodes and the weather station stops. Some other\
    \ times, the weather station stopped\ntransmitting data while the nodes still\
    \ transmitted. However, in that case, it was not\npossible to compute the ETa\
    \ because some weather variable collected by the base station\nwas missing.\n\
    Having a completely open-source and ﬂexible system like the CORDOVA-ET also\n\
    allows it to incorporate other data sources, such as local weather station data\
    \ or online\ndatasets, that could be used to ﬁll the gaps in case of any failure.\
    \ The data discussed below\nare strictly those recorded by the CORDOVA-ET systems\
    \ in each country during the six\ncampaigns of this study, from the winter of\
    \ 2019–2020 until the end of 2022.\nAgronomy 2023, 13, 2756\n12 of 28\nAgronomy\
    \ 2023, 13, x FOR PEER REVIEW \n12 of 32 \n \n \nweather station deployed in the\
    \ ﬁeld owned by the Lebanese Agricultural Research Insti-\ntute (LARI), providing\
    \ seamless integration with the data-processing algorithms. In other \ncountries,\
    \ data integrity ranged from 23 to 93% depending on the country and season. \n\
    \ \nFigure 1. Data integrity analysis of daily data, considering the complete\
    \ days with ETo calculations. \nThe hourly data integrity (Figure 2), calculated\
    \ as the number of hours when the ETa \ncan be calculated, shows less completeness,\
    \ mostly due to problems in the communication \nor power issues in the base station.\
    \ If the base station stops, all the communication from \nthe nodes and the weather\
    \ station stops. Some other times, the weather station stopped \ntransmitting\
    \ data while the nodes still transmitted. However, in that case, it was not pos-\n\
    sible to compute the ETa because some weather variable collected by the base station\
    \ was \nmissing. \nFigure 1. Data integrity analysis of daily data, considering\
    \ the complete days with ETo calculations.\nAgronomy 2023, 13, x FOR PEER REVIEW\
    \ \n13 of 32 \n \n \n \nFigure 2. Data integrity analysis of the hourly data,\
    \ calculated as the ratio of the number of hourly \ncalculated ETa estimations\
    \ over the theoretical number of observations. \nHaving a completely open-source\
    \ and ﬂexible system like the CORDOVA-ET also \nallows it to incorporate other\
    \ data sources, such as local weather station data or online \ndatasets, that\
    \ could be used to ﬁll the gaps in case of any failure. The data discussed below\
    \ \nare strictly those recorded by the CORDOVA-ET systems in each country during\
    \ the six \ncampaigns of this study, from the winter of 2019–2020 until the end\
    \ of 2022. \n3.3.1. Egypt \nThe two ﬁrst deployments of the network were in two\
    \ locations in Egypt: Zankaloun \nand Sakha. In Zankaloun, it was not possible\
    \ to record data until the second season due \nto the SIM card not working. In\
    \ Sakha, data were recorded from the ﬁrst season, despite \nreceiving the CORDOVA-ET\
    \ system later than in Zankaloun. Both stations had minor data \ngaps in the ﬁrst\
    \ two seasons of 2020, which unfortunately were the only campaigns where \ndata\
    \ for validation were available. This is attributed to the fact that an early\
    \ version of the \nsystem was deployed and suﬀered from the problems mentioned\
    \ above. For instance, \nnodes progressively failed due to electronic issues caused\
    \ by water and dust. These data \ngaps made it impossible to conduct the energy-balance\
    \ calculations. Once the new version \nwas upgraded, replacement sensors and connectors\
    \ were sent, but issues with the com-\nmunication between the weather station\
    \ and the base station resulted in a lack of weather \ndata for these two sites\
    \ in the subsequent growing periods. This was caused by the lack of \na functional\
    \ SIM card, and the lack of adequate maintenance and the proper replacement \n\
    of the faulty sensors. \n \n \nFigure 2. Data integrity analysis of the hourly\
    \ data, calculated as the ratio of the number of hourly\ncalculated ETa estimations\
    \ over the theoretical number of observations.\n3.3.1. Egypt\nThe two ﬁrst deployments\
    \ of the network were in two locations in Egypt: Zankaloun\nand Sakha. In Zankaloun,\
    \ it was not possible to record data until the second season due\nto the SIM card\
    \ not working. In Sakha, data were recorded from the ﬁrst season, despite\nreceiving\
    \ the CORDOVA-ET system later than in Zankaloun. Both stations had minor data\n\
    gaps in the ﬁrst two seasons of 2020, which unfortunately were the only campaigns\
    \ where\ndata for validation were available. This is attributed to the fact that\
    \ an early version of\nthe system was deployed and suffered from the problems\
    \ mentioned above. For instance,\nnodes progressively failed due to electronic\
    \ issues caused by water and dust. These\ndata gaps made it impossible to conduct\
    \ the energy-balance calculations. Once the new\nversion was upgraded, replacement\
    \ sensors and connectors were sent, but issues with\nthe communication between\
    \ the weather station and the base station resulted in a lack of\nweather data\
    \ for these two sites in the subsequent growing periods. This was caused by\n\
    Agronomy 2023, 13, 2756\n13 of 28\nthe lack of a functional SIM card, and the\
    \ lack of adequate maintenance and the proper\nreplacement of the faulty sensors.\n\
    3.3.2. Jordan\nThe station was installed halfway through the crop cycle in the\
    \ ﬁrst season. Season\n1 worked well with minor gaps until the end of season 2\
    \ (November 2020). To carry out\nmaintenance work, the station was removed after\
    \ harvesting the season 2 crop. In Jan-\nuary 2021, the station was reinstalled\
    \ again for season 3, gathering a very good dataset with\n93% data integrity.\
    \ In season 4, the importance of correctly placing sensors was highlighted,\n\
    as the recorded canopy temperature reached 55 degrees Celsius, which indicates\
    \ that the\nsensors were probably detecting soil rather than plant temperatures.\
    \ When the ground\ncover increased as the crop developed, canopy temperatures\
    \ decreased markedly, being\nsimilar to air temperatures. This suggests that the\
    \ canopy-temperature sensor was oriented\nalong the crop rows in a way that it\
    \ measured the temperature of the soil surface rather\nthan the crop. Consequently,\
    \ the data integrity for calculating the ETo was 88%, while the\nETa could only\
    \ be calculated for 30% of the data due to the canopy temperature errors.\nDuring\
    \ season 5, there was a lack of data from the nodes due to communication failure\n\
    with the base station, reducing the integrity of the hourly ETa data.\n3.3.3.\
    \ Lebanon\nThe CORDOVA-ET system was installed in Tal al Amara (Lebanon) in 2020.\
    \ Its Froggit\nweather station experienced some port blocking issues by the mobile\
    \ phone operator that\nprevented its communication with the server. In this case,\
    \ we have used the data from the\nweather station operated by LARI for comparisons.\
    \ The data were uploaded to the server\nusing custom scripts to make it available\
    \ to the data processing. Due to power failures,\nonly two of the four nodes for\
    \ ETa determination worked properly over the years.\n3.3.4. Morocco\nThe initial\
    \ seasons in Morocco provided very irregular datasets due to continuous\ncommunication\
    \ and power issues in the base station. Moreover, one of the main problems\nfound\
    \ in this deployment was that the sensors were installed below the crop canopy,\
    \ so\nreliable measurements were drastically reduced.\n3.3.5. Tunisia\nDuring\
    \ the ﬁrst season, the nodes for measuring ETa experienced battery issues (except\n\
    for one node), causing intermittent data gaps. The data from season 2 correlated\
    \ very well\nwith a comparative dataset, with some small data gaps. There were\
    \ communication and\nsensor issues that resulted in incomplete datasets and missing\
    \ seasons (from the end of\nseason 3 until midseason 5). There were also some\
    \ known issues with the precipitation\ndata due to a bug in the ﬁrmware of the\
    \ weather station. The daily rainfall values were not\nreset correctly, resulting\
    \ in repeated values, even when there was no precipitation. This was\nﬁxed in\
    \ the ﬁrmware later in season 5. Finally, in the last season, the issues were\
    \ solved,\nand a good dataset was obtained with minor gaps. In addition, a new\
    \ deployment system\nwas added to Tunisia, which has been working correctly since\
    \ the end of June 2022 with\ngood data integrity.\n3.3.6. Palestine\nPalestine\
    \ was the last country that was incorporated to the NENA ET network, so\nthere\
    \ are only two seasons of data. In both cases, there were data gaps due to issues\
    \ with\nthe SIM card and communication issues with the CORDOVA-ET server. In the\
    \ case of\nseason 6, the data were very limited and the observations of the ETo\
    \ and ETa are scarce, as\ndiscussed below.\nAgronomy 2023, 13, 2756\n14 of 28\n\
    3.4. Validation of Individual Meteorological Variables and Estimates of ET\nThroughout\
    \ the season and across different countries, the primary weather variables, as\n\
    well as the calculations of reference evapotranspiration, were compared with the\
    \ ERA5 data.\nBy conducting these comparisons, we aimed to validate the reliability\
    \ and robustness of the\nET calculations, further enhancing the integrity and\
    \ confidence in the dataset obtained.\nThis comparison involved a comprehensive\
    \ analysis of ETa values, ensuring a thor-\nough evaluation of the accuracy and\
    \ consistency of the estimated evapotranspiration values\nin relation to the reference\
    \ data provided by ERA5.\n3.4.1. Primary Weather Variables\nComparing the data\
    \ of a new device is of utmost importance to assess its reliability and\naccuracy.\
    \ When introducing a novel device into a system or study, it is essential to evaluate\n\
    its performance against established standards or reference devices. This comparative\n\
    analysis allows for the identiﬁcation of potential discrepancies, biases, or limitations\
    \ in\nthe new device’s measurements. By comparing data, researchers and practitioners\
    \ can\ndetermine the device’s level of accuracy and reliability, enabling informed\
    \ decision-making\nand ensuring the validity of subsequent analyses and interpretations.\
    \ Furthermore, this\nprocess helps establish conﬁdence in the new device’s capabilities\
    \ and builds trust in\nthe collected data. It enables users to identify any potential\
    \ variations or deviations\nfrom expected results and implement appropriate adjustments\
    \ or calibrations as needed.\nUltimately, the act of comparing data from a new\
    \ device is crucial for ensuring data quality,\nfacilitating meaningful comparisons,\
    \ and enhancing the overall robustness of scientiﬁc and\ntechnical investigations.\n\
    The comparison of the data obtained from the variables of the CORDOVA-ET with\n\
    ERA5 reveals crucial information about the studied meteorological variables. These\
    \ results\nprovide a statistical understanding of the analyzed variables (Table\
    \ 4) and their relationship\nwith the predictors used in the study. Detailed analysis\
    \ for each variable is available in\nAppendix A (Figures A2–A5).\nTable 4. Validation\
    \ of weather variables comparing the ERA5 data. Average metrics across all the\n\
    seasons and sites.\nVariable\nSlope\nIntercept\nR2\nRMSE\nMBE\nAir temperature\
    \ (Celsius)\n0.90\n2.90\n0.92\n2.22\n0.89\nRelative humidity (%)\n0.87\n6.12\n\
    0.77\n11.31\n−2.17\nShortwave solar radiation (MJ · m2)\n0.92\n79.51\n0.89\n122.49\n\
    37.99\nWind speed at 2 m (m/s)\n0.52\n1.01\n0.46\n1.06\n0.26\nAir temperature\
    \ showed a very good agreement between the ﬁeld measurements and\nERA5 (R2 = 0.92\
    \ and slope = 0.9). Likewise, shortwave solar radiation also showed good\ncorrelation\
    \ and slope (R2 = 0.89 and slope = 0.92). However, the relative humidity showed\n\
    poorer performance, with an R2 of 0.77 and a slope of 0.87. The large dispersion\
    \ observed\nin the dataset shows very different behaviors across the different\
    \ sites, which suggests local\neffects that may be missed by the ERA5 (Figure\
    \ A3). Wind speed exhibited the widest\ndifferences between the two datasets,\
    \ also reﬂecting the impact of local variations. The\nCORDOVA-ET measurements\
    \ strongly underestimated the ERA5 wind speed values, with\nan average slope of\
    \ 0.52 and R2 of 0.46 for all the seasons (Figure A5).\n3.4.2. Reference Evapotranspiration\
    \ (ETo)\nAn overall comparison for each country and season was performed comparing\
    \ the\nhourly estimates of the ETo from the CORDOVA-ET and the ETo calculated\
    \ from ERA5.\nThe results showed a very strong linear correlation between both\
    \ variables, with a slope of\n0.90, RMSE = 0.08, and MBE = −0.01 mm/h. Figure\
    \ 3 show the correlations through the\nsix campaigns in each country.\nAgronomy\
    \ 2023, 13, 2756\n15 of 28\nAgronomy 2023, 13, x FOR PEER REVIEW \n16 of 32 \n\
    \ \n \n \nFigure 3. Comparisons, correlations, and accuracies of the hourly ETo\
    \ estimated with the COR-\nDOVA-ET and obtained from ERA5. From top left to bottom\
    \ right: Egypt, Jordan, Lebanon, Mo-\nrocco, Palestine, and Tunisia. Each dot\
    \ color represents diﬀerent seasons. \nFigure 3.\nComparisons, correlations, and\
    \ accuracies of the hourly ETo estimated with the\nCORDOVA-ET and obtained from\
    \ ERA5. From top left to bottom right: Egypt, Jordan, Lebanon,\nMorocco, Palestine,\
    \ and Tunisia. Each dot color represents different seasons.\nFor daily calculations,\
    \ only complete days with 24 h of hourly calculations were taken\ninto account.\
    \ The results showed very strong linear correlation between the observed\nCORDOVA-ET\
    \ ETo and the estimates from ERA-5. Except in two seasons, Jordan in season\n\
    3 and Morocco in season 5, the R2 ranged from 0.72 to 0.58. This issue was identiﬁed\
    \ as\nan incorrect height of the weather station that allowed the crop to overgrow\
    \ the station,\nresulting in incorrect wind and radiation measurements. Most slopes\
    \ were close to 1 and\ncoincident across the years, except for Egypt, with slopes\
    \ of 1.27 and 0.75 for wheat and\nrice, respectively, and Palestine in season\
    \ 5, with 1.35. The root mean square error ranged\nfrom 0.43 to 1.46 mm/s for\
    \ all the other seasons (see Figure 4).\nAgronomy 2023, 13, 2756\n16 of 28\nAgronomy\
    \ 2023, 13, x FOR PEER REVIEW \n18 of 32 \n \n \n \nFigure 4. Comparisons, correlations,\
    \ and accuracies of the daily ETo estimated with the CORDOVA-\nET and obtained\
    \ from ERA5. From top left to bottom right: Egypt, Jordan, Lebanon, Morocco, Pal-\n\
    estine, and Tunisia. Each dot color represents diﬀerent seasons. \nThe detailed\
    \ comparison of the CORDOVA-ET with ERA5 estimates at daily and \nhourly intervals\
    \ showed good correlation, but a consistent underestimation of the ETo (a \nslope\
    \ of 0.89 as the average for all sites and seasons of the daily data), suggesting\
    \ that \nFigure 4.\nComparisons, correlations, and accuracies of the daily ETo\
    \ estimated with the\nCORDOVA-ET and obtained from ERA5. From top left to bottom\
    \ right: Egypt, Jordan, Lebanon,\nMorocco, Palestine, and Tunisia. Each dot color\
    \ represents different seasons.\nThe detailed comparison of the CORDOVA-ET with\
    \ ERA5 estimates at daily and\nhourly intervals showed good correlation, but a\
    \ consistent underestimation of the ETo (a\nslope of 0.89 as the average for all\
    \ sites and seasons of the daily data), suggesting that there\nmay have been some\
    \ calibration issues with the pyranometer used in the CORDOVA-ET\nstation, causing\
    \ an underestimation of solar radiation. The new pyranometer chosen to\nreplace\
    \ the original one and other improvements in the weather station should correct\n\
    this problem. However, it should be pointed out that future comparative studies\
    \ are\nneeded using a more accurate check than the ERA5 dataset to determine whether\
    \ the ETo\nis underestimated by the CORDOVA-ET, or whether the ERA5 method overestimated\
    \ this\nAgronomy 2023, 13, 2756\n17 of 28\nvariable. For that purpose, comparisons\
    \ between the CORDOVA-ET system and well-\ncalibrated, research-grade agrometeorological\
    \ stations seem desirable. Network issues and\nproposed solutions.\n3.4.3. Estimates\
    \ of Actual Evapotranspiration (ETa)\nThroughout the six seasons, we acquired\
    \ a dataset of different crops in each country,\nincluding wheat in all of them\
    \ due to its signiﬁcance in food production in the region. This\nallowed us to\
    \ obtain diverse and detailed ET and crop information from various regions.\n\
    In the ﬁrst season, Egypt, Jordan, Lebanon, and Tunisia focused on measuring the\n\
    evapotranspiration (ETa) of wheat. As these were the initial stages of the network,\
    \ we were\nable to obtain approximately 50% of the hourly ETa data. Building upon\
    \ this progress, in\nthe ﬁfth season, the wheat ETa was measured again, with Palestine\
    \ joining the effort. In\nthis season, Lebanon emerged with the largest dataset,\
    \ achieving a remarkable 73% data\ncoverage. As a result of the dataset obtained,\
    \ it was shown that the winter wheat ETa\nincreased until the grain-ﬁlling stage,\
    \ and then the ETa fell, as is common for the wheat\ncrop. The ETa tracked closely\
    \ the ETo variations caused by ﬂuctuations in the evaporative\ndemand until the\
    \ onset of senescence, when there is a strong decline in transpiration. The\n\
    fast senescence around May resulted in ETa values that went sharply from less\
    \ than the\nETo to a very low fraction of the ETo as the wheat dried up (Figures\
    \ 5 and 6).\nAgronomy 2023, 13, x FOR PEER REVIEW \n19 of 32 \n \n \nthere may\
    \ have been some calibration issues with the pyranometer used in the COR-\nDOVA-ET\
    \ station, causing an underestimation of solar radiation. The new pyranometer\
    \ \nchosen to replace the original one and other improvements in the weather station\
    \ should \ncorrect this problem. However, it should be pointed out that future\
    \ comparative studies \nare needed using a more accurate check than the ERA5 dataset\
    \ to determine whether the \nETo is underestimated by the CORDOVA-ET, or whether\
    \ the ERA5 method overestimated \nthis variable. For that purpose, comparisons\
    \ between the CORDOVA-ET system and well-\ncalibrated, research-grade agrometeorological\
    \ stations seem desirable. Network issues \nand proposed solutions. \n3.4.3. Estimates\
    \ of Actual Evapotranspiration (ETa) \nThroughout the six seasons, we acquired\
    \ a dataset of diﬀerent crops in each country, \nincluding wheat in all of them\
    \ due to its signiﬁcance in food production in the region. This \nallowed us to\
    \ obtain diverse and detailed ET and crop information from various regions. \n\
    In the ﬁrst season, Egypt, Jordan, Lebanon, and Tunisia focused on measuring the\
    \ \nevapotranspiration (ETa) of wheat. As these were the initial stages of the\
    \ network, we were \nable to obtain approximately 50% of the hourly ETa data.\
    \ Building upon this progress, in \nthe ﬁfth season, the wheat ETa was measured\
    \ again, with Palestine joining the eﬀort. In \nthis season, Lebanon emerged with\
    \ the largest dataset, achieving a remarkable 73% data \ncoverage. As a result\
    \ of the dataset obtained, it was shown that the winter wheat ETa in-\ncreased\
    \ until the grain-ﬁlling stage, and then the ETa fell, as is common for the wheat\
    \ crop. \nThe ETa tracked closely the ETo variations caused by ﬂuctuations in\
    \ the evaporative de-\nmand until the onset of senescence, when there is a strong\
    \ decline in transpiration. The \nfast senescence around May resulted in ETa values\
    \ that went sharply from less than the \nETo to a very low fraction of the ETo\
    \ as the wheat dried up (Figures 5 and 6). \n \nFigure 5. Evolution of reference\
    \ evapotranspiration (ETo) calculated from the CORDOVA-ET (blue) \nand extracted\
    \ from ERA5 (orange), and comparison with the actual evapotranspiration (ETa)\
    \ calcu-\nlated as the sum of the latent-heat energy-balance component (green)\
    \ and the alternative method \nusing the evaporative fraction (red). Data from\
    \ the ﬁrst season in Lebanon over wheat. Note that \nthere was no ETa because\
    \ of the lack of complete days due to power outages at night time. \nFigure 5.\
    \ Evolution of reference evapotranspiration (ETo) calculated from the CORDOVA-ET\
    \ (blue)\nand extracted from ERA5 (orange), and comparison with the actual evapotranspiration\
    \ (ETa) calcu-\nlated as the sum of the latent-heat energy-balance component (green)\
    \ and the alternative method\nusing the evaporative fraction (red). Data from\
    \ the ﬁrst season in Lebanon over wheat. Note that\nthere was no ETa because of\
    \ the lack of complete days due to power outages at night time.\nA valuable dataset\
    \ of crops other than wheat was also obtained throughout the six\nseasons in the\
    \ participating countries. The data-collection process included other cereals,\n\
    vegetables, rice, and other crops of interest, such as maize, faba bean, sorghum,\
    \ fodder\nvetch, onion, and soybean. This comprehensive dataset for various crops\
    \ provides a solid\nfoundation for analyzing and understanding the speciﬁc characteristics\
    \ and requirements\nof each crop in different geographic regions. Figure 7 shows\
    \ the example of onion in Jordan,\na very important crop in the region with very\
    \ limited information on water productivity.\nThe results of the validation using\
    \ reanalysis data showed that the use of a cost-\neffective commercial-grade weather\
    \ station with the calibrations and data-handling algo-\nrithms developed in this\
    \ project can provide consistent ETo estimations comparable to\nestablished agrometeorological\
    \ weather station networks. The combination of canopy-\ntemperature sensors and\
    \ the modeling of variables, such as the net radiation, also proved\nAgronomy\
    \ 2023, 13, 2756\n18 of 28\nto provide accurate estimations of parameters that\
    \ would be needed to apply the energy\nbalance to determine the ETa [7].\nAgronomy\
    \ 2023, 13, x FOR PEER REVIEW \n20 of 32 \n \n \n \nFigure 6. Evolution of reference\
    \ evapotranspiration (ETo) calculated from the CORDOVA-ET (blue) \nand extracted\
    \ from ERA5 (orange), and comparison with the actual evapotranspiration (ETa)\
    \ calcu-\nlated as the sum of latent-heat energy-balance component (green) and\
    \ the alternative method using \nthe evaporative fraction (red). Data from the\
    \ ﬁfth season in Palestine over wheat. \nA valuable dataset of crops other than\
    \ wheat was also obtained throughout the six \nseasons in the participating countries.\
    \ The data-collection process included other cereals, \nvegetables, rice, and\
    \ other crops of interest, such as maize, faba bean, sorghum, fodder \nvetch,\
    \ onion, and soybean. This comprehensive dataset for various crops provides a\
    \ solid \nfoundation for analyzing and understanding the speciﬁc characteristics\
    \ and requirements \nof each crop in different geographic regions. Figure 7 shows\
    \ the example of onion in Jordan, \na very important crop in the region with very\
    \ limited information on water productivity. \nFigure 6. Evolution of reference\
    \ evapotranspiration (ETo) calculated from the CORDOVA-ET (blue)\nand extracted\
    \ from ERA5 (orange), and comparison with the actual evapotranspiration (ETa)\
    \ calcu-\nlated as the sum of latent-heat energy-balance component (green) and\
    \ the alternative method using\nthe evaporative fraction (red). Data from the\
    \ ﬁfth season in Palestine over wheat.\nAgronomy 2023, 13, x FOR PEER REVIEW \n\
    21 of 32 \n \n \nFigure 7. Evolution of reference evapotranspiration (ETo) calculated\
    \ from the CORDOVA-ET (blue) \nand extracted from ERA5 (orange), and comparison\
    \ with the actual evapotranspiration (ETa) calcu-\nlated as the sum of latent-heat\
    \ energy-balance component (green) and the alternative method using \nthe evaporative\
    \ fraction (red). Data from the ﬁfth season in Jordan over onion. \nThe results\
    \ of the validation using reanalysis data showed that the use of a cost-ef-\n\
    fective commercial-grade weather station with the calibrations and data-handling\
    \ algo-\nrithms developed in this project can provide consistent ETo estimations\
    \ comparable to es-\ntablished agrometeorological weather station networks. The\
    \ combination of canopy-tem-\nperature sensors and the modeling of variables,\
    \ such as the net radiation, also proved to \nprovide accurate estimations of\
    \ parameters that would be needed to apply the energy \nbalance to determine the\
    \ ETa [7]. \n3.5. General Issues and Proposed Solutions \nOver more than two years\
    \ of operation, multiple issues related to operation and \nmaintenance were identiﬁed,\
    \ all resulting in improvements in the diﬀerent iterations of \nthe prototypes\
    \ supplied to the countries. \n3.5.1. Power Consumption \nPower issues aﬀecting\
    \ the base station were the primary cause of communication \nissues and data gaps.\
    \ The initial power requirements were underestimated and limited by \nFigure 7.\
    \ Evolution of reference evapotranspiration (ETo) calculated from the CORDOVA-ET\
    \ (blue)\nand extracted from ERA5 (orange), and comparison with the actual evapotranspiration\
    \ (ETa) calcu-\nlated as the sum of latent-heat energy-balance component (green)\
    \ and the alternative method using\nthe evaporative fraction (red). Data from\
    \ the ﬁfth season in Jordan over onion.\n3.5. General Issues and Proposed Solutions\n\
    Over more than two years of operation, multiple issues related to operation and\n\
    maintenance were identiﬁed, all resulting in improvements in the different iterations\
    \ of the\nprototypes supplied to the countries.\n3.5.1. Power Consumption\nPower\
    \ issues affecting the base station were the primary cause of communication\n\
    issues and data gaps. The initial power requirements were underestimated and limited\
    \ by\nAgronomy 2023, 13, 2756\n19 of 28\nshipping logistics. It worked well during\
    \ the summer months, but the solar power and\nenergy storage were limited during\
    \ the winter months or following several cloudy days.\nAfter testing, it became\
    \ clear that 50 W solar panels are a minimum requirement for the\nstable operation\
    \ of all the components of the base station. In some countries, they are using\n\
    main power, which is a great option, if available.\nIn addition, short circuits\
    \ and excessive power consumption could be due to corrosion\nand water intrusion.\
    \ The canopy-temperature sensors have occasionally experienced these\nissues as\
    \ well. Corrosion and water ingress have led to sensor malfunctions, along with\
    \ short\ncircuits and excessive power consumption. The early version of the air-temperature\
    \ sensor\nproved to have serious problems with corrosion due to the lack of enclosure\
    \ thickness and\nthe electronic components of the original board (BME280, Adafruit,\
    \ New York, NY, USA).\nTo solve these problems, for countries that already had\
    \ old-version stations installed,\nextra 25 W solar panels were provided to connect\
    \ them in parallel. The dimensions of the\nsolar panel and batteries were increased.\
    \ Also, new hardware for the gateway and modem\nwere selected to integrate in\
    \ a single device the 4G modem and the LoRaWAN gateway,\nresulting in more efﬁcient\
    \ power usage.\n3.5.2. Device Assembly and Programming\nDuring the assembly process,\
    \ which required certain experience to ensure proper\nassembly, a variety of issues\
    \ were faced, including:\n•\nCables on the screw terminals breaking down and bad\
    \ soldering. This damage was\ncaused by inappropriate and incorrect assembly;\n\
    •\nDespite the attempts to apply conformal coating to the exposed electronics,\
    \ the early\nversion of the air-temperature and solar-radiation sensors still\
    \ showed poor endurance\nunder extreme climatic conditions;\n•\nLimited spare-parts\
    \ production capacity for 3D-printed parts.\nThese problems arose during deployments\
    \ and were addressed by providing an\nintegrated set, assuring quality, optimizing\
    \ the accuracy and reliability of measurements,\nand increasing the degree of\
    \ sealing to improve protection against harsh conditions.\nAdditionally, nodes\
    \ were also improved in each iteration, and there was no solder\ninvolved in the\
    \ newer version or the 3D-printed parts, resulting in more reliable hardware.\n\
    The last sensor upgrades enhanced the approach, ensuring a faster and more efﬁcient\n\
    installation of sensors, enabling swift deployment in various environments.\n\
    3.5.3. Maintenance\nExcess dirt (spider nets, bird droppings, dust, and mud) on\
    \ sensors distorted the\nmeasurements. This was especially critical for the pyranometer\
    \ and canopy-temperature\nsensors and solar panels. The lack of maintenance of\
    \ the solar panels resulted in the gradual\nloss of battery capacity, resulting\
    \ in battery degradation.\nA monthly check, or even weekly in extreme conditions,\
    \ of the infrared thermometer,\nand a cleaning of the solar panels and the pyranometer,\
    \ is required. Every six months, or\nmonthly in extreme conditions, the tightness\
    \ of the boxes should be checked and the air-\ntemperature sensor and the infrared\
    \ sensor cleaned. Finally, annually, it is recommended to\ncheck the status of\
    \ all the batteries that make up the station. A checklist with the task and\n\
    frequency was written and can be consulted for more detail in the annex of Appendix\
    \ A\n(Table A1).\n3.5.4. Data Management\nThe initial web-based interface provided\
    \ real-time data visualization, basic analysis\ncapabilities, and a way to download\
    \ data directly from the graphs. However, it was clear\nfrom the initial feedback\
    \ that it was not very practical, and downloading data from different\nsensors\
    \ required several download actions and the merging the data. The alternative\
    \ of\nusing Python code was not very practical for many users without programming\
    \ experience,\nor in cases where one wants to quickly download the data for analysis.\n\
    Agronomy 2023, 13, 2756\n20 of 28\nTherefore, based on the feedback received,\
    \ a simplified solution for downloading the\ndata easily in flexible formats was\
    \ developed. This web-based tool, called “CORDOVA-ET\nData Download”, can be accessed\
    \ from the main menu in the web-based application. It\nbundles up all the calculations\
    \ for ETo, ETa, and data aggregation for the raw measurements.\n3.5.5. Solar-Radiation\
    \ Measurement\nMeasurements of solar radiation. This variable is critical for\
    \ the energy balance.\nHowever, this has been the most challenging sensor of the\
    \ whole system. The hardware\nissues with the selected sensor have prevented any\
    \ useful measurement of radiation on\nthe nodes. Moreover, having the pyranometer\
    \ on top of the air-temperature radiation\nshield makes its leveled installation\
    \ and routine maintenance (cleaning for dust) almost\nimpossible. The concept\
    \ of self-contained nodes with all the measurements included is\nattractive, but\
    \ in this case, it did not prove to be practical. Also, the radiation should not\
    \ be\nvariable across the standard extension of the trial and range of the base\
    \ station (~2 km).\nThe CORDOVA-ET v.3 only includes one pyranometer per base\
    \ station, installed at a\npractical height to allow maintenance and correct leveling.\
    \ The single sensor would also\nallow for using a higher-grade instrument that\
    \ would ensure standard and robust factory\ncalibration into energy units, described\
    \ in Berni et al. [7].\nIn addition, the solar radiation from the commercial weather\
    \ stations was affected\nby the fact that the radiation sensor sees through a\
    \ clear glass instead of using a cosine\ndiffuser, as discussed in Jimenez-Berni\
    \ et al. (2023) [7]. An optical diffuser was installed,\nand weather station sensors\
    \ were calibrated against a standard pyranometer. The calibration\ncoefficients\
    \ are stored in a CSV file that can be accessed by the data-processing scripts\n\
    https://github.com/OpenAgriTech/CORDOVA-ET-metadata (accessed on 16 October 2023).\n\
    3.5.6. Communications\nThe main problems faced were with the 4G modem/LoRaWAN\
    \ gateway, due to\nexpired credit in SIM cards or mobile carrier ﬁrewall issues,\
    \ and communication issues in\nthe server side due to power loss, ﬁrewall, and\
    \ internet connectivity problems.\nThe new version of the data logger baseboard\
    \ allows local data storage in the nodes for\nback-up and data retrieval, even\
    \ in the case of no LoRaWAN connectivity. Also, the newer\nmodel of the gateway\
    \ allows local storage of the LoRa packages for offline data processing.\nProgramming\
    \ problems and conﬁguration of gateway and modem was reduced by\nusing a single\
    \ device, the 4G modem, which integrates the gateway and modem; this\nmeans fewer\
    \ parts prone to errors or the wrong conﬁguration, and more space inside\nthe\
    \ baseboard enclosure. This simpliﬁes installation and conﬁguration, as there\
    \ is only\none device. Also, this reduces power consumption and the space inside\
    \ the base station\nenclosure, providing extra space for batteries.\n3.5.7. Other\
    \ Issues\nSeveral challenges have been encountered due to the idiosyncrasies of\
    \ each team\nand the institutions operating in the different countries in which\
    \ the CORDOVA-ET sta-\ntion was deployed. Among the difﬁculties, it is worth mentioning\
    \ the limitations for the\nassembly and/or updating of the devices in some locations,\
    \ despite providing all the neces-\nsary information, offering technical support,\
    \ and sending the required elements properly\npackaged. This omission appears\
    \ to have been caused by the insufﬁcient commitment of\nsome recipients, possibly\
    \ inﬂuenced by a lack of alignment with the goals of both parties.\nConsequently,\
    \ it resulted in the slowing down of the progress and development of the\nCORDOVA-ET\
    \ device deployment.\n3.5.8. Upgrades Discussion\nThe primary function of ET networks\
    \ is to produce ET information for various users\nover the long-term. A recurring\
    \ concern in projects developed through external funding is\nthe uncertainty in\
    \ the continuity once the funding ends. Additionally, ET networks still\nAgronomy\
    \ 2023, 13, 2756\n21 of 28\nhave a major R&D component, which is not normally\
    \ addressed in most public institutions\ndevoted to agricultural water management,\
    \ such as the ministries of agriculture and of\nwater and irrigation. It would\
    \ seem that academic institutions should be the preferred\nrecipients of the prototype\
    \ network described here, but the long-term funding concerns\nmay be even higher\
    \ in that case. This risk poses a serious threat to the sustainability and\ncontinuity\
    \ of an ET network. As the end of the funding approaches, there is a need to\n\
    establish appropriate strategies to ensure the preservation and long-term utilization\
    \ of the\nnetwork. This entails not only the consolidation of acquired knowledge\
    \ and best practices,\nbut also the transfer of responsibilities and the pursuit\
    \ of sustainable ﬁnancing mechanisms.\nA clear example took place in Egypt during\
    \ the national WEPS-NENA workshop in\nSeptember 2022, where the upgraded device\
    \ was exhibited. This event saw the participation\nof renowned institutions in\
    \ the country [14]. Additionally, in Tunisia, pilot projects have\nbeen initiated\
    \ to measure the ETa with the CORDOVA-ET system in two important tree\ncrops,\
    \ namely olive and date palm.\n4. Conclusions\nRegarding the CORDOVA-ET equipment,\
    \ adequate weather protection of its sensors\nand electronics is a critical issue\
    \ under the harsh environmental conditions of the countries\nwhere the system\
    \ was deployed. Many upgrades were made to ensure the robust and\nlong-term operation\
    \ of the system with minimum data gaps.\nThe goals of the CORDOVA-ET were to initiate\
    \ technical personnel in the measure-\nment of ET based on an inexpensive, user-friendly\
    \ instrument that can deliver acceptable\nestimates of the ETo and ETa. Furthermore,\
    \ the aim of the CORDOVA-ET system is to pro-\nvide a cost-effective system (less\
    \ than EUR 4000) that can be adopted beyond the scientiﬁc\ncommunity and provide\
    \ open-access and real-time information about the ETo and actual\ncrop water status\
    \ to facilitate irrigation scheduling and improve the water productivity of\n\
    the adopting users.\nMost ET networks are focused on providing only the reference\
    \ ET (ETo), but this\nnetwork offered two features that are advantageous and may\
    \ be valuable in agronomy. On\none hand, it provides the actual ET when the system\
    \ is placed over a crop different than\ngrass, in addition to the ETo. On the\
    \ other hand, each station captures the spatial variability\nof the ETa, as four\
    \ nodes are provided to assess some of the components of the ETa in four\ndifferent\
    \ locations, which might be several km apart.\nThe insufﬁcient time devoted to\
    \ network operations by part of the personnel responsi-\nble for the stations\
    \ resulted in inadequate attention to some sensors. To address this issue,\na\
    \ sequentially executed script, that consists of a set of instructions and commands\
    \ in the\ndata download process to correct this problem, was implemented. This\
    \ solution has proven\nto be effective in correcting the deﬁciencies caused by\
    \ the lack of attention, ensuring the\nquality and reliability of the data collected\
    \ currently.\nFor supporting the network over the long-term, it is essential to\
    \ establish strategic\nalliances with key stakeholders, such as water authorities,\
    \ academic institutions, research\nand farmers organizations, or other interested\
    \ partners, in order to promote effective\ncontinuity and safeguard the project’s\
    \ outcomes beyond the initial external-funding stage.\nAdditionally, detailed\
    \ documentation of processes, methodologies, and results, along\nwith training\
    \ and capacity-building at the local level, can signiﬁcantly contribute to the\n\
    preservation and successful transfer of the achieved advancements, ensuring a\
    \ lasting\nlegacy and the potential for a continuous impact within the project’s\
    \ sphere of operation.\nDespite the numerous challenges encountered, the overall\
    \ response to the development\nof the ET network has been extremely positive.\
    \ These results highlight the potential and\nimpact that technology can have on\
    \ agriculture, particularly in the measurement and\noptimization of water usage\
    \ in speciﬁc crops. The commitment and collaboration of local\ninstitutions and\
    \ experts are crucial elements in ensuring the ongoing success of these type\n\
    of projects and their potential expansion to other regions in the future.\nAgronomy\
    \ 2023, 13, 2756\n22 of 28\nAuthor Contributions: Conceptualization, E.F. and\
    \ P.S.; methodology, J.A.J.-B.; software, J.A.J.-B.;\nvalidation, A.C.-L. and\
    \ J.A.J.-B.; formal analysis, J.A.J.-B.; investigation, A.C.-L., A.L.-G., J.A.J.-B.,\n\
    I.J., O.O., I.A., M.B., A.I., K.A., A.M., A.O., R.Z.-C., P.S., D.V. and E.F.;\
    \ resources, I.J., O.O., I.A.,\nM.B., A.I., K.A., A.M., A.O., R.Z.-C., A.C.-L.\
    \ and A.L.-G.; data curation J.A.J.-B., A.C.-L. and A.L.-G.;\nwriting—original\
    \ draft preparation, A.L.-G.; A.C.-L., J.A.J.-B. and E.F.; writing—review and\
    \ editing,\nE.F., A.C.-L. and J.A.J.-B.; supervision, D.V. and E.F.; project administration,\
    \ A.C.-L., A.L.-G. and E.F.;\nfunding acquisition, P.S., D.V. and E.F. All authors\
    \ have read and agreed to the published version of\nthe manuscript.\nFunding:\
    \ This research was funded under an agreement between FAO-RNE and UCO, Cordoba,\n\
    Spain, under the project GCP/RNE/009/SWE “Implementing the 2030 Agenda for water\
    \ efﬁ-\nciency/productivity and water sustainability in NENA countries” with FAO\
    \ Budget Code 37776 and\nfunded by the Swedish International Development Cooperation\
    \ Agency (SIDA) with grant number\n52030303. This work was also supported by Junta\
    \ de Andalucia, Qualiﬁca Project (QUAL21_023 IAS).\nData Availability Statement:\
    \ The raw data supporting the conclusion will be made available by the\nauthors,\
    \ without undue reservation.\nAcknowledgments: We acknowledge the funding provided\
    \ by the FAO RNE under the direction\nof M. AlHamdi, and the participation in\
    \ this work at various stages and times of Ouerdia Hamlat\nand Belgacem Berki\
    \ from Algeria; Ahmed Abdellatif and Waleed Hassan Abouelhassan from Egypt;\n\
    Shehab Ahmad Aldlqamoni, Naem Mazahrih and Motasem Abukhalaf from Jordan; Elie\
    \ Choueiri\nfrom Lebanon; Hassan Keddal, Khalil El Malhi, and El Mahdi El Arabi\
    \ from Morocco; Wided\nKhechimi and Mohamed Moncef Masmoud from Tunisia; Issam\
    \ Nofal from Palestine; Vinay Nangia,\nAtef Swelam, and Anas Mansouri from the\
    \ International Center for Agricultural Research in the Dry\nAreas (ICARDA). A\
    \ special thanks is also expressed to Jiro Ariyama and Beatriz Pérez Carrascosa\
    \ for\ntheir involvement in the early stages of the project.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nAppendix A\n1.\nSensor node of\
    \ the CORDOVA-ET evolution\nAgronomy 2023, 13, x FOR PEER REVIEW \n26 of 32 \n\
    \ \nAppendix A \n1. \nSensor node of the CORDOVA-ET evolution \n \nFigure A1.\
    \ Evolution of the sensor node of the CORDOVA-ET from completely do-it-yourself\
    \ with \n3D-printed parts to commercial and custom-built sensors. \n2. \nValidation\
    \ of individual meteorological variables \nUsing linear regression, a technique\
    \ that allows quantifying the relationship that can \nbe observed when graphing\
    \ a plot of scattered points, and whose general tendency is rec-\ntilinear (y\
    \ = a + bx), the hourly meteorological variables provided by ERA5 were compared\n\
    Figure A1. Evolution of the sensor node of the CORDOVA-ET from completely do-it-yourself\
    \ with\n3D-printed parts to commercial and custom-built sensors.\nAgronomy 2023,\
    \ 13, 2756\n23 of 28\n2.\nValidation of individual meteorological variables\n\
    Using linear regression, a technique that allows quantifying the relationship\
    \ that\ncan be observed when graphing a plot of scattered points, and whose general\
    \ tendency\nis rectilinear (y = a + bx), the hourly meteorological variables provided\
    \ by ERA5 were\ncompared with the measurement of air temperature, relative humidity,\
    \ solar radiation, and\nwind speed taken with the CORDOVA-ET station.\nAgronomy\
    \ 2023, 13, x FOR PEER REVIEW \n27 of 32 \n \n \n \nFigure A2. Comparisons, correlations,\
    \ and accuracies of hourly air temperature (Celsius) measured \nwith the CORDOVA-ET\
    \ and obtained from ERA5. From top left to bottom right: Egypt, Jordan, \nLebanon,\
    \ Morocco, Palestine, and Tunisia. Each dot color represents diﬀerent seasons.\
    \ \nFigure A2. Comparisons, correlations, and accuracies of hourly air temperature\
    \ (Celsius) measured\nwith the CORDOVA-ET and obtained from ERA5. From top left\
    \ to bottom right: Egypt, Jordan,\nLebanon, Morocco, Palestine, and Tunisia. Each\
    \ dot color represents different seasons.\nAgronomy 2023, 13, 2756\n24 of 28\n\
    Agronomy 2023, 13, x FOR PEER REVIEW \n28 of 32 \n \n \n \nFigure A3. Comparisons,\
    \ correlations, and accuracies of hourly relative humidity (%) measured \nwith\
    \ the CORDOVA-ET and obtained from ERA5. From top left to bottom right: Egypt,\
    \ Jordan, \nLebanon, Morocco, Palestine, and Tunisia. Each dot color represents\
    \ diﬀerent seasons. \nFigure A3. Comparisons, correlations, and accuracies of\
    \ hourly relative humidity (%) measured with\nthe CORDOVA-ET and obtained from\
    \ ERA5. From top left to bottom right: Egypt, Jordan, Lebanon,\nMorocco, Palestine,\
    \ and Tunisia. Each dot color represents different seasons.\nAgronomy 2023, 13,\
    \ 2756\n25 of 28\nAgronomy 2023, 13, x FOR PEER REVIEW \n29 of 32 \n \n \n \n\
    Figure A4. Comparisons, correlations, and accuracies of hourly shortwave radiation\
    \ (MJ·m2) meas-\nured with the CORDOVA-ET and obtained from ERA5. From top left\
    \ to bottom right: Egypt, Jordan, \nLebanon, Morocco, Palestine, and Tunisia.\
    \ Each dot color represents diﬀerent seasons. \nFigure A4. Comparisons, correlations,\
    \ and accuracies of hourly shortwave radiation (MJ·m2) mea-\nsured with the CORDOVA-ET\
    \ and obtained from ERA5. From top left to bottom right: Egypt, Jordan,\nLebanon,\
    \ Morocco, Palestine, and Tunisia. Each dot color represents different seasons.\n\
    Agronomy 2023, 13, 2756\n26 of 28\nAgronomy 2023, 13, x FOR PEER REVIEW \n30 of\
    \ 32 \n \n \n \nFigure A5. Comparisons, correlations, and accuracies of hourly\
    \ wind speed (m/s) measured with \nthe CORDOVA-ET and obtained from ERA5. From\
    \ top left to bottom right: Egypt, Jordan, Lebanon, \nMorocco, Palestine, and\
    \ Tunisia. Each dot color represents diﬀerent seasons. \nFigure A5. Comparisons,\
    \ correlations, and accuracies of hourly wind speed (m/s) measured with\nthe CORDOVA-ET\
    \ and obtained from ERA5. From top left to bottom right: Egypt, Jordan, Lebanon,\n\
    Morocco, Palestine, and Tunisia. Each dot color represents different seasons.\n\
    Agronomy 2023, 13, 2756\n27 of 28\n3.\nMaintenance checklist\nTable A1. Proposed\
    \ frequency and tasks for maintenance.\nTask\nFrequency\nCheck the infrared thermometer\
    \ for spiders or\nany other dirt in the optical window.\nApplication of insecticide\
    \ is recommended\nwith special care of preventing it from reaching\nthe optics\
    \ (e.g., apply tape or a cotton bud for\nprotection).\nMonthly or weekly in extreme\
    \ conditions\nClean solar panels of nodes and base station\nwith a damp cloth.\n\
    Monthly or weekly in extreme conditions\nClean pyranometer and solar-radiation\
    \ sensor\nin Froggit weather station, ideally with\ndistilled water and a soft\
    \ cloth.\nMonthly or weekly in extreme conditions\nClean radiation shield and\
    \ air-temperature\nsensor with a soft cloth. In extreme cases, the\nradiation\
    \ shield needs to be disassembled and\neach plate washed separately with soapy\
    \ water.\nEvery 6 months; monthly in extreme conditions\nof dust\nCheck node for\
    \ moisture and ingress\nprotection of connectors and antenna (e.g.,\nloose screws/nuts,\
    \ cracked seals).\nEvery 6 months; monthly in extreme conditions\nof rainfall/humidity\n\
    Clean infrared sensor with isopropyl alcohol\nand cotton bud.\nEvery 6 months\
    \ or before a ﬁeld experiment\nReplace AA batteries in weather station and\nolder\
    \ Froggit consoles (no needed in new USB\nWiFi sticks).\nYearly; beginning of\
    \ the season\nCheck the status of the batteries in the weather\nstation and replace\
    \ if the capacity is degraded.\nYearly, beginning of the season, or if the\nstability\
    \ of the base station is compromised and\ndata gaps appear\n4.\nMeaning of each\
    \ column headers\nTable A2. Column headers of data ﬁles downloaded from the CORDOVA-ET\
    \ download tool.\nColumn\nDescription\ndate\nYYYY-MM-DD\nYEAR\nYear of the observation\n\
    MONTH\nMonth of the observation\nDOY\nDay of the year\nETo_FAO56\nETo calculated\
    \ as FAO 56 (mm/day)\nETo_ASCE\nETo calculated as ASCE (mm/day)\nkc_xx\nEvaporative\
    \ fraction for node xx\nETa_mean\nAverage ETa from all the nodes (mm/day)\nETa_mean_n\n\
    Number of measurements\nETa_node_xx\nETa calculated from node xx (mm/day)\nETa_node_xx_n\n\
    Number of measurements of Eta for node xx\nETa_kc_node_xx\nAlternative ETa calculated\
    \ from node xx\nPrecip\nPrecipitation (mm)\nA_Temp\nDay average Air Temperature\
    \ (Celsius)\nA_Temp_min\nDay Min Air Temperature (Celsius)\nA_Temp_max\nMax Air\
    \ Temperature (Celsius)\nS_Temp\nDay average Soil Temperature (Celsius)\nS_Temp_min\n\
    Day Min Soil Temperature (Celsius)\nS_Temp_max\nDay Max Soil Temperature (Celsius)\n\
    Agronomy 2023, 13, 2756\n28 of 28\nTable A2. Cont.\nColumn\nDescription\nCanopy_Temp\n\
    Day Average Canopy Temperature (Celsius)\nCanopy_Temp_min\nDay Min Canopy Temperature\
    \ (Celsius)\nCanopy_Temp_max\nDay Max Canopy Temperature (Celsius)\nSW_In\nPyranometer\
    \ incoming solar radiation (W/m2)\nSW_Out\nModeled reﬂected solar radiation (W/m2)\n\
    LW_In\nModeled Longwave Solar radiation (W/m2)\nRH\nRelative humidity (%)\nVSMC\n\
    Volumetric soil moisture (%)\nWS\nWind speed (m/s)\nPressure\nPressure (hPa)\n\
    kc_mean\nKc average calculated as ETa_mean/ETo\nReferences\n1.\nCIMIS. Available\
    \ online: https://cimis.water.ca.gov/ (accessed on 23 May 2023).\n2.\nSnyder,\
    \ R.L. California Irrigation Management Information System. Am. Potato J. 1984,\
    \ 61, 229–234. [CrossRef]\n3.\nSnyder, R.L.; Pruitt, W.O. Evapotranspiration data\
    \ management in California. Irrigation and Drainage Session. In Proceedings of\n\
    the Water Forum 1992, ASCE, Baltimore, MD, USA, 2–6 August 1992; pp. 128–133.\n\
    4.\nInstituto de Investigación y Formación Agraria y Pesquera (IFAPA). Red de\
    \ Información Agroclimática de Andalucía. Avail-\nable online: https://www.juntadeandalucia.es/agriculturaypesca/ifapa/web/red-de-informacion-agroclimatica-de-andalucia\n\
    (accessed on 13 June 2023).\n5.\nGavilán, P.; de Haro, J.; Fernández, R.; López,\
    \ D. Use of a network of automated weather stations for the determination and\n\
    dissemination of reference evapotranspiration. In Proceedings of the 3rd International\
    \ Conference on Experiences with Automatic\nWeather Stations, Torremolinos, Spain,\
    \ 19–21 February 2003.\n6.\nMarek, T.H.; Porter, D.O. The Texas High Plains Evapotranspiration\
    \ (TXHPET) Network. In Proceedings of the 21st Annual\nCentral Plains Irrigation\
    \ Conference, Colby, KS, USA, 24–25 February 2009.\n7.\nJimenez-Berni, J.A.; Cabello-Leblic,\
    \ A.; Lopez-Guerrero, A.; Villalobos, F.; Testi, L.; Fereres, E. Energy Balance\
    \ Determination of\nCrop Evapotranspiration using a Wireless Sensor Network. Front.\
    \ Agron. 2023, 5, 1244633. [CrossRef]\n8.\nJimenez-Berni, J.A. OpenAgriTech/Opencroplib:\
    \ v0.1.0. 2023. Available online: https://github.com/OpenAgriTech/opencroplib\n\
    (accessed on 20 October 2023).\n9.\nPelosi, A.; Chirico, G.B. Regional Assessment\
    \ of Daily Reference Evapotranspiration: Can Ground Observations Be Replaced\n\
    by Blending ERA5-Land Meteorological Reanalysis and CM-SAF Satellite-Based Radiation\
    \ Data? Agric. Water Manag. 2021,\n258, 107169. [CrossRef]\n10.\nVanella, D.;\
    \ Longo-Minnolo, G.; Belﬁore, O.R.; Ramírez-Cuesta, J.M.; Pappalardo, S.; Consoli,\
    \ S.; D’Urso, G.; Chirico, G.B.;\nCoppola, A.; Comegna, A.; et al. Comparing the\
    \ Use of ERA5 Reanalysis Dataset and Ground-Based Agrometeorological Data\nunder\
    \ Different Climates and Topography in Italy. J. Hydrol. Reg. Stud. 2022, 42,\
    \ 101182. [CrossRef]\n11.\nNouri, M.; Homaee, M. Reference Crop Evapotranspiration\
    \ for Data-Sparse Regions Using Reanalysis Products. Agric. Water\nManag. 2022,\
    \ 262, 107319. [CrossRef]\n12.\nNouri, M.; Ebrahimipak, N.A.; Hosseini, S.N. Estimating\
    \ Reference Evapotranspiration for Water-Limited Windy Areas under\nData Scarcity.\
    \ Theor. Appl. Climatol. 2022, 150, 593–611. [CrossRef]\n13.\nCummings, S. Development\
    \ through Dialogue: Report of a Research Initiative; KIT Working Papers Series,\
    \ WPS. I1; KIT: Amsterdam,\nThe Netherlands, 2008.\n14.\nFood and Agriculture\
    \ Organization of the United Nations. FAO Concludes Water Efﬁciency, Productivity\
    \ and Sustainability\nProject and Discusses Future Prospects for Water Management\
    \ in Egypt. FAO in Egypt. Available online: https://www.fao.org/\negypt/news/detail-events/en/c/1606915/\
    \ (accessed on 28 July 2023).\nDisclaimer/Publisher’s Note: The statements, opinions\
    \ and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Agronomy (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4395/13/11/2756/pdf?version=1698771192
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Developing a Regional Network for the Assessment of Evapotranspiration
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.18297/etd/4029
  analysis: '>'
  authors:
  - Muhammad Zaigham Abbas Shah Syed
  citation_count: 0
  full_citation: '>'
  full_text: ">\nUniversity of Louisville \nUniversity of Louisville \nThinkIR: The\
    \ University of Louisville's Institutional Repository \nThinkIR: The University\
    \ of Louisville's Institutional Repository \nElectronic Theses and Dissertations\
    \ \n12-2022 \nIoT in smart communities, technologies and applications. \nIoT in\
    \ smart communities, technologies and applications. \nMuhammad Zaigham Abbas Shah\
    \ Syed \nUniversity of Louisville \nFollow this and additional works at: https://ir.library.louisville.edu/etd\
    \ \n Part of the Other Computer Engineering Commons \nRecommended Citation \n\
    Recommended Citation \nSyed, Muhammad Zaigham Abbas Shah, \"IoT in smart communities,\
    \ technologies and applications.\" \n(2022). Electronic Theses and Dissertations.\
    \ Paper 4029. \nhttps://doi.org/10.18297/etd/4029 \nThis Doctoral Dissertation\
    \ is brought to you for free and open access by ThinkIR: The University of Louisville's\
    \ \nInstitutional Repository. It has been accepted for inclusion in Electronic\
    \ Theses and Dissertations by an authorized \nadministrator of ThinkIR: The University\
    \ of Louisville's Institutional Repository. This title appears here courtesy of\
    \ \nthe author, who has retained all other copyrights. For more information, please\
    \ contact thinkir@louisville.edu. \nIOT IN SMART COMMUNITIES, TECHNOLOGIES AND\
    \ APPLICATIONS\nBy\nMuhammad Zaigham Abbas Shah Syed\nB.Eng., M.Sc.\nA Dissertation\n\
    Submitted to the Faculty of the\nJ.B. Speed School of Engineering of the University\
    \ of\nLouisville\nin Partial Fulfillment of the Requirements\nfor the Degree of\n\
    Doctor of Philosophy\nin Computer Science and Engineering\nDepartment of Computer\
    \ Science and Engineering\nUniversity of Louisville\nLouisville, Kentucky\nDecember\
    \ 2022\nCopyright 2022 by Muhammad Zaigham Abbas Shah Syed\nAll rights reserved\n\
    IOT IN SMART COMMUNITIES, TECHNOLOGIES AND APPLICATIONS\nBy\nMuhammad Zaigham\
    \ Abbas Shah Syed\nB.Eng., M.Sc.\nDissertation approved on\nNovember 8, 2022\n\
    by the following dissertation Committee:\nDissertation Director\nDr. Adel S. Elmaghraby\n\
    Dr. Daniel Sierrasosa\nDr. Anup Kumar\nDr. Ibrahim Imam\nDr. Monica Gentili\n\
    \    ii\nDEDICATION\nTo my late grandmother, Shireen Shah who always championed\
    \ the im-\nportance of education and personal values. She has had the biggest\
    \ impact\non the person that I have become.\nTo my parents, who worked hard to\
    \ provide us with the best opportunities\nthat can be provided to any child.\n\
    iii\nACKNOWLEDGMENTS\nI would like to thank my supervisor, Dr. Adel Elmaghraby\
    \ for his sup-\nport and guidance throughout the course of my research work here\
    \ at the\nUniversity of Louisville. Without his support and trust I would not\
    \ have\nbeen able to succeed in this endeavor.\nI would also like to thank Dr.\
    \ Anup Kumar and Dr. Daniel Sierra-Sosa\nfor their support in conducting my research\
    \ and providing feedback on\nour experiments which helped improve the quality\
    \ of the work.\nI would like to thank all my friends, both in the United States\
    \ and else-\nwhere who have been a tremendous support to me during my time in\n\
    Louisville. They were like a family away from home.\nFinally, I would like to\
    \ say thanks to my family, who have supported me\nthroughout think and thin. First\
    \ and foremost my parents, my mother\nNaheed and father Sher Muhammad. They through\
    \ their hard work and\ndetermination left no stone unturned to provide us with\
    \ the best upbring-\ning anyone can provide to their children. My wife Farwa,\
    \ who has always\nbeen a pillar of support for me. My siblings, Zafi, Shehram\
    \ and Fiza who\nhave been the best brothers and sister anyone can ask for. My\
    \ sisters in\nlaw, Madiha and Hina and my lovely niece Maryam, who is a cause\
    \ of\nmuch joy in our life.\niv\nABSTRACT\nIOT IN SMART COMMUNITIES, TECHNOLOGIES\
    \ AND APPLICATIONS\nMuhammad Zaigham Abbas Shah, Syed\nNovember 8, 2022\nInternet\
    \ of Things is a system that integrates different devices and technologies,\n\
    removing the necessity of human intervention. This enables the capacity of having\n\
    smart (or smarter) cities around the world. By hosting different technologies\
    \ and al-\nlowing interactions between them, the internet of things has spearheaded\
    \ the develop-\nment of smart city systems for sustainable living, increased comfort\
    \ and productivity\nfor citizens. The Internet of Things (IoT) for Smart Cities\
    \ has many different domains\nand draws upon various underlying systems for its\
    \ operation, in this work, we provide\na holistic coverage of the Internet of\
    \ Things in Smart Cities by discussing the fun-\ndamental components that make\
    \ up the IoT Smart City landscape, the technologies\nthat enable these domains\
    \ to exist, the most prevalent practices and techniques which\nare used in these\
    \ domains as well as the challenges that deployment of IoT systems for\nsmart\
    \ cities encounter and which need to be addressed for ubiquitous use of smart\
    \ city\napplications. It also presents a coverage of optimization methods and\
    \ applications\nfrom a smart city perspective enabled by the Internet of Things.\
    \ Towards this end,\na mapping is provided for the most encountered applications\
    \ of computational opti-\nmization within IoT smart cities for five popular optimization\
    \ methods, ant colony\noptimization, genetic algorithm, particle swarm optimization,\
    \ artificial bee colony op-\ntimization and differential evolution. For each application\
    \ identified, the algorithms\nused, objectives considered, the nature of the formulation\
    \ and constraints taken in\nv\nto account have been specified and discussed. Lastly,\
    \ the data setup used by each\ncovered work is also mentioned and directions for\
    \ future work have been identified.\nWithin the smart health domain of IoT smart\
    \ cities, human activity recognition\nhas been a key study topic in the development\
    \ of cyber physical systems and as-\nsisted living applications. In particular,\
    \ inertial sensor based systems have become\nincreasingly popular because they\
    \ do not restrict users’ movement and are also rel-\natively simple to implement\
    \ compared to other approaches. Fall detection is one of\nthe most important tasks\
    \ in human activity recognition. With an increasingly aging\nworld population\
    \ and an inclination by the elderly to live alone, the need to incor-\nporate\
    \ dependable fall detection schemes in smart devices such as phones, watches\n\
    has gained momentum. Therefore, differentiating between falls and activities of\
    \ daily\nliving (ADLs) has been the focus of researchers in recent years with\
    \ very good results.\nHowever, one aspect within fall detection that has not been\
    \ investigated much is di-\nrection and severity aware fall detection. Since a\
    \ fall detection system aims to detect\nfalls in people and notify medical personnel,\
    \ it could be of added value to health pro-\nfessionals tending to a patient suffering\
    \ from a fall to know the nature of the accident.\nIn this regard, as a case study\
    \ for smart health, four different experiments have been\nconducted for the task\
    \ of fall detection with direction and severity consideration on\ntwo publicly\
    \ available datasets. These four experiments not only tackle the problem\non an\
    \ increasingly complicated level (the first one considers a fall only scenario\
    \ and\nthe other two a combined activity of daily living and fall scenario) but\
    \ also present\nmethodologies which outperform the state of the art techniques\
    \ as discussed. Lastly,\nfuture recommendation have also been provided for researchers.\n\
    vi\nTABLE OF CONTENTS\nMotivation . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n1\nAims . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n2\nOrganization\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n2\nIOT SMART CITIES\n. . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nSmart\
    \ City Components . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n2.4\n\
    Smart Health . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.5\nSmart\
    \ Home . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.6\nSmart\
    \ Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.7\nSmart\
    \ Infrastructure . . . . . . . . . . . . . . . . . . . . . . .\n7\n2.8\nSmart\
    \ Transport\n. . . . . . . . . . . . . . . . . . . . . . . . .\n7\nInternet of\
    \ Things for Smart Cities . . . . . . . . . . . . . . . . . . . . . .\n7\n3.1\n\
    IoT Architectures for Smart cities . . . . . . . . . . . . . . . .\n8\n3.1.1\n\
    Cloud Computing Model . . . . . . . . . . . . . . . .\n9\n3.1.2\nFog Computing\
    \ Model . . . . . . . . . . . . . . . . .\n9\n3.1.3\nEdge Computing Model . .\
    \ . . . . . . . . . . . . . .\n10\n3.2\nIoT Challenges for smart Cities . . .\
    \ . . . . . . . . . . . . . .\n11\n3.2.1\nSecurity and Privacy . . . . . . . .\
    \ . . . . . . . . . .\n12\n3.2.2\nSmart Sensors . . . . . . . . . . . . . . .\
    \ . . . . . . .\n13\n3.2.3\nNetworking . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n13\n3.2.4\nBig Data Analytics . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3\nSensing Technologies . . . . . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3.1\nAmbient Sensors . . . . . . . . . . . . . . . . . . . .\n15\n3.3.2\n\
    Bio-Sensors . . . . . . . . . . . . . . . . . . . . . . .\n15\nvii\nDedication\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    iii\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\niv\nAbstract . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\nv\nList of Tables . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\nxi\nList of Figures\n. . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nxiii\nINTRODUCTION\
    \ AND DISSERTATION OVERVIEW\n. . . . . . . . . . . .\n1\n3.3.3\nChemical\n. .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n16\n3.3.4\nElectric Sensors . .\
    \ . . . . . . . . . . . . . . . . . . .\n16\n3.3.5\nHydraulic . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n16\n3.3.6\nIdentification . . . . . . . . .\
    \ . . . . . . . . . . . . .\n17\n3.3.7\nMotion Sensors . . . . . . . . . . . .\
    \ . . . . . . . . .\n17\n3.3.8\nPresence . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n17\n3.3.9\nOther Sensors . . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4\nNetworking Technologies . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4.1\nNetwork Topologies\n. . . . . . . . . . . . . . . . . .\n\
    18\n3.4.2\nNetwork Architectures . . . . . . . . . . . . . . . . .\n19\n3.4.3\n\
    Network Protocols . . . . . . . . . . . . . . . . . . .\n20\n3.5\nSecurity and\
    \ Privacy in Smart City IoT . . . . . . . . . . . . .\n23\n3.5.1\nApplication\
    \ Software Layers\n. . . . . . . . . . . . .\n24\n3.5.2\nNetwork Layer\n. . .\
    \ . . . . . . . . . . . . . . . . . .\n25\n3.5.3\nPerception Layer . . . . . .\
    \ . . . . . . . . . . . . . .\n27\n3.5.4\nSystem Wide Issues\n. . . . . . . .\
    \ . . . . . . . . . .\n27\nSWOT Analysis . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n28\n4.1\nStrengths\n. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n29\n4.2\nWeaknesses\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n30\n4.3\nOpportunities . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .\n30\n4.4\nThreats\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n30\nConclusions . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n31\nAI IN IOT SMART CITIES .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nBig Data\
    \ Algorithms/Artificial Intelligence . . . . . . . . . . . . . . . . . .\n32\n\
    2.1\nMachine Learning . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    2.2\nDeep Learning . . . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    AI Applications for Smart Cities\n. . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n34\n3.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n36\n3.4\nSmart Health . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n38\n3.5\nSmart Homes . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n40\n3.6\nSmart Industry . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n41\n3.7\nSmart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\n3.8\nSmart Transport\n. . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .\n46\nOPTIMIZATION IN IOT SMART CITIES\n. . . . . . . . . . .\
    \ . . . . . . . .\n49\nIntroduction . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n49\nOptimization and Heuristics in IoT Smart Cities\
    \ . . . . . . . . . . . . . . .\n49\nMeheuristic Algorithms . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n50\n3.1\nAnt Colony Optimization\n\
    . . . . . . . . . . . . . . . . . . . .\n50\n3.2\nGenetic Algorithm\n. . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n50\nviii\n3.3\nParticle Swarm Optimization\n\
    . . . . . . . . . . . . . . . . . .\n51\n3.4\nDifferential Evolution . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n52\n3.5\nArtificial Bee Colony . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n52\nOptimization Applications in Smart\
    \ Cities . . . . . . . . . . . . . . . . . .\n53\n4.1\nSmart Agriculture . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n53\n4.2\nSmart City Services .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n55\n4.3\nSmart Grid\n. . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n57\n4.4\nSmart Health . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n60\n4.5\nSmart Homes . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n64\n4.6\nSmart Industry . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n66\n4.7\nSmart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n69\n4.8\nSmart Transportation\n\
    . . . . . . . . . . . . . . . . . . . . . .\n71\nConclusion . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n73\nCASE STUDY - SMART\
    \ HEALTH . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIoT for\
    \ Fall Detection\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    76\n2.1\nChallenges/Requirements of a FDS . . . . . . . . . . . . . . .\n77\n\
    2.1.1\nNon-intrusiveness . . . . . . . . . . . . . . . . . . . .\n77\n2.1.2\n\
    Low Latency\n. . . . . . . . . . . . . . . . . . . . . .\n77\n2.1.3\nLow power\
    \ consumption . . . . . . . . . . . . . . . .\n77\n2.1.4\nAllow mobility\n. .\
    \ . . . . . . . . . . . . . . . . . . .\n77\n2.1.5\nDifferentiate between Falls\
    \ and Activities\n. . . . . .\n77\n2.1.6\nNotify caregivers . . . . . . . . .\
    \ . . . . . . . . . . .\n78\n2.1.7\nTrack history . . . . . . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2\nTypes of Fall Detection Systems . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2.1\nAmbient Sensor based systems\n. . . . . . . . .\
    \ . . .\n78\n2.2.2\nVision based systems . . . . . . . . . . . . . . . . . .\n\
    79\n2.2.3\nWearable Sensor based systems . . . . . . . . . . . .\n79\n2.3\nTypes\
    \ of Wearable FDS\n. . . . . . . . . . . . . . . . . . . . .\n80\n2.3.1\nThreshold\
    \ based systems . . . . . . . . . . . . . . . .\n80\n2.3.2\nMachine/Deep Learning\
    \ based systems . . . . . . . .\n80\n2.4\nSensors used in Wearable FDS . . . .\
    \ . . . . . . . . . . . . . .\n80\n2.4.1\nAccelerometers . . . . . . . . . . .\
    \ . . . . . . . . . .\n81\n2.4.2\nGryroscope . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n81\n2.4.3\nMagnetometer\n. . . . . . . . . . . . . . . . . . .\
    \ . .\n81\n2.4.4\nVarious Medical Sensors . . . . . . . . . . . . . . . .\n81\n\
    2.5\nDesign considerations for Wearable FDS\n. . . . . . . . . . . .\n81\n2.5.1\n\
    Sampling frequency . . . . . . . . . . . . . . . . . . .\n82\n2.5.2\nWindowing\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n82\n2.5.3\nFeature Extraction\
    \ . . . . . . . . . . . . . . . . . . .\n82\n2.6\nLiterature Review . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n82\n2.7\nFall detection Datasets .\
    \ . . . . . . . . . . . . . . . . . . . . .\n89\n2.7.1\nSisFall Dataset . . .\
    \ . . . . . . . . . . . . . . . . . .\n89\n2.7.2\nK-Fall Dataset\n. . . . . .\
    \ . . . . . . . . . . . . . . .\n90\nix\n2.8\nExperiments . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n90\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration 91\n2.8.2\nFall Detection with Severity and Direction\
    \ along with\nADL consideration using Wavelet Pooling and K-NN\n101\n2.8.3\nFall\
    \ Detection with Severity and Direction along with\nADL consideration using CNN-XGBoost\
    \ . . . . . . .\n111\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-\n\
    attention network . . . . . . . . . . . . . . . . . . . .\n119\nConclusion . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n125\nCONCLUSION\
    \ AND FUTURE WORK . . . . . . . . . . . . . . . . . . . . .\n128\nConclusion .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n128\n\
    Contribution\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n128\nFuture Work\n. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n129\nREFERENCES . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .\n131\nAppendix A: Sample Plots for different fall categories\
    \ . . . . . . . . . . . . . .\n174\nAppendix B: Acronyms\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n180\nCurriculum Vita. . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 183\nx\nLIST OF TABLES\n\
    1\nComparison of Cloud, Fog and Edge Computing Models\n. . . . . . . . .\n11\n\
    2\nSmart City IoT Challenges and Mitigation . . . . . . . . . . . . . . . . .\n\
    15\n3\nSensing Technologies for IoT Smart Cities by Smart City Component . .\n\
    18\n4\nComparison of Network Technologies for IoT Smart Cities\n. . . . . . .\
    \ .\n22\n5\nSecurity and Privacy issue for IoT Smart Cities . . . . . . . . .\
    \ . . . . .\n28\n6\nSWOT Analysis for IoT in Smart Cities\n. . . . . . . . . .\
    \ . . . . . . . .\n29\n7\nAI use for Smart Agriculture . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\n35\n8\nAI use for Smart city Services . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n37\n9\nAI use for Smart Energy . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n38\n10\nAI use for Smart Health\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n39\n11\nAI use for Smart\
    \ Homes . . . . . . . . . . . . . . . . . . . . . . . . . . .\n42\n12\nAI use\
    \ for Smart Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n44\n\
    13\nAI use for Smart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n45\n14\nAI use for Smart Transport\n. . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n46\n15\nAI applications for IoT Smart Cities\n. . . . . . . .\
    \ . . . . . . . . . . . .\n48\n16\nOptimization in Smart Agriculture\n. . . .\
    \ . . . . . . . . . . . . . . . . .\n56\n17\nData setup used for Smart Agriculture\
    \ Optimization\n. . . . . . . . . . .\n56\n18\nOptimization in Smart City Services\n\
    . . . . . . . . . . . . . . . . . . . .\n58\n19\nData setup used for Smart City\
    \ Services Optimization\n. . . . . . . . . .\n58\n20\nOptimization in Smart Grid\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .\n61\n21\nData setup used for\
    \ Smart Grid . . . . . . . . . . . . . . . . . . . . . . .\n62\n22\nOptimization\
    \ in Smart Health . . . . . . . . . . . . . . . . . . . . . . . .\n63\n23\nData\
    \ setup used for Smart Health . . . . . . . . . . . . . . . . . . . . . .\n64\n\
    24\nOptimization in Smart Homes . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n67\n25\nData setup used for Smart Homes . . . . . . . . . . . . . . . . .\
    \ . . . . .\n67\n26\nOptimization in Smart Industry . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n68\n27\nData setup for Smart Industry . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n70\n28\nOptimization in Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . .\n71\n29\nData types for Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . .\n71\n30\nOptimization in Smart Transportation\n\
    . . . . . . . . . . . . . . . . . . .\n74\n31\nData types for Smart Transportation\
    \ . . . . . . . . . . . . . . . . . . . .\n75\n32\nADL and Falls present in the\
    \ SisFall dataset. . . . . . . . . . . . . . . . .\n90\n33\nADL and Falls present\
    \ in the K-Fall dataset. . . . . . . . . . . . . . . . .\n91\n34\nLabeling used\
    \ for Fall only classification for the SisFall Dataset\n. . . . .\n92\n35\nFeatures\
    \ computed for each fall segment\n. . . . . . . . . . . . . . . . . .\n94\n36\n\
    Fall F1-scores (Fall direction only)\n. . . . . . . . . . . . . . . . . . . .\
    \ .\n99\n37\nFall F1-scores (Fall severity and direction) . . . . . . . . . .\
    \ . . . . . . .\n100\n38\nBest Results: Fall direction\n. . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n100\n39\nBest Results: Fall direction and Severity\
    \ . . . . . . . . . . . . . . . . . .\n101\nxi\n40\nADL Labels used for SisFall\
    \ Recordings. . . . . . . . . . . . . . . . . . .\n102\n41\nPerformance for different\
    \ observation window sizes. . . . . . . . . . . . .\n109\n42\nPerformance for\
    \ different sensing modalities. . . . . . . . . . . . . . . . .\n110\n43\nBest\
    \ Results (Obs. Window : 3 sec, Sensing Modality: Acc. + Gyro.) . .\n110\n44\n\
    One ADL vs. Individual Falls. . . . . . . . . . . . . . . . . . . . . . . . .\n\
    116\n45\nIndividual ADLs vs. Individual Falls. . . . . . . . . . . . . . . . .\
    \ . . . .\n116\n46\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n118\n47\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n119\n48\nLabeling for K-Fall Dataset\n. . . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n120\n49\nResults for SisFall: One ADL vs. Individual Falls\
    \ . . . . . . . . . . . . .\n122\n50\nResults for K-Fall: One ADL vs. Individual\
    \ Falls\n. . . . . . . . . . . . .\n122\n51\nResults for SisFall: Individual ADLs\
    \ vs. Individual Falls\n. . . . . . . . .\n123\n53\nComparison with State of the\
    \ art (Individual ADLs vs. Individual Falls.)\n125\n54\nComparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\n126\n55\nResults for the\
    \ four Experiments for the SisFall dataset (F1-Score[%]) . .\n126\nxii\nLIST OF\
    \ FIGURES\n1\nSmart City Components . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n5\n2\nIoT Architecture\n. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .\n8\n3\nChallenges for IoT in Smart Cities. . . . . . .\
    \ . . . . . . . . . . . . . . .\n12\n4\nSensing Technologies for IoT Smart Cities.\
    \ . . . . . . . . . . . . . . . . .\n16\n5\nNetwork Technologies for IoT Smart\
    \ Cities.\n. . . . . . . . . . . . . . . .\n23\n6\nModified CERT Attack Taxonomy\
    \ for Smart Cities. . . . . . . . . . . . .\n24\n7\nAI for IoT Smart Cities. .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .\n47\n8\nOptimization applications\
    \ in Smart Agriculture. . . . . . . . . . . . . . .\n54\n9\nOptimization applications\
    \ in Smart City Services. . . . . . . . . . . . . .\n57\n10\nOptimization applications\
    \ in Smart Grid. . . . . . . . . . . . . . . . . . .\n59\n11\nOptimization applications\
    \ in Smart Health.\n. . . . . . . . . . . . . . . .\n62\n12\nOptimization applications\
    \ in Smart Homes.\n. . . . . . . . . . . . . . . .\n64\n13\nOptimization applications\
    \ in Smart Industry. . . . . . . . . . . . . . . . .\n69\n14\nOptimization applications\
    \ in Smart Infrastructure.\n. . . . . . . . . . . .\n70\n15\nOptimization applications\
    \ in Smart Transportation . . . . . . . . . . . .\n72\n16\nOptimization applications\
    \ in IoT based Smart Cities. . . . . . . . . . . .\n75\n17\nFall Detection with\
    \ Direction and Severity. . . . . . . . . . . . . . . . . .\n93\n18\nHierarchical\
    \ classification scheme for ADL and Fall detection.\n. . . . . .\n103\n19\nSample\
    \ Wavelet (Mexican Hat). . . . . . . . . . . . . . . . . . . . . . . .\n104\n\
    20\nHaar Wavelet. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n105\n21\nExample: 4-2-1 1-D Spatial Pyramid Pooling. . . . . . . . .\
    \ . . . . . . .\n106\n22\nAverage F1-scores for each activity for the four classifiers.\n\
    . . . . . . . .\n108\n23\nCNN-XGBoost based classification scheme for ADL and\
    \ Fall detection. .\n112\n24\nIllustration of data augmentation. (X component\
    \ of Accelerometer, Lat-\neral Fall) . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n113\n25\nCNN Network for feature extraction and\
    \ XGBoost classification stage.\n.\n114\n26\nNetwork performance for different\
    \ fall directions.\n. . . . . . . . . . . . .\n117\n27\nNetwork performance for\
    \ different fall directions.\n. . . . . . . . . . . . .\n118\n28\nConvLSTM-attention\
    \ Network.\n. . . . . . . . . . . . . . . . . . . . . . .\n121\n29\nFall detection\
    \ performance for both experiments.\n. . . . . . . . . . . . .\n124\n30\nFall\
    \ severity performance.\n. . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    124\n31\nFall direction performance. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\n125\n1\nAccelerometer and Gyroscope measurements: Forward Hard Fall\
    \ . . . . .\n174\n2\nAccelerometer and Gyroscope measurements: Forward Soft Fall\n\
    . . . . .\n175\n3\nAccelerometer and Gyroscope measurements: Backward Hard Fall\
    \ . . . .\n176\n4\nAccelerometer and Gyroscope measurements:f Backward Soft Fall\
    \ . . . .\n177\n5\nAccelerometer and Gyroscope measurements: Lateral Hard Fall\n\
    . . . . .\n178\n6\nAcclerometer and Gyroscope measurements: Lateral Soft Fall\n\
    . . . . . .\n179\nxiii\nCHAPTER I\nINTRODUCTION AND DISSERTATION OVERVIEW\n1\n\
    Motivation\nThe world is experiencing a bulging world population and increasing\
    \ urbanization\nwhich is set to grow by more than 10% in the next 30 years [1]\
    \ resulting in a total\nof 70% living in cities by 2050. Countries around the\
    \ world are looking at equipping\ntheir cities to deal with the influx of people\
    \ and the stress it will bring to current\ncity systems [2]. This is to be performed\
    \ keeping in view the UN Sustainable De-\nvelopment Goals 2030 [3]. In this regard,\
    \ Smart Cities have come out as a major\ninitiative by various governments in\
    \ making cities more navigable and welcoming to\nthe expected population increase\
    \ and providing city dwellers a better living experi-\nence, as is evidenced by\
    \ the multiple projects ongoing on both the public and private\nlevel [4, 5, 6,\
    \ 7]. The Internet of Things (IoT) has been the prime enabler of smart\ncities\
    \ as it has provided the means in terms of sensors, architectures, storage and\n\
    other technologies to instrument cities. It allows stakeholders to gather data,\
    \ pro-\ncess it and then make decisions based on the analyses performed. There\
    \ are various\ndomains within smart cities, these include Smart Agriculture, Smart\
    \ City Services,\nSmart Grid, Smart Health, Smart Homes, Smart Industry, Smart\
    \ Infrastructure and\nSmart Transportation.With improvement of Artificial intelligence\
    \ (AI) capabilities\nin the last decade, there have been different applications\
    \ of machine learning (ML)\nand deep learning (DL) algorithms within each of these\
    \ domains providing for better\ndecision making and improvement of services. Apart\
    \ from various supervised and un-\nsupervised learning applications, several tasks\
    \ within different components of smart\ncities can be formulated into optimization\
    \ problems and/or require heuristics to be\nincorporated in some form. However,\
    \ in both such tasks, there is a dearth of an\noverall coverage of Smart City\
    \ IoT based ML/DL and combinatorial optimization\nproblems. Such a coverage would\
    \ be very beneficial to researchers starting in the\nfield and has been presented\
    \ herein.\nOne of the major applications of the IoT Smart Cities is for health\
    \ purposes.\nMany countries around the world, especially in the developed world\
    \ are facing an\naging population. With the retirement of the ’baby boomer’ generation,\
    \ countries\naround the world are facing a big question over caring for their\
    \ elderly population.\nOne of the major issues that elderly people face today\
    \ are falls [8]. In the US, falls\naccount for a majority of the deaths caused\
    \ by injury in population aged 65 and\nabove [9] and a fall related injury occurs\
    \ every 19 minutes [10]. As indicated in [11],\nfalls have been associated with\
    \ estimated medical costs ranging from $31.5 billion for\n2013 to $49.5 billion\
    \ for 2017. Moreover, Floerence et al. [12] notes that in 2018,\nfalls contributed\
    \ to 8% of Medicaid expenses in the US for older adults, consequently\n1\nfalls\
    \ have huge health as well as financial ramifications for people and governments.\n\
    Determining when a person has experienced a fall is therefore an important task\
    \ in\nthe healthcare of people, more so in the old age population who tend to\
    \ increasingly\nlive alone and are at increased risk of suffering from falls.\
    \ Apart from just detecting\nif a fall has occurred or not, the direction of a\
    \ fall is an important consideration\nas well. Bourke et al. [13] notes that even\
    \ though 60% of falls occurring in older\nadults are forward falls, falls occurring\
    \ sideways may result in fracture and thus\nare important to determine. Quick\
    \ dispatch of healthcare providers can result in\ntimely treatment of fall related\
    \ injuries, thereby reducing the overall impact to life\nand wealth. Additional\
    \ information about the fall could benefit the medical dispatch\nteam to help\
    \ decide emergency procedures which could be matched up with patient\nhistory\
    \ of potentially being injury prone in a certain part of the body. In light of\
    \ this\nall, the development of fall detection systems has been of keen interest\
    \ to researchers\nin the domain of human activity recognition, tele-medicine and\
    \ smart health.\n2\nAims\nCiting the importance of IoT usage in communities, the\
    \ aims of this dissertation are\nas follows:\n1. To provide a wholistic coverage\
    \ of IoT based Smart City system design consid-\nering important aspects such\
    \ as sensors, technologies used, IoT architectures,\nthe use of machine/deep learning\
    \ methods and optimization schemes as well as\nthe challenges.\n2. Considering\
    \ the case study of smart health and specifically fall detection, de-\nvelop methodologies\
    \ for detection of falls considering fall direction and severity.\n3\nOrganization\n\
    This dissertation is organized in to six chapters.\nChapter II presents a coverage\n\
    of the IoT for Smart Cities in terms of the technologies used, its architectures\
    \ and\nalso the challenges towards IoT usage in Smart Cities. Chapter III discusses\
    \ the the\napplications of machine and deep learning algorithms. This chapter\
    \ provides a com-\nprehensive discussion on IoT usage in Smart Cities by considering\
    \ the different types\nof systems devised for each application as well. Chapter\
    \ IV discusses the applications\nof optimization algorithms in IoT based smart\
    \ cities for five popular algorithms. It\nthus provides a coverage of optimization\
    \ applications under the IoT smart city um-\nbrella. Chapter V presents work on\
    \ a chosen case study of smart health based on\nIoT. The considered task is fall\
    \ detection with direction and severity consideration.\nFour experiments have\
    \ been performed in this regard considering three scenarios, one\nconsidering\
    \ falls only with direction and severity and two others considering falls and\n\
    activity of daily living (ADL) as a combined problem. The designed methodologies\n\
    have shown to outperform the state of the art as has been discussed in the chapter.\n\
    The conclusion and future work opportunities are discussed in chapter VI.\n2\n\
    CHAPTER II\nIOT SMART CITIES\n1\nIntroduction\nThis chapter provides an overeview\
    \ of the use of IoT in Smart Cities and discuss\nhow it facilitates such initiatives.\
    \ It starts by laying out the structure of Internet\nof Things in a Smart City\
    \ context, discussing its various applications, components\nand architectures\
    \ while also discussing the technologies used at the different levels of\nthe\
    \ IoT architecture. Lastly, a discussion of the technical challenges that exist\
    \ in the\ndeployment of IoT in the Smart City domain is provided along with identification\
    \ of\npotential solutions to those challenges followed by future directions.\n\
    It is hard to define a Smart City, in fact, cities claim to be ‘smart’ based on\
    \ a\nvariety of criteria, for e.g. implementing novel e-governance schemes, creating\
    \ so-\ncial learning ventures and community engagement programs, focusing on sustainable\n\
    living as well as the more typical application of Information and Communication\n\
    Technologies for innovation [14]. In this work, Smart Cities are defined to be\
    \ the ap-\nplication of various information and communication technologies (ICT)\
    \ with the aim\nof creating a better living experience for a city’s population.\
    \ This encompasses use\nof these technologies in all the domains discussed previously,\
    \ including governance,\ntransport, housing, business, sustainable living, social\
    \ learning, community engage-\nment, providing opportunities and more. In an ideal\
    \ sense, the idea of a smart city\ntranscends the typically set boundaries of\
    \ a traditional city’s administrative and so-\ncial structure by allowing interaction\
    \ between the two, thereby enabling it to operate\nin a more cohesive and engaged\
    \ manner. Smart cities offer several advantages (in\nterms of value) compared\
    \ to a traditional city ecosystem:\n1. Climate goal achievement: Smart cities\
    \ are at the forefront of pioneering tech-\nnologies to help enable countries\
    \ meet climate goals. Smart city focuses on\nsmart energy management, smart transportation\
    \ systems and city administra-\ntion which aim to reduce the carbon footprint\
    \ of cities and enable development\nand use of new technologies for cleaner living.\n\
    2. Money value: Smart City ventures will be a market of USD 1 Trillion by 2025\n\
    [15], this provides a huge monetary incentive for not only governments but\nprivate\
    \ companies to actively contribute to the development of technologies\nsupporting\
    \ smart city development.\n3. Societal impact: The centerpiece of the smart city\
    \ project is to improve the qual-\nity of life of a city’s inhabitants and help\
    \ develop an inclusive society wherein\nevery opinion is catered for and equal\
    \ opportunity is provided. Information and\n3\nCommunication Technologies in the\
    \ smart city context are a fundamental com-\nponent to the provision of public\
    \ services by facilitating interactions of citizens\nwith the city environment\
    \ and making life easier.\n2\nSmart City Components\nA smart city is made up of\
    \ several components which are illustrated in Figure 1.\nSmart city applications\
    \ typically have four aspects associated with them, the first is\nthe collection\
    \ of data, the next is its transmission/reception, third is the storage and\n\
    fourth is analysis. The collection of data is application dependent and has been\
    \ a real\ndriver for sensor development in the various domains. The second part\
    \ is the exchange\nof data, this involves data transmission from the data collection\
    \ units towards the\ncloud for storage and analysis.\nThis task has been achieved\
    \ in several manners,\nmany smart city ventures have city-wide Wi-Fi networks,\
    \ 4G and 5G technologies are\nbeing used, as well as various types of local networks\
    \ which can convey data either\non a local level or a global level. The third\
    \ stage is storage in the cloud, different\nstorage schemes are used to arrange\
    \ and organize data so as to make it usable for\nthe fourth stage which is data\
    \ analysis. Data Analysis refers to the extraction of\npatterns and inferences\
    \ from the gathered data to guide decision making. In some\nsituations, simple\
    \ analysis such as basic decision making and aggregating would work\ntoo. For\
    \ more complex decision making, the availability of the cloud allows not only\n\
    for heterogeneous data gathering/storage and processing but also analysis through\n\
    the use of statistical methods as well as machine and deep Learning algorithms\
    \ in\nreal-time [16].\n2.1\nSmart Agriculture\nFood security is one of the most\
    \ important parts of the United Nations Sustainable\nDevelopment goals for 2030.\
    \ With an increasing world population, worsening climate\nchange causing erratic\
    \ weather in food centers of the world, the race to ensure that\nfood production\
    \ is made sustainable and that dwindling resources such as water are\nutilized\
    \ efficiently has been a high priority for countries around the world. Smart\n\
    agriculture is the use of sensors embedded into plants and fields to measure various\n\
    parameters to help in decision making and prevent/diseases, pests etc [17]. A\
    \ part\nof the smart agriculture paradigm is precision agriculture, which involves\
    \ sensors\nbeing placed in plants to provide targeted measurements and therefore\
    \ allow for\ntargeted care mechanisms to be deployed. Precision agriculture will\
    \ be necessary\nfor food security in the future [18] and therefore is an essential\
    \ part of the fight for\nsustainable food production. The major applications of\
    \ AI in IoT for agriculture are\ncrop monitoring/disease detection and data driven\
    \ crop care and decision making.\n2.2\nSmart City Services\nSmart city services\
    \ encompass the activities that sustain a city’s population, these\ninvolve municipal\
    \ tasks such as supply of water, waste management, environmental\n4\nSmart \n\
    Energy\nSmart \nTransportation\nSmart \nAgriculture\nSmart \nInfrastructure\n\
    Smart  \nCity Services\nSmart Health\nSmart Homes\nSmart  Industry\nFigure 1.\
    \ Smart City Components\ncontrol and monitoring etc. Sensors for water quality\
    \ can be deployed to continually\nprovide an update about the quality of water\
    \ being used in the city and detect leaks\n[19]. One popular component of smart\
    \ city initiatives is the management of waste,\nand it has been the part of many\
    \ of the smart city initiatives mentioned earlier, from\nchutes in Barcelona to\
    \ having bins equipped with sensors and connected to the cloud\nso as to not only\
    \ inform the relevant authorities of the need to empty them but also\nusing AI\
    \ to determine the best route to reduce cost [20]. Sensors can also be used to\n\
    monitor the environmental conditions in a city to determine pollution levels [21]\
    \ and\nguiding citizens to the next free parking space to save fuel costs [22].\n\
    2.3\nSmart Energy\nTypical electrical systems have one-way energy flow from a\
    \ main generator source,\nusually a hydroelectric or fossil fuel based power plant.\
    \ Power generation is controlled\nvia feedback from the substations, however,\
    \ since there is no information feedback\nfrom the consumer end, the power generation\
    \ scheme used with these systems requires\nthat the power being produced by these\
    \ sources outstrips the demand by a large\namount to ensure continuous supply\
    \ of power. The process of detecting faults and\nperforming corrective actions\
    \ in such systems is also a time taking process. Moreover,\nwith renewable energy\
    \ technologies becoming cheaper, the consumer of today not\nonly has a supply\
    \ from the main utility but also performs their own generation.\nSmart Grids is\
    \ the use of ICT to make the current and newly installed grids more\nobservable,\
    \ allow for distributed energy generation, both at the consumer end as well\n\
    as the utility end and introduce self-healing capabilities in to the grid. One\
    \ aspect\n5\nof smart grids is that real time power data is transmitted to utilities\
    \ at different\npoints on the grid throughout the supply lines till the customer.\
    \ Since smart grids\nprovide real-time data about consumer usage, it allows for\
    \ better management of\npower generation using prediction models developed through\
    \ acquired consumption\ndata, integrating different energy sources as well as\
    \ self-healing [23] of the network\nto ensure an uninterrupted supply.\n2.4\n\
    Smart Health\nSmart Health refers to the use of ICT to improve health care availability\
    \ and quality.\nWith an increasing population and rising costs of healthcare,\
    \ this area has been of\nintense focus of researchers as well as healthcare providers.\
    \ Current health systems\nare over burdened and therefore cannot cater to the\
    \ increasing demand from the pop-\nulace. In this regard, smart health aims to\
    \ ensure that healthcare be available to as\nmany people as possible through telemedicine\
    \ services [24] and improved diagnosis\nassistance to doctors utilizing AI [25].\
    \ With the ubiquitousness of mobile phones\nand health trackers [26] that can\
    \ capture real-time data about peoples health (ECGs,\ntemperature, body oxygen\
    \ saturation and other biosensors) while also recording daily\nactivity and detecting\
    \ abnormal movements using inertial sensors, it has become pos-\nsible to leverage\
    \ cloud capabilities for processing this data to make better healthcare\ndecisions.\
    \ Thus reducing the overall costs as well as burden on healthcare facilities.\n\
    2.5\nSmart Home\nOne major component of Smart Cities is the Smart Home since it\
    \ is central to the\nlife of the city’s inhabitants. Smart Homes involve the use\
    \ of sensing units installed\nthroughout a person’s home that provide information\
    \ about the home as well as\nits occupants. These sensors might include user activity\
    \ monitors such as ambient\nsensors, motion trackers and power/energy consumption.\n\
    2.6\nSmart Industry\nIndustries around the world are busy in a continuous pursuance\
    \ of being more ef-\nficient and increasing productivity while reducing cost.\
    \ The industry 4.0 paradigm\nentails the vision of a connected factory where all\
    \ its intermediary functionaries are\nseamlessly integrated, working in tandem\
    \ with each other. This is made possible be-\ncause of the internet of things\
    \ [27]. The use of IoT in manufacturing and production\nprocesses, cyber physical\
    \ systems integrating workers and machines has led to several\nbenefits to the\
    \ industry such as faster and better innovation, optimization of manu-\nfacturing\
    \ schemes (resources and processes), better quality of products and enhanced\n\
    safety for factory workers. However, smart industries come with several challenges\n\
    for IoT usage, working with a set of heterogeneous devices and machines has its\
    \ own\nchallenges and requires cyber physical systems to have flexibility in configuration,\
    \ con-\nnectivity and quick implementation for use in IoT applications for Smart\
    \ Industry\n[28]. Artificial Intelligence has gone hand in hand with IoT to spur\
    \ the development\nand deployment of industry 4.0 services. With sensors being\
    \ embedded in machines\n6\nand other processes in the factory, data from these\
    \ sources provide an opportunity for\nusing AI techniques to increase automation,\
    \ perform business intelligence operations\nand more. In fact, researchers have\
    \ suggested frameworks for integrating AI within\nIoT for Smart Industry [28,\
    \ 29, 30]. The major applications of AI in the industry are\npredictive maintenance,\
    \ monitoring/fault detection (machine health) and production\nmanagement.\n2.7\n\
    Smart Infrastructure\nThe infrastructure of a city is paramount to its living\
    \ quality, city governments need\nto construct new bridges, roads and buildings\
    \ for the use of its inhabitants and also\nperform maintenance for uninterrupted\
    \ usage. Smart infrastructure helps cities in\nensuring their infrastructure is\
    \ in shape and usable by utilizing sensors for measuring\nbuilding/bridge structural\
    \ state for structural health monitoring using accelerome-\nters [31] and smart\
    \ materials [32]. Data collected through these sensors allows for\npredictive\
    \ maintenance of these essential units to maintain normal operation of the\ncity.\n\
    2.8\nSmart Transport\nMany urban centers suffer from traffic problems, this includes\
    \ congestion, pollution,\nscheduling and cost reduction issues for public transport.\
    \ The rapid development\nand implementation of new Information and Communication\
    \ Technologies, Vehicle-\nInfrastructure-Pedestrian communication has become commonplace.\
    \ Whether it be\nVehicle to Vehicle (V2V), Vehicle to Infrastructure (V2I), Vehicle\
    \ to Pedestrian (V2P)\nor Pedestrian to Infrastructure (P2I), such technologies\
    \ have made the design of smart\ntransportation systems possible. With cars having\
    \ a GPS device and the common-\nality of cellphones with every driver, many approaches\
    \ use GPS data to track driver\nbehavior and traffic patterns [33]. This real-time\
    \ data is already used for route map-\nping in applications such as Waze and Google\
    \ Maps and used for trip scheduling in\npublic transport. Parking systems equipped\
    \ with sensors can also guide drivers to\nthe nearest free parking spot.\n3\n\
    Internet of Things for Smart Cities\nAt the heart of the smart city initiatives\
    \ is the internet of things, it is the enabling\ntechnology that has allowed for\
    \ the pervasive digitization that gives rise to the con-\ncept of smart cities.\
    \ The internet of things refers to the ubiquitous connection of\ndevices to the\
    \ internet, allowing them to send information to the cloud and poten-\ntially\
    \ get directions for performing actions. IoT involves the collection of data and\n\
    performing data analytics operations to extract information in order to support\
    \ de-\ncision and policy making. It is estimated that by 2025 more than 75 billion\
    \ devices\nwill be connected to the internet [34], spearheading even more application\
    \ develop-\nment. Within the smart city context, IoT allows for sensors to collect\
    \ and send data\n7\nabout the city’s state to a central cloud, which is then mined\
    \ or processed for pattern\nextraction and decision-making purposes.\n3.1\nIoT\
    \ Architectures for Smart cities\nThe Internet of Things unifies the operations\
    \ of data sensing, transmission/recep-\ntion, processing and storage through the\
    \ use cloud services. Based on technology, a\ngeneric IoT architecture consists\
    \ of five layers where successive layers operate on the\ninformation from the\
    \ previous layer as shown in Figure 2. It also shows the three\ndifferent architectures\
    \ that exist for IoT systems.\nCloud Computing\nEdge computing\nFog Computing\n\
    Business layer\nActuators\nMobile Elements\nSensors\nNetwork Technologies\nNetwork\
    \ Topologies\nAPIs, Databases, Security\nApplications\nData Analytics (Machine\
    \ Learning, Optimization, Deep Learning)\nApplications \nLayer\nMiddleware \n\
    Layer\nNetwork Layer\nSensing Layer\nFigure 2. IoT Architecture\nThe Sensing layer,\
    \ also called the Perception layer consists of sensors that can\nget information\
    \ about physical quantities of interest in any application as well as\nactuators\
    \ which can act upon physical objects, such as Radio Frequency IDentification\n\
    (RFID) readers for reading RFID tags and other such devices. The data read by\
    \ the\nsensing layer is passed onward to the Middleware layer using the networking\
    \ layer\nthrough wireless network technologies such as Wi-Fi, cellular internet,\
    \ Zigbee and\nBluetooth etc.\nThe Middleware layer provides a generic interface\
    \ for the sensing\nlayer hardware and the Application layer which uses the data\
    \ through various API’s\nand database management services to provide users with\
    \ services. The Business layer\nis attached to the application layer and is used\
    \ to develop strategies and formulate\npolicies that help manage the complete\
    \ system.\nIn terms of architectures, typically, IoT architectures are categorized\
    \ based on\nthe type of operation responsibilities allocated to parts of the IoT\
    \ system, this cat-\negorization is based mainly on processing of data responsibilities.\
    \ There are three\narchitectures of IoT systems with respect to the stage of the\
    \ IoT framework where\nprocessing of data can be carried out and these are Cloud,\
    \ Fog and Edge Models.\nTable 1 lists the traits of each of three layers of the\
    \ IoT system. It is important to\n8\nmention that the three IoT architectures\
    \ discussed here are not mutually exclusive,\ninstead the aim of this hierarchy\
    \ is to complement the higher layer by providing it only\nuseful information which\
    \ makes the system more productive and dependable. For any\nIoT system designer,\
    \ the aim is to establish a balance between the capabilities of the\nthree layers\
    \ keeping in view system costs and requirements.\n3.1.1\nCloud Computing Model\n\
    This was the first proposed architecture for IoT systems and is based on the premise\n\
    that processing of data from the various components in the IoT system should take\n\
    place in the cloud. Cloud computing allows for the remote accessing of uninterrupted\n\
    shared resources (computing, storage and services) over the network. It should\
    \ be\nable to dynamically allocate these resources without human intervention,\
    \ schedule\nor pool as necessary and be able to be accessed from a variety of\
    \ different platforms\n[35]. The cloud can provide both hardware as well as software\
    \ services for smart city\napplications. It has the advantage that it provides\
    \ a central management platform\nfrom which to observe, control the IoT system\
    \ as well as to disseminate command\nactions based on the received data. Moreover,\
    \ this centralization also allows for cloud\nsystems to have sufficiently large\
    \ computing and storage capacities thereby allowing\nthem to perform complex tasks\
    \ of data mining, pattern extraction and making infer-\nences from sensor data\
    \ in smart cities to make use of it in the best manner possible.\nHowever, there\
    \ are a few disadvantages with using the cloud computing model for\nthe IoT. First,\
    \ transmitting all gathered data to the cloud increases network traffic,\neven\
    \ though this may not be true for applications in which measurements are not\n\
    very frequent, but in other cases, this could increase network costs. Moreover,\
    \ data\ntransmission overheads may increase due to the large amount of data that\
    \ needs to\nbe transmitted by the many sensors existing in the smart city scenario.\
    \ Another\ndisadvantage that the cloud computing model suffers from is data latency,\
    \ since the\nsensing units exist at the sensing layer and the decision making/data\
    \ processing takes\nplace in the cloud, this gives rise to data latency in the\
    \ transmission of sensing infor-\nmation, especially when many devices start sending\
    \ data at the same time. Network\nreliability can be an issue when using this\
    \ model, with the large volume of data traffic\non the network, it might not be\
    \ possible to enforce robust data transmission schemes\nas IoT systems get bigger.\n\
    3.1.2\nFog Computing Model\nSince most of the information produced with in IoT\
    \ takes place towards the sensing\nend of the IoT system, also called the edge,\
    \ Fog Computing was proposed in [36]\nto overcome some of the problems of the\
    \ cloud computing model for the IoT. Fog\ncomputing provides a more diverse distribution\
    \ of responsibilities than are dictated\nby the cloud computing architecture by\
    \ moving some of the processing to devices\non the local network.\nTypically,\
    \ Fog computing refers to data processing that is\ncarried out by routers and\
    \ other network devices within in the Network layer in the\nIoT. Since network\
    \ devices nowadays increasingly offer better computational capabil-\n9\nities,\
    \ one can leverage them to perform rudimentary operations on data. Operations\n\
    such as aggregation and collection of sensor data, simple processing operations\
    \ and\ndecision-making can be performed to reduce the amount of information flow\
    \ towards\nthe higher cloud layer. Questions that need to be answered for the\
    \ decision-making\nprocess include but are not limited to for e.g., does the decision\
    \ require the use of\naveraging for one quantity and instantaneous values of the\
    \ other? Is it possible to\nextrapolate data received for one quantity and use\
    \ the currently measured value for\nanother one? Based on the previous data for\
    \ a given period, can one provide higher\nlayers with decision options rather\
    \ than just data, thereby providing better quality\ninformation to the cloud layer\
    \ thus resulting in better utilization of cloud resources.\nFog layers can localize\
    \ decision making since they have access to the local state of a\ngiven region\
    \ [37]. This would be helpful in implementing distributed decision mak-\ning mechanisms\
    \ which might be necessary in some applications. Moreover, they also\nallow for\
    \ local networks to be established using non-internet technologies such as Zig-\n\
    bee, Bluetooth, RFID etc where sensors and other end devices transmit data to\
    \ the\nFog node (also referred to as access points in such systems) which is connected\
    \ to the\ncloud.\nFog computing results in reduced costs for deployment of IoT\
    \ systems, increases ro-\nbustness as latency, data overhead and errors in transmission\
    \ are reduced. This also\nimproves the efficiency of the applications as quicker\
    \ decisions can be made on the\nreceived data, which is important in critical\
    \ decision-making situations. Moreover,\nFog devices have the capability to not\
    \ only receive data from similar devices at the\nedge but also collect it from\
    \ many different types of devices. This capability to mea-\nsure different parameters\
    \ in the edge environment enable for an application neutral\nIoT system architecture\
    \ to be developed.\nData sent upward by the Fog layer in the IoT hierarchy would\
    \ be used to gain insights\nin to system behavior and to guide new rules of system\
    \ operation, this will typically\nbe carried out in the cloud. Devices in the\
    \ Fog layer may be provided decision making\nguidance from the higher cloud layer\
    \ to ensure smooth system operation. However,\na balance needs to be struck as\
    \ to the division of responsibilities between the cloud\nand the fog layer keeping\
    \ in view the costs involved.\n3.1.3\nEdge Computing Model\nThe purpose of Fog\
    \ Computing was to push some of the decision making towards\nthe edge of the network.\
    \ In recent years, with increasingly capable devices being\ndeveloped that are\
    \ attached to ‘edge’ nodes, simple decision making, and processing\nof data has\
    \ been increasingly moved on to these devices so as to reduce network\nand device\
    \ costs even further at the fog level and make for even deeper distributed\ndecision-making\
    \ schemes. Edge computing refers to data processing that is done at\nthe ”thing”\
    \ level, i.e. by sensors and other devices in the IoT system [38]. Another\nconcept\
    \ about Edge computing as discussed in [39] defines the Edge computing layer\n\
    as an intermediary layer between the Fog and the ‘things’ (sensors) rather than\
    \ edge\nnodes. The difference between them in this case is the Edge computing\
    \ nodes act\nas aggregation and decision-making units on a smaller scale compared\
    \ to fog devices\n10\nwhich act to provide seamless connectivity and data integrity\
    \ throughout the IoT\nnetwork. The aim of the Fog and the Edge computing paradigms\
    \ is to decentralize\nthe IoT system for purposes of reducing cost, increasing\
    \ scalability and increasing\nrobustness.\nTable 1. Comparison of Cloud, Fog and\
    \ Edge Computing Models\nCloud\nComputing\nModel\nFog Computing Model\nEdge Computing\
    \ Model\nContextual awareness on a\nglobal level encompassing all\naspects of\
    \ the application\nThe Fog layer has contextual aware-\nness of the local sensing\
    \ scenario\nEdge devices typically only\nhave\ninformation\nabout\ntheir own status.\
    \ Exchange\nstrategy possible but limited\nto local neighborhood\nFarthest away\
    \ from the edge\nand therefore decision mak-\ning can be slow and latency\nis\
    \ high\nBeing the closest unit to the edge,\nthe Fog layer can respond much\n\
    more quickly to the data being sent\nfrom sensors and other devices, as it\ncan\
    \ aggregate the information sent\nQuickest\ndecision\nmaking\npossible; however,\
    \ decisions\nwill be based on local states\nUtilizes heterogeneous data\nfrom\
    \ a variety of sensing de-\nvices\nUtilizes heterogeneous data,\nbut\nwithin a\
    \ small region\nUsually do not have access\nto different types of data\nHigh network\
    \ cost\nMedium network cost as data flow\nis reduced\nLeast network cost\nPotential\
    \ privacy risk as raw\ndata might be sent to the\nCloud\nIncreased\nprivacy\n\
    compared\nto\nCloud computing\nEven\ngreater\nprivacy\nen-\nforcement possible\
    \ than Fog\ncomputing model\nLeast\nrobust\nas\ndecision\nmaking is centralized\n\
    More robust than Cloud computing\nmodel\nMost robust as distributed\ndecision\
    \ making takes place\nBest capabilities in terms of\nresources\nLesser capable\
    \ than Cloud devices\nLeast capable\nScalability is low\nScalability is better\
    \ than Cloud\nScalability is highest\n3.2\nIoT Challenges for smart Cities\nThe\
    \ Internet of Things promises the digitization of all aspects of our lives. For\
    \ smart\ncities, this digitization process entails the proliferation of sensing\
    \ nodes in every\ndomain of a city’s operation mechanism. With an application\
    \ scope this broad, the\ncreation and subsequent deployment of IoT systems in\
    \ smart cities carry enormous\nchallenges that need to be considered. In this\
    \ section, a discussion is provided of\nthe challenges that IoT system designers\
    \ face when making deployments in smart\ncity applications.\nThe focus in this\
    \ work is on the technological challenges that\npertain to IoT use in smart cities\
    \ and has also been the focus of researchers. Figure 3\nshows the different challenges\
    \ which Smart City IoT system deployment encounters,\nnamely Security and Privacy,\
    \ Smart Sensors, Networking and Big Data Analytics. A\nsummary of the discussion\
    \ in this section is presented in Table 2.\n11\nSmart City\nChallenges\nSmart\
    \ \nSensors\nNetworking\nIntelligent \nData \nAnalytics\nSecurity and \nPrivacy\n\
    Interoperab\nility\nReliability\nRobustness\nPower\nMemory\nHeterogen\nous data\n\
    Scalability\nLow Power\nMobility\nRouting\nEncryption \nData \nLeakage\nAccess\
    \ \nControl\nNetwork \nAttacks\nFigure 3. Challenges for IoT in Smart Cities.\n\
    3.2.1\nSecurity and Privacy\nSecurity, along with Privacy is the primary concern\
    \ in smart cities.\nSmart cities\ninvolve having essential city infrastructures\
    \ online, any aberration in the operation\nof the city’s services will bring inconvenience\
    \ to its citizens and put human lives and\nproperty at risk. Therefore, security\
    \ is a big concern in smart cities. In today’s age\nwhere cybercrime and warfare\
    \ have become a tactic in world politics, smart cities\nare at an ever-greater\
    \ risk of being the target of such malicious attacks. Encryption\nof data transmitted\
    \ over the network is necessary in this scenario. For smart city\nprojects to\
    \ be successful, they require the trust and participation of citizens. The\nproliferation\
    \ of sensors in smart cities, which continuously collect data about the\nactivity\
    \ of people may expose the daily activities of citizens to unwanted parties.\n\
    Moreover, companies and corporations on the IoT network may use citizen data\n\
    without their approval for things like targeted advertising and may perform acts\
    \ such\nas eavesdropping etc. Solutions to this will require processes that anonymize\
    \ data\ncollection while retaining the integrity of the context of the measured\
    \ task so that\napt decision making is possible. Security and Privacy has been\
    \ covered in detail in a\nlater section.\n12\n3.2.2\nSmart Sensors\nSmart sensors\
    \ are the hardware components that gather data in smart cities. These\ndevices\
    \ are manufactured by a host of different vendors that adhere to different sens-\n\
    ing mechanisms, standards of measurement, data formats and connectivity proto-\n\
    cols. Smart city deployment will require all these devices to exchange data, perform\n\
    scheduling of tasks between them and be able to aggregate data together for mak-\n\
    ing inferences. A solution to this issue is to develop and use open protocols\
    \ and\ndata formats that will enable manufacturers to create equipment that can\
    \ communi-\ncate between each other, further spurring IoT system deployment. Another\
    \ solution\ncould be the development of ‘standard’ access point nodes for IoT\
    \ systems that can\ncommunicate to devices using several different communication\
    \ protocols and are able\nto decode the information received. Some manufacturers\
    \ have, in fact, made their\nproducts compatible with other protocols as mentioned\
    \ in [40].\nAnother challenge for smart sensors is reliability and robustness.\
    \ Reliability and\nrobustness refer to the dependability and correctness of the\
    \ IoT system. IoT is the\nbackbone of future smart cities and being imperative\
    \ to their operation, the IoT\nsystem needs to provide a smooth experience to\
    \ its users. This requires that service\nrequests from users of the application\
    \ receive an accurate and timely response. The\nquality of service needs to be\
    \ ensured for every citizen in the smart city. Systems\nthat deliver critical\
    \ utilities such as transport, electricity etc. should be decentralized.\nThe\
    \ distributed connection points will allow for robustness and increase reliability.\n\
    One such example is self-healing in Smart Grids [23].\nMany current networking\
    \ protocols are developed for infrastructure networked\ndevices which have access\
    \ to continuous power, however, sensors in smart cities will\nbe mobile in many\
    \ scenarios and thus be battery powered. Moreover, they will need\nto measure,\
    \ transfer and in some cases save data they have collected. This requires\nthe\
    \ development of not only low power, low overhead data transmission schemes\n\
    but also development of new memory and storage technologies as well as low power\n\
    devices that extend battery life as much as possible. Storing this large amount\
    \ of\ndata would require development of compression algorithms which will be employed\n\
    and database schemes that will need to be developed in the future as smart cities\n\
    and IoT are scaled up. Solutions for power issues necessitate the development\
    \ of new\nbattery technologies and perhaps the incorporation of energy harvesting\
    \ mechanisms\nin such devices to make long lasting service provision possible.\n\
    3.2.3\nNetworking\nThe IoT depends on the capability of sensing and other devices\
    \ to be able to send\nand receive information to each other and the Cloud. With\
    \ new smart city appli-\ncations coming up, providing networking to these devices\
    \ to remain connected is a\nbig challenge. Current networking methods are not\
    \ optimized to providing network-\ning services for smart city components. Many\
    \ devices in smart cities have mobility\nand data throughput requirements which\
    \ need to be met to provide an acceptable\nquality of service. Different approaches\
    \ have been suggested in terms of defining ac-\n13\ncess points, local networks\
    \ etc. to solve this problem. Another aspect of networking\nwould be working on\
    \ efficient and dynamic routing protocols that can serve IoT re-\nquirements capable\
    \ of working with stationary as well as devices in motion, which\nmany current\
    \ protocols do not offer sufficiently [41].\n3.2.4\nBig Data Analytics\nIoT connected\
    \ devices generated 13.6 Zetta Bytes of data in 2018 and this is expected\nto\
    \ grow to 79.4 Zetta Bytes till 2025 [34]. To make use of this data and continuously\n\
    improve the services that are delivered in smart cities, new data analytics algorithms\n\
    need to be developed. With the myriad of the different parameters that are measured\n\
    in smart cities, these algorithms need to be applicable to data of varying nature\
    \ (both\nstructured and unstructured), better data fusion techniques need to be\
    \ developed as\nwell so as to combine them in meaningful ways and be able to extract\
    \ inferences and\nrecognize patterns. Deep learning has been of interest in this\
    \ area as it can lever-\nage on this large amount of data to provide better results\
    \ for different applications.\nAnother important consideration would be to ensure\
    \ that the developed algorithms\nare scalable in that they have enough generality\
    \ and can be used through out the\nintended application. For, e.g., for the purposes\
    \ of activity recognition, the authors\nin [42] found that a CNN trained for activity\
    \ recognition on one dataset failed to\nperform well on others or in [43] where\
    \ the deep learning network performs poorly\nwhen the color of tomatoes is different\
    \ from what it was trained on. Concept drift is\nanother issue of concern as with\
    \ the continuous acquisition of data, the properties of\ndata may change over\
    \ time. Techniques such as incremental learning may be useful\nin this respect.\
    \ Explainability is another important factor for Smart City analytics\nto be widely\
    \ acceptable, specially in the area of smart health. There have been some\napproaches\
    \ suggested towards this end, in [44] a hybrid deep learning classifier and\n\
    semantic web technologies based solution is demonstrated for the application of\
    \ flood\nmonitoring. In [45], the authors present an explainable deep learning\
    \ based health-\ncare system at the Edge for COVID-19 care based on a distributed\
    \ learning paradigm\nwith promising results. However, more work needs to be performed\
    \ to incorporate\nexplainability techniques such as distillation, visualization,\
    \ and intrinsic methods into\nMachine and Deep Learning based smart city applications\
    \ in order to increase smart\ncity application proliferation.\n3.3\nSensing Technologies\n\
    Sensing is at the heart of smart city technologies. Sensors provide the knowledge\
    \ and\ndata from which smart city innovations are created. With the vastly different\
    \ nature\nof Smart City projects and its various components, there are numerous\
    \ sensors which\nare used as part of these initiatives. The authors in [58] have\
    \ provided a framework\nfor the comparison of IoT sensors and have listed sensors\
    \ they found in use for the\nInternet of Things. We use their work to direct our\
    \ survey of the sensing technologies\nused in smart cities. Sensors within IoT\
    \ can be divided in to several groups, these are\nambient, motion, electric, biosensors,\
    \ identification, presence, hydraulic and chemical\n14\nTable 2. Smart City IoT\
    \ Challenges and Mitigation\nChallenge\nMitigation/research direction\nReferences\n\
    Security and Pri-\nvacy\nEncryption\n[46][47][48][49][50][51][52]\nNew authentication\
    \ mechanisms\n[53][54][55]\nNew standards to anonymize data\nPrevent data leakage\n\
    Smart Sensors\nInteroperability: Open Standards\n[46][47][48][52][53][54][55]\n\
    Reliability and Robustness: Decen-\ntralized and distributed architec-\ntures\
    \ and decision making\n[56]\nPower and Memory:\nEnergy har-\nvesting, Low power\
    \ sensors, New\ndatabase storage systems\nNetworking\nLow\npower\nnetworks,\n\
    Network\nschemes that ensure fluent mobility\nand routing\n[41][52]\nBig data\
    \ analytics\nNew algorithms which work with\ndifferent\nnatured\ndata,\nDevelop\n\
    scalable and explainable AI\n[47][52][57]\nsensors as shown in Figure 4.\nSensors\
    \ are the key component in smart city IoT\nsystems which provide the interaction\
    \ between the smart city system and the city’s\ninhabitants and allow for new\
    \ services to be developed. One thing to note is that\nmany of the sensors find\
    \ applications in multiple areas as discussed. Furthermore,\nany given application\
    \ will require measuring different physical quantities and will\nrequire the use\
    \ of many different types of sensors. For, e.g., ambient, motion, electric,\n\
    identification, position, chemical and hydraulic sensors have been found to be\
    \ used in\nsmart homes. As noted in the challenges, working with different sensors\
    \ which might\nhave different output data types is a task that needs to be dealt\
    \ with when working\nwith multiple types of sensors. Table 3 presents a summary\
    \ of the sensors used in\neach smart city component.\n3.3.1\nAmbient Sensors\n\
    Ambient sensors include sensors used to measure physical quantities indicating\
    \ to\nenvironmental conditions such as temperature, humidity, light intensity\
    \ and pressure.\nAmbient sensors are used in a variety of smart city applications\
    \ including smart homes\nwhere they are used to regulate the comfort level, they\
    \ are also used for smart city\nservices.\n3.3.2\nBio-Sensors\nBio-sensors are\
    \ used for measuring health parameters of living things. Bio-sensors in\nsmart\
    \ cities are used for monitoring patients for healthcare purposes. Such sensors\
    \ in-\nclude ElectroEncepheloGram (EEG), ElectroMyoGram (EMG), ElectroCardioGram\n\
    15\nAmbient\nPresence\nMotion\nOther \nsensors\nIdentification\nElectric\nHydraulic\n\
    Smart City Services\nSmart Homes\nSmart Transport\nSmart Agriculture\nSmart City\
    \ Services\nSmart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart\
    \ Infrastructure\nSmart Transport\nSmart Health\nSmart Homes\nSmart Industry\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Homes\nSmart Industry\n\
    Smart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Agriculture\n\
    Smart City Services\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nBiosensors\nSmart City Services\nSmart Homes\nSmart Transport\n\
    Smart Sensors\nChemical\nSmart Agriculture\nSmart City Services \nSmart Homes\n\
    Smart Transport\nFigure 4. Sensing Technologies for IoT Smart Cities.\n(ECG),\
    \ skin resistance, heart beat, breath sensors, pulse oximetry, blood pressure\n\
    and more.\n3.3.3\nChemical\nChemical sensors are used to measure chemical properties\
    \ of materials, this includes\ngas sensors which can measure/detect carbon monoxide\
    \ (CO), carbon dioxide (CO2)\nand other gases for air quality monitoring, sensors\
    \ for detecting smoke, pH and other\nsensors for water quality monitoring etc.\n\
    3.3.4\nElectric Sensors\nElectric sensors allow for the measurement of electrical\
    \ power and are widely used in\nsmart grids and smart homes to monitor the power\
    \ consumption of consumers/ap-\npliances. Types include current transformers and\
    \ voltage sensors to measure current\nand voltage, respectively.\n3.3.5\nHydraulic\n\
    Hydraulic sensors refer to sensors used for liquid measurements such as level,\
    \ flow,\nleak detection. These are used for measurement of liquid levels in tanks\
    \ [59].\n16\n3.3.6\nIdentification\nIdentification sensors refer to RFID tags\
    \ and Near Field Communication (NFC) de-\nvices. These sensors are used in applications\
    \ involving payments, data exchange in\nthe domain of smart transportation and\
    \ smart city services.\n3.3.7\nMotion Sensors\nMotion sensors refer to sensors\
    \ that can be used for the detection of motion. Sensors\nfor motion sensing involve\
    \ inertial sensors such as accelerometers and gyroscopes.\nThese sensors are used\
    \ in smart health applications such as activity tracking as well\nas applications\
    \ like vibration sensing in smart homes and industry.\n3.3.8\nPresence\nPresence\
    \ sensors indicate to the presence of a humans or objects. Passive InfraRed\n\
    (PIR) sensors are very popular and are used to detect human motion, reed switches\n\
    can be used on windows and doors for security purposes, inductive loop sensors\
    \ which\nuse electromagnetic induction can be used to detect presence in transport\
    \ systems.\nUltrasonic sensors are also used to determine the distance of objects.\n\
    Capacitive\nsensors are also included in this type, these may be used to determine\
    \ position.\n3.3.9\nOther Sensors\nVarious smart city applications make use of\
    \ different sensing modalities such as audio\nor visual information or other signal\
    \ measurement devices, for, e.g., bluetooth and\nWi-Fi signal strength. Since\
    \ the sensors for these modalities capture raw information\nabout signals (visual,\
    \ sound or signal strength etc.), the gathered data is typically\nprocessed further\
    \ before it indicates to the target variable being measured.\n3.4\nNetworking\
    \ Technologies\nThe internet of things in smart cities depends on the aggregation\
    \ of data measured by\nindividual sensing units placed throughout the smart city\
    \ environment. Systems that\ncan use these measurements individually have long\
    \ existed and provided automation\nfor small projects. However, the ‘smart’ in\
    \ smart city comes from the collective usage\nof the data from these individual\
    \ sensing units to perform complex decisions while\ndelivering services to citizens.\
    \ The collective use of this data enables its analysis over\na wider scope compared\
    \ to individual levels so as to determine long term patterns\nand provide meaningful\
    \ insights to support services. The number of such IoT devices\ncurrently present\
    \ in the world [34] are multiple times that of the world population.\nTo enable\
    \ these devices to exchange data, wireless technologies need to be used as\nphysical\
    \ connections would, for one, be too costly (where ever they can be used),\nsecond,\
    \ would not satisfy the mobility requirements that are typical of many smart\n\
    city applications. The internet has provided connectivity to computers, smartphones\n\
    and other electronic devices around the world with each other, allowing for instant\n\
    17\nTable 3. Sensing Technologies for IoT Smart Cities by Smart City Component\n\
    Smart City Com-\nponent\nSensor Type\nReferences\nSmart Agriculture\nAmbient,\
    \ Chemical, Hydraulic, Other sen-\nsors\nSmart City Services\nAmbient, Chemical,\
    \ Hydraulic, Presence,\nOther sensors,\n[60][61][62]\nSmart Energy\nAmbient, Electric,\
    \ Motion\n[63][64]\nSmart Health\nBiosensors, Identification, Motion, Other\n\
    sensors\n[65][66][67]\nSmart Home\nAmbient, Chemical, Electric, Hydraulic,\nIdentification,\n\
    Motion,\nPresence,\nOther\nsensors,\n[63][68]\nSmart Industry\nAmbient, Biosensors,\
    \ Electric, Hydraulic,\nIdentification., Motion, Other sensors\nSmart Infrastructure\n\
    Ambient, Motion, Electric, Other sensors,\n[60]\nSmart\nTransporta-\ntion\nAmbient,\
    \ Chemical, Identification, Mo-\ntion, Presence, Other sensors\n[69][70][71]\n\
    transfer of information between them. However, for IoT the internet may not neces-\n\
    sarily be the only communication method [72] as many applications do not possess\n\
    edge devices that can connect to the internet. An application may consist of a\
    \ local\nnetwork of sensing units which can exchange data between them and rely\
    \ on a multi-\nhop communication protocol to send data to a central node, hub\
    \ or gateway. The\ngateway might be fixed and would be connected to the internet,\
    \ thereby relaying any\nmonitored data to the cloud for further processing or\
    \ use. It might also be possible\nthat devices within an application may use many\
    \ different protocols with the central\nnode having the capability to communicate\
    \ with all of them, a common case for such\narchitectures is the smart home where\
    \ manufacturers produce devices using propriety\nor incompatible protocols for\
    \ which a hub may be used, an example of such a system\nwas provided in [73] and\
    \ several hubs are commercially available. In this section, we\ndiscuss the network\
    \ types, topologies and protocols used in the Internet of Things for\nSmart City\
    \ applications as illustrated in Figure 5. We later provide a comparison of\n\
    these protocols in Table 4.\n3.4.1\nNetwork Topologies\nThere are three IoT network\
    \ topologies, point to point, star and mesh [74]. The first\ntype of topology\
    \ is the point to point topology where devices are connected to each\nother sequentially\
    \ in a point to point manner. Point to point networks introduce\ndata hops for\
    \ packets that need to be sent to other nodes as data needs to go through\neach\
    \ node in the path of the two nodes wanting to exchange data. Point to point\n\
    networks are not very popular in IoT systems as it ranks low on fault resiliency\
    \ and\nwill breakdown if there is a fault in any of the intermediate nodes. In\
    \ Star topology,\n18\nall units in a network are connected to a central node or\
    \ gateway and cannot send data\nto each other directly. In order to perform an\
    \ exchange of data among themselves, the\ndevices need to send it through the\
    \ central node. Star topology networks, with their\ncentral node structure provide\
    \ a natural aggregation scheme for data collection within\nthe internet of things,\
    \ however, large networks consisting of many devices, which can\nbe the case in\
    \ most smart city applications, may result in high latency and possible\nbottlenecks\
    \ in high information throughput scenarios. Star topology has been used in\nvarious\
    \ applications including disaster management [75] and environmental sensing\n\
    [76]. The last type of network topology that is used in IoT is the Mesh network\n\
    topology, mesh networks allow all individual devices to communicate between them.\n\
    By enabling communication between the nodes in a network, mesh topology offers\n\
    a larger range as data transmitted towards a certain node can make multiple hops\n\
    through the network, this also increases the networks resilience as alternate\
    \ paths\ncould be used if packet delivery fails due to any node becoming faulty.\
    \ In fact, such\ntopologies have been used in smart homes [77] as well as in smart\
    \ grids [78]. There are\nother topologies which have not been mentioned, for,\
    \ e.g., tree (which has multiple\nstar networks connected in a point by point\
    \ fashion).\n3.4.2\nNetwork Architectures\nNetwork Architecture refers to the\
    \ structure of the network used for a given appli-\ncation. As discussed earlier,\
    \ the ‘things’ in IoT may not necessarily be connected\nthrough the internet,\
    \ in fact a distributed connectivity structure may be imple-\nmented with only\
    \ one unit in the network being capable of sending data to the\ncloud depending\
    \ on the requirement. Work in [72] mentions three types of network\narchitectures\
    \ that are used for smart cities based on IoT. These are Home Area\nNetworks (HANs),\
    \ Wide Area Networks (WANs) and Field/Neighborhood Area Net-\nworks (FANs/NANs).\
    \ Home Area Networks are short range networks and are usually\nused to transmit\
    \ information to a central node which is responsible for data collection\nbefore\
    \ it is sent to the cloud. Communication within the network is performed using\n\
    some low power communication protocol such as Zigbee, Bluetooth, Wi-Fi etc. HANs\n\
    are very popular in smart homes where they are used to gather power consumption\n\
    and times of operation data from a multitude of appliances which are then sent\
    \ to\na smart meter as part of a smart grid [79]. The second type of network architecture\n\
    is Field Area Networks (FANs), sometimes also called Neighborhood Area Networks\n\
    (NANs). Field Area Networks have a larger communication range than HANs and\n\
    are used to provide connection between a customer (for, e.g., in a smart grid)\
    \ to the\nutility company. Wide Area Networks are used for network structures\
    \ that require\ncommunication over large distances. These networks are not as\
    \ dense as HANs or\nFANs and utilize technologies such as cellular services, wired\
    \ connections such as fiber\noptics as well as a class of low power protocols\
    \ designed for WANs themselves [80].\nWANs are used in a variety of smart city\
    \ applications including Smart Grids where\nthey are used to connect multiple\
    \ substations together or exchanging data between\nthe customer and the substation\
    \ [81].\n19\n3.4.3\nNetwork Protocols\nThe type of network to use depends on the\
    \ requirements of the application. It is\nimperative that the communication protocol\
    \ used in a smart city application meet\nthe desirable quality of service (QoS).\
    \ Several protocols have been used in the internet\nof things for smart cities\
    \ [48, 82, 83, 84], herein, we discuss the traits of the most\npopular wireless\
    \ networking protocols used in smart cities.\n3.4.3.1\nRFID\nRadio Frequency Identification\
    \ (RFID) utilizes radio frequencies\nto transmit and receive data. RFID communication\
    \ consists of two types of devices,\none device is the Reader and the other is\
    \ called the Tag. The Reader is usually\npowered and once a tag comes in the vicinity\
    \ of the reader, an exchange of information\ntakes place after authorization as\
    \ the tag harvests the energy from the reader. Such\ntags are called passive tags,\
    \ there are also active tags which are do not depend on the\nreader for their\
    \ power. Depending on the standard, RFID can operate on different\nfrequencies\
    \ in the radio frequency spectrum between 125 KHz to 928 MHz and can\nbe used\
    \ over short ranges. They are used in applications such as smart transport\n(toll\
    \ tax collection, parking), smart health and more.\n3.4.3.2\nNear Field Communication\n\
    Near Field Communication (NFC) is very\nsimilar to RFID, however, the structure\
    \ of NFC communication doesn’t consist of\ntags and readers. Unlike RFID, both\
    \ devices which want to communicate using NFC\nneed to be powered and data tranmission/reception\
    \ can take place in both directions\nunlike RFIDs. This enables the use of NFC\
    \ to control and configure devices unlike the\nRFID which cannot be used for measurement\
    \ or control tasks. NFC utilizes similar\nfrequencies to RFID but is used for\
    \ very short distances. NFC devices are popular\nfor applications involving payment\
    \ using smart phones and are also used in smart\nhomes.\n3.4.3.3\nBluetooth\n\
    Bluetooth is a low energy protocol popular in IoT applica-\ntions as it can support\
    \ an unlimited number of nodes [82]. The protocol is designed\nfor short range,\
    \ low bandwidth communication in an arrangement where devices can\neasily exit\
    \ or enter the network. Bluetooth natively supports the star topology as it\n\
    has a master device at the center of the communication mechanism. It operates\
    \ in\nthe 2.4 GHz ISM band and can have maximum data rates of 2 Mbps. Bluetooth\
    \ has\nbeen widely used in smart home due to it providing a direct connection\
    \ interface to\nsmart phones without the need for any intermediary hub device.\n\
    3.4.3.4\nZ-Wave\nZ-Wave or Zensys wave is a low power protocol developed to\n\
    be used in home automation applications. It is a low speed protocol with a short\n\
    range, operating in the frequencies of 868 MHz and 900 MHz. It operates in a master\n\
    slave fashion where a master can have multiple slave devices which can respond\
    \ to\ncommands from the master node. Therefore this is well suited for applications\
    \ where\na central control element is present and needs to gather data from multiple\
    \ sensing\nunits such as smart homes and smart healthcare systems.\n20\n3.4.3.5\n\
    Li-Fi\nLi-Fi (Light Fidelity) uses visible light instead of radio frequency\n\
    (RF) to exchange data. The advantage with using Li-Fi over RF communication is\n\
    that it can utilize already present lighting systems which also results in conservation\n\
    of power [85]. It offers very high speeds of data transfer for short distances\
    \ and has\nbeen used in parking systems.\n3.4.3.6\nWi-Fi\nWi-Fi (Wireless Fidelity)\
    \ operates using wireless frequencies in the\n2.4 GHz and 5 GHz bands to provide\
    \ high speed internet connectivity in a limited\ndistance. Wi-Fi is popular in\
    \ many smart city applications as it provides ready to\nuse interface to smart\
    \ phones, computers and other wearable gadgets.\n3.4.3.7\nZigbee\nThe ZigBee protocol\
    \ was developed as a low power low cost pro-\ntocol for wireless sensor networks\
    \ (WSNs) and has evolved to be used in the Internet\nof Things. The ZigBee protocol\
    \ operates in the 868 MHz/915 MHz/2.4 GHz band\nand offers moderate data transfer\
    \ speeds with distances similar to Wi-Fi in a multi-\nhop data transfer scheme.\
    \ Zigbee radios are low cost devices and therefore it is a\npopular protocol used\
    \ by many manufacturers of smart home, smart healthcare de-\nvices. A ZigBee network\
    \ will have three devices, one called the coordinator which\nis the controller\
    \ of the network, the router which is responsible for moving data to\nother devices\
    \ and the ZigBee end device (sensors and actuators).\n3.4.3.8\nWi-SUN\nThe Wireless\
    \ Smart Utility Network (Wi-SUN) is a network\napproved by Institute of Electrical\
    \ and Electronic Engineers (IEEE) and is used in\nfield area networks for utility\
    \ metering, automation of distribution for utilities such\nas electricity, gas\
    \ etc. and also for demand response systems for utility-based appli-\ncations.\
    \ It supports IPv6 addressing and can be used in star or mesh configuration\n\
    where it also allows for multi-hop communication [86].\n3.4.3.9\nCellular\nCellular\
    \ technologies refers to 3G, 4G and 5G communications.\nAlong with Bluetooth and\
    \ Zigbee, they are the most popular IoT enabling technolo-\ngies. Cellular communication\
    \ provides high data rate and supports more content rich\napplications compared\
    \ to the other protocols. With the long range they provide, they\nare preferred\
    \ for a variety of applications where power is not an issue. Depending on\nthe\
    \ technology, cellular bands range from 600 MHz to 80 GHz with very high data\n\
    rates.\n3.4.3.10\nLoRaWAN\nLoRaWAN stands for Long Range Wide Area Network (Lo-\n\
    RaWAN) and it is a Low Power Wide Area Network (LPWAN) that consists of several\n\
    gateways and multiple end devices with the gateways connected to a back-end net-\n\
    work server. The back-end server provides connection to the cloud. End devices\
    \ do\nnot have a fixed association with a specific gateway and may send data to\
    \ multiple\ngateways when it needs to transfer data to the cloud.\n21\n3.4.3.11\n\
    6LoWPAN\n6LoWPAN which is short for IPv6 over Low Power Net-\nworks was created\
    \ by the Internet Engineering Task Force (IETF) specifically for\ninternet of\
    \ things applications with the aim of making it possible for providing in-\nternet\
    \ connectivity to small devices. It is an IP based network and leverages IPv6\n\
    communication. This is a short-range network operating in Industrial, Scientific\
    \ and\nMedical (ISM) bands.\n3.4.3.12\nSigFox\nSigFox is a proprietary standard\
    \ developed by SigFox Inc., France.\nIt uses unlicensed bands to perform ultra-narrowband\
    \ bidirectional communication\nwith low speeds [87]. SigFox has a similar architecture\
    \ to LoRaWAN and like Lo-\nRaWAN and 6LoWPAN, SigFox is a popular LPWAN in the\
    \ IoT domain offering\nsufficiently large distances of communication of up to\
    \ 50 km. SigFox finds applica-\ntions in security in buildings, smart lighting\
    \ and environmental monitoring.\n3.4.3.13\nNB-IoT\nNB-IoT (Narrow Band IoT) is\
    \ a type of LPWAN which oper-\nates on Global System for Mobile Communications\
    \ (GSM) and Long-Term Evolution\n(LTE) bands. In fact, it can operate using the\
    \ same hardware with a software up-\ngrade as it is considered a bare bones version\
    \ of LTE. It allows for connecting up to\n100,000 devices per cell.\nTable 4.\
    \ Comparison of Network Technologies for IoT Smart Cities\nArchitecture\nTechnology\n\
    Frequency/Medium Data rate\nRange\nTopology\nHome\nArea\nNet-\nworks (HANs)\n\
    NFC\n125\nKHz,\n13.56\nMHz/860 MHz\n106 Kbps, 212\nKbps or 424\nKbps\n10 cm\n\
    Point to Point\nRFID\n125\nKHz,\n13.56\nMHz/902-928 MHz\n4 Mbps [82]\n3 - 10 m\n\
    Point to Point\nLi-Fi\nLED Light\n1 – 3.5 Gbps\n[85]\n10 m\nPoint\nto\npoint,\n\
    Star,\nMesh\nBluetooth\n2.4 GHz\nUp to 2 Mbps\n240 m\nStar\nZ-wave\n868 MHz/900\
    \ MHz\n40-100 Kbps\n30 – 100 m\nMesh\nZigbee\n868\nMHz/915\nMHz/2.4 GHz\n250 Kbps\n\
    Up to 100 m\nMesh,\nStar,\nTree\nWi-Fi\n2.4 GHz/5 GHz\n54 Mb/s, 6.75\nGb/s\n140\
    \ m , 100 m\nTree\n6LOWPAN\n[82]\n868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n250\nKbps\n\
    10 - 100 m\nMesh, Star\nField/Neighborhood\nArea\nNetworks\n(FANs/NANs)\nWi-SUN\n\
    868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n300\nKbps\nUp to 4 Km\nStar, Mesh\nWide\nArea\n\
    Net-\nworks (WANs)\nNB-IOT\nLicensed LTE bands\n200 Kbps\n1 - 10 Km\nTree\nLoRaWAN\n\
    433\nMHz/868\nMHz/915 MHz\n50 Kbps\n5 - 20 Km\nStar\nof\nStar\n(nested star)\n\
    Sigfox\n433\nMHz/868\nMHz/915 MHz\n100 bps\n10 – 50 Km\nOne hop star\n3G\n1.8\
    \ – 2.5 GHz\n2 Mbps\n-\nTree\n4G\n600 – 5.925 GHz\nup to 1 Gbps\n-\nTree\n5G\n\
    600 - 80 GHz\nUp to 20 Gbps\n-\nTree\n22\nHome Area \nNetworks (HANs)\nNFC\nRFID\n\
    Li-Fi\nBluetooth\nZ-Wave\nZigbee\nWi-Fi\n6LoWPAN\nField/ Neighborhood \nArea Networks\
    \ \n(FANs/NANs)\nWi-SUN\nWide Area Networks \n(WAN)\nNB-IoT\nLoRaWAN\nSigFox\n\
    Cellular\ndistance\n1 Km\n10 Km\n100 Km\nFigure 5. Network Technologies for IoT\
    \ Smart Cities.\n3.5\nSecurity and Privacy in Smart City IoT\nSmart Cities involve\
    \ the transmission of sensing data, control information through\nthe internet\
    \ as well as local networks. Moreover, several components in smart cities\ntend\
    \ to critical aspects of a citys operation and are highly intertwined with the\
    \ social\nand private life of its citizens. Consequently, security and privacy\
    \ in Smart Cities\nis of great importance and has been of high interest to researchers\
    \ [51, 88, 89, 90,\n91, 92]. The topic of Security of IoT has been covered in\
    \ [93] who deliberate upon\nthe challenges faced in the different architectures\
    \ of the IoT and present issues and\nsolutions. We cover security for IoT in smart\
    \ cities so as to highlight issues that are\npertinent to in the Smart City context\
    \ and to complete our discussion on this topic.\nSmart Cities are enabled by collecting\
    \ data through sensors within a city as well\nas its populace, process it and\
    \ then mine it to provide a better quality of life to the\npeople living. These\
    \ sensors can provide an estimate about the internal state of a\ncity’s components\
    \ such as transportation, power system, building condition/state,\nhuman mobility\
    \ and more. All of this data is sent to the cloud where it is processed\nand mined.\
    \ However, there are several issues that pertain to how these data are\nsent and\
    \ used and raises questions about integrity, protection and the confidentiality\n\
    23\nAttackers\nHackers\nSpies\nTerrorists\nCorporate \nRaiders\nProfessional \n\
    Criminals\nVandals\nVoyeurs\nTool\nPhysical \nAttack\nInformation \nExchange\n\
    User \nCommand\nScript or \nProgram\nAutonomous \nAgent\nToolkit\nDistributed\
    \ \nTool\nData Tap\nVulnerability\nDesign\nImplementation\nConfiguration\nAction\n\
    Probe\nScan\nFlood\nAuthenticate\nBypass\nSpoof\nRead\nCopy\nSteal\nModify\nDelete\n\
    Target\nAccount\nProcess\nData\nComponent\nComputer\nNetwork\nInternetwork\nUnauthorized\
    \ \nResult\nIncreased \nAccess\nDisclosure of \nInformation\nCorruption of \n\
    Information\nDenial of \nService\nTheft of \nResources\nObjectives\nChallenge,\
    \ \nStatus, Thrill\nPolitical Gain\nFinancial Gain\nDamage\nGovernments\nBusiness\n\
    Consumers\nTransport \nSystems\nUtilities\nCity \nAdministration\nSocial Panic\
    \ / \nUnrest\nBusiness Trust \nManipulation\nFigure 6. Modified CERT Attack Taxonomy\
    \ for Smart Cities.\nof this process. In fact, this concern is not unwarranted\
    \ for, in 2015 an attack on\nthe Ukranian power grid which left 225,000 people\
    \ without power [94] opened the\nworlds eyes to the very real threat posed by\
    \ cyber attackers. Data gathered in Smart\nCity applications can be used to perform\
    \ many undesired acts, GPS devices that are\npresent in every phone and most vehicles\
    \ are susceptible to providing information\nabout a persons location, habits as\
    \ well as lead to privacy issues as discussed in [91],\npower consumption and\
    \ ambient sensor data from a building may indicate to occu-\npancy [95] and even\
    \ indicate to the individual identities [96]. This information may\nbe used by\
    \ bad actors to carry out unlawful acts causing risk to life and property.\nTo\
    \ secure the Internet of Things for Smart Cities, typical security schemes might\
    \ not\nbe as effective in many cases and new methods will need to be developed\
    \ to cope\nwith the security and privacy issues in IoT for Smart Cities. In order\
    \ to provide a\nstandardized framework and terminology for discussing security\
    \ attacks, we adapt the\nstandard attack incident taxonomy [97] suggested by the\
    \ Computer Emergency Re-\nsponse Team (CERT) which was established by Defense\
    \ Advanced Research Projects\nAgency (DARPA) for use towards IoT for Smart Cities.\
    \ This is shown in Figure 6.\nThere are different types of security and privacy\
    \ issues in IoT in Smart Cities,\nthey exist on each of the three levels of the\
    \ IoT architecture, application software\nlayers, network layer and the perception\
    \ layer along with some system wide issues, a\ndiscussion is provided for each\
    \ of them. Furthermore, Table 5 provides a summary\nof the security and privacy\
    \ issues in IoT for Smart Cities and the counter measures\nthat one can take to\
    \ mitigate them.\n3.5.1\nApplication Software Layers\nApplication software layers\
    \ are comprised of the Middleware, Application and Busi-\nness Layers. Security\
    \ and privacy in the application software layers tend to issues\nrelating to storage\
    \ of data and its usage. These are data visibility, access and injec-\ntion.\n\
    24\n3.5.1.1\nData Visibility/Identification\nOnce data is gathered, it is sent\
    \ to the\ncloud where it is stored and mined to make inferences. Since the cloud\
    \ would be used\nby multiple entities with different standards of security protocols\
    \ and practices, it is\nextremely important that data stored in the cloud is encrypted\
    \ so as not to allow its\nexposure to unwanted entities. Any data stored in plain\
    \ form would be a risk to not\nonly user privacy but also company rapport.\n3.5.1.2\n\
    Data access/Secondary Use\nAccess control is also a major issue in\nsmart city\
    \ data. Most Smart City applications rely on the usage of data from different\n\
    applications to provide smart services, thus resulting in the gathered data to\
    \ be used\nby many different enterprises. To allow this to take place smoothly\
    \ while preserving\nprivacy, suitable access control schemes will need to be devised\
    \ to allow for responsible\naccess to users of this data. A well-defined hierarchy\
    \ of data users will need to be\ndeveloped and implemented to limit access only\
    \ to intended authorized personnel.\nInformation flow control should also be employed\
    \ that can track data flow as access\nto it is made and to detect any violation\
    \ of access or usage rules. Moreover, data\nmashups that will occur in the cloud\
    \ where multiple entities merge their data to\nwork on some common goal, should\
    \ be carried out with proper oversight.\nData\nanonymization may also be required\
    \ in such a scenario where specific values may be\nconverted in to a range perhaps\
    \ ( e.g., using k-anonymity [90]) and unwanted data be\ndeleted as necessary.\
    \ Blockchain has been suggested to be used for access control as\nwell as access\
    \ tracking of users in IoT applications where each user access to a service\n\
    or an application ends up as a transaction to form the applications IoT trail\
    \ [98].\n3.5.1.3\nData Injection/Data Integrity\nData injection refers to the\
    \ injection\nof false information or modification information about a user in\
    \ the system after\ngaining access. Since data is typically stored in databases,\
    \ SQL injection involves\nan attacker inserting queries to modify data or make\
    \ false data insertions into the\ndatabase. This can have far reaching consequences\
    \ for smart city applications such\nas patient record manipulation as well as\
    \ manipulation or deletion of government\nrecords. SQL injection prevention schemes\
    \ involve the validation of data before using\nit [99] such as positive pattern\
    \ matching. It also involves limiting database access\nbased on the user requirements\
    \ and performing penetration testing.\n3.5.2\nNetwork Layer\nLike other networks,\
    \ the IoT in Smart Cities are also susceptible to network attacks\nsuch as Denial\
    \ of service, Eavesdropping, Man in the middle attack, Side Channel\nand spoofing\
    \ attacks [100]. We discuss these attacks and discuss remedial actions\nthat should\
    \ be taken to prevent them.\n3.5.2.1\nMan in the Middle Attack\nMan in the middle\
    \ (MITM) attack refers\nto the interception of data on the network by faking the\
    \ identity of a network node\nor device. This is carried out by appearing as the\
    \ intended recipient to the sender\n25\nand the original sender to the recipient\
    \ by unauthorized actors. To prevent this,\nthe exchange of data between two entities\
    \ should employ cryptographic protocols\nwhich can ensure secure communication.\
    \ Many public networks do not make use of\nencryption when exchanging data, this\
    \ endangers user data and can give access to\nunwanted persons to user information\
    \ [90]. Policies need to be devised to allow for\nsuitable data communication\
    \ standards for such networks while keeping the user as\nwell as commercial interests\
    \ in mind.\n3.5.2.2\nEavesdropping/Sniffing Attack\nEavesdropping refers to the\
    \ listening\nof data on the network. In eavesdropping an unauthorized entity joins\
    \ the network\nand can listen to the data that is being exchanged between the\
    \ devices on the network.\nTo avoid this, strategies include the use of authenticate\
    \ always protocols which initiate\nauthentication steps whenever devices need\
    \ to communicate with each other. This will\nensure that no unwanted users are\
    \ allowed access to network traffic to prevent such\nattacks. Moreover, industry\
    \ standard security protocols such as the Transport Layer\nSecurity (TLS), Wi-Fi\
    \ Protected Access 2 (WPA2) should be used for authenticating\nremote access.\
    \ Furthermore, remote sessions should have time-outs implemented to\nensure that\
    \ mistakes are not made by forgetful employees.\n3.5.2.3\nSide Channel Attack\n\
    Side Channel Attacks refer to the extraction\nof information by observing operation\
    \ characteristics of the implemented computer\nalgorithms or systems such as power\
    \ consumed, time taken, traffic analysis, fault\nanalysis, acoustic analysis [101].\
    \ Side Channel attacks don’t give nonpermitted parties\naccess to the data within\
    \ the network but may allow them to determine important\ninformation about the\
    \ system, such as the protocol used, or allow them to drop\npackets so as to degrade\
    \ performance of the network. One solution to counter network\ntraffic side channels\
    \ attacks is to saturate network bandwidth to prevent patterns\nfrom being observed.\
    \ Another popular method of preventing side channel attacks is\nto make use of\
    \ masking [102].\n3.5.2.4\nDenial of Service Attack\nDenial of Service (DOS) or\
    \ Distributed DOS\n(DDOS) attacks involve an entity getting access to the network\
    \ and using legitimate\nnodes within it to flood the target with unnecessary requests\
    \ to consume network\nbandwidth and degrade quality of service. With a smart city\
    \ depending on sensors\nto provide it with a ‘view’ of the city, DOS attacks can\
    \ make the smart city system\nblind which can lead to loss of property and life.\
    \ Countermeasures for DOS attacks\ninvolve anomaly detection by monitoring of\
    \ network data to check for any irregular\nbehavior. Artificial Intelligence has\
    \ found applications in this area as noted by [103],\nfor, e.g., it has been used\
    \ to identify abnormal data in smart grids [104] as well as\ndetecting attacks\
    \ [105, 106].\n3.5.2.5\nSpoofing Attack\nIn a spoofing attack, an attacker adds\
    \ itself to the\nnetwork by appearing to be a legitimate device on the network,\
    \ thereby allowing\nthem to send irregular or abnormal data to upset normal operation\
    \ of a smart city\n26\nsystem. Due to the varying nature and types of IoT devices\
    \ having different levels of\nbuilt-in security, spoofing is a particularly dangerous\
    \ attack for IoT systems. Methods\nto prevent spoofing are the use of cryptography,\
    \ hybrid encryption [107] as well as the\nuse of blockchain [108] to validate\
    \ data exchange and as well as authenticate devices.\n3.5.3\nPerception Layer\n\
    Perception layers attacks refer to physical attacks on an IoT based smart city\
    \ system.\nThis requires the physical presence of an attacker near the sensing\
    \ elements in an IoT\nsystem. We cover these attacks to provide a holistic assessment\
    \ of the security and\nprivacy issues in IoT Smart Cities. Tempering and Radio\
    \ Interference (jamming)\nare attacks which can affect the performance of smart\
    \ city systems. Tempering may\noccur during the development or the manufacturing\
    \ process while jamming can take\nplace due to a generation of radio frequencies\
    \ which interfere with the frequencies\nused by devices on the network to exchange\
    \ data. To circumvent this, policies may\nbe incorporated into software which\
    \ alert businesses and other Smart City partners\nto missing or abnormal data\
    \ from sensing devices.\n3.5.4\nSystem Wide Issues\n3.5.4.1\nData Leakage\nData\
    \ leakage refers to the unintentional conveyance of\ninformation about subjects\
    \ in smart cities. The many data sources in smart cities\nmay contain information\
    \ related to a user’s identity, health, quality of life etc. Smart\nCity application\
    \ managers use this data to improve their services and provide a bet-\nter user\
    \ experience, however, it is possible that this data might be shared with third\n\
    party entities. It is therefore necessary to anonymize data before such assignments\n\
    are taken. Data leakage can also take place when devices within a network perform\n\
    discovery tasks and may provide personal information to rogue nodes in the network.\n\
    In Smart Grids, power consumption data should be anonymized by considering the\n\
    data on a neighborhood level rather than on the individual level, moreover, systems\n\
    could be installed in homes using batteries to modify the demand response signal.\n\
    Data aggregation is an important tool in preserving individual privacy and preventing\n\
    data leakage. Moreover, data should be encrypted when sending it over the network\n\
    so that any unauthorized access is avoided. Another strategy would be to use data\n\
    minimization. Typically, sensors used in smart cities will gather data of less\
    \ ‘interest’\nin addition to data of interest. For, e.g., navigation systems many\
    \ times record loca-\ntion information even when not in use or video applications\
    \ such as facial recognition\nsystems typically record other activities apart\
    \ from being activated whenever a face is\nobserved in the video. This extra information\
    \ increases the risk of data leakage. Data\nminimization can be employed in such\
    \ cases to limit the data that is being gathered\non the user.\n3.5.4.2\nTrustworthiness\n\
    Apart from the technical steps that need to be taken\nto provide a secure usage\
    \ experience of smart city applications and to encourage its\nuse, it is important\
    \ that smart city users be provided clear policy guidelines to how\n27\nTable\
    \ 5. Security and Privacy issue for IoT Smart Cities\nLayer\nIssue\nCountermeasure\n\
    Application\nSoftware\nLayers\nData\nvisibility/Identifica-\ntion\n- Use of encryption\
    \ to store data\n(Middleware,\nApplica-\ntion and Business)\nData access/Secondary\
    \ use\n- Access control schemes based on user hi-\nerarchy\n- Data anonymization\
    \ be employed\n- Use of blockchain for tracking user access\nData\ninjection/Data\n\
    in-\ntegrity\n- Use of data validation before usage\n- Limiting data access\n\
    - Query parameterization\n- Penetration testing\nNetwork Layer\nMan in the middle\
    \ attack\n- Use of cryptographic protocols for data\nexchanges\n- Encrypting data\
    \ on public networks\nEavesdropping/Sniffing\nat-\ntack\n- Use always authenticate\
    \ protocols\n- Remote access should use industry ac-\ncepted protocols such as\
    \ TLS, WPA2\n- Timeouts for remote sessions\nSide channel attacks\n- Bandwidth\
    \ saturation\n- Masking to prevent similar operational\npatterns\nDenial of Service\n\
    - Check irregular data requests (AI has\nbeen shown to be of use here)\nSpoofing\
    \ attacks\n- Use of cryptography\n- Use of hybrid encryption\n- Use blockchain\
    \ to validate data exchange\nas well as authenticate devices\nPerception Layer\n\
    Tempering and Jamming\n- Software policies for missing data\nSystem Wide\nData\
    \ leakage\n- Data anonymization\n- Data minimization\n- Data aggregation\nTrustworthiness\n\
    - Provide clear policy guidelines to users\n- Flexible policy development in consulta-\n\
    tion with users\ncompanies providing them these services will manage their data.\
    \ Transparency in this\nregard will help increase user trust and the feedback\
    \ will enable companies to develop\nbetter data privacy mechanisms. Another way\
    \ trust could be developed would be for\nthe companies to provide customers who\
    \ are vary of data collection, certain options\nin policies where they could choose\
    \ which parts of the data collection are acceptable\nto them and which aren’t.\n\
    4\nSWOT Analysis\nTo complete this discussion, we perform a Strength Weaknesses\
    \ Opportunities Threat\n(SWOT) analysis on the use of IoT for Smart Cities that\
    \ discusses the strengths that\nIoT offers for Smart cities, the weaknesses in\
    \ the current implementation scenario,\nthe opportunities which exist for future\
    \ work in this area as well as the threats that\nIoT application to smart cities\
    \ faces, a summary of our discussion has been given in\n28\nTable 6. SWOT Analysis\
    \ for IoT in Smart Cities\nPositive\nNegative\nStrengths\nWeaknesses\nInternal\n\
    - Sustainable living\n- Lack of data control policies\n- Improved quality of life\n\
    - Laws need to be developed\n- Efficient city operations\n- Interoperability of\
    \ networks\n- Well suited for big data algorithms\n- Incompatible sensor standards\n\
    - Scalability of applications\n- Myriad of different application\nframeworks\n\
    - Real-time/fast response due to distributed IoT\nstructure\n- Reduced costs\n\
    - Robustness\n- Enable heterogenous system connectivity\nOpportunities\nThreats\n\
    External\n- Development of new sensor technologies.\n-\nTrustworthiness\nissues\n\
    among\nusers\n- Development of low power and higher speed com-\nmunication schemes\n\
    - Network attacks\n- Development of Encryption techniques for stor-\nage and data\
    \ exchange\n- Data theft\n- Development of Data processing for privacy\npreservation\
    \ techniques\n- Data leakage\n- Development of new city services\n- Development\
    \ of scalable, explainable AI\nTable 6.\n4.1\nStrengths\nIoT smart city strengths\
    \ are the fact that they provide an improved quality of life for\na city’s population\
    \ along with reduction of costs in terms of operation and also enable\ncities\
    \ to be sustainable. IoT enables sensors and devices to be deployed throughout\
    \ a\ncity to give an overview of the state of the city’s main functions such as\
    \ transportation\nsystems, electric, water and gas distribution as well as crime\
    \ monitoring to name\na few. This real time information helps city administration,\
    \ businesses and other\nstakeholders to provide better services to people, increase\
    \ the effectiveness of those\nservices and reduce the cost through efficient operation.\n\
    On the technical side, IoT data has made possible to use data analytics to gauge\n\
    various aspects of the multitude of services which are being provided in the city\
    \ as\nwell as to determine interactions between them and utilize that information\
    \ for better\ndecision making to make life easier for citizens. Furthermore, the\
    \ distributed nature\nof IoT systems and the flexible architectures which enable\
    \ fluidity through movement\nof sensing units is easily scalable thereby requiring\
    \ little additional cost to upgrade\nand expand currently deployed systems. Moreover,\
    \ this distributed architecture also\nmakes such systems very robust to faults\
    \ thereby increasing reliability of deployments\nand offering self-healing in\
    \ applications such as electricity systems.\n29\n4.2\nWeaknesses\nIoT in Smart\
    \ cities do suffer from some weaknesses in terms of technology, for, e.g.,\nthe\
    \ current deployment scenario has a myriad of different technologies relating\
    \ to\nnetworks, hardware platforms and software frameworks which do not often\
    \ work to-\ngether very well as discussed. Different standards’ bodies such as\
    \ the IETF, European\nTelecommunications Standards Institute (ETSI), IEEE and\
    \ other organizations have\nbeen contributing with standards for communication,\
    \ network discovery, identifica-\ntion, management of devices etc. However, the\
    \ sheer number of ‘standards’ with\nmany of them not being compatible with each\
    \ other has not fully solved the inter-\noperability problem and this can cause\
    \ hurdles for expansion of IoT systems without\na significant overhaul of system\
    \ components. Another problem currently facing IoT\nsystems is the lack of data\
    \ policies and legislation. The concern here is that data\npolicies are not mature\
    \ enough to regulate how data is handled in IoT systems, as\nhas been discussed\
    \ previously. This is a major problem given the growing issue with\nuser data\
    \ privacy in a connected world.\n4.3\nOpportunities\nIoT in Smart cities presents\
    \ many opportunities to researchers and businesses alike\nin lieu of mitigating\
    \ the weaknesses and also in the provision of new city services.\nThe data gathered\
    \ by the sensors in IoT systems has the potential to provide a\nholistic overview\
    \ of the city’s state allowing for the use of big data algorithms to\ndevelop\
    \ new applications and services. For researchers in the data analytics domain,\n\
    this heterogenous data provides a wonderful opportunity for the development of\
    \ new\ndata science algorithms for service delivery. There is a large monetary\
    \ value towards\nthe development and usage of computationally cheap encryption\
    \ techniques, efficient\ndata storage methods and networking technologies to make\
    \ IoT deployment easier\nand cheaper.\nDevelopment of new sensor technologies\
    \ is another opportunity for\nresearchers in IoT for smart cities.\nThe development\
    \ of newer, efficient, low-cost\nsensors would aid to the creation of IoT services\
    \ and enable even wider usage.\n4.4\nThreats\nWith a connected system, there are\
    \ several threats that come with IoTs for Smart\nCities involving trust issues\
    \ among users, privacy concerns due to network attacks,\npotential data theft\
    \ etc. Privacy and security are the most important concerns of\nIoT applications,\
    \ with such a personalized interaction mechanism between people\nand devices as\
    \ is the case of smart cities, the risks for privacy breaches, data theft\nand\
    \ leakages are high and this is a constant concern for service users as well as\n\
    providers. Numerous attacks on Smart City systems have exposed the vulnerability\n\
    of this technology to cyber attacks and also demonstrated the consequences that\
    \ it\nhas on the population. Traditional security procedures and methods such\
    \ as access\nauthentication, routing and networking might not be enough or possible\
    \ in many IoT\ndeployments due to IoT devices typically not having sufficient\
    \ computing capabilities,\n30\nthis has exacerbated the privacy and security concerns\
    \ for IoT stakeholders. This can\nalso feed to a lack of trust by customers to\
    \ participate in smart city applications.\n5\nConclusions\nThis chapter presented\
    \ a broad coverage of the Internet of Things in Smart Cities.\nProviding a detailed\
    \ discussion of Smart Cities and its different domains, IoT was\npresented as\
    \ a vital enabler of smart city services and the various smart city architec-\n\
    tures and the challenges that are faced in the deployment of smart city applications\n\
    were deliberated upon. This was followed by a review of the sensing and networking\n\
    technologies used for such applications Finally, the security and privacy issues\
    \ faced\nby IoT based Smart Cities were discussed and a SWOT analysis is provided.\n\
    31\nCHAPTER III\nAI IN IOT SMART CITIES\n1\nIntroduction\nThis chapter provides\
    \ insight into different ways in which AI has been applied in\nthe IoT for Smart\
    \ Cities using the application of clustering, regression, classification\netc.\
    \ In addition, various applications, solutions and data used for implementing\
    \ the\noverall framework of Smart Cities are discussed in detail. along with the\
    \ types of\ndeployment used by these proposed approaches.\n2\nBig Data Algorithms/Artificial\
    \ Intelligence\nThe various sensors that make up the internet of things in a smart\
    \ city relay in-\nformation about the city’s state to the cloud. However, measuring\
    \ raw data is not\nenough, to utilize this data and to make the city ‘smart’,\
    \ data analysis is key. Data\nanalysis in smart cities has four layers, the first\
    \ is Data Acquisition, which deals with\nthe collection and storage of data, this\
    \ is followed by the Preprocessing layer which\nperforms operations (such as imputing\
    \ missing values, scaling, removing erroneous\ndata points etc.) on the data to\
    \ ensure that data is of suitable quality to be used for\nthe data analytics stage.\
    \ The data analytics stage involves the application of data\nscience techniques\
    \ on the data to extract patterns and insights which would be used\nfor policy\
    \ making, planning and other actions in the Service layer. In this section, we\n\
    focus our attention on the third stage of the data analysis process, i.e., data\
    \ analytics.\nData analytics in the Smart City based on the IoT involves the use\
    \ of Deep Learning\nand Machine Learning on the gathered data. The discussion\
    \ in this chapter considers\nthe following aspects of the use of AI (ML/DL) in\
    \ the IoT for smart cities:\n1. The type of application: This refers to the aim\
    \ of the application.\n2. Algorithm/Network: This refers to the algorithm being\
    \ used to perform the\ntask and can be any of the ML/DL algorithms covered.\n\
    3. System Architecture: System architecture refers to the IoT architecture pro-\n\
    posed for the covered work. This can be Cloud, Fog or Edge.\n4. Task: This refers\
    \ to the type of machine learning task being performed. This can\nbe classification,\
    \ clustering or regression. In this category, a brief description is\nalso presented\
    \ about what quantities/outcomes are being worked with.\n32\n5. Data Type: This\
    \ refers to the type of data being used. Data can be of two\ntypes, heterogeneous\
    \ or homogeneous. Heterogeneous refers to the use of data\nof different modalities\
    \ whereas homogenous refers to a single modality being\nused. The aim of providing\
    \ this information is to capture the complexity of the\ndata involved in an application.\n\
    2.1\nMachine Learning\nMachine learning (ML) has been a crucial element of smart\
    \ city application develop-\nment [109], helping in prediction (classification),\
    \ estimation (regression) and cluster-\ning tasks. Machine learning refers to\
    \ the set of approaches through which computers\ncan be used to learn from empirical\
    \ data [110] and has been used in smart cities\nin various applications. Since\
    \ there has been a lot of work in this area using ML\nalgorithms, we focus on\
    \ work in the last few years. It was found that most commonly\nused ML algorithms\
    \ have been the Support Vector Machine (SVM), Random Forests\n(RF), Decision Tree\
    \ (DT), Naive Bayes (NB), K-Means, K-Nearest Neighbor (K-NN)\nand Logistic Regression\
    \ (LR).\n2.2\nDeep Learning\nDeep learning is the use of successive layers of\
    \ Artificial Neural Networks (ANNs) to\nlearn patterns. The idea is that successive\
    \ non-linear layers of interconnected artificial\nneurons can be used to learn\
    \ patterns in data that simple machine learning algorithms\nmight not be able\
    \ to do. Deep learning architectures can process noisy data to provide\noutput\
    \ for classification and prediction tasks. This makes them very useful in the\n\
    Smart City environment where the IoT enables the collection of heterogeneous sensor\n\
    data which can be of varying nature. Data derived from sensors can be processed\
    \ to\nextract features or can be fed directly to deep learning algorithms which\
    \ can perform\nboth feature extraction as well as classification/prediction. Deep\
    \ Learning methods\nsuch as Recurrent Neural Networks (RNN)(Long Short-Term Machines\
    \ (LSTM) and\nGated Recurrent Units (GRU)), Convolutional Neural Networks (CNN),\
    \ Deep Neural\nNetworks (DNN) and Stacked Autoencoder Networks (SAE) were the\
    \ preferred deep\nlearning methodologies used for smart city applications and\
    \ our discussion revolves\naround the utilization of these methods.\n3\nAI Applications\
    \ for Smart Cities\nIn this section, the applications for of AI in smart cities\
    \ have been discussed, we also\nmention the kind of deployment as well as the\
    \ nature of data utilized to achieve their\ntask.\n3.1\nSmart Agriculture\nThe\
    \ major applications of AI in IoT for agriculture are crop monitoring/disease\
    \ de-\ntection and data driven crop care and decision making. Considering the\
    \ scarcity of\n33\nwater, the authors in [111, 112, 113] develop irrigation systems\
    \ which monitor and\ncontrol the amount of water being used for crops, all structured\
    \ around a cloud com-\nputing system. This problem has been devised both as a\
    \ classification as well as a\nregression problem as in [114], who develop a closed\
    \ loop water irrigation system using\nsupport vector regression and K-Means clustering.\
    \ The authors in [115, 116] propose\ncloud based greenhouse monitoring systems\
    \ using images and a host of physical pa-\nrameters from plants such as temperature,\
    \ humidity and light using several machine\nand deep learning methods. Plant disease\
    \ detection is also an important task within\nsmart agriculture and has been worked\
    \ on by the authors in [117, 118, 119, 120] who\npresent schemes for disease detection\
    \ for various crops including tomatoes and pota-\ntoes. The proliferation of sensing\
    \ systems in agricultural fields has also provided an\navenue for data driven\
    \ decision making and planning for farmers. This involves pre-\ndicting various\
    \ physical parameters which can affect crop growth like solar radiance\n[121]\
    \ and temperature, humidity, windspeed [122, 123, 124, 125, 126] to help in deci-\n\
    sion making in terms of plant care but also classification systems for recommending\n\
    crops to be sown [127, 128]. It is important to note that all of these implementations\n\
    are cloud based.\nThere have been some suggested methodologies for bringing fog\
    \ processing for AI\nin smart agriculture, for, e.g., in [129] a deep learning\
    \ entrusted to fog nodes (DLEFN)\nalgorithm is described to support efficient\
    \ use of resources and reduce cloud resource\nusage. However, as noted in [130],\
    \ who use an edge system for temperature prediction\nusing an LSTM, edge device\
    \ performance still lacks that of similar cloud systems but\nthe inclusion of\
    \ DL capable hardware does provide opportunities for further innova-\ntions. Previous\
    \ work by the same author [131], where they aimed to monitor crops\nfor frost\
    \ signs and trigger anti-frost measures, compared edge and cloud computing\nsystems\
    \ for outlier detection and determined that cloud implementations to provide\n\
    much better performance. However, they do note the potential for edge systems\
    \ to\nprovide highly responsive data analytics in smart agriculture. More applications\
    \ can\nbe envisaged for AI deployment in smart agriculture, for, e.g., monitoring\
    \ of crop\ngrowth, selection of the fertilizer and the timeline for it to be used\
    \ as well as targeted\napplication, pest detection and intelligent pesticide spraying\
    \ so as to reduce harm to\nthe environment, environmental monitoring to track\
    \ the effects of climate change and\nmore. Some of these applications have potential\
    \ to be deployed as edge computing\nsystems. A summary of the use of IoT based\
    \ AI in Smart Agriculture is presented in\nTable 7.\n3.2\nSmart City Services\n\
    A popular component of smart city initiatives is the management of waste and involves\n\
    having bins equipped with sensors and connected to the cloud to not only inform\
    \ the\nrelevant authorities of the need to empty them but also using AI to determine\
    \ the\nbest route to reduce fuel consumption. The use of IoT systems for waste\
    \ management\nhas been observed in the works of [133] who utilize IoT systems\
    \ to help reduce energy\nwastage in waste collection by municipalities. Hussain\
    \ et al. [134] develop a waste\nmanagement system that not only determines if\
    \ bins are full and need collecting\n34\nTable 7. AI use for Smart Agriculture\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nCrop\nMonitoring\n\
    /Plant care (Irriga-\ntion)\nLR [111]\nCloud\nClassification\n-\nDifferent\nstates\
    \ of crop [less water\netc])\nHeterogeneous\n(Temperature,\nSoil\nmoisture, Air\
    \ quality,\nSunlight etc)\nDT [113]\nCNN [112]\nClassification\n-\nDifferent\n\
    conditions of plants and soil\n[dry etc])\nHomogeneous\n(Im-\nages)\nSVR + K-Means\
    \ [114]\nRegression\n-\nPredicting\namount of moisture in soil\nHeterogeneous\n\
    (Soil moisture,\nSoil\ntemperature,\nAir\ntemperature,\nUltra-\nviolet\n(UV)\n\
    light\nradiation,\nRelative\nhumidity,\nWeather\nforecast data)\nCrop\nMonitoring\n\
    /Plant\ncare\n(Mon-\nitoring\nand\ndisease\ndetection)\nSVM [115]\nCloud\nRegression\n\
    -\nForecasting\ntemperature\nHeterogeneous (Tem-\nperature,\nHumidity,\nLight,\
    \ Soil moisture)\nSVM [118]\nRegression\n-\nDaily\ncrop\ngrowth\n(indirectly\n\
    from\nmeasured data)\nSVM [117]\nClassification\n–\nDifferent\ncrop conditions\n\
    Heterogeneous\n(Im-\nages, Gas)\nSVM + K-Means + CNN\n[116]\nClassification\n\
    -\nDifferent\nstages of tomato growth\nHomogeneous\n(Im-\nages)\nSVM [119]\nClassification\
    \ - Recognizing\nand detecting disease\nCNN [120]\nEdge\nData driven crop care\n\
    and decision making\n(Predicting\nphysical\nparameters)\nCNN + RNN(GRU) [122]\n\
    Cloud\nRegression - Prediction of\nTemperature, Humidity and\nWind speed\nHeterogeneous\
    \ (Tem-\nperature,\nHumidity,\nWind\nspeed,\nLoca-\ntion\nof\nmonitoring\nstation,\
    \ Time, Rain-\nfall, Solar radiation)\nRFC[126]\nRNN (LSTM) [123]\nDNN [125]\n\
    RNN (GRU) [124]\nDNN [121]\nRegression - Prediction of\nsolar radiance\nRNN (LSTM)\
    \ [132]\nEdge /Cloud\nRegression\n-\nTemperature\nforecasting\nData driven crop\
    \ care\nand decision making\n(Crop\nrecommenda-\ntion)\nDT [127]\nCloud\nClassification\n\
    -\nDifferent\ncrops\nHomogeneous (Tem-\nperature)\nDT [128]\nClassification -\
    \ Soil fertility\nand type, Regression - Pre-\ndiction of soil toxicity\nHeterogeneous\n\
    (Soil\nmoisture,\nTemper-\nature,\nHumidity,\nPH,\nSoil\nnutrient\ncontent/fertility)\n\
    35\n(using data from various sensors placed in the bin) but also predicts the\
    \ air quality\naround it using RNNs. The sensing modalities in each of these applications\
    \ is pretty\nsimilar in that they indicate to whether a waste bin is full or not\
    \ which is then\nused for route planning. Considering the requirements of such\
    \ a system, in terms\nof implementation, all of these systems are cloud based.\
    \ Sewer monitoring has been\nperformed in [135] in a cloud based system, they\
    \ use sewer water level and rain gauge\ndata along with a RNN to perform sewer\
    \ overflow monitoring. The RNN is used to\npredict sewer overflow ahead in time.\
    \ Water quality has monitoring has been the focus\nof [136, 137, 138] where the\
    \ authors use multiple sensors measuring pH value, chloride,\nnitrate content\
    \ and hardness of water to determine whether it is fit for drinking or\nnot. In\
    \ [139], Liu et al. use data from water monitoring stations along the Yangtze\n\
    river to predict water quality. Like the classification-based systems, they use\
    \ multiple\nchemical measurements from the water such as oxygen, pH, turbidity\
    \ etc. Apart from\nair quality, smart city monitoring systems are an important\
    \ application within the\nsmart city services domain. This includes urban noise,\
    \ which has been the focus of\nresearchers in [140, 141] as well as other more\
    \ comprehensive monitoring systems as\nproposed in [142, 143]. All these systems\
    \ are cloud based and use a combination\nof sensors for sound and/or image data\
    \ for performing noise monitoring/detection\nand various smart city dashboard\
    \ applications. In Table 8, we summarize the type\nof deployments, applications\
    \ task and data for smart city services applications. It\nis noted that most of\
    \ the applications relating to city services such as air quality\nmonitoring and\
    \ prediction, sewer monitoring, waste collection have been proposed as\ncloud\
    \ systems as data needs to be collected from nodes at various points in a city.\n\
    It is envisaged that due to the nature of the applications, many smart city services\n\
    would still rely on cloud or fog architectures as the decision-making taking place\
    \ in\nsuch situations isn’t possible on only a local level. It is also observed\
    \ that most of the\napplications required data from multiple sensors and therefore\
    \ utilized heterogeneous\ndata to carry out the task at hand.\n3.3\nSmart Energy\n\
    Load/energy consumption forecasting is an essential task for monitoring and control\n\
    of electrical power supply in the electricity grid and ensure appropriate demand\
    \ side\nmanagement. It has been performed by the authors of [148] who use data\
    \ collected\nfrom consumers in a smart grid to determine load for up to 24 h in\
    \ advance. They treat\nthis as primarily a clustering problem where they form\
    \ clusters of similar load profiles\nand then use distance functions to determine\
    \ energy consumption for the future. The\nauthors in [149] also use a cloud based\
    \ clustering approach, using historical power\ndata, they use K-Means clustering\
    \ to determine the closest historical records and then\ncombine them to predict\
    \ energy consumption 24 h in advance. The load forecasting\nproblem has been dealt\
    \ as a regression by [150] using a SVM and by [151] through an\nRNN using electricity\
    \ power data. A regression approach is also followed by [152, 153]\nwho use electricity\
    \ consumption in addition to environmental data for load forecasting\nusing deep\
    \ learning methods (DNN and a combination of Autoencoders and RNNs\n(GRU)). Edge\
    \ based systems have been suggested by the authors of [154, 155, 156]\n36\nTable\
    \ 8. AI use for Smart city Services\nApplication\nNetwork\nSystem\nAr-\nchitecture\n\
    Task\nData type\nAir quality\nK-NN [144]\nCloud\nClassification - Differentiate\n\
    between different air quality\nlevels\nHeterogenous\n(Gas,\nLight, Temperature,\n\
    Humidity, Pressure,\nRFC[145]\nWind\nspeed,\nWeather\ninfor-\nmation, Images,\n\
    RFC[146]\nTraffic\nflow\ndata,\nVisibility,\ninforma-\ntion about\nRNN (LSTM)\
    \ [147]\nRegression - Prediction of\nair quality levels\ntypes\nof\nbuildings\n\
    etc)\nWater quality moni-\ntoring\nNB [136]\nCloud\nClassification - Determine\
    \ if\nwater is fit to drink or not\nHeterogeneous\n(Chlorides, Nitrates,\nTotal\n\
    dissolved\nsolids,\nSVM [137]\npH\nand\nHardness,\nand\nother\nchemical\nproperties)\n\
    DNN [138]\nRNN (LSTM) [139]\nRegression - Prediction of\nwater quality\nSewer\
    \ Overflow Mon-\nitoring\nRNN (GRU,LSTM) [135]\nCloud\nRegression - Prediction\
    \ of\nwhen\nHeterogeneous (Wa-\nter level sensor data\n(ultrasonic)\nover\ndrain\
    \ holes as well as\nrain gauges)\nWaste management\nRNN (LSTM) for prediction\n\
    of air quality [134] , K-NN\nfor detection of waste bin be-\ning full\nCloud\n\
    Regression - Prediction of\nair pollutant levels, Classifi-\ncation - Bin full\
    \ or not\nHeterogeneous\n(Odor, Weight, Level\nsensing using\nRFC[133]\nClassification\
    \ - Empty bin or\nnot\nultrasonic\nsensor,\nGas\nsensor\nfor\nair\nquality, Vibration)\n\
    Urban noise monitor-\ning\nCNN [140]\nCloud\nClassification\n-\nDifferent\ntypes\
    \ of sounds\nHomogeneous\n(Sound)\nRNN (LSTM) [141]\nRegression – Prediction of\n\
    noise levels\nManagement\nof\nSmart City\nCNN [143]\nCloud\nApplication\n–\nDashboard\n\
    (object identification etc)\nHeterogeneous (Var-\nious sensors, Urban\nvideo\n\
    and\nsound\ndata)\nCNN [142]\nfor load forecasting for household consumers, [156]\
    \ use federated learning to train a\nRNN. In addition to load forecasting, smart\
    \ grid management/monitoring is also a\nnecessary application in this domain.\
    \ The authors in [157] use decision trees in a cloud\nbased system to classify\
    \ between different faults in a smart grid. In [158], the authors\nuse power consumption\
    \ data from consumers in China to determine electricity theft\nin a cloud based\
    \ system. They use wide and deep convolutional neural networks to\ncapture the\
    \ periodic and nonperiodic components from electricity consumption data\nand show\
    \ their network to be suitable for electricity theft detection. The authors in\n\
    [159] present a framework for edge computing based monitoring of the smart grid.\n\
    Edge computing in the smart grid has several advantages as it reduces delay and\
    \ also\nit is secure in terms of data privacy. A summary of the use of IoT based\
    \ AI in Smart\nEnergy is provided in Table 9.\n37\nTable 9. AI use for Smart Energy\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nEnergy/Load\n\
    con-\nsumption forecasting\nK-Means [148]\nCloud\nClustering - Determine clus-\n\
    ters of similar power con-\nsumption\nHomogeneous (Elec-\ntric power)\nK-NN [149]\n\
    Regression - Predict con-\nsumption\nof\nelectricity\nahead of time\nSVM [150]\n\
    RNN (LSTM) [151]\nDNN [152]\nHeterogeneous (Elec-\ntric\npower,\nTem-\nperature,\n\
    Humidity,\nTime, Holiday\nSAE + RNN (GRU) [153]\nCNN [155]\nEdge\nRNN (GRU) [154]\n\
    Homogeneous (Elec-\ntric power)\nRNN (LSTM) [156]\nSmart\nGrid\nline\nevent\n\
    classification\n(fault etc.)\nDT [157]\nCloud\nClassification\n-\nDifferent\n\
    powerline events\nHomogeneous (Elec-\ntric power)\nElectricity theft de-\ntection\n\
    CNN [158]\nCloud\nClassification - Theft detec-\ntion for abnormal patterns\n\
    of consumption\nHomogeneous (Elec-\ntric power)\n3.4\nSmart Health\nThere are\
    \ two major applications of IoT with AI in health, these are activity recog-\n\
    nition/fall detection and disease diagnosis/health monitoring, a summary of the\
    \ IoT\nbased AI systems used in Smart Health is presented in Table 10. Activity\
    \ recog-\nnition involves the use of movement sensors such as accelerometers,\
    \ gyroscopes and\nmagnetometers with the aim to help provide the user with feedback\
    \ on their health.\nThis can be in terms of them having enough physical exercise\
    \ or not, used for sports\ntherapy, fall detection and for monitoring of different\
    \ diseases such as Parkinson’s or\nother motor degenerative ailments. The most\
    \ popular sensor for activity recognition\nare inertial sensors which have been\
    \ used by [160, 161] in a cloud based setting using\nvarious deep and machine\
    \ learning algorithms. In [162], Castro et al. include vital\nsign data in addition\
    \ to movement information for human activity recognition in a\ncloud environment,\
    \ they utilize the DT as their classifier. In [163],, the authors pro-\npose an\
    \ edge-based system to perform activity recognition for people by recording\n\
    their movements using the accelerometer and gyroscope present on the phone. They\n\
    use a SVM as their classifier and differentiate between six different activities\
    \ of daily\nliving. Fall detection has been performed by [164, 165] in a fog and\
    \ edge environment,\nrespectively, using an accelerometer, Santos et al. [164]\
    \ use a CNN while Yacchirema\net al. [165] useRFCwith both approaches showing\
    \ promising results.\nEquipped with the power of AI in IoT, Smart Health systems\
    \ facilitate the provi-\nsion of telehealth services as well as real time monitoring\
    \ of patients, giving doctors\nand patients feedback on their health.\nHealth\
    \ monitoring systems and real time\ndisease diagnosis have been one of the most\
    \ important applications of IoT technol-\nogy. The authors in [166, 167, 168,\
    \ 169, 170, 171, 172, 173, 174, 175, 176] develop\ncloud based health monitoring\
    \ systems for detecting various types of diseases, such\n38\nas heart (stroke\
    \ [167], irregular sound [169], irregular rhythm [171, 173]), epilep-\ntic seizures\
    \ [172], Parkinson seizure [176] and multiple disease diagnosis systems\n[174,\
    \ 175]. In [174, 175], the authors formulate the problem of disease diagnosis\
    \ as\na classification problem and utilize medical data such as ECGs, EEG, heart\
    \ rate,\nblood pressure, blood sugar, heart sound, blood glucose, liver health\
    \ along with var-\nious machine and deep learning methods to achieve this task.\
    \ Fog and edge based\nhealth monitoring/disease diagnosis systems have also been\
    \ suggested by a number\nof researchers. The authors in [177] present a fog based\
    \ system using a deep neural\nnetwork to detect heart disease from a patients\
    \ vital signs (blood oxygen, heart rate,\nrespiration rate, EEG, ECG, EMG, blood\
    \ pressure, glucose) and activity data. In\n[178], Devarajan & Ravi work on a\
    \ fog computing based Parkinson detection system\nusing a persons speech. Moreover,\
    \ an edge computing system is presented in [179]\nwhich utilizes EEG signals to\
    \ determine seizures in patients.\nTable 10. AI use for Smart Health\nApplication\n\
    Network\nSystem\nArchi-\ntecture\nTask\nData type\nHuman\nactivity\nrecognition/Fall\n\
    de-\ntection\nDT [162]\nCloud\nClassification - Different activities,\nfall /non\
    \ falls\nHeterogeneous (Acceleration, Heart\nrate,\nPosture,\nECG, Respiration\n\
    rate)\nRFC[160]\nHomogeneous (Accelerometer)\nCNN [161]\nRNN\n(LSTM)\n[180]\n\
    Fog Edge\nHeterogeneous (Accelerometer, Gy-\nroscope, Magnetometer)\nCNN [164]\n\
    Fog\nRFC[165]\nEdge\nHeterogeneous (Accelerometer and\nGyroscope)\nSVM [163]\n\
    Patient health moni-\ntoring\nDT [166]\nCloud\nClassification\n-\nRecommendation\n\
    about diet etc\nHeterogeneous (Heart rate, Sleep,\nCalories burned, Weight, Physical\n\
    activity time, Water, Exercise etc)\nSVM [169]\nClassification - Different emotions\n\
    Heterogeneous (Speech and Image)\nRNN(LSTM)\n[181]\nHeterogeneous (ECG, BVP, GSR,\n\
    SKT, EMG)\nCNN\n+\nSAE [172]\nClassification - Abnormal/normal\nheart sounds\n\
    Homogeneous (EEG)\nRFC[168]\nClassification - Epileptic Seizure de-\ntection\n\
    Homogeneous (Heart sounds)\nSVM [171]\nClassification - ECG arrhythmias\nHomogeneous\
    \ (ECG)\nDisease diagnosis\nDT [173]\nCloud\nClassification - Different heart\
    \ dis-\neases\nHeterogeneous (Heart health infor-\nmation, Patient records and\
    \ other\nhealth sensors)\nK-Means\n[174]\nClassification - Kidney, Heart and\n\
    Liver disease\nHeterogeneous (Heart and Kidney\nhealth data)\nRFC[175]\nClassification\
    \ - Detection of various\ndiseases\nHeterogeneous\n(Diabetes,\nHeart,\nLiver,\
    \ Dermatology etc data)\nDNN [177]\nFog\nClassification - Presence of heart\n\
    disease or not\nHeterogeneous\n(Blood\noxygen,\nHeart rate, Respiration rate,\
    \ EEG,\nECG, EMG, Blood Pressure, Glu-\ncose and Activity data)\nParkinson detection/\n\
    RFC[167]\nCloud\nClassification - Parkinson detec-\ntion/stroke has happened/seizure\n\
    detection\nHeterogeneous\n(Blood\npressure,\nSugar, Pulse rate)\nSeizure monitoring\n\
    SVM [176]\nHomogeneous (Speech)\nK-NN\n[178]\nFog\nNB [179]\nEdge\nHomogeneous\
    \ (EEG)\n39\n3.5\nSmart Homes\nAmbient assisted living is a huge component of\
    \ Smart Homes.\nThis is especially\nneeded for the elderly and is typically achieved\
    \ by the use of ambient sensors, Wi-Fi\nand radio frequency systems in smart homes.\
    \ In this work, we include all monitoring\nmethods that depend on sensors placed\
    \ in the home/within the smart home domain.\nIn [182], Pirzada et al. use a network\
    \ of reed switches connected to the cloud to\nmonitor the activities of elderly\
    \ people as a clustering problem. They use the K-\nNN algorithm to determine anomalies\
    \ in the daily activities which can then be used\nto send medical or other help\
    \ requests to assist people. A similar setup for activity\nrecognition for ambient\
    \ assisted living has been presented in [183, 184, 185] where they\nuse data from\
    \ a number of different sensors including motion, presence, water float,\ntemperature\
    \ etc to determine various activities being performed in a home. In [186],\na\
    \ cloud based assisted living system for the deaf has been developed that performs\n\
    haptic conversions for sounds detected in a home. An array of sensors are used\
    \ to\nmonitor environmental sound and the authors use RNNs for detecting the sound\n\
    event before its passed on to the haptic vibration producer. Another task within\n\
    in monitoring is localization of people, this part of smart homes is also applicable\n\
    to smart infrastructure in that such systems are used in smart buildings as well.\n\
    Applications of localization include security, i.e., detecting unauthorized presence\n\
    and people monitoring in general (for, e.g., locating elderly people in homes)\
    \ etc.\nThe authors in [187] perform localization using a grid of Wi-Fi units\
    \ that measure\nsignal strength to determine peoples locations indoors for buildings.\
    \ They formulate\nthis both as a classification problem as well as a regression\
    \ problem. The classification\nproblem being formulated as coded locations (for,\
    \ e.g., a given room no) while the\nregression case estimating the location of\
    \ the user in a coordinate grid. Their system is\ncloud based and they use a deep\
    \ neural network to perform this task and have found\nsuitably good results. Occupancy\
    \ detection has been performed by the authors of\n[188] making use of various\
    \ ambient measurements (temperature, humidity, pressure\netc.) and passing them\
    \ to a cloud before using a deep neural network to classify\nbetween the various\
    \ number of people present in an indoor environment. In [189],\nZimmermann et\
    \ al. also make use of ambient sensors for the occupancy problem and\nuse a na¨ıve\
    \ bayes learner to determine both the presence of occupants as well as their\n\
    number.\nHome automation is another application that the IoT finds application\n\
    within the Smart Home domain. The integration of AI has helped develop smart\n\
    home automation systems that aim to reduce energy consumption in homes as well\n\
    as maintain user privacy, security. Chowdhry et al. [190] use a combination of\
    \ visual\ndata and motion sensing to perform home automation for security using\
    \ a SVM.\nAn interesting use of AI in home automation is presented in [191] who\
    \ develop a\ncloud based home automation system, they take measurements from various\
    \ ambient\nsensors and control appliances and use a Na¨ıve Bayes classifier to\
    \ determine which\ntechnician to call whenever sensor measurements appear aberrated.\
    \ The problem of\nintelligent consumption of energy has been considered by [192]\
    \ who develop an energy\ndisaggregation system on the appliance level in smart\
    \ homes using stacked denoising\nautoencoders. They achieve this using power data\
    \ for individual appliances as well\n40\nas the total power consumed in the home\
    \ and send it to a local cloud. Data is then\ndisaggregated for various appliances\
    \ to provide feedback to the user.\nMore work\nproviding energy intelligence to\
    \ consumers has been performed by [193, 194, 195].\nKonstantakopoulos et al. [195]\
    \ pose this as a regression problem, they propose a\ncloud-based system utilizing\
    \ both ambient sensor data (lighting, temperature etc)\nand appliance power data\
    \ to forecast resource usage for consumers using a RNN.\nThey show a reduction\
    \ in energy consumption for their users using this information.\nEventhough applications\
    \ covered in smart homes have been cloud based systems,\nthere have been recent\
    \ proposals for frameworks that combine edge and cloud pro-\ncessing as in [196]\
    \ who discuss a hierarchical control system for smart homes through\na edge microgrid\
    \ and a cloud power grid. Due to the nature of smart homes in that\nthe sensing\
    \ scheme is present within a finite space (within the home), edge and fog\ncomputing\
    \ based systems are expected to be increasingly incorporated smart home\napplications.\
    \ A summary of the use of IoT based AI in Smart Homes is presented in\nTable 11.\n\
    3.6\nSmart Industry\nOne of the major applications of AI in the IoT powered smart\
    \ industry is towards\nfault detection in products and anomaly detection in industrial\
    \ processes. This has\nseen the use of both Machine Learning (SVM [197, 198],RFC[199,\
    \ 200]) as well as\nDeep Learning (DNN [201, 202, 203], CNN [204]) methods using\
    \ a cloud computing\nstructure to perform anomaly detection/product inspection\
    \ and monitoring using a\nvariety of heterogeneous and homogenous data sources\
    \ such as inertial sensors for ma-\nchines, images for products and processes\
    \ and other process specific variables. Other\napproaches suggested in [205, 206]\
    \ propose a fog computing method along with edge\ncomputing systems suggested\
    \ in [207, 208]. An edge computing system for anomaly\ndetection is presented\
    \ in [209] where edge devices collaboratively train a deep anomaly\ndetection\
    \ model. Production management is another application that has found usage\nof\
    \ AI in IoT based smart Industry. For, e.g., the authors in [210, 211, 212, 213,\
    \ 214]\nuse cloud based data driven systems along with machine and deep learning\
    \ algorithms\nto help with task dispatching, performance analysis as well as worker\
    \ activity recog-\nnition utilizing a variety of sensing modalities. The work\
    \ of [213, 214] are especially\ninteresting as they aim is to not only perform\
    \ production management but also pro-\npose data for various health related analysis\
    \ to create a safer working environment\non the factory floor. A fog system for\
    \ production management has been presented in\n[215] who use activity data to\
    \ determine resource allocation locations to contribute\nto management of a production\
    \ operation. Furthermore, product inspection, which\nis a common application of\
    \ instrumentation systems in a factory, has been performed\nby [216, 217] who\
    \ utilize images and sensor data in a cloud based system to monitor\nproduct quality.\n\
    A factory has a multitude of machines and equipment working round the clock\n\
    manufacturing goods. Maintenance is an important aspect of this operation where\n\
    regular checks are performed on the equipment to ensure that no breakdown occurs\n\
    during the production process, which might result in monetary loss or loss of\
    \ life.\n41\nTable 11. AI use for Smart Homes\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nAmbient Assisted liv-\ning (Activity recogni-\n\
    tion/Fall detection)\nK-NN [182]\nCloud\nClustering - Detect abnor-\nmal clusters\n\
    Homogeneous (Reed switches)\nRNN (LSTM)\n[185]\nClassification - Different ac-\n\
    tivities\nHeterogeneous\n(Human\nmotion,\nWater float, Reed switches, Tem-\nperature,\n\
    Pressure,\nLuminance,\nGas and other environmental sen-\nsors in a home)\nRNN\
    \ (LSTM)\n[183]\nSAE [184]\nRNN\n(GRU)\n[186]\nClassification\n-\nDifferent\n\
    sounds\nHomogeneous\n(Sound\nrecordings\nfrom rooms in a house)\nAmbient\nAssisted\n\
    living\n(Localization\nand Occupancy de-\ntection)\nDNN [187]\nCloud\nClassification\n\
    and\nRegres-\nsion - Localization estima-\ntion\nHomogeneous\n(Wi-Fi\nsignal\n\
    strength and identifiers)\nNB [189]\nClassification - Presence of\npeople or not,\
    \ Regression-\nNumber of occupants\nHeterogeneous\n(Volatile\norganic\ncompounds,\n\
    CO,\nTemperature,\nHumidity)\nDNN [188]\nClassification\n-\nDifferent\nnumber\
    \ of people present\nHeterogeneous (Temperature, Lu-\nminance, Humidity, Pressure,\
    \ CO2,\nMotion, Magnetometer, Gyroscope,\nAccelerometer, Sound, Door and\nwindow\
    \ open/close status)\nEnergy management\n(Automation, Power\nconsumption\nprofil-\n\
    ing)\nSVM [190]\nCloud\nClassification - Intrusion de-\ntection\nHeterogeneous\
    \ (Images + Sound)\nSAE [192]\nRegression - Disaggregation\nof appliance power\
    \ data\nHomogeneous\n(Appliance\npower\nconsumption)\nRNN\n(LSTM)[195]\nRegression\
    \ – Forecasting oc-\ncupant resource usage\nHeterogeneous\n(Appliance\npower\n\
    consumption,\nLuminance,\nVibra-\ntion, Temperature, Humidity, Ac-\ncelerometer\
    \ [fan])\nSAE\nfor\ndisaggre-\ngation\nand\nRNN(LSTM)\nfor forecasting\n[194]\n\
    Classification - Energy dis-\naggregation,\nRegression\n-\nLoad forecasting\n\
    Heterogeneous\n(Temperature,\nLuminance,\nHumidity,\nProximity\nswitches, Ultraviolet\
    \ light sensors,\nPower consumption)\nNB [193]\nClassification\n-\nDetermine\n\
    appliances that are on\nHomogeneous\n(Appliance\npower\nconsumption)\nHowever,\
    \ with the data gathered by various sensors on these machines, it is often\nmore\
    \ beneficial to take an active approach rather than a passive one by using this\n\
    data for predictive maintenance purposes. Predictive maintenance utilizes data\
    \ from\nthe daily operation of machines in an industry to optimize the manufacturing\
    \ op-\neration [218] and is one of the main uses for AI in the industry. In [219,\
    \ 220], the\nauthors suggest a predictive maintenance scheme using SVMs utilizing\
    \ data from ac-\ncelerometers measuring vibration in a crane motor and data from\
    \ various sources in\na semiconductor manufacturing process, respectively, both\
    \ work in a cloud environ-\nment as evidenced from the architecture. Prediction\
    \ of failure can also be a regression\noperation, as was demonstrated by [221]\
    \ who use RNNs to predict future values of\na physical parameters of a pump using\
    \ a number of heterogeneous sensors used to\nmonitor it. As with the other two\
    \ systems, this system also had a cloud architecture.\nThe authors in [170] also\
    \ present a regression based health prognosis system for the\nindustry using a\
    \ CNN on machine data (Images, stress, temperature, vibration, po-\n42\nsition\
    \ and electromagnetic signal measurements). The use of IoT based AI in Smart\n\
    Industry has been presented in Table 12.\n3.7\nSmart Infrastructure\nAn application\
    \ within smart infrastructures also involves monitoring of civil structures\n\
    for structural health. The authors in [222] take a clustering approach to perform\n\
    health monitoring of a bridge using vibration data in a cloud setting.\nThey use\n\
    clustering to determine clusters of abnormal behavior in accelerometer measurements\n\
    from a bridge. In [223, 224, 225], accelerometer signals have been used where\
    \ as [226]\nhave used piezo electric transducers for performing structural health\
    \ monitoring of\nbridges formulated as a classification problem between different\
    \ damaged states of\na bridge. The prime sensing modality for monitoring has been\
    \ measuring vibration\nusing accelerometers, however, other sensors such as fiber\
    \ optic gratings can also be\nused to measure stress.\nThe second avenue for AI\
    \ applications in IoT for smart infrastructure is the use\nof IoT devices for\
    \ building environment control and energy management as well com-\nfort aware\
    \ control. This involves the prediction of building energy usage based on\nenvironmental\
    \ data (such as temperature, humidity) and electrical power data. The\nauthors\
    \ in [227] and [228] use electric power data and heat flow information in a\n\
    building to predict the energy requirements in the future so as to better manage\
    \ en-\nergy consumption. Ambience control of a museum has been performed in [229]\
    \ where\nthe authors use deep learning algorithms to predict the CO2 and humidity\
    \ levels\nfor the care of exhibits. Comfort aware energy management has been performed\
    \ in\n[230] where the authors use a CNN to regulate thermal comfort in a building\
    \ using\nvarious physical quantities. It can be noted that all of these mentioned\
    \ systems have\nbeen deployed in the cloud, this is due to the nature of the application.\
    \ However,\nthere have been efforts for developing fog/edge systems for smart\
    \ infrastructure. The\nauthors in [231] describe a framework for deploying edge\
    \ and fog computing services\nin smart buildings and demonstrate their systems\
    \ effectiveness for the case of energy\nmanagement. Table 13 summarizes the use\
    \ of IoT based AI in Smart Infrastructure.\n3.8\nSmart Transport\nMajor smart\
    \ transportation applications involve smart parking and transportation\nmanagement.\
    \ Smart parking aims to solve the problem of helping users finding park-\ning\
    \ spots in order to save time as well as reduce gas emissions and is therefore\
    \ a much-\nresearched topic for AI deployment towards smart transportation. Solutions\
    \ to this\nproblem have been formulated both as a regression problem as well as\
    \ a classification\none, both utilizing imaging and/or other occupancy sensing\
    \ modalities. Regression\nsolutions [232, 233, 234] are typically used to predict\
    \ a parking lots occupancy levels\nin the future whereas classification systems\
    \ [235, 236, 237] involve guiding drivers ac-\ncording to the shortest distance\
    \ as well as used for user localization purposes within\nsuch lots. In addition\
    \ to cloud based approaches, edge computing systems for smart\nparking have also\
    \ been devised as suggested in [238, 239] who deploy CNNs on edge\n43\nTable 12.\
    \ AI use for Smart Industry\nApplication\nNetwork\nSystem\nAr-\nchitecture\nTask\n\
    Data type\nFault\nand\nanomaly\ndetection\nDNN [203]\nCloud\nClassification -\
    \ Different classes of abnor-\nmality labels\nHeterogeneous (Mul-\ntiple sensor\
    \ and con-\ntrols [button states\netc] information)\nDNN [202]\nClassification\
    \ - Different damage stages of\na 3D printer\nHeterogeneous\n(Accelerometer, Gy-\n\
    roscope)\nRFC[199]\nClassification - Normal and abnormal op-\neration in wind\
    \ turbines\nHomogeneous\n(Ac-\ncelerometer)\nSVM [197]\nClassification\n-\nDifferent\n\
    wind\nturbine\nhealth conditions\nSVM [198]\nClassification - Normal and mixed\
    \ cement\nHomogeneous\n(Im-\nages)\nRFC[200]\nClassification - Different fault\
    \ types in steel\nmanufacturing\nHeterogeneous\n(Various\nsensors,\ndimensional\n\
    mea-\nsurements)\nDNN [201]\nClassification - Normal and arcing\nHomogeneous\n\
    (Cur-\nrent)\nCNN [204]\nClassification - Defected product or not\nHomogeneous\n\
    (Im-\nages)\nCNN [205]\nFog\nClassification - Different types of defects\nHomogeneous\n\
    (Im-\nages)\nCNN [206]\nSVM [207]\nEdge\nClassification - Abnormal and normal\
    \ pres-\nsure\nHomogeneous\n(Wa-\nter pressure)\nCNN\n+\nLSTM [209]\nClassification\
    \ - Abnormal and normal time\npower patterns\nHomogeneous (Elec-\ntrical power)\n\
    RNN (LSTM)\n[208]\nClassification - Faulty and normal state of\na machine\nHomogeneous\n\
    (Ac-\ncelerometer)\nProduction manage-\nment\nSVM [210]\nCloud\nRegression - Prediction\
    \ of the slotted coef-\nficient in a hydraulic press\nHeterogeneous (Var-\nious\n\
    measurements\nfrom\na\nhydraulic\npress)\nConvLSTM +\nSAE [211]\nRegression -\
    \ Forecasting machine speed to\nmake production more efficient\nHomogeneous (Speed\n\
    of machine [rotary])\nDNN [214]\nRegression - Bottle neck prediction in time\n\
    Heterogeneous\n(RFID,\nmovement\nsensors)\nCNN [212]\nClassification - Different\
    \ activities in an as-\nsembling factory\nHeterogeneous\n(IMU, EMG)\nSVM [213]\n\
    Classification - Different activities in a\nmeat processing plant evaluate worker\
    \ per-\nformance\nHeterogeneous\n(Accelerometer, Gy-\nroscope)\nRFC[217]\nClassification\
    \ - Bad or good product qual-\nity\nHeterogeneous (Var-\nious sensors from a\n\
    production floor in a\nfactory)\nCNN [216]\nClassification - Prediction of temperature,\n\
    Carbon content in steel\nHomogeneous (Spec-\ntrogram Images)\nRFC[215]\nFog\n\
    Classification - Determine Room ID, used\nfor system disruption\nHeterogeneous\n\
    (Ac-\ntivity\ndata,\nLoca-\ntion)\nPredictive\nmainte-\nnance\nCNN [170]\nCloud\n\
    Regression - Predict health index for ma-\nchines\nHeterogeneous\n(Im-\nages,\n\
    Temperature,\nVibration,\nPosition,\nElectromagnetic\nsignal measurements,\nStrain\
    \ gauge)\nSVM [219]\nClassification - Abnormal or normal vibra-\ntion data (from\
    \ electric motor in a crane)\nHomogeneous\n(Ac-\ncelerometer)\nRFC+\nSVM\n[220]\n\
    Classification - Failure prediction\nHeterogeneous (Mul-\ntiple\nsensors\nfrom\n\
    SECOM dataset)\nRNN (LSTM)\n[221]\nRegression - Predicting data from sensors\n\
    Heterogeneous\n(Different\nsensors\n[Pressure,\nTempera-\nture, Vibration etc])\n\
    44\nTable 13. AI use for Smart Infrastructure\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nStructural\nhealth\nmonitoring\nK-Means [222]\n\
    Cloud\nClustering – Look for abnor-\nmality of building state\nHomogeneous\n(Ac-\n\
    celerometers)\nK-NN [226]\nClassification\n–\nDifferent\ndamage states\nHomogeneous\
    \ (Piezo\nelectric sensors)\nDNN [223]\nHomogeneous\n(Ac-\ncelerometer)\nCNN +\
    \ RNN (LSTM) [225]\nSVM [224]\nEnergy and Environ-\nment management\nSVM [227]\n\
    Cloud\nRegression\n-\nForecasting\nelectrical power usage\nHeterogeneous\n(Power\
    \ and environ-\nmental data)\nSAE [228]\nRegression -Energy predic-\ntions for\
    \ buildings\nHomogeneous (Heat\nflow data in build-\nings)\nRNN (GRU, LSTM) [229]\n\
    Regression -Prediction of en-\nvironmental variables (CO2,\nHumidity etc)\nHeterogeneous\
    \ (envi-\nronmental data such\nas\nCO2,\nHumidity,\nAir velocity)\nCNN [230]\n\
    Regression - Comfort level\ndevices for occupancy detection and user localization,\
    \ respectively. Another applica-\ntion of AI IoT for smart transportation involves\
    \ determining traffic flow as well as\nprediction of traffic flow for traffic\
    \ light control and other management tasks such as\naccident detection. In this\
    \ regard, video cameras are popular for detection of vehicle\ndensity on roads\
    \ for traffic congestion determination. However, with most cars having\na GPS\
    \ device and the commonality of cellphones with every driver, many approaches\n\
    use the data from the GPS along with weather and generic traffic flow information\n\
    to determine traffic prediction. The nature of traffic flow prediction using sensing\n\
    modalities such as GPS require systems to be operated as cloud-based systems as\n\
    is the case in [240, 241, 242, 243]. Of these, Wangyang et al. [242] and Xiao\
    \ et al.\n[243] use deep learning based sequential modeling approaches to predict\
    \ traffic flow\nahead of time where as Aung & Naing [240] and Yunxiang Liu & Wu\
    \ [241] solve this\nthrough a classification formulation. A traffic management\
    \ system for public buses\nhas been proposed in [33, 244] where GPS data is used\
    \ to predict bus arrival times\nfor public transportation systems. Accident detection\
    \ has been performed using car\nposition and velocity information in a Vehicular\
    \ Adhoc NETworks (VANET) envi-\nronment by the authors of [245]. They do this\
    \ through a cloud based system that\ncan use this information to predict whether\
    \ an accident has occurred or not. Apart\nfrom typical sensing modalities, with\
    \ smart phones and user participation in social\nmedia, smart transportation systems\
    \ are expected to increasingly include more sens-\ning modalities [246] fused\
    \ together for use in decision making for traffic management\npurposes. Mukherji\
    \ et al. [247] use Wi-Fi signals to determine commuter traffic a\nsubway station.\
    \ They do this by using the measured signal strength of the Wi-Fi\nsignals along\
    \ with a Random Forest classifier in a cloud-based setting. Their system\nis able\
    \ to determine if a person is on the train or on the platform which can be used\n\
    to help with planning train times and routes. A summary of IoT based AI for Smart\n\
    Transport has been given in Table 14.\n45\nTable 14. AI use for Smart Transport\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nSmart\nParking\n\
    (Parking\noccupancy\ndetection/Rout-\ning/Location predic-\ntion)\nK-NN [237]\n\
    Cloud\nClassification - Presence of a\nvehicle\nHomogeneous\n(Im-\nages)\nK-Means\
    \ [232]\nRegression - Future occu-\npancy prediction\nHeterogeneous\n(Oc-\ncupancy,\n\
    Location,\nTime)\nRNN (LSTM) [234]\nLR [233]\nHomogeneous (RFID\ndata from cars)\n\
    DNN+ CNN [235]\nClassification - Different po-\nsitions based on beacons in-\n\
    stalled\nHomogeneous (Radio\nfrequency\nsignal\nstrength)\nDT [236]\nClassification\
    \ - Recommen-\ndation of parking lot based\non distance\nHeterogeneous\n(Parking\n\
    informa-\ntion, Time)\nCNN [238]\nEdge\nClassification - Detection of\nempty parking\
    \ space\nHeterogeneous\n(LI-\nDAR, Images)\nCNN [239]\nClassification\n–\nDifferent\n\
    user locations localization\nHomogeneous (Blue-\ntooth received signal\nstrength)\n\
    Transport\nman-\nagement\n(Public\ntransport\nmanage-\nment)\nK-Means [33]\nCloud\n\
    Regression – Transport de-\nlay prediction\nHeterogeneous (GPS,\nTicket\ninformation,\n\
    Time,\nArrival,\nDe-\nparture\ninformation\netc )\nK-Means [244]\nRegression –\
    \ Arrival time\nprediction\nRFC[247]\nClassification\n–\nLocaliza-\ntion, as on\
    \ platform or train\nHomogeneous (Wi-Fi\nsignal parameters)\nTransport\nmanage-\n\
    ment (Traffic flow)\nNB [240]\nCloud\nClassification\n-\nDifferent\ntraffic states\n\
    Homogeneous\n(GPS\ndata, current and his-\ntorical)\nRFC[241]\nHeterogeneous\n\
    (Weather,\nRoad\ndata)\nRNN (LSTM) [243]\nRegression - Traffic flow pre-\ndiction\n\
    Homogeneous (Traf-\nfic flow data[vehicle\nspeed count etc])\nRNN (LSTM) [248]\n\
    SAE + RNN (LSTM) [242]\nTransport\nman-\nagement\n(Traffic\nAccident detection)\n\
    RFC [245]\nClassification - Accident or\nnot\nHomogeneous\n(Ve-\nlocity, Position)\n\
    4\nConclusion\nThis chapter provided a coverage of the usage of AI in terms of\
    \ machine and deep\nlearning for applications within smart cities. For each of\
    \ the applications discussed\nfor the various components, the type of deployment\
    \ based on the technologies and\narchitectures discussed in the previous chapter\
    \ were identified. Figure 7 provides a\nsummary of the AI discussion in this section.\
    \ Moreover, a tabular version is provided\nin Table 15 for this section. It highlights\
    \ the applications in which each AI domain\nfinds use in for smart city components.\n\
    46\nAI for IoT Smart \nCities\nMachine Learning\nDeep Learning\nSupport \nVector\
    \ \nMachines \nDecision \nTrees\nK-Nearest \nNeighbor\nRandom \nForests\nLogistic\
    \ \nRegression\nNaïve Bayes\nK-Means\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Health\nSmart Industry\nSmart Transport\n\
    Smart Agriculture\nSmart Transport\nSmart Agriculture\nSmart Energy\nSmart Health\n\
    Smart Infrastructure\nSmart Transport\nRecurrent Neural \nNetworks (RNN, \nLSTM,\
    \ GRU)\nStacked Auto \nEncoders\nConvolutional \nNeural \nNetworks\nDeep Neural\
    \ \nNetworks\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\nSmart Energy\n\
    Smart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\nSmart Industry\n\
    Smart Infrastructure\nSmart Transport\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Health\nSmart Homes\nSmart Transport\nSmart\
    \ Agriculture\nSmart Energy\nSmart Health\nSmart Transport\nFigure 7. AI for IoT\
    \ Smart Cities.\n47\nTable 15. AI applications for IoT Smart Cities\nSmart\nCity\n\
    Component\nMachine Learning\nDeep Learning\nObservations\nSmart Agricul-\nture\n\
    - Crop Monitoring /Plant care\n(Irrigation)\n- Crop Monitoring /Plant care\n(Irrigation)\n\
    - Crop Monitoring /Plant care\n(Monitoring and disease detec-\ntion)\n- Crop Monitoring\
    \ /Plant care\n(Monitoring and disease detec-\ntion)\n- Data driven crop care\
    \ and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven crop\
    \ care and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven\
    \ crop care and de-\ncision making (Crop recommen-\ndation)\nSmart\nCity\nServices\n\
    - Air quality\n- Air quality\n- Water quality monitoring\n- Water quality monitoring\n\
    - Waste management\n- Waste management\n- Sewer Overflow Monitoring\n- Urban noise\
    \ monitoring\nSmart Energy\n-\nEnergy/Load\nconsumption\nforecasting\n-\nEnergy/Load\n\
    consumption\nforecasting\n- Smart Grid line event classifi-\ncation\n- Electricity\
    \ theft detection\nSmart Health\n- Human activity recognition/-\nFall detection\n\
    - Human activity recognition/-\nFall detection\n- Patient Health Monitoring\n\
    - Patient Health Monitoring\n- Disease diagnosis\n- Disease diagnosis\n- Parkinson\
    \ detection/Seizure\nmonitoring\n- Parkinson detection/Seizure\nmonitoring\nSmart\
    \ Homes\n- Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n\
    - Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n- Ambient\
    \ Assisted living (Lo-\ncalization and Occupancy de-\ntection)\n- Ambient Assisted\
    \ living (Lo-\ncalization and Occupancy de-\ntection)\n-\nEnergy\nmanagement\n\
    (Au-\ntomation, Power consumption\nprofiling)\n-\nEnergy\nmanagement\n(Au-\ntomation,\
    \ Power consumption\nprofiling)\nSmart\nIndus-\ntry\n- Fault and anomaly detection\n\
    - Fault and anomaly detection\n- Production management\n- Production management\n\
    Smart\nInfras-\ntructure\n- Structural health monitoring\n- Structural health\
    \ monitoring\n- Energy and Environment man-\nagement\n- Energy and Environment\
    \ man-\nagement\nSmart\nTrans-\nport\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Transport management (Pub-\nlic transport management)\n- Transport\
    \ management (Traf-\nfic flow)\n- Transport management (Traf-\nfic flow)\n- Transport\
    \ management (Traf-\nfic Accident detection)\nFor\napplications\nsuch\nas\nSmart\n\
    Agriculture,\nSmart\nEnergy,\nSmart\nHealth,\nSmart Industry and Smart\nTransport,\n\
    Deep\nLearn-\ning\nas\nwell\nas\nMachine\nLearning\nalgorithms\nhave\nbeen deployed\
    \ in Edge/Fog\nconfigurations.\nThe most popular machine\nlearning algorithms\
    \ were the\nSVM and RFC.\nThe\nmost\npopular\nDeep\nLearning\nalgorithms\nwere\n\
    RNNs and CNNs.\n48\nCHAPTER IV\nOPTIMIZATION IN IOT SMART CITIES\n1\nIntroduction\n\
    This chapter presents a coverage of combinatorial optimization in IoT based smart\n\
    cities by deliberating on the most popular applications of optimization algorithms\n\
    and providing an insight to how those problems are formulated and worked upon.\
    \ It\nprovides a mapped overview of the optimization landscape in the smart city\
    \ domain\nwhile considering the IoT. Through this mapping, the common optimization\
    \ problems\nacross the various components of the IoT enabled smart city have been\
    \ identified. For\neach problem discussed, the objective function used, the nature\
    \ of the objective as\nwell as the constraints considered have also been elaborated\
    \ on.\n2\nOptimization and Heuristics in IoT Smart Cities\nAs has been observed\
    \ by [249], combinatorial optimization problems in the real-world\nare known to\
    \ be difficult to formulate and generally are hard to solve. Moreover,\nchoosing\
    \ the right algorithm is also a tedious task as each comes with a different\n\
    set of characterizations. This is very applicable to the IoT bases smart city\
    \ where\napplications in each component caters to a different environment and\
    \ aspect of the\ncity’s operation and therefore requires intricate design of the\
    \ problem. This chapter\ntakes guidance from the work of [249]. They note that\
    \ the most popular algorithms for\nuse in combinatorial optimization problems\
    \ are the Ant Colony Optimization (ACO),\nGenetic Algorithm (GA), Particle Swarm\
    \ Optimization (PSO), Differential Evolution\n(DE) and Artificial Bee Colony (ABC).\
    \ Moreover, following from their discussion, six\nfactors are considered for each\
    \ application identified. These are:\n1. The type of application: This refers\
    \ to the problem being optimized within the\nsmart city domain.\n2. Data Setup:\
    \ For each application, we mention the data setup used. While doing\nso, we aim\
    \ to capture the various ways in which researchers have sourced data\nfor their\
    \ proposed method.\n3. Single-Parallel problems: Another thing to note in smart\
    \ city optimization\nproblems is whether a problem has been considered as a single\
    \ problem or\nmultiple sub-problems/parallel.\n4. Objective direction, function\
    \ and number of objectives: Maximization or mini-\nmization, lowest fitness function\
    \ value desirable or higher fitness function value\n49\nis desirable.\nSince we\
    \ list the objectives, we also covere the number of ob-\njectives inherently.\
    \ Single objective, where a single fitness is optimized for its\nbest value or\
    \ multi-objective where multiple objective functions need to be con-\nsidered\
    \ at the same time. The latter is a complex process as some objectives\nmay have\
    \ conflicts and thus requires the need to perform trade-offs with what’s\nacceptable.\n\
    5. Constraints: Constraints are a set of restrictions or prerequisites that may\n\
    sometimes be necessary to determine if a solution is considered valid or not.\n\
    Soft constraints are desirable but not necessary whereas hard constraints are\n\
    mandatory to be met. Constraints are put on the fitness function according to\n\
    application being considered. Covering this aspect is particularly important as\n\
    constraints are determined by the application being worked on.\n3\nMeheuristic\
    \ Algorithms\nMetaheuristic algorithms are widely used to solve combinatorial\
    \ optimziation prob-\nlems in the real-world [249]. The aim of these algorithms\
    \ is to determine the minima\nor maxima of an objective function which translates\
    \ an optimization objective in to\none or more mathematical equations. Five algorithms\
    \ have been considered in this\nchapter, these are the Ant Colony Algorithm, Genetic\
    \ Algorithm, Particle Swarm Op-\ntimization Algorithm, Differential Evolution\
    \ and Artificial Bee Colony. As mentioned\nearlier, these have been chosen as\
    \ these were the most commonly used optimzation\nalgorithms identified by [249].\
    \ In this section, we provide a brief intuitive description\nfor each of them.\n\
    3.1\nAnt Colony Optimization\nAnt colony optimization is derived from the behavior\
    \ of ants searching for food\n[250]. It was observed that during this process,\
    \ each ant deposits a chemical called\npheromone on the path which it takes towards\
    \ the food. The more the ants take a\ngiven path, the more the pheromone is deposited\
    \ on it. Subsequent ants that want\nto go towards the food use the amount of pheromone\
    \ on a given path or sub-path\nto decide which path to take so as to determine\
    \ the optimal route to the food. In\nthe artificial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artificial ants,\nan ant would choose\
    \ the next vertex to visit based on the level of pheromone on the\npossible sub-paths\
    \ available to it as well as whether that path has been used before.\nAt the end\
    \ of each iteration, the pheromone levels are updated so as to prioritize the\n\
    use of the most used path for ants in the next iteration.\n3.2\nGenetic Algorithm\n\
    A genetic algorithm [251] is based on evolutionary science. The idea behind the\
    \ ge-\nnetic algorithm is that starting from a given population set of organisms,\
    \ subsequent\n50\nreproduction will result in fitter organisms being produced\
    \ given that the organisms\nchosen for reproduction have some level of fitness.\
    \ To solve an optimization prob-\nlem, a genetic algorithm begins with a given\
    \ population size of strings also called\na chromosome. Each ‘chromosome’ consists\
    \ of a ‘gene’ which may represent points\nin the population. The sequence in which\
    \ the genes are present would represent a\nsolution to the problem. For e.g. for\
    \ a route scheduling problem, this may be the\ncoordinates of the stops. The ‘goodness’\
    \ of a chromosome is determined by a fitness\nfunction that quantifies how appropriate\
    \ a given chromosome is as a solution for the\nproblem. Choosing the right fitness\
    \ function is an important consideration in genetic\nalgorithms as it needs to\
    \ gauge the kind of optimization that is to be performed.\nThe optimization process\
    \ starts with an initial population of a given size. Once a fit-\nness function\
    \ has been defined, in each iteration, two or more chromosomes (parents)\nare\
    \ taken at random from the population and one or more offsprings are generated.\n\
    The random selection takes the selected parents fitness function value in to account,\n\
    however, its necessary that not all parents chosen are the fittest of the population\
    \ as\notherwise, diversity will be compromised, and the algorithm may get stuck\
    \ in a local\nminimum. The method by which these offspring are generated is called\
    \ the Crossover\nfunction and the number of parents mated to form offsprings from\
    \ them depends\non the crossover rate. The Crossover function defines the way\
    \ the genes within the\nchromosomes are exchanged. Usually, the crossover rate\
    \ has a high value. Moreover,\ndepending on some mutation rate, a given fraction\
    \ of all offsprings are mutated. Mu-\ntation depends on the mutation function\
    \ used and involves members of the offspring\nbeing swapped in some manner. When\
    \ one iteration of the offspring creation from\nthe parents in the entire population\
    \ is completed, the offsprings replace members of\nthe original population (typically\
    \ the weakest) and one generation of the GA is said\nto be completed. In order\
    \ to converge to a sufficiently good result, GA’s need to run\nfor many generations.\n\
    3.3\nParticle Swarm Optimization\nParticle Swarm Optimization is modeled on the\
    \ social behavior of animals rather than\nthe evolutionary biological behavior\
    \ on which Genetic Algorithms are based. PSO\n[252] is particularly based on the\
    \ behavior of a flock of birds searching for food. Each\nbird in the flock searches\
    \ for food and can communicate with other birds in the flock\nas soon as it finds\
    \ food or a good direction for it. Therefore, each bird has two food\n‘directions’\
    \ that it needs to consider, first is on an individual level which is called\n\
    the personal best and the second is on the flock level which is the global best.\
    \ Using\nthese two values the bird will proceed towards that path and will inform\
    \ other birds\nin the flock too. The idea here is that after enough time and with\
    \ all the individuals\nworking together, the swarm will find the place with the\
    \ highest concentration of\nfood. In terms of using PSO for optimization tasks,\
    \ individual birds are equivalent\nto a solution as in a GA and each is considered\
    \ as a point or a particle, collectively\nthey make up the swarm. This swarm population\
    \ may be initialized randomly or\nbased on some domain knowledge about the problem.\
    \ The highest concentration of\nfood represents the optimal solution for the whole\
    \ swarm where as a good direction\n51\nrepresents the local optimal solution for\
    \ each case. The aim here, like birds in a flock\nis to determine the global optimal\
    \ solution using information from each individual\nparticle. Each particle has\
    \ three aspects to it, its position, its velocity and a value of\nits current\
    \ position’s ’goodness’. This ’goodness’ as in the GA is defined by a fitness\n\
    function. Like birds, each particle has a personal best fitness value and is also\
    \ aware\nof the global best fitness value. For any particle, the new direction\
    \ of movement is\ndecided by a combination of the personal best and the global\
    \ best as well as the\nparticle’s intention to maintain its current movement.\
    \ Furthermore, several different\ntopologies can be utilized, and a neighborhood\
    \ can also be set for each particle to\nconvey positions when limiting the global\
    \ best parameter to the local best scheme\nrather than the whole swarm. The algorithm\
    \ may be stopped till the best solution is\nreached or no more improvement is\
    \ observed.\n3.4\nDifferential Evolution\nDifferential evolution [253] is a stochastic\
    \ evolutionary algorithm which is used for\noptimization problems for continuous\
    \ functions. The DE algorithm does not expect\ngradient information and thus it\
    \ doesn’t need to be differentiable. Like other evolu-\ntionary algorithms, a\
    \ solution is searched for in the design space by maintaining a\nset of individual\
    \ candidate solutions. In each iteration, the solutions with the best\nfitness\
    \ are combined together and retained for the next iteration. The aim is to im-\n\
    prove upon the fitness value and this process is repeated until a pre-decided\
    \ condition\nfor termination of this process is satisfied. Differential Evolution\
    \ is very similar to\nGenetic Algorithms in that both are evolutionary in nature,\
    \ however, the difference\nis that the DE uses real numbers in the chromosome\
    \ and also that the mutation oper-\nation consists of the difference between two\
    \ or more chromosomes of the population\nwith the possible addition of some type\
    \ of noise to create a new individual. Like\nGA, DE also suffer from getting stuck\
    \ in local minima. The DE algorithm also has\nthree control parameters, the population\
    \ size, the mutation factor and the crossover\nprobability.\n3.5\nArtificial Bee\
    \ Colony\nArticle Bee Colony [254] is a swarm intelligence algorithm based on\
    \ the behavior of\nbees. Within bees, there are different social classes who work\
    \ together to complete\ntasks such as harvesting pollen and nesting through the\
    \ use of smell, ’swing dance’\nand other methods. Bee colonies consist of three\
    \ types of bees, queen, male and\nthe worker bees which work on activities such\
    \ as searching for food, gathering and\nstorage of honey.\nAfter gathering honey,\
    \ the worker bee comes to the nest and\ninforms other bees about the location\
    \ of the honey source site through a dance. The\nABC algorithm simulates the behavior\
    \ of bees by considering three elements, the\nfood source, employed bees and unemployed\
    \ bees. The food source is represented as\nrevenue considering its distance and\
    \ quality, the higher the revenue, the better is the\nvalue. In computational\
    \ optimization terms, the food source is a potential solution\nto the objective\
    \ formulation of the considered problem and the quality or value of\n52\nthe food\
    \ source represents the fitness value of that particular solution. At the start,\n\
    all bees are used as scouts, searching for food sources. When a food source is\
    \ found,\nfor a high value food source, bees who find those food sources become\
    \ hire bees and\ncollect the food source. If the food source is of intermediate\
    \ value, the bees become\nfollow bees and if the food source value becomes low,\
    \ the bees become scout bees to\nlook for better food sources. Hire bees, the\
    \ bees with a food source location having\na high value, lead the follow bees\
    \ to develop solutions in their neighborhood in order\nto come up with more solutions.\
    \ A subset of the highest-ranking solutions are then\nconsidered before this process\
    \ is repeated again until the end conditions are met.\n4\nOptimization Applications\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents\nthe different uses of optimization techniques for IoT\
    \ enabled Smart Cities.\nThis\ntask is performed for all eight components, Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Homes, Smart Industry, Smart\nInfrastructure and Smart Transportation.\n4.1\n\
    Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and in-\ntelligent systems to improve agricultural productivity.\
    \ The sustenance of agriculture\ndepends on water, and it is central to the agricultural\
    \ production of food items around\nthe world. However, water is becoming an ever-scarce\
    \ resource due to the increasing\ndemand caused by human population growth, increased\
    \ economic activity by indus-\ntries and also due to climate change. It therefore\
    \ is necessary to utilize this precious\nresource wisely so as make use of it\
    \ in the best manner possible.\nOne approach\ntowards ensuring that water and\
    \ land is used appropriately is by introducing irriga-\ntion management schemes\
    \ such as irrigation scheduling and water allocation in the\nfarming process.\
    \ A summary of the optimization problems, objectives, constraints in\nsmart agriculture\
    \ and the use of IoT is illustrated in Figure 8.\nMeasurements in water irrigation\
    \ systems are typically performed by sensors\nplaced at different points in the\
    \ canals and rivers to determine water flow, volume and\nspeed. This information\
    \ regarding water movement can be combined with economic\ninformation such as\
    \ yeild, crop profit to optimize water distribution. Irrigation man-\nagement\
    \ through scheduling has been performed by the authors of [255, 256, 257, 258]\n\
    to maximize net return on crop profits, water use efficiency and to minimize leakage\n\
    losses. In [259] Fuqiang et al. aim to optimize water delivery through canals\
    \ while\nalso performing scheduling. They do this using a genetic algorithm and\
    \ work with\ntwo objectives, minimizing the difference between the time of water\
    \ delivery and wa-\nter demand and the fluctuation in water discharge of the main\
    \ canal. Their model\nwas applied to a district in China.\nThe authors in [260,\
    \ 261] work on optimal allocation of water. Of these, Ikudayisi\net al. [260]\
    \ use the differential evolution algorithm to minimize the water allocated to\n\
    53\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 8. Optimization applications\
    \ in Smart Agriculture.\nfarms in South Africa while maximizing the benefits in\
    \ terms of job creation, ensuring\nfood security and the yield of crops.\nWu et\
    \ al.\n[261] approach this as problem\nof reducing deviation between different\
    \ channels and minimizing water seepage to\nensure a more consistent supply to\
    \ all water channels. An approach presented by\nOcampo et al. [262] tackles this\
    \ problem not as a task of allocation directly but\nconsiders the scenario of\
    \ providing sufficient water to a smart farm while controlling\ntwo water pumps.\
    \ The objective function is formulated to minimize the energy cost\nof the water\
    \ pumps while maintaining sufficient supply of water to the plants on the\nfarms.\
    \ Constraints considered for such applications include the limited quantities\
    \ of\nwater being worked with, the time for which the water was available and\
    \ the area\nof land which was to be considered. Another allocation based scheme\
    \ is presented\nby Zhuo et al. [263] who use a genetic algorithm for an irrigation\
    \ system based on\na reservoir and two pumping stations. Their aim is to ensure\
    \ that there is no water\n54\nshortage. The objective function used by them is\
    \ the minimization of the annual sum\nof squared water shortage. Other work in\
    \ [264] also minimizes use of groundwater\nand increase benefit to the regional\
    \ water supply through reduction of water deficits\nin the Dujiangyan region of\
    \ China.\nA precision agriculture scheme is presented by Roy et al.\n[265] who\
    \ combine\nan IoT system consisting of sensors on plants using a GA based rainfall\
    \ predictor.\nCombining predicted rainfall information along with the sensed moisture\
    \ level in\nthe crops, they control plant watering. Lin et al. [266] propose a\
    \ framework for the\nmanagement of fertigation and irrigation in precision agriculture.\
    \ They perform short\nterm management and long-term management. Soil and crop\
    \ growth data is gathered\nfrom IoT based sensor systems. Long term planning refers\
    \ to the allocation of water\nand fertilizer resources to crops in terms of quantity\
    \ so as to meet demands whereas\nshort term refers to when and how to use them.\
    \ They use a genetic algorithm for long\nterm planning considering the allocation\
    \ of water and fertilizer for crops to maintain\npH value and electrical conductivity.\
    \ This information has been presented in Table\n16 while a summary of the identified\
    \ data sources used by each considered work has\nbeen provided in Table 17.\n\
    4.2\nSmart City Services\nAccording to the world bank, the amount of annual solid\
    \ waste generated is set to be\n3.40 billion tons [268] in 2050. Managing this\
    \ waste and its collection in an efficient\nmanner is imperative for health and\
    \ climate reaons. The most common application\ntowards smart city services optimization\
    \ is waste management as illustrated in Figure\n9 which summarizes the objectives,\
    \ constraints and the use of IoT.\nSmart waste collection systems include sensors\
    \ attached to trash cans which can\ninform the municipal authority about the status\
    \ of the garbage amount present in\nthem.\nOnce the trash cans are close to being\
    \ full, it is the responsibility of the\nmunicipal corporation to perform garbage\
    \ collection in an efficient manner. In this\nrespect, data provided by the sensors\
    \ on garbage cans can be used to determine\nan optimized route for garbage collection\
    \ to construct the Vehicle Routing Problem\n(VRP) in the Smart City Services domain.\
    \ As such, this problem has been performed\nkeeping in view various goals. The\
    \ minimization of the route distance taken by a\ngarbage tuck has been performed\
    \ by the authors in [269, 270, 271, 272, 273]. The\naim in this case is to determine\
    \ a route for garbage collection vehicles that minimizes\nthe total distance traveled\
    \ by the them. Zhang et al. [273] consider multi-vehicle\nallocation while considering\
    \ the single objective of minimizing route distance. Wei\net al. [274] use the\
    \ Artificial Bee Colony algorithm to determine garbage collection\nroutes resulting\
    \ in the minimum emission of CO2. Another optimization objective\nin route optimization\
    \ for waste management has been the minimization of the total\ntravel time, such\
    \ a target is described by the authors of [275, 276, 277, 278] who aim\nto reduce\
    \ travel time while considering emptying of waste bins. Another optimization\n\
    consideration in route optimization for waste management is to reduce cost. This\
    \ has\nbeen carried out by Tirkolaee et al. [279] who formulate a multi-objective\
    \ function of\ntravel cost and total useage cost of vehicles and determine the\
    \ route with the minimum\n55\nTable 16. Optimization in Smart Agriculture\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nIrrigation Management\
    \ (Ir-\nrigation Water Scheduling)\nACO [255]\nSingle\nMaximizing net return on\
    \ crop\nConstraint on water avail-\nability\nPSO [256]\nCapacity of irrigation\
    \ sys-\ntem\nWater\nsavings\nshould\nbe\nmore than deficiency\nGA [259]\nSingle\n\
    Minimize water fluctuations and\ndifference between the time of wa-\nter demand\
    \ and need\nFinite canal capacity\nMaximum rotation time lim-\nitation\nGA [257]\n\
    Parallel\nMaximize yield, global and local\nwater use efficiencies\nConstraint\
    \ on irrigation in-\nterval\nMinimum and max irriga-\ntion amount\nGA [258]\n\
    Parallel\nMinimize leakage loss both individ-\nually and overall\nFlow\ncapacity\n\
    limited\nby\nmaximum\nIrrigation time constraint\nNet discharge constraint\nTotal\
    \ flow rate should be\nsum of individual flowrates\nIrrigation Management (Ir-\n\
    rigation Water Allocation)\nDE [260]\nSingle\nMinimize irrigation water allocated\n\
    and maximizes net benefits\nConstraint on the land area\navailable\nMinimum and\
    \ max planting\nareas for crops\nLimited water available for\nthe farm\nPSO [261]\n\
    Parallel\nMinimize deviation in the different\nchannels, water seepage in the\
    \ dis-\ntribution channels\nTime\nWater quantity constraints\nGA [264]\nParallel\n\
    Maximize benefit to regional wa-\nter supply, minimize water deficit\ngroundwater\
    \ exploitation in regions\nWater supply quantity con-\nstraints for annual water,\n\
    ground water\nIrrigation Management (En-\nergy Optimization)\nGA [262]\nParallel\n\
    Minimize energy cost while main-\ntaining water supply for plants\nLimited energy\
    \ available\nWater volume maintained in\nstorage tank, fish pond\nGA [263]\nSingle\n\
    Minimize sum of squared water\nshortage\nAnnual water availability in\nreservoir\n\
    Water rights of replenish-\nment pumping station\nWater rights of the irrigation\n\
    pumping station\nOperational rule constraints\nIrrigation\nManagement\n(Water\
    \ Control)\nGA [267]\nSingle\nMaximize yield\nMinimum\nand\nmaximum\nwater depth\
    \ limits\nMin and max soil moisture\nIrrigation\nand\nFertilizer\nManagement\n\
    GA [266]\nSingle\nMaximize economic profits and en-\nvironmental benefits\nLimits\
    \ on the demand of wa-\nter for each crop\nTotal water does not exceed\navailable\n\
    Total fertilizer doesn’t ex-\nceed availability\nWater allocation should be\n\
    positive\nTable 17. Data setup used for Smart Agriculture Optimization\nData Type\n\
    Papers\nSelf-collected / Presented\n[256, 258, 259, 262, 267, 266]\nGovernment\
    \ and private agencies\n[260, 256, 255, 267, 259, 257, 258, 261]\n56\nSmart City\
    \ Services \nWaste Management\nRoute OpƟmizaƟon \nObjectives: Minimize\ndistance,\
    \ CO2\nemissions, travel time\nConstraints: Road\nnetwork fixed, location\nserved\
    \ by one truck,\ncontinuous routes,\ndeadline to finish jobs,\ncapacity limited\n\
    IoT usage: Sensors for\ntrash fill level and\nweight detection\nFigure 9. Optimization\
    \ applications in Smart City Services.\ncosts using the ACO. Constraints considered\
    \ in such applications are related to a\nfixed road network which depends on the\
    \ locality for which the optimization is being\nperformed, the continuity in the\
    \ determined route as well as fulfillment of capacity\nrestrictions. The useage\
    \ of optimization algorithms in smart city services is provided\nin Table 18 and\
    \ the data sources used are provided in Table 19.\n4.3\nSmart Grid\nThe electricity\
    \ grid has been a major beneficiary of smart city technologies. The in-\ncreasing\
    \ demand for energy by consumers along with the environmental impact that\nfossil\
    \ fuel-based energy production has on the planet has forced utility companies\n\
    to introduce renewable energy sources within the electricity distribution system\
    \ and\nmake their energy production and distribution systems more efficient through\
    \ plan-\nning and design improvements. Optimization algorithms find applications\
    \ within the\nsmart grid domain in terms of power management and planning.\nA\
    \ summary of\n57\nTable 18. Optimization in Smart City Services\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nWaste\nManagement\n\
    Route Optimization\nACO [269]\nSingle\nMinimization of distance\nRoad Network\
    \ is fixed\nGA [270, 271,\n273]\nEach dumpster served by\none truck only\nTrucks\
    \ leave depot to go to\nlandfill\nPSO [272]\nRoutes are continuous\nABC [274]\n\
    Single\nMinimize Co2 emissions\nCapacity constraint for bins\nas well as trucks\n\
    ACO [275]\nSingle\nMinimize total travel time\nTrucks leave a depot empty\nGA\
    \ [276, 277]\nBins needs to be fully emp-\ntied by trucks\nVehicle start depot\
    \ and end\nat landfill\nPSO [278]\nDemand should not exceed\ncapacity\nACO [279]\n\
    Single\nMinimize travel cost and to-\ntal usage cost of vehicles\nSubtour elimination\n\
    Jobs should finish within a\ngiven deadline\nTable 19. Data setup used for Smart\
    \ City Services Optimization\nData Type\nPapers\nSelf-collected / Presented/ Generated\n\
    [269, 270, 271, 275, 279, 277, 273]\nGovernment Agency\n[276, 278]\nDataset\n\
    Capacitated VRP datasets [280] by [272], Capacitated VRP Instances [281] by [274]\n\
    the applications, objectives, constraints and IoT usage for optimization algorithms\
    \ in\nSmart Grids has been illustrated in Figure 10.\nAn increasing population\
    \ has led to an increasing demand for electricity around\nthe world. This burdening\
    \ of the electricity grid has led to measures for increasing\nthe performance\
    \ of the electricity distribution system by reducing loss, prevent over-\nload\
    \ and reduce cost. The authors in [282, 283, 284, 285, 286, 287, 288] work on\n\
    the improvement of grid performance by minimizing cost and reducing power losses.\n\
    Power loss minimization is specifically targeted by [282, 286, 284]. Of these,\
    \ Ettappan\net al. [282] aim for the reduction of power losses, voltage deviation\
    \ and increasing\nvoltage stability. Atteya et al. [286] also address this problem\
    \ by considering net-\nwork redistribution to minimize losses in the grid whereas\
    \ Sakr et al. [284] focuses\non minimizing transfer losses in the smart grid to\
    \ accomplish this task. Nguyen and\nMohammadi [285] attempt the reduction of power\
    \ losses and line congestion by deter-\nmining the location of thyristor controlled\
    \ series compensator devices. The problem\nis formulated as a multi-objective\
    \ problem aiming to minimize loadability of the lines,\nactive power loss and\
    \ the reactance of the transmission line. A cost reduction-based\napproach to\
    \ improve grid performance is followed by Das et al. [283] who aim to\nreduce\
    \ cost of maintaining electrical stability and also the cost of management of\
    \ the\ndistribution network. They do this by considering changing the location\
    \ of energy\nstorage systems within the grid. Kanwar et al. [287] take maximizing\
    \ profits and\n58\nSmart Grid \nPower Management \nImproved Grid\nPerformance\
    \ \nDistributed\nEnergy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\n\
    Network \nObjectives: Minimize power\nloss, voltage deviation,\nreactance, average\n\
    loadability, cost \nMaximize profit  \nConstraints: Power flow\nrestrictions,\
    \ location\nlimitations, operational\nlimitations. capacity limits,\nload balances,\
    \ power limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions\
    \ \nConstraints: Power limits\n(generation and\ndistribution), battery\ncharge/discharge\
    \ limits,\nload schedule restrictions,\ncapacity limits\nObjectives: Minimize\n\
    expansion cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 10. Optimization applications in Smart Grid.\nminimization of power losses\
    \ while considering sizing of a distributed energy resource\ngeneration system.\n\
    Distributed energy resource (DER) management is another area where optimiza-\n\
    tion algorithms are used in Smart Grids. The management of distributed energy\n\
    sources within smart grids is dependent on the interconnectivity provided by IoT\n\
    in the smart grid system.\nSmart meters within the smart grid provide real-time\n\
    information relating to power consumption which can be used for controlling DER\n\
    electricity. Moreover, IoT devices allow for switching loads and generation sources\
    \ as\nrequired. This assists in creating a virtual power plant to aggregate all\
    \ energy sources\nin a DER scenario. With global warming and a changing climate,\
    \ utilities around\nthe world are increasingly incorporating various renewable\
    \ energy sources within their\ngrid which often times are an economically convenient\
    \ option as well. However, many\n59\nof these sources such as wind and solar (photo\
    \ voltaic [PV]) do not offer a consistent\nsupply of power throughout the day.\
    \ In this regard, systems such as batteries as\nwell as conventional generation\
    \ plants need to be used together along with renewable\nenergy sources. For utility\
    \ companies, it is necessary to optimize power production\nso that the maximum\
    \ amount of energy is utilized from these renewable sources so\nas to reduce cost\
    \ to the user while also maintaining the quality of service. The au-\nthors in\
    \ [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302] provide\n\
    a management scheme for DERs to minimize cost. In this regard, the authors in\n\
    [292, 293, 294, 297, 289, 290, 300, 301, 302] all formulate the problem of distributed\n\
    energy resource management as a single objective problem where the cost incurred\
    \ is\nminimized. On the other hand, the authors in [298, 295, 291] and [299] formulate\
    \ this\nas a multi-objective problem. Azaza and Wallin [299] not only target reduction\
    \ of\nelectricity production cost but also maximize reliability of the system\
    \ while reducing\nthe environmental impact of the distribution system. It is interesting\
    \ to note that the\nimprovement of system reliability is formulated as a minimization\
    \ problem as well.\nSimilarly, Das et, al. [291] consider the reduction of both\
    \ the total cost as well as\nthe environmental cost of the system. Their considered\
    \ scenario also consists of a\nPV, Wind Turbine and battery. The constraints considered\
    \ were constraints regard-\ning power flow, limitations on power and voltage values,\
    \ power balance constraint\nand power generation constraints on the renewable\
    \ energy sources. In [289, 302], a\nDER management system is developed for a microgrid\
    \ which consists of a controllable\ncollection of energy storage and generation\
    \ sources powered by IoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [303] and\n[304]. Mahdavi et al. [303] work on expanding\
    \ transmission lines utilizing the artificial\nbee colony algorithm to minimize\
    \ cost of network expansion, power losses in load\nand generation. On the other\
    \ hand, Maji and Acharjee [304] aim to determine the\nminimum number of Phase\
    \ Measurement Units (PMUs) to make the distribution\nnetwork observable. The constraints\
    \ used were power flow and balance of power as\nwell as limits on the number of\
    \ transmission lines available. The internet of things also\nfinds usefulness\
    \ in terms of the use of Phase Measurement Units that provide voltage\nand current\
    \ measurement capabilities within smart grids to perform maintenance and\nmonitoring\
    \ operations. A summary of this discussion has been provided in Table 20\nand\
    \ the data setups used by the covered research work is presented in Table 21.\n\
    4.4\nSmart Health\nSmart health refers to the use of technology to provide better\
    \ healthcare to patients.\nThis can be in the form of developing tools for better\
    \ diagnosis of diseases or the use\nof algorithms for better planning and healthcare\
    \ delivery. The deployment of timely\nemergency vehicles to a person in need is\
    \ imperative towards providing healthcare\nservices to people. Two applications\
    \ of optimization problems within Smart Health\nare emergency vehicle routing\
    \ and their allocation and relocation as shown in Figure\n11. It also summarizes\
    \ the objectives uses, constraints considered and role of IoT.\nLate arrival of\
    \ ambulances and other emergency vehicles to people in need may\nresult in irreversible\
    \ damage to life and property. Studies have shown that delayed\n60\nTable 20.\
    \ Optimization in Smart Grid\nApplication\nAlgorithm\nSingle/\nParallel\nproblems\n\
    Objectives\nConstraints\nPower\nManagement\n(Improve Grid Per-\nformance)\nABC\
    \ [282]\nSingle\nMinimize active power loss,\nvolage deviation and voltage\nstability\
    \ index (L-index)\nPower flow constraints\nGA [284]\nRestriction on power source\
    \ instal-\nlations and other components re-\nlated to power structure\nPSO\n[286,\
    \ 288]\nSingle\nMinimize power loss\nGeneration and other component\noperations\
    \ within limits\nGA [285]\nSingle\nMinimize average percent-\nage\nof\nloadability\n\
    of\nthe\nlines, active power loss, re-\nactance of transmission line\nLimitation\
    \ on values of bus voltage\nTransmission line capacity, genera-\ntor active and\
    \ reactive power.\nABC [283]\nSingle\nMinimize cost for maintain-\ning thermal\
    \ and voltage sta-\nbility and lower asset man-\nagement of distribution net-\n\
    works\nActive and reactive power must be\nbalanced\nLimits on voltage and load\
    \ maxi-\nmum\nESS max charging and discharging\nconstraints\nPSO [287]\nParallel\n\
    Maximize annual profit by\nreducing charges for annual\nenergy losses, peak power\n\
    loses etc\nConstraint on the node voltage\n(soft)\nMinimize power loss for the\n\
    network reconfiguration\nPower injected by DER and SG\nwithin limit\nPower generated\
    \ at a given node\nhas a limit\nFor reconfiguration:\nRadial topology,\nNode voltages\
    \ has a max hard con-\nstraint\nPower\nManagement\n(Distributed Energy\nResource\n\
    Manage-\nment)\nABC\n[292, 293, 294]\nSingle\nMinimize total cost\nPower\ngeneration\n\
    by\nrenewables\nwithin limits\nDE [295, 297,\n296]\nBattery charge and discharge\
    \ limits\nand system reliability\nGA [289, 290]\nPower balance constraint (gener-\n\
    ated equal to consumed)\nPSO\n[300, 301, 302]\nSpecific loads are interruptible\n\
    Constraints on the efficiencies of the\nsources\nDE [298]\nSingle\nMinimize cost\
    \ and emission\nABC [305]\nSingle\nMinimize cost and power im-\nported from outside\
    \ micro-\ngrid\nPower flow constraints for the DER\nGA [291]\nSingle\nMinimization\
    \ of cost of en-\nergy and life cycle emissions\n(CO2 and energy stored in\nbatteries\
    \ or converted by re-\nnewable sources during pro-\ncess of satisfying load re-\n\
    quirements)\nConstraints on battery capacity\nSystem reliability constraint\n\
    Energy produced equal or greater\nsthan required\nPSO [299]\nSingle\nMinimize\n\
    reliability\ncost,\ncost of electricity production\nand operation environmen-\n\
    tal impact ()using renewable\nfactor)\nExpansion of distri-\nbution network\n\
    ABC [303]\nSingle\nMinimize cost of network ex-\npansion, active losses and\n\
    loss of load and generation\nPower flow and active power bal-\nanced\nPower generation\
    \ limits\nNumber of transmission line limits\nPSO [304]\nSingle\nMinimize number\
    \ of PMUs\nSG Network should be observable\n61\nTable 21. Data setup used for\
    \ Smart Grid\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n25 Bus\
    \ network s[295, 297, 298, 291, 299, 300, 301, 302] [305]\nGovernment Agency/\
    \ other research work\n[292, 293, 294, 290, 299, 303]\nDataset/ Standard Network\n\
    IEEE 14 Bus [284, 304]\nIEEE 30 Bus [282, 284, 285]\nIEEE 33 Bus [286, 283, 287,\
    \ 296]\nIEEE 37 Bus [289]\nIEEE 57 Bus [282, 284, 304]\nIEEE 69 Bus [287]\n119\
    \ Node system of [306, 288]\nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nObjectives: Minimize time,\ncost\nConstraints:\
    \ Traffic balance,\ntraffic flow restrictions,\nvehicle speed and number\nlimits,\
    \ location of\nemergency vehicle\nObjectives: Minimize time,\nvehicle density\
    \ \nConstraints: Road connection\nrestrictions, time limits \nIoT Usage: Real\
    \ time location services, real time traffic\ninformation, vehicle to vehicle and\
    \ vehicle to infrastructure\ncommunication can also provide better navigation\
    \ and monitoring\nservices\nFigure 11. Optimization applications in Smart Health.\n\
    ambulance dispatch increases mortality [307], moreover, economically speaking,\
    \ a\none-minute delay in response time for cardiac patients found that the mortality\
    \ in-\ncreases by 1% and adds annual costs of USD 7 billion in healthcare expenditure\n\
    [308]. Keeping this in mind ambulance deployment and location determination have\n\
    been of considerable interest in the area of optimization for smart health. These\n\
    two problems are specific cases of the Vehicle Routing Problem [309] and Maximum\n\
    coverage problem [310] sometimes called the Ambulance Routing Problem [311] and\n\
    Ambulance Location Problem [312]. The authors in [313] work on the optimal allo-\n\
    62\ncation determination based on fixed sites and a finite number of ambulances\
    \ while\nminimizing lateness of ambulance arrival using the Ant Colony Optimization.\
    \ Later\non, in their work in [314], they do a comparison with using GAs and find\
    \ that GAs\nprovide better performance. Kochetov and Shamray [315] attempt localization\
    \ of\nambulance fleet at base stations with the aim to minimize the average waiting\
    \ time\nfor arrival of ambulances. An interesting approach to this problem is\
    \ presented in\nYan et al. [316] who work on this problem from a scheduling perspective\
    \ where they\ncontrol scheduling of emergency vehicles to reduce the total cost\
    \ in terms of money\nand time using a Genetic Algorithm. Another approach for\
    \ sequencing vehicles to\nensure emergency vehicles reach their destination in\
    \ time is presented by Lu et al.\n[317] who aim to prioritize emergency vehicle\
    \ thoroughfare on traffic intersections.\nThey do this by minimizing the entrance\
    \ time of the vehicle by manipulating vehicle\norder. Constraints used for these\
    \ problems include constraints on the speed of the\nambulances, the flow of vehicles\
    \ on the road, specific road connections present as well\nas time constraints.\
    \ The internet of things serves a pivotal role in enabling the allo-\ncation and\
    \ routing of emergency vehicles. The connectivity provided by IoT through\nvehicle-to-vehicle\
    \ communication as well as vehicle to infrastructure communication\nfacilitates\
    \ providing a real-time indication of the vehicle’s location as well as the con-\n\
    dition of traffic in a given area. This information can then be used to determine\
    \ an\noptimal route for emergency vehicles as well as for their optimal deployment\
    \ to serve\npeople in need. Information about optimization methods for smart health\
    \ has been\npresented in Table 22 and the data setups used in these approaches\
    \ in Table 23.\nTable 22. Optimization in Smart Health\nApplication\nAlgorithm\n\
    Single/\nParallel\nproblems\nObjectives\nConstraints\nEmergency\nVehicle\nAllocation\
    \ and Relo-\ncation\nACO [313]\nSingle\nMinimize lateness\nAmbulance\nfrom\nnearest\n\
    hospital\nis\ndispatched\nGA [314]\nSpeed of ambulance\nTotal number of am-\n\
    bulance limits\nGA [315]\nSingle\nMinimize\naverage\nwaiting\ntime of ambulances\n\
    Balance\nconstraints\non exit and entry vol-\numes\nFlow\nconservation\nconstraints\n\
    GA [316]\nSingle\nMinimize\ntotal\ncost\nin\nmoney and time\nEmergency\nVehicle\n\
    Routing\nPSO [318]\nSingle\nMinimize travel time, road\nlength traveled, density\
    \ of\nvehicles on the road\nRoad connections are\nspecific\nGA [317]\nSingle\n\
    Minimize the entrance time\nof\nemergency\nvehicle\nby\nchanging the order of\
    \ vehi-\ncles going through intersec-\ntions\nConstraint\non\nthe\ndifference\n\
    between\narrival times of cur-\nrent\nand\nprevious\nvehicles and on the\nentrance\
    \ time of the\nvehicle\n63\nTable 23. Data setup used for Smart Health\nData Type\n\
    Papers\nSelf-collected/ Presented/ Generated\n[313, 314, 315, 316, 318, 317]\n\
    Government Agency/ other research work\n[314, 315, 316]\n4.5\nSmart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\n\
    in Figure 12.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling \n\
    Objectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort \n\
    Constraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 12. Optimization applications in Smart\
    \ Homes.\n64\nHome energy management refers to the development of demand side\
    \ manage-\nment schemes that aim to reduce the electricity cost billed to a customer\
    \ or maintain\ncomfort for the user. One way this is performed is by appropriate\
    \ appliance schedul-\ning. The idea here is to schedule the usage of appliances\
    \ in such a way that the\nmost power-hungry devices are turned on during off peak\
    \ hours when electricity costs\nmight be lower. The combination of the Smart Grid\
    \ and Smart Homes facilitates the\ndevelopment of optimization schemes that not\
    \ only benefit the customer (in terms\nof reduced electricity costs and maintaining\
    \ comfort) but also be useful for the util-\nities in ensuring that load profiles\
    \ (though minimizing the peak to average ratio)\nare more consistent thereby allowing\
    \ better planning of the power generation mix\nused by them. The authors of [319]\
    \ perform appliance scheduling for the purpose of\nminimizing electricity cost\
    \ and the waiting time for appliance usage. Interestingly,\nthey incorporate comfort\
    \ maintenance by adding it as a constraint. A similar ap-\nproach has been followed\
    \ by Bui et al [320] and Makhadmeh et al. [321] who aim to\nminimize the cost\
    \ of electricity usage with a constraint for maintenance of comfort.\nMakhadmeh\
    \ et al. [321] also include the reduction of waiting time rate for appliances\n\
    by the user and the reduction of the peak to average ratio of the power consumed\
    \ as\nconstraints. The authors in [322, 323, 324, 325] perform appliance scheduling\
    \ while\nconsidering electricity cost and peak to average ratio which need to\
    \ be minimized.\nAll of the authors present a multi-objective function for this\
    \ purpose combining the\nobjectives of minimizing the cost and the peak to average\
    \ power ratio. Azimi et al.\n[326] combine the problem of reducing cost and power\
    \ together as a single objective\nby considering the minimization of the ratio\
    \ of operating cost and load factor in a\nbattery supported system. The works\
    \ of [327, 328, 329, 330, 331] also consider user\ncomfort as part of the objective.\
    \ In [327], Essiet and Wang form a multi-objective\nminimization problem of electricity\
    \ cost, peak to average ratio for power and discom-\nfort of users in a smart\
    \ home supported by a renewable energy system consisting of a\nbattery and PV\
    \ system. In Chanra et al. [332], the authors aim to reduce electricity\ncost\
    \ by appliance scheduling in such a manner so as to make as much use of onsite\n\
    energy units as possible so as to reduce usage of utility provided electricity.\
    \ The\nenergy units they consider are a diesel generator, renewables and battery.\
    \ Another\napproach that aims to reduce cost of consumed electricity is presented\
    \ by Faia et\nal. [333] who formulate it as a problem of minimizing the energy\
    \ bill and the cost\nassociated with curtailment of power in a system with a battery\
    \ and a photovoltaic\nsystem. Work in [334, 330, 335, 336] also perform appliance\
    \ scheduling to reduce\ncost of electricity. Appliance scheduling for smart homes\
    \ has also been performed by\nFatima et al. [323] and Abid et al. [322] considering\
    \ a microgrid for homes where\ninstead of optimizing data from single homes, the\
    \ authors used data from connected\nsmart meters to determine an optimized control\
    \ scheme for appliances across the grid.\nThe constraints used for optimization\
    \ in smart homes are on the comfort needing to\nbe maintained, constraints on\
    \ the powerflow, time of operation, the maximum power\nthat is present or used\
    \ and which appliances are switchable appliances. Appliance\nscheduling is based\
    \ on smart meters as well as individual control and monitoring of\nappliances\
    \ using IoT systems. IoT devices enable the microgrid which is used to\ngather\
    \ data as well as control the switching on and off of sources from the houses\n\
    65\nelectricty supply. The information gathered from these IoT units can be processed\n\
    to optimize energy consumption patterns to reduce cost to the customer as well\
    \ as\nincrease comfort. The use of the considered optimization schemes for smart\
    \ homes\nhas been presented in Table 24 with the data setups presented in Table\
    \ 25.\n4.6\nSmart Industry\nOne of the biggest enablers of the Industry 4.0 concept\
    \ has been the use of AI tech-\nniques to improve the efficiency of the manufacturing\
    \ and production process. This\nhas led to the development of cyber physical systems\
    \ aiming to assist in activity recog-\nnition [339], machine health prediction\
    \ [340] and production management in terms of\nbottleneck prediction [341]. Apart\
    \ from conventional AI applications of anomaly de-\ntection, classification and\
    \ regression, computational optimization also finds numerous\napplications as\
    \ it fits well with the objective of efficient and streamlined manufac-\nturing.\
    \ The major applications for the use of computational optimization have been\n\
    in the area of routing and location for logistics and are variations of the vehicle\n\
    routing problem and are typically represented as Multidepot Vehicle Routing Prob-\n\
    lem (MVRP), Vehicle Routing Problem Pick-up and Delivery with Time Windows\n(VRPPDTW)\
    \ or Large-scale Dynamic Vehicle Routing Problem (LSDVRP). Figure\n13 summarizes\
    \ the objectives utilized, constraints and the role of IoT in optimization\nfor\
    \ Smart Industry.\nThe authors in [342] and [343] use the ABC and the GA respectively\
    \ to determine\nthe best location of service sites for logistic operations. Both\
    \ these approaches use\nmulti-objective formulations aiming to reduce cost of\
    \ operations, transportation as\nwell as the establishment of the centers. The\
    \ authors in Su et al. [344] use ACO,\nAlinaghia et al. [345] PSO and Utama et\
    \ al. [346] use ABC to address the problem\nof determining the best route for\
    \ logistics operations.\nThe routing and coverage\nproblem for logistics involves\
    \ determining the best route for either a single or multiple\nvehicles at a depot\
    \ which have to visit every customer. The works of [344, 345, 346]\nfocus on reducing\
    \ the cost incurred in the routing for vehicles in logistics as a single\nobjective\
    \ formulation. On the other hand, the authors of [347, 348] and [349] all\nwork\
    \ on the minimization of distance as their objective in determining the optimal\n\
    route for delivery vehicles trying to serve multiple locations.\nMounia and Bachir\n\
    [348] address routing in logistics as a multi-objective problem where they not\
    \ only\naim to minimize the distance traveled by the vehicles but also aim to\
    \ reduce CO2\nemissions and the number of vehicles used. A time based optimization\
    \ approach is\npresented by the authors of [350] and [351] with [350] also factoring\
    \ in reduction of fuel\nconsumption in their objective function formulation. Constraints\
    \ used for the routing\nand location determination problem are related to time,\
    \ capacity constraints for the\nvehicles, each customer being served only once,\
    \ constraints related to the route. The\ndetermination of the location and the\
    \ route for vehicles is dependent on real time\ninformation concerning the traffic\
    \ in the area as well as the loads to be collected from\neach site in addition\
    \ to other information which can be provided by IoT units. The\nusage of optimization\
    \ algorithms for smart industry has been presented in Table 26\nwith data setups\
    \ presented in Table 27.\n66\nTable 24. Optimization in Smart Homes\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nHome Energy Man-\n\
    agement\nACO [319]\nSingle\nMinimize cost and waiting\ntime\nComfort needs to\
    \ be main-\ntained\nACO [322]\nParallel\nMinimize cost and peak to\naverage ratio\n\
    Power flow constraints\nACO [323]\nSingle\nMinimize cost and peak to\naverage\
    \ ratio\nMaximum energy capacity\nconstraint\nDE [324]\nDevice counted that can\
    \ be\nshifted is positive\nPSO [325]\nNumber of devices shifted at\nany time should\
    \ not be more\nthan the available number of\ncontrollable devices\nGA [337]\n\
    Single\nMinimize peak to average\nratio for load shaping\nLoad shaping, redistribution\n\
    of load in a flexible manner\nGA [326]\nSingle\nMinimize ratio of operating\n\
    cost and load factor\nCharging and discharging of\nbatteries\nComplete load transfer\
    \ and\nload clipping limits\nDE [327]\nSingle\nMinimize\nelectricity\ncost,\n\
    peak\nto\naverage\nratio\nof\npower and discomfort mini-\nmization of users\n\
    Constraints on PV supply\nlimits\nACO [328]\nState of charge and rate of\ndischarge\
    \ of battery\nDE [329]\nSingle\nMinimize\nelectricity\ncost\nand discomfort\n\
    Time of operation within\nspecified limits\nPSO [331]\nTemperature,\nair\nquality,\n\
    illumination\nand\nenergy\nshould be within maximum\nlimits\nGA [330, 338,\n305]\n\
    Parallel\nA given appliance must be\non for specified times of the\nday\nPower\
    \ limits to be followed\nABC [320]\nSingle\nMinimize cost of electricity\nAppliances\
    \ for comfort have\nfixed times\nDE [332, 334]\nSome appliances cannot be\ndelayed\n\
    GA [335]\nPower balance constraints\nPSO\n[321, 336]\nSurplus\nsolar\npower\n\
    sold\nback to distribution system\nMaintain zero net energy in\nbuilding\nTime\
    \ constraints\nLoad safety factor\nLoad phases of appliances\nfulfill energy requirements\n\
    Comfort needs to be main-\ntained\nPeak to average power ratio\nbalancing\nPSO\
    \ [333]\nSingle\nMinimize\nenergy\nbill\nand\ncost associated with KWH\ncurtailment\n\
    Power\nvalues\nwithin\nlim-\nits, battery charge and dis-\ncharge limits\nTable\
    \ 25. Data setup used for Smart Homes\nData Type\nPapers\nSelf-collected/ Presented/\
    \ Generated\n[322, 319, 323, 324, 325, 326, 327, 329, 305, 338, 330, 320, 334,\
    \ 335, 321, 336]\nGovernment Agency/ other research work\n[322, 323, 337, 327,\
    \ 338, 331, 332, 321, 333]\n67\nTable 26. Optimization in Smart Industry\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nLocation determina-\n\
    tion for sites\nABC [342]\nSingle\nMinimize\ntransportation\nand hub establishment\
    \ cost\nSingle allocation for each de-\nmand node\nA given number of hubs are\n\
    established\nCovering radius constraint\nTime reliability constraint\nGA [343]\n\
    Parallel\nMinimize distribution cost\nand maximize profit\nLoad capacity meets\
    \ needs\nof customers\nA delivery vehicle can only\nbe delivered when it receives\n\
    a task\nCapacity constraints\nRouting for Logistics\nABC [348]\nParallel\nMinimize\
    \ distance travelled,\nCO2 emissions, number of\nvehicles used\nEvery customer\
    \ visited only\nonce\nEvery vehicle visiting a loca-\ntion must leave it too\n\
    Ensure route continuity\nDemands of any route must\nnot exceed capacity\nEdges\
    \ satisfying time win-\ndow constraint are allowed.\nABC [349]\nSingle\nMinimize\
    \ total transporta-\ntion distance\nEach customer served only\nonce\nGA[347]\n\
    Route should start and end\nat the same depot\nServed demand of each vehi-\ncle\
    \ does not exceed capacity\nlimit\nACO [344]\nSingle\nMinimizing total cost\n\
    Each customer served only\nonce\nPSO[345]\nDispatched\nvehicles\nnot\nmore than\
    \ available\nABC [346]\nVehicle routes don’t contain\ndisconnected routes\nCustomer\
    \ demand shouldn’t\nbe larger than vehicle capac-\nity\nABC [351]\nSingle\nMinimize\
    \ travelling time\nVehicle load constraint\nSubtours not allowed\nSpeed, time\
    \ and distance\nMaximum number of vehi-\ncles on a route\nEach customer served\
    \ by one\nvehicle\nVehicle number max limit\nPSO [350]\nParallel\nMinimize fuel\
    \ consumption\nand travel time\nEach customer serviced by\nonly one vehicle\n\
    Continuity in route\nVehicle\nload\nconservation\nbetween nodes,\nFirst\nin\n\
    first\nout\nproper\nwhen traveling time is com-\nputed\nTime taken for customers\
    \ as\nstated,\nMaximum time for servicing\nVehicle capacity constraint\nDepot\
    \ is the first and final\ndestination of each vehicle\n68\nSmart Industry \nLocaƟon\
    \ DeterminaƟon of sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\n\
    establishment and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\n\
    sites need to be met,\ndistance coverage for\nlocations, time limits,\ncapacity,\
    \ demands need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions,\
    \ number of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once,\
    \ route is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 13. Optimization applications in Smart Industry.\n4.7\n\
    Smart Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the\narea of health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a\nnecessary application within the smart infrastructure domain as\
    \ it makes for safe\nusage of different structures of public use.\nThese structures\
    \ can be buildings as\nwell as transport structures such as bridges, tunnels.\
    \ Structural health monitoring\ntypically involves the use of sensors attached\
    \ to a structure at several points that can\ngauge some type of physical variable\
    \ (vibration, strain, acceleration, temperature,\ntilt etc) from the structure.\n\
    Data gathered from these connected sensors is then\nused to determine if any structural\
    \ damage has taken place or not.\nWithin the\ndomain of SHM, optimization algorithms\
    \ find application towards the Optimal Sensor\n69\nTable 27. Data setup for Smart\
    \ Industry\nData Type\nPapers\nSelf-collected / Presented/ Generated\n[342, 343,\
    \ 347, 351]\nGovernment Agency/ other research work\n[348, 349, 344, 346, 351]\n\
    Dataset/ Standard Network\nTest instances in [352] used by [345] and [350]\nPlacement\
    \ (OSP) Problem as illustrated in Figure 14. Figure 14 summarizes the\nobjectives\
    \ used, constraint and the use of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement\
    \ \nObjectives: Minimize error,\nredundancy \nMaximize sensor coverage,\nconnectivity,\
    \ relaibility\nConstraints: Sensor placement\nlocations limitations, number of\n\
    sensors limited\nIoT usage: The placement of sensors\nespecially is performed\
    \ using IoT\nwhere connected sensors povide the\ndata using which optimization\
    \ is\nperformed\nFigure 14. Optimization applications in Smart Infrastructure.\n\
    For the optimal sensor placement problem, the aim is to determine the best num-\n\
    ber and placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\n\
    too. The authors in [353, 354, 355, 356, 357] work on the placement of sensors\
    \ for\nstructural health monitoring focusing on improving the effectiveness of\
    \ the deployed\nsystem. In this regard, [353] and [356] use the genetic algorithm\
    \ to solve a multi-\nobjective problem aiming to minimize the measurement error\
    \ and cost. Yang et al.\nin [355] formulate OSP as single objective minimization\
    \ where they aim to reduce\nthe ratio of sensor placement performance to the redundancy\
    \ of information resulting\nfrom each tested placement. Another approach that\
    \ works on the error is presented\nby [354] who use the Particle Swarm Optimization\
    \ to maximize the reconstruction\n70\nTable 28. Optimization in Smart Infrastructure\n\
    Application\nAlgorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\n\
    Sensor placement\nGA [353]\nSingle\nMinimize measurement er-\nror and measurement\
    \ cost\nPSO [354]\nSingle\nMaximize\nreconstruction\naccuracy\nand\nrobustness\n\
    of\ntransfer\nrelationship\nbetween\ndeformation\ndis-\nplacement and surface\
    \ strain\n(formulated as a minimiza-\ntion\nproblem\nfor\nnegated\naccuracy and\
    \ robustness)\nSensor\nplacements\nwithin\npredefined range and angles\nGA [355]\n\
    Single\nMinimize the ratio of sen-\nsor placement performance\nto redundancy information\n\
    Sensor placement is permit-\nted on chosen location\nGA [356]\nSingle\nMinimize\
    \ the MAE between\nthe system and the esti-\nmated response (global er-\nror)\
    \ and minimize the maxi-\nmum difference between the\nsystem and its estimated\
    \ re-\nsponse (local error)\nSensor locations are from a\nset of predefined locations\n\
    DE [357]\nSingle\nMaximize quality of cover-\nage,\nlifetime,\nconnectivity\n\
    uniformity of sensor nodes\nand cluster heads and relia-\nbility\nConstraint on\
    \ the number\nof cluster heads associated\nwith each sensor node and\ncluster\
    \ head\nGA [358]\nSingle\nMinimize cross correlation of\nthe sensing network\n\
    Sensor placement is permit-\nted on chosen location\nTable 29. Data types for\
    \ Smart Infrastructure\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n\
    [353, 354, 355, 356, 358, 358, 359, 360]\naccuracy and robust transfer relationship\
    \ between the deformation and surface strain\nwith different sensor placements.\
    \ It must be noted that the objective function is for-\nmulated as minimization\
    \ of negated accuracy and negated robustness measurement.\nOptimized structural\
    \ health monitoring for aircraft monitoring has been targeted\nin [358]. In their\
    \ setup consisting of vibration sensors, the authors optimize sensor\nplacement\
    \ by minimizing the cross correlation of the vibration waves in the sensing\n\
    network. The most common constraint for sensor placement is restrictions on the\n\
    places where sensors can be placed. This information has been provided in Table\
    \ 28\nand the data setups are presented in 29.\n4.8\nSmart Transportation\nOne\
    \ of the most popular optimization applications within smart cities are within\
    \ the\nsmart transport domain. These include parking system routing, traffic signal\
    \ control\nand scheduling. A summary of the applications, their objectives, constraints\
    \ and the\nrole of IoT is illustrated in Figure 15.\n71\nSmart TransportaƟon \n\
    Traﬃc Signal\nControl \nTraﬃc RouƟng \nParking System\nRouƟng \nRoad Traﬃc\nRouƟng\
    \ \nObjectives: Minimize\ntime delay\nConstraints: Traffic\nvolume constraint,\
    \ traffic\nflow constraint, duration\nof traffic light phases \nIoT usage: For\
    \ parking, IoT nodes indicate to free parking spots from which data is\ngathered\
    \ and sent to the cloud. Connected vehicles are also another source of IoT data\n\
    used for navigation purposes along with data from cellphones. \nObjectives: Minimize\n\
    travel distance, traffic\ncongestion\nConstraints: Roadmap\nto be followed is\
    \ fixed,\nroad connections fixed \nObjectives: Minimize\ntravel time, delay,\n\
    emissions, traffic flow\nConstraints: Road\nconnections are fixed,\nnumber of\
    \ routes are\nfixed \nFigure 15. Optimization applications in Smart Transportation\n\
    Smart transport systems consist of sensors along roads and traffic intersections\n\
    to measure relevant parameters while also providing communication services between\n\
    vehicles and infrastructure. This allows for measurement of the current state\
    \ of roads\nin terms of traffic congestion and usage thereby allowing for the\
    \ use of optimization\ntechniques to improve trip experiences for users and make\
    \ the transportation system\nmore efficient. The authors in [361, 362, 363, 364,\
    \ 365] work on the minimization\nof time (wait and travel) in traffic signal control.\
    \ The aim of such systems is to\nreduce traffic build up on signal intersections.\
    \ Of these, the work in [361, 362] and\n[363] use the artificial bee colony and\
    \ the genetic algorithm respectively for a single\nobjective function of minimizing\
    \ delay time. An interesting approach for this problem\nis presented by Li et\
    \ al. [365] who use a multi objective formulation targeting the\nminimization\
    \ of the average travel time both overall and individually for all vehiclesl.\n\
    Another multi-objective approach in traffic signal control is presented by Chen\
    \ and\nYuan [366] who form a mixed problem of minimizing vehicle emissions and\
    \ travel\ntime together. Korkmaz [367] work on the estimation of delays in traffic\
    \ signals using\na genetic algorithm, they use it to minimize the difference between\
    \ the estimated\n72\nand simulated values.\nTang et al.\n[364] carry out distributed\
    \ optimization in a\nfog and cloud hierarchy.\nFirst, fog nodes optimize phase\
    \ timings within a single\ncycle and if the number of vehicles exceeds a threshold,\
    \ the results are sent to the\ncentral controller to further optimize over different\
    \ cycles so that a traffic jam is\navoided or alleviated. Zhang et al. [368] attempt\
    \ traffic signal optimization using\nmulti objective optimization functions of\
    \ reducing time delay and increasing traffic\ncapacity.\nConstraints used for\
    \ traffic signal control are timing constraints on the\nphase durations, flow\
    \ rate of vehicles and on the travel time.\nTraffic routing is also another important\
    \ aspect in smart transportation. This\ntypically involves the determination of\
    \ the best route to the destination keeping in\nview various criteria such as\
    \ reduction of distance, time, cost etc.\nThe problem\nof traffic routing is addressed\
    \ by the works of [369, 370, 371, 372, 373, 374, 375,\n376, 377, 378, 379]. The\
    \ authors in [369] and [370] use the ant colony optimization\nand genetic algorithm\
    \ to minimize the travel distance in parking system routing.\nThey aim to minimize\
    \ distance traveled by a driver looking to find a free parking\nspot, using the\
    \ algorithm, an optimized route is determined for the parking spot.\nIn, [371,\
    \ 373] and [372] the ant colony optimization algorithm is used to determine\n\
    the best route in a generic traffic scenario where cars can communicate with road\n\
    side units in a VANET architecture. Routing for public transport is performed\
    \ by\n[380] and [375] in a connected vehicle scenario aiming to minimize travel\
    \ time. An\neconomic objective approach to traffic routing is taken by the authors\
    \ of [376, 378]\nand [379] who minimize the total cost of the trip.\nMao [379]\
    \ also include traffic\ncongestion and travel time as well in their computation.\
    \ Hassoune et al. [381] work\non a parking guidance using the ant colony optimization\
    \ algorithm to reduce traffic\ncongestion and minimize distance. Constraints for\
    \ traffic routing are related to the\nroad network allowing travel in specific\
    \ directions, signaling and travel time. Within\nsmart transportation, IoT nodes\
    \ are used to determine occupied parking spaces and\nthis data is used for routing\
    \ applications in parking. Traffic routing is based on vehicle\nto vehicle and\
    \ vehicle to infrastructure communication provided by VANETs within\nthe IoT framework.\
    \ These systems enable cars to exchange data with each other and\nalso with fixed\
    \ infrastructure on the roads. This discussion is also presented in Table\n30\
    \ and the data setups for the covered work are presented in Table 31.\n5\nConclusion\n\
    This chapter provides coverage of the application of five popular computational\
    \ algo-\nrithms in the IoT enabled Smart City. It provides a mapping of the various\
    \ applica-\ntions to the specific smart city domain as well as highlights the\
    \ different formulations\nof the objective function used to solve the considered\
    \ problem. This coverage is pro-\nvided in terms of the number of objectives as\
    \ well as whether the problem was solved\nas a single objective, in a hierarchical\
    \ manner or otherwise. It also highlights the con-\nstraints used by the researchers\
    \ in solving the problem which is an important aspect\nas constraints are governed\
    \ by the application at hand. An overview of the mapping\nof various smart city\
    \ optimization applications derived from this work is provided in\nFigure 16.\n\
    73\nTable 30. Optimization in Smart Transportation\nApplication\nAlgorithm\nSingle/\n\
    Parallel\nproblems\nObjectives\nConstraints\nTraffic signal control\nABC [380]\n\
    Single\nMinimize travel time\nInterval of feasible green\ntime length values\n\
    ABC [374]\nInterval of feasible offset\ntime length values\nConstraints\non\n\
    cycle\nlengths\nABC\n[361, 362]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [363, 364]\nFlow dynamic constraint\nGA [365]\nParallel\nMinimize\n\
    time\ndelay\nand\nalso achieve traffic network\nequilibrium\nLink volume constraint\n\
    Constraints on duration\nof green/red phases\nOffset phase duration\nMinimize\
    \ average travel\ntime.\nRelationship\nbetween\nroute\nand\nlink\nflows\nneed\
    \ to be maintained\nas defined\nGA [366]\nSingle\nMinimize vehicle emissions\n\
    and travel time for vehicles\nSum of green time of\neach phase is equal to to-\n\
    tal available green time\nGreen time is set by a\nlower bound\nGA [368]\nParallel\n\
    Minimize delay, and exhaust\nemission and maximize traf-\nfic capacity (formulated\
    \ as\nminimization problem)\nCycle length of signals\nhas minimum and max-\nimum\
    \ limits\nTraffic\nRouting\n(Parking System)\nACO [369]\nParallel\nMinimize\n\
    distance\nwith\nbend straightening and turn\nreduction\nBend straightening and\n\
    turn reduction\nACO [381]\nParallel\nReduce\ntraffic\nflow\nand\nshortest\ndistance\n\
    towards\nparking\nGA [370]\nSingle\nMinimize distance\nSpecific prefixed routes\n\
    possible for free parking\nTraffic\nRouting\n(Road Traffic)\nACO\n[371, 373]\n\
    Single\nMinimize distance, minimize\ncongestion\nFollow roadmap\nACO [372]\nSingle\n\
    Maximize flow\nACO [375]\nSingle\nMinimize travel time\nConstraint on relation-\n\
    ship between green time\nlengths cycle length, off-\nset on the network calcu-\n\
    lation\nGA [377]\nInterval of feasible green\ntime length values\nInterval of\
    \ feasible offset\ntime length values\nSpecific road segments\nConnected\nconstraints\n\
    on the values of time\ntaken for vehicles\nDE [376]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one em-\nployee\nEmployees\ncan\nbe\nas-\n\
    signed when stop is avail-\nable\nBus stop assigned when\nbus is in use\nConstraint\
    \ on distance of\nbus stop from employee\nhome and more\nDE [378]\nSingle\nMinimize\
    \ total cost\nRoad\nnetwork\nconnec-\ntions followed\nSolutions contains cor-\n\
    rect number of routes\nACO [379]\nSingle\nMinimize\ntransit\ntime,\ntravel distance,\n\
    road con-\ngestion and traffic expenses\nVariable\nvalue\ncon-\nstraints\n74\n\
    Table 31. Data types for Smart Transportation\nData Type\nPapers\nSelf-collected\
    \ / Presented/ Generated\n[374, 362, 361, 363, 364, 365, 366, 368, 369, 381, 370,\
    \ 371, 373, 372, 380, 377]\nGovernmentAgency/ other research work\n[361, 365,\
    \ 366, 370, 374, 375, 377, 376, 378, 363]\nSmart\nAgriculture \nIrrigaƟon Water\n\
    Scheduling \nSmart Homes \nHome Energy\nManagement \nSmart City\nServices \nWaste\n\
    Management\nRoute\nOpƟmizaƟon \nSmart Industry \nSmart Grid \nPower\nManagement\
    \ \nPlanning \nSmart\nInfrastructure \nOpƟmal Sensor\nPlacement \nSmart Health\
    \ \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng \n\
    Smart Transport \nTraﬃc Signal\nControl \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes\
    \ \nRouƟng and\nLocaƟon\nDeterminaƟon\nfor LogisƟcs \nIrrigaƟon Water\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon and\nWater Control \nFigure 16. Optimization applications\
    \ in IoT based Smart Cities.\n75\nCHAPTER V\nCASE STUDY - SMART HEALTH\n1\nIntroduction\n\
    As discussed earlier, IoT finds usage in many different Smart City domains, both\
    \ for\nuse in classification/regression tasks as well as for optimization applications.\
    \ One\nof the most important applications of IoT within Smart Cities is within\
    \ the Smart\nHealth domain wherein IoT devices enable the monitoring of patients\
    \ for different\ndiseases such as heart disease etc. While there are a multitude\
    \ of IoT within Smart\nHealth, in order to develop algorithms on IoT sensor data,\
    \ the case of ambient assisted\nliving was chosen, in particular, this work considers\
    \ the case of fall detection.\n2\nIoT for Fall Detection\nThe United Nations estimates\
    \ that the number of old people (aged 60 and above) will\nbe 2.1 billion by 2050\
    \ and 3.1 billion by 2100 [382] leading to an increased old age\npopulation. With\
    \ people above 65 years suffering the greatest number of fatal falls\namong adults\
    \ aged 60 and over [383] healthcare costs related to fall related injuries\nrun\
    \ in to billions of dollars. These falls can result in injuries of moderate to\
    \ severe\nnature in the people experiencing the falls and may lead to decreased\
    \ mobility [384],\nespecially for the elderly [385]. Furthermore, following the\
    \ initial fall, the likelihood\nof experiencing additional falls increases [386]\
    \ and can lead to mental stress in the\nform of post-fall syndrome [387].\nThe\
    \ Internet of Things has spearheaded the development of cyber-physical systems\n\
    that facilitate the recognition of activities/events being performed by people\
    \ in their\ndaily life. One aspect of this application scenario is fall detection.\
    \ Falls can occur\ndue to a variety of reasons [388] and Fall Detection Systems\
    \ (FDS) are used for\npeople with different of health related ailments such as\
    \ in Parkinsons disease [389],\nepilepsy [390], arthritis, people suffering from\
    \ cardiovascular diseases and various\nneuro-degenerative diseases [391]. In any\
    \ scenario, it is pertinent that when a person\nundergoes a fall, they be provided\
    \ care as quickly as possible. Providing timely care\nafter a fall may improve\
    \ post-fall life quality of a patient. Fall detection Systems can\nplay a vital\
    \ role in contributing to the provision of timely care [389, 392] by alerting\n\
    healthcare professionals. As noted by [393] fall detection systems are necessary\
    \ for\nold people with cognitive impairments who may not be able to get up after\
    \ a fall for\nlong durations of time which may result in pressure sores and other\
    \ complications\nand due to vulnerability to injuries when experiencing a fall,\
    \ it may sometimes result\nin death [394].\n76\nA fall is an unintended and sudden\
    \ change of posture resulting in one resting on\nthe ground or some other lower\
    \ level elevation. The aim of a FDS is to monitor the\nmovement of a person and\
    \ determine when a fall has taken place with the aim to\nalert healthcare personnel\
    \ or other caregivers. Over the years different methodologies\nhave been suggested\
    \ to address this problem, however, before discussing the different\nmethods utilize\
    \ for fall detection purposes, it is important to mention what researchers\nenumerate\
    \ to be the traits of a ’good’ FDS [395].\n2.1\nChallenges/Requirements of a FDS\n\
    The following are the typical typical traits/requirements of a good fall detection\n\
    system.\n2.1.1\nNon-intrusiveness\nAn important requirement in fall detection\
    \ systems is to be non-intrusive. Any FDS\nshould not be an impediment in the\
    \ execution of daily activities of a person as it may\nrestrict movement or inconvenience\
    \ their lifestyle.\n2.1.2\nLow Latency\nAn FDS needs to be able to detect a fall\
    \ with low latency. Latency refers to the time\nduration between the occurring\
    \ of a fall and its detection. FDS need to detect falls\nas quickly as possible\
    \ to ensure that caregivers can be notified right away so that apt\ncare is provided\
    \ to the person. Low latency depends on not only the algorithm being\nused to\
    \ detect falls but also parameters like network speed and reliability. Sensor\
    \ data\ntransmission to the main system might also be included in this calculation\
    \ depending\non the FDS proposed.\n2.1.3\nLow power consumption\nPower consumption\
    \ is an important issue in FDS, especially for ones which are battery\npowered.\
    \ Many FDS are expected to be used by elderly people who might not be\nas regular\
    \ in charging the FDS, therefore FDS should consume as little power as\npossible.\n\
    2.1.4\nAllow mobility\nA FDS should not hamper mobility as it might be preventive\
    \ in adoption of a FDS\ntoo. FDS which require people to remain infront of a camera\
    \ at a certain viewpoint\netc can be difficult to deploy and use.\n2.1.5\nDifferentiate\
    \ between Falls and Activities\nA FDS should have low false positives and false\
    \ negatives. In other words it should\nbe able to confidently detect falls and\
    \ be able to differentiate them from activities of\n77\ndaily living such as walking,\
    \ sitting, jumping, running etc. Any false alarms will result\nin wastage of valuable\
    \ healthcare resources, on the contrary, any false negatives might\ncause the\
    \ patient/person having undergone the fall to not get appropriate medical\ncare\
    \ in time and lead to potential death or trauma.\n2.1.6\nNotify caregivers\nA\
    \ complete fall detection solution should have some mechanism of informing care-\n\
    givers whenever a fall is detected. Typically this is carried out in terms of\
    \ email,\nnotifications via some system or messages. Moreover, this process should\
    \ be quick so\nas to ensure the dispatch of any needed help as quickly as possible.\n\
    2.1.7\nTrack history\nA complete fall detection solution should be able to provide\
    \ the history about a\npatient in terms of falls that a person may have suffered\
    \ from as this will help monitor\nthe patients health and determine likelihood\
    \ to suffer from falls in the future. FDS\nmay sometimes also look at other biological\
    \ parameters during falls so as to help\ninvestigate the causes of falls using\
    \ the conditions prevalent at that time. Biological\nparameters that could be\
    \ measured include heart rate, perhaps an ECG or others as\ndeemed necessary based\
    \ on a patients history.\n2.2\nTypes of Fall Detection Systems\nFall detection\
    \ systems can be categorized in to three types based on the sensing\nmechanisms\
    \ used and their placement. These are Ambient Sensor based systems,\nVisual based\
    \ systems and Wearable Sensor based systems.\n2.2.1\nAmbient Sensor based systems\n\
    Ambient sensor based systems are also sometimes referred to as environmental sensor\n\
    based systems since these types of FDS rely on the use of a number of wirelessly\n\
    connected ambient sensors placed in a given area for the detection of falls. These\n\
    FDS make use of various sensors including Passive InfraRed (PIR) Sensors [396],\n\
    Acoustic sensors such as microphones, thermal sensors as well as sensors measuring\n\
    Wi-Fi signal strength etc. For e.g., the authors in [397] develop a fall detection\
    \ system\nbased on two PIR sensors and a vibration sensor to detect vibrations\
    \ on the floor\nwhen a person falls down. Using the PIR sensor to detect a persons\
    \ motion. feature\nextraction is performed on vibration measurements and an SVM\
    \ classifier is used to\ndetermine whether a fall has taken place or not. Another\
    \ approach presented in [398]\nutilize sounds in a home to determine falls in\
    \ the elderly. They do this by extracting\nfeatures in sound signals and like\
    \ [397] use a Support Vector Machine classifier to\ndetermine falls. The authors\
    \ in [399] make use of Wi-Fi channel state information\nfor fall detection. They\
    \ achieve this by feature extraction in the frequency domain\nfollowed by an SVM\
    \ classifier.\n78\nAmbient fall detection systems offer the advantage of not requiring\
    \ people to wear\nanything on their bodies and are thus nonrestrictive in that\
    \ sense. However, such\nsystems are prone to suffer high false positives due to\
    \ the large number of external\nfactors such as other heat emitting devices, multiple\
    \ people moving around at the\nsame time etc. Another issue that comes with ambient\
    \ fall detection systems is that\ndeployment could be cumbersome to cover a large\
    \ space, therefore they are typically\ndeployable in small places such as a home\
    \ or a small building but are very difficult\nto use outdoors due to the nature\
    \ of the setting as well as the possible sources of\nexternal interference.\n\
    2.2.2\nVision based systems\nVision based systems rely on the processing of video\
    \ frames or other visual infor-\nmation such as depth and thermal images or their\
    \ combination [400] to detect falls.\nTypically, the recorded data is sent to\
    \ a server or central computer which provides\nprocessing capabilities. Moreover,\
    \ recently, with the use of deep learning algorithms,\nsuch systems have found\
    \ to provide improved performance. For e.g. [401] use Convo-\nlution Neural Networks\
    \ on velocity information in video frames. Another approach\nthat uses CNNs is\
    \ given in [402] who model human motion from video frames using\nCNNs and then\
    \ use a logistic regression classifier to determine falls. Other approaches\n\
    with CNNs include the works in [403] and [404], both of which achieve very high\
    \ de-\ntection accuracy. Another DL network which has been useful in fall detection\
    \ systems\nbased on cameras is Long Short Term Machine, a recent example of that\
    \ is the use of\na CNN + LSTM combination on 360 degree video recordings of an\
    \ indoor facility to\ndetermine falls. The LSTM allows for capturing the changing\
    \ characteristics between\nvideo frames to provide fall recognition.\nEventhough\
    \ vision based FDS have been able to provide improved fall detection\nperformance\
    \ recently, like ambient sensor based systems, these systems suffer from\nsome\
    \ drawbacks. They are affected negatively in terms of performance and deploya-\n\
    bility from external factors such as occlusion, restricted mobility of the people\
    \ being\nmonitored, typically usable in environments over a small area, have high\
    \ computa-\ntional costs and are expensive. One other issue with vision based\
    \ systems is privacy,\nvision systems which use normal cameras pose risk of violation\
    \ to the privacy of peo-\nple being captured on video. The question of privacy\
    \ can be circumvented by the\nuse of depth cameras for e.g. a kinect [405, 406]\
    \ or using heatmaps using infrared\ncameras/sensors [407].\n2.2.3\nWearable Sensor\
    \ based systems\nWearable fall detection systems involve the use of a device attached\
    \ to the subject.\nThe wearable device monitors user activity by means of sensors\
    \ and can determine\nwhen a fall has occurred. Information about the fall is then\
    \ conveyed to a doctor or\nother medical professionals. Various types of sensors\
    \ can be used in these systems\nincluding inertial measurement sensors such as\
    \ accelerometers, gyroscopes, magne-\ntometers [408] or health sensors such as\
    \ ECGs, oxygen level and pulse rate sensors\n79\nas well. The devices that contain\
    \ these sensors can be worn on the hand, wrist, arm,\nchest, waist, legs, thigh\
    \ or even put inside shoes and are usually battery powered.\nWearable fall detection\
    \ systems have the advantage that they do not restrict move-\nment of the person\
    \ using them and consume less power than the other two approaches,\nhowever, a\
    \ disadvantage to this is the need to ’carry’ the device all the time. Another\n\
    disadvantage is the need to charge the device regularly which might be difficult\
    \ to do\nfor older people, a way this has been addressed in some approaches is\
    \ to make use of\nenergy harvesting [409].\n2.3\nTypes of Wearable FDS\nThere\
    \ are two types of wearable systems in use for fall detection purposes.\n2.3.1\n\
    Threshold based systems\nThe first of type of wearable FDS are threshold-based\
    \ fall detection systems where\nauthors have used various thresholding techniques\
    \ on sensor values measuring motion,\nparticularly the accelerometer. The major\
    \ advantage of threshold based fall detection\nsystems is their relative low computational\
    \ cost and use of sensor fusion techniques\nto improve fall detection accuracy\
    \ , however, the big disadvantage of such systems is\nthat threshold based systems\
    \ do not generalize well across subjects since people may\nhave different gaits,\
    \ this is especially true for people of different ages. As a result,\nthreshold\
    \ based FDS may suffer from having many false positives as well as false\nnegatives\
    \ since the FDS needs to differentiate between activities of daily living and\n\
    falls, which many times may appear to be fairly similar to each other in terms\
    \ of\nsensor readings.\n2.3.2\nMachine/Deep Learning based systems\nSince threshold-based\
    \ systems are rigid in terms of their usage, ML/DL methods\nprovide a flexible\
    \ method for fall detection. ML/DL algorithms can learn complex\npatterns from\
    \ sensor data which indicate to a fall while monitoring a persons activities\n\
    and therefore are useful in fall detection systems. As opposed to threshold based\n\
    systems, their generalizing capability allows them to be used across subjects.\n\
    A\ntypical ML framework for fall detection will involve data acquisition, prepossessing,\n\
    feature extraction and then usage of a suitable ML algorithm to make the inference\n\
    for a fall or no fall. A deep learning framework based FDS might have a similar\n\
    methodology, but depending on the DL algorithm used, feature extraction might\
    \ be\nomitted.\n2.4\nSensors used in Wearable FDS\nAs mentioned before, the sensors\
    \ used in wearable FDS are accelerometers, gyroscope,\nmagnetometer, ECG, Pulse\
    \ Rate and oxygen saturation levels. In this section, we will\ndiscuss briefly\
    \ the role of these sensors in wearable FDS and parameters of interest\nwhen using\
    \ them in FDS.\n80\n2.4.1\nAccelerometers\nAccelerometers, together with gyroscopes\
    \ are the most widely used sensors in wear-\nable FDS. One reason for this is\
    \ that both these sensors are typically present in\nsmartphones, which have been\
    \ used to either collect data for and/or deploy fall de-\ntection systems. An\
    \ accelerometer provides a measure of absolute acceleration and\nare used to detect\
    \ vibrations, force in a variety of applications involving monitoring\nof machines,\
    \ planes, civil architectures and more. In an FDS, an accelerometer is\nable to\
    \ capture the movement patterns of individuals which can be used to determine\n\
    falls.\n2.4.2\nGryroscope\nGyroscopes are used to measure tilt/orientation.\n\
    Gyroscopes find applications in\nvarious areas where orientation measurement is\
    \ required, for e.g. in airplanes and\nsubmarines where they are used in stabilization\
    \ systems, smartphones and game re-\nmotes for interactive gameplay, among other\
    \ things. Since orientation is an important\ncharacteristic of a fall, gyroscopes\
    \ are one of the most widely used sensors in FDS\nalong with acceleratorometers.\n\
    2.4.3\nMagnetometer\nA magnetometer is a device that measures the direction and\
    \ strength of magnetism\nrelative to the earths magnetic north. In addition to\
    \ other applications, magnetome-\nters are used in aircrafts for direction referencing.\
    \ These sensors are not very popular\nin FDS but have been proposed in some approaches\
    \ [410, 411] to be used for fall\ndetection in addition to accelerometers and/or\
    \ gyroscopes.\n2.4.4\nVarious Medical Sensors\nWearable fall detection systems\
    \ may also incorporate different types of medical sen-\nsors such as ElectroCardioGraphs,\
    \ ElectroMyoGraphs, Pulse Rate or Oxygen Level\nmeasurement in the FDS solution.\
    \ Even though there have been some approaches\nwhich have used medical sensors\
    \ exclusively for fall detection (such as EMG[412]),\nhowever, like magnetometers,\
    \ these sensors are usually used along with accelerome-\nters and/or gyroscopes.\
    \ Adding these sensors to fall detection systems has the added\nadvantage of assessing\
    \ falls from a health standpoint too as this information can be\nused to determine\
    \ risk of falls [413].\n2.5\nDesign considerations for Wearable FDS\nWearable\
    \ fall detection systems utilize sensor measurements to ascertain the occur-\n\
    rence of a fall. Since wearable FDS units are always attached to a persons body,\
    \ they\ncontinuously provide measurements of a persons movements and activities.\
    \ In order\nto use these measurements in a FDS, there are some design considerations\
    \ involved.\nWe discuss them in this section.\n81\n2.5.1\nSampling frequency\n\
    The sampling frequency dictates the number of sensor measurements recorded per\n\
    second. The sampling frequency used in an FDS should be high enough to capture\n\
    fall motion but not too high so as to increase data processing, storage requirements\n\
    as well as allow for energy efficient operation. In fact, depending on the position\n\
    of the sensors, significant reductions can be made in the sampling frequency used\n\
    for sensors with little or no change in performance as demonstrated by [414].\
    \ Such\nreductions could result in low power consumption by the wearable module\
    \ thereby\nenabling longevity of operation.\n2.5.2\nWindowing\nSince wearable\
    \ fall detection systems provide a continuous stream of sensor data, the\ndata\
    \ needs to be windowed for fall detection to be performed. Windowing refers to\
    \ the\nextraction of a subset of the sensor data stream in a sliding manner or\
    \ otherwise and\nis typically specified in terms of time duration for its size.\
    \ It is typical for wearable\nFDS designers to test different window sizes for\
    \ their fall detection algorithms. The\nsize of the window used would dictate\
    \ memory and computational requirements of\nthe unit used for deploying the FDS\
    \ system. Another important factor in windowing\nsensor signals is whether overlapping\
    \ is used during the windowing process or not.\nThis might be important to allow\
    \ for smooth transitions between different windows.\n2.5.3\nFeature Extraction\n\
    Feature extraction is the process of determining quantities from data which charac-\n\
    terizes it for a desired task appropriately. Feature extraction not only aims\
    \ to capture\nimportant aspects of the data being worked on but also to present\
    \ its content in a\nreduced size, thereby, making use of the data easier. Feature\
    \ extraction is a typ-\nical step of the a signal processing and machine learning\
    \ workflow and follows the\nwindowing step. There are different types of features\
    \ which have been computed\nfor fall detection applications, common feature computations\
    \ include the determina-\ntion of time domain features, frequency domain features,\
    \ statistical features etc. or\nsome combination from sensor data in FDS. Feature\
    \ extraction is followed by either a\nthresholding algorithm to sensor values\
    \ or a machine/deep learning model. For deep\nlearning, there have been some end\
    \ to end deep learning approaches which skip the\nstep of manual feature extraction.\
    \ In such approaches, deep learning networks such\nas CNN may be used to extract\
    \ features followed by other networks such as LSTM\nto determine falls, an example\
    \ is proposed in [415].\n2.6\nLiterature Review\nAs discussed previously, wearable\
    \ fall detection systems present several advantages\nwhen used for fall detection\
    \ purposes such as non-intrusiveness, ease of mobility, small\nsize of deployment,\
    \ low cost and that many implementations are typically standalone\nsystems. This\
    \ added with the fact that sensors and other components which are used\n82\nin\
    \ such systems have been becoming cheaper and cheaper to produce has resulted\
    \ in\na lot of interest in the development of wearable FDS by researchers and\
    \ technologists\nalike. Therefore, wearable FDS methodologies have gained considerable\
    \ interest in\nfall detection research. We discuss some of the popular methodologies\
    \ proposed in\nthis regard.\nThe authors in Mrozek et al. [416] present a complete\
    \ design of a wearable fall\ndetection system for an Internet of Things scenario.\
    \ They conduct two experiments\nwith their system, in one experiment, data is\
    \ collected from a gyroscope and an\naccelerometer and sent to the cloud for fall\
    \ detection (as a web service) while in\nthe second experiment, fall detection\
    \ is performed on the edge node (smart phone).\nThrough their experiments they\
    \ conclude that performing fall detection on the edge\nnode results in less network\
    \ traffic and storage requirements for the cloud. Algo-\nrithmically speaking,\
    \ they extract 3 second overlapping windows from measurements\nof both sensors,\
    \ perform feature extraction and pass it on to a boosted decision tree\nclassifier\
    \ for determining whether a fall has taken place or not. Moreover, the boosted\n\
    decision tree classifier was trained using the SisFall [417] dataset. Another\
    \ IoT based\nsystem is proposed by Marquez et al. [418] who develop a fall detection\
    \ system for\nIoT on the edge. They first gather data from an accelerometer and\
    \ a gyroscope placed\non the waist of multiple subjects and train a support vector\
    \ machine classifier on a\ncombination of raw sensor values and its standard deviation.\
    \ They are able to deploy\ntheir system successfully and achieve satisfactory\
    \ results. Moreover, feature selection\nis also performed before the classification\
    \ stage. A fog based fall detection model has\nbeen proposed by Sarabia-J’acome\
    \ et al. [419] who utilize a Long Short Term Memory\nRecurrent Neural Network\
    \ in their method. Edge nodes collect Inertial Measurement\nUnit (IMU) measurements\
    \ and relay them to a fog node which processes the data to\ndetermine if a fall\
    \ has taken place or not. One motivation for them to develop RNN\nmodels over\
    \ a Convolutional Neural Network one is the requirement of less param-\neters\
    \ and thus less computational requirements. Their final model consists of a 1D\n\
    CNN layer followed by two LSTM layers and a fully connected layer for classification\n\
    and is trained using raw data (window of 15s) from the SisFall dataset.\nZurbuchen\
    \ et al. in [420] provide a comparison of various machine learning al-\ngorithms\
    \ for fall detection while using data from the SisFall dataset. They perform\n\
    experiments using Decision Trees, Random Forest Classifier, Gradient Boosting\
    \ tree,\nK-Nearest Neighbor and Support Vector Machines. Segments of 10 seconds\
    \ are ex-\ntracted from the trials in the SisFall dataset and various time and\
    \ frequency domain\nfeatures are computed for those segments. These are then passed\
    \ on to the classifiers.\nThrough their experiments, they find that Random Forest\
    \ and Gradient Boosting\ntrees perform the best among the considered methods.\
    \ Another comparison of var-\nious ML algorithms is provided by Chelli and P¨atzold\
    \ in [421] who compare the\nperformance of a number of machine learning algorithms\
    \ on two datasets, the Cogent\nLabs dataset [422] and the one provided in [423].\
    \ The algorithms they consider are\nan artificial neural network, K-NN, an ensemble\
    \ bagged tree (EBT) and Quadratic\nSupport Vector Machine (QSVM). They compute\
    \ several time and frequency domain\nfeatures from accelerometer and gyroscope\
    \ signals and pass them on to the classi-\nfiers. Their best performing classifiers\
    \ were QSVM and EBT. Kerdjidj et al. in [424]\n83\nuse compressive sensing to\
    \ explore the use of different modalities for fall detection\npurposes. The performance\
    \ of accelerometer only and an accelerometer - gyroscope\nsensor combination in\
    \ a fall detection scenario is compared. A Shimmer device [425]\nis used to capture\
    \ data from 17 volunteers asked to perform activities of daily living\nas well\
    \ as fall like movements. They first extract segments of length 2.56 seconds\n\
    from their recordings before performing feature extraction and passing it on to\
    \ four\ndifferent machine learning classifiers, K-Nearest Neighbor, Support Vector\
    \ Machines,\nDecision Trees and an Ensemble Classifier (EC). They conduct two\
    \ such experiments,\none with compressive sensing and the other without. Their\
    \ results indicate that the\nEC classifier and SVM perform the best with the help\
    \ of compressive sensing included\nin the pipeline. A ’transfer learning’ approach\
    \ towards fall detection is provided by\nFanez et al. in [426] and they test it\
    \ on the UMAFall [427] dataset and the FallOVI\ndataset (created by them). Using\
    \ a finite state machine which captures windows\nof accelerometer measurements\
    \ based on peak values, the authors convert the win-\ndowed segments into string\
    \ representations using symbolic aggregate approximation\n(SAX) [428]. During\
    \ training each user performs normal ADLs and falls for a short\nperiod of time.\
    \ Peak values are determined from sensor measurements and used to\ncreate bag\
    \ of words using SAX. After this, normal operation of the system starts\nand information\
    \ retrieval (term frequency - inverse term frequency) values are used\nto determine\
    \ what label to give to new SAX words derived from sensor values. If a\ndetermined\
    \ word is not similar (using Manhattan distance) to any word in the bag of\nwords\
    \ (K-NN clustering is used to group similar words), a fall event is suggested\
    \ to\nhave occurred. ’Transfer learning’ involves the use of clusters formed by\
    \ other users\n(performing activities only) as the starting point of the training.\
    \ Their experiment\ncompared an SVM classifier with their information retrieval\
    \ based scheme. They are\nable to detect falls all the time with the UMAfall dataset\
    \ but have a high number\nof false positives for the FallOVI dataset. An noticeable\
    \ aspect of this approach is\nthe use of clustering and ’feature extraction’ as\
    \ strings. In Giuffrida et al. [429]\nthe authors use data from the SisFall dataset\
    \ and an SVM classifier to differentiate\nbetween falls and no-fall samples. They\
    \ extract slices (of 1 second) from the SisFall\ntrials and label each slice as\
    \ containing a fall or not. A number of features were then\ncomputed for each\
    \ slice before feature selection was performed and an SVM classifier\nwas trained\
    \ to determine the output class.\nDeep Learning methods have also been widely\
    \ used for fall detection purposes.\nCasilari et al. in [430] explore the contribution\
    \ of the gyroscope sensor for use in\ncombined accelerometer-gyroscope based fall\
    \ detection systems.\nTo do this, they\nmake use of measurements from the SisFall\
    \ dataset, extract observation windows of\n5 seconds around peaks of accelerometer\
    \ sensor signal values over a trace and pass\nthem on to a Convolutional Neural\
    \ Network with four convolutional layers, three\nmax pooling layers followed by\
    \ one fully connected layer for classification. Training is\nperformed in two\
    \ different sets of experiments, one including gyroscope data and the\nother without\
    \ it. They note that the results they get while using only accelerometer\nsignal\
    \ measurements are better than that when using data from both sensors. A\nCNN\
    \ is used for fall detection purposes by Santos et al. in [431] from accelerometer\n\
    measurements. Their network consists of six convolutional layers, two max pooling\n\
    84\nlayers in between followed by a fully connected layer for classification.\n\
    They use\ndata from the URFD dataset [432] and the Smart Watch and Notch datset\
    \ [433] in\ntheir experiments. They note that their model performs best when they\
    \ use data\naugmentation for both the datasets. However, this was achieved by\
    \ two different\nvariants of the same model. This highlights the point of a single\
    \ model not necessarily\nperforming well on all datasets. Another interesting\
    \ aspect of their work is the use of\nthe Mathews Correlation Coefficient to evaluate\
    \ performance of their algorithms. A\nmodified AlexNet [434] has been used in\
    \ [435] by Alarifi et. al. They collect tri-axial\ndata from inertial measurement\
    \ sensors consisting of accelerometer, gyroscope and\nmagnetometer at six different\
    \ positions on a subjects body. A total of 16 activities of\ndaily living and\
    \ 20 falls were recorded by them. Feature extraction is then performed\nin terms\
    \ of various statistical measurements as well as frequency analysis. This is\n\
    followed by principal component analysis and then passed on to the classification\n\
    stage consisting of an optimized AlexNet ConvNet. Waheed et. al. in [436] develop\n\
    a FDS using a Bi-Directional Long Short-Term Memory (Bi-LSTM) network. They\n\
    consider the binary case of fall and no fall and perform experiments using the\
    \ SisFall\ndataset as well as the UP-Fall dataset [437]. Their network consists\
    \ of eight layers\nin total. Two Bi-LSTM layers and two fully connected layers\
    \ with dropouts being\nused for regularization. Training is performed with creating\
    \ missing values in the\ndata to introduce noise tolerancy.\nCasiliri et al.\n\
    in [438] provide a performance\ncomparison for a CNN network on multiple public\
    \ fall detection datasets. The aim\nof their work is to test the cross-application\
    \ of a similar CNN network trained on\ndifferent datasets. They set their experiments\
    \ up by training a four layer CNN on\neach dataset separately for fall detection\
    \ on 14 datasets (using similar positions of\nsensor placement) on windows of\
    \ 5 seconds for accelerometer signals. Their results\nindicate a very good performance\
    \ of the network for the SisFall dataset, however, it\ndoesn’t perform very well\
    \ for most of the other datasets, in some cases, performing\nless than random\
    \ chance, which is quite surprising. Their experiments do however,\nhighlight\
    \ an issue with the well accepted notion that an algorithm developed on some\n\
    benchmark dataset will necessarily work similarly well with other datasets.\n\
    The\nauthors suggest that the erratic performance of their method could be due\
    \ to the\ndifference in the nature of the data in terms of sampling frequency\
    \ used, range of\nthe sensor and the varying type of movements. Another cross-dataset\
    \ approach for\nfall detection has been proposed in [439] where the authors use\
    \ a combination of a\nCNN and Long Short Term Memory network to extract features\
    \ followed by a K-\nNearest Neighbor classifer to detect falls as well as identify\
    \ the subjects within four\nfall datasets, DFNAPAS [440], SisFall, UniMiB-SHAR\
    \ [441] and ASLH [442]. The\nnetwork is trained using the DFNAPAS dataset, before\
    \ training the network however,\ndata augmentation is carried out for the fall\
    \ class. Their best results are achieved\nfor a value of K = 3 and they achieve\
    \ good results for all experiments. They observe\nthat using a deep learning architecture\
    \ for feature extraction purposes along with a\nmachine learning classifier performs\
    \ better than a using a fully connected layer at the\nclassification stage.\n\
    Post fall intelligence is an important research area in the field of fall detection\n\
    as it can be useful in determining various post fall injuries [443] and serve\
    \ as an\n85\nintelligence parameter [444] for doctors. Jung et al. in [445] also\
    \ target detection\nof pre-impact falls for wearable airbag deployment. Their\
    \ method involves the ap-\nplication of a threshold on determined features from\
    \ accelerometer and gyroscope\nmeasurement measurements. The thresholds are then\
    \ applied to a dataset collected\nby them and also on the SisFall dataset. The\
    \ threshold is determined by performing\na grid search on the extracted features\
    \ from their dataset to maximize specificity and\nsensitivity. They do note that\
    \ some activties like sitting down quickly on a chair or a\nmattress triggered\
    \ false positives. Moreover, when applied to SisFall, their methods\nperformance\
    \ is not as high as achieved by methods based on ML/DL. Koo et. al.\n[446] present\
    \ experiments for post fall detection from a combination of self collected\ndata\
    \ and the SisFall dataset. They conduct tests using sliding windows as well as\
    \ dis-\ncrete windows from these signals and compute statistical features from\
    \ them. After\nfeature extraction, two different classifiers, the artificial neural\
    \ network and support\nvector machine are tested with the computed features as\
    \ well as raw sensor values.\nThey find that both ANN and SVM are suitable for\
    \ use in post fall detection sce-\nnarios. Another approach looking at the different\
    \ phases of a fall has been presented\nin [447] where Hsieh et. al. use accelerometer\
    \ sensor data to differentiate between\nfive phases of a fall, pre-fall, free-fall,\
    \ impact, resting and recovery and the initial\nand end static phases. To do this,\
    \ they compute various time domain and statistical\nfeatures and test five classifiers,\
    \ SVM, K-Nearest Neighbors, Naive Bayes, Decision\nTrees and Adaptive Boosting\
    \ (AdaBoost). For their experimental setup, the best\nresults were achieved using\
    \ the K-NN classifier. In Musci et al. [448], the authors\npropose a RNN based\
    \ method to differentiate between falls, pre-impact falls (state\nwhere a person\
    \ is in a dangerous state of transition which may result in a falls) and\nnormal\
    \ activities. Their motivation for including preimpact falls is to enable timely\n\
    deployment of a fall protection system. First, they label data from the SisFall\
    \ dataset\nto form three classes. They then extract windows of duration 1.28 seconds\
    \ with an\noverlap of 50% from the sensor signals and pass them on to their network\
    \ which\nconsists of two fully connected layers and two-layer LSTM layers. Moreover,\
    \ due to\nan imbalanced training set, they define a new balancing loss function.\
    \ Their method\nresults in fall detection good results for the three classes considered.\
    \ A CNN-LSTM\napproach has been proposed in [449] by Yu et al. for detection of\
    \ pre-impact fall and\nfalls in the SisFall dataset. They provide a comparison\
    \ of standalone CNN, LSTM\nand a combined CNN-LSTM architecture for this task\
    \ and also implement them on\na Jetson Nano. They define a pre-impact fall as\
    \ the time interval where a subject\ntransitions from a controlled state to a\
    \ state which may lead to a fall. First, they\nlabel data in the SisFall dataset\
    \ as described in [448] to form a three class problem.\nThey achieved their best\
    \ results for their CNN+LSTM model having four CNN layers\nfollowed by two LSTM\
    \ layers and a fully connected layer for classification. Their ap-\nproach highlights\
    \ the combined capability of CNN-LSTM for feature extraction. An\naspect of fall\
    \ intelligence is direction, in [450] Lee et al. use the velocity vector from\n\
    the acceleration sensor in a smartphone for fall detection with direction and\
    \ then\nlater on in [451], they use the standard deviation of the accemerometer\
    \ and gyro-\nscope sensor measurements from a smart phone to determine falls and\
    \ fall direction.\nThey perform a small experiment and are able to differentiate\
    \ between left, right,\n86\nfront and backward falls. More work on fall detection\
    \ with direction was performed\nby the authors in [452] who use an accelerometer\
    \ and gyroscope combination along\nwith a kalman filter for tilt estimation. Fall\
    \ detection is then performed using an\nSVM classifier. Falls with direction detection\
    \ has been attempted in [453, 454] by\nthe same authors. They collect accelerometer\
    \ data from various subjects and extract\nthree features from the recordings for\
    \ each axis, the mean, standard deviation and\nprincipal components (using Principal\
    \ Component Analysis). These are then passed\non to a SVM classifier to differentiate\
    \ between a forward, backward, left and right\nfall and ADLs.\nWhile direction\
    \ aware fall detection is an important determination in terms of post\nfall intelligence,\
    \ fall detection with severity is necessary since it could help provide\nindications\
    \ to falls with immediate recovery or otherwise, as falls without immediate\n\
    recovery would be more detrimental to health than a fall with immediate recovery\
    \ as\nhas been suggested in [455]. In [456] the authors attempt to classify between\
    \ different\nfalls (direction: forward, backward, right, left and intensity: hard,\
    \ soft [fall on knees\nfirst, then on floor]) and five different ADLs using accelerometer\
    \ data. They collected\ndata for their experiments using a triaxial accelerometer\
    \ mounted on the chest. Fea-\nture extraction consists of first concatenating\
    \ acceleration values in each axis and\nthen using a Debauchies-2 level-3 wavelet\
    \ which are then sent to the classification\nstage. In the classification stage\
    \ five different classifiers, an ANN, a Radial Basis\nFunction (RBF) Network,\
    \ Probabilistic Principal Component Analysis (PPCA) and\nLinear Discriminant Analysis\
    \ (LDA) are used through a voting machine to determine\nfalls. A voting machine\
    \ (VM) involves multiple classifiers giving a vote towards any of\nthe multiple\
    \ classes and the sum of the vote is compared against a vote threshold to\ndetermine\
    \ the event that has taken place. In their work, the authors train individual\n\
    VMs for all the activity and fall types in their dataset by structuring them all\
    \ in par-\nallel and adding a comparator function at the end of the pipeline.\
    \ Moreover, a K-NN\nmulticlass classifier also feeds in to the comparator and\
    \ is trained while training of\nthe other classifier, it is provided the true\
    \ value of the activity being input to the\nclassification stage. The authors\
    \ show that their dataset works very well. A valuable\ninsight about their work\
    \ is the ensembling mechanism the authors have employed to\ndetermine fall directions.\
    \ In [457], Hussain et al. propose a fall detection system that\ncan first determine\
    \ falls and then the type of fall using data from the SisFall dataset.\nThey accomplish\
    \ this in a hierarchical setup where their system first considers fall\ndetection\
    \ as a binary problem, whether a fall has taken place or not, and if a fall\n\
    has been detected, it classifies between the various falls in the dataset. Their\
    \ system\nis designed to work with 10 second non-overlapping windows of accelerometer\
    \ and\ngyroscope signals. Data from each record is first low pass filtered before\
    \ two different\ntypes of feature sets, consisting of various time domain and\
    \ statistical features, are\ncomputed on the data. This is then followed by the\
    \ machine learning stage where\nthree different classifiers are tested, K-NN,\
    \ SVM and RFC. In the fall detection stage,\nstatistical features are computed\
    \ from ADL and fall signals and sent to the three clas-\nsifiers for the preliminary\
    \ binary classification. After a fall has been determined to\nhave happened, numerous\
    \ other statistical and time domain features are then com-\nputed on the data\
    \ before being sent to the next stage to determine the type of fall\n87\nactivity\
    \ taking place. In their experiments, the authors find that K-NN is most effec-\n\
    tive in differentiating between falls and ADLs where as RFC performs the best\
    \ when\nthe different fall activities need to be determined. This work highlights\
    \ the usefulness\nof a hierarchical approach towards non-binary fall detection.\
    \ One proposed method\nto perform combined activity recognition and fall detection\
    \ has been presented in\n[458]. In this, Li et. al. use multi-modal sensor fusion\
    \ and a Bi-LSTM classification\nnetwork to differentiate between five activities\
    \ of daily living and a fall. The sensors\nthey use are an inertial sensor placed\
    \ on the wrist, waist and ankle as well as a radar\nsensor. After pre-processing\
    \ both the inertial measurement and radar signals, various\nstatistical and moment\
    \ computations were performed to be used as features. These\nwere passed on to\
    \ the multilayer Bi-LSTM network after feature selection to deter-\nmine the output\
    \ class. One thing to note is that both both [458] and [421] consider\nfall as\
    \ a single category rather than considering falls as a detailed problem (direction\n\
    and/or severity) in itself. More recent work by We et al. [459] also considers\
    \ ac-\ntivity recognition and fall detection together. They use inertial measurement\
    \ sensor\ndata from two datasets, the MobiAct dataset [460] and the SmartFall\
    \ dataset [433].\nThe MobiAct dataset contains data from four falls and nine activities\
    \ of daily living\nwhereas the SmartFall dataset has non-fall and fall recordings.\
    \ In their experimenta-\ntion, they compare the performance of different machine\
    \ learning models and several\ndeep learning models, including a CNN, LSTM, CNN-LSTM\
    \ combination and Gated\nRecurrent Units. The machine learning models are trained\
    \ by computing time and\nfrequency domain features whereas the deep learning models\
    \ are trained using raw\nsensor data. They find that the GRU designed by them\
    \ consisting of two GRU units\nfollowed by a softmax classification layer is the\
    \ best performing model. Another deep\nlearning approach utilizing sequential\
    \ modeling for a fall detection system that also\nconsiders ADLs has been presented\
    \ by Seng¨ul et al. [461]. They collect their own\ndata for two types of falls\
    \ and four activities of daily living. After data augmentation\non the minority\
    \ classes, they use a Bi-LSTM for classification. Le et al. [462] propose\na non-binary\
    \ fall detection scheme utilizing a collection of time, frequency frequency\n\
    domain features in addition to the three Hjorth parameters of activity, mobility\
    \ and\ncomplexity. They use data from two datasets, the MobiAct dataset and the\
    \ UP-Fall\ndataset. They are able to achieve good results on both datasets using\
    \ all three feature\ntypes with a random forest classifier.\nThe use of attention\
    \ based models has also been finding increasing usage in fall\ndetection research.\
    \ Yhdego [463] use an attention model to perform binary fall de-\ntection. The\
    \ fall dataset is collected by them and after windowing, the authors use\ntime2vec\
    \ positional encoding on the data. Their network consists of three attention\n\
    blocks each consisting of multiheaded self attention followed by normalization\
    \ and a\nfully connected network. After the attention blocks follow two fully\
    \ connected layers.\nThey find that their network incorporating attention performs\
    \ well in differentiating\nbetween fall and non-fall samples. Another interesting\
    \ approach using attention is\npresented by Liu et al. [464]. Inorder to apply\
    \ attention on both temporal (step wise)\nand spatial (channel wise) aspects of\
    \ the signals, a gated scheme is suggested. A fully\nconnected layer is used to\
    \ determine the embeddings before positional information is\nadded to the data.\
    \ Positional encoding is only used for stepwise attention as channel\n88\nwise\
    \ positions are not useful. Self attention is performed in the step-wise part\
    \ of the\nnetwork and is carried out for the individual channels in a pairwise\
    \ fashion across all\ntime steps while the channel wise attention is performed\
    \ across the different channels\nacross all time-steps. The outputs of these two\
    \ units are combined through a fully\nconnected network which weighs them before\
    \ concatenation and classification.\n2.7\nFall detection Datasets\nThere are several\
    \ datasets published for use in algorithm development for fall detec-\ntion as\
    \ has been noted in [438]. Of these, for this case study, we choose two datasets,\n\
    these are the SisFall and the K-Fall dataset. The SisFall [417] dataset is chosen\
    \ as\nit contains recordings of elderly people which are most at risk from injury\
    \ due to\nfalls and therefore should provide a good representation of activities\
    \ of the elderly. It\nshould be noted that its one of the most used dataset for\
    \ fall detection purposes [438].\nThe other dataset used is the K-Fall [465] dataset.\
    \ It was released on the pattern of\nthe SisFall dataset and includes more activities\
    \ compared to SisFall. A summary of\nthe datasets is presented in the next section.\n\
    2.7.1\nSisFall Dataset\nThe SisFall dataset consists of accelerometer and gyroscope\
    \ recordings of 19 types of\nactivities of daily living and falls. Two accelerometers\
    \ and one gyroscope were placed\non the waist and used for making the measurements.\
    \ This location was chosen so as\nto ensure that all body movements while performing\
    \ the activities/falls were captured\nby the sensory system. Furthermore, the\
    \ data recordings involved 23 young people\nbetween the ages of 19-30 years old\
    \ and 15 elderly people between the ages of 60-75\nyears. The dataset contains\
    \ annotated sensor measurements of each of these ADLs\nand falls recorded as well\
    \ as video recordings of sample experiments. There are four\nmain types of falls\
    \ present, six of them are forward falls , three backward falls, four\nlateral\
    \ falls and two vertical falls. The types of falls performed were directed through\n\
    a survey taken from elderly people living independently as well as the ones living\n\
    in retirement homes and include scenarios of slipping and tripping. Moreover,\
    \ they\nare preceded by various types of ADLs being performed to make the recordings\
    \ as\nclose to a real world scenario as possible. The ADLs recorded were approved\
    \ by\nmedical personnel and were chosen so as to be similar to falls. The ADLs\
    \ include\nhigh mobility activities such as walking up/down stairs, jogging as\
    \ well as activities\nwhich can be confused with falls such as quickly sitting\
    \ in a chair, bending at the\nknee and stumble while walking etc. In total, there\
    \ were 2706 ADL recordings and\n1798 fall recordings. The SisFall data is utilized\
    \ in this study as it has been the\nthe dataset of choice for several previous\
    \ research approaches addressing the subject\nof fall detection [466, 467, 468,\
    \ 436, 469] and also because the volunteer makeup\nconsists of both men and women,\
    \ young adults and the elderly. The ADLs and Falls\nin the SisFall dataset have\
    \ been presented in Table 32 with a brief description of the\nactivities and falls\
    \ provided as well.\n89\nTable 32. ADL and Falls present in the SisFall dataset.\n\
    Activity/\nFall Code\nBrief Description\nD01\nWalking slowly\nD02\nWalking quickly\n\
    D03\nJogging slowly\nD04\nJogging quickly\nD05\nWalking upstairs and downstairs\
    \ slowly\nD06\nWalking upstairs and downstairs quickly\nD07\nSlowly sit in a half\
    \ height chair, wait a moment, and up slowly\nD08\nQuickly sit in a half height\
    \ chair, wait a moment, and up quickly\nD09\nSlowly sit in a low height chair,\
    \ wait a moment, and up slowly\nD10\nQuickly sit in a low height chair, wait a\
    \ moment, and up quickly\nD11\nSitting a moment, trying to get up, and collapse\
    \ into a chair\nD12\nSitting a moment, lying slowly, wait a moment, and sit again\n\
    D13\nSitting a moment, lying quickly, wait a moment, and sit again\nD14\nBeing\
    \ on one’s back change to lateral position, wait a moment, and change to\none’s\
    \ back\nD15\nStanding, slowly bending at knees, and getting up\nD16\nStanding,\
    \ slowly bending without bending knees, and getting up\nD17\nStanding, get into\
    \ a car, remain seated and get out of the car\nD18\nStumble while walking\nD19\n\
    Gently jump without falling (trying to reach a high object)\nF01\nFall forward\
    \ while walking caused by a slip\nF02\nFall backward while walking caused by a\
    \ slip\nF03\nLateral fall while walking caused by a slip\nF04\nFall forward while\
    \ walking caused by a trip\nF05\nFall forward while jogging caused by a trip\n\
    F06\nVertical fall while walking caused by fainting\nF07\nFall while walking,\
    \ with use of hands in a table to dampen fall, caused by\nfainting\nF08\nFall\
    \ forward when trying to get up\nF09\nLateral fall when trying to get up\nF10\n\
    Fall forward when trying to sit down\nF11\nFall backward when trying to sit down\n\
    F12\nLateral fall when trying to sit down\nF13\nFall forward while sitting, caused\
    \ by fainting or falling asleep\nF14\nFall backward while sitting, caused by fainting\
    \ or falling asleep\nF15\nLateral fall while sitting, caused by fainting or falling\
    \ asleep\n2.7.2\nK-Fall Dataset\nThe K-Fall dataset has been developed based on\
    \ the SisFall dataset and contains 15\nfall types and 21 ADLs. The falls in K-Fall\
    \ are the same as those in SisFall. However,\nin the case of ADLs, they remove\
    \ the activity of sitting in and getting out of a car\nand combine some of the\
    \ activities while adding static activities of sitting on a chair,\nsitting on\
    \ a sofa and lying down.\nA total of 2729 ADL recordings and 2346 fall\nrecordings\
    \ are present in the dataset. This dataset is included in the study to test\n\
    cross-dataset fall detection. The details of the K-Fall dataset are presented\
    \ in Table\n33.\n2.8\nExperiments\nThis section discusses the experiments conducted\
    \ for the purposes of fall detection.\nFour experiments have been performed in\
    \ this regard, first considering fall data only\n90\nTable 33. ADL and Falls present\
    \ in the K-Fall dataset.\nActivity/\nFall Code\nBrief Description\nD01\nStand\
    \ for 30 seconds\nD02\nStand, slowly bend the back with or without bending at\
    \ knees, tie shoe lace,\nand get up\nD03\nPick up an object from the floor\nD04\n\
    Gently jump (try to reach an object)\nD05\nStand, sit to the ground, wait a moment,\
    \ and get up with normal speed\nD06\nWalk normally with turn (4m)\nD07\nWalk quickly\
    \ with turn (4m)\nD08\nJog normally with turn (4m)\nD09\nJog quickly with turn\
    \ (4m)\nD10\nStumble while walking\nD11\nSit on a chair for 30 seconds\nD12\n\
    Sit on the sofa (back is inclined to the support) for 30 seconds\nD13\nSit down\
    \ to a chair normally, and get up from a chair normally\nD14\nSit down to a chair\
    \ quickly, and get up from a chair quickly\nD15\nSit a moment, trying to get up,\
    \ and collapse into a chair\nD16\nStand, sit on the sofa (back is inclined to\
    \ the support), and get up normally\nD17\nLie on the bed for 30 seconds\nD18\n\
    Sit a moment, lie down to the bed normally, and get up normally\nD19\nSit a moment,\
    \ lie down to the bed quickly, and get up quickly\nD20\nWalk upstairs and downstairs\
    \ normally (5 steps)\nD21\nWalk upstairs and downstairs quickly (5 steps)\nF01\n\
    Forward fall when trying to sit down\nF02\nBackward fall when trying to sit down\n\
    F03\nLateral fall when trying to sit down\nF04\nForward fall when trying to get\
    \ up\nF05\nLateral fall when trying to get up\nF06\nForward fall while sitting,\
    \ caused by fainting\nF07\nLateral fall while sitting, caused by fainting\nF08\n\
    Backward fall while sitting, caused by fainting\nF09\nVertical (forward) fall\
    \ while walking caused by fainting\nF10\nFall while walking, use of hands to dampen\
    \ fall, caused by fainting\nF11\nForward fall while walking caused by a trip\n\
    F12\nForward fall while jogging caused by a trip\nF13\nForward fall while walking\
    \ caused by a slip\nF14\nLateral fall while walking caused by a slip\nF15\nBackward\
    \ fall while walking caused by a slip\nand aiming to determine falls with direction\
    \ and severity. The second, third and\nfour experiments involved the inclusion\
    \ of activities of daily living classification in\naddition to the fall classes\
    \ considered in the first experiment. Moreover, experiment\nfour presents results\
    \ for a cross-dataset fall detection scenario.\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration\nThis section describes the work on fall detection\
    \ considering severity and direction\nwhile only considering sensor data for falls.\
    \ The experiment has been performed as\ntwo tasks, one for determining falls considering\
    \ direction only and the other while\nconsidering both direction as well as severity.\n\
    2.8.1.1\nData Labeling\nTo perform fall detection that is direction and severity\
    \ aware, we only considered fall\n91\ndata from the SisFall dataset. As can be\
    \ seen from Table 32, most of the falls in\nthe dataset have been labelled as\
    \ either being in the forward, backward or lateral\ndirection.\nHowever, two of\
    \ the falls (F06 and F07) are not labeled in terms of\ndirection. For the considerations\
    \ of this research work, these were assigned the labels\nof Forward and Lateral\
    \ respectively using the videos of sample trials provided by the\ndataset authors.\n\
    Concerning fall severity, while the original labels from the dataset contained\
    \ in-\nformation for most falls for direction, the approach followed by Gibson\
    \ et al. [456]\nwas used to determine the severity of falls. According to the\
    \ practice followed by\nthem, all falls where in some support was used to soften\
    \ the impact of the fall were\nconsidered as soft falls whereas all falls where\
    \ the subject fell directly were classified\nas hard falls. This resulted in six\
    \ classes for fall types with hard and soft for ima-\npact and forward, backward\
    \ and lateral for direction. These are Forward Soft Falls\n(FSF), Forward Hard\
    \ Falls (FHF), Backward Soft Falls (BSF), Backward Hard Falls\n(BHF), Lateral\
    \ Soft Falls (LSF) and Lateral Hard Falls (LHF). These labels have\nbeen summarized\
    \ in Table 34.\nTable 34. Labeling used for Fall only classification for the SisFall\
    \ Dataset\nExperiment Name\nFall\nCode\nAssigned Fall Name\nAssigned Fall Label\n\
    Direction\nF01\nForward Fall\nFF\nF02\nBackward Fall\nBF\nF03\nLateral Fall\n\
    LF\nF04\nForward Fall\nFF\nF05\nForward Fall\nFF\nF06\nForward Fall\nFF\nF07\n\
    Lateral Fall\nLF\nF08\nForward Fall\nFF\nF09\nLateral Fall\nLF\nF10\nForward Fall\n\
    FF\nF11\nBackward Fall\nBF\nF12\nLateral Fall\nLF\nF13\nForward Fall\nFF\nF14\n\
    Backward Fall\nBF\nF15\nLateral Fall\nLF\nDirection + Severity\nF01\nForward Hard\
    \ Fall\nFHF\nF02\nBackward Hard Fall\nBHF\nF03\nLateral Hard Fall\nLHF\nF04\n\
    Forward Hard Fall\nFHF\nF05\nForward Hard Fall\nFHF\nF06\nForward Soft Fall\n\
    FSF\nF07\nLateral Soft Fall\nLSF\nF08\nForward Soft Fall\nFSF\nF09\nLateral Soft\
    \ Fall\nLSF\nF10\nForward Soft Fall\nFSF\nF11\nBackward Soft Fall\nBSF\nF12\n\
    Lateral Soft Fall\nLSF\nF13\nForward Soft Fall\nFSF\nF14\nBackward Soft Fall\n\
    BSF\nF15\nLateral Soft Fall\nLSF\n92\nWindowing\nTime and Frequency\nDomain Feature\n\
    Computation\nRF-RFE Feature\nSelection\nFeature\nExtraction and\nFeature Selection\n\
    Classification\nData\nPreprocessing\nPeak SMV Detection\nOutput Class \n(FF, BF,\
    \ LF) \n(FHF, FSF, BHF, BSF, LHF, LSF)\nIMU Recording (Falls) \n(FF, BF, LF) \n\
    (FHF, FSF, BHF, BSF, LHF, LSF)\nSVM Classifier\nFigure 17. Fall Detection with\
    \ Direction and Severity.\n2.8.1.2\nMethodology\nThe methodology used for this\
    \ experiment follows a typ-\nical machine learning pipeline as shown in Figure\
    \ 17. First, we pre-process the data\nwhich involves extraction of sensor segments\
    \ representing falls. This is followed by\nfeature extraction that aims to extract\
    \ useful representations from the accelerometer\nand gyroscope sensor data. Lastly,\
    \ feature selection is carried out where we aim to\nreduce the number of features\
    \ used in the last stage that is classification.\nData Pre-processing\nRecordings\
    \ in the SisFall dataset vary in length between 12 and 100 seconds. The\ntrial\
    \ recordings for falls in the SisFall dataset consist of subjects performing various\n\
    activities before experiencing the fall. For a sound feature extraction process,\
    \ we\nextract equal duration segments of sensor readings from these trials that\
    \ represent\nthe fall taking place along with some part of the pre-fall activity\
    \ being performed.\nTo do this, for each record we first calculate the acceleration\
    \ magnitude (also called\nthe Signal Magnitude Vector (SMV) ) [430] for all sensor\
    \ value samples within a trial\nrecording. The SMV can be calculated as given\
    \ in Eq.1.\nSMVj =\nq\f\fAxj\n\f\f2 +\n\f\fAyj\n\f\f2 +\n\f\fAzj\n\f\f2\n(1)\n\
    93\nwhere SMVj represents the SMV value for a sample j in a given trial. The SMV\n\
    is calculated for all samples and the sample location for the SMV peak value is\n\
    determined within the trial. This is then used as the midpoint for extracting\
    \ a 2.5\nsecond segment from the trial. A segment length of 2.5 seconds was chosen\
    \ as it was\nvisually found to capture all the falls as well as some part of the\
    \ pre-fall activity being\nperformed. Using this scheme, segments were extracted\
    \ for all the fall trials in the\ndataset.\nThere are a total of 1798 fall samples\
    \ in the dataset, after the labeling used, there\nwere a total of 838 samples\
    \ for the forward fall category, 360 samples for the backward\nfall category and\
    \ 600 samples for the lateral fall category. Sample waveforms for the\nthree directions\
    \ of falls and three severity levels have been shown in Appendix A.\nFeature Extraction\n\
    Feature extraction is used to convert inputs in to more useful representations.\
    \ In\nthis experiment, we take cue from the work of [420, 470] who use various\
    \ time and\nfrequency domain features successfully for fall detection and recognition\
    \ of activities\nof daily living. Table 35 lists the features computed for each\
    \ extracted segment. Each\nof these features have been computed for every axis\
    \ of the considered accelerometer\nand gyroscope sensor measurements.\nTable 35.\
    \ Features computed for each fall segment\nDomain\nFeatures Computed\nTime\n25th\
    \ Percentile\n75th Percentile\nDelta\nInterquartile range\nKurtosis\nMean\nMedian\n\
    Maximum\nMinimum\nSkewness\nStandard Deviation\nVariance\nFrequency\nPower Spectral\
    \ Entropy\nPower Spectral Density Mean\nPower Spectral Density Median\nPower Spectral\
    \ Density RMS\nPercentiles (25th Percentile, 75th Percentile) and Interquartile\
    \ Range\nFor a set of numerical values X ordered in arranged ascending order,\
    \ the ith percentile\nis defined as the number n below which i percent of the\
    \ total numbers of X fall below\nit. Therefore, the 25th Percentile (also called\
    \ the First Quartile) is the number in X\nbelow which exactly 25% of the values\
    \ fall. Similarly, 75th Percentile (also called\nthe Third Quartile) is the number\
    \ in X below which exactly 75% of the values fall.\nAnother important quantity\
    \ concerning percentiles is the Interquartile Range (IQ\n94\nRange), also called\
    \ the Midspread. The IQ Range is the difference between the 75th\nPercentiles\
    \ and the 25th Percentiles.\nDelta\nThe Delta represents the difference between\
    \ the minimum and maximum\nvalue of a set of numeric values X.\nKurtosis\nIt’s\
    \ a metric for how much a distribution’s tails diverge from that of\na normal\
    \ distribution. A large Kurtosis values indicates to larger extremity of the\n\
    divergences which can be thought of as outliers. The Kurtosis for a set of numerical\n\
    values X can be calculated as given in Eq. 2.\nKurtosis(X) =\n1\nNσ4\nN\nX\ni=1\n\
    (xi − µ)4\n(2)\nMean\nFor a set of values X, the arithmetic mean or the average\
    \ returns the\ncenter value of X. Mathematically it is given in Eq. 3.\nMean(X)\
    \ =\nPN\ni=1 xi\nN\n(3)\nMedian\nFor a set of values X, the median indicates to\
    \ the central tendency of\nX. It divides a set of values in to two equal parts.\
    \ For a set X of size N arranged in\nascending order, the median can be calculated\
    \ as in Eq. 4.\nMedian(X) = X[N + 1\n2\n]\n(4)\nMaximum\nFor a set of values X,\
    \ the maximum value represents the largest\nvalue in the set X.\nMinimum\nFor\
    \ a set of values X, the minimum value represents the smallest\nvalue in the set\
    \ X.\nSkewness\nThe Skewness measures the lack of symmetry in the probability\
    \ dis-\ntribution of data around its mean. It is calculated as in Eq. 5.\nSkewness(X)\
    \ =\n1\nNσ3\nN\nX\ni=1\n(xi − µ)3\n(5)\nStandard Deviation and Variance\nThe Standard\
    \ Deviation measures the\nvariation of a set of numerical values around its mean.\
    \ For a set of numerical values\nX, the standard deviation can be calculated as\
    \ in Eq. 6.\n95\nStd(X) =\nsPN\ni=1(xi − µ)2\nN\n(6)\nwhere µ is the Mean of X.\
    \ The Variance of X is the square of the Standard\nDeviation.\nPower Spectral\
    \ Density\nThe Power Spectral Density (PSD) is an indication\nto the power content\
    \ of a signal with respect to its frequency. It therefore helps to\nunderstand\
    \ the distribution of power in the signal for the different frequencies that\n\
    comprise it. The PSD has been computed using the Welch method [471]. Once the\n\
    PSD has been computed, the mean, median and Root Mean Squared (RMS) values\nof\
    \ the PSD are computed.\nPower Spectral Entropy\nThe Power Spectral Entropy (PSE)\
    \ is a measure of\nthe entropy in the power spectrum of a signal and indicates\
    \ to the complexity present\ntherein. It is computed as an entropy calculation\
    \ on the normalized PSD estimate.\nSimilar to the PSD computation, the Welch method\
    \ was used to estimate the PSD\nbefore PSE calculations were performed.\nThe aforementioned\
    \ quantities were computed for all windowed samples of the fall\nrecordings. In\
    \ total, this resulted in 96 features being computed for each segment.\nBefore\
    \ these features are passed on to the next stage, normalization was performed\n\
    feature wise for each sensor.\nFeature Selection\nFeature selection is an important\
    \ step in the machine learning pipeline. It not only\nhelps to reduce the feature\
    \ set size used in an application which helps computationally\nbut may also result\
    \ in performance improvement as observed by [472]. Feature se-\nlection is performed\
    \ using Random Forest Recursive Feature Elimination (RF-RFE)\n[473] which involves\
    \ determining the importance of features by eliminating features\niteratively\
    \ and looking at classifier performance. It starts by developing a model us-\n\
    ing all the available features within the dataset, in every iteration, the feature\
    \ that\nhas the ’least importance/contribution’ is discarded and a new model is\
    \ fitted with\nthe remaining features. This process is carried out until a pre-decided\
    \ number of\nfeatures remain. Since in this work, our goal is to reduce the number\
    \ of features\nfrom the original count, we perform manual tests by establishing\
    \ a baseline for the\nperformance of our models. The baseline is formed by using\
    \ all features for each\nof our classification tasks and using the highest weighted\
    \ F1-score achieved as the\nperformance goal cut-off for the reduction of features.\
    \ This step will ensure that we\natleast get the same performance as the original\
    \ feature set.\nClassification\nClassification refers to the usage of a classification\
    \ algorithm, also called a classifier\n96\nto determine the output ’label’ or\
    \ category given a set of input values called features.\nIn the current setting,\
    \ the classification problem is a supervised one wherein the\nclassifier is provided\
    \ inputs and their corresponding output labels which allow it\nto learn the relationship\
    \ between the input and the output.\nOnce this mapping\nhas been sufficiently\
    \ learned (a process called training) the trained classifier can\nbe provided\
    \ unlabeled inputs for it to predict an output label value or class. The\nefficacy\
    \ of the classifier in predicting the correct output is measured through various\n\
    metrics such as accuracy, precision, recall, F1-score etc. This experiment consists\
    \ of\ntwo classification experiments being performed, one is the direction only\
    \ experiment\nwhere the classifiers used are trained to distinguish between the\
    \ three direction of falls\ngiven the input feature set and another experiment\
    \ where the classifiers are trained\nto determine fall directions and severity\
    \ together.\nFour different classifiers were tested to perform these tasks, these\
    \ are the Random\nForest Classifier, Support Vector Machines, Decision Trees and\
    \ Extreme Gradient\nBoost (XGBoost). All of the classifiers were trained using\
    \ five fold cross validation\nwith a stratified split and a parameter search being\
    \ performed for tuning purposes.\nSupport Vector Machines\nSupport Vector Machine\
    \ is a supervised learning\nalgorithm that, in its simplest form tries to fit\
    \ a line in between data samples of two\ndifferent classes to separate them. The\
    \ criteria used by the SVM to fit this line is\nthe maximization of the distance\
    \ between the line and the (data) points closest to it.\nThis concept of using\
    \ a line to separate two dimensional data can be extended to two\ndimensional\
    \ planes being used for separating three-dimensional data and hyperplanes\nfor\
    \ higher dimensional data. SVMs are quite flexible in that they can not only be\
    \ used\nto work with linearly separable data but also with data that is not linearly\
    \ separable.\nThis is achieved using Kernel functions which map the nonlinearly\
    \ distributed data\nin to a higher dimensional space to make it linearly separable\
    \ (as much as possible).\nThere are several kernel functions available to be used\
    \ for this purpose such as the\nhyperbolic tangent, radial basis, sigmoid, polynomial\
    \ etc. Optimizing the SVM re-\nquires the tuning of the cost parameter C, a small\
    \ value of C indicates an underfit\nwhereas a very large value of C indicates\
    \ an overfit.\nEven though, the current experiment considers using SVMs for a\
    \ classification\ntaks, it should also be mentioned that SVM’s are not limited\
    \ to application towards\nclassification problems and they have also been used\
    \ for regression applications too.\nDecision Tree\nDecision Trees are one of the\
    \ most widely used classification\nalgorithms due to their interpretability. The\
    \ aim of the algorithm is to come up with\nas simple a solution as possible while\
    \ successively dividing the data in to simpler and\nsimpler classification tasks\
    \ based on the values of the features. For a classification\nproblem, given a\
    \ set of input features of the training set, decision trees use the values\nof\
    \ the features to divide or split the dataset in to more simpler sub problems.\
    \ The\naim being to get the largest information gain when choosing the feature/s\
    \ for the\nsplit. Each split point in a decision tree is called a node and each\
    \ split is called a\nbranch. Branches from a given node represent all the possible\
    \ outcomes from that\n97\nnode and may contain subsequent decision nodes as well\
    \ which are called child nodes.\nEach branch ends at a node called the leaf node\
    \ where data points are assigned a\nclass label.\nDepending on the number of input\
    \ features and the output classes, decision trees\ncan be built to classify the\
    \ dataset in a ’complete’ manner due to its iterative parti-\ntioning scheme.\
    \ However, this is undesirable since that would lead to overfitting of the\nmodel\
    \ and also because such trees would lead to a complicated model, which is not\n\
    desirable since that would impact interpretability. The process of removing branches\n\
    and replacing them by leaf nodes is called pruning. Pruning aims to increase the\n\
    models generalizations capabilities and increase robustness. Two paramters which\n\
    are used for this purpose are tree depth limits the number of child nodes present\
    \ in\nevery branch and the number of features used at each split.\nRandom Forest\
    \ Classifier\nRandom forest is a bagging approach towards de-\ncision trees where\
    \ instead of deciding on where to split for each node, for each tree\na random\
    \ subset of features is used and the feature/threshold to split the data is\n\
    determined within that subset of features to separate the data in the best manner\n\
    possible. This process is repeated multiple times which results in various trees\
    \ pro-\nducing possibly different predictions. The predictions from each tree\
    \ are combined\nto form an ensemble either through majority voting or by averaging.\
    \ The imple-\nmentation of Random Forests used in this work uses the averaging\
    \ approach. There\nare several parameters that are important in the tuning of\
    \ Random Forests are the\nnumber of trees created before the averaging process\
    \ starts, the number of levels in\neach tree and more.\nExtreme Gradient Boost\n\
    Extreme Gradient Boost is another ensemble based\ntree algorithm, however compared\
    \ to the RFC, XGBoost uses boosting instead of\nbagging. In boosting, the input\
    \ samples are uniformly weighted and first a ’weak’\nlearner (classifier) is created\
    \ for a given task that doesnt perform well but is sufficient\nin the sense that\
    \ it is better than random guessing. In subsequent iterations of the\nlearner,\
    \ input samples which werent classified correctly by the learner are reweighted\n\
    by assigning larger weights to them while the weights for correctly classified\
    \ inputs\nis reduced. This step is repeated for a number of times with different\
    \ weak learners\nbeing trained.\nThe decision of the weak learners are combined\
    \ through majority\nvoting to determine the output class. Parameters used to tune\
    \ XGBoost are the\nmaximum depth allowed in each tree, the weight settings etc.\n\
    2.8.1.3\nResults\nAs mentioned previously, two separate experiments were conducted,\
    \ first was to dif-\nferentiate between fall directions only and the other to\
    \ differentiate between fall\ndirection as well as severity. The results from\
    \ those experiments are presented here.\nThe metrics considered for judging model\
    \ quality is the F1-score. The F1-score is the\nharmonic mean of the precision\
    \ and recall and is given as in Eq. 7.\n98\nF1 Score = 2 ∗ (Precision ∗ Recall)\n\
    Precision + Recall\n(7)\nwhere Precision is the ratio of the True positive samples\
    \ divided by the sum of the\nTrue positive and False positive samples as given\
    \ in Eq. 8. It is also called positive\npredictive value as it indicates to the\
    \ capability of the classifier to identify correctly\nthe samples of a given class.\n\
    Precision =\nTrue Positive\nTrue Positive + False Positive\n(8)\nand recall indicates\
    \ to the models capability to identify the samples of a given\nclass over the\
    \ whole dataset. It is also called the sensitivity and is the ratio of the\nTrue\
    \ positives to the sum of the True positives and False Negatives as shown in Eq.\n\
    9.\nRecall =\nTrue Positive\nTrue Positive + False Negative\n(9)\nWe report on\
    \ the F1-scores for each class when discussing classification perfor-\nmance and\
    \ deciding on the best classifier. Moreover, for the best classifier identified\n\
    the precision and recall have also been provided.\nFall direction\nIn this experiment,\
    \ fall segments labeled for direction only were used as input to the\nclassifiers.\
    \ To establish a baseline to be used as a reference in the feature selection\n\
    process, all computed features (96 in total) were passed to the four classifiers.\
    \ The\nbest performing model was found to be the SVM with a weighted F1-score\
    \ of 90.4%.\nFeature selection was then performed keeping in view baseline performance\
    \ of the\nSVM classifier so as to retain or improve this performance baseline\
    \ when choosing a\ngiven number of ’top’ features. Following this rule, feature\
    \ selection resulted in 90\nfeatures. The results are given in Table 36. It can\
    \ be observed from the table that\nthe SVM has outperformed the other algorithms\
    \ in detecting forward and lateral falls\nwhereas it achieves a slightly lower\
    \ F1-score for the backward fall class. Overall the\nSVM has shown to be better\
    \ at discriminating falls with direction.\nTable 36. Fall F1-scores (Fall direction\
    \ only)\nFall\nClassifier (F1-score %)\nSVM\nDT\nRFC\nXGBoost\nBF\n96.05\n92.22\n\
    96.59\n96.63\nFF\n92.67\n83.60\n90.10\n89.49\nLF\n88.67\n71.78\n85.63\n84.35\n\
    Average\n92.46\n82.53\n90.77\n90.15\n99\nFall direction and severity\nIn this\
    \ experiment, fall segments from the dataset were labeled for direction and\n\
    severity based on the labeling shown in Table 34 and passed to each of the classifiers\n\
    after feature selection. Like before, to establish a baseline, all computed features\
    \ (96\nin total) were passed to the four classifiers. The best weighted F1-score\
    \ of 78.44% was\nachieved by the SVM classifier. We used this value as the baseline\
    \ we aim to achieve\nafter feature selection. With this condition the number of\
    \ features were reduced to\n93. The performance achieved for each of the four\
    \ tested classifers is summarized in\nTable 37. It can be observed that the SVM\
    \ is the best performing classifier for all fall\ntypes bar FHF where the random\
    \ forest classifer achieves a slightly higher F1-score.\nThe highest F1-score\
    \ overall is achieved for the class BSF where as the lowest has\nbeen achieved\
    \ for LHF. When looking at fall direction, falls in the forward direction\ncan\
    \ be seen to be the hardest to identify followed by lateral falls. No such pattern\n\
    can be noted for soft/hard falls.\nTable 37. Fall F1-scores (Fall severity and\
    \ direction)\nFall\nClassifier (F1 Score %)\n[]\nSVM\nDT\nRFC\nXGBoost\nBHF\n\
    87.27\n50.00\n69.39\n66.67\nBSF\n95.08\n77.88\n88.33\n85.47\nFHF\n72.43\n54.02\n\
    75.56\n67.04\nFSF\n73.25\n50.60\n67.57\n58.93\nLHF\n66.67\n29.85\n35.90\n50.00\n\
    LSF\n84.65\n62.24\n75.17\n75.69\nAverage\n79.89\n54.10\n68.65\n67.30\n2.8.1.4\n\
    Discussion\nTo summarize the results from both experiments, we present the individual\
    \ F1-\nscores, Precision and Recall for the best performing classifier in each\
    \ case. These\nhave been presented in Table 38 and Table 39.\nTable 38. Best Results:\
    \ Fall direction\nFall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBF\n94.44\n97.70\n\
    96.05\nFF\n93.33\n92.02\n92.67\nLF\n88.67\n88.67\n88.67\nAverage\n92.16\n92.80\n\
    92.46\nIn both cases the best performing classifier was the SVM. This is inline\
    \ with\nthe findings of other research work as found from the literature review\
    \ [424, 429].\nA surprising outcome during this work was the unsatisfactory performance\
    \ of tree\nbased algorithms contrary to [420], we attribute this to the difference\
    \ in the data\nsegmentation scheme and also the fact that we follow different\
    \ labelling for the data\n100\nTable 39. Best Results: Fall direction and Severity\n\
    Fall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBHF\n80.00\n96.00\n87.27\nBSF\n\
    96.67\n93.55\n95.08\nFHF\n74.44\n70.53\n72.43\nFSF\n74.17\n72.36\n73.25\nLHF\n\
    60.00\n75.00\n66.67\nLSF\n85.00\n84.30\n84.65\nAverage\n78.38\n81.96\n79.89\n\
    in terms of a direction and severity aware system. Moreover, the final weighted\
    \ F1-\nscores for the fall direction experiment was 92% and for the fall direction\
    \ and severity\nwas 79.53% which resulted in an improvement of just above 1% in\
    \ both cases with a\nsmall reduction in the number of features utilized, 90 and\
    \ 93 respectively compared to\n96 in the original feature set. Commenting on the\
    \ direction, the hardest to predict fall\nwas in the lateral direction and the\
    \ classifier incorrectly predicted forward falls and\nlateral falls in both the\
    \ scenarios tested. This highlights the difficulty in capturing\nthe difference\
    \ between these two fall directions using the features considered.\n2.8.2\nFall\
    \ Detection with Severity and Direction along with ADL consid-\neration using\
    \ Wavelet Pooling and K-NN\nThis section provides a framework for a fall and activity\
    \ recognition system. It aims\nto determine an appropriate sensor modality to\
    \ use and the window size to be used\nfor the task. The framework does this as\
    \ a problem of differentiating between various\nactivities of daily living as\
    \ well as various types of falls with regard to fall datection\nbeing direction\
    \ and severity aware. To do this, data from the SisFall dataset is used\nand after\
    \ suitable pre-processing and feature extraction, machine learning algorithms\n\
    are utilized to differentiate between different activities of daily living and\
    \ falls\n2.8.2.1\nData Labeling\nSince we aim to perform activity recognition\
    \ and fall detection with direction and\nseverity, the ADL labeling of the original\
    \ dataset has been modified. This labeling\nhas been shown in Table 40. As can\
    \ be observed from Table 40, the activities Walking\n(W), Jogging (J), Sitting\
    \ (S) and Standing (SB) have been considered for this work\nwhich are typical\
    \ activities in ADL detection problems. Each of these labels includes\ndata from\
    \ multiple original activities, for e.g. activities with original labels of walking\n\
    upstairs and downstairs, walking slowly and walking quickly have been considered\
    \ as\nwalking in this work. A similar scheme has been used for the other three\
    \ activity\nlabels as well. Some of the activities such as being on one’s back\
    \ change to lateral\nposition, wait a moment, and change to one’s back (D14),\
    \ getting in and out of the\ncar (D17), stumble while walking (D18), and gently\
    \ jumping without falling while\ntrying to reach a high object (D19) have not\
    \ been considered. The reason for this\nis that they have very few samples to\
    \ be considered as standalone activities (only\none type of sub-activity and also\
    \ because most of these are not considered in typical\n101\nADL detection scenarios).\
    \ For falls, the labeling same as that for the direction and\nseverity experiment\
    \ has been retained.\nTable 40. ADL Labels used for SisFall Recordings.\nActivity\
    \ Code\nAssigned Activity Name\nAssigned Activity Label\nD01\nWalking\nW\nD02\n\
    Walking\nW\nD03\nJogging\nJ\nD04\nJogging\nJ\nD05\nWalking\nW\nD06\nWalking\n\
    W\nD07\nSit\nS\nD08\nSit\nS\nD09\nSit\nS\nD10\nSit\nS\nD11\nSit\nS\nD12\nSit\n\
    S\nD13\nSit\nS\nD14\n-\n-\nD15\nStanding\nSB\nD16\nStanding\nSB\nD17\n-\n-\nD18\n\
    -\n-\nD19\n-\n-\n2.8.2.2\nMethodology\nFigure 18 shows the methodology for this\
    \ work with individual parts being elab-\norated upon in the proceeding subsections.\
    \ As can be seen, the first stage consists of\ndata preprocessing, followed by\
    \ feature extraction and then evaluation or classifica-\ntion.\nData Preprocessing\n\
    Data preprocessing for this experiment was performed in a similar manner to section\n\
    2.8.1 for most recordings. The SMV was computed for the complete recording and\n\
    windowed segments of a fixed duration were extracted.\nWindowed segments are\n\
    extracted in this manner from all considered activities in the SisFall dataset\
    \ except\nthe activities of D01, D02, D03 and D04 which consist of a single trial\
    \ per subject of\nduration 100s. In such cases, continuous windowed segments of\
    \ duration n seconds\nare extracted from the recordings. It is also pertinent\
    \ to mention here that since\nboth accelerometers are placed at the same position,\
    \ we only consider one of the\naccelerometers along with the gyroscope readings\
    \ present in the recorded trials. To\ndetermine the value of n as well as the\
    \ appropriate sensor modality to use for the\nfinal system, experiments were performed\
    \ on the developed framework and the results\nhave been discussed in subsequent\
    \ sections.\nFeature extraction\nIn this experiment, feature extraction consists\
    \ of two steps. The first is the use of\n102\nWindowing\nWavelet Coefficient\n\
    Extraction\nSpatial Pyramid\nPooling\nKNN Classifier ADL\nvs Fall \n(W J, S, SB,\
    \ Fall)\nKNN Classifier\nSeverity \n(HF, SF)\nKNN Classifier\nDirection \n(F,\
    \ B, L)\nFeature\nExtraction\nHierarchical\nClassification\nData\npreprocessing\n\
    Peak SMV detection\nFall ?\nOutput Class \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF,\
    \ LSF)\nDetermination of Fall type (Voting)\nYes\nNo\nIMU Recording (Falls and\
    \ Activities) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFigure 18. Hierarchical\
    \ classification scheme for ADL and Fall detection.\nwavelets [474] for performing\
    \ wavelet decomposition and then performing pooling,\nthe inspiration for this\
    \ type of feature extraction came from the work of [475].\n103\nWavelet Decomposition\n\
    Wavelets can be used for a variety of applications\nsuch as spectral analysis\
    \ where they are used to analye a signal in the time-frequency\ndomain, denoising,\
    \ compression and signal enhancement. A wavelet is a function of\nfinite duration\
    \ and has an average value of zero, an example of a mexican hat wavelet\nis shown\
    \ in Figure. 19. The width of the wavelet is called its scale and it is analogous\n\
    to frequency in an inverse manner. A large value of the scale (wider window) allows\n\
    for capturing of low frequency components of the signal whereas a small scale\
    \ value\ncaptures low frequency components.\n0\n20\n40\n60\n80\n100\n0.2\n0.1\n\
    0.0\n0.1\n0.2\n0.3\n0.4\nAmplitude\nMexican Hat Wavelet\nFigure 19. Sample Wavelet\
    \ (Mexican Hat).\nWavelets are convolved with an input signal to produce two sets\
    \ of coefficients.\nThese are called the detail and approximation coefficients.\
    \ The detail component\nrepresents the high frequency component captured by the\
    \ wavelet whereas the ap-\nproximation component represents the low frequency\
    \ part. Since the wavelet has\nonly been convolved once with the signal, these\
    \ coefficients are said to be level 1\ncoefficients. At each level, resulting\
    \ coefficients are downsampled by half to result in\na lower resolution signal.\
    \ Subsequent approximation components can be convolved\nwith the wavelet to result\
    \ in approximation and detail components for the next level\nthus forming what\
    \ is called a wavelet decomposition tree.\nTo perform wavelet decomposition, in\
    \ this experiment, we make use of the Haar\nwavelet [476] shown in Figure. 20.\
    \ Level 4 haar wavelets were computed for each of\nthe extracted segments of the\
    \ signals.\nSpatial Pooling\nThe results from the decomposition provide a large\
    \ number\nof features which would pose a problem for use in the proceeding classification\
    \ stage.\nIn order to reduce the feature dimension size, Spatial Pyramid Pooling\
    \ [477] was\nused. Spatial Pyramid Pooling is an adaptive pooling method which\
    \ was developed\nto address the issue of fluctuating input sizes in CNNs for image-based\
    \ applications,\nand it entails converting varying-size convolutional feature\
    \ maps into fixed-length\nsummarizations. These summarizations, having uniform\
    \ length can then be passed\non to the fully connected parts of the CNN where\
    \ a fixed length input is necessary.\n104\n1.0\n0.5\n0.0\n0.5\n1.0\n1.5\n2.0\n\
    1.00\n0.75\n0.50\n0.25\n0.00\n0.25\n0.50\n0.75\n1.00\nAmplitude\nHaar Wavelet\n\
    Figure 20. Haar Wavelet.\nGiven a pooling size pxp, adaptive pooling works by\
    \ dividing the input in to pxp pieces\nwhile computing the size of each piece\
    \ automatically and performing any necessary\npadding. Once these pieces are created,\
    \ a pooling operation is typically performed\n(max pooling or average pooling\
    \ for e.g.) on each of these pieces to summarize the\ninput into an output of\
    \ fixed size pxp. This results in a fixed output length for any\nsize of the input.\
    \ In this experiment, 4-2-1 1D Spatial Pyramid pooling was used\non the detail\
    \ and approximation coefficients of the wavelet decomposition of activity\nand\
    \ fall data. This process has been shown in Figure 21. Each coefficient set was\n\
    divided in to four and two parts and then max pooling was used to determine the\n\
    maximum value in these divided parts and the coefficient set as a whole.\nThese\n\
    maximum values were then concatenated together to form the seven valued output\n\
    from that coefficient set. Furthermore, the results for each coefficient set within\
    \ each\naxis were also concatenated to form the feature vector for a sensor axis\
    \ measurement.\nThis operation was performed for each axis of accelerometer and\
    \ groscope sensor\ndata with the final feature vector of 210 values consisting\
    \ of the concatenations of\nthe individual vectors for each axis. It is hypothesized\
    \ that this way local as well as\nglobal information at each level of the wavelet\
    \ coefficients can be captured. For the\nwavelet decomposition, tests were performed\
    \ with level values of 2, 3, 4, 5 and 7 and\nit was determined that level-4 produced\
    \ the best results.\nClassification\nA hierarchical classification approach is\
    \ employed to discriminate between the vari-\nous activities and falls considered\
    \ from the SisFall dataset. Hierarchical classification\ninvolves the division\
    \ of a complex taxonomic classification problem in to a set of\nsubsets that are\
    \ potentially easier to differentiate as the task becomes more localized.\nHierarchical\
    \ classifiers have been used in multiple different applications [478] where\n\
    they have been found to improve upon the performance of many flat classification\n\
    schemes. The classification framework used in this work combines hierarchical\
    \ clas-\nsification with a vote based system. The classification problem is divided\
    \ into three\nparts, each with its own classifier to indicate to the subclass\
    \ of the output. The clas-\n105\nMaxpooling Size = 4\nMaxpooling Size = 2\nMaxpooling\
    \ Size = 1\nMaxpooled Coefficients - 4\nMaxpooled Coefficients - 2\nMaxpooled\
    \ Coefficients - 1\nConcatenated cofficients for maxpooled wavelet coefficients\n\
    c1\nc2\nc3\nc4\nc5\nc6\nc7\nc8\nc9\nc10\nc11\nc12\nn Wavelet coefficients ( n\
    \ = 12 e.g.)\nMax (c1, c2, c3)\nMax (c4, c5, c6)\nMax (c7, c8, c9)\nMax (c10,\
    \ c11, c12)\nMax (c1, c2, c3, c4, c5, c6)\nMax (c7, c8, c9, c10, c11, c12)\nMax\
    \ (c1, c2, c3, c4, c5, c6,c7, c8, c9, c10, c11, c12)\nFigure 21. Example: 4-2-1\
    \ 1-D Spatial Pyramid Pooling.\nsifier in part one consists of differentiating\
    \ whether a given recording is a fall or one\nof the four considered ADLs. In\
    \ order to train this stage, the activities of Standing,\nWalking, Sitting and\
    \ Jogging along with all falls combined in to one class are passed\nto the classifier.\
    \ This dilutes the original ten-class problems in to a five-class sub\nproblem.\
    \ The output of this stage is the determination of whether a given recording\n\
    is either one of the four ADLs (Standing, Walking, Sitting or Jogging) or a fall.\
    \ If a\nrecording has been detected to be a fall, it is sent to the second and\
    \ third stages.\nThe second and third stages work in parallel on samples detected\
    \ as falls from\n106\nthe first stage in the form of a voting machine. These two\
    \ stages vote individually\non the direction and severity of the detected fall\
    \ samples. In order to train them,\nfall samples were relabeled to represent direction\
    \ and severity only and are fed to the\nclassifiers. For the direction, the classification\
    \ problem is formulated as a three-class\nproblem of determining fall directions\
    \ as being Forward, Backward or Lateral. For\nthe severity classifier, the classification\
    \ problem is formulated as a two-class problem\nof a fall being either Soft or\
    \ Hard. After a signal has passed through all necessary\nstages, the outputs of\
    \ the individual stages are combined to indicate to the activity\nor type of fall\
    \ being fed at the input.\nFour classifiers were tested for each part of the hierarchical\
    \ scheme, the classifiers\nconsidered were K-Nearest Neighbors, Support Vector\
    \ Machines, Random Forests\nand eXtreme Gradient Boosting. Parameter tuning was\
    \ performed using gradient\nsearch for each classifier over a range of values\
    \ for each parameter.\nK-Nearest Neighbor\nCompared to the SVM which attempts\
    \ to create a deci-\nsion boundary between classes on a global level, the K-NN\
    \ algorithm operates locally.\nStarting from a data point, the 1 Nearest Neigbhor\
    \ algorithm will assign each new\nsample the class of its neighbor. However, using\
    \ a single neighborhood point to assign\nnew classes may lead to erroneous classes\
    \ being assigned. Therefore, typically mul-\ntiple neighboring points are used\
    \ to determine the label for a given point. In K-NN,\n’K’ represents the number\
    \ of points used in the neighborhood to assign labels to data\nsamples. Each considered\
    \ sample is assigned the majority label within a neighbor-\nhood of K points around\
    \ it. In this manner, the K-NN algorithm is successively able\nto create a decision\
    \ boundary separating the data in to the different output classes.\n2.8.2.3\n\
    Results\nThree experiments were performed in this section. The first was to choose\
    \ the best\nclassifier to use, once that was determined. experiments were conducted\
    \ to determine\nthe observation window size and different combination of sensor\
    \ modalities. We used\nthe weighted F1-score as our training metric due to the\
    \ imbalance in the samples\nof the different classes in the data. Moreover, for\
    \ evaluation purposes, we report on\nthe individual F1-scores for each output\
    \ class and provide discussions as necessary.\nFurthermore, for the best performing\
    \ results, the Precision and Recall and Specificity\nwere also specified. Specificity\
    \ can be calculated as given in Eq. 10. It is also called\nthe True Negative Rate\
    \ and indicates to a classifiers capability to correctly detect\nsamples which\
    \ don’t belong to a given class. These metrics have been computed on\na one versus\
    \ all basis.\nSpecificity =\nTrue Negative\nTrue Negative + False Positive\n(10)\n\
    The data after the feature extraction stage was split in to a train/test partition\n\
    based on a 75/25 ratio with a parameter grid being searched through to obtain\n\
    107\ntuning parameters for maximizing the weighted F1-score while using five-fold\
    \ cross\nvalidation.\nClassifier Selection\nThis test was conducted to determine\
    \ the best classifier to use for the proceeding\nexperiments of observation window\
    \ selection and sensor modality selection. Here,\nexperiments were performed for\
    \ the considered window durations for each activity\nand the classifier which\
    \ provided the best performance overall was chosen. The mean\nF1-scores for each\
    \ output class for each classifier are shown in Figure 22. It can be\nobserved\
    \ that in general K-NN and SVM perform better compared to the ensemble\nmodels,\
    \ the RFC and XGBoost. However, since the K-NN slightly outperforms the\nSVM in\
    \ eight of the ten considered classes, we choose K-NN as the classifier for this\n\
    framework.\nBHF\nBSF\nFHF\nFSF\nJ\nLHF\nLSF\nS\nSB\nW\n0\n20\n40\n60\n80\n100\n\
    F1 Score (%)\nAverage F1 Scores for each activity\nKNN\nSVM\nRFC\nXGB\nFigure\
    \ 22. Average F1-scores for each activity for the four classifiers.\nObservation\
    \ Window Duration\nAn important consideration in working with activity recognition\
    \ systems is to de-\ntermine the appropriate observation window size for the analysis\
    \ of sensor signals\nto accomplish the ADL recognition/fall detection task. The\
    \ size of the observation\nwindow is important as a smaller observation window\
    \ increases the response time of\nthe activity recognition/fall detection system\
    \ and it can also impact the time taken\nin the computation of features. In order\
    \ to find the best observation window size,\nwe perform experiments using five\
    \ values, 2, 3, 4, 5 and 6 seconds. The classification\nresults in terms of the\
    \ F1-score are presented in Table 41. For each case, samples\nof duration equal\
    \ to half of the observation window were extracted around the peak\nvalue of the\
    \ SMV. From the table, it can be observed that an observation window\n108\nof\
    \ size 3 seconds produces the best results for six out of the ten output classes.\
    \ It\nonly produces poorer results for the classes BHF, BSF and S, SB where window\
    \ sizes\nof 2 seconds, 6 seconds and 4 seconds respectively perform better than\
    \ the 3 second\nwindowing case. Upon further investigation of this phenomenon\
    \ using the result of\nother classifiers, it was observed that the activities\
    \ of (BHF and BHF) were best rec-\nognized by all the classifiers with a window\
    \ size of 2 seconds (for the case of K-NN,\nthere is a small difference between\
    \ the 2 second and 6 second case), for the other two\nactivities of S and SB too\
    \ the F1-score was obtained for the 4 second duration (for\nthe activity S, the\
    \ difference in performance over windows larger than 4 seconds is\nvery small).\
    \ This could be attributed to the feature aggregation process in the max\npooling\
    \ operation in the different spatial segments.\nTable 41. Performance for different\
    \ observation window sizes.\nActivity/Fall\nObservation Window Size (F1-score\
    \ [%])\n2 sec\n3 sec\n4 sec\n5 sec\n6 sec\nBHF\n86.79\n83.02\n79.25\n83.64\n85.19\n\
    BSF\n92.17\n90.76\n89.08\n90.76\n93.22\nFHF\n78.53\n80.47\n78.32\n79.21\n78.83\n\
    FSF\n73.39\n77.18\n72.5\n76.83\n76.79\nLHF\n52.83\n67.8\n62.75\n59.26\n58.62\n\
    LSF\n79.69\n82.73\n77.57\n81.46\n79.41\nJ\n97.53\n98.27\n98.08\n98.00\n98.16\n\
    S\n95.27\n96.20\n97.60\n95.84\n95.93\nSB\n87.29\n85.71\n91.98\n90.61\n91.71\n\
    W\n98.08\n98.46\n98.12\n98.35\n98.16\nAverage\n84.16\n86.68\n84.52\n85.40\n85.60\n\
    Sensor Modality\nThe second experiment in designing the proposed system is the\
    \ determination of\nthe best sensor modality to use.\nUsing a single sensor would\
    \ result in less data,\nfaster processing and reduced hardware costs compared\
    \ to the multisensor approach\ncombining accelerometer and gyroscope. To do this,\
    \ the classification framework was\ntested with 3 second windowed segments of\
    \ the combined acceleromter and gyroscope\ndata as well as data of the accelerometer\
    \ and gyroscope sensors individually. The\nresults of this experiment are presented\
    \ in Table 42. It can be observed that using\na combination of both accelerometer\
    \ and gyroscope data together produces the best\nresults for eight of the ten\
    \ output classes. An accelerometer-only system produces\nbetter results for the\
    \ detection of activity SB and the fall FHF. The outcome of this\nexperiment agrees\
    \ with previous work for fall detection by Waheed et. al. [436] on\nthe SisFall\
    \ dataset.\n2.8.2.4\nDiscussion\nTable 43 reports on the best results obtained\
    \ for the proposed classification frame-\nwork. These results were achieved by\
    \ using windowed segments of 3 seconds and\n109\nTable 42. Performance for different\
    \ sensing modalities.\nActivity/Fall\nSensing Modality (F1-score [%])\nAccelerometer\
    \ + Gyroscope\nAccelerometer\nGyroscope\nBHF\n83.02\n67.92\n82.14\nBSF\n90.76\n\
    85.48\n78.18\nFHF\n80.47\n83.33\n71.17\nFSF\n77.18\n73.21\n63.96\nJ\n98.27\n97.79\n\
    95.59\nLHF\n67.80\n54.55\n55.56\nLSF\n82.73\n76.34\n73.21\nS\n96.20\n95.61\n91.17\n\
    SB\n85.71\n86.21\n76.09\nW\n98.46\n98.24\n96.30\nAverage\n86.06\n81.87\n78.33\n\
    combined data from the accelerometer and the gyroscope with a weighted F1-score\n\
    of 94.67% on the test set.\nTable 43. Best Results (Obs. Window : 3 sec, Sensing\
    \ Modality: Acc. + Gyro.)\nActivity/Fall\nPrecision (%)\nSensitivity/Recall (%)\n\
    Specificity (%)\nF1-Score (%)\nBHF\n95.65\n73.33\n99.96\n83.02\nBSF\n91.53\n90.00\n\
    99.80\n90.76\nFHF\n86.08\n75.56\n99.57\n80.47\nFSF\n76.86\n77.50\n98.88\n77.18\n\
    LHF\n68.97\n66.67\n99.65\n67.80\nLSF\n79.85\n85.83\n98.96\n82.73\nJ\n97.87\n98.68\n\
    99.36\n98.27\nS\n95.00\n97.44\n99.31\n96.20\nSB\n93.75\n78.95\n99.80\n85.71\n\
    W\n97.95\n98.97\n98.36\n98.46\nAverage\n88.35\n84.29\n99.37\n86.06\nFrom Table\
    \ 43, the best recognized ADLs are W and J whereas the best rec-\nognized fall\
    \ is BSF. The worst performing class in ADLs is SB whereas the worst\nperforming\
    \ fall is LHF. Upon further inspection of the cause of the bad performance\nwith\
    \ LHF, looking at the confusion matrix, it was observed that LHF was most\ncommonly\
    \ confused with FSF which resulted in a reduction of the classification per-\n\
    formance for this class. On the other hand, in the case of FSF (the second worse\n\
    performing class), looking at the confusion matrix, it was observed that FSF was\n\
    confused with LSF and FHF. Furthermore, the specificity values indicate that there\n\
    has been very little mis-identification for each of the classes. When talking\
    \ about\nthe activity S, it was observed that samples from this activity were\
    \ confused with\nthe activity W which resulted in the sub-par performance of the\
    \ classifier for its\nrecognition.\n110\n2.8.3\nFall Detection with Severity and\
    \ Direction along with ADL consid-\neration using CNN-XGBoost\nThis section presents\
    \ a scheme for performing fall detection considering fall direction\nand severity\
    \ as well as activity recognition. Inertial sensor data taken from the SisFall\n\
    dataset is used to develop the methodology. Data pre-processing is first carried\
    \ out\nin terms of windowing and relabeling. Then, data augmentation is carried\
    \ out for\nclasses which do not have a sufficient number of samples. Lastly, feature\
    \ extraction is\nperformed along with classification. This work considers fall\
    \ and activity recognition\nas a holistic problem, in that different types of\
    \ falls and activities are considered\nthereby producing a more ’complete’ recognition\
    \ system for use in cyber-physical\nsystems. Moreover, towards this end, a CNN-XGBoost\
    \ combination is proposed.\n2.8.3.1\nMethodology\nThe proposed scheme follows\
    \ a typical deep learning so-\nlution framework. First, inertial sensor data from\
    \ the IMU sensors contained within\nthe SisFall dataset is pre-processed to extract\
    \ windowed segments, then data aug-\nmentation is performed for minority classes,\
    \ followed by feature extraction and then\nclassification. This has been illustrated\
    \ in Figure 23 and a discussion is provided for\neach of the steps in the proceeding\
    \ sections.\nData Pre-processing\nBefore the IMU sensor recordings can be used\
    \ for ADL and fall detection, raw sensor\nmeasurements need to be suitably processed.\
    \ In this experiment, data pre-processing\nconsists of two steps, the first is\
    \ the extraction of uniform sized windows as was\nperformed in the previous section\
    \ from the IMU recordings and the next is data\naugmentation. Since windowing\
    \ of the signals has already been discussed previously,\nonly data augmentation\
    \ is discussed here.\nData Augmentation\nThe use of deep learning methods require\
    \ a suitable\namount of data to be present for them to learn the data pattern\
    \ sufficiently well. Un-\nfortunately, due to the nature of the problem considered,\
    \ the relabeled data from the\nSisFall dataset contains a reduced amount of data\
    \ for some of the classes, especially\nfall classes and also for the ADL of Standing.\
    \ In order to alleviate this shortcom-\ning, data augmentation was employed to\
    \ increase the number of samples from these\nclasses. Three augmentations were\
    \ performed for each of the extracted recordings\nfor the classes SB, FHF, FSF,\
    \ BHF, BSF, LHFand LSF. These were the addition of\nnoise, scaling and resampling\
    \ after inerpolation [439]. For augmentation with noise,\nwhite gaussian noise\
    \ was added to the extracted windows of the considered classes.\nThe noise was\
    \ generated using a standard deviation equal to 0.01. The addition of\nthe noise\
    \ simulates measurement noise during recording which might be encountered\nwhen\
    \ IMU based fall detection systems are employed. For scale based augmentation,\n\
    the original extracted window was multiplied by a random number from the uniform\n\
    distribution between 0.8 and 1.2 thereby scaling it between 80% and 120% of its\
    \ orig-\ninal form. By doing so, changes in amplitude over the same type of activity/fall\
    \ are\nincorporated. This could indicate to a change in fixation (loosening etc)\
    \ of the sensing\n111\nPeak SMV Detection\nWindowing\nCNN\nXGBoost Classifier\n\
    Data Augmentation\nData Processing\nIMU Recording (Falls and Activities) \n(ADL,\
    \ FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\n\
    Output Class \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF,\
    \ BSF, LHF, LSF)\nFeature Extraction\nClassification\nFigure 23. CNN-XGBoost based\
    \ classification scheme for ADL and Fall detection.\nunit to a subject or their\
    \ different physique and subsequent fall intensity response.\nLastly, in order\
    \ to incorporate sampling inconsistencies, the windows are first upsam-\npled\
    \ and then downsampled. This was done by a scale of ten. With this strategy,\n\
    each from original window were produced three additional samples. An illustration\n\
    for the results of the augmentation process for an X-axis accelerometer measurement\n\
    for a lateral fall has been shown in Figure 24.\nFeature extraction\nThe aim of\
    \ feature extraction for a classification problem is to produce a representa-\n\
    tion of the input that can be better used to indicate to the output class. In\
    \ this regard,\nresearch in the area of fall detection with inertial sensors has\
    \ made use of different\ntypes of hand crafted features such as statistical, time\
    \ and frequency domain as well\nas wavelet transforms [479, 480, 481, 482]. Convolutional\
    \ Neural Networks (CNNs\nor Covnets) are a set of neural networks developed following\
    \ the visual cortex within\nthe brain [483]. CNNs perform operations on inputs\
    \ by introducing convolutions of\n112\nFigure 24.\nIllustration of data augmentation.\n\
    (X component of Accelerometer,\nLateral Fall)\nseveral filters with learnable\
    \ weights to gauge the importance of each datapoint in\nthe input. These layers\
    \ containing the filters and to which the input is provided are\ncalled convolutional\
    \ layers. Through these learnable weights, CNNs are able to cap-\nture temporal\
    \ and spatial dependencies of the input. Moreover, using the same filters\nfor\
    \ different inputs reduces the number of parameters as the weights are reused.\
    \ This\nallows CNNs to develop a deeper understanding of the provided input compared\
    \ to\ntypical multilayer perceptron models. CNNs have revolutionized the field\
    \ of computer\nvision where they have been used for a variety of tasks such as\
    \ classification, object\ndetection, segmentation and object counting [484, 485]\
    \ and they have also successfully\nbeen used for applications within the speech\
    \ and other time series signal application\ndomain [486, 487, 488]. In this experiment,\
    \ rather than using hand crafted features\n113\nas in the previous experiments,\
    \ a CNN has been used to perform feature extraction\nin order to take advantage\
    \ of the spatial and temporal dependency capturing capa-\nbilities of CNNs. CNNs\
    \ are usually comprised of several convolutional (Conv) layers.\nWithin a multilayer\
    \ CNN, the earlier Conv layers capture low level features from the\ninput with\
    \ more complex features being computed by the successive layers. Also,\nCNNs may\
    \ employ pooling layers between convolutional layers so as to reduce the\nsize\
    \ of the input passed on to successive layers and therefore reduce computation.\n\
    The proposed network along with the XGBoost classification stage is illustrated\
    \ in\nFigure 25.\nConv\n64 filters (3x1)\nConv\n64 filters (3x1)\nConv\n64 filters\
    \ (3x1)\nConv\n64 filters (3x1)\nAvg Pooling\nAvg Pooling\nAvg Pooling\nFlatten\n\
    XGB classification\nStage\nFigure 25. CNN Network for feature extraction and XGBoost\
    \ classification stage.\nAs seen from the figure, the network consists of four\
    \ Conv layers of 64 filters\neach.\nThese layers have filters of size 3x1 and\
    \ are used to extract features from\nraw inertial sensor measurements. Each Conv\
    \ layer is followed by a Relu activation\nfunction which applies a non-linearity\
    \ to the output of the Conv layers. To condense\nthe output of the first three\
    \ Conv layers, a pooling layer is utilized. Instead of max\npooling, average pooling\
    \ is used in this network. Max pooling picks out the largest\nvalue of the patch\
    \ of data being observed currently, in contrast, average pooling uses\nthe average\
    \ of the data being observed. Average pooling has been successfully used in\n\
    114\nplace of max pooling in a variety of scenarios [489, 490]. Normalization\
    \ is performed\nusing a batch normalization layer for each Conv layer. The output\
    \ of the last Conv\nlayer are feature maps derived from the input raw inertial\
    \ sensor measurements from\nboth the accelerometer and the gyroscope.\nClassification\n\
    Classification is carried out by using a eXtreme Gradient Boosting (XGBoost) clas-\n\
    sifier. The output from the CNN is first flattened and then provided as an input\
    \ to\nthe XGBoost stage. The parameters of the XGBoost classifier are tuned through\
    \ a\nparameter search over a range of values. We make use of an XGBoost classifier\
    \ due\nto its suitability for a large dimensional input which results from the\
    \ flattened CNN\noutput.\n2.8.3.2\nResults\nIn order to use the proposed CNN for\
    \ feature extraction, it must first be trained\naccordingly. In order to train\
    \ the network, a fully connected layer with a softmax\noutput was added as the\
    \ final stage to serve as the intermediate temporary output\ndeterminant stage.\
    \ The windowed data from the SisFall dataset was divided in to\nthree sets, train,\
    \ validation and test in a stratified manner. A learning rate of 0.01\nwas used\
    \ for the network with a batch size of 20 and the stochastic gradient descent\n\
    was used as the optimizer. Moreover, the metric chosen was the average of the\
    \ recall\nscores of all classes together, also called as the unweighted average\
    \ recall (UAR).\nThe recall is considered as one wants the system correctly classify\
    \ as many positive\nsamples for every class as possible. The final network was\
    \ determined using early\nstopping. The unweighted average recall (UAR) can be\
    \ computed as,\nUAR =\nk\nX\nn=0\n\x10\nTPn\nTPn+FNn\n\x11\nk\n(11)\nwhere k stands\
    \ for number of classes and TPn stands for the number of True\nPositive samples\
    \ in the nth class and FNn stands for number False Negative samples\nin the nth\
    \ class. Therefore, the average of the individual recall scores from all classes\n\
    was aimed to be maximized.\nData from the training set was provided to the CNN\
    \ network after performing data\naugmentation on the minority classes, during\
    \ training, the validation set was used\nto observe performance of the network\
    \ and determine the best performing instance.\nOnce training was finished, the\
    \ last fully connected classification layer was removed\nand replaced by an XGBoost\
    \ classification stage. To train the XGBoost stage, the\nweights of the final\
    \ best performing CNN model were loaded in to CNN layers of\nthe network and input\
    \ samples were then passed through them as before. Using the\noutput of the CNN\
    \ stage as an input for the XGBoost, a search was then carried\nout to determine\
    \ the optimal parameter values. After training of the XGBoost stage,\nthe completely\
    \ trained CNN-XGBoost model was tested using the test set.\nTwo\n115\nsets of\
    \ tests were performed, one while considering all ADLs as a single class versus\n\
    individual falls and the other considering common individual ADLs and individual\n\
    falls.\nOne ADL vs Individual Falls\nIn this experiment, all ADLs present in the\
    \ SisFall dataset were combined in to one\nclass to build a generic ADL versus\
    \ fall system. The results are presented in Table 44.\nIt can be observed from\
    \ the table that the ADL class has been detected with perfect\nrecall score. Among\
    \ the falls, the worst performance was observed for LHF with the\nbest performance\
    \ for FHF.\nTable 44. One ADL vs. Individual Falls.\nActivity/ Fall\nPrecision\n\
    (%)\nSensitivity/\nRecall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n91.67\n\
    100\n95.65\nBSF\n100\n95.83\n100\n97.87\nFHF\n85.37\n97.22\n99.41\n90.91\nFSF\n\
    92.86\n81.25\n99.71\n86.67\nLHF\n72.73\n66.67\n99.70\n69.57\nLSF\n89.58\n89.58\n\
    99.50\n89.58\nADL\n99.54\n100\n97.78\n99.77\nAverage\n91.44\n88.89\n99.44\n90.02\n\
    Individual ADLs vs Individual Falls\nThe results of the experiment have been shown\
    \ in Table 45.\nTable 45. Individual ADLs vs. Individual Falls.\nActivity/Fall\n\
    Precision (%)\nSensitivity/Recall (%)\nSpecificity (%)\nF1-Score (%)\nBHF\n100\n\
    75.00\n100\n85.71\nBSF\n95.83\n95.83\n99.90\n95.83\nFHF\n76.19\n88.89\n99.01\n\
    82.05\nFSF\n90.24\n77.08\n99.60\n83.15\nLSF\n86.79\n95.83\n99.30\n91.09\nLHF\n\
    75.00\n75.00\n99.71\n75.00\nJ\n96.71\n96.71\n99.01\n96.71\nS\n96.77\n96.77\n99.57\n\
    96.77\nSB\n91.18\n83.78\n99.70\n87.32\nW\n97.21\n97.63\n97.77\n97.42\nAverage\n\
    90.59\n88.25\n99.36\n89.11\nAn average recall of 88.25% was observed for the experiment.\
    \ From Table 45,\nwhen looking at the recall achieved for the individual activities,\
    \ it can be observed\nthat the best recognized activities are W and J with each\
    \ achieving a recall of around\n97%. The worst performance in terms of ADLs was\
    \ achieved for the activity SB for\nwhich a recall of 83.78% was attained. Considering\
    \ the case of falls, out of the six\nfalls, the worst recall score of 75% was\
    \ achieved for BHF and LHF whereas the best\nrecall score was of 95.83% was achieved\
    \ for BSF and LSF. The fall class FSF was also\n116\nnot identified well, achieving\
    \ a recall score of 77.08%. Furthermore, as observed from\nthe table, a high value\
    \ of specificity was obtained for all ADLs and falls indicating\nto correct determination\
    \ of negative samples for each class as well. Investigating the\nperformance of\
    \ the network from the confusion matrix, it was observed that the worst\nperforming\
    \ activity SB was equally confused as S and W, this can be attributed to\nthe\
    \ fact that the SB activity includes slight bending which could lead to confusion\
    \ for\nthe classifier. For the worst performing falls, it was observed that BHF\
    \ was confused\nwith LHF and LSF whereas LHF was confused with FHF and FSF. The\
    \ confusion\nbetween the falls is apparent from plots shown in Appendix A where\
    \ BHF has very\nsimilar accelerometer signal values to these classes.\n2.8.3.3\n\
    Discussion\nInorder to better understand the performance of the network for the\
    \ various fall\ndetection types from Tables 44 and 45, the performance of the\
    \ network for fall severity\nhas been illustrated in Figure 26. It can be observed\
    \ that soft falls are better detected\ncompared to hard falls with UARs for the\
    \ individual ADL and fall experiment being\n79.63% for hard falls and that for\
    \ soft falls is 89.58%. For the one ADL and individual\nfall experiment, the difference\
    \ is less stark, being 85.18% for hard falls and 88.88%\nfor soft falls.\n60\n\
    65\n70\n75\n80\n85\n90\n95\n100\nInd ADLs/Ind Falls\nOne ADL/Ind Falls\nPerformance\
    \ for Fall Severity\nHard Falls\nSoft Falls\nFigure 26. Network performance for\
    \ different fall directions.\nFigure 27 illustrates the performance of the network\
    \ in fall detection for the three\ndirections considered for both experiments,\
    \ regardless of severity. It can be observed\nthat falls in backward and lateral\
    \ directions are determined with equal effectiveness,\nan average recall score\
    \ (UAR) of 85.42% was achieved for both cases where as for\nthe forward direction,\
    \ the UAR was 82.99%. As can be seen, there is a only a small\ndifference (3.43%)\
    \ between the achieved UARs.\n117\n60\n65\n70\n75\n80\n85\n90\n95\n100\nOne ADL/Ind\
    \ Falls\nInd ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\n\
    Backward Falls\nLateral Falls\nFigure 27. Network performance for different fall\
    \ directions.\nIn order to further test the performance of the developed CNN-XGBoost\
    \ scheme,\ntests were performed with the CNN network architecture presented in\
    \ [430].\nWe\nchoose the technique of [430] as the authors provide very good results\
    \ for fall detection\nusing the SisFall dataset using a deep learning model. The\
    \ results for the performance\nof the considered technique in comparison to the\
    \ method presented in this experiment\nis shown Table 46 and 47. The Recall scores\
    \ have been presented. It can be observed\nthat the proposed method outperforms\
    \ the work of Casilari et. al. for all classes\nexcept LHF. Moreover, there is\
    \ a large difference in the average recall achieved.\nTable 46. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n66.67\n91.67\nBSF\n64.58\n95.83\n\
    FHF\n95.83\n97.22\nFSF\n75\n81.25\nLHF\n77.78\n66.67\nLSF\n87.5\n89.58\nADL\n\
    99.31\n100\nAverage\n80.95\n88.89\nThe mean recall score achieved is 85.69% for\
    \ [430] for the individual ADLs vs\nIndividual Fall experiment compared to more\
    \ than 88% for the proposed scheme.\nIt can be observed from Table 47 that the\
    \ proposed CNN-XGBoost combination\noutperforms the work of Casilari et al. [430]\
    \ in seven out of the ten output classes\nfor recall while achieving a similar\
    \ performance for the classes of BHF, LHFand S.\n118\nTable 47. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n75.00\n75.00\nBSF\n87.50\n95.83\n\
    FHF\n80.56\n88.89\nFSF\n72.92\n77.08\nLHF\n75.00\n75.00\nLSF\n93.75\n95.83\nJ\n\
    96.30\n96.71\nS\n96.77\n96.77\nSB\n81.08\n83.78\nW\n95.04\n97.63\nAverage\n85.39\n\
    88.25\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-attention\n\
    network\nThis section presents a discussion on fall detection with severity and\
    \ direction along\nwith ADL recognition on the SisFall and the K-Fall datasets.\
    \ Two experiments were\nconducted in this regard, one with all ADLs as one class\
    \ versus the six fall types\nconsidered and another for individual ADLs and falls.\n\
    2.8.4.1\nData Labeling\nSince this experiment also uses the K-Fall dataset, the\
    \ labeling scheme for K-Fall\nis shown in Table 48. The labeling for the SisFall\
    \ dataset was retained the same\nfor the individual ADL and fall experiment.\n\
    However, for the one ADL and fall\nexperiment, all activities were labeled as\
    \ a single class ADL.\n2.8.4.2\nMethodology\nThe methodology consists of the two\
    \ steps of data preprocessing and classifi-\ncation. Data preprocessing has been\
    \ performed in the same manner as in section\n2.8.3.1. Therefore, this section\
    \ focuses on the ConvLSTM network used. The net-\nwork used in this work is illustrated\
    \ in Figure 28. It consists of four layers, the first\nof these is the ConvLSTM\
    \ layer. The ConvLSTM layer combines the properties of\nsequential learning associated\
    \ with LSTMs with the feature extraction capabilities\nof convolutional neural\
    \ networks and they have found successful use in the human\nactivity recognition/fall\
    \ detection domain [491, 492]. By replacing the simple matrix\nmultiplication\
    \ within LSTM cells by a convolutional operation, the ConvLSTM can\ncapture spatio-temporal\
    \ dependencies as opposed to the temporal only qualities of-\nfered by LSTMs.\
    \ Such spatial information is useful for the problem of fall detection\nwhere\
    \ not only the sequence contained within the recordings is important but also\n\
    the spatial information is also important to determine things like direction for\
    \ e.g.\nThe ConvLSTM layer is followed by a Self-Attention layer to incorporate\
    \ attention\n119\nTable 48. Labeling for K-Fall Dataset\nActivity Code\nAssigned\
    \ Label\nFall code\nAssigned Label\nD01\nADL/-\nF01\nFSF\nD02\nADL/SB\nF02\nBSF\n\
    D03\nADL/SB\nF03\nLSF\nD04\nADL/-\nF04\nFSF\nD05\nADL/S\nF05\nLSF\nD06\nADL/W\n\
    F06\nFSF\nD07\nADL/W\nF07\nLSF\nD08\nADL/J\nF08\nBSF\nD09\nADL/J\nF09\nFSF\nD10\n\
    ADL/-\nF10\nLSF\nD11\nADL/-\nF11\nFHF\nD12\nADL/-\nF12\nFHF\nD13\nADL/S\nF13\n\
    FHF\nD14\nADL/S\nF14\nLHF\nD15\nADL/S\nF15\nBHF\nD16\nADL/S\n-\n-\nD17\n-/ADL\n\
    -\n-\nD18\nADL/S\n-\n-\nD19\nADL/S\n-\n-\nD20\nADL/W\n-\n-\nD21\nADL/-\n-\n-\n\
    mechanism. Through the attention layer, important parts in the signal which can\n\
    help to determine the output class correctly are identified. For the current work,\
    \ a\nglobal attention mechanism which looks at the complete sequence is used.\
    \ After the\nattention layer follow two fully connected layers, one with a relu\
    \ activation function\nand the other with a softmax function to determine the\
    \ output class.\n2.8.4.3\nResults\nTwo experiments were performed in total on\
    \ the two datasets considered. The\nexperiments consisted of a fall vs ADL scenario\
    \ and another scenario in which ADLs\nwere conisdered individually to provide\
    \ a combined fall and ADL recognition system.\nThe results for each of the experiments\
    \ have been presented in this section. The\nnetwork was trained using an Adam\
    \ optimizer for 40 epochs with early stopping\nbeing used to retain the best performing\
    \ model before running it on the test set.\nAlso, during training, the network\
    \ was tasked to maximize the average recall of all\nclasses combined to ensure\
    \ that positive samples of each class were prioritized for\ncorrect detection,\
    \ however, in addition to recall, the precision, specificity and F1-\nscore have\
    \ also been reported in the results presented for the sake of completeness.\n\
    One ADL vs Individual Falls\nIn this experiment, all the ADLs were considered\
    \ a single class while the categories for\nfalls were retained as per individual\
    \ directions and severity levels. Table 49 presents\nthe results for this experiment\
    \ with the SisFall dataset for which an average recall of\n90.02% was achieved.\
    \ It can be observed that the network is able to determine ADLs\nvery well achieving\
    \ a recall of 99.93%. Considering falls, the class LHF is the worst\n120\nConvLSTM\n\
    16 filters (3x1)\nSelf Attention\nFully connected\n(Relu)\nPeak SMV Detection\n\
    Windowing\nFully connected\n(Softmax) Classifier\nData Augmentation\nData Processing\n\
    IMU Recording (Falls and Activities) \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n\
    (W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nOutput Class \n(ADL, FHF, FSF, BHF,\
    \ BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFeature Extraction\n\
    Classification\nFigure 28. ConvLSTM-attention Network.\n121\nperforming fall which\
    \ has been detected with a recall of only 68.42%. It was observed\nthat falls\
    \ from LHF were confused with forward falls and LSF. The best performing\nfall\
    \ is FHF with a recall of 98.28%.\nTable 49. Results for SisFall: One ADL vs.\
    \ Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\nRecall (%)\n\
    Specificity\n(%)\nF1-score\n(%)\nBHF\n100\n94.74\n100\n97.30\nBSF\n94.74\n94.74\n\
    99.88\n94.74\nFHF\n83.82\n98.28\n99.36\n90.48\nFSF\n94.20\n84.42\n99.76\n89.04\n\
    LHF\n81.25\n68.42\n99.83\n74.29\nLSF\n89.61\n89.61\n99.53\n89.61\nADL\n99.8\n\
    99.93\n98.96\n99.87\nAverage\n91.92\n90.02\n99.62\n90.76\nTable 50. Results for\
    \ K-Fall: One ADL vs. Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n92.00\n100\n95.83\nBSF\n\
    98.00\n96.08\n99.90\n97.03\nFHF\n82.93\n91.89\n98.63\n87.18\nFSF\n93.41\n85.00\n\
    99.4\n89.01\nLHF\n78.57\n88.00\n99.44\n83.02\nLSF\n96.97\n96.00\n99.70\n96.48\n\
    ADL\n99.45\n99.72\n98.93\n99.59\nAverage\n92.76\n92.67\n99.43\n92.59\nTable 50\
    \ presents the results for the K-Fall dataset when all ADLs are combined in\n\
    to one class. It can be observed that like the case for the SisFall dataset, the\
    \ ADLs in\nthis case have been detected very well, resulting in a recall of 99.72%.\
    \ Considering the\nperformance of falls, the best performing fall classes were\
    \ BSF and LSF for which a\nrecall of 96% was achieved. The worst performing fall\
    \ class in this case was FSF with\na recall of 85%.\nIndividual ADL vs Individual\
    \ Falls\nIn this experiment, individual ADLs were considered as separate classes\
    \ in addition\nto the six fall classes mentioned before. This exercise was carried\
    \ out to assess the\ndesigned systems performance as a combined ADL recognition\
    \ and fall detection\nsystem. The result for the SisFall dataset are presented\
    \ in Table 51. The average\nrecall achieved for this experiment using the SisFall\
    \ dataset is 91.49%.\nConsidering fall performance, it can be observed from Table\
    \ 51 that the class\nBSF is the best recognized fall, having a recall of 94.74%\
    \ with the fall LHF being\nthe worst recognized one with a recall of 73.68%. The\
    \ best recognized ADL is the\nclass W with a near perfect recall of 99.06%. The\
    \ worst recognized ADL is S with\n96.98% which is not a large difference compared\
    \ to the performance for falls. Table\n?? presents the results of the network\
    \ for the K-Fall dataset for this experiment. It\n122\nTable 51. Results for SisFall:\
    \ Individual ADLs vs. Individual Falls\nActivity/\nFall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n89.47\n89.47\n99.88\n89.47\n\
    BSF\n100\n94.74\n100\n97.30\nFHF\n86.89\n92.98\n99.51\n89.83\nFSF\n94.37\n87.01\n\
    99.75\n90.54\nLHF\n70.00\n73.68\n99.64\n71.79\nLSF\n88.89\n93.51\n99.44\n91.14\n\
    J\n98.44\n97.42\n99.53\n97.93\nS\n97.97\n96.98\n99.73\n97.47\nSB\n94.74\n90.00\n\
    99.81\n92.31\nW\n98.00\n99.06\n98.39\n98.53\nAverage\n91.88\n91.49\n99.57\n91.63\n\
    can be observed that in this case, the best performance for the fall categories\
    \ is both\nfor BSF and LSF\neach of which have a recall of 98%. The worst performing\
    \ fall is\nthe class BHF , it was observed that samples from this class were confused\
    \ with the\nclass BSF. For the case of ADLs, the best performing ADL for the K-Fall\
    \ dataset is\nSB with a recall of 97.5% with the worst being the class J.\n2.8.4.4\n\
    Discussion\nWhen comparing the performance of ADLs and falls overall for both\
    \ experiments,\nit can be observed that ADL recognition performance was much better\
    \ than the\nperformance for fall detection. For both experiments conducted, when\
    \ comparing the\nperformance of the network across datasets, the network performs\
    \ better on the K-Fall\ndataset compared to the SisFall dataset. This could be\
    \ attributed to the difference\nin the volunteer make up of the participants as\
    \ K-Fall mostly had young people\nvolunteering to perform falls whereas SisFall\
    \ contains a wide variety of age groups\nand gender make up in its volunteers.\
    \ To gather further insights in to the performance\nof the network in terms of\
    \ fall detection for the two experiments conducted across both\ndatasets, Figure\
    \ 29 illustrates the networks performance for falls for both datasets\nand experiments.\
    \ An average recall of 88.37% was achieved for the SisFall dataset\nand 91.49%\
    \ for the K-Fall dataset for the one ADL vs individual falls experiment\nand 88.57%\
    \ and 91.33% respectively for the individual ADL and individual falls\nexperiment.\
    \ It can be observed that the classes LSF, FHF and BSF were recognized\nvery well,\
    \ each achieving a recall of nearly 90% or higher. The class FHF was also\ndetected\
    \ sufficiently well, achieving an average recall of more than 86% across all\n\
    experiments. For SisFall, the least performing class was LHF and for K-Fall it\
    \ was\nBHF.\nFigure 30 investigates the performance of the network when considering\
    \ different\nfall severity levels for all the experiments. It can be observed\
    \ that soft falls have\nbeen consistently better recognized compared to hard falls.\
    \ This difference is largest\n(6%) when individual ADLs are considered as separate\
    \ classes for both datasets. For\nthe experiment where ADLs are grouped in to\
    \ a single class, there is only a slight\n123\n60\n65\n70\n75\n80\n85\n90\n95\n\
    100\nBHF\nBSF\nFHF\nFSF\nLHF\nLSF\nFall Results: Both Experiments\nSisFall One\
    \ ADL/Individual Falls\nSisFall Individual ADLs/Individual Falls\nKfall One ADL/Individual\
    \ Falls\nKfall Individual ADLs/Individual Falls\nFigure 29. Fall detection performance\
    \ for both experiments.\ndifference observed between the fall severity levels\
    \ for the K-Fall dataset whereas for\nSisFall, there is still a significant difference\
    \ of more than 5% between the detection\nof soft and hard falls.\nSisFall\nKfall\n\
    60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall One ADL/Ind Falls\nKFall One ADL/Ind\
    \ Falls\nSisFall Ind ADLs/Ind Falls\nKFall Ind ADLs/Ind Falls\nPerformance for\
    \ Fall Severity\nHard Falls\nSoft Falls\nFigure 30. Fall severity performance.\n\
    In Figure 31, the results from the experiments for fall direction have been illus-\n\
    trated. In this case, the performance of the network for tests using SisFall yield\
    \ best\nresults for falls in the backward direction with falls in the lateral\
    \ directions being\nrecognized the worst. In contrast, for the K-Fall dataset,\
    \ falls in the lateral direc-\n124\n60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall\
    \ One ADL/Ind Falls\nKfall One ADL/Ind Falls\nSisFall Ind ADLs/Ind Falls\nKfall\
    \ Ind ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\nBackward\
    \ Falls\nLateral Falls\nFigure 31. Fall direction performance.\ntion have been\
    \ detected quite well, followed by backfward falls and forward falls. In\norder\
    \ to gauge the performance of the network, the work of We et al. [459] was\nused\
    \ as a comparison as they also utilize sequential modeling in their work and cater\n\
    to non-binary fall detection as well. Table 53 and 54 presents the results for\
    \ both\nexperiments with the cases where the work of Wu et al. outperforms the\
    \ presented\nmethod highlighted. It can be observed that the presented method\
    \ outperforms the\nmethod of [459] sufficiently well. Another thing to note is\
    \ that as observed with the\nresults presented, a similar pattern of variation\
    \ was observed for both data sets with\nrespect to the two experiments in that\
    \ a degradation was observed for experiments\nfor K-Fall whereas an improvement\
    \ was observed for SisFall.\nTable 53. Comparison with State of the art (Individual\
    \ ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall (%)\n[]\nWork\
    \ of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n63.16\n94.74\n92.00\n\
    92.00\nBSF\n86.84\n94.74\n96.08\n96.08\nFHF\n77.59\n98.28\n83.78\n91.89\nFSF\n\
    76.62\n84.42\n90.00\n85.00\nLHF\n68.42\n68.42\n64.00\n88.00\nLSF\n77.92\n89.61\n\
    93.00\n96.00\nADL\n98.78\n99.93\n99.58\n99.72\nAverage\n78.48\n90.02\n88.35\n\
    92.67\n3\nConclusion\nFall detection is an important task in the field of ambient\
    \ assisted living. Towards this\nend, four experiments were performed in this\
    \ chapter. In the first experiemt, a fall\n125\nTable 54. Comparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n58.33\n\
    89.47\n76.00\n76.00\nBSF\n87.50\n94.74\n100\n98.04\nFHF\n83.33\n92.98\n91.89\n\
    95.95\nFSF\n81.25\n87.01\n89.00\n88.00\nLHF\n41.67\n73.68\n64.00\n92.00\nLSF\n\
    81.25\n93.51\n95.00\n98.00\nJ\n98.77\n97.42\n55.45\n87.13\nS\n88.71\n96.98\n81.17\n\
    90.91\nSB\n83.78\n90.00\n87.50\n97.50\nW\n96.12\n99.06\n87.30\n95.24\nAverage\n\
    80.07\n91.48\n82.74\n91.88\nTable 55. Results for the four Experiments for the\
    \ SisFall dataset (F1-Score[%])\nActivity/Fall\nExp. 1\nExp. 2\nExp. 3 (One ADL)\n\
    Exp. 3 (Ind ADLs)\nExp. 4 (One ADL)\nExp. 4 (Ind ADLs)\nBHF\n87.27\n83.02\n95.65\n\
    85.71\n97.30\n89.47\nBSF\n95.08\n90.76\n97.87\n82.05\n94.74\n97.30\nFHF\n72.43\n\
    80.47\n90.91\n75.00\n90.48\n89.83\nFSF\n73.25\n77.18\n86.67\n95.83\n89.04\n90.54\n\
    LHF\n66.67\n67.80\n69.57\n83.15\n74.29\n71.79\nLSF\n84.65\n82.73\n89.58\n91.09\n\
    89.61\n91.14\nJ\n-\n98.27\n96.71\n-\n97.93\nS\n-\n96.20\n96.77\n-\n97.47\nSB\n\
    -\n85.71\n87.32\n-\n92.31\nW\n-\n98.46\n97.42\n-\n98.53\nADL\n-\n-\n99.77\n-\n\
    99.93\n-\nOverall Average\n-\n86.06\n90.02\n89.11\n90.76\n91.63\nFall Average\n\
    79.89\n80.32\n88.38\n85.47\n89.24\n88.34\nADL Average\n-\n94.66\n99.77\n94.55\n\
    99.87\n96.56\nonly detection system that considers the direction as well as the\
    \ severity of falls was\npresented. Inertial measurement sensor data from a publicly\
    \ available dataset was\nused to carry out this task. Following a typical machine\
    \ learning pipeline, the data\nwas first preprocessed by extracting equal duration\
    \ segments from the accelerometer\nand gyroscope sensor signals based on the acceleration\
    \ magnitude. This is followed\nby the computation of various time and frequency\
    \ domain features for each of these\nsegments. The next step is feature selection\
    \ and classification which is performed by\nusing four different machine learning\
    \ algorithms popular in fall detection systems.\nFirst, a baseline performance\
    \ is established and then feature reduction is performed\naiming to maintain or\
    \ improve algorithm performance by elimination of redundant\nfeatures. It was\
    \ observed that the weighted F1-score improved slightly (by just over\n1%) for\
    \ both experiments.\nThe other three experiments considered activity of daily\
    \ living and fall detection\nsimultaneously. For the second experiment, utilizing\
    \ inertial sensor data, a hierarchi-\ncal classification framework using wavelets\
    \ and adaptive pooling was presented. To\nachieve this, inertial sensor recordings\
    \ (accelerometer and gyroscope) from the Sis-\nFall dataset were utilized and\
    \ windowed segments were extracted from each recording.\nFollowing this, a level-4\
    \ haar wavelet was used to extract wavelet coefficients from\nthese windowed segments\
    \ and then 4-2-1 1-D Spatial Pyramid pooling was used to\n126\nsummarize the output\
    \ of the wavelet feature coefficients at each approximation and\ndetail level\
    \ before the max pooled coefficients were concatenated to form the final\nfeature\
    \ vector. A hierarchical classification scheme was then used consisting of three\n\
    classification stages, one for determining individual ADLs versus a generic fall\
    \ and the\nsecond and third for fall direction and severity respectively with\
    \ both voting together\nto determine the severity and direction of a fall. Towards\
    \ this end, experiments were\nconducted to determine the most appropriate size\
    \ of the observation window as well as\nsensing modality used. It was found that\
    \ for the proposed setup, a window duration\nof 3 seconds produced the best results\
    \ while using data from both the accelerometer\nand gyroscope. In the third experiment,\
    \ Inertial Measurement Unit (accelerometer\nand gyroscope) data from the SisFall\
    \ dataset is first windowed into non-overlapping\nsegments of duration 3 seconds.\
    \ After suitable data augmentation for the minority\nclasses, the windowed segments\
    \ are passed to a Convolutional Neural Network for\nfeature extraction. The CNN\
    \ is trained to maximize the unweighted average recall\nfor the validation partition.\
    \ Once the CNN is trained, an XGBoost last stage is used\nfor classification.\
    \ Experiments conducted on the test set achieve an unweighted aver-\nage recall\
    \ of 88% for both the one ADL versus individual falls and individual ADLs\nversus\
    \ fall experiments. In comparison with other techniques used for this task, the\n\
    proposed scheme produces sufficiently better results, thereby demonstrating the\
    \ effi-\ncacy of the proposed method. Lastly, a ConvLSTM network with attention\
    \ has been\nused for detection of falls considering fall direction and severity.\
    \ Using data from the\nSisFall and the K-Fall datasets, two experiments were conducted\
    \ on inertial sensor\ndata. The first considered falls versus ADLs and the other\
    \ combined ADL recognition\nand fall detection. Results for both experiments achieved\
    \ an average recall of more\nthan 90%. The results from the cross-dataset performance\
    \ indicate to the robustness\nof the designed methodology.\nTable 55 presents\
    \ the F-1 scores for the four experiments considering fall detection\nwith direction\
    \ and severity for the SisFall dataset. For experiment 1, only the fall\ndetection\
    \ with direction and severity part has been reported. A progression can be\nobserved\
    \ in the detection of falls wherein an increase of nearly 8.5% in the average\n\
    F1-score was achieved.\n127\nCHAPTER VI\nCONCLUSION AND FUTURE WORK\n1\nConclusion\n\
    This dissertation provided a coverage of the use of Internet of Things towards\
    \ the\ndevelopment of smart communities. While doing so, the main applications\
    \ of ML/DL\nalgorithms as well as optimization algorithms were discussed and mapped.\
    \ Further-\nemore, other technological components of the IoT such as sensing,\
    \ communication,\nsecurity and privacy were also talked about. Lastly, considering\
    \ the case of smart\nhealth, specifically fall detection, experimentation and\
    \ analysis was conducted and\nthe results presented.\nIn this regard, the usage\
    \ of inertial sensor data has been very popular as they do\nnot restrict a users\
    \ movement and are also easy to deploy compared to other methods.\nFour approaches\
    \ that considered fall detection with direction and severity were pre-\nsented.\
    \ In this regard, four experiments were conducted, first was the development\n\
    of a fall only detection system whereas the other three were for a combined ADL\
    \ and\nfall system. For the other three experiments, a hierarchical and two deep\
    \ learning\nbased approaches were tested. The designed methodologies were compared\
    \ to the\nstate of the art and were found to outperform them.\n2\nContribution\n\
    The Internet of Things has spearheaded tremendous change in society by allowing\
    \ for\ncapturing measurements in different facets of our daily lives. With such\
    \ a fundamental\nimpact being made, it is pertinent that researchers commit to\
    \ analyzing the current\npenetration that IoT possesses in city operation and\
    \ also providing impetuses for\nnew and novel application development. This work\
    \ aims to address these needs by\ndiscussing the use and role of the internet\
    \ of things in smart communities.\nThe\ncontribution of the work are as follows:\n\
    1. Provide a coverage of the IoT based smart city ecosystem in terms of the tech-\n\
    nologies utilized. Discussion has been provided about the sensors, communi-\n\
    cation technologies as well as the IoT architectures that enable IoT smart city\n\
    development. Finally a review of the security and privacy issues was also dis-\n\
    cussed.\n2. Present a study of the uses of ML and DL methods for different applications\
    \ of\nsmart cities in an IoT context. To this end, the type of architecture employed\n\
    and the data source type were also covered.\n128\n3. The use of optimization algorithms\
    \ in IoT smart cities has been provided. To\nthe best of our knowledge, this is\
    \ the first comprehensive review of optimization\nalgorithms in IoT Smart Cities.\n\
    4. Considering the case of smart health, methodologies have been devised for the\n\
    novel case of fall detection with direction and severity detection. In this respect,\n\
    the performance time, frequency domain and statistical features on inertial\n\
    sensor data has been analyzed and presented.\n5. A combined activity of daily\
    \ living and fall detection framework with fall di-\nrection and severity consideration\
    \ has been discussed.\nFour approaches in\nthis regard have been presented, one\
    \ utilizing time-frequency information us-\ning wavelets along with a hierarchical\
    \ classification scheme, third a Convolu-\ntional Neural Network-eXtreme Gradient\
    \ Boost combination and the last being\na ConvLSTM has been proposed. The proposed\
    \ approaches has been shown to\noutperform the state of the art in the field.\n\
    3\nFuture Work\nThe IoT is revolutionizing development of smart city applications.\
    \ There are several\nopportunities. Some of these are listed below:\n• IoT Systems\
    \ for Smart Cities\n– A major research area is in the security and privacy of\
    \ IoT in smart cities in\nterms of encryption techniques, authentication protocols,\
    \ data anonymiza-\ntion techniques and other methods to prevent unvalidated access\
    \ to the IoT\nnetwork. As mentioned before technologies such as blockchain could\
    \ help\nintroduce access tracking and control, secure device discovery, prevention\n\
    of spoofing, data loss while ensuring that end to end encryption is also\nused.\n\
    – Of the data transfer standards developed till now for IoT, many are not\ncompatible\
    \ with each other. Work needs to be carried out in this regard to\nenable intercommunication\
    \ of sensor nodes using different protocols while\nutilizing low power, which\
    \ is imperative for sensor nodes in the network.\n– Another area to work on, is\
    \ the development of efficient storage techniques\nand low power hardware which\
    \ can reduce operational costs. From a de-\nployment perspective, decentralized\
    \ systems have been proposed as the\nbest solutions to increase reliability of\
    \ the application. Techniques such as\nfederated learning allow for decentralized\
    \ DL system deployments.\n• AI/Combinatorial Optimization in IoT Smart Cities\n\
    – The development of data fusion techniques that can make the use of het-\nerogeneous\
    \ data sources easier, intelligent data reduction/feature selection\nmethods to\
    \ ensure that redundant or ’uninteresting’ data is not part of the\n129\nAI development\
    \ pipeline. This will help in a quicker turnaround time as\nwell as improved performance\
    \ of deployments. Current methods need to be\nused as well as new ones be researched\
    \ for making ML and DL algorithms\nmore explainable to suit the various applications\
    \ in a smart city.\n– Hybrid and novel optimization methodologies (for e.g. graywolf\
    \ optimiza-\ntion [493]) which combine characteristics of multiple heuristic schemes\n\
    could potentially outperform singular methodologies.\nThere have been\nseveral\
    \ works which combine multiple optimization techniques.\n– Reinforcement learning\
    \ (RL) has the potential to provide solutions to com-\nbinatorial optimization\
    \ problems as covered in [494]. The idea is to use\nmachine learning and reinforcement\
    \ learning to get rid of human created\nheurists which may lead to optimizations\
    \ towards local optimums. Agents\ncan be trained to search for these heuristics\
    \ to automate the process.\n• Smart Health: Fall detection\n– The addition of\
    \ additional sensor modalities apart from intertial sensor\nmeasurements might\
    \ help improve performance for the worst detected\nclasses from the experiments\
    \ conducted. Various authors have incorpo-\nrated medical or pressure sensors\
    \ in their fall detection systems.\nData\nfrom these sensors can be used together\
    \ as an input to a deep learning\nnetwork. This additional information gathered\
    \ for subjects while under-\ngoing a fall could also describe valuable health\
    \ parameters that can be used\nfor diagnosis or early detection of ailments which\
    \ might be the underlying\ncause of falls.\n– Another work opportunity in the\
    \ data science domain would be the as-\nsessment of this problem considering a\
    \ data centric approach, where, in\ncontrast to a model centric approach where\
    \ the focus is on developing the\nbest model, data centric focuses on working\
    \ with data to improve applica-\ntion performance using systematic procedures\
    \ for labeling, augmentation\netc. Such systematic procedures and qualitative\
    \ data analysis would aid\nin cross-dataset algorithm deployment as well.\n130\n\
    REFERENCES\n[1]\nWorldometers, “World population forecast - worldometers,” (2019).\n\
    [2]\nH. Ahvenniemi, A. Huovila, I. Pinto-Sepp¨a, and M. Airaksinen, “What\nare\
    \ the differences between sustainable and smart cities?” Cities 60, 234–\n245\
    \ (2017).\n[3]\nUnited Nations, “About the Sustainable Development Goals - United\
    \ Na-\ntions Sustainable Development,” .\n[4]\nP. Cardullo and R. Kitchin, “Being\
    \ a ‘citizen’ in the smart city: up and\ndown the scaffold of smart citizen participation\
    \ in dublin, ireland,” Geo-\nJournal 84, 1–13 (2019).\n[5]\nJ. Desdemoustier,\
    \ N. Crutzen, and R. Giffinger, “Municipalities’ under-\nstanding of the smart\
    \ city concept: An exploratory analysis in belgium,”\nTechnological Forecasting\
    \ and Social Change 142, 129–141 (2019).\n[6]\nM. S. Khan, M. Woo, K. Nam, and\
    \ P. K. Chathoth, “Smart city and\nsmart tourism: A case of dubai,” Sustainability\
    \ (Switzerland) 9 (2017).\n[7]\nD. Wu, N. Jiang, W. Du, K. Tang, and X. Cao, “Particle\
    \ swarm optimiza-\ntion with moving particles on scale-free networks,” IEEE Transactions\
    \ on\nNetwork Science and Engineering 7, 497–506 (2018).\n[8]\nM. L. Finlayson\
    \ and E. W. Peterson, “Falls, aging, and disability,” Phys-\nical Medicine and\
    \ Rehabilitation Clinics 21, 357–373 (2010).\n[9]\nB. M. Kistler, J. Khubchandani,\
    \ G. Jakubowicz, K. Wilund, and J. Sos-\nnoff, “Peer reviewed: Falls and fall-related\
    \ injuries among us adults aged\n65 or older with chronic kidney disease,” Preventing\
    \ chronic disease 15\n(2018).\n[10]\nL. Bolton, “Preventing fall injury.” Wounds:\
    \ a compendium of clinical\nresearch and practice 31, 269–271 (2019).\n[11]\n\
    Y. K. Haddad, G. Bergen, and C. Florence, “Estimating the economic\nburden related\
    \ to older adult falls by state,” Journal of public health\nmanagement and practice:\
    \ JPHMP 25, E17 (2019).\n[12]\nC. S. Florence, G. Bergen, A. Atherly, E. Burns,\
    \ J. Stevens, and C. Drake,\n“Medical costs of fatal and nonfatal falls in older\
    \ adults,” Journal of the\nAmerican Geriatrics Society 66, 693–698 (2018).\n[13]\n\
    A. Bourke, J. O’brien, and G. Lyons, “Evaluation of a threshold-based tri-\naxial\
    \ accelerometer fall detection algorithm,” Gait & posture 26, 194–199\n(2007).\n\
    131\n[14]\nR. G. Hollands, “Will the real smart city please stand up? intelligent,\n\
    progressive or entrepreneurial?” City 12, 303–320 (2008).\n[15]\nL. G. Anthopoulos\
    \ and C. G. Reddick, “Understanding electronic gov-\nernment research and smart\
    \ city: A framework and empirical evidence,”\nInformation Polity 21, 99–117 (2016).\n\
    [16]\nZ. Khan, A. Anjum, K. Soomro, and M. A. Tahir, “Towards cloud based\nbig\
    \ data analytics for smart future cities,” Journal of Cloud Computing\n4 (2015).\n\
    [17]\nA. Koubaa, A. Aldawood, B. Saeed, A. Hadid, M. Ahmed, A. Saad,\nH. Alkhouja,\
    \ A. Ammar, and M. Alkanhal, “Smart palm: An iot frame-\nwork for red palm weevil\
    \ early detection,” Agronomy 10, 1–21 (2020). No\nML or dL used.\n[18]\nM. O’Grady,\
    \ D. Langton, and G. O’Hare, “Edge computing: A tractable\nmodel for smart agriculture?”\n\
    Artificial Intelligence in Agriculture 3,\n42–51 (2019).\n[19]\nI. Rojek and J.\
    \ Studzinski, “Detection and localization of water leaks in\nwater nets supported\
    \ by an ict system with artificial intelligence methods\nas away forward for smart\
    \ cities,” Sustainability (Switzerland) 11 (2019).\n[20]\nK. Pardini, J. J. Rodrigues,\
    \ S. A. Kozlov, N. Kumar, and V. Furtado, “Iot-\nbased solid waste management\
    \ solutions: A survey,” Journal of Sensor and\nActuator Networks 8 (2019).\n[21]\n\
    J. Dutta, C. Chowdhury, S. Roy, A. I. Middya, and F. Gazi, “Towards\nsmart city:\
    \ Sensing air quality in city based on opportunistic crowd-\nsensing,” ACM International\
    \ Conference Proceeding Series (2017).\n[22]\nF. Al-Turjman and A. Malekloo, “Smart\
    \ parking in iot-enabled cities: A\nsurvey,” Sustainable Cities and Society 49\
    \ (2019).\n[23]\nE. Shirazi and S. Jadid, “Autonomous self-healing in smart distribution\n\
    grids using multi agent systems,” IEEE Transactions on Industrial Infor-\nmatics\
    \ 3203, 1–11 (2018).\n[24]\nR. V. Andre˜ao, M. Athayde, J. Boudy, P. Aguilar,\
    \ I. de Araujo, and\nR. Andrade, “Raspcare: A telemedicine platform for the treatment\
    \ and\nmonitoring of patients with chronic diseases,” in “Assistive Technologies\n\
    in Smart Cities,” (IntechOpen London, UK, 2018).\n[25]\nP. A. Keane and E. J.\
    \ Topol, “With an eye to ai and autonomous diag-\nnosis,” npj Digital Medicine\
    \ 1, 10–12 (2018).\n[26]\nG. Trencher and A. Karvonen, “Stretching “smart”: advancing\
    \ health\nand well-being through the smart city agenda,” Local Environment 24,\n\
    610–627 (2019).\n132\n[27]\nB. R. Haverkort and A. Zimmermann, “Smart industry:\
    \ How ict will\nchange the game!” IEEE Internet Computing 21, 8–10 (2017).\n[28]\n\
    F. Tao, J. Cheng, and Q. Qi, “Iihub: An industrial internet-of-things\nhub toward\
    \ smart manufacturing based on cyber-physical system,” IEEE\nTransactions on Industrial\
    \ Informatics 14, 2271–2280 (2018).\n[29]\nP. Trakadas, P. Simoens, P. Gkonis,\
    \ L. Sarakis, A. Angelopoulos, A. P.\nRamallo-Gonz´alez, A. Skarmeta, C. Trochoutsos,\
    \ D. Calvo, T. Pariente,\nK. Chintamani, I. Fernandez, A. A. Irigaray, J. X. Parreira,\
    \ P. Petrali,\nN. Leligou, and P. Karkazis, “An artificial intelligence-based\
    \ collaboration\napproach in industrial iot manufacturing: Key concepts, architectural\n\
    extensions and potential applications,” Sensors (Switzerland) 20, 1–20\n(2020).\
    \ Ni as this is about architecture of AI in to Smart industry.\n[30]\nJ. Wan,\
    \ J. Yang, Z. Wang, and Q. Hua, “Artificial intelligence for cloud-\nassisted\
    \ smart factory,” IEEE Access 6, 55419–55430 (2018).\n[31]\nY. Huang, Z. Dang,\
    \ Y. Choi, J. Andrade, and A. Bar-ilan, “High-precision\nsmart system on accelerometers\
    \ and inclinometers for structural health\nmonitoring: development and applications,”\
    \ in “2018 12th France-Japan\nand 10th Europe-Asia Congress on Mechatronics,”\
    \ (IEEE, 2018), pp. 52–\n57.\n[32]\nS. G. Farag, “Application of smart structural\
    \ system for smart sustainable\ncities,” in “2019 4th MEC International Conference\
    \ on Big Data and\nSmart City (ICBDSC),” (2019), pp. 1–5.\n[33]\nY. Wang, S. Ram,\
    \ F. Currim, E. Dantas, and L. A. Sab´oia, “A big data\napproach for smart transportation\
    \ management on bus network,” IEEE\n2nd International Smart Cities Conference:\
    \ Improving the Citizens Qual-\nity of Life, ISC2 2016 - Proceedings pp. 0–5 (2016).\n\
    [34]\nA. Lele, “Internet of things (iot),” Smart Innovation, Systems and Tech-\n\
    nologies 132, 187–195 (2019).\n[35]\nP. Mell and T. Grance, “The nist-national\
    \ institute of standars and\ntechnology- definition of cloud computing,” NIST\
    \ Special Publication 800-\n145 p. 7 (2011).\n[36]\nJ. B.-M. Numhauser, “Fog computing\
    \ introduction to a new cloud evolu-\ntion,” University of Alcal´a (2012).\n[37]\n\
    M. Aazam, S. Zeadally, and K. A. Harras, “Fog computing architecture,\nevaluation,\
    \ and future research directions,” IEEE Communications Mag-\nazine 56, 46–52 (2018).\n\
    [38]\nH. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A. Gupta, M. Mohanty,\nand\
    \ C. T. Lin, “Edge of things: The big picture on the integration of\nedge, iot\
    \ and the cloud in a distributed computing environment,” IEEE\nAccess 6, 1706–1717\
    \ (2017).\n133\n[39]\nA. Yousefpour, C. Fung, T. Nguyen, K. Kadiyala, F. Jalali,\
    \ A. Niakan-\nlahiji, J. Kong, and J. P. Jue, “All one needs to know about fog\
    \ computing\nand related edge computing paradigms: A complete survey,” Journal\
    \ of\nSystems Architecture 98, 289–330 (2019).\n[40]\nB. L. R. Stojkoska and K.\
    \ V. Trivodaliev, “A review of internet of things\nfor smart home: Challenges\
    \ and solutions,” Journal of Cleaner Production\n140, 1454–1464 (2017). The authors\
    \ perform a literature reiew of the\narchitectures available for IoT in the Smart\
    \ home. After doing so, they\nprovide an architecture of their own which has been\
    \ derived from the other\narchitectures discussed. ¡br/¿¡br/¿*They provide a good\
    \ description of the\ntypes of appliances.\n[41]\nA. Saini and A. Malik, “Routing\
    \ in internet of things: A survey,” Com-\nmunication and Computing Systems - Proceedings\
    \ of the International\nConference on Communication and Computing Systems, ICCCS\
    \ 2016 I,\n855–860 (2017).\n[42]\nE. Casilari, J. A. Santoyo-Ram´on, and J. M.\
    \ Cano-Garc´ıa, “On the hetero-\ngeneity of existing repositories of movements\
    \ intended for the evaluation\nof fall detection systems,” Journal of Healthcare\
    \ Engineering 2020 (2020).\nThe authors in EC20 analyse various datasets which\
    \ contain accelerom-\neter signal measurements for people performing fall activities.\
    \ Within\nthis:¡br/¿¡br/¿Table 1 lists the datasets considered¡br/¿Table 2 illustrates\n\
    the characteristics of the collected data (duration etc) and the partici-\npants¡br/¿Table\
    \ 3 discusses the sampling rate and other properties of the\ndata ¡br/¿¡br/¿The\
    \ analysis involves extracting sliding time windows of\n0.5 seconds from the signals\
    \ and calculate the window with the maximum\ndifference of acceleration as described\
    \ in ref [60] to determine the win-\ndow where the fall has taken place. Once\
    \ this is done, they calculate 12\nstatistical features from the data.\n[43]\n\
    M. Rahnemoonfar and C. Sheppard, “Deep count : Fruit counting based\non deep simulated\
    \ learning,” Sensors 17, 1–12 (2017).\n[44]\nD. Thakker, B. K. Mishra, A. Abdullatif,\
    \ and S. Mazumdar, “Explainable\nartificial intelligence for developing smart\
    \ cities solutions,” Smart Cities\n3, 1353–1382 (2020).\n[45]\nA. Rahman, M. S.\
    \ Hossain, N. A. Alrajeh, and N. Guizani, “B5g and\nexplainable deep learning\
    \ assisted healthcare vertical at the edge : Covid-\n19 perspective,” IEEE Network\
    \ 34, 98–105 (2020).\n[46]\nM. Janssen, S. Luthra, S. Mangla, N. P. Rana, and\
    \ Y. K. Dwivedi, “Chal-\nlenges for adopting and implementing iot in smart cities,”\
    \ Internet Re-\nsearch ahead-of-p (2019).\n[47]\nR. S´anchez-Corcuera, A. Nu˜nez-Marcos,\
    \ J. Sesma-Solance, A. Bilbao-\nJayo, R. Mulero, U. Zulaika, G. Azkune, and A.\
    \ Almeida, “Smart cities\n134\nsurvey: Technologies, application domains and challenges\
    \ for the cities\nof the future,” International Journal of Distributed Sensor\
    \ Networks 15\n(2019).\n[48]\nB. N. Silva, M. Khan, and K. Han, “Towards sustainable\
    \ smart cities: A\nreview of trends, architectures, components, and open challenges\
    \ in smart\ncities,” Sustainable Cities and Society 38, 697–713 (2018).\n[49]\n\
    W. Ejaz and A. Anpalagan, “Internet of things for smart cities: overview\nand\
    \ key challenges,” Internet of Things for Smart Cities pp. 1–15 (2019).\n[50]\n\
    G. Marques, N. Garcia, and N. Pombo, “A survey on iot: architectures,\nelements,\
    \ applications, qos, platforms and security concepts,” in “Ad-\nvances in Mobile\
    \ cloud computing and big data in the 5G era,” (Springer,\n2017), pp. 115–130.\n\
    [51]\nK. Zhang, J. Ni, K. Yang, X. Liang, J. Ren, and X. S. Shen, “Security\n\
    and privacy in smart city applications: Challenges and solutions,” IEEE\nCommunications\
    \ Magazine 55, 122–129 (2017).\n[52]\nY. Mehmood, F. Ahmad, I. Yaqoob, A. Adnane,\
    \ M. Imran, and\nS. Guizani, “Internet-of-things-based smart cities: Recent advances\
    \ and\nchallenges,” IEEE Communications Magazine 55, 16–24 (2017).\n[53]\nW. Rong,\
    \ Z. Xiong, D. Cooper, C. Li, and H. Sheng, “Smart city archi-\ntecture: A technology\
    \ guide for implementation and design challenges,”\nChina Communications 11, 56–69\
    \ (2014).\n[54]\nE. Ahmed, I. Yaqoob, A. Gani, M. Imran, and M. Guizani, “Internet-of-\n\
    things-based smart environments: State of the art, taxonomy, and open\nresearch\
    \ challenges,” IEEE Wireless Communications 23, 10–16 (2016).\n[55]\nS. Chen,\
    \ H. Xu, D. Liu, B. Hu, and H. Wang, “A vision of iot: Ap-\nplications, challenges,\
    \ and opportunities with china perspective,” IEEE\nInternet of Things Journal\
    \ 1, 349–359 (2014).\n[56]\nB. Ahlgren, M. Hidell, and E. C. Ngai, “Internet of\
    \ things for smart\ncities: Interoperability and open data,” IEEE Internet Computing\
    \ 20,\n52–56 (2016).\n[57]\nI. Lee and K. Lee, “The internet of things (iot):\
    \ Applications, investments,\nand challenges for enterprises,” Business Horizons\
    \ 58, 431–440 (2015).\n[58]\nC. M. Morais, D. Sadok, and J. Kelner, “An iot sensor\
    \ and scenario\nsurvey for data researchers,” Journal of the Brazilian Computer\
    \ Society\n25 (2019).\n[59]\nA. Sharma and M. Sinha, “A differential evolution-based\
    \ routing algo-\nrithm for multi-path environment in mobile ad hoc network,” Interna-\n\
    tional Journal of Hybrid Intelligence 1, 23–40 (2019).\n135\n[60]\nG. P. Hancke,\
    \ B. de Carvalho de Silva, and G. P. Hancke, The role of\nadvanced sensing in\
    \ smart cities, vol. 13 (Multidisciplinary Digital Pub-\nlishing Institute, 2013).\n\
    [61]\nM. Penza, D. Suriano, M. G. Villani, L. Spinelle, and M. Gerboles, “To-\n\
    wards air quality indices in smart cities by calibrated low-cost sensors\napplied\
    \ to networks,” Proceedings of IEEE Sensors 2014-Decem, 2012–\n2017 (2014).\n\
    [62]\nF. Folianto, Y. S. Low, and W. L. Yeow, “Smartbin: Smart waste man-\nagement\
    \ system,” 2015 IEEE 10th International Conference on Intelligent\nSensors, Sensor\
    \ Networks and Information Processing, ISSNIP 2015 pp.\n1–2 (2015).\n[63]\nG.\
    \ Bedi, G. K. Venayagamoorthy, R. Singh, R. R. Brooks, and K. C.\nWang, “Review\
    \ of internet of things (iot) in electric power and energy\nsystems,” IEEE Internet\
    \ of Things Journal 5, 847–870 (2018).\n[64]\nE. Y. Song, G. J. Fitzpatrick, and\
    \ K. B. Lee, “Smart sensors and standard-\nbased interoperability in smart grids,”\
    \ IEEE Sensors Journal 17, 7723–\n7730 (2017).\n[65]\nA. A. Abdellatif, A. Mohamed,\
    \ C. F. Chiasserini, M. Tlili, and A. Erbad,\n“Edge computing for smart health:\
    \ Context-aware approaches, opportu-\nnities, and challenges,” IEEE Network 33,\
    \ 196–203 (2019).\n[66]\nK. Fan, S. Zhu, K. Zhang, H. Li, and Y. Yang, “A lightweight\
    \ authen-\ntication scheme for cloud-based rfid healthcare systems,” IEEE Network\n\
    33, 44–49 (2019).\n[67]\nA. Prati, C. Shan, and K. I. Wang, “Sensors, vision and\
    \ networks: From\nvideo surveillance to activity recognition and health monitoring,”\
    \ Journal\nof Ambient Intelligence and Smart Environments 11, 5–22 (2019).\n[68]\n\
    D. Ding, R. A. Cooper, P. F. Pasquina, and L. Fici-Pasquina, “Sensor\ntechnology\
    \ for smart homes,” Maturitas 69, 131–136 (2011).\n[69]\nB. Jan, H. Farman, M.\
    \ Khan, M. Talha, and I. U. Din, “Designing a smart\ntransportation system: An\
    \ internet of things and big data approach,”\nIEEE Wireless Communications 26,\
    \ 73–79 (2019).\n[70]\nJ. Guerrero-Ib´a˜nez, S. Zeadally, and J. Contreras-Castillo,\
    \ “Sensor tech-\nnologies for intelligent transportation systems,” Sensors (Switzerland)\
    \ 18,\n1–24 (2018).\n[71]\nA. Gharaibeh, M. A. Salahuddin, S. J. Hussini, A. Khreishah,\
    \ I. Khalil,\nM. Guizani, and A. Al-Fuqaha, “Smart cities: A survey on data manage-\n\
    ment, security, and enabling technologies,” IEEE Communications Sur-\nveys and\
    \ Tutorials 19, 2456–2501 (2017).\n136\n[72]\nS. Talari, M. Shafie-Khah, P. Siano,\
    \ V. Loia, A. Tommasetti, and J. P.\nCatal˜ao, “A review of smart cities based\
    \ on the internet of things con-\ncept,” Energies 10, 1–23 (2017).\n[73]\nD. M.\
    \ Park, S. K. Kim, and Y. S. Seo, “S-mote: Smart home framework\nfor common household\
    \ appliances in iot network,” Journal of Information\nProcessing Systems 15, 449–456\
    \ (2019).\n[74]\nI. Yaqoob, E. Ahmed, I. A. T. Hashem, A. I. A. Ahmed, A. Gani,\
    \ M. Im-\nran, and M. Guizani, “Internet of things architecture: Recent advances,\n\
    taxonomy, requirements, and open challenges,” IEEE wireless communi-\ncations\
    \ 24, 10–16 (2017).\n[75]\nP. Sakhardande, S. Hanagal, and S. Kulkarni, “Design\
    \ of disaster man-\nagement system using iot based interconnected network with\
    \ smart city\nmonitoring,” 2016 International Conference on Internet of Things\
    \ and\nApplications, IOTA 2016 pp. 185–190 (2016).\n[76]\nL. Kang, S. Poslad,\
    \ W. Wang, X. Li, Y. Zhang, and C. Wang, “A public\ntransport bus as a flexible\
    \ mobile smart environment sensing platform for\niot,” Proceedings - 12th International\
    \ Conference on Intelligent Environ-\nments, IE 2016 pp. 1–8 (2016).\n[77]\nT.\
    \ Adiono, M. Y. Fathany, R. V. W. Putra, K. Afifah, M. H. Santri-\naji, B. L.\
    \ Lawu, and S. Fuada, “Live demonstration: Minds - meshed\nand internet networked\
    \ devices system for smart home: Track selection:\nEmbedded systems,” 2016 IEEE\
    \ Asia Pacific Conference on Circuits and\nSystems, APCCAS 2016 pp. 736–737 (2017).\n\
    [78]\nA. Ghosh and N. Chakraborty, “Design of smart grid in an university\ncampus\
    \ using zigbee mesh networks,” 1st IEEE International Conference\non Power Electronics,\
    \ Intelligent Control and Energy Systems, ICPEICES\n2016 pp. 1–6 (2017).\n[79]\n\
    Y. Yan, Y. Qian, and H. Sharif, “A secure data aggregation and dispatch\nscheme\
    \ for home area networks in smart grid,” GLOBECOM - IEEE\nGlobal Telecommunications\
    \ Conference pp. 1–6 (2011).\n[80]\nU. Raza, P. Kulkarni, and M. Sooriyabandara,\
    \ “Low power wide area\nnetworks: An overview,” IEEE Communications Surveys and\
    \ Tutorials\n19, 855–873 (2017).\n[81]\nM. Kuzlu and M. Pipattanasomporn, “Assessment\
    \ of communication\ntechnologies and network requirements for different smart\
    \ grid applica-\ntions,” 2013 IEEE PES Innovative Smart Grid Technologies Conference,\n\
    ISGT 2013 pp. 1–6 (2013).\n[82]\nS. Al-Sarawi, M. Anbar, K. Alieyan, and M. Alzubaidi,\
    \ “Internet of things\n(iot) communication protocols: Review,” ICIT 2017 - 8th\
    \ International\nConference on Information Technology, Proceedings pp. 685–690\
    \ (2017).\n137\n[83]\nK. Mekki, E. Bajic, F. Chaxel, and F. Meyer, “A comparative\
    \ study of\nlpwan technologies for large-scale iot deployment,” ICT Express 5,\
    \ 1–7\n(2019).\n[84]\nS. S. I. Samuel, “A review of connectivity challenges in\
    \ iot-smart home,”\n2016 3rd MEC International Conference on Big Data and Smart\
    \ City,\nICBDSC 2016 pp. 364–367 (2016).\n[85]\nP. Kuppusamy, S. Muthuraj, and\
    \ S. Gopinath, “Survey and challenges\nof li-fi with comparison of wi-fi,” Proceedings\
    \ of the 2016 IEEE Inter-\nnational Conference on Wireless Communications, Signal\
    \ Processing and\nNetworking, WiSPNET 2016 pp. 896–899 (2016).\n[86]\nB.-S. A.\
    \ Heile and M. H. T. P. C (Futurewei) Liu, B(Huawei Technolo-\ngies) Zhang, “Wi-sun\
    \ fan overview,” (2017).\n[87]\nB. Hammi, R. Khatoun, S. Zeadally, A. Fayad, and\
    \ L. Khoukhi, “Iot\ntechnologies for smart cities,” IET Networks 7, 1–13 (2018).\n\
    [88]\nZ. A. Baig, P. Szewczyk, C. Valli, P. Rabadia, P. Hannay, M. Cherny-\nshev,\
    \ M. Johnstone, P. Kerai, A. Ibrahim, K. Sansurooah, N. Syed, and\nM. Peacock,\
    \ “Future challenges for smart cities: Cyber-security and dig-\nital forensics,”\
    \ Digital Investigation 22, 3–13 (2017).\n[89]\nT. Braun, B. C. Fung, F. Iqbal,\
    \ and B. Shah, “Security and privacy\nchallenges in smart cities,” Sustainable\
    \ Cities and Society 39, 499–507\n(2018).\n[90]\nD. Eckhoff and I. Wagner, “Privacy\
    \ in the smart city - applications, tech-\nnologies, challenges, and solutions,”\
    \ IEEE Communications Surveys and\nTutorials 20, 489–516 (2018).\n[91]\nA. S.\
    \ Elmaghraby and M. M. Losavio, “Cyber security challenges in smart\ncities: Safety,\
    \ security and privacy,” Journal of Advanced Research 5,\n491–497 (2014).\n[92]\n\
    D. POPESCUL and L. D. RADU, “Data security in smart cities: Chal-\nlenges and\
    \ solutions,” Informatica Economica 20, 29–38 (2016).\n[93]\nV. Hassija, V. Chamola,\
    \ V. Saxena, D. Jain, P. Goyal, and B. Sikdar, “A\nsurvey on iot security: Application\
    \ areas, security threats, and solution\narchitectures,” IEEE Access 7, 82721–82743\
    \ (2019).\n[94]\nD. E. Whitehead, K. Owens, D. Gammel, and J. Smith, “Ukraine\
    \ cyber-\ninduced power outage: Analysis and practical mitigation strategies,”\
    \ 70th\nAnnual Conference for Protective Relay Engineers, CPRE 2017 (2017).\n\
    [95]\nI. B. A. Ang, F. D. Salim, and M. Hamilton, “Human occupancy recogni-\n\
    tion with multivariate ambient sensors,” 2016 IEEE International Confer-\nence\
    \ on Pervasive Computing and Communication Workshops, PerCom\nWorkshops 2016 pp.\
    \ 1–6 (2016).\n138\n[96]\nL. Yang, K. Ting, and M. B. Srivastava, “Inferring occupancy\
    \ from oppor-\ntunistically available sensor data,” 2014 IEEE International Conference\n\
    on Pervasive Computing and Communications, PerCom 2014 pp. 60–68\n(2014).\n[97]\n\
    J. D. Howard and T. A. Longstaff, “A common language for computer\nsecurity incidents,”\
    \ Sandia National Laboratories (1998).\n[98]\nR. Agrawal, P. Verma, R. Sonanis,\
    \ U. Goel, A. De, S. A. Kondaveeti, and\nS. Shekhar, “Continuous security in iot\
    \ using blockchain,” ICASSP, IEEE\nInternational Conference on Acoustics, Speech\
    \ and Signal Processing -\nProceedings 2018-April, 6423–6427 (2018).\n[99]\nS.\
    \ Rizvi, J. P. Iii, A. Kurtz, and M. Rizvi, “Securing the internet of things\n\
    ( iot ): A security taxonomy for iot,” in “2018 17th IEEE International\nConference\
    \ On Trust, Security And Privacy In Computing And Commu-\nnications/ 12th IEEE\
    \ International Conference On Big Data Science And\nEngineering (TrustCom/BigDataSE),”\
    \ (IEEE, 2018), pp. 163–168.\n[100] A. Aldairi and L. Tawalbeh, “Cyber security\
    \ attacks on smart cities and\nassociated mobile technologies,” Procedia Computer\
    \ Science 109, 1086–\n1091 (2017).\n[101] M. Ali, N. Abrishamchi, A. H. Abdullah,\
    \ A. D. Cheok, and K. S.\nBielawski, “Side channel attacks on smart home systems\
    \ :\nA short\noverview,” in “IECON 2017 - 43rd Annual Conference of the IEEE In-\n\
    dustrial Electronics Society,” (2017), pp. 8144–8149.\n[102] J. Choi and Y. Kim,\
    \ “An improved lea block encryption algorithm to pre-\nvent side-channel attack\
    \ in the iot system,” in “2016 Asia-Pacific Signal\nand Information Processing\
    \ Association Annual Summit and Conference\n(APSIPA),” (Asia Pacific Signal and\
    \ Information Processing Association,\n2016), pp. 1–4.\n[103] M. A. Al-Garadi,\
    \ A. Mohamed, A. K. Al-Ali, X. Du, I. Ali, and\nM. Guizani, “A survey of machine\
    \ and deep learning methods for internet\nof things (iot) security,” IEEE Communications\
    \ Surveys & Tutorials 22,\n1646–1685 (2020).\n[104] X. Ouyang and Z. Ma, “Using\
    \ lstm networks to identify false data of smart\nterminals in the smart grid,”\
    \ Proceedings of the International Conference\non Parallel and Distributed Systems\
    \ - ICPADS 2017-Decem, 765–768\n(2018).\n[105] A. Diro and N. Chilamkurti, “Leveraging\
    \ lstm networks for attack detec-\ntion in fog-to-things communications,” IEEE\
    \ Communications Magazine\n56, 124–130 (2018).\n[106] N. Balakrishnan, A. Rajendran,\
    \ D. Pelusi, and V. Ponnusamy, “Deep\nbelief network enhanced intrusion detection\
    \ system to prevent security\nbreach in the internet of things,” Internet of Things\
    \ p. 100112 (2019).\n139\n[107] R. Khatoun and S. Zeadally, “Cybersecurity and\
    \ privacy solutions in\nsmart cities,” IEEE Communications Magazine 55, 51–59\
    \ (2017).\n[108] H. F. Atlam, A. Alenezi, M. O. Alassafi, and G. B. Wills, “Blockchain\n\
    with internet of things : Benefits , challenges , and future directions,” I.J.\n\
    Intelligent Systems and Applications 10, 40–48 (2018).\n[109] J. T. de Souza,\
    \ A. C. de Francisco, C. M. Piekarski, and G. F. do Prado,\n“Data mining and machine\
    \ learning to promote smart cities: A systematic\nreview from 2000 to 2018,” Sustainability\
    \ (Switzerland) 11 (2019).\n[110] Z. Rayan, M. Alfonse, and A. B. M. Salem, “Machine\
    \ learning approaches\nin smart health,” Procedia Computer Science 154, 361–368\
    \ (2018).\n[111] R. Varghese and S. Sharma, “Affordable smart farming using iot\
    \ and\nmachine learning,” Proceedings of the 2nd International Conference on\n\
    Intelligent Computing and Control Systems, ICICCS 2018 pp. 645–650\n(2019).\n\
    [112] S. AlZu’bi, B. Hawashin, M. Mujahed, Y. Jararweh, and B. B. Gupta,\n“An\
    \ efficient employment of internet of multimedia things in smart and\nfuture agriculture,”\
    \ Multimedia Tools and Applications 78, 29581–29605\n(2019).\n[113] K. S. P. Reddy,\
    \ Y. M. Roopa, L. N. K. Rajeev, and N. S. Nandan, “Iot\nbased smart agriculture\
    \ using machine learning,” Proceedings of the 2nd\nInternational Conference on\
    \ Inventive Research in Computing Applica-\ntions, ICIRCA 2020 pp. 130–134 (2020).\n\
    [114] A. Goap, D. Sharma, A. K. Shukla, and C. R. Krishna, “An iot based\nsmart\
    \ irrigation management system using machine learning and open\nsource technologies,”\
    \ Computers and Electronics in Agriculture 155, 41–\n49 (2018).\n[115] S. Rodr´ıguez,\
    \ T. Gualotu˜na, and C. Grilo, “A system for the monitor-\ning and predicting\
    \ of data in precision a agriculture system for the and\npredicting of wireless\
    \ data in precision in a monitoring rose greenhouse\nbased on sensor agriculture\
    \ in a rose greenhouse based on wireless sensor\nnetworks ne,” Procedia Computer\
    \ Science 121, 306–313 (2017).\n[116] N. Kitpo, Y. Kugai, M. Inoue, T. Yokemura,\
    \ and S. Satomura, “Internet\nof things for greenhouse monitoring system using\
    \ deep learning and bot\nnotification services,” 2019 IEEE International Conference\
    \ on Consumer\nElectronics, ICCE 2019 (2019).\n[117] A. K. Saha, J. Saha, R. Ray,\
    \ S. Sircar, S. Dutta, S. P. Chattopadhyay, and\nH. N. Saha, “Iot-based drone\
    \ for improvement of crop quality in agricul-\ntural field,” in “2018 IEEE 8th\
    \ Annual Computing and Communication\nWorkshop and Conference (CCWC),” (IEEE,\
    \ 2018), pp. 612–615.\n140\n[118] A. A. Araby, M. M. Abd Elhameed, N. M. Magdy,\
    \ N. Abdelaal, Y. T.\nAbd Allah, M. S. Darweesh, M. A. Fahim, H. Mostafa et al.,\
    \ “Smart iot\nmonitoring system for agriculture with predictive analysis,” in\
    \ “2019 8th\nInternational Conference on Modern Circuits and Systems Technologies\n\
    (MOCAST),” (IEEE, 2019), pp. 1–4.\n[119] S. A. Nandhini and R. H. S. Radha, “Web\
    \ enabled plant disease detec-\ntion system for agricultural applications using\
    \ wmsn,” Wireless Personal\nCommunications 102, 725–740 (2018).\n[120] L. Ale,\
    \ A. Sheta, L. Li, Y. Wang, and N. Zhang, “Deep learning based\nplant disease\
    \ detection for smart agriculture,” 2019 IEEE Globecom\nWorkshops, GC Wkshps 2019\
    \ - Proceedings pp. 1–6 (2019).\n[121] F. Balducci, D. Impedovo, and G. Pirlo,\
    \ “Machine learning applications\non agricultural datasets for smart farm enhancement,”\
    \ Machines 6 (2018).\n[122] X.-B. Jin, N.-X. Yang, X.-Y. Wang, Y.-T. Bai, T.-L.\
    \ Su, and J.-L. Kong,\n“Hybrid deep learning predictor for smart agriculture sensing\
    \ based on\nempirical mode decomposition and gated recurrent unit group model,”\n\
    Sensors 20, 1334 (2020).\n[123] S. A. M. Varman, A. R. Baskaran, S. Aravindh,\
    \ and E. Prabhu, “Deep\nlearning and iot for smart agriculture using wsn,” 2017\
    \ IEEE International\nConference on Computational Intelligence and Computing Research,\
    \ IC-\nCIC 2017 pp. 0–5 (2018).\n[124] X. bo Jin, X. hong Yu, X. yi Wang, Y. ting\
    \ Bai, and T. li Su, “Deep\nlearning predictor for sustainable precision agriculture\
    \ based on internet\nof things system,” Sustainability 12, 1433 (2020).\n[125]\
    \ K. Aliev, M. M. Jawaid, S. Narejo, E. Pasero, and A. Pulatov, “Inter-\nnet of\
    \ plants application for smart agriculture,” International Journal of\nAdvanced\
    \ Computer Science and Applications 9, 421–429 (2018).\n[126] A. L. Diedrichs,\
    \ F. Bromberg, D. Dujovne, K. Brun-laguna, T. Watteyne,\nand S. Member, “Prediction\
    \ of frost events using machine learning and iot\nsensing devices,” IEEE Internet\
    \ of Things Journal 5, 4589–4597 (2018).\n[127] R.\nReshma,\nV.\nSathiyavathi,\n\
    T.\nSindhu,\nK.\nSelvakumar,\nand\nL. SaiRamesh, “Iot based classification techniques\
    \ for soil content analysis\nand crop yield prediction,” in “2020 Fourth International\
    \ Conference on\nI-SMAC (IoT in Social, Mobile, Analytics and Cloud)(I-SMAC),”\
    \ (IEEE,\n2020), pp. 156–160.\n[128] M. Pawar and G. Chillarge, “Soil toxicity\
    \ prediction and recommendation\nsystem using data mining in precision agriculture,”\
    \ in “2018 3rd interna-\ntional conference for convergence in technology (I2CT),”\
    \ (IEEE, 2018),\npp. 1–5.\n141\n[129] K. Lee, B. N. Silva, and K. Han, “Deep learning\
    \ entrusted to fog\nnodes (dlefn) based smart agriculture,” Applied Sciences (Switzerland)\n\
    10 (2020).\n[130] M. A. Guill´en, A. Llanes, B. Imbern´on, R. Mart´ınez, E. Andr´es,\
    \ B. Cre-\nspo, and J. Carlos, “Performance evaluation of edge - computing platforms\n\
    for the prediction of low temperatures in agriculture using deep learning,”\n\
    The Journal of Supercomputing 77, 818–840 (2021).\n[131] M. A. Guill´en-navarro,\
    \ R. Mart´ınez-espa˜na, and J. M. Cecilia, “A high-\nperformance iot solution\
    \ to reduce frost damages in stone fruits,” Con-\ncurrency and Computation: Practice\
    \ and Experience 33, e5299 (2019).\n[132] M. A. Guill´en, A. Llanes, B. Imbern´on,\
    \ R. Mart´ınez-Espa˜na, A. Bueno-\nCrespo, J. C. Cano, and J. M. Cecilia, “Performance\
    \ evaluation of edge-\ncomputing platforms for the prediction of low temperatures\
    \ in agriculture\nusing deep learning,” (2020).\n[133] D. Rutqvist, D. Kleyko,\
    \ and F. Blomstedt, “An automated machine learn-\ning approach for smart waste\
    \ management systems,” IEEE Transactions\non Industrial Informatics PP, 1–1 (2019).\n\
    [134] A. Hussain, U. Draz, T. Ali, S. Tariq, M. Irfan, A. Glowacz, J. Alfonso,\n\
    A. Daviu, S. Yasin, and S. Rahman, “Waste management and prediction\nof air pollutants\
    \ using iot and machine learning approach,” Energies 13,\n3930 (2020).\n[135]\
    \ D. Zhang, G. Lindholm, and H. Ratnaweera, “Use long short-term mem-\nory to\
    \ enhance Internet of Things for combined sewer overflow monitor-\ning,” Journal\
    \ of Hydrology 556, 409–418 (2018).\n[136] P. Varalakshmi, S. Vandhana, and S.\
    \ Vishali, “Prediction of water quality\nusing naive bayesian algorithm,” 2016\
    \ 8th International Conference on\nAdvanced Computing, ICoAC 2016 pp. 224–229\
    \ (2017).\n[137] D. Jalal, “Toward a Smart Real Time Monitoring System for Drinking\n\
    Water Based on Machine Learning,” 2019 International Conference on\nSoftware,\
    \ Telecommunications and Computer Networks (SoftCOM) pp.\n1–5 (2019).\n[138] T.\
    \ Bin, M. M. Alam, N. Absar, K. Andersson, and M. Shahadat, “Iot\nbased real-time\
    \ river water quality monitoring system,” Procedia Com-\nputer Science 155, 161–168\
    \ (2019).\n[139] P. Liu, J. Wang, A. K. Sangaiah, Y. Xie, and X. Yin, “Analysis\
    \ and\nprediction of water quality using lstm deep neural networks in iot envi-\n\
    ronment,” Sustainability 11, 2058 (2019).\n[140] Z. Tariq, S. K. Shah, and Y.\
    \ Lee, “Smart 311 request system with au-\ntomatic noise detection for safe neighborhood,”\
    \ 2018 IEEE International\nSmart Cities Conference, ISC2 2018 pp. 1–8 (2019).\n\
    142\n[141] J. Zhang, S. I. Levitan, and J. Hirschberg, “Multimodal deception detec-\n\
    tion using automatically extracted acoustic, visual, and lexical features.”\n\
    in “INTERSPEECH,” (2020), pp. 359–363.\n[142] Y. Santur, E. Karak¨ose, M. Karak¨ose,\
    \ and E. Akın, “Deep learning based\nartificial manager for smart city,” in “5th\
    \ International Conference on\nAdvanced Technology & Sciences,” (2017), pp. 197–201.\n\
    [143] S. Sanaei, B. Majidi, and E. Akhtarkavan, “Deep multisensor dashboard\n\
    for composition layer of web of things in the smart city,” 9th International\n\
    Symposium on Telecommunication: With Emphasis on Information and\nCommunication\
    \ Technology, IST 2018 pp. 211–215 (2019).\n[144] P. D. Rosero-Montalvo, J. A.\
    \ Caraguay-Procel, E. D. Jaramillo, J. M.\nMichilena-Calderon, A. C. Umaquinga-Criollo,\
    \ M. Mediavilla-Valverde,\nM. A. Ruiz, L. A. Beltran, and D. H. Peluffo-Ord´onez,\
    \ “Air quality moni-\ntoring intelligent system using machine learning techniques,”\
    \ Proceedings\n- 3rd International Conference on Information Systems and Computer\
    \ Sci-\nence, INCISCOS 2018 2018-Decem, 75–80 (2018).\n[145] C. Feng, W. Wang,\
    \ Y. Tian, X. Que, and X. Gong, “Estimate air quality\nbased on mobile crowd sensing\
    \ and big data,” 18th IEEE International\nSymposium on A World of Wireless, Mobile\
    \ and Multimedia Networks,\nWoWMoM 2017 - Conference (2017).\n[146] R. Yu, Y.\
    \ Yang, L. Yang, G. Han, and O. A. Move, “RAQ–A random for-\nest approach for\
    \ predicting air quality in urban sensing systems,” Sensors\n(Switzerland) 16\
    \ (2016).\n[147] I. K¨ok, M. U. S¸im¸sek, and S. ¨Ozdemir, “A deep learning model\
    \ for air\nquality prediction in smart cities,” Proceedings - 2017 IEEE International\n\
    Conference on Big Data, Big Data 2017 2018-Janua, 1983–1990 (2017).\n[148] A.\
    \ Al-Wakeel, J. Wu, and N. Jenkins, “K -means based load estimation\nof domestic\
    \ smart meter measurements,” Applied Energy 194, 333–342\n(2017).\n[149] O. Valgaev,\
    \ F. Kupzog, and H. Schmeck, “Building power demand fore-\ncasting using k-nearest\
    \ neighbours model - practical application in smart\ncity demo aspern project,”\
    \ CIRED - Open Access Proceedings Journal\n2017, 1601–1604 (2017).\n[150] P. Vrablecov´a,\
    \ A. B. Ezzeddine, V. Rozinajov´a, S. ˇS´arik, and A. K. Sanga-\niah, “Smart grid\
    \ load forecasting using online support vector regression,”\nComputers and Electrical\
    \ Engineering 65, 102–117 (2018).\n[151] W. Kong, Z. Y. Dong, Y. Jia, D. J. Hill,\
    \ Y. Xu, and Y. Zhang, “Short-\nterm residential load forecasting based on lstm\
    \ recurrent neural network,”\nIEEE Transactions on Smart Grid 10, 841–851 (2019).\n\
    143\n[152] S. Hosein and P. Hosein, “Load forecasting using deep neural networks,”\n\
    2017 IEEE Power and Energy Society Innovative Smart Grid Technologies\nConference,\
    \ ISGT 2017 (2017).\n[153] K. Ke, S. Hongbin, Z. Chengkang, and C. Brown, “Short-term\
    \ electrical\nload forecasting method based on stacked auto-encoding and gru neural\n\
    network,” Evolutionary Intelligence 12, 385–394 (2019).\n[154] T. Han, K. Muhammad,\
    \ T. Hussain, J. Lloret, and S. W. Baik, “An\nefficient deep learning framework\
    \ for intelligent energy management in\niot networks,” IEEE Internet of Things\
    \ Journal (2020).\n[155] X. Liu, Z. Xiao, R. Zhu, J. Wang, L. Liu, and M. Ma,\
    \ “Edge sensing data-\nimaging conversion scheme of load forecasting in smart\
    \ grid,” Sustainable\nCities and Society p. 102363 (2020).\n[156] A. Ta¨ık and\
    \ S. Cherkaoui, “Electrical load forecasting using edge com-\nputing and federated\
    \ learning,” in “ICC 2020-2020 IEEE International\nConference on Communications\
    \ (ICC),” (IEEE, 2020), pp. 1–6.\n[157] D. Nguyen, R. Barella, S. A. Wallace,\
    \ X. Zhao, and X. Liang, “Smart\ngrid line event classification using supervised\
    \ learning over pmu data\nstreams,” 2015 6th International Green and Sustainable\
    \ Computing Con-\nference (2016).\n[158] Z. Zheng, Y. Yang, X. Niu, H. N. Dai,\
    \ and Y. Zhou, “Wide and deep\nconvolutional neural networks for electricity-theft\
    \ detection to secure\nsmart grids,” IEEE Transactions on Industrial Informatics\
    \ 14, 1606–1615\n(2018).\n[159] Y. Huang, Y. Lu, F. Wang, X. Fan, J. Liu, and\
    \ V. C. Leung, “An edge\ncomputing framework for real-time monitoring in smart\
    \ grid,” Proceed-\nings - 2018 IEEE International Conference on Industrial Internet,\
    \ ICII\n2018 pp. 99–108 (2018).\n[160] S. Batool, N. A. Saqib, and M. A. Khan,\
    \ “Internet of things data analytics\nfor user authentication and activity recognition,”\
    \ 2017 2nd International\nConference on Fog and Mobile Edge Computing, FMEC 2017\
    \ pp. 183–187\n(2017).\n[161] H. Zhang, Z. Xiao, J. Wang, F. Li, and E. Szczerbicki,\
    \ “A novel iot-\nperceptive human activity recognition ( har ) approach using\
    \ multihead\nconvolutional attention,” IEEE Internet of Things Journal 7, 1072–1080\n\
    (2020).\n[162] D. Castro, “Wearable-based human activity recognition using an\
    \ iot ap-\nproach,” Journal of Sensor and Actuator Networks 6, 28 (2017).\n[163]\
    \ D. N. Tran and D. D. Phan, “Human activities recognition in android\nsmartphone\
    \ using support vector machine,” in “Proceedings - Inter-\nnational Conference\
    \ on Intelligent Systems, Modelling and Simulation,\nISMS,” , vol. 0 (IEEE, 2016),\
    \ vol. 0, pp. 64–68.\n144\n[164] G. L. Santos,\nP. T. Endo,\nK. Henrique,\nand\
    \ D. C. Monteiro,\n“Accelerometer-based human fall detection using,” Sensors 19,\
    \ 1–12\n(2019).\n[165] D. Yacchirema, “Fall detection system for elderly people\
    \ using iot and en-\nsemble machine learning algorithm,” Personal and Ubiquitous\
    \ Computing\n23, 801–817 (2019).\n[166] I.\nMachorro-Cano,\nG.\nAlor-Hern´andez,\n\
    M.\nA.\nParedes-Valverde,\nU. Ramos-Deonati, J. L. S´anchez-Cervantes, and L.\
    \ Rodr´ıguez-Mazahua,\n“Pisiot: A machine learning and iot-based smart health\
    \ platform for over-\nweight and obesity control,” Applied Sciences (Switzerland)\
    \ 9 (2019).\n[167] R. Ani, S. Krishna, N. Anju, A. M. Sona, and O. S. Deepa, “Iot\
    \ based pa-\ntient monitoring and diagnostic prediction tool using ensemble classifier,”\n\
    2017 International Conference on Advances in Computing, Communica-\ntions and\
    \ Informatics, ICACCI 2017 2017-Janua, 1588–1593 (2017).\n[168] A. Ukil and U.\
    \ K. Roy, “Smart cardiac health management in iot through\nheart sound signal\
    \ analytics and robust noise filtering,” IEEE Interna-\ntional Symposium on Personal,\
    \ Indoor and Mobile Radio Communica-\ntions, PIMRC 2017-Octob, 1–5 (2018).\n[169]\
    \ A. Alamri, “Monitoring system for patients using multimedia for smart\nhealthcare,”\
    \ IEEE Access 6, 23271–23276 (2018).\n[170] Y. Qu, X. Ming, S. Qiu, M. Zheng,\
    \ and Z. Hou, “An integrative framework\nfor online prognostic and health management\
    \ using internet of things and\nconvolutional neural network,” Sensors (Switzerland)\
    \ 19 (2019).\n[171] M. S. Hossain and G. Muhammad, “Cloud-assisted industrial\
    \ internet\nof things (iiot) - enabled framework for health monitoring,” Computer\n\
    Networks 101, 192–202 (2016).\n[172] M. Alhussein, G. Muhammad, M. S. Hossain,\
    \ and S. U. Amin, “Cognitive\niot-cloud integration for smart healthcare: Case\
    \ study for epileptic seizure\ndetection and monitoring,” Mobile Networks and\
    \ Applications 23, 1624–\n1635 (2018).\n[173] M. Ganesan and N. Sivakumar, “Iot\
    \ based heart disease prediction and di-\nagnosis model for healthcare using machine\
    \ learning models,” 2019 IEEE\nInternational Conference on System, Computation,\
    \ Automation and Net-\nworking, ICSCAN 2019 pp. 1–5 (2019).\n[174] S. Mohapatra,\
    \ P. K. Patra, S. Mohanty, and B. Pati, “Smart health care\nsystem using data\
    \ mining,” Proceedings - 2018 International Conference\non Information Technology,\
    \ ICIT 2018 pp. 44–49 (2018).\n[175] P. Kaur, R. Kumar, and M. Kumar, “A healthcare\
    \ monitoring system\nusing random forest and internet of things (iot),” Multimedia\
    \ Tools and\n145\nApplications 78, 19905–19916 (2019). Ni, its one of those random\
    \ papers\nwhere they take data and run algorithms on them.\n[176] M. Alhussein,\
    \ “Monitoring parkinson’s disease in smart cities,” IEEE Ac-\ncess 5, 19835–19841\
    \ (2017).\n[177] S. Tuli, N. Basumatary, S. S. Gill, M. Kahani, R. C. Arya, G.\
    \ S. Wan-\nder, and R. Buyya, “Healthfog: An ensemble deep learning based smart\n\
    healthcare system for automatic diagnosis of heart diseases in integrated\niot\
    \ and fog computing environments,” Future Generation Computer Sys-\ntems 104,\
    \ 187–200 (2020).\n[178] M. Devarajan and L. Ravi, “Intelligent cyber-physical\
    \ system for an ef-\nficient detection of parkinson disease using fog computing,”\
    \ Multimedia\nTools and Applications 78, 32695–32719 (2019).\n[179] M. A. Sayeed,\
    \ S. P. Mohanty, E. Kougianos, V. P. Yanambaka, and H. Za-\nveri, “A robust and\
    \ fast seizure detector for iot edge,” Proceedings - 2018\nIEEE 4th International\
    \ Symposium on Smart Electronic Systems, iSES\n2018 pp. 156–160 (2018).\n[180]\
    \ J. P. Queralta, T. N. Gia, H. Tenhunen, and T. Westerlund, “Edge-ai in\nlora-based\
    \ health monitoring: Fall detection system with fog computing\nand lstm recurrent\
    \ neural networks,” in “2019 42nd international confer-\nence on telecommunications\
    \ and signal processing (TSP),” (IEEE, 2019),\npp. 601–604.\n[181] M. Awais, M.\
    \ Raza, N. Singh, K. Bashir, U. Manzoor, S. ul Islam, and J. J.\nRodrigues, “Lstm\
    \ based emotion detection using physiological signals:\nIot framework for healthcare\
    \ and distance learning in covid-19,” IEEE\nInternet of Things Journal (2020).\n\
    [182] P. Pirzada, N. White, and A. Wilde, “Sensors in smart homes for indepen-\n\
    dent living of the elderly,” 5th International Multi-Topic ICT Conference:\nTechnologies\
    \ For Future Generations, IMTIC 2018 - Proceedings pp. 1–8\n(2018).\n[183] J.\
    \ Park, K. Jang, and S. B. Yang, “Deep neural networks for activity\nrecognition\
    \ with multi-sensor data in a smart home,” IEEE World Forum\non Internet of Things,\
    \ WF-IoT 2018 - Proceedings 2018-Janua, 155–160\n(2018).\n[184] A. Wang, G. Chen,\
    \ C. Shang, M. Zhang, and L. Liu, “Human activity\nrecognition in a smart home\
    \ environment with stacked denoising autoen-\ncoders,” in “International Conference\
    \ on Web-Age Information Manage-\nment,” (Springer, 2016), pp. 29–40.\n[185] D.\
    \ Singh, E. Merdivan, I. Psychoula, J. Kropf, S. Hanke, M. Geist,\nand A. Holzinger,\
    \ “Human activity recognition using recurrent neural\n146\nnetworks,” Lecture\
    \ Notes in Computer Science (including subseries Lec-\nture Notes in Artificial\
    \ Intelligence and Lecture Notes in Bioinformatics)\n10410 LNCS, 267–274 (2017).\n\
    [186] G. Y. Kim, S. S. Shin, J. Y. Kim, and H. G. Kim, “Haptic Conversion\nUsing\
    \ Detected Sound Event in Home Monitoring System for the Hard-\nof-Hearing,” HAVE\
    \ 2018 - IEEE International Symposium on Haptic,\nAudio-Visual Environments and\
    \ Games, Proceedings pp. 17–22 (2018).\n[187] A. B. Adege, H. P. Lin, G. B. Tarekegn,\
    \ and S. S. Jeng, “Applying deep\nneural network (dnn) for robust indoor localization\
    \ in multi-building en-\nvironment,” Applied Sciences (Switzerland) 8, 1–14 (2018).\n\
    [188] R. Adeogun, I. Rodriguez, M. Razzaghpour, G. Berardinelli, P. H. Chris-\n\
    tensen, and P. E. Mogensen, “Indoor occupancy detection and estimation\nusing\
    \ machine learning and measurements from an iot lora-based mon-\nitoring system,”\
    \ in “2019 Global IoT Summit (GIoTS),” (IEEE, 2019),\npp. 1–5.\n[189] L. Zimmermann,\
    \ R. Weigel, and G. Fischer, “Fusion of nonintrusive en-\nvironmental sensors\
    \ for occupancy detection in smart homes,” IEEE In-\nternet of Things Journal\
    \ 5, 2343–2352 (2018).\n[190] D. Chowdhry, R. Paranjape, and P. Laforge, “Smart\
    \ home automation\nsystem for intrusion detection,” 2015 IEEE 14th Canadian Workshop\
    \ on\nInformation Theory, CWIT 2015 pp. 75–78 (2015).\n[191] V. H. Bhide and S.\
    \ Wagh, “I-learning iot: An intelligent self learning\nsystem for home automation\
    \ using iot,” 2015 International Conference\non Communication and Signal Processing,\
    \ ICCSP 2015 pp. 1763–1767\n(2015).\n[192] F. C. C. Garcia, C. M. C. Creayla,\
    \ and E. Q. B. Macabebe, “Develop-\nment of an intelligent system for smart home\
    \ energy disaggregation using\nstacked denoising autoencoders,” Procedia Computer\
    \ Science 105, 248–\n255 (2017).\n[193] C. C. Yang, C. S. Soh, and V. V. Yap,\
    \ “A non-intrusive appliance load\nmonitoring for efficient energy consumption\
    \ based on naive bayes classi-\nfier,” Sustainable Computing: Informatics and\
    \ Systems 14, 34–42 (2017).\n[194] D. Popa, F. Pop, C. Serbanescu, and A. Castiglione,\
    \ “Deep learning model\nfor home automation and energy reduction in a smart home\
    \ environment\nplatform,” Neural Computing and Applications 31, 1317–1337 (2019).\n\
    [195] I. C. Konstantakopoulos, A. R. Barkan, S. He, T. Veeravalli, H. Liu,\nand\
    \ C. Spanos, “A deep learning and gamification approach to improving\nhuman-building\
    \ interaction and energy efficiency in smart infrastructure,”\nApplied Energy\
    \ 237, 810–821 (2019).\n147\n[196] H. Albataineh, M. Nijim, and D. Bollampall,\
    \ “The design of a novel smart\nhome control system using smart grid based on\
    \ edge and cloud comput-\ning,” in “2020 IEEE 8th International Conference on\
    \ Smart Energy Grid\nEngineering (SEGE),” (IEEE, 2020), pp. 88–91.\n[197] P. H.\
    \ F. Sousa, N. M. M. Nascimento, J. S. Almeida, P. P. R. Filho,\nand V. H. C.\
    \ Albuquerque, “Intelligent incipient fault detection in wind\nturbines based\
    \ on industrial iot environment,” Journal of Artificial Intel-\nligence and Systems\
    \ 1, 1–19 (2019).\n[198] M. Salhaoui, A. Guerrero-Gonz´alez, M. Arioua, F. J.\
    \ Ortiz, A. E.\nOualkadi, and C. L. Torregrosa, “Smart industrial iot monitoring\
    \ and\ncontrol system based on uav and cloud computing applied to a concrete\n\
    plant,” Sensors (Switzerland) 19 (2019).\n[199] M. A. Ferreira, L. F. F. D. Souza,\
    \ F. H. S. D. Silva, E. F. Ohata, J. S.\nAlmeida, and P. P. Filho, “Intelligent\
    \ industrial iot system for detection\nof short-circuit failure in windings of\
    \ wind turbines,” Proceedings of the\nInternational Joint Conference on Neural\
    \ Networks (2020).\n[200] T. Nkonyana, Y. Sun, B. Twala, and E. Dogo, “Performance\
    \ evaluation of\ndata mining techniques in steel manufacturing industry,” Procedia\
    \ Man-\nufacturing 35, 623–628 (2019).\n[201] J. E. Siegel, S. Pratt, Y. Sun,\
    \ and S. E. Sarma, “Real-time deep neural\nnetworks for internet-enabled arc-fault\
    \ detection,” Engineering Applica-\ntions of Artificial Intelligence 74, 35–42\
    \ (2018).\n[202] J. Windau and L. Itti, “Inertial machine monitoring system for\
    \ auto-\nmated failure detection,” Proceedings - IEEE International Conference\n\
    on Robotics and Automation pp. 93–98 (2018).\n[203] A. N. Sokolov, I. A. Pyatnitsky,\
    \ and S. K. Alabugin, “Research of Classical\nMachine Learning Methods and Deep\
    \ Learning Models Effectiveness in\nDetecting Anomalies of Industrial Control\
    \ System,” Proceedings - 2018\nGlobal Smart Industry Conference, GloSIC 2018 (2018).\n\
    [204] D. C. Huang, C. F. Lin, C. Y. Chen, and J. R. Sze, “The internet tech-\n\
    nology for defect detection system with deep learning method in smart\nfactory,”\
    \ 2018 4th International Conference on Information Management,\nICIM 2018 pp.\
    \ 98–102 (2018).\n[205] L. Li, K. Ota, and M. Dong, “Deep learning for smart industry:\
    \ Efficient\nmanufacture inspection system with fog computing,” IEEE Transactions\n\
    on Industrial Informatics 14, 4665–4673 (2018).\n[206] S. Y. Lin, Y. Du, P. C.\
    \ Ko, T. J. Wu, P. T. Ho, V. Sivakumar, and\nR. subbareddy, “Fog computing based\
    \ hybrid deep learning framework in\neffective inspection system for smart manufacturing,”\
    \ Computer Commu-\nnications 160, 636–642 (2020).\n148\n[207] M. S. S. Garmaroodi,\
    \ F. Farivar, M. S. Haghighi, M. A. Shoorehdeli, and\nA. Jolfaei, “Detection of\
    \ anomalies in industrial iot systems by data min-\ning: Study of christ osmotron\
    \ water purification system,” IEEE Internet\nof Things Journal 4662, 1–1 (2020).\n\
    [208] D. Park, S. Kim, Y. An, and J. Y. Jung, “Lired: A light-weight real-time\n\
    fault detection system for edge computing using lstm recurrent neural\nnetworks,”\
    \ Sensors (Switzerland) 18 (2018).\n[209] Y. Liu, N. Kumar, Z. Xiong, W. Y. B.\
    \ Lim, J. Kang, and D. Niyato,\n“Communication-efficient federated learning for\
    \ anomaly detection in in-\ndustrial internet of things,” in “GLOBECOM,” , vol.\
    \ 2020 (2020), vol.\n2020, pp. 1–6.\n[210] H. Zheng, Y. Feng, Y. Gao, and J. Tan,\
    \ “A robust predicted performance\nanalysis approach for data-driven product development\
    \ in the industrial\ninternet of things,” Sensors (Switzerland) 18 (2018).\n[211]\
    \ A. Essien and C. Giannetti, “A deep learning model for smart manu-\nfacturing\
    \ using convolutional lstm neural network autoencoders,” IEEE\nTransactions on\
    \ Industrial Informatics 16, 6069–6078 (2020).\n[212] W. Tao, Z.-H. Lai, M. C.\
    \ Leu, and Z. Yin, “Worker activity recognition\nin smart manufacturing using\
    \ imu and semg signals with convolutional\nneural networks,” Procedia Manufacturing\
    \ 26, 1159–1166 (2018).\n[213] A. R. M. Forkan, F. Montori, D. Georgakopoulos,\
    \ P. P. Jayaraman,\nA. Yavari, and A. Morshed, “An industrial iot solution for\
    \ evaluating\nworkers’ performance via activity recognition,” in “2019 IEEE 39th\
    \ In-\nternational Conference on Distributed Computing Systems (ICDCS),”\n(IEEE,\
    \ 2019), pp. 1393–1403.\n[214] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J.\
    \ Jiang, “A proactive task\ndispatching method based on future bottleneck prediction\
    \ for the smart\nfactory,” International Journal of Computer Integrated Manufacturing\n\
    32, 278–293 (2019). Not included as it is a hybrid.\n[215] B. Brik, B. Bettayeb,\
    \ M. Sahnoun, and F. Duval, “Towards predicting\nsystem disruption in industry\
    \ 4.0: Machine learning-based approach,”\nProcedia Computer Science 151, 667–674\
    \ (2019).\n[216] Y. Han, C. J. Zhang, L. Wang, and Y. C. Zhang, “Industrial IoT\
    \ for Intel-\nligent Steelmaking with Converter Mouth Flame Spectrum Information\n\
    Processed by Deep Learning,” IEEE Transactions on Industrial Informat-\nics 16,\
    \ 2640–2650 (2020).\n[217] J. Wang, Y. Wang, and M. Yu, “A multi-period ambulance\
    \ location and\nallocation problem in the disaster,” Journal of Combinatorial\
    \ Optimiza-\ntion 9, 1–24 (2020). This paper presents a survey about fall detection\n\
    technologies and discusses how sensor fusion is one of the most popular\ntrends,\
    \ both in terms of data as well as algorithm.\n149\n[218] L. Spendla, M. Kebisek,\
    \ P. Tanuska, and L. Hrcka, “Concept of predictive\nmaintenance of production\
    \ systems in accordance with industry 4.0,” in\n“2017 IEEE 15th International\
    \ Symposium on Applied Machine Intelli-\ngence and Informatics (SAMI),” (IEEE,\
    \ 2017), pp. 405–410.\n[219] S. Hwang, J. Jeong, and Y. Kang, “Svm-rbm based predictive\
    \ main-\ntenance scheme for iot-enabled smart factory,” 2018 13th International\n\
    Conference on Digital Information Management, ICDIM 2018 pp. 162–\n167 (2018).\n\
    [220] E.-J. K. J.-H. Kwon, “Failure prediction model using iterative feature\n\
    selection for industrial internet of things,” Symmetry pp. 1–15 (2019).\n[221]\
    \ W. Zhang, W. Guo, X. Liu, Y. Liu, J. Zhou, B. Li, Q. Lu, and S. Yang,\n“Lstm-based\
    \ analysis of industrial iot equipment,” IEEE Access 6, 23551–\n23560 (2018).\n\
    [222] A. Diez, N. L. D. Khoa, M. M. Alamdari, Y. Wang, F. Chen, and P. Run-\n\
    cie, “A clustering approach for structural health monitoring on bridges,”\nJournal\
    \ of Civil Structural Health Monitoring 6, 429–445 (2016).\n[223] J. Guo, X. Xie,\
    \ and R. Bie, “Structural health monitoring by using a\nsparse coding-based deep\
    \ learning algorithm with wireless sensor net-\nworks,” Personal and ubiquitous\
    \ computing 18, 1977–1987 (2014).\n[224] G. Gui, H. Pan, Z. Lin, Y. Li, and Z.\
    \ Yuan, “Data-driven support vector\nmachine with optimization techniques for\
    \ structural health monitoring\nand damage detection,” KSCE Journal of Civil Engineering\
    \ 21, 523–534\n(2017).\n[225] H. V. Dang, H. Tran-ngoc, T. V. Nguyen, G. D. Roeck,\
    \ H. X. Nguyen,\nand S. Member, “Data-driven structural health monitoring using\
    \ feature\nfusion and hybrid deep learning,” IEEE Transactions on Automation Sci-\n\
    ence and Engineering pp. 1–17 (2020).\n[226] J. Vitola, F. Pozo, D. A. Tibaduiza,\
    \ and M. Anaya, “A sensor data fusion\nsystem based on k-nearest neighbor pattern\
    \ classification for structural\nhealth monitoring applications,” Sensors (Switzerland)\
    \ 17 (2017).\n[227] J. Yu, M. Kim, H. C. Bang, S. H. Bae, and S. J. Kim, “IoT\
    \ as a ap-\nplications: cloud-based building management systems for the internet\
    \ of\nthings,” Multimedia Tools and Applications 75, 14583–14596 (2016).\n[228]\
    \ S. Singaravel, P. Geyer, and J. Suykens, “Deep neural network archi-\ntectures\
    \ for component-based machine learning model in building energy\npredictions,”\
    \ Digital Proceedings of the 24th EG-ICE International Work-\nshop on Intelligent\
    \ Computing in Engineering 2017 pp. 260–268 (2017).\n[229] N. A. Eltresy, O. M.\
    \ Dardeer, A. Al-Habal, E. Elhariri, A. H. Hassan,\nA. Khattab, D. N. Elsheakh,\
    \ S. A. Taie, H. Mostafa, H. A. Elsadek, and\n150\nE. A. Abdallah, “Rf energy\
    \ harvesting iot system for museum ambience\ncontrol with deep learning,” Sensors\
    \ (Switzerland) 19 (2019).\n[230] W. Hu, Y. Wen, K. Guan, G. Jin, and K. J. Tseng,\
    \ “itcm : Toward\nlearning-based thermal comfort modeling via pervasive sensing\
    \ for smart\nbuildings,” IEEE Internet of Things Journal 5, 4164–4177 (2018).\n\
    [231] H. Mora and A. Jimeno-morenilla, “Deployment of iot edge and fog com-\n\
    puting technologies to develop smart building services,” Sustainability 10,\n\
    1–23 (2018).\n[232] D. H. Stolfi, E. Alba, and X. Yao, “Predicting car park occupancy\
    \ rates\nin smart cities,” Lecture Notes in Computer Science (including subseries\n\
    Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformat-\nics)\
    \ 10268 LNCS, 107–117 (2017).\n[233] R. K. Lenka, R. K. Barik, N. K. Das, K. Agarwal,\
    \ D. Mohanty, and\nS. Vipsita, “Psps: An iot based predictive smart parking system,”\
    \ 2017\n4th IEEE Uttar Pradesh Section International Conference on Electrical,\n\
    Computer and Electronics, UPCON 2017 2018-Janua, 311–317 (2017).\n[234] G. Ali,\
    \ T. Ali, M. Irfan, U. Draz, M. Sohail, A. Glowacz, M. Sulowicz,\nR. Mielnik,\
    \ Z. B. Faheem, and C. Martis, “Iot based smart parking system\nusing deep long\
    \ short memory network,” Electronics 9, 1696 (2020).\n[235] T. Ebuchi and H. Yamamoto,\
    \ “Vehicle/pedestrian localization system\nusing multiple radio beacons and machine\
    \ learning for smart parking,” in\n“2019 International Conference on Artificial\
    \ Intelligence in Information\nand Communication (ICAIIC),” (IEEE, 2019), pp.\
    \ 086–091.\n[236] F. M. Awan, Y. Saleem, R. Minerva, and N. Crespi, “A comparative\n\
    analysis of machine / deep learning models for parking space availability\nprediction,”\
    \ Sensors 20, 322 (2020).\n[237] X. Sevillano, E. M`armol, and V. Fernandez-Arguedas,\
    \ “Towards smart\ntraffic management systems:\nVacant on-street parking spot detection\n\
    based on video analytics,” FUSION 2014 - 17th International Conference\non Information\
    \ Fusion (2014).\n[238] H. Bura, N. Lin, N. Kumar, S. Malekar, S. Nagaraj, and\
    \ K. Liu, “An\nedge based smart parking solution using camera networks and deep\
    \ learn-\ning,” in “2018 IEEE International Conference on Cognitive Computing\n\
    (ICCC),” (IEEE, 2018), pp. 17–24.\n[239] C. Lee, S. Park, T. Yang, and S.-H. Lee,\
    \ “Smart parking with fine-grained\nlocalization and user status sensing based\
    \ on edge computing,” in “2019\nIEEE 90th Vehicular Technology Conference (VTC2019-Fall),”\
    \ (IEEE,\n2019), pp. 1–5.\n[240] S. S. Aung and T. T. Naing, “Na¨ıve bayes classifier\
    \ based traffic prediction\nsystem on cloud infrastructure,” Proceedings - International\
    \ Conference\n151\non Intelligent Systems, Modelling and Simulation, ISMS 2015-Octob,\n\
    193–198 (2015).\n[241] Y. Liu and H. Wu, “Prediction of road traffic congestion\
    \ based on random\nforest,” Proceedings - 2017 10th International Symposium on\
    \ Computa-\ntional Intelligence and Design, ISCID 2017 2, 361–364 (2018).\n[242]\
    \ W. Wei, H. Wu, and H. Ma, “An autoencoder and lstm-based traffic flow\nprediction\
    \ method,” Sensors 19, 1–16 (2019).\n[243] Y. Xiao, “Hybrid lstm neural network\
    \ for short-term traffic flow predic-\ntion,” Information 10, 105 (2019).\n[244]\
    \ F. Sun, Y. Pan, J. White, and A. Dubey, “Real-Time and Predictive An-\nalytics\
    \ for Smart Public Transportation Decision Support System,” 2016\nIEEE International\
    \ Conference on Smart Computing, SMARTCOMP\n2016 pp. 1–8 (2016).\n[245] N. Dogru\
    \ and A. Subasi, “Traffic accident detection using random forest\nclassifier,”\
    \ 2018 15th Learning and Technology Conference, L and T 2018\npp. 40–45 (2018).\n\
    [246] D. Nallaperuma, R. Nawaratne, T. Bandaragoda, A. Adikari, and\nS. Nguyen,\
    \ “Online incremental machine learning platform for big data-\ndriven smart traffic\
    \ management,” IEEE Transactions on Intelligent\nTransportation Systems 20, 4679–4690\
    \ (2019).\n[247] A. Mukherji, V. Raghuram, S. Pandey, H. Tran, and N. Bulusu,\
    \ “Com-\nmuterscanner: Towards smart indoor positioning systems in urban trans-\n\
    portation,” 2019 11th International Conference on Communication Sys-\ntems and\
    \ Networks, COMSNETS 2019 2061, 619–624 (2019).\n[248] S. Majumdar, M. M. Subhani,\
    \ B. Roullier, A. Anjum, and R. Zhu, “Con-\ngestion prediction for smart sustainable\
    \ cities using iot and machine learn-\ning approaches,” Sustainable Cities and\
    \ Society 64, 102500 (2021).\n[249] F. Peres and M. Castelli, “Combinatorial optimization\
    \ problems and\nmetaheuristics: Review, challenges, design, and development,”\
    \ Applied\nSciences 11, 6449 (2021).\n[250] M. Dorigo and K. Socha, “Ant colony\
    \ optimization,” Handbook of Ap-\nproximation Algorithms and Metaheuristics pp.\
    \ 26–1–26–14 (2007).\n[251] D. Whitley, “A genetic algorithm tutorial,” Statistics\
    \ and computing 4,\n65–85 (1994).\n[252] J. Kennedy and R. Eberhart, “Particle\
    \ swarm optimization,” in “Pro-\nceedings of ICNN’95-international conference\
    \ on neural networks,” , vol. 4\n(IEEE, 1995), vol. 4, pp. 1942–1948.\n[253] V.\
    \ Feoktistov, Differential evolution (Springer, 2006).\n152\n[254] D. Karaboga,\
    \ “Artificial bee colony algorithm,” scholarpedia 5, 6915\n(2010).\n[255] D. C.\
    \ H. Nguyen, J. C. Ascough II, H. R. Maier, G. C. Dandy, and A. A.\nAndales, “Optimization\
    \ of irrigation scheduling using ant colony algo-\nrithms and an advanced cropping\
    \ system model,” Environmental mod-\nelling & software 97, 32–45 (2017).\n[256]\
    \ B. Saeidian, M. S. Mesgari, B. Pradhan, and A. M. Alamri, “Irrigation\nwater\
    \ allocation at farm level based on temporal cultivation-related data\nusing meta-heuristic\
    \ optimisation algorithms,” Water 11, 2611 (2019).\n[257] D. Guo, J. E. Olesen,\
    \ K. Manevski, and X. Ma, “Optimizing irrigation\nschedule in a large agricultural\
    \ region under different hydrologic scenar-\nios,” Agricultural Water Management\
    \ 245, 106575 (2021).\n[258] S. Guo, F. Zhang, C. Zhang, C. An, S. Wang, and P.\
    \ Guo, “A multi-\nobjective hierarchical model for irrigation scheduling in the\
    \ complex canal\nsystem,” Sustainability 11, 24 (2019).\n[259] F. Zhang, C. He,\
    \ F. Yaqiong, X. Hao, and S. Kang, “Canal delivery and\nirrigation scheduling\
    \ optimization based on crop water demand,” Agri-\ncultural Water Management 260,\
    \ 107245 (2022).\n[260] A. Ikudayisi, J. Adeyemo, J. Odiyo, and A. Enitan, “Optimum\
    \ irriga-\ntion water allocation and crop distribution using combined pareto multi-\n\
    objective differential evolution,” Cogent Engineering 5, 1535749 (2018).\n[261]\
    \ J. Wu, R. Huang, T. Fang, and Y. Han, “Multi-objective model of irriga-\ntion\
    \ water distribution based on particle swarm optimization,” in “IOP\nConference\
    \ Series: Earth and Environmental Science,” , vol. 344 (IOP\nPublishing, 2019),\
    \ vol. 344, p. 012087.\n[262] A. L. P. De Ocampo and E. P. Dadios, “Energy cost\
    \ optimization in\nirrigation system of smart farm by using genetic algorithm,”\
    \ in “2017IEEE\n9th International Conference on Humanoid, Nanotechnology, Information\n\
    Technology, Communication and Control, Environment and Management\n(HNICEM),”\
    \ (IEEE, 2017), pp. 1–7.\n[263] L. Zhuo, J. Cheng, and Z. Gong, “Optimal water\
    \ allocation method based\non the genetic algorithm for a system of a reservoir\
    \ and two pumping\nstations,” Water Supply 22, 849–859 (2022).\n[264] R. Li, Y.\
    \ Chang, and Z. Wang, “Study of optimal allocation of water\nresources in dujiangyan\
    \ irrigation district of china based on an improved\ngenetic algorithm,” Water\
    \ Supply 21, 2989–2999 (2021).\n[265] S. K. Roy and D. De, “Genetic algorithm\
    \ based internet of precision agri-\ncultural things (iopat) for agriculture 4.0,”\
    \ Internet of Things p. 100201\n(2020).\n153\n[266] N. Lin, X. Wang, Y. Zhang,\
    \ X. Hu, and J. Ruan, “Fertigation manage-\nment for sustainable precision agriculture\
    \ based on internet of things,”\nJournal of Cleaner Production 277, 124119 (2020).\n\
    [267] C. Arif, B. I. Setiawan, M. Mizoguchi, and B. D. A. Nugroho, “Genetic\n\
    algorithms optimization for water management in irrigated paddy fields,”\nin “IOP\
    \ Conference Series: Earth and Environmental Science,” , vol. 335\n(IOP Publishing,\
    \ 2019), vol. 335, p. 012002.\n[268] WorldBank, “Solid waste management,” (2019).\n\
    [269] S. Sharmin and S. T. Al-Amin, “A cloud-based dynamic waste manage-\nment\
    \ system for smart cities,” Proceedings of the 7th Annual Symposium\non Computing\
    \ for Development, ACM DEV-7 2016 (2016).\n[270] R. Fujdiak, P. Masek, P. Mlynek,\
    \ J. Misurec, and E. Olshannikova, “Us-\ning genetic algorithm for advanced municipal\
    \ waste collection in smart\ncity,” 2016 10th International Symposium on Communication\
    \ Systems,\nNetworks and Digital Signal Processing, CSNDSP 2016 pp. 1–6 (2016).\n\
    [271] R. Assaf and Y. Saleh, “Vehicle-routing optimization for municipal solid\n\
    waste collection using genetic algorithm: the case of southern nablus city,”\n\
    Civil and environmental engineering reports (2017).\n[272] M. A. Hannan, M. S.\
    \ H. Lipu, M. Akhtar, R. A. Begum, M. A. A. Mamum,\nA. Hussain, M. S. Mia, and\
    \ H. Basri, “Solid waste collection optimization\nobjectives, constraints, modeling\
    \ approaches, and their challenges toward\nachieving sustainable development goals,”\
    \ Journal of cleaner production\np. 123557 (2020).\n[273] Y. Zhang, X. Luo, X.\
    \ Han, Y. Lu, J. Wei, and C. Yu, “Optimization of\nurban waste transportation\
    \ route based on genetic algorithm,” Security\nand Communication Networks 2022,\
    \ 1–10 (2022).\n[274] Q. Wei, Z. Guo, H. C. Lau, and Z. He, “An artificial bee\
    \ colony-based\nhybrid approach for waste collection problem with midway disposal\
    \ pat-\ntern,” Applied Soft Computing 76, 629–637 (2019).\n[275] S. P. Raflesia\
    \ and A. K. Pamosoaji, “A novel ant colony optimization\nalgorithm for waste collection\
    \ problem,” in “2019 4th International Con-\nference on Information Technology,\
    \ Information Systems and Electrical\nEngineering (ICITISEE),” (IEEE, 2019), pp.\
    \ 413–416.\n[276] M. Yazdani, K. Kabirifar, B. E. Frimpong, M. Shariati, M. Mirmozaffari,\n\
    and A. Boskabadi, “Improving construction and demolition waste collec-\ntion service\
    \ in an urban area using a simheuristic approach: A case study\nin sydney, australia,”\
    \ Journal of Cleaner Production 280, 124138 (2021).\n[277] S. Idwan, I. Mahmood,\
    \ J. A. Zubairi, and I. Matar, “Optimal management\nof solid waste in smart cities\
    \ using internet of things,” Wireless Personal\nCommunications 110, 485–501 (2020).\n\
    154\n[278] U. M. Faizal, R. Jayachitra, P. Vijayakumar, and M. Rajasekar, “Opti-\n\
    mization of inbound vehicle routes in the collection of bio-medical wastes,”\n\
    Materials Today: Proceedings 45, 692–699 (2021).\n[279] E. B. Tirkolaee, M. Alinaghian,\
    \ A. A. R. Hosseinabadi, M. B. Sasi, and\nA. K. Sangaiah, “An improved ant colony\
    \ optimization for the multi-trip\ncapacitated arc routing problem,” Computers\
    \ and Electrical Engineering\n77, 457–470 (2019).\n[280] “Branch and cut for vehicle\
    \ routing,” .\n[281] “Capacitated vrp instances — vehicle routing problem,” .\n\
    [282] M. Ettappan, V. Vimala, S. Ramesh, and V. T. Kesavan, “Optimal reac-\ntive\
    \ power dispatch for real power loss minimization and voltage stability\nenhancement\
    \ using artificial bee colony algorithm,” Microprocessors and\nMicrosystems 76,\
    \ 103085 (2020).\n[283] C. K. Das, O. Bass, G. Kothapalli, T. S. Mahmoud, and\
    \ D. Habibi,\n“Optimal placement of distributed energy storage systems in distribution\n\
    networks using artificial bee colony algorithm,” Applied energy 232, 212–\n228\
    \ (2018).\n[284] W. S. Sakr, R. A. El-Sehiemy, and A. M. Azmy, “Adaptive differential\n\
    evolution algorithm for efficient reactive power management,” Applied\nSoft Computing\
    \ 53, 336–351 (2017).\n[285] T. T. Nguyen and F. Mohammadi, “Optimal placement\
    \ of tcsc for conges-\ntion management and power loss reduction using multi-objective\
    \ genetic\nalgorithm,” Sustainability 12, 2813 (2020).\n[286] I. I. Atteya, H.\
    \ A. Ashour, N. Fahmi, and D. Strickland, “Distribution net-\nwork reconfiguration\
    \ in smart grid system using modified particle swarm\noptimization,” 2016 IEEE\
    \ International Conference on Renewable Energy\nResearch and Applications, ICRERA\
    \ 2016 5, 305–313 (2016).\n[287] N. Kanwar, N. Gupta, K. R. Niazi, A. Swarnkar,\
    \ and R. C. Bansal, “Si-\nmultaneous allocation of distributed energy resource\
    \ using improved par-\nticle swarm optimization,” Applied Energy 185, 1684–1693\
    \ (2017).\n[288] K. Utkarsh, A. Trivedi, D. Srinivasan, and T. Reindl, “A consensus-\n\
    based distributed computational intelligence technique for real-time opti-\nmal\
    \ control in smart distribution grids,” IEEE Transactions on Emerging\nTopics\
    \ in Computational Intelligence 1, 51–60 (2016).\n[289] A. Askarzadeh, “A memory-based\
    \ genetic algorithm for optimization of\npower generation in a microgrid,” IEEE\
    \ transactions on sustainable en-\nergy 9, 1081–1089 (2017).\n[290] O. H. Mohammed,\
    \ Y. Amirat, and M. Benbouzid, “Economical evaluation\nand optimal energy management\
    \ of a stand-alone hybrid energy system\nhandling in genetic algorithm strategies,”\
    \ Electronics 7, 233 (2018).\n155\n[291] B. K. Das, R. Hassan, M. S. H. K. Tushar,\
    \ F. Zaman, M. Hasan, and\nP. Das, “Techno-economic and environmental assessment\
    \ of a hybrid re-\nnewable energy system using multi-objective genetic algorithm:\
    \ A case\nstudy for remote island in bangladesh,” Energy Conversion and Manage-\n\
    ment 230, 113823 (2021).\n[292] D. K. Geleta and M. S. Manshahia, “Artificial\
    \ bee colony-based optimiza-\ntion of hybrid wind and solar renewable energy system,”\
    \ Research Anthol-\nogy on Clean Energy Management and Solutions pp. 819–842 (2021).\n\
    [293] M. M. Moghaddam, M. Marzband, and F. Azarinejadian, “Optimal en-\nergy management\
    \ for a home microgrid based on multi-period artifi-\ncial bee colony,” in “2017\
    \ Iranian Conference on Electrical Engineering\n(ICEE),” (IEEE, 2017), pp. 1446–1451.\n\
    [294] H. U. R. Habib, S. Wang, A. Waqar, B. S. Farhan, K. M. Kotb, and Y.-S.\n\
    Kim, “Combined heat and power units sizing and energy cost optimization\nof a\
    \ residential building by using an artificial bee colony algorithm,” IEEE\nAccess\
    \ 8, 218289–218303 (2020).\n[295] F. Lezama, J. Soares, R. Faia, T. Pinto, and\
    \ Z. Vale, “A new hybrid-\nadaptive differential evolution for a smart grid application\
    \ under uncer-\ntainty,” in “2018 IEEE Congress on Evolutionary Computation (CEC),”\n\
    (IEEE, 2018), pp. 1–8.\n[296] F. Lezama, L. E. Sucar, E. M. de Cote, J. Soares,\
    \ and Z. Vale, “Differential\nevolution strategies for large-scale energy resource\
    \ management in smart\ngrids,” in “Proceedings of the Genetic and Evolutionary\
    \ Computation\nConference Companion,” (2017), pp. 1279–1286.\n[297] V. Palakonda,\
    \ N. H. Awad, R. Mallipeddi, M. Z. Ali, K. C. Veluvolu,\nand P. N. Suganthan,\
    \ “Differential evolution with stochastic selection\nfor uncertain environments:\
    \ A smart grid application,” in “2018 IEEE\nCongress on Evolutionary Computation\
    \ (CEC),” (IEEE, 2018), pp. 1–7.\n[298] S. Mandal and K. K. Mandal, “Optimal energy\
    \ management of micro-\ngrids under environmental constraints using chaos enhanced\
    \ differential\nevolution,” Renewable Energy Focus 34, 129–141 (2020).\n[299]\
    \ M. Azaza and F. Wallin, “Multi objective particle swarm optimization of\nhybrid\
    \ micro-grid system: A case study in sweden,” Energy 123, 108–118\n(2017).\n[300]\
    \ H. A. Gabbar, M. R. Abdussami, and M. I. Adham, “Optimal planning\nof nuclear-renewable\
    \ micro-hybrid energy system by particle swarm opti-\nmization,” IEEE Access 8,\
    \ 181049–181073 (2020).\n[301] B. A. Bhayo, H. H. Al-Kayiem, S. I. U. Gilani,\
    \ and F. B. Ismail, “Power\nmanagement optimization of hybrid solar photovoltaic-battery\
    \ integrated\nwith pumped-hydro-storage system for standalone electricity generation,”\n\
    Energy Conversion and Management 215, 112942 (2020).\n156\n[302] L. F. Grisales-Nore˜na,\
    \ O. D. Montoya, and C. A. Ramos-Paja, “An en-\nergy management system for optimal\
    \ operation of bss in dc distributed\ngeneration environments based on a parallel\
    \ pso algorithm,” Journal of\nEnergy Storage 29, 101488 (2020).\n[303] M. Mahdavi,\
    \ A. Kimiyaghalam, H. H. Alhelou, M. Javadi, J. P. S. Catal˜ao,\nand A. Ashouri,\
    \ “Transmission expansion planning considering power\nlosses, expansion of substations\
    \ and uncertainty in fuel price using discrete\nartificial bee colony algorithm,”\
    \ IEEE Access (2021).\n[304] T. K. Maji and P. Acharjee, “Multiple solutions of\
    \ optimal pmu placement\nusing exponential binary pso algorithm for smart grid\
    \ applications,” IEEE\nTransactions on Industry Applications 53, 2550–2559 (2017).\n\
    [305] M. B. Rasheed and M. D. R-Moreno, “Minimizing pricing policies based\non\
    \ user load profiles and residential demand responses in smart grids,”\nApplied\
    \ Energy 310, 118492 (2022).\n[306] D. Zhang, Z. Fu, and L. Zhang, “An improved\
    \ ts algorithm for loss-\nminimum reconfiguration in large-scale distribution\
    \ systems,” Electric\nPower Systems Research 77, 685–694 (2007).\n[307] J. P.\
    \ Pell, J. M. Sirel, A. K. Marsden, I. Ford, and S. M. Cobbe, “Effect of\nreducing\
    \ ambulance response times on deaths from out of hospital cardiac\narrest: cohort\
    \ study,” Bmj 322, 1385–1388 (2001).\n[308] RapidSOS, “Outcomes: Quantifying the\
    \ impact of emergency response\ntime - rapidsos,” (2015).\n[309] P. Toth and D.\
    \ Vigo, The vehicle routing problem (SIAM, 2002).\n[310] A. A. Ageev and M. I.\
    \ Sviridenko, “Approximation algorithms for maxi-\nmum coverage and max cut with\
    \ given sizes of parts,” in “International\nConference on Integer Programming\
    \ and Combinatorial Optimization,”\n(Springer, 1999), pp. 17–30.\n[311] E. Mouhcine,\
    \ Y. Karouani, K. Mansouri, and Y. Mohamed, “Toward a\ndistributed strategy for\
    \ emergency ambulance routing problem,” in “2018\n4th International Conference\
    \ on Optimization and Applications (ICOA),”\n(IEEE, 2018), pp. 1–4.\n[312] L.\
    \ Brotcorne, G. Laporte, and F. Semet, “Ambulance location and relo-\ncation models,”\
    \ European journal of operational research 147, 451–463\n(2003).\n[313] M. Benabdouallah,\
    \ C. Bojji, and O. E. Yaakoubi, “Deployment and re-\ndeployment of ambulances\
    \ using a heuristic method and an ant colony\noptimization - case study,” Proceedings\
    \ - 2016 3rd International Confer-\nence on Systems of Collaboration, SysCo 2016\
    \ pp. 1–4 (2017).\n157\n[314] M. Benabdouallah and C. Bojji, “Comparison between\
    \ ga and aco for\nemergency coverage problem in a smart healthcare environment,”\
    \ in “Pro-\nceedings of the 2017 International Conference on Smart Digital Environ-\n\
    ment,” (2017), pp. 48–55.\n[315] Y. A. Kochetov and N. B. Shamray, “Optimization\
    \ of the ambulance fleet\nlocation and relocation,” Journal of Applied and Industrial\
    \ Mathematics\n15, 234–252 (2021).\n[316] Y. Yan, Y. Kong, and Z. Fu, “Dynamic\
    \ resource scheduling in emergency\nenvironment,” Journal of Information Hiding\
    \ and Privacy Protection 1,\n143 (2019).\n[317] Q. Lu and K.-D. Kim, “A genetic\
    \ algorithm approach for expedited cross-\ning of emergency vehicles in connected\
    \ and autonomous intersection traf-\nfic,” Journal of Advanced Transportation\
    \ 2017 (2017).\n[318] H. M. Amer, H. A. Al-Kashoash, A. Kemp, L. Mihaylova, and\
    \ M. May-\nfield, “Coalition game for emergency vehicles re-routing in smart cities,”\n\
    Proceedings of the IEEE Sensor Array and Multichannel Signal Process-\ning Workshop\
    \ 2018-July, 306–310 (2018).\n[319] B. N. Silva and K. Han, “Mutation operator\
    \ integrated ant colony opti-\nmization based domestic appliance scheduling for\
    \ lucrative demand side\nmanagement,” Future generation computer systems 100,\
    \ 557–568 (2019).\n[320] K. N. Bui, I. E. Agbehadji, R. Millham, D. Camacho, and\
    \ J. J. Jung,\n“Distributed artificial bee colony approach for connected appliances\
    \ in\nsmart home energy management system,” Expert Systems 37, e12521\n(2020).\n\
    [321] S. N. Makhadmeh, A. T. Khader, M. A. Al-Betar, S. Naim, Z. A. A.\nAlyasseri,\
    \ and A. K. Abasi, “Particle swarm optimization algorithm for\npower scheduling\
    \ problem using smart battery,” 2019 IEEE Jordan In-\nternational Joint Conference\
    \ on Electrical Engineering and Information\nTechnology, JEEIT 2019 - Proceedings\
    \ pp. 672–677 (2019).\n[322] S. Abid, A. Zafar, R. Khalid, S. Javaid, U. Qasim,\
    \ Z. A. Khan, and\nN. Javaid, “Managing energy in smart homes using binary particle\
    \ swarm\noptimization,” in “Conference on Complex, Intelligent, and Software In-\n\
    tensive Systems,” (Springer, 2017), pp. 189–196.\n[323] I. Fatima, A. Khalid,\
    \ S. Zahoor, A. Yasmeen, S. Arif, U. Zafar, and\nN. Javaid, “Home energy management\
    \ system using ant colony optimiza-\ntion technique in microgrid,” in “International\
    \ Conference on Broadband\nand Wireless Computing, Communication and Applications,”\
    \ (Springer,\n2017), pp. 267–279. Use ACO for appliance scheduling in a microgrid.\n\
    [324] N. U. Rehman, N. Javaid, and Z. A. Khan, “An enhanced differential\nevolution\
    \ based energy management system for smart grids,” in “2017\n158\n31st International\
    \ Conference on Advanced Information Networking and\nApplications Workshops (WAINA),”\
    \ (IEEE, 2017), pp. 132–137.\n[325] I. Gupta, G. N. Anandini, and M. Gupta, “An\
    \ hour wise device scheduling\napproach for demand side management in smart grid\
    \ using particle swarm\noptimization,” 2016 National Power Systems Conference,\
    \ NPSC 2016 pp.\n1–6 (2017).\n[326] M. A. Nasab, M. Zand, M. Eskandari, P. Sanjeevikumar,\
    \ and P. Siano,\n“Optimal planning of electrical appliance of residential units\
    \ in a smart\nhome network using cloud services,” Smart Cities 4, 1173–1195 (2021).\n\
    [327] I. O. Essiet, Y. Sun, and Z. Wang, “Optimized energy consumption model\n\
    for smart home using improved differential evolution algorithm,” Energy\n172,\
    \ 354–365 (2019).\n[328] I. Ullah and D. Kim, “An improved optimization function\
    \ for maximiz-\ning user comfort with minimum energy consumption in smart homes,”\n\
    Energies 10 (2017).\n[329] R. Reghukumar, S. Sambhu, and V. R. Pandi, “Multi-objective\
    \ optimiza-\ntion for efficient home energy management system using differential\
    \ evo-\nlution algorithm,” in “2018 3rd IEEE International Conference on Recent\n\
    Trends in Electronics, Information & Communication Technology (RTE-\nICT),” (IEEE,\
    \ 2018), pp. 1157–1162.\n[330] T. Pamulapati, R. Mallipeddi, and M. Lee, “Multi-objective\
    \ home appli-\nance scheduling with implicit and interactive user satisfaction\
    \ modelling,”\nApplied Energy 267, 114690 (2020).\n[331] A. R. Jordehi, “Binary\
    \ particle swarm optimisation with quadratic trans-\nfer function: A new binary\
    \ optimisation algorithm for optimal schedul-\ning of appliances in smart homes,”\
    \ Applied Soft Computing 78, 465–480\n(2019).\n[332] P. Chandra, A. Das, C. Das,\
    \ A. Naskar, B. Ganguly, and S. Paul, “Dif-\nferential evolution algorithm based\
    \ energy management of residential mi-\ncrogrid under appliance scheduling dsm,”\
    \ in “2020 IEEE VLSI DEVICE\nCIRCUIT AND SYSTEM (VLSI DCS),” (IEEE, 2020), pp.\
    \ 50–55.\n[333] R. Faia, P. Faria, Z. Vale, and J. Spinola, “Demand response optimiza-\n\
    tion using particle swarm algorithm considering optimum battery energy\nstorage\
    \ schedule in a residential house,” Energies 12, 1645 (2019).\n[334] D. Madathil,\
    \ V. R. Pandi, K. Ilango, and M. G. Nair, “Differential evo-\nlution based energy\
    \ management system for zero net energy building,” in\n“2017 International Conference\
    \ on Technological Advancements in Power\nand Energy (TAP Energy),” (IEEE, 2017),\
    \ pp. 1–5.\n159\n[335] H. Swalehe and B. Marungsri, “Intelligent algorithm for\
    \ optimal load\nmanagement in smart home appliance scheduling in distribution\
    \ sys-\ntem,” in “2018 International Electrical Engineering Congress (iEECON),”\n\
    (IEEE, 2018), pp. 1–4.\n[336] J.-C. Chang and T.-H. Wu, “Demand side management\
    \ of power for\ntime-of-use pricing based on particle swarm optimization,” in\
    \ “2020 3rd\nIEEE International Conference on Knowledge Innovation and Invention\n\
    (ICKII),” (IEEE, 2020), pp. 317–320.\n[337] C. Bharathi, D. Rekha, and V. Vijayakumar,\
    \ “Genetic algorithm based\ndemand side management for smart grid,” Wireless Personal\
    \ Communi-\ncations 93, 481–502 (2017).\n[338] Z. Chen, Y. Chen, R. He, J. Liu,\
    \ M. Gao, and L. Zhang, “Multi-objective\nresidential load scheduling approach\
    \ for demand response in smart grid,”\nSustainable Cities and Society 76, 103530\
    \ (2022).\n[339] W. Tao, Z. H. Lai, M. C. Leu, and Z. Yin, “Worker activity recognition\n\
    in smart manufacturing using imu and semg signals with convolutional\nneural networks,”\
    \ Procedia Manufacturing 26, 1159–1166 (2018).\n[340] R. Zhao, R. Yan, Z. Chen,\
    \ K. Mao, P. Wang, and R. X. Gao, “Deep\nlearning and its applications to machine\
    \ health monitoring,” Mechanical\nSystems and Signal Processing 115, 213–237 (2019).\n\
    [341] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J. Jiang, “A proactive task\n\
    dispatching method based on future bottleneck prediction for the smart\nfactory,”\
    \ International Journal of Computer Integrated Manufacturing\n32, 278–293 (2019).\n\
    [342] M. Sadeghi, R. Tavakkoli-Moghaddam, and R. Babazadeh, “An efficient\nartificial\
    \ bee colony algorithm for a p-hub covering location problem with\ntravel time\
    \ reliability.” International Journal of Industrial Engineering 25\n(2018).\n\
    [343] K. Guo, “Research on location selection model of distribution network\n\
    with constrained line constraints based on genetic algorithm,” Neural\nComputing\
    \ and Applications 32, 1679–1689 (2020).\n[344] Y. Su, J. Liu, X. Xiang, and X.\
    \ Zhang, “A responsive ant colony optimiza-\ntion for large-scale dynamic vehicle\
    \ routing problems via pheromone di-\nversity enhancement,” Complex and Intelligent\
    \ Systems pp. 1–16 (2021).\n[345] M. Alinaghian, M. Ghazanfari, N. Norouzi, and\
    \ H. Nouralizadeh, “A\nnovel model for the time dependent competitive vehicle\
    \ routing problem:\nModified random topology particle swarm optimization,” Networks\
    \ and\nSpatial Economics 17, 1185–1211 (2017).\n[346] D. M. Utama, T. A. Fitria,\
    \ and A. K. Garside, “Artificial bee colony\nalgorithm for solving green vehicle\
    \ routing problems with time windows,”\n160\nin “Journal of Physics: Conference\
    \ Series,” , vol. 1933 (IOP Publishing,\n2021), vol. 1933, p. 012043.\n[347] M.\
    \ Ibrahim, F. Nurhakiki, D. Utama, and A. Rizaki, “Optimised genetic\nalgorithm\
    \ crossover and mutation stage for vehicle routing problem pick-\nup and delivery\
    \ with time windows,” in “IOP Conference Series: Materials\nScience and Engineering,”\
    \ , vol. 1071 (IOP Publishing, 2021), vol. 1071,\np. 012025.\n[348] D. A. Mounia\
    \ and D. Bachir, “A hybrid discrete artificial bee colony for\nthe green pickup\
    \ and delivery problem with time windows,” Informatica\n44 (2020).\n[349] Z. Gu,\
    \ Y. Zhu, Y. Wang, X. Du, M. Guizani, and Z. Tian, “Applying\nartificial bee colony\
    \ algorithm to the multidepot vehicle routing problem,”\nSoftware: Practice and\
    \ Experience (2020).\n[350] N. Norouzi, M. Sadegh-Amalnick, and R. Tavakkoli-Moghaddam,\
    \ “Modi-\nfied particle swarm optimization in a time-dependent vehicle routing\
    \ prob-\nlem: minimizing fuel consumption,” Optimization Letters 11, 121–134\n\
    (2017).\n[351] K. K. H. Ng, C. K. M. Lee, S. Z. Zhang, K. Wu, and W. Ho, “A multiple\n\
    colonies artificial bee colony algorithm for a capacitated vehicle routing\nproblem\
    \ and re-routing strategies under time-dependent traffic conges-\ntion,” Computers\
    \ and Industrial Engineering 109, 151–168 (2017).\n[352] M. M. Solomon, “Algorithms\
    \ for the vehicle routing and scheduling prob-\nlems with time window constraints,”\
    \ Operations research 35, 254–265\n(1987).\n[353] Y. Huang, S. A. Ludwig, and\
    \ F. Deng, “Sensor optimization using a ge-\nnetic algorithm for structural health\
    \ monitoring in harsh environments,”\nJournal of Civil Structural Health Monitoring\
    \ 6, 509–519 (2016).\n[354] F. Zhao, H. Bao, S. Xue, and Q. Xu, “Multi-objective\
    \ particle swarm\noptimization of sensor distribution scheme with consideration\
    \ of the ac-\ncuracy and the robustness for deformation reconstruction,” Sensors\
    \ 19,\n1306 (2019).\n[355] C. Yang, K. Liang, X. Zhang, and X. Geng, “Sensor placement\
    \ algorithm\nfor structural health monitoring with redundancy elimination model\
    \ based\non sub-clustering strategy,” Mechanical Systems and Signal Processing\n\
    124, 369–387 (2019).\n[356] A. Downey, C. Hu, and S. Laflamme, “Optimal sensor\
    \ placement within\na hybrid dense sensor network using an adaptive genetic algorithm\
    \ with\nlearning gene pool,” Structural Health Monitoring 17, 450–460 (2018).\n\
    161\n[357] B. Cao, X. Kang, J. Zhao, P. Yang, Z. Lv, and X. Liu, “Differential\n\
    evolution-based 3-d directional wireless sensor network deployment opti-\nmization,”\
    \ IEEE Internet of Things Journal 5, 3594–3605 (2018).\n[358] R. Marks, A. Clarke,\
    \ C. A. Featherston, and R. Pullin, “Optimization of\nacousto-ultrasonic sensor\
    \ networks using genetic algorithms based on ex-\nperimental and numerical data\
    \ sets,” International Journal of Distributed\nSensor Networks 13, 1550147717743702\
    \ (2017).\n[359] H. Liu, X. He, and Y. Jiao, “Damage identification algorithm\
    \ of hinged\njoints for simply supported slab bridges based on modified hinge\
    \ plate\nmethod and artificial bee colony algorithms,” Algorithms 11, 198 (2018).\n\
    [360] H. Tran-Ngoc, S. Khatir, G. D. Roeck, T. Bui-Tien, L. Nguyen-Ngoc, and\n\
    M. A. Wahab, “Model updating for nam o bridge using particle swarm\noptimization\
    \ algorithm and genetic algorithm,” Sensors 18, 4131 (2018).\n[361] K. Gao, Y.\
    \ Zhang, A. Sadollah, and R. Su, “Improved artificial bee colony\nalgorithm for\
    \ solving urban traffic light scheduling problem,” in “2017\nIEEE Congress on\
    \ Evolutionary Computation (CEC),” (IEEE, 2017), pp.\n395–402.\n[362] R. F. Adebiyi,\
    \ K. A. Abubilal, M. B. Mu’azu, and B. H. Adebiyi, “Devel-\nopment and simulation\
    \ of adaptive traffic light controller using artificial\nbee colony algorithm,”\
    \ International Journal of Intelligent Systems and\nApplications 10, 68–74 (2018).\n\
    [363] T. Mao, A.-S. Mihaita, and C. Cai, “Traffic signal control optimization\n\
    under severe incident conditions using genetic algorithm,” arXiv preprint\narXiv:1906.05356\
    \ (2019).\n[364] C. Tang, S. Xia, C. Zhu, and X. Wei, “Phase timing optimization\
    \ for\nsmart traffic control based on fog computing,” IEEE Access 7, 84217–\n\
    84228 (2019).\n[365] Z. Li, M. Shahidehpour, S. Bahramirad, and A. Khodaei, “Optimizing\n\
    traffic signal settings in smart cities,” IEEE Transactions on Smart Grid\n8,\
    \ 2382–2393 (2017).\n[366] X. Chen and Z. Yuan, “Environmentally friendly traffic\
    \ control strategy-\na case study in xi’an city,” Journal of Cleaner Production\
    \ 249, 119397\n(2020).\n[367] E. Korkmaz and A. P. AKG¨UNG¨OR, “Delay estimation\
    \ models for sig-\nnalized intersections using differential evolution algorithm,”\
    \ Journal of\nEngineering Research 5 (2017).\n[368] X. Zhang, X. Fan, S. Yu, A.\
    \ Shan, S. Fan, Y. Xiao, and F. Dang, “Inter-\nsection signal timing optimization:\
    \ A multi-objective evolutionary algo-\nrithm,” Sustainability 2022, Vol. 14,\
    \ Page 1506 14, 1506 (2022).\n162\n[369] M. Wang, H. Dong, X. Li, L. Song, and\
    \ D. Pang, “A novel parking sys-\ntem designed for smart cities,” Proceedings\
    \ - 2017 Chinese Automation\nCongress, CAC 2017 2017-Janua, 3429–3434 (2017).\n\
    [370] I. Aydin, M. Karakose, and E. Karakose, “A navigation and reservation\n\
    based smart parking platform using genetic optimization for smart cities,”\nICSG\
    \ 2017 - 5th International Istanbul Smart Grids and Cities Congress\nand Fair\
    \ pp. 120–124 (2017).\n[371] F. Ferdous and M. S. Mahmud, “Intelligent traffic\
    \ monitoring system us-\ning vanet infrastructure and ant colony optimization,”\
    \ 2016 5th Interna-\ntional Conference on Informatics, Electronics and Vision,\
    \ ICIEV 2016 pp.\n356–360 (2016). The authors in FF16 use ACO in a smart transportation\n\
    system to efficient route vehicles using VANETS.\n[372] F. Pompei, “Ant colony\
    \ optimisation and geolocation technologies for the\ntransportation assignment\
    \ problem,” Proceedings - International Com-\nputer Software and Applications\
    \ Conference 2, 749–753 (2017). The au-\nthors in FP17 use ACO for planning of\
    \ public transport routes for Rome\nusing Phone data from transit users.\n[373]\
    \ A. Rehman, M. M. Rathore, A. Paul, F. Saeed, and R. W. Ahmad, “Ve-\nhicular\
    \ traffic optimisation and even distribution using ant colony in smart\ncity environment,”\
    \ IET Intelligent Transport Systems 12, 594–601 (2018).\n[374] A. Jovanovi´c and\
    \ D. Teodorovi´c, “Fixed-time traffic control at super-\nstreet intersections\
    \ by bee colony optimization,” Transportation Research\nRecord p. 03611981211058104\
    \ (2021).\n[375] T.-H. Nguyen and J. J. Jung, “Ant colony optimization-based traffic\
    \ rout-\ning with intersection negotiation for connected vehicles,” Applied Soft\n\
    Computing 112, 107828 (2021).\n[376] R. Pitakaso, K. Sethanan, and N. Srijaroon,\
    \ “Modified differential evolu-\ntion algorithms for multi-vehicle allocation\
    \ and route optimization for em-\nployee transportation,” Engineering Optimization\
    \ 52, 1225–1243 (2020).\n[377] Y. Yi, K. Choi, and Y. J. Lee, “Optimal limited-stop\
    \ bus routes selec-\ntion using a genetic algorithm and smart card data,” Journal\
    \ of Public\nTransportation 19, 178–198 (2016).\n[378] A. T. Buba and L. S. Lee,\
    \ “Differential evolution with improved sub-\nroute reversal repair mechanism\
    \ for multiobjective urban transit routing\nproblem,” Numerical Algebra, Control\
    \ and Optimization 8, 351 (2018).\n[379] X. Mao, “Study on ant colony optimization\
    \ algorithm for “one-day tour”\ntraffic line,” Cluster Computing 22, 3673–3680\
    \ (2019).\n[380] A. Jovanovi´c, M. Nikoli´c, and D. Teodorovi´c, “Area-wide urban\
    \ traffic\ncontrol: A bee colony optimization approach,” Transportation Research\n\
    Part C: Emerging Technologies 77, 329–350 (2017).\n163\n[381] K. Hassoune, W.\
    \ Dachry, F. Moutaouakkil, and H. Medromi, “Dynamic\nparking guidance architecture\
    \ using ant colony optimization and multi-\nagent systems,” Journal of Advances\
    \ in Information Technology 11, 58–63\n(2020).\n[382] U. Nations, “World population\
    \ prospects: the 2017 revision, key findings\nand advance tables,” Department\
    \ of Economics and Social Affairs PD,\neditor. New York: United Nations (2017).\n\
    [383] WHO, “Falls : Key facts,” (2018).\n[384] R. Afable,\nB. Averbeck,\nK. Holmen,\n\
    R. Dziedzicki,\nA. Nichols,\nJ. Schlegelmilch, and D. Caruso, “When i’m 64: How\
    \ boomers will change\nhealth care,” (2007).\n[385] M. K. James, M. C. Victor,\
    \ S. M. Saghir, and P. A. Gentile, “Characteri-\nzation of fall patients: Does\
    \ age matter?” Journal of Safety Research 64,\n83–92 (2018).\n[386] J. A. Stevens,\
    \ M. F. Ballesteros, K. A. Mack, R. A. Rudd, E. DeCaro, and\nG. Adler, “Gender\
    \ differences in seeking care for falls in the aged medicare\npopulation,” American\
    \ journal of preventive medicine 43, 59–62 (2012).\n[387] J. Morisod and M. Coutaz,\
    \ “Post-fall syndrome: how to recognize and\ntreat it?” Revue M´edicale Suisse\
    \ 3, 2531–2 (2007).\n[388] K. Chaccour, R. Darazi, A. H. El Hassani, and E. Andres,\
    \ “From fall de-\ntection to fall prevention: A generic classification of fall-related\
    \ systems,”\nIEEE Sensors Journal 17, 812–822 (2016).\n[389] A. L. S. D. Lima,\
    \ L. J. W. Evers, T. Hahn, L. Bataille, J. L. Hamilton,\nM. A. Little, Y. Okuma,\
    \ B. R. Bloem, and M. J. Faber, “Freezing of\ngait and fall detection in parkinson’s\
    \ disease using wearable sensors: a\nsystematic review,” Journal of neurology\
    \ 264, 1642–1654 (2017).\n[390] E. E. Geertsema, G. H. Visser, M. A. Viergever,\
    \ and S. N. Kalitzin,\n“Automated remote fall detection using impact features\
    \ from video and\naudio,” Journal of biomechanics 88, 25–32 (2019).\n[391] P.\
    \ Tsinganos and A. Skodras, “A smartphone-based fall detection system\nfor the\
    \ elderly,” in “Proceedings of the 10th International Symposium on\nImage and\
    \ Signal Processing and Analysis,” (IEEE, 2017), pp. 53–58.\n[392] N. El Halabi,\
    \ R. A. Z. Daou, R. Achkar, A. Hayek, and J. B¨orcs¨ok,\n“Monitoring system for\
    \ prediction and detection of epilepsy seizure,” in\n“2019 Fourth International\
    \ Conference on Advances in Computational\nTools for Engineering Applications\
    \ (ACTEA),” (IEEE, 2019), pp. 1–7.\n[393] J. Fleming and C. Brayne, “Inability\
    \ to get up after falling, subsequent\ntime on floor, and summoning help: prospective\
    \ cohort study in people\nover 90,” Bmj 337 (2008).\n164\n[394] K. Ozcan, A. K.\
    \ Mahabalagiri, M. Casares, and S. Velipasalar, “Auto-\nmatic fall detection and\
    \ activity classification by a wearable embedded\nsmart camera,” IEEE journal\
    \ on emerging and selected topics in circuits\nand systems 3, 125–136 (2013).\n\
    [395] A. Ramachandran and A. Karuppiah, “A survey on recent advances in\nwearable\
    \ fall detection systems,” BioMed research international 2020\n(2020).\n[396]\
    \ Q. Guan, C. Li, X. Guo, and B. Shen, “Infrared signal based elderly fall\ndetection\
    \ for in-home monitoring,” in “2017 9th International Confer-\nence on Intelligent\
    \ Human-Machine Systems and Cybernetics (IHMSC),”\n, vol. 1 (IEEE, 2017), vol.\
    \ 1, pp. 373–376.\n[397] A. Yazar, F. Erden, and A. E. Cetin, “Multi-sensor ambient\
    \ assisted\nliving system for fall detection,” in “Proceedings of the IEEE International\n\
    Conference on Acoustics, Speech, and Signal Processing (ICASSP’14),”\n(2014),\
    \ pp. 1–3.\n[398] S. M. Adnan, A. Irtaza, S. Aziz, M. O. Ullah, A. Javed, and\
    \ M. T. Mah-\nmood, “Fall detection through acoustic local ternary patterns,”\
    \ Applied\nAcoustics 140, 296–300 (2018).\n[399] S. Palipana, D. Rojas, P. Agrawal,\
    \ and D. Pesch, “Falldefi: Ubiquitous\nfall detection using commodity wi-fi devices,”\
    \ Proceedings of the ACM\non Interactive, Mobile, Wearable and Ubiquitous Technologies\
    \ 1, 1–25\n(2018).\n[400] I. Halima, J.-M. Lafert´e, G. Cormier, A.-J. Foug`ere,\
    \ and J.-L. Dillenseger,\n“Depth and thermal information fusion for head tracking\
    \ using particle\nfilter in a fall detection context,” Integrated Computer-Aided\
    \ Engineering\npp. 1–14 (2020).\n[401] Q. Han, H. Zhao, W. Min, H. Cui, X. Zhou,\
    \ K. Zuo, and R. Liu, “A\ntwo-stream approach to fall detection with mobilevgg,”\
    \ IEEE Access 8,\n17556–17566 (2020).\n[402] J. Zhang, C. Wu, and Y. Wang, “Human\
    \ fall detection based on body\nposture spatio-temporal evolution,” Sensors 20,\
    \ 946 (2020).\n[403] R. Gupta, P. Anand, S. Chaudhury, B. Lall, and S. Singh,\
    \ “Compressive\nsensing based privacy for fall detection,” arXiv preprint arXiv:2001.03463\n\
    (2020).\n[404] R. Espinosa, H. Ponce, S. Guti´errez, L. Mart´ınez-Villase˜nor,\
    \ J. Brieva,\nand E. Moya-Albor, “Application of convolutional neural networks\
    \ for fall\ndetection using multiple cameras,” in “Challenges and Trends in Multi-\n\
    modal Fall Detection for Healthcare,” (Springer, 2020), pp. 97–120.\n[405] M.\
    \ T. Pourazad, A. Shojaei-Hashemi, P. Nasiopoulos, M. Azimi, M. Mak,\nJ. Grace,\
    \ D. Jung, and T. Bains, “A non-intrusive deep learning based fall\n165\ndetection\
    \ scheme using video cameras,” in “2020 International Conference\non Information\
    \ Networking (ICOIN),” (IEEE, 2020), pp. 443–446.\n[406] Y. Nizam and M. M. A.\
    \ Jamil, “A novel approach for human fall detection\nand fall risk assessment,”\
    \ in “Challenges and Trends in Multimodal Fall\nDetection for Healthcare,” (Springer,\
    \ 2020), pp. 237–259.\n[407] Z. Liu, M. Yang, Y. Yuan, and K. Y. Kan, “Fall detection\
    \ and person-\nnel tracking system using infrared array sensors,” IEEE Sensors\
    \ Journal\n(2020).\n[408] A. Singh, S. U. Rehman, S. Yongchareon, and P. H. J.\
    \ Chong, “Sensor\ntechnologies for fall detection systems: A review,” IEEE Sensors\
    \ Journal\n20, 6889–6919 (2020).\n[409] M. Hubl, O. Pohl, V. Noack, P. Hahlweg,\
    \ C. Ehm, M. Derleh, T. Wei-\nland, E. Schick, H. M¨uller, D. Hampicke et al.,\
    \ “Embedding of wear-\nable electronics into smart sensor insole,” in “2016 IEEE\
    \ 18th Electronics\nPackaging Technology Conference (EPTC),” (IEEE, 2016), pp.\
    \ 597–601.\n[410] T. Shi, X. Sun, Z. Xia, L. Chen, and J. Liu, “Fall detection\
    \ algorithm\nbased on triaxial accelerometer and magnetometer.” Engineering Letters\n\
    24 (2016).\n[411] S. Hwang, M. Ryu, Y. Yang, and N. Lee, “Fall detection with\
    \ three-axis\naccelerometer and magnetometer in a smartphone,” in “Proceedings\
    \ of\nthe International Conference on Computer Science and Technology, Jeju,\n\
    Korea,” (2012), pp. 25–27.\n[412] X. Xi, M. Tang, S. M. Miran, and Z. Luo, “Evaluation\
    \ of feature extrac-\ntion and recognition for activity monitoring and fall detection\
    \ based on\nwearable semg sensors,” Sensors 17, 1229 (2017).\n[413] P. Melillo,\
    \ R. Castaldo, G. Sannino, A. Orrico, G. De Pietro, and L. Pec-\nchia, “Wearable\
    \ technology and ecg processing for fall risk assessment,\nprevention and detection,”\
    \ in “2015 37th Annual International Confer-\nence of the IEEE Engineering in\
    \ Medicine and Biology Society (EMBC),”\n(IEEE, 2015), pp. 7740–7743.\n[414] K.-C.\
    \ Liu, C.-Y. Hsieh, S. J.-P. Hsu, and C.-T. Chan, “Impact of sampling\nrate on\
    \ wearable-based fall detection systems based on machine learning\nmodels,” IEEE\
    \ Sensors Journal 18, 9882–9890 (2018).\n[415] J. Xu, Z. He, and Y. Zhang, “Cnn-lstm\
    \ combined network for iot enabled\nfall detection applications,” in “Journal\
    \ of Physics: Conference Series,” ,\nvol. 1267 (IOP Publishing, 2019), vol. 1267,\
    \ p. 012044.\n[416] D. Mrozek, A. Koczur, and B. Ma lysiak-Mrozek, “Fall detection\
    \ in older\nadults with mobile iot devices and machine learning in the cloud and\
    \ on\nthe edge,” Information Sciences (2020).\n166\n[417] A. Sucerquia, J. D.\
    \ L´opez, and J. F. Vargas-Bonilla, “Sisfall: A fall and\nmovement dataset,” Sensors\
    \ 17, 198 (2017).\n[418] L. M´arquez-Ordaz and H. Ponce, “Implementation of a\
    \ svm on an embed-\nded system: A case study on fall detection,” in “Mexican International\n\
    Conference on Artificial Intelligence,” (Springer, 2020), pp. 76–87.\n[419] D.\
    \ Sarabia-J´acome, R. Usach, C. Palau, and M. Esteve, “Highly-efficient\nfog-based\
    \ deep learning aal fall detection system,” Internet of Things p.\n100185 (2020).\n\
    [420] N. Zurbuchen, P. Bruegger, and A. Wilde, “A comparison of machine\nlearning\
    \ algorithms for fall detection using wearable sensors,” in “2020 In-\nternational\
    \ Conference on Artificial Intelligence in Information and Com-\nmunication (ICAIIC),”\
    \ (IEEE, 2020), pp. 427–431.\n[421] A. Chelli and M. P¨atzold, “A machine learning\
    \ approach for fall detec-\ntion and daily living activity recognition,” IEEE\
    \ Access 7, 38670–38687\n(2019).\n[422] O. Ojetola, E. Gaura, and J. Brusey, “Data\
    \ set for fall events and daily\nactivities from inertial sensors,” in “Proceedings\
    \ of the 6th ACM multi-\nmedia systems conference,” (2015), pp. 243–248.\n[423]\
    \ D. Anguita, A. Ghio, L. Oneto, X. Parra, and J. L. Reyes-Ortiz, “A public\n\
    domain dataset for human activity recognition using smartphones.” in\n“Esann,”\
    \ , vol. 3 (2013), vol. 3, p. 3.\n[424] O. Kerdjidj, N. Ramzan, K. Ghanem, A.\
    \ Amira, and F. Chouireb, “Fall\ndetection and human activity classification using\
    \ wearable sensors and\ncompressed sensing,” Journal of Ambient Intelligence and\
    \ Humanized\nComputing 11, 349–361 (2020).\n[425] A. Burns, B. R. Greene, M. J.\
    \ McGrath, T. J. O’Shea, B. Kuris, S. M.\nAyer, F. Stroiescu, and V. Cionca, “Shimmer™–a\
    \ wireless sensor platform\nfor noninvasive biomedical research,” IEEE Sensors\
    \ Journal 10, 1527–\n1534 (2010).\n[426] M. Fa˜nez, J. R. Villar, E. de la Cal,\
    \ J. Sedano, and V. M. Gonz´alez,\n“Transfer learning and information retrieval\
    \ applied to fall detection,”\nExpert Systems 37, e12522 (2020).\n[427] E. Casilari,\
    \ J. A. Santoyo-Ram´on, and J. M. Cano-Garc´ıa, “Analysis of\na smartphone-based\
    \ architecture with multiple mobility sensors for fall\ndetection,” PLoS one 11,\
    \ e0168069 (2016).\n[428] J. Lin, E. Keogh, S. Lonardi, and B. Chiu, “A symbolic\
    \ representation of\ntime series, with implications for streaming algorithms,”\
    \ in “Proceedings\nof the 8th ACM SIGMOD workshop on Research issues in data mining\n\
    and knowledge discovery,” (2003), pp. 2–11.\n167\n[429] D. Giuffrida, G. Benetti,\
    \ D. D. Martini, and T. Facchinetti, “Fall detec-\ntion with supervised machine\
    \ learning using wearable sensors,” in “2019\nIEEE 17th International Conference\
    \ on Industrial Informatics (INDIN),”\n, vol. 1 (IEEE, 2019), vol. 1, pp. 253–259.\n\
    [430] E. Casilari, M. ´Alvarez-Marco, and F. Garc´ıa-Lagos, “A study of the use\n\
    of gyroscope measurements in wearable fall detection systems,” Symmetry\n12, 649\
    \ (2020).\n[431] G. L. Santos, P. T. Endo, K. H. d. C. Monteiro, E. d. S. Rocha,\
    \ I. Silva,\nand T. Lynn, “Accelerometer-based human fall detection using convolu-\n\
    tional neural networks,” Sensors 19, 1644 (2019).\n[432] B. Kwolek and M. Kepski,\
    \ “Human fall detection on embedded platform\nusing depth maps and wireless accelerometer,”\
    \ Computer methods and\nprograms in biomedicine 117, 489–501 (2014).\n[433] T.\
    \ R. Mauldin, M. E. Canby, V. Metsis, A. H. Ngu, and C. C. Rivera,\n“Smartfall:\
    \ A smartwatch-based fall detection system using deep learn-\ning,” Sensors 18,\
    \ 3363 (2018).\n[434] K. Simonyan and A. Zisserman, “Very deep convolutional networks\
    \ for\nlarge-scale image recognition,” arXiv preprint arXiv:1409.1556 (2014).\n\
    [435] A. Alarifi and A. Alwadain, “Killer heuristic optimized convolution neural\n\
    network-based fall detection with wearable iot sensor devices,” Measure-\nment\
    \ 167, 108258 (2021).\n[436] M. Waheed, H. Afzal, and K. Mehmood, “Nt-fds—a noise\
    \ tolerant fall\ndetection system using deep learning on wearable devices,” Sensors\
    \ 21,\n2006 (2021).\n[437] L. Mart´ınez-Villase˜nor, H. Ponce, J. Brieva, E. Moya-Albor,\
    \ J. N´u˜nez-\nMart´ınez, and C. Pe˜nafort-Asturiano, “Up-fall detection dataset:\
    \ A mul-\ntimodal approach,” Sensors 19, 1988 (2019).\n[438] E. Casilari, R. Lora-Rivera,\
    \ and F. Garc´ıa-Lagos, “A study on the appli-\ncation of convolutional neural\
    \ networks to fall detection evaluated with\nmultiple public datasets,” Sensors\
    \ 20, 1466 (2020).\n[439] R. Delgado-Escano, F. M. Castro, J. R. C´ozar, M. J.\
    \ Mar´ın-Jim´enez,\nN. Guil, and E. Casilari, “A cross-dataset deep learning-based\
    \ classifier\nfor people fall detection and identification,” Computer methods\
    \ and pro-\ngrams in biomedicine 184, 105265 (2020).\n[440] C. Medrano, R. Igual,\
    \ I. Plaza, and M. Castro, “Detecting falls as novelties\nin acceleration patterns\
    \ acquired with smartphones,” PloS one 9, e94811\n(2014).\n[441] D. Micucci, M.\
    \ Mobilio, and P. Napoletano, “Unimib shar: A dataset for\nhuman activity recognition\
    \ using acceleration data from smartphones,”\nApplied Sciences 7, 1101 (2017).\n\
    168\n[442] A. T. ¨Ozdemir, “An analysis on sensor locations of the human body\
    \ for\nwearable fall detection devices: Principles and practice,” Sensors 16,\
    \ 1161\n(2016).\n[443] M. Tolkiehn, L. Atallah, B. Lo, and G.-Z. Yang, “Direction\
    \ sensitive\nfall detection using a triaxial accelerometer and a barometric pressure\n\
    sensor,” in “2011 Annual international conference of the IEEE engineering\nin\
    \ medicine and biology society,” (IEEE, 2011), pp. 369–372.\n[444] B. Watanapa,\
    \ O. Patsadu, P. Dajpratham, and C. Nukoolkit, “Post-fall\nintelligence supporting\
    \ fall severity diagnosis using kinect sensor,” Ap-\nplied Computational Intelligence\
    \ and Soft Computing 2018 (2018).\n[445] H. Jung, B. Koo, J. Kim, T. Kim, Y. Nam,\
    \ and Y. Kim, “Enhanced\nalgorithm for the detection of preimpact fall for wearable\
    \ airbags,” Sensors\n20, 1277 (2020).\n[446] B. Koo, J. Kim, Y. Nam, and Y. Kim,\
    \ “The performance of post-fall de-\ntection using the cross-dataset: Feature\
    \ vectors, classifiers and processing\nconditions,” Sensors 21, 4638 (2021).\n\
    [447] C.-Y. Hsieh, H.-Y. Huang, K.-C. Liu, C.-P. Liu, C.-T. Chan, and S. J.-P.\n\
    Hsu, “Multiphase identification algorithm for fall recording systems using\na\
    \ single wearable inertial sensor,” Sensors 21, 3302 (2021).\n[448] M. Musci,\
    \ D. De Martini, N. Blago, T. Facchinetti, and M. Piastra,\n“Online fall detection\
    \ using recurrent neural networks,” arXiv preprint\narXiv:1804.04976 (2018).\n\
    [449] X. Yu, H. Qiu, and S. Xiong, “A novel hybrid deep neural network to pre-\n\
    dict pre-impact fall for older people based on wearable inertial sensors,”\nFrontiers\
    \ in bioengineering and biotechnology 8 (2020).\n[450] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Detection of fall direction using\na velocity vector in the android\
    \ smartphone environment,” Journal of\nthe Korea Institute of Information and\
    \ Communication Engineering 19,\n336–342 (2015).\n[451] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Fall direction detection using the\ncomponents of acceleration\
    \ vector and orientation sensor on the smart-\nphone environment,” Journal of\
    \ Korea Multimedia Society 18, 565–574\n(2015).\n[452] J. K. Lee, “Determination\
    \ of fall direction before impact using support\nvector machine,” Journal of Sensor\
    \ Science and Technology 24, 47–53\n(2015).\n[453] S. F. Hossain, M. Z. Islam,\
    \ and M. L. Ali, “Real time direction-sensitive\nfall detection system using accelerometer\
    \ and learning classifier,” in\n“2017 4th International Conference on Advances\
    \ in Electrical Engineering\n(ICAEE),” (IEEE, 2017), pp. 99–104.\n169\n[454] F.\
    \ Hossain, M. L. Ali, M. Z. Islam, and H. Mustafa, “A direction-sensitive\nfall\
    \ detection system using single 3d accelerometer and learning classifier,”\nin\
    \ “2016 International Conference on Medical Engineering, Health Infor-\nmatics\
    \ and Technology (MediTec),” (IEEE, 2016), pp. 1–6.\n[455] L. Palmerini, J. Klenk,\
    \ C. Becker, and L. Chiari, “Accelerometer-based\nfall detection using machine\
    \ learning: Training and testing on real-world\nfalls,” Sensors 20, 6479 (2020).\n\
    [456] R. M. Gibson, A. Amira, N. Ramzan, P. C. de-la Higuera, and Z. Pervez,\n\
    “Multiple comparator classifier framework for accelerometer-based fall de-\ntection\
    \ and diagnostic,” Applied Soft Computing 39, 94–103 (2016).\n[457] F. Hussain,\
    \ F. Hussain, M. Ehatisham-ul Haq, and M. A. Azam,\n“Activity-aware fall detection\
    \ and recognition based on wearable sensors,”\nIEEE Sensors Journal 19, 4528–4536\
    \ (2019).\n[458] H. Li, A. Shrestha, H. Heidari, J. Le Kernec, and F. Fioranelli,\
    \ “Bi-lstm\nnetwork for multimodal continuous human activity recognition and fall\n\
    detection,” IEEE Sensors Journal 20, 1191–1201 (2019).\n[459] X. Wu, Y. Zheng,\
    \ C.-H. Chu, L. Cheng, and J. Kim, “Applying deep\nlearning technology for automatic\
    \ fall detection using mobile sensors,”\nBiomedical Signal Processing and Control\
    \ 72, 103355 (2022).\n[460] G. Vavoulas, C. Chatzaki, T. Malliotakis, M. Pediaditis,\
    \ and M. Tsik-\nnakis, “The mobiact dataset: Recognition of activities of daily\
    \ living using\nsmartphones.” in “ICT4AgeingWell,” (2016), pp. 143–151.\n[461]\
    \ G.\nS¸eng¨ul,\nM.\nKarakaya,\nS.\nMisra,\nO.\nO.\nAbayomi-Alli,\nand\nR. Damaˇseviˇcius,\
    \ “Deep learning based fall detection using smartwatches\nfor healthcare applications,”\
    \ Biomedical Signal Processing and Control\n71, 103242 (2022).\n[462] H.-L. Le,\
    \ D.-N. Nguyen, T.-H. Nguyen, and H.-N. Nguyen, “A novel fea-\nture set extraction\
    \ based on accelerometer sensor data for improving the\nfall detection system,”\
    \ Electronics 11, 1030 (2022).\n[463] H. Yhdego, J. Li, C. Paolini, and M. Audette,\
    \ “Wearable sensor gait\nanalysis of fall detection using attention network,”\
    \ in “2021 IEEE Inter-\nnational Conference on Bioinformatics and Biomedicine\
    \ (BIBM),” (IEEE,\n2021), pp. 3137–3141.\n[464] M. Liu, S. Ren, S. Ma, J. Jiao,\
    \ Y. Chen, Z. Wang, and W. Song, “Gated\ntransformer networks for multivariate\
    \ time series classification,” arXiv\npreprint arXiv:2103.14438 (2021).\n[465]\
    \ X. Yu, J. Jang, and S. Xiong, “A large-scale open motion dataset (kfall)\nand\
    \ benchmark algorithms for detecting pre-impact fall of the elderly\nusing wearable\
    \ inertial sensors,” Frontiers in Aging Neuroscience p. 399\n(2021).\n170\n[466]\
    \ J. A. Santoyo-Ram´on, E. Casilari, and J. M. Cano-Garc´ıa, “A study of\none-class\
    \ classification algorithms for wearable fall sensors,” Biosensors\n11 (2021).\n\
    [467] N. Zurbuchen, A. Wilde, and P. Bruegger, “A machine learning multi-\nclass\
    \ approach for fall detection systems based on wearable sensors with\na study\
    \ on sampling rates selection,” Sensors 21, 938 (2021).\n[468] M. Musci, D. De\
    \ Martini, N. Blago, T. Facchinetti, and M. Piastra, “On-\nline fall detection\
    \ using recurrent neural networks on smart wearable de-\nvices,” IEEE Transactions\
    \ on Emerging Topics in Computing 9, 1276–\n1289 (2020).\n[469] E. Boutellaa,\
    \ K. Ghanem, H. Tayakout, O. Kerdjidj, F. Harizi, and\nS. Bourennane, “A tensor\
    \ approach for activity recognition and fall de-\ntection using wearable inertial\
    \ sensors,” in “2020 First International Con-\nference of Smart Systems and Emerging\
    \ Technologies (SMARTTECH),”\n(IEEE, 2020), pp. 203–207.\n[470] S. Rosati, G.\
    \ Balestra, and M. Knaflitz, “Comparison of different sets of\nfeatures for human\
    \ activity recognition by wearable sensors,” Sensors 18,\n4189 (2018).\n[471]\
    \ J. O. Smith, Mathematics of the discrete Fourier transform (DFT): with\naudio\
    \ applications (Julius Smith, 2007).\n[472] M. A. O’Reilly, W. Johnston, C. Buckley,\
    \ D. Whelan, and B. Caulfield,\n“The influence of feature selection methods on\
    \ exercise classification with\ninertial measurement units,” in “2017 IEEE 14th\
    \ International Conference\non Wearable and Implantable Body Sensor Networks (BSN),”\
    \ (IEEE,\n2017), pp. 193–196.\n[473] A. Liaw, M. Wiener et al., “Classification\
    \ and regression by randomfor-\nest,” R news 2, 18–22 (2002).\n[474] O. Rioul\
    \ and M. Vetterli, “Wavelets and signal processing,” IEEE signal\nprocessing magazine\
    \ 8, 14–38 (1991).\n[475] M. G. Abdu-Aguye and W. Gomaa, “Competitive feature\
    \ extraction for\nactivity recognition based on wavelet transforms and adaptive\
    \ pooling,”\nin “2019 International Joint Conference on Neural Networks (IJCNN),”\n\
    (IEEE, 2019), pp. 1–8.\n[476] ¨U. Lepik and H. Hein, “Haar wavelets,” in “Haar\
    \ Wavelets,” (Springer,\n2014), pp. 7–20.\n[477] K. He, X. Zhang, S. Ren, and\
    \ J. Sun, “Spatial pyramid pooling in deep\nconvolutional networks for visual\
    \ recognition,” IEEE transactions on pat-\ntern analysis and machine intelligence\
    \ 37, 1904–1916 (2015).\n171\n[478] C. N. Silla and A. A. Freitas, “A survey of\
    \ hierarchical classification across\ndifferent application domains,” Data Mining\
    \ and Knowledge Discovery\n22, 31–72 (2011).\n[479] S. B. Khojasteh, J. R. Villar,\
    \ C. Chira, V. M. Gonz´alez, and E. De la\nCal, “Improving fall detection using\
    \ an on-wrist wearable accelerometer,”\nSensors 18, 1350 (2018).\n[480] Q. T.\
    \ Huynh and B. Q. Tran, “Time-frequency analysis of daily activities\nfor fall\
    \ detection,” Signals 2, 1–12 (2021).\n[481] J. Wang, X. Zhang, Q. Gao, X. Ma,\
    \ X. Feng, and H. Wang, “Device-free si-\nmultaneous wireless localization and\
    \ activity recognition with wavelet fea-\nture,” IEEE Transactions on Vehicular\
    \ Technology 66, 1659–1669 (2016).\n[482] C. Ellouzi and M. Trkov, “Fast trip\
    \ detection using continuous wavelet\ntransform,” in “Proceedings of the Poster,\
    \ Dynamic Walking Conference,”\n(2021).\n[483] J. Gu, Z. Wang, J. Kuen, L. Ma,\
    \ A. Shahroudy, B. Shuai, T. Liu, X. Wang,\nG. Wang, J. Cai et al., “Recent advances\
    \ in convolutional neural net-\nworks,” Pattern Recognition 77, 354–377 (2018).\n\
    [484] D. Bhatt, C. Patel, H. Talsania, J. Patel, R. Vaghela, S. Pandya, K. Modi,\n\
    and H. Ghayvat, “Cnn variants for computer vision: History, architecture,\napplication,\
    \ challenges and future scope,” Electronics 10, 2470 (2021).\n[485] S. P. Singh,\
    \ L. Wang, S. Gupta, H. Goli, P. Padmanabhan, and B. Guly´as,\n“3d deep learning\
    \ on medical images: a review,” Sensors 20, 5097 (2020).\n[486] S. Latif, R. Rana,\
    \ S. Khalifa, R. Jurdak, J. Qadir, and B. W. Schuller,\n“Survey of deep representation\
    \ learning for speech emotion recognition,”\nIEEE Transactions on Affective Computing\
    \ (2021).\n[487] F. G. Pratic`o, R. Fedele, V. Naumov, and T. Sauer, “Detection\
    \ and mon-\nitoring of bottom-up cracks in road pavement using a machine-learning\n\
    approach,” Algorithms 13, 81 (2020).\n[488] K. Saho, S. Hayashi, M. Tsuyama, L.\
    \ Meng, and M. Masugi, “Machine\nlearning-based classification of human behaviors\
    \ and falls in restroom via\ndual doppler radar measurements,” Sensors 22, 1721\
    \ (2022).\n[489] J. Kakarla, B. V. Isunuri, K. S. Doppalapudi, and K. S. R. Byla-\n\
    pudi, “Three-class classification of brain magnetic resonance images using\naverage-pooling\
    \ convolutional neural network,” International Journal of\nImaging Systems and\
    \ Technology 31, 1731–1740 (2021).\n[490] J. Yang, F. Xie, H. Fan, Z. Jiang, and\
    \ J. Liu, “Classification for der-\nmoscopy images using convolutional neural\
    \ networks based on region av-\nerage pooling,” IEEE Access 6, 65130–65138 (2018).\n\
    172\n[491] M. H. Mohd Noor, S. Y. Tan, and M. N. Ab Wahab, “Deep temporal\nconv-lstm\
    \ for activity recognition,” Neural Processing Letters pp. 1–23\n(2022).\n[492]\
    \ M. I. Amara, A. Akkouche, E. Boutellaa, and H. Tayakout, “A smart-\nphone application\
    \ for fall detection using accelerometer and convlstm\nnetwork,” in “2020 2nd\
    \ International Workshop on Human-Centric Smart\nEnvironments for Health and Well-being\
    \ (IHSH),” (IEEE, 2021), pp. 92–\n96.\n[493] J. Du, Z. Zhang, M. Li, J. Guo, and\
    \ K. Zhu, “Optimal scheduling of\nintegrated energy system based on improved grey\
    \ wolf optimization algo-\nrithm,” Scientific Reports 12, 1–19 (2022).\n[494]\
    \ N. Mazyavkina, S. Sviridov, S. Ivanov, and E. Burnaev, “Reinforcement\nlearning\
    \ for combinatorial optimization: A survey,” Computers & Oper-\nations Research\
    \ 134, 105400 (2021).\n173\nAppendix A: Sample Plots for different fall categories\n\
    Sample plots of the windowed accelerometer and gyroscope measurements of\ndifferent\
    \ fall types.\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n\
    500\n0\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n-10,000\n\
    -8000\n-6000\n-4000\n-2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n-10,000\n-8000\n-6000\n-4000\n-2000\n0\n2000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n1200\n1000\n800\n\
    600\n400\n200\n0\n200\n400\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n2000\n0\n2000\n4000\n6000\n8000\nAmplitude\nGyro Z\nForward Hard Fall\n\
    Figure 1. Accelerometer and Gyroscope measurements: Forward Hard Fall\n174\n0\n\
    100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n0\nAmplitude\n\
    Acc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n\
    500\n1000\n1500\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    200\n100\n0\n100\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n4000\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n400\n300\n200\n100\n0\nAmplitude\nAcc Z\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro Z\nForward Soft Fall\nFigure 2. Accelerometer and Gyroscope measurements:\
    \ Forward Soft Fall\n175\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n2000\n0\n2000\n4000\n6000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n2000\n1500\n1000\n500\n0\n500\nAmplitude\nAcc Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro\
    \ Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n200\n0\n200\n400\n600\n800\n\
    Amplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n500\n0\n500\n\
    1000\n1500\nAmplitude\nGyro Z\nBackward Hard Fall\nFigure 3. Accelerometer and\
    \ Gyroscope measurements: Backward Hard Fall\n176\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n600\n500\n400\n300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n\
    0\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\n600\nAmplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n300\n200\n100\n0\n100\n200\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\n800\n1000\nAmplitude\nGyro\
    \ Z\nBackward Soft Fall\nFigure 4. Accelerometer and Gyroscope measurements:f\
    \ Backward Soft Fall\n177\n0\n100\n200\n300\n400\n500\n600\nSample no\n1750\n\
    1500\n1250\n1000\n750\n500\n250\n0\n250\nAmplitude\nAcc X\n0\n100\n200\n300\n\
    400\n500\n600\nSample no\n6000\n4000\n2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n\
    0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n250\n200\n150\n\
    100\n50\n0\n50\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    1000\n0\n1000\n2000\n3000\n4000\n5000\n6000\n7000\nAmplitude\nGyro Z\nLateral\
    \ Hard Fall\nFigure 5. Accelerometer and Gyroscope measurements: Lateral Hard\
    \ Fall\n178\n0\n100\n200\n300\n400\n500\n600\nSample no\n700\n600\n500\n400\n\
    300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro X\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n1500\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n150\n100\n50\n\
    0\n50\n100\n150\n200\n250\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n1000\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro Z\n\
    Lateral Soft Fall \nFigure 6. Acclerometer and Gyroscope measurements: Lateral\
    \ Soft Fall\n179\nAppendix B: Acronyms\nABC - Artificial Bee Colony\nACO - Ant\
    \ Colony Optimization\nAdaBoost - Adaptive Boosting\nADL - Activity of Daily Living\n\
    AI - Artificial intelligence\nANN - Artificial Neural Networks\nBi-LSTM - Bi-Directional\
    \ Long Short-Term Memory\nCERT - Computer Emergency Response Team\nCNN - Convolutional\
    \ Neural Networks\nCO - Carbon Monoxide\nCO2 - Carbon Dioxide\nDARPA - Defense\
    \ Advanced Research Projects Agency\nDDOS - Distributed Denial of Service\nDE\
    \ - Differential Evolution\nDER - Distributed energy resource\nDOS - Denial of\
    \ Service\nDL – Deep Learning\nDLEFN - Deep Learning Entrusted to Fog Nodes\n\
    DNN - Deep Neural Networks\nDT - Decision Tree\nEBT - Ensemble Bagged Tree\nEC\
    \ - Ensemble Classifier\nECG - ElectroCardioGram\nEEG - ElectroEncepheloGram\n\
    EMG – ElectroMyoGram\nETSI - European Telecommunications Standards Institute\n\
    FANs - Field Area Networks\nFDS - Fall Detection System\nFN - False Negative\n\
    GA - Genetic Algorithm\nGRU - Gated Recurrent Units\nGSM - Global System for Mobile\
    \ Communications\nHANs - Home Area Networks\nICT - information and communication\
    \ technologies\nIEEE - Institute of Electrical and Electronic Engineers\nIETF\
    \ - Internet Engineering Task Force\nIQ Range - Interquartile Range\nIMU – Inertial\
    \ Measurement Unit\n180\nIoT - Internet of Things\nISM - Industrial, Scientific\
    \ and Medical\nK-NN - K-Nearest Neighbor\nLDA - Linear Discriminant Analysis\n\
    Li-Fi - Light Fidelity\nLoRaWAN - Long Range Wide Area Network\nLPWAN - Low Power\
    \ Wide Area Network\nLR - Logistic Regression\nLSDVRP - Large-scale Dynamic Vehicle\
    \ Routing Problem\nLSTM - Long Short-Term Machine\nLTE - Long-Term Evolution\n\
    MITM - Man in the Middle\nML - Machine Learning\nMVRP - Multidepot Vehicle Routing\
    \ Problem\nNANs - Neighborhood Area Networks\nNB - Naive Bayes\nNB-IoT - Narrow\
    \ Band IoT\nNFC - Near Field Communication\nOSP - Optimal Sensor Placement\nPCA\
    \ - Principal Component Analysis\nPIR - Passive InfraRed\nPMU - Phase Measurement\
    \ Units\nPSD - Power Spectral Density\nPSE - Power Spectral Entropy\nPSO - Particle\
    \ Swarm Optimization\nPPCA - Probabilistic Principal Component Analysis\nPV -\
    \ photo voltaic\nP2I - Pedestrian to Infrastructure\nQSVM - Quadratic Support\
    \ Vector Machine\nRBF - Radial Basis Function\nRF – Radio Frequency\nRFC - Random\
    \ Forest Classifier\nRFID - Radio Frequency Identification\nRF-RFE - Random Forest\
    \ Recursive Feature Elimination\nRMS - Root Mean Squared\nRNN - Recurrent Neural\
    \ Networks\nSAE - Stacked Autoencoder Networks\nSAX - Symbolic Aggregate Approximation\n\
    SHM - Structural Health Monitoring\nSMV - Signal Magnitude Vector\nSWOT - Strength\
    \ Weaknesses Opportunities Threat\nSVM - Support Vector Machine\nTLS - Transport\
    \ Layer Security\nTP - True Positive\nVANET - Vehicular Adhoc NETworks\n181\n\
    VM - Voting machine\nVRP - Vehicle Routing Problem\nVRPPDTW - Vehicle Routing\
    \ Problem Pick-up and Delivery with Time Win-\ndows\nV2V - Vehicle to Vehicle\n\
    V2I - Vehicle to Infrastructure\nV2P - Vehicle to Pedestrian\nWANs - Wide Area\
    \ Networks\nWi-Fi - Wireless Fidelity\nWi-SUN - Wireless Smart Utility Network\n\
    WPA2 - Wi-Fi Protected Access 2\nWSNs - wireless sensor networks\nXGBoost - Extreme\
    \ Gradient Boost\nZ-Wave - Zensys Wave\n182\nCURRICULUM VITA\nNAME:\nMuhammmad\
    \ Zaigham Abbas Shah Syed\nADDRESS:\nComputer Science and Engineering Department\n\
    J.B Speed School of Engineering\nUniversity of Louisville\nLouisville, KY 40292\n\
    United States of America.\n2022\nUniversity of Louisville, Louisville, KY, USA.\n\
    M.Sc. in Electronic and Electrical Engineering, Novem-\nber 2013\nUniversity of\
    \ Strathclyde, Glasgow, United King-\ndom\nB.Eng in Electronics Engineering, March\
    \ 2010\nMehran University of Engineering and Technol-\nogy, Jamshoro, Pakistan\n\
    WORK\nEX-\nPERIENCE:\nGraduate Assistant, Innovative Technologies Lab,\nUniversity\
    \ of Louisville, KY, USA, 2022\n183\nPh.D., Computer Science & Engineering, December\n\
    EDUCATION:\nPUBLICATIONS:\nJOURNAL\n1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup\
    \ Kumar, and Adel Elmaghraby.\nIoT in smart cities: a survey of technologies,\
    \ practices and challenges. Smart Cities,\nvol. 4, no. 2, pp. 429–475, 2021\n\
    2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nMaking\
    \ Cities Smarter—Optimization Problems for the IoT Enabled Smart City\nDevelopment:\
    \ A Mapping of Applications, Objectives, Constraints.Sensors, vol. 22,\nno. 12,\
    \ p. 4380, 2022\n3. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel\
    \ Elmaghraby. A\nhierarchical approach to activity recognition and fall detection\
    \ using wavelets and\nadaptive pooling.Sensors, vol. 21, no. 19, p. 6653, 2021\n\
    4. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby. A\ndeep\
    \ convolutional neural network-XGB for direction and severity aware fall detec-\n\
    tion and activity recognition.Sensors, vol. 22, no. 7, p. 2547, 2022\nCONFERENCE\n\
    1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nCross\
    \ dataset non-binary fall detection using a ConvLSTM-attention network. (ac-\n\
    cepted at IEEE GlobeCOM 2022).\n2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar,\
    \ and Adel Elmaghraby.\nDetermining Fall direction and severity using SVMs.2020\
    \ IEEE International Sym-\nposium on Signal Processing and Information Technology\
    \ (ISSPIT),2020, pp. 1–7.\n184\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ir.library.louisville.edu/cgi/viewcontent.cgi?article=5278&context=etd
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: IoT in smart communities, technologies and applications.
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
