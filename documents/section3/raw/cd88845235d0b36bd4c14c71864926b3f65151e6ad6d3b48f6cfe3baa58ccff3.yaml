- DOI: https://doi.org/10.1016/j.jclepro.2016.10.006
  analysis: '>'
  authors:
  - Biljana Risteska Stojkoska
  - Kire Trivodaliev
  citation_count: 965
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Review methodology 3.
    In-depth analysis of literature 4. Challenges and solutions 5. Conclusions References
    Show full outline Cited by (1019) Figures (5) Tables (6) Table 1 Table 2 Table
    3 Table 4 Table 5 Table 6 Journal of Cleaner Production Volume 140, Part 3, 1
    January 2017, Pages 1454-1464 Review A review of Internet of Things for smart
    home: Challenges and solutions Author links open overlay panel Biljana L. Risteska
    Stojkoska, Kire V. Trivodaliev Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.jclepro.2016.10.006
    Get rights and content Highlights • A review of state-of-the-art Internet of Things
    applications for smart grid and home. • Definition of smart home holistic framework
    with key features from literature review. • General description of a smart home
    management model based on the holistic framework. • Discussion of current and
    future challenges for Internet of Things based solutions. Abstract Although Internet
    of Things (IoT) brings significant advantages over traditional communication technologies
    for smart grid and smart home applications, these implementations are still very
    rare. Relying on a comprehensive literature review, this paper aims to contribute
    towards narrowing the gap between the existing state-of-the-art smart home applications
    and the prospect of their integration into an IoT enabled environment. We propose
    a holistic framework which incorporates different components from IoT architectures/frameworks
    proposed in the literature, in order to efficiently integrate smart home objects
    in a cloud-centric IoT based solution. We identify a smart home management model
    for the proposed framework and the main tasks that should be performed at each
    level. We additionally discuss practical design challenges with emphasis on data
    processing, as well as smart home communication protocols and their interoperability.
    We believe that the holistic framework ascertained in this paper can be used as
    a solid base for the future developers of Internet of Things based smart home
    solutions. Previous article in issue Next article in issue Keywords Internet of
    ThingsSmart homeHolistic frameworkSmart grid 1. Introduction With the expected
    growth in world population, the demand for energy will continuously increase.
    Current power grids were built decades ago, and despite the fact that they are
    regularly upgraded, their capability to fulfill future demands is uncertain. Existing
    reserves of fossil fuels are limited and impose harmful emissions, making social
    and environmental implications and impact inevitable. The result of this current
    state is the transition of the traditional centralized grid towards a distributed
    hybrid energy generation system that heavily relies on renewable energy sources,
    such as wind and solar systems (Lund et al., 2015), biomass, fuel cells, and tidal
    power. Smart grid is a concept that integrates information and communication technologies
    (ICT) with grid power systems, in order to achieve efficient and intelligent energy
    generation and consumption (Iyer and Agrawal, 2010). It is characterized by a
    two-way flow of both electricity and information. Approaches in smart grid include
    novel solutions that would effectively exploit the existing power grid in order
    to reduce or eliminate blackouts, voltage sags and overloads. Utilities could
    benefit, as the load demand in critical situations would decrease. If demand is
    greater than the total generation, these systems could prevent the grid failure
    or major blackouts, and increase the reliability, quality, security and safety
    of the power grid. Smart grid solutions can be applied in every part of the grid:
    production, transmission and distribution. Recently, a fourth part of the smart
    grid, i.e. the smart home has become a major (mainstream) research and application
    interest in smart grid. Smart home refers to the use of ICT in home control, ranging
    from controlling appliances to automation of home features (windows, lighting,
    etc.). A key element of the smart home is the usage of intelligent power scheduling
    algorithms, which will provide residents with the ability to make optimal, a priori
    choices about how to spent electricity in order to decrease energy consumption.
    Another term commonly used is smart house or home automation. The combination
    of information technologies and advanced communication and sensing systems, creates
    a variety of new potential applications. New advanced concepts, such as pervasive
    or ubiquitous computing (Greenfield, 2006), where computing is made to appear
    everywhere and anywhere, hold a huge potential for application in smart grid (Parikh
    et al., 2010). Smart devices or objects, capable of communication and computation,
    ranging from simple sensor nodes to home appliances and sophisticated smart phones
    are present everywhere around us. The heterogeneous network composing of such
    objects comes under the umbrella of a concept with a fast growing popularity,
    referred to as Internet of Things (IoT). IoT represents a worldwide network of
    uniquely addressable interconnected objects. According to Gubbi et al. (2013),
    IoT is an “interconnection of sensing and actuating devices providing the ability
    to share information across platforms through a unified framework, developing
    a common operating picture for enabling innovative applications. This is achieved
    by seamless ubiquitous sensing, data analytics and information representation
    with Cloud computing as the unifying framework.” Therefore, the Internet of Things
    aims to improve one''s comfort and efficiency, by enabling cooperation among smart
    objects. The standard IoT usually consists of many Wireless Sensor Networks (WSN)
    and Radio-frequency identification (RFID) devices. Wireless Sensor Network is
    a paradigm that was tremendously explored by the research community in the last
    two decades (Oppermann et al., 2014). A WSN consists of smart sensing devices
    that can communicate through direct radio communication. RFID devices are not
    as sophisticated. They mainly consist of two parts: an integrated circuit with
    some computational capabilities and an antenna for communication. The concept
    of IoT, combined with smart metering, has the potential to transform residential
    houses, homes and offices into energy-aware environments. There is an increasing
    interest in the research community to incorporate the IoT paradigm in the smart
    grid concept, particularly in smart home solutions. The trends of web search popularity
    for the terms: Internet of Things, Smart Grid and Smart Home since 2004 are shown
    in Fig. 1. According to these statistics by Google, the trends will further increase
    for the terms Internet of Things and Smart Home. Download : Download high-res
    image (179KB) Download : Download full-size image Fig. 1. Interest over time according
    to Google trends since 2004 for terms Internet of Things, Smart Grid and Smart
    Home. In this paper, we present a holistic approach to the integration of state-of-the-art
    IoT (or near IoT) solutions into the smart home, taking into account both home
    energy management considerations and architectural challenges and solutions with
    emphasis on data processing issues, networking and interoperability features of
    smart home protocols. For this purpose, we surveyed the IoT frameworks present
    in the literature, analyzed these state-of-the-art solutions and defined challenges
    for future research. Section two presents the methodology used in this paper in
    order to select the most appropriate recent developments as published in the literature
    covering the topics of Internet of Things, smart grid, and smart home. The in-depth
    analysis of the results, as identified by our methodology, is given in Section
    3. Our analysis is conducted in a threefold manner. Initially, possible and existing
    IoT and near IoT applications are analyzed in view of different parts of the smart
    grid where such solutions are and/or can be applied, with focus on the smart home.
    Afterwards, a generalization is given of the existing solutions in a new generic
    holistic framework that incorporates key features from the literature review as
    identified by our methodology. The analysis is concluded by overviewing a general
    smart home management model for the IoT based holistic framework by defining its
    integral levels and their main tasks as observed in the analyzed state-of-the-art
    solutions. The fourth section discusses challenges associated with IoT constrained
    resources (energy, memory capacity and processing capabilities), along with networking,
    interoperability issues, big data analyses, security and privacy. An overview
    of useful guidelines and solutions needed to face these challenges is given. Finally,
    this paper is concluded in the fifth section. 2. Review methodology This section
    presents the methodology used in the paper in order to select the most appropriate
    recent developments as published in the literature covering the topics of Internet
    of Things, smart grid, and smart home. The literature was searched using the online
    service Google Scholar (GS) (https://scholar.google.com/). The main advantages
    of using GS as opposed to other similar resources like Scopus and Web of Science
    are freedom, ease of use, and a broader universe of cited and citing items (Franceschet,
    2010). Google Scholar has a high coverage for high quality studies, is highly
    sensitive and could be the first, and even more so a standalone choice for systematic
    reviews or meta-analysis (Gehanno et al., 2013). Only publications, excluding
    patents and citations were searched. All results provided by GS were sorted according
    to their relevance. Google Scholar''s ranking algorithm relies heavily on an article''s
    citation count, but also puts a high weighting on words in the title (Beel and
    Gipp, 2009). Currently GS does not search for synonyms of queried keywords; hence,
    all synonyms have to be rewritten and queried separately. Only publications between
    years 2010 and 2016 were considered. Papers prior to 2010 were not considered
    since most of the advances in this area have happened within the last few years
    (GS retrieves 130 publications with keyword “Internet of Things” in the title
    published before 2010, and 7650 publication published after 2010), which is in
    line with the Google trends as shown in Fig. 1. The following terms were allowed:
    “Wireless Sensor Network”, “Internet of Things”, “IoT”, “Smart Grid”, “Smart Home”
    and “Home Automation” to appear anywhere in the text of the publications. We consider
    the terms “Home Automation” and “Smart Home” to be synonyms, as well as the terms
    “IoT”, “Internet of Things” and “Wireless Sensor Networks” (since Wireless Sensor
    Networks together with RFID are the two main technologies which enable the development
    of IoT). Most of the research challenges in IoT have its origin in WSN; hence,
    some of the IoT solutions are simply borrowed from WSN (Mainetti et al., 2011).
    The general query form we use is “term1” AND “term2” AND “term3”, where term1
    = (“Wireless Sensor Networks” OR “Internet of Things” OR “IoT”), term2 = (“Smart
    Home” OR “Home Automation”), and term3 = “Smart Grid”, and thus perform six searches.
    The queries and the total number of publications retrieved by GS are given in
    Table 1. Table 1. Number of publications found by GS engine for different queries.
    Query# Term1 Term2 Term3 Total number of results Query 1 “Wireless Sensor Network”
    “Smart Home” “Smart Grid” 919 Query 2 “Wireless Sensor Network” “Home Automation”
    “Smart Grid” 775 Query 3 “Internet of Things” “Smart Home” “Smart Grid” 1430 Query
    4 “Internet of Things” “Home Automation” “Smart Grid” 1000 Query 5 “IoT” “Smart
    Home” “Smart Grid” 1050 Query 6 “IoT” “Home Automation” “Smart Grid” 747 Only
    the first 100 results per query were considered for further analysis in this paper.
    There are overlaps between the result sets of the different queries so the final
    set of unique publications is around 150. For example, if we consider only the
    top 20 results there are a total of 74 unique publications, with multiple publications
    appearing in the results of more than one query. Fig. 2 shows the number of these
    overlaps, and additionally the average GS ranking for each group are given (e.g.
    papers that appear in the results of a single query have an average ranking of
    12.54). Download : Download high-res image (203KB) Download : Download full-size
    image Fig. 2. Total number of publications appearing in the top 20 results for
    the six queries. The number associated with each bar refers to the average ranking
    of the publications in the group. The unique set of publications was further filtered
    content-wise i.e. whether the publication has pertinent material regarding wireless
    sensor networks or Internet of Things solution/s for smart home and/or smart grid.
    First a number of papers were excluded based on the content of their abstract.
    Next, we considered the whole text of the remaining papers and retained only those
    in line with our review. The final remaining papers were analyzed in-depth. The
    finding is that the papers can be semantically divided in two main categories:
    WSN solutions and IoT concepts. The first category includes papers that provide
    real-life working implementations of WSN in different domains like habitat monitoring,
    home monitoring, etc. They can be considered the seeds of future IoT applications.
    The papers in the second category revolve around the IoT paradigm and provide
    concepts, frameworks, visions, and challenges of future “to be implemented” IoT
    solutions. Hence, this work separately elaborates the papers in the two categories
    in the forthcoming Section (3). We firstly expatiate on papers in context of WSN
    implementations (3.1), then we survey papers in line with IoT solutions (3.2 and
    3.3). 3. In-depth analysis of literature This section presents the in-depth analysis
    of the results as identified by our methodology. The analysis is conducted in
    a threefold manner. Initially, possible and existing IoT and near IoT applications
    are analyzed in view of different parts of the smart grid where such solutions
    are and/or can be applied, with focus on the smart home. Afterwards, a generalization
    is given of the existing solutions in a new generic holistic framework that incorporates
    key features from the literature review as identified by our methodology. The
    analysis is concluded by overviewing a general smart home management model for
    the IoT based holistic framework by defining its integral levels and their main
    tasks as observed in the analyzed state-of-the-art solutions. 3.1. State-of-the-art
    (near) Internet of Things solutions in smart grid and smart home The integration
    of IoT within the smart grid will bring a new perspective to electricity management,
    with benefit for all parties involved. Table 2 differentiates the potential IoT
    applications regarding different aspects (parts) of the smart grid (Cardenas et
    al., 2014, Gungor et al., 2010, Parikh et al., 2010). Much of the pioneering research
    is hindered with a lot of challenges, especially when dealing with the first three
    aspects (generation, transmission and distribution) of the smart grid. The problems
    are mostly due to the harsh conditions in which sensor devices are deployed. Experimental
    results using IEEE 802.15.4-compliant sensor networks show that wireless links
    (including both line-of-sight (LOS) and non-LOS (NLOS) scenarios) in the smart
    grid have high packet error rates and variable link capacity due to electromagnetic
    interference, equipment noise, obstruction, etc. (Gungor and Korkmaz, 2012). Wireless
    nodes impose additional constraints, i.e. the memory and processing limitations
    of the sensor nodes and their limited power resources. Table 2. Potential IoT
    applications for smart grid. Energy providers Energy generation Transmission Distribution
    Consumers Real-time generation monitoring Transmission lines controlling Underground
    cable system monitoring Wireless automatic meter reading (smart metering) Power
    plants controlling Power monitoring Transformers stations controlling Home (Residential)
    energy management Alternative energy sources controlling Solar panels management
    Residential (distributed) production monitoring Predicting future solar panels
    and wind turbine production (using sensor data like temperature or humidity) Fortunately,
    most of these challenges are not present in the fourth, consumer side of the smart
    grid, i.e. the smart home. For example, sensors are usually connected to home
    appliances and the battery life problem becomes superfluous as the devices have
    a steady power supply. Furthermore, strong electromagnetic fields are not associated
    with home grid infrastructure. Still, IoT for smart home is subject to challenges
    like reliability, privacy, and security (Iyer, 2011). Modern homes equipped with
    smart meters, smart appliances, smart power outlets and sensing devices enable
    the development of energy-aware smart homes (Fig. 3). Although the smart home
    has been a dream for both utilities and consumers for a long time, such implementations
    are still very rare (Monacchi et al., 2013). On the other side, there are plenty
    of existing commercial solutions and advanced Demand Side Management (DSM) systems
    focused on large industrial consumers (Finn and Fitzpatrick, 2014, Palensky and
    Dietrich, 2011). Almost all of them fail to integrate small residential consumers.
    Download : Download high-res image (439KB) Download : Download full-size image
    Fig. 3. Smart home. IoT carries the potential to overcome this gap and to provide
    services that will foster the development of intelligent solutions for the common
    people. The main goal of IoT is to advance a better and safe society, where “Everything
    is a service” (public safety, environment, health care, production, etc.). In
    this subsection we present relevant attempts from the literature as identified
    by our methodology. The papers discussed here semantically fall in a category
    regarding near IoT solutions for smart home, mainly from the neighboring fields
    of wireless sensor networks, home automation, and smart grid. Novel architectures
    in terms of state-of-the-art software technologies with focus on domestic environments
    and habitat monitoring are proposed in Monacchi et al. (2013) and Stojkoska and
    Davcev (2009). In Monacchi et al. (2013) the authors promote design guidelines
    for collecting and integrating household data, thus enabling data interoperability.
    In Stojkoska and Davcev (2009), a web interface is developed in order to increase
    the interaction between the deployed WSN and its end users. Authors of Kamilaris
    et al. (2011) propose a solution for a Web-based energy-aware smart home framework
    that enables smart appliances to the Web. They have developed a graphical user
    interface to ease the interaction. The evaluation of their solution is done using
    a WSN organized in a star topology and also a multihop topology (up to three hops)
    for larger apartments (smart homes of around 100 m2). VillaSmart (Caracaş et al.,
    2013) is associated with the ECOGRID EU (EcoGrid EU, 2015) project. The authors
    have installed a modular and extensible WSN in a test and reference household
    called VILLASMART. These authors are modeling the energy behavior of the building.
    These thermal models are improved using indoor and outdoor WSN readings (air and
    water temperature, solar radiation sensor, weather conditions and power consumption
    information), thus achieving more precise predictions of indoor temperature. Using
    the standard resistance-capacitance (RC) model, the maximum prediction error achieved
    is 1.790C. The IEEE 802.15.4 standard in the 2.4 GHz is used for indoor communication.
    The model parameter determination is done with the grey-box estimation method.
    In Srbinovska et al. (2015) a WSN is installed for vegetable greenhouse monitoring
    and a control system for agriculture is developed. This system helps farmers increase
    the crop production and quality by remotely controlling different parts of the
    greenhouse, like drip irrigation and fan facilities. In Risteska Stojkoska et
    al. (2014), the authors present a framework for temperature regulation inside
    commercial and administrative buildings, with focus on design and implementation
    of specific network topologies and node localization within the system. 3.2. Holistic
    IoT-based framework for smart home It is expected that smart objects will be dominant
    on the market in the next few years and will become omnipresent in households,
    which will impose the need for new and improved services for smart homes (Karnouskos,
    2011). For these reasons, the need for IoT based solutions will be incontestable.
    Most recent publications focus on developing a general IoT framework that is suitable
    for broader range of application domains. In Lee and Lee (2015), the authors identity
    five IoT technologies as essential for building successful IoT solutions: radio
    frequency identification, wireless sensor networks, middleware, cloud computing
    and software for application development. They also identify three IoT categories
    for enterprise applications: monitoring and control, big data and business analytics,
    and information sharing and collaboration. In(Da Xu et al., 2014), the list of
    enabling technologies is enhanced with Near Field Communication, location based
    services and social networks. They suggest a four-layer architecture made up of:
    sensing, networking, service and interface. The role of the cloud is missing;
    therefore, it is not clear how services would be enabled. Liu et al. (2014) presents
    a middleware that supports naming, addressing, storage and look-up services. The
    idea is to develop a middleware at the top of the existing systems, thus to achieve
    easier integration of existing applications into IoT environments. Once again,
    the cloud is omitted as an enabling technology that should support all these services.
    The monitoring of production processes in industry using IoT is investigated in
    Shrouf and Miragliotta (2015). The authors propose a detailed framework that is
    focused on energy management, with possibilities for in-house or cloud-based data
    mining and decision making. The role of the third-party solution designers is
    not specified in the framework. Readers can also refer to (Gubbi et al., 2013,
    He et al., 2014, Xu et al., 2014) for interesting work regarding IoT architectures.
    With respect to these publications, the framework presented in this paper can
    be considered a modified version of the most general model we found in literature
    (Da Xu et al., 2014), augmented with the cloud in the middle, and adapted to a
    particular application domain, i.e. smart home. This multi-level hierarchical
    holistic framework based on Internet of Things is used as a wrapper or generalization
    of all the key features of IoT solutions for smart homes identified in the literature.
    The graphical representation of the framework is given in Fig. 4. Within the framework
    data is sent wirelessly and is shown using dashed lines. The yellow lines correspond
    to a bidirectional electricity flow. The following paragraphs summarize each level
    of the framework. Download : Download high-res image (641KB) Download : Download
    full-size image Fig. 4. Multi level IoT framework for smart home. 3.2.1. Smart
    home All household devices equipped with interfaces for wireless communication,
    make up the home WSN. Each home has a WSN, and the sensed data from each device
    is forwarded to a central station, which we refer to as home sink or home hub.
    Each node in the home WSN is considered a smart device and has moderate computation
    and communication capabilities. The home hub can be any one device (smart meter,
    PC, tablet or smartphone) that has some data storage capacity, can perform local
    processing and can communicate with devices outside the home WSN. In the case
    of smart residential complexes or smart buildings, the counterpart of the home
    hub is identified as residential sink or residential hub. The residential hub
    needs to have an additional feature, as compared to the home hub, which is that
    it is responsible for managing data from/to shared distributed production sources.
    This is rather important, as renewable sources are usually shared among consumers,
    one example being a residential building with a PV system on the roof, where the
    PV system is used by all households in the building. Within the framework, each
    distributed renewable energy source is considered a smart device. 3.2.2. Cloud
    All data from different sources is accumulated in the cloud (households'' data,
    sensor measurements from the transmission/distribution lines or from the production
    sites, etc.). The cloud should provide massive data storage and processing infrastructure.
    It is the most advanced level of the framework (Da Xu et al., 2014, Lee and Lee,
    2015). As stated in Gubbi et al. (2013), the cloud “promises high reliability,
    scalability and autonomy” for the next generation of IoT applications. The cloud
    is the central part of this system, hence our framework can be considered as “cloud
    centric” or “cloud based”. 3.2.3. Utility This level corresponds to the remaining
    parts of the smart grid, apart from the smart home: production, transmission and
    distribution. Each part independently sends data directly to the cloud. The typical
    information that can be exchanged with the utility is: price of electricity, weather
    forecast, distribution/transmission line status, current and future consumption
    of a microgrid, current and future production of the distributed production sources
    associated with a microgrid, etc (Sajjad et al., 2014). 3.2.4. Third party Third
    party applications are developed using the cloud data (Gubbi et al., 2013). Other
    terms that are interchangeably used are business applications, industry oriented
    applications or user-specific IoT application. Namely, third party application
    developers get data from the cloud (private or public) and use this data to deliver
    solutions in the form of web based or mobile applications (Fan et al., 2010).
    3.2.5. User interfaces This level represents user interfaces that deliver data
    to the end users (notifications, recommendations, smart device controls, etc)
    (Da Xu et al., 2014). Raw tabular data referring to monthly (or even daily) household
    consumption is hard to be interpreted by the users. A more sophisticated visualization
    tool is needed to present not only the overall household consumption, but also
    the consumption at device/appliance level (Liu et al., 2014). This is particularly
    useful, since consumers will be able to learn more about different appliances
    in their home, especially ones that cannot be controlled automatically, like non-flexible
    devices, hence enabling the users to control them intuitively taking into account
    their consuming nature. Third party applications should put an effort toward developing
    intuitive visual user interfaces for the consumers and frequently evaluate those
    using Quality of Experience (QoE) metrics. 3.3. Smart home management systems
    An energy management system is defined as an interface between a utility company
    and smart devices that consume power. It aims to provide benefits for both parties
    (utilities and consumers), somewhat biased towards the consumers. Another term
    commonly used is Demand Side Management (DSM). It represents a set of technologies
    that enable monitoring and controlling the consumption/production at consumer
    level in order to perform power balancing in future energy systems (Atzeni et
    al., 2013, Rezvani et al., 2015, Siano, 2014). In the context of IoT solutions
    for smart home, the traditional DSM model is shifted toward the cloud centric
    model. The cloud based approach offers centralized optimization that considers
    a huge set of parameters; hence it is expected to outperform the energy management
    as compared to a traditional approach. Fig. 5 shows the general Smart home management
    model adopted for our holistic framework. The main tasks that should be performed
    at each level are presented as follows. Download : Download high-res image (391KB)
    Download : Download full-size image Fig. 5. General smart home management model.
    3.3.1. Smart objects/smart devices Home appliances, lights, or sensors attached
    to production or transmission lines in a smart grid system can be considered smart
    objects. They can sense, actuate, process data and communicate. In order to sense
    and actuate, they need to perform A/D and D/A conversions (Byun et al., 2012).
    These devices periodically perform sensing and send (wirelessly of wired) sensed
    data to the hub. Moreover, if protocols allow it, sensed data can be sent directly
    to the cloud. If possible, smart devices should perform basic data processing
    before they send the sensed data (Stojkoska et al., 2012, Viani et al., 2013).
    Actuating can be also controlled remotely. In the context of DSM, home appliances
    can be divided in three categories: non flexible, flexible and dual nature appliances
    (Erol-Kantarci and Mouftah, 2010). The non-flexible appliances are those that
    are associated with baseline loads or non-preemptive tasks (like light, TV, PC,
    hair drier) and cannot be controlled by the system (Ullah et al., 2013). The flexible
    appliances are associated with regular loads or preemptive tasks (like heating
    or air-conditioning) and can be automatically operated by the system. The dual
    nature appliances sometimes can act as flexible, but sometimes as non-flexible
    (like washing machine, dish washer or laundry). For example, sometimes the consumer
    does not care about the exact time the dish washer will operate, as long as it
    is within a predefined time frame. These appliances usually present burst loads
    (Khan et al., 2014, Ullah et al., 2013). The smart appliances (both flexible and
    dual nature) are equipped with smart power outlets that are able to measure their
    power consumption and to control their operation in real-time. 3.3.2. Hubs The
    hub is a device that is responsible for collecting raw and/or processed data from
    the smart devices and forwarding them to the cloud (Zhu et al., 2010). Whenever
    possible, the hub has to perform local data processing (Viani et al., 2013), in
    order to reduce the data flow towards the cloud. Furthermore, in a smart home
    scenario, the hub can send commands to the smart devices acting as a local scheduler,
    regulator, or load balancer (Byun et al., 2012). In the case of a residential
    hub, it can send commands to the devices that regulate the electricity flow to/from
    the nanogrid, i.e. to manage the operations of buying/selling electricity from/to
    the grid. The hub understands the communication protocols used by the smart devices.
    Hubs are needed to enable the interoperability between the smart objects, since
    the devices generally cannot communicate with each other (Gubbi et al., 2013,
    Heile, 2010). Hence, sometimes a household needs more than one hub. In the future,
    when full interoperability among smart devices is achieved, it is expected that
    hubs will be superfluous in the model. 3.3.3. Cloud The cloud is the most complex
    part of the home management. The main task of the cloud is to store the data (Zhou
    et al., 2013). Because of the high data volume, traditional approaches should
    be modified to meet the new requirements. New methods and algorithms based on
    machine learning techniques, time series processing and advanced analytics are
    to be employed (Da Xu et al., 2014, Gubbi et al., 2013). Third-party applications
    typically assume that the data being used is unchanging i.e. the data is usable
    by applications on a non-real-time basis. In the cloud the event-based data is
    converted to query-based processing. This is a crucial step towards bridging the
    differences of real-time IoT networking and the third-party application world.
    The data should be stored persistently and abstracted at multiple levels so that
    they could be easily combined, recomputed and/or aggregated with previously stored
    data, with the possibility of some data coming from non-IoT sources (Da Xu et
    al., 2014). Even more importantly the different levels of abstraction will simplify
    the application access and usage since data will be presented in a manner required
    by applications. 3.3.4. Third party Third party should develop applications for
    the end users in the form of schedulers, regulators, and load balancers (Fan et
    al., 2010). A scheduler is a tool responsible for defining time slots in which
    the dual nature appliances will be active. A regulator is a tool responsible for
    the management of flexible devices, i.e. it will regulate the operation of air
    conditioners, heaters, dehumidifiers, etc. Load balancing should optimize energy
    consumption, considering current electricity price on the market and availability
    of electricity produced by the local renewable sources, if available. All these
    tools need advanced algorithms that use much more parameters than those obtained
    by the home devices. They should perform the complex tasks of mining and knowledge
    extraction from the available data in the cloud in order to create consumer and
    household profiles, or in simpler words the available smart home data should lead
    to the creation of personalized recommendations for all users (Liu et al., 2014).
    4. Challenges and solutions In this section, some guidelines for future developers
    of IoT solutions on how to make good choices when dealing with different challenges
    associated with practical issues are presented. 4.1. Edge (fog) computing Edge
    computing or fog computing is the process of data processing at the edge of the
    network. In this paradigm it is expected that the knowledge extraction process
    starts as early as the time the data is sensed i.e. at the sensor side. There
    are many reasons to employ this approach, but some of the more prominent ones
    are the energy saving, data volume reduction and latency reduction. Each object/entity
    in the IoT can consume a huge amount of energy if its communication is not optimized.
    For smart objects, in terms of energy consumption, local computation is an operation
    cheaper than communication. Hence, the effort should be shifted toward developing
    lightweight algorithms for local data processing. This approach will decrease
    the data volume and will avoid sending huge portions of raw data. Instead, only
    metadata will be transmitted (data about the data). Reducing the number of transmissions
    among IoT devices is also very important in order to avoid latency issues and
    saturation of the wireless channels. For these reasons, different data reduction
    techniques should be employed to minimize the communication overhead. There are
    three main techniques used for data reduction: data compression, data prediction
    and in-network processing (Stojkoska et al., 2012). For example, if data is not
    needed in real time, data compression (like delta compression) can be used. Otherwise,
    different filters can be used for real-time sensor data prediction, most of them
    based on adaptive filtering techniques, like moving average (MA), autoregressive
    (AR) model, autoregressive moving average (ARMA), least mean square (LMS), and
    LMS with variable step size (LMS-VSS) (Risteska Stojkoska et al., 2014, Stojkoska
    et al., 2012). Prediction is performed at each device and at the hub, i.e. predictions
    are made simultaneously on both sides. If the sensed value differs significantly
    from the predicted value (the difference is above a predefined threshold emax),
    the smart device should send the measurement/data to the hub. Otherwise, the predicted
    value is considered to be “reliable” and is used to feed the filter for future
    predictions. This paradigm is known as “dual prediction scheme” (Santini and Romer,
    2006). In-network processing is the process of consecutive data processing on
    their way to the destination. As data travel through intermediate nodes, some
    aggregating operations are performed. 4.2. Big data The IoT-generated data come
    in big amounts, are variable in terms of structure, often arrive at real-time,
    and might be of uncertain provenance. This volume, velocity and variety (not to
    mention variable veracity) make the storing and analytics solution, which will
    generate useful insights, a very complex one (Zaslavsky et al., 2013). Traditional
    SQL-queried relational database management systems (RDBMSs) are unsuitable for
    the task, which is why big data solutions are needed. The IoT Cloud (Alamri et
    al., 2013, Botta et al., 2016) will enable the long-time storage and complex analysis
    of this data. The challenge of handling big data is a critical one, since the
    overall performance is directly proportional to the properties of the data management
    service (Dobre and Xhafa, 2014). A constellation of tools has evolved to service
    the market, most notably Apache''s open-source Hadoop distributed data processing
    system, plus various NoSQL databases and a range of business intelligence platforms.
    There are multiple vendors that operate in different parts of the analytics pipeline
    (data integration, data storage, core analytics and data presentation), as well
    as ''full-stack'' vendors like IBM, Microsoft, Oracle, SAP and Software AG. Both
    proprietary and open source solutions adopt alternative database technologies
    for big data (Copie et al., 2013): time-series, key-value, document store, wide
    column stores, and graph databases. However, to date there is no simple answer
    to the big data management question in the Cloud (Zaslavsky et al., 2013). The
    problem becomes even more cumbersome when the factor of data integrity is taken
    into account, not only because of its impact on the quality of service, but also
    for its security and privacy related aspects especially on outsourced data (Liu
    et al., 2015). 4.3. Networking Networking protocols for Internet of Things solutions
    can be divided in smart device networks and traditional networks that are designed
    primarily for high data rates. Smart home networking protocols are expected to
    adopt the protocols already established in Wireless Sensor Networks and Machine-to-Machine
    (M2M) communications, with no clear winner so far (Chen et al., 2012). Adding
    many advanced features to the protocol increases the cost, and reduces the ease-of-use.
    Designing an appealing protocol is not a trivial task, and is usually a tradeoff
    between the cost and the performances. In perspective of the topology to be used,
    mesh is the most suitable choice of network topology for wireless communication
    due to the presence of obstacles in the home, like walls, furniture, etc. Dual-mesh,
    which means that the network operates as both wired and wireless, is an appropriate
    solution for households that have a previously installed wired home automation
    system. There are many protocols designed for smart home solutions. Some of them
    dated back from the period when smart home was reserved for the wealthy households,
    and many new that try to combine the old design principles with the newly developed
    technologies. X10 is the oldest protocol that was initially wired, but new modifications
    make it dual-mesh. Insteon is another example of a dual-mesh protocol, which was
    recently integrated into Google owned Nest, Apple''s HomeKit platform and Apple
    Watch (Darbee, 2013). The more recent protocols work only wirelessly (ZigBee,
    Z-Wave, 6lowpan, EnOcean, etc.). There are different ways to classify protocols,
    and none of them is exhaustive enough. Using Google Scholar, we queried for publications
    that cover each of these protocols and the summary statistics for the number of
    publications is given in Table 3. This data is of November 2015. Table 3. Number
    of publications according to Google Scholar. Empty Cell Zigbee 6lowpan Z-Wave
    Bacnet X10 EnOcean Insteon Without patents 228000 9790 5770 6700 1840 1520 720
    With patents 264000 9010 7650 7550 1890 2440 1080 Table 3 shows that ZigBee is
    the most popular protocol, but this is true only for the scientific research and
    academia (ZigBee, 2015). In practice, the Z-Wave is the one that has the most
    manufacturers, mainly due to their interoperability. According to Z-Wave Alliance,
    over 35 million Z-Wave products have been sold since they began selling in 2005
    (Z-Wave Alliance, 2015). The basic features of ZigBee, Z-Wave and Insteon are
    shown in Table 4. Theoretically, a Z-Wave network is limited to a maximum of 232
    Z-Wave devices, but most vendors recommend using about 30–50 (Darbee, 2013). For
    example, MiOS LTD with their Vera products recommends 50 devices for Vera Lite,
    and 100 devices for Vera 3 (MiOS, 2015). Table 4. Basic features of ZigBee, Z-Wave
    and Insteon. Empty Cell ZigBee Z-Wave Insteon Media wireless (radio) wireless
    (radio) wireless (radio) and wired (powerline) Frequency 2.4 GHz (worldwide),
    915 MHz (Americas and Australia) and 868 MHz (Europe) <1 GHz, (868.42 MHz Europe;
    908.42 MHz United States; 916 MHz Israel; 919.82 MHz Hong Kong; 921.42 MHz Australian/New
    Zealand) single frequency of 915 MHz Network topology mesh Mesh dual-mesh Vendors
    Texas Instruments, Atmel, Silcon Labs, Freescale, etc. Sigma Designs Smartlabs,
    Logitech Maximum number of nodes 65000 (theoretically), 500 (in practice) 232
    (theoretically), 50–100 (in practice) 16777216 Range 10 to 100 m line-of-sight
    30 m open-air, < 30 m indoor 40 m Modulation Binary phase-shift keying (BPSK)
    for 868 and 915 MHz bands, or offset quadrature phase-shift keying (OQPSK) for
    2.4 GHz Gaussian, frequency-shift keying (GFSK) manchester channel encoding Frequency-shift
    keying (FSK) The price is another aspect that can be considered when choosing
    the right protocol. A ZigBee Licence costs $3500 per year, while Z-Wave charges
    $750 per device model for the logo (Darbee, 2013). A more detailed comparison
    of the smart home protocols can be found in Withanage et al. (2014). Each level
    of the IoT framework should have particular features. We identify and summarize
    the required capabilities of IoT devices at each level in Table 5. Table 5. Capabilities
    of IoT parts for smart home management system. Empty Cell Network topology Communication
    protocols Computational capabilities Memory requirements Smart Device mesh/star
    ZigBee/Z-Wave//Bluetooth/Insteon/X10, etc. low low Hub mesh/star ZigBee/Z-Wave//Bluetooth/Insteon/X10,
    etc; LTE/optical fiber/Wi-Fi intermediate low to intermediate Cloud not applicable
    LTE/optical fiber/Wi-Fi very high very high Third party not applicable LTE/optical
    fiber/Wi-Fi high application dependent, from intermediate to high 4.4. Interoperability
    Currently, the main issue for the development of a generic smart home solution
    is the cost associated with integrating smart home devices (Ko et al., 2011).
    Interoperability is the key to open markets to competitive solutions in IoT (Lu
    et al., 2011, Misra et al., 2015). Leading companies in the world that are producing
    smart devices are working toward achieving full interoperability that will ensure
    easy integration with the existing Internet. Z-Wave products are already interoperable
    with their previous versions, while ZigBee Allience with its Zigbee 3.0 has announced
    this feature to be implemented by the end of 2015. ZigBee has formed many committees
    that aim to define product properties required for different vendors to build
    interoperable devices for different public application profiles, like Home Automation,
    Health Care, Remote Control, etc. Still, products are not necessarily interoperable
    across these profiles and across revisions within a profile. On the other side,
    X10 and Insteon are fully interoperable with each other (Darbee, 2013). Table
    6 summarizes the interoperability features of these protocols. Table 6. Interoperability
    features of Insteon, X10, Z-Wave and ZigBee. Empty Cell Insteon X10 Z-Wave ZigBee
    ZigBee invisible to each other No No No Z-Wave invisible to each other No Yes
    X10 Yes Yes Insteon Yes 4.5. Security and privacy One of the most important issues
    of the emergent requirements facing the smart grid development is related to cyber
    security, both for the wireless and the wired parts of the systems (Ning et al.,
    2013, Schneps-Schneppe et al., 2012). The smart grid can be a target for cyber
    terrorists, which emerges as a critical concern for system designers. Because
    of the way in which data is transmitted, IoT is inherently vulnerable to most
    of the common attacks of wireless networks. Hence, IoT requires a security policy,
    but the cost for providing it needs to be as low as possible. Different approaches
    that provide security lightweight crypto-primitives should be investigated (Altolini
    et al., 2013), in order to provide authenticity (the device is not a malicious
    object), integrity (transmitted data is identical with the received data) and
    confidentiality (make data unreadable to others) (Dimitrievski et al., 2006).
    5. Conclusions This paper addresses the vision that the residential buildings
    would shift themselves toward modern households that would be an evolution of
    the passive household. They would have their own solar panels and small wind turbines
    to produce their own energy, thus they would be able to buy/sell energy from/to
    the smart power grid. As it is expected for smart objects to become omnipresent
    on the market and respectively in consumers'' households within the next few years,
    the need for IoT-based services for smart home will be inevitable. In this paper,
    a methodology is developed using different search queries to select the most relevant
    papers from the literature that address this topic. Selected papers were semantically
    divided into two main categories: WSN solutions and IoT concepts. This was rather
    expected considering that WSN is the pivotal technology which enabled the development
    of IoT. Although the WSN solutions are real life implementations that integrate
    devices inside a smart home, two disadvantages are identified, as they: • work
    separately and the data is used only for local optimization; • make an assumption
    of a fully (or near fully) automated home, which is a costly solution for most
    of the households. The second category of papers concerning IoT mainly presents
    concepts, theoretical frameworks and visions for possible smart home/grid solutions.
    There is a lack of a unifying platform that would transform these separate individual
    applications into a single infrastructure, a platform that can be further used
    for advanced data mining and knowledge extraction. The desired solution should
    aggregate all available smart home data within a self-learning engine in order
    to create personalized recommendations for all users, regardless of the level
    of automation present at their homes. The solution should not entail any additional
    cost for the consumers, as it should not require any particular hardware. The
    main contribution of this paper is the IoT based holistic framework, which incorporates
    different components from IoT architectures/frameworks proposed in the literature.
    This integral IoT framework is specific to the smart home application domain,
    with the cloud being the central element in the system that serves not only to
    collect and store data, but also as a gateway to third-parties interested in developing
    applications. In this context, we additionally survey the smart home management
    system, and we identify a model with a set of specific tasks that should be performed
    at each level in order to meet the system requirements. As a second contribution,
    this paper discusses challenges for IoT based smart home solutions, with emphasis
    on practical issues like data processing, networking and interoperability of smart
    home protocols. Fog and edge computing are promising approaches for improving
    the energy saving inside the IoT network by reducing the number of transmissions
    between the IoT devices. Although there are some publications that investigate
    this potential, a lot of research and work still needs to be done. New big data
    solutions and algorithms are needed to deal with the potentially vast amount of
    data generated within the IoT. A constellation of tools has already appeared in
    the last few years, as there are multiple vendors that operate in different parts
    of the analytics pipeline. Another big issue is the interoperability, which is
    a prerequirement for opening the markets to competitive solutions in IoT. The
    current situation is that devices with different protocols cannot communicate,
    and, more important, the products with the same protocols are not necessarily
    interoperable across different profiles and across revisions within the same profile.
    References Alamri et al., 2013 A. Alamri, W.S. Ansari, M.M. Hassan, M.S. Hossain,
    A. Alelaiwi, M.A. Hossain A survey on sensor-cloud: architecture, applications,
    and approaches Int. J. Distrib. Sens. Netw., 2013 (2013) Google Scholar Altolini
    et al., 2013 D. Altolini, V. Lakkundi, N. Bui, C. Tapparello, M. Rossi Low power
    link layer security for iot: implementation and performance analysis 2013 9th
    International Wireless Communications and Mobile Computing Conference (IWCMC),
    IEEE (2013), pp. 919-925 CrossRefView in ScopusGoogle Scholar Atzeni et al., 2013
    I. Atzeni, L.G. Ordóñez, G. Scutari, D.P. Palomar, J.R. Fonollosa Demand-side
    management via distributed energy generation and storage optimization IEEE Trans.
    Smart Grid, 4 (2013), pp. 866-876 View in ScopusGoogle Scholar Beel and Gipp,
    2009 J. Beel, B. Gipp Google Scholar''s ranking algorithm: an introductory overview
    Proceedings of the 12th International Conference on Scientometrics and Informetrics
    (ISSI’09). Rio de Janeiro (Brazil) (2009), pp. 230-241 View in ScopusGoogle Scholar
    Botta et al., 2016 A. Botta, W. de Donato, V. Persico, A. Pescapé Integration
    of cloud computing and internet of things: a survey Future Gener. Comput. Syst.,
    56 (2016), pp. 684-700 View PDFView articleView in ScopusGoogle Scholar Byun et
    al., 2012 J. Byun, B. Jeon, J. Noh, Y. Kim, S. Park An intelligent self-adjusting
    sensor for smart home services based on ZigBee communications IEEE Trans. Consum.
    Electron., 58 (2012), pp. 794-802 View in ScopusGoogle Scholar Caracaş et al.,
    2013 A. Caracaş, F.L. Mueller, O. Sundström, C. Binding, B. Jansen VillaSmart:
    wireless sensors for system identification in domestic buildings IEEE PES ISGT
    Europe 2013, IEEE (2013), pp. 1-5 CrossRefGoogle Scholar Cardenas et al., 2014
    J.A. Cardenas, L. Gemoets, J.H.A. Rosas, R. Sarfi A literature survey on smart
    grid distribution: an analytical approach J. Clean. Prod., 65 (2014), pp. 202-216
    View PDFView articleView in ScopusGoogle Scholar Chen et al., 2012 M. Chen, J.
    Wan, F. Li Machine-to-machine communications: architectures, standards and applications
    KSII Trans. Internet Inf. Syst. TIIS, 6 (2012), pp. 480-497 View in ScopusGoogle
    Scholar Copie et al., 2013 A. Copie, T.-F. Fortiş, V.I. Munteanu Benchmarking
    cloud databases for the requirements of the internet of things Information Technology
    Interfaces (ITI), Proceedings of the ITI 2013 35th International Conference on,
    IEEE (2013), pp. 77-82 View in ScopusGoogle Scholar Da Xu et al., 2014 L. Da Xu,
    W. He, S. Li Internet of things in industries: a survey IEEE Trans. Ind. Inf.,
    10 (2014), pp. 2233-2243 Google Scholar Darbee, 2013 P. Darbee INSTEON: Compared
    (2013) (White Paper) Google Scholar Dimitrievski et al., 2006 A. Dimitrievski,
    B. Stojkoska, K. Trivodaliev, D. Davcev Securing Communication in WSN Trough Use
    of Cryptography NATO-ARW, Suceava (2006) Google Scholar Dobre and Xhafa, 2014
    C. Dobre, F. Xhafa Intelligent services for big data science Future Gener. Comput.
    Syst., 37 (2014), pp. 267-281 View PDFView articleView in ScopusGoogle Scholar
    EcoGrid EU, 2015 EcoGrid EU, http://www.eu-ecogrid.net/, (Accessed December, 2015).
    Google Scholar Erol-Kantarci and Mouftah, 2010 M. Erol-Kantarci, H.T. Mouftah
    Wireless sensor networks for domestic energy management in smart grids Communications
    (QBSC), 2010 25th Biennial Symposium on, IEEE (2010), pp. 63-66 CrossRefView in
    ScopusGoogle Scholar Fan et al., 2010 Z. Fan, G. Kalogridis, C. Efthymiou, M.
    Sooriyabandara, M. Serizawa, J. McGeehan The new frontier of communications research:
    smart grid and smart metering Proceedings of the 1st International Conference
    on Energy-efficient Computing and Networking, ACM (2010), pp. 115-118 CrossRefGoogle
    Scholar Finn and Fitzpatrick, 2014 P. Finn, C. Fitzpatrick Demand side management
    of industrial electricity consumption: promoting the use of renewable energy through
    real-time pricing Appl. Energy, 113 (2014), pp. 11-21 View PDFView articleView
    in ScopusGoogle Scholar Franceschet, 2010 M. Franceschet A comparison of bibliometric
    indicators for computer science scholars and journals on Web of Science and Google
    Scholar Scientometrics, 83 (2010), pp. 243-258 CrossRefView in ScopusGoogle Scholar
    Gehanno et al., 2013 J.-F. Gehanno, L. Rollin, S. Darmoni Is the coverage of google
    scholar enough to be used alone for systematic reviews BMC Med. Inf. Decis. Mak.,
    13 (2013), p. 7 Google Scholar Greenfield, 2006 A. Greenfield Everyware: the Dawning
    Age of Ubiquitous Computing New Riders, Berkeley, CA (2006) Google Scholar Gubbi
    et al., 2013 J. Gubbi, R. Buyya, S. Marusic, M. Palaniswami Internet of Things
    (IoT): a vision, architectural elements, and future directions Future Gener. Comput.
    Syst., 29 (2013), pp. 1645-1660 View PDFView articleView in ScopusGoogle Scholar
    Gungor and Korkmaz, 2012 V.C. Gungor, M.K. Korkmaz Wireless link-quality estimation
    in smart grid environments Int. J. Distrib. Sens. Netw., 8 (2012) Google Scholar
    Gungor et al., 2010 V.C. Gungor, B. Lu, G.P. Hancke Opportunities and challenges
    of wireless sensor networks in smart grid IEEE Trans. Ind. Electron., 57 (2010),
    pp. 3557-3564 View in ScopusGoogle Scholar He et al., 2014 W. He, G. Yan, L. Da
    Xu Developing vehicular data cloud services in the IoT environment IEEE Trans.
    Ind. Inf., 10 (2014), pp. 1587-1595 View in ScopusGoogle Scholar Heile, 2010 B.
    Heile Smart grids for green communications [Industry Perspectives] IEEE Wirel.
    Commun., 17 (2010), pp. 4-6 View in ScopusGoogle Scholar Iyer and Agrawal, 2010
    G. Iyer, P. Agrawal Smart power grids 42nd Southeastern Symposium on System Theory
    (SSST), IEEE (2010), pp. 152-155 CrossRefView in ScopusGoogle Scholar Iyer, 2011
    S. Iyer Cyber security for smart grid, cryptography, and privacy Int. J. Digit.
    Multimed. Broadcast., 2011 (2011) Google Scholar Kamilaris et al., 2011 A. Kamilaris,
    V. Trifa, A. Pitsillides HomeWeb: an application framework for Web-based smart
    homes Telecommunications (ICT), 2011 18th International Conference on, IEEE (2011),
    pp. 134-139 CrossRefView in ScopusGoogle Scholar Karnouskos, 2011 S. Karnouskos
    Crowdsourcing information via mobile devices as a migration enabler towards the
    smartgrid Smart Grid Communications (SmartGridComm), 2011 IEEE International Conference
    on, IEEE (2011), pp. 67-72 CrossRefView in ScopusGoogle Scholar Khan et al., 2014
    M. Khan, N. Javaid, M. Arif, S. Saud, U. Qasim, Z. Khan Peak load scheduling in
    smart grid communication environment 28th International Conference on Advanced
    Information Networking and Applications, IEEE (2014), pp. 1025-1032 CrossRefView
    in ScopusGoogle Scholar Ko et al., 2011 J. Ko, A. Terzis, S. Dawson-Haggerty,
    D.E. Culler, J.W. Hui, P. Levis Connecting low-power and lossy networks to the
    internet IEEE Commun. Mag., 49 (2011), pp. 96-101 View in ScopusGoogle Scholar
    Lee and Lee, 2015 I. Lee, K. Lee The Internet of Things (IoT): applications, investments,
    and challenges for enterprises Bus. Horiz., 58 (2015), pp. 431-440 View PDFView
    articleView in ScopusGoogle Scholar Liu et al., 2015 C. Liu, C. Yang, X. Zhang,
    J. Chen External integrity verification for outsourced big data in cloud and IoT:
    a big picture Future Gener. Comput. Syst., 49 (2015), pp. 58-67 View PDFView articleView
    in ScopusGoogle Scholar Liu et al., 2014 C.H. Liu, B. Yang, T. Liu Efficient naming,
    addressing and profile services in Internet-of-Things sensory environments Ad
    Hoc Netw., 18 (2014), pp. 85-101 View PDFView articleView in ScopusGoogle Scholar
    Lu et al., 2011 C.-W. Lu, S.-C. Li, Q. Wu Interconnecting ZigBee and 6LoWPAN wireless
    sensor networks for smart grid applications Sensing Technology (ICST), 2011 Fifth
    International Conference on, IEEE (2011), pp. 267-272 View in ScopusGoogle Scholar
    Lund et al., 2015 P.D. Lund, J. Mikkola, J. Ypyä Smart energy system design for
    large clean power schemes in urban areas J. Clean. Prod., 103 (2015), pp. 437-445
    View PDFView articleView in ScopusGoogle Scholar Mainetti et al., 2011 L. Mainetti,
    L. Patrono, A. Vilei Evolution of wireless sensor networks towards the internet
    of things: a survey Software, Telecommunications and Computer Networks (SoftCOM),
    2011 19th International Conference on, IEEE (2011), pp. 1-6 CrossRefGoogle Scholar
    MiOS, 2015 MiOS, http://faq.mios.com/content/1/6/en/how-many-z_wave-devices-can-be-added.html,
    (Accessed December, 2015). Google Scholar Misra et al., 2015 P. Misra, V. Rajaraman,
    K. Dhotrad, J. Warrior, Y. Simmhan An Interoperable Realization of Smart Cities
    with Plug and Play Based Device Management (2015) arXiv preprint arXiv:1503.00923
    Google Scholar Monacchi et al., 2013 A. Monacchi, D. Egarter, W. Elmenreich Integrating
    households into the smart grid Modeling and Simulation of Cyber-physical Energy
    Systems (MSCPES), 2013 Workshop on, IEEE (2013), pp. 1-6 Google Scholar Ning et
    al., 2013 H. Ning, H. Liu, L.T. Yang Cyberentity security in the internet of things
    Computer, 46 (2013), pp. 46-53 View in ScopusGoogle Scholar Oppermann et al.,
    2014 F.J. Oppermann, C.A. Boano, K. Römer A Decade of Wireless Sensing Applications:
    Survey and Taxonomy, the Art of Wireless Sensor Networks Springer (2014), pp.
    11-50 CrossRefView in ScopusGoogle Scholar Palensky and Dietrich, 2011 P. Palensky,
    D. Dietrich Demand side management: demand response, intelligent energy systems,
    and smart loads IEEE Trans. Ind. Inf., 7 (2011), pp. 381-388 View in ScopusGoogle
    Scholar Parikh et al., 2010 P.P. Parikh, M.G. Kanabar, T.S. Sidhu Opportunities
    and challenges of wireless communication technologies for smart grid applications
    IEEE PES General Meeting, IEEE (2010), pp. 1-7 CrossRefGoogle Scholar Rezvani
    et al., 2015 A. Rezvani, M. Gandomkar, M. Izadbakhsh, A. Ahmadi Environmental/economic
    scheduling of a micro-grid with renewable energy resources J. Clean. Prod., 87
    (2015), pp. 216-226 View PDFView articleView in ScopusGoogle Scholar Risteska
    Stojkoska et al., 2014 B. Risteska Stojkoska, A. Popovska Avramova, P. Chatzimisios
    Application of wireless sensor networks for indoor temperature regulation Int.
    J. Distrib. Sens. Netw., 2014 (2014) Google Scholar Sajjad et al., 2014 I.A. Sajjad,
    R. Napoli, G. Chicco Future business model for cellular microgrids 4th International
    Symposium on Business Modeling and Software Design (BMSD) (2014), pp. 209-216
    View in ScopusGoogle Scholar Santini and Romer, 2006 S. Santini, K. Romer An adaptive
    strategy for quality-based data reduction in wireless sensor networks Proceedings
    of the 3rd International Conference on Networked Sensing Systems (INSS 2006) (2006),
    pp. 29-36 Google Scholar Schneps-Schneppe et al., 2012 M. Schneps-Schneppe, A.
    Maximenko, D. Namiot, D. Malov Wired Smart Home: energy metering, security, and
    emergency issues Ultra Modern Telecommunications and Control Systems and Workshops
    (ICUMT), 2012 4th International Congress on, IEEE (2012), pp. 405-410 CrossRefView
    in ScopusGoogle Scholar Shrouf and Miragliotta, 2015 F. Shrouf, G. Miragliotta
    Energy management based on Internet of Things: practices and framework for adoption
    in production management J. Clean. Prod., 100 (2015), pp. 235-246 View PDFView
    articleView in ScopusGoogle Scholar Siano, 2014 P. Siano Demand response and smart
    grids—A survey Renew. Sustain. Energy Rev., 30 (2014), pp. 461-478 View PDFView
    articleView in ScopusGoogle Scholar Srbinovska et al., 2015 M. Srbinovska, C.
    Gavrovski, V. Dimcev, A. Krkoleva, V. Borozan Environmental parameters monitoring
    in precision agriculture using wireless sensor networks J. Clean. Prod., 88 (2015),
    pp. 297-307 View PDFView articleView in ScopusGoogle Scholar Stojkoska and Davcev,
    2009 B. Stojkoska, D. Davcev Web interface for habitat monitoring using wireless
    sensor network Wireless and Mobile Communications, 2009. ICWMC''09. Fifth International
    Conference on, IEEE (2009), pp. 157-162 CrossRefView in ScopusGoogle Scholar Stojkoska
    et al., 2012 B.R. Stojkoska, D. Solev, D. Davcev Variable step size LMS Algorithm
    for Data Prediction in wireless sensor networks Sens. Transducers, 14 (2012),
    p. 111 Google Scholar Ullah et al., 2013 M. Ullah, A. Mahmood, S. Razzaq, M. Ilahi,
    R. Khan, N. Javaid A Survey of Different Residential Energy Consumption Controlling
    Techniques for Autonomous DSM in Future Smart Grid Communications (2013) arXiv
    preprint arXiv:1306.1134 Google Scholar Viani et al., 2013 F. Viani, F. Robol,
    A. Polo, P. Rocca, G. Oliveri, A. Massa Wireless architectures for heterogeneous
    sensing in smart home applications: concepts and real implementation Proc. IEEE,
    101 (2013), pp. 2381-2396 View in ScopusGoogle Scholar Withanage et al., 2014
    C. Withanage, R. Ashok, C. Yuen, K. Otto A comparison of the popular home automation
    technologies 2014 IEEE Innovative Smart Grid Technologies-Asia (ISGT ASIA), IEEE
    (2014), pp. 600-605 CrossRefView in ScopusGoogle Scholar Xu et al., 2014 B. Xu,
    L. Da Xu, H. Cai, C. Xie, J. Hu, F. Bu Ubiquitous data accessing method in IoT-based
    information system for emergency medical services IEEE Trans. Ind. Inf., 10 (2014),
    pp. 1578-1586 View in ScopusGoogle Scholar Z-Wave Alliance, 2015 Z-Wave Alliance,
    http://products.z-wavealliance.org/, (Accessed December, 2015). Google Scholar
    Zaslavsky et al., 2013 A. Zaslavsky, C. Perera, D. Georgakopoulos Sensing as a
    Service and Big Data (2013) arXiv preprint arXiv:1301.0159 Google Scholar Zhou
    et al., 2013 J. Zhou, T. Leppänen, E. Harjula, M. Ylianttila, T. Ojala, C. Yu,
    H. Jin Cloudthings: a common architecture for integrating the internet of things
    with cloud computing Computer Supported Cooperative Work in Design (CSCWD), 2013
    IEEE 17th International Conference on, IEEE (2013), pp. 651-657 CrossRefView in
    ScopusGoogle Scholar Zhu et al., 2010 Q. Zhu, R. Wang, Q. Chen, Y. Liu, W. Qin
    Iot gateway: bridgingwireless sensor networks into internet of things Embedded
    and Ubiquitous Computing (EUC), 2010 IEEE/IFIP 8th International Conference on,
    IEEE (2010), pp. 347-352 CrossRefView in ScopusGoogle Scholar ZigBee, 2015 ZigBee,
    http://www.zigbee.org/, (Accessed December, 2015). Google Scholar Cited by (1019)
    Machine learning-based gait health monitoring for multi-occupant smart homes 2024,
    Internet of Things (Netherlands) Show abstract Smart home energy management systems:
    Research challenges and survey 2024, Alexandria Engineering Journal Show abstract
    Blockchain-based cloud-fog collaborative smart home authentication scheme 2024,
    Computer Networks Show abstract Conductive chenille yarn-based triboelectric carpet
    fabrics with enhanced flexibility and comfort for smart home monitoring 2024,
    Materials Today Energy Show abstract IfNot: An approach towards mitigating interest
    flooding attacks in Named Data Networking of Things 2024, Internet of Things (Netherlands)
    Show abstract Rational design and optimization of self-powered instantaneous dual-parameter
    triboelectric sensor 2024, Sensors and Actuators A: Physical Show abstract View
    all citing articles on Scopus View Abstract © 2016 Elsevier Ltd. All rights reserved.
    Recommended articles Regeneration of activated carbon from babassu coconut refuse,
    applied as a complementary treatment to conventional refinery hydrotreatment of
    diesel fuel Journal of Cleaner Production, Volume 140, Part 3, 2017, pp. 1465-1469
    Caroline Carriel Schmitt, …, Carlos Itsuo Yamamoto View PDF Smart home technologies
    in everyday life: do they address key energy challenges in households? Current
    Opinion in Environmental Sustainability, Volume 31, 2018, pp. 65-70 Sergio Tirado
    Herrero, …, Yolande Strengers View PDF Supporting end users to control their smart
    home: design implications from a literature review and an empirical investigation
    Journal of Systems and Software, Volume 144, 2018, pp. 295-313 Danilo Caivano,
    …, Fabio Cassano View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 945 Policy Citations: 5 Captures Readers: 2043 Mentions News Mentions:
    2 References: 1 Social Media Shares, Likes & Comments: 78 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Journal of Cleaner Production
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'A review of Internet of Things for smart home: Challenges and solutions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.dcan.2017.10.002
  analysis: '>'
  authors:
  - Mohammad Saeid Mahdavinejad
  - Mohammadreza Rezvan
  - Mohammadamin Barekatain
  - Peyman Adibi
  - Payam Barnaghi
  - Amit P. Sheth
  citation_count: 735
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Literature review 3. Internet of
    Things 4. Smart city 5. Taxonomy of machine learning algorithms 6. Discussion
    of taxonomy of machine learning algorithms 7. Research trends and open issues
    8. Conclusions Acknowledgments References Show full outline Cited by (774) Figures
    (6) Tables (3) Table 1 Table 2 Table 3 Digital Communications and Networks Volume
    4, Issue 3, August 2018, Pages 161-175 Machine learning for internet of things
    data analysis: a survey Author links open overlay panel Mohammad Saeid Mahdavinejad
    a b, Mohammadreza Rezvan a b, Mohammadamin Barekatain c, Peyman Adibi a, Payam
    Barnaghi d, Amit P. Sheth b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.dcan.2017.10.002
    Get rights and content Under a Creative Commons license open access Abstract Rapid
    developments in hardware, software, and communication technologies have facilitated
    the emergence of Internet-connected sensory devices that provide observations
    and data measurements from the physical world. By 2020, it is estimated that the
    total number of Internet-connected devices being used will be between 25 and 50
    billion. As these numbers grow and technologies become more mature, the volume
    of data being published will increase. The technology of Internet-connected devices,
    referred to as Internet of Things (IoT), continues to extend the current Internet
    by providing connectivity and interactions between the physical and cyber worlds.
    In addition to an increased volume, the IoT generates big data characterized by
    its velocity in terms of time and location dependency, with a variety of multiple
    modalities and varying data quality. Intelligent processing and analysis of this
    big data are the key to developing smart IoT applications. This article assesses
    the various machine learning methods that deal with the challenges presented by
    IoT data by considering smart cities as the main use case. The key contribution
    of this study is the presentation of a taxonomy of machine learning algorithms
    explaining how different techniques are applied to the data in order to extract
    higher level information. The potential and challenges of machine learning for
    IoT data analytics will also be discussed. A use case of applying a Support Vector
    Machine (SVM) to Aarhus smart city traffic data is presented for a more detailed
    exploration. Previous article in issue Next article in issue Keywords Machine
    learningInternet of ThingsSmart dataSmart City 1. Introduction Emerging technologies
    in recent years and major enhancements to Internet protocols and computing systems,
    have made communication between different devices easier than ever before. According
    to various forecasts, around 25–50 billion devices are expected to be connected
    to the Internet by 2020. This has given rise to the newly developed concept of
    Internet of Things (IoT). IoT is a combination of embedded technologies including
    wired and wireless communications, sensor and actuator devices, and the physical
    objects connected to the Internet [1], [2]. One of the long-standing objectives
    of computing is to simplify and enrich human activities and experiences (e.g.,
    see the visions associated with “The Computer for the 21st Century” [3] or “Computing
    for Human Experience” [4]). IoT requires data to either represent better services
    to users or enhance the IoT framework performance to accomplish this intelligently.
    In this manner, systems should be able to access raw data from different resources
    over the network and analyze this information in order to extract knowledge. Since
    IoT will be among the most significant sources of new data, data science will
    provide a considerable contribution to making IoT applications more intelligent.
    Data science is the combination of different scientific fields that uses data
    mining, machine learning, and other techniques to find patterns and new insights
    from data. These techniques include a broad range of algorithms applicable in
    different domains. The process of applying data analytics methods to particular
    areas involves defining data types such as volume, variety, and velocity; data
    models such as neural networks, classification, and clustering methods, and applying
    efficient algorithms that match with the data characteristics. By following our
    reviews, the following is deduced: First, because data is generated from different
    sources with specific data types, it is important to adopt or develop algorithms
    that can handle the data characteristics. Second, the great number of resources
    that generate data in real-time are not without the problem of scale and velocity.
    Finally, finding the best data model that fits the data is one of the most important
    issues for pattern recognition and for better analysis of IoT data. These issues
    have opened a vast number of opportunities in expanding new developments. Big
    data is defined as high-volume, high-velocity, and high variety data that demands
    cost-effective, innovative forms of information processing that enable enhanced
    insight, decision making, and process automation [5]. With respect to the challenges
    posed by big data, it is necessary to introduce a new concept termed smart data,
    which means: ”realizing productivity, efficiency, and effectiveness gains by using
    semantics to transform raw data into Smart Data” [6]. A more recent definition
    of this concept is: ”Smart Data provides value from harnessing the challenges
    posed by volume, velocity, variety, and veracity of Big Data, and in turn providing
    actionable information and improving decision making.” [7]. Finally, smart data
    can act as a good representative for IoT data. 1.1. The Contributions of this
    paper The objective here is to answer the following questions: A) How can machine
    learning algorithms be applied to IoT smart data? B) What is the taxonomy of machine
    learning algorithms that can be adopted in IoT? C) What are the characteristics
    of IoT data in the real world? D) Why is the smart city a typical use case of
    IoT applications? A) To understand which algorithm is more appropriate for processing
    and decision-making on smart data generated from the things in IoT, it is essential
    to consider the following three concepts. First, the IoT application (Section
    3). Second, the IoT data characteristics (Section 4.2), and third, the data-driven
    vision of machine learning algorithms (Section 5). We finally discuss the issues
    in Section 6. B) Around 70 articles in the field of IoT data analysis are reviewed,
    revealing that there exist eight major groups of algorithms applicable to IoT
    data. These algorithms are categorized according to their structural similarities,
    types of data they can handle, and the amount of data they can process in a reasonable
    time. C) Having reviewed the real-world perspective of how IoT data is analyzed
    by over 20 authors, many significant and insightful results have been revealed
    regarding data characteristics. We discuss the results in Section 6 and Table
    1. To gain a deeper insight into IoT smart data, patterns must be extracted and
    the generated data interpreted. Cognitive algorithms undertake interpretation
    and matching, much as the human mind would do. Cognitive IoT systems previously
    learn from generated data and improve when performing repeated tasks. Cognitive
    computing acts as a prosthetic for human cognition by analyzing massive amount
    of data and responding to questions that humans might have when making certain
    decisions. Cognitive IoT plays an important role in enabling the extraction of
    meaningful patterns from generated IoT smart data [8]. Table 1. Characteristic
    of smart data in smart cities. Smart city use cases Type of data Where data processed
    References Smart Traffic Stream/Massive Data Edge [14], [43] Smart Health Stream/Massive
    Data Edge/Cloud [44] Smart Environment Stream/Massive Data Cloud [45] Smart Weather
    Prediction Stream Data Edge [46] Smart Citizen Stream Data Cloud [47], [48] Smart
    Agriculture Stream Data Edge/Cloud [49] Smart Home Massive/Historical Data Cloud
    [50] Smart Air Controlling Massive/Historical Data Cloud [38] Smart Public Place
    Monitoring Historical Data Cloud [51] Smart Human Activity Control Stream/Historical
    Data Edge/Cloud [52], [53] D) A smart city has been selected as our primary use
    case in IoT for three reasons: First, among all of the reviewed articles the focus
    of 60 percent is on the field of the smart cities. Second, smart cities include
    many of the other use cases in IoT. Third, there are many open datasets for smart
    city applications that are easily accessible for researchers. Furthermore, a Support
    Vector Machine (SVM) algorithm is implemented on the Aarhus City smart traffic
    data to predict traffic hours during one day. By answering the above questions
    about IoT smart data and machine learning algorithms, we would be able to choose
    the best machine learning algorithm that can handle IoT smart data characteristics.
    Unlike similar surveys regarding machine learning and IoT, readers of this article
    would be able to obtain a deep and technical understanding of machine learning
    algorithms, IoT applications, and IoT data characteristics along with both technical
    and simple implementations. 1.2. Organization The rest of this paper is organized
    as follows. Related articles in this field are reviewed and reported in Section
    2. IoT applications and communication protocols, computing frameworks, IoT architecture,
    and smart city segments are reviewed, explained, summarized, and illustrated in
    Section 3. The quality of data, big data generation, sensor data integration,
    and semantic data annotation are reviewed in Section 4. Machine learning algorithms
    in eight categories based on recent studies on IoT data and frequency of machine
    learning algorithms are reviewed and summarized in Section 5. The matching of
    the algorithms to particular smart city applications is carried out in Section
    6, and the conclusion together with future research trends and open issues are
    presented in Section 7, Fig. 1 shows the structure of the survey. Download : Download
    high-res image (184KB) Download : Download full-size image Fig. 1. Organization
    of survey. 2. Literature review Since IoT represents a new concept for the Internet
    and smart data, it is a challenging area in the field of computer science. The
    important challenges for researchers with respect to IoT consist of preparing
    and processing data. Ref. [9] proposed four data mining models for processing
    IoT data. The first is a multi layer model, based on a data collection layer,
    a data management layer, an event processing model, and a data mining service
    layer. The second model is a distributed data mining model, proposed for data
    deposition at different sites. The third is a grid-based data mining model where
    the authors seek to implement heterogeneous, large scale, and high performance
    applications. The final model is a data mining model from a multi technology integration
    perspective, where a corresponding framework for the future Internet is described.
    Ref. [10] performed research into warehousing Radio Frequency Identification (RFID)
    data, with a focus specifically on managing and mining RFID stream data. Ref.
    [11] introduced a systematic method for reviewing data mining knowledge and techniques
    in most common applications. In this study, they reviewed some data mining functions
    like classification, clustering, association analysis, time series analysis, and
    outline detection. They revealed that the data generated by data mining applications,
    such as e-commerce, industry, healthcare, and city governance are similar to that
    of the IoT data. Following their findings, they assigned the most popular data
    mining functionality to the application and determined which data mining functionality
    was the most appropriate for processing each specific application''s data. Ref.
    [12] ran a survey to respond to some of the challenges in preparing and processing
    data on the IoT through data mining techniques. The authors divided their research
    into three major sections. In the first and second sections, they explain IoT,
    the data, and the challenges that exist in this area, such as building a model
    for mining, and mining algorithms for IoT. In the third section, they discuss
    the potential and open issues that exist in this field. Here, it is summarized
    that data mining on IoT data involves three major concerns: First, it must be
    shown that processing the data will solve the chosen problems. Next, the data
    characteristics must be extracted from the generated data, and then, the appropriate
    algorithm is chosen according to the taxonomy of algorithms and data characteristics.
    Ref. [13] attempted to explain the smart city infrastructure in IoT and discussed
    advanced communication to support added-value services for the administration
    of the city and citizens thereof. The authors provide a comprehensive review of
    enabling technologies, protocols, and architectures for smart city. In the technical
    part of the article, the authors reviewed the data of Padova Smart City. 3. Internet
    of Things The purpose of Internet of Things (IoT) is to develop a smarter environment
    and a simplified life-style by saving time, energy, and money. Through this technology,
    expenses in different industries can be reduced. The enormous investments and
    many studies running on IoT have made IoT a growing trend in recent years. IoT
    consists of a set of connected devices that can transfer data among one another
    in order to optimize their performance; these actions occur automatically and
    without human awareness or input. IoT includes four main components: 1) sensors,
    2)processing networks, 3) data analysis data, and 4) system monitoring. The most
    recent advances made in IoT began when RFID tags were put into use more frequently,
    lower cost sensors became more available, web technology developed, and communication
    protocols changed [14], [15]. The IoT is integrated with various technologies,
    and connectivity is a necessary and sufficient condition for it to function. Therefore,
    communication protocols are constituents of this technology that should be enhanced
    [16], [17]. In IoT, communication protocols can be divided into three major components:
    (1) Device to Device (D2D): this type of communication enables communication between
    nearby mobile phones. This represents the next generation of cellular networks.
    (2) Device to Server (D2S): in this type of communication device, all the data
    is sent to the servers, which can be close or far from the devices. This type
    of communication is mostly applied to cloud processing. (3) Server to Server (S2S):
    in this type of communication, servers transmit data between each other. This
    type of communication is mostly applied for cellular networks. Processing and
    preparing data for these communications is a critical challenge. To respond to
    this challenge, different kinds of data processing, such as analytics at the edge,
    stream analysis, and IoT analysis at the database, must be applied. The decision
    to apply any of the mentioned processes depends on the particular application
    and its needs [18]. Fog and cloud processing are two analytical methods adopted
    for processing and preparing data before transferring it to other things. The
    whole task of IoT is summarized as follows: First, sensors and IoT devices collect
    information from the environment. Next, knowledge is extracted from the raw data.
    Then, data is ready for transferring to other objects, devices, or servers through
    the Internet. 3.1. Computing framework Another important part of IoT is the computing
    framework of processing data, the most famous of which are fog and cloud computing.
    IoT applications use both frameworks depending on the application and process
    location. In some applications, data should be processed upon generation, while
    in other applications it is not necessary to process data immediately. The instant
    processing of data and the network architecture that supports it is known as fog
    computing. Collectively, these are applied for edge computing [19]. 3.1.1. Fog
    computing Here, the architecture of fog computing is applied to migrating information
    from a data center task to the edge of the servers. This architecture is built
    based on the edge servers. Fog computing provides limited computing, storage,
    and network services, also providing logical intelligence and filtering of data
    for data centers. This architecture has been and is being implemented in vital
    areas like eHealth and military applications [20], [21]. 3.1.2. Edge computing
    In this architecture, processing is run at a distance from the core, toward the
    edge of the network. This type of processing enables data to be initially processed
    at edge devices. Devices at the edge may not be connected to the network in a
    continuous manner, and so they require a copy of the master data/reference data
    for offline processing. Edge devices have different features such as 1) enhancing
    security, 2) filtering and cleaning data, and 3) storing local data for local
    use [22]. 3.1.3. Cloud computing Here, data for processing is sent to data centers,
    and after being analyzed and processed, they become accessible. This architecture
    has high latency and high load balancing, indicating that this architecture is
    not sufficient for processing IoT data because most processing should run at high
    speeds. The volume of this data is high, and big data processing will increase
    the CPU usage of the cloud servers [23]. There are various types of cloud computing:
    (1) Infrastructure as a Service (IaaS): where the company purchases all the equipment
    like hardware, servers, and networks. (2) Platform as a Service (PaaS): where
    all the equipment above is placed for rent on the Internet. (3) Software as a
    Service(SaaS): where a distributed software model is presented. In this model,
    all practical software will be hosted by a service provider and is accessible
    to the users through the Internet [24]. (4) Mobile Backend as a Service (MBaaS):
    also known as Backend as a Service (BaaS), provides a web or mobile application
    with a path in order to connect the application to the backend cloud storage.
    MBaaS provides features like user management, push notifications, and integration
    with social network services. This cloud service benefits from an Application
    Programming Interface (API) and software Development Kits (SDK). 3.1.4. Distributed
    computing This architecture is designed for processing high volumes of data. In
    IoT applications, because the sensors generate data in a repetitive manner, big
    data challenges are encountered [22], [25]. To overcome this phenomenon, distributed
    computing is designed to divide data into packets, and assign the packets to different
    computers for processing. This distributed computing has different frameworks
    like Hadoop and Spark. When migrating from cloud to fog and distributed computing,
    the following phenomena occur: 1) a decrease in network loading, 2) an increase
    in data processing speed, 3) a reduction in CPU usage, 4) a reduction in energy
    consumption, and 5) an ability to process a higher volume of data. Because the
    smart city is one of the primary applications of IoT, the most important use cases
    of the smart city and their data characteristics are discussed in the following
    sections. 4. Smart city Cities always demand services to enhance the quality of
    life and make existing services more efficient. In the last few years, the concept
    of smart cities has played an important role in academia and industry [26]. With
    an increase in the population and complexity of city infrastructures, cities seek
    methods to handle large-scale urbanization problems. IoT plays a vital role in
    collecting data from the city environment. IoT enables cities to use live status
    reports and smart monitoring systems to react more intelligently to emerging situations
    such as earthquakes and volcanoes. By adopting IoT technologies in city, the majority
    of the city''s assets can be connected to one another, making them more readily
    observable, and consequently, more easy to monitor and manage. The purpose of
    building smart cities is to improve services like traffic management, water management,
    and energy consumption, as well as improving the quality of life for the citizens.
    The objective of smart cities is to transform rural and urban areas into places
    of democratic innovation [27]. Such smart cities seek to decrease the expenses
    in public health, safety, transportation, and resource management, thus assisting
    their economies [28]. In Ref. [29], the authors believe that in the long term,
    the vision for a smart city would be that all the cities'' systems and structures
    will monitor their own conditions and carry out self-repair upon need. 4.1. Use
    case A city has an important effect on society because the city touches all aspects
    of human life. A smart city can assist in having a comfortable life. The use cases
    for smart cities consist of smart energy, smart mobility, smart citizens, and
    urban planning. This division is based on a review of the latest studies in this
    field and the most recent reports released by McKinsey and Company. 4.1.1. Smart
    energy Smart energy is one of the most important research areas of IoT because
    it is essential to reduce overall power consumption [30]. It offers high-quality
    and affordable environmentally friendly energy. Smart energy includes a variety
    of operational and energy measures, including Smart energy applications, smart
    leak monitoring, and renewable energy resources, etc. Using smart energy (i.e.,
    deployment of a smart grid) implies a fundamental re-engineering of the electricity
    services [31]. The smart grid is one of the most important applications of smart
    energy. It includes many high-speed time series data to monitor key devices. For
    managing this kind of data, [32] introduced a method to manage and analyze time
    series data in order to make them organized on demand. Moreover, the smart energy
    infrastructure will become more complex in the future, and therefore [33] proposed
    a simulation system to test new concepts and optimization approaches and forecast
    future consumption. Another important application of smart energy is leak monitoring
    systems. The objective of such a system is to model a water or gas management
    system that would optimize energy resource consumption [34], [35]. 4.1.2. Smart
    mobility Mobility is another important aspect of any city. Through IoT, city officials
    can improve the quality of life in the city. Smart mobility can be divided into
    the following three major components: (1) Autonomous cars: IoT will have a broad
    range of effects on how vehicles are run. The most important question is about
    how IoT can improve vehicle services. IoT sensors and wireless connections make
    it possible to create self-driving cars and monitor vehicle performance. With
    the data collected from vehicles, the most popular/congested routes can be predicted,
    and decisions can be made to decrease traffic congestion. Self-driving cars can
    improve passenger safety because they have the ability to monitor the driving
    of the other cars. (2) Traffic control: Optimizing the traffic flow by analyzing
    sensor data is another part of mobility in the city. For traffic control, traffic
    data will be collected from cars, road cameras, and counter sensors installed
    on roads. (3) Public transportation: IoT can improve the public transportation
    system management by providing accurate location and routing information to a
    smart transportation system. It can assist passengers in making better decisions
    in their schedules as well as decrease the amount of wasted time. There exist
    different perspectives on how to build smart public transportation systems. These
    systems need to manage different kinds of data like vehicle location data and
    traffic data. Smart public transportation systems should be real-time oriented
    in order to make proper decisions in real-time as well as use historical data
    analysis [36]. For instance, [37] proposed a mechanism that considers smart city
    devices as graph nodes, and the authors used big data solutions to solve these
    issues. 4.1.3. Smart citizens This use case for smart cities covers a broad range
    of areas in human lives, such as environmental monitoring, crime monitoring, and
    social health. The environment with all its components is fundamental and vital
    for life. Consequently, making progress in technology is guaranteed to enhance
    security. Close monitoring devoted to crime would also contribute to overall social
    health. 4.1.4. Urban planning Another important aspect in use cases for the smart
    city is reaching long-term decisions. Because the city and environment both play
    major roles in human life, reaching decisions in this context is critical. By
    collecting data from different sources, it is possible to make a decision for
    the future of the city. Making decisions affecting the city infrastructure, design,
    and functionality is called urban planning. IoT is beneficial in this area because
    through smart city data analysis, the authorities can predict which part of the
    city will be more crowded in the future and find solutions for the potential problems.
    A combination of IoT and urban planning would have a major effect on scheduling
    future infrastructure improvements. 4.2. Smart city data characteristics Smart
    city devices generate data in a continuous manner, indicating that the data gathered
    from traffic, health, and energy management applications would generate a sizable
    volume. In addition, because the data generation rate varies for different devices,
    processing data with different generation rates is a challenge. For example, the
    frequency of GPS sensor updates is measured in seconds, while the frequency of
    updates for temperature sensors may be measured hourly. Whether the data generation
    rate is high or low, there always exists a danger of losing important information.
    To integrate the sensory data collected from heterogeneous sources is challenging
    [14], [38]. Ref. [39] applied big data analytic methods to distinguish the correlation
    between the temperature and traffic data in Santander, Spain. Ref. [40] proposed
    a new framework integrating big data analysis and Industrial Internet of Things
    (IIoT) technologies for Offshore Support Vessels (OSV) based on a hybrid CPU/GPU
    high-performance computing platform. Another characteristic is the dynamic nature
    of the data. Data for autonomous cars is an example of dynamic data because the
    sensor results will change based on different locations and times. The quality
    of the collected data is important, particularly for smart city data, which have
    different qualities due to the fact that they are generated from heterogeneous
    sources. According to Ref. [41], the quality of information from each data source
    depends on three factors: 1) Error in measurements or precision of data collection.
    2) Devices'' noise in the environment. 3) Discrete observation and measurements.
    To achieve a better Quality of Information (QoI), it is necessary to extract higher
    levels of abstraction and provide actionable information to other services. QoI
    in smart data depends on the applications and characteristics of data. There exist
    different solutions to improve QoI. For example, to improve the accuracy of data,
    selecting trustworthy sources and combining the data from multiple resources is
    of key importance. By increasing the frequency and density of sampling, the precision
    of the observations and measurements will be improved, which would lead to a reduction
    in environmental noise. The data characteristics in both IoT and the smart city
    are illustrated in Fig. 2. Semantic data annotation is another prime solution
    to enhancing data quality. Smart devices generate raw data with low-level abstractions.
    For this reason, the semantic models provide interpretable descriptions of data,
    its quality, and its original attributes [28]. Semantic annotation is beneficial
    in interpretable and knowledge-based information fusion [42]. Smart data characteristics
    in smart cities are tabulated in brief, in Table 1. Download : Download high-res
    image (132KB) Download : Download full-size image Fig. 2. Data characteristics.
    5. Taxonomy of machine learning algorithms Machine learning is a subfield of computer
    science, and is a type of Artificial Intelligence (AI) that provides machines
    with the ability to learn without explicit programming. Machine learning evolved
    from pattern recognition and computational learning theory. Here, some essential
    concepts of machine learning are discussed as well as the frequently applied machine
    learning algorithms for smart data analysis. A learning algorithm takes a set
    of samples as an input named a training set. In general, there exist three main
    categories of learning: supervised, unsupervised, and reinforcement [54], [55],
    [56]. In an informal sense, in supervised learning, the training set consists
    of samples of input vectors together with their corresponding appropriate target
    vectors, also known as labels. In unsupervised learning, no labels are required
    for the training set. Reinforcement learning deals with the problem of learning
    the appropriate action or sequence of actions to be taken for a given situation
    in order to maximize payoff. This article focuses on supervised and unsupervised
    learning since they have been and are still widely applied in IoT smart data analysis.
    The objective of supervised learning is to learn how to predict the appropriate
    output vector for a given input vector. Applications where the target labels consist
    of a finite number of discrete categories are known as classification tasks. Cases
    where the target labels are composed of one or more continuous variables are known
    as regression tasks [57]. Defining the objective of unsupervised learning is difficult.
    One of the major objectives is to identify sensible clusters of similar samples
    within the input data, known as clustering. Moreover, the objective may be the
    discovery of a useful internal representation of the input data by preprocessing
    the original input variable in order to transfer it into a new variable space.
    This preprocessing stage can significantly improve the result of the subsequent
    machine learning algorithm and is named feature extraction [55]. The frequently
    applied machine learning algorithms for smart data analysis and IoT use cases
    are shown in Table 2 and Table 3 accordingly. Table 2. Overview of frequently
    used machine learning algorithms for smart data analysis. Machine learning algorithm
    Data processing tasks Section Representative references K-Nearest Neighbors Classification
    5.1.1 [58], [59] Naive Bayes Classification 5.1.2 [60], [61] Support Vector Machine
    Classification 5.1.3 [62], [63], [64], [65] Linear Regression Regression 5.2.1
    [66], [67], [68] Support Vector Regression Regression 5.2.2 [69], [70] Classification
    and Regression Trees Classification/Regression 5.3.1 [71], [72], [73] Random Forests
    Classification/Regression 5.3.2 [74] Bagging Classification/Regression 5.3.3 [75]
    K-Means Clustering 5.4.1 [76], [77], [78] Density-Based Spatial Clustering of
    Applications with Noise Clustering 5.4.2 [79], [80], [81] Principal Component
    Analysis Feature extraction 5.5.1 [82], [83], [84], [85], [86] Canonical Correlation
    Analysis Feature extraction 5.5.2 [87], [88] Feed Forward Neural Network Regression/Classification/Clustering/Feature
    extraction 5.6.1 [57], [89], [90], [91], [92], [93] One-class Support Vector Machines
    Anomaly detection 5.8.1 [94], [95] Table 3. Overview of applying machine learning
    algorithms to Internet of Things use cases. Machine learning Algorithm IoT, Smart
    City use cases Metric to Optimize References Classification Smart Traffic Traffic
    Prediction, Increase Data Abbreviation [14], [43] Clustering Smart Traffic, Smart
    Health Traffic Prediction, Increase Data Abbreviation [14], [43], [44] Anomaly
    Detection Smart Traffic, Smart Environment Traffic Prediction, Increase Data Abbreviation,
    Finding Anomalies in Power Dataset [14], [43], [45] Support Vector Regression
    Smart Weather Prediction Forecasting [46] Linear Regression Economics, Market
    analysis, Energy usage Real Time Prediction, Reducing Amount of Data [48], [148]
    Classification and Regression Trees Smart Citizens Real Time Prediction, Passengers
    Travel Pattern [47], [48] Support Vector Machine All Use Cases Classify Data,
    Real Time Prediction [48], [109] K-Nearest Neighbors Smart Citizen Passengers''
    Travel Pattern, Efficiency of the Learned Metric [47], [96] Naive Bayes Smart
    Agriculture, Smart Citizen Food Safety, Passengers Travel Pattern, Estimate the
    Numbers of Nodes [47], [49], [148] K-Means Smart City, Smart Home, Smart Citizen,
    Controlling Air and Traffic Outlier Detection, fraud detection, Analyze Small
    Data set, Forecasting Energy Consumption, Passengers Travel Pattern, Stream Data
    Analyze [38], [47], [50], [52], [116], [117] Density-Based Clustering Smart Citizen
    Labeling Data, Fraud Detection, Passengers Travel Pattern [47], [52], [109] Feed
    Forward Neural Network Smart Health Reducing Energy Consumption, Forecast the
    States of Elements, Overcome the Redundant Data and Information [21], [126], [148]
    Principal Component Analysis Monitoring Public Places Fault Detection [51] Canonical
    Correlation Analysis Monitoring Public Places Fault Detection [51] One-class Support
    Vector Machines Smart Human Activity Control Fraud Detection, Emerging Anomalies
    in the data [52], [53] In the following subsections, we assume that we are given
    a training set containing N training samples denoted as , where is the ith M-dimensional
    training input vector and is the corresponding desired P-dimensional output vector.
    Moreover, we collect the M-dimensional input vectors in a matrix, written as ,
    and we also collect their corresponding desired output vectors in a matrix written
    as . However, in Section 5.4 the training set does not contain the desired output
    vectors. 5.1. Classification 5.1.1. K-nearest neighbors In K-Nearest Neighbors
    (KNN), the objective is to classify a new given unseen data point by looking at
    the K given data points in the training set that are closest to it in the input
    or feature space. Therefore, to find the K nearest neighbors of the new data point,
    we need to use a distance metric, such as Euclidean distance, norm, angle, Mahalanobis
    distance or Hamming distance. To formulate the problem, let us denote the new
    input vector (data point) by x, its K nearest neighbors by , the predicted class
    label for x by y, and the class variable by a discrete random variable t. Additionally,
    denotes the indicator function: if s is true and otherwise. The form of the classification
    task is (1) i.e., the input vector x will be labeled by the mode of its neighbors''
    labels [58]. One limitation of KNN is that it requires storing the entire training
    set, which makes KNN unscalable to large data sets. In [59], the authors have
    addressed this issue by constructing a tree-based search with a one-off computation.
    Moreover, there exists an online version of KNN classification. It is worth noting
    that KNN can also be used for regression tasks [55]. However, we will not explain
    this here, because it is not a frequently employed algorithm for smart data analysis.
    Ref. [96] proposes a new framework for learning a combination of multiple metrics
    for a robust KNN classifier. Furthermore, [47] compares KNN with a rough-set-based
    algorithm for classifying the travel pattern regularities. 5.1.2. Naive Bayes
    Given a new, unseen data point (input vector) , naive Bayes classifiers, which
    are a family of probabilistic classifiers, classify z based on applying Bayes''
    theorem with the “naive” assumption of independence between the features (attributes)
    of z given the class variable t. By applying Bayes'' theorem, we have (2) and
    by applying the naive independence assumption and some simplifications, we have
    (3) Therefore, the form of the classification task is (4) where y denotes the
    predicted class label for z. Different naive Bayes classifiers use different approaches
    and distributions to estimate and [61]. Naive Bayes classifiers require a small
    number of data points to be trained, and can deal with high-dimensional data points,
    and also are fast and highly scalable [60]. Moreover, they are a popular model
    for applications, such as spam filtering [97], text categorization, and automatic
    medical diagnosis [98]. Ref. [49] used this algorithm to combine factors to evaluate
    the trust value and calculate the final quantitative trust of agricultural product.
    5.1.3. Support vector machine Classical Support Vector Machines (SVMs) are non-probabilistic,
    binary classifiers that aim to find the dividing hyperplane that separates both
    classes of the training set with the maximum margin. Then, the predicted label
    of a new, unseen data point is determined based on which side of the hyperplane
    it falls [62]. First, we discuss the linear SVM that finds a hyperplane that is
    a linear function of the input variable. To formulate the problem, we denote the
    normal vector to the hyperplane by w and the parameter for controlling the offset
    of the hyperplane from the origin along its normal vector by b. Moreover, to ensure
    that SVMs can deal with outliers in the data, we introduce a variable , called
    a slack variable, for every training point , which gives the distance by which
    this training point violates the margin in units of . This binary linear classification
    task is described using a constrained optimization problem of the form (5) where
    parameter determines how heavily a violation is punished [64], [63]. It should
    be noted that although we used the norm here for the penalty term , there exist
    other penalty terms, such as the norm, which should be chosen with respect to
    the needs of the application. Moreover, the parameter C is a hyperparameter which
    can be chosen via cross-validation or Bayesian optimization. There exist various
    techniques to solve the constrained optimization problem of equation (5), such
    as quadratic programming optimization [99], sequential minimal optimization [100],
    and P-packSVM [101]. One important property of SVMs is that the resulting classifier
    only uses a few training points, which are called support vectors, to classify
    a new data point. In addition to performing linear classification, SVMs can perform
    a non-linear classification, which finds a hyperplane that is a non-linear function
    of the input variable. To do so, we implicitly map an input variable into high-dimensional
    feature spaces in a process called a kernel trick [64]. In addition to performing
    binary classification, SVMs can perform multiclass classification. There are various
    methods to achieve this, such as One-vs-all (OVA) SVM, All-vs-all (AVA) SVM [54],
    Structured SVM [102], and the Weston and Watkins [103] version. SVMs are among
    the best off-the-shelf supervised learning models that are capable of effectively
    dealing with high-dimensional data sets and are efficient in terms of memory usage,
    owing to the employment of support vectors for prediction. One significant drawback
    of this model is that it does not directly provide probability estimates. When
    given a solved SVM model, its parameters are difficult to interpret [104]. SVMs
    are useful in many real-world applications such as hand-written character recognition
    [105], image classification [106], and protein classification [107]. Finally,
    we should note that SVMs can be trained in an online fashion, which is addressed
    in [108]. Ref. [109] proposed a method on the Intel Lab Dataset. This data set
    consists of four environmental variables (temperature, voltage, humidity and light)
    collected through S4 Mica2Dot sensors over 36 days at a per-second rate. 5.2.
    Regression 5.2.1. Linear regression In linear regression, the objective is to
    learn a function . This is a mapping and is a linear combination of a fixed set
    of linear or nonlinear functions of the input variable, denoted as and called
    basic functions. The form of is (6) where w is the weight vector or matrix , and
    . There exists a broad range of basic functions, such as polynomial, gaussian,
    radial, and sigmoidal basic functions, which should be chosen with respect to
    the application [68], [66]. For training the model, there exists a range of approaches:
    Ordinary Least Square, Regularized Least Squares, Least-Mean-Squares (LMS) and
    Bayesian Linear Regression. Among these, LMS is of interest since it is fast,
    scalable to large data sets, and it learns the parameters online by applying the
    technique of stochastic gradient descent, also known as sequential gradient descent
    [67], [55]. By using suitable basic functions it can be shown that arbitrary nonlinearities
    in the mapping from the input variable to the output variable can be modeled.
    However, the assumption of fixed basis functions leads to significant shortcomings
    with this approach. For example, an increase in the dimension of the input space
    is coupled with rapid growth in the number of basis functions [55], [66], [56].
    Linear regression can process at a high rate [48], and this algorithm can be used
    to analyze and predict the energy usage of buildings. 5.2.2. Support vector regression
    The SVM model described in Section 5.1.3 can be extended to solve regression problems
    through a process called Support Vector Regression (SVR). Analogous to support
    vectors in SVMs, the resulting SVR model depends only on a subset of the training
    points, owing to the rejection of training points that are close to the model
    prediction [69]. Various implementations of SVR exist such as epsilon-support
    vector regression and nu-support vector regression [70]. The authors of [46] proposed
    a hybrid method to obtain accurate temperature and humidity data predictions.
    5.3. Combining models 5.3.1. Classification and regression trees In Classification
    and Regression Trees (CART), the input space is partitioned into axis-aligned
    cuboid regions , and then a separate classification or regression model is assigned
    to each region to predict the label for data points fall into that region [71].
    Given a new, unseen input vector (data point) x, the process for predicting the
    corresponding target label can be explained by the traversal of a binary tree
    corresponding to a sequential decision-making process. An example of a model for
    classification is one that predicts a particular class for each region, and the
    example of regression is a model that predicts a constant for each region. To
    formulate the classification task, we denote a class variable by a discrete random
    variable t and the predicted class label for x by y. The classification task takes
    the form (7) where is the indicator function described in Section 5.1.1. This
    equation states that x will be labeled by the most common (mode) label in its
    corresponding region [73]. To formulate the regression task, we denote the value
    of the output vector by t and the predicted output vector for x by y. The regression
    task is expressed as (8) i.e., the output vector for x will be the mean of the
    output vectors of data points in its corresponding region [73]. Download : Download
    high-res image (284KB) Download : Download full-size image To train CART, the
    structure of the tree should be determined based on the training set. This means
    determining the split criterion at each node, along with the threshold parameter
    value. Finding the optimal tree structure is an NP-complete problem, and therefore
    a greedy heuristic, which constructs the tree top-down and chooses the best split
    node-by-node, is used to train CART. To achieve a better generalization and reduce
    overfilling, some stopping criteria should be used for constructing the tree.
    Possible stopping criterion are the maximum depth reached, whether the distribution
    in the branch is pure, whether the benefit of splitting is below a certain threshold,
    and whether the number of samples in each branch is below the criteria threshold.
    Moreover, after constructing the tree a pruning procedure can be used to reduce
    overfitting [72], [55], [56]. Algorithm 1 describes how to train CART. The major
    strength of CART is its human interpretability, owing to its tree structure. Additionally,
    it is fast and scalable to large data sets. However, it is very sensitive to the
    choice of the training set [110]. Another shortcoming of this model concerns unsmooth
    labeling of the input space since each region of the input space is associated
    with exactly one label [73], [55]. Ref. [47] proposes an efficient and effective
    data-mining procedure that models the travel patterns of transit riders in Beijing,
    China. 5.3.2. Random forests In random forests, instead of training a single tree,
    an army of trees are trained. Each tree is trained on a subset of the training
    set, chosen randomly along with a replacement, using a randomly chosen subset
    of M input variables (features) [74]. From here, there are two scenarios for predicting
    the label of a new, unseen data point: (1) in classification tasks, this is set
    as the mode of the labels predicted by each tree; (2) in regression tasks it is
    set as the mean of the labels predicted by each tree. There is a tradeoff between
    different values of M. A value of M that is too small leads to random trees with
    poor prediction power, whereas a value of M that is too large leads to very similar
    random trees. Random forests have a very high accuracy, but this comes at the
    cost of losing human interpretability [111]. Additionally, they are fast and scalable
    to large data sets, and have many real-world applications, such as body pose recognition
    [112] and body part classification. 5.3.3. Bagging Bootstrap aggregating, also
    called bagging, is an ensemble technique that aims to improve the accuracy and
    stability of machine learning algorithms and reduce overfitting. In this technique,
    K new M sized training sets are generated by randomly choosing data points from
    the original training set with replacements. Then, on each new generated training
    set, a machine learning model is trained. The predicted label of a new, unseen
    data point is set as the mode of the labels predicted by each model in the case
    of classification tasks, and is set as the mean in the case of regression tasks.
    There are various machine learning models, such as CART and neural networks, for
    which the bagging technique can improve the results. However, bagging degrades
    the performance of stable models such as KNN [75]. Examples of practical applications
    include customer attrition prediction [113] and preimage learning [114], [115].
    5.4. Clustering 5.4.1. K-means In the K-means algorithm, the objective is to cluster
    the unlabeled data set into K clusters (groups), where data points belonging to
    the same cluster must have some similarities. In the classical K-means algorithm,
    the distance between data points is the measure of similarity. Therefore, K-means
    seeks to find a set of K cluster centers, denoted as , such that the distances
    between data points and their nearest center are minimized [77]. To denote the
    assignment of data points to the cluster centers, we use a set of binary indicator
    variables , so that if the data point is assigned to the cluster center , then
    . We formulate the problem as follows: (9) Algorithm 2 describes how to learn
    the optimal cluster centers and the assignment of the data points }. Download
    : Download high-res image (209KB) Download : Download full-size image In practice,
    K-means is a very fast and highly scalable algorithm. Moreover, there is an online
    stochastic version of K-means [78]. However, this approach has many limitations
    because of the use of Euclidean distance as the measure of similarity. For instance,
    it has limitations regarding the types of data variables that can be considered,
    and cluster centers are not robust against outliers. Additionally, the K-means
    algorithm assigns each data point only one of the clusters, which may lead to
    inappropriate clusters in some cases [76]. Ref. [116] used MapReduce to analyze
    the numerous small data sets and proposes a cluster strategy for a high volume
    of small data based on the K-means algorithm. Ref. [47] applied K-Means++ to cluster
    and classify travel pattern regularities. Ref. [117] introduced a real-time event
    processing and clustering algorithm for analyzing sensor data, by using the OpenIoT1
    middleware as an interface for innovative analytical IoT services. 5.4.2. Density-based
    spatial clustering of applications with noise In a Density-Based approach to Spatial
    Clustering of Applications with Noise (DBSCAN), the objective is to cluster a
    given unlabeled data set based on the density of its data points. In this model,
    groups of dense data points (data points with many close neighbors) are considered
    as clusters and data points in regions with low-density are considered as outliers
    [80]. Ref. [79] present an algorithm to train a DBSCAN model. In practice, DBSCAN
    is efficient on large datasets, and is fast and robust against outliers. Furthermore,
    it is capable of detecting clusters of arbitrary shape (i.e., spherical, elongated,
    and linear). Moreover, the model determines the number of clusters based on the
    density of the data points, unlike K-means, which requires the number of clusters
    to be specified [79]. However, there are some disadvantages associated with DBSCAN.
    For example, in the case of a data set with large differences in densities, the
    resulting clusters are destitute. Additionally, the performance of the model is
    highly sensitive to the distance metric that is used for determining if a region
    is dense [81]. It is worth, however, noting that DBSCAN is among the most widely
    used clustering algorithms with numerous real-world applications such as anomaly
    detection in temperature data [118] and X-ray crystallography [79]. The authors
    of [109] believe that knowledge discovery in data streams is an important task
    for research, business, and community. They applied DBSCAN to a data stream to
    reveal the number of existing classes and subsequently label the data. Furthermore,
    in [52] this algorithm is adopted to determine the arbitrary shape of a cluster.
    The DBSCAN algorithm produces sets of clusters of arbitrary shape and outlying
    objects. 5.5. Feature extraction 5.5.1. Principal component analysis In Principle
    Component Analysis (PCA), the objective is to orthogonally project data points
    onto an L dimensional linear subspace, called the principal subspace, which has
    the maximal projected variance [83], [85]. Equivalently, the objective can be
    defined as finding a complete orthonormal set of L linear M-dimensional basis
    vectors and the corresponding linear projections of data points such that the
    average reconstruction error (10) is minimized, where is the average of all data
    points [82], [55]. Download : Download high-res image (200KB) Download : Download
    full-size image Algorithm 3 describes how the PCA technique achieves these objectives.
    Depending on how is calculated, the PCA algorithm can have different run times,
    i.e., , , and [119], [55], [120]. To deal with high dimensional data sets, there
    is alternative version of the PCA algorithm based on the iterative expectation
    maximization technique. In this algorithm, the covariance matrix of the dataset
    is not explicitly calculated, and its most computationally demanding steps are
    . In addition, this algorithm can be implemented in an online fashion, which can
    also be advantageous in cases where M and N are large [84], [56]. PCA is one of
    the most important preprocessing techniques in machine learning. Its application
    involves data compression, whitening, and data visualization. Examples of its
    practical applications are face recognition, interest rate derivative portfolios,
    and neuroscience. Furthermore, there exists a kernelized version of PCA, called
    KPCA, which can find nonlinear principal components [86], [84]. 5.5.2. Canonical
    correlation analysis Canonical Correlation Analysis (CCA) is a linear dimensionality
    reduction technique that is closely related to PCA. Unlike PCA, which deals with
    one variable, CCA deals with two or more variables. Its objective is to find a
    corresponding pair of highly cross-correlated linear subspaces so that within
    one of the subspaces there is a correlation between each component and a single
    component from the other subspace. The optimal solution can be obtained by solving
    a generalized eigenvector problem [87], [88], [55]. Ref. [51] compared PCA with
    CCA for detecting intermittent faults and masking failures of indoor environments.
    5.6. Neural network One of the shortcomings of linear regression is that it is
    necessary to decide the types of basic functions. It is often difficult to choose
    the optimal basic functions. Therefore, in neural networks we fix the number of
    basic functions, but allow the model to learn the parameters of the basic functions.
    There exist many different types of neural networks, with different architectures,
    use cases, and applications. In subsequent subsections, we discuss the successful
    models used in smart data analysis. Note that neural networks are fast to process
    new data, because they are compact models. However, in contrast they usually require
    a large amount of computation to be trained. Moreover, they are easily adaptable
    to regression and classification problems [91], [90]. 5.6.1. Feed forward neural
    network Feed Forward Neural Networks (FFNN), also known as Multilayer Perceptrons
    (MLP), are the most common type of neural networks in practical applications.
    To explain this model, we begin with a simple two-layer FFNN model. Assume that
    we have D basic functions and our objective is to learn the parameters of these
    basic functions together with the function f discussed in Section 5.2.1. The form
    of the classification or regression task is (11) where , , , and . Fig. 3 visualizes
    this FFNN model. The elements of the input vector x are units (neurons) in the
    input layer, are the units in the hidden layer, and are the units in the output
    layer, which outputs f. Note that the activities of the units in each layer are
    determined by a nonlinear function of the activities in the previous layer. In
    machine learning literature, is also called an activation function. The activation
    function in the last layer is chosen with respect to the data processing task.
    For example, for a regression task we use a linear activation function, and for
    multiclass classification we use a softmax activation function [57], [91], [55].
    Download : Download high-res image (131KB) Download : Download full-size image
    Fig. 3. A two-layer feed forward neural network. Note that each output neuron
    is connected to each input neuron, i.e., it is a fully connected neural network.
    With enough hidden units, an FFNN with at least two layers can approximate an
    arbitrary mapping from a finite input space to a finite output space [121], [122],
    [123]. However, finding the optimum set of weights w for an FFNN is an NP-complete
    problem [124]. To train the model, there exist a range of learning methods, such
    as stochastic gradient descent, adaptive delta, adaptive gradient, adaptive moment
    estimation, Nesterov''s accelerated gradient, and RMSprob. There also exist a
    range of methods to enhance the generalization of the model and reduce overfitting,
    such as weight decay, weight-sharing, early stopping, Bayesian fitting of neural
    nets, dropout, and generative pre-training [92], [89]. A two-layer FFNN has the
    properties of restricted representation and generalization. Moreover, compactly
    represented functions with l layers may require an exponential size with layers.
    Therefore, an alternative approach would be an FFNN with more than one hidden
    layers, i.e., a deep neural network, in which different high-level features share
    low-level features [93], [90]. Significant results using deep neural networks
    have led them to be the most commonly employed classifiers in machine learning
    [125], [57]. Ref. [126] presented a method to forecast the states of IoT elements
    based on an artificial neural network. The presented architecture of the neural
    network is a combination of a multilayered perceptron and a probabilistic neural
    network. Furthermore, [21] applied an FFNN for processing health data. 5.7. Time
    series and sequential data So far in this article, the discussed algorithms have
    all dealt with set of data points that are independent and identically distributed
    (i.i.d.). However, in many cases the set of data points are not i.i.d., and often
    result from time series measurements, such as the daily closing value of the Dow
    Jones Industrial Average or acoustic features at successive time frames. An example
    of a non-i.i.d. set of data points in a context other than a time series is a
    character sequence in a German sentence. In these cases, data points consist of
    sequences of pairs rather than being drawn in an i.i.d. manner from a joint distribution
    and such the sequences exhibit significant sequential correlations [127], [55].
    In a sequential supervised learning problem, when data points are sequential,
    we are given a training set consisting of N samples, where each of these is a
    pair of sequences. In each sample, and . Given a new, unseen input sequence x,
    the goal is to predict the desired output sequence y. Moreover, there exists a
    closely related problem called a time-series prediction problem, in which the
    goal is to predict the desired st element of a sequence . The key difference is
    that unlike in sequential supervised learning, where the entire sequence is available
    prior to any prediction, in a time-series prediction only the prefix of the sequence,
    up to the current time , is available. In addition, in sequential supervised learning
    the entire output sequence y must be predicted, whereas in time-series prediction
    the true observed values of the output sequence up to time t are given. It is
    worth noting that there is another closely-related task, called sequence classification,
    in which the goal is to predict the desired single categorical output y given
    an input sequence x [127]. There are a variety of machine learning models and
    methods that can deal with these tasks. Examples of these models and methods are
    hidden Markov models [128], [129], sliding-window methods [130], Kalman filter
    [131], conditional random fields [132], recurrent neural networks [133], [57],
    graph transformer networks [89], and maximum entropy Markov models [134]. In addition,
    sequential time series and sequential data exists in many real-world applications,
    including speech recognition [135], handwriting recognition [136], musical score
    following [137], and information extraction [134]. 5.8. Anomaly detection The
    problem of identifying items or patterns in a data set that do not conform to
    other items or an expected pattern is referred to as anomaly detection, and these
    unexpected patterns are called anomalies, outliers, novelties, exceptions, noise,
    surprises, or deviations [138], [139]. There are many challenges in the task of
    anomaly detection that distinguish it from a binary classification task. For example,
    an anomalous class is often severely underrepresented in the training set. In
    addition, anomalies exhibit considerably more diverse behavior than a normal system,
    and are sparse by nature [140], [139]. There are three broad categories of anomaly
    detection techniques, based on the extent to which the labels are available. In
    supervised anomaly detection techniques, a binary (abnormal and normal) labeled
    data set is given, and then a binary classifier is trained. This should deal with
    the problem of unbalanced data set resulting from the existence of few data points
    with an abnormal label. Semi-supervised anomaly detection techniques require a
    training set that contains only normal data points. Anomalies are then detected
    by building the normal behavior model of the system, and then testing the likelihood
    of the generation of the test data point by the learned model. Unsupervised anomaly
    detection techniques deal with an unlabeled data set, by making the implicit assumption
    that most of the data points are normal [139]. Anomaly detection is of use in
    many real-world applications, such as system health monitoring, credit card fraud
    detection, intrusion detection [141], detecting eco-system disturbances, and military
    surveillance. Moreover, anomaly detection can be used as a preprocessing algorithm
    for removing outliers from a data set, which can significantly improve the performance
    of subsequent machine learning algorithms, especially in supervised learning tasks
    [142], [143]. In the following subsection, we shall explain one-class support
    vector machines, which represent one of the most popular techniques for anomaly
    detection. Ref. [45] constructed a novel outlier detection algorithm that uses
    statistical techniques to identify outliers and anomalies in power datasets collected
    from smart environments. 5.8.1. One-class support vector machines One-class support
    vector machines (OCSVMs) represent a semi-supervised anomaly detection technique,
    and are an extension of the SVMs discussed in Section 5.1.3 for unlabeled data
    sets. Given a training set drawn from an underlying probability distribution P,
    OCSVMs aim to estimate a subset S of the input space such that the probability
    that a drawn sample from P lies outside of S is bounded by a fixed value between
    0 and 1. This problem is approached by learning a binary function f that captures
    the input regions where the probability density lives. Therefore, f is negative
    in the complement of S. The functional form of f can be computed by solving a
    quadratic programming problem [94], [95]. One-class SVMs are useful in many anomaly
    detection applications, such as anomaly detection in sensor networks [144], system-called
    intrusion detection [145], network intrusion detection [146], and anomaly detection
    in wireless sensor networks [147]. Ref. [52] reviewed various techniques for stream
    data outlier detection and the related issues in detail. Ref. [53] employed one-class
    SVM to detect anomalies by modeling complex normal patterns in the data. In the
    following section, we discuss how to overcome the challenges of applying machine
    learning algorithms to IoT smart data. 6. Discussion of taxonomy of machine learning
    algorithms To reach suitable decisions for smart data analysis, it is necessary
    to determine which task should be accomplished out of structure discovery, finding
    unusual data points, predicting values, predicting categories, or feature extraction.
    To discover the structure of unlabeled data, clustering algorithms can provide
    the most appropriate tools. K-means, described in 5.4.1, is the most well-known
    and frequently applied clustering algorithm, and can handle a large volume of
    data with a broad range of data types. Refs. [50], [52] proposed a method for
    applying the K-means algorithm for managing smart city and smart home data. DB-scan,
    described in 5.4.2, is another clustering algorithm the structure of data from
    unlabeled data, and is applied in [109], [52], [47] to cluster smart citizen behavior.
    To find unusual data points and anomalies in smart data, two important algorithms
    can be applied. Namely, these are the one-class SVM and PCA-based anomaly detection
    methods explained in 5.5.1, which can train anomalies and noisy data with a high
    performance. Refs. [52], [53] applied a one-class SVM to monitor and detect human
    activity anomalies. In order to predict values and classify sequenced data, the
    linear regression and SVR methods described in 5.2.1 and 5.2.2, respectively,
    are the two frequently applied algorithms. The objective of the models applied
    in these algorithms is to process and train data of high velocity. For example,
    [48], [46] applied a linear regression algorithm for real-time prediction. Another
    fast training algorithm is the classification and regression tree described in
    5.3.1, which has been applied to classify smart citizen behaviors [48], [47].
    To predict the categories of data, neural networks are suitable learning models
    for function approximation problems. Moreover, because smart data should be accurate
    and requires a long training time, a multi-class neural network can provide an
    appropriate solution. For instance, the FFNN explained in 5.6.1 has been applied
    to reduce future energy consumption, by predicting how data will be generated
    in the future and how the redundancy of this data will be removed [21], [126],
    [148]. The SVM explained in 5.1.3 is another popular classification algorithm,
    which is capable of handling massive amounts of data and classifying their different
    types. Because SVM can handle a high volume and a variety of types of data, it
    is commonly applied in most smart data processing algorithms. For example, [109],
    [48] applied SVM to classify traffic data. PCA and CCA, described in 5.5.1 and
    5.5.2, respectively, are the two algorithms most commonly applied for extracting
    features of data. Moreover, CCA can show the correlation between two categories
    of data. A type of PCA or CCA can also be applied to discover anomalies. Ref.
    [51] applied PCA and CCA to monitor public places and detect events in social
    areas. The chosen algorithm should be implemented and developed to reach the correct
    decisions. A sample implemented code is available from the open source GitHub
    license at https://github.com/mhrezvan/SVM-on-Smart-Traffic-Data. 7. Research
    trends and open issues As discussed previously, data analysis provides a significant
    contribution to IoT. In order to exploit the full potential of data analysis for
    extracting new insights from data, IoT must overcome some major challenges. These
    can be categorized into three different types. 7.1. IoT data characteristics Because
    the data is the basis of extracting knowledge, it is vital to have high quality
    information. This condition can affect the accuracy of knowledge extraction in
    a direct manner. Because IoT produces a high volume, fast velocity, and different
    varieties of data, preserving the data quality is a challenging task. Although
    many solutions have been introduced to solve these problems, none of them can
    handle all aspects of data characteristics in an accurate manner, because of the
    distributed nature of big data management solutions and real-time processing platforms.
    The abstraction of IoT data is low; that is, the data that comes from different
    resources in IoT consists mostly of raw data, and not sufficient for analysis.
    A wide variety of solutions have been proposed, while most of these require further
    improvement. For instance, semantic technologies tend to enhance the abstraction
    of IoT data through annotation algorithms, while they require further effort to
    overcome its velocity and volume. 7.2. IoT applications IoT applications fall
    into different categories according to their unique attributions and features.
    Certain issues should be consider for running data analysis in IoT applications
    in an accurate manner. First, the privacy of collected data is highly critical,
    because data collection processes can include personal or critical business data,
    which is inevitable to solve the privacy issues. Second, according to the vast
    number of resources and simply-designed hardware in IoT, it is vital to consider
    security parameters, such as network security and data encryption. Otherwise,
    by ignoring security in the design and implementation, an infected network of
    IoT devices can lead to a crisis. 7.3. IoT data analytic algorithms According
    to the characteristic of smart data, analytic algorithms should be able to handle
    big data. That is, IoT requires algorithms that can analyze data that comes from
    a variety of sources in real-time. Many attempts have been made to address this
    issue. For example, deep learning algorithms, which are a form of neural networks
    incorporating evolution can reach a high accuracy rate if they have enough data
    and time. Deep learning algorithms can easily be influenced by noisy smart data.
    Furthermore, neural network-based algorithms lack interpretation, that is, data
    scientists cannot understand the reasons for the model results. In the same manner,
    semi-supervised algorithms, which model a small amount of labeled data with a
    large amount of unlabeled data, can assist IoT data analysis. 8. Conclusions IoT
    consists of a vast number of different devices that are connected with each other
    and transmit huge amounts of data. The smart city is one of the most important
    applications of IoT, and provides various services in domains such as energy,
    mobility, and urban planning. These services can be enhanced and optimized by
    analyzing the smart data collected from these areas. To extract knowledge from
    collected data, many data analytic algorithms can be applied. Choosing a suitable
    algorithm for specific IoT or smart city application is an important issue. In
    this article, many IoT data analytic studies are reviewed to address this issue.
    Here, three facts should be considered in applying data analytic algorithms to
    smart data. The first is that different applications in IoT and smart cities have
    their own characteristics, such as the number of devices and types of the data
    that they generate. The second is that the generated data will have specific features
    that should be considered. The third is that the taxonomy of algorithms is another
    important aspect in applying data analysis to smart data. The findings in this
    article make it easy to choose a suitable algorithm for a particular problem.
    The analytic algorithms fall into eight categories, described in detail. This
    is followed by reviewing application specifics of smart city use cases. The characteristics
    and qualities of smart data are described in detail. In the discussion section,
    the manner in which data characteristics and application specifics can lead to
    choosing a proper data analytic algorithms is reviewed. In the regarding future
    trends, section recent issues and the future path for research in the field of
    smart data analytics are discussed. Acknowledgments The authors would like to
    thank Dr. Mohammadsaeid Ehsani and Mr. Ajit Joakar for their comments on the draft
    of the paper. We also thank Dr. Alireza Ahrabian and Utkarshani Jiamini for reviewing
    our paper. References [1] L. Atzori, A. Iera, G. Morabito The internet of things:
    a survey Comput. Netw., 54 (15) (2010), pp. 2787-2805 View PDFView articleView
    in ScopusGoogle Scholar [2] C. Cecchinel, M. Jimenez, S. Mosser, M. Riveill An
    architecture to support the collection of big data in the internet of things 2014
    IEEE World Congress on Services, IEEE (2014), pp. 442-449 View in ScopusGoogle
    Scholar [3] M. Weiser The computer for the 21st century Mob. Comput. Commun. Rev.,
    3 (3) (1999), pp. 3-11 CrossRefGoogle Scholar [4] A. Sheth Computing for human
    experience: semantics-empowered sensors, services, and social computing on the
    ubiquitous web IEEE Internet Comput., 14 (1) (2010), pp. 88-91 View in ScopusGoogle
    Scholar [5] J. Manyika, M. Chui, B. Brown, J. Bughin, R. Dobbs, C. Roxburgh, A.H.
    Byers Big Data: The Next Frontier for Innovation, Competition, and Productivity
    McKinsey Global Institute (2011) 156 p Google Scholar [6] A. Sheth Transforming
    big data into smart data: deriving value via harnessing volume, variety, and velocity
    using semantic techniques and technologies Data Engineering (ICDE), 2014 IEEE
    30th International Conference on, IEEE (2014) 2–2 Google Scholar [7] Amit Sheth
    Transforming big data into smart data: deriving value via harnessing volume, variety
    and velocity using semantics and semantic web keynote at the 21st Italian Symposium
    on Advanced Database Systems, June 30-July 03 (2013) Roccella Jonica, Italy Google
    Scholar [8] A. Sheth Internet of things to smart iot through semantic, cognitive,
    and perceptual computing IEEE Intell. Syst., 31 (2) (2016), pp. 108-112 View in
    ScopusGoogle Scholar [9] S. Bin, L. Yuan, W. Xiaoyi Research on data mining models
    for the internet of things 2010 International Conference on Image Analysis and
    Signal Processing, IEEE (2010), pp. 127-132 View in ScopusGoogle Scholar [10]
    H. Gonzalez, J. Han, X. Li, D. Klabjan Warehousing and analyzing massive rfid
    data sets 22nd International Conference on Data Engineering (ICDE’06), IEEE (2006)
    83–83 Google Scholar [11] F. Chen, P. Deng, J. Wan, D. Zhang, A.V. Vasilakos,
    X. Rong Data mining for the internet of things: literature review and challenges
    Int. J. Distrib. Sens. Netw., 2015 (2015), p. 12 View in ScopusGoogle Scholar
    [12] C.-W. Tsai, C.-F. Lai, M.-C. Chiang, L.T. Yang Data mining for internet of
    things: a survey IEEE Commun. Surv. Tutor., 16 (1) (2014), pp. 77-97 View in ScopusGoogle
    Scholar [13] A. Zanella, N. Bui, A. Castellani, L. Vangelista, M. Zorzi Internet
    of things for smart cities IEEE Internet Things J., 1 (1) (2014), pp. 22-32 Google
    Scholar [14] Y. Qin, Q.Z. Sheng, N.J. Falkner, S. Dustdar, H. Wang, A.V. Vasilakos
    When things matter: a survey on data-centric internet of things J. Netw. Comput.
    Appl., 64 (2016), pp. 137-153 View PDFView articleView in ScopusGoogle Scholar
    [15] M. Ma, P. Wang, C.-H. Chu Ltcep: efficient long-term event processing for
    internet of things data streams 2015 IEEE International Conference on Data Science
    and Data Intensive Systems, IEEE (2015), pp. 548-555 CrossRefView in ScopusGoogle
    Scholar [16] Payam Barnaghi, Amit Sheth The Internet of things: The story so far
    IEEE Internet Things, 915 (2014) Google Scholar [17] Z. Sheng, S. Yang, Y. Yu,
    A.V. Vasilakos, J.A. McCann, K.K. Leung A survey on the ietf protocol suite for
    the internet of things: standards, challenges, and opportunities IEEE Wirel. Commun.,
    20 (6) (2013), pp. 91-98 View in ScopusGoogle Scholar [18] F. Bonomi, R. Milito,
    J. Zhu, S. Addepalli Fog computing and its role in the internet of things Proceedings
    of the First Edition of the MCC Workshop on Mobile Cloud Computing, ACM (2012),
    pp. 13-16 CrossRefGoogle Scholar [19] M. Aazam, E.-N. Huh Fog computing micro
    datacenter based dynamic resource estimation and pricing model for iot 2015 IEEE
    29th International Conference on Advanced Information Networking and Applications,
    IEEE (2015), pp. 687-694 CrossRefView in ScopusGoogle Scholar [20] Y. Shi, G.
    Ding, H. Wang, H.E. Roman, S. Lu The fog computing service for healthcare Future
    Information and Communication Technologies for Ubiquitous HealthCare (Ubi-HealthTech),
    2015 2nd International Symposium on, IEEE (2015), pp. 1-5 Google Scholar [21]
    F. Ramalho, A. Neto, K. Santos, N. Agoulmine, et al. Enhancing ehealth smart applications:
    a fog-enabled approach 2015 17th International Conference on E-health Networking,
    Application & Services (HealthCom), IEEE (2015), pp. 323-328 CrossRefView in ScopusGoogle
    Scholar [22] A. Joakar A Methodology for Solving Problems with DataScience for
    Internet of Things Open Gardens (blog) (July 21, 2016) http://www.opengardensblog.futuretext.com/archives/2016/07/a-methodology-for-solvingproblems-with-datascience-for-internet-of-things.html
    [23] A. Papageorgiou, M. Zahn, E. Kovacs Efficient auto-configuration of energy-related
    parameters in cloud-based iot platforms Cloud Networking (CloudNet), 2014 IEEE
    3rd International Conference on, IEEE (2014), pp. 236-241 CrossRefView in ScopusGoogle
    Scholar [24] L. Wang, R. Ranjan Processing distributed internet of things data
    in clouds IEEE Cloud Comput., 2 (1) (2015), pp. 76-80 Google Scholar [25] H. Zhao,
    C. Huang A data processing algorithm in epc internet of things Cyber-enabled Distributed
    Computing and Knowledge Discovery (CyberC), 2014 International Conference on,
    IEEE (2014), pp. 128-131 CrossRefView in ScopusGoogle Scholar [26] R. Petrolo,
    V. Loscrì, N. Mitton Towards a smart city based on cloud of things, a survey on
    the smart city vision and paradigms Trans. Emerg. Telecommun. Technol., 28 (2017),
    p. e2931 View in ScopusGoogle Scholar [27] E. Von Hippel Democratizing innovation:
    the evolving phenomenon of user innovation J. für Betriebswirtschaft, 55 (1) (2005),
    pp. 63-78 CrossRefView in ScopusGoogle Scholar [28] D. Puiu, P. Barnaghi, R. Tönjes,
    D. Kümper, M.I. Ali, A. Mileo, J.X. Parreira, M. Fischer, S. Kolozali, N. Farajidavar,
    et al. Citypulse: large scale data analytics framework for smart cities IEEE Access,
    4 (2016), pp. 1086-1108 View in ScopusGoogle Scholar [29] B. Bowerman, J. Braverman,
    J. Taylor, H. Todosow, U. Von Wimmersperg The vision of a smart city 2nd International
    Life Extension Technology Workshop, Paris, vol. 28 (2000) Google Scholar [30]
    J. Pan, R. Jain, S. Paul, T. Vu, A. Saifullah, M. Sha An internet of things framework
    for smart energy in buildings: designs, prototype, and experiments IEEE Internet
    Things J., 2 (6) (2015), pp. 527-537 View in ScopusGoogle Scholar [31] J. Torriti
    Demand side management for the european supergrid: occupancy variances of european
    single-person households Energy Policy, 44 (2012), pp. 199-206 View PDFView articleView
    in ScopusGoogle Scholar [32] Y. Wang, J. Yuan, X. Chen, J. Bao Smart grid time
    series big data processing system 2015 IEEE Advanced Information Technology, Electronic
    and Automation Control Conference (IAEAC), IEEE (2015), pp. 393-400 CrossRefView
    in ScopusGoogle Scholar [33] S. Karnouskos, T.N. De Holanda Simulation of a smart
    grid city with software agents Computer Modeling and Simulation, 2009. EMS’09.
    Third UKSim European Symposium on, IEEE (2009), pp. 424-429 View in ScopusGoogle
    Scholar [34] D.R. Nagesh, J.V. Krishna, S. Tulasiram A real-time architecture
    for smart energy management Innovative Smart Grid Technologies (ISGT), 2010, IEEE
    (2010), pp. 1-4 Google Scholar [35] T. Robles, R. Alcarria, D. Martín, A. Morales,
    M. Navarro, R. Calero, S. Iglesias, M. López An internet of things-based model
    for smart water management Advanced Information Networking and Applications Workshops
    (WAINA), 2014 28th International Conference on, IEEE (2014), pp. 821-826 CrossRefView
    in ScopusGoogle Scholar [36] Z. Zhao, W. Ding, J. Wang, Y. Han A hybrid processing
    system for large-scale traffic sensor data IEEE Access, 3 (2015), pp. 2341-2351
    View in ScopusGoogle Scholar [37] M.M. Rathore, A. Ahmad, A. Paul, G. Jeon Efficient
    graph-oriented smart transportation using internet of things generated big data
    2015 11th International Conference on Signal-image Technology & Internet-based
    Systems (SITIS), IEEE (2015), pp. 512-519 CrossRefView in ScopusGoogle Scholar
    [38] C. Costa, M.Y. Santos Improving cities sustainability through the use of
    data mining in a context of big city data The 2015 International Conference of
    Data Mining and Knowledge Engineering, vol. 1, IAENG (2015), pp. 320-325 View
    in ScopusGoogle Scholar [39] A.J. Jara, D. Genoud, Y. Bocchi Big data in smart
    cities: from poisson to human dynamics Advanced Information Networking and Applications
    Workshops (WAINA), 2014 28th International Conference on, IEEE (2014), pp. 785-790
    CrossRefView in ScopusGoogle Scholar [40] H. Wang, O.L. Osen, G. Li, W. Li, H.-N.
    Dai, W. Zeng Big data and industrial internet of things for the maritime industry
    in northwestern Norway TENCON 2015-2015 IEEE Region 10 Conference, IEEE (2015),
    pp. 1-5 Google Scholar [41] P. Barnaghi, M. Bermudez-Edo, R. Tönjes Challenges
    for quality of data in smart cities J. Data Inf. Qual. (JDIQ), 6 (2–3) (2015),
    p. 6 View in ScopusGoogle Scholar [42] A. Sheth, C. Henson, S.S. Sahoo Semantic
    sensor web IEEE Internet Comput., 12 (4) (2008), pp. 78-83 View in ScopusGoogle
    Scholar [43] M.A. Kafi, Y. Challal, D. Djenouri, M. Doudou, A. Bouabdallah, N.
    Badache A study of wireless sensor networks for urban traffic monitoring: applications
    and architectures Proc. Comput. Sci., 19 (2013), pp. 617-626 View PDFView articleView
    in ScopusGoogle Scholar [44] D. Toshniwal, et al. Clustering techniques for streaming
    data-a survey Advance Computing Conference (IACC), 2013 IEEE 3rd International,
    IEEE (2013), pp. 951-956 Google Scholar [45] V. Jakkula, D. Cook Outlier detection
    in smart environment structured power datasets Sixth International Conference
    on Intelligent Environments (IE), 2010, IEEE (2010), pp. 29-33 CrossRefView in
    ScopusGoogle Scholar [46] P. Ni, C. Zhang, Y. Ji A hybrid method for short-term
    sensor data forecasting in internet of things 2014 11th International Conference
    on Fuzzy Systems and Knowledge Discovery (FSKD) (2014) Google Scholar [47] X.
    Ma, Y.-J. Wu, Y. Wang, F. Chen, J. Liu Mining smart card data for transit riders''
    travel patterns Transp. Res. Part C Emerg. Technol., 36 (2013), pp. 1-12 View
    PDFView articleView in ScopusGoogle Scholar [48] W. Derguech, E. Bruke, E. Curry
    An autonomic approach to real-time predictive analytics using open data and internet
    of things Ubiquitous Intelligence and Computing, 2014 IEEE 11th Intl Conf on and
    IEEE 11th Intl Conf on and Autonomic and Trusted Computing, and IEEE 14th Intl
    Conf on Scalable Computing and Communications and its Associated Workshops (UTC-ATC-ScalCom),
    IEEE (2014), pp. 204-211 View in ScopusGoogle Scholar [49] W. Han, Y. Gu, Y. Zhang,
    L. Zheng Data driven quantitative trust model for the internet of agricultural
    things Internet of Things (IOT), 2014 International Conference on the, IEEE (2014),
    pp. 31-36 View in ScopusGoogle Scholar [50] A.M. Souza, J.R. Amazonas An outlier
    detect algorithm using big data processing and internet of things architecture
    Proc. Comput. Sci., 52 (2015), pp. 1010-1015 View PDFView articleView in ScopusGoogle
    Scholar [51] D.N. Monekosso, P. Remagnino Data reconciliation in a smart home
    sensor network Expert Syst. Appl., 40 (8) (2013), pp. 3248-3255 View PDFView articleView
    in ScopusGoogle Scholar [52] M. Shukla, Y. Kosta, P. Chauhan Analysis and evaluation
    of outlier detection algorithms in data streams International Conference on Computer,
    Communication and Control (IC4), 2015, IEEE (2015), pp. 1-8 CrossRefGoogle Scholar
    [53] A. Shilton, S. Rajasegarar, C. Leckie, M. Palaniswami Dp1svm: a dynamic planar
    one-class support vector machine for internet of things environment International
    Conference on Recent Advances in Internet of Things (RIoT), 2015, IEEE (2015),
    pp. 1-6 CrossRefGoogle Scholar [54] D. Barber Bayesian Reasoning and Machine Learning
    Cambridge University Press (2012) Google Scholar [55] C.M. Bishop Pattern Recognition
    and Machine Learning Springer (2006) Google Scholar [56] K.P. Murphy Machine Learning:
    a Probabilistic Perspective MIT press (2012) Google Scholar [57] I.G.Y. Bengio,
    A. Courville Deep Learning, Book in Preparation for MIT Press (2016) Google Scholar
    [58] T. Cover, P. Hart Nearest neighbor pattern classification IEEE Trans. Inf.
    Theory, 13 (1) (1967), pp. 21-27 Google Scholar [59] H.V. Jagadish, B.C. Ooi,
    K.-L. Tan, C. Yu, R. Zhang Idistance: an adaptive b+-tree based indexing method
    for nearest neighbor search ACM Trans. Database Syst. (TODS), 30 (2) (2005), pp.
    364-397 CrossRefView in ScopusGoogle Scholar [60] A. McCallum, K. Nigam, et al.
    A comparison of event models for naive bayes text classification AAAI-98 Workshop
    on Learning for Text Categorization, vol. 752, Citeseer (1998), pp. 41-48 Google
    Scholar [61] H. Zhang The optimality of naive bayes AA, 1 (2) (2004), p. 3 View
    PDFView articleCrossRefGoogle Scholar [62] C. Cortes, V. Vapnik Support-vector
    networks Mach. Learn., 20 (3) (1995), pp. 273-297 View in ScopusGoogle Scholar
    [63] I. Guyon, B. Boser, V. Vapnik Automatic capacity tuning of very large vc-dimension
    classifiers Advances in Neural Information Processing Systems (1993) 147–147 Google
    Scholar [64] N. Cristianini, J. Shawe-Taylor An Introduction to Support Vector
    Machines and Other Kernel-based Learning Methods Cambridge university press (2000)
    Google Scholar [65] B. Scholkopf, A.J. Smola Learning with Kernels: Support Vector
    Machines, Regularization, Optimization, and beyond MIT press (2001) Google Scholar
    [66] J. Neter, M.H. Kutner, C.J. Nachtsheim, W. Wasserman Applied Linear Statistical
    Models, vol. 4, Irwin Chicago (1996) [67] G.A. Seber, A.J. Lee Linear Regression
    Analysis, vol. 936, John Wiley & Sons (2012) [68] D.C. Montgomery, E.A. Peck,
    G.G. Vining Introduction to Linear Regression Analysis John Wiley & Sons (2015)
    Google Scholar [69] A. Smola, V. Vapnik Support vector regression machines Adv.
    Neural Inf. Process. Syst., 9 (1997), pp. 155-161 Google Scholar [70] A.J. Smola,
    B. Schölkopf A tutorial on support vector regression Statistics Comput., 14 (3)
    (2004), pp. 199-222 View in ScopusGoogle Scholar [71] L. Breiman, J. Friedman,
    C.J. Stone, R.A. Olshen Classification and Regression Trees CRC press (1984) Google
    Scholar [72] A.M. Prasad, L.R. Iverson, A. Liaw Newer classification and regression
    tree techniques: bagging and random forests for ecological prediction Ecosystems,
    9 (2) (2006), pp. 181-199 CrossRefView in ScopusGoogle Scholar [73] W.-Y. Loh
    Classification and regression trees Wiley Interdiscip. Rev. Data Min. Knowl. Discov.,
    1 (1) (2011), pp. 14-23 CrossRefView in ScopusGoogle Scholar [74] L. Breiman Random
    forests Mach. Learn., 45 (1) (2001), pp. 5-32 Google Scholar [75] L. Breiman Bagging
    predictors Mach. Learn., 24 (2) (1996), pp. 123-140 Google Scholar [76] A. Likas,
    N. Vlassis, J.J. Verbeek The global k-means clustering algorithm Pattern Recognit.,
    36 (2) (2003), pp. 451-461 View PDFView articleView in ScopusGoogle Scholar [77]
    A. Coates, A.Y. Ng Learning feature representations with K-Means G. Montavon,
    G.B. Orr, K.R. Müller (Eds.), Neural Networks: Tricks of the Trade. Lecture Notes
    in Computer Science, vol. 7700, Springer, Berlin, Heidelberg (2012) Google Scholar
    [78] V. Jumutc, R. Langone, J.A. Suykens Regularized and sparse stochastic k-means
    for distributed large-scale clustering Big Data (Big Data), 2015 IEEE International
    Conference on, IEEE (2015), pp. 2535-2540 View in ScopusGoogle Scholar [79] M.
    Ester, H.-P. Kriegel, J. Sander, X. Xu, et al. A density-based algorithm for discovering
    clusters in large spatial databases with noise Kdd, vol. 96 (1996), pp. 226-231
    Google Scholar [80] H.-P. Kriegel, P. Kröger, J. Sander, A. Zimek Density-based
    clustering Wiley Interdiscip. Rev. Data Min. Knowl. Discov., 1 (3) (2011), pp.
    231-240 CrossRefView in ScopusGoogle Scholar [81] R.J. Campello, D. Moulavi, J.
    Sander Density-based clustering based on hierarchical density estimates Pacific-asia
    Conference on Knowledge Discovery and Data Mining, Springer (2013), pp. 160-172
    CrossRefView in ScopusGoogle Scholar [82] K. Pearson Liii. on lines and planes
    of closest fit to systems of points in space Lond. Edinb. Dublin Philos. Mag.
    J. Sci., 2 (11) (1901), pp. 559-572 CrossRefGoogle Scholar [83] H. Hotelling Analysis
    of a complex of statistical variables into principal components J. Educ. Psychol.,
    24 (6) (1933), p. 417 CrossRefView in ScopusGoogle Scholar [84] I. Jolliffe Principal
    Component Analysis Wiley Online Library (2002) Google Scholar [85] H. Abdi, L.J.
    Williams Principal component analysis Wiley Interdiscip. Rev. Comput. Stat., 2
    (4) (2010), pp. 433-459 CrossRefView in ScopusGoogle Scholar [86] R. Bro, A.K.
    Smilde Principal component analysis Anal. Methods, 6 (9) (2014), pp. 2812-2831
    View in ScopusGoogle Scholar [87] H. Hotelling Relations between two sets of variates
    Biometrika, 28 (3/4) (1936), pp. 321-377 Google Scholar [88] F.R. Bach, M.I. Jordan
    Kernel independent component analysis J. Mach. Learn. Res., 3 (Jul) (2002), pp.
    1-48 View in ScopusGoogle Scholar [89] Y. LeCun, L. Bottou, Y. Bengio, P. Haffner
    Gradient-based learning applied to document recognition Proc. IEEE, 86 (11) (1998),
    pp. 2278-2324 Google Scholar [90] X. Glorot, Y. Bengio Understanding the difficulty
    of training deep feedforward neural networks Aistats, vol. 9 (2010), pp. 249-256
    Google Scholar [91] R.C. Eberhart Neural Network PC Tools: a Practical Guide Academic
    Press (2014) Google Scholar [92] Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian
    Sun Deep residual learning for image recognition In Proceedings of the IEEE conference
    on computer vision and pattern recognition (2016), pp. 770-778 Google Scholar
    [93] Y. LeCun, Y. Bengio, G. Hinton Deep learning Nature, 521 (7553) (2015), pp.
    436-444 CrossRefView in ScopusGoogle Scholar [94] B. Schölkopf, J.C. Platt, J.
    Shawe-Taylor, A.J. Smola, R.C. Williamson Estimating the support of a high-dimensional
    distribution Neural Comput., 13 (7) (2001), pp. 1443-1471 View in ScopusGoogle
    Scholar [95] G. Ratsch, S. Mika, B. Scholkopf, K.-R. Muller Constructing boosting
    algorithms from svms: an application to one-class classification IEEE Trans. Pattern
    Anal. Mach. Intell., 24 (9) (2002), pp. 1184-1199 View in ScopusGoogle Scholar
    [96] C.-T. Do, A. Douzal-Chouakria, S. Marié, M. Rombaut Multiple metric learning
    for large margin knn classification of time series Signal Processing Conference
    (EUSIPCO), 2015 23rd European, IEEE (2015), pp. 2346-2350 CrossRefView in ScopusGoogle
    Scholar [97] V. Metsis, I. Androutsopoulos, G. Paliouras Spam Filtering with Naive
    Bayes-which Naive Bayes? CEAS (2006), pp. 27-28 View in ScopusGoogle Scholar [98]
    G.I. Webb, J.R. Boughton, Z. Wang Not so naive bayes: aggregating one-dependence
    estimators Mach. Learn., 58 (1) (2005), pp. 5-24 CrossRefView in ScopusGoogle
    Scholar [99] N.I. Gould, P.L. Toint Numerical Analysis Group Internal Report A
    Quadratic Programming Bibliography, vol. 1 (2000), p. 32 [100] John Platt Sequential
    Minimal Optimization: A Fast Algorithm for Training Support Vector Machines (1998)
    Google Scholar [101] Z.A. Zhu, W. Chen, G. Wang, C. Zhu, Z. Chen P-packsvm: parallel
    primal gradient descent kernel svm 2009 Ninth IEEE International Conference on
    Data Mining, IEEE (2009), pp. 677-686 CrossRefView in ScopusGoogle Scholar [102]
    C.-N.J. Yu, T. Joachims Learning structural svms with latent variables Proceedings
    of the 26th Annual International Conference on Machine Learning, ACM (2009), pp.
    1169-1176 CrossRefView in ScopusGoogle Scholar [103] J. Weston, C. Watkins, et
    al. Support Vector Machines for Multi-class Pattern Recognition, vol. 99, ESANN
    (1999), pp. 219-224 [104] C.-W. Hsu, C.-J. Lin A comparison of methods for multiclass
    support vector machines IEEE Trans. Neural Netw., 13 (2) (2002), pp. 415-425 View
    in ScopusGoogle Scholar [105] H.-C. Kim, S. Pang, H.-M. Je, D. Kim, S.Y. Bang
    Constructing support vector machine ensemble Pattern Recognit., 36 (12) (2003),
    pp. 2757-2767 View PDFView articleView in ScopusGoogle Scholar [106] G.M. Foody,
    A. Mathur A relative evaluation of multiclass image classification by support
    vector machines IEEE Trans. Geosci. Remote Sens., 42 (6) (2004), pp. 1335-1343
    View in ScopusGoogle Scholar [107] C.S. Leslie, E. Eskin, W.S. Noble The spectrum
    kernel: a string kernel for svm protein classification Pacific symposium on Biocomputing,
    vol. 7 (2002), pp. 566-575 Google Scholar [108] T. Poggio, G. Cauwenberghs Incremental
    and decremental support vector machine learning Adv. neural Inf. Process. Syst.,
    13 (2001), p. 409 Google Scholar [109] M.A. Khan, A. Khan, M.N. Khan, S. Anwar
    A novel learning method to classify data streams in the internet of things Software
    Engineering Conference (NSEC), 2014 National, IEEE (2014), pp. 61-66 View in ScopusGoogle
    Scholar [110] H. Trevor, T. Robert, F. Jerome The Elements of Statistical Learning:
    Data Mining, Inference and Prediction 1(8), Springer-Verlag, New York (2001),
    pp. 371-406 Google Scholar [111] R. Caruana, A. Niculescu-Mizil An empirical comparison
    of supervised learning algorithms Proceedings of the 23rd International Conference
    on Machine Learning, ACM (2006), pp. 161-168 CrossRefGoogle Scholar [112] J. Shotton,
    T. Sharp, A. Kipman, A. Fitzgibbon, M. Finocchio, A. Blake, M. Cook, R. Moore
    Real-time human pose recognition in parts from single depth images Commun. ACM,
    56 (1) (2013), pp. 116-124 CrossRefView in ScopusGoogle Scholar [113] T. Au, M.-L.I.
    Chin, G. Ma Mining Rare Events Data by Sampling and Boosting: a Case Study, in:
    International Conference on Information Systems, Technology and Management Springer
    (2010), pp. 373-379 CrossRefView in ScopusGoogle Scholar [114] A. Sahu, G. Runger,
    D. Apley Image denoising with a multi-phase kernel principal component approach
    and an ensemble version 2011 IEEE Applied Imagery Pattern Recognition Workshop
    (AIPR), IEEE (2011), pp. 1-7 CrossRefGoogle Scholar [115] A. Shinde, A. Sahu,
    D. Apley, G. Runger Preimages for variation patterns from kernel pca and bagging
    IIE Trans., 46 (5) (2014), pp. 429-456 View in ScopusGoogle Scholar [116] X. Tao,
    C. Ji Clustering massive small data for iot 2nd International Conference on Systems
    and Informatics (ICSAI), 2014, IEEE (2014), pp. 974-978 CrossRefView in ScopusGoogle
    Scholar [117] H. Hromic, D. Le Phuoc, M. Serrano, A. Antonić, I.P. Žarko, C. Hayes,
    S. Decker Real time analysis of sensor data for the internet of things by means
    of clustering and event processing 2015 IEEE International Conference on Communications
    (ICC), IEEE (2015), pp. 685-691 CrossRefView in ScopusGoogle Scholar [118] M.
    Çelik, F. Dadaşer-Çelik, A.Ş. Dokuz Anomaly detection in temperature data using
    dbscan algorithm Innovations in Intelligent Systems and Applications (INISTA),
    2011 International Symposium on, IEEE (2011), pp. 91-95 CrossRefView in ScopusGoogle
    Scholar [119] G.H. Golub, C.F. Van Loan Matrix Computations, vol. 3, JHU Press
    (2012) [120] L. Sirovich Turbulence and the dynamics of coherent structures part
    i: coherent structures Q. Appl. Math., 45 (3) (1987), pp. 561-571 CrossRefGoogle
    Scholar [121] G. Cybenko Approximation by superpositions of a sigmoidal function,
    Mathematics of control Signals Syst., 2 (4) (1989), pp. 303-314 View in ScopusGoogle
    Scholar [122] K. Hornik Approximation capabilities of multilayer feedforward networks
    Neural Netw., 4 (2) (1991), pp. 251-257 View PDFView articleView in ScopusGoogle
    Scholar [123] K. Fukushima Neocognitron: a self-organizing neural network model
    for a mechanism of pattern recognition unaffected by shift in position Biol. Cybern.,
    36 (4) (1980), pp. 193-202 Google Scholar [124] W. Blum, D. Burghes, N. Green,
    G. Kaiser-Messmer Teaching and learning of mathematics and its applications: first
    results from a comparative empirical study in england and Germany Teach. Math.
    Appl., 11 (3) (1992), pp. 112-123 CrossRefView in ScopusGoogle Scholar [125] J.
    Schmidhuber Deep learning in neural networks: an overview Neural Netw., 61 (2015),
    pp. 85-117 View PDFView articleView in ScopusGoogle Scholar [126] I. Kotenko,
    I. Saenko, F. Skorik, S. Bushuev Neural network approach to forecast the state
    of the internet of things elements XVIII International Conference on Soft Computing
    and Measurements (SCM), 2015, IEEE (2015), pp. 133-135 CrossRefView in ScopusGoogle
    Scholar [127] T.G. Dietterich Machine learning for sequential data: a review Joint
    IAPR International Workshops on Statistical Techniques in Pattern Recognition
    (SPR) and Structural and Syntactic Pattern Recognition (SSPR), Springer (2002),
    pp. 15-30 CrossRefView in ScopusGoogle Scholar [128] L.E. Baum, J.A. Eagon, et
    al. An inequality with applications to statistical estimation for probabilistic
    functions of markov processes and to a model for ecology Bull. Am. Math. Soc.,
    73 (3) (1967), pp. 360-363 CrossRefView in ScopusGoogle Scholar [129] L.R. Rabiner
    A tutorial on hidden markov models and selected applications in speech recognition
    Proc. IEEE, 77 (2) (1989), pp. 257-286 View in ScopusGoogle Scholar [130] T.J.
    Sejnowski, C.R. Rosenberg Parallel networks that learn to pronounce english text
    Complex Syst., 1 (1) (1987), pp. 145-168 Google Scholar [131] R.E. Kalman, R.S.
    Bucy New results in linear filtering and prediction theory J. Basic Eng., 83 (1)
    (1961), pp. 95-108 CrossRefGoogle Scholar [132] J. Lafferty, A. McCallum, F. Pereira
    Conditional random fields: probabilistic models for segmenting and labeling sequence
    data Proceedings of the Eighteenth International Conference on Machine Learning,
    vol. 1, ICML (2001), pp. 282-289 Google Scholar [133] R.J. Williams, D. Zipser
    A learning algorithm for continually running fully recurrent neural networks Neural
    Comput., 1 (2) (1989), pp. 270-280 CrossRefGoogle Scholar [134] A. McCallum, D.
    Freitag, F.C. Pereira Maximum Entropy Markov Models for Information Extraction
    and Segmentation, vol. 17, Icml (2000), pp. 591-598 View in Scopus [135] H. Sak,
    A.W. Senior, F. Beaufays Long Short-term Memory Recurrent Neural Network Architectures
    for Large Scale Acoustic Modeling (2014), pp. 338-342 Interspeech CrossRefView
    in ScopusGoogle Scholar [136] A. Graves, M. Liwicki, S. Fernández, R. Bertolami,
    H. Bunke, J. Schmidhuber A novel connectionist system for unconstrained handwriting
    recognition IEEE Trans. Pattern Anal. Mach. Intell., 31 (5) (2009), pp. 855-868
    View in ScopusGoogle Scholar [137] B. Pardo, W. Birmingham Modeling form for on-line
    following of musical performances Proceedings of the National Conference on Artificial
    Intelligence, vol. 20, AAAI Press; MIT Press, Menlo Park, CA; Cambridge, MA; London
    (1999), p. 1018 2005 Google Scholar [138] V.J. Hodge, J. Austin A survey of outlier
    detection methodologies Artif. Intell. Rev., 22 (2) (2004), pp. 85-126 View in
    ScopusGoogle Scholar [139] V. Chandola, A. Banerjee, V. Kumar Anomaly detection:
    a survey ACM Comput. Surv. (CSUR), 41 (3) (2009), p. 15 View in ScopusGoogle Scholar
    [140] Z.Á. Milacski, M. Ludersdorfer, A. Lőrincz, P. van der Smagt Robust detection
    of anomalies via sparse methods International Conference on Neural Information
    Processing, Springer (2015), pp. 419-426 CrossRefView in ScopusGoogle Scholar
    [141] D.E. Denning An intrusion-detection model IEEE Trans. Softw. Eng., 2 (1987),
    pp. 222-232 View in ScopusGoogle Scholar [142] I. Tomek An experiment with the
    edited nearest-neighbor rule IEEE Trans. Syst. Man Cybern., 6 (1976), pp. 448-452
    View in ScopusGoogle Scholar [143] M.R. Smith, T. Martinez Improving classification
    accuracy by identifying and removing instances that should be misclassified Neural
    Networks (IJCNN), The 2011 International Joint Conference on, IEEE (2011), pp.
    2690-2697 View in ScopusGoogle Scholar [144] S. Rajasegarar, C. Leckie, J.C. Bezdek,
    M. Palaniswami Centered hyperspherical and hyperellipsoidal one-class support
    vector machines for anomaly detection in sensor networks IEEE Trans. Inf. Forensics
    Secur., 5 (3) (2010), pp. 518-533 View in ScopusGoogle Scholar [145] K.A. Heller,
    K.M. Svore, A.D. Keromytis, S.J. Stolfo One class support vector machines for
    detecting anomalous windows registry accesses Proc. Of the Workshop on Data Mining
    for Computer Security, vol. 9 (2003) Google Scholar [146] M. Zhang, B. Xu, J.
    Gong An anomaly detection model based on one-class svm to detect network intrusions
    2015 11th International Conference on Mobile Ad-hoc and Sensor Networks (MSN),
    IEEE (2015), pp. 102-107 CrossRefView in ScopusGoogle Scholar [147] Y. Zhang,
    N. Meratnia, P. Havinga Adaptive and online one-class support vector machine-based
    outlier detection techniques for wireless sensor networks Advanced Information
    Networking and Applications Workshops, 2009. WAINA’09. International Conference
    on, IEEE (2009), pp. 990-995 CrossRefView in ScopusGoogle Scholar [148] S. Hu
    Research on data fusion of the internet of things Logistics, Informatics and Service
    Sciences (LISS), 2015 International Conference on, IEEE (2015), pp. 1-5 View in
    ScopusGoogle Scholar Cited by (774) Role of IoT technologies in big data management
    systems: A review and Smart Grid case study 2024, Pervasive and Mobile Computing
    Show abstract A new tool for energy conservation in operating room: The role of
    machine learning models in enhancing airflow control 2024, Energy and Buildings
    Show abstract Anomaly detection based on Artificial Intelligence of Things: A
    Systematic Literature Mapping 2024, Internet of Things (Netherlands) Show abstract
    Industrial Internet of Things embedded devices fault detection and classification.
    A case study 2024, Internet of Things (Netherlands) Show abstract Harnessing the
    advances of MEDA to optimize multi-PUF for enhancing IP security of biochips 2024,
    Journal of King Saud University - Computer and Information Sciences Show abstract
    A review of on-device machine learning for IoT: An energy perspective 2024, Ad
    Hoc Networks Show abstract View all citing articles on Scopus © 2018 Chongqing
    University of Posts and Telecommunications. Production and hosting by Elsevier
    B.V. Recommended articles Phosphate regulates chondrogenesis in a biphasic and
    maturation-dependent manner Differentiation, Volume 95, 2017, pp. 54-62 Biming
    Wu, …, Rhima M. Coleman View PDF A routing protocol for urban vehicular ad hoc
    networks to support non-safety applications Digital Communications and Networks,
    Volume 4, Issue 3, 2018, pp. 189-199 S.K. Bhoi, …, R.R. Swain View PDF Towards
    the molecular characterisation of parasitic nematode assemblages: An evaluation
    of terminal-restriction fragment length polymorphism (T-RFLP) analysis Experimental
    Parasitology, Volume 144, 2014, pp. 76-83 M.J. Lott, …, M.L. Power View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 695 Patent Family
    Citations: 1 Policy Citations: 4 Captures Readers: 1718 Mentions References: 2
    Social Media Shares, Likes & Comments: 3 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Digital communications and networks (Online)
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'Machine learning for internet of things data analysis: a survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2949703
  analysis: '>'
  authors:
  - Muhammad Shoaib Farooq
  - Shamyla Riaz
  - Adnan Abid
  - Kamran Abid
  - Muhammad Naeem
  citation_count: 441
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 7 A Survey
    on the Role of IoT in Agriculture for the Implementation of Smart Farming Publisher:
    IEEE Cite This PDF Muhammad Shoaib Farooq; Shamyla Riaz; Adnan Abid; Kamran Abid;
    Muhammad Azhar Naeem All Authors 444 Cites in Papers 48545 Full Text Views Open
    Access Comment(s) Under a Creative Commons License Abstract Document Sections
    I. Introduction II. Major Components and Relevant Technologies for IoT Based Smart
    Farming III. IoT Agricultural Networks IV. IoT Agriculture Applications V. IoT
    Agricultural Security Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: Internet of things (IoT) is a promising technology which provides
    efficient and reliable solutions towards the modernization of several domains.
    IoT based solutions are being developed to automatically maintain and monitor
    agricultural farms with minimal human involvement. The article presents many aspects
    of technologies involved in the domain of IoT in agriculture. It explains the
    major components of IoT based smart farming. A rigorous discussion on network
    technologies used in IoT based agriculture has been presented, that involves network
    architecture and layers, network topologies used, and protocols. Furthermore,
    the connection of IoT based agriculture systems with relevant technologies including
    cloud computing, big data storage and analytics has also been presented. In addition,
    security issues in IoT agriculture have been highlighted. A list of smart phone
    based and sensor based applications developed for different aspects of farm management
    has also been presented. Lastly, the regulations and policies made by several
    countries to standardize IoT based agriculture have been presented along with
    few available success stories. In the end, some open research issues and challenges
    in IoT agriculture field have been presented. Topic: New Technologies for Smart
    Farming 4.0: Research Challenges and Opportunities IOT Agricultural Trends. Published
    in: IEEE Access ( Volume: 7) Page(s): 156237 - 156271 Date of Publication: 25
    October 2019 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2949703 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction The
    concept of IoT caught attention in 1999, by means of Auto-ID center at MIT and
    its relevant market investigation publications. Basically, IoT is an integration
    of multiple devices which communicate, sense and interact with their internal
    and external states through the embedded technology that IoT contain [1]. IoT
    has become the megatrend for next generation technologies which can impact the
    whole business spectrum with extended benefits which are advanced connectivity
    of end devices, system and services. IoT offers appropriate solutions for multiple
    applications such as smart health care, smart cities, security, retail, traffic
    congestion industrial control and agriculture [3]. A significant amount of work
    has been done regarding IoT technology in agricultural area to develop smart farming
    solutions [4]. IoT has brought a great revolution in agriculture environment by
    examining multiple complications and challenges in farming [5]. Now a days, with
    the advancement of technology it has been expected that by using IoT agriculturalists
    and technologists are finding out the solution of those problems which farmer
    are facing such as shortages of water, cost management and productivity issues
    [6], [7]. State-of-the-art IoT technologies have detected all these issues and
    provide solutions to increase productivity while lowering the cost. Efforts made
    on wireless sensors networks enable us to collect data from sensing devices and
    send it to the main servers [8]. Data collected through sensors gives information
    about different environmental condition to monitor the whole system properly.
    Monitoring the environmental conditions or crop productivity is not only the factor
    for the evaluation of crop but there are many other factors which effect the crops’
    productivity, e.g. field management, soil and crop monitoring, movement of an
    unwanted object, attacks of wild animals, and thefts etc. [9], [10]. Moreover,
    IoT provides a well-organized scheduling of restricted resources which makes sure
    that the best use of IoT enhances the productivity. Figure 1 shows a schematic
    diagram showing the agricultural trends which provide easy and cost effective
    interactions through a secure and unblemished connectivity across individual Greenhouse,
    Livestock, Farmer, and Field monitoring. Whereby, the IoT agricultural networks
    using the wireless devices enable real time crop and animal monitoring. The figure
    shows that two sensor kits (Libelium Smart Agriculture Xtreme IoT Vertical Kit
    and Crop/Plant Monitoring Sensor Kit) have been implemented which monitor the
    soil moisture, leaf wetness, temperature, humidity, productivity, and air flow.
    While, MooMonitor sensor monitors the animal health, fertility, feeding, ruminating
    and resting. The agricultural servers, gateways, and agriculture database play
    an important role to store agriculture records and provide on demand agricultural
    services to authorized users. FIGURE 1. Agricultural trends. Show All As a whole,
    in agriculture field there are multiple applications, protocols and prototypes.
    IoT agriculture research trends include network platform, network architecture,
    applications, security, and challenges among others [28]–[30]. Moreover, in many
    countries and organizations over globe different IoT policies and guidelines have
    been implemented in agriculture field. However in IoT agricultural environment
    a reasonable amount of work has been done and there is a need of thorough study
    on IoT in agriculture context to understand the current research status. To transform
    agriculture technologies via IoT innovation this paper analyzes various issues
    and trends in IoT smart farming. In this research as a contribution following
    IoT agricultural techniques have been added from literature: Present major components
    of IoT based smart farming along with relevant technologies in Section II. Section
    III presents a rigorous discussion on network architecture of IoT that involves
    network architecture and layers, network topologies used; and devices and protocols
    used in agriculture IoT. Different application domains and relevant smart phone
    and sensor based applications have been discussed in Section IV. The security
    and privacy issues in IoT based agriculture have been discussed in Section V.
    The industrial trends have been discussed in Section VI that provides the details
    related to top technology industries investing in this area. The IoT agricultural
    policies made by different countries for the standardization of IoT based agriculture
    have been discussed in Section VII. This section also presents few success stories
    in this area. Lastly, the open issues and challenges to improve IoT based agricultural
    technologies from many aspects have been presented in Section VIII. SECTION II.
    Major Components and Relevant Technologies for IoT Based Smart Farming A. Major
    Components of IoT Based Smart Farming IoT based smart farming consist of four
    major components as shown in Figure 2. FIGURE 2. Major components of IoT based
    smart farming. Show All These four major components are physical structure, data
    acquisition, data processing, and data analytics. The physical structure is the
    most important factor for precision agriculture to avoid any unwanted happening.
    Whole system is designed in such a way which controls the sensors, actuators,
    and devices. A sensor performs multiple tasks like soil sensing, temperature sensing,
    weather sensing, light sensing, and moisture sensing. Similarly devices perform
    many control functions like, node discovery, device identification and naming
    services etc. All these functions are performed by any device or sensor which
    is controlled through a microcontroller. This controlling operation is performed
    by any remote device or a computer which is connected through the Internet. Data
    Acquisition is further divided into two sub components namely: IoT data acquisition
    and standard data acquisition. Whereby, the IoT data acquisition component consists
    of seven protocols that are Message Queuing Telemetry Transport (MQTT), Websocket,
    Advanced Message Queuing Protocol (AMQP), Node, Constrained Application Protocol
    (CoAP), Data Distribution Service (DDS), and Hyper Text Transfer Protocol (HTTP).
    Depending on the requirements and condition more protocols can be used for the
    implementation of smart farming. Whereas, in the standard data acquisition ZigBee,
    WIFI, Long Range Wide Area Network (LoraWan), SigFox and ISOBUS protocols have
    been used. Data processing consists of multiple features that are image or video
    processing, data loading, decision support system, and data mining as shown in
    Figure 2. According to the system requirements any feature may be added that may
    work in parallel to provide other services. Data analytics consists of two main
    features that are monitoring and controlling. Monitoring involves three main application
    in smart agriculture that are Live Stock Monitoring, Field Monitoring, and Green
    house Monitoring. IoT enables farmers to monitor livestock via multiple sensors
    which are used to monitor different animal’s diseases like temperature, heart
    rate, and digestion etc [11]. Whereas field monitoring applications intend to
    report different conditions of field like soil richness, temperature, humidity,
    gas, pressure (air pressure and water pressure), and crop disease monitoring [12],
    [13]. A smart greenhouse design eliminates the manual intervention and measures
    different climate parameters by intelligent IoT devices and sensors according
    to plants requirements [14]–[16]. B. Iotagricultural Relevant Technologies A Large
    number of technologies are being used in IoT agricultural solutions due to which
    it is hard to make an explicit of all those due to which our discussion focused
    on several core technologies which have played a vital role to modernize the IoT
    agricultural services. 1) Cloud and Edge Computing Collaboration of IoT and cloud
    computing in agriculture provides pervasive access to shared resources. To meet
    various agricultural needs upon request over network and execute operations cloud
    computing plays vital role [17]. Cloud based software architecture has been proposed
    which process and retrieve information and agricultural tasks in a more accurate
    way [18], [19]. In the field of IoT edge computing is considered as a solution
    to facilitate data processing at the source of data generation which are sensors,
    actuators and many other embedded devices. Edge computing or fog computing are
    measured as the backbone of cloud computing. This technology is deployed according
    to the features and requirements of smart farming [20]. 2) Big Data Analytics
    and Machine Learning Big data consist of a large amount of essential which are
    generated by agricultural sensors. Big data analysis provides different and efficient
    crop monitoring methods at different stages [21]. A good systematic review on
    big data analysis in agriculture has been presented [22]. Neural networks are
    very famous because they provide optimal solutions at a very high speed. Intrusion
    detection has been realized by using advance principles and technology of neural
    network. On the other hand most important feature of neural network is that they
    provide detection module and data training [23]. By using deep neural networks
    an IoT based hydroponic system has been developed [24]. 3) Communication Networks
    and Protocols IoT agricultural network consist of different kinds of long ranges
    and short ranges networks for communications. Several IoT networks technologies
    help to design a crop or field monitoring sensors and devices [25]. Communication
    protocols are the backbone of IoT agricultural network system and applications
    [26]. They are used to exchange all agricultural data or information over the
    network. 4) Robotics Multiple Agribots have been developed for the purpose of
    smart farming which are minimizing the amount of farmers by increasing the speed
    of work through advance techniques. Agribots performs elementary functions like
    weeding, spraying and sowing etc. All these robots are controlled by using IoT
    to increase the crop productivity and efficient resource utilization. A multi
    sensor robotics approach has been proposed for characterization and ground mapping
    [27]. SECTION III. IoT Agricultural Networks IoT agricultural network or IoT network
    for agriculture is one of the vital elements of IoT in agriculture. It helps to
    monitor agriculture data and facilitate the transmission and reception of agriculture
    data. As shown in Figure 3, the framework consists of IoT agricultural network
    architecture, IoT agricultural network platform and IoT agricultural network topologies
    and protocols. FIGURE 3. IoT agricultural network. Show All A. IoT Agricultural
    Neworkt Architecture The IoT agricultural network is the main factor of IoT in
    agriculture field [31]. IoT Agricultural network architecture suggests an outline
    for the specification of an IoT agricultural network physical elements as well
    as their working principles, and techniques. Most of the IoT applications usually
    follow the four layer architecture (Network Layer, Application layer, Physical
    and Mac Layer and Transport Layer) due to the popularity and interoperability
    of IP as suggested by Naik [32]. After reviewing these four layers protocol we
    have also survey two more approaches that are IPv6 and 6LoWPAN as shown in Figure
    4. This layer is the final level of abstraction which allows the development of
    multiple user applications. At this layer deployed communication protocols monitor
    different agricultural parameters such as weather information, soil moisture values,
    irrigation monitoring etc. FIGURE 4. Layer structure of the 6LoWPAN. Show All
    1) Application Layer Due to the energy constraints and stringent computation involved
    by the IoT devices there are many lightweight protocols on application layer such
    as CoAP, MQTT, AMQP, and HTTP. These protocols can be increased or decreased according
    to the system requirement. CoAP protocol runs on UDP and works on the principle
    of request or response architecture [33]. AMQP protocol runs over the TCP protocol
    by following publish/subscribe architecture asynchronously and use TSL/SSL for
    security assurance. MQTT is a bandwidth-efficient protocol which uses little battery
    power and designed for receiving and transmitting sensor information [34]. HTTP
    is a well known web messaging protocol which based on the request/response architecture
    [35]. Runs over TCP and does not define any QoS, uses TSL/SSL for security purpose.
    2) Transport Layer This layer is also called host to host transport layer, and
    is directly transferred from IP to IoT domain. The main task of network layer
    is to collect and encapsulate the agricultural information which is obtained through
    sensor layer. There are two protocols that are transmission control protocol (TCP)
    and user datagram protocol (UDP). TCP is a connection oriented protocol which
    ensures the reliability of delivered data. TCP data transmission speed is low
    as compare to UDP. UDP is a connection less protocol which does not ensure reliability
    of data. Its data transmission speed is high as compared to TCP. Both of these
    protocols are used in different applications because their choices depend upon
    the requirements of application. 3) Network Layer This layer is an indispensable
    technology for precision farming and responsible to transmit agricultural information
    at application layer. IP is the major choice with the existing two versions that
    are IPv4 and IPv6. IPv4 came into existence due to increasing the large number
    of addressable devices. Whereas, invention of IPv6 was expected which gradually
    establish on all networking devices. Routing protocol for Low Power and Lossy
    Networks (RPL) is considered as the main protocol while applying routing on 6LoWPAN
    [36]. RPL consist of distance vector routing protocol which uses Destination Oriented
    Directed Acyclic Graphs (DODAG) to specify routes. To support different flows
    of traffic RPL modify itself according to network speed and acknowledge routing
    metrics such as status of the battery used in device, link quality, and higher
    computational cost exchange. 4) Adaptation Layer Adaptation Layer (AL) aim is
    to ensure the interoperability, and implement fragmentation, compression and reassembly
    mechanism. Although AL attained many advances but still there is a complexity
    for IPv6 supporting because its direct use on IoT devices is not considered reasonable.
    Usually clashes were seen with constraints which are associated with IoT devices.
    That’s why, 6LoWPAN made a big effort in order to decrease the limitations of
    IPv6 and make it suitable for IoT devices. Sensors and devices use IPv6 and 6LoWPAN
    to transmit data over IEEE 802.15.4 protocol in IoT agricultural network. 5) Physical
    and Mac Layers This is the bottom most layer in agriculture network archichture
    which is responsible to sense and actuate different agricultural parametrs. Within
    physical and MAC layer IEEE 802.15.4 is one of the most popular standard which
    was designed for low cost, low consumption and low complexity [37]. This standard
    was adopted by many protocols like Wireless HART, ZigBee and ISA100. IEEE802.15.4
    mainly operates in ISM band of 2.4 GHz. Furthermore, it also operate 915 MHz (in
    United Nations of American) 868 MHz (in European countries) and supports up to
    250 kbps data rates. However literature shows some significant limitation of later
    approaches, which are regarding to mobility and network formation [38]. EPC-Global
    (designed for RFID technologies) [39] and Z-wave (particularly designed for domotics)
    [40] have also been used as alternative of IEEE 802.15.4 to exchange information
    directly from internt protocol (IP). B. IoT Agricultural Network Platform IoT
    agricultural network platform refers to both the big data analytics model and
    cloud model. 1) Big Data Analytics Big data analysis applied to find out the required
    and meaningful information from the large amount of data from different data formates.
    The crop disease control and crop growth models build on the basis of farm data.
    Big data analysis also provides decision support services to farmers for crop
    productivity and optimal cost analysis. Figure 5 shows IoT agricultural network
    platform based on big data analytics. The proposed network platform consists of
    six components namely: i) Farmer/User experience, ii) Big Data analysis, iii)
    Sensing and monitoring, iv) Storage services, v) Communication protocols, and
    vi) Physical implementations. This platform provides access to the IoT backbone,
    and helps collecting information about soil fertility, weather conditioning, moisturization,
    and online crop monitoring etc. FIGURE 5. IoT agricultural network platform based
    on big data analysis. Show All a: Farmer Experience Farmer experience layer is
    designed to help the farmers to monitor crop productivity in multiple ways such
    as, for effective growth of crops farmers are awared by identifying the appropriateness
    of fertile selection. Climate conditions, crops growth conditions, soil quality,
    or cattle health monitoring helps the farmers to track the state of their business
    and mitigate the lower production risks. b: Predictive Analysis This analysis
    makes the whole environment smarter by the combination of smart farming market
    intelligence and IoT technology. The major task of predictive analysis is to analyze,
    explore and process the agricultural information for digital awareness. Predictive
    analysis is made to check the probabilistic chance of crop productivity up to
    the next season. Here different detecting devices are applied to check the, Crop
    disease, weather conditions, and estimate the profit/loss on the basis of crop
    productivity. Predictive analysis facilitates the farm to understand the optimal
    time for planting & harvesting and various farm management techniques. c: Multicultural
    Analysis Elaborates the multiple forms of agriculture. In this analysis big data
    analysis minimize the risk of crop destruction according to scientific ways. To
    enhance the growth rate of water featured Botanic Aquaculture layer is equipped
    with big data. Other multicultural techniques like Citriculture, Horticulture
    and Floriculture avail direct benefits when enabled with big data analysis. It
    is helpful for decision making related to crop or plants seasonal growth, and
    pest control. Vermiculture is used for the cultivation of earthworms. Arboriculture
    is basically used for the cultivation of woody plants. Olericulture is an application
    which is used for the prediction and measure the growth rate of different vegetables.
    d: Sensing and Monitoring Sensing and monitoring analysis is made by applying
    different sensing and monitoring devices. Sensors sense data and store the crop
    disease information. Data which is processed through multiple resources is automatically
    achieved by sensing layer. Ststistical analysis has been made on data received
    from sensors in order to actuate the disease. Farmers obtain necessary information
    such as ph value, temperature, soil moisture and humidity through web and message
    service. Real time image and video monitoring on data helps the farmer to gat
    timely and accurate information. e: Communication Protocols Communication protocols
    collect and encapsulate agricultural data. To process and transmit data by using
    these protocols have been considered as the nerve center of IoT in agriculture.
    These protocols consist of internet related technologies like WIFI, LoraWan and
    Code Division Multiple Access (CDMA) technologies. ZigBee is considered as the
    main enabler for communication over long distances when third party service providers
    such as Long-Term Evolution (LTE), CDMA or Global System for Mobile (GSM) are
    not available. f: Storage Services Farmers’ store crop related information to
    make better analysis in future and use stored information in multiple seasons
    for more productivity. g: Physical Implementations Multiple sensors, different
    types of actuators and microcontrollers are implemented physically to monitore
    different agricultural applications. Many other network equipments also implemented
    at physical layer like switches, routers and gateways are included. At this layer
    whole environmental conditions are sensed and then actuate according to a predefined
    instructions. Microcontroller plays the supervisor role and performs networking
    related operations and some other functionality which are done by sensors and
    actuators. An IoT based functional frame work is shown in figure 6. The functional
    framework shows that how agriculturists and farmers can access multiple databases
    with the assistance of support layer from application layer. Business layer contains
    all necessary operation which are important for any IoT farm. Data acquisition
    layer provides connection with session layer through IoT protocols like MQTT,
    AMQP and COAP etc. FIGURE 6. Functional framework for an agricultural information
    service model. Show All 2) Cloud Infrastructure Cloud provides a large amount
    of storage through large virtualized servers which are connected together to perform
    necessary action. A cloud based IoT design has been presented in [41] for precision
    farming. In which IoT techniques are applied to analyze and manage data from farms
    through sensors and devices to generate information for decision making. Design
    recommendations for IoT agricultural network on the basis of Cloud is shown in
    Figure 7. FIGURE 7. IoT agricultural network platform based on cloud. Show All
    Platform has been proposed on the basis of four layers which are Cloud Storage,
    Gateway, Fog Computing and hardware modules. Cloud storage layer centerlized the
    all agricultural related data such as weather related, soil, fertilization, crop
    and agricultural marketing in the cloud and provides on demand resources through
    networked infrastructure. Analyics resources and web services are also installed
    on cloud or internet which are accessible by cloud services. Most of the devices
    or sensors are not designed in such a way which can connect with internet for
    the purpose of data sharing. To resolve this data sharing problem local gateways
    are designed which act as bridge between all hardware devices and sensors for
    connectivity, security and controllability. Implementation of gateway in greenhouse
    or field improves the ability of automation and control the real time greenhouse
    monitoring system. Hardware modules and cloud services are distributed whereas
    resources are integrated through fog computing. Fog computing reduces the computational
    load of cloud and ensures the real time processing. Basic purpose of fog computing
    in this proposed network platform is to leverage the on demand scalability of
    cloud computing resources by taking the advantage of both cloud and edge computing.
    In hardware modules multiple actuators, sensors, microcontrollers and central
    processing unit have been implemented to monitor and sense various agricultural
    variables. Hardware modules are distributed in global or local networks and used
    to create services or processes. For the implementation of smart farming fast
    response time and capability to exchange information is necessary. Both of these
    requirements (fast response time and capability to exchange information) are fulfilled
    by two protocols that are Representational State Transfer (REST) and Message Queuing
    Telemetry Transport (MQTT). Instead of using big data center distributed system
    is more effective for smart farming because it breaks up large computation into
    easy and smaller tasks like: Crop, Temperature, nutrients, energy, climate, moisture
    of soil etc. C. IoT Agricultural Network Topology and Protocols IoT agricultural
    network topology shows the arrangement of multiple elements of an IoT Agricultural
    network and represents an ideal scenario for smart farming. Figure 8 described
    how heterogeneous computing grid collects necessary sensor data by using multiple
    sensing devices such as moisture sensor, humidity sensor, temperature sensor,
    gas sensor, ph sensor, ultra violet sensor etc and forms an IoT agricultural network
    topology. FIGURE 8. Conceptual illustration of IoT-based ubiquitous agricultural
    solutions. Show All This ubiquitous Agricultural solution transforms the storage
    capacity of multiple electronic devices like Smartphone, Laptops, and agricultural
    terminals into hybrid computing grids. Figure 9 visualize a scenario in which
    multiple crop parameters are monitored by implementing agricultural devices and
    sensors in all over the field. FIGURE 9. Farm remote monitoring in agriculture.
    Show All Sensed data is then analyzed and stored, and stored data from multiple
    sensors and devices becomes useful for aggregation. On the basis of aggregation
    and analysis agriculturists/farmer can monitor the different crop variables in
    all over the field from anywhere. Moreover, topology consists of a proper network
    configuration for the streaming of agricultural videos. For example figure 9 support
    the streaming of pests via an interconnected network with an internet protocol
    (IP), GSM, WiMAX and access service network gateway. 1) Low Power WSN Topology
    Figure 10 shows a topology in which low power wireless sensor network has been
    designed to monitor and control the various farming factors. In this topology
    ZigBee is being used for data transmission which consists of multiple end devices
    and router to propagate the information on larger distances. End devices which
    are scattered in the field consist of different kind of sensors such as temperature,
    gas, humidity, soil, Motion detector, PH, UV, PIR sensors and a microcontroller.
    FIGURE 10. Low power WSN topology. Show All End devices are directly connected
    to the router and controller, where controller communicates with base station
    by using serial port to analyze the received information. According to software
    monitoring perspective each end device is properly initialized and attached sensors
    are activated in an appropriate way. Once the sensors are activated then each
    device follows the router to connect in the same way according to which they have
    been designed. After confirmation end device may connect to the WSN by using identical
    key. Data which is collected through sensors is send to the base station which
    takes analysis on received data. When the sensors attached with end devices are
    being read then data is transmitted via ZigBee to the Controller or router. Major
    advantage of this net topology is its bi-directional communication by using ZigBee.
    2) IoT Protocols for Agriculture There are many IoT communication protocols which
    are widely used in agriculture for the purpose of smart farming. By using these
    protocols farmers can communicate in a more convenient way and make more efficient
    decisions for smart farming to enhance and monitor the growth of crop. Most common
    wireless protocols which are being used named: IEEE 802.11 WIFI, 2G/3G/4 G-Mobile
    Communications Standards, LoraWan, WiMax, Low Rate Wireless Personal Area Networks,
    Bluetooth, RFID, and ZigBee. Comparison of all these wireless protocols is given
    in Table 1. TABLE 1 Comparison of Existing Wireless Protocols a: IEEE 802.11 WiFi
    IEEE 802.11 is a compilation of communication standards Wireless Local Area Network
    that is 802.11a, 802.11b, 802.11g, 802.11n and 802.11ac. All these standards operate
    in different bandwidths that are 5 GHz, 2.2GHz, 2.4/5 GHz, 60 GHz and 5 GHz. Data
    transfer range of these standards is from 1Mb/s to 7 Gb/s. Its communication range
    is from 20 m to 100 m [42]. A wifi based wireless sensor network in IoT has been
    discussed for smart agriculture [43]. b: LoraWan LoraWan is a long range communication
    protocol which is developed by an open and non-profit association namely Lora
    TM Alliance. The main purpose of this LoraWan protocol is to assure the interoperability
    between multiple operators [44]. To improve agricultural productivity and anticipate
    the problems a framework has been presented in [45] whose component based on Lora
    and ARIMA technology. c: WiMax Data transfer range of Worldwide Interoperability
    for microwave access is from 1.5 Mb/s to 1 Gb/s. But now a days with the advancement
    of technology data transfer rate has been changed [46]. WiMax provides broadband
    multi access connectivity that includes fixed, portable, nomadic and mobile communication
    through wired or wireless connectivity. Both WiFi and WiMax technologies have
    been deployed in Ministry of Food and Agriculture, Ghana (MOFA) which enables
    user to connect either WiMax networks or building Wifi [47]. d: 2G/3G/4G-Mobile
    Communications Standards There are multiple generations of Mobile Communication
    Standards consist of Second Generation, Third Generation, and Fourth Generation.
    IoT devices Communicate by using these standards over cellular networks. Through
    the use of mobile communication farmer can detect temporal variability across
    their fiels and monitor crop yield, soil and climate conditions [48]. e: LR-WPAN
    Low Rate Wireless Personal Area Networks figure out the specification of high
    level communication standards like ZigBee. Data transfer rate of LR-WPAN consist
    of 40 Kb/s-250 Kb/s. The major property of this standard is that it provides low
    speed and low cost communication services [49]. LR-WPAN is mostly used for indoor
    agriculture such as home garden or in small farms. f: RFID RFID works on the principal
    by assigning a unique number individually to each object in order to record information.
    RFID consists of readers, host and tags where tags receive and transmit radio
    waves due to which it is also known as responder. RFI tags consist of active tags
    and passive tags which are available in different sizes and shapes. Passive tag
    is more advantageous as compare to active tag because it is cheap than active
    tags. Tags have unique ID number and environmental information such as moisture
    level, temperature condition, and humidity etc. These tags are embedded and attached
    in multiple objects to identify that object. g: ZigBee ZigBee is on the top of
    IEEE 802 standards created by ZigBee Alliance. It is a set of specifications for
    device to device network having low power data rates. With the advancement of
    technology and increasing the demand of throughput there is a need of faster and
    low power consumption technology. These requirements are fulfilled by more established
    technologies which provides faster data transfer. In agriculture environment IoT
    sensors sense the data and transfer it towards remote server. After sensing, collected
    data is analyzd for decisions making [50]. h: MQTT MQTT is a messaging protocol
    in IoT which is mainly designed for remote connections. It’s a bandwidth efficient
    protocol and uses little battery power. MQTT is used for continuous analysis and
    deploy a smart system for agriculture sector. A low cost web based IoT solution
    has been presented by using MQTT for monitoring, tracking and analyzing agricultural
    data and collect knowledge from field ambience and improve environmental conditions
    [51]. By using MQTT a low cost irrigation system has been proposed for receiving
    and transmitting sensor information [52]. i: SigFox It’s a low data rate and an
    ultra narrowband wireless cellular network which is appropriate for IoT and machine
    type communications [53]. To construct a geo location system SigFox network was
    used which localize animals pasture of the whole summer [54]. System proposed
    in [55] helps the farmers to locate their cattle’s position and increase their
    productivity. j: Bluetooth Bluetooth is a low power and low range Personal Area
    Network which is best for short range mobile communication. There are many IoT
    agricultural devices which are bluetooth enabled such as Farmnote Air gateway
    and color sensor work with bluetooth enabled sensors. Bluetooth has ubiquitous
    nature due to which it is considered as an appropriate technology for multi-tier
    agricultural applications [56]. SECTION IV. IoT Agriculture Applications IoT agriculture
    system applied as an array of wide variety of fields such as, Precision farming,
    livestock monitoring, and greenhouse monitoring. Agriculture applications have
    been categorized into three sections: IoT agricultural applications, Smartphone
    based applications and sensor based applications. IoT and sensor based applications
    categorization has been illustrated in figure 11 which is framed by reviewing
    the today’s available IoT solutions in agriculture. FIGURE 11. IoT structure in
    agriculture. Show All A. IoT Agricultural Application Domains There are number
    of IoT agriculture applications which are being used to create more efficient
    resources for agriculture productivity. Main domains of IoT agriculture applications
    are precision farming, livestock monitoring, greenhouse monitoring and agricultural
    drones. The following subsection consists of various types of agricultural applications.
    1) Precision Farming Precision farming helps the farmers to improve, automate
    and optimize all feasible directions in order to enhance the agricultural productivity
    and make cropping system smart [57]. Different IoT sensors are deployed to measure
    soil quality, weather conditions, moisture level, and effectively plan to optimize
    harvesting techniques. To enhance the crop production a correlation analysis between
    agricultural environment information and crop statistical analysis has been developed
    to collect crop data [28]. In [58] an IoT based platforms has been developed for
    precision agriculture and ecological monitoring. IoT based weather forecasts helps
    to optimize productivity and take anticipatory analysis to prevent the crop from
    damage. Multiple monitoring devices/sensors are used to predict pest behavior,
    plant or crop growth and address any pending pest issue before they damage crop.
    Ranchers use IoT based irrigation solutions to manage and analyze crop irrigation
    requirements. In [59] a remote agricultural monitoring platform has been presented
    on the basis of monitored data. A conceptual architecture based on cyber systems
    and software defined setworks has been presented in [60] for precision farming.
    IoT base Precision farming consist of multiple monitroing and controling applications
    such as climate conditions monitoring, soil patterns monitoring, pest and crop
    disease monitoring, irrigation, determine optimal time to plant and harvest and
    tracking/tracing. a: Climate Conditions Monitoring In agriculture it is the most
    important to monitor weather conditions continuously so that future activities
    can be planed accordingly. Weather stations are the most popular gadgets in the
    field of agriculture which are used to monitor different climte conditions. Weather
    parameters which are being monitored include temperature, humidity, wind direction,
    and air pressure etc. Located across the field, weather stations collect the environmental
    data and send it to the cloud server. Collected data is used for weather analysis
    to map climate conditions, and provide new insights to take required actions to
    improve agricultural productivity. US Food and Agriculture Organization (FAO)
    has been defined a weather related approach called Climate Smart Agriculture (CSA)
    which helps the user to transform agriculture system by identifying climate conditions
    [61]. A wireless sensor network has been deployed by using IoT technology to monitor
    weather changes by integrating the sensors and devices [62]. b: Soil Patterns
    Soil monitoring has become one of the most demanding practices in agriculture
    field for both industries and farmers. In soil monitoring there are many environmental
    issues which affects on crop production. If hese kinds of issues are identified
    data accurately then the farming patterns and processes can be understand easily.
    Soil patterns which are being monitored consists of Soil Humidity, moisture, fertilization
    and temperature. Soil humidity and moisture sensors are deployed to monitor the
    moisture content in soil [63]. An adequate amount of fertilization in the field
    also increase crop yield [64]. Soil monitoring test report increase crop productivity
    and recommends an appropriate fertilization solutions to farmer [65]. Moreover,
    identification of contaminated soil by using IoT technologies protect the field
    from over fertilization and crop loss. c: Pest and Crop Disease Monitoring Root
    causes of revenue and production losses are crop diseases. Due to the boom of
    IoT agricultural system has been changed into digital system which helps the farmer
    to make informed decisions. Prediction of crop diseases at early stages helps
    the farmers to generate more revenue by saving crop from pest attacks. IoT protect
    crop in multiple ways by detecting different diseases and prevent crop from animal
    attacks. An IoT based monitoring system has been presented in [66] to monitor
    the wheat diseases, pest and weeds. Crop raiding is the biggest issue due to contraction
    of cultivated land into different wildlife haunts. In [67] a monitoring and repelling
    system for the protection of crop against wild animals attack has been presented.
    Detection of crop disease at early stages is very challenging in the field of
    agriculture. Because to detect crop or leaf disease a team of experts is called,
    which is expensive and time taking process. Whereas, automatic detection of diseases
    is very beneficial, accurate and cheaper for farmer as compared to manual observation
    by experts. Image processing technique also plays a vital role for the earlier
    detection of plant disease [68]. A crop disease detection scenario has been shown
    in figure 12. FIGURE 12. Disease detection scenario. Show All Sensed raw data
    via sensing devices is converted into usable format via remote server and then
    stored into database which is displayed through a user interface. After getting
    data multiple data mining models are applied for disease (bacterial, fungal, viral
    etc) analysis. d: Irrigation Monitoring System IoT improve the current irrigation
    system in a more innovative way. A farmer can optimize irrigation system in multiple
    ways by monitoring weather conditions and soil conditions. IoT technology monitor
    irrigation system in four ways like weather forecasting data, control and monitor
    whole field from anywhere, Ethernet connection and WIFI. This modern irrigation
    system facilitates the farmers by installing multiple sensors, reducing farmers
    monthly irrigation cost, and limit water resources [69]. In [70] an intelligent
    irrigation management system has been presented by using Maching learning and
    open source technologies which sense different soil and weather parametrs. An
    IoT based Low cost irrigation system has been designed in [71] which uses HTTP
    and MQTT protocols to inform the user. Water quality is monitored by sensor nodes
    which are empowered with wireless communication. IoT technology measure both physical
    and chemical constraints of ph, dissolved, temperature, conductivity and oxygen
    [72]. Gathered data about water management system is viewed on internet by using
    cloud computing services. Recently multiple IoT irrigation platforms have been
    developed to control the water consumption in the field. In [73] a simple irrigation
    system has been developed by using WSN. In more advance system users can control
    the process of irrigation through cellular technologies. Likewise, system is proposed
    in [75] in which user transfer sensors data via cellular technologies to a database
    system. e: Determine the Optimal Time to Plant and Harvest IoT increase operational
    efficiency and enhance the crop productivity by determining the best possible
    time to harvest and plant. IoT amalgamate multiple existing technologies like
    cloud computing applications, end user applications, wireless sensor networks
    (WSN’s) and Radio Frequency Identification (RFID) to determine the accurate time
    of weeding and seeding [76]. f: Tracking and Tracing IoT provides informative
    data to agricultural companies for better decisions making such as planning, managing
    and connect with business partners intelligently by saving money and time. In
    growing environment soil, air, water, fertilizers, and pesticides conditions are
    monitored by RFID and Global Positioning System (GPS). GPS system is used to find
    the exact location of agriculture field and monitor various agricultural parameters
    by using wireless communication networks. In [77] an architecture has been develop
    which remotely monitor the soil condition and soil structure as per requirement
    of crops culture. In this structure ZigBee is connected with other devices like
    content management system (CMS), Global System for Mobile (GSM) and General Packet
    Radio Service (GPRS) by using Wireless sensor networks to monitor and realize
    real time data checking. GPS provides interface to interact with ARM (an intelligent
    monitoring system to achieve functions like SMS/MMS) and gives an alarm to farm
    manager when an unwanted changes occur and helps the farmers to take corrective
    action. Although it’s operational and maintenance cost is high but it is widely
    used in agriculture due to its exact location monitoring and tracking property.
    g: Farm Management System The adoption of smart farming is correspondingly increasing
    the amount of productivity by reducing the environmental impact but this smart
    farming technique can be possible via Farm Management System (FMS). FMS is a key
    element for processing, planning, and decision making for the purpose of smart
    farming [78]. An integrated FMS allows the farmers to monitor the entire where
    whole data is collected via WSN, GSM modules and microcontroller. An identifier
    is used on the sensors and devices in all over the farm which gives the proper
    knowledge of fertilization, weather data, automatic buffer zone width monitoring,
    and automatic detail record is generated according to per day activities of farm.
    This whole information is stored in the computer in standard format and can be
    accessible via cell phone or internet for further processing. To optimize the
    use of water resources an automated irrigation and monitoring system is used [73].
    Apart from irrigation system farm is also protected from pest and animal intrusion
    [66], [67]. h: Agricultural Drones Drones are defined as Unmanned Aerial Vehicles
    (UAVs) which are being utilized in agriculture to improve various practices of
    farming. These flying devices are controlled remotely by remote control or autonomously
    programmed. Agricultural processes which are performed by drones are crop health
    assessment, spraying, screening, planting, scouting reports, measurement of nitrogen
    in wheat and analysis of soil conditions. Drones facilitate the farmers via integration
    with Geographic Information Systems (GIS) mapping, and crop health imaging. Drones
    are mostly deployed in large farms where issues related to bacteria fungus are
    difficult to handle and require regular monitoring. In the area of agriculture
    pesticides and fertilizers are very important for crop yield [65], [66]. Agricultural
    drones are carrying out this job efficiently because of its high speed and effectiveness
    in the spraying operation. In addition they also deployed to monitor forests,
    livestock and aquaculture. An organization Precision Hawk is using drones for
    valuable data gathering through sensors for surveying mapping, and imaging of
    agricultural land. They perform in-flight monitoring, farmers enters the detail
    about which field to survey and select a ground resolution. An IoT based Farm
    management information system approch has been developed to meet the bussiness
    objectives [29]. Agricultural drones are integrated with GPS devices cameras and
    sensors to monitor crop health, like planting, crop spraying, screening and analysis
    of soil. There are many other advantages of drone’s utilization like crop health
    imaging, plant counting, amount of nitrogen in wheat, plant height, drainage mapping,
    and weed pressure etc. 2) Greenhouse Monitoring In greenhouse plants are grown
    under controlled environment. This glasshouse technology provides benefits to
    growing plants anytime anywhere by monitoring appropriate environmental conditions.
    Cultivation of greenhouse is more intense, therefore in terms of controlling and
    monitoring it requires high precision. To monitor environmental or weather conditions
    there have been several studies on the applications of WSN’s in greenhouse. Recent
    studies shows that how IoT can be implemented in greenhouse to minimize the human
    resources, accumulate energy and provides direct link of greenhouse from ranchers
    to customers. Most of the studies have focused only on remote monitoring and localized
    [14]–[16]. In addition, for the purpose of high precision there have been a lot
    of studies which integrates meta-processing structure with data to transfer it
    on remote infrastructures through internet. By applying well evaluated crop models,
    assessment of the crop status helps the ranchers to take better decisions [80].
    In Figure 13 a Wireless Sensor Network (WSN) has been implemented to monitor the
    greenhouse environment. Whole network is divided into multi parts which processes
    the data and gives feedback. FIGURE 13. WSN for monitoring greenhouse environment.
    Show All Data can be obtained by corresponding sensors and detectors and then
    transferred to the main server for processing. In physical implementation the
    major components are the sensors and network for accurate data transmission. Growers
    setup the different monitoring devices and sensors according to the specific requirements
    and track or record the required information. Agriculturists make better decisions
    by analyzing the received information and achieve specific goals by obtaining
    optimal data. There are many IoT based greenhouse applications such as water management,
    plant monitoring, and climate monitoring etc. a: Water Management To measure the
    exact amount of required water in greenhouses is a key problem. Smart sensors
    are implemented which are controlled by applying multiple IoT techniques to avoid
    from excessive use of water. In greenhouses water management is carried out by
    using automatic drip irrigation which works by following soil mositure threshhold
    that is set accordingly [81]. b: Plant Monitoring IoT sensors and cameras creates
    ideal environment for plants by monitoring the state of plants regularly and generates
    an alert if any problem is recognizable. On the other side, cloud based IoT solutions
    store the sensed data and view it periodically which is helpful for growers to
    ensure that all plants obtains ideal attention in the greenhouse [82]. c: Climate
    Monitoring There are many parameters which are combined to maintain and create
    an ideal environment for plants within strict limits such as, the maintenance
    of ventilation, temperature, carbon dioxide, and oxygen level. This can be made
    possible by deploying IoT enabled greenhouse where smart devices and sensors share
    their information for strong decision making [81]. 3) Livestock Monitoring Optimal
    environment or weather circumstances which absorbs excessive amount of climate
    conditions leaves negative impact on the productivity of animals that is a serious
    issue for many researchers [83]. Whereas, due to increasing the demand of high
    quality dairy products precision livestock also considered as the major concern.
    Each year ranchers lose a large amount of profit because of animals illness. But
    IoT based livestock management solutions helps the farmers to improve the farming
    principles, livestock conditions and dairy products [11]. Just like crop monitoring
    sensors, different livestock monitoring sensors are also attached to the animals
    to monitor their log performance. Livestock monitoring factors varies on the categories
    of animals under consideration such as conductivity of milk, pest attack, humidity,
    and water quality. By tagging RFID to individual animal allow farmers to track
    their location, thereby preventing animal from theft. Connected sensors and wearables
    in the livestock allow the farmer to monitor overall animals’ activities and data
    streamed to the cloud directly helps the farmers to identify the issues. Cowlar
    and SCR by Allflex are using smart agriculture sensors to monitor animals health,
    activity, temperature, nutrition and collect information on each individual as
    well as about the herd [84], [85]. In the field of livestock several studies have
    been realized. Wireless Sensor have been used which are most advantageous for
    large farm as well as for hazardous gas monitoring. An IoT based livestock scenario
    is shown in Figure 14. FIGURE 14. IoT based livestock scenario. Show All In the
    field different IoT sensing devices have been deployed to monitor the weather
    conditions via weather station and sense other activities in the field by all
    other data sources which have been implemented in the whole farm. Sensed data
    is stored on the cloud server, which user can use for decision making. User can
    interact remotely by using multiple smart devices (Laptops, Tablets, and Mobile
    etc.). Some IoT base applications of livestock monitoring have discussed below:
    a: Animal Temperature Monitoring Identification of disease symptoms and prevention
    is the major function for animal health monitoring. Normal body temperature of
    dogs is 38.3°C-39.2°C and cow’s is 38.5°C-39.5°C. When the body temperature is
    increased or decreased from the normal body temperature then it indicates that
    animal is suffering from any disease [86]. b: Heat Stress Level Heat stress decreases
    the cow’s milk productivity with same dietary input, due to which farmers face
    the cost production issues. In summer season moisture content becomes low due
    to which stress level in animals increased, because of this animal can also die.
    c: Physical Gesture Recognition Gesture analysis can be made by using IoT animal
    monitoring devices. Animal’s gesture behavior is classified into different groups
    such as in cattle, this behavior is consisting of two classes that are traveling
    and stationary. Traveling behavior consists of animal’s walking, running and grazing
    whereas stationary behavior is animal’s sitting, sleeping and standing. d: Rumination
    Rumination monitor the digested food by animal and it is detected by mounting
    a monitoring device in the animal’s (cows) nose. In this way farmer can get accurate
    indication about animal’s health. e: Heart Rate Measurement of heart rate is an
    indirect method which impacts due to the agitation and stress that cow have. Normal
    heart rate of cow is 43 to 84 bpm whereas calf’s normal heart rate is 100 to 140
    bpm. By using IoT devices and sensors heart rate can be monitored constantly.
    f: GPS Based Monitoring GPS system is used to obtain the specification of farm
    and sends the monitored parameters to central monitoring station by using wireless
    sensor network. To prevent animals from theft, wild attacks or weather conditions
    a repelling system has been provided by using wireless technologies like Zigbee,
    WIFI, and LoWPAN [88]. B. Agricultural Solutions by Using Smart Phones From the
    last few years it has been observed that integration of electronic devices with
    smartphones innovate the technology world and smartphones are taken as a driver
    of IoT. To make smart phones versatile in agriculture field various hardware and
    software have been designed. A good (but not complete) survey of smart phone apps
    providing agricultural solutions has been presented [98]. Figure 15 showing a
    classification illustration of smart phone apps for smart farming. Morever, there
    is a number of recent apps which are serving similar functionalties. All smart
    phone apps which are elaborated in figure 15 discussed in tabular form with a
    small description of each. These smart phone apps are not limited; developers
    from all over the world have developed many e-Farming apps therefore, this paper
    highlighted some selected apps which have been discussed according to their popularity.
    FIGURE 15. Smartphone applications for agriculture. Show All C. IoT Devices and
    Sensors in Agriculture In today’s modern world everything needs to be automatic
    with less man power by consuming less time. Sensor is such a device which can
    fulfill this requirement by detecting same input from the existing physical environment
    and responds back. User set some setting over sensing devices to perform their
    task without the involvement of human. There are some major IoT sensors like:
    Motion Detector, PIR, Soil Moisture, Temperature, Humidity, Barometric Pressure,
    Ultra Violet, PH, and gas sensor. In Table 3 various sensor based agricultural
    applications, their operations and IoT association have been discussed but table
    2 pay attention only on smart phone agricultural apps. TABLE 2 Smartphone Agricultural
    Applications Description TABLE 3 IoT Sensor Based Applications in Agriculture
    SECTION V. IoT Agricultural Security In the coming years agricultural sector is
    expected to witness the extensive acceptance of IoT and grow through the new e-farming
    IoT applications and devices. These agricultural applications and devices are
    expected to deal with a large amount of sensitive data. Due to the distributed
    nature of IoT a single security protocol is not sufficient therefore, leakage
    of information is a major security concern [107]. If we adopt IoT fully in the
    field of agriculture then it will be more critical to analyze and identify the
    distinctive features of privacy and security like different security requirements
    and threat models in the perspective of Agriculture. On the basis of literature
    some security issues has been presented in Figure 16. FIGURE 16. IoT security
    issues in agriculture. Show All A. Security Requirements IoT based smart farming
    security requirements are similar to standard security scenario. Therefore, to
    achieve a secure farming solution we have need to pay attention on the following
    security requirements: Confidentiality: Agricultural information or personal data
    relevant to it should be accessible only by authorized users. Integrity: Here
    integrity means received and stored data or content is not changed. Authentication:
    Authentication means peer devices should have an identity to which it is communicating.
    Data Freshness: It consists of key freshness and data freshness because IoT agricultural
    networks sometime provides varying measurements, therefore it is necessary to
    ensure that every message is fresh. Non Repudiation: Its means a node can never
    deny to send a message that sent earlier. Authorization: Here authorization means
    for network or any other resources only authorized devices are allowed. Self Healing:
    If any device in an IoT based agricultural network fail or out of energy then
    other devices in the network should be able to provide security to some extent.
    B. Security Challenges Security of IoT based smart farming mainly consists of
    three basic requirements that are Authentication, access control and confidentiality
    of the stakeholders. Whereas, at the perception layer network must be secured
    from external attacks and in the network layer aggregation of the data should
    be secured. Authorize specific entities ensures that only authorized user can
    access data from application layer [28]. The most common issue of security in
    the perception layer is physical security that is the security of hardware and
    information acquisition security [108]. Here physical security is very important
    because all the devices are deployed in an open field. That’s why a single security
    protocol is not enough because IoT devices may be implemented in a diverse environment.
    Another major security issue is leakage of information, this information consist
    of location and sensitive data. Security countermeasures consist of data encryption,
    jamming, blocker tags use, modification in tag frequency, and tag destruction
    strategy. There is a difference between sensor nodes and RFID tags that’s’ why
    while implementing encryption algorithm, intrusion detection policies, key distribution
    and routing policies, hardware restrictions should keep in mind [109]. In IoT
    concept data flows from an end device towards gateway, during this process data
    also uploaded to other platform such as cloud infrastructure. There are multiple
    security policies exist for sensor nodes like identity authentication, data filtering,
    cryptographic algorithm, data flow control mechanisms etc. Cheating, wiretapping,
    replay attacks and tampering are also security threats. Due to which, confidentiality,
    authentication and integrity should be must employed while data acquisitions phase
    [17]. C. Stack Challenges Middleware layer also plays a vital role in IoT to increase
    security. Middleware stands in between application layer and network layer which
    is responsible to process data and provide interface for communication between
    these layers. Middleware layer requires secure and confidential data storage.
    Secure transmission via wireless medium is very challenging in IoT deployment
    due to which IoT based architecture is at risk like vulnerability, denial of services,
    illegal access, and many virus injects. In this way data integrity and confidentiality
    is affected by such attacks. According to IoT vision application layer is one
    of the top most layers and closely related to the cloud due to its computation
    resources and storage nature. Security issue at application layer and cloud are
    very similar such as data security, backup, recovery and privacy. Therefore, access
    rights of the data, information and ownership for physical users, machines and
    organizations should manage and administered by a control mechanisms. D. Threat
    Model Both IoT agricultural devices and networks are at risk because of increasing
    attack surface. IoT agricultural threat model consist of three scenarios. First
    one is cloud networks, second is native networks expansion and third is cloud
    services. Threat may be generates from internal or external network. If an attack
    is arise from an agriculture device then it will be considered as one of the more
    severe attack. Because it is very difficult to detect the malicious device within
    the network. In addition an adversary may attack on an agriculture device and
    network and use power device like mobile, laptop or tablet or may be same kind
    of IoT devices to penetrate the network. E. Attack Taxonomy There are many types
    of attacks in IoT paradigm due to which an attacker may attack by adopting a method
    on future or existing IoT agriculture devices and networks. In IoT agricultural
    field threat may be tangible, predictable or unpredictable. In this paper existing
    and possible threats are classified on the basis of three key factors: which are
    Information Disruption, Host, and networks. 1) Attacks on the Basis of Information
    Disruptions Stored agricultural data may be analyzed or manipulated by a hacker
    to provide wrong information. Such attacks consist of Interruption (denial of
    services), Interception (threaten data privacy and confidentiality), Modification
    (unauthorized access to the agricultural data), Fabrication and replay. 2) Attacks
    on the Basis of Host Properties Host properties attacks occure in two forms namely:
    hardware compromise (attacker may attact on device program code data or keys and
    reprogram the devices with malicious code) and software compromise (attacker may
    take the advantage of software vulnerabilities and glitches like operating system,
    applications software and system software). 3) Attacks on the Basis of Networks
    Properties Two types of attacks can be arised on basis of networks properties.
    Namely: standard protocol compromise (to threat service availability like integrity
    and authenticity where attacker deviates from standard protocols) and network
    protocol stack (consist of different types of vulnerabilities). F. Reference Security
    Model for IoT Based Agriculture IoT agricultural paradigms are not yet strong
    but continued to build up due to which currently it is difficult to discover all
    possible threats and vulnerabilities in IoT agricultural field. However, when
    experts find the security solution to solve the apparent security threats at that
    point they should have the ability to mitigate the hidden security issues. To
    accomplish a security solution, security checks should be deployed with dynamic
    properties. Consider a framework in which security mechanism consist of different
    systems which can detect and prevent IoT agricultural system from attacks. Now
    consider, that an attacker generate a new type of attack on agricultural applications
    devices and networks to steal agricultural information integrity. In such conditions
    existing security techniques should indentify this new attack by using dynamic
    algorithm. A security model presented in Figure 17 has been discussed to resolve
    these issue. The model is illustrated with its three security systems: protection
    system is designed to mitigate the attack while, dignosing system collects activity
    data from agricultural applications, networks, nodes and analyzes detected agricultural
    data. Reaction system is designed to help the agricultural entities survive all
    types of attacks. FIGURE 17. An intelligent collaborative security model for smart
    farming. Show All FIGURE 18. Selected IoT agricultural products. Show All Whole
    system has been designed by following dynamic algorithms. To prevent from present,
    probable and hidden attacks this system has strong collaboration. Upon intrusion
    detection system issues an operation command and store in reaction system after
    that share their anomaly diagnosing experience with protection system to prevent
    from further attacks. Operation command receive response from identification service,
    reaction system remove the system failure risks and after that pass out its experience
    with other two systems that are protection and diagnosing systems. In this way
    a complete inter collaboration system is accomplished. SECTION VI. IoT Agricultural
    Industry Trends and Practices The IoT in agriculture field has experienced a burst
    of creativity, activity, venture capital firms and exciting entrepreneurs. The
    space becomes visible as an active group of large firms and new start ups that
    are willing to become the part of what may be a giant market and technologies.
    In this section an extensive record of some products and technologies has been
    provided for a good understanding of IoT position in agriculture field. 3D Crop
    Sensor Array with PAR Addon can be mounted on any location, to monitor temperature,
    humidity and carbon dioxide in the farm [110]. EC-1 Controller monitors the environmental
    conditions and then programs them to control the environment by turning off and
    on devices [111]. Arable Mark is the first device which links the global weather
    data within the field observations developed by Arable. With the unprecedented
    ground truth accuracy device makes informed decisions and deliveres real time
    monitoring information to the palm of user’s hand [112]. Growlink designed Growlink
    one controller to deliver smart farming experience. It has highest processing
    power and components quality to coordinate with multiple sensors and devices in
    all over the farm. This device is simply all in one and farmers can expand the
    system according to their requirements by adding additional microcontroller via
    IP networks [113]. Easternpeak offers an IoT GreenIQ agricultural device which
    control irrigation and saves water of your garden’s lawn from anywhere. Growers
    can save up to 50% outdoor water bills by using a GreenIQ smart sprinklers controller
    [114]. Grofit provides a climate monitoring device based on Bluetooth and its
    transmission range is up to 200 m in all over field. This device also provide
    data log which store maximum 30 days measurements. Growers can monitor air humidity,
    real time air temperature and sun radiations by using this device [115]. MeteoHelix
    weather station designed by allmeteo which provides reliable, stable and open
    meteorological solutions according to weather requirements. This weather station
    provides multiple features like temperature, humidity, atmospheric pressure, dew
    point, sun radiations, and solar radiations measurement [116]. Leaf Wetness sensor
    is developed by Smart Element which determine the wetness of leaf by electrical
    resistance on the surface of sensor. It is used to measure wet and dry time on
    the leaf surface [117]. Swip Track Micro locates any moving object in all over
    the field that may be any farming machine, vehicle or engines [118]. Waspmote
    Plug & Sense! Smart Agriculture Xtreme is a sensor node which provides more reliable
    and accurate information about weather. This sensor measures the wind and rainfall
    condition via optical technology. The presence of fertilizers and soil morphology
    can be analyzed through this sensor by measuring the oxygen level, water content,
    and soil water potential [119]. SKY – Lora Weather Station can easily communicate
    to nearby master sensor through LoRa [120]. This is suitable for those locations
    where there is nearby connectivity. This weather station can send data up to 600
    meter away to a master sensor which has WIFI connection. Pycno has been developed
    a Pulse IoT automation sensor which comes in a self-sustained package powered
    by a tiny solar panel [121]. Sensor is WIFI and LoRa enabled device which has
    multiprotocol port in the bottom. In future Pulse Automation Sensor and Pycno
    soil sensor will be integrated to actuate devices and talk with each other in
    the field. CropX Starter Kit – Soil Temperature 24/7 is a real-time soil-temperature
    monitoring Sensor. This sensor has direct cellular connection and better accuracy
    which provides advance sensing capabilities [122]. Some top technologies firm’s
    trends and directions are highlighted in Table 4. TABLE 4 IoT Agricultural Trends
    and Directions of Some Well Known Technology Industries SECTION VII. IoT Smart
    Farming Policies and Success Stories A. Policies Many countries have understood
    the importance of IoT and facilitating through its advance monitoring techniques.
    Government of different countries is seizing the IoT opportunity and investing
    maximum to boost up the crop productivity. Adaptation of IoT technology in different
    countries has been discussed in this section. 1) Australia Government of Australia
    has invested AU$ 134 million to boost up farming. Due to this large investment
    a center was created by a private company in Sidney to implement IoT technologies
    for Smart farming [150]. In 2014 an Innovative Network for Precision Agriculture
    System was established for the purpose of a collaborative frame work to create
    a national agenda in Australian agriculture. In terms of privacy and security,
    in 2015 an American farm Bureau took the lead in establishing a privacy and security
    set for farm data [151]. 2) Ireland Irish Farmer’s Association (IFA) Launched
    a program for agriculturists to reduce the cost, to improve the soil quality and
    guides the farmer how to save water and energy by adopting new technologies [8].
    When the farmers follow these instructions the results were very positive and
    encouraging. Companies saved almost 8700 euro, 10% reduction in green house gas
    emission, 21% savings in pasture management and 47% saving was achieved by Soil
    Fertility. In 2016 a nationwide SigFox network was launched by VT-Networks Ireland
    which provides solution for tracking security sensors and farm assets [153]. 3)
    France Ministry of Agriculture in France has become the partner of the Agriculture
    Innovation Project 2025. The basic aim of this project is to increase the strengthen
    of agricultural land, monitor the climate conditions and create incubators to
    improve agriculture field in France. Ministry of agriculture also share the collected
    data with farmer’s to propose new solution in the field of Agriculture [154].
    French agriculture is administrated by European Union (EU) rules and supported
    through a policy called Common Agriculture Policy (CAP). A new CAP framework was
    defined in 2015 at EU level for next five years which is beneficial for different
    agro ecology projects for farming. 4) China In 2016 china launched its 13th five
    years plan to integrate IoT in the field of agriculture to enhance profitability
    [156]. Project has been started in different eight provinces, with multiple products,
    technologies and 426 applications. Data was collected from multiple provincial
    and national level data centers. Moreover, NB-IoT App by Huawei company in china
    transforming the agriculture in a more efficient and an innovative way. NB-IoT
    provides low cost agriculture solutions as compare to cellular network where gateway
    implementation is not necessary. Huawei NB-IoT has large number of connections
    and wide coverage due to which it can resolve issue of scattered agricultural
    data [157]. 5) Malaysia Agricultural policy in Malaysia was established in two
    periods of time policy before and after independence 1948–1957 and 1957–2020 [158].
    The purpose of the policy was to enhance the growth of crop and decrease the poverty.
    Multiple solutions have been created by Malaysian Institute of Microelectronic
    System (MIMOS) which are best for agriculture development. A sensor named Mi-MSCANT
    PH has been developed by MIMOS to gather environmental data. An agricultural framework
    has been developed by MIMOS to integrate IoT technologies which create a bonding
    between suppliers, traders, and agricultural producers mutually in unified manners.
    This framework utilizes technologies named Micro Electro Mechanical System (MEMS)
    and WSN which automatically collect environmental data [159]. 6) USA USA has funded
    million Dollars to generate new agricultural technologies to fulfill the necessary
    requirements of energy and food. National Institute of Food and Agriculture worked
    on a project that is Internet-of-Ag-Things and develop sensing technologies for
    smart farming practices. The major purpose of this project is to develop precision
    technologies to enhance the efficiency of agriculture industries and make better
    use of water, fertilizers and organic food [160]. The U.S. Department of Agriculture
    (USDA) has started a project to address water management challenges and develop
    new solution for those issues which are affecting agriculture. Technology experts
    are using USDA datasets to improve and design agricultural services [161]. 7)
    Thailand In Thailand National Electronics and Computer Technology Center (NECTEC)
    applying innovative IT technologies for the purpose of smart farming and their
    major focus is on four agricultural products including Rubber, Rice, Sugar and
    Cassava [162]. The major concern of this movement is to increase the agricultural
    productivity and facilitate the farmers in all rural areas of Thailand [163].
    Faculty of Science and Technology at Thammasat University developed an IoT-based
    irrigation control system which helps the grower to preset watering cycle timing
    in advance. A smart farm service provider namely; FarmD Asia was established in
    2015 to boost up the agricultural productivity by its flagship products. FarmD
    Asia has also designed a pesticides aerial drone which covers upto eight acres
    land in single fly. National Science and Technology Development Agency (NSTDA)
    launched Agricultural System Integrator (ASI) program which was primarily designed
    for farmers to start and run smart farm successfully [164]. 8) India Different
    IoT policies have been formulated by Indian government in order to leverage the
    strength of their agricultural field in all over the world. Indians basic purpose
    is to monitor the earth density, soil conditions, temperature and alerts the farmers
    to control pest related issues. In 2015 a policy on IoT in India was released
    by Ministry of Communication and Information Technology to transform digital landscape
    by using IoT [165]. 9) Philippine Philippines have used the remote sensing techniques
    to increase the production of rice. They are also using ground data processing
    and satellite imagery techniques to generate more information on different agricultural
    conditions. University of Southeastern Philippines (USeP) proposed an intelligent
    solution to monitor crop heat stress by using IoT technology with the collaboration
    of Western Mindanao State University (WMSU). In this project research team is
    on the brink with an effective technology counter heat stress which helps the
    farmer to get maximum benefit with the fewest inputs [166]. B. Food and Agriculture
    Organization of United NATIONSNN Food and Agriculture Organization of United Nations
    (FAO) is an e-agricultural organization which follows the international efforts
    to fulfill the deficiency of food in all over 130 countries worldwide. FAO predicted
    that there is a most probability that world population will reach 9.8 billion
    by 2050 therefore, it is necessary to increase the food production 70% by 2050
    to fulfils the growing demand of food through the utilization of IoT technology.
    Mitsubishi Corporation (MC) and Vegetalia, changing Japanese agricultural sector
    by their join forces through AI and IoT. By using tensiometer sensors Tevatronic
    develops an autonomous irrigation system which is placed in the ground near the
    plants for monitoring. From the last 74 years FAO has been changed the agricultural
    world by launching its top ten achievements given in table 5 [167]. TABLE 5 Top
    10 E-Agricultural Strategies of FAO C. IoT Agriculture Success Stories This research
    indicates that there have been several tools and techniques which helps the farmers
    to improve the crop productivity in a more innovative ways. Some IoT agriculture
    relevant technologies have been discussed in section I which provides additional
    tools to the farmers or agriculturists to increase the crop yield. Section III
    describes the different IoT and Smartphone based applications which facilitate
    the farmers to enhance the agriculture productivity by providing extended benefits.
    However over the globe governments are seizing the IoT opportunities in agriculture
    by making large investment. There are many pilot projects which reflects a great
    potential in the future of IoT in agriculture at country level such as china,
    India, Malaysia, Thailand, Taiwan etc. Therefore, in this research we have also
    discussed the results of some pilot projects conducted and being executed in different
    countries. Table 6 prepresents the success stories of these pilot projects in
    different countries with the main IoT agricultural applications (precision farming,
    greenhouse, and livestock). TABLE 6 IoT Agriculture Success Stories SECTION VIII.
    IoT Agricultural Challenges Many researchers have worked on IoT agriculture system
    and solve multiple technological issues and architectural problems by implementing
    and designing various IoT agricultural solutions. Moreover, according to the research
    point of view in the literature, there are also several open issues and challenges
    which are needed to address successfully [57]. There are many challenges which
    are linkage with IoT smart farming deployment and applications. This research
    has identified some explored and unexplored IoT agricultural issues and challenges.
    A. Hardware Challenges Several challenges arise in IoT agricultural setup. First
    of all the equipments which exists at the perception layer are directly expose
    to harsh environmental experience such as, rain, high level temperature, extreme
    humidity, hard winds, and many other possible dangers which destroy electronic
    circuits. End devices works consistently for a long period by depending on inadequate
    batteries power resources. So, a suitable programming tools and less power potential
    is necessary because in case of any program failure instantly battery replacement
    is complicated especially in a large scale open field [144]. B. Networking Challenges
    These challenges are not only for the hardware implementations, but also exist
    at the network layer. Due to high cost of wiring, wireless communication is most
    important for the deployment of IoT based agriculture. Physical deployment shows
    that accepted transceivers performance is exaggerated by human presence, temperature,
    humidity and many other barriers inside the space where wireless device or node
    wants to communicate. Due to which there should use most reliable and robust technologies
    to transfer data according to the environmental challenges and rural conditions
    [8]. A detailed analysis on IoT agriculture networking challenges and issues is
    given [145]. C. IoT Agricultural Platforms IoT agricultural architecture is more
    complicated as compare to other IoT end devices and requires real time monitoring
    system with additional stringent requirements. For this a tailored computing platform
    is needed with run time libraries. A service oriented approach (SOA) can also
    take to build a suitable platform; such services can be exploited by using different
    API’s. In addition, appropriate frameworks and libraries should be developed so
    that agricultural developers can make resourceful use of available document, classes,
    codes and other useful data. D. Other Technical Issues 1) Interfernce To implement
    smart farming a large number of IoT devices are deployed for agricultural purpose
    that creates hindrance especially for those IoT devices which are using unlicensed
    spectrum like Sogfox, ZigBee, LoRa, and WIFI. These technical issues reduce the
    reliability and loss of data. Moreover, unnecessary interference can be eliminated
    by using IoT devices with licensed spectrum. But, among the IoT devices which
    are using cellular licensed spectrum the reprocess of non-orthogonal multiple
    access method can create hindrance because of restricted pilot assignment in cellular
    band. 2) Reliability In agriculture field mostly the IoT devices are deployed
    in an open environment. Due to which there may occur some inconsiderate environmental
    impacts which may cause the communication failure as well as degradation of deployed
    sensors. Therefore, physical safety of IoT devices and system is necessary to
    secure the expensive gadgets from unauthorized user and severe attacks like weather
    conditions or theft. 3) Scalability Billions of IoT devices have been increased
    gradually, due to which more devices are getting connected. Therefor, large number
    of gateways and protocols are needed to support IoT devices. Moreover, IoT agricultural
    back end databases and network applications should be reliable and scalable because
    with the addition of diverse application related operations becomes more complex.
    Therefore, design a highly scalable security scheme and an intelligent IoT system
    for each end device. 4) Resource Optimization Farmers need optimization of resources
    to measure how many IoT devices, gateways, size of cloud storage, and amount of
    transmitted data is required. Due to different farm sizes and variables like crop
    or livestock monitoring resource optimization has become challenging because there
    is a need of different sensors and devices to perform each function. Therefore,
    this will require complex mathematical models and algorithms are required to determine
    the resource allocation for maximum agriculture productivity. 5) Cost Analysis
    and Lack Knwoledge of Technology In the field of agriculture profit margin is
    very important, there is a need of stability the trade-off between the deployments
    of IoT enabling technologies. When an IoT system is deployed the cost of implementations
    are very high like IoT devices/Sensors, gateways, and base station infrastructure.
    After that maintenance cost also important for the use of central services which
    are necessary for IoT devices management, data collection, and information sharing
    among all other services. Moreover, the major factor of slowing IoT in rural areas
    is basically the lack knowledge of IoT and its applications. This is the main
    problem because majority of ranchers is uneducated and lives in rural areas. Therefor,
    it is most important to overcome these obstacles by educating farmers in order
    to generate more revnue [7]. 6) Deployment of LPWA Technologies There is a large
    number of IoT devices in Agriculture scenario, and such devices should liable
    to be heterogeneous in the context of their transmit, receive, sleep, and deep
    sleep along with others. In the terms of power requirements each communication
    layer confronts a supplementary challenge. For example, to confirm the service
    accessibility at MAC layer to find a low power device discovery protocol is a
    difficult task. 7) Universal Platform Adaptation of IoT in agriculture will shift
    from just specific crop to a standard platform which can support multiple smart
    farming applications for crop productivity. This standard platform creates a system
    which can be easily modified to support multiple agricultural applications ranging
    from monitoring to managing. This kind of platform will be free from any kind
    of geographical limitations work as an enabler in IoT agriculture system. 8) Mobility
    IoT agricultural network should have the capability to hold up and maintain the
    farmers mobility. So, that they can connect their farms from anywhere at any time
    [146]. 9) Quality of Service (QOS) Recent studies on QoS highlight that at each
    layer of IoT architecture QoS is required [147] [148]. The ability to make sure
    that devices which needs to transmit sensitive information will be capable to
    do this by using IoT technology without any barrier is still an open research
    issue. There is a need to do more work by providing a mechanism that guarantees
    QoS throughout IoT network layers. E. The Business Model IoT agricultural business
    approach is not still vigorous because it consists of a set of essential elements
    with the latest requirements like new operational policies and processes to transform
    the organizational structure. F. Organizational Challenges When talk about food
    organizations and agricultural sectors, is mean the exchange of information and
    goods transportation. IoT is renovating this whole business process by providing
    reliable and accurate delivery of all products and materials [1]. At the circumference
    of network to store and process the data cloud computing provides highest quality
    of services like efficient storage, computational resources, and application development
    tools for hardware diagnostic. That’s why cloud computing is an ideal accompaniment
    in the world of IoT technologies. At the end of the network a large amount of
    data is produced which needs high cost to transfer towards cloud in terms of latency
    and money [18]. Due to which it is a serious issue because of workload and optimal
    balancing. On the other hand fog computing also the cloud computing extension
    which expanding cloud technologies like tools, and the application development
    scope [149]. SECTION IX. Conclusion All over the globe researchers are exploring
    technological solutions to enhance the agriculture productivity in a way that
    complements existing services by deploying IoT technology. In this article, we
    have presented a comprehensive survey on the state-of-the-art for IoT in agriculture.
    To this end, we discuss agricultural network architecture, platform, and topology
    which help to access to IoT backbone and facilitates farmers to enhance the crop
    productivity. In addition, this article provides an extensive overview on current
    and continuing advances in IoT agricultural applications, devices/sensors, communication
    protocols and many innovative technologies. This research considers various IoT
    agricultural challenges and security requirements for the better understanding
    of IoT smart farming security. Furthermore, many important dimensions of IoT based
    agricultural including technologies, industries trends and countries policies
    have been also been presented to facilitate various stake holders. Government
    has started patronizing IoT in agriculture and it is anticipated that soon IoT
    in agriculture will revamp the conventional farming method. It is also clear that
    many big organizations have started investing and developing new techniques for
    farm management system using IoT. Finally, it is expected that this comprehensive
    survey results into a very useful piece of information for researchers, professionals,
    agriculturists and policy makers who are participating and working in IoT field
    and agricultural technologies. Authors Figures References Citations Keywords Metrics
    More Like This Smart Monitoring Agriculture Based on Internet of Things 2018 2nd
    East Indonesia Conference on Computer and Information Technology (EIConCIT) Published:
    2018 Monitoring of Soil Moisture and Atmospheric Sensors with Internet of Things
    (IoT) Applied in Precision Agriculture 2020 XIV Technologies Applied to Electronics
    Teaching Conference (TAEE) Published: 2020 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08883163.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on the Role of IoT in Agriculture for the Implementation of Smart
    Farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.comcom.2020.10.023
  analysis: '>'
  authors:
  - Sofiane Zaidi
  - Mohammed Atiquzzaman
  - Carlos T. Calafate
  citation_count: 52
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Flying Things 3. IoFT applications
    4. IoFT taxonomy 5. IoFT challenges and future research directions 6. Conclusion
    Declaration of Competing Interest References Show full outline Cited by (52) Figures
    (9) Show 3 more figures Tables (7) Table 1 Table 2 Table 3 Table 4 Table 5 Table
    6 Show all tables Computer Communications Volume 165, 1 January 2021, Pages 53-74
    Review Internet of Flying Things (IoFT): A Survey Author links open overlay panel
    Sofiane Zaidi a, Mohammed Atiquzzaman b, Carlos T. Calafate c Show more Add to
    Mendeley Share Cite https://doi.org/10.1016/j.comcom.2020.10.023 Get rights and
    content Abstract Unmanned Aerial Vehicles (UAVs) have recently received significant
    attention by the civilian and military community, mostly due to the fast growth
    of UAV technologies supported by wireless communications and networking. UAVs
    can be used to improve the efficiency and performance of the Internet of Things
    (IoT) in terms of connectivity, coverage, reliability, stability, etc. In particular,
    to support IoT applications in an efficient manner, UAVs should be organized as
    a Flying Ad-hoc NETwork (FANET). FANET is a subclass of Mobile Ad-hoc Network
    (MANET) where nodes are Unmanned Artifact Systems (UAS). However, the deployment
    of UAVs in IoT is limited by several constraints, such as limited resource capacity
    of UAVs and ground devices, signal collision and interference, intermittent availability
    of the IoT infrastructure, etc. In the Internet of Flying Things (IoFT) literature,
    there are no survey or study that exhaustively covers and discusses all key concepts
    and recent works on IoFT. In this paper a comprehensive survey on the IoFT is
    presented, covering the state of the art in flying things with a focus on IoFT.
    A taxonomy of related literature on IoFT is proposed, including a classification,
    description and comparative study of different work on IoFT. Furthermore, the
    paper presents IoFT applications, IoFT challenges and future perspectives. This
    survey aims to provide the basic concepts and a complete overview of the recent
    studies on IoFT for the scientific researchers. Previous article in issue Next
    article in issue Keywords Internet of Flying ThingsUnmanned Aerial VehicleUnmanned
    Artifact SystemInternet of ThingsFlying Ad-hoc NETwork 1. Introduction The Internet
    of Flying Things (IoFT) is a new research domain that has received significant
    attention of both civilian and military researchers in recent times. IoFT suggests
    to integrate Unmanned Aerial Vehicles (UAVs), typically known as drones, with
    the Internet of Things (IoT) in order to support various applications in fields
    such as communications, smart agriculture, environmental pollution monitoring,
    surveillance, disaster management, smart city, smart industry, and object tracking
    [1]. For instance, the IoFT can be used for fire detection and management, where
    several UAVs are employed in order to collect environmental data such as temperature,
    pressure and humidity from the different sensors, and send them towards the ground
    station using IoT devices. The ground station can stock and process the received
    data in order to detect the fire and therefore, alert the people in danger through
    their smartphones [2]. Currently, UAVs are being widely used for expanding a variety
    of IoT services in order to boost performance thanks to their mobility, flexibility,
    fast deployment, ubiquitous usability and cost-effectiveness [3]. For instance,
    UAVs can extend the coverage and reduce the cost of IoT networks by collecting
    and dispatching data in regions missing an infrastructure to support the IoT applications
    [4], [5]. The Federal Aviation Administration (FAA) Aerospace Forecast for fiscal
    years 2019 to 2039 predicts that the number of small UAVs in the U.S. commercial
    fleet will be increased from 7.397 million in 2019 to 8.806 million in 2039 [6].
    A Flying Ad-hoc NETwork (FANET) is a particular case of both Mobile Ad-hoc Networks
    (MANETs) and Unmanned Artifact Systems (UAS) where the nodes are either the UAVs
    or fixed Ground Control Stations (GCSs). The FANET nodes can coordinate between
    them in order to accomplish an operation requiring higher scalability, reliability,
    survivability, and a lower cost compared to a single-UAV or multi-UAV systems.
    However, FANET deployment introduces several challenges, such as: • Connectivity:
    Due to the low density and high mobility of the UAVs, link fluctuations between
    FANET nodes can affect the network connectivity. Therefore, intermittent FANET
    connectivity issues can decrease the network performance by introducing a penalty
    in terms of bit error rate, jitter and latency. • UAV electrical battery charge:
    Energy consumption is perhaps the greatest challenge for current UAVs. The UAV
    battery is used for flight, communications, real-time data processing, etc. Therefore,
    the limited capacity of UAV batteries reduces the UAV flight time [7]. Due to
    the UAV energy limitation, the selection of those UAVs having a higher energy
    power for the data processing or task offloading is a key challenge for FANETs.
    • UAV storage and computing resources capacity: The restrictions regarding local
    UAV capacity in terms of data storage and processing is another FANET challenge
    [8]. The implementation of a protocol that offloads the collected UAV data towards
    a remote ground station having higher resource capacity is an important FANET
    issue. • Transmission delay: When a stable communications infrastructure is not
    available for the FANET, the multi-hop communication mode can ensure end-to-end
    connectivity, but with an increased transmission delay [9]. Therefore, real-time
    FANET operations are limited by the availability of an infrastructure. • Interference
    management: FANET nodes communicate between them mainly using wireless communications
    support. Therefore, the limited bandwidth capacity of this communications mode
    and the rapid change of FANET topologies makes interference management more complex
    [10]. • UAVs collaboration and cooperation: The collaboration and cooperation
    between UAVs in order to accomplish a mission is another FANET challenge. FANET
    is limited to the used communication modes (UAV to UAV, or UAV to infrastructure).
    The Internet of Things (IoT) is an emerging technology which provides connectivity
    for any thing such as sensors, actuators and mobile devices, at any time, anywhere
    [11]. The IoT objects can collect the data, interconnect and exchange these data
    with each other via the Internet through a network infrastructure [12]. These
    objects will be structurally organized and coordinated with each other in order
    to drive various IoT applications and services, such as environment monitoring,
    E-health, smart city, smart industry, etc. [13]. For a faster and more reliable
    processing and storage of data, IoT provides multiple intelligent computing technologies,
    such as cloud-computing, edge-computing, or fog-computing, typically combined
    with cellular-networks (3G, 4G/LTE, 5G) [14], [15], [16], [17]. However, IoT faces
    the following issues and challenges: • IoT nodes deployment: The placement of
    IoT objects in inaccessible places with no permanent power supply is the main
    challenge in IoT [18]. In these cases, the replacement of the node battery introduces
    high cost and requires considerable of time. • IoT services availability: IoT
    services are not always accessible anywhere and anytime, due to intermittent communications,
    or due to inaccessible deployment of the IoT nodes. To overcome this issue, an
    efficient communication protocol which enables continuity of IoT services should
    be used [19]. • Weather conditions: Under adverse weather conditions, such as
    natural disasters or terrorist attacks, a communication infrastructure can severely
    destroy the IoT coverage. Multi-hop transmission can be used in such cases to
    extend IoT coverage [20]. • High number of client queries: IoT applications and
    services operate a large number of sensors to collect client data. However, the
    large number of sensors which must be handled by the network nodes requires IoT
    resources in terms of storage, processing power, and energy, and results in increasing
    delays [21]. • Energy demand of IoT nodes: IoT devices and sensors are characterized
    by limited power [22]. Therefore, efficient management and of the IoT nodes’ power
    supply is an important issue. IoFT has emerged as a practical solution to solve
    FANET and IoT challenges thanks to the advantages offered by UAVs in terms of
    flexibility, maneuverability, efficient mobile dissemination of data, fast deployment
    and low cost [23]. In addition, IoT and associated technologies (e.g. cloud-computing,
    edge-computing, fog-computing and cellular-networks) also offer advantages in
    terms of connectivity, data processing and storage capacity, real-time services,
    etc. [24]. The integration of FANETs with IoT networks provides many benefits.
    Table 1 provides a comparison between IoT, FANET and IoFT according to various
    key points. • Connectivity and coverage: The use of IoT with UAVs can significantly
    extend the network connectivity and coverage by jointly using the Internet connection
    and local connections provided by the FANET. For instance, in rural areas, the
    IoFT can increase the network coverage by two times compared to a standard IoT
    approach without UAVs, being that the radius equal to 45 km and a UAV height equal
    to 50 m [25]. Therefore, the high IoFT connectivity and coverage increases the
    IoT services availability and accessibility. • Reliability: In the IoFT, an UAV
    can play the role of an aerial station which boosts the IoT capacity to ensure
    a reliable downlink and uplink for ground users. Furthermore, the mobility and
    high altitude of the UAVs can mitigate the signal blockage and shadowing, hence
    making the connection between IoT ground devices more reliable [26]. • Data processing
    and storage: IoT cloud-computing infrastructures provide the processing and storage
    of massive-scale data [27]. This IoT feature can handle the limited resources
    of UAVs in terms of processing, storage and energy availability. Therefore, the
    UAVs can offload their tasks and collected data towards the cloud for processing
    and storage. • Real-time services: The IoT edge-computing infrastructure is expected
    as a new technology that analyzes the IoT data and provides real-time services
    efficiently [28]. Therefore, IoFT mitigates the increased transmission delay of
    UAVs multi-hop communications by integrating the IoT infrastructure. • Resistance
    to weather conditions: The integration of UAVs with IoT networks can recover the
    missed connectivity of destroyed IoT infrastructures in bad weather conditions.
    Furthermore, the cooperation and collaboration between UAVs in a multi-hop manner
    can handle the IoT connectivity interruptions in such weather conditions. • Energy
    supply of IoT nodes: In IoFT, the UAVs can be used to provide energy to IoT ground
    devices [29]. Moreover, several technologies can be adopted to perform this task,
    including Wireless Power Transfer (WPT) solutions. IoFT standardization allows
    to regulate the different solutions for flying objects that were developed by
    different manufacturers to communicate with each other using various hardware
    architectures, platforms and communication protocols. Some IoFT standardization
    efforts have been promoted by various industry and governments standardization
    bodies and particular interest groups, such as the Third Generation Partnership
    Project (3GPP), the International Telecommunication Union Telecommunication Standardization
    Sector (ITU-T), and the European Telecommunications Standards Institute (ETSI).
    Table 1. Comparison between IoT, FANET and IoFT. Feature IoT FANET IoFT Connectivity
    and coverage Connected using the Internet Locally connected using U2U and U2I
    communication modes Highly connected using the Internet and local FANET connections
    Reliability Low High Very high Data processing and storage Available Limited to
    UAVs resource capabilities Highly available Energy consumption and supply Limited
    to energy power capacity of IoT nodes Limited to UAV energy power capacity More
    flexible management of power of both UAVs and IoT nodes Cooperation and collaboration
    Limited by Internet availability Limited by FANET connection availability Includes
    IoT and FANET infrastructure and communication modes capabilities Real-time communication
    Limited to IoT connectivity and coverage Limited to local FANET connection Highly
    available due to higher IoFT connectivity Effective cost High Low Medium • Third
    Generation Partnership Project (3GPP): 3GPP is a global standardization partnership
    that defined in Release-15 (March 2017) [30] a study item on enhanced LTE support
    for UAVs with the following main objectives [31]: – Identify the UAV traffic requirements:
    3GPP defined and classified the types of data that can be transmitted in cellular-UAV
    networks in three categories: synchronized and radio control data, command and
    control data, and application data. The first-one is used to guarantee the network
    connectivity, while the second category enables the QoS requirements in terms
    of latency and reliability for the cellular-UAV network. The last category represents
    the downlink and uplink data transmitted in the network such as the video streaming
    data captured by the UAVs. In 3GPP release-15 study, the data rate requirement
    for command and control traffic was fixed at 60–100 Kbps, and the data rate for
    application data requirement was defined as being up to 50 Mbps [32]. – Transmission
    channel modeling: 3GPP developed a specific statistical channel model for cellular-UAV
    networks [33]. This channel model allows the transmission of the data in three
    different ways (air to air, air to ground and ground to air) for rural and urban
    environments. Various parameters were considered in the developed channel model,
    such as: UAV spatial placement, LOS probability, path loss, shadowing, fast-fading
    model, etc. – Cellular-UAV performance analysis: The cellular-UAV performance
    has been analyzed and evaluated in order to prove the effectiveness of the UAVs
    for the association and handover, downlink transmission, and uplink transmission.
    – Define the enhancement requirements for cellular-UAV networks: 3GPP addressed
    the interference issue of cellular-UAV networks by studying some interference
    detection and mitigation techniques, mobility enhancement, and UAV identification.
    • International Telecommunication Union Telecommunication Standardization Sector
    (ITU-T): ITU-T defined the Y.UAV.arch work item that deployed IMT-2020 networks
    for civilian UAV communications, in order to improve the quality of UAV application
    services [34]. Y.UAV.arch provides a functional architecture for UAVs using IMT-2020
    networks. The proposed architecture defined the different functionalities in the
    application layer, service and application support layer, and the security capabilities.
    IMT-2020 networks were established by the Chinese government, which represents
    the main platform to promote the 5G technology research in China, and to facilitate
    the international communication and cooperation [35]. • European Telecommunications
    Standards Institute (ETSI): ETSI defined in technical report 103 373 [36] the
    use cases and related spectrum consideration for UAV usage in Europe. Furthermore,
    the local UAV collaboration use case to control the UAV and report back to the
    connected mobile devices using the future Internet Protocol (IP) has been specified
    in ETSI Next Generation Protocols (NGP) 001 [37]. There are several survey papers
    [9], [31], [38], [39], [40], [41], which addressed the IoFT issues. However, they
    do not present details about the main IoFT concepts and state-of-art in IoFT in
    different lines of research, such as flying things, IoFT characteristics, IoFT
    applications, flying cloud-computing, flying edge-computing, flying fog-computing,
    flying cellular-networks, IoFT challenges, etc. Table 2 presents a brief comparison
    between related survey papers on IoFT based on several important criteria. The
    main contributions of this survey, and difference with previous IoFT survey papers
    [9], [31], [38], [39], [40], [41], can be summarized as follows: • Description
    of the main characteristics of IoFT with a comparative study between flying things,
    IoT and IoFT. • Presentation of the different flying things concepts. • Classification
    and description of the most useful IoFT applications. • Proposition of a new taxonomy
    of existing IoFT related works. • Recapitulation and a comprehensive comparative
    study of all referenced IoFT related works. • Identifying the main IoFT issues
    and challenges and pointers to future directions for IoFT research. As shown in
    Fig. 1, the remainder of this survey paper is organized as follows. Section 2
    outlines the basic concepts of flying things. In Section 3, we classify and describe
    IoFT applications. Section 4 presents the proposed taxonomy and a comparative
    study of the most cited IoFT works. Section 5 discusses the IoFT challenges and
    presents future research directions. Finally, Section 6 concludes this paper.
    For ease of reading, Table 3 presents the list of abbreviations used in this survey.
    Table 2. Comparative study of related survey papers and relation to this paper.
    Survey paper Flying things IoFT characteristics IoFT applications Flying cloud-computing
    Flying fog-computing Flying edge-computing Flying cellular-networks IoFT challenges
    Description Ref. [38] (2015) ✓ ✓ Introduced the based concepts and scenarios of
    flying fog-computing. The paper outlined a range of issues and challenges of fog-computing
    services delivered via UAVs. Ref. [9] (2016) ✓ ✓ Provided a comprehensive survey
    on the UAVs potentials for the IoT services delivery from the sky, and addressed
    the relevant challenges and requirements. Ref. [39] (2018) ✓ ✓ ✓ Reviewed the
    UAV application domains over IoT and 5G cellular-networks. The paper analyzed
    the IoT sensors required by the UAVs, and summarized the privacy and security
    issues of UAV-based IoT. Ref. [41] (2018) ✓ ✓ Presented a survey of UAV communication
    for 5G cellular-networks. The design challenges and future trends of existing
    related works on integrated UAV communications with 5G technologies are discussed.
    Ref. [40] (2018) ✓ ✓ Provided an overview on Internet of Flying Robots (IoFR),
    including its designing issues for real-applications, such as coverage, connectivity,
    limited energy capacity, path planning, search of target, collision avoidance
    and flying robots navigation. Moreover, the survey reviewed and compared the existing
    IoFR works and provides some IoFR future perspectives. Ref. [31] (2019) ✓ ✓ Surveyed
    the state-of-art on the integration of UAVs into cellular-networks. The main issues
    and opportunities were addressed. Furthermore, the paper outlined the testbed
    prototypes for UAV-based cellular-networks. This survey ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ Surveys
    the most recent works on IoFT in various fields, such as flying things, flying
    computing, flying cellular-networks, IoFT characteristics and applications, IoFT
    challenges and futures trends. A general comparative study about the discussed
    IoFT related works is also provided. Download : Download high-res image (456KB)
    Download : Download full-size image Fig. 1. Overall structure and layout of the
    survey. Table 3. Abbreviations used in this paper. Acronym Definition IoFT Internet
    of Flying Things FT Flying Things IoT Internet of Things UAS Unmanned Artifact
    System UAV Unmanned Aerial Vehicle GCS Ground Control Station WSN Wireless Sensor
    Network FANET Flying Ad-hoc NETwork MANET Mobile Ad-hoc Network VANET Vehicular
    Ad-hoc Network UANET Underwater Ad-hoc Network WPT Wireless Power Transfer GPS
    Global Position System RFID Radio Frequency IDentification SBC Single-Board Computer
    SOA Service-Oriented Architecture API Application Programming Interface SDN Software
    Defined Networks NFV Network Functional Virtualization SOAP Simple Object Access
    Protocol REST Representational State Transfer GSC General Static Cloud URC UAV
    Resource Controller UAVaaS UAV as a Service IMU Inertial Measurement Unit UTM
    UAVs Traffic Management AGMEN Aerial-Ground Integrated Mobile Edge Network TDMA
    Time Division Multiple Access AP Access Point MES Mobile Edge Server SMDP Semi-Markov
    Decision Process DRL Deep Reinforcement Learning IoD Internet of Drones AG-IoT
    AGriculture-IoT CH Cluster Head MEC Multi-access Edge Computing LPWA Low Power
    Wide Area DA Data Analytic NO2 Nitrogen Dioxide ORP Oxidation–Reduction Potential
    DO Dissolved Oxygen LBPH Local Binary Pattern Histogram method LTE Long Term Evolution
    ANN Artificial Neural Network MIMO Multiple Input Multiple Output 3GPP Third Generation
    Partnership Project ITU-T International Telecommunication Union Telecommunication
    ETSI European Telecommunications Standards Institute LOS Line-Of-Sight IMT-2020
    International Mobile Telecommunication-2020 IP Internet Protocol NGP Next Generation
    Protocols 2. Flying Things Flying Things (FT) includes both aircraft units and
    systems, such as UAV, drones, UAS, FANET, etc. FT provides many benefits, like
    mobility, flexibility and fast deployment. Therefore, the integration of FT with
    IoT can extend the IoT coverage and connectivity, and can increase performance
    of data transmission for IoT applications. This section describes the concept
    of FT, including UAS, UAV architecture, FANET communication, and FANET characteristics.
    2.1. Unmanned Aircraft System UAS is a control system consisting of three main
    components: Unmanned Aircraft (UA), known as UAV or more popularly as drone [42],
    Ground Control Station (GCS), and communication links [43]. The GCS of UAS houses
    the systems operation, while the UAV performs specific operation mission in the
    flight area. Many civilian and military applications are based on the UAS due
    to their simplicity of deployment, low cost of acquisition and maintenance, as
    well as high capability of maneuvering and hovering [44]. For instance, UAS can
    be applied in fields of agriculture, fire detection and forestry, incident control,
    pipeline security, water boards, atmosphere analysis, face recognition, surveillance
    of enemy activity, etc. Fig. 2 shows an example of UAS. Download : Download high-res
    image (298KB) Download : Download full-size image Fig. 2. An example of Unmanned
    Aircraft System. 2.1.1. UAS architecture The main components of UAS are the UAV,
    GCS and the data communication links. Within a UAV, the most crucial component
    is the flight controller, which represents the UAV’s central processing unit.
    In addition, the UAV is equipped with a communications interface to exchange commands
    and data with the GCS. We review below the various components of an UAS. Unmanned
    Aerial Vehicles. The UAV is the key component of a UAS, which able to collect,
    store, process and exchange the sensing data with other UAVs and with GCS. The
    UAVs can be of different sizes, shapes, components, configurations and missions.
    As depicted in Fig. 3, the UAV is formed mainly by the following components: •
    Airframe: UAV airframe is the platform which payloads the different UAV components.
    It is characterized by his lightweight, stability and limited space. • Flight
    controller: This component is responsible for measuring and monitoring the UAV
    stability and navigation. In addition, the flight controller generates control
    signals for the different UAV states to provide users a manual control of the
    UAV. • Sensors: UAV uses sensors to sense environment data such as temperature,
    humidity, pressure, gas, etc. The sensing data can be partially processed by the
    UAV, or transmitted to the GCS for further analysis and processing [45]. • Global
    Position System (GPS): The GPS provides the UAV geographic location, UAV speed
    and UAV direction at specific time intervals. • Radio Frequency IDentification
    (RFID) reading system: The RFID reader is used to collect the data from RFID tags
    using a single antenna. Moreover, the RFID reader carries out the following tasks:
    tag search in the area, data download from the tags, and tags localization [46].
    • Single-Board Computer (SBC): SBC obtains the collected data from the RFID reading
    system, processes them, and sends these data to the GCS via the UAV communication
    interface. • Communication interface: The UAV should be equipped with a communication
    device, such as an omni-directional antenna, which provides wireless communications
    with other UAVs and the GCS. • Battery: This component is used to supply the power
    for the different UAV devices. However, the UAV is characterized by limited battery,
    which requires an efficient energy management algorithm. Ground Control Station.
    The GCS is an on-land system which provides for the human operator the capability
    of observation, control and monitoring of the UAVs during their flight [47]. Download
    : Download high-res image (309KB) Download : Download full-size image Fig. 3.
    Unmanned Aerial Vehicle. Communication links. In a UAS, the communication links
    ensure the safe exchange of data and control messages between the UAVs and the
    GCS with highly reliable, low-latency, and two-way communications. These UAS communication
    links can be classified into two types: control communication links, and data
    communication links [48]. The first type allows the transmission of control messages
    in the UAS, such as the commands from GCS to UAV, status reports from UAVs to
    GCS, and control information between UAVs. On the other hand, the data communication
    links ensure the transmission of the data captured by the UAVs towards the GCS.
    These data can be exploited by the user applications. 2.2. Flying Ad-hoc NETwork
    A FANET is a special case of a MANET where the communicating nodes are autonomous
    UAVs connected in wireless ad-hoc manner [49]. These UAVs move with a higher speed
    compared to MANET nodes, VANET ground vehicles or UANET aquatic vehicles. Each
    UAV is equipped with some physical devices such as sensors, GPS, camera, etc.
    FANETs attract the attention of military and civilian applications due to their
    flexibility, fast deployment, self-configuration, decentralized control, etc.
    Fig. 4 shows an example of a FANET. Download : Download high-res image (197KB)
    Download : Download full-size image Fig. 4. Flying Ad-hoc Network. 2.2.1. FANET
    communication In a FANET, the UAVs can exchange real-time data between them or
    with the ground control station via the wireless medium, and without any infrastructure.
    The communication between the UAVs handles the problem of a limited communications
    range and allows the real-time exchange of data. As presented below, there can
    be three types of communications in a FANET: • UAV to UAV communication: In this
    type of communication (see Fig. 5.a), the UAVs communicate with each other in
    a multi-hop manner in order to extend the communications range and increase the
    data rate [50]. The UAV can use this communication type when it wants to send
    data packets to another UAV or ground station outside of its range. • UAV to GCS
    communication: In this communication mode (see Fig. 5.b), the UAV communicates
    directly with the GCS which is installed near from the UAV mission area. Using
    this type of communication, the GCS can provide some services to the UAVs. In
    addition, the UAV can send some important data to the ground station. • Hybrid
    communication: This communication type represents a combination between UAV-to-UAV
    and UAV-to-GCS communications (see Fig. 5.c). Therefore, the UAV can send its
    data directly to the GCS in a one-hop or in a multi-hop fashion via the different
    UAVs in the mission area. As mentioned earlier, a FANET is characterized by the
    frequent topology changes due to the high mobility and low density of UAVs. Therefore,
    the UAV-to-UAV and/or the UAV-to-GCS communications for data transmission is a
    challenging issue which requires an efficient routing protocol to be adopted.
    2.2.2. FANET characteristics The existing Wireless Ad-hoc Networks (WANETs) are
    classified into four categories: Mobile Ad-hoc Networks (MANETs) where the nodes
    are mobile, Vehicular Ad-hoc Networks (VANETs) in which the nodes are ground vehicles,
    Underwater Ad-hoc Networks (UANETs) where the nodes are aquatic mobile vehicles,
    and Flying Ad-hoc Networks (FANETs) where the nodes are the mobile UAVs. This
    classification of WANETs is based on their application, implementation, deployment,
    communication and objectives [51]. FANETs inherits some properties from MANETs,
    such as mobility, wireless medium, decentralized control, and multi-hop communication.
    Otherwise, FANETs have their own characteristics compared with MANETs, VANETs
    and UANETs, as detailed below. Table 4 summarizes the differences between MANET,
    VANET, UANET and FANET. • UAVs mobility: The main feature of a FANET is the higher
    mobility of its nodes compared with MANETs, VANETs and UANETs. According to [52],
    UAV speed is typically between 30 km/h and 460 km/h. Due to the higher degree
    of mobility of UAVs, FANET topologies can change frequently, which increases the
    fluctuation of the link quality between UAVs and affects the network connectivity.
    • Mobility model: Unlike MANET nodes which move in random directions and with
    random speed, FANET nodes (UAVs) generally move following a predefined path. Therefore,
    the FANET mobility model is regular and predictable like the mobility model of
    VANETs and UANETs. • Radio propagation model: Each WANET is characterized by a
    specific environment in which its nodes move. For instance, MANET nodes move at
    ground terrain, while VANET vehicles move in highway or urban roads, UANET aquatic
    vehicles moves in the water and FANET UAVs fly in the sky. The radio propagation
    model is affected by the geographic structure of the network environment. Therefore,
    the FANET radio propagation model is different from the radio propagation models
    of MANETs and VANETs, because in the FANET environment the number of the obstacles
    is reduced compared to either of the former ones. • UAVs density: The distance
    between the UAVs is typically higher than the distance between the mobile nodes
    in the case of MANETs, VANETs and UANETs [53]. Therefore, the UAVs density, which
    represents the average number of the nodes within an area, is much lower compared
    to the other WANETs. This situation increases the link disconnection between the
    UAVs. • Energy and computation power: Unlike MANET nodes, which are characterized
    by small battery capacity that reduces the network lifetime, FANETs, like VANETs
    and UANETs, do not suffer from this problem when the UAVs are ordinary, in which
    these UAVs are equipped with sufficient energy power resources. However, when
    the flying nodes are a mini-UAVs, such as drones, the capacity of their batteries
    is also quite limited [54]. Based on the energy resources, the UAVs can communicate
    and react as routers, in addition to their computation capacity for real-time
    data processing. In addition to FANET characteristics in the scope of WANETs,
    FANETs also have specific features when comparing single-UAV with multi-UAV systems.
    Table 5 summarizes the differences between Single-UAV systems, Multi-UAV systems,
    and FANETs. Download : Download high-res image (127KB) Download : Download full-size
    image Fig. 5. Types of FANET communications. Table 4. Comparison between MANET,
    VANET, UANET and FANET. Feature MANET VANET UANET FANET Nodes mobility Medium
    High High Very high Network connectivity High Low Low Low Mobility model Random
    Regular and predictable Regular and predictable Regular and predictable Environment
    Specific ground terrain Highway/urban road Water Sky Nodes density High High Low
    Low Energy power Low High High High (Ordinary UAVs), Low (Mini-UAVs) Computation
    power Low High High High (Ordinary UAVs), Low (Mini-UAVs) • Scalability: Contrarily
    to single-UAV and multi-UAV systems which are mainly based on UAV-to-infrastructure
    communication, FANETs are based on UAV-to-UAV multi-hop and UAV-to-infrastructure
    communications. Therefore, the operation coverage in the mission area can be highly
    extended, and the coordination between the UAVs can be increased. • Mission speedup:
    Due to the high number of UAVs in a multi-UAV system and in a FANET, the mission
    can be completed faster than in the case of a single-UAV system. • Reliability:
    In single-UAV and multi-UAV systems, the UAV must be connected directly to the
    infrastructure. Therefore, the UAV may be disconnected from the infrastructure
    in the presence of adverse weather conditions. However, the UAV-to-UAV communication
    in a FANET increases the UAV connectivity, which ensures a high network reliability.
    • Survivability: When a UAV fails, the mission cannot be completed in a single-UAV
    system. However, in a multi-UAV system and in a FANET, the failure of an UAV does
    not affect the survivability of the operation mission. • Cost: Generally, multi-UAV
    systems and FANETs use small UAVs as they introduce lower maintenance and acquisition
    costs compared to with single-UAV systems based on large UAVs. Table 5. Comparison
    between Single-UAV system, Multi-UAV system, and FANET. Feature Single-UAV system
    Multi-UAV system FANET Scalability Low High Very high Communication UAV-to-infrastructure
    UAV-to-infrastructure UAV-to-UAV, UAV-to-infrastructure Coordination Not existed
    Low High Mission speed-up Low High High Reliability Low Low High Survivability
    Low High High Cost High Low Low 3. IoFT applications IoFT is currently shaping
    various human application domains, such as smart agriculture, environmental pollution
    monitoring, disaster management, video streaming surveillance, objects tracking,
    smart city, smart industry, etc. This section presents some recent works addressing
    different IoFT applications. 3.1. Smart agriculture Precision smart agriculture
    is one of the domains which can use the IoFT advantages in order to improve the
    production efficiency and to optimize crop quality with minimizing the negative
    impact on the environment. In the IoFT literature, several smart agriculture works
    have been proposed in order to increase the food quality and quantity. Uddin et
    al. proposed [55] a dynamic clustering and data collecting scheme based on UAVs
    for Agriculture-IoT (AG-IoT). This study proposes to use a set of IoT ground devices
    to control various parameters related to environment, soil and crops. Moreover,
    a UAV is used to locate and assist these IoT devices to form a cluster and to
    select the best Cluster Head (CH). Therefore, the use of a UAV allows the proposed
    clustering scheme to achieve a reliable uplink for data collection. In [56], Saha
    et al. presented different solutions that combine IoT with drones for crop quality
    improvement in smart agriculture. The work proposed an IoT-based drone model which
    consisted of a Raspberry Pi integrated with various sensors and modules, such
    as GAS sensor, RGB-D sensor, and GPS module. The Raspberry Pi module collects
    the agriculture data from different sensors, including soil temperature, ground
    images, humidity, etc. Moreover, The Raspberry Pi sends these data to a cloud-based
    storage area for further analysis. In [57], Faraci et al. proposed an IoFT platform
    for smart agriculture monitoring in rural areas. To provide the connectivity,
    the proposed platform constituted of a set of UAVs which collect the agriculture
    data from some critical places in the territory, such as trees, plants, rivers,
    soil, cropland, etc. Therefore, these UAVs transfer the collected data using 5G
    to a local data center that consisted of a limited number of servers. The data
    center uses a Multi-access Edge Computing paradigm [58] for the management, processing
    and storage of the collected agriculture data. To handle the electrical power
    unavailability in rural areas for UAVs batteries recharge and data center supply,
    the proposed platform integrated a hybrid power generation system which consisted
    of diesel and power renewable generators. An analytical model is defined in this
    work to design and evaluate the performances of the proposed platform. However,
    the design of this platform did not consider some issues, such as the variation
    of the number of UAVs that are in the ground to be recharged. 3.2. Environmental
    pollution monitoring Environmental pollution causes changes to the ecosystem and
    the atmosphere due to various forms of chemical and energy pollutants which can
    deteriorate the quality of the environmental air, water and soil. Therefore, these
    pollutants directly affect the life of biological entities in the environment.
    Many IoFT studies on environmental pollution monitoring have been proposed in
    order to keep our nature safe. Elijah et al. [59] proposed a smart Malaysian river
    monitoring solution that controls the water pollution. The proposed solution was
    based on UAV, IoT, Low Power Wide Area (LPWA) communication technology and Data
    Analytics (DA). The UAV is used for monitoring the river water, collecting river
    water sample data and sending them towards IoT cloud server using LPWA. The latter
    provides a long range, low-power and low-cost wireless communication system [60].
    The DA allows to know the water quality and pollution level discharged into the
    river based on the collected data. The proposed smart river monitoring solution
    provides low-cost, high-resolution in time and space, real-time monitoring and
    pollution identification. However, this work did not resolve the UAV electrical
    power supply and proposes to use only one UAV. In [61], Hernandez-Vega et al.
    presented an air pollution monitoring system based on UAVs and IoT that measures
    the air quality in a smart city. The proposed system was composed of a UAV which
    uses a set of MQ sensors to control the criterion pollutants in the air: carbon
    monoxide, hydrogen, ozone, and carbon dioxide. The UAV also uses a data acquisition
    system to covert the analog data values of the sensors to numerical data values
    which can be manipulated by the computer. In addition, the proposed system also
    included a ground control station that monitors the UAV, receives the air quality
    data for processing, and uploads these data to the IoT servers. A radiofrequency
    communication channel is used for the data transmission between the UAV and ground
    control station. Experimental results showed that the used UAV MQ sensors are
    ideal due to their size and weight, but fail to provide a reliable measure of
    the air quality. Agarwal et al. designed [62] an air and water monitoring system
    based on a master drone, four slave robots and IoT. On the one hand, and to cope
    with air pollution monitoring, two flying slave robots are used which are composed
    of a microcontroller and some sensors for air pollutants detection, such as Nitrogen
    Dioxide (NO2) gas sensor, Ozone (O3) gas sensor, humidity sensor, and temperature
    sensor. On the other hand, two land slave robots are mobilized for monitoring
    the water pollution. Each land slave robot consisted of a microcontroller and
    a set of water pollutants detection sensors, like Oxidation–Reduction Potential
    (ORP) sensor, Dissolved Oxygen (DO) sensor, PH sensor and temperature sensor.
    Moreover, the four slave robots have a power supply and an RF modem to communicate
    with the master drone. This master drone receives the real-time air and water
    quality data from the slave robots, records and maintains these data, and uploads
    them towards the IoT servers in order to analyze the different levels of air and
    water pollution. This proposed designed system should be implemented in order
    to prove its real efficiency for air and water pollution monitoring. In [63],
    Yang et al. proposed an IoT-based flying system for environmental pollution monitoring.
    The designed system was composed of three parts: quad-rotor UAV, environmental
    detection module and web servers. The quad-rotor UAV supports the environmental
    detection module, which serves to detect the different environmental parameters
    using some sensors, such as temperature, humidity and air quality. Furthermore,
    the environmental detection module sends the collected environmental data to the
    web servers using 3G technology and TCP/UDP transmission protocols in order to
    analyze and process these environmental data. Although the proposed system can
    efficiently monitor the environmental pollution, the power shortage problems of
    quad-rotor UAV batteries was not addressed in this work. Hu et al. presented [64]
    an air quality monitoring architecture based on IoT and UAVs. This architecture
    consisted of four layers: sensing layer, transmission layer, processing layer
    and presentation layer. The first layer is composed of ground devices and UAVs,
    which collect the real-time air quality data from the environment and transmit
    it to transmission layer using wireless communications. The second layer consists
    of base stations which guarantee the bidirectional communication between the sensing
    layer and processing layer. The third layer is composed of web servers and database
    servers which receive the air quality data via IoT communication from transmission
    layer, analyze these data, and predict the air quality values using spatial fitting
    and short-term prediction techniques. The last layer provides a graphic interface
    for the users and system managers. This proposed architecture takes into account
    the deployment strategies of UAVs and ground devices in the environment, and also
    considers the control power of UAVs and ground devices in order to achieve a balance
    between the data accuracy and power consumption. However, this system did not
    consider the transmission and processing delay of sensing real-time air quality
    data. 3.3. Disaster management This type of applications aims to manage natural
    disasters, such as forest fires, floods, storms and earthquakes, in order to ensure
    an immediate assistance to victims, and to provide a rapid and effective recovery
    in such situations. Some works were proposed which examine the usefulness of IoFT
    for disaster management. In [65], Kalatzis et al. proposed an agent-based layered
    architecture for early forest fire detection based on UAVs and IoT. The proposed
    architecture is composed of three layers: edge-computing layer, fog-computing
    layer and cloud-computing layer. This architecture aims to select in real-time
    the forest fire images, and to reduce the utilization of UAV energy, processing
    and communication resources. The first layer provides UAVs with a low-latency
    access to the servers. The second layer accomplishes the most energy-consuming
    tasks, such as the classification, recognition and selection of UAV-captured images.
    The third layer receives the fog selected images from fog-computing layer for
    further processing and analysis. The initial experiments showed that the processing
    of the captured images at the fog-computing layer provided better results in terms
    of energy consumption, response time and network load than the processing of these
    images at the edge-computing or cloud-computing layers. This work can be improved
    by including different resource allocation techniques in order to optimize the
    utilization of UAV resources in terms of energy and processing. Kumar et al. proposed
    [66] to combine UAVs and IoT in order to collect environmental data from sensors
    in disaster-prone areas, and send them towards the GCS. The collected data represents
    the critical environmental parameters, such as temperature, humidity, luminosity,
    strain, stress, etc. Moreover, the disaster types considered in this study can
    be of different types: fires in forests and buildings, landslides, heavy floods,
    etc. For the real-time communication between the UAVs and a ground station, the
    authors propose to use the Internet. The ground station receives the collected
    data and protects the UAVs during extreme conditions. The efficiency of the proposed
    solution is proved based on a series of experimental tests. However, only the
    temperature parameter is considered in this experiment. Furthermore, the solution
    did not consider the electrical supply of UAV batteries. In [20], Liu et al. proposed
    an emergency extension of IoT coverage using UAVs in disasters when the communication
    infrastructures are destroyed. Two optimal transceiver schemes were proposed in
    order to uplink the data from the ground devices to the UAV, and in order to downlink
    data from the UAV to ground devices. Moreover, the proposed solution relies on
    multi-hop device-to-device communications to extend the coverage of the UAV. Simulation
    experiments proved the effectiveness of the proposed solution to extend the IoT
    coverage using the UAV, and to guarantee a reliable transmission. However, the
    proposed scheme can be improved by using multiple UAVs, and by handling the UAV
    electrical supply problem. Luo et al. proposed and implemented [67] a UAV-cloud
    platform for disaster sensing applications, considering some constraints such
    as intermittent network connectivity, network resources’ limitation, high volume
    of data, limited UAV resources, etc. The proposed platform consisted of two parts:
    client and server. The client component represents the UAVs that collect the data,
    stores them in its onboard hard disk, performs the pre-processing of these data,
    and sends them to the cloud network and to the control center. The server component
    represents the cloud-computing network which stores the received data and performs
    its post-processing to reduce the utilization of UAVs resources. The results proved
    that the proposed framework is suitable when the disaster applications require
    a large amount of real-time data, such as video streaming data. In [68], Choksi
    et al. proposed the use of UAVs to collect the real-time data from sensors, and
    transmit them to the cloud platform in disaster situations. The UAV of the proposed
    system is equipped with IoT devices to achieve IP-based communication with the
    ground station and with the cloud-servers. The ground station receives the real-time
    sensor data, such as temperature, luminosity and humidity a via 802.15.4 radio,
    and sends it to the UAV. Therefore, when the UAV receives the sensors data, it
    transmits them to the cloud-platform. Afterwards, the latter analyses the received
    data and alerts the authorities about the location of the disaster. This study
    proposed to use only one UAV, failing to adequately cover all the region associated
    to a disaster. 3.4. Video streaming surveillance Video streaming-oriented flying
    things enables the dissemination and real-time communication of video among IoT
    devices using a set of UAVs. These UAVs can capture the video using their local
    camera, and forward it towards the IoT network for processing and storage. In
    the IoFT-related literature we can find many state-of-art video streaming surveillance
    works. In [69], Motlagh et al. presented a UAV-based IoT platform for crowd surveillance
    based on face recognition. The proposed platform consisted of set of UAVs which
    are equipped with various devices such as camera, IoT devices, WIFI devices, GPS,
    sensors, etc. These devices allow UAVs to collect and deliver the video data towards
    the ground station and towards the Mobile Edge Computing (MEC) nodes. This transfer
    of UAV data is performed by a wireless network, such as a WiFi or a cellular-network
    (such as 4G-LTE and 5G). Two case studies were considered in this work: when the
    video processing is performed locally by the UAV, and when the offloaded video
    is processed by MEC nodes in the network. The work proposed to use the Local Binary
    Pattern Histogram method (LBPH) in order to perform face recognition. The testbed
    results have been demonstrated that face recognition at the MEC nodes significantly
    reduces the UAV energy and the video processing time. Qazi et al. [70] presented
    an architecture for real-time video streaming surveillance using UAVs and 4G LTE
    communications. The architecture included several outdoor cells, each representing
    a UAV equipped with camera for external video streaming monitoring of the building.
    In addition, this architecture consisted of several indoor cells which contained
    UAVs equipped with cameras within the controlled building. Therefore, both outdoor
    and indoor cells capture and send real-time video to base stations using 4G-LTE
    cellular-network. Simulation results showed that the number and mobility of UAVs
    influence data throughput. In [71], Grasso et al. proposed a Tactile Internet
    architecture for video-surveillance based on UAVs and a set of sensors and actuators
    on the ground. This architecture is composed of three domains: the master, the
    network and the slave. The first domain represents the users who control the UAV
    operations for the video-surveillance. The second domain allows the interconnection
    between the master and slave domains. The last domain consists of UAVs equipped
    with a camera to capture the images and sensors and actuators fixed to the ground.
    Moreover, each UAV is equipped with a micro-controller which combines the received
    images from the local camera with the received sensors data to generate the tasks.
    In addition, the UAV consisted of a micro-computer to process the generated tasks
    and consisted of a task queue. The simulation results proved that the system can
    provide an end-to-end delay not greater than 1 ms, and a loss probability lower
    than 10−7. However, the UAV energy power consumption is not considered in this
    architecture. Although the most recent IoFT application studies were cited in
    this section, there are work in other domains, such as object tracking [72], [73],
    [74], smart cities [75], [76], smart home [77], smart industry [78], [79], etc.
    These IoFT applications are very diversified and increased every day. 4. IoFT
    taxonomy The fast growth of UAV technology makes it possible to apply and integrate
    with the other networks and systems in order to accomplish complex missions, including
    disaster management, accident prevention, and crop management. IoFT is a new research
    domain that integrates FANETs with IoT in order to efficiently support the different
    IoT applications with high reliability and flexibility. Furthermore, the IoFT
    can improve the availability of IoT services in the areas which are badly served
    by the existing IoT infrastructure, such as the rural area. In this section, a
    taxonomy of the most important and recent related works in the IoFT literature
    are reviewed and discussed. We classify IoFT works into four main categories:
    flying cloud-computing, flying edge-computing, flying fog-computing and flying
    cellular-networks, as shown in Fig. 6. All these works aim at improving the IoFT
    capabilities in terms of scalability, reliability, stability, security, etc. In
    addition, a recapitulation and a comparative study of all referenced IoFT related
    works is presented at the end of this section. Download : Download high-res image
    (680KB) Download : Download full-size image Fig. 6. Proposed taxonomy for Internet
    of Flying Things. 4.1. Flying cloud-computing Flying cloud-computing is presented
    as an integration of FANETs with cloud-computing, in order to increase the processing,
    storage, network bandwidth and tenancy capacity of FANETs by sharing the high-power
    IoT cloud-server resources [80]. The flying cloud-computing architecture consists
    of three layers: UAV front-end, communication, and cloud [81], [82]. As shown
    in Fig. 7, the first layer is the UAV front-end layer, which is responsible for
    collecting the sensor data in the sky, such as temperature, pressure, and gas.
    Then, the collected data should be transmitted to the cloud for storage and processing.
    For instance, these data can be used for fire detection, pollution monitoring,
    environmental recognition, etc. The next layer of flying cloud-computing architecture
    is named communication, which provides for the UAVs a wireless communications
    interface to communicate with them and with the GCS. Moreover, in this layer,
    the UAVs can transfer the collected data to the cloud through an access network
    using 3G/4G cellular communication devices, or other alternative technologies
    like WiFi, WiMAx, etc. The last layer includes a cloud server which allows for
    storage and real-time processing of the streamed data captured by the cloudlet
    UAVs. The data aggregation is the main objective of cloud storage, in which the
    civilian and private agencies can easily access the stored data. The cloud servers
    contain a database or a file system to store the collected data. These data can
    be of various types, such as environment variables, geographical location parameters,
    mission information, sensor data and images, etc. [83]. In addition, to the data
    storage, the cloud server processes the data received from the cloudlet UAVs in
    order to detect critical events including forest fires, human activity, etc. Moreover,
    the cloud layer contains a services interface which enables user applications
    to control the UAVs missions and parameters. In the literature of flying cloud-computing,
    several works were proposed. Hong and Shi [84] proposed a multi-UAV cloud-based
    control system. The proposed system allows multiple users to simultaneously control
    and monitor different UAVs. Moreover, the system allows users to dispatch missions
    over the UAVs, in addition to collecting and processing sensor data through the
    cloud-computing. To demonstrate the effectiveness of the designed system, a simulation
    based on Software In The Loop (SITL) simulator was performed. However, the proposed
    system did not take into account the security and collaborative issues of the
    UAVs. Download : Download high-res image (335KB) Download : Download full-size
    image Fig. 7. Flying cloud-computing. Mohamed et al. [85] proposed a Service-Oriented
    Architecture (SOA) for collaborative cloudlet UAVs. In the proposed SOA architecture,
    the authors propose a mapping between the UAVs and cloud computing in order to
    combine the UAVs capability with the cloud-computing resources in terms of data
    storage and processing. The proposed architecture provides for UAV collaboration
    in terms of essential services, including mission organization, location monitoring,
    security, real-time control and data storage, in addition to customized services
    such as sensing, actuation, data analysis, etc. A generic description of the proposed
    architecture was provided, including its complements and services without any
    real implementation. In [86], [87], the same authors enhanced their previous work
    [85] by proposing a UAV-cloud platform which is based on a Resource-Oriented Architecture
    (ROA) in order to facilitate the modeling of UAV resources and services. In the
    proposed platform, the UAVs are considered as servers where their resources can
    be accessed by Application Programming Interfaces (APIs). Moreover, a broker layer
    was proposed which dispatches the mission-requests to the UAVs. A real prototype
    of the proposed UAV-cloud architecture was developed using Arduino devices as
    UAVs with a WiFi shield for the communication, and using RESTful APIs for access
    to UAVs resources and services. However, the developed prototype of the proposed
    UAV-cloud platform is very simple due to a limited validation using a simple Arduino
    board. In [88], Mahmoud et al. extended their implemented prototype in [86], [87]
    by integrating Arduino on-board with various sensors to detect and measure some
    environmental events, such as humidity and temperature. Each of these sensors
    was manipulated using RESTful web services through a Web interface. The authors
    provided a testbed evaluation study in order to prove the effectiveness of the
    implemented prototype in terms of access time to UAV resources. However, the scalability
    of this prototype is limited since the experimental testbed was applied to a small
    network. In [89], [90], the authors presented a cloud-based softwarization architecture
    for collaborative UAVs and Wireless Sensor Networks (WSNs). The proposed architecture
    separates the UAV physical resources layer from the control layer. Moreover, this
    architecture is based on three strategies which include softwarization, Software
    Defined Networks (SDN) and Network Functional Virtualization (NFV). The first
    strategy is based on the modularity concept, which permits the higher layer to
    be changed easily without modifying the network architecture. The second one consisted
    of separating the physical layer from the control layer. The third strategy allowed
    the higher layer to visualize the physical devices. The proposed system which
    consisted of sensors, UAVs and a WSN controller, which were implemented and evaluated
    in the scope of an agriculture scenario. However, the proposed architecture should
    be improved by considering the security factor. Koubâa et al. [83], [91] proposed
    Dronemap Planner for the cloud-based management of UAVs. The proposed system allows
    access to the UAVs through web services (SOAP, REST), UAV missions scheduling,
    and facilitates the coordination between the UAVs. The communication between the
    proposed system, UAVs and users is performed using MAVLink [92] and ROSLink [93]
    protocols. Experimental results have shown the effectiveness of Dronemap Planner
    to visualize and to facilitate the access to the UAVs through the Internet. However,
    security and QoS factors should be investigated as well in order to improve Dronemap
    Planner. In [94], Koubâa et al. proposed a cloud-based system called DroneTrack
    for real-time tracking of moving objects using UAVs. DroneTrack is based on the
    Dronemap Planner management system to monitor and communicate with the UAV via
    Internet. DroneTrack is based on the exchange of UAV and object GPS coordinates
    over the cloud in order to follow them in real time. The experimental study proved
    that DroneTrack can track moving objects with low connectivity between the UAVs,
    cloud and users. However, the DroneTrack tracking accuracy must be further improved.
    In [81], [82], the authors studied the stability and reliability of a cloud-based
    multi-UAV system. In the first step, the authors analyzed the ability of the cloud
    system to control and monitor the UAVs. Second, the authors modeled the proposed
    cloud-based UAV control system in order to find out the relationship between the
    maximum sensor data rate generated by the UAVs with the system stability and reliability.
    This relationship was summarized by analyzing the on-demand service capability
    of both the General Static Cloud (GSC) and the UAV Resource Controller (URC).
    The simulation results showed that the cloud-based UAV system stability decreased
    with the increase of the generated data rate. However, the proposed system was
    validated based on theoretical analysis and experimental simulations without any
    real implementation. Majumder and Prasad [95] proposed a cloud platform to control
    the UAVs. This platform allows the users and controllers to communicate simultaneously
    with the UAVs. The users introduce the UAVs parameters, such as altitude, speed
    and direction, and the cloud platform monitors the UAVs based on the user requirements.
    The UAVs communicate with the cloud platform through the GCS, where wireless communications
    are used between the UAV and GCS, being the Internet used to connect the GCS to
    the cloud platform. In [96], Yapp et al. designed a framework which enables the
    users to access to the UAV as a Service (UAVaaS) through the cloud for commercial
    applications. Using the proposed framework, a multiple customer can allocate different
    UAVs to execute commercial operations, such as uploading the updated waypoint
    to UAVs, watching the live video, etc. In order to optimize the UAV resource utilization
    and guaranteeing a better security, a cloud coordinator was proposed. The latter
    handles the communication between the users and UAVs, manages the tasks assignment,
    and controls the access to UAVs from different categorized users. Rodrigues et
    al. proposed the Cloud-SPHERE platform [97], [98] based on cloud-computing that
    provides a secure communication channel between the UAVs, and between the UAVs
    and the infrastructure, including identification, authentication and data security.
    Furthermore, the designed platform allows the service management for the UAVs
    to be connected to the cloud, including service classification and service provision.
    A basic and generic conceptual model of the proposed platform is provided. However,
    more implementation and experimental evaluations should be performed in order
    to demonstrate the effectiveness of the Cloud-SPHERE platform. Hadj et al. [99]
    proposed a three-layer cloud architecture which uses the UAVs as a sink for ground
    wireless sensor networks (WSNs). The first layer of the proposed architecture
    consists of the terrestrial wireless sensor nodes, characterized mainly by a short
    communications range which makes it not always connected. The second layer represents
    the cloudlet UAVs which provides a sink for service delivery. Each UAV collects
    the data from the ground sensor nodes, and collaborates with the other UAVs to
    transmit these data towards the GCS. The third layer is the cloud control center
    which is responsible of the processing and the analysis of the collected data
    in order to take a decision. The numerical evaluation showed that the proposed
    architecture provides optimal values for the number of terrestrial sensors, delivery
    delay and UAV energy consumption. However, it would be necessary to validate the
    proposed architecture through simulation or real experiments. In [100], the authors
    presented the AnDrone architecture, which allows the users to access a UAV using
    the cloud. Furthermore, the proposed system enables a physical UAV to execute
    simultaneously and separately multiple virtual UAVs. In addition, a virtualization
    of the UAVs is provided using Linux. An AnDrone prototype was implemented based
    on a Raspberry Pi 3. Experimental results demonstrated that the AnDrone prototype
    ensures real-time virtualization and control of the UAVs, secure communication,
    minimal energy overhead of the UAVs, and low latency. Zhang et Yuan [101] implemented
    a cloud-based server using Python in order to analyze the UAV flight data, and
    to allow the users to remotely control and visualize the UAV. The authors proposed
    to use 4G to transmit the UAV data to end users. A simple testbed evaluation of
    the proposed system was performed using a single UAV. Many other flying cloud-computing
    were proposed in order to support the storage and computing of large amounts of
    data, such as [102], [103], [104], [105]. However, cloud computing is not a suitable
    solution for real-time applications due to associated delays between end-user
    and cloud-servers, which are located far from these users [106]. To overcome this
    issue, many IoFT works were based on the flying edge-computing and the flying
    fog-computing paradigms, that aim to provide low-latency communication by offloading
    the UAV tasks to cloud-servers that are close-by. 4.2. Flying edge-computing Flying
    edge-computing extends the flying cloud-computing capabilities to real-time sensitive
    IoT applications. The edge-layer reduces the computing load by handling some UAVs
    data locally at the edge IoT devices without an intervention of the cloud. Therefore,
    this switching of the data computing and storage to the edge layer decreases the
    latency significantly. Most recent works on IoFT are based on flying edge-computing
    in order to support real-time IoT applications such as smart transportation, video
    streaming surveillance, augmented reality, emergency intervention, etc. In [107],
    Bekkouche et al. proposed to use the MEC with the UAVs Traffic Management (UTM)
    system in order to reduce the latency (e.g. end-to-end delay) and increase the
    reliability of the communication between UAVs and UTM. In the proposed system,
    the control of the UAV flight was performed by the nearest edge server to this
    UAV in order to ensure the latency and reliability. Furthermore, the authors measure
    the consumption of MEC resources when varying the number of UAVs in order to determine
    the required resources to ensure MEC scalability. A realistic experimentation
    has been performed to prove the effectiveness of the proposed system using only
    one UAV and one edge server. Therefore, multiple UAVs and edge servers should
    be considered to efficiently evaluate this system. In [108], Narang et al. proposed
    an architecture for a UAV-based MEC infrastructure which solves the problems of
    challenged networks, including the disfunction and services unavailable under
    natural disaster situations or in rural areas. The main objective of this architecture
    is to provide the coverage and the MEC services to users in such situations. Therefore,
    the UAV and MEC were deployed in order to host the GCSs and the edge-computing
    resources. The analytical results have showed that the proposed architecture can
    better cover the user services even when an important number of GCSs fail. However,
    this architecture can be improved by using coverage optimization techniques. Cheng
    et al. [109] proposed an architecture for an Aerial-Ground Integrated Mobile Edge
    Network (AGMEN) that addressed many edge-computing network issues, such as communication,
    computing and caching. In this architecture, multiple UAVs are deployed in order
    to cover spatially and temporally the user areas for data delivery. These UAVs
    play the role of edge network controllers in order to allocate efficiently the
    computing and storage resources. Any experimental evaluation of AGMEN was provided
    in order to prove its effectiveness. In [110], Zhou et al. proposed an integrated
    air–ground framework for MEC. The proposed framework combines the capabilities
    of ground vehicles with UAVs in terms of communication, computing and storage
    in order to allow fast on-demand deployment of edge servers. Four use cases were
    introduced in order to demonstrate the effectiveness of the proposed framework
    which supports high mobility, high throughput and low latency. Simulation results
    showed that the proposed platform greatly reduces the overall delay. Chen et al.
    [111] designed a hybrid Edge–Cloud model for UAV swarms in order to guarantee
    high QoS for resource-intensive and real-time applications, including crowed-sensing
    within smart cities. The proposed model extends the UAV resources capacity by
    using the closer edge servers, which are able to process the data with a low delay.
    Furthermore, cooperation between edge and cloud-computing was proposed for the
    processing and storage of big data at the cloud. The simulation results showed
    that the proposed model can improve the QoS of the UAV. However, in order to validate
    the proposed model, a real implementation and testbed evaluation should be performed.
    Zhou et al. [112] proposed a MEC with a UAV-based wireless system in order to
    handle the limited resource capacity of ground users in terms of energy power
    and computing. In the proposed system, the UAV transmits the energy to the mobile
    ground users in order to exploit it for computation tasks. Moreover, an algorithm
    which minimizes the UAV power consumption was proposed by jointly optimizing the
    computing offloading and the design of the UAV trajectory. The simulation results
    showed that the proposed system outperforms the other benchmark schemes in terms
    of convergence. In [113], the same authors addressed the resource allocation problem
    in order to maximize the computation rate of users using the system proposed in
    [112] under binary and partial modes of computation offloading. Two algorithms
    were proposed in order to guarantee a maximized user computation rate by optimizing
    UAV computation, energy resources and the UAV trajectory. Simulations showed that
    the proposed resource allocation scheme is able to converge faster than the other
    disjoint schemes while introducing a low computation complexity. In [114], Hu
    et al. proposed to use a MEC server with a UAV in order to provide MEC services
    for ground users by using Time Division Multiple Access (TDMA). Furthermore, a
    globally and locally optimal scheme was proposed which minimizes the user energy
    consumption by optimizing the UAV coordinates, allocation of time slots, and partitioning
    of computation tasks. Numerical results demonstrated that the proposed scheme
    is superior compared to other offloading schemes. In [115], the authors proposed
    an UAV-based MEC architecture where the UAV acts as a MEC server that helps ground
    users to accomplish their tasks. In addition, the UAV offloaded these tasks towards
    the Access Point (AP) for further computing. In order to minimize the energy consumption
    of both UAV and users, the authors proposed an algorithm which optimizes the scheduling
    of computation resources, allocation of bandwidth and UAV trajectories. Simulation
    results showed that the proposed algorithm provides higher and more stable performance
    than baseline schemes. In [116], Li et al. proposed to use the UAV as Mobile Edge
    Server (MES) in order to provide real-time offloading of computation tasks for
    ground users. Furthermore, a maximization of user tasks’ throughput with limited
    UAV energy was performed using two technics: Semi-Markov Decision Process (SMDP)
    and Deep Reinforcement Learning (DRL). The first technique was used to formulate
    the maximization problem as SMDP, while the second technique was applied to solve
    this problem. Simulation results showed that the proposed scheme provides optimal
    user task throughput values with acceptable convergence. In [117], [118], [119],
    the authors addressed the task computation offloading problem in MEC-based UAV
    networks in order to simultaneously reduce the UAV energy overhead and the execution
    delay. This problem was formulated and solved using a theoretical game strategy,
    where three types of players are considered: UAV, GCS and edge server, all cooperating
    together for the computing task. Therefore, the task can be processed in the UAV,
    offloaded to the nearest GCS, or offloaded to the edge server. Simulation results
    demonstrated that the proposed task computation offloading scheme achieves the
    best tradeoff between computation cost, energy consumption and execution delay
    compared to the cases of task execution on UAV, edge server and GCS, respectively.
    Sedjelmaci et al. [120] proposed in a cyber defense system for a UAV-Edge computing
    network in order to protect this network against attacks, while taking into account
    the limited UAV energy and computation resources. The proposed security system
    was modeled based on a non-cooperative Stachelberg game, in which each UAV had
    a security agent that protects it and its offloading link against the attacker
    agents. Simulation results showed that, with low UAV energy and computation resources,
    the proposed defense system can provide a high level of the security, while a
    high number of UAVs and attackers was considered. In [121], Tian et al. addressed
    the security and the privacy issues in the Internet of Drones (IoD). The authors
    proposed an MEC-based authentication framework for UAVs which ensures real-time
    and fast authentication, high privacy protection and non-repudiation. The proposed
    framework allows the UAVs to control the generation of its signature key without
    the problem of key escrow. The analysis results demonstrated that this framework
    can efficiently protect UAVs against threats to authentication, privacy and repudiation.
    Moreover, in order to respect the UAV resources constraints, experimental results
    showed that the proposed framework does not introduce high costs in terms of computation,
    communication or storage. In the literature related to flying edge-computing,
    several other works have been proposed [122], [123], [124], [125], [126], [127],
    [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139],
    [140]. Although flying edge-computing is good for IoT real-time applications,
    some of these applications need the storage and computing of voluminous data,
    like the video streams, which cannot be supported efficiently by the local resources
    of edge IoT devices. To overcome this challenge, flying fog-computing provides
    edge-computing in order to guarantee low-latency, and it can be expanded to the
    core network as well (e.g. cloud-computing) [141], for the storage and processing
    of high volumes of UAV data. 4.3. Flying fog-computing Flying fog-computing integrates
    cloud servers and edge IoT devices in order to provide high capacity in terms
    of storage and computing, and a low latency for UAV-assisted IoT applications.
    As shown in Fig. 8, flying fog-computing provides an intermediate layer between
    UAVs and the cloud layer, which is located at the edge of the network, and that
    consists of a large number of fog nodes. The fog layer can communicate with cloud
    layer via the Internet, or with the UAVs using a wireless connection. Some flying
    fog-computing works were proposed in recent years. In [142], Hou et al. proposed
    the integration of fog-computing with a UAV swarm system in order to handle UAV
    computation tasks with a low latency and a high level of reliability. Furthermore,
    the authors proposed a genetic-based heuristic algorithm which optimizes task
    allocation in order de reduce as much as possible the UAV energy consumption.
    Simulation results proved that the proposed algorithm can efficiently offload
    and process UAV tasks, and that it can provide minimal energy consumption while
    satisfying the latency and reliability requirements. However, the complexity of
    the proposed algorithm should be reduced in order to further improve its practicability.
    Download : Download high-res image (183KB) Download : Download full-size image
    Fig. 8. Architecture of Flying fog-computing. Lee et al. studied [143] the problem
    of UAV-based fog-computing for the smart industry 4.0. Furthermore, a framework
    for task computing offloading was proposed which allows the ground sensors to
    offload its tasks towards the nearby fog UAVs. In addition, the proposed framework
    allows the fog UAVs to optimize their task allocation in order to maximize the
    computed tasks number, while taking into account the communication and latency
    of computation. A greedy algorithm was proposed in order to perform this optimization.
    Simulation results showed that the proposed algorithm can effectively optimize
    task allocation with an optimum gap which is not higher than 7.5%. However, the
    proposed platform can be extended by optimizing the UAV trajectory. Mohamed et
    al. [144] proposed a UAV-based fog-computing system named UAVFog in order to provide
    data storage, flexible communication, and low latency for IoT applications. UAVFog
    exploits the fog-computing capabilities and the UAV mobility in order to support
    IoT applications at different locations. Furthermore, many IoT services are offered
    by UAVFog, such as discovery and integration of IoT resources, broker services,
    and location-based services, as well as invocation and security services. A prototype
    of UAVFog was implemented, and the experimental results proved the effectiveness
    of UAVFog in terms of latency. In [145], He et al. addressed the security, safety
    and privacy protection issues of fog UAVs in an airborne fog-computing platform.
    Therefore, the authors proposed a GPS spoofing detection method which is based
    on a monocular camera and the Inertial Measurement Unit (IMU) of the UAV. Experimental
    results showed that the proposed method is more effective than solely using the
    IMU. Ti and Le [146] studied the computation offloading in a UAV-assisted hierarchical
    fog-computing system. This proposed system exploits the distribution architecture
    of UAVs and the centralized architecture of the cloud for task computing. Furthermore,
    Multiple Input Multiple Output (MIMO) technology was employed to ensure efficient
    data communications. In order to minimize the system power consumption, the authors
    proposed to optimize computing offloading, resource allocation, user-cloud/cloudlet
    association and path planning using a convex optimization method. The flying fog-computing
    paradigm extends the storage and processing capacity of flying cloud-computing
    towards the flying edge-computing in order to reduce service latency and ensure
    a higher computing capacity to end users. However, the main challenge of flying
    fog-computing is how to integrate the UAVs at the edge-computing layer to the
    cloud-computing layer. This integration can be performed through various communication
    technologies, such as WiFi, WiLAN, cellular-networks, etc. 4.4. Flying cellular-networks
    Flying cellular-network is considered as a promising technology for real-time
    applications, due to its high reliability, high data rate and low latency. Furthermore,
    flying cellular-networks can enhance the IoFT performance in many aspects, such
    as connectivity, accessibility, monitoring, management, navigation and cost-effectiveness
    [147]. Fig. 9 shows an example of flying cellular-network. Many recent works on
    flying cellular-networks have been proposed. For instance, in [148], Challita
    et al. addressed wireless connectivity and security challenges in cellular-connected
    UAVs. An Artificial Neural Network (ANN)-based solution was introduced in order
    to overcome these challenges. In order to prove the effectiveness of the proposed
    solution, three use-case applications of cellular-connected UAVs have been considered:
    UAV-based delivery, UAV-based real-time streaming of multimedia, and UAV-based
    intelligent transportation. Download : Download high-res image (212KB) Download
    : Download full-size image Fig. 9. Flying cellular-network. The authors in [149],
    proposed an interference-aware path-planning algorithm for cellular-connected
    UAVs. The proposed algorithm is based on deep reinforcement learning in order
    to maximize the energy efficiency and jointly minimize the interference and latency.
    Mei et al. proposed [150] an inter-cell interference coordination solution for
    the uplink transmission from the UAV to cellular base stations. In order to maximize
    the network throughput, and to mitigate the uplink interference, the proposed
    solution jointly optimizes the UAV uplink cell association, transmit power and
    resource block allocation. In [151], Moon et al. proposed a preamble design technique
    for UAV communication in cellular-networks using scalable sequences. In order
    to increase the detection performance, and to reduce the UAV battery consumption,
    three scalable sequence techniques were proposed, analyzed and compared depending
    on the bandwidth capacity, and under different channel conditions. Chowdhury et
    al. [152] addressed the UAV trajectory optimization in cellular-networks based
    on dynamic programming. The proposed work aims to the enhance the wireless coverage
    and to maximize the data rate of cellular-networks. Both interference in cellular-networks
    and UAV mission duration constraints were considered to find the optimum UAV trajectory.
    Zhang et al. proposed [153] a cooperative UAV protocol for data uploading in cellular-networks.
    The proposed protocol enables data sensing from the UAV to the base station using
    both UAV-to-infrastructure and UAV-to-UAV communications. Furthermore, an optimization
    algorithm of sub-channel allocation and of UAV speeds is proposed in order to
    maximize the uplink data rate. Simulation results showed that the proposed algorithm
    outperforms the greedy algorithm. In [154], Amorosi et al. proposed to enhance
    the cellular-network coverage using UAVs, and they proposed to recharge the UAVs
    and ground sites batteries using solar panels. The latter were installed in different
    ground sites over the cellular-network infrastructure. Furthermore, a modified
    genetic algorithm based on a decomposition-based technique was proposed in order
    to guarantee a high cellular-network coverage with maximized UAVs and ground site
    battery level, while taking into account the UAVs mission duration. In [155],
    Azari et al. developed a generic framework that improves the UAVs’ connectivity
    in cellular-networks. Furthermore, the analytical results of the integrated UAV
    with a cellular-network showed that the optimum choice of the UAV antenna tilt
    and UAV altitude can highly improve the link coverage and throughput. 4.5. Comparison
    of IoFT works The existing IoFT works suggest integrating FANETs with IoT in order
    to improve the connectivity, reliability, scalability, stability, data storage
    and processing and security for IoT real-time applications. Table 6 provides a
    summary of existing IoFT works in the literature, including their objectives and
    addressed problems, explained as follows: • Connectivity and coverage: The proposed
    IoFT work guarantees a high network connectivity and large-scale coverage. • Scalability:
    Capability of the network to grow without any major changes in its overall design.
    • Reliability: Measured based on error-free operations on the network. Ideal network
    reliability means that no errors or failures were produced in this network. •
    Stability: Measured by the fast access and rapid error recovery. The high UAV
    mobility decreases the network stability. • Real-time latency: The network ability
    to guarantee a reduced transmission delay for real-time services. • Security:
    The network safety against external threats and attacks. • UAVs controlling: The
    ground user ability to control the UAVs via the IoT devices. • Cloud processing:
    The network capacity to process the UAVs data using sufficient processing resources.
    • Cloud storing: The network stockage capacity of voluminous data collected by
    the UAVs. • Energy consumption minimization: Capacity of the network to supply
    and manage the powered energy of UAVs and IoT ground devices. • UAVs collaboration:
    The UAVs collaborate with them in order to accomplish a mission. • Tasks computing
    offloading: The UAVs transmit their tasks towards the IoT cloud for processing
    and storage. • UAVs trajectory: Take into account the UAVs trajectory optimization
    in order to minimize the UAVs energy consumption. • Resources allocation: Proposing
    a resource allocation strategy in order to mitigate the collision and interference
    problems. • Routing optimization: Proposing a new routing protocol in order to
    improve the data transmission in IoFT. As shown in Table 6, we have categorized
    the IoFT works according to the used IoFT technology for the computing and data
    transmission into four categories: flying cloud-computing, flying edge-computing,
    flying fog-computing and flying cellular-networks. We can see in this table that
    each IoFT work have been proposed in order to ensure a specific objective, such
    as connectivity and coverage, scalability, reliability, stability, low latency,
    UAVs controlling, data storage and processing, energy consumption reducing, security.
    Furthermore, Table 6 depicts that each work addressed some problems in order to
    ensure his objectives, such as UAVs trajectory optimization, resources allocation,
    UAVs collaboration, tasks computing offloading, routing optimization, etc. We
    can conclude from that table that most flying cloud-computing studies aim to guarantee
    a high computation rate and storage of UAVs’ collected data by offloading the
    data to the cloud servers. Cloud servers are characterized by a high resource
    capacity in terms of data processing and storage. However, the low latency cannot
    be ensured by flying cloud-computing works due to the high transmission time of
    the data between the UAVs and the cloud servers which are located far from these
    UAVs. Table 6 illustrates that the flying edge-computing and flying fog-computing
    studies to ensure a low data transmission latency. This is achieved thanks to
    the local processing and storage of the UAVs collected data at the edge and fog
    nodes of the network. However, most flying edge-computing works cannot provide
    high computation rates and data storage of massive data, due to the limited resources
    of edge nodes. In addition, Table 6 proved that flying fog-computing works can
    achieve a minimal latency with high data computation and storage, because this
    IoFT works category combines local resources of fog nodes with cloud nodes’ resources.
    As shown in Table 6, works on flying cellular-networks aim to enhance the network
    connectivity and coverage while providing a minimal latency. This result is motivated
    by the effective use of the available cellular-network infrastructure in order
    to reinforce the data transmission from the UAVs towards the internet servers.
    We remark in Table 6 that few of the IoFT works have to deal with the routing
    optimization problem. However, the latter is a very interesting issue and can
    highly enhance the IoFT performance. Table 6. Objectives and addressed problems
    of open research on Internet of Flying Things. IoFT category Reference (s) Objectives
    Addressed problems Empty Cell Empty Cell Connectivity and coverage Scalability
    Reliability Stability Security Real-time latency UAVs controlling Cloud processing
    Cloud storing Energy consumption minimization UAVs collaboration Tasks computing
    offloading UAVs trajectory Resources allocation Routing optimization Flying cloud-computing
    Mahmoud et al. [86] ✓ ✓ ✓ Mahmoud and Mohamed [87] ✓ ✓ ✓ Mahmoud and Mohamed [85]
    ✓ ✓ ✓ Mahmoud et al. [88] ✓ ✓ ✓ Koubâa et al. [91] ✓ ✓ ✓ ✓ Luo et al. [81] ✓ ✓
    ✓ ✓ ✓ Yu et al. [102] ✓ ✓ Majumder and Prasad [95] ✓ ✓ ✓ Koubâa et al. [94] ✓
    ✓ ✓ Koubâa et al. [83] ✓ ✓ ✓ ✓ Wang et al. [82] ✓ ✓ ✓ ✓ ✓ Van’t hof and Nieh [100]
    ✓ ✓ ✓ ✓ ✓ ✓ Hong and Shi [84] ✓ ✓ ✓ Mahmoud et al. [89] ✓ ✓ ✓ Yapp and Babiceanu
    [96] ✓ ✓ ✓ ✓ Mahmoud et al. [90] ✓ ✓ ✓ Capello et al. [103] ✓ ✓ Gao et al. [104]
    ✓ ✓ ✓ ✓ ✓ ✓ Rodrigues et al. [98] ✓ ✓ ✓ Hadj et al. [99] ✓ ✓ ✓ ✓ ✓ Rodrigues et
    al. [97] ✓ ✓ ✓ Zhang and Yuan [101] ✓ ✓ ✓ Sulaj et al. [105] ✓ ✓ ✓ Flying edge-computing
    Narang et al. [108] ✓ ✓ Dong et al. [123] ✓ ✓ Zhou et al. [110] ✓ ✓ ✓ ✓ Chen et
    al. [111] ✓ ✓ ✓ ✓ Zhou et al. [112] ✓ ✓ ✓ ✓ Zhou et al. [113] ✓ ✓ ✓ ✓ ✓ ✓ Cheng
    et al. [109] ✓ Jeong et al. [124] ✓ ✓ ✓ ✓ ✓ Hu et al. [114] ✓ ✓ ✓ ✓ ✓ Xiong et
    al. [133] ✓ ✓ ✓ ✓ ✓ Bekkouche et al. [140] ✓ ✓ ✓ Liu et al. [125] ✓ ✓ ✓ Messous
    et al. [117] ✓ ✓ ✓ ✓ Cao et al. [126] ✓ ✓ ✓ Zhang et al. [127] ✓ ✓ ✓ ✓ ✓ Bekkouche
    et al. [107] ✓ ✓ ✓ ✓ Hu et al. [130] ✓ ✓ ✓ Wang et al. [131] ✓ ✓ ✓ ✓ Hu et al.
    [115] ✓ ✓ ✓ ✓ ✓ ✓ Xu et al. [132] ✓ ✓ ✓ Hua et al. [134] ✓ ✓ ✓ ✓ Callegaro et
    Levorato [135] ✓ ✓ Messous et al. [118] ✓ ✓ ✓ Du et al. [128] ✓ ✓ ✓ Bai et al.
    [122] ✓ ✓ ✓ ✓ Qian et al. [136] ✓ ✓ ✓ ✓ Yu et al. [137] ✓ ✓ ✓ Fan et al. [129]
    ✓ ✓ ✓ ✓ Zhang et al. [138] ✓ ✓ ✓ ✓ ✓ Li et al. [116] ✓ ✓ Sedjelmaci et al. [120]
    ✓ ✓ ✓ Sharma et al. [139] ✓ ✓ ✓ ✓ Tian et al. [121] ✓ ✓ ✓ ✓ ✓ Messous et al. [119]
    ✓ ✓ ✓ Flying fog-computing Mohamed et al. [144] ✓ ✓ ✓ ✓ Hou et al. [142] ✓ ✓ ✓
    ✓ ✓ ✓ Ti and Le [146] ✓ ✓ ✓ ✓ ✓ ✓ ✓ Lee et al. [143] ✓ ✓ ✓ ✓ ✓ He et al. [145]
    ✓ ✓ ✓ ✓ Flying cellular-networks Challita et al. [148] ✓ ✓ ✓ Challita et al. [149]
    ✓ ✓ Mei et al. [150] ✓ ✓ Moon et al. [151] ✓ Chowdhury et al. [152] ✓ ✓ ✓ Zhang
    et al. [153] ✓ Amorosi et al. [154] ✓ ✓ ✓ Azari et al. [155] ✓ 5. IoFT challenges
    and future research directions Integration of FANET and IoT technologies provides
    flexible support for various IoT services including control and monitoring, surveillance,
    emergency management, and search and rescue scenarios. However, IoFT faces various
    challenges, such as collision and interference, UAV deployment, UAV selection,
    energy consumption, security and privacy, UAV control and management, UAV path
    planning, data rate and coverage. In this section, we outline a number of IoFT
    challenges that need in-depth studies. Furthermore, we propose future IoFT perspectives
    to overcome the challenges with a view to stimulating the development of novel
    solutions to make IoFT more reliable, efficient and secure. Table 7 summarizes
    the open research challenges of IoFT, along with recommended references and future
    research directions as described below: • Collision and interference: The offloading
    of voluminous data, such as a real-time video streams by the multiple UAVs, to
    GCS under high IoFT connectivity, can produce significant collisions and interference
    among the UAVs and the GCS. Many IoFT works have addressed the collision and interference
    management challenges [156], [157], [158], [159], [160]. In order to mitigate
    the interference problem, several IoFT parameters must be optimized: UAV trajectory,
    UAV path planning, UAV and IoT resource allocation, control of UAV altitude and
    mobility, etc. • UAV deployment: The deployment of UAVs in critical places is
    an issue which has been addressed in some IoFT research [161], [162]. The placement
    of UAVs in suitable locations can reduce the wireless latency of IoT ground users
    and mitigate traffic congestion. Furthermore, UAV deployment in areas with a high
    density of users can provide good channel conditions at the expense of increased
    congestion due to the limited capacity of wireless channels. In contrast, when
    the UAVs are placed over areas with a low density of users, the offloading of
    traffic can be limited, which affects the wireless latency of the users. An optimum
    UAV deployment can also maximize the UAV coverage and throughput. While UAV deployment
    in a three-dimensional space remains an NP-hard optimization problem, different
    optimization heuristics, such as ant colony, particle swarm, genetic algorithm,
    etc. can be used to solve this problem with a low complexity. • UAV selection:
    The selection of an appropriate UAV to perform a specific task is another IoFT
    challenge which has been envisioned by researchers to reduce both the total energy
    consumption and the operation time. This selection should take into account several
    parameters like remaining UAV energy, required task energy, distance to the task
    location, UAV speed, or the required time for the task transmission and processing.
    Several IoFT algorithms and mechanisms have been proposed in order to select the
    appropriate UAV in these cases [163], [164]. • UAV path planning: The development
    of an optimum UAV path planning mechanism is a great IoFT challenge discussed
    in different IoFT works [165], [166], [167], [168], [169]. UAV path planning aims
    to maximize the data collection rate, and minimize the UAV flying cost in terms
    of flying time, energy consumption and flying risk level. Therefore, different
    types of information can be used to address this challenge, including geographical
    topology, locations of static sensor nodes, flying risk levels, and airspace restrictions.
    • Energy consumption: Although IoFT seeks to minimize the energy consumption of
    both UAVs and IoT ground devices by integrating the resource capacities of FANET
    and IoT networks, the energy consumption remains an interesting IoFT challenge.
    Energy consumption can be used for multiple IoFT activities, such as data processing
    and storage, data transmission, routing, querying, etc. In the literature, we
    find that several IoFT works have addressed this issue [170], [171], [172], [173],
    [174], [175]. Future research can use the wireless medium in order to recharge
    UAV and IoT device batteries. • Security and privacy: Due to the broadcast nature
    of the wireless medium, UAVs are prone to face security and privacy issues. The
    security of exchanged data between UAVs and CGSs against malicious eavesdropping
    can be ensured at the physical layer by including relay selection, multiple-antenna
    arrays, and friendly jamming. Most IoFT works addressing security and privacy
    challenges [178], [179] focus on the physical layer. However, future IoFT research
    in this area can handle the security and privacy at the other layers, such as
    transportation and application layers. • UAV control and management: When the
    number of UAVs is high, their control and management from a remote Internet locations
    can become complex due the frequent data transmissions between the concurrent
    UAVs and the IoT ground devices. Although some IoFT works have addressed this
    issue [176], [177], efficient algorithms should be proposed to provide some UAV
    control and management functionalities, such as subscription and notification,
    data management, UAV localization, group management, etc. • Data rate and coverage:
    Providing high data rate with seamless wide-area coverage anywhere and anytime
    is another challenging issue of IoFT. The integration of UAV with satellite communication
    networks is a potential to build the integrated space–air–ground network with
    higher data rate and coverage. Several works on UAV-satellite communication have
    been proposed [180], [181], [182], [183], in which the UAV acts as a relay that
    connects to terrestrial network through the satellite link, and connects to the
    user terminals via a ground link [180]. Table 7. Open research issues for IoFT.
    IoFT challenge (s) Recommended IoFT reference (s) Future IoFT research direction
    (s) Collision and interference [156], [157], [158], [159], [160] Several IoFT
    parameters must be optimized, such as: UAV trajectories. UAV path planning. UAV
    and IoT resource allocation. Control of UAV altitude and mobility. UAVs deployment
    [161], [162] UAV deployment using optimization heuristics, such as: Ant colony.
    Particle swarm. Genetic algorithms. UAV selection [163], [164] Take into account
    several parameters, such as: UAV energy levels. Required task energy. Distance
    to the task location. UAV speed. Required time for the task transmission and processing.
    UAV path-planning [165], [166], [167], [168], [169] Various information can be
    used for UAV path planning, such as: Geographical topology. Location of static
    sensor nodes. Flight risk levels. Airspace restrictions. Energy consumption [170],
    [171], [172], [173], [174], [175] Recharge of UAV and IoT device batteries using
    the wireless medium. UAV control and management [176], [177] Proposed efficient
    algorithms for UAV control and management which provide some functionalities,
    such as: Subscription and notification. Data management. UAV localization. Group
    management. Security and privacy [178], [179] Enhancing IoFT security and privacy
    at three layers: Application layer. Transportation layer. Physical layer. Data
    rate and coverage [180], [181], [182], [183] Integration of UAV with satellite
    communication networks. 6. Conclusion IoFT is becoming a promising field to efficiently
    support real-time IoT applications by integrating UAVs with IoT. IoFT aims to
    extend the IoT coverage and to ensure the connectivity, scalability, reliability,
    stability, high processing and storage capacity with minimal energy consumption
    of UAVs and IoT devices. In this survey, we presented the basic concepts of flying
    things, including UAS, UAV architecture, and FANET communications. In addition,
    a comprehensive taxonomy of IoFT research studies was provided, including the
    IoFT networking and transmission technologies, IoFT objectives, IoFT problems,
    IoFT applications, IoFT challenges, etc. Furthermore, a classification, study
    and comparison of different IoFT works (e.g. flying cloud-computing, flying edge-computing,
    flying fog-computing and flying cellular-networks) are presented. Based on this
    survey, we conclude that, in order to further improve IoT applications support,
    future IoFT research should address IoFT issues, including collision and interference,
    UAV deployment, UAV selection, UAV path-planning, energy consumption, security
    and privacy, UAV control and management, data rate and coverage. As future work,
    we envisage to conceive a new IoFT scheme which addresses the IoFT challenges
    to ensure reliable and efficient computing, as well as storage and transmission
    of UAV-collected data to Internet servers. Declaration of Competing Interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. References [1] J. Matos, O. Postolache, IoT enabled aquatic drone for environmental
    monitoring, in: 2016 International Conference and Exposition on Electrical and
    Power Engineering, EPE, 2016, pp. 598–603. Google Scholar [2] D. Radu, A. Cretu,
    B. Parrein, J. Yi, C. Avram, A. Aştilean, Flying Ad Hoc Network for Emergency
    Applications Connected to a Fog System, in: International conference on emerging
    internetworking, data & web technologies, 2018, pp. 675–686. Google Scholar [3]
    Xue Z., Wang J., Ding G., Zhou H., Wu Q. Maximization of data dissemination in
    UAV-supported internet of things IEEE Wirel. Commun. Lett., 8 (1) (2018), pp.
    185-188 CrossRefGoogle Scholar [4] Wang X., Feng W., Chen Y., Ge N. Coverage optimization
    for UAV-aided internet of things with partial channel knowledge J. Commun. Inf.
    Netw., 3 (4) (2018), pp. 55-63 CrossRefGoogle Scholar [5] Li T., Ota K., Wang
    T., Li X., Cai Z., Liu A. Optimizing the coverage via the UAVs with lower costs
    for information-centric internet of things IEEE Access, 7 (2019), pp. 15292-15309
    CrossRefView in ScopusGoogle Scholar [6] Federal Aviation Administration Federal
    Aerospace Forecast: Fiscal Years 2019 to 2039 Federal Aviation Administration,
    Washington, DC (2019) https://www.faa.gov/data_research/aviation/aerospace_forecasts/media/FY2019-39_FAA_Aerospace_Forecast.pdf.
    (Accessed 28 February 2020) Google Scholar [7] Y. Yu, S. Lee, J. Lee, K. Cho,
    S. Park, Design and implementation of wired drone docking system for cost-effective
    security system in IoT environment, in: 2016 IEEE International Conference on
    Consumer Electronics, ICCE, 2016, pp. 369–370. Google Scholar [8] Chen Y., Feng
    W., Zheng G. Optimum placement of UAV as relays IEEE Commun. Lett., 22 (2) (2017),
    pp. 248-251 View PDFView articleView in ScopusGoogle Scholar [9] Motlagh N.H.,
    Taleb T., Arouk O. Low-altitude unmanned aerial vehicles-based internet of things
    services: Comprehensive survey and future perspectives IEEE Internet Things J.,
    3 (6) (2016), pp. 899-922 Google Scholar [10] Wang H., Ding G., Gao F., Chen J.,
    Wang J., Wang L. Power control in UAV-supported ultra dense networks: Communications,
    caching, and energy transfer IEEE Commun. Mag., 56 (6) (2018), pp. 28-34 View
    PDFView articleGoogle Scholar [11] R. Khan, S.U. Khan, R. Zaheer, S. Khan, Future
    Internet: The internet of things architecture, possible applications and key challenges,
    in: 2012 10th International Conference on Frontiers of Information Technology,
    2012, pp. 257–260. Google Scholar [12] H. Arasteh, V. Hosseinnezhad, V. Loia,
    A. Tommasetti, O. Troisi, M. Shafie-Khah, P. Siano, Iot-based smart cities: a
    survey, in: 2016 IEEE 16th International Conference on Environment and Electrical
    Engineering, EEEIC, 2016, pp. 1–6. Google Scholar [13] Chen S., Xu H., Liu D.,
    Hu B., Wang H. A vision of IoT: Applications, challenges, and opportunities with
    china perspective IEEE Internet Things J., 1 (4) (2014), pp. 349-359 View in ScopusGoogle
    Scholar [14] Truong H.-L., Dustdar S. Principles for engineering IoT cloud systems
    IEEE Cloud Comput., 2 (2) (2015), pp. 68-76 View in ScopusGoogle Scholar [15]
    Dastjerdi A.V., Buyya R. Fog computing: Helping the internet of things realize
    its potential Computer, 49 (8) (2016), pp. 112-116 View in ScopusGoogle Scholar
    [16] Satyanarayanan M. The emergence of edge computing Computer, 50 (1) (2017),
    pp. 30-39 View in ScopusGoogle Scholar [17] Gandotra P., Jha R.K. Device-to-device
    communication in cellular networks: A survey J. Netw. Comput. Appl., 71 (2016),
    pp. 99-117 View PDFView articleView in ScopusGoogle Scholar [18] D. Zorbas, C.
    Douligeris, Computing optimal drone positions to wirelessly recharge IoT devices,
    in: IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops,
    INFOCOM WKSHPS, 2018, pp. 628–633. Google Scholar [19] Čolaković A., Hadžialić
    M. Internet of things (IoT): A review of enabling technologies, challenges, and
    open research issues Comput. Netw., 144 (2018), pp. 17-39 View PDFView articleView
    in ScopusGoogle Scholar [20] Liu X., Li Z., Zhao N., Meng W., Gui G., Chen Y.,
    Adachi F. Transceiver design and multihop D2D for UAV IoT coverage in disasters
    IEEE Internet Things J., 6 (2) (2018), pp. 1803-1815 CrossRefGoogle Scholar [21]
    Sharma V., Kumar R., Kaur R. UAV-Assisted content-based sensor search in IoTs
    Electron. Lett., 53 (11) (2017), pp. 724-726 CrossRefView in ScopusGoogle Scholar
    [22] J. Chen, Y.-C. Liang, X. Kang, R. Zhang, Effective-Throughput maximization
    for wireless-powered IoT networks with short packets, in: 2018 IEEE Globecom Workshops,
    GC Wkshps, 2018, pp. 1–6. Google Scholar [23] Wu Q., Zeng Y., Zhang R. Joint trajectory
    and communication design for multi-UAV enabled wireless networks IEEE Trans. Wireless
    Commun., 17 (3) (2018), pp. 2109-2121 CrossRefView in ScopusGoogle Scholar [24]
    Sharma S.K., Wang X. Live data analytics with collaborative edge and cloud processing
    in wireless IoT networks IEEE Access, 5 (2017), pp. 4621-4635 View in ScopusGoogle
    Scholar [25] D. Carrillo, J. Seki, Rural area deployment of internet of things
    connectivity: LTE and LoRaWAN case study, in: 2017 IEEE XXIV International Conference
    on Electronics, Electrical Engineering and Computing, INTERCON, 2017, pp. 1–4.
    Google Scholar [26] Mozaffari M., Saad W., Bennis M., Debbah M. Mobile unmanned
    aerial vehicles (UAVs) for energy-efficient Internet of Things communications
    IEEE Trans. Wireless Commun., 16 (11) (2017), pp. 7574-7589 View in ScopusGoogle
    Scholar [27] Fazio M., Ranjan R., Girolami M., Taheri J., Dustdar S., Villari
    M. A note on the convergence of IoT, edge, and cloud computing in smart cities
    IEEE Cloud Comput., 5 (5) (2018), pp. 22-24 CrossRefView in ScopusGoogle Scholar
    [28] Roy D.S., Behera R.K., Reddy K.H.K., Buyya R. A context-aware fog enabled
    scheme for real-time cross-vertical IoT applications IEEE Internet Things J.,
    6 (2) (2018), pp. 2400-2412 Google Scholar [29] Du Y., Yang K., Wang K., Zhang
    G., Zhao Y., Chen D. Joint resources and workflow scheduling in UAV-enabled wirelessly-powered
    MEC for IoT systems IEEE Trans. Veh. Technol., 68 (10) (2019), pp. 10187-10200
    CrossRefView in ScopusGoogle Scholar [30] 3GPP RP-170779 Study item description,
    Enhanced support for aerial vehicles (2017) March Google Scholar [31] Fotouhi
    A., Qiang H., Ding M., Hassan M., Giordano L.G., Garcia-Rodriguez A., Yuan J.
    Survey on UAV cellular communications: Practical aspects, standardization advancements,
    regulation, and security challenges IEEE Commun. Surv. Tutor., 21 (4) (2019),
    pp. 3417-3442 CrossRefView in ScopusGoogle Scholar [32] Muruganathan S.D., Lin
    X., Maattanen H.L., Sedin J., Zou Z., Hapsari W.A., Yasukawa S. An overview of
    3GPP release-15 study on enhanced LTE support for connected drones (2018) arXiv
    preprint arXiv:1805.00826 Google Scholar [33] 3GPP Technical Report 38.901 Study
    on channel model for frequencies from 0.5 to 100 GHz (Release 14) (2017) May Google
    Scholar [34] ITU-T Work Item Y.UAV.arch Functional architecture for unmanned aerial
    vehicles and unmanned aerial vehicle controllers using IMT-2020 networks (2017)
    Google Scholar [35] Yang F., Wang H., Mei C., Zhang J., Wang M. Flexible three
    clouds 5G mobile network architecture based on NFV & SDN China Commun., 12 (Suppl.)
    (2015), pp. 121-131 Google Scholar [36] ETSI Technical Report 103 373 Use cases
    and spectrum considerations for UAS (Unmanned Aircraft Systems) (2018) Feb Google
    Scholar [37] ETSI Group specification next generation protocols 001, Next generation
    protocols (NGP); Scenarios definitions (v1.1.1) (2016) Nov Google Scholar [38]
    Loke S.W. The internet of flying-things: Opportunities and challenges with airborne
    fog computing and mobile cloud in the clouds (2015) arXiv preprint arXiv:1507.04492
    Google Scholar [39] Lagkas T., Argyriou V., Bibi S., Sarigiannidis P. UAV IoT
    Framework views and challenges: Towards protecting drones as “Things” Sensors,
    18 (11) (2018), p. 4015 CrossRefView in ScopusGoogle Scholar [40] Huang H., Savkin
    A. Towards the internet of flying robots: A survey Sensors, 18 (11) (2018), p.
    4038 CrossRefView in ScopusGoogle Scholar [41] Li B., Fei Z., Zhang Y. UAV Communications
    for 5G and beyond: Recent advances and future trends IEEE Internet Things J.,
    6 (2) (2018), pp. 2241-2263 View in ScopusGoogle Scholar [42] Ono F., Ochiai H.,
    Miura R. A wireless relay network based on unmanned aircraft system with rate
    optimization IEEE Trans. Wireless Commun., 15 (11) (2016), pp. 7699-7708 View
    in ScopusGoogle Scholar [43] Marshall D.M., Barnhart R.K., Hottman S.B., Shappee
    E., Most M.T. Introduction to Unmanned Aircraft Systems Crc Press (2016) Google
    Scholar [44] Hayat S., Yanmaz E., Muzaffar R. Survey on unmanned aerial vehicle
    networks for civil applications: A communications viewpoint IEEE Commun. Surv.
    Tutor., 18 (4) (2016), pp. 2624-2661 View in ScopusGoogle Scholar [45] Pastor
    E., Lopez J., Royo P. UAV Payload and mission control hardware/software architecture
    IEEE Aerosp. Electron. Syst. Mag., 22 (6) (2007), pp. 3-8 CrossRefView in ScopusGoogle
    Scholar [46] G. Greco, C. Lucianaz, S. Bertoldo, M. Allegretti, Localization of
    RFID tags for environmental monitoring using UAV, in: 2015 IEEE 1st International
    Forum on Research and Technologies for Society and Industry Leveraging a Better
    Tomorrow, RTSI, 2015, pp. 480–483. Google Scholar [47] Altawy R., Youssef A.M.
    Security, privacy, and safety aspects of civilian drones: A survey ACM Trans.
    Cyber-Phys. Syst., 1 (2) (2016), pp. 1-25 Google Scholar [48] Zeng Y., Zhang R.,
    Lim T.J. Wireless communications with unmanned aerial vehicles: opportunities
    and challenges IEEE Commun. Mag., 54 (5) (2016), pp. 36-42 View in ScopusGoogle
    Scholar [49] M.A. Khan, A. Safi, I.M. Qureshi, I.U. Khan, Flying ad-hoc networks
    (FANETs): A review of communication architectures, and routing protocols, in:
    2017 First International Conference on Latest Trends in Electrical Engineering
    and Computing Technologies, INTELLECT, 2017, pp. 1–9. Google Scholar [50] O.K.
    Sahingoz, Mobile networking with UAVs: Opportunities and challenges, in: 2013
    International Conference on Unmanned Aircraft Systems, ICUAS, 2013, pp. 933–941.
    Google Scholar [51] Bekmezci I., Sahingoz O.K., Temel Ş. Flying Ad-Hoc networks
    (FANETs): A survey Ad Hoc Netw., 11 (3) (2013), pp. 1254-1270 View PDFView articleView
    in ScopusGoogle Scholar [52] Clapper J., Young J., Cartwright J., Grimes J. Unmanned
    Systems Roadmap 2007–2032, Vol. 188 Office of the Secretary of Defense (2007)
    Google Scholar [53] I. Bekmezci, I. Sen, E. Erkalkan, Flying ad hoc networks (FANET)
    test bed implementation, in: 2015 7th International Conference on Recent Advances
    in Space Technologies, RAST, 2015, pp. 665–668. Google Scholar [54] Oubbati O.S.,
    Lakas A., Zhou F., Güneş M., Yagoubi M.B. A survey on position-based routing protocols
    for Flying Ad hoc Networks (FANETs) Veh. Commun., 10 (2017), pp. 29-56 View PDFView
    articleView in ScopusGoogle Scholar [55] M.A. Uddin, A. Mansour, D. Le Jeune,
    E.H.M. Aggoune, Agriculture internet of things: AG-IoT, in: 2017 27th International
    Telecommunication Networks and Applications Conference, ITNAC, 2017, pp. 1–6.
    Google Scholar [56] A.K. Saha, J. Saha, R. Ray, S. Sircar, S. Dutta, S.P. Chattopadhyay,
    H.N. Saha, IOT-based drone for improvement of crop quality in agricultural field,
    in: 2018 IEEE 8th Annual Computing and Communication Workshop and Conference,
    CCWC, 2018, pp. 612–615. Google Scholar [57] G. Faraci, A. Raciti, S. Rizzo, G.
    Schembra, A 5G platform for Unmanned aerial monitoring in rural areas: design
    and performance issues, in: 2018 4th IEEE Conference on Network Softwarization
    and Workshops, NetSoft, 2018, pp. 237–241. Google Scholar [58] Taleb T., Samdanis
    K., Mada B., Flinck H., Dutta S., Sabella D. On multi-access edge computing: A
    survey of the emerging 5G network edge cloud architecture and orchestration IEEE
    Commun. Surv. Tutor., 19 (3) (2017), pp. 1657-1681 View in ScopusGoogle Scholar
    [59] O. Elijah, T.A. Rahman, H.C. Yeen, C.Y. Leow, M.A. Sarijari, A. Aris, C.T.
    Han, Application of UAV and low power wide area communication technology for monitoring
    of river water quality, in: 2018 2nd International Conference on Smart Sensors
    and Application, ICSSA, 2018, pp. 105–110. Google Scholar [60] Raza U., Kulkarni
    P., Sooriyabandara M. Low power wide area networks: An overview IEEE Commun. Surv.
    Tutor., 19 (2) (2017), pp. 855-873 View in ScopusGoogle Scholar [61] Hernández-Vega
    J.-I., Varela E.R., Romero N.H., Hernández-Santos C., Cuevas J.L.S., Gorham D.G.P.
    Internet of Things (IoT) for Monitoring Air Pollutants with an Unmanned Aerial
    Vehicle (UAV) in a Smart City, Lecture Notes of the Institute for Computer Sciences,
    Social Informatics and Telecommunications Engineering Smart Technology (2018),
    pp. 108-120 CrossRefView in ScopusGoogle Scholar [62] Agarwal A., Shukla V., Singh
    R., Gehlot A., Garg V. Design and development of air and water pollution quality
    monitoring using IoT and quadcopter Advances in Intelligent Systems and Computing
    Intelligent Communication, Control and Devices (2018), pp. 485-492 CrossRefView
    in ScopusGoogle Scholar [63] Q. Yang, L. Sun, J. Jie, C. Feng, J. Cao, Q. Lai,
    The design of quad-rotor environmental monitoring system based on Internet of
    Things, in: 2015 IEEE 16th International Conference on Communication Technology,
    ICCT, 2015, pp. 97–101. Google Scholar [64] Hu Z., Bai Z., Yang Y., Zheng Z.,
    Bian K., Song L. UAV Aided aerial-ground IoT for air quality sensing in smart
    city: Architecture, technologies, and implementation IEEE Netw., 33 (2) (2019),
    pp. 14-22 CrossRefView in ScopusGoogle Scholar [65] N. Kalatzis, M. Avgeris, D.
    Dechouniotis, K. Papadakis-Vlachopapadopoulos, I. Roussaki, S. Papavassiliou,
    Edge Computing in IoT ecosystems for UAV-enabled early fire detection, in: 2018
    IEEE International Conference on Smart Computing, SMARTCOMP, 2018, pp. 106–114.
    Google Scholar [66] Kumar J.S., Zaveri M.A., Kumar S., Choksi M. Situation-aware
    conditional sensing in disaster-prone areas using unmanned aerial vehicles in
    IoT environment Data and Communication Networks Advances in Intelligent Systems
    and Computing (2019), pp. 135-146 CrossRefGoogle Scholar [67] C. Luo, J. Nightingale,
    E. Asemota, C. Grecos, A UAV-cloud system for disaster sensing applications, in:
    2015 IEEE 81st Vehicular Technology Conference, VTC Spring, 2015, pp. 1–5. Google
    Scholar [68] M. Choksi, M.A. Zaveri, J.S. Kumar, S.K. Pandey, Cloud-based real
    time data acquisition in IoT environment for post disaster management, in: 2018
    9th International Conference on Computing, Communication and Networking Technologies,
    ICCCNT, 2018, pp. 1–6. Google Scholar [69] Motlagh N.H., Bagaa M., Taleb T. UAV-Based
    IoT platform: A crowd surveillance use case IEEE Commun. Mag., 55 (2) (2017),
    pp. 128-134 View in ScopusGoogle Scholar [70] S. Qazi, A.S. Siddiqui, A.I. Wagan,
    UAV based real time video surveillance over 4G LTE, in: 2015 International Conference
    on Open Source Systems & Technologies ICOSST, 2015, pp. 141–145. Google Scholar
    [71] C. Grasso, G. Schembra, Design of a UAV-based video surveillance system with
    tactile internet constraints in a 5G ecosystem, in: 2018 4th IEEE Conference on
    Network Softwarization and Workshops, NetSoft, 2018, pp. 449–455. Google Scholar
    [72] C. Seiber, D. Nowlin, B. Landowski, M.E. Tolentino, Tracking hazardous aerial
    plumes using IoT-enabled drone swarms, in: 2018 IEEE 4th World Forum on Internet
    of Things, WF-IoT, 2018, pp. 377–382. Google Scholar [73] Li H., Savkin A.V. Wireless
    sensor network based navigation of micro flying robots in the industrial internet
    of things IEEE Trans. Ind. Inf., 14 (8) (2018), pp. 3524-3533 CrossRefView in
    ScopusGoogle Scholar [74] G. Coelho, E. Kougianos, S.P. Mohanty, P. Sundaravadivel,
    U. Albalawi, An IoT-enabled modular quadrotor architecture for real-time aerial
    object tracking, in: 2015 IEEE International Symposium on Nanoelectronic and Information
    Systems, 2015, pp. 197–202. Google Scholar [75] A. Giyenko, Y.I. Cho, Intelligent
    UAV in smart cities using IoT, in: 2016 16th International Conference on Control,
    Automation and Systems, ICCAS, 2016, pp. 207–210. Google Scholar [76] Qi F., Zhu
    X., Mang G., Kadoch M., Li W. UAV Network and IoT in the sky for future smart
    cities IEEE Netw., 33 (2) (2019), pp. 96-101 CrossRefView in ScopusGoogle Scholar
    [77] Z. Peng, T. Kato, H. Takahashi, T. Kinoshita, Intelligent home security system
    using agent-based IoT devices, in: 2015 IEEE 4th Global Conference on Consumer
    Electronics, GCCE, 2015, pp. 313–314. Google Scholar [78] Al-Turjman F., Alturjman
    S. 5G/IoT-enabled UAVs for multimedia delivery in industry-oriented applications
    Multimedia Tools Appl. (2018), pp. 1-22 Google Scholar [79] Sharma V., Choudhary
    G., Ko Y., You I. Behavior and vulnerability assessment of drones-enabled industrial
    internet of things (IIoT) IEEE Access, 6 (2018), pp. 43368-43383 CrossRefView
    in ScopusGoogle Scholar [80] Noor T.H., Zeadally S., Alfazi A., Sheng Q.Z. Mobile
    cloud computing: Challenges and future research directions J. Netw. Comput. Appl.,
    115 (2018), pp. 70-85 View PDFView articleView in ScopusGoogle Scholar [81] Luo
    F., Jiang C., Yu S., Wang J., Li Y., Ren Y. Stability of cloud-based UAV systems
    supporting big data acquisition and processing IEEE Trans. Cloud Comput. (2017)
    Google Scholar [82] J. Wang, C. Jiang, Z. Ni, S. Guan, S. Yu, Y. Ren, Reliability
    of cloud controlled multi-UAV systems for on-demand services, in: GLOBECOM 2017
    - 2017 IEEE Global Communications Conference, 2017, pp. 1–6. Google Scholar [83]
    Koubâa A., Qureshi B., Sriti M.-F., Allouch A., Javed Y., Alajlan M., Tovar E.
    Dronemap Planner: A service-oriented cloud-based management system for the Internet-of-Drones
    Ad Hoc Netw., 86 (2019), pp. 46-62 View PDFView articleView in ScopusGoogle Scholar
    [84] C. Hong, D. Shi, A Cloud-based control system architecture for multi-UAV,
    in: Proceedings of the 3rd International Conference on Robotics, Control and Automation,
    ICRCA 18, 2018, pp. 25–30. Google Scholar [85] S. Mahmoud, N. Mohamed, Collaborative
    UAVs Cloud, in: 2014 International Conference on Unmanned Aircraft Systems, ICUAS,
    2014, pp. 365–373. Google Scholar [86] S.Y.M. Mahmoud, N. Mohamed, Toward a Cloud
    platform for UAV resources and services, in: 2015 IEEE Fourth Symposium on Network
    Cloud Computing and Applications, NCCA, 2015, pp. 23–30. Google Scholar [87] S.
    Mahmoud, N. Mohamed, Broker architecture for collaborative UAVs cloud computing,
    in: 2015 International Conference on Collaboration Technologies and Systems, CTS,
    2015, pp. 212–219. Google Scholar [88] Mahmoud S., Mohamed N., Al-Jaroodi J. Integrating
    UAVs into the cloud using the concept of the web of things J. Robot., 2015 (2015),
    pp. 1-10 CrossRefGoogle Scholar [89] S. Mahmoud, I. Jawhar, N. Mohamed, J. Wu,
    UAV and WSN softwarization and collaboration using cloud computing, in: 2016 3rd
    Smart Cloud Networks & Systems, SCNS, 2016, pp. 1–8. Google Scholar [90] M. Sara,
    I. Jawhar, M. Nader, A Softwarization architecture for UAVs and WSNs as part of
    the cloud environment, in: 2016 IEEE International Conference on Cloud Engineering
    Workshop, IC2EW, 2016, pp. 13–18. Google Scholar [91] A. Koubaa, B. Qureshi, M.-F.
    Sriti, Y. Javed, E. Tovar, A service-oriented Cloud-based management system for
    the Internet-of-Drones, in: 2017 IEEE International Conference on Autonomous Robot
    Systems and Competitions, ICARSC, 2017, pp. 329–335. Google Scholar [92] Mavlink
    developer guide (2020) https://mavlink.io/. (Accessed 28 February 2020) Google
    Scholar [93] Koubaa A., Alajlan M., Qureshi B. ROSLink: Bridging ROS with the
    Internet-of-Things for Cloud Robotics Robot Operating System, ROS (2017), pp.
    265-283 CrossRefView in ScopusGoogle Scholar [94] Koubaa A., Qureshi B. DroneTrack:
    Cloud-based real-time object tracking using unmanned aerial vehicles over the
    internet IEEE Access, 6 (2018), pp. 13810-13824 CrossRefView in ScopusGoogle Scholar
    [95] S. Majumder, M.S. Prasad, Cloud based control for unmanned aerial vehicles,
    in: 2016 3rd International Conference on Signal Processing and Integrated Networks,
    SPIN, 2016, pp. 421–424. Google Scholar [96] J. Yapp, R. Seker, R. Babiceanu,
    UAV as a service: Enabling on-demand access and on-the-fly re-tasking of multi-tenant
    UAVs using cloud services, in: 2016 IEEE/AIAA 35th Digital Avionics Systems Conference,
    DASC, 2016, pp. 1–8. Google Scholar [97] M. Rodrigues, D.F. Pigatto, Kalinka.R.L.J.
    C. Branco, Cloud-SPHERE: A security approach for connected unmanned aerial vehicles,
    in: 2018 International Conference on Unmanned Aircraft Systems, ICUAS, 2018, pp.
    769–778. Google Scholar [98] Rodrigues M. Kalinka Regina Lucas Jaquie Castelo
    Branco, cloud-SPHERE: Towards secure UAV service provision J. Intell. Robot. Syst.,
    97 (1) (2020), pp. 249-268 CrossRefView in ScopusGoogle Scholar [99] S.B. Hadj,
    S. Rekhis, N. Boudriga, A. Bagula, A cloud of UAVs for the delivery of a sink
    as A service to terrestrial wsns, in: Proceedings of the 14th International Conference
    on Advances in Mobile Computing and Multi Media, MoMM 16, 2016, pp. 317–326. Google
    Scholar [100] A.V. Hof, J. Nieh, AnDrone: Virtual drone computing in the cloud,
    in: Proceedings of the Fourteenth EuroSys Conference 2019, 2019, pp. 1–16. Google
    Scholar [101] Y. Zhang, Z. Yuan, Cloud-based UAV data delivery over 4G network,
    in: 2017 Tenth International Conference on Mobile Computing and Ubiquitous Network,
    ICMU, 2017, pp. 1–2. Google Scholar [102] Yu T., Wang X., Jin J., Mcisaac K. Cloud-orchestrated
    physical topology discovery of large-scale IoT systems using UAVs IEEE Trans.
    Ind. Inf., 14 (5) (2018), pp. 2261-2270 CrossRefView in ScopusGoogle Scholar [103]
    E. Capello, M. Dentis, L.N. Mascarello, S. Primatesta, Regulation analysis and
    new concept for a cloud-based UAV supervision system in urban environment, in:
    2017 Workshop on Research, Education and Development of Unmanned Aerial Systems,
    RED-UAS, 2017, pp. 90–95. Google Scholar [104] Gao A., Hu Y., Liang W., Lin Y.,
    Li L., Li X. A qoe-oriented scheduling scheme for energy-efficient computation
    offloading in UAV cloud system IEEE Access, 7 (2019), pp. 68656-68668 CrossRefView
    in ScopusGoogle Scholar [105] P. Sulaj, R. Haluska, L. Ovsenik, S. Marchevsky,
    V. Kramar, Examples of real-time UAV data processing with cloud computing, in:
    Proceedings of the 23rd Conference of Open Innovations Association FRUCT, 2018,
    p. 76. Google Scholar [106] K. Dolui, S.K. Datta, Comparison of edge computing
    implementations: Fog computing, cloudlet and mobile edge computing, in: 2017 Global
    Internet of Things Summit, GIoTS, 2017, pp. 1–6. Google Scholar [107] O. Bekkouche,
    T. Taleb, M. Bagaa, UAVs Traffic control based on multi-access edge computing,
    in: 2018 IEEE Global Communications Conference, GLOBECOM, 2018, pp. 1–6. Google
    Scholar [108] M. Narang, S. Xiang, W. Liu, J. Gutierrez, L. Chiaraviglio, A. Sathiaseelan,
    A. Merwaday, UAV-assisted edge infrastructure for challenged networks, in: 2017
    IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS, 2017, pp.
    60–65. Google Scholar [109] Cheng N., Xu W., Shi W., Zhou Y., Lu N., Zhou H.,
    Shen X. Air-ground integrated mobile edge networks: Architecture, challenges,
    and opportunities IEEE Commun. Mag., 56 (8) (2018), pp. 26-32 CrossRefView in
    ScopusGoogle Scholar [110] Zhou Z., Feng J., Tan L., He Y., Gong J. An air-ground
    integration approach for mobile edge computing in IoT IEEE Commun. Mag., 56 (8)
    (2018), pp. 40-47 CrossRefView in ScopusGoogle Scholar [111] Chen W., Liu B.,
    Huang H., Guo S., Zheng Z. When UAV swarm meets edge-cloud computing: The QoS
    perspective IEEE Netw., 33 (2) (2019), pp. 36-43 CrossRefGoogle Scholar [112]
    F. Zhou, Y. Wu, H. Sun, Z. Chu, UAV-Enabled mobile edge computing: Offloading
    optimization and trajectory design, in: 2018 IEEE International Conference on
    Communications, ICC, 2018, pp. 1–6. Google Scholar [113] Zhou F., Wu Y., Hu R.Q.,
    Qian Y. Computation rate maximization in UAV-enabled wireless-powered mobile-edge
    computing systems IEEE J. Sel. Areas Commun., 36 (9) (2018), pp. 1927-1941 CrossRefView
    in ScopusGoogle Scholar [114] Hu J., Jiang M., Zhang Q., Li Q., Qin J. Joint optimization
    of UAV position, time slot allocation, and computation task partition in multiuser
    aerial mobile-edge computing systems IEEE Trans. Veh. Technol., 68 (7) (2019),
    pp. 7231-7235 CrossRefView in ScopusGoogle Scholar [115] Hu X., Wong K.-K., Yang
    K., Zheng Z. UAV-Assisted relaying and edge computing: Scheduling and trajectory
    optimization IEEE Trans. Wireless Commun., 18 (10) (2019), pp. 4738-4752 CrossRefView
    in ScopusGoogle Scholar [116] J. Li, Q. Liu, P. Wu, F. Shu, S. Jin, Task Offloading
    for UAV-based mobile edge computing via deep reinforcement learning, in: 2018
    IEEE/CIC International Conference on Communications in China, ICCC, 2018, pp.
    798–802. Google Scholar [117] M.-A. Messous, H. Sedjelmaci, N. Houari, S.-M. Senouci,
    Computation offloading game for an UAV network in mobile edge computing, in: 2017
    IEEE International Conference on Communications, ICC, 2017, pp. 1–6. Google Scholar
    [118] M.-A. Messous, A. Arfaoui, A. Alioua, S.-M. Senouci, A Sequential game approach
    for computation-offloading in an UAV network, in: GLOBECOM 2017 - 2017 IEEE Global
    Communications Conference, 2017, pp. 1–7. Google Scholar [119] Messous M.-A.,
    Senouci S.-M., Sedjelmaci H., Cherkaoui S. A game theory based efficient computation
    offloading in an UAV network IEEE Trans. Veh. Technol., 68 (5) (2019), pp. 4964-4974
    CrossRefView in ScopusGoogle Scholar [120] Sedjelmaci H., Boudguiga A., Jemaa
    I.B., Senouci S.M. An efficient cyber defense framework for UAV-edge computing
    network Ad Hoc Netw., 94 (2019), Article 101970 View PDFView articleView in ScopusGoogle
    Scholar [121] Tian Y., Yuan J., Song H. Efficient privacy-preserving authentication
    framework for edge-assisted Internet of Drones J. Inform. Secur. Appl., 48 (2019),
    Article 102354 View PDFView articleView in ScopusGoogle Scholar [122] Bai T.,
    Wang J., Ren Y., Hanzo L. Energy-efficient computation offloading for secure UAV-edge-computing
    systems IEEE Trans. Veh. Technol., 68 (6) (2019), pp. 6074-6087 CrossRefView in
    ScopusGoogle Scholar [123] Dong Y., Hassan M.Z., Cheng J., Hossain M.J., Leung
    V.C.M. An edge computing empowered radio access network with UAV-mounted FSO Fronthaul
    and Backhaul: Key challenges and approaches IEEE Wirel. Commun., 25 (3) (2018),
    pp. 154-160 CrossRefView in ScopusGoogle Scholar [124] Jeong S., Simeone O., Kang
    J. Mobile edge computing via a UAV-mounted cloudlet: Optimization of bit allocation
    and path planning IEEE Trans. Veh. Technol., 67 (3) (2017), pp. 2049-2063 Google
    Scholar [125] B. Liu, H. Huang, S. Guo, W. Chen, Z. Zheng, Joint computation offloading
    and routing optimization for UAV-edge-cloud computing environments, in: 2018 IEEE
    SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted Computing,
    Scalable Computing & Communications, Cloud & Big Data Computing, Internet of People
    and Smart City Innovation, SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI, 2018, pp.
    1745–1752. Google Scholar [126] X. Cao, J. Xu, R. Zhang, Mobile edge computing
    for cellular-connected UAV: computation offloading and trajectory optimization,
    in: 2018 IEEE 19th International Workshop on Signal Processing Advances in Wireless
    Communications, SPAWC, 2018, pp. 1–5. Google Scholar [127] Zhang L., Zhao Z.,
    Wu Q., Zhao H., Xu H., Wu X. Energy-aware dynamic resource allocation in UAV assisted
    mobile edge computing over social internet of vehicles IEEE Access, 6 (2018),
    pp. 56700-56715 CrossRefView in ScopusGoogle Scholar [128] Y. Du, K. Wang, K.
    Yang, G. Zhang, Energy-Efficient resource allocation in UAV based MEC system for
    IoT devices, in: 2018 IEEE Global Communications Conference, GLOBECOM, 2018, pp.
    1–6. Google Scholar [129] Fan L., Yan W., Chen X., Chen Z., Shi Q. An energy efficient
    design for UAV communication with mobile edge computing China Commun., 16 (1)
    (2019), pp. 26-36 View in ScopusGoogle Scholar [130] Hu Q., Cai Y., Yu G., Qin
    Z., Zhao M., Li G.Y. Joint offloading and trajectory design for UAV-enabled mobile
    edge computing systems IEEE Internet Things J., 6 (2) (2018), pp. 1879-1892 View
    in ScopusGoogle Scholar [131] Wang F., Xu J., Wang X., Cui S. Joint offloading
    and computing optimization in wireless powered mobile-edge computing systems IEEE
    Trans. Wireless Commun., 17 (3) (2017), pp. 1784-1797 CrossRefGoogle Scholar [132]
    Xu X., Liu Q., Luo Y., Peng K., Zhang X., Meng S., Qi L. A computation offloading
    method over big data for IoT-enabled cloud-edge computing Future Gener. Comput.
    Syst., 95 (2019), pp. 522-533 View PDFView articleView in ScopusGoogle Scholar
    [133] Xiong J., Guo H., Liu J. Task offloading in UAV-aided edge computing: Bit
    allocation and trajectory optimization IEEE Commun. Lett., 23 (3) (2019), pp.
    538-541 CrossRefView in ScopusGoogle Scholar [134] M. Hua, Y. Wang, Z. Zhang,
    C. Li, Y. Huang, L. Yang, Optimal Resource partitioning and bit allocation for
    UAV-enabled mobile edge computing, in: 2018 IEEE 88th Vehicular Technology Conference,
    VTC-Fall, 2018, pp. 1–6. Google Scholar [135] D. Callegaro, M. Levorato, Optimal
    computation offloading in edge-assisted UAV systems, in: 2018 IEEE Global Communications
    Conference, GLOBECOM, 2018, pp. 1–6. Google Scholar [136] Qian Y., Wang F., Li
    J., Shi L., Cai K., Shu F. User association and path planning for UAV-aided mobile
    edge computing with energy restriction IEEE Wirel. Commun. Lett., 8 (5) (2019),
    pp. 1312-1315 CrossRefView in ScopusGoogle Scholar [137] Y. Yu, X. Bu, K. Yang,
    H. Yang, Z. Han, UAV-Aided Low latency mobile edge computing with mmWave backhaul,
    in: ICC 2019 - 2019 IEEE International Conference on Communications, ICC, 2019,
    pp. 1–7. Google Scholar [138] Zhang J., Zhou L., Tang Q., Ngai E.C.-H., Hu X.,
    Zhao H., Wei J. Stochastic computation offloading and trajectory scheduling for
    UAV-assisted mobile edge computing IEEE Internet Things J., 6 (2) (2018), pp.
    3688-3699 View in ScopusGoogle Scholar [139] Sharma V., You I., Jayakody D.N.K.,
    Reina D.G., Choo K.-K.R. Neural-blockchain-based ultrareliable caching for edge-enabled
    UAV networks IEEE Trans. Ind. Inf., 15 (10) (2019), pp. 5723-5736 CrossRefView
    in ScopusGoogle Scholar [140] O. Bekkouche, T. Taleb, M. Bagaa, K. Samdanis, Edge
    cloud resource-aware flight planning for unmanned aerial vehicles, in: 2019 IEEE
    Wireless Communications and Networking Conference, WCNC, 2019, pp. 1–7. Google
    Scholar [141] F. Bonomi, R. Milito, J. Zhu, S. Addepalli, Fog computing and its
    role in the internet of things, in: Proceedings of the first edition of the MCC
    workshop on Mobile cloud computing, 2012, pp. 13–16. Google Scholar [142] X. Hou,
    Z. Ren, W. Cheng, C. Chen, H. Zhang, Fog based computation offloading for swarm
    of drones, in: ICC 2019 - 2019 IEEE International Conference on Communications,
    ICC, 2019, pp. 1–7. Google Scholar [143] G. Lee, W. Saad, M. Bennis, Online optimization
    for UAV-assisted distributed fog computing in smart factories of industry 4.0,
    in: 2018 IEEE Global Communications Conference, GLOBECOM, 2018, pp. 1–6. Google
    Scholar [144] N. Mohamed, J. Al-Jaroodi, I. Jawhar, H. Noura, S. Mahmoud, UAVFog:
    A UAV-based fog computing for Internet of Things, in: 2017 IEEE SmartWorld, Ubiquitous
    Intelligence & Computing, Advanced & Trusted Computed, Scalable Computing & Communications,
    Cloud & Big Data Computing, Internet of People and Smart City Innovation, SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI,
    2017, pp. 1–8. Google Scholar [145] He D., Qiao Y., Chan S., Guizani N. Flight
    security and safety of drones in airborne fog computing systems IEEE Commun. Mag.,
    56 (5) (2018), pp. 66-71 CrossRefView in ScopusGoogle Scholar [146] N.T. Ti, L.B.
    Le, Joint resource allocation, computation offloading, and path planning for UAV
    based hierarchical fog-cloud mobile systems, in: 2018 IEEE Seventh International
    Conference on Communications and Electronics, ICCE, 2018, pp. 373–378. Google
    Scholar [147] Shakhatreh H., Sawalmeh A.H., Al-Fuqaha A., Dou Z., Almaita E.,
    Khalil I., Guizani M. Unmanned aerial vehicles (UAVs): A survey on civil applications
    and key research challenges IEEE Access, 7 (2019), pp. 48572-48634 CrossRefView
    in ScopusGoogle Scholar [148] Challita U., Ferdowsi A., Chen M., Saad W. Machine
    learning for wireless connectivity and security of cellular-connected UAVs IEEE
    Wirel. Commun., 26 (1) (2019), pp. 28-35 CrossRefView in ScopusGoogle Scholar
    [149] Challita U., Saad W., Bettstetter C. Interference management for cellular-connected
    UAVs: A deep reinforcement learning approach IEEE Trans. Wireless Commun., 18
    (4) (2019), pp. 2125-2140 CrossRefView in ScopusGoogle Scholar [150] Mei W., Wu
    Q., Zhang R. Cellular-connected UAV: Uplink association, power control and interference
    coordination IEEE Trans. Wireless Commun., 18 (11) (2019), pp. 5380-5393 CrossRefView
    in ScopusGoogle Scholar [151] Moon S.H., Park C.H., Cho Y.S. Preamble design for
    UAV communications over cellular networks IEEE Access, 7 (2019), pp. 82015-82026
    CrossRefView in ScopusGoogle Scholar [152] M.M.U. Chowdhury, E. Bulut, I. Guvenc,
    Trajectory optimization in UAV-Assisted cellular networks under mission duration
    constraint, in: 2019 IEEE Radio and Wireless Symposium, RWS, 2019, pp. 1–4. Google
    Scholar [153] Zhang S., Zhang H., Di B., Song L. Cellular UAV-to-x communications:
    Design and optimization for multi-UAV networks IEEE Trans. Wireless Commun., 18
    (2) (2019), pp. 1346-1359 CrossRefView in ScopusGoogle Scholar [154] Amorosi L.,
    Chiaraviglio L., Galan-Jimenez J. Optimal energy management of UAV-based cellular
    networks powered by solar panels and batteries: Formulation and solutions IEEE
    Access, 7 (2019), pp. 53698-53717 CrossRefView in ScopusGoogle Scholar [155] Azari
    M.M., Rosas F., Pollin S. Cellular connectivity for UAVs: Network modeling, performance
    analysis, and design guidelines IEEE Trans. Wireless Commun., 18 (7) (2019), pp.
    3366-3381 CrossRefView in ScopusGoogle Scholar [156] H. Hellaoui, A. Chelli, M.
    Bagaa, T. Taleb, Towards mitigating the impact of UAVs on cellular communications,
    in: 2018 IEEE Global Communications Conference, GLOBECOM, 2018, pp. 1–7. Google
    Scholar [157] U. Challita, W. Saad, C. Bettstetter, Deep reinforcement learning
    for interference-aware path planning of cellular-connected UAVs, in: 2018 IEEE
    International Conference on Communications, ICC, 2018, pp. 1–7. Google Scholar
    [158] Amorim R., Nguyen H., Wigard J., Kovacs I.Z., Sorensen T.B., Biro D.Z.,
    Mogensen P. Measured uplink interference caused by aerial vehicles in LTE cellular
    networks IEEE Wirel. Commun. Lett., 7 (6) (2018), pp. 958-961 CrossRefView in
    ScopusGoogle Scholar [159] V. Yajnanarayana, Y.-P.E. Wang, S. Gao, S. Muruganathan,
    X.L. Ericsson, Interference Mitigation methods for unmanned aerial vehicles served
    by cellular networks, in: 2018 IEEE 5G World Forum, 5GWF, 2018, pp. 118–122. Google
    Scholar [160] Kim H., Ben-Othman J. A collision-free surveillance system using
    smart UAVs in multi domain IoT IEEE Commun. Lett., 22 (12) (2018), pp. 2587-2590
    CrossRefView in ScopusGoogle Scholar [161] Fan Q., Ansari N. Towards traffic load
    balancing in drone-assisted communications for IoT IEEE Internet Things J., 6
    (2) (2018), pp. 3633-3640 Google Scholar [162] Jiang B., Yang J., Xu H., Song
    H., Zheng G. Multimedia data throughput maximization in internet-of-things system
    based on optimization of cache-enabled UAV IEEE Internet Things J., 6 (2) (2018),
    pp. 3525-3532 Google Scholar [163] N.H. Motlagh, M. Bagaa, T. Taleb, UAV Selection
    for a UAV-based integrative IoT platform, in: 2016 IEEE Global Communications
    Conference, GLOBECOM, 2016, pp. 1–6. Google Scholar [164] Yan S., Peng M., Cao
    X. A game theory approach for joint access selection and resource allocation in
    UAV assisted IoT communication networks IEEE Internet Things J., 6 (2) (2018),
    pp. 1663-1674 Google Scholar [165] Yang Q., Yoo S.-J. Optimal UAV path planning:
    Sensing data acquisition over IoT sensor networks using multi-objective bio-inspired
    algorithms IEEE Access, 6 (2018), pp. 13671-13684 CrossRefView in ScopusGoogle
    Scholar [166] Yoo S.-J., Park J.-H., Kim S.-H., Shrestha A. Flying path optimization
    in UAV-assisted IoT sensor networks ICT Express, 2 (3) (2016), pp. 140-144 View
    PDFView articleView in ScopusGoogle Scholar [167] Abd-Elmagid M.A., Dhillon H.S.
    Average peak age-of-information minimization in UAV-assisted IoT networks IEEE
    Trans. Veh. Technol., 68 (2) (2018), pp. 2003-2008 Google Scholar [168] S. Abdelhamid,
    UAV path planning for emergency management in IoT, in: 2018 IEEE International
    Conference on Communications Workshops, ICC Workshops, 2018, pp. 1–6. Google Scholar
    [169] Zhang S., Zeng Y., Zhang R. Cellular-enabled UAV communication: A connectivity-constrained
    trajectory optimization perspective IEEE Trans. Commun., 67 (3) (2018), pp. 2580-2604
    Google Scholar [170] Sharma V., Song F., You I., Atiquzzaman M. Energy efficient
    device discovery for reliable communication in 5G-based IoT and BSNs using unmanned
    aerial vehicles J. Netw. Comput. Appl., 97 (2017), pp. 79-95 View PDFView articleView
    in ScopusGoogle Scholar [171] S. Handouf, E. Sabir, M. Sadik, Energy-throughput
    tradeoffs in ubiquitous flying radio access network for IoT, in: 2018 IEEE 4th
    World Forum on Internet of Things, WF-IoT, 2018, pp. 320–325. Google Scholar [172]
    Sikeridis D., Tsiropoulou E.E., Devetsikiotis M., Papavassiliou S. Wireless powered
    Public Safety IoT: A UAV-assisted adaptive-learning approach towards energy efficiency
    J. Netw. Comput. Appl., 123 (2018), pp. 69-79 View PDFView articleView in ScopusGoogle
    Scholar [173] M. Mozaffari, W. Saad, M. Bennis, M. Debbah, Mobile Internet of
    Things: Can UAVs provide an energy-efficient mobile architecture?, in: 2016 IEEE
    Global Communications Conference, GLOBECOM, 2016, pp. 1–6. Google Scholar [174]
    Chakareski J., Naqvi S., Mastronarde N., Xu J., Afghah F., Razi A. An energy efficient
    framework for UAV-assisted millimeter wave 5G heterogeneous cellular networks
    IEEE Trans. Green Commun. Netw., 3 (1) (2019), pp. 37-44 CrossRefView in ScopusGoogle
    Scholar [175] Almasoud A.M., Kamal A.E. Data dissemination in IoT using a cognitive
    UAV IEEE Trans. Cogn. Commun. Netw., 5 (4) (2019), pp. 849-862 CrossRefView in
    ScopusGoogle Scholar [176] S.-C. Choi, N.-M. Sung, J.-H. Park, I.-Y. Ahn, J. Kim,
    Enabling drone as a service: OneM2M-based UAV/drone management system, in: 2017
    Ninth International Conference on Ubiquitous and Future Networks, ICUFN, 2017,
    pp. 18–20. Google Scholar [177] Hellaoui H., Bekkouche O., Bagaa M., Taleb T.
    Aerial control system for spectrum efficiency in UAV-to-cellular communications
    IEEE Commun. Mag., 56 (10) (2018), pp. 108-113 CrossRefView in ScopusGoogle Scholar
    [178] Li B., Fei Z., Zhang Y., Guizani M. Secure UAV communication networks over
    5G IEEE Wirel. Commun., 26 (5) (2019), pp. 114-120 CrossRefView in ScopusGoogle
    Scholar [179] H. Kim, J. Ben-Othman, L. Mokdad, S. Cho, P. Bellavista, On collision-free
    reinforced barriers for multi domain IoT with heterogeneous UAVs, in: 2017 IEEE
    8th Annual Ubiquitous Computing, Electronics and Mobile Communication Conference,
    UEMCON, 2017, pp. 466–471. Google Scholar [180] Zhao J., Gao F., Wu Q., Jin S.,
    Wu Y., Jia W. Beam tracking for UAV mounted satcom on-the-move with massive antenna
    array IEEE J. Sel. Areas Commun., 36 (2) (2018), pp. 363-375 CrossRefView in ScopusGoogle
    Scholar [181] Li M., Hong Y., Zeng C., Song Y., Zhang X. Investigation on the
    UAV-to-satellite optical communication systems IEEE J. Sel. Areas Commun., 36
    (9) (2018), pp. 2128-2138 CrossRefView in ScopusGoogle Scholar [182] Hua M., Wang
    Y., Lin M., Li C., Huang Y., Yang L. Joint comp transmission for UAV-aided cognitive
    satellite terrestrial networks IEEE Access, 7 (2019), pp. 14959-14968 CrossRefView
    in ScopusGoogle Scholar [183] Marchese M., Moheddine A., Patrone F. IoT And UAV
    integration in 5G hybrid terrestrial-satellite networks Sensors, 19 (17) (2019),
    p. 3704 CrossRefView in ScopusGoogle Scholar Cited by (52) Secure communication
    in IOT-based UAV networks: A systematic survey 2023, Internet of Things (Netherlands)
    Show abstract BMUDF: Hybrid Bio-inspired Model for fault-aware UAV routing using
    Destination-aware Fan shaped clustering 2023, Internet of Things (Netherlands)
    Show abstract Coordinated network partition detection and bi-connected inter-partition
    topology creation in damaged sensor networks using multiple UAVs 2023, Computer
    Communications Show abstract LAKA-UAV: Lightweight authentication and key agreement
    scheme for cloud-assisted Unmanned Aerial Vehicle using blockchain in flying ad-hoc
    networks 2023, Computer Networks Show abstract Internet of drones security: Taxonomies,
    open issues, and future directions 2023, Vehicular Communications Show abstract
    Futuristic view of the Internet of Quantum Drones: Review, challenges and research
    agenda 2022, Vehicular Communications Citation Excerpt : These drones are capable
    of offering “bird''s eye view” viewpoints as well as adaptability, which allows
    them to be employed in a variety of different situations. In order to obtain information
    on interstate traffic flow, the researchers can use drones [168]. During their
    flight, drones will interact with vehicles already on the road to determine traffic
    flow on the routes they are travelling on. Show abstract View all citing articles
    on Scopus View Abstract © 2020 Elsevier B.V. All rights reserved. Recommended
    articles Secure and efficient protocol for fast handover in 5G mobile Xhaul networks
    Journal of Network and Computer Applications, Volume 102, 2018, pp. 38-57 Vishal
    Sharma, …, Mohammed Atiquzzaman View PDF The security of Internet of drones Computer
    Communications, Volume 148, 2019, pp. 208-214 Zhihan Lv View PDF Tactile internet
    of federated things: Toward fine-grained design of FL-based architecture to meet
    TIoT demands Computer Networks, Volume 231, 2023, Article 109712 Omar Alnajar,
    Ahmed Barnawi View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 49 Captures Readers: 108 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Computer Communications
  limitations: '>'
  pdf_link: null
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Flying Things (IoFT): A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s40747-021-00582-9
  analysis: '>'
  authors:
  - Vu Khanh Quy
  - Van-Hau Nguyen
  - Dang Van Anh
  - Le Anh Ngoc
  citation_count: 52
  full_citation: '>'
  full_text: '>

    Complex & Intelligent Systems (2022) 8:3805–3815

    https://doi.org/10.1007/s40747-021-00582-9

    ORIGINAL ARTICLE

    Smart healthcare IoT applications based on fog computing:

    architecture, applications and challenges

    Vu Khanh Quy1

    · Nguyen Van Hau1 · Dang Van Anh1 · Le Anh Ngoc2

    Received: 17 July 2021 / Accepted: 19 October 2021 / Published online: 17 November
    2021

    © The Author(s) 2021

    Abstract

    The history of human development has proven that medical and healthcare applications
    for humanity always are the main

    driving force behind the development of science and technology. The advent of
    Cloud technology for the ﬁrst time allows

    providing systems infrastructure as a service, platform as a service and software
    as a service. Cloud technology has dominated

    healthcare information systems for decades now. However, one limitation of cloud-based
    applications is the high service

    response time. In some emergency scenarios, the control and monitoring of patient
    status, decision-making with related

    resources are limited such as hospital, ambulance, doctor, medical conditions
    in seconds and has a direct impact on the life

    of patients. To solve these challenges, optimal computing technologies have been
    proposed such as cloud computing, edge

    computing, and fog computing technologies. In this article, we make a comparison
    between computing technologies. Then,

    we present a common architectural framework based on fog computing for Internet
    of Health Things (Fog-IoHT) applications.

    Besides, we also indicate possible applications and challenges in integrating
    fog computing into IoT Healthcare applications.

    The analysis results indicated that there is huge potential for IoHT applications
    based on fog computing. We hope, this study

    will be an important guide for the future development of fog-based Healthcare
    IoT applications.

    Keywords Fog computing · Cloud computing · Internet of Things · Healthcare

    Introduction

    History demonstrated that the evolution of humanity goes

    hand in hand with the development and application of sci-

    ence and technology in the ﬁeld of medicine and healthcare.

    Decades ago, information technology applications in the

    medical area were invented to collect, monitor and control

    the patient status remotely, decision-making treatment for

    patients [1–3]. With the development of science came the

    advent of cloud computing technology. Cloud technology

    B Le Anh Ngoc

    ngocla2@fe.edu.vn

    Vu Khanh Quy

    quyvk@utehy.edu.vn

    Nguyen Van Hau

    hauvn@utehy.edu.vn

    Dang Van Anh

    dangvananh@utehy.edu.vn

    1

    Hung Yen University of Technology and Education, Khoai

    Chau, Hungyen, Vietnam

    2

    Swinburne Vietnam, FPT University, Hanoi, Vietnam

    enables to provide all things such as services, include Infras-

    tructure as a Service (IaaS), Platform as a Service (PaaS),

    and Software as a Service (SaaS). Robustness, reliability, and

    powerful computing abilities have made cloud computing the

    dominant technology of the past decade [4, 5].

    In the early 2020s, the advent of 5th generation mobile

    networks, also known as 5G, brought a new revolution to

    all industries. 5G allows providing services with ultra-low

    latency and ultra-high bandwidth [6, 7]. The advent of 5G

    realizes the concept of the Internet of Things and forms a

    series of smart applications serving humanity such as smart

    healthcare [8], intelligent transportation systems [9], smart

    cities [10], smart retail [11], smart agriculture [12], and IoT

    ecosystems [13, 14] as presented in Fig. 1.

    In a typical electronic healthcare system (e-Health), sen-

    sors are mounted on the body of patients. These devices

    collect data such as blood pressure, heart rate, mobility, etc.

    and transmit the collected data to the centre based on network

    connections [15]. Speciﬁcally, in [16], the authors introduced

    a semantic sensor network to enhance the interoperability

    ability of sensors in e-health systems for the purpose of the

    collected different e-Health data formats. Due to the amount

    123

    3806

    Complex & Intelligent Systems (2022) 8:3805–3815

    Fig. 1 An illustration of fog

    computing-based applications

    for humanity

    of data collected being huge, they will be stored in the cloud

    for analysis and decision-making [17]. However, one chal-

    lenge of cloud-based applications is high service response

    time [18]. In ambulance emergency scenarios, where related

    data collection such as hospital location, distance, ambulance

    vehicles, medical staff, etc. The decision-making will be cal-

    culated in seconds and directly affected the patient life, cloud

    computing is not feasible. A computational technology with

    truly real-time response times could save the life of patients.

    In recent times, fog computing has been proposed [19–21].

    Fog computing brings cloud capabilities into LAN to reduce

    service response time.

    In this study, we make a comparison between comput-

    ing technologies. Then, we present a common architec-

    tural framework for fog computing-based IoT applications.

    Besides, we also point out possible applications and chal-

    lenges in integrating edge computing into IoT Healthcare

    applications. Some of the main contributions in this study

    are described as follows:

    • Vision of fog computing and IoT in healthcare industry.

    • Compare of cloud, edge, and fog computing.

    • A short survey of fog computing-based healthcare IoT

    applications.

    • Applications, challenges and future research directions.

    The rest of the paper is organized as follows: in Sect. 2,

    we present a common fog computing architecture frame-

    work. In Sect. 3, we present a short survey of recent fog

    computing-based Internet of Health applications. Section 4

    presentschallengesandfutureresearchdirections,andSect.5

    is the conclusion.

    Computing architectures

    For decades now, cloud computing has dominated all

    domains [22, 23]. A typical Cloud-based architecture con-

    sists of two layers: the Cloud layer consists of cloud servers

    that have robust storage and high-performance computing

    ability. They communicate with each other base on the core

    optical network with extremely bandwidth and the end-user

    layer consist of end-user devices.

    These devices are connected with each other and com-

    municate with the Cloud layer based on wired or wireless

    connections. Due to the computing, analysis and storage

    are performed on the Cloud, these devices without need

    the storage and computing abilities. Cloud computing has

    the capability of providing all things as a service, including

    infrastructure as a service, platform as a service, and soft-

    ware as a service [24]. Robustness, reliability and massive

    computing power make cloud computing to continue the core

    computing technology of the future [25, 26].

    One of the signiﬁcant limitations of cloud computing is

    the high service response time. Consequently, it is infeasible

    for real-time IoT applications, especially for delay-sensitive

    applications in some areas such as augmented reality [27],

    trafﬁc [28, 29], and emergency [30]. In recent times, to

    address these challenges, edge computing [31] and fog com-

    puting [32] are proposed.

    We present an all-in-one computing architecture as in

    Fig. 2. These edge and fog technologies both tend the shorter

    distance between the database and the end-user.

    One of the key differences between the two computing

    technologies is performance.

    Edge computing sets up computing servers at the gateway

    of the network while fog computing brings compute servers

    123

    Complex & Intelligent Systems (2022) 8:3805–3815

    3807

    Fig. 2 An illustration of all-in-one computing architectures

    Table 1 Comparison of computing methods

    Characteristics

    Cloud

    Fog

    Edge

    Latency

    High

    Low

    Low

    Service response time

    High

    Very low

    Low

    Bandwidth

    High

    Low

    Very low

    Storage

    High

    Low

    Low

    Server overhead

    Very high

    Low

    Very low

    Network congestion

    High

    Low

    Low

    Energy consumption

    High

    Low

    Low

    into the LAN. On the other hand, fog is the way to bring

    cloud capabilities to the edge of the network [33, 34]. About

    nature, fog is the standard, and the edge is the concept. The

    difference between fog computing and edge computing is

    only implement performance. In some cases, these two con-

    cepts overlap. To explain the capabilities of the computing

    technologies, in [33] presents a performance comparison of

    computing technologies as in Table 1.

    In this comparison, we indicate some key criteria that

    directly affect system performance as follows:

    • Latency: it is the average time to transmit a packet between

    two network nodes. Latency criteria reﬂect the transmis-

    sion capacity and system performance.

    • Service Response Time: it is the average time from end-

    user request service to the data is responded. Service

    Response Time criteria reﬂect the accuracy, reliability, and

    real-time response ability of IoT services.

    • Bandwidth: this criterion reﬂects the average bandwidth

    consumption when processing one request of each solu-

    tion.

    • Storage: this criterion reﬂects the data storage capacity of

    each solution.

    • Server Overhead: this criterion reﬂects the average com-

    putational cost per request of each solution.

    • Network Congestion: this criterion reﬂects the probability

    of collision of the packets.

    • Energy Consumption: this criterion reﬂects the average

    energy consumption of each solution.

    Figure 3 presents an overview architecture of fog-based

    IoHT applications. This architecture consists of three lay-

    ers: Thing layer, Fog layer, and Cloud layer. Thing layer

    includes end-user devices such as sensors, wearable IoT

    devices, Arduino motherboards, actuators to collect body

    data, heart rate, etc. The Fog layer includes the Internet

    gateway, local router, and fog servers. This layer communi-

    cates and transfers data between the Thing and Cloud layers.

    It uses provided data from the underlayer, federated learn-

    ing, fog computing, and deep learning to making-decisions

    for emergency medical scenarios. The Cloud layer includes

    servers with extreme huge storage, processing and analysis

    capabilities that help medical staff make long-term treatment

    decisions for patients.

    Obviously, with very low service response time, fog com-

    puting will be one of the most feasible solutions for Internet

    of Healthcare Things applications in emergency rescue sce-

    narios and in some real-time patient monitoring applications

    such as patients with a history of heart disease, blood pres-

    sure and stroke. The common feature of these applications

    is that they require real-time decision-making and response

    times.

    Survey of recent IoT healthcare applications

    The history of human development has proven that medicine

    and healthcare are the main driving forces for the devel-

    opment of science and technology [35, 36]. Cloud-based

    medical applications have grown robustly in recent years [37,

    38]. The advent of 5G has realized the concept of the Inter-

    net of Things and forces the further development of IoHT

    applications. In recent times, for the purpose to reduce ser-

    vice response time, improve system performance, and energy

    efﬁciency, integrating fog computing into the IoHT applica-

    tions are proposed and achieved some positive results. In

    this section, we present the fog computing-based proposals

    in recent three year ranges [2019–2021]. Based on the survey

    results, we divide the proposals into three categories based

    123

    3808

    Complex & Intelligent Systems (2022) 8:3805–3815

    Table 2 The fog-IoHT proposals in period [2019–2021]

    Ref

    Year

    Approach

    Purpose

    Method

    Accuracy

    Delay

    Energy

    Security

    Results

    [39]

    2019

    Performance

    Fog-IoHT to monitoring and diagnose

    the hypertension

    Use ANN predict the hypertension

    attack and making-decision based on

    fog computing

    Yes

    Yes

    No

    No

    Improve performance, and response

    time

    [40]

    2019

    Security

    Privacy ensured e-healthcare

    framework to secure patient

    information records

    Use novel consensus-based access

    control method to ensure the

    reliability of the requester to EMR

    No

    Yes

    No

    Yes

    Improve privacy of patient information

    record, and response time

    [41]

    2020

    Security

    Fog-IoHT to enhance efﬁciency and

    security

    Use user authentication method

    through identity and elliptic curve

    cryptography technique to prevent

    security breaches

    No

    Yes

    No

    Yes

    Improve performance and enhance

    security

    [42]

    2020

    Performance

    Fog-IoHT to reduced patient data

    retrieval time

    Use the in-network caching of NDN

    and request aggregation of the

    content-centric networking

    No

    Yes

    Yes

    No

    Reduce 28.5% patient data retrieval

    time

    [43]

    2020

    Performance

    Fog-IoHT architecture to saving and

    optimise energy consumption

    Use the MILP method to optimize the

    number and location of fog devices at

    the network edge

    No

    Yes

    Yes

    No

    Saving energy up to [36–52]%

    compared to Cloud-IoHT systems

    [44]

    2020

    Performance

    Fog-IoHT analyzes and identiﬁes heart

    diseases automatically

    Integrates deep learning with fog

    computing

    No

    Yes

    No

    No

    Improve the execution time up to

    [10–43]% under different scenarios

    [45]

    2021

    Ofﬂoading

    Fog-IoHT ofﬂoading schema to optimal

    ofﬂoad plan

    Use the MSSP method to minimizing

    the total latency of ofﬂoading as well

    as consider how ofﬂoading perform

    No

    Yes

    Yes

    No

    This solution can rapidly give to the

    approximate optimal results

    [46]

    2021

    Security

    Blockchain-fog-IoHT to improve

    privacy, security, and diagnostic

    accuracy diabetic and cardio disease

    Use a blockchain to store patient health

    information and a neuro-fuzzy

    inference system to making-decision

    Yes

    Yes

    No

    Yes

    Improve privacy and security; enhance

    diagnostic accuracy up to 81%

    [47]

    2021

    Ofﬂoading

    Fog-IoT to enhance performance the

    diagnosis and treatment of infected

    patients Coronavirus

    Use non-linear and non-convex

    approaches to solve the suboptimal

    low-complexity problems

    No

    No

    Yes

    No

    Reduce computing cost and response

    time

    [48]

    2021

    Performance

    Fog-IoHT to monitoring physical status

    of athletes

    Use the 3D-acceleration method to

    record the collected health data state

    of athletes for workout activity

    Yes

    No

    No

    No

    Improve health of athletes; provide

    timely warnings; gym activity

    recognition

    [49]

    2021

    Ofﬂoading

    Fog-IoHT to adaptive for large-scale

    healthcare applications

    Use load balancing method to

    ofﬂoading among fog servers nodes

    No

    Yes

    No

    No

    Improve performance compared to the

    Cloud systems

    [50]

    2021

    Security

    Fog-IoHT based on symmetric

    homomorphic cryptosystem to secure

    patient information

    Use an symmetric homomorphic

    cryptosystem to privacy assured

    medical data aggregation

    No

    Yes

    No

    Yes

    Improve privacy and security

    [51]

    2021

    Performance

    Fog-IoHT to reduce the delay,

    bandwidth and energy, enhance the

    reliability of system

    Use a MOCSA algorithm to solve the

    multi-objective optimization problem

    of both energy and latency

    No

    Yes

    Yes

    No

    Improve the latency and saving energy

    up to [5–42]% and [28–43]%,

    respectively compared to several

    existing solutions

    123

    Complex & Intelligent Systems (2022) 8:3805–3815

    3809

    Fig. 3 An overview architecture

    of fog-based IoHT applications

    on approach, include Performance, Security, and Ofﬂoad-

    ing. Moreover, we also show the method, the purpose and

    the achieved results with each proposal. The details of the

    survey results are presented in Table 2.

    Hypertension is a very dangerous disease, it often occurs

    in the elderly or people with a history of the disease. A

    hypertension attack can suddenly appear. Without the timely

    support of relatives and doctors, the patient’s life will be at

    risk. To solve this problem, in [39], Sood et al. proposed an

    IoT healthcare application based on fog computing to mon-

    itoring and diagnose a hypertension attack of the patient in

    real-time. The operating principle of the system is as fol-

    lows: they use sensors mounted on the patient to collect blood

    pressure data. Then, an artiﬁcial neural network will be used

    to predict blood pressure attacks based on fog computing.

    The system will continuously generate blood pressure alerts

    to pre-installed mobile devices. Experiment results demon-

    strated the proposed solution reduced service response time,

    bandwidth consumption, and enhance the accuracy of diag-

    nosis compared to existing solutions.

    In recent times, the explosion of healthcare IoT applica-

    tions based on fog computing presented the huge potential of

    fog computing. However, on the other hand, these applica-

    tions make a signiﬁcant challenge in protecting the privacy

    and security of patient health information. To solve these

    challenges, Saha et al. [40] proposed the privacy ensured

    e-healthcare framework for electronic medical records in

    healthcare IoT applications based on fog computing. Experi-

    mental results demonstrated the efﬁciency of the proposed

    solution in terms of the privacy and security of patient

    information, reduced response time compared to existing

    solutions.

    Realizing the limitations of healthcare IoT applications

    based on the Cloud, Awaisi et al. [41] proposed an efﬁ-

    cient healthcare IoT based on fog computing to enhance

    efﬁciency and security. Speciﬁcally, they proposed an efﬁ-

    cient healthcare IoT architecture based on fog computing.

    Then, to enhance security, they use the identity-based user

    authentication method. Experiment results indicated the efﬁ-

    ciency of the proposed solution in terms of performance and

    enhance security.

    One of the main challenges facing healthcare applications

    is the ability and speed of patient data retrieval. The limited

    capabilities and capacities of IoT nodes are not viable. To

    123

    3810

    Complex & Intelligent Systems (2022) 8:3805–3815

    address this challenge, Wang et al. [42] proposed a healthcare

    IoT system based on fog computing to reduce patient data

    retrieval time. Speciﬁcally, they exploit caching and request

    aggregation of the content centric networking. Experiment

    results indicated that the proposed solution improved up to

    28.5% in terms of the patient data retrieval time compared to

    existing solutions.

    The robust increase of Cloud-based healthcare IoT appli-

    cations leads to the consumption of amount huge energy.

    According to energy efﬁciency direction, Isa et al. [43] pro-

    posed a fog computing-based architecture for healthcare IoT

    applications to saving and optimise energy consumption.

    Speciﬁcally, they proposed an efﬁcient energy fog-based

    computing model, called EEFC to optimize the location and

    number of fog servers at the edge layer. Experiment results

    demonstrated the efﬁciency of the proposed solution com-

    pared to existing cloud-based solutions when it saving energy

    upto36%and52%,respectivelywithlowandhighdataspeed

    scenarios.

    Cloud-based IoT applications have been successfully

    deployed in the last decade, however, Shreshth Tuli et al.

    [44] demonstrated that existing IoHT applications based on

    the cloud have limited scalability and high service response

    time. To solve these challenges, the authors proposed a novel

    IoHT architecture based on fog computing and deep learn-

    ing to real-time analysis and diagnostic for heart patients.

    Simulation results indicated that the proposed framework

    improved in terms of energy consumption, bandwidth, accu-

    racy, delay, and execution time in different fog-based IoHT

    scenarios.

    The integration of fog computing into healthcare IoT

    applications aim to make these real-time eHealth applica-

    tions is the inevitable trend. However, the breakout of IoT

    devices will lead to overload. To solve this problem, Zhang

    et al. [45] proposed an efﬁcient ofﬂoading schema for fog

    servers in real-time eHealth systems.

    Speciﬁcally, they consider the ofﬂoading problem as

    multi-stage stochastic programming that aims to minimize

    the total delay to determine the optimal ofﬂoad plan based

    on system resources. Experiment results indicated that the

    proposed solution can rapid be led to the approximate opti-

    mal results.

    For the purpose design a privacy and security health-

    care IoT system to diagnostic accuracy diabetic and cardio

    disease, Shynu et al. [46] proposed an integrated solution

    between healthcare IoT application, blockchain and fog com-

    puting technologies. Speciﬁcally, sensors will collect patient

    data and storage on the blockchain. Then the patient health

    records will be grouped, and ﬁnally, an adaptive neuro fuzzy

    inference system is used for making-decision diagnostic

    based on fog computing. Experiment results indicated that

    the efﬁciency of the proposed solution when it improved

    accurate diagnosis rate up to 81% compared to existing solu-

    tions.

    In the context of the outbreak of the COVID-19 epidemic,

    the Internet of Medical Things (IoMT) plays an important

    role in supporting the diagnosis and treatment of patients

    infected with the coronavirus. To enhance performance and

    reduced service response time of these applications. In

    [47], Qiu et al. proposed an IoMT based on fog comput-

    ing. Speciﬁcally, they use an efﬁcient ofﬂoading schema to

    resource allocation between fog servers aims to limited over-

    load. Experiment results indicated that the proposed solution

    improved computing cost and reduce response time com-

    pared to existing solutions.

    According to the development trend of society, more cit-

    izens go to gyms to exercise. The monitoring activities,

    exercises, and body compositions of athletes to give warn-

    ings timely or provide analyses of the change of body signals

    to doctors, coaches, and athletes are urgent requirements. To

    solve this problem, Hussain et al. (2021) [48] proposed a

    fog-based healthcare IoT framework. Speciﬁcally, they use

    wearable IoT devices to collect body data, exercise inten-

    sity, heart rate. Then, athlete information records are stored,

    analyzed at fog servers to make optimize exercise, duration,

    and intensity for each athlete. Through experiment, they con-

    structed three modules, include Health zone to classify the

    health of athletes, Hzone to provide timely warnings about

    the health status of athletes, and a gym activity recognition

    module. Experiment results demonstrated the efﬁciency of

    the proposed solution compared to existing solutions.

    High service response delay is one of the limitations of

    Cloud-based healthcare IoT applications. To solve this prob-

    lem, Asghar et al. [49] proposed a fog-based healthcare

    IoT architecture framework. Moreover, to adaptive for large-

    scale healthcare applications, they also introduce an efﬁcient

    ofﬂoading schema to load balancing between fog servers.

    Experiment results based on iFogSim simulation software

    indicated that the proposed solution reduced response time

    compared to the Cloud-based approach.

    In the COVID-19 pandemic, fog-based healthcare IoT

    applications showed their important position and inevitable

    development trend in the future. However, the analysis of

    patient information records at the fog servers faces privacy

    and security challenges. To address these challenges, Guo

    et al. [50] proposed an improved symmetric homomorphic

    cryptosystem for monitoring delay-sensitive applications.

    Finally, they experimented with their solution with two attack

    games to indicate the improved privacy and security. Exper-

    iment results demonstrated the efﬁciency of the proposed

    solution compared to existing related approaches.

    Although fog computing has great potential to provide

    network resources and requested services for applications at

    the edge network. However, inefﬁcient deployment of com-

    ponents on fog infrastructure results bandwidth, resource

    123

    Complex & Intelligent Systems (2022) 8:3805–3815

    3811

    and energy wastage, reduce system performance. To solve

    this problem, Yaser Ramzanpoor et al. [51] proposed a

    multi-objective optimization algorithm for fog-IoHT appli-

    cations. Authors used a multi-objective cuckoo search algo-

    rithm (MOCSA) to solve the multi-objective optimization

    problem of both energy and latency. The simulation results

    show that the proposed solution improved average latency

    the amount [5–42]% and reduce energy consumption about

    [28–43]% compared to several existing solutions.

    Discussion and applications

    Analysis of the surveyed results in Table 2 presented

    some interesting results. The proposals focus on three main

    approaches, including performance improvement, privacy

    and security, and ofﬂoading.

    According to the performance improvement approach,

    fog-IoHT applications focus on reducing service response

    time, energy efﬁciency, and improving the accuracy of

    decision-making. Some typical results are as follows: in

    [42], authors reduced the patient data retrieval time by

    28.5% compared to existing solutions. Moreover, in [43],

    authors improved energy consumption up to 52% compared

    to Cloud-based systems in high data speed scenarios.

    According to the privacy and security approach, fog-IoHT

    applications focus on ensuring privacy and data security at

    fog servers. Information related to the health condition of

    patients is particularly sensitive and needs to be private.

    Ensuring information security for healthcare-related appli-

    cations is an important task. Obviously, data storage and

    processing at fog servers brings unprecedented abilities and

    capabilities to IoHT applications. On the other hand, it also

    brings the attacked potential risks on fog servers. Therefore, a

    series of proposals to improve privacy and security for IoHT

    have been proposed over the years in [2, 3, 7, 11].

    In [52], authors proposed a secure edge computing solu-

    tion for IoT applications based on the security gateway that

    is deployed on edge to manage IoT devices, data, IoT clients,

    and services aim to provide secure edge services of access

    and visualization to users.

    According to ofﬂoading approach, fog-IoHT applications

    focus on ofﬂoading for fog servers. The explosive growth of

    sensors, IoT devices and smart healthcare applications gener-

    ates a huge amount of data. Consequently, it will put pressure

    and overload on fog computing servers. An effective ofﬂoad-

    ing strategy is an inevitable requirement and one of the most

    signiﬁcant challenges for real-time fog-IoHT applications.

    It should be recalled that, although performance improve-

    ment and efﬁcient ofﬂoading all have the same goals to reduce

    service response time, energy, and enhance the accuracy of

    decision-making, they have two different approaches. While

    performance improvement uses different solutions and meth-

    Fig. 4 Several typical applications of fog-IoHT

    ods to optimize performance criteria on a fog server, efﬁcient

    ofﬂoading focuses on establishing an optimal assignment of

    tasks schema for fog servers. In [6], the authors achieved an

    approximate optimal ofﬂoading schema. Some other studies

    in [8, 10] improved computing costs and reduced response

    times.

    Surveyed results indicated a series of the typical fog-

    IoHT applications as presented in Fig. 4, include monitoring

    hypertension attacks, diagnostic accuracy diabetic and cardio

    disease, diagnosis and treatment of infected patients coro-

    navirus, etc. The survey results also indicated that many

    studies have been proposed for healthcare area within the past

    3years.Oneofthemainpurposesoffogcomputingistomove

    the abilities of the cloud closer to end-users for the purpose

    of the reduced service response times, enhance reliability,

    efﬁciency energy consumption, bandwidth, computing costs.

    The surveyed studies have achieved some positive results,

    however, there are still many challenges in taking fog com-

    puting into IoT applications [53, 54].

    Challenges and future research directions

    Nowadays, IoT is applied in almost all domains of humanity

    and it will play an extremely vital role as well as the key driv-

    ing force for the development of the future Internet. In the

    next decade, billions of IoT devices and smart applications

    will emerge in a series of areas such as smart manufactur-

    ing, smart agriculture, augmented reality, healthcare, etc. and

    123

    3812

    Complex & Intelligent Systems (2022) 8:3805–3815

    Fig. 5 Some key challenges of IoHT applications

    make basic changes for our world. To respond to these huge

    requirements, a robust, reliable, and ﬂexible FC architecture

    to optimize network systems is topical and urgent. We dis-

    cussed some challenges and possible research directions as

    presented in Fig. 5 for future edge computing as follows:

    (1) An efﬁcient computing ofﬂoading scheme to achieve

    optimized performance needs to be considered. This

    scheme must be able to allocate appropriate tasks to

    both fog computing and cloud computing systems. In

    [55], the authors introduced a hybrid ofﬂoading schema

    between cloud and fog to tasks associated with complex

    applications. In this study, based on the task require-

    ments, the IoT node based on the Q-learning algorithm

    will choose to ofﬂoad tasks to the fog servers or to the

    cloud to load balancing and executed more efﬁciently.

    (2) An efﬁcient scheduling algorithm to achieve energy

    efﬁciency, reliably manage and control fog servers in

    heterogeneous network environments needs to be con-

    sidered. In [56], the authors introduced an efﬁcient

    scheduling algorithm to saving energy for fog-based

    IoT systems. This algorithm aims to derive the optimal

    scheduling decision based on multiple neighbor helper

    nodes sharing their computation resources. Beside, in

    [57], the authors also introduced an efﬁcient schedul-

    ing algorithm for efﬁcient resource utilization on fog

    servers. Speciﬁcally, they rank fog nodes based on

    latency and resource utilization criteria. Then, intelli-

    gent scheduling algorithms based on the game theory

    approach are used to optimise the allocation of tasks.

    (3) In healthcare, the need for security on fog servers

    have been highlighted in recent studies due to poten-

    tial unsafe issues from public network environments as

    well as resource sharing of servers [58, 59]. Accordingly

    to Turgut et al. [60] demonstrated that the successful

    deployment of the IoT applications will only happen if

    the customer beneﬁts (the potential beneﬁts that IoT sys-

    tems provide to exceed their physical value and security

    and privacy costs). In our opinion, if privacy and secu-

    rity is not guaranteed, these potential risks can obscure

    the beneﬁts of Internet of health Things applications

    [60]. Therefore, the privacy and security problem for

    fog-IoHT applications will continue to be the subject of

    attention.

    The survey results have also indicated that integration

    between fog computing and IoHT applications is still in

    infancy stage; so a series of challenging problems need to

    be addressed in the future.

    Conclusions

    The Internet of Things will be a comprehensive revolution

    of the future Internet. Based on IoT, the concepts of smart

    healthcare, smart cities, smart retail, smart agriculture and

    IoT systems are advent. To provide computing methods for

    these applications, several computational technologies have

    been proposed including cloud computing, edge computing,

    and fog computing. One of the most important applications

    of the IoT era is smart healthcare. A traditional health-

    care application based on the cloud has some limitations

    such as high service response time and computing costs,

    more energy consumption and bandwidth. For the purpose

    of real-time ambulance emergency or rescue, rescue appli-

    cations, these applications need real-time service response.

    Therefore, fog computing-based IoHT applications are pro-

    posed. The survey and analysis results have proven that

    fog computing-based IoHT applications reduce latency, save

    energy, improve performance, reliability compared to cloud

    computing. In reality, cloud computing is still a core com-

    puting technology. Fog computing was born to bring the

    capabilities of the cloud closer to end-users. Because the

    distance between the end-users and the database is short-

    ened, fog computing has outstanding advantages over cloud

    computing and especially suitable for real-time IoHT appli-

    cations. In this study, we propose an all-in-one computing

    architecture framework. Besides, we surveyed recently the

    IoT applications based on fog computing in the healthcare

    industry. Based on the survey results, we analyzed the appli-

    cationpossibilities,challengesandfutureresearchdirections.

    We hope the results of this study will be an important guide

    for future research in the ﬁeld of fog computing and the

    healthcare industry.

    123

    Complex & Intelligent Systems (2022) 8:3805–3815

    3813

    Author contributions We have conducted the research, analyzed the

    data, and performed simulations together. All authors have approved

    the ﬁnal version.

    Funding This research is funded by Hung Yen University of Technol-

    ogy and Education under grand number UTEHY.L.2021.07.

    Availability of data and materials Not applicable.

    Code availability Not applicable.

    Declarations

    Conﬂict of interest The authors declare no conﬂict of interest.

    Ethics approval Not applicable.

    Consent to participate Not applicable.

    Consent for publication Not applicable.

    Open Access This article is licensed under a Creative Commons

    Attribution 4.0 International License, which permits use, sharing, adap-

    tation, distribution and reproduction in any medium or format, as

    long as you give appropriate credit to the original author(s) and the

    source, provide a link to the Creative Commons licence, and indi-

    cate if changes were made. The images or other third party material

    in this article are included in the article’s Creative Commons licence,

    unless indicated otherwise in a credit line to the material. If material

    is not included in the article’s Creative Commons licence and your

    intended use is not permitted by statutory regulation or exceeds the

    permitteduse,youwillneedtoobtainpermissiondirectlyfromthecopy-

    right holder. To view a copy of this licence, visit http://creativecomm

    ons.org/licenses/by/4.0/.

    Appendix

    See Table 3.

    Table 3 Acronyms used in the survey and deﬁnitions

    Acronym

    Deﬁnition

    Acronym

    Deﬁnition

    5G

    5th Generation

    Mobile Networks

    IoMT

    Internet of Medical

    Things

    AI

    Artiﬁcial

    Intelligence

    IoT

    Internet of Things

    ANN

    Artiﬁcial Neural

    Network

    IoTH

    Internet of Health

    Things

    API

    Application

    Programming

    Interface

    IoV

    Internet of Vehicles

    AR

    Augmented Reality

    LAN

    Local Area Network

    CC

    Cloud Computing

    M2M

    Mechanism to

    Mechanism

    Table 3 continued

    Acronym

    Deﬁnition

    Acronym

    Deﬁnition

    D2D

    Device to Device

    MANET

    Mobile Ad hoc

    Networks

    DDoS

    Distributed Denial

    of Service

    MCC

    Multi-Cloud

    Computing

    DoS

    Denial of Service

    MEC

    Mobile Edge

    Computing

    EG

    Edge Computing

    MILP

    Mixed Integer

    Linear

    Programming

    EMR

    Electronic Medical

    Record

    MOCSA

    Multi-Objective

    Cuckoo Search

    Algorithm

    FC

    Fog Computing

    MSSP

    Multi-Stage

    Stochastic

    Programming

    GIS

    Geographic

    Information

    Systems

    NDN

    Named Data

    Networking

    GPRS

    General Packet

    Radio Service

    PaaS

    Platform as a

    Service

    GPS

    Global Positioning

    System

    QoS

    Quality of Service

    IaaS

    Infrastructure as a

    Service

    SaaS

    Software as a

    Service

    IIoT

    Industrial Internet of

    Things

    SDN

    Software-Deﬁned

    Networking

    IoHT

    Internet of Health

    Things

    UAV

    Unmanned Aerial

    Vehicle

    References

    1. Qadri YA, Nauman A, Zikria YB, Vasilakos AV, Kim SW (2020)

    The future of healthcare internet of things: a survey of emerging

    technologies. IEEE Commun Surv Tutor 22(2):1121–1167. https://

    doi.org/10.1109/COMST.2020.2973314

    2. Buke A, Gaoli F, Yongcai W, Lei S, Zhiqi Y (2015) Healthcare

    algorithms by wearable inertial sensors: a survey. China Commun

    12(4):1–12. https://doi.org/10.1109/CC.2015.7114054

    3. Kumar A, Krishnamurthi R, Nayyar A, Sharma K, Grover

    V,

    Hossain

    E

    (2020)

    A

    novel

    smart

    healthcare

    design,

    simulation,

    and

    implementation

    using

    healthcare

    4.0

    pro-

    cesses. IEEE Access 8:118433–118471. https://doi.org/10.1109/

    ACCESS.2020.3004790

    4. Zhang R, Xue R, Liu L (2018) Searchable encryption for healthcare

    clouds: a survey. IEEE Trans Serv Comput 11(6):978–996. https://

    doi.org/10.1109/TSC.2017.2762296

    5. Fan K, Zhu S, Zhang K, Li H, Yang Y (2019) A lightweight authen-

    tication scheme for cloud-based RFID healthcare systems. IEEE

    Netw 33(2):44–49. https://doi.org/10.1109/MNET.2019.1800225

    6. Ullah H, Gopalakrishnan Nair N, Moore A, Nugent C, Muschamp

    P, Cuevas M (2019) 5G communication: an overview of vehicle-

    to-everything, drones, and healthcare use-cases. IEEE Access

    7:37251–37268. https://doi.org/10.1109/ACCESS.2019.2905347

    7. Shaﬁ M et al (2017) 5G: a tutorial overview of standards, trials,

    challenges, deployment, and practice. IEEE J Sel Areas Commun

    35(6):1201–1221. https://doi.org/10.1109/JSAC.2017.2692307

    123

    3814

    Complex & Intelligent Systems (2022) 8:3805–3815

    8. Qureshi HN, Manalastas M, Zaidi SMA, Imran A, Al Kalaa MO

    (2021) Service level agreements for 5G and beyond: overview,

    challenges and enablers of 5G-healthcare systems. IEEE Access

    9:1044–1061. https://doi.org/10.1109/ACCESS.2020.3046927

    9. Ji et al (2020) Survey on the internet of vehicles: network archi-

    tectures and applications. IEEE Commun Stand Mag 4(1):34–41.

    https://doi.org/10.1109/MCOMSTD.001.1900053

    10. Kirimtat A, Krejcar O, Kertesz A, Tasgetiren MF (2020) Future

    trends and current state of smart city concepts: a survey. IEEE

    Access 8:86448–86467. https://doi.org/10.1109/ACCESS.2020.

    2992441

    11. Yang J, Zhao J, Luo F, Wen F, Dong ZY (2018) Decision-making

    for electricity retailers: a brief survey. IEEE Trans Smart Grid

    9(5):4140–4153. https://doi.org/10.1109/TSG.2017.2651499

    12. Friha O, Ferrag MA, Shu L, Maglaras L, Wang X (2021) Internet of

    things for the future of smart agriculture: a comprehensive survey

    of emerging technologies. IEEE/CAA J Autom Sin 8(4):718–752.

    https://doi.org/10.1109/JAS.2021.1003925

    13. Lockl J, Schlatt V, Schweizer A, Urbach N, Harth N (2020)

    Toward trust in internet of things ecosystems: design principles

    for blockchain-based IoT applications. IEEE Trans Eng Manag

    67(4):1256–1270. https://doi.org/10.1109/TEM.2020.2978014

    14. Ding J, Nemati M, Ranaweera C, Choi J (2020) IoT con-

    nectivity technologies and applications: a survey. IEEE Access

    8:67646–67673. https://doi.org/10.1109/ACCESS.2020.2985932

    15. Ahad A, Tahir M, Yau KLA (2019) 5G-based smart healthcare

    network: architecture, taxonomy, challenges and future research

    directions. IEEE Access 7:100747–100762. https://doi.org/10.

    1109/ACCESS.2019.2930628

    16. Jin W, Kim DH (2018) Design and implementation of e-health sys-

    tem based on semantic sensor network using IETF YANG. Sensors

    18(2):629. https://doi.org/10.3390/s18020629

    17. Jindal A, Dua A, Kumar N, Das AK, Vasilakos AV, Rodrigues JJPC

    (2018) Providing healthcare-as-a-service using fuzzy rule based

    big data analytics in cloud computing. IEEE J Biomed Health Inf

    22(5):1605–1618. https://doi.org/10.1109/JBHI.2018.2799198

    18. Fu Y, Xiao N, Chen T, Wang J (2021) Fog-to-multicloud coop-

    erative eHealth data management with application-aware secure

    deduplication. IEEE Trans Depend Secure Comput. https://doi.org/

    10.1109/TDSC.2021.3086089

    19. Tange K, De Donno M, Fafoutis X, Dragoni N (2020) A system-

    atic survey of industrial internet of things security: requirements

    and fog computing opportunities. IEEE Commun Surv Tutor

    22(4):2489–2520. https://doi.org/10.1109/COMST.2020.3011208

    20. Martinez I, Haﬁd AS, Jarray A (2021) Design, resource manage-

    ment, and evaluation of fog computing systems: a survey. IEEE

    Internet Things J 8(4):2494–2516. https://doi.org/10.1109/JIOT.

    2020.3022699

    21. Mouradian C, Naboulsi D, Yangui S, Glitho RH, Morrow MJ,

    Polakos PA (2018) A comprehensive survey on fog computing:

    state-of-the-art and research challenges. IEEE Commun Surv Tutor

    20(1):416–464. https://doi.org/10.1109/COMST.2017.2771153

    22. Sadooghi I et al (2017) Understanding the performance and poten-

    tial of cloud computing for scientiﬁc applications. IEEE Trans

    Cloud Comput 5(2):358–371. https://doi.org/10.1109/TCC.2015.

    2404821

    23. Zhang J, Chen Z, Xu Z, Du M, Yang W, Guo L (2019) A distributed

    collaborative urban trafﬁc big data system based on cloud comput-

    ing. IEEE Intell Transp Syst Mag 11(4):37–47. https://doi.org/10.

    1109/MITS.2018.2876560

    24. Sun J et al (2019) An efﬁcient and scalable framework for process-

    ing remotely sensed big data in cloud computing environments.

    IEEE Trans Geosci Remote Sens 57(7):4294–4308. https://doi.org/

    10.1109/TGRS.2018.2890513

    25. Cao S et al (2019) Space-based cloud-fog computing architecture

    and its applications. In: IEEE World Congress on Services (SER-

    VICES), pp. 166–171. https://doi.org/10.1109/SERVICES.2019.

    00048

    26. Hu J, Chen C, Cai L, Khosravi MR, Pei Q, Wan S (2021)

    UAV-assisted vehicular edge computing for the 6G internet of

    vehicles: architecture, intelligence, and challenges. IEEE Commun

    Stand Mag 5(2):12–18. https://doi.org/10.1109/MCOMSTD.001.

    2000017

    27. Siriwardhana Y, Porambage P, Liyanage M, Ylianttila M (2021) A

    survey on mobile augmented reality with 5G mobile edge com-

    puting: architectures, applications, and technical aspects. IEEE

    Commun Surv Tutor 23(2):1160–1192. https://doi.org/10.1109/

    COMST.2021.3061981

    28. Ullah A, Yao X, Shaheen S, Ning H (2020) Advances in position

    based routing towards ITS enabled FoG-oriented VANET—a sur-

    vey. IEEE Trans Intell Transp Syst 21(2):828–840. https://doi.org/

    10.1109/TITS.2019.2893067

    29. Ullah A, Yaqoob S, Imran M, Ning H (2019) Emergency message

    dissemination schemes based on congestion avoidance in VANET

    and vehicular FoG computing. IEEE Access 7:1570–1585. https://

    doi.org/10.1109/ACCESS.2018.2887075

    30. Xu J, Ota K, Dong M (2020) Fast deployment of emergency fog ser-

    vice for disaster response. IEEE Network 34(6):100–105. https://

    doi.org/10.1109/MNET.001.1900671

    31. Abbas N, Zhang Y, Taherkordi A, Skeie T (2018) Mobile edge

    computing: a survey. IEEE Internet Things J 5(1):450–465. https://

    doi.org/10.1109/JIOT.2017.2750180

    32. Mukherjee M, Shu L, Wang D (2018) Survey of fog comput-

    ing: fundamental, network applications, and research challenges.

    IEEE Commun Surv Tutor 20(3):1826–1857. https://doi.org/10.

    1109/COMST.2018.2814571

    33. El-Sayed H et al (2018) Edge of things: the big picture on the

    integration of edge, IoT and the cloud in a distributed computing

    environment. IEEE Access 6:1706–1717. https://doi.org/10.1109/

    ACCESS.2017.2780087

    34. Wang H et al (2020) Architectural design alternatives based on

    cloud/edge/fog computing for connected vehicles. IEEE Commun

    Surv Tutor 22(4):2349–2377. https://doi.org/10.1109/COMST.

    2020.3020854

    35. Chamola V, Hassija V, Gupta S, Goyal A, Guizani M, Sikdar B

    (2020) Disaster and pandemic management using machine learn-

    ing: a survey. IEEE Internet Things J. https://doi.org/10.1109/JIOT.

    2020.3044966

    36. Feriani A, Refaey A, Hossain E (2020) Tracking pandemics:

    a MEC-enabled IoT ecosystem with learning capability. IEEE

    Internet of Things Mag 3(3):40–45. https://doi.org/10.1109/IOTM.

    0001.2000142

    37. Mehmood A, Natgunanathan I, Xiang Y, Poston H, Zhang Y (2018)

    Anonymous authentication scheme for smart cloud based health-

    care applications. IEEE Access 6:33552–33567. https://doi.org/10.

    1109/ACCESS.2018.2841972

    38. Hussein AF, Kumar NA, Burbano-Fernandez M, Ramírez-

    González G, Abdulhay E, De Albuquerque VHC (2018) An auto-

    mated remote cloud-based heart rate variability monitoring system.

    IEEE Access 6:77055–77064. https://doi.org/10.1109/ACCESS.

    2018.2831209

    39. Sood SK, Mahajan I (2019) IoT-fog-based healthcare framework

    to identify and control hypertension attack. IEEE Internet Things

    J 6(2):1920–1927. https://doi.org/10.1109/JIOT.2018.2871630

    40. Saha R, Kumar G, Rai MK, Thomas R, Lim S (2019) Privacy

    ensured e-Healthcare for fog-enhanced IoT based applications.

    IEEE Access 7:44536–44543. https://doi.org/10.1109/ACCESS.

    2019.2908664

    41. Awaisi KS, Hussain S, Ahmed M, Khan AA, Ahmed G (2020)

    Leveraging IoT and fog computing in healthcare systems. IEEE

    Internet of Things Mag 3(2):52–56. https://doi.org/10.1109/IOTM.

    0001.1900096

    123

    Complex & Intelligent Systems (2022) 8:3805–3815

    3815

    42. Wang X, Li Y (2020) Fog-assisted content-centric healthcare IoT.

    IEEE Internet of Things Mag 3(3):90–93. https://doi.org/10.1109/

    IOTM.0001.2000005

    43. Isa SBM, El-Gorashi TEH, Musa MOI, Elmirghani JMH (2020)

    Energy efﬁcient fog-based healthcare monitoring infrastruc-

    ture. IEEE Access 8:197828–197852. https://doi.org/10.1109/

    ACCESS.2020.3033555

    44. Tuli S, Basumatary N, Gill SS et al (2020) HealthFog: an ensem-

    ble deep learning based smart healthcare system for automatic

    diagnosis of heart diseases in integrated IoT and fog computing

    environments. Futur Gener Comput Syst 104:187–200. https://doi.

    org/10.1016/j.future.2019.10.043

    45. Zhang L, Cao B, Li Y, Peng M, Feng G (2021) A multi-stage

    stochastic programming-based ofﬂoading policy for fog enabled

    IoT-eHealth. IEEE J Sel Areas Commun 39(2):411–425. https://

    doi.org/10.1109/JSAC.2020.3020659

    46. Shynu PG, Menon VG, Kumar RL, Kadry S, Nam Y (2021)

    Blockchain-based secure healthcare application for diabetic-cardio

    disease prediction in fog computing. IEEE Access 9:45706–45720.

    https://doi.org/10.1109/ACCESS.2021.3065440

    47. Qiu Y, Zhang H, Long K (2021) Computation ofﬂoading and

    wireless resource management for healthcare monitoring in fog-

    computing based internet of medical things. IEEE Internet Things

    J. https://doi.org/10.1109/JIOT.2021.3066604

    48. Hussain A, Zafar K, Baig AR (2021) Fog-centric IoT based

    framework for healthcare monitoring, management and early warn-

    ing system. IEEE Access 9:74168–74179. https://doi.org/10.1109/

    ACCESS.2021.3080237

    49. Asghar A, Abbas A, Khattak HA, Khan SU (2021) Fog based

    architecture and load balancing methodology for health moni-

    toring systems. IEEE Access 9:96189–96200. https://doi.org/10.

    1109/ACCESS.2021.3094033

    50. Guo C, Tian P, Choo KKR (2021) Enabling privacy-assured fog-

    baseddataaggregationinE-healthcaresystems.IEEETransIndustr

    Inf 17(3):1948–1957. https://doi.org/10.1109/TII.2020.2995228

    51. Ramzanpoor Y, Hosseini Shirvani M, Golsorkhtabaramiri M

    (2021) Multi-objective fault-tolerant optimization algorithm for

    deployment of IoT applications on fog computing infrastructure.

    Complex Intell Syst. https://doi.org/10.1007/s40747-021-00368-z

    52. Jin W, Xu R, You T, Hong YG, Kim D (2020) Secure edge com-

    puting management based on independent microservices providers

    for gateway-centric IoT networks. IEEE Access 8:187975–187990.

    https://doi.org/10.1109/ACCESS.2020.3030297

    53. Aazam M, Zeadally S, Harras KA (2020) Health fog for smart

    healthcare. IEEE Consumer Electron Mag 9(2):96–102. https://doi.

    org/10.1109/MCE.2019.2953749

    54. Tang W, Zhang K, Zhang D, Ren J, Zhang Y, Shen X (2019) Fog-

    enabled smart health: toward cooperative and secure healthcare

    service provision. IEEE Commun Mag 57(5):42–48. https://doi.

    org/10.1109/MCOM.2019.1800234

    55. Aljanabi S, Chalechale A (2021) Improving IoT services using a

    hybrid fog-cloud ofﬂoading. IEEE Access 9:13775–13788. https://

    doi.org/10.1109/ACCESS.2021.3052458

    56. Yang Y, Wang K, Zhang G, Chen X, Luo X, Zhou M (2018)

    MEETS:maximalenergyefﬁcienttaskschedulinginhomogeneous

    fog networks. IEEE Internet Things J 5(5):4076–4087. https://doi.

    org/10.1109/JIOT.2018.2846644

    57. Arisdakessian S, Wahab OA, Mourad A, Otrok H, Kara N

    (2020) FoGMatch: an intelligent multi-criteria IoT-fog schedul-

    ing approach using game theory. IEEE/ACM Trans Networking

    28(4):1779–1789. https://doi.org/10.1109/TNET.2020.2994015

    58. Hassija V, Chamola V, Saxena V, Jain D, Goyal P, Sikdar B (2019)

    A survey on IoT security: application areas, security threats, and

    solution architectures. IEEE Access 7:82721–82743. https://doi.

    org/10.1109/ACCESS.2019.2924045

    59. Tao H, Bhuiyan MZA, Abdalla AN, Hassan MM, Zain JM, Haya-

    jneh T (2019) Secured data collection with hardware-based ciphers

    for IoT-based healthcare. IEEE Internet Things J 6(1):410–420.

    https://doi.org/10.1109/JIOT.2018.2854714

    60. Turgut D, Boloni L (2017) Value of information and cost of privacy

    in the Internet of Things. IEEE Commun Mag 55(9):62–66. https://

    doi.org/10.1109/MCOM.2017.1600625

    Publisher’s Note Springer Nature remains neutral with regard to juris-

    dictional claims in published maps and institutional afﬁliations.

    123

    '
  inline_citation: '>'
  journal: Complex & Intelligent Systems
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s40747-021-00582-9.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart healthcare IoT applications based on fog computing: architecture,
    applications and challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3013005
  analysis: '>'
  authors:
  - Xihai Zhang
  - Zhanyuan Cao
  - Dong Wei
  citation_count: 65
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Overview
    of Edge Computing in the Agricultural Internet of Things: Key Technologies, Applications,
    Challenges Publisher: IEEE Cite This PDF Xihai Zhang; Zhanyuan Cao; Wenbin Dong
    All Authors 68 Cites in Papers 5985 Full Text Views Open Access Comment(s) Under
    a Creative Commons License Abstract Authors Figures References Citations Keywords
    Metrics Abstract: The application of the Internet of Things in agricultural development
    usually occurs via a monitoring network that consists of a large number of sensor
    nodes, thus gradually transforming agriculture from a human-oriented and single-machine-centric
    production model to an information- and software-centric production model. Due
    to the large area coverage of agriculture and the variety of production objects,
    if all farmland perception information is gathered into the cloud server, the
    server will exert greater pressure on the network, which reduces the speed of
    response to event processing. This problem may be perfectly solved by the recent
    emergence of Edge computing, which can share the load of the cloud server and
    reduce the delay. Edge computing has prospects in agricultural applications, such
    as pest identification, safety traceability of agricultural products, unmanned
    agricultural machinery, agricultural technology promotion, and intelligent management.
    The application of the Agricultural Internet of Things integrates artificial intelligence,
    the Internet of Things, and blockchain and Virtual/Augmented Reality technologies.
    This paper primarily reviews the application of Edge computing in the Agricultural
    Internet of Things and investigates the combination of Edge computing and Artificial
    Intelligence, blockchain and Virtual/Augmented reality technology. The challenges
    of Edge computing task allocation, data processing, privacy protection and security,
    and service stability in agriculture are reviewed. The future development direction
    of Edge computing in the Agricultural Internet of Things is predicted. Three key
    technologies of agricultural IoT based on edge computing. Published in: IEEE Access
    ( Volume: 8) Page(s): 141748 - 141761 Date of Publication: 31 July 2020 Electronic
    ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3013005 Publisher: IEEE Funding Agency:
    Authors Figures References Citations Keywords Metrics IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09153160.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Overview of Edge Computing in the Agricultural Internet of Things: Key Technologies,
    Applications, Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/app9214479
  analysis: '>'
  authors:
  - Tiago M. Fernández‐Caramés
  - Paula Fraga‐Lamas
  citation_count: 94
  full_citation: '>'
  full_text: ">\napplied  \nsciences\nReview\nTowards Next Generation Teaching, Learning,\
    \ and\nContext-Aware Applications for Higher Education:\nA Review on Blockchain,\
    \ IoT, Fog and Edge\nComputing Enabled Smart Campuses and\nUniversities\nTiago\
    \ M. Fernández-Caramés 1,2,*\nand Paula Fraga-Lamas 1,2,*\n1\nDepartment of Computer\
    \ Engineering, Faculty of Computer Science, Universidade da Coruña,\n15071 A Coruña,\
    \ Spain\n2\nCentro de investigación CITIC, Universidade da Coruña, 15071 A Coruña,\
    \ Spain\n*\nCorrespondence: tiago.fernandez@udc.es (T.M.F.-C.); paula.fraga@udc.es\
    \ (P.F.-L.);\nTel.: +34-981167000 +6051 (P.F.-L.)\nReceived: 23 September 2019;\
    \ Accepted: 18 October 2019; Published: 23 October 2019\n\x01\x02\x03\x01\x04\x05\
    \x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract: Smart campuses and smart universities\
    \ make use of IT infrastructure that is similar to the\none required by smart\
    \ cities, which take advantage of Internet of Things (IoT) and cloud computing\n\
    solutions to monitor and actuate on the multiple systems of a university. As a\
    \ consequence, smart\ncampuses and universities need to provide connectivity to\
    \ IoT nodes and gateways, and deploy\narchitectures that allow for offering not\
    \ only a good communications range through the latest wireless\nand wired technologies,\
    \ but also reduced energy consumption to maximize IoT node battery life.\nIn addition,\
    \ such architectures have to consider the use of technologies like blockchain,\
    \ which are\nable to deliver accountability, transparency, cyber-security and\
    \ redundancy to the processes and\ndata managed by a university. This article\
    \ reviews the state of the start on the application of the\nlatest key technologies\
    \ for the development of smart campuses and universities. After deﬁning the\n\
    essential characteristics of a smart campus/university, the latest communications\
    \ architectures and\ntechnologies are detailed and the most relevant smart campus\
    \ deployments are analyzed. Moreover,\nthe use of blockchain in higher education\
    \ applications is studied. Therefore, this article provides\nuseful guidelines\
    \ to the university planners, IoT vendors and developers that will be responsible\
    \ for\ncreating the next generation of smart campuses and universities.\nKeywords:\
    \ IoT; blockchain; smart campus; smart university; teaching and learning; smart\
    \ cities;\nfog computing; edge computing; higher education; context-aware applications\n\
    1. Introduction\nSmart campuses and universities require an IT infrastructure\
    \ similar to the one needed by smart\ncities, smart buildings, or smart homes,\
    \ which make use of Internet of Things (IoT) solutions [1–4] to\ninteract with\
    \ the sensor and actuation systems of a university. Similarly to smart cities,\
    \ but in contrast\nto most smart homes and buildings, smart campuses must provide\
    \ long-distance communications,\nas many university campuses cover an area that\
    \ can reach thousands of square meters. For instance,\nthe campus of the authors\
    \ of this article (Campus of Elviña, University of A Coruña, Spain) occupies a\n\
    26,000 m2 area. Nonetheless, such an area can be considered small when compared\
    \ with the largest\nuniversity campuses in the world: Berry College (Floyd County,\
    \ Georgia, United States) covers 109.26\nkm2 of land [5], Duke University campuses\
    \ (Durham, North Carolina, United States) are deployed on\n37.83 km2 [6], and\
    \ the campus of Stanford University (Stanford, California, United States) occupies\
    \ 8180\nAppl. Sci. 2019, 9, 4479; doi:10.3390/app9214479\nwww.mdpi.com/journal/applsci\n\
    Appl. Sci. 2019, 9, 4479\n2 of 24\nacres (33 km2) [7]. These ﬁgures mean that\
    \ smart campuses should make use of speciﬁc long-distance\ncommunications infrastructure\
    \ that provides indoor and outdoor connectivity to the deployed IoT\ngateways,\
    \ sensors and actuators, while guaranteeing reduced energy consumption and thus\
    \ optimized\nIoT node battery life.\nA smart campus and university is managed\
    \ according to its strategic plan (a framework of its\nmain priorities and commitments).\
    \ As a result, universities devote ﬁnancial resources to implement a\nbroad range\
    \ of actions (e.g., related to digital transformation, services, applications,\
    \ events, facilities,\nhuman resources, governance, educational programs, or innovation)\
    \ that are fundamentally designed\nto meet their institutional objectives. The\
    \ strategic plan is driven by the university mission, vision, and\ncore values\
    \ (further detailed in Section 2). For instance, a number of universities around\
    \ the world\nhas committed to make tangible contributions to the United Nations\
    \ Sustainable Development Goals\n(SDGs). Note that the provided smart campus services\
    \ may be similar to the ones of a smart city,\nbut adapted to the needs of a university\
    \ (e.g., mobility/transport services, energy/grid monitoring,\nresource consumption\
    \ efﬁciency, user behavior monitoring, or guidance applications). However, there\n\
    are other services that are speciﬁc for a university environment, such as the\
    \ services for analyzing the\nbehavior of students in certain outdoor activities\
    \ or their attendance to lectures.\nIn addition, there are other relevant differences\
    \ with respect to smart cities regarding the\narchitectures and technologies that\
    \ can be applied to smart campuses and universities:\n•\nSmaller size. Although,\
    \ as it has been previously mentioned, there are really large campuses, most\n\
    of them are not as large as cities and, in fact, there are many urban universities\
    \ with buildings\ninside a city. Such a smaller size enables using certain communications\
    \ technologies that do not\nneed to reach very long distances. In addition, since\
    \ often less devices require to be deployed than\nin a smart city, architectures\
    \ can be less complex and need less routing layer devices, what usually\nreduces\
    \ response time and infrastructure deployment cost.\n•\nInfrastructure management.\
    \ Frequently, in a smart campus/university all buildings and related\ninfrastructure\
    \ are managed by the same organization (i.e., the university), often making it\
    \ easier\nto take certain measures to ease the deployment of the required infrastructure\
    \ communications\nand architecture than in a smart city. In contrast, in a city\
    \ most space is occupied with private\nbuildings that are managed by people that\
    \ do not work for the city council, so certain infrastructure\ndeployments can\
    \ be difﬁcult when having to deal with the different necessities of multiple people.\n\
    •\nHomogeneity.\nA smart university can enforce the use of certain technologies\
    \ and speciﬁc\narchitectures, while a smart city in general will have to deal\
    \ with a greater heterogeneity in\nsuch areas, which usually require complex solutions\
    \ to integrate the numerous previously existing\ncomputational systems.\nDue to\
    \ the previously mentioned differences, it is essential to study speciﬁcally\n\
    the most\nappropriate architectures and technologies for developing smart campuses\
    \ and universities.\nIn contrast to previous reviews and surveys on smart campuses/universities,\
    \ which are presented\nas systematic literature reviews [8,9], are focused on\
    \ deﬁning certain generic concepts/applications [10],\nor are centered on speciﬁc\
    \ technologies [11–16], this article provides a holistic review that analyzes\
    \ the\napplication of the latest key technologies and architectures for the development\
    \ of smart campuses\nand universities, including the following contributions,\
    \ which have not been found together in the\nprevious literature.\n•\nAfter deﬁning\
    \ the essential characteristics of a smart campus and a smart university, the\
    \ most\ncommon communications architectures are detailed together with their evolution:\
    \ from traditional\ncloud-based to the latest ones based on edge computing.\n\
    •\nThe application of blockchain to such architectures is studied as a tool to\
    \ create a distributed\nimmutable log that provides transparency and cybersecurity\
    \ to higher education and smart\ncampus applications.\nAppl. Sci. 2019, 9, 4479\n\
    3 of 24\n•\nThe characteristics of the most relevant smart campus deployments\
    \ and initiatives are analyzed.\n•\nThe latest smart campus deployments are enumerated\
    \ and multiple examples of their applications\nare described.\n•\nThe most recent\
    \ communications technologies for outdoor and indoor smart campus applications\n\
    are studied.\n•\nThe main challenges that will be faced by university planners,\
    \ IoT vendors, and developers\nare listed.\nThe rest of this paper is structured\
    \ as follows. Section 2 deﬁnes the concept of smart campus and\nits main features.\
    \ Section 3 details the latest communications architectures for smart campuses\
    \ and\nsmart universities. Section 4 analyzes the potential applications of blockchain\
    \ for deploying higher\neducation and smart campus applications. Section 5 describes\
    \ the most relevant smart campuses that\nhave been already deployed, emphasizing\
    \ their main applications and communications technologies.\nFinally, Section 6\
    \ indicates the main challenges for university planners, IoT vendors, and developers,\n\
    and Section 7 is devoted to the conclusions.\n2. Deﬁnitions of Smart Campus and\
    \ Smart University\nIt must be ﬁrst clariﬁed that the term “smart campus” has\
    \ been used in the past to refer to digital\nonline platforms that manage university\
    \ content [17,18] or to the set of techniques aimed at increasing\nuniversity\
    \ student smartness [19–21]. However, in this article, the concept of smart campus\
    \ refers\nto the hardware and software required to provide advanced intelligent\
    \ context-aware services and\napplications to university students and staff. In\
    \ addition, the term smart university refers to the\nhardware and software used\
    \ to develop tools to fulﬁll the key dimensions of the university mission:\n•\n\
    Improve the teaching, learning, and assessment processes involved in higher education.\n\
    •\nFoster research and innovation.\n•\nEmpower community-based knowledge transfer\
    \ and a shared vision among the various\nuniversity stakeholders (e.g., teachers,\
    \ students, administration, non-proﬁt organizations, research\ninstitutions, citizens,\
    \ industries, and governments).\nSuch characteristics make smart campus and universities\
    \ unique and enable differentiating from\nother concepts like smart cities. Nonetheless,\
    \ smart campuses/universities are similar to smart cities\nin the way they are\
    \ organized, which revolves around six smart areas [22]:\n•\nSmart governance.\
    \ It allows university staff and students to take part in different decisions\
    \ that\nneed to be made on a university or on a speciﬁc campus.\n•\nSmart people.\
    \ It is related to the engagement of the university users in teaching and learning\n\
    processes or their attendance to certain events.\n•\nSmart mobility. In the case\
    \ of a smart campus, this ﬁeld deals with the different issues related\nto the\
    \ available transport systems, which should be efﬁcient, green, safe, and may\
    \ provide\nintelligent services.\n•\nSmart environment. This ﬁeld is related to\
    \ smart solutions able to monitor, protect, and actuate on\nthe environment while\
    \ also managing the available resources in a sustainable way. For instance,\n\
    smart environment systems provide solutions for monitoring waste, water consumption,\
    \ or air\nquality. In addition, this ﬁeld is usually related to the deployment\
    \ of systems to control and\nmonitor the energy consumed, generated and distributed\
    \ throughout a campus.\n•\nSmart living. It is responsible for monitoring the\
    \ multiple living factors involved in the daily\ncampus activities, including\
    \ the ones related to health, safety or user behavior. Thus, smart living\nservices\
    \ can perform the following [23,24]:\n–\nEstimate room occupation and determine\
    \ student classroom attendance.\nAppl. Sci. 2019, 9, 4479\n4 of 24\n–\nControl\
    \ the access to classroom/lab equipment.\n–\nProvide teaching interaction services\
    \ and context-aware applications.\n•\nSmart economy. This smart ﬁeld deals with\
    \ the productivity of a campus in relation to concepts\nlike entrepreneurship\
    \ or innovation.\nAs a summary, Figure 1 illustrates the main ﬁelds and technologies\
    \ related to the deployment\nof a smart campus/university. The inner circle contains\
    \ the six previously mentioned smart ﬁelds.\nThe contiguous outer circle references\
    \ some of the most relevant technologies required to provide\nsolutions for such\
    \ six smart ﬁelds, including IoT, Augmented Reality (AR), Cyber-Physical Systems\n\
    (CPSs), or UAVs (Unmanned Aerial Vehicles). Note that some of such technologies\
    \ are the same as the\nones proposed by Industry 4.0 [25], so commercial and industrial\
    \ deployments are already available in\nother ﬁelds outside smart campuses [26,27].\
    \ Moreover, there are also vertical ﬁelds like cybersecurity\nthat affect several\
    \ of the cited technologies, since their contribution is key to avoid potential\
    \ issues [28].\nFinally, the most external circle of Figure 1 indicates speciﬁc\
    \ smart areas that are usually involved\nin the daily activities carried out in\
    \ a smart campus/university. For example, smart plug-and-play\nobjects [29] may\
    \ be involved in many university activities, whereas certain environmental sensors\
    \ are\nessential for actuating on smart buildings [30]. There are also other ﬁelds,\
    \ like smart agriculture, that\nmay be speciﬁc for smart campuses that include\
    \ in their premises areas for growing certain crops that\nmay require the use\
    \ of autonomous decision-support systems [31].\nRobots \nand UAVs\nBig Data\n\
    Cloud and Edge \nComputing\nAugmented\nand Virtual Reality\nSmart Logistics\n\
    Smart Mobility\nSmart Buildings\nSmart Grid\nSmart Healthcare\nSmart Tools\nSmart\
    \ Objects\nSmart Appliances\nSmart Agriculture\nBlockchain\nSmart Cities\nSmart\
    \ Campus\nSmart \nGovernance\nSmart \nPeople\nSmart Environment\nSmart Living\n\
    Smart \nEconomy\nIoT\nCPS\nIntegration\nSystems\nCybersecurity\nSmart Water \n\
    Management\nSmart Waste \nManagement\nSmart Parking\nSmart Traﬃc\nSafety and Secutity\n\
    Social Networks\nLocation Services\nGuidance and \nNavigation Systems\nSmart Learning\n\
    Figure 1. Main ﬁelds and technologies of a smart campus.\n3. Smart Campus/University\
    \ Communications Architectures\nSeveral authors have previously proposed different\
    \ smart campus architectures, but it\ncan be stated that, in general, they can\
    \ be classiﬁed as Service-Oriented Architecture (SOA)\nAppl. Sci. 2019, 9, 4479\n\
    5 of 24\narchitectures [32,33] that revolve around two main paradigms (IoT and\
    \ cloud computing [34]), which\nare usually helped by Big Data when processing\
    \ and analyzing the collected information.\nAn example of smart campus architecture\
    \ based on cloud computing is presented in [35], where\nthe authors deployed a\
    \ smart campus platform in three months by using Commercial Off-The-Shelf\n(COTS)\
    \ hardware and Microsoft Azure cloud services. With respect to IoT, its use has\
    \ been proposed\nfor easing the deployment of architectures that allow for implementing\
    \ learning, access control, or\nresource water management applications [10,36].\n\
    Some researchers have also proposed alternative paradigms for creating smart campuses.\n\
    For instance, the authors of [37] propose an opportunistic communications architecture\
    \ that allows for\nsharing data through infrastructure-less services. The main\
    \ novelty behind the proposed architecture\nis the concept of Floating Content\
    \ node, which is a computing device that produces data that can be\nshared among\
    \ users located in nearby areas. Similar architectures have been proposed, but\
    \ they have\nbeen focused on improving certain aspects like security [38].\nSome\
    \ of the latest smart campus architectures have suggested the use of the different\
    \ types of\nthe edge computing paradigm (e.g., mobile edge computing or fog computing),\
    \ which have already\nbeen successfully applied to other smart ﬁelds [39]. The\
    \ main advantage of edge computing is its\nability to ofﬂoad part of the processing\
    \ tasks from the cloud, delegating such tasks to the so-called\nedge devices,\
    \ which are physically located close to the IoT nodes. Thanks to this approach,\
    \ the amount\nof communications transactions with the cloud and latency response\
    \ are reduced, while also being\nable to provide location-aware services [40,41].\n\
    For example, the authors of [42] make use of edge computing devices to improve\
    \ their smart\ncampus architecture. Such devices are focused on delivering services\
    \ related to content caching and\nbandwidth allocation. A similar approach is\
    \ presented in [43], where the researchers provide smart\ncampus services through\
    \ edge computing devices embedded into street lights. In the case of the work\n\
    detailed in [44], the authors propose a smart campus platform called WiCloud that\
    \ is based in mobile\nedge computing, which allows for accessing the platform\
    \ servers through mobile phone base stations\nor wireless access points. Finally,\
    \ it is worth mentioning the smart campus system presented in [45],\nwhich makes\
    \ use of fog computing nodes to enhance user experience.\nTo clarify the previously\
    \ mentioned architectures, Figure 2 illustrates their evolution. In this\nﬁgure,\
    \ at the top, the traditional cloud-based architecture is depicted, which is composed\
    \ by two main\nlayers:\n•\nNode layer: it consists of multiple IoT nodes and computing\
    \ devices, whose data are collected\nthrough IoT gateways and routers in order\
    \ to send them to the cloud where they are stored.\n•\nCloud layer: it is essentially\
    \ a central server or a group of servers where the main processing tasks\nare\
    \ carried out. In addition, the cloud allows for interacting with third parties,\
    \ it presents the\nstored data to remote users and enables interconnecting the\
    \ multiple IoT networks that may be\nscattered through different physical locations.\n\
    The architecture depicted at the bottom of Figure 2 on the left represents a fog\
    \ computing\narchitecture. In this case, besides the node layer and the cloud,\
    \ there is a third layer (the fog layer),\nwhich is made of fog devices. Such\
    \ devices provide different local fog services to the IoT nodes and\nare also\
    \ able to exchange data among them to collaborate in certain tasks. A fog computing\
    \ device is\nusually implemented on a Single-Board Computer (SBC), which is essentially\
    \ a reduced-size low-cost\ncomputer (e.g., Raspberry Pi and Orange Pi PC) that\
    \ can be easily deployed in the campus facilities.\nFinally, the third and more\
    \ evolved architecture of Figure 2 is the one at the bottom, on the right,\nwhich\
    \ illustrates a typical edge computing smart campus architecture. Such an architecture\
    \ is basically\nan enhanced version of the previously mentioned fog computing-based\
    \ architecture, but through its\nedge computing layer it provides more computing\
    \ power, thanks to the use of cloudlets. A cloudlet is\noften a high-end computer\
    \ that is able to perform compute-intensive tasks, like the ones related to\n\
    complex data processing or image rendering.\nAppl. Sci. 2019, 9, 4479\n6 of 24\n\
    Cloud\nRemote Users\nOther IoT \nNetworks\nThird-Party \nServices\nNode Layer\n\
    IoT Node Network\nRouter\nRouter\nRouter\nRouter\nIoT Gateway\nSensors\nActuators\n\
    Cloud-Based Architecture\nFog Computing-Based Architecture\nOther Gateways\nSBC\n\
    SBC\n…\nSBC\nMain Gateway\nLocal Gateway\nSBC\nFog Services\nFog Layer\nEdge Computing\
    \ Layer\nOther Gateways\nSBC\nSBC\n…\nSBC\nMain Gateway\nLocal Gateway\nSBC\n\
    Fog Services\nCloudlet\nEdge Computing-Based Architecture\nWiFi/Ethernet \nRouter\n\
    WiFi/Ethernet Network\nSensors\nActuators\nCampus User Devices\nNode Layer\nIoT\
    \ Node Network\nRouter\nRouter\nRouter\nRouter\nSensors\nActuators\nWiFi/Ethernet\
    \ Network\nSensors\nActuators\nCampus User Devices\nNode Layer\nIoT Node Network\n\
    Router\nRouter\nRouter\nRouter\nSensors\nActuators\nWiFi/Ethernet Network\nSensors\n\
    Actuators\nCampus User Devices\nFigure 2. Smart campus architecture evolution.\n\
    4. Blockchain for Smart Campuses and Universities\nBoth academia [11–13] and public\
    \ entities like the European Commission [46] have recently\nconsidered the improvement\
    \ of the architectures described in the previous section by using Distributed\n\
    Ledger Technologies (DLTs) like blockchain. Such a technology can be used for\
    \ implementing higher\neducation and smart campus applications, due to their ability\
    \ to provide data exchanges among entities\nthat do not necessarily trust each\
    \ other [47]. In addition, the use of blockchain enhance smart campus\napplications\
    \ that need transparency, data immutability, privacy, and security. Furthermore,\
    \ blockchain\nallows for developing Decentralized Apps (DApps) based on Peer-to-Peer\
    \ (P2P) transactions whose\nprocesses can be automated through the use of smart\
    \ contracts, which can execute pieces of code in an\nautonomous way [48].\nNowadays,\
    \ there are many blockchain platforms, like Ethereum [49], Hyperledger Fabric\
    \ [50],\nor the popular Bitcoin [51], that can be used in multiple practical applications\
    \ [52–55]. However, it is\nimportant to emphasize that blockchain is not the best\
    \ technology for every application that needs to\nperform trustworthy data exchanges.\
    \ For example, in many cases where smart campus applications\nare deployed in\
    \ a private network, a traditional database is powerful enough and usually provides\n\
    faster transactions than a blockchain. Therefore, to decide whether a blockchain\
    \ is necessary, smart\ncampus developers may use a decision framework [56] and,\
    \ thus, detect certain necessary features,\nlike the need for decentralization,\
    \ transaction transparency, cybersecurity (e.g., data redundancy and\nprotection\
    \ against Denial-of-Service (DoS) attacks), or the lack of trust among entities\
    \ (including\nrespect to government agencies and banks).\nDue to the previously\
    \ mentioned beneﬁts, different authors have proposed the use of blockchain\nand\
    \ other DLTs for developing applications for smart campuses and universities.\n\
    Speciﬁcally,\nAppl. Sci. 2019, 9, 4479\n7 of 24\nblockchain has been suggested\
    \ for guaranteeing education certiﬁcate authenticity [57,58], managing\ndigital\
    \ copyright information [59], verifying learning outcomes [60,61], or enhancing\
    \ e-learning\ninteraction [62]. More potential smart campus applications and a\
    \ deeper analysis on their characteristics\ncan be found in [11–13,46].\n5. Analysis\
    \ of Recent Smart Campus and University Deployments\n5.1. Relevant Deployments\n\
    In the literature, there only a few papers that present descriptions on actual\
    \ smart campuses.\nAn example of such a paper is [63], where the authors detail\
    \ the development of the smart campus of\nToulouse III Paul Sabatier university\
    \ (France). Speciﬁcally, the smart campus is called neOCampus and\ninvolves multiple\
    \ projects able to run on an open data platform that, for instance, can use collaborative\n\
    WiFi. Similarly, in [64], the authors describe a smart campus based on cloud computing,\
    \ SOA, and\nIoT that has been deployed in the Moncloa Campus of International\
    \ Excellence of the Universidad\nPolitécnica de Madrid (Spain). In the mentioned\
    \ article, two applications are detailed: one for\nmonitoring diverse environmental\
    \ parameters, and another for determining people ﬂows inside the\ncampus. A similar\
    \ smart campus is described in [65], where the authors propose an IoT and cloud\n\
    computing based architecture for the Wuhan University of Technology smart campus\
    \ (China) that is\naimed at supporting diverse applications.\nIoT is also key\
    \ in the West Texas A&M University smart campus [66], which is deployed in a\n\
    176-acre land that includes 42 different buildings. Such a smart campus is focused\
    \ on providing\nIoT-related and secure services, and has tested systems for smart\
    \ parking or environmental monitoring.\nAnother interesting work can be found\
    \ in [33], where it is detailed the Birmingham City University\nsmart campus (United\
    \ Kingdom). The aim of the proposed smart campus is essentially to create a\n\
    scalable and ﬂexible SOA architecture where service integration and orchestration\
    \ can be carried out\neasily through the use of an Enterprise Service Bus (ESB).\n\
    Finally, it is worth mentioning the work presented in [67], where it is described\
    \ from a theoretical\npoint of view the smart campus of Sapienza (Rome, Italy),\
    \ including the author’s approach for\nproviding services in a scalable way.\n\
    As a summary, Table 1 shows the main characteristics of the most relevant smart\
    \ campus\ndeployments, including details on their location, size, used hardware,\
    \ and their explicit support\nfor advanced architectures (fog and edge computing\
    \ enabled architectures) and blockchain-enabled\napplications.\nAppl. Sci. 2019,\
    \ 9, 4479\n8 of 24\nTable 1. Characteristics of the most relevant smart campuses\
    \ initiatives.\nReference\nUniversity\nSmart\nCampus\nLocation\nSize\nSensors\
    \ and\nActuators\nIoT\nHardware\nPlatform\nCloud Platform\nApplications\nFog/Edge\n\
    Computing\nSupport\nBlockchain\nSupport\n[32]\nNorthwestern Polytechnical\nUniversity\n\
    -\nXi’an (China)\n-\nBuilt-in smartphone\nsensors\n-\n-\nWhere2Study, I-Sensing\n\
    (participatory sensing),\nBlueShare (media sharing\napplication)\nNo\nNo\n[33]\n\
    Birmingham City University\n-\nBirmingham (United\nKingdom)\nTwo campuses of\n\
    roughly 18,000\nand 24,000 m2\n-\n-\nMicrosoft’s BizTalk\nServer as ESB\nBusiness\
    \ systems, smart\nbuildings\nNo\nNo\n[35]\nUniversity of Washington\nBothell\n\
    School of\nSTEM\nBothell (Washington,\nUnited States)\n-\nAccelerometer,\nmagnetometer,\n\
    gyroscope, light,\nhumidity object and\nambient temperature,\nmicrophone\nArduino\n\
    Amazon AWS and\nMicrosoft Azure\n-\nNo\nNo\n[36]\nUniversity of Business and\n\
    Technology\nQA Higher\nEducation\n(QAHE)\nBirmingham (United\nKingdom)\n-\nNFC\
    \ and RFID tags,\nQR codes\nIoT Wearables\nCisco Physical Access\nControl technology\n\
    Learning applications, access\ncontrol systems\nNo\nNo\n[37]\n-\nIMDEA\nNetworks\n\
    Institute\nLeganés (Madrid,\nSpain)\n-\n-\n-\n-\nMobility modelling\nNo, but it\
    \ is\nproposed the\nuse of a\nsimilar\nparadigm\n(opportunistic\nFloating\nContent)\n\
    No\n[38]\nUniversity of Oradea\n-\nOradea (Romania)\n-\nRFID labels, mobile\n\
    devices, sensor\nequipment\n-\nPrivate/public cloud\nwith steganography\nNo (it\
    \ only describes the\narchitecture design)\nNo\nNo\n[64]\nUniversidad Politécnica\
    \ de\nMadrid\nSmart CEI\nMoncloa\nMadrid (Spain)\n5.5 km2, 144\nbuildings\nSmart\
    \ Citizen Kit\nRaspberry Pi,\nArduino\n-\nSmart emergency\nmanagement and trafﬁc\n\
    restriction\nNo\nNo\n[65]\nWuhan University of\nTechnology\n-\nWuhan (China)\n\
    -\nRFID tags, cameras\nand diverse sensors\n-\n-\nSmart learning and living\n\
    No\nNo\n[66]\nWest Texas A&M University\n-\nCollege Station\n(Texas, United States)\n\
    0.71 km2 with 42\nbuildings and a\n9.68 km2 working\nranch\nTemperature, air\n\
    pressure, relative\nhumidity and partial\nconcentrations\nArduino\n-\nConnect\
    \ cattle across the\nfeed yard; environmental\nmonitoring; water irrigation;\n\
    smart parking\nNo\nNo\n[67]\nUniversity of Rome\nSapienza\nsmart campus\nRome\
    \ (Italy)\n-\n-\n-\nN/A (it is only a\ntheoretical proposal)\nSmart living, economy,\n\
    energy, environment, and\nmobility applications\nNo\nNo\nAppl. Sci. 2019, 9, 4479\n\
    9 of 24\nTable 1. Cont.\nReference\nUniversity\nSmart\nCampus\nLocation\nSize\n\
    Sensors and\nActuators\nIoT\nHardware\nPlatform\nCloud Platform\nApplications\n\
    Fog/Edge\nComputing\nSupport\nBlockchain\nSupport\n[68]\nSoochow University\n\
    Wisdom\nCampus\nSuzhou (China)\n16.42 km2\n-\n-\n-\nAutomatic vehicle access,\n\
    parking guidance, bus\ntracking, and bicycle rental\nNo\nNo\n[69]\n-\nIndian\n\
    Institute of\nScience\ncampus\nBangalore (India)\n2 km × 1 km\nWater level sensors\n\
    TI\nMSP432P401R\nmicrocontroller\n-\nWater management\nNo\nNo\n[70]\nUniversity\
    \ of A Coruña\nCampus de\nElviña\nA Coruña (Spain)\n26,000 m2\n-\nIoT nodes\n\
    based on\nRisingHF\nRHF76-052\nmodules and\nIoT gateways\nbased on\nRaspberry\
    \ Pi 3\n-\nOutdoor applications\n(Crowdsensing, irrigation,\nand trafﬁc monitoring)\n\
    Yes\nNo\nAppl. Sci. 2019, 9, 4479\n10 of 24\n5.2. Smart Campus and University\
    \ Applications\nBoth indoor and outdoor applications can be deployed in a smart\
    \ campus/university [8], but such\nsmart applications differ in their requirements.\n\
    The most relevant difference is that, in indoor\nenvironments, IoT nodes can be\
    \ usually powered through the electrical grid and can make use\nof ﬁxed communications\
    \ infrastructure (e.g., Ethernet, WiFi access points). In contrast, outdoors,\
    \ IoT\nnodes usually depend on batteries and need to exchange data at relatively\
    \ long distances (at least\nseveral hundred meters, up to 2 kilometers). The following\
    \ are some of the most relevant applications\nfor both scenarios:\n•\nSmart mobility\
    \ and intelligent transport services. This kind of applications require outdoor\n\
    communications coverage from traditional Wireless Local Area Networks (WLANs)\
    \ or speciﬁc\nvehicular networks [71,72].\nFor instance, researchers of Soochow\
    \ University proposed to\nuse in their campus an automatic gate access system\
    \ and diverse services for smart parking,\nbus positioning or for renting bicycles\
    \ [68]. Similar services have been suggested by other\nuniversities for providing\
    \ a smart parking service [73], electric mobility [74,75], smart electric\ncharging\
    \ [76], the use of autonomous vehicles [77], or for locating the campus buses\
    \ [78,79].\n•\nSmart energy and smart grid monitoring. These applications are\
    \ used for controlling and\nmonitoring the generation, distribution, and consumption\
    \ of the campus energy sources (e.g.,\nphotovoltaic systems or wind generators).\
    \ Speciﬁcally, in the last years, multiple authors focused\ntheir research on\
    \ the study of smart campus microgrids [80–82], smart grids [83,84], and smart\n\
    energy systems [85,86].\n•\nResource consumption efﬁciency. The use of the resources\
    \ of a campus can be monitored\nthrough speciﬁc systems for garbage collection\
    \ [87], water management [69], power consumption\nmonitoring [88,89], and other\
    \ solutions aimed at preserving sustainability [16].\n•\nInfrastructure and building\
    \ control and monitoring. The state of certain buildings and assets that\nare\
    \ scattered throughout the campus can be monitored and controlled remotely. For\
    \ instance,\nsolutions have been suggested for monitoring campus greenhouses [90],\
    \ for controlling the\nHeating, Ventilation, and Air Conditioning (HVAC) systems\
    \ of the campus buildings [91] or for\nautomating critical infrastructure supervision\
    \ through Unmanned Aerial Vehicles (UAVs) [92].\n•\nGreen area monitoring. The\
    \ health of the trees of campus can be monitored remotely through IoT\nsensor-based\
    \ systems [93].\n•\nUser pattern and behavior monitoring. The smart campus services\
    \ and infrastructure can be\noptimized thanks to the analysis of the user patterns\
    \ and behaviors. For instance, mobility\npatterns, user activities, or social\
    \ interactions can be determined through smartphone apps [94,95],\nby monitoring\
    \ WiFi communications [96,97] or by collecting data from smartphone sensors [98],\n\
    wearables, or even garments [99].\n•\nGuidance and context-aware applications.\
    \ These applications often depend on sensors and\nactuators spread across the\
    \ campus and can help people by giving useful contextual information\nand indications\
    \ on how to reach their destination. For instance, there is interesting research\
    \ on\nguidance systems to aid hearing and visually impaired people [100] or for\
    \ navigating the campus\npaths [101,102]. There are also augmented reality applications\
    \ that provide relevant contextual\ninformation on the campus or that are able\
    \ to guide the users through it [103–105].\n•\nClassroom attendance. Different\
    \ student monitoring systems have been proposed, which make\nuse of IoT and artiﬁcial\
    \ intelligence to control student classroom attendance [106] and their access\n\
    to sport facilities [107].\n•\nRemote health monitoring. Some of the latest smart\
    \ campus applications are aimed at monitoring\nthe health of certain campus users\
    \ in real-time [108] or at measuring student stress [109] and\nhealth consciousness\
    \ [110].\nAppl. Sci. 2019, 9, 4479\n11 of 24\n•\nSmart card applications. Although\
    \ smart cards have been used for a long time by universities [111],\nthey can\
    \ still provide useful services for a smart campus, like information retrieval,\
    \ mobile\npayments, library usage, access control, or e-learning [112–114].\n\
    Instead of a smart card,\nthe latest developments suggested the use of the Near-Field\
    \ Communications (NFC) interface of\na smartphone to provide the mentioned smart\
    \ campus applications [115]. Due to the multiple\npotential applications of smart\
    \ cards, some authors also proposed to mine the data collected from\nthe student\
    \ transactions to infer their behavior [116,117].\n•\nTeaching and Learning applications.\
    \ The technologies embedded into a smart campus/university\ncan also help students\
    \ to learn through their mobile phones [118] or have an ubiquitous\nuser-centered\
    \ personalized learning and training experience with advanced analytics [119,120].\n\
    These technologies also allow teachers to make use of speciﬁc learning services\
    \ (e.g., online\nprogramming contests [121]), sophisticated online teaching platforms\
    \ [122], and to implement\nnovel teaching paradigms like Flipped Classroom [123]\
    \ or ampliﬁcation [124].\n•\nResearch and innovation activities.\nSmart campus/university\
    \ technologies can be used to\nencourage collaboration and cooperation among people\
    \ (e.g., international networks of living\nlabs). For instance, crowdsourcing\
    \ can be used to collect data of people with different proﬁles\n(e.g., students,\
    \ teachers, researchers, and administrative staff) and create large-scale datasets\
    \ for\nfurther research and novel applications [125].\n•\nCommunity-based knowledge\
    \ transfer applications. Smart campus and university technologies\ncan be explored\
    \ to beneﬁt the global community [126], either by increasing their awareness about\n\
    sustainability issues [127] or by making citizens actively involved as central\
    \ players of smart\nenvironments [128].\n•\nLocation-aware applications. In many\
    \ situations the information given to smart campus users\ndepends on their location.\
    \ Such a location-aware data may include information on content,\nactivities,\
    \ projects, services, tools, knowledge, or events [129–132].\n•\nSecurity services.\n\
    Smart campus managers can make use of the multiple sensors and\nrecording devices\
    \ to monitor the campus status and increase physical security through video\n\
    surveillance [133] and location-aware applications [134]. In addition, it is essential\
    \ to protect the\nprivacy of campus user data when making use of wireless communications\
    \ [135] and preventing\ncyber-attacks [66].\n5.3. Communications Technologies\n\
    In the past, researchers have used diverse technologies for connecting remote\
    \ outdoor IoT nodes\nwith smart campus platforms. Note that such technologies\
    \ may differ a great deal from one scenario\nto another, as the distance to be\
    \ covered and the kind obstacles found in the environment (especially,\nmetallic\
    \ objects [136]), severely condition signal propagation.\nFor instance, in [35],\
    \ the authors propose the design of an IoT-based smart campus that makes\nuse\
    \ of BLE and ZigBee for providing short and medium-range communications. Nonetheless,\
    \ note\nthat ZigBee nodes can act as relays in a ZigBee mesh, so that the exchanged\
    \ information can reach long\ndistances [137].\nWiFi (i.e., the IEEE 802.11 a/b/g/n/ac\
    \ standards) is another popular technology that has already\nbeen suggested for\
    \ providing indoor connectivity for smart campuses [64].\nBluetooth beacons\n\
    can be also used in smart campus applications [138,139], but they usually are\
    \ restricted to indoor\nenvironments, as their outdoor use requires the deployment\
    \ of dense networks whose management is\ncomplicated [140].\nAppl. Sci. 2019,\
    \ 9, 4479\n12 of 24\nDue to the popularity of mobile phones, the main cell phone\
    \ communications technologies (i.e.,\n2G/3G/4G) have been suggested for providing\
    \ smart campus services [141,142]. 5G technologies are\nstill being deployed worldwide,\
    \ but their use has already been proposed due to their ability to provide\nfast\
    \ communications and reduce response latency in smart campus applications [122].\n\
    Despite the good perspectives of 5G for the next decade, nowadays, Low-Power Wide\
    \ Area\nNetwork (LPWAN) technologies are arguably one of the best alternatives\
    \ for smart campus applications\nthat require low-power and long-distance IoT\
    \ communications [143]. Some of the most popular\nLPWAN technologies are SigFox\
    \ [144], LoRaWAN [145], and NB-IoT [146], existing other emerging\ntechnologies\
    \ like Ingenu Random Phase Multiple Access (RPMA) [147], Weightless-P [148], or\n\
    NB-Fi [149].\nLoRaWAN deﬁnes the communication protocol and the system architecture\
    \ for the network\nand uses LoRa as the physical layer. Although there are several\
    \ recent works on the application of\nLoRa/LoRaWAN to multiple scenarios [150],\
    \ only a few of them are focused on the deployment of\nsmart campuses services\
    \ [66,70,151–153]. For example, the authors of [152] analyze the indoor and\n\
    outdoor performance of LoRaWAN on a French smart campus. In addition, other researchers\
    \ [153]\nproposed a smart campus air quality system whose communications were\
    \ carried out by LoRaWAN\nnodes. Another example can be found in [70], where the\
    \ authors make use of a radio planning\nsimulator to determine the optimal location\
    \ of LoRaWaN nodes that provide smart campus services in\noutdoor applications.\n\
    There are also short-distance communications technologies that can be useful in\
    \ smart campus\napplications. For instance, ANT+ transceivers are often embedded\
    \ into chest straps to monitor\nperformance and health in sports. Another example\
    \ of popular short-distance communications\ntechnology is Radio Frequency IDentiﬁcation\
    \ (RFID), which is commonly used in university access\ncontrol and payment systems\
    \ [28].\nTable 2 summarizes the main characteristics of the latest and most popular\
    \ communications\ntechnologies for smart campus applications.\nMoreover, Table\
    \ 3 compares the communications\ntechnologies of the most relevant smart campus\
    \ solutions. Such a Table also indicates whether the\nprovided references detail\
    \ the network planning of the proposed solution and, as it can be observed,\n\
    only a couple of works give details about it.\nAppl. Sci. 2019, 9, 4479\n13 of\
    \ 24\nTable 2. Main characteristics of the latest and most popular communications\
    \ technologies for smart campus applications.\nTechnology\nFrequency Band\nTypical\n\
    Maximum\nRange\nData rate\nMain Features\nTypical Smart Campus Applications\n\
    ANT+\n2.4 GHz\n30 m\n20 kbit/s\nVery low power consumption, up to 65,533 nodes\n\
    Health and sport performance monitoring\nBluetooth 5 LE\n2.4 GHz\n<400 m\n1360\
    \ kbit/s\nLow power (batteries last from days to weeks)\nUser ﬂow monitoring,\
    \ guidance,\npositioning, telemetry\nDASH7/ISO 18000-7\n315–915 MHz\n<10 km\n\
    27.8 kbit/s\nVery low power (batteries last from months to years)\nItem, vehicle\
    \ and user tracking\nHF RFID\n3–30 MHz (13.56 MHz)\na few meters\n<640 kbit/s\n\
    Low cost, in general it needs no batteries\nUser and asset identiﬁcation for access\n\
    control and payments\nIQRF\n868 MHz\nhundreds of\nmeters\n100 kbit/s\nLow power,\
    \ long range\nIoT applications\nLF RFID\n30–300 KHz (125 KHz)\n<10 cm\n<640 kbit/s\n\
    Low cost, it needs no batteries\nAccess control systems, asset tracking\nNB-IoT\n\
    LTE frequencies\n<35 km\n<250 kbit/s\nLow power, long range\nIoT applications\n\
    NFC\n13.56 MHz\n<20 cm\n424 kbit/s\nLow cost, it needs no batteries\nUser access\
    \ control and payments\nLoRa, LoRaWAN\nDifferent Industrial Scientiﬁc\nMedical\
    \ bands\nkilometers\n0.25−50 kbit/s\nLow consumption, long range\nIoT applications\n\
    SigFox\n868–902 MHz\n50 km\n100 kbit/s\nIt makes uses of private cellular networks\n\
    IoT and M2M applications\nUHF RFID\n30 MHz–3 GHz\ntens of meters\n<640 kbit/s\n\
    Low cost, it usually needs no batteries\nAsset tracking, logistics, vehicle access\n\
    control\nWeightless-P\nLicense-exempt sub-GHz\n15 Km\n100 kbit/s\nLow power\n\
    IoT applications\nWi-Fi (IEEE\n802.11b/g/n/ac)\n2.4–5 GHz\n<150 m\nup to 433 Mbit/s\
    \ (one\nstream)\nHigh power (batteries usually last hours), high-speed,\nubiquity\n\
    Internet broadband access\nWi-Fi HaLow/IEEE 802.11ah\n868–915 MHz\n<1 km\n100\
    \ kbit/s per\nchannel\nLow power\nIoT applications\nWirelessHART\n2.4 GHz\n<10\
    \ m\n250 kbit/s\nCompatibility with the HART protocol\nIoT sensing applications\n\
    ZigBee\n868–915 MHz, 2.4 GHz\n<100 m\n20−250 kbit/s\nVery low power (batteries\
    \ last months to years), up to\n65,536 nodes\nWireless sensor network applications,\n\
    home automation and smart building\napplications\nAppl. Sci. 2019, 9, 4479\n14\
    \ of 24\nTable 3. Communications technologies of the most relevant smart campuses\
    \ solutions.\nReference\nSmart Campus\nCommunications\nTechnologies\nNetwork Planning\n\
    [32]\nNorthwestern Polytechnical\nUniversity\nWi-Fi, Bluetooth\nNo\n[33]\nBirmingham\
    \ City University\n-\nNo\n[35]\nUniversity of Washington\nBothell\nZigbee, BLE,\n\
    6LowPAN\nNo\n[36]\nUniversity of Business and\nTechnology of Birmingham\n-\nNo\n\
    [10]\nTennessee State University\n-\nNo\n[37]\nIMDEA Networks Institute\nWi-Fi,\
    \ Bluetooth\nNo\n[38]\nUniversity of Oradea\n4G, Zigbee\nNo\n[43]\n-\nMESH Wi-Fi\n\
    No\n[44]\n-\nWi-Fi\nNo\n[45]\n-\n3G/4G/5G, Wi-Fi\nNo\n[64]\nSmart CEI Moncloa\n\
    Wi-Fi, Ethernet\nNo\n[65]\nWuhan University of\nTechnology\nCable, wireless,\n\
    3G/4G\nNo\n[66]\nWest Texas A&M University\nLoRAWAN,\n4G/LTE\nNo\n[67]\nSapienza\
    \ smart campus\n-\nNo\n[68]\nWisdom Campus, Soochow\nUniversity\n-\nNo\n[69]\n\
    Indian Institute of Science\nsub-GHz radios\nNo\n[70]\nUniversity of A Coruña\n\
    LoRaWAN\nYes (based on 3D-ray launching)\n[154]\nUniversitas Indonesia\n800 MHz,\
    \ 2.3 GHz,\nand 38 GHz\nBased on ray-tracing and\nphysical optic near-to-far ﬁeld\n\
    6. Future Challenges\nDespite the evolution of smart campuses and universities\
    \ in the last years thanks to the\ntechnological advances achieved in ﬁelds like\
    \ IoT, cloud computing, and certain communications\nparadigms, future university\
    \ planners, IoT vendors, and developers will still face relevant challenges\n\
    in the following areas.\n•\nScalability. As a campus can cover a large area, where\
    \ a large number of users can request smart\nservices, it is essential for applications\
    \ to be easily scalable in order to adapt its performance to\nthe number of simultaneous\
    \ users.\n•\nService ﬂexibility. A smart campus/university should be able to provide\
    \ multiple services, which\nmay differ depending on the physical area where they\
    \ are provided (e.g., depending on the\nfaculty), on the speciﬁc user that request\
    \ them (e.g., access privileges may differ between a student\nand a professor),\
    \ or on the speciﬁc goal (e.g., advancing to more effective teaching and learning\n\
    services may differ substantially from the design of smart environment applications).\n\
    •\nLong-distance low-power communications. Since campuses usually cover areas\
    \ of thousands\nof square meters that often involve monitoring outdoor smart IoT\
    \ objects (e.g., street lights,\nirrigation systems), it is key to consider in\
    \ the smart campus architecture the use of long-distance\nAppl. Sci. 2019, 9,\
    \ 4479\n15 of 24\nwireless communications technologies whose energy consumption\
    \ should be as low as possible\nto maximize IoT node battery life.\n•\nNew communications\
    \ technologies. Although this article has analyzed the currently most relevant\n\
    communications technologies, smart campus designers should be aware of the latest\
    \ advances on\ncommunications in order to include them in the designed architecture.\
    \ For instance, some authors\nare already suggesting potential applications for\
    \ 6G technologies [155,156].\n•\nBlockchain integration. DLTs like blockchain\
    \ can be really useful to guarantee operational\nefﬁciency, data transparency,\
    \ authenticity, and security. This aspect is a key enabler to develop\nnovel decentralized\
    \ smart applications (i.e., DApps) and to leverage new artiﬁcial intelligence\n\
    paradigms such as big data, machine learning, or deep learning. These paradigms\
    \ need to rely\non trustworthy datasets in order to reach their full potential\
    \ and produce new data model-based\napplications.\nNevertheless, smart campus\
    \ designers have to use blockchain with caution,\nconsidering their advantages\
    \ and disadvantages. In addition, the incorrect use of smart contracts\ncan be\
    \ a problem, since they are able to trigger certain automatic behaviors that can\
    \ have serious\neconomic or personal consequences.\n•\nLack of smart campus standards\
    \ and public initiatives. Although, in the last years, smart city\ninitiatives\
    \ have proliferated worldwide, there are only a few speciﬁcally related to smart\
    \ campuses\nand universities. In addition, there is not a common framework for\
    \ designing or deploying them,\nso future developers will have to keep compatibility\
    \ and interoperability issues in mind.\n•\nSeamless integration of outdoor and\
    \ indoor smart campus applications.\nDue to their\ncommunications needs, outdoor\
    \ and indoor applications may differ in the underlying\ntechnologies, so it is\
    \ necessary to design architectures and devices that allow for switching between\n\
    communications transceivers. This means that, although the lower layers of the\
    \ communications\nprotocol may differ, the upper layers are compatible so that\
    \ they are able to provide seamless\ncommunications among users, IoT objects,\
    \ and the computing devices scattered throughout\na campus.\n7. Conclusions\n\
    This article examined how higher education can leverage the opportunities created\
    \ by the latest\nand most relevant IT technologies. After analyzing the basics\
    \ on smart campuses and universities, this\nwork has focused on studying the potential\
    \ of IoT, blockchain, and the most recent communications\narchitectures and paradigms\
    \ (e.g., fog/edge computing) for developing novel smart campus and\nsmart university\
    \ applications. In addition, the latest key deployments as well as their communications\n\
    technologies have been detailed and analyzed. Finally, the main future challenges\
    \ are listed in order to\nallow future university planners, IoT vendors, and developers\
    \ to create a roadmap for the design and\ndeployment of the next generation of\
    \ smart campuses and universities.\nAuthor Contributions: T.M.F.-C. and P.F.-L.\
    \ contributed to the overall review design, data collection and analysis,\nwriting\
    \ of the manuscript, and funding acquisition.\nFunding:\nThis work has been funded\
    \ by the Xunta de Galicia (ED431C 2016-045, ED431G/01), the Agencia\nEstatal de\
    \ Investigación of Spain (TEC2016-75067-C4-1-R) and ERDF funds of the EU (AEI/FEDER,\
    \ UE).\nConﬂicts of Interest: The authors declare no conﬂicts of interest.\nReferences\n\
    1.\nFernández-Caramés, T.M. An intelligent power outlet system for the smart home\
    \ of the Internet of Things.\nInt. J. Distrib. Sens. Netw. 2015, 11, 214805. [CrossRef]\
    \ [PubMed]\n2.\nBlanco-Novoa, O.; Fernández-Caramés, T.M.; Fraga-Lamas, P.; Castedo,\
    \ L. An Electricity Price-Aware\nOpen-Source Smart Socket for the Internet of\
    \ Energy. Sensors 2017, 17, 643. [CrossRef] [PubMed]\nAppl. Sci. 2019, 9, 4479\n\
    16 of 24\n3.\nHernández-Rojas, D.L.; Fernández-Caramés, T.M.; Fraga-Lamas, P.;\
    \ Escudero, C.J. Design and Practical\nEvaluation of a Family of Lightweight Protocols\
    \ for Heterogeneous Sensing through BLE Beacons in IoT\nTelemetry Applications.\
    \ Sensors 2018, 18, 57. [CrossRef] [PubMed]\n4.\nFroiz-Míguez, I.; Fernández-Caramés,\
    \ T.M.; Fraga-Lamas, P.; Castedo, L. Design, Implementation and\nPractical Evaluation\
    \ of an IoT Home Automation System for Fog Computing Applications Based on MQTT\n\
    and ZigBee-WiFi Sensor Nodes. Sensors 2018, 18, 2660. [CrossRef] [PubMed]\n5.\n\
    Berry College Ofﬁcial Web Page on Its Campus Extension. Available online: https://www.berry.edu/\n\
    eaglecam/learn/ (accessed on 22 September 2019).\n6.\nDuke University Ofﬁcial\
    \ Web Page on Its Campus Extension. Available online: https://today.duke.edu/\n\
    2011/11/onlinemaplaunch (accessed on 22 September 2019).\n7.\nStanford University\
    \ Web Page on the Extension of Its Lands. Available online: https://facts.stanford.edu/\n\
    about/lands/ (accessed on 22 September 2019).\n8.\nMuhamad, W.; Kurniawan, N.B.;\
    \ Suhardi, S.; Yazid, S. Smart campus features, technologies, and applications:\n\
    A systematic literature review. In Proceedings of the International Conference\
    \ on Information Technology\nSystems and Innovation (ICITSI), Bandung, Indonesia,\
    \ 23–24 October 2017.\n9.\nHeinemann, C.; Uskov, V.L. Smart University: Literature\
    \ Review and Creative Analysis. In Proceedings of\nthe International Conference\
    \ on Smart Education and Smart E-Learning, Vilamoura, Portugal, 21–23 June\n2017.\n\
    10.\nAlghamdi, A.; Shetty, S. Survey Toward a Smart Campus Using the Internet\
    \ of Things. In Proceedings of the\nIEEE 4th International Conference on Future\
    \ Internet of Things and Cloud (FiCloud), Vienna, Austria, 22–24\nAugust 2016.\n\
    11.\nKamišali´c, A.; Turkanovi´c, M.; Mrdovi´c, S.; Heriˇcko, M. A Preliminary\
    \ Review of Blockchain-Based Solutions\nin Higher Education. In Proceedings of\
    \ the International Workshop on Learning Technology for Education\nin Cloud, Zamora,\
    \ Spain, 15–19 April 2019.\n12.\nYumna, H.; Khan, M.M.; Ikram, M.; Ilyas, S. Use\
    \ of Blockchain in Education: A Systematic Literature Review.\nIn Proceedings\
    \ of the Asian Conference on Intelligent Information and Database Systems, Yogyakarta,\n\
    Indonesia, 8–11 April 2019.\n13.\nAlammary, A.; Alhazmi, S.; Almasri, M.; Gillani,\
    \ S. Blockchain-Based Applications in Education:\nA Systematic Review. Appl. Sci.\
    \ 2019, 9, 2400. [CrossRef]\n14.\nWilliams, P. Does competency-based education\
    \ with blockchain signal a new mission for universities? J. High.\nEduc. Policy\
    \ Manag. 2019, 41, 104–117. [CrossRef]\n15.\nJuriˇci´c, V.; Radoševi´c, M.; Fuzul,\
    \ E. Creating student’s proﬁle using blockchain technology. In Proceedings of\n\
    the 2019 42nd International Convention on Information and Communication Technology,\
    \ Electronics and\nMicroelectronics (MIPRO), Opatija, Croatia, 20–24 May 2019;\
    \ pp. 521–525.\n16.\nBates, O.; Friday, A. Beyond Data in the Smart City: Repurposing\
    \ Existing Campus IoT. IEEE Pervasive\nComput. 2017, 16, 54–60. [CrossRef]\n17.\n\
    Chen, X.; Jin, R.; Suh, K.; Wang, B.; Wei, W. Network performance of smart mobile\
    \ handhelds in a university\ncampus Wi-Fi network. In Proceedings of the 2012\
    \ Internet Measurement Conference, Boston, MA, USA,\n14–16 November 2012; pp.\
    \ 315–328.\n18.\nAtif, Y.; Mathew, S.S.; Lakas, A. Building a smart campus to\
    \ support ubiquitous learning. J. Ambient. Intell.\nHumaniz. Comput. 2015, 6,\
    \ 223–238. [CrossRef]\n19.\nHirsch, B.; Ng, J.W. Education beyond the cloud: Anytime-anywhere\
    \ learning in a smart campus\nenvironment. In Proceedings of the 2011 IEEE International\
    \ Conference for Internet Technology and\nSecured Transactions, Abu Dhabi, UAE,\
    \ 11–14 December 2011; pp. 718–723.\n20.\nBakken, J.P.; Uskov, V.L.; Penumatsa,\
    \ A.; Doddapaneni, A. Smart universities, smart classrooms and students\nwith\
    \ disabilities. In Smart Education and e-Learning; Springer: Cham, Switzerland,\
    \ 2016, pp. 15–27.\n21.\nKwok, L.F. A vision for the development of i-campus.\
    \ Smart Learn. Environ. 2015, 2, 1–12. [CrossRef]\n22.\nSmart Cities, Ranking\
    \ of European Medium-Size Cities; Vienna University of Technology: Vienna, Austria;\n\
    University of Ljubljana: Ljubljana, Slovenia; Delft University of Technology:\
    \ Delft, The Netherlands, 2007.\nAppl. Sci. 2019, 9, 4479\n17 of 24\n23.\nMattoni,\
    \ B.; Pagliaro, F.; Corona, G.; Ponzo, V.; Bisegna, F.; Gugliermetti, F.; Quintero-Núñez,\
    \ M. A matrix\napproach to identify and choose efﬁcient strategies to develop\
    \ the Smart Campus. In Proceedings of the\nIEEE 16th International Conference\
    \ on Environment and Electrical Engineering (EEEIC), Florence, Italy, 7–10\nJune\
    \ 2016.\n24.\nPompei, L.; Mattoni, B.; Bisegna, F.; Nardecchia, F.; Fichera, A.;\
    \ Gagliano, A.; Pagano, A. Composite\nIndicators for Smart Campus: Data Analysis\
    \ Method. In Proceedings of the IEEE International Conference\non Environment\
    \ and Electrical Engineering and the IEEE Industrial and Commercial Power Systems\
    \ Europe,\nPalermo, Italy, 12–15 June 2018.\n25.\nFernández-Caramés, T.M.; Fraga-Lamas,\
    \ P. A Review on Human-Centered IoT-Connected Smart Labels for\nthe Industry 4.0.\
    \ IEEE Access 2018, 6, 25939–25957. [CrossRef]\n26.\nBlanco-Novoa, O.; Fernández-Caramés,\
    \ T.M.; Fraga-Lamas, P.; Vilar-Montesinos, M.A. A Practical Evaluation\nof Commercial\
    \ Industrial Augmented Reality Systems in an Industry 4.0 Shipyard. IEEE Access\
    \ 2018,\n6, 8201–8218. [CrossRef]\n27.\nFraga-Lamas, P.; Fernández-Caramés, T.M.;\
    \ Blanco-Novoa, O.; Vilar-Montesinos, M.A. A Review on\nIndustrial Augmented Reality\
    \ Systems for the Industry 4.0 Shipyard. IEEE Access 2018, 6, 13358–13375.\n[CrossRef]\n\
    28.\nFernández-Caramés, T.M.; Fraga-Lamas, P.; Suárez-Albela, M.; Castedo, L.;\
    \ Albela, M.; Castedo, L. A\nmethodology for evaluating security in commercial\
    \ RFID systems. In Radio Frequency Identiﬁcation; Crepaldi,\nP.C., Pimenta, T.C.,\
    \ Eds.; IntechOpen: London, UK, 2017.\n29.\nHernández-Rojas, D.; Fernández-Caramés,\
    \ T.M.; Fraga-Lamas, P.; Escudero, C.\nA Plug-and-Play\nHuman-Centered Virtual\
    \ TEDS Architecture for the Web of Things.\nSensors 2018, 18, 2052. [CrossRef]\n\
    [PubMed]\n30.\nBlanco-Novoa, O.; Fernández-Caramés, T.M.; Fraga-Lamas, P.; Castedo,\
    \ L. A Cost-Effective IoT System for\nMonitoring Indoor Radon Gas Concentration.\
    \ Sensors 2018, 18, 2198. [CrossRef] [PubMed]\n31.\nPérez-Expósito, J.; Fernández-Caramés,\
    \ T.M.; Fraga-Lamas, P.; Castedo, L.\nVineSens: An Eco-Smart\nDecision-Support\
    \ Viticulture System. Sensors 2017, 17, 465. [CrossRef]\n32.\nYu, Z.; Liang, Y.;\
    \ Xu, B.; Yang, Y.; Guo, B. Towards a Smart Campus with Mobile Social Networking.\n\
    In Proceedings of the International Conference on Internet of Things and 4th International\
    \ Conference on\nCyber, Physical and Social Computing, Dalian, China, 19–22 October\
    \ 2011.\n33.\nHipwell, S. Developing smart campuses—A working model. In Proceedings\
    \ of the International Conference\non Intelligent Green Building and Smart Grid\
    \ (IGBSG), Taipei, Taiwan, 23–25 April 2014.\n34.\nCao, J.; Li, Z.; Luo, Q.; Hao,\
    \ Q.; Jiang, T. Research on the Construction of Smart University Campus Based\
    \ on\nBig Data and Cloud Computing. In Proceedings of the International Conference\
    \ on Engineering Simulation\nand Intelligent Control (ESAIC), Changsha, China,\
    \ 10–11 August 2018.\n35.\nHaghi, A.; Burney, K.; Kidd, F.S.; Valiente, L.; Peng,\
    \ Y. Fast-paced development of a smart campus IoT\nplatform. In Proceedings of\
    \ the Global Internet of Things Summit, Geneva, Switzerland, 6–9 June 2017.\n\
    36.\nMajeed, A.; Ali, M. How Internet-of-Things (IoT) making the university campuses\
    \ smart? QA higher\neducation (QAHE) perspective. In Proceedings of the IEEE 8th\
    \ Annual Computing and Communication\nWorkshop and Conference (CCWC), Las Vegas,\
    \ NV, USA, 8–10 January 2018.\n37.\nAli, S.; Rizzo, G.; Mancuso, V.; Marsan, M.A.\
    \ Persistence and availability of ﬂoating content in a campus\nenvironment. In\
    \ Proceedings of the IEEE Conference on Computer Communications, Kowloon, Hong\
    \ Kong,\nChina, 26 April–1 May 2015.\n38.\nPopescu, D.E.; Prada, M.F.; Dodescu,\
    \ A.; Hemanth, D.J.; Bungau, C. A secure conﬁdent cloud computing\narchitecture\
    \ solution for a smart campus. In Proceedings of the 7th International Conference\
    \ on Computers\nCommunications and Control (ICCCC), Oradea, Romania, 8–12 May\
    \ 2018.\n39.\nSuárez-Albela, M.; Fernández-Caramés, T.; Fraga-Lamas, P.; Castedo,\
    \ L. A Practical Evaluation of a\nHigh-Security Energy-Efﬁcient Gateway for IoT\
    \ Fog Computing Applications.\nSensors 2017, 17, 1978.\n[CrossRef]\n40.\nFernández-Caramés,\
    \ T.M.; Fraga-Lamas, P.; Suárez-Albela, M.; Vilar-Montesinos, M. A Fog Computing\
    \ and\nCloudlet Based Augmented Reality System for the Industry 4.0 Shipyard.\
    \ Sensors 2018, 18, 1798. [CrossRef]\n41.\nFernández-Caramés, T.M.; Fraga-Lamas,\
    \ P.; Suárez-Albela, M.; Díaz-Bouza, M.A. A Fog Computing Based\nCyber-Physical\
    \ System for the Automation of Pipe-Related Tasks in the Industry 4.0 Shipyard.\
    \ Sensors 2018,\n18, 1961. [CrossRef]\nAppl. Sci. 2019, 9, 4479\n18 of 24\n42.\n\
    Xu, Q.; Su, Z.; Wang, Y.; Dai, M. A Trustworthy Content Caching and Bandwidth\
    \ Allocation Scheme With\nEdge Computing for Smart Campus. IEEE Access 2018, 6.\
    \ [CrossRef]\n43.\nChang, Y.; Lai, Y. Campus Edge Computing Network Based on IoT\
    \ Street Lighting Nodes. IEEE Syst. J. 2018.\n[CrossRef]\n44.\nLiu, Y.; Shou,\
    \ G.; Hu, Y.; Guo, Z.; Li, H.; Beijing, F.P.; Seah, H.S. Towards a smart campus:\
    \ Innovative\napplications with WiCloud platform based on mobile edge computing.\n\
    In Proceedings of the 12th\nInternational Conference on Computer Science and Education\
    \ (ICCSE), Houston, TX, USA, 22–25\nAugust 2017.\n45.\nAgate, V.; Concone, F.;\
    \ Ferraro, P. WiP: Smart Services for an Augmented Campus. In Proceedings of the\n\
    IEEE International Conference on Smart Computing (SMARTCOMP), Taormina, Italy,\
    \ 18–20 July 2018.\n46.\nGrech, A.; Camilleri, A.F.\nBlockchain in Education.\n\
    In JCR Science for Policy Report; Inamorato dos\nSantos, A., Ed.; Publications\
    \ Ofﬁce of the European Union, EUR 28778 EN: Luxembourg, 2017. [CrossRef]\n47.\n\
    Fernández-Caramés, T.M.; Fraga-Lamas, P. A Review on the Use of Blockchain for\
    \ the Internet of Things.\nIEEE Access 2018, 6, 32979–33001. [CrossRef]\n48.\n\
    Christidis, K., Devetsikiotis, M. Blockchains and Smart Contracts for the Internet\
    \ of Things. IEEE Access\n2016, 4, 32292–32303. [CrossRef]\n49.\nEthereum Ofﬁcial\
    \ Web Page. Available online: https://www.ethereum.org (accessed on 22 September\
    \ 2019).\n50.\nHyperledger-Fabric Ofﬁcial Web Page. Available online: https://www.hyperledger.org/projects/fabric\n\
    (accessed 22 September 2019).\n51.\nNakamoto, S. Bitcoin: A Peer-to-Peer Electronic\
    \ Cash System. Available online: https://bitcoin.org/bitcoin.\npdf (accessed on\
    \ 22 September 2019).\n52.\nFernández-Caramés, T.M.; Froiz-Míguez, I.; Blanco-Novoa,\
    \ O.; Fraga-Lamas, P. Enabling the Internet of\nMobile Crowdsourcing Health Things:\
    \ A Mobile Fog Computing, Blockchain and IoT Based Continuous\nGlucose Monitoring\
    \ System for Diabetes Mellitus Research and Care. Sensors 2019, 19, 3319. [CrossRef]\n\
    [PubMed]\n53.\nFernández-Caramés, T.M.; Blanco-Novoa, O.; Froiz-Míguez, I.; Fraga-Lamas,\
    \ P. Towards an Autonomous\nIndustry 4.0 Warehouse: A UAV and Blockchain-Based\
    \ System for Inventory and Traceability Applications\nin Big Data-Driven Supply\
    \ Chain Management. Sensors 2019, 19, 2394. [CrossRef] [PubMed]\n54.\nFraga-Lamas,\
    \ P.; Fernández-Caramés, T.M. A Review on Blockchain Technologies for an Advanced\
    \ and\nCyber-Resilient Automotive Industry. IEEE Access 2019, 7, 17578–17598.\
    \ [CrossRef]\n55.\nFernández-Caramés, T.M.; Fraga-Lamas, P. A Review on the Application\
    \ of Blockchain for the Next\nGeneration of Cybersecure Industry 4.0 Smart Factories.\
    \ IEEE Access 2019, 7, 45201–45218. [CrossRef]\n56.\nLo, S.K.; Xu, X.; Chiam,\
    \ Y.K.; Lu, Q. Evaluating Suitability of Applying Blockchain. In Proceedings of\
    \ the\n22nd International Conference on Engineering of Complex Computer Systems\
    \ (ICECCS), Fukuoka, Japan,\n5-8 November 2017; pp. 158–161.\n57.\nHan, M.; Li,\
    \ Z.; He, J.S.; Wu, D.; Xie, Y.; Baba, A. A Novel Blockchain-based Education Records\
    \ Veriﬁcation\nSolution.\nIn Proceedings of the 19th Annual SIG Conference on\
    \ Information Technology Education,\nFort Lauderdale, FL, USA, 3–6 October 2018.\n\
    58.\nLiu, Q.; Guan, Q.; Yang, X.; Zhu, H.; Green, G.; Yin, S. Education-Industry\
    \ Cooperative System Based on\nBlockchain. In Proceedings of the 1st IEEE International\
    \ Conference on Hot Information-Centric Networking,\nShenzhen, China, 15–17 August\
    \ 2018.\n59.\nHori, M.; Ono, S.; Miyashita, K.; Kobayashi, S.; Miyahara, H.; Kita,\
    \ T.; Yamada, T.; Yamaji, K. Learning\nSystem based on Decentralized Learning\
    \ Model using Blockchain and SNS. In Proceedings of the 2018 10th\nInternational\
    \ Conference on Computer Supported Education, Funchal, Portugal, 15–17 March 2018.\n\
    60.\nWu, B.; Li, Y. Design of Evaluation System for Digital Education Operational\
    \ Skill Competition Based on\nBlockchain. In Proceedings of the IEEE 15th International\
    \ Conference on e-Business Engineering (ICEBE),\nXi’an, China, 12–14 October 2018.\n\
    61.\nLizcano, D.; Lara, J.A.; White, B.; Aljawarneh, S. Blockchain-based approach\
    \ to create a model of trust in\nopen and ubiquitous higher education. J. Comput.\
    \ High. Educ. 2019. [CrossRef]\n62.\nZhong, J.; Xie, H.; Zou, D.; Chui, D.K. A\
    \ Blockchain Model for Word-Learning Systems. In Proceedings\nof the 5th International\
    \ Conference on Behavioral, Economic, and Socio-Cultural Computing, Kaohsiung,\n\
    Taiwan, 12–14 November 2018.\nAppl. Sci. 2019, 9, 4479\n19 of 24\n63.\nVerstaevel,\
    \ N.; Boes, J.; Gleizes, M. From smart campus to smart cities issues of the smart\
    \ revolution.\nIn Proceedings of the IEEE SmartWorld, Ubiquitous Intelligence\
    \ & Computing, Advanced & Trusted\nComputed, Scalable Computing & Communications,\
    \ Cloud & Big Data Computing, Internet of People and\nSmart City Innovation, San\
    \ Francisco, CA, USA, 4–8 August 2017.\n64.\nAlvarez-Campana, M.; López, G.; Vázquez,\
    \ E.; Villagrá, V.A.; Berrocal, J. Smart CEI Moncloa: An IoT-based\nPlatform for\
    \ People Flow and Environmental Monitoring on a Smart University Campus. Sensors\
    \ 2017, 17,\n2856. [CrossRef]\n65.\nGuo, M.; Zhang, Y. The research of smart campus\
    \ based on Internet of Things & cloud computing.\nIn Proceedings of the 11th International\
    \ Conference on Wireless Communications, Networking and Mobile\nComputing (WiCOM\
    \ 2015), Shanghai, China, 21–23 September 2015.\n66.\nWebb, J.; Hume, D. Campus\
    \ IoT collaboration and governance using the NIST cybersecurity framework.\nIn\
    \ Proceedings of the Living in the Internet of Things: Cybersecurity of the IoT,\
    \ London, UK, 28–29 March\n2018.\n67.\nPagliaro F.; Mattoni, B.; Gugliermenti,\
    \ F.; Bisegna, F.; Azzaro, B.; Tomei, F.; Catucci, S. A roadmap toward\nthe development\
    \ of Sapienza Smart Campus. In Proceedings of the IEEE 16th International Conference\
    \ on\nEnvironment and Electrical Engineering (EEEIC), Florence, Italy, 7–10 June\
    \ 2016.\n68.\nHengliang, T.; Chuanrong, C. The Construction of Intelligent Transportation\
    \ System Based on the\nConstruction of Wisdom Campus—Take Soochow University as\
    \ an Example. In Proceedings of the Eighth\nInternational Conference on Measuring\
    \ Technology and Mechatronics Automation (ICMTMA), Macau,\nChina, 11–12 March\
    \ 2016.\n69.\nVerma, P.; Kumar, A.; Rathod, N.; Jain, P.; Mallikarjun, S.; Subramanian,\
    \ R.; Amrutur, B.; Kumar, M.S.M.;\nSundaresan, R. Towards an IoT based water management\
    \ system for a campus. In Proceedings of the IEEE\nFirst International Smart Cities\
    \ Conference (ISC2), Guadalajara, Mexico, 25–28 October 2015.\n70.\nFraga-Lamas,\
    \ P.; Celaya-Echarri, M.; Lopez-Iturri, P.; Castedo, L.; Azpilicueta, L.; Aguirre,\
    \ E.;\nSuárez-Albela, M.; Falcone, F.; Fernández-Caramés, T.M. Design and Experimental\
    \ Validation of a LoRaWAN\nFog Computing Based Architecture for IoT Enabled Smart\
    \ Campus Applications. Sensors 2019, 19, 3287.\n[CrossRef]\n71.\nFernández-Caramés,\
    \ T.M.; González-López, M.; Castedo, L. FPGA-based vehicular channel emulator\
    \ for\nreal-time performance evaluation of IEEE 802.11 p transceivers. EURASIP\
    \ J. Wirel. Commun. Netw. 2010,\n1, 2010.\n72.\nFernández-Caramés, T.M.; González-López,\
    \ M.; Castedo, L. FPGA-based vehicular channel emulator for\nevaluation of IEEE\
    \ 802.11 p transceivers. In Proceedings of the International Conference on Intelligent\n\
    Transport Systems Telecommunications, Lille, France, 20–22 October 2009.\n73.\n\
    Bandara, H.M.A.P.K.; Jayalath, J.D.C.; Rodrigo, A.R.S.P.; Bandaranayake, A.U.;\
    \ Maraikar, Z.; Ragel, R.G.\nSmart campus phase one: Smart parking sensor network.\
    \ In Proceedings of Manufacturing & Industrial\nEngineering Symposium (MIES),\
    \ Colombo, Sri Lanka, 22 October 2016.\n74.\nBrenna, M.; Foiadelli, F.; Longo,\
    \ M.; Bracco, S.; Delﬁno, F. Sustainable electric mobility analysis in the\nSavona\
    \ Campus of the University of Genoa. In Proceedings of the IEEE 16th International\
    \ Conference on\nEnvironment and Electrical Engineering (EEEIC), Florence, Italy,\
    \ 7–10 June 2016.\n75.\nBracco, S.; Brenna, M.; Delfmo, F.; Foiadelli, F.; Longo,\
    \ M. Preliminary study on electric mobility applied to a\nUniversity Campus in\
    \ North Italy. In Proceedings of the 6th International Conference on Clean Electrical\n\
    Power (ICCEP), Santa Margherita Ligure, Italy, 27–29 June 2017.\n76.\nYagcitekin,\
    \ B.; Uzunoglu, M.; Ocal, B.; Turan, E.; Tunc, A. Development of Smart Charging\
    \ Strategies for\nElectric Vehicles in a Campus Area. In Proceedings of the European\
    \ Modelling Symposium, Manchester, UK,\n20–22 November 2013.\n77.\nBásaca-Preciado,\
    \ L.C.; Orozco-Garcia, N.A.; Terrazas-Gaynor, J.M.; Moreno-Partida, A.S.; Rosete-Beas,\
    \ O.A.;\nRizzo-Aguirre, J.; Martinez-Grijalva, L.F.; Ponce-Camacho, M.A. Intelligent\
    \ Transportation Scheme for\nAutonomous Vehicle in Smart Campus. In Proceedings\
    \ of the 44th Annual Conference of the IEEE Industrial\nElectronics Society, Washington,\
    \ DC, USA, 21–23 October 2018.\n78.\nChit, S.M.; Chaw, L.Y.; Thong, C.L.; Lee,\
    \ C.Y. A pilot study: Shuttle bus tracker app for campus users.\nIn Proceedings\
    \ of the International Conference on Research and Innovation in Information Systems\
    \ (ICRIIS),\nLangkawi, Malaysia, 10 August 2017.\nAppl. Sci. 2019, 9, 4479\n20\
    \ of 24\n79.\nFeng, X.; Zhang, J.; Chen, J.; Wang, G.; Zhang, L.; Li, R. Design\
    \ of Intelligent Bus Positioning Based on\nInternet of Things for Smart Campus.\
    \ IEEE Access 2018, 6, 60005–60015. [CrossRef]\n80.\nMorales González, R.; van\
    \ Goch, T.A.J.; Aslam, M.F.; Blanch, A.; Ribeiro, P.F. Microgrid design considerations\n\
    for a smart-energy university campus. In Proceedings of the IEEE PES Innovative\
    \ Smart Grid Technologies,\nEurope, Istanbul, Turkey, 12–15 October 2014.\n81.\n\
    Talei, H.; Zizi, B.; Abid, M.R.; Essaaidi, M.; Benhaddou, D.; Khalil, N. Smart\
    \ campus microgrid: Advantages\nand the main architectural components. In Proceedings\
    \ of the 3rd International Renewable and Sustainable\nEnergy Conference (IRSEC),\
    \ Marrakech, Morocco, 10–13 December 2015.\n82.\nBracco, S.; Delﬁno, F.; Laiolo,\
    \ P.; Rossi, M. The Smart City Energy infrastructures at the Savona Campus of\n\
    the University of Genoa. In Proceedings of the AEIT International Annual Conference\
    \ (AEIT), Capri, Italy,\n5–7 October 2016.\n83.\nMakkonen, H.; Lassila, J.; Tikka,\
    \ V.; Partanen, J.; Kaipia, T.; Silventoinen, P. Implementation of Smart Grid\n\
    environment in Green Campus project. In Proceedings of the CIRED Workshop: Integration\
    \ of Renewables\ninto the Distribution Grid, Lisbon, Portugal, 29–30 May 2012.\n\
    84.\nSharma, H.; Kaur, G. Optimization and simulation of smart grid distributed\
    \ generation: A case study\nof university campus. In Proceedings of the IEEE Smart\
    \ Energy Grid Engineering (SEGE), Oshawa, ON,\nCanada, 21–24 August 2016.\n85.\n\
    Lazaroiu, G.C.; Dumbrava, V.; Costoiu, M.; Teliceanu, M.; Roscia, M. Smart campus-an\
    \ energy integrated\napproach. In Proceedings of the International Conference\
    \ on Renewable Energy Research and Applications\n(ICRERA), Palermo, Italy, 22–25\
    \ November 2015.\n86.\nKarunaratne, P.; Moshtaghi, M.; Karunasekera, S.; Harwood,\
    \ A. PSF+—Fast and improved electricity\nconsumption prediction in campus environments.\
    \ In Proceedings of the IEEE International Conference on\nSmart Grid Communications\
    \ (SmartGridComm), Dresden, Germany, 23–27 October 2017.\n87.\nPagliaro, F.; Mattoni,\
    \ B.; Ponzo, G.; Corona, V.; Nardecchia, F.; Bisegna, F.; Gugliermetti, F. Sapienza\
    \ smart\ncampus: From the matrix approach to the applicative analysis of an optimized\
    \ garbage collection system.\nIn Proceedings of the IEEE International Conference\
    \ on Environment and Electrical Engineering and the\nIEEE Industrial and Commercial\
    \ Power Systems Europe, Milan, Italy, 6–9 June 2017.\n88.\nLiu, R.; Kuo, C.; Yang,\
    \ C.; Chen, S.; Liu, J. On Construction of an Energy Monitoring Service Using\
    \ Big Data\nTechnology for Smart Campus. In Proceedings of the 7th International\
    \ Conference on Cloud Computing and\nBig Data (CCBD), Macau, China, 16–18 November\
    \ 2016.\n89.\nLazaroiu, G.C.; Dumbrava, V.; Costoiu, M.; Teliceanu, M.; Roscia,\
    \ M. Energy-informatic-centric smart campus.\nIn Proceedings of the IEEE 16th\
    \ International Conference on Environment and Electrical Engineering (EEEIC),\n\
    Florence, Italy, 7–10 June 2016.\n90.\nLiang, T.; Tsai, C. Application of Intelligent\
    \ Monitoring System in Campus Greenhouse. In Proceedings of\nthe International\
    \ Conference on Information, Communication and Engineering (ICICE), Xiamen, China,\n\
    17–20 November 2017.\n91.\nPetrie, C.; Gupta, S.; Rao, V.; Nutter, B. Energy Efﬁcient\
    \ Control Methods of HVAC Systems for Smart\nCampus. In Proceedings of the IEEE\
    \ Green Technologies Conference (GreenTech), Austin, TX, USA, 4–6\nApril 2018.\n\
    92.\nLu, J.; Xu, X.; Li, X.; Li, L.; Chang, C.-C.; Feng, X.; Zhang, S. Detection\
    \ of Bird’s Nest in High Power Lines in\nthe Vicinity of Remote Campus Based on\
    \ Combination Features and Cascade Classiﬁer. IEEE Access 2018, 6,\n39063–39071.\
    \ [CrossRef]\n93.\nPérez, L.E.; Pardiñas-Mir, J.A.; Guerra, O.; de la Mora, J.;\
    \ Pimienta, M.; Hernández, N.; de Atocha Lopez, M.\nA wireless sensor network\
    \ system: For monitoring trees’ health related parameters in a university campus.\n\
    In Proceedings of the 12th International Joint Conference on e-Business and Telecommunications\
    \ (ICETE),\nColmar, France, 20–22 July 2015.\n94.\nBacanli, S.S.; Solmaz, G.;\
    \ Turgut, D. Opportunistic Message Broadcasting in Campus Environments.\nIn Proceedings\
    \ of the IEEE Global Communications Conference (GLOBECOM), San Diego, CA, USA,\n\
    6–10 December 2015.\n95.\nKadadha, M.; Al-Ali, H.; Mufti, M.A.; Al-Aamri, A.;\
    \ Mizouni, R. Opportunistic mobile social networks:\nChallenges survey and application\
    \ in smart campus.\nIn Proceedings of the IEEE 12th International\nConference\
    \ on Wireless and Mobile Computing, Networking and Communications (WiMob), New\
    \ York, NY,\nUSA, 17–19 October 2016.\nAppl. Sci. 2019, 9, 4479\n21 of 24\n96.\n\
    Zhang, S.; Li, X. Mobility patterns of human population among university campuses.\
    \ In Proceedings of the\nIEEE Asia Paciﬁc Conference on Circuits and Systems,\
    \ Jeju, Korea, 25–28 October 2016.\n97.\nMiao, C.; Zhu, X.; Miao, J. The analysis\
    \ of student grades based on collected data of their Wi-Fi behaviors on\ncampus.\
    \ In Proceedings of the IEEE International Conference on Computer and Communications\
    \ (ICCC),\nChengdu, China, 14–17 October 2016.\n98.\nConcone, F.; Ferraro, P.;\
    \ Lo Re, G. Towards a Smart Campus Through Participatory Sensing. In Proceedings\n\
    of the IEEE International Conference on Smart Computing (SMARTCOMP), Taormina,\
    \ Italy, 18–20 June 2018.\n99.\nFernández-Caramés, T.M.; Fraga-Lamas, P Towards\
    \ The Internet of Smart Clothing: A Review on IoT\nWearables and Garments for\
    \ Creating Intelligent Connected E-Textiles. Electronics 2018, 7, 405. [CrossRef]\n\
    100. Bilgi, S.; Ozturk, O.; Gulnerman, A.G. Navigation system for blind, hearing\
    \ and visually impaired people\nin ITU Ayazaga campus. In Proceedings of the International\
    \ Conference on Computing Networking and\nInformatics (ICCNI), Lagos, Nigeria,\
    \ 29–31 October 2017.\n101. Li, D.; Liu, M.; Zhang, J.; Cheng, E. An Improved\
    \ A* Algorithm Applicable for Campus Navigation System.\nIn Proceedings of the\
    \ International Conference on Network and Information Systems for Computers, Wuhan,\n\
    China, 23–25 January 2015.\n102. Yong, Q.; Cheng, B.; Xing, Y. A Novel Quantum\
    \ Ant Colony Algorithm Used for Campus Path.\nIn Proceedings of the IEEE International\
    \ Conference on Computational Science and Engineering (CSE)\nand IEEE International\
    \ Conference on Embedded and Ubiquitous Computing (EUC), Guangzhou, China,\n21–24\
    \ July 2017.\n103. Tarng, W.; Ou, K. A Study of Campus Butterﬂy Ecology Learning\
    \ System Based on Augmented Reality and\nMobile Learning. In Proceedings of the\
    \ IEEE Seventh International Conference on Wireless, Mobile and\nUbiquitous Technology\
    \ in Education, Takamatsu, Japan, 27–30 March 2012.\n104. Yu, K.; Chiu, J.; Lee,\
    \ M.; Chi, S. A mobile application for an ecological campus navigation system\
    \ using\naugmented reality. In Proceedings of the 8th International Conference\
    \ on Ubi-Media Computing (UMEDIA),\nColombo, Sri Lanka, 24–26 August 2015.\n105.\
    \ Özcan, U.; Arslan, A.; ˙Ilkyaz, M.; Karaarslan, E. An augmented reality application\
    \ for smart campus\nurbanization: MSKU campus prototype. In Proceedings of the\
    \ 5th International Istanbul Smart Grid and\nCities Congress and Fair (ICSG),\
    \ Istanbul, Turkey, 19–21 April 2017.\n106. Sutjarittham, T.; Gharakheili, H.H.;\
    \ Kanhere, S.S.; Sivaraman, V. Data-Driven Monitoring and Optimization\nof Classroom\
    \ Usage in a Smart Campus. In Proceedings of the 17th ACM/IEEE International Conference\
    \ on\nInformation Processing in Sensor Networks (IPSN), Porto, Portugal, 11–13\
    \ April 2018.\n107. Rudin, A.R.A.; Audah, L.; Jamil, A.; Abdullah, J. Occupancy\
    \ monitoring system for campus sports facilities\nusing the Internet of Things\
    \ (IoT). In Proceedings of the IEEE Conference on Wireless Sensors (ICWiSE),\n\
    Langkawi, Malaysia, 10–12 October 2016.\n108. Liang, Y.; Chen, Z. Intelligent\
    \ and Real-Time Data Acquisition for Medical Monitoring in Smart Campus.\nIEEE\
    \ Access 2018, 6, 74836–74846. [CrossRef]\n109. Gjoreski, M.; Gjoreski, H.; Lutrek,\
    \ M.; Gams, M. Automatic Detection of Perceived Stress in Campus Students\nUsing\
    \ Smartphones. In Proceedings of the International Conference on Intelligent Environments,\
    \ Prague,\nCzech Republic, 15-17 July 2015.\n110. Ueda, T.; Ikeda, Y. Socio-economics\
    \ and educational case study with cost-effective IoT campus by the use\nof wearable,\
    \ tablet, cloud and open E-learning services. In Proceedings of the 2017 ITU Kaleidoscope:\n\
    Challenges for a Data-Driven Society (ITU K), Nanjing, China, 27–29 November 2017;\
    \ pp. 1–8.\n111. Yang, C.-H. On the design of campus-wide multi-purpose smart\
    \ card systems. In Proceedings of the IEEE\n33rd Annual International Carnahan\
    \ Conference on Security Technology, Madrid, Spain, 5–7 October 1999.\n112. Halawani,\
    \ T.; Mohandes, M. Smart card for smart campus: KFUPM case study. In Proceedings\
    \ of the IEEE\nInternational Conference on Electronics, Circuits and Systems,\
    \ Sharjah, UAE, 14–17 December 2003.\n113. Peng, H. Research on the Integration\
    \ Interface Techniques for Library Management System and Campus\nSmart Card System.\
    \ In Proceedings of the International Workshop on Intelligent Systems and Applications,\n\
    Wuhan, China, 23–24 May 2009.\n114. Du, Z.; Tang, Y. Web-based multi-level smart\
    \ card access control system on university campus. In Proceedings\nof the IEEE\
    \ 5th International Conference on Software Engineering and Service Science, Beijing,\
    \ China, 27–29\nJune 2014.\nAppl. Sci. 2019, 9, 4479\n22 of 24\n115. Wang, X.;\
    \ Liu, N.; Liu, Y.; Sun, Y. NFC mobile Intelligent Campus construction of Nanjing\
    \ University of\nFinance and Economics. In Proceedings of the International Conference\
    \ on Behavioral, Economic and\nSocio-cultural Computing (BESC), Nanjing, China,\
    \ 30 October–1 November 2015.\n116. Jiang, T.; Cao, J.; Su, D.; Yang, X. Analysis\
    \ and Data Mining of Students’ Consumption Behavior Based\non a Campus Card System.\
    \ In Proceedings of the International Conference on Smart City and Systems\nEngineering\
    \ (ICSCSE), Changsha, China, 11–12 November 2017.\n117. Wang, B.; Deng, K.; Wei,\
    \ W.; Zhang, S.; Zhou, W.; Yu, S. Full Cycle Campus Life of College Students:\
    \ A Big\nData Case in China. In Proceedings of the IEEE International Conference\
    \ on Big Data and Smart Computing\n(BigComp), Shanghai, China, 15–17 June 2018.\n\
    118. Wang, M.; Ng, J.W.P. Intelligent Mobile Cloud Education: Smart Anytime-Anywhere\
    \ Learning for the\nNext Generation Campus Environment. In Proceedings of the\
    \ 8th International Conference on Intelligent\nEnvironments (IE), Guanajato, Mexico,\
    \ 26–29 June 2012.\n119. Aldowah, H.; Rehman, S.U.; Ghazal, S.; Umar, I.N. Internet\
    \ of Things in higher education: A study on future\nlearning. J. Phys. Conf. Ser.\
    \ 2017, 892, 1. [CrossRef]\n120. Coccoli, M.; Guercio, A.; Maresca, P.; Stanganelli,\
    \ L. Smarter universities: A vision for the fast changing\ndigital era. J. Vis.\
    \ Lang. Comput. 2014, 25, 1003–1011. [CrossRef]\n121. Adamko, A.; Kódek, T.; Kollár,\
    \ L.; Kosa, M.; Tóth, R. Cluster and discover services in the Smart Campus\nplatform\
    \ for online programming contests. In Proceedings of the 6th IEEE International\
    \ Conference on\nCognitive Infocommunications (CogInfoCom), Gyor, Hungary, 19–21\
    \ October 2015.\n122. Xu, X.; Li, D.; Sun, M.; Yang, S.; Yu, S.; Manogaran, G.;\
    \ Mastorakis, G.; Mavromoustakis, C.X. Research on\nKey Technologies of Smart\
    \ Campus Teaching Platform Based on 5G Network. IEEE Access 2019, 7. [CrossRef]\n\
    123. Zhamanov, A.; Sakhiyeva, Z.; Suliyev, R.; Kaldykulova, Z. IoT smart campus\
    \ review and implementation of\nIoT applications into education process of university.\
    \ In Proceedings of the 13th International Conference on\nElectronics, Computer\
    \ and Computation (ICECCO), Abuja, Nigeria, 28–29 November 2017.\n124. Uskov,\
    \ V.L.; Bakken, J.P.; Howlett, R.J.; Jain, L.C. Smart Universities: Concepts,\
    \ Systems and Technologies;\nSpringer: Cham, Switzerland, 2017; pp. 49–86,\n125.\
    \ Adamkó, A.; Kãdek, T.; Kósa, M. Intelligent and adaptive services for a smart\
    \ campus. In Proceedings of\nthe 2014 5th IEEE Conference on Cognitive Infocommunications\
    \ (CogInfoCom), Vietri sul Mare, Italy, 5–7\nNovember 2014; pp. 505–509.\n126.\
    \ Prandi, C.; Monti, L.; Ceccarini, C.; Salomoni, P. Smart Campus: Fostering the\
    \ Community Awareness\nThrough an Intelligent Environment. Mobile Netw. Appl.\
    \ 2019, 1–8. [CrossRef]\n127. Prandi, C.; Ceccarini, C.; Salomoni, P. Augmenting\
    \ Good Behaviour: Mixing Digital and Reality to Promote\nSustainability in a Campus\
    \ Community. In Proceedings of the 5th EAI International Conference on Smart\n\
    Objects and Technologies for Social Good, Valencia, Spain, 25–27 September 2019;\
    \ pp. 189–194.\n128. Prandi, C.; Nisi, V.; Nunes, N. On Exploring a Pervasive\
    \ Infrastructure to Foster Citizens Participation\nand Sustainable Development,\
    \ In Proceedings of the 32nd International BCS Human Computer Interaction\nConference\
    \ (HCI), Belfast, UK, 4–6 July 2018.\n129. Kbar, G.; Aly, S.; Alhanaﬁ, B. Smart\
    \ and Context Aware Search for University Campus (SCASUC).\nIn Proceedings of\
    \ the International Conference on Multimedia Computing and Systems, Tangier, Morocco,\n\
    10–12 May 2012.\n130. Petcovici, A.; Stroulia, E. Location-based services on a\
    \ smart campus: A system and a study. In Proceedings\nof the IEEE 3rd World Forum\
    \ on Internet of Things (WF-IoT), Reston, VA, USA, 12–14 December 2016.\n131.\
    \ Zhe, H.; Xiaojun, W.; Qiang, W. Research on Campus Information Service Platform\
    \ Based on Locating System\nof Campus Wireless LAN. In Proceedings of the International\
    \ Conference on Smart Grid and Electrical\nAutomation (ICSGEA), Changsha, China,\
    \ 27–28 May 2017.\n132. Yang, A.; Li, S.; Ren, C.; Liu, H.; Han, Y.; Liu, L. Situational\
    \ Awareness System in the Smart Campus. IEEE\nAccess 2018, 6, 63976–63986. [CrossRef]\n\
    133. Zhang, J. Spatio-Temporal Association Query Algorithm for Massive Video Surveillance\
    \ Data in Smart\nCampus. IEEE Access 2018, 6, 59871–59880. [CrossRef]\n134. Liu,\
    \ K.; Warade, N.; Pai, T.; Gupta, K. Location-aware smart campus security application.\
    \ In Proceedings\nof IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced\
    \ & Trusted Computed, Scalable\nComputing & Communications, Cloud & Big Data Computing,\
    \ Internet of People and Smart City Innovation,\nSan Francisco, CA, USA, 4–8 August\
    \ 2017.\nAppl. Sci. 2019, 9, 4479\n23 of 24\n135. Zhang, L.; Oksuz, O.; Nazaryan,\
    \ L.; Yue, C.; Wang, B.; Kiayias, A.; Bamis, A. Encrypting wireless network\n\
    traces to protect user privacy: A case study for smart campus. In Proceedings\
    \ of the IEEE 12th International\nConference on Wireless and Mobile Computing,\
    \ Networking and Communications (WiMob), New York, NY,\nUSA, 17–19 October 2016.\n\
    136. Fraga-Lamas, P.; Fernández-Caramés, T.M.; Noceda-Davila, D.; Vilar-Montesinos,\
    \ M. RSS Stabilization\nTechniques for a Real-Time Passive UHF RFID Pipe Monitoring\
    \ System for Smart Shipyards. In Proceedings\nof the 2017 IEEE International Conference\
    \ on RFID (IEEE RFID 2017), Phoenix, AZ, USA, 9–11 May 2017;\npp. 161–166.\n137.\
    \ Ghosh, A.; Chakraborty, N. Design of smart grid in an University Campus using\
    \ ZigBee mesh networks.\nIn Proceedings of the IEEE 1st International Conference\
    \ on Power Electronics, Intelligent Control and Energy\nSystems (ICPEICES), Delhi,\
    \ India, 4–6 July 2016.\n138. Van Merode, D.; Tabunshchyk, G.; Patrakhalko, K.;\
    \ Yuriy, G. Flexible technologies for smart campus.\nIn Proceedings of the 13th\
    \ International Conference on Remote Engineering and Virtual Instrumentation\n\
    (REV), Madrid, Spain, 24–26 February 2016.\n139. Bai, S.; Chiu, C.; Hsu, J.; Leu,\
    \ J. Campus-wide wireless indoor positioning with hybrid iBeacon and Wi-Fi\nsystem.\
    \ In Proceedings of the 6th International Symposium on Next Generation Electronics\
    \ (ISNE), Keelung,\nTaiwan, 23–24 May 2017.\n140. Wang, M.; Brassil, J. Managing\
    \ large scale, ultra-dense beacon deployments in smart campuses.\nIn Proceedings\
    \ of the IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),\n\
    Hong Kong, China, 26 April–1 May 2015.\n141. Han, T.D.; Cheong, C.; Ann, J.W.;\
    \ Kim, J.Y.; Yoon, H.M.; Lee, C.S.; Shin, H.-G.; Lee, Y.-J.; Yook, H.-M.;\nJeon,\
    \ M.-H.; et al. Implementation of new services to support ubiquitous computing\
    \ for campus life.\nIn Proceedings of the Second IEEE Workshop on Software Technologies\
    \ for Future Embedded and Ubiquitous\nSystems, Vienna, Austria, 12 May 2004.\n\
    142. Ward, S.; Gittens, M. Building useful smart campus applications using a retired\
    \ cell phone repurposing\nmodel. In Proceedings of the Third International Conference\
    \ on Electrical and Biomedical Engineering,\nClean Energy and Green Computing,\
    \ Beirut, Lebanon, 25–27 April 2018.\n143. Sanchez-Iborra, R.; Cano, M.-D. State\
    \ of the Art in LP-WAN Solutions for Industrial IoT Services. Sensors\n2016, 16,\
    \ 708. [CrossRef] [PubMed]\n144. Sigfox Ofﬁcial Webpage. Available online: https://www.sigfox.com/\
    \ (accessed on 22 September 2019).\n145. LoRa-Alliance. LoRaWAN What Is It? A\
    \ Technical Overview of LoRa and LoRaWAN; White Paper; The LoRa\nAlliance: San\
    \ Ramon, CA, USA, November 2015.\n146. 3GPP Completed the Standardization of NB-IoT.\
    \ Available online: http://www.3gpp.org/news-events/\n3gpp-news/1785-nb_iot_complete\
    \ (accessed on 22 September 2019).\n147. Ingenu Ofﬁcial Webpage. Available online:\
    \ https://www.ingenu.com/ (accessed on 22 September 2019).\n148. Weightless Ofﬁcial\
    \ Webpage.\nAvailable online:\nhttp://www.weightless.org/ (accessed on 22\nSeptember\
    \ 2019).\n149. Waviot NB-Fi Ofﬁcial Webpage. Available online: https://waviot.com/technology/what-is-nb-ﬁ\
    \ (accessed\non 22 September 2019).\n150. Haxhibeqiri, J.; De Poorter, E.; Moerman,\
    \ I.; Hoebeke, J. A Survey of LoRaWAN for IoT: From Technology to\nApplication.\
    \ Sensors 2018, 18, 3995. [CrossRef] [PubMed]\n151. Lee, H.; Ke, K. Monitoring\
    \ of Large-Area IoT Sensors Using a LoRa Wireless Mesh Network System: Design\n\
    and Evaluation. IEEE Trans. Instrum. Meas. 2018, 67, 2177–2187. [CrossRef]\n152.\
    \ Loriot, M.; Aljer, A.; Shahrour, I. Analysis of the use of LoRaWan technology\
    \ in a large-scale smart city\ndemonstrator. In Proceedings of the 2017 Sensors\
    \ Networks Smart and Emerging Technologies (SENSET),\nBeirut, Lebanon, 12–14 September\
    \ 2017; pp. 1–4.\n153. Wang, S.; Zou, J.; Chen, Y.; Hsu, C.; Cheng, Y.; Chang,\
    \ C. Long-Term Performance Studies of a\nLoRaWAN-Based PM2.5 Application on Campus.\
    \ In Proceedings of the 2018 IEEE 87th Vehicular Technology\nConference (VTC Spring),\
    \ Porto, Portugal, 3–6 June 2018; pp. 1–5.\n154. Fathurrahman, S.Z.; Rahardjo,\
    \ E.T. Coverage of Radio Wave Propagation at UI Campus Surrounding Using\nRay\
    \ Tracing and Physical Optics Near to Far Field Method. In Proceedings of the\
    \ TENCON 2018—IEEE\nRegion 10 Conference, Jeju, Korea, 28–31 September 2019; pp.\
    \ 1123–1126.\nAppl. Sci. 2019, 9, 4479\n24 of 24\n155. Rappaport, T.S.; Xing,\
    \ Y.; Kanhere, O.; Ju, S.; Madanayake, A.; Mandal, S.; Alkhateeb, A; Trichopoulos,\
    \ G.C.\nWireless Communications and Applications Above 100 GHz: Opportunities\
    \ and Challenges for 6G and\nBeyond. IEEE Access 2019, 7, 78729–78757. [CrossRef]\n\
    156. Letaief, K.B.; Chen, W.; Shi, Y.; Zhang, J.; Zhang, Y.A. The Roadmap to 6G:\
    \ AI Empowered Wireless Networks.\nIEEE Commun. Mag. 2019, 57, 8. [CrossRef]\n\
    c⃝ 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an\
    \ open access\narticle distributed under the terms and conditions of the Creative\
    \ Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Applied sciences (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2076-3417/9/21/4479/pdf?version=1572258679
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Towards Next Generation Teaching, Learning, and Context-Aware Applications
    for Higher Education: A Review on Blockchain, IoT, Fog and Edge Computing Enabled
    Smart Campuses and Universities'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su132313076
  analysis: '>'
  authors:
  - Ashutosh Sharma
  - Elizaveta Podoplelova
  - Gleb Shapovalov
  - Alexey Tselykh
  - Alexander Tselykh
  citation_count: 32
  full_citation: '>'
  full_text: ">\nsustainability\nArticle\nSustainable Smart Cities: Convergence of\
    \ Artiﬁcial Intelligence\nand Blockchain\nAshutosh Sharma *, Elizaveta Podoplelova,\
    \ Gleb Shapovalov, Alexey Tselykh\nand Alexander Tselykh\n\x01\x02\x03\x01\x04\
    \x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Sharma, A.; Podoplelova,\n\
    E.; Shapovalov, G.; Tselykh, A.;\nTselykh, A. Sustainable Smart Cities:\nConvergence\
    \ of Artiﬁcial Intelligence\nand Blockchain. Sustainability 2021,\n13, 13076.\
    \ https://doi.org/10.3390/\nsu132313076\nAcademic Editor: Zubair Baig\nReceived:\
    \ 14 September 2021\nAccepted: 17 November 2021\nPublished: 25 November 2021\n\
    Publisher’s Note: MDPI stays neutral\nwith regard to jurisdictional claims in\n\
    published maps and institutional afﬁl-\niations.\nCopyright: © 2021 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nDepartment of Information\
    \ and Analytical Security Systems, Southern Federal University,\nRostov-on-Don\
    \ 344006, Russia; chuzhinova@sfedu.ru (E.P.); gshapovalov@sfedu.ru (G.S.);\ntselykh@sfedu.ru\
    \ (A.T.); ant@sfedu.ru (A.T.)\n* Correspondence: ashutosh@sfedu.ru\nAbstract:\
    \ Recently, 6G-enabled Internet of Things (IoT) is gaining attention and addressing\
    \ various\nchallenges of real time application. The artiﬁcial intelligence plays\
    \ a signiﬁcant role for big data\nanalytics and presents accurate data analysis\
    \ in real time. However, designing big data analysis\nthrough artiﬁcial intelligence\
    \ faces some issues in terms of security, privacy, training data, and\ncentralized\
    \ architecture. In this article, blockchain-based IoT framework with artiﬁcial\
    \ intelligence is\nproposed which presents the integration of artiﬁcial intelligence\
    \ and blockchain for IoT applications.\nThe performance of the proposed architecture\
    \ is evaluated in terms of qualitative and quantitative\nmeasurement. For qualitative\
    \ measurement, how the integration of blockchain and artiﬁcial intelli-\ngence\
    \ addresses various issues are described with the description of AI oriented BC\
    \ and BC oriented\nAI. The performance evaluation of proposed AI-BC architecture\
    \ is evaluated and compared with\nexisting techniques in qualitative measurement.\
    \ The experimental analysis shows that the proposed\nframework performs better\
    \ in comparison with the existing state of art techniques.\nKeywords: blockchain;\
    \ Internet of Things (IoT); artiﬁcial intelligence; big data analysis\n1. Introduction\n\
    A smart city requires information technology for the integration and management\n\
    of physical, social, and business infrastructures in order to deliver better facilities\
    \ to its\nresidents while conﬁrming efﬁcient and optimal use of available resources\
    \ [1]. Informa-\ntion of things is an approach that helps to provide interconnection\
    \ among humans and\ndevices with the internet, termed as Internet of Things (IoT).\
    \ These devices are capable of\nperforming intercommunication including smart\
    \ homes, intelligent automotives, smart\nindustries, and smart vehicles [2]. There\
    \ are many solutions for various ﬁelds provided by\nInternet of Things to optimize\
    \ their production effectively and efﬁciently. Considering all\nthe advantages,\
    \ IoT also faces some issues like data security, centralization, data analyt-\n\
    ics, connectivity and other hardware constraints. In an analysis, more than 800,000\
    \ user\ndevices were reported to be compromised through spam emails and distributed\
    \ phishing\nin the year of 2015 [3]. Cui et al. [1] suggested that with the increasing\
    \ number of smart\ndevices, a huge volume of data is being produced. Therefore,\
    \ big data analytics is a critical\nissue for any IoT application. To address\
    \ this issue of data analytics, various research\nhas contributed and proposed\
    \ different solutions with technologies such as artiﬁcial in-\ntelligence and\
    \ deep learning for IoT applications [2]. The deep learning analytical tool\n\
    is implemented for the analysis of huge data and to provide necessary information\
    \ for\ndecision making, prediction and classiﬁcation processes. The deep learning\
    \ analytics tool\nsupports feature extraction and scaling of a huge volume of\
    \ data from IoT applications [3].\nOsuwa et al. [4] presented the study for the\
    \ integration of artiﬁcial intelligence and IoT.\nTheir study also discusses about\
    \ the proﬁts, future opportunities, and open research issues\nin various IoT applications.\
    \ Misra et al. [5] suggested a user-oriented IoT system that\nSustainability 2021,\
    \ 13, 13076. https://doi.org/10.3390/su132313076\nhttps://www.mdpi.com/journal/sustainability\n\
    Sustainability 2021, 13, 13076\n2 of 16\nworks on two mechanisms; ﬁrst is a bidirectional\
    \ method of processing, and the other is an\nuncertainty-oriented arbitration\
    \ approach.\nBlockchain technology provides a decentralized, distributed, and\
    \ secure network.\nEach node in blockchain technology is connected in a distributed\
    \ peer-to-peer manner\nwhere every transaction is recorded quickly along with\
    \ timestamps and transactions are\nshared without any outside interference. The\
    \ blockchain approach provides an efﬁcient so-\nlution for areas such as agriculture,\
    \ healthcare, security, and ﬁnance. The data available in\nblocks are further\
    \ attached and secured in chains with digital signs through cryptographic\nhashing.\
    \ It is impossible for the hackers to hack transactions by adding malicious input\n\
    to the system since each block relates to the last block. The integration of the\
    \ blockchain\napproach with artiﬁcial intelligence for Internet of Things frameworks\
    \ has addressed var-\nious issues such as digital signature, validation, smart\
    \ contract, decentralization, secure\nsharing, and immutable explainable artiﬁcial\
    \ intelligence. Recently, with the evolution of\nsmart IoT devices and with their\
    \ interconnections, data at a huge volume is generating\nin a centralized form.\
    \ Therefore, issues such as space, security and privacy are regularly\ngenerated\
    \ by the evolution of technology. A decentralized database framework is imple-\n\
    mented to address these concerns with the integration of blockchain and AI for\
    \ IoT [6].\nThe transaction should be secure, digitally signed, immutable, validated,\
    \ and explainable\nwhile sharing the transaction with any other person in a network.\
    \ Such a concept of secure\ntransaction can be implemented in the majority of\
    \ applications such as the healthcare sector,\nsmart-home, agricultural, military,\
    \ industrial, smart transportation, and many others [7].\nThe idea of smart contract\
    \ is implemented by blockchain technology for enhancing network\nsecurity, and\
    \ further, it is stored in a digital ledger [8]. Fakhri et al. [9] proposed a\
    \ security\nmodel for IoT applications for delivering highly secure and scalable\
    \ data in a decentralized\nmanner at fog intelligence. Their architecture resolves\
    \ the concern of centralization in an\nIoT framework.\nArtiﬁcial intelligence\
    \ (AI) is implemented in various ﬁelds of advanced technologies\nlike decentralized\
    \ AI, blockchain (BC), intelligence of things, machine automation and\nmany others.\
    \ The integration of artiﬁcial intelligence and IoT creates beneﬁts in a way\n\
    for collecting maximum number of information and its analysis. Mohanta et al.\
    \ [10]\npresented a study that highlights intelligent machines that eliminates\
    \ the effects of humans\nfor the application, such as medical science, automated\
    \ industries, and others. In recent\nyears, with continuous evolution in smart\
    \ and digital technologies, artiﬁcial intelligence,\nblockchain and IoT have gained\
    \ attention from various researchers and become the most\npopular technologies,\
    \ providing innovation ideas in many research areas. The fundamental\nconvergence\
    \ of blockchain and artiﬁcial intelligence for the IoT application is depicted\n\
    in Figure 1. This paper presents the discussion of various issues such as privacy,\
    \ latency,\naccuracy, and centralization by the integration of blockchain and\
    \ AI for IoT applications.\nThe major contributions of this paper are:\n•\nBlockchain\
    \ and artiﬁcial intelligence is studied for IoT applications.\n•\nConsidering\
    \ the advantages of integrating blockchain and artiﬁcial intelligence a\nsecure\
    \ intelligent blockchain framework is proposed which includes four intelligences.\n\
    The proposed model consists of intelligence at cloud, fog, edge, and device level.\n\
    •\nThe proposed methodology for the combination of blockchain methods and artiﬁcial\n\
    intelligence is provided.\n•\nThe qualitative and quantitative analysis of the\
    \ proposed architecture is presented.\nUsing parameters accuracy, energy consumption,\
    \ latency, data privacy and security.\n•\nThis work presents the summary of research\
    \ challenges along with their solutions.\nThe rest of the paper is organized as:\
    \ Section 2 dictate detailed literature followed\nby proposed methodology in Section\
    \ 3. Performance analysis is carried in Section 4 and\nﬁnally, Section 5 concludes\
    \ the conclusion of the paper.\nSustainability 2021, 13, 13076\n3 of 16\nFigure\
    \ 1. The fundamental integration of blockchain and artiﬁcial intelligence for\
    \ the IoT application.\n2. Related Work\nAI and BC are the primary techniques\
    \ representing various IoT applications. Blockchain\ntechnology is capable for\
    \ providing distributed and decentralized paradigm for the applica-\ntions of\
    \ IoT. Whereas the AI is capable of providing analysis and processing of data\
    \ for the\napplication of IoT and thereby providing intelligent decision for machine.\
    \ The contribution\nof various research works is summarized in Table 1.\nTable\
    \ 1. Contribution of this study in relation with existing literature.\nReferences\n\
    Technology Used\nBlockchain\nBased AI\nAI Based\nBlockchain\nArchitecture\nChallenges\n\
    towards Research\nLopes et al. [11]\nAI and Blockchain\nLess\nYes\nYes\nLess\n\
    AlShamsi et al. [12]\nAI and Blockchain\nLess\nYes\nYes\nLess\nOsuwa et al. [13]\n\
    AI and IoT\nLess\nYes\nYes\nLess\nQiu et al. [14]\nIoT, Blockchain and\nCloud\
    \ computing\nLess\nLess\nYes\nNo\nYue et al. [15]\nBlockchain\nNo\nLess\nNo\n\
    Yes\nSharma et al. [16]\nAI and Blockchain\nYes\nNo\nNo\nLess\nYang et al. [17]\n\
    AI and Blockchain\nYes\nLess\nYes\nLess\nLiu et al. [18]\nBlockchain and IoT\n\
    Yes\nNo\nNo\nLess\nSharma et al. [19]\nBlockchain and IoT\nLess\nNo\nNo\nNo\n\
    Wang et al. [20]\nIoT, Blockchain and Edge\ncomputing\nYes\nLess\nYes\nNo\nJin\
    \ et al. [21]\nBlockchain\nNo\nNo\nNo\nYes\nTariq et al. [22]\nAI and IoT\nYes\n\
    Less\nYes\nYes\nLiu et al. [23]\nAI and Blockchain\nNo\nNo\nYes\nNo\n2.1. Blockchain\
    \ Technology\nThe blockchain technology represents a collection of blocks, where\
    \ each of the blocks\nconsists of four portions, timestamp, transaction detail\
    \ such as Ethereum and bitcoin, and\nhashing of previous and present block. The\
    \ blockchain technique is a public digital ledger,\nSustainability 2021, 13, 13076\n\
    4 of 16\ndecentralized and distributed network that is used for storing transaction\
    \ in different\nnodes. It provides unique cryptographic value to each block previous\
    \ and present block;\ntherefore, any third party cannot access or record the transaction.\
    \ Each of the transaction in\nblockchain technology is signed with cryptographic\
    \ value by hashing that is particularly\nveriﬁed by each miner.\nFigure 2 presents\
    \ the basic overview of artiﬁcial intelligence and blockchain technology,\nwhere\
    \ blockchain holds the duplicate value of complete ledger and details about blocks\n\
    of each transaction. Blockchain technology provides the capability of sharing\
    \ the ledger\ninformation in distributed, trusted, secure and decentralized form\
    \ [11]. The decentralized\nstorage in blockchain method is utilized for storing\
    \ large volume data that connected with\ncurrent block and earlier block through\
    \ smart contract. In the current scenario Swarm,\nIPFS, LitecoinDB and BigchainDB\
    \ are few of the databases which are utilized considering\ndecentralized database\
    \ [12]. IPFS is an interplanetary ﬁle system, which is decentralized,\ndistributed\
    \ and point-to-point database connected for transferring common ﬁles [13]. IPFS\n\
    is also represented as a signiﬁcant storage database, which is utilized by the\
    \ blockchain\nmethod for the majority of IoT frameworks in order to attain high\
    \ throughput [14].\nFigure 2. Overview of artiﬁcial intelligence and blockchain.\n\
    Yue et al. [15] presented three different categories of Internet of Things such\
    \ as sen-\nsor based, internet based, and knowledge based. The internet based\
    \ IoT represents the\ncombination of various smart devices, which relate to Internet,\
    \ and generates a huge\nvolume of data regularly. The sensor based IoT represents\
    \ the deployment of sensor de-\nvices such as temperature/humidity, and RFID for\
    \ the collection of data. The knowledge\nbased IoT represents the collection of\
    \ knowledgeable information, which is used for IoT\napplications [16,17]. IoT\
    \ is one of the most emerging technologies that uses a variety of\napplications,\
    \ providing unique addresses and communicates among each other through\ninternet\
    \ simultaneously. The huge amount of data generated in IoT applications has vari-\n\
    ous challenges such as fault tolerance, security vulnerabilities and data privacy.\
    \ To address\nthese challenges, various researchers have suggested blockchain\
    \ technology as a solution\nSustainability 2021, 13, 13076\n5 of 16\nfor IoT applications\
    \ [18,19]. Blockchain technology involves less delay and signiﬁcant\ncomputational\
    \ overhead and energy consumption. There are many applications where\nblockchain\
    \ technology can be implemented for providing security and privacy, such as\n\
    Industrial automation, smart home, smart healthcare, agriculture, smart city,\
    \ and many\nothers. The blockchain technology provides a peer-to-peer connection\
    \ among networks\nfor robustness and authentication against different attacks.\
    \ The integration of IoT and\nblockchain provides the extensive management of\
    \ data and improves complexity.\n2.2. Artiﬁcial Intelligence Technology\nProgrammed\
    \ machines that can execute a variety of operations such as learning,\nidentifying,\
    \ and solving various problems routinely is termed as artiﬁcial intelligence.\n\
    Machine Learning (ML), Deep Learning (DL) and Neural Network (NN) were implemented\n\
    for solving various complex problems automatically, and the benchmark for AI concerns\
    \ a\nhuman level of reasoning, vision, and speech. Intelligent machines are utilized\
    \ for making\nsmart decisions and to remove human tasks in various ﬁelds like\
    \ automatic sensing\napplications, medical applications, automated farming and\
    \ automated vehicle driving [20].\nAI technology takes the input of raw data,\
    \ processes it for performing decision-making, and\nat last presents the maximum\
    \ number of outputs for a speciﬁc task [21]. Recently, various\nresearchers have\
    \ found many challenges in Internet of Things such as big data analytics,\nprivacy\
    \ and security, energy efﬁciency and trafﬁc congestion. To overcome these issues,\n\
    many AI techniques for IoT applications have designs such as such machine learning,\
    \ deep\nlearning and neural network. The implementation of deep learning approaches\
    \ particularly\nsolves the issue of energy efﬁciency in IoT. The data association\
    \ and its prediction are\nanalyzed for energy management, and it leads designers\
    \ to select the most signiﬁcant\nsettings in controlling the energy consumption\
    \ [22].\nThe IoT authentication based on machine learning provides a solution\
    \ in terms of\nsecurity including approaches such as supervised, unsupervised,\
    \ reinforcement, access\ncontrol, and secure ofﬂoading for the protection of data\
    \ privacy [23]. The analytics capabil-\nity of AI for the collection of data in\
    \ IoT applications provides the identiﬁcation patterns,\nand based on those, more\
    \ informed decisions are generated for new ecosystems. The basic\napproaches and\
    \ concepts that are used in artiﬁcial intelligence are depicted in Figure 2.\n\
    2.3. Current Trending Techniques\nMany authors have suggested the open research\
    \ challenges of blockchain for artiﬁcial\nintelligence and artiﬁcial intelligence\
    \ for blockchain in IoT applications. Vara et al. [24]\nhave presented the overview\
    \ for the integration of IoT and artiﬁcial intelligence, and\ndiscussed various\
    \ challenges for the convergence of IoT with AI. Chen et al. [25] discussed\n\
    the key characteristics of blockchain technology, applications, consensus algorithm\
    \ and\nthe technical issues in the existing research. Debauche et al. [26] presented\
    \ the importance\nof Ethereum-based edger for smart contract, and it is also found\
    \ that it is a low-price\ntool that provides comparatively high accuracy in resource\
    \ management. Vo et al. [27]\nhave discussed the advantages of blockchain technology\
    \ considering artiﬁcial intelligence\nand security enhancement. Kim et al. [28]\
    \ discussed the basic concept of blockchain for\nartiﬁcial intelligence and presented\
    \ some of the open research challenges in implementing\nblockchain for AI. Rao\
    \ et al. [29] discussed operational levels of IoT such as application\nnetwork\
    \ and perception layer and discussed security issues in each of these layers.\
    \ Ferrag\net al. [30] conducted research for identifying the potential solution\
    \ to each challenge in the\nintegration of IoT and blockchain to improve the safety\
    \ in supply chain systems. Minoli\net al. [31] discussed how blockchain technology\
    \ improves the security in IoT applications.\nThe authors have also conferred\
    \ the relationship among blockchain and IoT along with\nthe concerns in blockchain\
    \ based IoT applications. Qian et al. [32] suggested security\nsolutions for IoT\
    \ applications, which include limitation of available IoT based datasets that\n\
    are utilized by both study and business communities.\nSustainability 2021, 13,\
    \ 13076\n6 of 16\nHassija et al. [33] discussed all the possible security threats\
    \ to blockchain technology\nand presented some possible real attacks. The authors\
    \ have reviewed solutions for the\nsecurity enhancement implementing blockchain\
    \ technology. Tsang et al. [34] proposed a\nsystem for the food traceability based\
    \ on integration of IoT and blockchain. Their proposed\nwork is self-organized,\
    \ trusted and a natural solution for intelligent agriculture systems.\nPavithran\
    \ et al. [35] analyzed the basic structures of blockchain in practical applications.\n\
    The authors have discussed development parameter of blockchain by analyzing the\
    \ present\napplication and technologies. Cai et al. [36] proposed a knowledge\
    \ acquisition design for\nthe analysis of data in cloud layer.\nThe contribution\
    \ of proposed study in relation with the existing literature is presented\nin\
    \ Table 1. It highlights the existing research considering various technological\
    \ parameters\nsuch as blockchain based artiﬁcial intelligence and artiﬁcial intelligence\
    \ based blockchain,\nvarious open research challenges and their solutions. The\
    \ present study signiﬁcantly differs\nfrom other existing research for providing\
    \ better integrated discussion impressiveness and\nextensiveness for the convergence\
    \ of blockchain and artiﬁcial intelligence for Internet of\nThings. Based on the\
    \ conducted research, an intelligent architecture is presented for IoT\napplications\
    \ by the integration of blockchain and artiﬁcial intelligence.\nAs mentioned in\
    \ the preceding section, this present work addresses signiﬁcant chal-\nlenges\
    \ such as centralization, accuracy, latency, privacy, and security in huge amount\
    \ of\ndata. This research work is primarily focused on the integration of blockchain\
    \ and artiﬁcial\nintelligence at different layers for cloud, fog, and edge in\
    \ order to address above-mentioned\nchallenges. Truong et al. [37] proposed a\
    \ secure framework for IoT applications to deliver\nsecure IoT data with decentralized\
    \ network at fog player. Debauche et al. [38] provided the\nbasic overview of\
    \ integrating artiﬁcial intelligence and IoT for increasing the efﬁciency and\n\
    removing unwanted interruption in IoT applications. Mohanty et al. [39] proposed\
    \ a frame-\nwork for the management of security based on blockchain for IoT applications.\
    \ A secure\nblockchain-based deep learning framework for providing reliable data\
    \ transmission in IoT\napplication is suggested [40]. Their approach achieves\
    \ high latency and accuracy in IoT\ndata. Pan et al. [41] presented decentralized\
    \ supply management based on blockchain tech-\nnology to address the issue of\
    \ resource management utilizing a dynamic voltage frequency\napproach. Considering\
    \ the beneﬁts of integrating blockchain and artiﬁcial intelligence for\nIoT applications,\
    \ an intelligent architecture is proposed and discussed in the subsequent\nsections\
    \ [42].\n3. Proposed Methodology\nThis section describes the proposed intelligent\
    \ architecture, integrated design of\nblockchain (BC) and artiﬁcial intelligence\
    \ (AI) technology for IoT applications. The perfor-\nmance of the proposed architecture\
    \ is measured for four different platforms such as cloud\nplatform analysis, fog\
    \ platform, edge platform and device intelligence analysis. A proposed\narchitecture\
    \ demonstrates how big data analysis, centralization issues and security issues\n\
    are addressed with the integration of BC and AI.\n3.1. Overview of Proposed Framework\n\
    Figure 3 depicts the layered architecture of proposed integrated artiﬁcial intelligence\n\
    blockchain design AI-BC for IoT application. The proposed model consists of four\
    \ oper-\national platforms such as intelligence at device platform, edge platform,\
    \ fog and cloud\nintelligence platform. The ﬁrst platform, device deployment,\
    \ consists of multiple smart\ndevices with AI and BC implementation. In this platform,\
    \ a huge amount of data is gener-\nated, which is transmitted to the edge intelligence\
    \ platform. The second platform, which\nis edge intelligence, comprised of an\
    \ artiﬁcial intelligence oriented base station, which is\nconnected with blockchain\
    \ at the network edge. In the fog platform, every fog node with\nblockchain technology\
    \ consists of an artiﬁcial intelligence enabled base station.\nSustainability\
    \ 2021, 13, 13076\n7 of 16\nFigure 3. Layered architecture integrated AI-BC design.\n\
    3.2. Transactional Flow of Proposed AI-BC Architecture\nThe information ﬂow of\
    \ the proposed AI-BC architecture is depicted in Figure 4.\nThe ﬂow of information\
    \ consists of six layers of operation. The ﬁrst layer is a physical\nlayer that\
    \ corresponds to the device deployment phase for the collection of data in real\n\
    time. The communication and control layer are responsible for edge computing.\
    \ The\nservice and managing layer correspond to the fog computing, and the application\
    \ layer\ncorresponds to the cloud computing. Parameters such as temperature (◦C),\
    \ humidity (%),\nlight intensity (lux), weather and location parameters are identiﬁed\
    \ by the physical layer in\ncloud computing. In physical layer of different kinds\
    \ of issues and threats for data privacy\nexists while transferring data from\
    \ one node to another. Blockchain technology in artiﬁcial\nintelligence is implemented\
    \ to overcome such issues, where the transaction from one node\nto another is\
    \ carried out in the form of Bitcoin and Ethereum. The collected information\n\
    in real time is communicated to the communication level that acts as an intermediate\
    \ for\ncommunicating data from one node to another. The integration of artiﬁcial\
    \ intelligence\nand blockchain for IoT application utilizes a consensus algorithm\
    \ for achieving security\nand scalability.\nSustainability 2021, 13, 13076\n8\
    \ of 16\nFigure 4. Information ﬂow of proposed AI-BC IoT architecture.\nThe integration\
    \ of AI in blockchain utilizes a distributed platform of cloud, intelligent\n\
    storing and smart contracts that ensures safe validation in this layer. The data\
    \ transfer\ntowards the managing layer is responsible for data management and\
    \ setting the criteria\nof infrastructure among networks for the application layer.\
    \ Integration of blockchain and\nartiﬁcial intelligence provides cryptography\
    \ hashing, digital identity, and encryption codes.\nAt last, the information is\
    \ transferred to the application layer, which is responsible for\nglobal management.\
    \ The integration of AI and blockchain implements the deep learning\ndata analytics\
    \ tool for ensuring data privacy and security in the network.\nIn the recent literature,\
    \ we can ﬁnd certain evidence about the importance of this\nproposed model as\
    \ a solution to the research gaps. Various applications are enabled with\nAI and\
    \ BC models. Various recent studies related to AI and blockchain shows the relevant\n\
    evidences about the importance of the proposed model. At this point, it is also\
    \ important\nto share that, to the best of author’s knowledge, none of literature\
    \ has been exploited\nthe AI oriented blockchain and blockchain oriented AI for\
    \ the IoT applications with a\ndetailed study. A decentralized and collaborative\
    \ AI model for blockchain was proposed\nto provide the application speciﬁc results\
    \ [43]. Later, authors in [44] proposed a framework\nwhere smart cities are enabled\
    \ with AI and blockchain for the decentralized auditing using\nblockchain technology.\
    \ An exhaustive literature review has been performed to study the\nvarious challenges,\
    \ solutions and future scope of the AI and blockchain technology [45].\nA detailed\
    \ study of integration of AI with blockchain [46] and applications of IoT enable\n\
    smart cities with emergence of AI and blockchain [47,48] has been discussed by\
    \ various\nauthors. Recently, authors proposed a model using blockchain and IoT\
    \ based cognitive\nedge framework for the smart city applications [49].\nSustainability\
    \ 2021, 13, 13076\n9 of 16\n4. Performance Analysis of AI-BC Framework\nIn this\
    \ section, the performance evaluation of the proposed framework design is\ndiscussed.\
    \ During the experimentation, an open source Ethereum blockchain platform is\n\
    explored. The proposed framework has major differences in terms of its fundamental\
    \ pro-\ncesses while comparing it other existing techniques. Considering this\
    \ point, the simulations\nare favored, and additional platforms are not implemented\
    \ for the purpose of evaluation.\nThe network performance is evaluated separately\
    \ because the network operates separately.\nThe performance of the proposed design\
    \ is studied by using the NS3 simulator for the\nperformance analysis of smart\
    \ city network. The NS3 simulator is used, as it is beneﬁcial in\ncomputing low\
    \ resource device performance. Another beneﬁt of using this simulator is\nthat\
    \ it increases the performance of overlay network and provides efﬁcient evaluation\
    \ of\npeer-to-peer networks.\nThe experimental feasibility of proposed AI-BC architecture\
    \ in Raspberry Pi is mea-\nsured in terms of four different metrics such as accuracy,\
    \ latency, and security/privacy\nanalysis. The accuracy analysis for the application\
    \ of object detection is computed, and it is\nobserved that the percentage accuracy\
    \ increases with increase in number of edge nodes\nand 5345 instances are utilized\
    \ for deep learning operation. The contribution of more nodes\nincreases the training\
    \ dataset and increases the accuracy in object detection. The variation\nin object\
    \ detection time is evaluated for total amount of edge nodes to elaborate the\
    \ latency\nimprovement. The analysis of security and privacy is computed by estimating\
    \ the similar-\nity index and calculated object’s Euclidian distance in IoT smart\
    \ city network. With the\nincrease in Euclidian distance the similarity index\
    \ value decreases. As a result, the security\nand privacy in IoT objects is increased\
    \ with the decrease in value of similarity index.\nThe performance of the proposed\
    \ architecture is measured in terms of qualitative\nand quantitative analysis.\
    \ In qualitative measurement, two cases are discussed determin-\ning how the integration\
    \ of artiﬁcial intelligence (AI) and blockchain (BC) is beneﬁcial for\nIoT applications.\
    \ First case represents artiﬁcial intelligence-oriented block chain for IoT\n\
    application, and second case represents blockchain-oriented artiﬁcial intelligence\
    \ for IoT\nframeworks. In this study, the issues of blockchain technology in IoT\
    \ applications are\nalso addressed along with artiﬁcial intelligence and described\
    \ solution for addressing\nthese issues of artiﬁcial intelligence with BC technology\
    \ by presenting advanced struc-\ntures. Whereas in quantitative measurement the\
    \ performance evaluation of proposed\nAI-BC architecture is evaluated and compared\
    \ with existing state of art approaches con-\nsidering performance indices such\
    \ as latency, data privacy and security, accuracy, energy\nconsumption and computational\
    \ complexity.\n4.1. Qualitative Measurement\nIn quantitative measurement two cases,\
    \ AI oriented blockchain and blockchain ori-\nented AI for the IoT applications\
    \ are presented. AI on the other hand boosts blockchain\ntechnology by providing\
    \ accurate prediction and efﬁcient decision making for IoT applica-\ntions. Therefore,\
    \ how AI addresses issues of blockchain is termed as artiﬁcial intelligence\n\
    oriented blockchain, i.e., case 1, and how BC addresses the issues of artiﬁcial\
    \ intelligence is\ndeﬁned as BC oriented AI, i.e., case 2.\nCase 1—Artiﬁcial intelligence\
    \ oriented blockchain\nAI driven blockchain leverages many ﬁelds such as manufacturing,\
    \ Internet of Things\nand big data, logistics, healthcare, industrial, and many\
    \ others. In all these applications, AI\nplays a signiﬁcant role in processing\
    \ of data or performing automating tasks to process the\ninformation into blockchain\
    \ technology. It is observed from many experiments that AI can\nbe as effective\
    \ as humans at tasks and AI is argued as better as it can function 24*7 without\n\
    facing failure or inclined to human error. The implementation of artiﬁcial intelligence\n\
    for blockchain technology in IoT applications is discussed. There are many limitations\
    \ of\nimplementing blockchain technology such as complexity, size of network and\
    \ high cost\nof transaction.\nSustainability 2021, 13, 13076\n10 of 16\nTo address\
    \ these limitations the artiﬁcial intelligence is integrated with blockchain.\n\
    These limitations are classiﬁed in ﬁve categories and depicted in Figure 5. The\
    \ ﬁrst category\nrepresents the hardware, which delivers the data from IoT applications\
    \ utilized by AI and\nblockchain. The second category is security and privacy,\
    \ which supports the cryptographic\nhashing and provides digitally signed transactions\
    \ across nodes in a network. The third\ncategory presents scalability, which determines\
    \ nodes capability to manage and grow\ndemand supply for the productivity. The\
    \ fourth class represents effectiveness, where the\ncomparison among input and\
    \ output assessment is observed in terms of timing and energy\nconsumption for\
    \ the IoT applications. The ﬁfth category represents the energy consumption\n\
    in which the overall power consumed by the miners in blockchain technology is\
    \ observed.\nFigure 5. Classiﬁcation of artiﬁcial intelligence (AI) oriented blockchain\
    \ (BC) for IoT.\nCase 2—Blockchain oriented artiﬁcial intelligence\nIn this case,\
    \ how blockchain technology addresses the issues of AI is discussed. The\ntaxonomy\
    \ of the blockchain oriented artiﬁcial intelligence for IoT application is depicted\
    \ in\nFigure 6. The AI issues for IoT application are addressed by integrating\
    \ blockchain technol-\nogy. There are ﬁve different categories of AI issues, which\
    \ are addressed by blockchain.\nThese issues are categorized as data sharing,\
    \ security and privacy, explainable AI, effective-\nness, and AI trust. The ﬁrst\
    \ category is data sharing, where the data resources are shared\nfrom one device\
    \ to another and provide various communication facilities. The second\ncategory\
    \ is security and privacy, where collected data is communicated from one device\
    \ to\nother in a secure manner and digital signature is provided for each transaction\
    \ through\ncryptographic hashing.\nThe third category is explainable AI, where\
    \ the techniques of artiﬁcial intelligence\ncan be trusted and made understandable\
    \ by human. This category deals with the self and\nperceived learning approaches.\
    \ The fourth category deals with the effectiveness of artiﬁcial\nintelligence\
    \ aiming to provide the predictive analysis methods for users. The ﬁfth category\n\
    is artiﬁcial intelligence trust, which aims to provide problem-solving capability\
    \ through\nneuron science. In this category, various tasks such as risk analysis,\
    \ information security\nanalysis, internal analysis and practitioner’s analysis\
    \ are performed. Blockchain technology\nallows distributed marketplaces and management\
    \ platforms that can be implemented in\nmany modules of Artiﬁcial Intelligence,\
    \ which comprises computing data, algorithms,\nand power. Blockchain driven AI\
    \ has the potential to process, manage and securely store\nSustainability 2021,\
    \ 13, 13076\n11 of 16\nthe data without relying on a third party. Blockchain provides\
    \ the solution for acute\nproblems of data security and storage, supply chains,\
    \ government processes, secure voting,\ncrowdfunding, transactions processing\
    \ and intellectual property. Hence, blockchains are\nprogressively adopted for\
    \ providing the transparency transactions and information to\ncustomers. The potentials\
    \ are limitless if there’s a technique for blockchain designers to\nadopt AI into\
    \ their platforms.\nFigure 6. Classiﬁcation of blockchain (BC) oriented artiﬁcial\
    \ intelligence (AI) for Internet of Things.\n4.2. Quantitative Measurement\nIn\
    \ this section, the performance of proposed AI-BC architecture is evaluated and\n\
    compared with the existing state of art approaches considering various parameters\
    \ such\nas accuracy, latency, data privacy and security, energy consumption and\
    \ computational\ncomplexity. The round robin approach and mini approach are the\
    \ algorithms implemented\nfor arranging the elements in a group in rational order.\
    \ The process includes initialization\nfrom top towards bottom, and then again\
    \ starting from top element of list and so on. This\nprocess takes turns by using\
    \ computer resources to limit the process for a short time span,\nthen further\
    \ suspending the process for giving a turn to the next process. The performance\n\
    analysis of proposed architecture is compared with existing research [7,15,24,26].\
    \ Each of\nthe existing studies provides analysis of big data at cloud, fog, edge,\
    \ and device intelli-\ngence. The compatibility of integrated artiﬁcial intelligence\
    \ and blockchain based AI-BC\narchitecture is analyzed by big data analysis. The\
    \ performance analysis of various existing\nresearches is presented in Table 2\
    \ in relation with the proposed AI-BC architecture. The\nquantitative analysis\
    \ from the proposed architecture is presented in Table 3. The perfor-\nmance of\
    \ present study is compared in terms of accuracy, latency privacy and security,\n\
    energy consumption and computational complexity with the existing techniques.\
    \ The\npercentage accuracy calculation for device deployment intelligence is observed\
    \ as 75%,\nwhereas for edge, fog and cloud computing, the percentage accuracy\
    \ is observed as 78%,\n92% and 70%.\nSustainability 2021, 13, 13076\n12 of 16\n\
    Table 2. Performance analysis of various existing research.\nSchemes\nCategories\n\
    Methods\nPerformance Indices\nProposed Approach\nPlatform\nApplication\nProcess\n\
    Device deployment\nintelligence [7]\nDeep Learning and\nBlockchain\nAccuracy and\
    \ Privacy\nSecure Deep learning\nbased on BC\nEthereum\nSolidity\nCollaborative\
    \ Deep\nLearning and generation of\ncandidate block\nEdge computing [15]\nDeep\
    \ Learning and\nBlockchain\nLatency, Accuracy and\nDelay\nSecure Deep learning\n\
    based on BC\nEthereum\nSolidity and Raspbian\nDistributive Deep Learning\nFog\
    \ computing [24]\nMachine Learning and\nBlockchain\nComputational\nResources and\n\
    Accuracy\nDecentralized network\nbased on BC\nEthereum\nLinux and Mininet\nAnalyzer\
    \ and classiﬁer of\ntrafﬁc ﬂow, Attack detection\nand mitigation based on BC\n\
    Cloud computing [26]\nReinforcement Learning\nand Blockchain\nAccuracy and\nEnergy\
    \ Consumption\nManagement of resource\nbased on BC\nEthereum and\nSmart contract\n\
    Solidity and Windows\nFrequency scaling\nTable 3. Quantitative analysis of the\
    \ proposed model.\nCategory\nPerformance Indices\nAccuracy (%)\nLatency in Milliseconds\n\
    Privacy and Security\nEnergy Consumption\nComputational Complexity\n(%)\nLowest\n\
    Highest\nHighest\nLowest\nCPU Usage\nMemory Usage\nDevice deployment\nintelligence\
    \ [7]\n75\n57.6\n58.7\n1.2\n0.02\n-\nIoT: 3.2–4.5 and for\nEdge devices: 34.2\n\
    IoT: 12.1–15.6 and for\nEdge devices: 25\nEdge computing [15]\n78\n56.2\n59.3\n\
    0.59\n0.3\n-\nIoT: 3.5–4.8 and for\nEdge devices: 37.2\nIoT: 12.5–15.8 and for\n\
    Edge devices: 26\nFog computing [24]\n92\n0\n12\n0.8\n0.1\n-\n92\n94\nCloud computing\
    \ [26]\n70\n-\n-\n-\n-\n55% in comparison with\nRound Robin approach and\n25%\
    \ in comparison with Mini\nBrown approach\n-\n-\nSustainability 2021, 13, 13076\n\
    13 of 16\nThe latency is measured as lowest and highest values in milliseconds.\
    \ At device\ndeployment, intelligence the observed lower and higher value of latency\
    \ is 57.6 ms and\n58.7 ms. At edge computing, the observed lower and higher value\
    \ of latency is 56.2 ms and\n59.3 ms. At fog computing, the observed lower and\
    \ higher value of latency is 0.0 ms and\n12 ms. The similarity index with highest\
    \ and lowest value are computed for measuring\nsecurity and privacy. The highest\
    \ and lowest value of similarity index for device deploy-\nment intelligence is\
    \ in range between 1.2 to 0.02. The highest and lowest value of similarity\nindex\
    \ for edge computing is in range between 0.59 to 0.3 and for fog computing it\
    \ is in\nrange between 0.8 to 0.1.\nThe computational complexity is measured in\
    \ terms of CPU and memory utilization.\nAt device deployment intelligence, the\
    \ observed CPU utilization is in a range between 3.2%\nto 4.5% for IoT, and for\
    \ edge devices it is 34.2%. The memory usage at device platform for\nIoT is in\
    \ range between 12.1% to 15.6%, whereas for edge devices it is observed at 25%.\
    \ At\nedge computing, the observed CPU utilization is in range between 3.5% to\
    \ 4.8% for IoT,\nand for edge devices it is 37.2%. The memory usage at edge for\
    \ IoT is in range between\n12.5% to 15.8%, whereas for edge devices it is observed\
    \ at 26%. The CPU usage at fog\ncomputing is observed as 92%, whereas the memory\
    \ usage at fog computing is observed as\n94%. The reduction of 55% in energy consumption\
    \ is observed when compared with round\nRobin approach, whereas 25% reduction\
    \ in energy consumption is observed in comparison\nwith Mini Brown approach.\n\
    The comparative analysis of the proposed AI-BC architecture with existing state\
    \ of art\ntechniques for intelligent device deployment, edge computing, fog computing\
    \ and cloud\ncomputing is depicted in Figures 7 and 8. Figure 7 presents the comparative\
    \ accuracy\nanalysis of proposed integrated AI-BC architecture, and Figure 8 presents\
    \ the comparative\nlatency analysis. The maximum percentage accuracy for intelligent\
    \ device deployment with\nblockchain technology is observed as 75%. The maximum\
    \ percentage accuracy for edge\ncomputing and fog computing with blockchain technology\
    \ is observed as 78% and 90%.\nOn the other hand, the maximum percentage accuracy\
    \ without blockchain technology at\nintelligent device deployment, edge computing\
    \ and fog computing is observed as 55%, 60%\nand 81%. Therefore, there are many\
    \ applications that can be used by various researchers,\nbut for each application,\
    \ the accuracy percentage is always observed as high by using\nblockchain for\
    \ IoT applications. The observed latency with blockchain technology for\nintelligent\
    \ device deployment is 58 ms. Similarly for edge computing and for computing,\n\
    the latency is observed as 60 ms and 22 ms. The observed latency without blockchain\n\
    technology for intelligent device deployment is 38 ms, whereas at edge and fog\
    \ intelligence,\nthe latency is observed as 45 ms and 12 ms. The latency is observed\
    \ to be higher with\nblockchain technology in comparison to without blockchain\
    \ technology.\nThe biggest advantage of the proposed system is that it presents\
    \ the integration of\nblockchain and artiﬁcial intelligence. The proposed system\
    \ is a secure intelligent blockchain\nframework that successfully addresses challenges\
    \ of accuracy, latency, and security. The\nkey beneﬁt of the proposed approach\
    \ is real time monitoring of energy consumption and\nsecured transactions. The\
    \ other key advantages of the proposed scheme considering smart\ncities application\
    \ are as follows:\nFor the access control, initially the blockchain technology\
    \ delivers database access\nto each participant. Considering the multiple interconnected\
    \ devices of the smart cities\nscenario, the proposed scheme has the capability\
    \ of providing complete, partial and no\naccess to the data stored in a single\
    \ database without causing security and privacy issues.\nThe proposed scheme represents\
    \ an incentive mechanism that can be utilized for motivating\ncitizens to adopt\
    \ various applications of smart cities.\nSustainability 2021, 13, 13076\n14 of\
    \ 16\nFigure 7. Comparative accuracy analysis of proposed integrated AI-BC.\n\
    Figure 8. Comparative latency analysis of proposed integrated AI-BC.\n5. Conclusions\n\
    In this article, an integrated blockchain and artiﬁcial intelligence based architecture\n\
    was proposed for IoT application. The objective behind this research was to achieve\
    \ scalable\nand secure transaction in IoT at device, cloud, fog and edge intelligence.\
    \ The performance\nof the proposed architecture was analyzed considering qualitative\
    \ and quantitative mea-\nsurements. In qualitative measurement, BC oriented AI\
    \ and AI oriented BC were presented\nwith standard taxonomy. The experimental\
    \ analysis was presented for evaluating the\nperformance of proposed architecture\
    \ with decentralized and secure big data analytics\nfor 6G-enabled IoT applications.\
    \ The experimental analysis presents the efﬁciency of\nproposed architecture in\
    \ terms of accuracy, latency, security, and privacy. It is observed\nfrom the\
    \ experimentation that integration blockchain and artiﬁcial intelligence successfully\n\
    addresses the challenges for obtaining high accuracy and security and less latency\
    \ through\ndecentralized network. The integration of blockchain and artiﬁcial\
    \ intelligence successfully\naddresses challenges of accuracy, latency, and security,\
    \ but the computational power issue\nwas not completely addressed with the proposed\
    \ framework.\nIn future work, the proposed architecture can be enhanced by adding\
    \ machine learning\nintelligence such as scaling process and feature extraction\
    \ to address the issue of classification.\nAuthor Contributions: Conceptualization,\
    \ A.S., E.P., G.S., A.T. (Alexey Tselykh) and A.T. (Alexander\nTselykh); methodology,\
    \ A.S. and E.P.; software, A.S., G.S. and E.P.; validation A.S. and E.P.; formal\n\
    Sustainability 2021, 13, 13076\n15 of 16\nanalysis, investigation, resources,\
    \ data curation, writing—original draft preparation A.S. and A.T.\n(Alexey Tselykh);\
    \ writing—review and editing; A.S., A.T. (Alexey Tselykh) and A.T. (Alexander\n\
    Tselykh); visualization, A.S., A.T. (Alexey Tselykh) and A.T. (Alexander Tselykh);\
    \ supervision, A.T.\n(Alexander Tselykh); project administration, A.T. (Alexey\
    \ Tselykh) and A.T. (Alexander Tselykh);\nfunding acquisition, A.S., A.T. (Alexey\
    \ Tselykh) and A.T. (Alexander Tselykh). All authors have read\nand agreed to\
    \ the published version of the manuscript.\nFunding: The research is supported\
    \ by postdoc fellowship granted by the Institute of Computer\nTechnologies and\
    \ Information Security, Southern Federal University, project N◦ PD/20-03-KT.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: Not applicable.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nCui, F. Deployment\
    \ and integration of smart sensors with IoT devices detecting ﬁre disasters in\
    \ huge forest environment. Comput.\nCommun. 2020, 150, 818–827. [CrossRef]\n2.\n\
    Benke, K.; Benke, G. Artiﬁcial intelligence and big data in public health. Int.\
    \ J. Environ. Res. Public Health 2018, 15, 2796. [CrossRef]\n[PubMed]\n3.\nMohammadi,\
    \ M.; Al-Fuqaha, A.; Sorour, S.; Guizani, M. Deep learning for IoT big data and\
    \ streaming analytics: A survey. IEEE\nCommun. Surv. Tutor. 2018, 20, 2923–2960.\
    \ [CrossRef]\n4.\nVeselov, G.; Tselykh, A.; Sharma, A.; Huang, R. Applications\
    \ of Artiﬁcial Intelligence in Evolution of Smart Cities and Societies.\nInformatica\
    \ 2021, 45. [CrossRef]\n5.\nMisra, N.N.; Dixit, Y.; Al-Mallahi, A.; Bhullar, M.S.;\
    \ Upadhyay, R.; Martynenko, A. IoT, big data and artiﬁcial intelligence in\nagriculture\
    \ and food industry. IEEE Internet Things J. 2020, 1. [CrossRef]\n6.\nDorri, A.;\
    \ Kanhere, S.S.; Jurdak, R. Towards an optimized blockchain for IoT. In Proceedings\
    \ of the 2017 IEEE/ACM Second\nInternational Conference on Internet-of-Things\
    \ Design and Implementation (IoTDI), Pittsburgh, PA, USA, 18–21 April 2017;\n\
    pp. 173–178.\n7.\nPanarello, A.; Tapas, N.; Merlino, G.; Longo, F.; Puliaﬁto,\
    \ A. Blockchain and iot integration: A systematic survey. Sensors 2018,\n18, 2575.\
    \ [CrossRef]\n8.\nKim, M.; Hilton, B.; Burks, Z.; Reyes, J. Integrating blockchain,\
    \ smart contract-tokens, and IoT to design a food traceability\nsolution. In Proceedings\
    \ of the 2018 IEEE 9th Annual Information Technology, Electronics and Mobile Communication\
    \ Conference\n(IEMCON), Vancouver, BC, Canada, 1–3 November 2018; pp. 335–340.\n\
    9.\nFakhri, D.; Mutijarsa, K. Secure IoT communication using blockchain technology.\
    \ In Proceedings of the 2018 International\nSymposium on Electronics and Smart\
    \ Devices (ISESD), Bandung, Indonesia, 23–24 October 2018; pp. 1–6.\n10.\nMohanta,\
    \ B.K.; Jena, D.; Satapathy, U.; Patnaik, S. Survey on IoT security: Challenges\
    \ and solution using machine learning,\nartiﬁcial intelligence and blockchain\
    \ technology. Internet Things 2020, 11, 100227. [CrossRef]\n11.\nLopes, V.; Alexandre,\
    \ L.A. An overview of blockchain integration with robotics and artiﬁcial intelligence.\
    \ arXiv Prepr. 2018,\narXiv:1810.00329. [CrossRef]\n12.\nAlShamsi, M.; Salloum,\
    \ S.A.; Alshurideh, M.; Abdallah, S. Artiﬁcial intelligence and blockchain for\
    \ transparency in governance.\nIn Artiﬁcial Intelligence for Sustainable Development:\
    \ Theory, Practice and Future Applications; Springer: Cham, Switzerland, 2021;\n\
    pp. 219–230.\n13.\nOsuwa, A.A.; Ekhoragbon, E.B.; Fat, L.T. Application of artiﬁcial\
    \ intelligence in Internet of Things. In Proceedings of the 2017\n9th International\
    \ Conference on Computational Intelligence and Communication Networks (CICN),\
    \ Cyprus, Turkey, 16–17\nSeptember 2017; pp. 169–173.\n14.\nQiu, C.; Yao, H.;\
    \ Jiang, C.; Guo, S.; Xu, F. Cloud computing assisted blockchain-enabled Internet\
    \ of Things. IEEE Trans. Cloud\nComput. 2019, 1, 1. [CrossRef]\n15.\nYue, L.;\
    \ Junqin, H.; Shengzhi, Q.; Ruijin, W. Big data model of security sharing based\
    \ on blockchain. In Proceedings of the 2017\n3rd International Conference on Big\
    \ Data Computing and Communications (BIGCOM), Chengdu, China, 10–11 August 2017;\n\
    pp. 117–121.\n16.\nSharma, A.; Singh, P.K. UAV-based framework for effective data\
    \ analysis of forest ﬁre detection using 5G networks: An effective\napproach towards\
    \ smart cities solutions. Int. J. Commun. Syst. 2021, e4826. [CrossRef]\n17.\n\
    Yang, J.; Sharma, A.; Kumar, R. IoT-Based Framework for Smart Agriculture. Int.\
    \ J. Agric. Environ. Inf. Syst. (IJAEIS) 2021, 12,\n1–14. [CrossRef]\n18.\nLiu,\
    \ Y.; Sun, Q.; Sharma, A.; Sharma, A.; Dhiman, G. Line monitoring and identiﬁcation\
    \ based on roadmap towards edge\ncomputing. Wirel. Pers. Commun. 2021, 1–24. [CrossRef]\n\
    Sustainability 2021, 13, 13076\n16 of 16\n19.\nSharma, A.; Singh, P.K.; Kumar,\
    \ Y. An integrated ﬁre detection system using IoT and image processing technique\
    \ for smart cities.\nSustain. Cities Soc. 2020, 61, 102332. [CrossRef]\n20.\n\
    Wang, K.; Dong, J.; Wang, Y.; Yin, H. Securing data with blockchain and AI. IEEE\
    \ Access 2019, 7, 77981–77989. [CrossRef]\n21.\nJin, X.L.; Zhang, M.; Zhou, Z.;\
    \ Yu, X. Application of a blockchain platform to manage and secure personal genomic\
    \ data: A case\nstudy of LifeCODE. ai in China. J. Med. Internet Res. 2019, 21,\
    \ e13587. [CrossRef]\n22.\nTariq, N.; Asim, M.; Al-Obeidat, F.; Zubair Farooqi,\
    \ M.; Baker, T.; Hammoudeh, M.; Ghaﬁr, I. The security of big data in\nfog-enabled\
    \ IoT applications including blockchain: A survey. Sensors 2019, 19, 1788. [CrossRef]\n\
    23.\nLiu, B.; Yu, X.L.; Chen, S.; Xu, X.; Zhu, L. Blockchain based data integrity\
    \ service framework for IoT data. In Proceedings of the\n2017 IEEE International\
    \ Conference on Web Services (ICWS), Honolulu, HI, USA, 25–30 June 2017; pp. 468–475.\n\
    24.\nCasado-Vara, R.; de la Prieta, F.; Prieto, J.; Corchado, J.M. Blockchain\
    \ framework for IoT data quality via edge computing.\nIn Proceedings of the 1st\
    \ Workshop on Blockchain-Enabled Networked Sensor Systems, Shenzhen, China, 4\
    \ November 2018;\npp. 19–24.\n25.\nChen, J.; Lv, Z.; Song, H. Design of personnel\
    \ big data management system based on blockchain. Future Gener. Comput. Syst.\
    \ 2019,\n101, 1122–1129. [CrossRef]\n26.\nSharma, A.; Cholda, P.; Kumar, R.; Dhiman,\
    \ G. Risk-aware optimized quickest path computing technique for critical routing\n\
    services. Comput. Electr. Eng. 2021, 95, 107436. [CrossRef]\n27.\nVo, H.T.; Mohania,\
    \ M.; Verma, D.; Mehedy, L. Blockchain-powered big data analytics platform. In\
    \ International Conference on Big\nData Analytics; Springer: Cham, Switzerland,\
    \ 2018; pp. 15–32.\n28.\nKim, S.; Deka, G.C. (Eds.) Advanced Applications of Blockchain\
    \ Technology; Springer: Berlin/Heidelberg, Germany, 2020.\n29.\nRao, T.A.; Haq,\
    \ E.U. Security challenges facing IoT layers and its protective measures. Int.\
    \ J. Comput. Appl. 2018, 179, 31–35.\n30.\nFerrag, M.A.; Shu, L.; Yang, X.; Derhab,\
    \ A.; Maglaras, L. Security and privacy for green IoT-based agriculture: Review,\
    \ blockchain\nsolutions, and challenges. IEEE Access 2020, 8, 32031–32053. [CrossRef]\n\
    31.\nMinoli, D.; Occhiogrosso, B. Blockchain mechanisms for IoT security. Internet\
    \ Things 2018, 1, 1–13. [CrossRef]\n32.\nQian, Y.; Jiang, Y.; Chen, J.; Zhang,\
    \ Y.; Song, J.; Zhou, M.; Pustišek, M. Towards decentralized IoT security enhancement:\n\
    A blockchain approach. Comput. Electr. Eng. 2018, 72, 266–273. [CrossRef]\n33.\n\
    Hassija, V.; Chamola, V.; Saxena, V.; Jain, D.; Goyal, P.; Sikdar, B. A survey\
    \ on IoT security: Application areas, security threats, and\nsolution architectures.\
    \ IEEE Access 2019, 7, 82721–82743. [CrossRef]\n34.\nTsang, Y.P.; Choy, K.L.;\
    \ Wu, C.H.; Ho, G.T.S.; Lam, H.Y. Blockchain-driven IoT for food traceability\
    \ with an integrated consensus\nmechanism. IEEE Access 2019, 7, 129000–129017.\
    \ [CrossRef]\n35.\nPavithran, D.; Shaalan, K.; Al-Karaki, J.N.; Gawanmeh, A. Towards\
    \ building a blockchain framework for IoT. Clust. Comput. 2020,\n23, 2089–2103.\
    \ [CrossRef]\n36.\nCai, H.; Xu, B.; Jiang, L.; Vasilakos, A.V. IoT-based big data\
    \ storage systems in cloud computing: Perspectives and challenges.\nIEEE Internet\
    \ Things J. 2016, 4, 75–87. [CrossRef]\n37.\nTruong, H.T.T.; Almeida, M.; Karame,\
    \ G.; Soriente, C. Towards secure and decentralized sharing of IoT data. In Proceedings\
    \ of\nthe 2019 IEEE International Conference on Blockchain (Blockchain), Atlanta,\
    \ GA, USA, 14–17 July 2019; pp. 176–183.\n38.\nDebauche, O.; Mahmoudi, S.; Mahmoudi,\
    \ S.A.; Manneback, P.; Lebeau, F. A new edge architecture for ai-iot services\
    \ deployment.\nProcedia Comput. Sci. 2020, 175, 10–19. [CrossRef]\n39.\nMohanty,\
    \ S.N.; Ramya, K.C.; Rani, S.S.; Gupta, D.; Shankar, K.; Lakshmanaprabu, S.K.;\
    \ Khanna, A. An efﬁcient Lightweight\nintegrated Blockchain (ELIB) model for IoT\
    \ security and privacy. Future Gener. Comput. Syst. 2020, 102, 1027–1037. [CrossRef]\n\
    40.\nRathore, S.; Park, J.H. A blockchain-based deep learning approach for cyber\
    \ security in next generation industrial cyber-physical\nsystems. IEEE Trans.\
    \ Ind. Inform. 2020, 17, 5522–5532. [CrossRef]\n41.\nPan, J.; Wang, J.; Hester,\
    \ A.; Alqerm, I.; Liu, Y.; Zhao, Y. Edge Chain: An edge-IoT framework and prototype\
    \ based on blockchain\nand smart contracts. IEEE Internet Things J. 2018, 6, 4719–4732.\
    \ [CrossRef]\n42.\nPang, H.; Zheng, Z.; Zhen, T.; Sharma, A. Smart Farming: An\
    \ Approach for Disease Detection Implementing IoT and Image\nProcessing. Int.\
    \ J. Agric. Environ. Inf. Syst. (IJAEIS) 2021, 12(1), 55–67. [CrossRef]\n43.\n\
    Harris, J.D.; Waggoner, B. Decentralized and collaborative AI on blockchain. In\
    \ Proceedings of the 2019 IEEE International\nConference on Blockchain (Blockchain),\
    \ Atlanta, GA, USA, 14–17 July 2019; pp. 368–375.\n44.\nYu, H.; Yang, Z.; Sinnott,\
    \ R.O. Decentralized big data auditing for smart city environments leveraging\
    \ blockchain technology.\nIEEE Access 2018, 7, 6288–6296. [CrossRef]\n45.\nKumari,\
    \ A.; Gupta, R.; Tanwar, S.; Kumar, N. Blockchain and AI amalgamation for energy\
    \ cloud management: Challenges,\nsolutions, and future directions. J. Parallel\
    \ Distrib. Comput. 2020, 143, 148–166. [CrossRef]\n46.\nSingh, S.; Sharma, P.K.;\
    \ Yoon, B.; Shojafar, M.; Cho, G.H.; Ra, I.H. Convergence of blockchain and artiﬁcial\
    \ intelligence in IoT\nnetwork for the sustainable smart city. Sustain. Cities\
    \ Soc. 2020, 63, 102364. [CrossRef]\n47.\nDinh, T.N.; Thai, M.T. Ai and blockchain:\
    \ A disruptive integration. Computer 2018, 51, 48–53. [CrossRef]\n48.\nSingh,\
    \ S.K.; Rathore, S.; Park, J.H. Blockiotintelligence: A blockchain-enabled intelligent\
    \ IoT architecture with artiﬁcial intelligence.\nFuture Gener. Comput. Syst. 2020,\
    \ 110, 721–743. [CrossRef]\n49.\nRahman, M.A.; Rashid, M.M.; Hossain, M.S.; Hassanain,\
    \ E.; Alhamid, M.F.; Guizani, M. Blockchain and IoT-based cognitive edge\nframework\
    \ for sharing economy services in a smart city. IEEE Access 2019, 7, 18611–18621.\
    \ [CrossRef]\n"
  inline_citation: '>'
  journal: Sustainability
  limitations: '>'
  pdf_link: https://www.mdpi.com/2071-1050/13/23/13076/pdf?version=1638160218
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Sustainable Smart Cities: Convergence of Artificial Intelligence and Blockchain'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.comnet.2021.108177
  analysis: '>'
  authors:
  - Saeik Firdose
  - Marios Avgeris
  - Dimitrios Spatharakis
  - Nina Santi
  - Dimitrios Dechouniotis
  - John Violos
  - Aris Leivadeas
  - Νικόλαος Αθανασόπουλος
  - Nathalie Mitton
  - Symeon Papavassiliou
  citation_count: 102
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Computing paradigms: Overview & use
    cases 3. Task offloading & challenges 4. A taxonomy of task offloading approaches
    5. Open challenges and future directions 6. Conclusion CRediT authorship contribution
    statement Declaration of Competing Interest Acknowledgment References Vitae Show
    full outline Cited by (132) Figures (6) Tables (4) Table 1 Table 2 Table 3 Table
    4 Computer Networks Volume 195, 4 August 2021, 108177 Survey paper Task offloading
    in Edge and Cloud Computing: A survey on mathematical, artificial intelligence
    and control theory solutions Author links open overlay panel Firdose Saeik a,
    Marios Avgeris b, Dimitrios Spatharakis b, Nina Santi c, Dimitrios Dechouniotis
    b, John Violos a, Aris Leivadeas a, Nikolaos Athanasopoulos d, Nathalie Mitton
    c, Symeon Papavassiliou b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.comnet.2021.108177
    Get rights and content Abstract Next generation communication networks are expected
    to accommodate a high number of new and resource-voracious applications that can
    be offered to a large range of end users. Even though end devices are becoming
    more powerful, the available local resources cannot cope with the requirements
    of these applications. This has created a new challenge called task offloading,
    where computation intensive tasks need to be offloaded to more resource powerful
    remote devices. Naturally, the Cloud Computing is a well-tested infrastructure
    that can facilitate the task offloading. However, Cloud Computing as a centralized
    and distant infrastructure creates significant communication delays that cannot
    satisfy the requirements of the emerging delay-sensitive applications. To this
    end, the concept of Edge Computing has been proposed, where the Cloud Computing
    capabilities are repositioned closer to the end devices at the edge of the network.
    This paper provides a detailed survey of how the Edge and/or Cloud can be combined
    together to facilitate the task offloading problem. Particular emphasis is given
    on the mathematical, artificial intelligence and control theory optimization approaches
    that can be used to satisfy the various objectives, constraints and dynamic conditions
    of this end-to-end application execution approach. The survey concludes with identifying
    open challenges and future directions of the problem at hand. Previous article
    in issue Next article in issue Keywords Edge ComputingTask offloadingResource
    allocationControl theoryMathematical optimizationArtificial intelligence 1. Introduction
    Wireless communications have come a long way over the last 40 years allowing a
    plethora of new applications and services to proliferate. This wireless growth
    has revolutionized the way humans and machines interact with each other and between
    them. Specifically, as wireless technologies evolve, the data rate, mobility,
    coverage and spectral efficiency rapidly increase [1], permitting radical changes
    on the grounds of our society and our personal communication. At the same time,
    with the advent of the Internet of Things (IoT) and emergent applications such
    as Virtual Reality (VR) and driverless cars, the demand for wireless communications
    with even higher-speeds and ubiquitous connectivity becomes a necessity that requires
    more efficient wireless communication systems. 5G is an exemplary wireless communication
    system that tries to minimize the gap between the new emergent applications and
    their high-performance requirements. Specifically, 5G promises the support of
    increased bandwidth and connection density, as well as low-latency communication,
    with the induction of the enhanced mobile broadband (eMMB), the massive machine-type
    communication (mMTC) and the ultra-reliable low latency communication (uRLLC)
    services [2]. However, even though the performance of the wireless access networks
    continues to increase, allowing the support of new and more intelligent applications,
    the end devices cannot always cope with the strict computational requirements
    of these resource voracious applications. Inevitably, the answer to where we can
    find an increased availability of computational resources, accompanied with the
    necessary reliability to offer a seamless communication for the wireless applications,
    always lies around the Cloud. The Cloud is a well tested and used solution that
    can extend the resource capabilities of the end devices with powerful data center
    topologies. Besides, Cloud is well equipped with the appropriate automation tools
    and platforms in order to offer the necessary transparency to the end devices,
    while hiding the complexity and the logistic details of this resource extension.
    Hence, the practice of offloading computation intensive tasks of resource-intensive
    applications from the end devices to a centralized Cloud infrastructure, is a
    well explored solution [3][4]. Nonetheless, as the focus of new applications turned
    towards high throughput and low latency communications, the Cloud started to expose
    its inherent limitations. The long distance between the end devices and the Cloud
    infrastructure, the use of a best-effort and unreliable intermittent transport
    network, the cost of traversing the backhaul network and the increased security
    surface throughout this long communication path, created the need for alternative
    solutions. There is no question, that these substitute solutions should introduce
    a more distributed infrastructure that will enhance the local efficiency by bringing
    Cloud-like capabilities closer to the end devices, at the edge of the network.
    This is exactly how the term Edge Computing was coined. Even though, multiple
    flavors of the Edge Computing exist (e.g., Fog Computing, Mobile Cloud Computing,
    Cloudlet, Mobile Edge Computing), they all agree that additional and existing
    computational and networking resources at the edge of the network should be inserted
    and regrouped. This new infrastructural component that creates an additional resource
    layer between the end devices and the Cloud, is able to reduce the increased bandwidth
    consumption at the backhaul, transport and Cloud networks and also reduce the
    communication delay and support applications with real time requirements. In particular,
    end devices are now capable of offloading their resource-intensive tasks to a
    nearby Edge device, thus minimizing the overall execution time without adding
    excessive communication paths towards a distant Cloud infrastructure. This solution,
    called task offloading, allows enhancing the user’s experience by providing lower
    latency, better reliability and improved energy efficiency for battery-powered
    devices. Even though the notion of Edge Computing exists for almost a decade,
    the problem of task offloading has only recently started to be investigated. Nonetheless,
    it has gained a lot of attention from the industry and the academic community,
    leading to the publication of many scientific and research papers over the last
    couple of years. A great effort has also been made to classify and categorize
    the different types of task offloading by a number of surveys and tutorials. These
    surveys focused on multiple aspects such as architecture [5], [6], [7], resource
    allocation [8], [9], communication [8], [10], [11], caching [10], mobility management
    [6], [10], [12], integration with wireless, IoT and 5G technologies [5], [8],
    [13], [14], decision on task offloading [6], [11], application partitioning [12],
    [15], application models [8], [12], [16], [17], application scenarios [5], [8],
    [10], [15], [18], [19] and algorithms [11], [12], [17]. In this survey paper,
    we also attempt to study the task offloading problem, emphasizing, however, on
    novel algorithmic and control approaches. Thus, in contrast with recent surveys
    on task offloading, our contribution is twofold; firstly, we provide a comprehensive
    survey of task offloading within three subfields: (i) Optimization algorithms
    (ii) Artificial Intelligence techniques and (iii) Control theory; secondly, a
    categorization of the above techniques is provided based on their objective function,
    the granularity level, the use of the Edge and/or Cloud infrastructures and the
    incorporation of mobility in the overall solution, depending on the type of the
    edge devices. This paper is organized as follows. Section 2 presents an overview
    of the various computing paradigms and relevant technologies evolved in the last
    decade, along with some potential use cases for task offloading of interactive
    applications. Following, Section 2.2.6 formally defines the task offloading problem
    along with the challenges involved. Section 4 covers different task offloading
    solutions that have been recently proposed, emphasizing on the mathematical models,
    optimization techniques, machine learning algorithms and control theory approaches.
    Section 5 presents the open challenges. Finally, we conclude and provide suggestions
    for future work in Section 6. 2. Computing paradigms: Overview & use cases As
    already discussed, over the last two decades Cloud Computing has been the dominant
    service delivery paradigm. However, modern applications come with strict requirements
    which cannot be met via execution in remote Cloud resources (e.g., ultra low delay).
    Thus, the current trend of resource provisioning is to augment the edge of the
    network with computing capabilities. Towards this direction, the emerging service
    model of Edge Computing promises to mitigate the limitations of Cloud Computing.
    To clarify the ambiguity behind the terminology and architectures used in the
    literature, this section provides the fundamental elements of the various modern
    computing infrastructures such as Cloud Computing, Mobile Cloud Computing, Mobile
    Edge Computing and Fog Computing. Furthermore, emerging use cases concerning task
    offloading at the Edge and/or Cloud are presented. 2.1. Modern computing paradigms
    2.1.1. Cloud computing Cloud Computing has revolutionized the Internet and completely
    transformed the way that applications, software and resources are offered to the
    end users. According to NIST [20], Cloud Computing is defined as “a model for
    enabling convenient, on-demand network access to a shared pool of configurable
    computing resources (e.g., networks, servers, storage, applications and services)
    that can be rapidly provisioned and released with minimal management effort or
    service provider interaction”. The Cloud paradigm brings unique benefits. In particular,
    with this model, computing resources are offered to the end users on demand, in
    a self-service fashion, independent of the type of the device and the location
    of the user. Furthermore, the computational and network resources available at
    the Cloud can be shared and dynamically scaled. This is achieved by adopting virtualization
    as the enabling technology of the Cloud, allowing the resources to be allocated
    and released with minimal interaction, while users pay for the service they consume
    according to its usage [21]. Despite bringing numerous advantages, Cloud Computing
    poses some serious limitations. These limitations, although they exist since the
    beginning of the Cloud, they did not surface until recently. The reason is that
    new communication technologies, new applications and services have increased the
    data volume generated and at the same time also increased the demands for low
    latency communications. Hence, offering Cloud Computing resources in a centralized
    manner far away from the users, can create serious delay bottlenecks. This delay
    can be disastrous for mission critical applications, such as health related applications,
    or time-critical applications like real-time control in manufacturing. Another
    disadvantage is that forwarding the traffic from the end devices to the Cloud,
    usually involves traversing the core Internet. This can create three serious problems.
    Firstly, sending hundreds of TB of data from the devices to the Cloud can certainly
    create traffic hotspots in the Internet infrastructure, which can further affect
    the communication delay. Secondly, the existence of various different networks
    and administrative domains between the Cloud and the front-end devices, can create
    an unstable and intermittent network connectivity. Finally, the data, before being
    sent to the Cloud, probably have to traverse a backhaul network (e.g., cellular
    and satellite). This backhaul network may be costly and lossy, creating additional
    problems to this end-to-end communication. Of course, there may be additional
    limitations, regarding for example the security aspects of the communication,
    since this end device-to-Cloud communication increases the surface of threat.
    However, in the particular survey we emphasize only on the networking and data
    processing limitations. 2.1.2. Mobile cloud computing Apparently, Cloud Computing
    can be used for offloading tasks from mobile devices to a more powerful infrastructure.
    This approach created the notion of Mobile Cloud Computing (MCC). A Mobile Cloud
    is defined as a mobile device that can execute a resource-intensive application
    on a distant high-performance compute server or compute cluster and support thin
    client user interactions with the application over the Internet [22], [23], [24],
    [25]. MCC can be thus described as the integration of mobile devices with Cloud
    Computing technology. It offers computing, storage, services and applications
    over the Internet and the typical advantages found in a Cloud Computing environment
    such as cost reduction and resource flexibility. In addition, MCC can potentially
    save energy for mobile users by offloading high-energy consuming applications
    to the Cloud [21]. However, such an approach still carries the typical Cloud limitations
    presented above. Thus, the concept of MCC can be modified to offer the necessary
    Cloud resources closer to the mobile devices. This new flavor of MCC is called
    Cloudlet [26] and it allows the mobile devices to offload their workload to a
    local “mini cloud”, consisting of multiple multi-core hardware equipment directly
    connected to an Access Point (AP) or Base Station (BS). Therefore, Cloudlet can
    be seen as a trusted, resource-rich computer or computer cluster, which is connected
    to the Internet and is available for use from mobile devices in proximity. Due
    to the sheer proximity of Cloudlet, sharp interactive response for immersive applications
    that magnify human cognition is much easier to attain. Instead of depending on
    a remote server, a mobile user instantiates a “Cloudlet” on the local network
    and uses it via a wireless LAN. These proposed Cloudlets can be placed in common
    areas such as railway stations, restaurants and coffee shops, so that mobile devices
    could connect to them and act as a thin client. This opposes to the use of a centralized
    Cloud server that would raise issues of latency and bandwidth. 2.1.3. Fog computing
    Fog Computing is another approach for expanding the Cloud Computing concept to
    the edge of the network, thus enabling a new range of apps and services [27],
    [28]. Fog Computing was the first industry initiative to explicitly define an
    architecture for applying utility Cloud at the edge of the network, and was standardized
    by the OpenFog consortium [29]. Specifically, the term Fog Computing was coined
    by Cisco in 2012 and is defined as “the process of extending Cloud Computing capabilities
    at the edge of the network. Fog incorporates computing, storage and network resources
    close to the IoT layer to facilitate the data processing”. [27], [30]. From the
    previous definition it becomes evident that Fog Computing was introduced in order
    to facilitate the monitoring, control and analysis of IoT devices in real time,
    removing the long communication delay between the IoT devices and the central
    analytics application servers in a remote Cloud. Hence, Fog Computing expands
    Cloud Computing by installing localized computing facilities at the user’s premises,
    delivering Cloud data to mobile users with fast local connections. The aim is
    to process in part workload and services locally on Fog devices (such as hardened
    routers, switches, IP video cameras), rather than being transmitted to the Cloud
    [28]. As such, Fog Computing introduces an intermediate infrastructure layer between
    mobile users and Cloud, in order to support low-latency and high-speed services.
    Moreover, Fog Computing can support and promote applications that do not suit
    the Cloud [31], such as (i) applications involving very low and consistent latency,
    (ii) geographically distributed systems such as pipeline control and sensor networks
    (iii) mobile applications like smart connected vehicles and (iv) large-scale adaptive
    control systems, such as smart energy delivery and smart traffic lights. As such,
    in the literature, the typical applications usually combined with the Fog Computing
    are mostly IoT related [32], [33], [34], cache networks [35] and immersive media
    services (AR/VR, a 360-degree video and free-viewpoint video) applications [36].
    2.1.4. Edge computing Fog Computing has managed to bypass many of the limitations
    of Cloud Computing, increasing the performance of IoT and mobile applications
    in terms of task offloading. However, stringent requirements such as ultra-low
    latency, user experience, stability and high reliability have created the need
    for even higher localized information near end users. Thus, Edge Computing is
    another similar concept, that can be defined as a network layer encompassing end
    devices and their users, in order to provide local computing capabilities on sensors,
    smart meters or other network-accessible devices. Following the same mentality
    where Cloud can be found in a distant location far away from the end user and
    Fog can be found closer to the end user, Edge Computing has also been associated
    with the term Mist Computing. As the name suggests, Mist Computing covers the
    computational and communication capacity available on the same level with the
    end devices. According to NIST [37], Mist Computing is defined as a lightweight
    and primitive type of Fog Computing which resides at the very edge of the network,
    bringing the layer of Fog Computing closer to the smart end devices. Mist Computing
    uses microcomputers and microcontrollers to feed into nodes of Fog Computing and
    theoretically into centralized (Cloud) Computing. In light of this, Mobile Edge
    Computing (MEC) was developed as a key technology to assist wireless networks
    with Cloud Computing-like capabilities to provide low-latency and context-aware
    services directly from the network Edge [38], [39], [40], [41], [42], [43], [44],
    [45], [46], [47], [48]. Mobile Edge Computing, lately renamed as Multi-Access
    Edge Computing, was initiated under the umbrella of the European Telecommunication
    Standards Institute (ETSI) [47]. A key objective of the ETSI initiative is to
    standardize the APIs between the mobile Edge platform and the application service
    scenarios (augmented reality (AR), mixed reality (MR), intelligent video acceleration
    and Internet of Things gateway) and promote innovation in an open environment
    [38]. ETSI’s reference architecture is largely based on the concept of Network
    Function Virtualization (NFV), where MEC applications can be offered as Virtualized
    Network Functions (VNFs). 2.1.5. Computing paradigms comparison Almost all of
    the paradigms discussed above have as a common ground that they are offering remote
    computational and communication capabilities to the end devices. Furthermore,
    except from the Cloud, the rest of the paradigms are able to offer these capabilities
    at the edge of the network, as close to the end devices as possible. Nonetheless,
    there are some differences between them. First of all, in terms of available resources,
    as we move farther from the end devices the available resources increase in quantity,
    with the Cloud having practically infinite capacity. Since a public Cloud may
    have dozens of data centers, each equipped with hundreds of servers, around the
    world, there is no actual problem of resource depletion. In contrast, in Fog,
    MCC, and MEC infrastructures, resource availability is mostly limited due to the
    fact that they are comprised of micro-data centers with few servers of lower capabilities
    than the ones that we usually find in the Cloud. On top of that, in edge infrastructures,
    we also find heterogeneous hardware resources with even lower resource availability
    such as wireless routers and gateways, street cabinets and Raspberry Pi’s. Secondly,
    delay can be another factor of comparison between the different infrastructures.
    As mentioned before, Cloud Computing is not always a feasible solution for providing
    low latency communication. To this end, the available infrastructure at the edge
    of the network is the most favorable option to reduce the communication delay.
    Nonetheless, since there are various levels of Edge at the WAN, LAN, or access
    network, different levels of delays can be produced, regarding where the computing
    resources are located. Obviously, going at the level of the access network, i.e.,
    the extreme Edge or Mist, the delay is minimized since we do not have to account
    propagation and transmission delays involved in traversing the LAN, WAN or a backhaul
    network. However, in this case, another factor rises; that of the energy consumption.
    The available hardware at the Mist is usually battery supplied, imposing the double
    burden of both limited resources and limited lifetime. Thirdly, some of the paradigms
    were conceived under the scope of providing computational resources to specific
    applications. For example, Fog Computing was introduced to facilitate some of
    the top IoT application domains and vertical markets, such as energy, industry,
    transportation, agriculture, and healthcare [29]. On the other hand, MCC is mostly
    associated with providing remote computational resources to mobile applications,
    while MEC introduces the necessary flexibility to host multiple applications in
    the areas of video analytics, location services, IoT, augmented reality, optimized
    local content distribution and data caching among others [49]. Particular emphasis
    should be placed on the uniqueness of the MEC. In particular, even though MEC
    is oriented to cellular Radio Access Networks (RAN), it can be practically applied
    to any kind of access network. Furthermore, the way that MEC has been defined
    and standardized by ETSI, promotes an open environment where third-party developers,
    application and service providers can all participate together towards expediting
    the introduction of new applications targeting to respond to emerging user requirements.
    Finally, the decision of which paradigm to follow, usually includes the requirements
    of security and confidentiality. Certainly, Cloud Computing as a popular and successful
    technology, has many safeguards and tools to provide a certain level of security
    and confidentiality. Nonetheless, several security threats still exist making
    Cloud-based security an active open-challenge. Additionally, sending data to the
    Cloud over the Internet can be susceptible to attacks. In contrast, by employing
    an Edge infrastructure, the necessary security and confidentiality can be attained
    since the data of the end devices usually stay within the local network. From
    the above, the pros and cons of each computing paradigm can be extracted. Even
    though the MCC, Fog, and MEC can overcome certain limitations of the Cloud, they
    usually cannot be offered as a standalone solution. In other words, the notion
    of Edge Computing in general, did not emerge to replace the Cloud but rather to
    complement it. Thus, it is very important to create collaborative solutions (possibly
    utilizing more than two computing paradigms) that will enable a smooth continuum
    from the end device to the Cloud, with the goal to satisfy the stringent requirements
    of novel and future applications. 2.2. Use cases Following the above definitions
    of the computing paradigms and the respective infrastructures, in this part of
    the survey we refer to some typical applications that leverage task offloading
    at the available resources at the edge of the network in order to increase their
    performance. These real-world applications can range from simple data processing
    to immersive multimedia applications. Following, we briefly describe the role
    of task offloading in the particular set of applications. 2.2.1. Immersive applications
    Current developments in computer vision have made possible the launching of mixed
    reality applications, such as VR and AR, that can offer immersive experience even
    in wireless environments. At the same time, the development of increasingly advanced
    mobile devices such as smart glasses, can help us identify objects, superimpose
    contextual knowledge on our field of vision and create a three-dimensional view
    of the surrounding environment. As these devices become smarter, more and more
    sensor data in our environment can be aggregated, processed and served, requiring
    however high bandwidth and low response time communications. Hence, task offloading
    can be an advantageous solution for this type of applications. Specifically, both
    Cloud and Edge-based task offloading mechanisms can be used in AR/VR applications
    [36], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61].
    The objectives include reducing the energy consumption in mobile devices, increasing
    the speed of computation intensive operations, reducing the average CPU load to
    overcome computation intensive tasks and improving the user’s Quality of Experience
    (QoE). 2.2.2. Autonomous vehicles Similar to the immersive media services, autonomous
    vehicles is another type of application that task offloading can be utilized.
    The key objectives here are to reduce the latency and the transmission cost and
    increase the efficiency of traffic management. Use case-oriented services concerning
    autonomous driving include: Highway Pilot, Parking Pilot, Fully Automated Vehicle
    and Vehicle on Demand [62]. Edge Computing is considered as the key technology
    in connected vehicles, adding computation capabilities and geo-distributed services
    to BSs and Edge devices distributed on the roadside. The idea is to analyze data
    from proximate vehicles and roadside sensors and broadcast messages to drivers
    at a very low latency [63]. For example, in an intelligent transportation system,
    low-level devices can be used for the decision-making processes of the transportation
    [64]. Specifically, the decision-making tasks can be distributed to Edge devices
    instead of sending all the data to a centralized server. Moreover, task offloading
    can enable real-time traffic management [65]. 2.2.3. Robotics Very complex robotic
    applications have been emerging during the last decade, related among others to
    autonomous mobile agents, manipulators and collaborative tasks. Efficient, safe
    and autonomous robot operation in manufacturing, health care, learning and exploration,
    requires running computation and memory intensive algorithms related to image
    processing, planning, localization, mapping and autonomous learning. Consequently,
    during the last few years, task offloading is gaining attention that has lead
    to the new paradigms of Cloud, Edge and Fog robotics [66], [67], [68], [69], [70].
    Specifically, many offloading opportunities emerge in planning and SLAM (simultaneous
    localization and mapping) algorithms for robotic manipulators [71], [72], mobile
    robots [73], [74], [75], [76], [77] and learning in general [78], [79], among
    others. It is worth noting that there are already available commercial products
    that allow task offloading in robotic applications [80], [81], [82]. 2.2.4. Video
    streaming In general, the video streaming use cases fall under the content delivery
    network (CDN) [83] category. The key objective of CDN networks is to reduce the
    cost and the number of bits transmitted over the network, by maintaining an adequate
    QoE [84]. The mechanisms to reduce the overall cost and traffic while providing
    a high QoE in applications ranging from simple video streaming to HTTP, to Adaptive
    BitRate (ABR) and 360-degree video applications, can be further improved by applying
    task offloading techniques. Offloading can be implemented on Cloud-based solutions,
    where appropriate resource allocation techniques can be used to increase user
    satisfaction [85] or deployment costs of the CDN networks [84]. Nonetheless, task
    offloading at the Edge can supplement the achieved performance. For example, multi-user
    mobile media delivery can be enhanced by enabling the gateways (i.e., BSs) to
    perform appropriate scheduling strategies [86]. An Edge infrastructure can also
    be used to facilitate the caching and transcoding mechanisms in a distributed
    fashion [87]. Regarding latency, data compression tasks can be offloaded at the
    Edge [88], removing the burden of local compression models and reducing at the
    same time the application response time [89]. Task offloading can be partially
    implemented by differentiating flows based on their quality and performing the
    video compression at the Edge, only for the high-quality video flows (e.g., 360-degree
    video streaming) [90]. 2.2.5. IoT The impact of task offloading can be maximized
    in the context of IoT applications. The reason is that the IoT devices are usually
    constrained in terms of available resources and battery capacity. Inevitably,
    only small and non resource demanding tasks can be executed locally. Task offloading
    in IoT usually focuses on reducing task execution time, response time and energy
    consumption. IoT use cases that can benefit from task offloading can refer to
    health, agriculture, smart city, industry and energy related applications among
    others. IoT, from the very beginning, has been largely based on Cloud-centric
    approaches in order to offload the tasks of data processing and analysis of massive
    data produced from millions of IoT devices [91]. However, the long delays added
    from the Cloud, combined with the introduction of new mission critical IoT applications,
    has pushed the academic and industrial community to take advantage of the Edge
    concept. Hence, local IoT Clouds have emerged, with the goal to maximize the number
    of offloaded tasks that can be executed in close proximity to the IoT devices
    [92] and to maximize the battery lifetime of the devices [93], [94]. However,
    the scalability issues of the IoT market which is currently consisted of dozens
    of billions of devices often necessitates a Cloud–Edge collaboration during the
    task offloading [95], [96], [97]. 2.2.6. Physical disaster management In case
    of disaster management, the process of task offloading is crucial since it affects
    the efficiency of the rescue operations. In addition, the network can be unstable
    and simply offloading tasks to the Cloud could be difficult and require too much
    time. So, optimal offloading strategies to local services, rather than remote
    Clouds, would allow for precious time saving and preservation of battery of mobile
    phones, sensors and autonomous agents in the field. Unmanned Aerial Vehicles (UAVs),
    which possess great mobility and versatility, are at the core of disaster management
    scenario by providing situational awareness and computing resources. But, as they
    are battery-powered, they cannot undertake the full computation of all the involved
    data and need to offload tasks to near Edge Computing servers. This challenge
    is addressed in different papers [98], [99], [100]. In general, task offloading
    in the context of disaster remains little explored [101], [102]. Download : Download
    high-res image (745KB) Download : Download full-size image Fig. 1. Infrastructure
    components during task offloading. 3. Task offloading & challenges In the previous
    sections, we have provided a short description of the task offloading, its infrastructural
    components, and the importance of this solution for new and emerging scenarios.
    In this part of the survey, a more detailed definition of task offloading is provided,
    while also, the typical objectives, the performance evaluation metrics, and the
    challenges encountered during task offloading are presented. Generally, task offloading
    can be defined as the transfer of resource-intensive computational tasks to an
    external, resource-rich platform such as the ones used in Cloud, Edge or Fog Computing.
    Offloading the whole or part of the set of tasks to another processor or server,
    can be used to accelerate resource-intensive and latency-sensitive applications
    [65], [90], [103]. Task offloading is a complex process and can be affected by
    a number of different factors [24]. In particular, this process involves application
    partitioning, offloading decision making and distributed task execution [4], [15],
    [104]. A typical infrastructure involved in an offloading scenario is illustrated
    in Fig. 1. From this, it becomes evident that the network’s Edge infrastructure
    creates an additional resource layer between the end devices and the external
    platform. This layer is capable of reducing bandwidth consumption on the backhaul,
    transport and Cloud networks, thus reducing any communication delays, supporting
    applications with real-time requirements, improving the energy efficiency and
    consequently increasing the lifetime of battery-powered devices. At this point,
    we should note that, for the rest of the paper, we refer to the term Edge Computing
    as the whole set of resources that can be found at the edge of the network, including
    the Fog and Edge nodes. 3.1. Granularity levels of task offloading Task offloading
    aims at optimizing the offloading of computation intensive tasks from the end
    user device to a remote site, under various computational, communication and mobility
    constraints. The process of task offloading, as shown in Fig. 2, consists of (i)
    various hardware components, such as end user devices and Edge/Cloud devices,
    (ii) multiple computing processes, including task splitting and computational
    processing either locally or remotely and (iii) networking components for transferring
    data between the hardware components involved. In more detail, as Fig. 2 illustrates,
    a mobile device can execute an application comprising of multiple tasks. The end
    device, through a task splitting process, decides which of these tasks should
    be executed locally and which ones should be offloaded to the Edge or Cloud infrastructures.
    This decision is based on a plethora of factors that are presented in the following
    sections, including the QoS requirements and battery lifetime of the device, among
    others. Following, the tasks that are to be executed remotely are transferred
    through the wireless access network to the gateway and from there to a remote
    physical machine (either at the Edge or Cloud), where they are executed following
    an appropriate computational approach (e.g., creating a VM or container). At the
    same time, the tasks that remain on the device are executed locally using the
    available computational resources of the end device. The last step is to combine
    the results of both local and remote executed tasks to provide the final output
    of the application. Based on this process, we describe the different types of
    task offloading according to the task splitting decision taken, i.e., the granularity
    level, as follows: Download : Download high-res image (408KB) Download : Download
    full-size image Fig. 2. Task offloading process. 3.1.1. Partial offloading at
    the edge In this type of offloading, part of the computing tasks is processed
    locally, while the rest is offloaded to the Edge. Partial offloading is typically
    the most effective, since it can benefit from both local and remote resources.
    Nonetheless, another level of complexity is added since it needs to be decided
    and scheduled which tasks should be offloaded while taking into account the possible
    energy and resource constraints of the end device. 3.1.2. Full offloading at the
    edge In this case, all of the computing tasks are offloaded and processed at the
    Edge. Full offloading is usually translated into a simple resource allocation
    problem, where tasks can be executed on virtual machines or containers at the
    Edge. Energy-savings at the end devices can be maximized, however we need to take
    into account other sources of energy dissipation such as the transmission power
    of the device. Finally, a precise network path from the device to the Edge site,
    where the tasks are offloaded, has to be set up carefully, so as to comply with
    the possible QoE/QoS constraints. 3.1.3. Partial/full offloading at the edge and
    cloud During this type of offloading, a collaboration between the Edge and Cloud
    infrastructures is established in order to execute the offloaded tasks. This type
    of collaboration can be proved advantageous in large-scale scenarios where the
    available Edge resources are not enough to host all of the tasks offloaded from
    the end users. Herein, the main challenge is the two-level task offloading decision.
    If a partial offloading mechanism is followed, the first level of decision lies
    on the local device, in order to decide the set of tasks that needs to be offloaded
    at a remote location. In other words, the local device has to decide which tasks
    can be executed locally in the device and which ones should be offloaded either
    at the Edge or the Cloud. On the tasks decided to be offloaded, a second-level
    of decision will be performed. In particular, the Edge will perform a second task
    partitioning, regardless of the type of offloading (i.e., partial or full) to
    determine the subset of tasks to be executed at the Edge and the subset of tasks
    to be executed at the Cloud. In the latter case, particular attention should be
    paid on the transport network that facilitates the interconnection of the two
    infrastructures and the delay constraints that it may impose. 3.2. Mobility of
    end devices End device mobility is one of the most critical components when it
    comes to task offloading decision. End devices can either be considered as static
    or mobile for the time window which spans between initiating and finishing the
    offloading of their tasks. In the latter case, mobility adds another level of
    splitting decision, as it needs to be decided at which Edge site should the tasks
    be offloaded while the user is on the move (or not). Even though mobility is considered
    a challenge, it can generate a number of opportunities for the task offloading.
    First of all, it can initiate a load balancing technique to allow the system to
    provide the necessary services in distributed Edge site scenarios [45], [105],
    [106]. Secondly, complementing mobility with appropriate prediction solutions
    can enhance the system’s capacity, by finding the potential next associated BS/AP
    of the user [87], [107], [108]. This can be even more beneficial in a dense scenario,
    where the system can analyze the active users and their mobility patterns and
    allocate the resources in an online manner to existing and newly requested services.
    Moreover, mobility can benefit from handover mechanisms that can enable service
    migrations between BSs and their Edge servers. However, as the requirements of
    zero millisecond handover are studied by the 5G community, mobility with prediction
    mechanisms is starting to gain attention, in order to predict beforehand where
    the tasks should be offloaded. This behavior can be decisive for the overall performance
    in dense Edge deployments with multiple mobile users [109]. Based on the above,
    we firstly describe the different types of end devices according to their mobility
    level. Then, we present some mechanisms from the literature on how the Edge infrastructures
    adapt to the potential mobility of the offloading devices. 3.2.1. Static (low-mobility)
    In this situation, the devices are considered static or relatively static (low
    levels of mobility) during the task offloading procedure. Apparently, this type
    of device mobility is considered trivial when it comes to studying the task offloading
    problem, as it does not impose any type of dynamicity to the network conditions.
    In certain cases, purely non-mobile devices like stationary IoT sensors are engaged
    in task offloading at the Edge, [110], [111]. Other works apply this assumption
    on mobile devices, to reduce the complexity of their proposed offloading solutions;
    for example, the authors in [112] assume that the statistics of the utilized wireless
    links remain unchanged during the processing of the users’ tasks, reflecting a
    relatively static or low-mobility scenario. In a similar manner, in [113] and
    [114], the time to transfer the task response from a cell to another is excluded
    from the total execution time of an offloaded mobile task, by assuming that the
    end device stays in the same cell during the task offloading process. 3.2.2. Mobile
    (high-mobility) On the other hand, when the devices involved in task offloading
    are highly mobile, i.e., their movement has a direct effect on the network conditions
    considered for task offloading and the respective resource allocation, the problem
    becomes significantly more complex. Several studies consider mobility at the Edge
    [65], [115], [116], [117], [118]. Specifically, the focus is placed on the user
    contacts (inter-contacts) in which the user can offload the task, based on the
    mobility pattern and an opportunistic computing decision [119], [120], [121],
    [122], [123]. The opportunistic computing is taking advantage of the contact patterns
    regulated by the mobility of the devices (e.g., which Edge site the node is visiting
    and what type of interactions occur on daily basis), in order to determine the
    amount of computation to be offloaded to other devices. Opportunistic computing
    takes also advantage of the contact patterns regulated by the mobility of these
    devices, to determine the amount of computation to be offloaded to other devices.
    Furthermore, in a mobility scenario, users may either transfer their tasks to
    remote servers or peer devices, possibly through the gateways or even via the
    Edge servers [124], [125], [126], [127]. For instance, mobility can influence
    the decision on which BS and Edge server to select and when to perform the handover
    [124]. When trying to minimize the execution delay, user mobility information
    needs to be combined with the task characteristics and resource availability,
    in order to make the best task scheduling decision [125]. This mobility information
    is usually captured by trajectory prediction models [128], [129] that can actually
    uncover motion patterns of the users in real-time scenarios. However, in most
    of the studied scenarios [6], [8], [105], [130], the tasks are usually offloaded
    to BSs that are in close proximity to the user’s position and have sufficient
    resources to satisfy the time execution requirements. For example, when the tasks
    are lightweight and can be executed within a satisfactory time period, without
    migrating to a neighbor Edge site, then the execution of the task should be processed
    immediately and return to the mobile user. On the other hand, when the task requires
    significantly longer time, then the task could be split into sub-tasks and be
    transferred to neighboring BSs along the user’s trajectory [6], [8], [131]. Most
    of the mobility tackling solutions integrate mechanisms to obtain the device’s
    current and future positions, as well as tune the offloading infrastructure accordingly,
    to achieve the objectives described in the following subsections. Using the type
    of the mobility tackling mechanism as a criterion, mobility solutions can be categorized
    in the following classes: Proactive — Behavior Related: Nowadays, services running
    on mobile devices, e.g., Google Location Services [132], constantly track and
    log the historic mobility behavior of the user; the proliferation of smartphone
    devices has made trajectory pattern crowdsourcing a reality. What is more, distributing
    intelligence at the Edge has allowed for logging the times an end user device
    connects and disconnects to a smart access point, thus extracting users’ periodic
    movement patterns. Based on this data, mobility information can be estimated and
    leveraged towards predicting the users’ position at any given moment [133], [134].
    Specifically, this mobility information can be extracted in a probabilistic way,
    by utilizing Mobility Markov Chains (MMC) to model the historic behavior of a
    user as a discrete stochastic process; in this way, the prediction of a user moving
    to a specific location depends on their previous visited locations and the probability
    distribution of the transitions between them [135]. Complementary to the regularity
    in the users’ mobility patterns, a Markov model can be trained to estimate the
    expected network quality and the expected staying time under the coverage of each
    Edge server [136]. Then, one way to leverage the extracted information is in favor
    of bringing the Edge Computing and storage resources closer to the user; this
    can be achieved by proactively installing the services that the users will consume
    in the Edge servers located in the positions that they will most probably visit,
    thus reducing the network delay during task offloading [137], [138], [139]. The
    probability density function of the sojourn time, i.e., the time a user is expected
    to spend within the coverage area of an Edge site, can also be exploited towards
    predicting the user’s next location and seamlessly migrating the service to be
    used for the task offloading appropriately [140]. For example, MAGA [141] is a
    mobility-aware mechanism for partial task offloading that falls in this category.
    Frequent mobility patterns are inferred by a tailor matching subsequence method
    and then a genetic algorithm is used for the offloading decision. Proactive —
    Trajectory Related: Another way of proactively dealing with mobility at the Edge
    is by exploiting the user’s ongoing movement characteristics, i.e., trajectory,
    duration and speed. By applying these characteristics on specific translational
    motion models, one can predict the location and the time of the next Edge server
    handover [142]. Apart from utilizing motion models, periodically receiving timestamped
    geolocation updates from a moving user, enables producing real-time travel information
    for route segments which can be used for trajectory estimation [143]. In a cooperative
    Edge infrastructure scenario, taking advantage of the mobility information can
    guide Edge servers to route the collected offloaded tasks to adjacent servers
    at the next location on the user’s moving direction. In this way, when users arrive
    at the coverage area of the next Edge site, they receive the product of their
    completed offloaded task, with the minimum additional delay [144]. As an example,
    a two-step offloading mechanism for smart touristic services [145], [146] is based
    on estimating the location and density of users. Every mobile device takes the
    initial offloading decision based on a dead reckoning technique and measurements
    of its WiFi signal strength. Secondly, at the Edge side, a Kalman filter is used
    to predict the number of users and a controller is responsible for the final offloading
    decision and the allocation of resources to VMs. Reactive: The evolution of the
    Edge–Cloud continuum and the growing adoption it receives, has recently enabled
    network infrastructures to quickly and efficiently adapt to the rapidly changing
    user environment, in real time. When it comes to task offloading on the move,
    Edge servers can utilize a central agent, located at the Cloud, to form a mobility-aware
    offloading infrastructure that tracks the users’ position and optimally routes
    the task and its response through the closest server to the users’ locations [147].
    In a similar manner, the whole virtual server can migrate to the topologically
    closest Edge server to the user, reactively, every time a relocation is detected
    [148]. For instance, utilizing IP tracking, remote caching and the Software-Defined
    Networking (SDN) paradigm, can set the ground for efficient and timely task offloading
    as well; an SDN controller is able to track the user’s network location, i.e.,
    the Edge server in proximity and quickly react to changes in it by rerouting the
    offloaded task’s response [149]. 3.3. Task offloading objectives When solving
    the task offloading problem, a number of different objectives may be applied,
    as the different stakeholders and actors (e.g., Cloud providers, Edge providers,
    Mobile Users and Service Providers) target a variety of goals. An objective function
    helps to formally and mathematically formulate these goals and guide the offloading
    solution. Objectives of the task offloading problem can be categorized as follows:
    3.3.1. Delay Task execution delay minimization is one of the main objectives during
    the task offloading problem [42], [65], [115], [150], [151], [152], [153]. Regardless
    of the type of task offloading, the overall goal is narrowed down to reducing
    the total task execution delay. This delay, can be broken down into a number of
    different delay contributors. The first source of delay is the task execution
    delay, coming from the task that can be either executed locally at the device,
    at the Edge or the Cloud. In the case of offloading the task at a remote Edge
    or Cloud site, we need to take into consideration the transmission and propagation
    delay at the various layers of the infrastructure (access, Edge, transport and
    Cloud networks), in both directions (i.e., sending the task and receiving the
    response). On top of that, processing and queuing delay at the various processing
    and forwarding devices should be taken into account. Finally, an additional delay
    contributor can be the time to optimally partition the task delay, during the
    task offloading decision [154]. The delay objective can be expressed as either
    the minimization of the average delay of each task [155] or the total delay of
    all the involved tasks of a mobile application. This objective is directly proportional
    to the available resources [115], [150] and the network conditions [151], [154].
    The total execution delay can also be used to assess the impact of task offloading
    to the QoS achieved. Thus, according to the type of the application used and the
    part of the infrastructure under consideration, the task execution delay can be
    associated with: (i) the response time (i.e., the time duration from when a user
    requests a service until the service actually initiates [65], [118], [156]), (ii)
    the delay variation, in order to reveal how robust the task offloading solution
    can be, both over time and over dynamic traffic profiles, while also estimating
    the number of SLA (Service Level Agreement) violations noticed [107], [157], [158]
    and (iii) the network delay, including the four delay contributors (i.e., propagation,
    transmission, processing and queuing delay) at the different parts of the infrastructure
    [65], [107], [118], [152], [155], [156], [158], [159], [160]. 3.3.2. Energy The
    second most common objective during task offloading is the minimization of the
    energy consumption [161], [162], [163], [164], [165]. This energy consumption
    typically refers to the end devices [116], [166], [167], [168], [169]. The reason
    is that mobile and IoT devices are usually battery powered, thus a major concern
    is how to maximize the lifetime of the battery by reducing the device’s energy
    consumption. Inevitably, it is reasonable to assume that, by following a full
    offloading approach, the maximum energy savings can be pursued. However, a number
    of other energy contributors need to be taken into account, even when a full offloading
    approach is followed. First of all, during the offloading, the transmission power,
    modulation and coding scheme, together with other radio parameters, needs to be
    taken into account, as they contribute in significant energy and consequently
    battery consumption [41], [165]. This type of energy consumption can increase,
    especially when network conditions are not favorable. Secondly, by reviewing the
    full offloading from a complete, network-wide view, one can easily understand
    that the problem is simply pushed to the Edge and/or Cloud infrastructures. Thus,
    energy consumption minimization needs to be pursued at all layers of this end-to-end
    communication model [170], [171]. To evaluate this objective, a number of different
    metrics can be used; the most common is the average power consumption measured
    by aggregating the power consumption on the hardware equipment used [159], [172].
    Alternatively, energy consumption can be used, expressed as the power consumption
    over time. Normally a minimization of power consumption leads to energy consumption
    minimization as well [107], [173], [174], [175]. Furthermore, as the end devices
    are usually battery powered, the energy savings can be expressed as battery savings
    [170], [176]. Finally, another way to provide the necessary environmental and
    economic sustainability is through minimizing the electricity cost [177]. Electricity
    cost depends on location and time. Hence, appropriate allocation of offloaded
    tasks potentially reduces the electricity cost, cutting down on operational costs
    while providing benefits to the environment [157], [167]. 3.3.3. Bandwidth/spectrum
    The available bandwidth at the access network and how it can be shared by multiple
    users in order to offload the tasks, is also a significant constraint. However,
    due to the great influence it has on the task offloading performance, it can also
    be considered as an objective [166], [176]. Due to the limited available bandwidth,
    especially in IoT networks and dense cellular networks, the careful allocation
    of spectrum becomes of utmost importance. The objective of spectrum allocation
    is often associated with the transmission rate and power level of each end user
    [176], as well as the duration of the transmission of each device [151], in order
    to optimally share the available bandwidth. Thus, when trying to optimally deploy
    the available spectrum, an efficient metric is to evaluate the spectrum utilization
    in accordance with the number of offloaded tasks, power transmission and bandwidth
    consumption [64], [152], [173], [174]. In view of the dynamic wireless conditions,
    the optimal scheduling of the bandwidth needs to follow the time-varying channel
    state and be also associated with the arrival rate of the tasks [166]. Throughput
    is another typical metric applied to evaluate the overall spectrum utilization,
    since it reveals how timely and efficiently the task can be offloaded at the remote
    infrastructures [170], [178]. 3.3.4. Load balancing How to carefully allocate
    and schedule the available physical hardware resources is another objective to
    consider during task offloading [12], [17], [42]. Specifically, there is a high
    interest in path optimization, efficient resource usage and load balancing when
    solving the task offloading problem. The goal is to provide the necessary scalability
    by increasing the resource availability, increasing the number of offloaded tasks
    concurrently deployed at the Edge and/or Cloud [17], [179], maximizing the resource
    sharing and fairness among multiple users [42] and facilitating the offloading
    of future tasks. This objective can be translated into minimizing the overall
    resource usage (e.g., minimizing the average percentage of the computational and
    communication resource utilization), minimizing the maximum resource utilization
    of the infrastructure or minimizing the variance of resource utilization [95].
    Load balancing can be applied either at each layer of the infrastructure or between
    the different layers. For example, the appropriate distribution of traffic between
    an Edge and a Cloud infrastructure, can be considered as an alternative load balancing
    objective [171], [180]. 3.3.5. Deployment cost The task offloading problem can
    be often seen as a resource allocation problem where appropriate resources at
    the Edge and/or Cloud need to be reserved according to a deployment utility cost,
    in order to execute the offloaded tasks in a virtualized environment. This deployment
    cost can be modeled in various ways, each having a different interpretation. For
    example, the deployment cost can be defined as the aggregation of computational
    and communication resources that a set of tasks needs in order to be provisioned.
    This is typical when mobile or IoT applications needs to be complemented with
    specific network functions (e.g., security, compression, QoS) that is otherwise
    difficult for a user to achieve locally in his device [180], [181], [182]. In
    general, this cost can be expressed as the monetary cost for computing processing
    (e.g., $/CPU hour), memory (e.g., $/GB) and network bandwidth (e.g., $/GB/day),
    induced for using network resources. These costs can be associated with the Cloud
    and Edge providers and how and to whom they lease their infrastructure. Furthermore,
    since this cost usually follows a “pay-as-you-go” model, the number of physical
    resources used for the total number of tasks offloaded can reflect the deployment
    cost [152], [157]. 3.3.6. Model accuracy All the objectives described so far,
    are some typical objectives that can be used regardless of the optimization solution/strategy
    followed. However, when it comes to Artificial Intelligence (AI) and Machine Learning
    (ML) -based approaches, an additional objective can be the model accuracy for
    the prediction of the behavior of the applications (e.g., mobility [183] and network
    related features [184]). Usually the AI/ML objectives are used as secondary or
    complementing objectives of the ones presented above [185]. In addition to that,
    regarding critical applications that build or use ML models during the task offloading,
    particular emphasis should be placed on the training time, inference time and
    the cost of the required computational power. Model accuracy can be optimized
    by using the appropriate ML metrics. For example, regression metrics [186] can
    express how close the predictions of a model are compared to the actual values,
    by using the R-squared, Root Mean Squared Error (RMSE) and Mean Absolute Error
    (MAE) metrics. In clustering models, the evaluation metrics [187] measure the
    cohesion and separation of groups of observations. An example of such an approach
    is the Sum of Squared Error (SSE) metric, which aggregates the distance of each
    observation from its nearest cluster. When using classification ML techniques
    [188], typical metrics used to evaluate the accuracy are the precision (i.e.,
    the percentage of relevant observations among the retrieved observations), Recall
    (i.e., the percentage of the total amount of relevant observations that were actually
    retrieved) and F-Measure (i.e., the harmonic mean of precision and recall). 3.3.7.
    Multi-objective The typical objectives presented so far are usually conflicting,
    making task offloading a very challenging problem. For example, aiming to minimize
    the latency can lead to higher energy consumption on the end device, by deciding
    to execute the tasks locally and vice versa. When adopting load balancing objectives,
    offloaded tasks can be distributed among different Edge sites or between the Edge
    and the Cloud, in order to reduce the total delay and energy consumption. Similarly,
    when minimizing the deployment cost, offloaded tasks may be gathered in one single
    Edge site; this results in an uneven resource utilization that can also create
    significant congestion in the infrastructure and thus higher communication delays.
    Finally, when trying to optimize the spectrum allocation independently of the
    available communication and computational resources, it can result in poor offloading
    decisions in terms of delay, deployment cost and load balancing. Hence, multi-objective
    solutions can be used in order to explore the trade-off between the various objectives.
    The most common multi-objective approaches consider jointly minimizing the delay
    and energy consumption [117], [173], [189], [190], [191], [192], [193], [194],
    [195], [196]. Energy and latency optimization can also be combined with an optimal
    spectrum allocation through appropriate power and channel allocation [162], [167],
    [168], [174]. Regarding load balancing, it can be jointly optimized with the delay,
    since both objectives are tightly correlated [42]. 3.4. Challenges of task offloading
    Achieving the aforementioned objectives of task offloading entails a series of
    challenges. In this section, we identify these challenges and classify them into
    two main categories. 3.4.1. Network dynamics challenges Dynamic Network Conditions:
    The mobile and IoT networks are characterized as quickly varying access networks
    that create dynamic network and traffic conditions. This is a significant challenge
    that adds an extra level of complexity during the task offloading problem, since
    it is very difficult to pre-specify the behavior of the network. Aspects of noise,
    interference, fading and signal reflection can significantly impact the wireless
    communications, aggressively altering the overall throughput and delay of the
    wireless transmission. This necessitates an analysis and prediction of the network
    conditions, in order to accurately estimate when a task offloading decision positively
    affects the performance. Besides this, prediction can be combined with a resource
    allocation mechanism at the Edge and Cloud, since the amount of resources required
    for the task execution is directly proportional to the amount of traffic (i.e.,
    the request rate) that will actually end up at the Edge or Cloud. Dynamic User
    Behavior: Another level of impediment and dynamics, during task offloading, is
    added by the random behavior of the mobile users and how they employ their mobile
    applications. These behavioral aspects are very difficult to foresee and quantify,
    creating as result arbitrary user-based traffic profiles. A categorization of
    the mobile applications based on the users’ preferences, the transmission patterns,
    the spatial and temporal correlation of the user generated traffic, as well as
    other traffic related characteristics, can be of utmost importance for the subsequent
    resource scheduling and allocation. Accordingly, machine learning and data analytic
    techniques should be applied to estimate the users’ behavior and the rate of task
    generation. Edge/Cloud Dynamics: Although the Edge and Cloud layers can work together
    in harmony, they still have their own dynamics. Cloud sites are centralized while
    Edge sites are distributed having only a local view of the network.This leads
    to different dynamics between these two layers. Specifically, contrary to Cloud,
    Edge has a spatial dynamic exactly because of its location awareness. Additionally,
    end devices can dynamically re-purpose and re-associate themselves to different
    applications by offloading different type of tasks or simply new devices could
    appear or disappear. This inevitably creates an additional dynamic factor for
    the Edge. Obviously, the initial task offloading and allocation decision over
    the Edge could be performed in an optimal way by the Cloud, since it possesses
    this centralized system view; however, the latter may not react timely to local
    dynamics. Therefore, Edge servers should meet the burden to locally decide to
    move services’ tasks along time. Thus, a new challenge arises in order to (i)
    address these dynamics, (ii) create a consistent view of the tasks to be executed
    that Cloud and Edge should share, and (iii) place the different services at the
    right places in due time. 3.4.2. Resource allocation challenges Task offloading
    is strongly affected by the resource allocation mechanisms that decide how and
    where the offloaded tasks will be executed in a remote platform. Thus, the task
    offloading and resource allocation decisions are coupled and should be addressed
    jointly. The main challenges this issue creates follow. Partitioning Decision:
    The decision of which task to offload is the first and most significant challenge
    to address, as it comprises the core of the task offloading problem. As shown
    in Fig. 2, when new tasks are generated by an application, an intelligent mechanism
    is required in order to decide whether the task should be executed locally or
    to be offloaded to a remote infrastructure. This partition decision of the tasks
    is associated with the task execution delay, the transmission delay and the energy
    consumption. A poor partitioning decision may result in performance bottlenecks
    regarding the execution of the application. Thus, a compromise between when and
    which tasks should be offloaded to the Cloud/Edge has to be explored, taking also
    into consideration any possible transmission costs in terms of energy, delay and
    money. Table 1. Comparison of Mathematical Optimization (MO), Artificial Intelligence
    (AI), and Control Theory (CT) approaches. Empty Cell MO AI CT Stability ✓ Low
    complexity ✓ Optimality ✓ ✓ Online training ✓ Reachability ✓ ✓ Real-time decision
    ✓ ✓ ✓ Resource Availability: The performance of an application is closely dependent
    on the resources available at the end user/Cloud continuum. In general, as we
    move towards the core of the infrastructure, the available resources increase
    in amount, paying the price, however, of a higher application delay. Hence, sharing
    these resources is a crucial challenge which needs an efficient resource allocation
    and management mechanism that will be able to guarantee the performance requirements.
    Thus, alongside the offloading decision, the resource allocation mechanism should
    fulfill various functional and non-functional requirements. The primary goal of
    resource scheduling is the respect of the QoS requirements of the application.
    Additionally, the resource allocation should guarantee important properties, such
    as stability, reachability, safety and robustness against internal uncertainties
    and external disturbances. In terms of functional requirements, the resource allocation
    strategy should be implemented with commercial or open-source resource orchestration
    tools, that enable scalability, interoperability and the transparent development
    of the applications over heterogeneous hardware and software technologies. Performance
    Modeling: Measuring the performance of a task offloading solution is an additional
    challenge. The task offloading problem can be modeled as a system where the energy
    and/or delay are the typical output variables and the available computing resources
    (e.g., CPU, memory), incoming requests and network bandwidth are the input variables.
    In most of the current studies, the proposed performance models are single-input/single-output,
    empirically derived or fixed. Although this assumption is realistic, the processing
    time of an offloaded task depends on many time-varying parameters, which are usually
    not easily measured. On the other hand, multi-input/multi-output models are more
    accurate, but the identification process is usually strenuous. Specifically, the
    offloading decision performs adequately only for specific operating conditions,
    being unable to guarantee stability under fluctuating workloads and heterogeneous
    communication infrastructures, such as in IoT. Hence, this system model should
    be adapted in order to include the performance metrics, expressed as state variables,
    that can be regulated by the control parameters (i.e., the input variables). This
    framework will be capable of capturing structural changes interpreted as discrete
    jumps in the dynamics, e.g., user mobility, changes in network conditions and
    addition/removal of Edge servers. Task Management: As stated before, offloading
    tasks to the Cloud follows a centralized approach in which the Cloud infrastructure
    serves the whole set of tasks coming from the access network layer. In contrast,
    at the Edge layer, the infrastructure is usually distributed in multiple geographically
    dispersed Edge sites. Obviously, this is one of the core advantages of Edge Computing,
    as it creates a local efficiency by executing the tasks and effectuating actuation
    in minimal time. However, at the same time, a meticulous design of the task management
    control modules is required at the Edge. The placement of controllers and their
    mapping to the sites that they will serve, the decision of which task is going
    to be offloaded at each site and how the load is going to be distributed between
    the sites, are some of the challenges that fall in this category. 4. A taxonomy
    of task offloading approaches This section lists the most prominent task offloading
    solutions that have been proposed in the literature. These algorithmic solutions
    can be divided into three categories: (i) Mathematical Optimization algorithms;
    (ii) Artificial Intelligence techniques and (iii) Control Theory-based approaches.
    4.1. Methodology comparison Before providing the most common approaches for each
    category, it is worth investigating the advantages and disadvantages of each category
    and the level of their efficiency. Accordingly, we present the main characteristics
    of each category, while Table 1 summarizes the main features supported. Mathematical
    optimization is the most common solution category applied in resource allocation
    and scheduling networking problems. The reason lies in the fact that, traditionally,
    these types of problems can be mathematically formulated and solved, using a great
    variety of existing solutions. Usually, the main goal for this category of algorithms
    is to find the optimal solution among a set of possible solutions. For example,
    in the context of task offloading the mathematical optimization approaches will
    have to appropriately model the input (e.g., Edge/Cloud infrastructure, end users,
    available resources, task distribution size and duration) and, according to a
    certain objective, decide when and where the tasks should be optimally offloaded.
    The optimality can be achieved through exhaustive search optimization solvers
    in the expense of a high complexity and execution time. Nonetheless, mathematical
    optimization approaches can reduce their time complexity when relaxing any hard
    constraints of the input and altering their final goal into finding a sub-optimal
    but fast and real-time solution. Even though these types of solutions can fit
    and be used in real scenarios, they sometimes suffer from their static nature
    and inability to adapt and model the dynamic challenges inherited from the problem
    at hand. Under such circumstances, the algorithms should be re-executed and re-customized
    every time a change happens in time and/or space (e.g., dynamical arrivals of
    end users, mobility and equipment failures). AI task offloading mechanisms have
    also seen great progress nowadays. Data driven models, learning from batch or
    online data, provide real-time task offloading decisions and elastic resource
    allocation. Decisions are made by generalizing historical data, recognizing in
    an automatic way the prevailing data patterns and evaluating the possible destination
    states of the main actors in the Cloud/Edge environment. The state of Edge infrastructures
    includes the status of computing nodes in terms of resource utilization, the number
    of application requests and the user requirements contracted as SLAs. Contemporary
    AI and ML task offloading is characterized by flexible adaptation and automatic
    learning. ML models have the advantages that they are not explicitly designed
    by human experts and they are self-trained based on the available data. In addition,
    they can handle multi-dimensional and multi-variety data in a unified way and
    they are capable of identifying hidden patterns. The main weakness of AI-based
    models lies in the case of significant inconsistency between training and testing
    data properties, which may lead to performance degradation. This means that the
    data should be selected and gathered with diligent attention to detail and special
    emphasis should be given to the data preparation tasks of synchronization, transformation,
    and normalization. Lastly, we should take into consideration that the large amount
    and high frequency of data make the training model a computational heavy and resource-intensive
    process. System Theory provides various models for describing the operation of
    a process. Additionally, Control Theory provides many formal methodologies to
    analyze and control the performance of the process. Both of them have been widely
    used for industrial processes while, during the last decades, they have been introduced
    to computer networks. System theory provides black- or gray-box training algorithms,
    namely system identification, to compute multiple-input-multiple-output (MIMO)
    models that capture the system dynamics of continuous or discrete systems. However,
    system identification must be performed offline and the computed model may have
    low accuracy. The control-based task offloading solutions enable real-time decisions
    against the dynamic network and workload conditions. Additionally, apart from
    reaching an optimal operating point, the control-based offloading solutions can
    guarantee various system properties, such as stability and reachability. The guarantee
    of stability means that the system will reach specific operating conditions and
    will remain on them against any disturbance. The reachability property means that,
    given the current system state, we can compute all possible destination states.
    Although, the complexity of a controller increases with the complexity of the
    system model (linear or not) and the properties to be guaranteed, the design is
    an offline process and the real-time application of control law is simple. 4.2.
    Mathematical optimization algorithms The task offloading problem is usually formulated
    as a mathematical problem, which tries to find an optimal or near-optimal solution.
    The problem can be formulated by defining the objective function as described
    in Section 3.3 and the optimization strategy used. These strategies may include
    Mixed Integer Programming, heuristics, meta-heuristics and game theory approaches,
    among others. Following, we present the main optimization strategies found in
    the literature, while a summary of them along with the objective of the study,
    algorithm developed and type of offloading is listed in Table 2. Furthermore,
    Fig. 3 illustrates the key components of the existing mathematical optimization
    approaches, shedding light into the well and less explored proposed solutions.
    Table 2. Taxonomy of mathematical optimization task offloading algorithms. Reference
    Optimization objective Algorithms Mobility Offloading Empty Cell Delay Energy
    Bandwidth/ spectrum Load balancing Deployment cost MIP Heuristic Game theory Contract
    theory Local search Static Mobile Partial Full Edge–Cloud [41] ✓ ✓ ✓ ✓ ✓ [42]
    ✓ ✓ ✓ ✓ ✓ [65] ✓ ✓ ✓ ✓ ✓ [85] ✓ ✓ ✓ ✓ ✓ ✓ [89] ✓ ✓ ✓ ✓ ✓ [116] ✓ ✓ ✓ ✓ [117] ✓
    ✓ ✓ ✓ ✓ ✓ ✓ [121] ✓ ✓ ✓ ✓ ✓ ✓ [150] ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ [151] ✓ ✓ ✓ ✓ ✓ [152] ✓ ✓
    ✓ ✓ ✓ ✓ ✓ [154] ✓ ✓ ✓ ✓ ✓ ✓ [155] ✓ ✓ ✓ ✓ ✓ [161] ✓ ✓ ✓ ✓ ✓ [162] ✓ ✓ ✓ ✓ ✓ ✓
    ✓ [163] ✓ ✓ ✓ ✓ ✓ [164] ✓ ✓ ✓ ✓ [165] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [166] ✓ ✓ ✓ ✓ ✓ [167] ✓ ✓
    ✓ ✓ ✓ [168] ✓ ✓ ✓ ✓ ✓ ✓ [169] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [170] ✓ ✓ ✓ ✓ ✓ [173] ✓ ✓ ✓ ✓ ✓ ✓
    [174] ✓ ✓ ✓ ✓ ✓ ✓ [176] ✓ ✓ ✓ ✓ ✓ [189] ✓ ✓ ✓ ✓ ✓ [191] ✓ ✓ ✓ ✓ ✓ ✓ [192] ✓ ✓
    ✓ ✓ ✓ [193] ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ [194] ✓ ✓ ✓ ✓ ✓ [195] ✓ ✓ ✓ ✓ ✓ [196] ✓ ✓ ✓ ✓ ✓ ✓
    [197] ✓ ✓ ✓ ✓ ✓ ✓ [198] ✓ ✓ ✓ ✓ ✓ ✓ [199] ✓ ✓ ✓ ✓ ✓ [200] ✓ ✓ ✓ ✓ ✓ [201] ✓ ✓
    ✓ ✓ [202] ✓ ✓ ✓ ✓ [203] ✓ ✓ ✓ ✓ ✓ [204] ✓ ✓ ✓ ✓ ✓ [205] ✓ ✓ ✓ ✓ ✓ [206] ✓ ✓ ✓
    ✓ ✓ ✓ [207] ✓ ✓ ✓ ✓ ✓ Download : Download high-res image (554KB) Download : Download
    full-size image Fig. 3. Summary of mathematical optimization task offloading algorithms.
    4.2.1. Mixed integer programming Mixed Integer Programming (MIP) formulations
    provide a flexible and mathematically precise way of formulating many real-world
    problems. Specifically, integer programming is a commonly used technique for resource
    allocation and scheduling in wired and wireless networks. The two main problem
    types that MIP addresses are: (i) network synthesis and (ii) resource assignment
    problems [208]. MIP optimization approaches facilitate also the introduction of
    a multi-objective function optimizing more than one goals under various offloading
    constraints (e.g., delay, energy and load balancing). Hence it can be often used
    as an optimization strategy during the task offloading problem. Usually, MIP provides
    a linear objective function (MILP), where at least one of the variables takes
    integer/binary values. Even though these types of problems can provide the optimal
    solution, they can be very complex or even computationally intractable for large
    scale experimentation scenarios. However, they can often be used as benchmark
    approaches during the performance evaluation. For example, in the context of task
    offloading, they can be used to minimize the weighted amount of mobile energy
    consumption in a multi-user system, under latency constraints [192]. Regarding
    delay, the objective function of the MIP can include both the transmission and
    processing delay, especially for IoT mission-critical applications in an Edge–Cloud
    collaboration [197]. In case the objective is non-linear, a Mixed Integer non-linear
    (MINLP) or quadratic (MIQP) programming formulation is modeled. Similarly, these
    types of problems allow the formation of multi-objective functions. For instance,
    a system cost representing the weighted cost of delay and energy consumption among
    all available users, can be expressed as a non-linear objective function in a
    mixed Cloud–Edge task offloading environment [198]. In case only the energy exists
    in the objective functions, typically the latency requirements can be imposed
    as constraints along with other various conditions (e.g., power consumption levels,
    channel states and resource heterogeneity) [199]. 4.2.2. Heuristics Heuristic
    approaches can introduce fast but sub-optimal solutions. The main advantage of
    heuristics is that they are simple algorithms devised to address the problem at
    hand, with low execution time. In contrast with MIP algorithms, they do not require
    specialized optimization tools to be solved and can rather be expressed as pseudo-code,
    easily implementable in any programming language. To this end, heuristic solutions
    are very popular to be applied in the task offloading problem. These types of
    solutions can range from optimizing the offloading decision of the user while
    minimizing the overall cost of energy, computation and delay, by applying appropriate
    relaxation and randomization techniques [194], to optimizing the resource allocation
    at the Edge, by considering a Cross-Entropy optimization approach [162]. Heuristics
    can also be used to optimize non quantifiable parameters, such as QoE in a Cloud–Edge
    collaboration [197], by satisfying the various computational and bandwidth restrictions,
    applying appropriate fairness and popularity techniques [85]. The efficiency of
    the heuristic becomes much more evident when the task offloading problem is modeled
    as a non-linear constrained optimization problem, or when the experimentation
    covers large-scale offloading scenarios [162]. In this case, greedy heuristics
    can be used to estimate the exact solution [42], [85], [200]. 4.2.3. Game theory
    Lately, there has been also a use of game theoretic approaches to deal with resource
    allocation problems. Through game theory, the task offloading problem can be introduced
    as a resource allocation game. For example, the problem of the partial task offloading
    in a multi-user, Edge Computing infrastructure and a multi-channel wireless interference
    environment, can be formulated as an offloading game [201]. This game tries to
    maximize the spectrum efficiency during offloading by allocating the proper channel
    to each user/player. The specific approach can be complemented with a second matching
    game that will aim to maximize the efficiency of resource allocation at the Edge,
    by appropriately selecting the right Edge servers [196]. A multi-step/slot game
    theoretic approach can be followed in order to find the optimal state, expressed
    as the Nash Equilibrium. Specifically, in each step the end user/player can make
    a decision on whether to offload their tasks in order to reach a potentially optimal
    offloading. A similar slotted approach can be followed by treating each user as
    a player with the goal to optimize the CPU-cycle frequency and offloading decision,
    in order to maximize the energy efficiency. Game theory has also been used in
    an Edge–Cloud interplay, where players can be considered as the corresponding
    infrastructures [202]. In particular, by formulating a Stackelberg game, a leader
    player is assigned the goal to maximize a utility function expressed in order
    to obtain the optimal revenue for the Edge and Cloud providers, while satisfying
    the delay requirements. A different objective can be considered in an Edge–Cloud
    collaboration, where the two infrastructures comprise the players of the problem
    and try to minimize the overall energy consumption under delay constraints [203],
    by using a potential game [209]. 4.2.4. Contract theory Naturally, task offloading
    introduces conflicts between the participating parties; for example, on the one
    hand, users and devices seek to maximize energy and spectrum efficiency while
    on the other, small cells and Edge servers try to minimize consumption of their
    own resources, like battery capacity and computing power. Conflicts like these
    might cause reluctance by third parties to participate, which could subsequently
    raise barriers to the development of attractive traffic offloading solutions.
    Contract theory is an approach originating from real world economics, that dictates
    the design of contracts to achieve cooperation between the conflicting sides.
    In a broad sense, contract theory studies the design of formal and informal agreements
    that motivate agents with conflicting interests to take mutually beneficial actions.
    In the wireless networks domain, the agents include the BS, service provider and
    the spectrum owner, as well as the small cells, smart devices and users [210].
    The late boom of contract theory applications in task offloading has managed to
    deal with many early challenges of the field; for instance, combining contract
    theory with game theory and a monetary rewards system, can eliminate the influence
    of information asymmetry in a user–Edge server relationship [204]. Similar incentives
    can be utilized when dealing with small-cell base stations (SBSs) and heterogeneous
    ultra-dense networks (HetUDNs) [205]. When the goal is to optimize bandwidth allocation
    in data offloading, dynamic programming concepts can integrate with contract formulation,
    as in the UAV to macro base station (MBS) offloading scenario, described in [206].
    In the case of opportunistically offloading part of the cellular traffic to coexisting
    networks, towards alleviating the overload problems caused by traffic demands,
    a contract theory-based incentive mechanism can motivate users to leverage their
    delay tolerance in exchange for service cost [207]. 4.2.5. Local search Local
    search algorithms adopt mechanisms of perturbation to explore neighbor solutions
    in the search space, that allow to gradually converge to local optimum solutions.
    Due to the problem-agnostic nature of the local search algorithms, they can be
    used as a component of heuristics and meta-heuristics in order to provide solutions
    very close to optimality [211]. For instance, a one-dimensional local search algorithm
    can be used for a partial task offloading solution, with the goal to minimize
    the average execution delay, expressed as a Markov chain process, under the energy
    constraints imposed by the device [155]. When both energy and latency constitute
    the objective of the partial task offloading problem, a univariate search technique
    can be used [189]. This type of search allows to transform a non-convex problem
    into a convex one, by finding a local optimum solution. An iterative local search
    can further reduce the gap with an optimal solution, where multiple iterations
    of the local search can result in a better resource allocation of computing and
    channel resources in a partial offloading scenario [174]. When the goal is to
    optimize the energy sustainability of the end-user devices, by selecting the proper
    Edge resources and at the same time to minimize the execution time of the allocation,
    a simple bi-section search algorithm can be used [151]. 4.3. AI-based optimization
    algorithms In the above section, we provided traditional mathematical and algorithmic
    approaches to derive the optimal or near-optimal solution, in the context of task
    offloading. However, these approaches may suffer from the following issues: (i)
    Most of the solutions investigated so far fail to take into consideration the
    dynamic network conditions. Since this is a random variable, it is difficult to
    estimate and reflect this behavior during the allocation of the Edge and Cloud
    resources and during the task partitioning decision; (ii) The traditional approaches
    are rather opportunistic, addressing the challenges of the task offloading in
    a short-term scale. However, in this manner, we cannot capture the long-term time
    and space varying conditions in all the layers of this end-to-end communication
    model. In other words, the solutions presented above lack the “intelligence” to
    better adapt holistically to the inherent challenges of the problem at hand. This
    prepares the ground for using artificial intelligence techniques for the task
    offloading problem. Artificial Intelligence (AI) techniques include multi-disciplinary
    techniques from machine learning, consensus-based and constraint-based algorithms
    and they have been widely used in different computer systems and network scenarios
    [8], [185], [200], [212], [213]. AI techniques are becoming successful alternatives
    also for solving optimization problems that include the mathematical formulation
    of uncertain, stochastic and dynamic information, thus making them excellent candidates
    for the task offloading problem. Furthermore, AI can potentially reduce the complexity
    by enabling recursive feedback-based learning and local interactions and thus
    faster speed in seeking sub-optimal solutions than traditional techniques [8],
    [185], [212]. For example, during the task offloading problem, by learning from
    data and tasks distributed across the Edge infrastructure, AI can enable a smart,
    real-time, and dynamic resource management framework [11], [214], [215], [216].
    On another perspective, AI techniques can also be applied to avoid costly data
    offloading, by enabling data estimation or prediction, like in dual prediction
    approaches [217]. Similar to traditional mathematical optimization solutions,
    when using AI, a problem can be formulated by defining the objective function
    and the algorithmic strategy to be followed. Following, we present the major AI
    techniques used in the literature to address the task offloading problem. A summary
    of the related work with the objective of the study, the algorithm developed and
    type of offloading, is listed in Table 3, while Fig. 4 illustrates the distribution
    of the key components of the existing AI optimization approaches. Table 3. Taxonomy
    of AI-based task offloading algorithms. Reference Optimization objective Algorithms
    Mobility Granularity Empty Cell Delay Energy Bandwidth/ spectrum Load balancing
    Deployment cost Model accuracy Machine learning Population Constraint Static Mobile
    Partial Full Edge–Cloud [218] ✓ ✓ ✓ ✓ ✓ ✓ [219] ✓ ✓ ✓ ✓ ✓ [220] ✓ ✓ ✓ ✓ ✓ ✓ [221]
    ✓ ✓ ✓ ✓ ✓ ✓ [222] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [223] ✓ ✓ ✓ ✓ ✓ [224] ✓ ✓ ✓ ✓ [225] ✓ ✓ ✓ ✓ [226]
    ✓ ✓ ✓ ✓ [227] ✓ ✓ ✓ ✓ ✓ [228] ✓ ✓ ✓ ✓ [229] ✓ ✓ ✓ ✓ [230] ✓ ✓ ✓ ✓ ✓ ✓ [231] ✓
    ✓ ✓ ✓ ✓ ✓ [232] ✓ ✓ ✓ ✓ ✓ [233] ✓ ✓ ✓ ✓ [234] ✓ ✓ ✓ ✓ ✓ ✓ [235] ✓ ✓ ✓ ✓ [236]
    ✓ ✓ ✓ ✓ ✓ ✓ [237] ✓ ✓ ✓ ✓ [238] ✓ ✓ ✓ ✓ [239] ✓ ✓ ✓ ✓ ✓ ✓ [240] ✓ ✓ ✓ ✓ ✓ [241]
    ✓ ✓ ✓ ✓ ✓ [242] ✓ ✓ ✓ ✓ ✓ [243] ✓ ✓ ✓ ✓ ✓ ✓ [244] ✓ ✓ ✓ ✓ ✓ ✓ [245] ✓ ✓ ✓ ✓ ✓
    [246] ✓ ✓ ✓ ✓ ✓ ✓ [247] ✓ ✓ ✓ ✓ [248] ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ [249] ✓ ✓ ✓ ✓ ✓ [250] ✓
    ✓ ✓ ✓ [251] ✓ ✓ ✓ ✓ ✓ [252] ✓ ✓ ✓ ✓ [253] ✓ ✓ ✓ ✓ ✓ [254] ✓ ✓ ✓ ✓ ✓ [255] ✓ ✓
    ✓ ✓ ✓ [256] ✓ ✓ ✓ ✓ [257] ✓ ✓ ✓ ✓ ✓ [258] ✓ ✓ ✓ ✓ [259] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [260] ✓
    ✓ ✓ ✓ ✓ ✓ [261] ✓ ✓ ✓ ✓ ✓ [262] ✓ ✓ ✓ ✓ ✓ ✓ Download : Download high-res image
    (560KB) Download : Download full-size image Fig. 4. Summary of AI-based task offloading
    algorithms. 4.3.1. Machine learning As a sub-category of AI, Machine Learning
    (ML) gives devices or computer systems the capability to learn useful patterns
    and behaviors from historic data and make decisions about new ones. The models
    are built without explicit programming; in the case of ML parameterized models,
    such as Linear Discriminant Analysis, Logistic Regression and Naive Bayes, the
    models are built by tuning a fixed number of parameters of a predefined mapping
    function. In the case of non-parametric models, such as the RBF-kernel Support
    Vector Machines, Decision Trees and K-Nearest Neighbor, the models use a flexible
    number of parameters with no prior knowledge about the data distribution and mapping
    function. In both cases, a mapping function is a function that maps the independent
    data variables to the dependent variables, i.e., the variables the model predicts.
    ML models can be divided in supervised, unsupervised and reinforcement learning
    ones, based on the available training data. A prominent ML subfield is Deep Learning,
    which involves Artificial Neural Networks (ANN) with multiple layers of representation.
    ML models have been used successfully to overcome the challenges of task offloading
    and resource allocation, as described below. Supervised ML Models: Supervised
    ML models include classification and regression models. In classification, the
    model predicts classes while in regression the model estimates continuous values.
    The offloading decision can be formulated with a multiclass classification method
    and the resource allocation with a regression model [218]. Classification and
    Regression Trees (CART) [219] have been used to select the fittest Edge device
    for offloading, while minimizing time and energy by taking into consideration
    parameters such as the authentication, confidentiality, integrity, availability,
    capacity, speed and cost. Classifiers such as JRIP and J48 [220] have been used
    for context-sensitive offloading in a Mobile Cloud Computing environment using
    a robust profiling system. Logistic regression [221], [222] has been used to calculate
    the load of each Edge node and enhance a dynamic resource allocation strategy.
    A different classification approach classifies Edge applications into classes
    of services [223], based on their QoS requirements, and maps them to Edge and
    Cloud resources. The Apriori algorithm [224] has also been used to generate rules
    for every task, in order to select the Edge node that offers the minimum completion
    time. Linear Regression [225] has been used to predict the total processing duration
    of each task on each candidate Edge node, in order to offload entire tasks to
    one Edge node instead of a local execution. Linear Regression [226] has also been
    used to predict over-loaded and under-loaded nodes, in order to facilitate a live
    migration process of tasks. Gaussian Process Regression [227] has been proposed
    to predict the future workload of the tasks, allowing the deployment of new, delay
    sensitive applications and reducing energy consumption, blocking of requests and
    latency. The dynamic characteristics of applications and the complex Edge/Cloud
    Computing environment, have been modeled with the Support Vector Regressor [228]
    and the K-Nearest Neighbor Regressor [229] for future load prediction and energy
    efficient utilization of Edge servers respectively. Unsupervised ML Models: Clustering
    models discover groups of objects that are similar, close and dense or share some
    common properties. Clustering models are differentiated from Classification models
    in that they do not require annotated data for training. Regarding task offloading,
    clustering approaches have been used to group resources based on the distance
    between Edge nodes, wireless and computational resources [230], [231] in order
    to minimize the response delay. In the same fashion, Edge sites can be grouped
    for different task resource demands [232] and Edge servers can be grouped using
    an analysis of the allocated computing resources [233]. Unmanned aerial vehicles
    are also clustered to enable efficient multi-modal and multi-task offloading [234]
    and IoT users according to their priorities [235]. The dependencies between tasks
    can be represented by a graph and, by following a fuzzy clustering [236], makespan
    (i.e., the time difference between the start and finish of tasks), monetary and
    energy costs can be minimized. The K-means clustering method [237] can provide
    efficient task scheduling, thus increasing the utilization of the Edge devices,
    based on the type of resource requirements in terms of CPU, I/O and communication.
    Lastly, a policy-based clustering approach [238] can provide energy efficient
    task offloading solutions, by organizing the interactions among the Edge nodes.
    Deep Learning: Deep Learning has gained popularity in multiple decision and scheduling
    problems because of highly accurate outcomes, especially when large amounts of
    data are available. In Edge and Cloud Computing, large amounts of data are being
    collected by resource monitoring tools, application logging mechanisms and network
    sniffers [263]. A modular deep learning model can integrate different sources
    of data, manipulate the data observations with hierarchical layers of representations
    and extract generalized knowledge that goes beyond the historical observations.
    Deep Learning can provide timely and accurate task offloading decisions, based
    on the resource usage of processing Edge nodes, the workload and the QoS constraints
    defined in SLA [264]. A deep learning model works as a function approximator that
    takes as input the current infrastructure and workload status and outputs the
    appropriate processing nodes where each tasks will be offloaded. Further outputs
    of the deep learning models include the decisions for vertical or horizontal scaling
    up and VM migration, in order to guarantee the smooth operation of tasks execution
    in a dynamic and quick-change computing environment. Specifically, Deep Learning
    models have been implemented to minimize the computation and task offloading overhead
    in varying network conditions and limited computation resources [239]. A Deep
    Learning model that also addresses the challenges of speed, power and security,
    while satisfying the quality of services, has been proposed in order to determine
    the combination of different devices and dynamic tasks [240]. In addition, close
    to the optimal joint offloading decisions, bandwidth allocation can be generated
    with a distributed deep learning-based offloading algorithm for Edge networks
    [241]. Furthermore, the challenge of energy efficient task offloading with Deep
    Learning has been studied in the context of the internet of vehicles [242], users’
    equipment [243] and specifically for delay-sensitive and computation intensive
    tasks in Edge Computing networks [244]. Deep Reinforcement Learning: Generally,
    reinforcement Learning models take actions in an environment in order to maximize
    a cumulative reward or minimize expected loss. Reinforcement Learning is usually
    combined with Deep Learning in order to generalize with previously unseen data
    in terms of environment, states and actions. In the Edge Computing context, a
    Deep Reinforcement Learning model has been implemented to make the binary offloading
    decision on whether the offloading will take place partially locally or fully
    remotely to an Edge server [245]. Deep Q-Networks [246], [247] have been proposed
    to automatically infer the offloading decisions, in order to optimize the system
    performance. Furthermore, Deep Q-Networks have been enhanced to capture the sequence
    of data with long short-term memory layers [248], for mobile tasks in a large-scale
    heterogeneous Edge environment and Gated Recurrent Unit layers [249] in multi-Edge
    networks. 4.3.2. Population-based methods Population-Based methods include a wide
    range of nature-inspired algorithms and provide close to optimal solutions in
    combinatorial problems, following a metaheuristic approach. Two main subcategories
    of Population-Based methods are the Swarm Intelligence and the Evolutionary Algorithms.
    Both of them have been proposed in order to provide efficient solutions in task
    offloading challenges. Swarm Intelligence (Consensus-based): The Swarm Intelligence
    properties make it a practical design model for algorithms that solve increasingly
    complex problems. In general, swarm algorithms strive to allow the entire system
    to converge into a global consensus state, while retaining the ability to perform
    assigned individual tasks in the swarm. Ant Colony Optimization (ACO) and Particle
    Swarm Optimization (PSO) are the most common Swarm Intelligence algorithms. ACO
    can be applied for efficient task scheduling due to its strong global search ability
    [250] and improve the response time of IoT applications by distributing effectively
    the tasks over the Edge nodes [251]. On the other hand, PSO can be used to minimize
    both the transmission and the processing delay, as a means to minimize the total
    end-to-end delay during a partial task offloading at the Edge [252]. In this case,
    PSO can also incorporate other task offloading key mechanisms, such as VM migration
    and transmission power management, to minimize service delay as efficiently as
    possible, to provide high QoS for different application profiles and to remain
    computationally feasible. Last but not least, PSO has been used to jointly minimize
    energy consumption and completion time for high-quality solutions [253], [254].
    Download : Download high-res image (561KB) Download : Download full-size image
    Fig. 5. Summary of control theory-based task offloading algorithms. Evolutionary
    Algorithms: Evolutionary Algorithms are based on natural selection principles,
    such as reproduction, mutation, recombination and selection. They perform a lot
    of iterations on a set of candidate solutions, aiming for the closer to optimal
    solutions to survive as much as possible, while the unfit solutions tend to be
    discarded. Evolutionary Algorithms [255] have been used in the deployment of Edge
    nodes and the offloading strategies. A subclass of Evolutionary Algorithms is
    the Genetic Algorithms (GA), which is characterized by the crossover principle
    in the reproduction of candidate solutions. GAs have been used for sequential
    task offloading and proactive fault tolerance [256]. Hybrid models, which combine
    GA with PSO, have also been proposed [257] and they achieve close to optimal task
    offloading of IoT applications, while minimizing the total makespan and energy
    consumption. 4.3.3. Constraint satisfaction methods The task offloading problem
    has also been re-defined as a Constraint Satisfaction Problem (CSP) with multiple
    source of constraints such as SLA, QoS, QoE, the heterogeneity of devices, the
    particularities of VMs and the dynamicity of the task generation process. CSP
    [265] is related to the artificial intelligence operations research and aims to
    find feasible solutions by using methodologies such as constraint propagation,
    local search, backtracking and various heuristics. Specifically, task properties,
    user mobility and network constraints have been jointly formulated as a CSP [258],
    in order to reduce the task execution delay in Mobile Edge Computing infrastructures.
    A CSP formulation has also been used in combination with Min-conflicts scheduling
    algorithm [259], for achieving the necessary load balancing of the Edge resources
    and minimizing energy consumption. A more demanding offloading use case is the
    distributed processing of data streams. In this case, special emphasis is given
    to minimizing end-to-end latency through the appropriate placement of the stream
    operators, either on Cloud nodes or Edge devices. A CSP optimization framework
    has also been proposed in order to minimize this latency and satisfy the constraints
    of power, bandwidth and CPU utilization [260]. One prominent approach to address
    a CSP comes from the Constraint Programming (CP). CP [266] is a programming paradigm
    used in solving complex problems, where instead of defining a sequence of steps
    for the program to execute in order to obtain the result, one defines the relationships
    between variables in the form of constraints that must be met. Afterwards, by
    following the steps of branching and exploration, CP finds feasible solutions
    to the problem. CP has been proposed for a generic and easy-to-upgrade placement
    service for Fog Computing with short resolution times and quality solutions. Specifically,
    using Choco [261], a many times awarded constraint solver, we can estimate close
    to optimal solutions in terms of network infrastructure, applications graphs and
    metrics like the usage of storage, network and energy resources. In addition,
    CP has been combined with an event-based finite state model [262], in order to
    optimize mobile battery life and guarantee QoS and cost minimization simultaneously.
    4.4. Control theory-based algorithms Originally, Control Theory was designed to
    regulate the behavior of dynamic systems and keep the system output(s) following
    the desired control signal, also called a reference. Control theory relies on
    feedback mechanisms and is widely applied to computing systems. Because of its
    nature to rely on feedback, which measures the difference between the actual output
    and the desired reference, control theory has been applied in the field of Edge
    Computing for implementing mechanisms of efficient decision-making control [267],
    [268], [269], network design selection [270], [271], time-critical systems [75],
    [76], [272], [273], [274], [275], admission control [276], network management
    [277], switching Edge [278] and network switching [279], among others. A summary
    of the control theory approaches, along with the objective of each study, the
    algorithm developed, type of offloading and the consideration of mobility, is
    listed in Table 4. Moreover, Fig. 5 illustrates the distribution of the key components
    of the existing control theory-based approaches. Table 4. Taxonomy of control
    theory-based task offloading algorithms. Reference Optimization objective Algorithms
    Mobility Granularity Empty Cell Delay Energy Bandwidth/ spectrum Load balancing
    Deployment cost Optimal control State feedback control Lyapunov Rest control approaches
    Static Mobile Partial Full Edge–Cloud [94] ✓ ✓ ✓ ✓ ✓ ✓ [100] ✓ ✓ ✓ ✓ [115] ✓ ✓
    ✓ ✓ ✓ [121] ✓ ✓ ✓ ✓ ✓ ✓ [139] ✓ ✓ ✓ ✓ ✓ [158] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [170] ✓ ✓ ✓ ✓ ✓ [178]
    ✓ ✓ ✓ ✓ ✓ ✓ [191] ✓ ✓ ✓ ✓ ✓ ✓ [268] ✓ ✓ ✓ ✓ ✓ [269] ✓ ✓ ✓ ✓ ✓ ✓ ✓ [274] ✓ ✓ ✓
    ✓ [275] ✓ ✓ ✓ ✓ [276] ✓ ✓ ✓ ✓ ✓ ✓ [277] ✓ ✓ ✓ ✓ [280] ✓ ✓ ✓ ✓ 4.4.1. Optimal control
    The control theory foundations, specifically those based on linear optimal control
    theory (i.e., Linear Quadratic Regulator (LQR) [281]), consider the design of
    a selection strategy [270] in a heterogeneous wireless network, with the objective
    to maximize the network resource utilization, while meeting the constraints of
    the supported services. Linear controllers are designed to meet the system’s constraints
    and QoS metrics [276]. The high efficiency of the LQR controllers guarantees the
    control performance of the system. Skarin et al. [280] consider the LQR for MIMO
    linear systems. Control theory can be deemed of utmost importance in UAVs-related
    task offloading where LQR-based controllers are used in order to achieve robust
    adaptive attitude control [282]. 4.4.2. State feedback control Another advantage
    of the control-theoretic approach in task offloading is that it provides a methodology
    for the modeling, analysis and evaluation of the system. Avgeris et al. [276]
    proposed a control theory approach to study the adaptive resource allocation problem
    for task offloading. The proposed two-level resource allocation and admission
    management system for an Edge application cluster, gives mobile users an alternative
    option for performing their tasks. The proposed controllers allow mobile users
    to offload application-specific tasks within the coverage area. However, it should
    be noted that mobility of users within the proximity of the cluster is not taken
    into consideration in this work. Kalatzis et al. [274] modeled the performance
    of IoT-based applications with a switched system and computed various equilibrium
    points that correspond to different operating conditions. Based on these points,
    a simple scaling mechanism was built to satisfy the varying workload demand. Extending
    [274], SMOKE [100] is a scalable resource allocation mechanism for UAV-based forest
    fire detection. UAVs are able to offload images to Edge servers for further processing.
    In the case of wildfire, the workload of the UAVs in the field increases significantly
    and the dynamic resource allocation is essential to achieve the desired QoS. A
    group of linear systems is used to model the container-based image processing
    services and a state-feedback controller is designed to scale each container’s
    computing resources. 4.4.3. Lyapunov Optimization approaches Lyapunov optimization
    algorithms provide a unique property of finding the sufficient conditions for
    stability in dynamical systems. Due to the stability theory of dynamical systems,
    Lyapunov-based optimization algorithms can be used in order to study the task
    offloading problem. In particular, for minimizing the energy consumption of mobile
    devices, there is a number of dynamic variables that need to be fine-tuned and
    converged to an optimal value in order to minimize the total energy consumption.
    Thus, Lyapunov optimization can be used to find the necessary stability in the
    CPU-cycle frequency of the device, transmission power, spectrum utilization and
    latency [139], [170], [178], [191], while satisfying the necessary task execution
    constraints [115]. Another variable that dynamically fluctuates during task offloading
    is the resource availability. In this case, an online task offloading algorithm,
    which leverages Lyapunov optimization methods and utilizes the current system
    information, can be used to predict the user’s resource availability [121]. The
    benefits are two-fold. First, network operators with global network information
    are trusted to make the comprehensive offloading decision for all the users. Second,
    the capabilities of mobile devices are constantly improving and the multiplexing
    advantage (due to the flexibility of resource availability between devices) can
    be exploited to enable the execution of collaborative tasks for a wide range of
    services. 4.4.4. Rest of the control approaches This paragraph includes the control-based
    studies that cannot be classified in the previous categories. Dlamini et al. [277]
    developed an online algorithm for Edge network management based on predictive
    control. This control mechanism aims at optimizing a two-objective cost that includes
    energy consumption and QoS satisfaction. Sonmez et al. [158] proposed a fuzzy
    workload orchestrator for the Edge Computing environment. Here, a set of fuzzy
    rules assigns the offloaded requests to a computational unit in a hierarchical
    Edge Computing architecture. Spatharakis et al. [275] proposed a switching offloading
    mechanism for robotic applications (i.e., path planning and localization) within
    an Edge Computing setup. The offloading decision is based on the uncertainty of
    the mobile robot’s position, the resource availability at the Edge servers and
    the complexity of the path planning. In addition, control theory can be applied
    to address the task allocation problem [268] with a novel integrated Top-Down
    Bottom-Up (TDBU) approach. In particular, the top-down module (i) observes the
    bottom-up task preference decisions of the Edge devices and decides the optimal
    task offloading strategy to ensure the overall system performance; (ii) leverages
    top-down incentive schemes to implicitly guide the Edge devices to pick the tasks
    that are most likely to finish in time. Similarly, Wu et al. [269], proposed codeSpec,
    a decision making control theory approach (on the Edge device) that periodically
    renews its offloading decisions, at code level, with nearby IoT devices, in real-time.
    CodeSpec, shifts the destined devices from inter-domain servers to IoT devices
    nearby and only offloads binary code of user-specified regions across different
    instruction set architectures (e.g., x86_64, ARMv7 and IA-32), using control theory.
    5. Open challenges and future directions The concept of task offloading has evolved
    from the simple idea of migrating the computation intensive tasks of end-user
    devices at a remote location. The concept of Edge Computing and the arrival of
    new applications, enabled by recent trends in wireless communications such as
    the IoT and 5G, have introduced tremendous innovation opportunities for task offloading.
    However, new technical and business challenges arise. This section discusses future
    research directions and open issues in the context of task offloading. Download
    : Download high-res image (294KB) Download : Download full-size image Fig. 6.
    Overview of general heterogeneous networks scenarios. 5.1. Heterogeneous networks
    A Heterogeneous Network (HetNet) consists of a macro cell layout with some possible
    Low Power Nodes (LPNs) placed throughout their coverage zones. Task offloading
    in HetNet is suited for three cases, as shown in Fig. 6: (i) Single-cell scenario,
    (ii) Contiguous cluster-cell scenario and (iii) Non-contiguous cluster-cell scenario.
    In the context of single-cell scenarios, new offloading decision variables can
    be the interference and less congested cells selection. In the context of clustered-cells,
    the densest cell expands over several neighbor cells. The devices in the edge
    of the cell can extend the communication capacity (as well as other types of network
    management, e.g., energy or mobility) through nearby devices, to neighboring cells.
    In this case, the goal is to analyze the capability of a resource allocation technique
    to shift to a remote Edge location, involving inter-cell communication and management
    aspects. A third scenario to be addressed concerns the communication of devices
    (small-cell environments) that are not adjacent, i.e., scenarios where the clustered
    cells may or may not be neighboring cells. This scenario assists in understanding
    how a resource allocation technique operates in terms of scalability, as well
    as in terms of supporting challenges such as long delays, or network partitions
    (as the small-cells are not in contiguous clusters). Heterogeneous Dense Networks
    (HDHNs) consisting of clustered cells, require algorithms that are able to extend
    capacity over a distance of several cells towards the crowded cells. For the optimization
    of tasks with several small and distributed dense servers (either Edge or Cloud),
    however, the algorithms should draw capacity from cells within a short distance
    from the dense ones, such that only a few cells that are located close to the
    dense cells are affected. Initial studies in this area deal with simple scenarios
    of one end user and one Edge server in a single cell, or few end devices, one
    or more Edge servers and a central Cloud, while the results show the feasibility
    of task offloading with the combination of Edge and Cloud communications [41],
    [200]. However, if multiple end-user devices reuse the spectrum to connect to
    multiple Edge and Cloud servers, imposing as a constraint to not degrade the QoE
    and the service continuity, the effect of signaling overhead, smooth handover
    and dynamic resource allocation on the offloading, becomes more significant. Such
    effects have not been thoroughly explored in the aforementioned studies. 5.2.
    Real-time distributed resource allocation The optimization procedures during task
    offloading are primordial in order to handle crucial operations such as intelligent
    resource allocation and service continuity, by making independent and rational
    strategic decisions and smartly adapting to the environment. In this scenario,
    access networks are usually centralized, with all the traffic going through a
    central node (i.e., a BS). Furthermore, by offloading the tasks to a distributed
    Edge infrastructure, a separate backhaul connection is required which can increase
    the installation and energy costs for the mobile operators. Finding the right
    resources to offload the tasks to, in such distributed scenarios, is a critical
    objective, especially for heterogeneous networks. On top of that, the dynamic
    behavior of the user adds another level of complexity when the appropriate Edge
    site needs to be selected in order to achieve the task offloading objectives,
    such as low latency and resource optimization, while maintaining at the same time
    the user association information with the adjacent BS. Developing a real-time
    task offloading algorithm that considers the user interactions and a distributed
    Edge infrastructure, in order to improve the service delivery in dynamic scenarios,
    is one of the greatest currently open challenges. Moreover, in the heterogeneous
    networks, efficient real time allocation schemes that learn based on historic
    performance and adapt online to application’s statistics, are still in their infancy.
    5.3. Mobility-induced network dynamics In many situations, the dynamic movement
    behavior of the users becomes the deciding factor on whether to offload the task
    or not. Even though few existing researches aim to take mobility into account,
    the particular case is still considered an open challenge. For example, developing
    algorithms by learning the user’s behavior and network dynamics in parallel, in
    order to reduce communication and computational costs, are of utmost importance
    for new and emerging applications. Beyond 2020, there will be a growing demand
    for high user mobility applications such as drone-based applications, high speed
    trains, moving hotspots and 3D connectivity. Current solutions, would be difficult
    to be applied in such extremes scenarios, not only in terms of accuracy but also
    in terms of minimum performance requirements (e.g over 500 km/h high speed mobility,
    high throughput and ultra low latency). 5.4. Node, resource and application heterogeneity
    Another critical challenge is dealing the heterogeneity of the available infrastructure
    in terms of hardware and available resources. Both mobile and Edge devices are
    characterized by a great heterogeneity in terms of hardware, software and resource
    capabilities specifications. Furthermore, the existence of a large range of applications
    with different performance requirements, that are readily available at the same
    end device, can affect or limit the efficiency of the task offloading solution
    used. All these factors are key components during task offloading. Thus, maintaining
    adequate service delivery and service continuity, while addressing the task offloading
    in such a heterogeneous scenario, as a research topic, is still in its infancy.
    5.5. Moving edge resources closer to the end devices There exist several situations
    in which task offloading is indispensable but where the end devices are not able
    to directly offload data to an Edge server (e.g., that are not in range or do
    not have enough energy to reach it). In such cases, it may be useful to send off
    mobile Edge resources close to these end devices and adapt to their mobility and
    needs. However, obviously, mobile Edge resources might not be as powerful as stationary
    ones and might also be limited in terms of the services they can offer and their
    autonomy. Thus, the challenges imposed to task offloading here will be (i) how
    to trigger the sending of mobile resources, (ii) what kind of tasks to offload
    and (iii) from what end devices. 5.6. Security and privacy Naturally, task offloading
    involves a huge amount of data outsourced to third party Edge infrastructures,
    thus security and privacy concepts are of paramount importance. These concepts
    can be addressed from different angles, i.e., (i) end user device, (ii) Edge data
    center and (iii) the actual data transmission over the network. Lately, a great
    increase in the variety of sophisticated attacks on end user devices has been
    observed, which constitutes the main target for attackers. Regarding the Edge
    infrastructures, threats are mainly focused on the data transmission between the
    different nodes of the network. Proposed solutions include various steganography
    and homomorphic encryption techniques, as well as hardware-based secure execution.
    However, when used individually, most of these solutions have limitations in their
    applications; e.g., encryption keys may be too large hence dramatically increasing
    the amount of transmitted and stored data, while computation on encrypted data
    is still in early research stages. Undoubtedly, Edge-related security and privacy
    threats are advancing in a quick manner, making it challenging to adapt to and
    deflect. Centralized monolithic security systems need to evolve as well into agile
    distributed solutions that combine more than one techniques, to fit better to
    the Edge Computing paradigm. Hence, task offloading solutions should be enhanced
    by taking into consideration security and confidentiality constraints. 5.7. Fault
    tolerance Apart from security and privacy, an important factor contributing to
    building trust towards task offloading at the Edge is fault tolerance. As thoroughly
    discussed in the previous sections, mobility support is one of the most important
    requirements during task offloading and this is because autonomy of communication
    and freedom of movement are crucial criteria when it comes to users’ satisfaction.
    Still, there are certain obstacles in achieving seamless connectivity and uninterrupted
    access to an Edge server while moving. For example, network bandwidth and data
    exchange rates may vary or connection might be lost. Thus, task offloading should
    be enhanced with fault tolerance techniques to guarantee the successful transmission
    and execution of the task, as well as minimize application response time and energy
    consumption in end-user devices. 5.8. Control-related challenges Although control
    theory is widely applied in Cloud elasticity and resource allocation problems
    [283], there are still open challenges on task offloading and Edge Computing that
    can be addressed by control techniques. Apart from respecting the QoS requirements,
    control theory is able to guarantee important system properties, e.g., stability,
    positive invariant sets and ultimate boundedness [284], against the inherent system’s
    uncertainties and external disturbances. Intermittent connectivity, the innate
    management features of the virtualization technologies and the limited resources
    at the edge of the network, lead to a highly volatile dynamic environment that
    necessitates advanced modeling and control methodologies. Regarding the modeling
    of the offloading-based applications, control theory provides many modeling alternatives
    involving switching systems [145], [284], Linear Parameter Varying (LPV) systems
    [285], [286] and Fuzzy Takagi–Sugeno systems [287], [288], that allow the natural
    incorporation of uncertainties and disturbances in the performance model. 5.9.
    Controller design for cyber–physical systems (CPS) Another active and very practical
    challenge in the context of IoT and mobile-enabled computing, is the controller
    design for cyber–physical systems (CPS), found e.g., in manufacturing, transportation
    and collaborative robotics. In the context of dynamic networks and remote computing,
    a joint co-design decision making strategy for task offloading, resource allocation
    and controller design for CPS, is more appropriate when compared to separate layers
    of controllers for the infrastructure resources and the system to be controlled.
    This new generation of controllers will be made possible by merging two sets of
    models, namely (a) the performance model described above and (b) the process model
    (having, for example, variables related to position, orientation and velocity
    of mobile devices, lighting conditions, room temperature and mode of operation
    of sensors). The co-designed controllers should address many of the non-idealities
    of the dynamic networks found during task offloading, where resources must be
    used parsimoniously, in balance with the constraints and the overall objective
    [289]. It is worth mentioning that in control engineering, shared and imperfect
    communication networks between the controller and the sensor/actuator have been
    studied extensively, generating the branch of Networked Control Systems (NCS)
    [290]. Several developed methods address time delays and packet dropouts of NCS,
    utilizing perturbation theory, Lyapunov stability theory and hybrid systems analysis,
    including probabilistic methods involving Markov chains and stochastic automata
    [291], [292], [293]. A breakthrough will be the emergence of event-triggered and
    self-triggered control, that allows asynchronous sampling, thus reducing the network
    traffic, while at the same time providing guaranteed trade-offs of the degradation
    of the closed-loop system performance [294]. Consequently, in the context of task
    offloading, a timely challenge is to provide co-design control formulations that
    develop dynamic task offloading as well as control design algorithms for CPS,
    taking simultaneously into account the schedulability, available and requested
    network resources, Edge resources and energy consumption. It is anticipated that
    such control algorithms will improve performance, utilization of the underlying
    infrastructure as well as resilience and robustness of the systems to be controlled.
    6. Conclusion In this paper, we have presented a detailed and comprehensive study
    of the task offloading problem and we have extensively analyzed the main components
    and different computing paradigms of an end-to-end communication path. This path
    starts at the end device (i.e., mobile/IoT devices) and leverages the benefits
    of the added computational resources at the edge of the network, before ending
    up to the Cloud. Nonetheless, offloading parts of an application from an end device
    to a remote Edge or Cloud site, arises a number of challenges mostly related to
    the dynamic network behavior and the resource allocation problem to be solved.
    Between these challenges, the type of end devices in terms of mobility is expected
    to be one of the main characteristics of task offloading that can dictate the
    scheduling and allocation of the offloaded tasks. Prominent solutions addressing
    these challenges have given the necessary momentum to task offloading in order
    to be considered as a viable solution not only to existing, but to emerging and
    upcoming applications such as immersive applications, autonomous vehicles and
    robotics. The benefits of task offloading are numerous, allowing to increase the
    QoS and QoE of the application, while extending the battery lifetime of the end
    devices. To achieve that, specific emphasis is given on the optimization models
    used along with the different objectives, in order to partition and allocate the
    tasks of end devices into an end-to-end communication path that creates a user
    to Cloud continuum. Since this problem contains various dynamic parameters in
    terms of network and user behavior, appropriate AI and ML techniques to anticipate
    traffic demands have also been presented. Control theory techniques have also
    been investigated as an alternative way to address the uncertainties of this dynamic
    problem, with the aim to ensure the necessary stability of the task offloading
    systems. Our survey concluded with some interesting open challenges that will
    shape and transform the task offloading problem for future network scenarios and
    applications. These future directions emphasize on control co-design, dynamic
    and real-time allocation in a heterogeneous Edge environment, and secure and highly
    mobile network platforms. CRediT authorship contribution statement Firdose Saeik:
    Conceptualization, Investigation, Writing - original draft, Writing - review &
    editing. Marios Avgeris: Conceptualization, Investigation, Writing - original
    draft, Writing - review & editing. Dimitrios Spatharakis: Conceptualization, Investigation,
    Writing - original draft, Writing - review & editing. Nina Santi: Conceptualization,
    Investigation, Writing - original draft, Writing - review & editing. Dimitrios
    Dechouniotis: Conceptualization, Investigation, Writing - original draft, Writing
    - review & editing. John Violos: Conceptualization, Investigation, Writing - original
    draft, Writing - review & editing. Aris Leivadeas: Conceptualization, Investigation,
    Writing - original draft, Writing - review & editing. Nikolaos Athanasopoulos:
    Conceptualization, Investigation, Writing - original draft, Writing - review &
    editing. Nathalie Mitton: Conceptualization, Investigation, Writing - original
    draft, Writing - review & editing. Symeon Papavassiliou: Conceptualization, Investigation,
    Writing - original draft, Writing - review & editing. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgment This work was supported in part by the CHIST-ERA-2018-DRUID-NET
    project, France . References [1] Gupta A., Jha R.K. A survey of 5G network: Architecture
    and emerging technologies IEEE Access, 3 (2015), pp. 1206-1232 View in ScopusGoogle
    Scholar [2] Series M. IMT Vision–framework and overall objectives of the future
    development of IMT for 2020 and beyond Recomm. ITU (2015) 2083–0 Google Scholar
    [3] Altamimi M., Abdrabou A., Naik K., Nayak A. Energy cost models of smartphones
    for task offloading to the cloud IEEE Trans. Emerg. Top. Comput., 3 (3) (2015),
    pp. 384-398 View in ScopusGoogle Scholar [4] Ma X., Zhao Y., Zhang L., Wang H.,
    Peng L. When mobile terminals meet the cloud: computation offloading as the bridge
    IEEE Netw., 27 (5) (2013), pp. 28-33 Google Scholar [5] Yu W., Liang F., He X.,
    Hatcher W.G., Lu C., Lin J., Yang X. A survey on the edge computing for the Internet
    of Things IEEE Access, 6 (2017), pp. 6900-6919 View in ScopusGoogle Scholar [6]
    Mach P., Becvar Z. Mobile edge computing: A survey on architecture and computation
    offloading IEEE Commun. Surv. Tutor., 19 (3) (2017), pp. 1628-1656 View in ScopusGoogle
    Scholar [7] Jiang C., Cheng X., Gao H., Zhou X., Wan J. Toward computation offloading
    in edge computing: A survey IEEE Access, 7 (2019), pp. 131543-131558 CrossRefView
    in ScopusGoogle Scholar [8] Mao Y., You C., Zhang J., Huang K., Letaief K.B. A
    survey on mobile edge computing: The communication perspective IEEE Commun. Surv.
    Tutor., 19 (4) (2017), pp. 2322-2358 View in ScopusGoogle Scholar [9] Hong C.-H.,
    Varghese B. Resource management in fog/edge computing: a survey on architectures,
    infrastructure, and algorithms ACM Comput. Surv., 52 (5) (2019), pp. 1-37 View
    in ScopusGoogle Scholar [10] Wang S., Zhang X., Zhang Y., Wang L., Yang J., Wang
    W. A survey on mobile edge networks: Convergence of computing, caching and communications
    IEEE Access, 5 (2017), pp. 6757-6779 Google Scholar [11] Rodrigues T.K., Suto
    K., Nishiyama H., Liu J., Kato N. Machine learning meets computation and communication
    control in evolving edge and cloud: Challenges and future perspective IEEE Commun.
    Surv. Tutor. (2019) Google Scholar [12] Wang J., Pan J., Esposito F., Calyam P.,
    Yang Z., Mohapatra P. Edge cloud offloading algorithms: Issues, methods, and perspectives
    ACM Comput. Surv., 52 (1) (2019), pp. 1-23 Google Scholar [13] Pham Q., Fang F.,
    Ha V.N., Piran M.J., Le M., Le L.B., Hwang W., Ding Z. A survey of multi-access
    edge computing in 5G and beyond: Fundamentals, technology integration, and state-of-the-art
    IEEE Access, 8 (2020), pp. 116974-117017 CrossRefView in ScopusGoogle Scholar
    [14] Yousefpour A., Fung C., Nguyen T., Kadiyala K., Jalali F., Niakanlahiji A.,
    Kong J., Jue J.P. All one needs to know about fog computing and related edge computing
    paradigms: A complete survey J. Syst. Archit., 98 (2019), pp. 289-330 View PDFView
    articleView in ScopusGoogle Scholar [15] Lin L., Liao X., Jin H., Li P. Computation
    offloading toward edge computing Proc. IEEE, 107 (8) (2019), pp. 1584-1607 CrossRefView
    in ScopusGoogle Scholar [16] Shan X., Zhi H., Li P., Han Z. A survey on computation
    offloading for mobile edge computing information 2018 IEEE 4th International Conference
    on Big Data Security on Cloud (BigDataSecurity), IEEE International Conference
    on High Performance and Smart Computing, (HPSC) and IEEE International Conference
    on Intelligent Data and Security (IDS), IEEE (2018), pp. 248-251 CrossRefView
    in ScopusGoogle Scholar [17] Ai Y., Peng M., Zhang K. Edge computing technologies
    for Internet of Things: a primer Digit. Commun. Netw., 4 (2) (2018), pp. 77-86
    View PDFView articleView in ScopusGoogle Scholar [18] Khan W.Z., Ahmed E., Hakak
    S., Yaqoob I., Ahmed A. Edge computing: A survey Future Gener. Comput. Syst.,
    97 (2019), pp. 219-235 View PDFView articleView in ScopusGoogle Scholar [19] Mendiboure
    L., Chalouf M.-A., Krief F. Edge computing based applications in vehicular environments:
    Comparative study and main issues J. Comput. Sci. Tech., 34 (4) (2019), pp. 869-886
    CrossRefView in ScopusGoogle Scholar [20] Mell P., Grance T., et al. The NIST
    Definition of Cloud Computing Computer Security Division, National Information
    Technology Laboratory (2011) Google Scholar [21] Mei L., Chan W.K., Tse T. A tale
    of clouds: Paradigm comparisons and some thoughts on research issues 2008 IEEE
    Asia-Pacific Services Computing Conference, IEEE (2008), pp. 464-469 CrossRefView
    in ScopusGoogle Scholar [22] Fernando N., Loke S.W., Rahayu W. Dynamic mobile
    cloud computing: Ad hoc and opportunistic job sharing 2011 Fourth IEEE International
    Conference on Utility and Cloud Computing, IEEE (2011), pp. 281-286 CrossRefView
    in ScopusGoogle Scholar [23] Huerta-Canepa G., Lee D. A virtual cloud computing
    provider for mobile devices Proceedings of the 1st ACM Workshop on Mobile Cloud
    Computing & Services: Social Networks and beyond, ACM (2010), p. 6 View in ScopusGoogle
    Scholar [24] Khan A.U.R., Othman M., Madani S.A., Khan S.U. A survey of mobile
    cloud computing application models IEEE Commun. Surv. Tutor., 16 (1) (2014), pp.
    393-413 View in ScopusGoogle Scholar [25] N.I.M. Enzai, M. Tang, A taxonomy of
    computation offloading in mobile cloud computing, in: 2014 2nd IEEE International
    Conference on Mobile Cloud Computing, Services, and Engineering, 2014, pp. 19–28.
    Google Scholar [26] Satyanarayanan M., Bahl V., Caceres R., Davies N. The case
    for vm-based cloudlets in mobile computing IEEE Pervas. Comput. (2009) Google
    Scholar [27] F. Bonomi, R. Milito, J. Zhu, S. Addepalli, Fog computing and its
    role in the Internet of Things, in; Proceedings of the First Edition of the MCC
    Workshop on Mobile Cloud Computing, 2012, pp. 13–16. Google Scholar [28] Antonio
    S. Cisco delivers vision of fog computing to accelerate value from billions of
    connected devices Cisco (2014) Google Scholar [29] Consortium O., et al. Openfog
    reference architecture for fog computing Archit. Work. Group (2017) Google Scholar
    [30] R. Cisco, M.Y. Upc, M. Nemirovsky, Fog computing, in: Proc. Cloud Assist.
    Serveys Eur. Conf. Bled, 2012, pp. 1–15. Google Scholar [31] Bonomi F., Milito
    R., Natarajan P., Zhu J. Fog computing: A platform for Internet of Things and
    analytics Big Data and Internet of Things: A Roadmap for Smart Environments, Springer
    (2014), pp. 169-186 CrossRefView in ScopusGoogle Scholar [32] Chiang M., Zhang
    T. Fog and IoT: An overview of research opportunities IEEE Internet Things J.,
    3 (6) (2016), pp. 854-864 View in ScopusGoogle Scholar [33] Hou X., Li Y., Chen
    M., Wu D., Jin D., Chen S. Vehicular fog computing: A viewpoint of vehicles as
    the infrastructures IEEE Trans. Veh. Technol., 65 (6) (2016), pp. 3860-3873 View
    in ScopusGoogle Scholar [34] Soleymani S.A., Abdullah A.H., Zareei M., Anisi M.H.,
    Vargas-Rosales C., Khan M.K., Goudarzi S. A secure trust model based on fuzzy
    logic in vehicular ad hoc networks with fog computing IEEE Access, 5 (2017), pp.
    15619-15629 View in ScopusGoogle Scholar [35] Elbamby M.S., Bennis M., Saad W.
    Proactive edge computing in latency-constrained fog networks 2017 European Conference
    on Networks and Communications, EuCNC, IEEE (2017), pp. 1-6 CrossRefGoogle Scholar
    [36] You D., Doan T.V., Torre R., Mehrabi M., Kropp A., Nguyen V., Salah H., Nguyen
    G.T., Fitzek F.H. Fog computing as an enabler for immersive media: Service scenarios
    and research opportunities IEEE Access, 7 (2019), pp. 65797-65810 CrossRefView
    in ScopusGoogle Scholar [37] Iorga M., Feldman L., Barton R., Martin M., Goren
    N., Mahmoudi C. The Nist Definition of Fog Computing: Tech. Rep. National Institute
    of Standards and Technology (2017) Google Scholar [38] Hu Y.C., Patel M., Sabella
    D., Sprecher N., Young V. Mobile edge computing—A key technology towards 5G ETSI
    White Paper, 11 (11) (2015), pp. 1-16 Google Scholar [39] ETSI M. Mobile edge
    computing (mec); framework and reference architecture ETSI, DGS MEC, vol. 3 (2016)
    Google Scholar [40] Sabella D., Vaillant A., Kuure P., Rauschenbach U., Giust
    F. Mobile-edge computing architecture: The role of MEC in the Internet of Things
    IEEE Consumer Electron. Mag., 5 (4) (2016), pp. 84-91 View in ScopusGoogle Scholar
    [41] Zhang K., Mao Y., Leng S., Zhao Q., Li L., Peng X., Pan L., Maharjan S.,
    Zhang Y. Energy-efficient offloading for mobile edge computing in 5G heterogeneous
    networks IEEE Access, 4 (2016), pp. 5896-5907 View in ScopusGoogle Scholar [42]
    Ketykó I., Kecskés L., Nemes C., Farkas L. Multi-user computation offloading as
    multiple knapsack problem for 5G mobile edge computing 2016 European Conference
    on Networks and Communications, EuCNC, IEEE (2016), pp. 225-229 CrossRefView in
    ScopusGoogle Scholar [43] Zhang K., Mao Y., Leng S., Vinel A., Zhang Y. Delay
    constrained offloading for mobile edge computing in cloud-enabled vehicular networks
    2016 8th International Workshop on Resilient Networks Design and Modeling, RNDM,
    IEEE (2016), pp. 288-294 CrossRefView in ScopusGoogle Scholar [44] Taleb T., Dutta
    S., Ksentini A., Iqbal M., Flinck H. Mobile edge computing potential in making
    cities smarter IEEE Commun. Mag., 55 (3) (2017) Google Scholar [45] Tran T.X.,
    Hosseini M.-P., Pompili D. Mobile edge computing: Recent efforts and five key
    research directions IEEE COMSOC MMTC Commun.-Frontiers (2017) Google Scholar [46]
    Taleb T., Samdanis K., Mada B., Flinck H., Dutta S., Sabella D. On multi-access
    edge computing: A survey of the emerging 5G network edge cloud architecture and
    orchestration IEEE Commun. Surv. Tutor., 19 (3) (2017), pp. 1657-1681 View in
    ScopusGoogle Scholar [47] Kekki S., Featherstone W., Fang Y., Kuure P., Li A.,
    Ranjan A., Purkayastha D., Jiangping F., Frydman D., Verin G., et al. MEC In 5G
    networks ETSI White Paper, 28 (2018), pp. 1-28 Google Scholar [48] Bahl V. Emergence
    of micro datacenter (cloudlets/edges) for mobile computing Microsoft Devices &
    Networking Summit 2015 (2015) Google Scholar [49] . European Telecommunication
    Standards Institute (ETSI), Multi-access Edge Computing (MEC), https://www.etsi.org/technologies/multi-access-edge-computing.
    Google Scholar [50] Miluzzo E., Wang T., Campbell A.T. Eyephone: activating mobile
    phones with your eyes Proceedings of the Second ACM SIGCOMM Workshop on Networking,
    Systems, and Applications on Mobile Handhelds, ACM (2010), pp. 15-20 CrossRefView
    in ScopusGoogle Scholar [51] Kemp R., Palmer N., Kielmann T., Bal H. Cuckoo: a
    computation offloading framework for smartphones International Conference on Mobile
    Computing, Applications, and Services, Springer (2010), pp. 59-79 CrossRefView
    in ScopusGoogle Scholar [52] Kemp R., Palmer N., Kielmann T., Bal H. Opportunistic
    communication for multiplayer mobile gaming: Lessons learned from photoshoot Proceedings
    of the Second International Workshop on Mobile Opportunistic Networking, ACM (2010),
    pp. 182-184 CrossRefView in ScopusGoogle Scholar [53] Bohez S., De Turck J., Verbelen
    T., Simoens P., Dhoedt B. Mobile, collaborative augmented reality using cloudlets
    2013 International Conference on MOBILe Wireless MiddleWARE, Operating Systems,
    and Applications, IEEE (2013), pp. 45-54 View in ScopusGoogle Scholar [54] Verbelen
    T., Simoens P., De Turck F., Dhoedt B. Leveraging cloudlets for immersive collaborative
    applications IEEE Pervas. Comput., 12 (4) (2013), pp. 30-38 View in ScopusGoogle
    Scholar [55] Chung J.-M., Park Y.-S., Park J.-H., Cho H. Adaptive cloud offloading
    of augmented reality applications on smart devices for minimum energy consumption
    Ksii Trans. Internet Inf. Syst., 9 (8) (2015) Google Scholar [56] Drolia U., Martins
    R., Tan J., Chheda A., Sanghavi M., Gandhi R., Narasimhan P. The case for mobile
    edge-clouds 2013 IEEE 10th International Conference on Ubiquitous Intelligence
    and Computing and 2013 IEEE 10th International Conference on Autonomic and Trusted
    Computing, IEEE (2013), pp. 209-215 CrossRefView in ScopusGoogle Scholar [57]
    Dolezal J., Becvar Z., Zeman T. Performance evaluation of computation offloading
    from mobile device to the edge of mobile network 2016 IEEE Conference on Standards
    for Communications and Networking, CSCN, IEEE (2016), pp. 1-7 CrossRefGoogle Scholar
    [58] Comşa I.-S., Muntean G.-M., Trestian R. An innovative machine-learning-based
    scheduling solution for improving live UHD video streaming quality in highly dynamic
    network environments IEEE Trans. Broadcast. (2020) Google Scholar [59] S. Mangiante,
    G. Klas, A. Navon, Z. GuanHua, J. Ran, M.D. Silva, VR is on the edge: How to deliver
    360 videos in mobile networks, in: Proceedings of the Workshop on Virtual Reality
    and Augmented Reality Network, 2017, pp. 30–35. Google Scholar [60] J. Chakareski,
    VR/AR immersive communication: Caching, edge computing, and transmission trade-offs,
    in: Proceedings of the Workshop on Virtual Reality and Augmented Reality Network,
    2017, pp. 36–41. Google Scholar [61] Liu Q., Huang S., Opadere J., Han T. An edge
    network orchestrator for mobile augmented reality IEEE INFOCOM 2018-IEEE Conference
    on Computer Communications, IEEE (2018), pp. 756-764 CrossRefView in ScopusGoogle
    Scholar [62] Fraedrich E., Cyganski R., Wolf I., Lenz B. User Perspectives on
    Autonomous Driving: A Use-Case-Driven Study in Germany Geographisches Institut,
    Humboldt-Universität zu Berlin (2016) Google Scholar [63] Puetzschler U. LTE and
    Car2x: Connected cars on the way to 5G Mobile Broadband SIG, vol. 6 (2016) Google
    Scholar [64] Sahni Y., Cao J., Zhang S., Yang L. Edge mesh: A new paradigm to
    enable distributed intelligence in Internet of Things IEEE Access, 5 (2017), pp.
    16441-16458 View in ScopusGoogle Scholar [65] Wang X., Ning Z., Wang L. Offloading
    in internet of vehicles: A fog-enabled real-time traffic management system IEEE
    Trans. Ind. Inf., 14 (10) (2018), pp. 4568-4578 CrossRefView in ScopusGoogle Scholar
    [66] Hu G., Tay W.P., Wen Y. Cloud robotics: architecture, challenges and applications
    IEEE Netw., 26 (3) (2012), pp. 21-28 View in ScopusGoogle Scholar [67] Kehoe B.,
    Patil S., Abbeel P., Goldberg K. A survey of research on cloud robotics and automation
    IEEE Trans. Autom. Sci. Eng., 12 (2) (2015), pp. 398-409 View in ScopusGoogle
    Scholar [68] Jordan S., Haidegger T., Kovács L., Felde I., Rudas I. The rising
    prospects of cloud robotic applications 2013 IEEE 9th International Conference
    on Computational Cybernetics, ICCC, IEEE (2013), pp. 327-332 CrossRefView in ScopusGoogle
    Scholar [69] Song D., Tanwani A.K., Goldberg K., Siciliano B. Networked-, Cloud-and
    Fog-Robotics Springer (2019) Google Scholar [70] Tanwani A.K., Anand R., Gonzalez
    J.E., Goldberg K. RILaaS: Robot Inference and Learning as a Service IEEE Robotics
    Autom. Lett. (2020) Google Scholar [71] Bekris K., Shome R., Krontiris A., Dobson
    A. Cloud automation: Precomputing roadmaps for flexible manipulation IEEE Robot.
    Autom. Mag., 22 (2) (2015), pp. 41-50 View in ScopusGoogle Scholar [72] J. Glover,
    D. Rus, N. Roy, Probabilistic models of object geometry for grasp planning, in:
    Proceedings of Robotics: Science and Systems IV, Zurich, Switzerland, 2008, pp.
    278–285. Google Scholar [73] Riazuelo L., Civera J., Montiel J.M. C2tam: A cloud
    framework for cooperative tracking and mapping Robot. Auton. Syst., 62 (4) (2014),
    pp. 401-413 View PDFView articleView in ScopusGoogle Scholar [74] Turnbull L.,
    Samanta B. Cloud robotics: Formation control of a multi robot system utilizing
    cloud infrastructure 2013 Proceedings of IEEE Southeastcon, IEEE (2013), pp. 1-4
    CrossRefGoogle Scholar [75] Mohanarajah G., Usenko V., Singh M., D’Andrea R.,
    Waibel M. Cloud-based collaborative 3D mapping in real-time with low-cost robots
    IEEE Trans. Autom. Sci. Eng., 12 (2) (2015), pp. 423-431 View in ScopusGoogle
    Scholar [76] N. Tian, A.K. Tawani, K. Goldberg, S. Sojoudi, Motion segmentation
    and synthesis for latency mitigation in a cloud robotic tele-operation system,
    in: International Symposium on Robotics Research, 2019. Google Scholar [77] Bowman
    S.L., Atanasov N., Daniilidis K., Pappas G.J. Probabilistic data association for
    semantic slam 2017 IEEE International Conference on Robotics and Automation, ICRA,
    IEEE (2017), pp. 1722-1729 View in ScopusGoogle Scholar [78] L. Riazuelo, M. Tenorth,
    D. Marco, M. Salas, L. Mosenlechner, L. Kunze, M. Beetz, J. Tardos, L. Montano,
    J. Montiel, Roboearth web-enabled and knowledge-based active perception, in: IROS
    Workshop on AI-Based Robotics, 2013. Google Scholar [79] Tanwani A.K., Mor N.,
    Kubiatowicz J., Gonzalez J.E., Goldberg K. A fog robotics approach to deep robot
    learning: Application to object recognition and grasp planning in surface decluttering
    2019 International Conference on Robotics and Automation, ICRA, IEEE (2019), pp.
    4559-4566 CrossRefView in ScopusGoogle Scholar [80] Services A.W. AWS robomaker
    [online] (2021) https://aws.amazon.com/robomaker/. (Accessed 20 January 2021)
    Google Scholar [81] Google A.W. Cloud robotics core [online] (2021) https://googlecloudrobotics.github.io/core/,
    (Accessed 20 January 2021) Google Scholar [82] Rapyuta robotics [online] (2021)
    https://www.rapyuta-robotics.com. (Accessed 20 January 2021) Google Scholar [83]
    Dilley J., Maggs B., Parikh J., Prokop H., Sitaraman R., Weihl B. Globally distributed
    content delivery IEEE Internet Comput., 6 (5) (2002), pp. 50-58 View in ScopusGoogle
    Scholar [84] Papagianni C., Leivadeas A., Papavassiliou S. A cloud-oriented content
    delivery network paradigm: Modeling and assessment IEEE Trans. Dependable Secure
    Comput., 10 (5) (2013), pp. 287-300 View in ScopusGoogle Scholar [85] Bilal K.,
    Erbad A., Hefeeda M. Crowdsourced multi-view live video streaming using cloud
    computing IEEE Access, 5 (2017), pp. 12635-12647 View in ScopusGoogle Scholar
    [86] Fajardo J.O., Taboada I., Liberal F. Improving content delivery efficiency
    through multi-layer mobile edge adaptation IEEE Netw., 29 (6) (2015), pp. 40-46
    View in ScopusGoogle Scholar [87] Tran T.X., Pandey P., Hajisami A., Pompili D.
    Collaborative multi-bitrate video caching and processing in mobile-edge computing
    networks 2017 13th Annual Conference on Wireless on-Demand Network Systems and
    Services, WONS, IEEE (2017), pp. 165-172 View in ScopusGoogle Scholar [88] Ren
    J., Yu G., Cai Y., He Y. Latency optimization for resource allocation in mobile-edge
    computation offloading IEEE Trans. Wireless Commun., 17 (8) (2018), pp. 5506-5519
    CrossRefView in ScopusGoogle Scholar [89] Kao Y.-H., Krishnamachari B., Ra M.-R.,
    Bai F. Hermes: Latency optimal task assignment for resource-constrained mobile
    computing IEEE Trans. Mob. Comput., 16 (11) (2017), pp. 3056-3069 View in ScopusGoogle
    Scholar [90] Yang S., He Y., Zheng X. Fovr: Attention-based VR streaming through
    bandwidth-limited wireless networks 2019 16th Annual IEEE International Conference
    on Sensing, Communication, and Networking, SECON, IEEE (2019), pp. 1-9 View PDFView
    articleGoogle Scholar [91] Gubbi J., Buyya R., Marusic S., Palaniswami M. Internet
    of Things (IoT): A vision, architectural elements, and future directions Future
    Gener. Comput. Syst., 29 (7) (2013), pp. 1645-1660 View PDFView articleView in
    ScopusGoogle Scholar [92] Farris I., Militano L., Nitti M., Atzori L., Iera A.
    Federated edge-assisted mobile clouds for service provisioning in heterogeneous
    IoT environments 2015 IEEE 2nd World Forum on Internet of Things, WF-IoT, IEEE
    (2015), pp. 591-596 CrossRefView in ScopusGoogle Scholar [93] Zhu C., Li X., Song
    L., Xiang L. Development of a theoretically based thermal model for lithium ion
    battery pack J. Power Sources, 223 (2013), pp. 155-164 View PDFView articleView
    in ScopusGoogle Scholar [94] Nan Y., Li W., Bao W., Delicato F.C., Pires P.F.,
    Dou Y., Zomaya A.Y. Adaptive energy-aware computation offloading for cloud of
    things systems IEEE Access, 5 (2017), pp. 23947-23957 View in ScopusGoogle Scholar
    [95] Farris I., Militano L., Nitti M., Atzori L., Iera A. Mifaas: A mobile-IoT-federation-as-a-service
    model for dynamic cooperation of IoT cloud providers Future Gener. Comput. Syst.,
    70 (2017), pp. 126-137 View PDFView articleView in ScopusGoogle Scholar [96] Sharma
    S.K., Wang X. Live data analytics with collaborative edge and cloud processing
    in wireless IoT networks IEEE Access, 5 (2017), pp. 4621-4635 View in ScopusGoogle
    Scholar [97] Yousefpour A., Ishigaki G., Gour R., Jue J.P. On reducing IoT service
    delay via fog offloading IEEE Internet Things J., 5 (2) (2018), pp. 998-1010 CrossRefView
    in ScopusGoogle Scholar [98] Kim K., Hong C.S. Optimal task-UAV-edge matching
    for computation offloading in uav assisted mobile edge computing 2019 20th Asia-Pacific
    Network Operations and Management Symposium, APNOMS, IEEE (2019), pp. 1-4 Google
    Scholar [99] Chen S., Wang Q., Chen J., Wu T. An intelligent task offloading algorithm
    (iTOA) for UAV network 2019 IEEE Globecom Workshops, GC Wkshps, IEEE (2019), pp.
    1-6 View PDFView articleView in ScopusGoogle Scholar [100] Avgeris M., Spatharakis
    D., Dechouniotis D., Kalatzis N., Roussaki I., Papavassiliou S. Where there is
    fire there is smoke: a scalable edge computing framework for early fire detection
    Sensors, 19 (3) (2019), p. 639 CrossRefView in ScopusGoogle Scholar [101] Wang
    J., Conrad Meyer M., Wu Y., Wang Y. Maximum data-resolution efficiency for fog-computing
    supported spatial big data processing in disaster scenarios IEEE Trans. Parallel
    Distrib. Syst., 30 (2019), pp. 1826-1842 Google Scholar [102] Zhou J., Fan J.,
    wang J., Zhu J. Task offloading for social sensing applications in mobile edge
    computing 2019 Seventh International Conference on Advanced Cloud and Big Data,
    CBD, IEEE (2019), pp. 333-338 View in ScopusGoogle Scholar [103] Ananthanarayanan
    G., Bahl P., Bodík P., Chintalapudi K., Philipose M., Ravindranath L., Sinha S.
    Real-time video analytics: The killer app for edge computing Computer, 50 (10)
    (2017), pp. 58-67 View in ScopusGoogle Scholar [104] Wang J., Pan J., Esposito
    F., Calyam P., Yang Z., Mohapatra P. Edge cloud offloading algorithms: Issues,
    methods, and perspectives ACM Comput. Surv., 52 (1) (2019), pp. 2:1-2:23 http://doi.acm.org/10.1145/3284387
    Google Scholar [105] Tran T.X., Hajisami A., Pandey P., Pompili D. Collaborative
    mobile edge computing in 5G networks: New paradigms, scenarios, and challenges
    IEEE Commun. Mag., 55 (4) (2017), pp. 54-61 View in ScopusGoogle Scholar [106]
    J. Violos, S. Pelekis, A. Berdelis, S. Tsanakas, K. Tserpes, T. Varvarigou, Predicting
    visitor distribution for large events in smart cities, in: 2019 IEEE International
    Conference on Big Data and Smart Computing, BigComp, 2019, pp. 1–8 (ISSN: 2375-9356).
    Google Scholar [107] Tran T.X., Pompili D. Joint task offloading and resource
    allocation for multi-server mobile-edge computing networks IEEE Trans. Veh. Technol.,
    68 (1) (2018), pp. 856-868 Google Scholar [108] Violos J., Psomakelis E., Tserpes
    K., Aisopos F., Varvarigou T. Leveraging user mobility and mobile app services
    behavior for optimal edge resource utilization Proceedings of the International
    Conference on Omni-Layer Intelligent Systems, COINS ’19, Association for Computing
    Machinery, Crete, Greece (2019), pp. 7-12 CrossRefGoogle Scholar [109] Yang L.,
    Zhang H., Li M., Guo J., Ji H. Mobile edge computing empowered energy efficient
    task offloading in 5G IEEE Trans. Veh. Technol., 67 (7) (2018), pp. 6398-6409
    CrossRefView in ScopusGoogle Scholar [110] Xu Z., Liu X., Jiang G., Tang B. A
    time-efficient data offloading method with privacy preservation for intelligent
    sensors in edge computing EURASIP J. Wireless Commun. Networking, 2019 (1) (2019),
    pp. 1-12 View PDFView articleGoogle Scholar [111] Liu F., Huang Z., Wang L. Energy-efficient
    collaborative task computation offloading in cloud-assisted edge computing for
    IoT sensors Sensors, 19 (5) (2019), p. 1105 CrossRefView in ScopusGoogle Scholar
    [112] Chen M., Liang B., Dong M. Multi-user multi-task offloading and resource
    allocation in mobile cloud systems IEEE Trans. Wireless Commun., 17 (10) (2018),
    pp. 6790-6805 CrossRefView in ScopusGoogle Scholar [113] Cao Y., Jiang T., Wang
    C. Optimal radio resource allocation for mobile task offloading in cellular networks
    IEEE Netw., 28 (5) (2014), pp. 68-73 View in ScopusGoogle Scholar [114] Cao Y.,
    Long C., Jiang T., Mao S. Share communication and computation resources on mobile
    devices: a social awareness perspective IEEE Wirel. Commun., 23 (4) (2016), pp.
    52-59 View in ScopusGoogle Scholar [115] Huang D., Wang P., Niyato D. A dynamic
    offloading algorithm for mobile computing IEEE Trans. Wireless Commun., 11 (6)
    (2012), pp. 1991-1995 View in ScopusGoogle Scholar [116] Sardellitti S., Barbarossa
    S., Scutari G. Distributed mobile cloud computing: Joint optimization of radio
    and computational resources 2014 IEEE Globecom Workshops, GC Wkshps, IEEE (2014),
    pp. 1505-1510 CrossRefView in ScopusGoogle Scholar [117] Munoz O., Pascual-Iserte
    A., Vidal J. Optimization of radio and computational resources for energy efficiency
    in latency-constrained application offloading IEEE Trans. Veh. Technol., 64 (10)
    (2014), pp. 4738-4755 Google Scholar [118] Plachy J., Becvar Z., Strinati E.C.
    Dynamic resource allocation exploiting mobility prediction in mobile edge computing
    2016 IEEE 27th Annual International Symposium on Personal, Indoor, and Mobile
    Radio Communications, PIMRC, IEEE (2016), pp. 1-6 CrossRefGoogle Scholar [119]
    Truong-Huu T., Tham C.-K., Niyato D. To offload or to wait: An opportunistic offloading
    algorithm for parallel tasks in a mobile cloud 2014 IEEE 6th International Conference
    on Cloud Computing Technology and Science, IEEE (2014), pp. 182-189 CrossRefView
    in ScopusGoogle Scholar [120] Chen M., Hao Y., Li Y., Lai C.-F., Wu D. On the
    computation offloading at ad hoc cloudlet: architecture and service modes IEEE
    Commun. Mag., 53 (6) (2015), pp. 18-24 Google Scholar [121] Pu L., Chen X., Xu
    J., Fu X. D2D fogging: An energy-efficient and incentive-aware task offloading
    framework via network-assisted D2D collaboration IEEE J. Sel. Areas Commun., 34
    (12) (2016), pp. 3887-3901 Google Scholar [122] Zhou S., Sun Y., Jiang Z., Niu
    Z. Exploiting moving intelligence: Delay-optimized computation offloading in vehicular
    fog networks IEEE Commun. Mag., 57 (5) (2019), pp. 49-55 CrossRefView in ScopusGoogle
    Scholar [123] Li W., You X., Jiang Y., Yang J., Hu L. Opportunistic computing
    offloading in edge clouds J. Parallel Distrib. Comput., 123 (2019), pp. 69-76
    View PDFView articleView in ScopusGoogle Scholar [124] Sun Y., Zhou S., Xu J.
    EMM: Energy-aware mobility management for mobile edge computing in ultra dense
    networks IEEE J. Sel. Areas Commun., 35 (11) (2017), pp. 2637-2646 View in ScopusGoogle
    Scholar [125] Wang Z., Zhao Z., Min G., Huang X., Ni Q., Wang R. User mobility
    aware task assignment for mobile edge computing Future Gener. Comput. Syst., 85
    (2018), pp. 1-8 View PDFView articleGoogle Scholar [126] Ahani G., Yuan D. BS-assisted
    task offloading for D2D networks with presence of user mobility 2019 IEEE 89th
    Vehicular Technology Conference (VTC2019-Spring), IEEE (2019), pp. 1-5 CrossRefGoogle
    Scholar [127] Ning Z., Dong P., Wang X., Rodrigues J.J., Xia F. Deep reinforcement
    learning for vehicular edge computing: An intelligent offloading system ACM Trans.
    Intell. Syst. Technol. (TIST), 10 (6) (2019), pp. 1-24 CrossRefGoogle Scholar
    [128] Do T.M.T., Dousse O., Miettinen M., Gatica-Perez D. A probabilistic kernel
    method for human mobility prediction with smartphones Pervasive Mob. Comput.,
    20 (2015), pp. 13-28 View PDFView articleView in ScopusGoogle Scholar [129] Li
    B., Zhang H., Lu H. User mobility prediction based on Lagrange’s interpolation
    in ultra-dense networks 2016 IEEE 27th Annual International Symposium on Personal,
    Indoor, and Mobile Radio Communications, PIMRC, IEEE (2016), pp. 1-6 View in ScopusGoogle
    Scholar [130] Alameddine H.A., Sharafeddine S., Sebbah S., Ayoubi S., Assi C.
    Dynamic task offloading and scheduling for low-latency IoT services in multi-access
    edge computing IEEE J. Sel. Areas Commun., 37 (3) (2019), pp. 668-682 CrossRefView
    in ScopusGoogle Scholar [131] Wu S., Xia W., Cui W., Chao Q., Lan Z., Yan F.,
    Shen L. An efficient offloading algorithm based on support vector machine for
    mobile edge computing in vehicular networks 2018 10th International Conference
    on Wireless Communications and Signal Processing, WCSP, IEEE (2018), pp. 1-6 View
    PDFView articleGoogle Scholar [132] M. Maanoja, M. Weckström, Location services,
    Google Patents, US Patent 7,069,023, 2006. Google Scholar [133] Deng S., Huang
    L., Hu D., Zhao J.L., Wu Z. Mobility-enabled service selection for composite services
    IEEE Trans. Serv. Comput., 9 (3) (2016), pp. 394-407 View in ScopusGoogle Scholar
    [134] Deng S., Huang L., Taheri J., Yin J., Zhou M., Zomaya A.Y. Mobility-aware
    service composition in mobile communities IEEE Trans. Syst. Man Cybern.: Syst.,
    47 (3) (2017), pp. 555-568 View in ScopusGoogle Scholar [135] S. Gambs, M.-O.
    Killijian, M.N. del Prado Cortez, Next place prediction using mobility Markov
    chains, in: Proceedings of the First Workshop on Measurement, Privacy, and Mobility,
    2012, pp. 1–6. Google Scholar [136] Lee K., Shin I. User mobility model based
    computation offloading decision for mobile cloud J. Comput. Sci. Eng., 9 (3) (2015),
    pp. 155-162 View in ScopusGoogle Scholar [137] Sun X., Ansari N. Adaptive avatar
    handoff in the cloudlet network IEEE Trans. Cloud Comput., 7 (3) (2019), pp. 664-676
    CrossRefView in ScopusGoogle Scholar [138] Chen M., Hao Y., Qiu M., Song J., Wu
    D., Humar I. Mobility-aware caching and computation offloading in 5G ultra-dense
    cellular networks Sensors, 16 (7) (2016), p. 974 CrossRefView in ScopusGoogle
    Scholar [139] Xu J., Chen L., Zhou P. Joint service caching and task offloading
    for mobile edge computing in dense networks IEEE INFOCOM 2018-IEEE Conference
    on Computer Communications, IEEE (2018), pp. 207-215 CrossRefView in ScopusGoogle
    Scholar [140] Wang D., Liu Z., Wang X., Lan Y. Mobility-aware task offloading
    and migration schemes in fog computing networks IEEE Access, 7 (2019), pp. 43356-43368
    CrossRefView in ScopusGoogle Scholar [141] Shi Y., Chen S., Xu X. MAGA: A mobility-aware
    computation offloading decision for distributed mobile cloud computing IEEE Internet
    Things J., 5 (1) (2017), pp. 164-174 View in ScopusGoogle Scholar [142] Yu F.,
    Chen H., Xu J. DMPO: Dynamic mobility-aware partial offloading in mobile edge
    computing Future Gener. Comput. Syst., 89 (2018), pp. 722-735 View PDFView articleView
    in ScopusGoogle Scholar [143] Siris V.A., Kalyvas D. Enhancing mobile data offloading
    with mobility prediction and prefetching ACM SIGMOBILE Mob. Comput. Commun. Rev.,
    17 (1) (2013), pp. 22-29 CrossRefGoogle Scholar [144] Yang C., Liu Y., Chen X.,
    Zhong W., Xie S. Efficient mobility-aware task offloading for vehicular edge computing
    networks IEEE Access, 7 (2019), pp. 26652-26664 CrossRefView in ScopusGoogle Scholar
    [145] Spatharakis D., Dimolitsas I., Dechouniotis D., Papathanail G., Fotoglou
    I., Papadimitriou P., Papavassiliou S. A scalable edge computing architecture
    enabling smart offloading for location based services Pervasive Mob. Comput.,
    67 (2020), Article 101217 View PDFView articleView in ScopusGoogle Scholar [146]
    Papathanail G., Fotoglou I., Demertzis C., Pentelas A., Sgouromitis K., Papadimitriou
    P., Spatharakis D., Dimolitsas I., Dechouniotis D., Papavassiliou S. COSMOS: An
    orchestration framework for smart computation offloading in edge clouds NOMS 2020-2020
    IEEE/IFIP Network Operations and Management Symposium, IEEE (2020), pp. 1-6 CrossRefGoogle
    Scholar [147] Akter M., Zohra F.T., Das A.K. Q-MAC: Qos and mobility aware optimal
    resource allocation for dynamic application offloading in mobile cloud computing
    2017 International Conference on Electrical, Computer and Communication Engineering,
    ECCE, IEEE (2017), pp. 803-808 CrossRefView in ScopusGoogle Scholar [148] C. Puliafito,
    E. Mingozzi, C. Vallati, F. Longo, G. Merlino, Companion fog computing: Supporting
    things mobility through container migration at the edge, in: 2018 IEEE International
    Conference on Smart Computing, SMARTCOMP, 2018, pp. 97–105. Google Scholar [149]
    Junior W., França A., Dias K., de Souza J.N. Supporting mobility-aware computational
    offloading in mobile cloud environment J. Netw. Comput. Appl., 94 (2017), pp.
    93-108 View PDFView articleView in ScopusGoogle Scholar [150] Yang L., Cao J.,
    Cheng H., Ji Y. Multi-user computation partitioning for latency sensitive mobile
    cloud applications IEEE Trans. Comput., 64 (8) (2014), pp. 2253-2266 Google Scholar
    [151] Bi S., Zhang Y.J. Computation rate maximization for wireless powered mobile-edge
    computing with binary computation offloading IEEE Trans. Wireless Commun., 17
    (6) (2018), pp. 4177-4190 CrossRefView in ScopusGoogle Scholar [152] Zhao T.,
    Zhou S., Guo X., Niu Z. Tasks scheduling and resource allocation in heterogeneous
    cloud for delay-bounded mobile edge computing 2017 IEEE International Conference
    on Communications, ICC, IEEE (2017), pp. 1-7 View in ScopusGoogle Scholar [153]
    Liu Q., Han T., Ansari N. Joint radio and computation resource management for
    low latency mobile edge computing 2018 IEEE Global Communications Conference,
    GLOBECOM, IEEE (2018), pp. 1-7 View PDFView articleGoogle Scholar [154] Yang L.,
    Cao J., Yuan Y., Li T., Han A., Chan A. A framework for partitioning and execution
    of data stream applications in mobile cloud computing ACM SIGMETRICS Perform.
    Eval. Rev., 40 (4) (2013), pp. 23-32 CrossRefView in ScopusGoogle Scholar [155]
    Liu J., Mao Y., Zhang J., Letaief K.B. Delay-optimal computation task scheduling
    for mobile-edge computing systems 2016 IEEE International Symposium on Information
    Theory, ISIT, IEEE (2016), pp. 1451-1455 View in ScopusGoogle Scholar [156] Jia
    M., Liang W., Xu Z., Huang M., Ma Y. Qos-aware cloudlet load balancing in wireless
    metropolitan area networks IEEE Trans. Cloud Comput. (2018) Google Scholar [157]
    Wang C., Liang C., Yu F.R., Chen Q., Tang L. Computation offloading and resource
    allocation in wireless cellular networks with mobile edge computing IEEE Trans.
    Wireless Commun., 16 (8) (2017), pp. 4924-4938 View in ScopusGoogle Scholar [158]
    Sonmez C., Ozgovde A., Ersoy C. Fuzzy workload orchestration for edge computing
    IEEE Trans. Netw. Serv. Manag. (2019) Google Scholar [159] Liu C.-F., Bennis M.,
    Poor H.V. Latency and reliability-aware task offloading and resource allocation
    for mobile edge computing 2017 IEEE Globecom Workshops, GC Wkshps, IEEE (2017),
    pp. 1-7 Google Scholar [160] Wang L., Jiao L., Li J., Mühlhäuser M. Online resource
    allocation for arbitrary user mobility in distributed edge clouds 2017 IEEE 37th
    International Conference on Distributed Computing Systems, ICDCS, IEEE (2017),
    pp. 1281-1290 CrossRefView in ScopusGoogle Scholar [161] Cao S., Tao X., Hou Y.,
    Cui Q. An energy-optimal offloading algorithm of mobile computing based on hetnets
    2015 International Conference on Connected Vehicles and Expo, ICCVE, IEEE (2015),
    pp. 254-258 CrossRefView in ScopusGoogle Scholar [162] Zhao Y., Zhou S., Zhao
    T., Niu Z. Energy-efficient task offloading for multiuser mobile cloud computing
    2015 IEEE/CIC International Conference on Communications in China, ICCC, IEEE
    (2015), pp. 1-5 View PDFView articleGoogle Scholar [163] Wang Y., Sheng M., Wang
    X., Wang L., Han W., Zhang Y., Shi Y. Energy-optimal partial computation offloading
    using dynamic voltage scaling 2015 IEEE International Conference on Communication
    Workshop, ICCW, IEEE (2015), pp. 2695-2700 CrossRefView in ScopusGoogle Scholar
    [164] You C., Huang K. Multiuser resource allocation for mobile-edge computation
    offloading 2016 IEEE Global Communications Conference, GLOBECOM, IEEE (2016),
    pp. 1-6 CrossRefGoogle Scholar [165] Di Lorenzo P., Barbarossa S., Sardellitti
    S. Joint optimization of radio resources and code partitioning in mobile edge
    computing (2013) arXiv preprint arXiv:1307.3835 Google Scholar [166] Labidi W.,
    Sarkiss M., Kamoun M. Energy-optimal resource scheduling and computation offloading
    in small cell networks 2015 22nd International Conference on Telecommunications,
    ICT, IEEE (2015), pp. 313-318 CrossRefView in ScopusGoogle Scholar [167] Kamoun
    M., Labidi W., Sarkiss M. Joint resource allocation and offloading strategies
    in cloud enabled cellular networks 2015 IEEE International Conference on Communications,
    ICC, IEEE (2015), pp. 5529-5534 CrossRefView in ScopusGoogle Scholar [168] Sardellitti
    S., Scutari G., Barbarossa S. Joint optimization of radio and computational resources
    for multicell mobile-edge computing IEEE Trans. Signal Inf. Process. Netw., 1
    (2) (2015), pp. 89-103 View in ScopusGoogle Scholar [169] Labidi W., Sarkiss M.,
    Kamoun M. Joint multi-user resource scheduling and computation offloading in small
    cell networks 2015 IEEE 11th International Conference on Wireless and Mobile Computing,
    Networking and Communications, WiMob, IEEE (2015), pp. 794-801 CrossRefView in
    ScopusGoogle Scholar [170] Mao Y., Zhang J., Letaief K.B. Dynamic computation
    offloading for mobile-edge computing with energy harvesting devices IEEE J. Sel.
    Areas Commun., 34 (12) (2016), pp. 3590-3605 View in ScopusGoogle Scholar [171]
    Singh K., Awasthi A. Quality, Reliability, Security and Robustness in Heterogeneous
    Networks Springer (2013) Google Scholar [172] Kiani A., Ansari N. Optimal code
    partitioning over time and hierarchical cloudlets IEEE Commun. Lett., 22 (1) (2017),
    pp. 181-184 Google Scholar [173] Mao Y., Zhang J., Letaief K.B. Joint task offloading
    scheduling and transmit power allocation for mobile-edge computing systems 2017
    IEEE Wireless Communications and Networking Conference, WCNC, IEEE (2017), pp.
    1-6 View in ScopusGoogle Scholar [174] Zhang J., Hu X., Ning Z., Ngai E.C.-H.,
    Zhou L., Wei J., Cheng J., Hu B. Energy-latency tradeoff for energy-aware offloading
    in mobile edge computing networks IEEE Internet Things J., 5 (4) (2017), pp. 2633-2645
    CrossRefView in ScopusGoogle Scholar [175] Guo J., Song Z., Cui Y., Liu Z., Ji
    Y. Energy-efficient resource allocation for multi-user mobile edge computing GLOBECOM
    2017-2017 IEEE Global Communications Conference, IEEE (2017), pp. 1-7 Google Scholar
    [176] Samie F., Tsoutsouras V., Bauer L., Xydis S., Soudris D., Henkel J. Computation
    offloading and resource allocation for low-power IoT edge devices 2016 IEEE 3rd
    World Forum on Internet of Things, WF-IoT, IEEE (2016), pp. 7-12 View in ScopusGoogle
    Scholar [177] Leivadeas A., Papagianni C., Papavassiliou S. Going Green with the
    Networked Cloud: Methodologies and Assessment John Wiley & Sons, Inc. (2015) Google
    Scholar [178] Li S., Zhang N., Lin S., Kong L., Katangur A., Khan M.K., Ni M.,
    Zhu G. Joint admission control and resource allocation in edge computing for Internet
    of Things IEEE Netw., 32 (1) (2018), pp. 72-79 Google Scholar [179] Tong L., Li
    Y., Gao W. A hierarchical edge cloud architecture for mobile computing IEEE INFOCOM
    2016-the 35th Annual IEEE International Conference on Computer Communications,
    IEEE (2016), pp. 1-9 Google Scholar [180] Leivadeas A., Kesidis G., Ibnkahla M.,
    Lambadaris I. VNF placement optimization at the edge and cloud Future Internet,
    11 (3) (2019), p. 69 CrossRefView in ScopusGoogle Scholar [181] Leivadeas A.,
    Kesidis G., Falkner M., Lambadaris I. A graph partitioning game theoretical approach
    for the VNF service chaining problem IEEE Trans. Netw. Serv. Manag., 14 (4) (2017),
    pp. 890-903 View in ScopusGoogle Scholar [182] Leivadeas A., Falkner M., Lambadaris
    I., Ibnkahla M., Kesidis G. Balancing delay and cost in virtual network function
    placement and chaining 2018 IEEE International Conference on Network Softwarization
    and Workshops, NetSoft, IEEE (2018), pp. 433-440 CrossRefGoogle Scholar [183]
    I. Skarga-Bandurova, M. Derkach, I. Kotsiuba, The information service for delivering
    arrival public transport prediction, in: 2018 IEEE 4th International Symposium
    on Wireless Systems Within the International Conferences on Intelligent Data Acquisition
    and Advanced Computing Systems, IDAACS-SWS, 2018, pp. 191–195. Google Scholar
    [184] Hameed A., Leivadeas A. IoT Traffic multi-classification using network and
    statistical features in a smart environment EEE International Workshop on Computer
    Aided Modeling and Design of Communication Links and Networks, CAMAD, IEEE (2020),
    pp. 1-7 CrossRefGoogle Scholar [185] Sun W., Liu J., Yue Y. AI-enhanced offloading
    in edge computing: when machine learning meets industrial IoT IEEE Netw., 33 (5)
    (2019), pp. 68-74 CrossRefView in ScopusGoogle Scholar [186] Botchkarev A. A new
    typology design of performance metrics to measure errors in machine learning regression
    algorithms Interdisciplinary J. Inf. Knowl. Manag., 14 (2019), pp. 045-076 CrossRefGoogle
    Scholar [187] Palacio-Niño J.-O., Berzal F. Evaluation metrics for unsupervised
    learning algorithms (2019) arXiv preprint arXiv:1905.05667 Google Scholar [188]
    Lever J., Krzywinski M., Altman N. Classification evaluation Nature Methods, 13
    (8) (2016), pp. 603-604 https://www.nature.com/articles/nmeth.3945 CrossRefView
    in ScopusGoogle Scholar [189] Wang Y., Sheng M., Wang X., Wang L., Li J. Mobile-edge
    computing: Partial computation offloading using dynamic voltage scaling IEEE Trans.
    Commun., 64 (10) (2016), pp. 4268-4282 CrossRefGoogle Scholar [190] Deng M., Tian
    H., Fan B. Fine-granularity based application offloading policy in cloud-enhanced
    small cell networks 2016 IEEE International Conference on Communications Workshops,
    ICC, IEEE (2016), pp. 638-643 View in ScopusGoogle Scholar [191] Mao Y., Zhang
    J., Song S., Letaief K.B. Power-delay tradeoff in multi-user mobile-edge computing
    systems 2016 IEEE Global Communications Conference, GLOBECOM, IEEE (2016), pp.
    1-6 Google Scholar [192] You C., Huang K., Chae H., Kim B.-H. Energy-efficient
    resource allocation for mobile-edge computation offloading IEEE Trans. Wireless
    Commun., 16 (3) (2016), pp. 1397-1411 View in ScopusGoogle Scholar [193] Chen
    M.-H., Liang B., Dong M. Joint offloading and resource allocation for computation
    and communication in mobile cloud with computing access point IEEE INFOCOM 2017-IEEE
    Conference on Computer Communications, IEEE (2017), pp. 1-9 View PDFView articleGoogle
    Scholar [194] Chen M.-H., Liang B., Dong M. A semidefinite relaxation approach
    to mobile cloud offloading with computing access point 2015 IEEE 16th International
    Workshop on Signal Processing Advances in Wireless Communications, SPAWC, IEEE
    (2015), pp. 186-190 CrossRefGoogle Scholar [195] Liu Y., Yu F.R., Li X., Ji H.,
    Leung V.C. Hybrid computation offloading in fog and cloud networks with non-orthogonal
    multiple access IEEE INFOCOM 2018-IEEE Conference on Computer Communications Workshops,
    INFOCOM WKSHPS, IEEE (2018), pp. 154-159 View articleGoogle Scholar [196] Pham
    Q.-V., Leanh T., Tran N.H., Park B.J., Hong C.S. Decentralized computation offloading
    and resource allocation for mobile-edge computing: A matching game approach IEEE
    Access, 6 (2018), pp. 75868-75885 CrossRefView in ScopusGoogle Scholar [197] Ning
    Z., Dong P., Kong X., Xia F. A cooperative partial computation offloading scheme
    for mobile edge computing enabled Internet of Things IEEE Internet Things J. (2018)
    Google Scholar [198] Du J., Zhao L., Feng J., Chu X. Computation offloading and
    resource allocation in mixed fog/cloud computing systems with min-max fairness
    guarantee IEEE Trans. Commun., 66 (4) (2018), pp. 1594-1608 CrossRefView in ScopusGoogle
    Scholar [199] Li S., Tao Y., Qin X., Liu L., Zhang Z., Zhang P. Energy-aware mobile
    edge computation offloading for IoT over heterogenous networks IEEE Access, 7
    (2019), pp. 13092-13105 CrossRefView in ScopusGoogle Scholar [200] Guo H., Liu
    J., Zhang J. Computation offloading for multi-access mobile edge computing in
    ultra-dense networks IEEE Commun. Mag., 56 (8) (2018), pp. 14-19 CrossRefView
    in ScopusGoogle Scholar [201] Chen X., Jiao L., Li W., Fu X. Efficient multi-user
    computation offloading for mobile-edge cloud computing IEEE/ACM Trans. Netw.,
    24 (5) (2015), pp. 2795-2808 View in ScopusGoogle Scholar [202] Liu Y., Xu C.,
    Zhan Y., Liu Z., Guan J., Zhang H. Incentive mechanism for computation offloading
    using edge computing: A Stackelberg game approach Comput. Netw., 129 (2017), pp.
    399-409 View PDFView articleView in ScopusGoogle Scholar [203] Guo H., Liu J.
    Collaborative computation offloading for multiaccess edge computing over fiber–wireless
    networks IEEE Trans. Veh. Technol., 67 (5) (2018), pp. 4514-4526 CrossRefView
    in ScopusGoogle Scholar [204] M. Zeng, Y. Li, K. Zhang, M. Waqas, D. Jin, Incentive
    mechanism design for computation offloading in heterogeneous fog computing: A
    contract-based approach, in: 2018 IEEE International Conference on Communications,
    ICC, 2018, pp. 1–6. Google Scholar [205] Du J., Gelenbe E., Jiang C., Zhang H.,
    Ren Y. Contract design for traffic offloading and resource allocation in heterogeneous
    ultra-dense networks IEEE J. Sel. Areas Commun., 35 (11) (2017), pp. 2457-2467
    View in ScopusGoogle Scholar [206] Hu Z., Zheng Z., Song L., Wang T., Li X. UAV
    offloading: Spectrum trading contract design for UAV-assisted cellular networks
    IEEE Trans. Wireless Commun., 17 (9) (2018), pp. 6093-6107 CrossRefView in ScopusGoogle
    Scholar [207] Li Y., Zhang J., Gan X., Fu L., Yu H., Wang X. A contract-based
    incentive mechanism for delayed traffic offloading in cellular networks IEEE Trans.
    Wireless Commun., 15 (8) (2016), pp. 5314-5327 View in ScopusGoogle Scholar [208]
    Resende M.G.C., Pardalos P. Handbook of Optimization in Telecommunication Springer
    (2006) Google Scholar [209] Monderer D., Shapley L.S. Potential games Games Economic
    Behav., 14 (1) (1996), pp. 124-143 View PDFView articleView in ScopusGoogle Scholar
    [210] Zhang Y., Pan M., Song L., Dawy Z., Han Z. A survey of contract theory-based
    incentive mechanism design in wireless networks IEEE Wirel. Commun., 24 (3) (2017),
    pp. 80-85 Google Scholar [211] Gendreau M., Potvin J.Y. Handbook of Metaheuristics
    Int. Series in Operations Research & Management Science (2010) Google Scholar
    [212] Letaief K.B., Chen W., Shi Y., Zhang J., Zhang Y.-J.A. The roadmap to 6G:
    AI empowered wireless networks IEEE Commun. Mag., 57 (8) (2019), pp. 84-90 CrossRefView
    in ScopusGoogle Scholar [213] Salaht F.A., Desprez F., Lebre A., Prud’Homme C.,
    Abderrahim M. Service placement in fog computing using constraint programming
    2019 IEEE International Conference on Services Computing, SCC, IEEE (2019), pp.
    19-27 Google Scholar [214] Orhean A.I., Pop F., Raicu I. New scheduling approach
    using reinforcement learning for heterogeneous distributed systems J. Parallel
    Distrib. Comput., 117 (2018), pp. 292-302 View PDFView articleView in ScopusGoogle
    Scholar [215] Shiue Y.-R., Lee K.-C., Su C.-T. Real-time scheduling for a smart
    factory using a reinforcement learning approach Comput. Ind. Eng., 125 (2018),
    pp. 604-614 View PDFView articleView in ScopusGoogle Scholar [216] Wang S., Tuor
    T., Salonidis T., Leung K.K., Makaya C., He T., Chan K. Adaptive federated learning
    in resource constrained edge computing systems IEEE J. Sel. Areas Commun., 37
    (6) (2019), pp. 1205-1221 CrossRefView in ScopusGoogle Scholar [217] Monteiro
    L.C., Delicato F.C., Pirmez L., Pires P.F., Miceli C. Dpcas: Data prediction with
    cubic adaptive sampling for wireless sensor networks International Conference
    on Green, Pervasive, and Cloud Computing, Springer (2017), pp. 353-368 CrossRefView
    in ScopusGoogle Scholar [218] B. Yang, X. Cao, J. Bassey, X. Li, T. Kroecker,
    L. Qian, Computation offloading in multi-access edge computing networks: A multi-task
    learning approach, in: ICC 2019 - 2019 IEEE International Conference on Communications,
    ICC, 2019, pp. 1–6 (ISSN: 1938-1883). Google Scholar [219] Rahbari D., Nickray
    M. Task offloading in mobile fog computing by classification and regression tree
    Peer-to-Peer Netw. Appl., 13 (1) (2020), pp. 104-122 CrossRefView in ScopusGoogle
    Scholar [220] Junior W., Oliveira E., Santos A., Dias K. A context-sensitive offloading
    system using machine-learning classification algorithms for mobile cloud environment
    Future Gener. Comput. Syst., 90 (2019), pp. 503-520 View PDFView articleView in
    ScopusGoogle Scholar [221] Bashir H., Lee S., Kim K.H. Resource allocation through
    logistic regression and multicriteria decision making method in IoT fog computing
    Trans. Emerg. Telecommun. Technol., n/a (n/a) (2019), Article e3824 _eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/ett.3824,
    https://onlinelibrary.wiley.com/doi/abs/10.1002/ett.3824 Google Scholar [222]
    Jararweh Y., Issa M.B., Daraghmeh M., Al-Ayyoub M., Alsmirat M.A. Energy efficient
    dynamic resource management in cloud computing based on logistic regression model
    and median absolute deviation Sustain. Comput.: Inform. Syst., 19 (2018), pp.
    262-274 View PDFView articleView in ScopusGoogle Scholar [223] Guevara J.C., Torres
    R.d.S., da Fonseca N.L.S. On the classification of fog computing applications:
    A machine learning perspective J. Netw. Comput. Appl., 159 (2020), Article 102596
    View PDFView articleView in ScopusGoogle Scholar [224] Liu L., Qi D., Zhou N.,
    Wu Y. A task scheduling algorithm based on classification mining in fog computing
    environment Wirel. Commun. Mob. Comput., 1530-8669, 2018 (2018), Article e2102348
    https://www.hindawi.com/journals/wcmc/2018/2102348/ Google Scholar [225] K. Kim,
    J. Lynskey, S. Kang, C.S. Hong, Prediction based sub-task offloading in mobile
    edge computing, in: 2019 International Conference on Information Networking, ICOIN,
    2019, pp. 448–452 (ISSN: 1976-7684). Google Scholar [226] F. Farahnakian, P. Liljeberg,
    J. Plosila, LiRCUP: Linear regression based cpu usage prediction algorithm for
    live migration of virtual machines in data centers, in: 2013 39th Euromicro Conference
    on Software Engineering and Advanced Applications, 2013, pp. 357–364 (ISSN: 2376-9505).
    Google Scholar [227] R.A.C. da Silva, N.L.S.d. Fonseca, Resource allocation mechanism
    for a fog-cloud infrastructure, in: 2018 IEEE International Conference on Communications,
    ICC, 2018, pp. 1–6 (ISSN: 1938-1883). Google Scholar [228] R. Hu, J. Jiang, G.
    Liu, L. Wang, CPU load prediction using support vector regression and Kalman Smoother
    for Cloud, in: 2013 IEEE 33rd International Conference on Distributed Computing
    Systems Workshops, 2013, pp. 88–92 (ISSN: 2332-5666). Google Scholar [229] F.
    Farahnakian, T. Pahikkala, P. Liljeberg, J. Plosila, Energy aware consolidation
    algorithm based on k-nearest neighbor regression for cloud data centers, in: 2013
    IEEE/ACM 6th International Conference on Utility and Cloud Computing, 2013, pp.
    256–259. Google Scholar [230] H. Cheng, W. Xia, F. Yan, L. Shen, Balanced clustering
    and joint resources allocation in cooperative fog computing system, in: 2019 IEEE
    Global Communications Conference, GLOBECOM, 2019, pp. 1–6 (ISSN: 2576-6813). Google
    Scholar [231] Bouet M., Conan V. Mobile edge computing resources optimization:
    A geo-clustering approach IEEE Trans. Netw. Serv. Manag., 15 (2) (2018), pp. 787-796
    CrossRefView in ScopusGoogle Scholar [232] Y. Li, N.T. Anh, A.S. Nooh, K. Ra,
    M. Jo, Dynamic mobile cloudlet clustering for fog computing, in; 2018 International
    Conference on Electronics, Information, and Communication, ICEIC, 2018, pp. 1–4.
    Google Scholar [233] Li G., Lin Q., Wu J., Zhang Y., Yan J. Dynamic computation
    offloading based on graph partitioning in mobile edge computing IEEE Access, 7
    (2019), pp. 185131-185139 CrossRefView in ScopusGoogle Scholar [234] Hu L., Tian
    Y., Yang J., Taleb T., Xiang L., Hao Y. Ready player one: UAV-clustering-based
    multi-task offloading for vehicular VR/AR gaming IEEE Netw., 33 (3) (2019), pp.
    42-48 CrossRefView in ScopusGoogle Scholar [235] Liu X., Yu J., Wang J., Gao Y.
    Resource allocation with edge computing in IoT networks via machine learning IEEE
    Internet Things J., 7 (4) (2020), pp. 3415-3426 CrossRefView in ScopusGoogle Scholar
    [236] Gad-Elrab A.A.A., Noaman A.Y. Fuzzy clustering-based task allocation approach
    using bipartite graph in cloud-fog environment Proceedings of the 16th EAI International
    Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services,
    MobiQuitous ’19, Association for Computing Machinery, New York, NY, USA (2019),
    pp. 454-463 https://doi.org/10.1145/3360774.3360833 CrossRefView in ScopusGoogle
    Scholar [237] Ullah I., Youn H.Y. Task classification and scheduling based on
    K-means clustering for edge computing Wirel. Pers. Commun., 113 (4) (2020), pp.
    2611-2624 https://doi.org/10.1007/s11277-020-07343-w CrossRefView in ScopusGoogle
    Scholar [238] A. Bozorgchenani, D. Tarchi, G.E. Corazza, An energy-aware offloading
    clustering approach (eaoca) in fog computing, in: 2017 International Symposium
    on Wireless Communication Systems, ISWCS, 2017, pp. 390–395 (ISSN: 2154-0225).
    Google Scholar [239] S. Yu, X. Wang, R. Langar, Computation offloading for mobile
    edge computing: A deep learning approach, in: 2017 IEEE 28th Annual International
    Symposium on Personal, Indoor, and Mobile Radio Communications, PIMRC, 2017, pp.
    1–6 (ISSN: 2166-9589). Google Scholar [240] Rani D.S., Pounambal M. Deep learning
    based dynamic task offloading in mobile cloudlet environments Evol. Intell., 1864-5917
    (2019) https://doi.org/10.1007/s12065-019-00284-9 Google Scholar [241] Huang L.,
    Feng X., Feng A., Huang Y., Qian L.P. Distributed deep learning-based offloading
    for mobile edge computing networks Mob. Netw. Appl. (2018) https://doi.org/10.1007/s11036-018-1177-x
    Google Scholar [242] Wang X., Wei X., Wang L. A deep learning based energy-efficient
    computational offloading method in internet of vehicles China Commun., 16 (3)
    (2019), pp. 81-91 Google Scholar [243] Ali Z., Jiao L., Baker T., Abbas G., Abbas
    Z.H., Khaf S. A deep learning approach for energy efficient computational offloading
    in mobile edge computing IEEE Access, 7 (2019), pp. 149623-149633 CrossRefView
    in ScopusGoogle Scholar [244] X. Zhu, S. Chen, S. Chen, G. Yang, Energy and delay
    co-aware computation offloading with deep learning in fog computing networks,
    in: 2019 IEEE 38th International Performance Computing and Communications Conference,
    IPCCC, 2019, pp. 1–6 (ISSN: 2374-9628). Google Scholar [245] Huang L., Bi S.,
    Zhang Y.J. Deep reinforcement learning for online computation offloading in wireless
    powered mobile-edge computing networks IEEE Trans. Mob. Comput. (2019), p. 1 View
    PDFView articleGoogle Scholar [246] Zhao R., Wang X., Xia J., Fan L. Deep reinforcement
    learning based mobile edge computing for intelligent Internet of Things Phys.
    Commun. (2020), Article 101184 View PDFView articleView in ScopusGoogle Scholar
    [247] Zhang K., Zhu Y., Leng S., He Y., Maharjan S., Zhang Y. Deep learning empowered
    task offloading for mobile edge computing in urban informatics IEEE Internet Things
    J., 6 (5) (2019), pp. 7635-7647 CrossRefView in ScopusGoogle Scholar [248] Lu
    H., Gu C., Luo F., Ding W., Liu X. Optimization of lightweight task offloading
    strategy for mobile edge computing based on deep reinforcement learning Future
    Gener. Comput. Syst., 102 (2020), pp. 847-861 http://www.sciencedirect.com/science/article/pii/S0167739X19308209
    View PDFView articleView in ScopusGoogle Scholar [249] Baek J., Kaddoum G. Heterogeneous
    task offloading and resource allocations via deep recurrent reinforcement learning
    in partial observable multi-fog networks IEEE Internet Things J. (2020), p. 1
    Google Scholar [250] Liu J., Wei X., Wang T., Wang J. An ant colony optimization
    fuzzy clustering task scheduling algorithm in mobile edge computing Li J., Liu
    Z., Peng H. (Eds.), Security and Privacy in New Computing Environments, Lecture
    Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications
    Engineering, Springer International Publishing, Cham (2019), pp. 615-624 Google
    Scholar [251] Hussein M.K., Mousa M.H. Efficient task offloading for IoT-based
    applications in fog computing using ant colony optimization IEEE Access, 8 (2020),
    pp. 37191-37201 CrossRefView in ScopusGoogle Scholar [252] Rodrigues T.G., Suto
    K., Nishiyama H., Kato N. A PSO model with VM migration and transmission power
    control for low service delay in the multiple cloudlets ECC scenario 2017 IEEE
    International Conference on Communications, ICC, IEEE (2017), pp. 1-6 View in
    ScopusGoogle Scholar [253] Huynh L.N.T., Pham Q.-V., Pham X.-Q., Nguyen T.D.T.,
    Hossain M.D., Huh E.-N. Efficient computation offloading in multi-tier multi-access
    edge computing systems: A particle swarm optimization approach Appl. Sci., 10
    (1) (2020), p. 203 https://www.mdpi.com/2076-3417/10/1/203 View in ScopusGoogle
    Scholar [254] Zhang Y., Liu Y., Zhou J., Sun J., Li K. Slow-movement particle
    swarm optimization algorithms for scheduling security-critical tasks in resource-limited
    mobile edge computing Future Gener. Comput. Syst., 112 (2020), pp. 148-161 http://www.sciencedirect.com/science/article/pii/S0167739X19333552
    View PDFView articleCrossRefGoogle Scholar [255] Zhang D., Haider F., St-Hilaire
    M., Makaya C. Model and algorithms for the planning of fog computing networks
    IEEE Internet Things J., 6 (2) (2019), pp. 3873-3884 CrossRefView in ScopusGoogle
    Scholar [256] A.A. Al-habob, O.A. Dobre, A. Garcia Armada, Sequential task scheduling
    for mobile edge computing using genetic algorithm, in: 2019 IEEE Globecom Workshops,
    GC Wkshps, 2019, pp. 1–6. Google Scholar [257] V. Yadav, B.V. Natesha, R.M.R.
    Guddeti, GA-PSO: Service allocation in fog computing environment using hybrid
    bio-inspired algorithm, in: TENCON 2019 - 2019 IEEE Region 10 Conference, TENCON,
    2019, pp. 1280–1285 (ISSN: 2159-3450). Google Scholar [258] Wang Z., Zhao Z.,
    Min G., Huang X., Ni Q., Wang R. User mobility aware task assignment for mobile
    edge computing Future Gener. Comput. Syst., 85 (2018), pp. 1-8 http://www.sciencedirect.com/science/article/pii/S0167739X17318587
    View PDFView articleGoogle Scholar [259] Kamal M.B., Javaid N., Naqvi S.A.A.,
    Butt H., Saif T., Kamal M.D. Heuristic min-conflicts optimizing technique for
    load balancing on fog computing Advances in Intelligent Networking and Collaborative
    Systems (2019), pp. 207-219 CrossRefView in ScopusGoogle Scholar [260] G. Amarasinghe,
    M.D. de AssunΩ CÇc ao, A. Harwood, S. Karunasekera, A data stream processing optimisation
    framework for edge computing applications, in: 2018 IEEE 21st International Symposium
    on Real-Time Distributed Computing, ISORC, 2018, pp. 91–98 (ISSN: 2375-5261).
    Google Scholar [261] F. Ait Salaht, F. Desprez, A. Lebre, C. Prud’homme, M. Abderrahim,
    Service placement in fog computing using constraint programming, in: 2019 IEEE
    International Conference on Services Computing, SCC, 2019, pp. 19–27 (ISSN: 2474-2473).
    Google Scholar [262] Vakilinia S., Qiu D., Ali M.M. Optimal multi-dimensional
    dynamic resource allocation in mobile cloud computing EURASIP J. Wireless Commun.
    Networking, 2014 (1) (2014), p. 201 https://doi.org/10.1186/1687-1499-2014-201
    View in ScopusGoogle Scholar [263] Calzarossa M.C., Massari L., Tessera D. Workload
    characterization: A survey revisited ACM Comput. Surv., 48 (3) (2016), pp. 48:1-48:43
    https://doi.org/10.1145/2856127 Google Scholar [264] Bouras I., Aisopos F., Violos
    J., Kousiouris G., Psychas A., Varvarigou T., Xydas G., Charilas D., Stavroulas
    Y. Mapping of quality of service requirements to resource demands for iaas CLOSER
    (2019) Google Scholar [265] Lecoutre C. Constraint Networks: Targeting Simplicity
    for Techniques and Algorithms John Wiley & Sons (2013) Google Scholar [266] Rossi
    F., Van Beek P., Walsh T. Handbook of Constraint Programming Elsevier (2006) Google
    Scholar [267] X. Yin, A. Jindal, V. Sekar, B. Sinopoli, A control-theoretic approach
    for dynamic adaptive video streaming over HTTP, in: Proceedings of the 2015 ACM
    Conference on Special Interest Group on Data Communication, 2015, pp. 325–338.
    Google Scholar [268] Zhang D.Y., Wang D. An integrated top-down and bottom-up
    task allocation approach in social sensing based edge computing systems IEEE INFOCOM
    2019-IEEE Conference on Computer Communications, IEEE (2019), pp. 766-774 CrossRefView
    in ScopusGoogle Scholar [269] Wu C., Zhang Y., Deng Y. Toward fast and distributed
    computation migration system for edge computing in IoT IEEE Internet Things J.,
    6 (6) (2019), pp. 10041-10052 CrossRefView in ScopusGoogle Scholar [270] Li Y.
    Edge Computing-Based Access Network Selection for Heterogeneous Wireless Networks
    (Ph.D. dissertation) Universite Rennes (2017) Google Scholar [271] Koike A., Higo
    N., Sueda Y. Proxy-based network function to assist robotic feedback control system
    2018 IEEE International Symposium on Local and Metropolitan Area Networks, LANMAN,
    IEEE (2018), pp. 116-118 CrossRefView in ScopusGoogle Scholar [272] Host S., Tärneberg
    W., Ödling P., Kihl M., Savi M., Tornatore M. Network requirements for latency-critical
    services in a full cloud deployment 2016 24th International Conference on Software,
    Telecommunications and Computer Networks, SoftCOM, IEEE (2016), pp. 1-5 Google
    Scholar [273] Maheswaran M., Yang T., Memon S. A fog computing framework for autonomous
    driving assist: architecture, experiments, and challenges (2019) arXiv preprint
    arXiv:1907.09454 Google Scholar [274] Kalatzis N., Avgeris M., Dechouniotis D.,
    Papadakis-Vlachopapadopoulos K., Roussaki I., Papavassiliou S. Edge computing
    in IoT ecosystems for UAV-enabled early fire detection 2018 IEEE International
    Conference on Smart Computing, SMARTCOMP, IEEE (2018), pp. 106-114 CrossRefView
    in ScopusGoogle Scholar [275] Spatharakis D., Avgeris M., Athanasopoulos N., Dechouniotis
    D., Papavassiliou S. A switching offloading mechanism for path planning and localization
    in robotic applications 2020 International Conferences on Internet of Things (IThings)
    and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical
    and Social Computing (CPSCom) and IEEE Smart Data (SmartData) and IEEE Congress
    on Cybermatics (Cybermatics), IEEE (2020), pp. 77-84 CrossRefView in ScopusGoogle
    Scholar [276] Avgeris M., Dechouniotis D., Athanasopoulos N., Papavassiliou S.
    Adaptive resource allocation for computation offloading: A control-theoretic approach
    ACM Trans. Internet Technol. (TOIT), 19 (2) (2019), pp. 1-20 CrossRefGoogle Scholar
    [277] Dlamini T., Gambín Á.F., Munaretto D., Rossi M. Online resource management
    in energy harvesting BS sites through prediction and soft-scaling of computing
    resources 2018 IEEE 29th Annual International Symposium on Personal, Indoor and
    Mobile Radio Communications, PIMRC, IEEE (2018), pp. 1820-1826 CrossRefView in
    ScopusGoogle Scholar [278] Zhang L., Wang S., Chang R.N. QCSS: a QoE-aware control
    plane for adaptive streaming service over mobile edge computing infrastructures
    2018 IEEE International Conference on Web Services, ICWS, IEEE (2018), pp. 139-146
    Google Scholar [279] Basic F., Aral A., Brandic I. Fuzzy handoff control in edge
    offloading 2019 IEEE International Conference on Fog Computing, ICFC, IEEE (2019),
    pp. 87-96 CrossRefView in ScopusGoogle Scholar [280] P. Skarin, J. Eker, M. Kihl,
    K. Årzén, Cloud-assisted model predictive control, in: 2019 IEEE International
    Conference on Edge Computing, EDGE, 2019, pp. 110–112. Google Scholar [281] Kalman
    R.E., et al. Contributions to the theory of optimal control Bol. Soc. Mat. Mexicana,
    5 (2) (1960), pp. 102-119 Google Scholar [282] Zhou Z., Yu J., Dong X., Li Q.,
    Ren Z. Robust adaptive attitude control of the quad-rotor UAV based on the LQR
    and NESO technique 2018 IEEE 14th International Conference on Control and Automation,
    ICCA, IEEE (2018), pp. 745-750 CrossRefView in ScopusGoogle Scholar [283] Ullah
    A., Li J., Shen Y., Hussain A. A control theoretical view of cloud elasticity:
    taxonomy, survey and challenges Cluster Comput., 21 (4) (2018), pp. 1735-1764
    CrossRefView in ScopusGoogle Scholar [284] Dechouniotis D., Leontiou N., Athanasopoulos
    N., Bitsoris G., Denazis S. ACRA: A unified admission control and resource allocation
    framework for virtualized environments 2012 8th International Conference on Network
    and Service Management (Cnsm) and 2012 Workshop on Systems Virtualiztion Management
    (Svm), IEEE (2012), pp. 145-149 View in ScopusGoogle Scholar [285] Saikrishna
    P.S., Pasumarthy R., Bhatt N.P. Identification and multivariable gain-scheduling
    control for cloud computing systems IEEE Trans. Control Syst. Technol., 25 (3)
    (2016), pp. 792-807 Google Scholar [286] Dechouniotis D., Leontiou N., Athanasopoulos
    N., Christakidis A., Denazis S. A control-theoretic approach towards joint admission
    control and resource allocation of cloud computing services Int. J. Netw. Manag.,
    25 (3) (2015), pp. 159-180 CrossRefView in ScopusGoogle Scholar [287] Rashidi
    S., Sharifian S. Cloudlet dynamic server selection policy for mobile task off-loading
    in mobile cloud computing using soft computing techniques J. Supercomput., 73
    (9) (2017), pp. 3796-3820 CrossRefView in ScopusGoogle Scholar [288] Leontiou
    N., Dechouniotis D., Denazis S., Papavassiliou S. A hierarchical control framework
    of load balancing and resource allocation of cloud computing services Comput.
    Electr. Eng., 67 (2018), pp. 235-251 View PDFView articleView in ScopusGoogle
    Scholar [289] Dechouniotis D., Athanasopoulos N., Leivadeas A., Mitton N., Jungers
    R., Papavassiliou S. Edge computing resource allocation for dynamic networks:
    The DRUID-net vision and perspective Sensors, 20 (8) (2020), p. 2191 CrossRefView
    in ScopusGoogle Scholar [290] Zhang W., Branicky M.S., Phillips S.M. Stability
    of networked control systems IEEE Control Syst. Mag., 21 (1) (2001), pp. 84-99
    Google Scholar [291] Hespanha J.P., Naghshtabrizi P., Xu Y. A survey of recent
    results in networked control systems Proc. IEEE, 95 (1) (2007), pp. 138-162 Google
    Scholar [292] Sinopoli B., Schenato L., Franceschetti M., Poolla K., Jordan M.I.,
    Sastry S.S. Kalman filtering with intermittent observations IEEE Trans. Autom.
    Control, 49 (9) (2004), pp. 1453-1464 View in ScopusGoogle Scholar [293] Simon
    D., Robert D., Sename O. Robust control/scheduling co-design: application to robot
    control 11th IEEE Real Time and Embedded Technology and Applications Symposium,
    IEEE (2005), pp. 118-127 CrossRefView in ScopusGoogle Scholar [294] Heemels W.,
    Johansson K.H., Tabuada P. An introduction to event-triggered and self-triggered
    control 2012 IEEE 51st IEEE Conference on Decision and Control, CDC, IEEE (2012),
    pp. 3270-3285 CrossRefGoogle Scholar Cited by (132) QoS-aware offloading policies
    for serverless functions in the Cloud-to-Edge continuum 2024, Future Generation
    Computer Systems Show abstract A framework for offloading and migration of serverless
    functions in the Edge–Cloud Continuum 2024, Pervasive and Mobile Computing Show
    abstract A light-weight edge-enabled knowledge distillation technique for next
    location prediction of multitude transportation means 2024, Future Generation
    Computer Systems Show abstract Metaverse for wireless systems: Architecture, advances,
    standardization, and open challenges 2024, Internet of Things (Netherlands) Show
    abstract EDITORS: Energy-aware Dynamic Task Offloading using Deep Reinforcement
    Transfer Learning in SDN-enabled Edge Nodes 2024, Internet of Things (Netherlands)
    Show abstract Service function chain network planning through offline, online
    and infeasibility restoration techniques 2024, Computer Networks Show abstract
    View all citing articles on Scopus Firdose Saeik is currently pursuing a Ph.D.
    at ETS. Canada. He received the M.Sc. degree from VIT university, India, in 2010.
    He has more than 9 years of work experience with multiple roles as System Engineer,
    Junior Researcher, and Research Engineer. His research interests are in the field
    of Mobile Edge Computing, Quality of Experience, Next-generation mobile services
    and applications such as Virtual Reality (VR) and Augmented Reality (AR). Marios
    Avgeris is currently a Ph.D student in the NETMODE Lab at the National Technical
    University of Athens (NTUA). He received his Diploma in Electrical & Computer
    Engineering (ECE) from NTUA, Greece, in 2016. His research interests are control
    theory, edge and cloud computing, IoT, semantic web technologies and network monitoring.
    Dimitrios Spatharakis is currently a Ph.D. student in the NETMODE Lab at the National
    Technical University of Athens (NTUA). He received a Diploma in Electrical & Computer
    Engineering (ECE) from NTUA, Greece, in 2018. His research interests focus on
    IoT, cyber–physical systems, edge computing and cloud computing Nina Santi is
    a Ph.D. student under the supervision of Nathalie Mitton in the Inria FUN team.
    Their focus is on small computing devices like electronic tags and sensor networks.
    She has received the M.Sc. degrees in Computer Science from University of Lille,
    France, in 2020. Dimitrios Dechouniotis is currently research associate with NETMODE
    Lab of the National Technical University of Athens (NTUA). From 2007 to 2016,
    he was non-tenured Lecturer at the EE Dept. of Technical Educational Institute
    of Western Greece, Greece. He received his diploma in ECE from University of Patras
    in 2004, the M.Sc. degree in Control Systems and Robotics from NTUA in 2009, and
    the Ph.D. degree in ECE from University of Patras in 2014. His research interests
    lie in the area of cloud computing, Internet of Things, mobile cloud computing
    and control theory. John Violos is research associate in the Dept. of Software
    Engineering and Information Technology at ETS. His previous positions were research
    associate at National Technical University of Athens, sessional lecturer at Harokopio
    University of Athens and visiting lecturer at National and Kapodistrian University
    of Athens. He was a member in the European Commission’s Digital Single Market
    working group on the code of conduct for switching and porting data between cloud
    service providers. His research interests include Deep Learning, Machine Learning,
    Cloud and Edge computing. Aris Leivadeas is currently an Assistant Professor with
    the Dept. of Software and Information Technology Engineering at ETS. From 2015
    to 2018 he was a postdoc in the Dept. of SCE, at Carleton University. In parallel,
    Aris worked as an intern at Ericsson and then at Cisco in Ottawa, Canada. He received
    his diploma in ECE from University of Patras in 2008, the M.Sc. degree in Engineering
    from King’s College London in 2009, and the Ph.D degree in ECE from NTUA in 2015.
    His research interests include Cloud Computing, IoT, and network optimization
    and management. He received the best paper award in ICPE’18 and the best presentation
    award in HPSR’20. Nikolaos Athanasopoulos is a Lecturer at the School of Electronics,
    Electrical Engineering and Computer Science at Queens University Belfast. He received
    a Diploma and a Ph.D. in Electrical and Computer Engineering from the University
    of Patras, Greece and has held postdoctoral researcher positions at TU/e and UCLouvain.
    He has been an IKY and a Marie Curie Fellow. His interests are in control theory,
    focusing on hybrid systems and set-based methods with applications in edge/cloud
    computing and resource allocation. Nathalie Mitton received the M.Sc. and PhD.
    degrees in Computer Science from INSA Lyon in 2003 and 2006 respectively. She
    received her Habilitation à diriger des recherches (HDR) in 2011 from Université
    Lille 1. She is currently an Inria full researcher since 2006 and from 2012, she
    is the scientific head of the Inria FUN team which is focused on small computing
    devices like electronic tags and sensor networks. Her research interests focus
    on self-organization from PHY to routing for wireless constrained networks. She
    has published her research in more than 30 international revues and more than
    100 international conferences. She is involved in the setup of the FIT IoT LAB
    platform (http://fit-equipex.fr/, https://www.iot-lab.info), the H2020 CyberSANE
    and VESSEDIA projects and in several program and organization committees such
    as Infocom 2021&2020&2019, PerCom 2020&2019, DCOSS 2021&2020&2019, Adhocnow (since
    2015), ICC (since 2015), Globecom (since 2017), VTC (since 2016), etc. She also
    supervises several Ph.D. students and engineers. Symeon Papavassiliou is currently
    a professor in the School of Electrical and Computer Engineering at the National
    Technical University of Athens (NTUA). From 1995 to 1999, he was a senior technical
    staff member at AT&T Laboratories, New Jersey. In August 1999 he joined the ECE
    Dept at the New Jersey Institute of Technology, USA, where he was an associate
    professor until 2004. He has an established record of publications in his field
    of expertise, with more than 350 technical journal and conference published papers,
    while he has received several scientific awards and distinctions. His main research
    interests lie in the areas of optimization and performance evaluation of mobile
    and distributed systems, wireless networks and complex systems. View Abstract
    © 2021 Elsevier B.V. All rights reserved. Recommended articles MIFaaS: A Mobile-IoT-Federation-as-a-Service
    Model for dynamic cooperation of IoT Cloud Providers Future Generation Computer
    Systems, Volume 70, 2017, pp. 126-137 I. Farris, …, A. Iera View PDF A scalable
    Edge Computing architecture enabling smart offloading for Location Based Services
    Pervasive and Mobile Computing, Volume 67, 2020, Article 101217 Dimitrios Spatharakis,
    …, Symeon Papavassiliou View PDF Joint task offloading and data caching in mobile
    edge computing networks Computer Networks, Volume 182, 2020, Article 107446 Ni
    Zhang, …, Defang Liu View PDF Show 3 more articles Article Metrics Citations Citation
    Indexes: 99 Captures Readers: 152 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Computer networks (1999)
  limitations: '>'
  pdf_link: null
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Task offloading in Edge and Cloud Computing: A survey on mathematical, artificial
    intelligence and control theory solutions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s12647-021-00453-1
  analysis: '>'
  authors:
  - Anurag Varshney
  - Naveen Garg
  - K. S. Nagla
  - T. S. Nair
  - Shiv Kumar Jaiswal
  - Sanjay Yadav
  - D. K. Aswal
  citation_count: 40
  full_citation: '>'
  full_text: ">\nORIGINAL PAPER\nChallenges in Sensors Technology for Industry 4.0\
    \ for Futuristic\nMetrological Applications\nA. Varshney1*\n, N. Garg1, K. S.\
    \ Nagla2, T. S. Nair2, S. K. Jaiswal1, S. Yadav1 and\nD. K. Aswal1\n1CSIR-National\
    \ Physical Laboratory, New Delhi 110 012, India\n2Dr. B R Ambedkar National Institute\
    \ of Technology, Jalandhar 144 011, India\nReceived: 28 March 2021 / Accepted:\
    \ 12 April 2021 / Published online: 3 May 2021\n\x02 Metrology Society of India\
    \ 2021\nAbstract: The current advances and innovations in sensor technologies\
    \ attributed to Industry 4.0 serve as the backbone for\nthe inclusive growth of\
    \ industry and ramping up the economy of any country. Industry 4.0 was basically\
    \ conceptualized by\nintroducing the Internet of Things (IoT) and Information\
    \ and Communication technologies (ICT) that serve as an interface\nbetween digital\
    \ and physical world through the fusion of smart sensors. The role of smart sensors\
    \ and IoT-enabled\nindustrial infrastructure is pivotal for adapting to the advanced\
    \ technologies based on fusion of smart sensors. Digital\nmeteorological traceability\
    \ and uses of intelligent sensors, instrumentation and machinery in Industry 4.0,\
    \ Smart Cities,\nDigital India and AtmaNirbhar Bharat missions of the government\
    \ of India, are not only highly important but also in huge\ndemand, which is going\
    \ to increase manifolds in the years to come. The present paper is an attempt\
    \ to provide a terse\nreview and perspectives related to the advanced technological\
    \ developments in this ﬁeld and the challenges therein.\nKeywords: Smart sensor;\
    \ Industry 4.0; Internet of Things (IoT); Information and communication technology\
    \ (ICT); Cyber\nphysical systems; Digital metrology\n1. Introduction\nIndustry\
    \ 4.0 is playing a vital role in the digital transfor-\nmation by integrating\
    \ information and communication\ntechnologies (ICT), cyber physical systems, cloud\
    \ com-\nputing, data exchange, retrieval, storage and security\nframework in the\
    \ industrial and manufacturing units in\nrecent times. In the twenty-ﬁrst century,\
    \ society is moving\nfast towards ample digital transformation, and it has\nbecome\
    \ the main constituent of the development of digital\nquality infrastructure (DQI).\
    \ The process of generation,\nmeasurement and transfer of accurate and precise\
    \ data\ntraceable to the international standards is rising in any\ndigital economy.\
    \ Digital transformation is currently in the\ndevelopment stage though Industry\
    \ 4.0 was introduced\nseveral years back [1]. The digitalization mainly depends\n\
    upon the following constituents, (i) computation facilities\nand storage capability,\
    \ (ii) speed of data transfer, (iii) cost-\neffectiveness and availability of\
    \ smart sensors, (iv) proper\nuse of the stored data and information, (v) development\
    \ of\ncyber physical systems, etc. [2–4]. In Industry 4.0, various\ntypes of smart\
    \ sensors are integrated that are used to\nmeasure and process quality parameters.\
    \ These sensors\nprocess/transfer data by means of electronic medium or\nwireless\
    \ signal [5]. However, for maintaining the highest\nlevels of accuracy, calibration\
    \ of smart sensors with respect\nto some digital or electronic standards is required.\
    \ The re-\ndeﬁnition and implications of SI units also provides moti-\nvation\
    \ for the development of advanced reference stan-\ndards with lowest levels of\
    \ measurement uncertainty for\ncalibrating these smart instruments. The Internet\
    \ of Things\n(IoT) is more frequently applied in metrology for calibra-\ntion\
    \ and testing purpose. This is how Industry 4.0 enables\nthe coordination and\
    \ interaction among workers and\nmachines through cyber physical systems and ICT\
    \ [6, 7].\nSecurity of measurements and calibration data is the main\nconcern\
    \ while establishing the metrological infrastructure\nframework in industrial\
    \ applications. This creates a need\nfor integrating IoT with the manufacturing\
    \ processes and\nsystems that are responsible for optimizing the perfor-\nmance\
    \ of industry and creating the sustainable cyber secure\n*Corresponding author,\
    \ E-mail: varshney.anshul@nplindia.org\nM \x02APAN-Journal of Metrology Society\
    \ of India (June 2021) 36(2):215–226\nhttps://doi.org/10.1007/s12647-021-00453-1\n\
    123\nsystem [4]. The digital transformation of manufacturing\nprocesses enhances\
    \ the reliability, security, competitive-\nness, and transparency of the measured\
    \ data over smart\nsensors [8]. There had been many research programmes\nand collaborative\
    \ projects carried out in international sce-\nnario focussed towards the digital\
    \ transformation and\ninnovative solutions such as the establishment of metrol-\n\
    ogy cloud, ‘NIST on a chip [9], Measurement Information\nInfrastructure (MII)\
    \ for various metrological and industrial\napplications, which is only possible\
    \ through integration of\nsmart sensors and visualizing the concept of Industry\
    \ 4.0\n[10]. In particular, the prime consideration of such tech-\nnological advancements\
    \ is to facilitate the machine read-\nability, storage and transmissibility of\
    \ the measured data\nover a distance [10, 11].\nThe metrological framework for\
    \ digitalization utilizing\nthe smart sensor networks is currently at primitive\
    \ stages at\nvarious National Metrological Institutes (NMIs) across the\nglobe.\
    \ Metrology, standardization, calibration, testing,\naccreditation and legal metrology\
    \ are the main pillars of\nestablishment of a strong National Quality Infrastructure\n\
    (NQI) in any country. Of late, the ‘Aswal Model’, devel-\noped for robust NQI,\
    \ also sturdily advocates the transfor-\nmation towards digital SI and safe and\
    \ secure certiﬁcation\nsystem, keeping metrology centric and connecting all other\n\
    pillars of the NQI, for enhancing the inclusive economic\ngrowth of the country\
    \ [12–14]. Thus, establishment of a\nstrong NQI in conjunction with embedded IoT\
    \ and smart\nsensor framework would be instrumental in optimizing the\nproduction\
    \ efﬁciency, improving process and quality\nparameters for industrial growth and\
    \ avoiding faults at an\nearly stage [15]. The present work thus focuses on the\n\
    various aspects in Indian perspectives as follows:\n•\nRelevance and importance\
    \ of the advanced technolo-\ngies pertaining to the development of smart sensors\n\
    network in Industry 4.0 for augmenting the economic\ngrowth,\n•\nDigital transformation\
    \ of measurement process through\nfusion of smart sensors and IoT-embedded systems\
    \ that\ncan be very instrumental in accomplishing standard-\nization, metrology\
    \ accreditation and conformity assess-\nment services so that products and services\
    \ meet the\nrelevant national and international standards and var-\nious goals\
    \ [16–22],\n•\nThe applicability of smart sensors in Industry 4.0 and\nits implications\
    \ in metrology 4.0 along with digital\ntransformation of metrological applications\
    \ with inclu-\nsion of smart sensors [17–20],\n•\nEstablishment of a national\
    \ digital quality infrastructure\n(NDQI) in next few years based on the development\
    \ of\nMeasurement Information Infrastructure (MII), metrol-\nogy cloud, digital\
    \ calibration certiﬁcate and integration\nof advanced technological infrastructure\
    \ as focussed in\nEuropean and American continent.\nThe legally relevant measurements\
    \ in some of the\ndeveloped economies are responsible for higher industrial\n\
    and economic growth. As per an estimate, a share of 4% to\n6% of the European\
    \ gross domestic product (GDP),\nequivalent to 660–990 billion Euros per year,\
    \ is achieved\nmainly because of such legal measurements [22]. It is\nenvisaged\
    \ that if these aspects are carefully planned,\ndevised and implemented in Indian\
    \ scenario, such an\narrangement would be very effective in increasing the GDP\n\
    in next few years and support the Industry 4.0, Smart cities,\nDigital India and\
    \ AtmaNirbhar Bharat missions of the\ngovernment of India and accomplish the target\
    \ of achieving\nUSD 5 trillion economy status.\nThis paper is organized as follows:\
    \ Introduction to\nIndustry 4.0, its relevance and implications are illustrated\n\
    in section II. Section II presents the role of smart sensors in\nIndustry 4.0\
    \ and concept of digitalization in Industry 4.0.\nSection III elaborates the impact\
    \ of Industry 4.0 on\nmetrology and presents the concept of digitalization in\n\
    metrology along with implementation of metrology cloud\nand digital quality infrastructure.\
    \ The various changes and\nway forward in sensor technologies and digital transfor-\n\
    mation are illustrated in section IV followed by the con-\ncluding remarks in\
    \ section V.\n2. Industry 4.0: Relevance and Implications\nThe ﬁrst industrial\
    \ revolution, i.e. Industry 1.0, started in\nthe eighteenth century. In Industry\
    \ 1.0, manual labour-\nbased industry towards the use of steam engines, etc.,\
    \ to\nincrease the productivity was practised. This was also\ncalled mechanization\
    \ of industries. Industry 2.0 started\nafter a century with the utilization of\
    \ electricity and\nassembly line productions. Further, Industry 3.0 was\nintroduced\
    \ with the advent of the memory-programmable\ncomputers and electronics control\
    \ and came into main-\nframe in the twentieth century to boost the production\n\
    process and product standardization. In recent times,\nautomation has become the\
    \ game-changing factor for\nmanufacturing and process industries. The human interac-\n\
    tion with the machines is reduced in manufacturing pro-\ncesses by the inclusion\
    \ of digital process control and\nautomation [23]. The fourth industrial revolution,\
    \ Industry\n4.0, was initiated by the advanced and latest technological\ninnovations\
    \ which brought the cyber physical systems\ntogether, i.e. smart machines capable\
    \ of exchanging real-\ntime information over the\nIndustrial Internet of Things\n\
    (IIoT) for decision-making process.\n216\nA. Varshney et al.\n123\nThe Industry\
    \ 4.0 is known as the fourth industrial rev-\nolution, which represents a new\
    \ industrial infrastructure\nbased on cyber physical systems having embedded soft-\n\
    ware connected through IoT to the physical word. Thus,\nthis framework facilitates\
    \ the easy and faster communica-\ntion in the production process by creating a\
    \ real-time\noptimization, modern control systems and enabling pre-\ndictive maintenance\
    \ by introducing machine learning (ML)\nand artiﬁcial intelligence (AI) component\
    \ [24].\nThe improvements in cyber computing facilities are the\nmain factor behind\
    \ the popularity and reliability of Industry\n4.0. These advanced technologies\
    \ are responsible for nar-\nrowing the gap between virtual and real world by creating\n\
    an interface between ICT and actual operations. The basic\nstructure of Industry\
    \ 4.0 is shown in Fig. 1, and timeline of\nindustrial revolution is shown in Fig.\
    \ 2 [4].\nThese types of industries, containing all these smart\nperipherals,\
    \ are also known as Factory of Future (FoF). The\ncapabilities required for FoF,\
    \ like remote monitoring, fault\ntracking, remote sensing, cloud computing, data\
    \ analytics\nand cognitive computing, etc., are created by the cyber\nphysical\
    \ systems. These smart industries are equipped with\nsmart\nsensors,\nintelligent\n\
    automation\ntechniques\nand\nequipment, which can collect and analyse data and\
    \ allow\nfor better decision making. Moreover, intelligent net-\nworking among\
    \ different platforms enables communication\nbetween machines and manufacturing\
    \ process parameters\nthat are developed by using IoT and ICT [25].\nManufacturing,\
    \ construction, shipping and supply chain\nmanagement sectors are directly being\
    \ inﬂuenced by\nIndustry 4.0, which directly impacts on day-to-day activi-\nties.\
    \ The concept of Industry 4.0 refers to the smart\nindustry or cyber industry\
    \ with digitalization of all the\nindustrial\nprocesses,\ncharacterized\nby\n\
    its\nreliability,\nﬂexibility and adaptability, which also take care of the\n\
    consumer’s need in the market [26, 27]. Eventually, the\nmajor beneﬁts are as\
    \ [8, 28]:\n•\nEnhancement in productivity based on real information.\n•\nEfﬁcient\
    \ utilization of resources.\n•\nReal-time optimization of productive processes\n\
    •\nIncreased ﬂexibility for controlling the processes.\n•\nEstablishes direct\
    \ link between organizations and users.\n•\nMinimization of down time based on\
    \ predictive fault\nanalysis.\n•\nProduct standardization and quality assurance\n\
    2.1. Role of Smart Sensors in Industry 4.0\nThe key components of Industry 4.0\
    \ are the industrial\ninternet of things, which includes different types of sensors\n\
    for controlling and monitoring the process parameters\n[17, 29]. These sensors\
    \ relate to the process control\nequipment either remotely or physically. The\
    \ role of smart\nsensors in Industry 4.0 is summarized in Fig. 3. Smart\nsensors\
    \ and actuators are the ﬁrst levels of process\nautomation. Basically, automation\
    \ structure consists of\ndifferent stages that has been classiﬁed as [30]:\nStage\
    \ 1—This stage consists of sensors and actuators,\nwhich collects raw data from\
    \ manufacturing process and\ninitiates the control by analysing that data.\nStage\
    \ 2—This stage acts as an interface between process\nparameters and control parameters\
    \ by means of various\ninput/output modules.\nStage 3—This stage is known as controlling\
    \ stage that\nconsists of IT infrastructure, responsible for controlling\nthe\
    \ production processes.\nStage 4—The function of this stage is monitoring the\n\
    whole manufacturing process as well as it consists of\nprocess management system.\n\
    Stage 5—This stage serves as interface consisting of\ndetailed operational planning,\
    \ quality speciﬁcation man-\nagement and data collection over the cloud.\nIn Industry\
    \ 4.0, all the machines in the process plant are\nintegrated with sensors having\
    \ an IP address that allows\nthem to communicate with other IoT-enabled devices.\
    \ IoT-\nenabled devices make it possible for exchanging a large\namount of data\
    \ for a short span, to optimize and evaluate\nthe performance of the whole system.\
    \ Moreover, the future\nprediction, warnings, status updates, etc., about the\
    \ beha-\nviour of the machines are easily obtained from the analysis\nof collected\
    \ data through the sensors [31]. The measure-\nment data collected through the\
    \ sensors, process control\nalgorithms,\nmathematical\nanalysis\nwith\ncyber\n\
    secure\ninfrastructure is the basis of digital transformation, which\nmakes the\
    \ quality infrastructure stronger with conformity\nIndustry \n4.0\nIndustrial\
    \ \nInternet of \nThings (IIoT)\nCybr \nPhysical \nSystems \nSmart \nFactrories\n\
    Cognitive \nComputing\nFig. 1 Major building blocks of Industry 4.0\nChallenges\
    \ in Sensors Technology for Industry 4.0 for Futuristic Metrological Applications\n\
    217\n123\nassessment market surveillance and veriﬁcation system\n[32]. With the\
    \ advancements in technologies and devel-\nopment of high-speed computerized software\
    \ and hardware\nframeworks, the sensor technology has outgrown and has\nentered\
    \ in a hi-tech stage, resulting in precision manufac-\nturing technology with\
    \ an objective of enhancing the\noperation\nmonitoring\ncapabilities\nand\naccuracy\n\
    with\nincreasing the efﬁciency of the process by creating a virtual\nlink between\
    \ the machines and end users. In the production\nsystem, each sensor collects\
    \ some certain parameters and\nthen the system uses signal processing algorithms\
    \ and\nintelligent control techniques to relate all the measurement\nresults in\
    \ a comprehensive set. These sensors are directly\nconnected to the measurement\
    \ system or they collect and\ntransfer the data through wireless signal [33, 34].\n\
    The smart sensors, which are being used in Industry 4.0\nfor monitoring, measurement\
    \ and control prospective, need\nprecise calibration methods and standards for\
    \ ensuring\ntraceability to the national standards and accomplishing the\nhighest\
    \ levels of accuracy and precision and conformance\nto relevant national and international\
    \ standards. Moreover,\nwireless or remote calibration is preferred for these\
    \ smart\nsensors. The past standards which are being adopted for the\ncalibration\
    \ may not be completely suitable for smart sen-\nsor. Thus, the development of\
    \ advanced calibration stan-\ndards and methods integrated with IoT-embedded systems\n\
    and machine readability for Industry 4.0 is the necessity for\nmaking the measurements\
    \ highly accurate, precise and\nreliable [35]. The manufacturing process has been\
    \ revolu-\ntionized by fourth industrial revolution enabling self-suf-\nﬁcient\
    \ manufacturing process by using machines and\nsensors, which can establish a\
    \ communication link through\ndigital connectivity [2]. A smart factory is characterized\n\
    with the help of (i) sensors which are having the capability\nto self-learn on\
    \ the basis of environmental information and\nthey can take part in the decision-making\
    \ process accord-\ning to the change in process variables, (ii) co-ordination\n\
    between different devices through ﬂexible interconnection,\n(iii) artiﬁcial intelligence\
    \ (AI) allow smart factories to have\nan advance level of interconnection among\
    \ various pro-\ncesses. Moreover, AI with human capabilities allows\nindustries\
    \ to take the decisions based on the analysis of\ndata and (iv) the most important\
    \ component of Industry\n4.0, which enables human–machine interface by using\n\
    signal processing techniques and simulating different\nconditions based on sensor\
    \ data [31].\n2.2. Implications of Industry 4.0 and Digitalization\nIndia had\
    \ become the fastest growing country exceeding\nChina in 2019. But due to the\
    \ novel coronavirus and\nlockdown, the GDP of India has seen its lowest peak of\
    \ the\nlast decade in 2020. This determines the need of digital\ntransformation\
    \ of the industries in India. Making use of the\nbest IT as well as intellectual\
    \ resources available India\nshould stride forward to develop the country in shoulder\n\
    with the global leaders. In 2019–2020 survey of GDP, the\ncontribution of industry\
    \ sector of India is only 23%, which\nis 30% lower than the world’s average [36].\
    \ Digital users in\nIndia are growing at a faster rate. Indians spend more time\n\
    in social media than any other country except china. The\nthree elements that\
    \ deﬁne digital adoption index are:\nDigital foundation (cost, speed and reliability\
    \ of internet\nservice),\nDigital reach (number of mobile devices, app downloads\n\
    and data consumption), and\nDigital value (how much consumers engage online by\n\
    chatting, tweeting, shopping or streaming).\nFigure 4 indicates the comparison\
    \ of the digital adoption\nindex of various countries [37]. As the citizen of\
    \ India is\ngrowing accustomed to the digital world, it paves the brick\nfor the\
    \ conversion of conventional industrial services\ntowards the digital industrial\
    \ services.\nManual \nlabour and \nsteam \nengines\nIndustry 1.0\nElectricity\
    \ \nand \nAssemble \nline \nproduc\x02on\nProgrammab\nle Computer \nand \nElectronic\
    \ \nControl\nCyber \nPhysical \nSystem with \nIIoT and IICT\nIndustry 2.0\nIndustry\
    \ 3.0\nIndustry 4.0\n18th Century\n19th Century\n20th Century\nToday\nFig. 2 Timeline\
    \ of industrial\nrevolution\n218\nA. Varshney et al.\n123\n3. Metrology and Impact\
    \ of Industry 4.0\nThe development of Industry 4.0 concept in turn inculcates\n\
    challenges and strengthening of the metrological frame-\nwork also. Thus, it is\
    \ required for rethinking about the\nmeasurement phenomena that can synchronize\
    \ the Industry\n4.0 along with metrology 4.0. There is a huge requirement\nof\
    \ online metrology for futuristic industrial requirement.\nThe main goal of Industry\
    \ 4.0 is to maximize the efﬁciency\nand increase the quality of the throughput\
    \ [38]. The main\nchallenges in metrology are the measurement of multi-di-\nmensional\
    \ quantities with security of measurement results\nin real-time mode. The prime\
    \ consideration is the devel-\nopment of advanced national and international standards\n\
    regulating the current and futuristic requirement of the\nindustry. Moreover,\
    \ the implementation of suitable mea-\nsurement methods and processes conforming\
    \ to relevant\nnational and international standards along with selection of\n\
    appropriate equipment is the necessity of Industry 4.0 [39].\n3.1. Digital Transformation\
    \ in Metrology\nMetrology is the experimental and theoretical evaluation of\n\
    any uncertainty in the measurement in the ﬁeld of science\nand technology. There\
    \ are three types of metrology, sci-\nentiﬁc\nmetrology\nthat\ndeals\nwith\nthe\n\
    measurement\nstandards, industrial metrology that deals with the mea-\nsurements\
    \ in an industry and legal metrology dealing with\nthe law and protection of the\
    \ users of measuring instru-\nments\n[40].\nThe\nmajor\ncomponents\nof\nmetrological\n\
    infrastructure are the traceability of calibration and analysis\nof uncertainty\
    \ with international standards guidelines.\nDigital transformation of industries\
    \ and inclusion of data\nanalytics are changing the aspects of measurement with\
    \ the\nimplication of smart sensors integrated with machine\nlearning algorithms\
    \ for automated decision making. The\nobjective of enhancing the metrological\
    \ infrastructure\nrequired for improved quality infrastructure in smart fac-\n\
    tories by adopting traceable calibrations in accordance with\nthe relevant national\
    \ and international standards developed\naccording to the need of factory of future\
    \ [41, 42]. The\nestablishment of a virtual linkage between the calibration\n\
    laboratory and client locations under the umbrella of\nIndustry 4.0 shall be indispensable\
    \ in calibration of the\nvarious sensors in much less time without dismantling\n\
    them in the system, thus enhancing the accuracy, precision\nand standardization\
    \ of the products and services [38]. In\nthis scenario, calibration can be done\
    \ online/remotely by\nmeans of data transport in spite of instrument transport,\
    \ and\ndata can be transferred from even the apex level body like\nNational Metrology\
    \ Institutes (NMIs) to client locations\nelectronically. This will result in the\
    \ saving of time and\nCloud and Big \nData\nIoT and \nIICT\nCloud \nComputing\n\
    Automation\nLogistics\nQuality \nManagement \nSystem\nData \nAnalytics\nArtificial\
    \ \nIntelligence\nProduction\nDiagonistics (Preventive and \nPredictive Maintenance)\n\
    Smart and \nIntelligent \nSensors\nSmart \nCommunication\nFig. 3 Major paradigms\
    \ of\nIndustry 4.0 and smart sensors\nChallenges in Sensors Technology for Industry\
    \ 4.0 for Futuristic Metrological Applications\n219\n123\ncost without compromising\
    \ the accuracy/speciﬁcation of\nthe instruments. The use of sensors is not limited\
    \ to\nindustry but also inﬂuences smart cities and smart mobil-\nities. These\
    \ sensors are self-tested and calibrated, and its\nstatus depending upon its type\
    \ and method of calibration is\nrecorded. This information is stored in calibration\
    \ certiﬁ-\ncates. In Industry 4.0, smart sensors are used that can\ncommunicate\
    \ using wireless communication protocols, so\nthat the calibration values could\
    \ be communicated to dis-\ntant places without much manual efforts. Since the\
    \ sensors\ntoday are mostly an IoT device and this measurement can\nbe connected\
    \ to the cloud services to form an IoMT-\n‘‘Internet of Measurement Things’’.\
    \ The architecture of\nIoMT suggested in reference [43] has three layers inte-\n\
    grated—the\nphysical\ncalibration\nsystem,\nMetrological\nInformation Infrastructure\
    \ Cloud and an application soft-\nware that can be used in metrology.\nFigure\
    \ 5 describes the major technical attributes of\ndigital transformation in metrology.\
    \ Kuster et al. 2018 [44]\ndeﬁne the novel concept of MII as: A Measurement\n\
    Information Infrastructure is a set of normative standards\nthat unambiguously\
    \ deﬁne data structures, taxonomies,\nservice protocols and security for locating,\
    \ communicating\nand sharing the measurement information. The three pri-\nmary\
    \ vehicles for establishment of such an infrastructure\nare: instrument speciﬁcations,\
    \ statements of accreditations\n(SOAs)\nand\ntest\nand\ncalibration\ncertiﬁcates.\n\
    The\ninvolvement of IoT in MII taxonomy establishment can\nbring synergy to the\
    \ complete establishment. Also, some\ninnovative measures such as that followed\
    \ by some NMIs\nlike PTB, Germany, on representing the metrological\nvocabularies\
    \ as machine readable metadata with persistent\nidentiﬁer shall be of great support\
    \ to such an infrastructure\n[45].\n3.2. Metrology Cloud and Digital Quality\n\
    Infrastructure\nThe establishment of the novel concept of European\nMetrology\
    \ Cloud and European Centre of Excellence as\nhighlighted by Thiel F et al., 2017\
    \ [22] in order to support\nthe conformity assessment process, market surveillance,\n\
    data-driven services and reference architectures shall foster\nthe establishment\
    \ of digital single market and shall cater to\nthe needs of all the stakeholders.\
    \ The concept of European\ncentre of excellence for metrological information technol-\n\
    ogy comprising of all the experts from the various sectors\nshall enhance communication,\
    \ transparency and harmo-\nnization and support product standardization, quality\n\
    assurance and innovations. So, to impose the above tasks a\ndigital quality infrastructure\
    \ shall be established that will\nstandardize metrology and provide accreditation\
    \ and con-\nformity assessment. These efforts are also required to be\nfocussed\
    \ on Indian perspectives so as to establish a national\n0\n20\n40\n60\n80\n100\n\
    120\nSouth Korea\nSweden\nUnited Kingdom\nSingapore\nUnited States\nAustralia\n\
    Russia\nJapan\nGermany\nFrance\nItaly\nBrazil\nChina\nIndonesia\nSouth Africa\n\
    India\n%growth\nDigital Adop\x02on Index(score)\nFig. 4 The comparison of the\n\
    digital adoption index of various\ncountries [34]\n220\nA. Varshney et al.\n123\n\
    digital quality infrastructure for supporting the manufac-\nturers and industries\
    \ and all the stakeholders. Eventually,\nthe role and responsibility of CSIR-National\
    \ Physical\nLaboratory, the National Metrology Institute of the India is\nincreased\
    \ manifold. However, the special budgetary allo-\ncations, cooperation of the\
    \ various stakeholders including\nexperts from industries, manufacturing sector,\
    \ accreditation\nbodies, information technology sector, legal metrology and\n\
    regional laboratories are must. Figure 6 shows the pictorial\nview of the conceptualized\
    \ metrology cloud in Indian\nperspectives on a similar line as that suggested\
    \ in European\nUnion [22].\nThe use and implementation of the advanced technolo-\n\
    gies like IoT framework, cyber physical systems, cloud\ncomputing, digital twins\
    \ shall be very signiﬁcant in the\ndevelopment of a metrology cloud beneﬁtting\
    \ all the\nstakeholders. A digital quality infrastructure integrates the\nIT infrastructure\
    \ and databases to the Metrology Grid with\na trustworthy connection that incorporates\
    \ services as well\nas communication with the data storage. The services may\n\
    be realized through a concept called ‘‘Digital Twin’’.\nDigital Twin is a concept\
    \ used in variety of sectors where a\nmodel of a physical instrument with real\
    \ data is used to\nassess the performance of a real instrument. The difference\n\
    of digital twin from a model is that there exists a real\nphysical instrument\
    \ corresponding to digital twin. There\nare many deﬁnitions for digital twin in\
    \ the literature. For\ninstance, the LMS Research [46] deﬁne it as: ‘‘Digital\
    \ Twin\nis an executable virtual model of a physical thing or sys-\ntem’’. As\
    \ the time changes the model of digital twin also\nchanges. These changes would\
    \ imitate the defects and\nfaults of the instrument in the real world as the time\n\
    changes. The digital twin can provide the estimates of and\nidentiﬁes method of\
    \ minimizing these uncertainties [47]. In\nEurope, the legal framework is data-driven\
    \ making use of\nthe European Metrology Cloud to focus on the conformity\nassessment\
    \ and market surveillance [22, 48]. The digital\nsingle market can provide economic\
    \ beneﬁts taking the\nadvantage of cloud computing services [49]. A metrolog-\n\
    ical data lake is established to investigate the outcome of\nFig. 5 Major technical\
    \ attributes of digital transformation in metrology\nChallenges in Sensors Technology\
    \ for Industry 4.0 for Futuristic Metrological Applications\n221\n123\nthe combined\
    \ data from different sources. The outcome of\napplying the soft computing techniques\
    \ such as data min-\ning and machine learning on the combine data needs fur-\n\
    ther subtle investigations. The data are obtained from\ndifferent sources such\
    \ as the experiences from manufac-\nturers of instruments, from market surveillance\
    \ and from\ndatabase itself provide a reliable system that can assess the\nrisk\
    \ between design and market and transparency provides\naccess to these data for\
    \ all the stakeholders. Thus, the\nestablishment of such cloud shall strengthen\
    \ in the devel-\nopment of quality infrastructure and legal metrology that\nprovides\
    \ a legal framework to protect the interest of a\ncommon citizen of India by protecting\
    \ consumers and\ninstrument users. This can lead to more business opportu-\nnities\
    \ and will stimulate the research and innovation on\ndata-driven technology.\n\
    3.3. Edge Computing in Industry 4.0\nCyber physical system embeds computational\
    \ elements\nconnected to physical systems. It forms the pillar for IIoT\nor Industry\
    \ 4.0. Various devices in industries such as sen-\nsors, servers, mobile robots,\
    \ workstations are integrated to\nwork together efﬁciently in a cyber physical\
    \ system (CPS).\nThe system should be able to communicate within itself\nand also\
    \ send data through networking [50]. It is consid-\nered that the acquisition\
    \ and storing of large amount of data\nin cloud can provide better performance\
    \ of industry. But\nthe storage of unnecessary data in cloud demands for more\n\
    storage; hence, the cost increases nulling the beneﬁt of\ndigitalization [51].\
    \ The raw data should be ﬁltered so that\nonly required data are stored in the\
    \ cloud. Edge computing\nor fog computing stores the data and processes them very\n\
    fast, thus improving the quality of service and experience\n[52]. The involvement\
    \ of innovative technologies such as\nan Intelligent Reﬂecting surface Aided Wireless\
    \ network\ncan be further instrumental in reducing the latency of the\nedge computing\
    \ [53]. Figure 7 summarizes the various\nbeneﬁts and key points of consideration\
    \ to be focussed in\nnext few years for the adoption and establishment of MII\n\
    and digital metrology that shall lead to cost reduction,\nproduct standardization,\
    \ and shall strengthen the digital\nquality infrastructure in any country.\nThe\
    \ inclusive and sustainable industrial development\nand digitization of quality\
    \ infrastructure (metrology, stan-\ndardization and accreditation) shall be complementary\
    \ to\nFig. 6 Conceptualized metrology cloud in Indian perspectives\n222\nA. Varshney\
    \ et al.\n123\neach other and together contribute to the economic and\nindustrial\
    \ growth. The strengthening of metrology by\nestablishment of quantum standards\
    \ and quantum-based\nmeasurement technologies shall foster the improvement of\n\
    traceability chain and shall enable precision measurements\nreferenced to international\
    \ system of units (SI) in industry,\nacademic institutes, avionics, automobile,\
    \ defence and\nspace research, railways, banking, agriculture and medical\nsector\
    \ [54]. The metrology for health and quality of life,\nclimate change, affordable\
    \ and clean energy has also to be\nfocussed to cater to the growing needs of the\
    \ population\nand providing safe and healthy environment for sustainable\ndevelopment\
    \ goals.\n4. Challenges and The-Way-Ahead\n4.1. Challenges in Sensor Technologies\n\
    The design and fabrication of smart sensors have thus\nemerged as a leading research\
    \ area for researchers in recent\ntimes. There is need of more and more accurate\
    \ and precise\nmeasurements that lead to the reliable and robust design of\nsmart\
    \ sensors. Presently, sensors are being used to record\nand analyse the data from\
    \ the most hostile and challenging\nenvironment like biomedical measurements,\
    \ space appli-\ncations, meteorology applications, physical and chemical\nmetrology,\
    \ electrical and electronic measurements. Sensors\nfacilitate the condition monitoring\
    \ of the machines, devices\nor structures wherein they are integrated. In spite\
    \ of inte-\ngrated sensor networks, wireless sensor network has long-\nterm potential\
    \ and importance, responsible for enhanced\nthroughput based on the collected\
    \ data. Wireless sensor\nnetworks face many conceptual and optimization problem\n\
    like tracking, deployment and reliability-related issues.\nWireless sensors are\
    \ generally deployed in the harsh\nenvironment. Therefore, there may be faulty\
    \ or unreliable\ncommunication with these sensors. The probability of\nsignal\
    \ delay and loss is common in wireless signal network.\nThe very basic problem\
    \ with the wireless sensors is the\ncoverage-related issue, which affects the\
    \ quality of service\nof the sensor. The major problems that are associated with\n\
    the wireless sensor network are (i) selection of hardware\nand operating infrastructure,\
    \ (ii) calibration, deployment\nand programming model for the sensing network\
    \ and (iii)\nsynchronization [34]. Thus, it is imperative to counter these\nFig.\
    \ 7 Beneﬁts of digital\ntransformation and propose\nmetrology cloud on the\nsustainable\
    \ industrial\ndevelopment in the next decade\nChallenges in Sensors Technology\
    \ for Industry 4.0 for Futuristic Metrological Applications\n223\n123\nlimitations\
    \ associated with the wireless sensors for devel-\noping a reliable, economical\
    \ and usable network that can\nbe used in Industry 4.0 without any hesitation.\n\
    4.2. Challenges in Wireless Communication\nWireless sensor and communications\
    \ are the prerequisites\nfor Industry 4.0. However, there are many challenges\
    \ faced\nin order to provide a secure communication, which is not\nprone to attacks.\
    \ One of the attacks is denial distribution of\nservices. An innovative method\
    \ to detect attacks on soft-\nware-deﬁned wireless sensor network is explained\
    \ in ref-\nerence [54]. Wormhole is another threat to wireless sensors\nwhere\
    \ an attacker introduces dangerous nodes and uses\nfalse routes established by\
    \ the node. Hence, the route from\nthe sensor is set up and the wormhole is detected\
    \ using a\nMAC centralized routing protocol (MCRP) [55]. The\nblockchain methodology\
    \ suggested in reference [56] is\nused to keep the communication links in Industry\
    \ 4.0\nsecure. Industry 4.0 is required to have reliable, low\nlatency and energy-efﬁcient\
    \ communication to allow\nmachine-to-machine communication [57]. 5G provides the\n\
    communication support for Industry 4.0 and allows the\nprolonged battery life.\
    \ In 5G, there is an issue of resource\nallocation for the network user, which\
    \ is the wireless sen-\nsor. Hence, network slicing is required to distribute\
    \ the\nnetwork to the N sensors [58]. In an industry, there may be\nmore than\
    \ one sensor using the same network to send\ninformation. This increases the trafﬁc\
    \ in the network,\nwhich also causes the loss of data. These lost data must be\n\
    retransmitted efﬁciently [59]. The signal from the sensors\nin a distributed system\
    \ in Industry may be mixed since the\ninformation is passed through air. So, a\
    \ method of using\ndense convolution and federal learning is efﬁcient to sep-\n\
    arate the signal [60].\n4.3. Challenges of Digitalization\nEven though Industry\
    \ 4.0 has many beneﬁts, one of the\nrequirements for digitalization is sharing\
    \ of data but most\nof the companies are reluctant to share data as they are\n\
    afraid of fall behind their competitors or being exploited by\nothers [61, 62].\
    \ The digitalization possesses risks to the\nsensitive information, and privacy\
    \ is being violated as the\ninformation is transparent [63]. It infuses fear and\
    \ lack of\ntrust to adopt digital technologies by industries. In other\nwords,\
    \ the digital world should provide transparency of\ndata with adequate security.\
    \ The cloud services face many\nthreats so that personnel with adequate knowledge\
    \ of how\nto deal with this threat is necessary to use these services\n[64, 65].\
    \ Other challenges for the Industry 4.0 are consid-\nered to be lack of trained\
    \ employees, lack of competencies,\nlack of ﬁnancial resources, lack of standards\
    \ and processes\nand resistance from the employees [66]. These aspects have\n\
    to be resolved step by step for synergising the complete\nprocess and establishment\
    \ of a digital quality infrastructure\nin Indian perspectives. The trained manpower\
    \ and experts\nfrom various ﬁelds have to play a key role in creating\nawareness\
    \ and inculcating knowledge about various tech-\nnical and legal considerations\
    \ for the establishment of a\nfoolproof system.\n5. Conclusions and Outlook\n\
    The paper highlighted the various aspects pertaining to the\nsmart sensors and\
    \ IoT-enabled industrial infrastructure that\nis pivotal for adapting to the advanced\
    \ technologies based\non fusion of smart sensors traceable to digital metrology,\n\
    traceability and certiﬁcation to support the Industry 4.0,\nSmart cities, Digital\
    \ India and AtmaNirbhar Bharat mis-\nsions of the government of India. The work\
    \ presented in\nthis paper discusses about the various challenges associated\n\
    with the digital transformation of metrology along with the\ninclusion of smart\
    \ sensors in Industry 4.0. The work\nillustrates the concept of digital transformation\
    \ of metro-\nlogical applications by implementing intelligent techniques\nfor\
    \ manufacturing processes along with the development\nand successful implementation\
    \ of digital quality infras-\ntructure in India. The present paper is an attempt\
    \ to provide\nterse review and national and international perspectives\nrelated\
    \ to the advanced technological developments in this\nﬁeld and the challenges\
    \ therein. COVID-19 has become an\ninvisible catalyst for digitalization. The\
    \ pandemic has\nenlightened\nthe\nsociety\nabout\nthe\nimportance\nand\ninevitability\
    \ of the digitalization. The ease with which the\nwork could be monitored and\
    \ controlled even from the\nhome evoked the interests of the industrialists as\
    \ well as\nemployees and increased the pace towards digitalization.\nBut still\
    \ the pace with which the security is provided to the\ndata stored does not match\
    \ pace of digitalization. The\ncommunication issues are still prominent in different\
    \ cor-\nners of the world. For the uninterrupted communication of\nvarious IoT\
    \ devices, a better communication protocol must\nbe introduced. The emergence\
    \ of 5G promises the relia-\nbility and latency demanded by Industry 4.0. But\
    \ most of\nthe countries, including India, are in the initial stages of 5G\ncommunication.\
    \ Thus, in metrology ﬁeld, the concept of\nproposed metrology cloud, digital calibration\
    \ certiﬁcate\nand development of Measurement Information Infrastruc-\nture (MII)\
    \ as that focussed in Europe shall serve as strong\npillars for the establishment\
    \ of a trustworthy national dig-\nital quality infrastructure and strengthening\
    \ the metrology,\nstandardization and accreditation in Indian perspectives.\n\
    Also, India being the largest exporter of the IT, the merging\nof Indian industries\
    \ with the Indian IT infrastructure,\n224\nA. Varshney et al.\n123\nprovides a\
    \ strong basement for digitalization. This provides\na win–win situation to both\
    \ IT and other sectors to expand\nthe ﬁeld of research and development. Thus,\
    \ the integration\nof various technological advancements in conjunction with\n\
    IoT shall pave the way for research and development in the\nﬁeld of smart sensors,\
    \ wireless protocols, IoT devices and\ncloud computing for Industry 4.0 and shall\
    \ serve as the\nbackbone for the inclusive growth of industry and ramping\nup\
    \ the economy of any country.\nReferences\n[1] M. Wollschlaeger, T. Sauter, J.\
    \ Jasperneite, The future of\nindustrial communication: automation networks in\
    \ the era of the\ninternet of things and industry 4.0, IEEE Industrial electronics\n\
    magazine, 2017;11(1):17–27.\n[2] Marcin B. Bauza, Jason Tenboer, Ming Li, Aleksandr\
    \ Lisovich,\nJian Zhou, Daniel Pratt, Jonathan Edwards, Hai Zhang, Charles\nTurch\
    \ and Richard Knebel, Realization of industry 4.0 with\nhigh-speed CT in high\
    \ volume production. CIRP Journal of\nManufacturing Science and Technology, 22\
    \ (2018) 121–125.\n[3] Victor Alonso, Angel Dacal-Nieto, Luı´sBarreto, Anto´nioA-\n\
    maral, Eduardo Rivero, Industry 4.0 implications in machine\nvision metrology:\
    \ an overview, Procedia Manufacturing 2019,\n41, 359–366.\n[4] What is Industry\
    \ 4.0—the Industrial Internet of Things (IIoT),\nAvailable from: https://www.epicor.com/en-in/resource-center/\n\
    articles/what-is-industry-4-0/.\n[5] Roberto Benitez Mr., and Roberto Benitez\
    \ Jr., Wireless cali-\nbration for Industry 4.0, International Congress of Metrology,\n\
    2019.\n[6] B. Afzal, M. Umair, G.A. Shah and E. Ahmed, Enabling IoT\nplatforms\
    \ for social IoT applications: Vision, feature mapping,\nand challenges. Future\
    \ Gener. Comput. Syst., 92 (2019) 718–731.\n[7] Industry 4.0 Building Connected\
    \ Digital Manufacturing, Avail-\nable from: https://blog.rgbsi.com/industry-4.0-connected-digital\n\
    -manufacturing.\n[8] Benitez, G.B.; Ayala, N.F.; Frank, A.G., Industry 4.0 innovation\n\
    ecosystems: An evolutionary perspective on value cocreation.\nInt. J. Prod. Econ.\
    \ 2020, 228, 107735.\n[9] Goldstein B, NIST on a chip: Revolutionizing Metrology\n\
    through Deployable, Quantum-Based Sensors, SMSI 2020\nConference-Sensor and Measurement\
    \ Science International,\n30–31.\n[10] G. D\x03Emilia, A. Gaspari, E. Natale,\
    \ Measurements for smart\nmanufacturing in an Industry 4.0 scenario, Proc. of\
    \ IEEE\nInternational Workshop on Metrology for Industry 4.0 and IoT,\nBrescia,\
    \ Italy, April 16–18, 2018, pp. 108–112.\n[11] Agostini, L.; Filippini, R. Organizational\
    \ and managerial chal-\nlenges in the path toward Industry 4.0. Eur. J. Innov.\
    \ Manag.\n2019, 22, 406–421.\n[12] D.K. Aswal, Quality infrastructure of India\
    \ and its importance\nfor inclusive national growth. MAPAN-J. Metrol. Soc. India,\
    \ 35\n(2020) 139.\n[13] D. K. Aswal, Introduction: Metrology for All People for\
    \ All\nTime, In: Aswal D.K. (eds) Metrology for Inclusive Growth of\nIndia.\n\
    Springer,\nSingapore,\npp\n1–36,\nhttps://doi.org/\nhttps://doi.org/10.1007/978-981-15-8872-3_1.\n\
    [14] D. K. Aswal, (Ed.), Metrology for Inclusive Growth of India,\nSpringer, Singapore,\
    \ 2020, https://www.springer.com/gp/book/\n9789811588716.\n[15] Metrology for\
    \ the Factory of the Future, Available from:\nhttps://www.euramet.org/research-innovation/search-research-\n\
    projects/details/project/metrology-for-the-factory-of-the-future/\n?tx_eurametctcp_project%5Baction%5D=show&tx_eurametct\n\
    cp_project%5Bcontroller%5D=Project&L=0&cHash=575fbce\n9df841dc03cd08e8cc3099fff\n\
    [16] Schu¨tze, N. Helwig, and T. Schneider, Sensors 4.0 – smart\nsensors and measurement\
    \ technology enable Industry 4.0, J.\nSens. Sens. Syst., 2018, 7, 359–371.\n[17]\
    \ D. Gupta, V. H. C de Albuquerque, A. Khanna and P. L. Mehta,\nSmart Sensors\
    \ for Industrial Internet of Things, Springer Inter-\nnational Publishing, 2021.\n\
    [18] H. C. Mueller, A. Hennig, G. v. Boegel and A. Grabmaier,\nWireless Sensors\
    \ for Industry 4.0 - Wireless Communication\nand Wireless Powering, Smart SysTech\
    \ 2018; European Con-\nference on Smart Objects, Systems and Technologies, Munich,\n\
    Germany, 2018, pp. 1–4.\n[19] Chee-Yee Chong and S. P. Kumar, Sensor networks:\
    \ evolution,\nopportunities, and challenges, Proceedings of the IEEE, vol. 91,\n\
    no. 8, , Aug. 2003, pp. 1247–1256.\n[20] T. Mustapa¨a¨, J. Autiosalo, P. Nikander,\
    \ J. E. Siegel and R.\nViitala, ‘‘Digital Metrology for the Internet of Things,’’\
    \ 2020\nGlobal Internet of Things Summit (GIoTS), Dublin, Ireland,\n2020, pp.\
    \ 1-6.\n[21] Metrology for the digitalization of the economy and society,\nAvailable\n\
    from:\nhttps://www.bipm.org/cc/PARTNERS/Allo\nwed/2017_October/2017-Metrology-for-the-Digitalisation-of-\n\
    Economy-and-Society.pdf\n[22] Thiel, Florian, Marko Esche, Federico Grasso Toro,\
    \ Alexander\nOppermann, Jan Wetzlich, and Daniel Peters. ‘‘The European\nmetrology\
    \ cloud.’’ In 18th International Congress of Metrology,\np. 09001. EDP Sciences,\
    \ 2017.\n[23] What\nis\nIndustry\n4.0?\nAvailable\nfrom:\nhttps://www.ibm.\ncom/topics/industry-4-0\n\
    [24] M. S. Bhatia and S. Kumar, Critical Success Factors of Industry\n4.0 in Automotive\
    \ Manufacturing Industry, IEEE Transactions\non Engineering Management, 2020.\n\
    [25] S. Ferna´ndez-Miranda, M. Marcos, M. Peralta, F. Aguayo, The\nchallenge of\
    \ integrating Industry 4.0 in the degree of Mechanical\nEngineering. Procedia\
    \ Manufacturing. 2017, 13, 1229–1236.\n[26] Wilkesmann, M.; Wilkesmann, U. Industry\
    \ 4.0—organizing\nroutines or innovations? VINE J. Inf. Knowl. Manag. Syst. 2018,\n\
    48, 238–254.\n[27] L. Barreto, A. Amaral, T. Pereira, Industry 4.0 implications\
    \ in\nlogistics:\nan\noverview,\nProcedia\nManufacturing,\n2017;13:\n1245–1252.\n\
    [28] Kiel, Daniel, Julian M. Mu¨ller, Christian Arnold, and Kai-Ingo\nVoigt. ‘‘Sustainable\
    \ industrial value creation: Beneﬁts and\nchallenges of industry 4.0.’’ International\
    \ journal of innovation\nmanagement 21, no. 08 (2017): 1740015.\n[29] Tortorella,\
    \ G.L.; Giglio, R.; Van Dun, D.H. Industry 4.0 adop-\ntion as a moderator of the\
    \ impact of lean production practices on\noperational performance improvement.\
    \ Int. J. Oper. Prod.\nManag. 2019, 39, 860–886.\n[30] Leng, J.; Ruan, G.; Jiang,\
    \ P.; Xu, K.; Liu, Q.; Zhou, X.; Liu, C.\nBlockchain-empowered sustainable manufacturing\
    \ and product\nlifecycle management in industry 4.0: A survey. Renew. Sustain.\n\
    Energy Rev. 2020, 132, 110112.\n[31] Guideline\nSensors\nfor\nIndustry\n4.0,\n\
    Available\nfrom:\nhttps://industrie40.vdma.org/en/viewer/-/v2article/render/25266\n\
    556 .\n[32] G. D\x03Emilia, A. Gaspari, Data validation technics for mea-\nsurements\
    \ systems operating in an Industry 4.0 scenario, Proc. of\nIEEE International\
    \ Workshop on Metrology for Industry 4.0 and\nIoT, Brescia, Italy, April 16–18,\
    \ 2018, pp. 113–117.\nChallenges in Sensors Technology for Industry 4.0 for Futuristic\
    \ Metrological Applications\n225\n123\n[33] Kalsoom, T.; Ramzan, N.; Ahmed, S.;\
    \ Ur-Rehman, M. Advan-\nces in Sensor Technologies in the Era of Smart Factory\
    \ and\nIndustry 4.0. Sensors 2020, 20, 6783.\n[34] Vidosav Majstorovic, Slavenko\
    \ Stojadinovic, Srdjan Zivkovic,\nDragan Djurdjanovic, Zivana Jakovljevic and\
    \ Nemanja Glig-\norijevic,\nCyber-physical\nmanufacturing\nmetrology\nmodel\n\
    (CPM3) for sculptured surfaces–turbine blade application. Pro-\ncedia CIRP, 63\
    \ (2017) 658–663.\n[35] R. Benitez, R. Benitez, C. Ramirez and J. A. Vazquez,\
    \ Sensors\ncalibration for Metrology 4.0, II Workshop on Metrology for\nIndustry\
    \ 4.0 and IoT (MetroInd4.0&IoT), Naples, Italy, 2019,\npp. 296–299.\n[36] http://statisticstimes.com/economy/country/india-gdp-sectorwise.\n\
    php\n[37] https://www.mckinsey.com/business-functions/mckinsey-digital\n/our-insights/digital-india-technology-to-transform-a-connected\n\
    -nation#\n[38] Castelo-Branco, I.; Cruz-Jesus, F.; Oliveira, T. Assessing\nIndustry\
    \ 4.0 readiness in manufacturing: Evidence forthe\nEuropean Union. Comput. Ind.\
    \ 2019, 107, 22–32..\n[39] M. Compare, P. Baraldi and E. Zio, Challenges to IoT-Enabled\n\
    Predictive Maintenance for Industry 4.0, IEEE Internet of\nThings Journal, 7,\
    \ 5, 4585–4597, 2020.\n[40] D.K. Aswal, Quality infrastructure of India and its\
    \ importance\nfor inclusive national growth. MAPAN, 35 (2020) 139–150.\n[41] S.\
    \ Andonov, M. Cundeva-Blajer, Calibration for Industry 4.0\nMetrology: Touchless\
    \ Calibration, Journal of Physics: Confer-\nence Series, 2018;1065:072019.\n[42]\
    \ R. Taymanov, K. Sapozhnikova, Metrology challenges of\nIndustry\n4.0,\nJournal\n\
    of\nPhysics:\nConference\nSeries,\n2018;1065:072044.\n[43] Kaya, M. Cagri, Mahdi\
    \ Saeedi Nikoo, Michael L. Schwartz, and\nHalit Oguztuzun. ‘‘Internet of measurement\
    \ things architecture:\nProof of concept with scope of accreditation.’’ Sensors\
    \ 20, no. 2\n(2020): 503.\n[44] Kuster M J, Toward a measurement information infrastructure,\n\
    Metrologist, vol. 6-pres no., Jan 2013\n[45] Hackel H G, Ha¨rtig F, Hornig J,\
    \ Wiedenho¨fer T, The digital cali-\nbration certiﬁcate, in Metrology for the\
    \ Digitalization of the\nEconomy and Society, PTB, Germany, Dec. 2017, 127, no.\
    \ 4,\n75-81.\n[46] Forging thedigitaltwin in discretemanufacturing: a visionfor\
    \ unity\nin the virtual and real worlds. https://www.lnsresearch.com/\nresearch-library/research-articles/ebook-forging-the-digital-twin-\n\
    in-discrete-manufacturing-a-vision-for-unity-in-the-virtual-and-\nreal-worlds.\n\
    [47] Louise Wright and Stuart Davidson, How to tell the difference\nbetween a\
    \ model and a digital twin. Advanced Modeling and\nSimulation in Engineering Sciences,\
    \ 7 (2020) 1–13.\n[48] F.L.O.R.I.A.N. Thiel, Digital transformation of legal metrology-\n\
    the European metrology cloud. OIML Bulletin, 59 (2018)\n10–21.\n[49] Ghobakhloo,\
    \ Morteza. ‘‘Industry 4.0, digitization, and opportu-\nnities for sustainability.’’\
    \ Journal of Cleaner Production 252\n(2020): 119869\n[50] Alessia Napoleone, Marco\
    \ Macchi and Alessandro Pozzetti, A\nreview on the characteristics of cyber-physical\
    \ systems for the\nfuture smart factories. Journal of manufacturing systems, 54\n\
    (2020) 305–335.\n[51] Compare, Michele, PieroBaraldi, and Enrico Zio. ‘‘Challenges\n\
    to IoT-enabled predictive maintenance for industry 4.0.’’ IEEE\nInternet of Things\
    \ Journal 7.5 (2019): 4585–4597.\n[52] Ouns Bouachir, Moayad Aloqaily, Lewis Tseng\
    \ and Azzedine\nBoukerche, Blockchain and fog computing for cyberphysical sys-\n\
    tems: The case of smart industry. Computer, 53 (2020) 36–45.\n[53] Tong Bai, Cunhua\
    \ Pan, Yansha Deng, Maged Elkashlan, Aru-\nmugam Nallanathan and Lajos Hanzo,\
    \ Latency minimization for\nintelligent reﬂecting surface aided mobile edge computing.\n\
    IEEE Journal on Selected Areas in Communications, 38 (2020)\n2666–2682.\n[54]\
    \ Segura, Gustavo A. Nunez, Sotiris Skaperas, Arsenia Chorti,\nLefteris Mamatas,\
    \ and Cintia Borges Margi. ‘‘Denial of Service\nAttacks Detection in Software-Deﬁned\
    \ Wireless Sensor Net-\nworks.’’ In 2020 IEEE International Conference on Communi-\n\
    cations Workshops (ICC Workshops), pp. 1–7. IEEE, 2020.\n[55] OhidaRufai Ahutu\
    \ and Hosam El-Ocla, Centralized Routing\nProtocol for Detecting Wormhole Attacks\
    \ in Wireless Sensor\nNetworks. IEEE Access, 8 (2020) 63270–63282.\n[56] Rathee,\
    \ Geetanjali, M. Balasaraswathi, K. Prabhu Chandran,\nSharmi Dev Gupta, and C.\
    \ S. Boopathi. ‘‘A secure IoT sensors\ncommunication in industry 4.0 using blockchain\
    \ technology.’’\nJournal of Ambient Intelligence and Humanized Computing\n(2020):\
    \ 1–13\n[57] Da Costa, Daniel Benevides, and Hong-Chuan Yang. ‘‘Grand\nChallenges\
    \ in Wireless Communications.’’ Frontiers in Com-\nmunications and Networks 1\
    \ (2020): 1.\n[58] Fossati, Francesca, Stefano Moretti, Stephane Rovedakis, and\n\
    Stefano Secci. ‘‘Decentralization of 5G slice resource alloca-\ntion.’’ In NOMS\
    \ 2020–2020 IEEE/IFIP Network Operations and\nManagement Symposium, pp. 1–9. IEEE,\
    \ 2020\n[59] Bulashenko, Andrew, Stepan Piltyay, Alina Polishchuk, and\nOleksandr\
    \ Bulashenko. ‘‘New trafﬁc model of M2M technology\nin 5G wireless sensor networks.’’\
    \ In 2020 IEEE 2nd Interna-\ntional Conference on Advanced Trends in Information\
    \ Theory\n(ATIT), pp. 125–131. IEEE, 2020\n[60] Liu, Mingqian, Ke Yang, Nan Zhao,\
    \ Yunfei Chen, Hao Song,\nand Fengkui Gong. ‘‘Intelligent Signal Classiﬁcation\
    \ in Indus-\ntrial Distributed Wireless Sensor Networks-Based IIoT.’’ IEEE\nTransactions\
    \ on Industrial Informatics (2020).\n[61] Raphael Preindl, KonstantinosNikolopoulos&KonstantiaLitsiou\n\
    (2020) Transformation strategies for the supply chain: the\nimpact of industry\
    \ 4.0 and digital transformation, Supply Chain\nForum:\nAn\nInternational\nJournal,\n\
    21:1,\n26–34,\nDOI:\nhttps://doi.org/10.1080/16258312.2020.1716633\n[62] Aminzoui,\
    \ Abla, and Joacim Knapp. ‘‘Validation and Ranking\nof Challenges in Digital Transformation\
    \ towards Industry 4.0: a\nmulti-case study in Swedish manufacturing SMEs.’’ (2020).\n\
    [63] Culot, Giovanna, Guido Nassimbeni, Guido Orzes, and Marco\nSartor. ‘‘Behind\
    \ the deﬁnition of Industry 4.0: Analysis and open\nquestions.’’ International\
    \ Journal of Production Economics (2020):\n107617\n[64] Tabrizchi, Hamed, and\
    \ MarjanKuchaki Rafsanjani. ‘‘A survey on\nsecurity challenges in cloud computing:\
    \ issues, threats, and solu-\ntions.’’ The journal of supercomputing 76.12 (2020):\
    \ 9493-9532\n[65] Abdul-Hamid, Asma-Qamaliah, Mohd Helmi Ali, Ming-Lang\nTseng,\
    \ Shulin Lan, and Mukesh Kumar. ‘‘Impeding challenges on\nindustry 4.0 in circular\
    \ economy: Palm oil industry in Malaysia.’’\nComputers & Operations Research 123\
    \ (2020): 105052.\n[66] Vuksanovic´ Herceg, Iva, Vukasˇin Kucˇ, Veljko M. Mijusˇkovic´,\
    \ and\nTomislav Herceg. ‘‘Challenges and driving forces for industry 4.0\nimplementation.’’\
    \ Sustainability 12, no. 10 (2020): 4208.\nPublisher’s Note Springer Nature remains\
    \ neutral with regard to\njurisdictional claims in published maps and institutional\
    \ afﬁliations.\n226\nA. Varshney et al.\n123\n"
  inline_citation: '>'
  journal: MĀPAN. Journal of Metrology Society of India
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s12647-021-00453-1.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: Challenges in Sensors Technology for Industry 4.0 for Futuristic Metrological
    Applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1186/s43020-021-00041-3
  analysis: '>'
  authors:
  - Naser El‐Sheimy
  - You Li
  citation_count: 93
  full_citation: '>'
  full_text: ">\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7  \nhttps://doi.org/10.1186/s43020‑021‑00041‑3\n\
    REVIEW\nIndoor navigation: state of the art and future \ntrends\nNaser El‑Sheimy\
    \ and You Li* \nAbstract \nThis paper reviews the state of the art and future\
    \ trends of indoor Positioning, Localization, and Navigation (PLAN). \nIt covers\
    \ the requirements, the main players, sensors, and techniques for indoor PLAN.\
    \ Other than the navigation \nsensors such as Inertial Navigation System (INS)\
    \ and Global Navigation Satellite System (GNSS), the environmental‑\nperception\
    \ sensors such as High‑Definition map (HD map), Light Detection and Ranging (LiDAR),\
    \ camera, the fifth \ngeneration of mobile network communication technology (5G),\
    \ and Internet‑of‑Things (IoT) signals are becoming \nimportant aiding sensors\
    \ for PLAN. The PLAN systems are expected to be more intelligent and robust under\
    \ the emer‑\ngence of more advanced sensors, multi‑platform/multi‑device/multi‑sensor\
    \ information fusion, self‑learning systems, \nand the integration with artificial\
    \ intelligence, 5G, IoT, and edge/fog computing.\nKeywords: Navigation, Indoor\
    \ positioning, Information fusion, Wireless localization, Dead reckoning, Database\
    \ \nmatching\n© The Author(s) 2021. This article is licensed under a Creative\
    \ Commons Attribution 4.0 International License, which permits use, sharing, \n\
    adaptation, distribution and reproduction in any medium or format, as long as\
    \ you give appropriate credit to the original author(s) and \nthe source, provide\
    \ a link to the Creative Commons licence, and indicate if changes were made. The\
    \ images or other third party material \nin this article are included in the article’s\
    \ Creative Commons licence, unless indicated otherwise in a credit line to the\
    \ material. If material \nis not included in the article’s Creative Commons licence\
    \ and your intended use is not permitted by statutory regulation or exceeds the\
    \ \npermitted use, you will need to obtain permission directly from the copyright\
    \ holder. To view a copy of this licence, visit http://creat iveco \nmmons .org/licen\
    \ ses/by/4.0/.\nIntroduction\nThe Positioning, Localization, and Navigation (PLAN)\
    \ \ntechnology has been widely studied and successfully \ncommercialized in many\
    \ applications such as mobile \nphones and unmanned systems. In particular, indoor\
    \ \nPLAN technology is becoming increasingly important \nwith the emergence of\
    \ new chip-level Micro-Electrome-\nchanical System (MEMS) sensors, positioning\
    \ big data, \nand Artificial Intelligence (AI) technology, as well as the \nincrease\
    \ of public interest and social potential.\nThe market value of indoor navigation:\
    \ social benefits \nand economic value\nThe global indoor PLAN market is expected\
    \ to reach $ \n28.2 billion by 2024, growing at a Compound Annual \nGrowth Rate\
    \ (CAGR) of 38.2% (Goldstein 2019). Indoor \nPLAN has attracted the attention\
    \ of not only consumer \ngiants such as Apple and Google but also self-driving\
    \ \nplayers such as Tesla and Nvidia. This is because the \nemerging vehicle applications\
    \ (e.g., autonomous driving \nand connected vehicles) need indoor-PLAN capability.\
    \ \nCompared with traditional vehicles, unmanned vehicles \nface three important\
    \ problems: PLAN, environmen-\ntal perception, and decision-making. A vehicle\
    \ needs to \nPLAN itself into the surrounding environment before \nmaking decisions.\
    \ Therefore, only by solving the indoor \nPLAN can fully autonomous driving and\
    \ location ser-\nvices be achieved.\nSocial benefits Accurate PLAN can serve safety\
    \ and \nmedical applications and benefit special groups such as \nthe elderly,\
    \ children, and the disabled. Meanwhile, PLAN \ntechnology can bring a series\
    \ of location services, such \nas Mobility as a Service (MaaS), which increases\
    \ travel \nconvenience and security, and reduces carbon emission \n(through changing\
    \ owned vehicles to shared ones). Also, \nreliable PLAN technology can reduce\
    \ road accidences, \n94% of which are caused by human errors (Singh 2015).\nEconomic\
    \ values As a demander of indoor PLAN, \nautonomous driving technology is expected\
    \ to reduce \nthe ratio of owned to shared vehicles to 1:1 by 2030 \n(Schönenberger\
    \ 2019). By 2050, autonomous cars will be \nexpected to bring savings of 800 billion\
    \ dollars annually \nOpen Access\nSatellite Navigation\nhttps://satellite‑navigation.springeropen.com/\n\
    *Correspondence:  li29@ucalgary.ca\nDepartment of Geomatics Engineering, University\
    \ of Calgary, 2500 \nUniversity Drive N.W, Calgary, AB T2N 1N4, Canada\nPage 2\
    \ of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \nby reducing congestion,\
    \ accidents, energy consumption, \nand time consumption (Schönenberger 2019).\
    \ The huge \nsocial and economic benefits promote the demand for \nPLAN technology\
    \ facing the autonomous driving and \nmass consumer markets.\nClassification of indoor\
    \ navigation from market \nperspective\nPLAN technology is highly related to market\
    \ demand. \nTable  1 shows the accuracy requirements and costs of \nseveral typical\
    \ indoor PLAN applications.\nIn general, for the applications that require higher\
    \ \naccuracy, the facilities and equipment costs are corre-\nspondingly higher.\
    \ In many scenarios (e.g., the mass-mar-\nket ones), the minimum equipment installation\
    \ cost and \nequipment cost are important factors that limit the scal-\nability\
    \ of PLAN technology.\nIndustry and construction require the PLAN accuracy \n\
    at the centimeter- or even millimeter-level. For example, \nthe accuracy requirements\
    \ for machine guidance and \ndeformation analysis are 1–5  cm and 1–5  mm, respec-\n\
    tively. The corresponding cost is in the $ 10,000 level \n(Schneider 2010).\n\
    Compared with industry and construction, the PLAN \naccuracy requirements for\
    \ autonomous driving are lower. \nHowever, the application scene is much larger\
    \ and has \nmore complex changes; also, the cost is more restrictive. \nSuch factors\
    \ increase the challenge of PLAN in autono-\nmous driving. The Society of Automotive\
    \ Engineers \ndivides autonomous driving into L0 (no automation), L1 \n(driver\
    \ assistance), L2 (partial automation), L3 (condi-\ntional automation, which requires\
    \ drivers to be ready to \ntake over when the vehicle has an emergency alert),\
    \ L4 \n(high automation, which does not require any user inter-\nvention but is\
    \ only limited to specific operational design \ndomains, such as areas with specific\
    \ facilities and High-\nDefinition maps (HD maps), and L5 (fully automation) \n\
    (SAE-International 2016). In most situations, autono-\nmous cars mean L3 and above.\
    \ There is still a certain \ndistance from L5 commercial use (Wolcott and Eustice\
    \ \n2014). An important bottleneck is that PLAN technol-\nogy is difficult to\
    \ meet the requirements in the entire \nenvironment.\nThere are various derivations\
    \ and definitions of the \naccuracy requirement of autonomous driving. Table \
    \ 2 \nlists several of those derivations and definitions.\nTable 1 Accuracy requirements\
    \ and costs of typical indoor PLAN applications\nApplication\nAccuracy requirement\n\
    Cost\nIndustry and construction (Schneider 2010)\nCentimeter‑level to millimeter‑level\n\
    $ 10,000 level\nAutonomous vehicles (Basnayake et al. 2010; \nLevinson and Thrun\
    \ 2010; NHTSA 2017; Reid \net al. 2019; Agency 2019; Stephenson 2016; \nNvidia\
    \ 2020)\nDecimeter‑level to centimeter‑level\n$ 1,000 level to $ 10,000 level\n\
    Indoor mapping (Cadena et al. 2016)\nDecimeter‑level to centimeter‑level\n$ 1,000\
    \ level\nFirst responder (Rantakokko et al. 2010)\nDecimeter‑level in horizontal,\
    \ floor‑level in height\n$ 1,000 level\nPedestrian applications (Dodge 2013)\n\
    Meter‑level in horizontal, floor‑level in height\nUse existing consumer devices;\
    \ infrastruc‑\nture deployment cost of $ 10 level per 100 \n m2‑level area\nCellular\
    \ emergency (FCC 2015)\n80% within 50 m\nUse existing cellular systems\nTable\
    \ 2 Derivations and definitions of accuracy requirement for autonomous driving\n\
    Reference\nAnalysis of accuracy requirement of autonomous cars\nResearch (Basnayake\
    \ et al. 2010)\nWithin 5 m, within 1.5 m, and within 1.0 m for which‑road, which‑lane,\
    \ and where‑in‑lane, respectively, in V2X \napplications\nReport (NHTSA 2017)\n\
    1.5 m (1 sigma, 68%) tentatively for lane‑level information for safety applications\n\
    Research (Reid et al. 2019)\nFor passenger vehicles operating, the bounds of lateral\
    \ and longitudinal position errors are respectively 0.57 m \n(95% probability\
    \ in 0.20 m) and 1.40 m (95% probability in 0.48 m) on freeway roads, and both\
    \ 0.29 m (95% \nprobability in 0.10 m) on local streets\nResearch (Levinson and\
    \ Thrun 2010)\nCentimeter positioning accuracy with Mean Square Error (MSE) within\
    \ 10 cm is sufficiently accurate for public \nroads\nReport (Agency 2019)\nThe\
    \ accuracy of autonomous driving to be within 20 cm in horizontal and within 2\
    \ m in height\nResearch (Stephenson 2016)\nActive vehicle control in Advanced\
    \ Driver Assistance Systems (ADAS) and autonomous driving applications \nrequire\
    \ an accuracy better than 0.1 m\nIndustry (Nvidia 2020)\nThe goal is centimeter‑level\n\
    Page 3 of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \n \nThe research\
    \ work (Basnayake et  al. 2010) shows the \naccuracy requirements in Vehicle-to-Everything\
    \ (V2X) \napplications for which-road (within 5  m), which-lane \n(within 1.5 \
    \ m), and where-in-lane (within 1.0  m). The \nNational Highway Safety Administration\
    \ (NHTSA 2017) \nreports a requirement of 1.5 m (1 sigma, 68% probabil-\nity)\
    \ tentatively for lane-level information for safety appli-\ncations. The research\
    \ work (Reid et al. 2019) derives an \naccuracy requirement based on road geometry\
    \ standards \nand vehicle dimensions. For passenger vehicle operat-\ning, the\
    \ bounds of lateral and longitudinal position errors \nare respectively 0.57 m\
    \ (95% probability in 0.20 m) and \n1.40 m (95% probability in 0.48 m) on freeway\
    \ roads, and \nboth 0.29 m (95% probability in 0.10 m) on local streets. \nIn\
    \ contrast, the research work (Levinson and Thrun \n2010) believes that centimeter\
    \ positioning accuracy (with \na Root Mean Square (RMS) error of within 10 cm)\
    \ is suf-\nficient for public roads, while the report (Agency 2019) \ndefines\
    \ the accuracy for autonomous driving to be within \n20 cm in horizontal and within\
    \ 2 m in height. Meanwhile, \nthe research work (Stephenson 2016) reports that\
    \ active \nvehicle control in ADAS and autonomous driving appli-\ncations require\
    \ an accuracy better than 0.1  m. Beyond \nresearch, the goal for autonomous driving\
    \ is set at the \ncentimeter-level by many autonomous-driving compa-\nnies (e.g.,\
    \ (Nvidia 2020)). To summarize, autonomous \ndriving requires the PLAN accuracy\
    \ at decimeter-level \nto centimeter-level. The current cost is in the order of\
    \ $ \n1000 to $ 10,000 (when using three-Dimensional (3D) \nLight Detection and\
    \ Ranging (LiDAR)).\nFor indoor mapping, the review paper (Cadena et  al. \n2016)\
    \ shows that the accuracy within 10 cm is sufficient \nfor two-Dimensional (2D)\
    \ Simultaneous Localization and \nMapping (SLAM). Indoor mapping is commonly con-\n\
    ducted with a vehicle that moves slower in a smaller area \nwhen compared with\
    \ autonomous driving. The cost of a \nshort-range 2D LiDAR for indoor mapping\
    \ is in the order \nof $ 1000.\nThe research work (Rantakokko et al. 2010) illustrates\
    \ \nthat first responders require indoor PLAN accuracy of \n1 m in horizontal\
    \ and within 2 m in height. The cost for \nfirst responders is at the $ 1,000-level.\n\
    For mass-market applications, it is difficult to find a \nstandard of PLAN accuracy\
    \ requirement. An accepted \naccuracy classification is that 1–5 m is high, 6–10 m\
    \ is \nmoderate, and over 11 m is low (Dodge 2013). The verti-\ncal accuracy requirement\
    \ is commonly on the floor-level. \nFor such applications, it is important to\
    \ use existing con-\nsumer equipment and reduce base station deployment \ncosts.\
    \ On average, the deployment in a 100  m2-level area \ncosts approximately $ 10-level.\
    \ The E-911 cellular emer-\ngency system uses cellular signals and has an accuracy\
    \ \nrequirement of 80% for an error of 50 m (FCC 2015).\nThe cost of indoor PLAN\
    \ applications depends on the \nsensors used. The main sensors and solutions will\
    \ be \nintroduced in the following section.\nMain players of indoor navigation\n\
    Various researchers and manufacturers investigate \nindoor PLAN problems from\
    \ different perspectives.\nTable 3 lists the selected research works that can\
    \ reflect \nthe typical navigation accuracy for different sensors, \nwhile Table 4\
    \ shows the selected players from the indus-\ntrial. The primary sensor, reported\
    \ accuracy, and sensor \ncosts are covered.\nThe actual PLAN performance is related\
    \ to the factors \nsuch as infrastructure deployment (e.g., sensor type and \n\
    deployment density), sensor grade, environment factors \n(e.g., the significance\
    \ of features and area size), and vehi-\ncle dynamics.\nIn general, different\
    \ types of sensors have various prin-\nciples, measurement types, PLAN algorithms,\
    \ perfor-\nmances, and costs. It is important to select the proper \nsensor and\
    \ PLAN solution according to requirements.\nState of the art\nTo achieve an accurate\
    \ and robust PLAN for autonomous \nvehicles, multiple types of sensors and techniques\
    \ are \nrequired. Figure 1 shows part of the PLAN sensors that \nhave been in\
    \ autonomous cars. This section summarizes \nthe state-of-the-art sensors and\
    \ PLAN techniques.\nSensors for indoor navigation\nThe sensors include environmental\
    \ monitoring and \nawareness sensors (e.g., HD map, LiDAR, RAdio Detec-\ntion\
    \ and Ranging (RADAR), camera, WiFi/BLE, 5G, \nand Low-Power Wide-Area Network\
    \ (LPWAN)), and \nthe navigation sensors (e.g., Inertial Navigation Systems \n\
    (INS) and GNSS). The advantages and challenges for \neach sensor are also introduced\
    \ and compared.\nEnvironmental monitoring and awareness sensors (aiding \nsensors\
    \ for navigation system)\nHD maps\nCar-mounted road maps have been successfully\
    \ com-\nmercialized since the beginning of this century. Also, \ncompanies such\
    \ as Google and HERE have launched \nindoor maps for public places. These maps\
    \ contain roads, \nbuildings, and Point-of-Interest (POI) information and \ncommonly\
    \ have meter-level to decimeter-level accuracy. \nThe main purpose of these maps\
    \ is to assist people to \nnavigate and perform location service applications.\
    \ The \nmain approaches for generating these maps are satel-\nlite imagery, land-based\
    \ mobile mapping, and onboard \nGNSS crowdsourcing.\nPage 4 of 23\nEl‑Sheimy and\
    \ Li  Satell Navig             (2021) 2:7 \nTable 3 Research works in indoor PLAN\n\
    Primary sensor\nReported performance in research\nSensor cost\nCamera\n1% level\
    \ to 0.1% level of travel distance when using visual odometry. For \nexample,\
    \ 0.46% when navigating a drone indoors on a 75 m trajectory \n(with DJI A3 flight\
    \ integrated camera and Inertial Measurement Unit (IMU)) \n(Lin et al. 2018);\n\
    Decimeter‑level to centimeter‑level when using image matching. For \nexample,\
    \ lateral and longitudinal location error RMS values of 14.3 cm and \n19.1 cm\
    \ in downtown tests, respectively, and 20.5 cm and 45.4 cm in park‑\ning lot tests\
    \ (with a Point Grey Flea3 camera and a priori 3D point‑cloud \ndatabase) (Wolcott\
    \ and Eustice 2014)\nCameras at $ 100 to $ 10 level;\nLow‑cost IMU at $ 100 to\
    \ $ 10 level\nCamera (infrastructural)\nMeter‑level to decimeter‑level. For example,\
    \ error mean and standard devia‑\ntion values of 0.24 m and 0.19 m, respectively,\
    \ when tracking an object in \nan area of 3 m by 3 m in a parking lot (with AVT\
    \ Prosilica GT 1380 industrial \ncameras) (Ibisch et al. 2015)\nIndustrial cameras\
    \ at $ 1,000 level\nLiDAR\nDecimeter‑level to centimeter‑level. For example, lateral\
    \ and longitudinal \nRMS errors of 0.13 m and 0.16 m, respectively, when using\
    \ 3D point cloud \nmatching (with Velodyne HDL‑32E LiDAR) (Wolcott and Eustice\
    \ 2017)\n2D LiDAR in $1,000 to $100 level; 3D LiDAR in $ 10,000 to $ 1,000 level\n\
    LiDAR (infrastructural)\nMeter‑level to decimeter‑level. For example, mean absolute\
    \ lateral and longi‑\ntudinal errors of 6.3 cm and 8.5 cm, respectively (with\
    \ Sick LMS500 LiDARs) \n(Ibisch et al. 2013)\n2D LiDAR in $1,000 to $100 level;\
    \ 3D LiDAR in $ 10,000 to $ 1,000 level\nHD map\nDecimeter‑level to centimeter‑level.\
    \ For example, lateral and longitudinal \nmean location errors of 14 cm and 26\
    \ cm, respectively (use HD map to \nenhance solution from two BlackFly PGE‑50S5M\
    \ cameras, a Ublox C94‑M8P \nGlobal Navigation Satellite System (GNSS) receiver,\
    \ and a vehicle odom‑\neter) (Poggenhans et al. 2018)\n$ 1,000 level per vehicle\
    \ (without 3D LiDAR); $ 10,000 level per vehicle (with \n3D LiDAR); significant\
    \ extra cost for HD‑map maintenance\nInertial sensors (vehicle)\n1% level of travel\
    \ distance. For example, 1.10% of travel distance in driving of \n800 m (with\
    \  RT30032 IMU) (Brossard et al. 2020)\nLow‑cost IMU at $ 100 to $ 10 level\n\
    Inertial sensors (pedestrian)\n1% level of travel distance. For example, 0.5%\
    \ of travel distance in walking of \n800 m (with 4 InvenSense IMUs on both feet)\
    \ (Niu et al. 2019)\nLow‑cost IMU at $ 100 to $ 10 level\nVisible light\nDecimeter‑level\
    \ to centimeter‑level. For example, an RMS error of 20 cm \n(with 5 OPT101 photodiodes\
    \ in an area of 5 m by 5 m) (Zhuang et al. 2019)\nInfrastructure cost $ 100 level\
    \ per 100  m2‑level area\nUltra‑Wide Band (UWB)/ultrasonic/pseudolite\nDecimeter‑level\
    \ to centimeter‑level. For example, an RMS error within 10 cm \nand 95% within\
    \ 20 m (with 8 UWB anchors in an area of 7 m by 7 m) \n(Tiemann et al. 2015)\n\
    Infrastructure cost $ 100 level per 100  m2‑level area\nWireless Fidelity (WiFi)/Bluetooth\
    \ Low Energy (BLE)\nMete‑level when using Received Signal Strength (RSS). For\
    \ example, 90% \nwithin 3.88 m (with 8 BLE beacons in a 40 m by 60 m area (Zhuang\
    \ et al. \n2016);\nDecimeter‑level to centimeter‑level when using Time‑of‑Arrival\
    \ (ToA), Angle‑\nof‑Arrival (AoA), Channel‑State‑Information (CSI), or Round‑Trip‑Time\
    \ (RTT). \nFor example, a median of 4.17 cm (with 1 WiFi access point in a 6 m\
    \ by 8 m \narea) (Vasisht et al. 2016)\nInfrastructure cost of $ 10 level per\
    \ 100  m2‑level area; extra cost for infrastruc‑\nture modification when using\
    \ ToA, AoA, CSI, or RTT \nThe fifth generation of mobile network communica‑\n\
    tion technology (5G)\n100‑m‑level to centimeter‑level, depending on the density\
    \ of base stations \nand measurement used. For example, centimeter‑level in (Witrisal\
    \ et al. \n2016). Most current 5G PLAN research is based on theoretical analysis\
    \ or \nsimulation data\n$1000 to $ 100 level per base station. Coverage range\
    \ from kilometer‑level to \nwithin 100 m\nPage 5 of 23\nEl‑Sheimy and Li  Satell\
    \ Navig             (2021) 2:7 \n \nIn the past decade, HD maps have received\
    \ extensive \nattention. An important reason is that traditional maps \nare designed\
    \ for people, not machines. Therefore, the \naccuracy of the traditional map cannot\
    \ meet the require-\nments of autonomous driving. Also, the traditional \nmap\
    \ does not contain enough real-time information for \nautonomous driving, which\
    \ requires not only informa-\ntion about the vehicle, but also information about\
    \ exter-\nnal facilities (Seif and Hu 2016). With these features, the \nHD map\
    \ is not only a map but also a \"sensor\" for PLAN \nand environment perception.\
    \ Table 5 compares the tradi-\ntional map and HD map.\nHD map is key to autonomous\
    \ driving. It is generally \naccepted that HD maps require centimeter-level accuracy\
    \ \nand ultra-high (centimeter-level or higher) resolution. \nAccordingly, creating\
    \ HD maps is a challenge. The crea-\ntion and updating of the current HD maps\
    \ are depend-\nent on professional vehicles equipped with high-end \nLiDAR, cameras,\
    \ RADARs, GNSS, and INS. For example, \nBaidu spent 5 days building an HD map\
    \ in a Beijing park \nby using million-dollar-level mapping vehicles (Synced \n\
    2018). Such a generation method is costly; also, it is dif-\nficult to update\
    \ an HD map continuously.\nTo mitigate the updating issue, crowdsourcing based\
    \ \non car-mounted cameras has been researched. This \nmethod can lower the requirement\
    \ of extra data collec-\ntion if the images from millions of cars are used properly.\
    \ \nHowever, this task is extremely challenging. First, it is \ndifficult to obtain\
    \ the PLAN solutions that are accurate \nenough for HD map updating with crowdsource\
    \ data. \nFurthermore, to update the HD map in an area effectively \nwhere changes\
    \ have occurred, there are challenges in \ntransmitting, organizing, and processing\
    \ massive crowd-\nsourced data. For example, one hour of autonomous driv-\ning\
    \ may collect one terabyte of data (Seif and Hu 2016). It \ntakes 230 days to\
    \ transfer one week’s autonomous driving \ndata using WiFi (MachineDesign 2020).\
    \ Thus, dedicated \nonboard computing chips, high-efficiency commu-\nnication,\
    \ and edge computing are needed. Therefore, \ncrowdsourcing HD maps requires cooperation\
    \ from car \nmanufacturers, map manufacturers, 5G manufacturers, \nand terminal\
    \ manufacturers (Abuelsamid 2017).\nLiDAR\nLiDAR systems use laser light waves\
    \ to measure distances \nand generate point clouds (i.e., a set of 3D points).\
    \ The \ndistance is computed by measuring the time of flight of \na light pulse,\
    \ while the direction of a transmitted laser is \ntracked by gyros. By matching\
    \ the measured point cloud \nwith that stored in a database, an object can be\
    \ located.\nLiDAR is an important PLAN sensor on unmanned \nvehicles and robots.\
    \ Figure 2 compares the PLAN-related \nperformance of the camera, LiDAR, and RADAR.\n\
    The main advantages are its high accuracy and data \ndensity. For example, the\
    \ Velodyne HDL-64E LiDAR has \na measurement range of over 120 m, with ranging\
    \ accu-\nracy of 1.5 cm (1 sigma) (Glennie and Lichti 2010). The \nobservation\
    \ can cover 360° horizontally, with up to 2.2 \nmillion points per second (Velodyne\
    \ 2020). Such features \nTable 4 Companies and products in indoor PLAN\nPrimary\
    \ sensor\nCompany\nPerformance\nSensor cost\nCamera\nMobileye\nDecimeter‑level\
    \ to centimeter‑level\n$100 level to $10 level\nCamera (infrastructural)\nVICON\n\
    Centimeter‑level and higher\n$10,000 level to $1,000 level for a specific area\
    \ (e.g., a park‑\ning lot)\nLiDAR\nVelodyne\nDecimeter‑level to centimeter‑level\n\
    $10,000 level to $1,000 level\nLiDAR (infrastructural)\nSICK\nDecimeter‑level\
    \ to centimeter‑level\n$10,000 level for a specific area\nHD map\nHERE\nCentimeter‑level\n\
    Costly. A team of professional cars works for days to create \na regional HD map\n\
    Inertial sensors (vehicle)\nProfound positioning 2% of travel distance\nLow‑cost\
    \ IMU at $ 100 to $ 10 level\nInertial sensors (pedestrian) TDK‑InvenSense\n4–8%\
    \ of distance; 1% of distance \nwith a fixed device\nLow‑cost IMU at $ 100 to\
    \ $ 10 level\nGNSS\nTrimble\nDecimeter‑level to centimeter‑level\n$ 1,000 level\n\
    UWB\nDecawave\nDecimeter‑level\n$ 100 level for a set of anchors that are used\
    \ to cover a \nplace of 100  m2 level\nUltrasonic\nMarvelmind\nDecimeter‑level\n\
    $ 100 level for a set of anchors that are used to cover a \nplace of 100  m2 level\n\
    WiFi/BLE\nCisco\n50% within 5 m and 90% within 10 m Infrastructure deployment\
    \ cost of $ 10 level per 100 \n m2‑level area\n5G\nHuawei\nNo commercial PLAN\
    \ system yet\n$1000 to $ 100 level per base station. Coverage range from \nkilometer‑level\
    \ to within 100 m\nPage 6 of 23\nEl‑Sheimy and Li  Satell Navig             (2021)\
    \ 2:7 \nmake LiDAR a strong candidate in providing high-defini-\ntion surrounding\
    \ environment information.\nThe main challenges of using LiDAR are the high price\
    \ \nand large size. Also, the current LiDAR system has a \nrotation mechanism\
    \ on the top of the carrier, which may \nhave a problem in its life span. Some\
    \ manufacturers try to \nuse solid-state LiDAR to alleviate these problems. Apple\
    \ \nFig. 1 Part of PLAN sensors on an autonomous vehicle\nTable 5 Comparison of traditional\
    \ map and HD map\nTime\nAccuracy\nGeneration method\nChallenge\nTraditional map\
    \ (since 2000)\nMeter‑level to decimeter‑level (Tom‑\nTom 2020; Liu et al. 2020),\
    \ road‑level\nSatellite imagery, land‑based mobile \nmapping, and onboard GNSS\
    \ crowd‑\nsourcing\nNot significant\nHD maps (since 2010)\nCentimeter‑level (Liu\
    \ et al. 2020), \nwhere‑in‑lane level\nA team of professional cars equipped \n\
    with high‑end LiDAR, cameras, GNSS, \nand INS (Synced 2018)\nCrowdsourcing using\
    \ car‑mounted \ncameras (Abuelsamid 2017) (chal‑\nlenging)\nHigh requirements\
    \ on accuracy, reso‑\nlution, and updating rate; high data \nand computational\
    \ loads\nFig. 2 Comparison of camera, LiDAR, and RADAR performance\nPage 7 of\
    \ 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \n \nunveils a new\
    \ iPad Pro with a LiDAR scanner, which may \nbring new directions to indoor PLAN.\n\
    LiDAR measurements are used for PLAN through 2D \nor 3D matching. For example,\
    \ the research works (de \nPaula Veronese et  al. 2016) and (Wolcott and Eustice\
    \ \n2017) match LiDAR measurements with a 2D grid map \nand a 3D point cloud map,\
    \ respectively. The PLAN per-\nformance is generally better when the surrounding\
    \ envi-\nronment features are significant and distinct from other \nplaces; otherwise,\
    \ performance is limited. The LiDAR \nmeasurement performance will not be affected\
    \ by light \nbut may be affected by weather conditions.\nCamera\nCameras are used\
    \ for PLAN and perception by collect-\ning and analyzing images. Compared with\
    \ LiDAR and \nRADAR, the camera has a much lower cost. Also, the \ncamera has\
    \ the advantages such as rich feature informa-\ntion and color information. Also,\
    \ the camera is a passive \nsensing technology, which does not transmit signals\
    \ and \nthus does not have errors on the signal-propagation side. \nMoreover,\
    \ the current 2D computer vision algorithm is \nmore advanced, which has also\
    \ promoted the application \nof cameras.\nSimilar to LiDAR, the camera depends\
    \ on the sig-\nnificance of environmental features. Also, the camera is \nmore\
    \ susceptible to weather and illumination conditions. \nIts performance degrades\
    \ under harsher conditions, such \nas in darkness, rain, fog, and snow. Thus,\
    \ it is important \nto develop camera sensors with self-cleaning, longer \ndynamic\
    \ range, better low light sensitivity, and higher \nnear-infrared sensitivity.\
    \ Furthermore, the amount of raw \ncamera data is large. Multiple cameras on an\
    \ autonomous \nvehicle can generate gigabyte-level raw data every minute \nor\
    \ even every second.\nSome PLAN solutions use cameras, instead of a high-\nend\
    \ LiDAR, to reduce hardware cost. An example is \nTesla’s autopilot system (Tesla\
    \ 2020). This system con-\ntains many cameras, including three forward cameras\
    \ \n(wide, main, and narrow), four side cameras (forward \nand rearward), and\
    \ a rear camera. To assure the PLAN \nperformance in the environments that are\
    \ challenging for \ncameras, RADARs and ultrasonic sensors are used.\nThe two\
    \ main camera-based PLAN approaches are \nvisual odometry/SLAM and image matching.\
    \ For the \nformer, the research work (Mur-Artal and Tardós 2017) \ncan support\
    \ visual SLAM using monocular, stereo, and \nRed–Green–Blue-Depth (RGB-D) cameras.\
    \ For image \nmatching, road markers, signs, poles, and artificial fea-\ntures\
    \ (e.g., Quick Response (QR) codes) can be used. The \nresearch work (Gruyer et al.\
    \ 2016) uses two cameras to \ntake the ground road marker and match it with a\
    \ preci-\nsion road marker map. In contrast, the research works \n(Wolcott and\
    \ Eustice 2014) and (McManus et al. 2013) \nrespectively use images from monocular\
    \ and stereo cam-\neras to match the 3D point cloud map generated by a sur-\n\
    vey vehicle equipped with 3D LiDAR scanners.\nRADAR\nRADAR has also received intensive\
    \ attention in the \nautonomous driving industry. Similar to LiDAR, the \nRADAR\
    \ determines the distance by measuring the \nround-trip time difference of the\
    \ signal. The difference \nis that the RADAR emits radio waves, instead of laser\
    \ \nwaves. Compared with LiDAR, the RADAR generally has \na further measurement\
    \ range. For example, the Bosch \nLRR RADA can reach up to 250 m. Also, the price\
    \ of a \nRADAR system has dropped to the order of $ 1,000 to \n$ 100. Moreover,\
    \ RADAR systems are lightweight, which \nmakes it possible to embed them in cars.\n\
    On the other hand, the density of RADAR measure-\nments is much lower than that\
    \ of LiDARs and cameras. \nTherefore, RADAR is often used for obstacle avoid-\n\
    ance, rather than as the main sensor of PLAN. Similar \nto LiDAR, the measurement\
    \ performance of RADAR \nis not affected by light but may be affected by weather\
    \ \nconditions.\nWiFi/BLE\nWiFi and BLE are the most widely used indoor wireless\
    \ \nPLAN technologies for consumer electronics. The com-\nmonly used observation\
    \ is RSS (Zhuang et al. 2016), and \nthe typical positioning accuracy is at meter-level.\
    \ Also, \nresearchers have extracted high-accuracy measurements, \nsuch as CSI\
    \ (Halperin et  al. 2011), RTT (Ciurana et  al. \n2007), and AoA (Quuppa 2020).\
    \ Such measurements \ncan be used for decimeter-level or even centimeter-level\
    \ \nPLAN.\nA major advantage of WiFi systems is that they can \nuse existing communication\
    \ facilities. In contrast, BLE \nis flexible and convenient to deploy. To meet\
    \ the future \nInternet-of-Things (IoT) and precise localization require-\nments,\
    \ new features have been added to both the latest \nWiFi and BLE technologies.\
    \ Table 6 lists the new WiFi, \nBLE, 5G, and LPWAN features that can enhance PLAN.\
    \ \nWiFi HaLow (WiFi-Alliance 2020) and Bluetooth long \nrange (Bluetooth 5) (Bluetooth\
    \ 2017) are released to \nimprove the signal range, while WiFi RTT (IEEE 802.11\
    \ \nmc) (IEEE 2020) and Bluetooth direction finding (Blue-\ntooth 5.1) (Bluetooth\
    \ 2019) have been released for preci-\nsion positioning.\n5G/LPWAN\n5G has attracted\
    \ intensive attention due to its high speed, \nhigh reliability, and low latency\
    \ in communication. Com-\npared with previous cellular technologies, 5G has defined\
    \ \nPage 8 of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \nthree\
    \ application categories (Restrepo 2020), includ-\ning Ultra-Reliable and Low-Latency\
    \ Communication \n(URLLC) for high-reliability (e.g., 99.999% reliable under \n\
    500 km/h high-speed motion) and low-latency (e.g., mil-\nlisecond-level) scenarios\
    \ (e.g., vehicle networks, indus-\ntrial control, and telemedicine), enhanced\
    \ Mobile Broad \nBand (eMBB) for high-data-rate (e.g., gigabit-per-second-\nlevel,\
    \ with a peak of 10 gigabits-per-second) and strong \nmobility scenarios (e.g.,\
    \ video, augmented reality, virtual \nreality, and remote officing), and massive\
    \ Machine-Type \nCommunication (mMTC) for application scenarios (e.g., \nintelligent\
    \ agriculture, logistics, home, city, and environ-\nment monitoring) that have\
    \ massive nodes which have a \nlow cost, low power consumption, and low data rate.\n\
    5G has strong potential to change the cellular-based \nPLAN. First, the coverage\
    \ range of 5G base stations may \nbe shrunk from kilometers to hundreds of meters\
    \ or \neven within 100  m (Andrews et  al. 2014). The increase \nof base stations\
    \ will enhance the signal geometry and \nmitigate Non-Line-of-Sight (NLoS) conditions.\
    \ Second, \n5G has new features, including mmWave Multiple-Input \nand Multiple-Output\
    \ (MIMO), large-scale antenna, and \nbeamforming. These features make it possible\
    \ to use \nmultipath signals to enhance PLAN (Witrisal et al. 2016). \nThird,\
    \ 5G may introduce device-to-device communi-\ncation (Zhang et  al. 2017a), which\
    \ makes cooperative \nPLAN possible.\nMeanwhile, the newly-emerged IoT signals\
    \ and the \nLow-Power Wide-Area Network (LPWAN, e.g., long-\nrange (LoRa), Narrow\
    \ Band-IoT (NB-IoT), Sigfox, and \nLong Term Evolution for Machines (LTE-M) have\
    \ the \nadvantages such as long-range, low-cost, low-power-\nconsumption, and\
    \ massive connections (Li et al. 2020a). \nFigure 3 demonstrates the communication\
    \ ranges of 5G \nand LPWAN signals, with a comparison with other wire-\nless technologies.\n\
    5G and LPWAN systems provide a possibility for the \nwide-area localization in\
    \ indoor and urban areas. Simi-\nlar to 5G, LPWAN systems no longer require an\
    \ extra \ncommunication module that costs $ 10 level in the cur-\nrent PLAN systems.\
    \ LPWAN signals are compatible with \nmore and more smart home appliances. These\
    \ nodes will \nincrease the deployment density of IoT networks and \nthus enhance\
    \ PLAN performance. Also, it is feasible to \nadd new measurement types (e.g.,\
    \ TDoA (Leugner et al. \n2016) and AoA (Badawy et  al. 2014)) into the 5G and\
    \ \nLPWAN base stations.\nMost of the existing research on 5G and LPWAN based\
    \ \nPLAN is based on theoretical analysis and simulation \ndata because there\
    \ are limited real systems. The stand-\nard for mmWave signal has been late and\
    \ therefore it is \ndifficult to find the hardware for experimenting. The \naccuracy\
    \ ranges from 100-m-level to centimeter-level, \ndepending on the base station\
    \ deployment density and \nthe type of measurement used. The survey paper (Li\
    \ et al. \n2020a) provides a systematic review of 5G and LPWAN \nstandardizations,\
    \ PLAN techniques, error sources, and \nmitigation. In particular, it summarizes\
    \ the PLAN errors \nby end-device-related errors, environment-related errors,\
    \ \nbase-station-related errors, and data-related errors. It is \nimportant to\
    \ mitigate these error sources when using 5G \nand LPWAN signals for PLAN purposes.\n\
    There are indoor PLAN solutions based on other types \nof environmental signals,\
    \ such as the magnetic (Kok and \nSolin 2018), acoustic (Wang et al. 2017), air\
    \ pressure (Li \net al. 2018), visible light (Zhuang et al. 2019), and mass \n\
    flow (Li et al. 2019a).\nNavigation and positioning sensors\nInertial navigation\
    \ system\nAn INS derives motion states by using angular-rate and \nlinear specific-force\
    \ measurements from gyros and accel-\nerometers, respectively. The review paper\
    \ (El-Sheimy and \nYoussef 2020) summarizes the state of the art and future \n\
    trends of inertial sensor technologies. INS is tradition-\nally used in professional\
    \ applications such as military, \naerospace, and mobile surveying. Since the\
    \ 2000s, low-\ncost MEMS-based inertial sensors were introduced into \nthe PLAN\
    \ of land vehicles (El-Sheimy and Niu 2007a, \nb). Since the release of the iPhone\
    \ 4, MEMS-based iner-\ntial sensors have become a standard feature on smart-\n\
    phones and have brought in new applications such as \ngyro-based gaming and pedestrian\
    \ indoor PLAN. Table 7 \ncompares a typical inertial sensor performance in mobile\
    \ \nmapping and mobile phones. Different grades of iner-\ntial sensors have various\
    \ performances and costs. Thus, \nTable 6 New WiFi, BLE, 5G, and LPWAN features\
    \ that can enhance PLAN\nTechnology\nNew feature\nWiFi\nLong range, low power\
    \ consumption in WiFi HaLow (WiFi‑Alliance 2020); high‑precision ranging in WiFi\
    \ RTT (IEEE 802.11 mc) (IEEE 2020)\nBLE\nLong range in BT long range (BT 5) (Bluetooth\
    \ 2017); high‑precision direction finding in Bluetooth 5.1 (Bluetooth 2019)\n\
    5G\nHigher base station density (Andrews et al. 2014), mmWave Multiple‑Input And\
    \ Multiple‑Output (MIMO), large‑scale antenna, and \nbeamforming (Witrisal et\
    \ al. 2016), device‑to‑device communication (Zhang et al. 2017a), new measurement\
    \ types (del Peral‑Rosado \net al. 2017)\nLPWAN\nLow cost, low‑power consumption,\
    \ long range, new measurement types (Li et al. 2020a)\nPage 9 of 23\nEl‑Sheimy and\
    \ Li  Satell Navig             (2021) 2:7 \n \nit is important to select a proper\
    \ type of inertial sensors \naccording to application requirements.\nThe INS can\
    \ provide autonomous PLAN solutions, \nwhich means it does not require the reception\
    \ of exter-\nnal signals or the interaction with external environ-\nments. Such\
    \ a self-contained characteristic makes it a \nstrong candidate to ensure PLAN\
    \ continuity and reli-\nability when the performances of other sensors are \n\
    degraded by environmental factors. An important error \nsource for INS-based PLAN\
    \ is the existence of sen-\nsor errors, which will accumulate and lead to drifts\
    \ in \nPLAN solutions. There are deterministic and stochastic \nsensor errors.\
    \ The impact of deterministic errors (e.g., \nbiases, scale factor errors, and\
    \ deterministic thermal \ndrifts) may be mitigated through calibration or on-\n\
    line estimation (Li et  al. 2015). In contrast, stochas-\ntic sensor errors are\
    \ commonly modeled as stochastic \nprocesses (e.g., white noises, random walk,\
    \ and Gauss-\nian–Markov processes) (Maybeck 1982). The statistical \nparameters\
    \ of stochastic models can be estimated by \nthe methods such as power spectral\
    \ density analysis, \nAllan variance (El-Sheimy et al. 2007), and wavelet vari-\n\
    ance (Radi et al. 2019).\nFig. 3 Signal ranges of 5G, LPWAN, and other wireless\
    \ technologies (Li et al. 2020a)\nTable 7 Typical tactical- and consumer-grade\
    \ inertial sensors\nItems\nTactical-grade (NovAtel 2020), typically used \nin mobile\
    \ mapping\nConsumer-grade (TDK-InvenSense \n2020), typically used in consumer\
    \ \nelectronics\nInitial gyro bias\n0.75 (°)/h\n18,000 (°)/h\nGyro bias over −\
    \ 40 to + 85 °C\nNot given\n108 000 (°)/h\nGyro scale factor error\n0.03%\n3%\n\
    Accelerometer bias\n1 ×  10–3 g\n(g = 9.806 65 m/s2)\n60 ×  10–3 g\nAccelerometer\
    \ bias over − 40 to + 85 °C\nNot given\n180 ×  10–3 g\nAccelerometer scale factor\
    \ error\n0.03%\n3%\nCost\n$ 1,000 level\n$ 10 level\nPage 10 of 23\nEl‑Sheimy and\
    \ Li  Satell Navig             (2021) 2:7 \nGlobal navigation satellite system\
    \ (as an initializer)\nGNSS localizes a receiver using satellite multilateration.\
    \ \nIt is one of the most widely used and most well-com-\nmercialized PLAN technology.\
    \ Standalone GNSS and \nGNSS/INS integration are the mainstream PLAN solu-\ntions\
    \ for outdoor applications. In autonomous driving, \nthe GNSS transfers from the\
    \ primary PLAN sensor to \nthe second core. The main reason is that GNSS signals\
    \ \nmay be degraded in urban and indoor areas. Even so, \nhigh-precision GNSS\
    \ is still important to provide an \ninitial localization to reduce the searching\
    \ space and \ncomputational load of other sensors (e.g., HD map and \nLiDAR) (Levinson\
    \ et al. 2007).\nThe previous boundaries between high-precision pro-\nfessional\
    \ and mass-market GNSS uses are blurring. A \npiece of evidence is the integration\
    \ between high-pre-\ncision GNSS techniques and mass-market chips. Also, \nthe\
    \ latest smartphones are being able to provide high-\nprecision GNSS measurements\
    \ and PLAN solutions.\nTable 8 lists the main GNSS positioning techniques. \n\
    Single Point Positioning (SPP) and Differential-GNSS \n(DGNSS) are based on pseudo-range\
    \ measurements, \nwhile Real-Time Kinematic (RTK), Precise Point Posi-\ntioning\
    \ (PPP), and PPP with Ambiguity Resolution \n(PPP-AR) are based on carrier-phase\
    \ measurements. \nDGNSS and RTK are relative positioning methods \nthat mitigate\
    \ some errors by differencing measure-\nments across the rover and base receivers.\
    \ In contrast, \nPPP and PPP-AR provide precise positioning at a sin-\ngle receiver\
    \ by using precise satellite orbit correction, \nclock correction, and parameter-estimation\
    \ models. \nThey commonly need minutes for convergence (Trim-\nble 2020).\nThere\
    \ are other types of PLAN sensors, such as mag-\nnetometer, odometer, UWB, ultrasonic,\
    \ and pseudolite. \nIn recent years, there appears relatively low-cost UWB \n\
    and ultrasonic sensors (e.g., (Decawave 2020; Marvel-\nmind 2020). Such sensors\
    \ typically can provide a deci-\nmeter-level ranging accuracy within a distance\
    \ of 30 m. \nAlso, Apple has built a UWB module into the iPhone 11, \nwhich may\
    \ bring new opportunities for indoor PLAN. To \nsummarize, Table 9 illustrates\
    \ the principle, advantages, \nand disadvantages of the existing PLAN sensors.\n\
    Techniques and algorithms for indoor navigation\nThe PLAN techniques include position-fixing,\
    \ Dead-\nReckoning (DR), database matching, multi-sensor fusion, \nand motion\
    \ constraints. Figure  4 demonstrates the \nindoor PLAN techniques. The details\
    \ are provided in the \nfollowing subsections.\nPosition-fixing techniques\nGeometrical\
    \ position-fixing methods have been widely \napplied over the past few decades,\
    \ especially in the field \nof satellite positioning and wireless sensor networks.\
    \ The \nbasic principle is the geometric calculation of distance \nand angle measurements.\
    \ By the type of measurement, \nposition-fixing methods include range-based (e.g.,\
    \ multi-\nlateration, min–max, centroid, proximity, and hyperbolic \npositioning),\
    \ angle-based (e.g., multiangulation), and \nangle-and-range-based (e.g., multiangulateration).\
    \ Fig-\nure 5 shows the basic principle of these methods.\nRange‑based methods\n\
    The location of a device can be estimated by measuring \nits distance to at least\
    \ three base stations (or satellites) \nwhose locations are known. The most typical\
    \ method is \nmultilateration (Guvenc and Chong 2009), which is geo-\nmetrically\
    \ the intersection of multiple spheres (for 3D \npositioning) or circles (for\
    \ 2D positioning). Also, the \nmethod has several simplified versions. For example,\
    \ the \nmin–max method (Will et al. 2012) computes the inter-\nsection of multiple\
    \ cubes or squares, while the centroid \nmethod (Pivato et al. 2011) calculates\
    \ the weighted aver-\nage of multiple base station locations. Moreover, the \n\
    proximity method (Bshara et al. 2011) is a further simpli-\nfication by using\
    \ the location of the closest base station. \nMeanwhile, the differences of device-base-station\
    \ ranges \ncan be used to mitigate the influence of device diversity \nand some\
    \ signal-propagation errors (Kaune et al. 2011).\nFor position-fixing, the base\
    \ station location is usually \nset manually or estimated using base-station localization\
    \ \napproaches (Cheng et  al. 2005). The distances between \nthe device and the\
    \ base stations are modeled as Path-Loss \nModels (PLMs) and parameters are estimated\
    \ (Li 2006). \nTo achieve accurate ranging, it is important to mitigate \nthe\
    \ influence of error sources (e.g., ionospheric errors, \nTable 8 GNSS positioning\
    \ techniques\nTechnique\nAccuracy\nMeasurement\nMethods for accuracy improvement\n\
    SPP\nMeter‑level\nPseudo‑range\nNone\nDGNSS\nDecimeter‑level to meter‑level\n\
    Pseudo‑range\nDifferential measurements\nRTK\nCentimeter‑level\nCarrier‑phase\n\
    Differential measurements, ambiguity resolution\nPPP\nDecimeter‑level to centimeter‑level\n\
    Carrier‑phase\nPrecise satellite orbit and clock corrections, float ambiguity\n\
    PPP‑AR\nSimilar to RTK\nCarrier‑phase\nPrecise satellite orbit and clock corrections,\
    \ ambiguity resolution\nPage 11 of 23\nEl‑Sheimy and Li  Satell Navig        \
    \     (2021) 2:7 \n \ntroposphere errors, wall effects, and human body effects).\
    \ \nIn addition, it is necessary to reduce the influence of end-\ndevice factors\
    \ (e.g., device diversity).\nThe research work (Petovello 2003) describes the\
    \ \nrange-based PLAN algorithm and its quality control. \nMeanwhile, the research\
    \ work (Langley 1999) proposes \nan index (i.e., the dilution of precision) for\
    \ the evaluation \nof signal geometry. A strong geometry is a necessary con-\n\
    dition, instead of a necessary and sufficient condition, for \naccurate range-based\
    \ localization because there are other \nerror sources, such as the stochastic\
    \ ones.\nAngle‑based methods\nTriangulation, a typical AoA based PLAN method,\
    \ com-\nputes the device location by using the direction meas-\nurements to multiple\
    \ base stations that have known \nlocations (Bai et al. 2008). When direction\
    \ measurement \nuncertainty is considered, the direction measurement \nfrom two\
    \ base stations will intersect to a quadrilateral. \nThe research work (Wang and\
    \ Ho 2015) provides a theo-\nretical derivation and performance analysis of the\
    \ trian-\ngulation method.\nAngle-based PLAN solution can typically provide high\
    \ \naccuracy (e.g., decimeter-level) in a small area (e.g., 30 m \nby 30 m) (Quuppa\
    \ 2020). The challenge is that AoA sys-\ntems require specific hardware (e.g.,\
    \ an array of antennae \nand a phase-detection mechanism) (Badawy et al. 2014),\
    \ \nwhich is complex and costly. There are low-cost angle-\nbased solutions such\
    \ as that use RSS measurements from \nmultiple directional antennae (Li et al.\
    \ 2020b). However, \nfor wide-area applications, both the angle measurement \n\
    and PLAN accuracy are significantly degraded. The Blue-\ntooth 5.1 (Bluetooth\
    \ 2019) has added the direction meas-\nurement, which may change the angle-based\
    \ PLAN.\nAngle‑and‑range‑based methods\nMultiangulateration, a typical angle-and-range-based\
    \ \nPLAN method, calculate the device location by using its \nTable 9 Principle,\
    \ advantages, and disadvantages of PLAN sensors\nSensor\nPrinciple\nAdvantage\n\
    Disadvantage\nHD map\nUse detailed road and infrastructure data \nfor precise\
    \ localization and environment \nperception\nHigh accuracy\nHigh resolution\n\
    Rich environment and infrastructure layers\nHigh requirement on update and accuracy\n\
    High accuracy requirement\nCostly in generation and maintenance\nLiDAR\nUse infrared\
    \ light waves to measure dis‑\ntances and generate point clouds\nHigh ranging\
    \ accuracy\nDense point cloud\nBeing used in consumer devices\nHigh cost\nLarge\
    \ size\nThe problem in the life span\nDependency on the significance of features\n\
    Camera\nCollect and analyze images for localization \nand perception purposes\n\
    Low cost\nDense point clouds with colors\nPassive sensing\nSensitivity to illumination\
    \ and weather\nDependency on the significance of features\nRADAR\nUse radio waves\
    \ for ranging and object \ndetection\nLow cost\nAccurate ranging\nSmall size,\
    \ being used in cars\nLow measurement density\nCannot detect markers\nWiFi/BLE\n\
    Use local communication signals for \nlocalization\nExisting infrastructure\n\
    Supported by consumer devices\nLow accuracy by RSS\nHigh power consumption in\
    \ WiFi\nProblems inherent to wireless signals (e.g., \nmultipath, NLoS, and variation)\n\
    5G\nUse next‑generation cellular signal for \nlocalization\nExisting infrastructure\n\
    Supported by consumer devices\nNew features, such as miniaturized base \nstation\
    \ and mmWave MIMO\nLow accuracy by RSS\nProblems inherent to wireless signals\n\
    Current base station density is low\nLPWAN\nUse IoT signals for localization\n\
    Supported by IoT devices\nLow cost\nLow power consumption\nLong range\nLow accuracy\
    \ by RSS\nProblems inherent to wireless signals\nINS\nMeasure angular rates and\
    \ linear specific \nforces to derive motion states\nSelf‑contained\nRobust in\
    \ the short term\nOff‑the‑shelf sensors in consumer devices\nFull motion states\n\
    Relative navigation solution\nHigh cost for high‑end sensors\nSignificant errors\
    \ for low‑cost sensors\nGNSS\nLocalize device using satellite trilateration\n\
    Global absolute position fixing\nHigh precision when converged (with \nRTK/PPP)\n\
    Supported by consumer devices\nSignal degradation in urban and indoor \nregions\n\
    Prone to jam and spoof\nRelatively weak in attitude determination\nUWB/ultrasonic\n\
    Precise localization through precise rang‑\ning\nHigh‑precision ranging\nCost\
    \ is reducing, being used in consumer \ndevices\nRequire extra infrastructure\n\
    Problems inherent to wireless signals\nPage 12 of 23\nEl‑Sheimy and Li  Satell\
    \ Navig             (2021) 2:7 \nrelative direction and distance to a base station\
    \ that has \na known position. This approach is widely used in engi-\nneering\
    \ surveying. For indoor PLAN, a solution is to \nlocalize a device by its direction\
    \ to a ceiling-installed AoA \nbase station (Quuppa 2020) and known ceiling height.\
    \ \nThis approach is reliable, and it reduces the dependence \non the number of\
    \ base stations. However, the cost is high \nwhen using in wide-area applications.\n\
    In general, geometrical position-fixing methods are \nsuitable for the environments\
    \ (e.g., outdoors and open \nindoors) that can be well modeled and parameterized.\
    \ \nBy contrast, it is more challenging to use such methods \nin complex indoor\
    \ and urban areas due to the existence \nof error sources such as multipath, NLoS\
    \ conditions, \nand human-body effects. The survey paper (Li et  al. \n2020a)\
    \ has a detailed description of the error sources \nfor position-fixing methods.\
    \ It is difficult to alleviate \nthe device-, signal-propagation-, and base-station-\n\
    related error sources by the position-fixing technique \nitself. Thus, it is common\
    \ to integrate with other PLAN \ntechniques, such as DR and database matching.\n\
    Fig. 4 Techniques for indoor navigation\nFig. 5 Principle of position‑fixing methods\n\
    Page 13 of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \n \nDead-reckoning\
    \ techniques\nThe basic principle of DR technology is to derive the cur-\nrent\
    \ navigation state by using the previous navigation \nstate and the angular and\
    \ linear movements. The angu-\nlar and linear movements can be obtained by using\
    \ the \nmeasurements of sensors such as inertial sensors, cam-\neras, magnetometers,\
    \ and odometers. Among them, \ninertial sensors are most widely used for DR. There\
    \ are \ntwo main DR algorithms based on inertial sensors: INS \nmechanization\
    \ and PDR. The former is widely used in \nland-vehicle, airborne, and shipborne\
    \ PLAN applica-\ntions, while the latter is a common method for pedestrian \n\
    navigation. Figure 6 shows the flow of the INS mechani-\nzation and PDR algorithms.\
    \ INS can provide 3D naviga-\ntion results, while PDR is a 2D navigation method.\n\
    The INS mechanization works on the integration of \n3D angular rates and linear\
    \ accelerations (Titterton et al. \n2004). The gyro-measured angular rates are\
    \ used to \ncontinuously track the 3D attitude between the sensor \nframe and\
    \ the navigation frame. The obtained attitude \nis then utilized to transform\
    \ the accelerometer-meas-\nured specific forces to the navigation frame. Afterward,\
    \ \nthe gravity vector is added to the specific force to obtain \nthe acceleration\
    \ of the device in the navigation frame. \nFinally, the acceleration is integrated\
    \ once and twice \nto determine the 3D velocity and position, respectively. \n\
    Therefore, the residual gyro and accelerometer biases in \ngeneral cause position\
    \ errors proportional to time cubed \nand time squared, respectively.\nIn contrast,\
    \ the PDR algorithm (Li et al. 2017) deter-\nmines the current 2D position by\
    \ using the previous \nposition and the latest heading and step length. Thus,\
    \ it \nconsists of platform-heading estimation, step detection, \nand step-length\
    \ estimation. The platform heading is usu-\nally calculated by adding the device-platform\
    \ misalign-\nment (Pei et al. 2018) into the device heading, which can \nbe tracked\
    \ by an Attitude and Heading Reference System \n(AHRS) algorithm (Li et al. 2015).\
    \ The steps are detected \nby finding periodical characteristics in accelerometer\
    \ and \ngyro measurements (Alvarez et al. 2006), while the step \nlength is commonly\
    \ estimated by training a model that \ncontains walking-related parameters (e.g.,\
    \ leg length and \nwalking frequency) (Shin et al. 2007).\nThere are DR algorithms\
    \ based on other types of sen-\nsors, such as visual odometry (Scaramuzza and\
    \ Fraun-\ndorfer 2011) and wheel odometry (Brunker et al. 2018). \nMagnetometers\
    \ (Gebre-Egziabher et  al. 2006) are also \nused for heading determination.\n\
    To achieve a robust long-term DR solution, there are \nseveral challenges, including\
    \ the existence of sensor \nerrors (Li et al. 2015), the existence of the misalignment\
    \ \nangle between device and platform (Pei et al. 2018), and \nthe requirement\
    \ for position and heading initialization. \nAlso, the continuity of data is very\
    \ important for DR. In \nsome applications, it is necessary to interpolate, smooth,\
    \ \nor reconstruct the data (Kim et al. 2016).\nDR has become a core technique\
    \ for continuous and \nseamless indoor/outdoor PLAN due to its self-contained\
    \ \ncharacteristics and robust short-term solutions. It is \nstrong in either\
    \ complementing other PLAN techniques \nwhen they are available or bridging their\
    \ signal outages \nand performance-degradation periods.\nDatabase-matching techniques\n\
    The principle for database matching is to compute the \ndifference between the\
    \ measured fingerprints and the \nreference fingerprints in the database and find\
    \ the closest \nmatch (Li et  al. 2020a). Database-matching techniques \nare used\
    \ to process data from various sensors, such as \ncameras, LiDAR, wireless sensors,\
    \ and magnetometers. \nThe database-matching process consists of the steps of\
    \ \nfeature extraction, database learning, and prediction. \nFigure 7 demonstrates\
    \ the processes. First, valuable fea-\ntures are extracted from raw sensor signals.\
    \ Afterward, \nfeatures at multiple reference points are combined to \nFig. 6\
    \ Diagram of INS mechanization and PDR algorithms\nFig. 7 Diagram of database\
    \ matching process\nPage 14 of 23\nEl‑Sheimy and Li  Satell Navig            \
    \ (2021) 2:7 \ngenerate a database. Finally, the real-time measured fea-\ntures\
    \ are compared with those in the database to localize \nthe device.\nAccording\
    \ to the dimensions of measurements and the \ndatabase, database-matching algorithms\
    \ can be divided \ninto the 1D (measurement)-to-2D (database) matching, \nthe\
    \ 2D-to-2D matching, the 2D-to-3D matching, and the \n3D-to-3D matching. In the\
    \ 1D-to-2D matching, the real-\ntime feature measurement can be expressed as a\
    \ vector, \nwhile the database is a matrix. Such a matching approach \nhas been\
    \ used to match features such as wireless RSS \n(Li et  al. 2017) and magnetic\
    \ intensity (Li et  al. 2018). \nExamples of the 2D-to-2D matching are the matching\
    \ \nof real-time image features (e.g., road markers) and an \nimage feature database\
    \ (e.g., a road marker map) (Gruyer \net al. 2016), and the matching of 2D LiDAR\
    \ points and \na grid map (de Paula Veronese et al. 2016). By contrast, \nthe\
    \ 2D-to-3D matching is a current hot spot. For exam-\nple, it matches images to\
    \ a 3D point cloud map (Wolcott \nand Eustice 2014). Finally, an example of the\
    \ 3D-to-3D \nmatching is the matching of 3D LiDAR measurements \nand a 3D point\
    \ cloud map (Wolcott and Eustice 2017).\nAccording to the prediction algorithm,\
    \ database-\nmatching algorithms can be divided into the determinis-\ntic (e.g.,\
    \ nearest neighbors (Lim et al. 2006) and Iterative \nClosest Point (ICP) (Chetverikov\
    \ et  al. 2002)) and sto-\nchastic (e.g., Gaussian distribution (Haeberlen et \
    \ al. \n2004), Normal Distribution Transform (NDT) (Biber and \nStraßer 2003),\
    \ histogram (Rusu et al. 2008), and machine-\nlearning-based) ones. Machine learning\
    \ methods, such \nas Artificial Neural Network (ANN) (Li et  al. 2019b), \nrandom\
    \ forests (Guo et  al. 2018), Deep Reinforcement \nLearning (DRL) (Li et  al.\
    \ 2019c), and Gaussian Process \n(GP) (Hähnel and Fox 2006), have also been applied.\n\
    With the rapid development of machine-learning tech-\nniques and the diversity\
    \ in modern PLAN applications, \ndatabase matching has been attracted even more\
    \ atten-\ntion than geometrical methods. The database matching \nmethods are suitable\
    \ for scenarios that are difficult to \nmodel or parameterize. On the other hand,\
    \ the inconsist-\nency between real-time measurement and the database is \nthe\
    \ main error source in database matching. Such incon-\nsistency may be caused\
    \ by the existence of new environ-\nments and varying environments and other factors.\
    \ The \nsurvey paper (Li et al. 2020a) has a detailed description of \nthe error\
    \ sources for database matching.\nMulti-sensor fusion\nThe diversity and redundancy\
    \ of sensors are essential to \nensure a high level of robustness and safety of\
    \ the PLAN \nsystem. This is because various sensors have different \nfunctionalities.\
    \ In addition to their primary functional-\nity, each sensor has at least one\
    \ secondary functionality \nto assist the PLAN of other sensors. Table 10 shows\
    \ the \nprimary and second functionality of different sensors in \nterms of PLAN.\n\
    Due to their various functionalities, different sensors \nprovide different human-like\
    \ senses. Table 11 lists PLAN \nsensors corresponding to different senses of the\
    \ human \nbody. The same type of human-like sensors can provide a \nbackup or\
    \ augmentation to one another. Meanwhile, the \ndifferent types of human-like\
    \ sensors are complementary. \nThus, by fusing data from a diversity of sensors,\
    \ extra \nrobustness and safety can be achieved.\nTable 10 Primary and secondary\
    \ functionality of various sensors in terms of PLAN\nSensor\nPrimary functionality\n\
    Secondary functionality\nHD map\nPrecise localization and environment perception\n\
    Constrain localization solutions through map matching\nLiDAR\nPrecise point‑cloud‑based\
    \ localization\nProvide environment models and constraints\nCamera\nProvide visual\
    \ odometry and visual SLAM, or match \nimages with a database\nProvide environment\
    \ models and constraints\nRADAR\nRanging and object detection\nEnhance cameras\
    \ under challenging illumination conditions\nINS\nProvide continuous self‑contained\
    \ position, velocity, \nand attitude\nBridge outages of other sensors, and aid\
    \ signal acquisition of other sensors\nMagnetometer\nProvide absolute heading\n\
    Provide position through magnetic matching\nOdometer\nProvide absolute velocity\
    \ and relative distance\nConstrain the drift of INS errors, and bridge GNSS and\
    \ vision signal outages\nPressure\nProvide absolute height\nIdentify the floor\
    \ level and constrain the drift of INS altitude errors\nGNSS\nProvide absolute\
    \ position, velocity and time\nHelp initialization for DR and database matching\n\
    UWB\nProvide absolute position\nProvide augmentation to GNSS and INS in indoor\
    \ and urban areas\nUltrasonic\nProvide absolute position\nEnhance navigation under\
    \ challenging weather conditions\nVisible light\nProvide absolute position\nReliable\
    \ landmark updates for DR\nWiFi/BLE\nProvide absolute position\nHelp initialization\
    \ for INS and database matching\n5G\nProvide absolute position\nModel multipath\
    \ environment\nPage 15 of 23\nEl‑Sheimy and Li  Satell Navig             (2021)\
    \ 2:7 \n \nTo be specific, for position-fixing and database-match-\ning methods,\
    \ the loss of signals or features lead to out-\nages in the PLAN solution. Also,\
    \ changes in the model \nand database parameters may degrade the PLAN per-\nformance.\
    \ To mitigate these issues, DR techniques can \nbe used (El-Sheimy and Niu 2007a,\
    \ b). Moreover, the use \nof other techniques can enhance position-fixing through\
    \ \nmore advanced base station position estimation (Cheng \net  al. 2005), propagation-model\
    \ estimation (Seco and \nJiménez 2017), and device diversity calibration (He et al.\
    \ \n2018). Also, the number of base stations required can be \nreduced (Li et \
    \ al. 2020b). On the other hand, position-\nfixing and database-matching techniques\
    \ can provide \ninitialization and periodical updates for DR (Shin 2005), \nwhich\
    \ in turn calibrate sensors and suppress the drift of \nDR results.\nDatabase\
    \ matching can also be enhanced by other tech-\nniques. For example, the position-fixing\
    \ method can be \nused to reduce the searching space of database-match-\ning (Zhang\
    \ et al. 2017b), predict the database in unvis-\nited areas (Li et al. 2019d),\
    \ and predict the uncertainty \nof database-matching results (Li et  al. 2019e).\
    \ Also, a \nmore robust PLAN solution may be achieved by integrat-\ning position-fixing\
    \ and database-matching techniques \n(Kodippili and Dias 2010).\nFrom the perspective\
    \ of integration mode, there are \nthree levels of integration. The first level\
    \ is loosely cou-\npling (Shin 2005), which fuses PLAN solutions from dif-\nferent\
    \ sensors. The second level is tightly-coupling (Gao \net al. 2020), which fuses\
    \ various sensor measurements to \nobtain a PLAN solution. The third level is\
    \ ultra-tightly-\ncoupling, which using the data or results from some sen-\nsors\
    \ to enhance the performance of other sensors.\nMotion constraints\nMotion constraints\
    \ are used to enhance PLAN solu-\ntions from the perspective of algorithms, instead\
    \ of add-\ning extra sensors. Such constraints are especially useful \nfor low-cost\
    \ PLAN systems that are not affordable for \nextra hardware costs. For land-based\
    \ vehicles, the Non-\nHolonomic Constraints (NHC) can improve the head-\ning and\
    \ position accuracy significantly when the vehicle \nmoves with enough speed (Niu\
    \ et  al. 2010), while the \nZero velocity UPdaTe (ZUPT) and Zero Angular Rate\
    \ \nUpdate (ZARU, also known as Zero Integrate Head-\ning Rate (ZIHR)) respectively\
    \ provide zero-velocity and \nzero-angular-rate constraints when the vehicle is\
    \ quasi-\nstatic (Shin 2005). When the vehicle moves at low speed, \na steering\
    \ constraint can be applied (Niu et  al. 2010). \nMoreover, there are other constraints\
    \ such as the height \nconstraint (Godha and Cannon 2007) and the four-wheel \n\
    constraint (Brunker et al. 2018).\nFor pedestrian navigation, ZUPT (Foxlin 2005)\
    \ and \nZARU (Li et al. 2015) are most commonly used. Also, the \nNHC and step\
    \ velocity constraint (Zhuang et  al. 2015) \nhave been applied. Furthermore,\
    \ in indoor environments, \nconstraints such as the corridor-direction constraint\
    \ \n(Abdulrahim et al. 2010), the height constraint (Abdulra-\nhim et al. 2012),\
    \ and the human-activity constraint (Zhou \net al. 2015) are useful to enhance\
    \ the PLAN solution.\nUse cases\nMulti-sensor-based indoor navigation has been\
    \ utilized \nin various applications, such as pedestrians, vehicles, \nrobots,\
    \ animals, and sports. This chapter introduces \nsome examples. Three of our previous\
    \ cases on indoor \nnavigation are demonstrated. The used vehicle platforms \n\
    include smartphones, drones, and robots.\nSmartphones\nThis case uses an enhanced\
    \ information-fusion struc-\nture to improve smartphone navigation (Li et al.\
    \ 2017). \nThe experiment uses the built-in inertial sensors, WiFi, \nand magnetometers\
    \ of smartphones. By combining the \nadvantages of PDR, WiFi database matching,\
    \ and mag-\nnetic matching, a multi-level quality-control mechanism \nis introduced.\
    \ Some quality controls are presented based \non the interaction of sensors. For\
    \ example, wireless posi-\ntioning results are used to limit the search scope\
    \ for mag-\nnetic matching, to reduce both computational load and \nmismatch rate.\n\
    The user carried a mobile phone and navigated in a \nmodern office building (120 \
    \ m by 60  m) for nearly an \nhour. The smartphone has experienced multiple motion\
    \ \nmodes, including handheld horizontally, dangling with \nhand, making a call,\
    \ and in a trouser pocket.\nThe position results are demonstrated in Fig. 8. When\
    \ \ndirectly fusing the data from PDR, WiFi, and magnetic \nin a Kalman filter,\
    \ the results suffer from large posi-\ntion errors. The ratio of large position\
    \ errors (greater \nthan 15  m) reached 33.4%. Such a solution is not reli-\n\
    able enough for user navigation. By using the improved \nTable 11 PLAN sensors\
    \ corresponding to different senses \nof the human body\nHuman sensing\nSmartphone\n\
    Vehicle\nEyes\nCamera\nCamera, LiDAR\nEars\nGNSS, WiFi, BLE, UWB \n(new), 5G (future),\
    \ \nmicrophone\nGNSS, RADAR, ultrasonic, \nUWB, 5G (future), \nmicrophone\nMoving\
    \ direction\nGyro, magnetometer\nGyro, magnetometer\nMoving distance\nAccelerometer\n\
    Odometer, accelerometer\nMemory\nMap\nHD map, map\nDecision making\nProcessor,\
    \ algorithm\nProcessor, algorithm\nPage 16 of 23\nEl‑Sheimy and Li  Satell Navig\
    \             (2021) 2:7 \nmulti-source fusion, the ratio of large errors was\
    \ reduced \nto 0.8%. This use case indicates the importance of sensor \ninteraction\
    \ and robust multi-sensor fusion.\nDrones\nThis use case integrated a low-cost\
    \ IMU, a barometer, \na mass-flow sensor, and ultrasonic sensors for indoor \n\
    drone navigation (Li et al. 2019a). The forward velocity \nfrom the mass flow\
    \ sensor and the lateral and vertical \nNHC can be utilized for 3D velocity updates.\n\
    Figure  9 shows the test scenario and selected results. \nIndoor flight tests\
    \ were conducted in a 20  m by 20  m \narea with a quadrotor drone, which was\
    \ equipped with \nan InvenSense MPU6000 IMU, a Honeywell HMC 5983 \nmagnetometer\
    \ triad, a TE MS5611 barometer, a Sen-\nsirion SFM3000 mass-flow sensor, and a\
    \ Marvelmind \nultrasonic beacon. Additionally, four ultrasonic beacons \nwere\
    \ installed on four static leveling pillars, with a height \nof 4 m.\nWhen ultrasonic\
    \ ranges were used, the system \nachieved a continuous and smooth navigation solution,\
    \ \nwith an approximate navigation accuracy of a centim-\neter to decimeter level.\
    \ However, during ultrasonic sig-\nnal outages, the accuracy was degraded to 0.2,\
    \ 0.6, 1.0, \n1.3, 1.8, and 4.3 m in the mean value when navigating \nfor 5, 10,\
    \ 15, 20, 30, and 60 s, respectively.\nRobots\nThis use case integrated a photodiode\
    \ and a cam-\nera indoor robot navigation (Zhuang et al. 2019). Fig-\nure 10 shows\
    \ the test platform and selected results. The \nsize of the test area was 5  m\
    \ by 5  m by 2.84  m, with \nfive CREE T6 Light-Emitting-Diodes (LEDs) mounted\
    \ \nevenly on the ceiling as light beacons. The receiver used \nin the experiments\
    \ contained an OPT101 photodiode \nand a front camera of a smartphone. The receiver\
    \ was \nmounted on a mobile robot at a height of 1.25 m.\nField test results showed\
    \ that the proposed system \nprovided a semi-real-time positioning solution with\
    \ an \naverage 3D positioning accuracy of 15.6 cm in dynamic \ntests. The accuracy\
    \ is expected to be further improved \nwhen more sensors are used.\nFig. 8 Inertial/\
    \ WiFi/ magnetic integrated smartphone navigation results (modified on the results\
    \ reported in Li et al. (2017))\nPage 17 of 23\nEl‑Sheimy and Li  Satell Navig\
    \             (2021) 2:7 \n \nFuture trends\nThis section summarizes the future\
    \ trends for indoor \nPLAN, including the improvement of sensors, the use of \n\
    multi-platform, multi-device, and multi-sensor informa-\ntion fusion, the development\
    \ of self-learning algorithms \nand systems, the integration with 5G/ IoT/ edge\
    \ comput-\ning, and the use of HD maps for indoor PLAN.\nImprovement of sensors\n\
    Table  12 illustrates the future trends of sensors in \nterms of PLAN. Sensors\
    \ such as LiDAR, RADAR, iner-\ntial sensors, GNSS, and UWB are being developed\
    \ \nin the direction of low-cost and small-sized to facili-\ntate their commercialization.\
    \ For HD maps, reducing \nmaintenance costs and increasing update frequency is\
    \ \nkey. The camera may further increase its physical per-\nformance such as self-cleaning,\
    \ larger dynamic range, \nstronger low-light sensitivity, and stronger near-infra-\n\
    red sensitivity.\nIt is expected that the introduction of new wireless \ninfrastructure\
    \ features (e.g., 5G, LPWAN, WiFi HALow, \nWiFi RTT, Bluetooth long range, and\
    \ Bluetooth direc-\ntion finding) and new sensors (e.g., UWB, LiDAR, \ndepth camera,\
    \ and high-precision GNSS) in consumer \ndevices will bring in new directions\
    \ and opportunities \nfor the PLAN society.\nFig. 9 INS/Barometer/Mass‑flow/Ultrasonic\
    \ integrated navigation (modified on the results reported in Li et al. (2019a))\n\
    Page 18 of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \nMulti-platform,\
    \ multi-device, and multi-sensor information \nfusion\nThe PLAN system will develop\
    \ towards the integration of \nmultiple platforms, multiple devices, and multiple\
    \ sen-\nsors. Figure 11 shows a schematic diagram of the multi-\nple-platform\
    \ integrated PLAN.\nWith the development of low-cost miniaturized satel-\nlites\
    \ and Low Earth Orbit (LEO) satellite technologies, \nusing LEO satellites to\
    \ provide space-based navigation \nsignal has become feasible. The research paper\
    \ (Cluzel \net al. 2018) uses LEO satellites to enhance the coverage \nof IoT\
    \ signals. Also, the paper (Wang et al. 2018) analyzes \nthe navigation signals\
    \ from LEO satellites. In addition to \nthe space-borne platform, there are airborne\
    \ and under-\nground PLAN platforms. For example, the research paper \n(Sallouha\
    \ et  al. 2018) uses unmanned aerial vehicles as \nbase stations to enhance PLAN.\n\
    Collaborative PLAN is also a future direction. The \nresearch in (Zhang et al.\
    \ 2017a) has reviewed 5G coop-\nerative localization techniques and pointed out\
    \ that \ncooperative localization can be an important feature for \n5G networks.\
    \ In the coming years, the characteristics \nof massive devices, dense base stations,\
    \ and device-to-\ndevice communication may make accurate cooperative \nlocalization\
    \ possible. In addition to multiple devices, \nthere may be multiple devices (e.g.,\
    \ smartphones, smart-\nwatches, and IoT devices) on the same human body or \n\
    vehicle. The information from such devices can also be \nused to enhance PLAN.\n\
    Self-learning algorithms and systems\nArtificial intelligence\nWith the popularization\
    \ of IoT and location-based ser-\nvices, more complex and new PLAN scenarios will\
    \ \nappear. If this is the case, self-learning PLAN algorithms \nand systems are\
    \ needed. There are already research \nworks that use artificial intelligence\
    \ techniques in various \nPLAN modules, such as initialization, the switch of\
    \ sen-\nsor integration mode, and the tuning of parameters. The \nresearch paper\
    \ (Chen et al. 2020) uses ANN to generate \nFig. 10 Photodiode/Camera integrated\
    \ navigation (modified on the results reported in Zhuang et al. (2019))\nPage\
    \ 19 of 23\nEl‑Sheimy and Li  Satell Navig             (2021) 2:7 \n \nPLAN solution\
    \ directly from inertial sensor data, while \nthe research work (Li et al. 2019c)\
    \ uses DRL to perform \nwireless positioning from another perspective. In the\
    \ \nfuture, there will be a massive amount of data, which \nmeets the requirement\
    \ of artificial intelligence. Mean-\nwhile, with the further development of artificial\
    \ intelli-\ngence algorithms, computing power, and communication \nTable 12 Future\
    \ trends of PLAN sensors\nSensor\nFuture trend\nHD map\nReduced maintenance cost\
    \ (e.g., through crowdsourcing)\nImproved update frequency\nLiDAR\nLower cost\
    \ and smaller size\nLonger range\nCamera\nImproved physical performance (e.g.,\
    \ self‑cleaning, improved dynamic \nrange, stronger low‑light sensitivity, and\
    \ stronger near‑infrared \nsensitivity)\nRADAR\nReduced cost\nImproved measurement\
    \ density\nWiFi/BLE\nLonger range, lower power consumption\nNew range and direction\
    \ measurements\n5G\nDenser and more miniaturized base station\nMultipath‑assisted\
    \ localization; cooperative localization\nNew range and direction measurements\n\
    LPWAN\nHigher base station density\nNew range and direction measurements\nINS\n\
    Lower sensor errors\nGNSS\nMulti‑frequency and multi‑system\nSmaller size and\
    \ power consumption\nUWB/Ultrasonic\nReduced cost\nLonger range of low‑cost systems\n\
    Fig. 11 Schematic diagram of multiple‑platform integrated PLAN\nPage 20 of 23\n\
    El‑Sheimy and Li  Satell Navig             (2021) 2:7 \ncapabilities, the integration\
    \ between PLAN and artificial \nintelligence will become tighter.\nData crowdsourcing\
    \ (e.g., co-location)\nThe data from numerous consumer electronics and sen-\n\
    sor networks will make crowdsourcing (e.g., co-location) \na reality. As mentioned\
    \ in the HD map subsection, the \ncrowdsourcing technique may fundamentally change\
    \ \nthe mode of map and HD map generation. Furthermore, \nusing crowdsourced data\
    \ can enhance PLAN perfor-\nmance. For example, the crowdsourced data contains\
    \ \nmore comprehensive information than an ego-only car in \nteams of map availability\
    \ and sensing range. On the other \nhand, as pointed out in (Li et  al. 2019e),\
    \ how to select \nthe most valuable data from the crowdsourced big data \nto update\
    \ the database is still a challenge. It is difficult to \nevaluate the reliability\
    \ of data automatically by the soft-\nware in the absence of manual intervention\
    \ and lack of \nevaluation reference.\nIntegration with 5G, IoT, and edge/fog\
    \ computing\nAs described in the 5G subsection, the development of \n5G and IoT\
    \ technologies are changing PLAN. The new \nfeatures (e.g., dense miniaturized\
    \ base stations, mm-\nwave MIMO, and device-to-device communication) \ncan directly\
    \ enhance PLAN. Also, the combination of \n5G/IoT and edge/fog computing will\
    \ bring new PLAN \nopportunities. Edge/fog computing allows data process-\ning\
    \ as close to the source as possible, enables PLAN data \nprocessing with faster\
    \ speed, reduces latency, and gives \noverall better outcomes. The review papers\
    \ (Oteafy and \nHassanein 2018) and (Shi et  al. 2016) provide detailed \noverviews\
    \ of edge computing and fog computing, respec-\ntively. Such techniques may be\
    \ able to change the exist-\ning operation mode on HD maps and for PLAN. It may\
    \ \nbecome possible to online repair or optimize HD maps \nby using SLAM and artificial\
    \ intelligence technologies.\nHD maps for indoor navigation\nHD maps will be extended\
    \ from outdoors to indoors. The \ncooperation among the manufacturers of cars,\
    \ maps, 5G, \nand consumer devices have already shown its importance \n(Abuelsamid\
    \ 2017). The high accuracy and rich informa-\ntion of the HD map make it a valuable\
    \ indoor PLAN sen-\nsor and even a platform that links people, vehicles, and \n\
    the environment. Indoor and outdoor PLAN may need \ndifferent HD map elements.\
    \ Therefore, different HD \nmaps may be developed according to different scenarios.\
    \ \nSimilar to outdoors, the standardization of indoor HD \nmaps will be important\
    \ but challenging.\nConclusion\nThis article first reviews the market value, including\
    \ the \nsocial benefits and economic values, of indoor navi-\ngation, followed\
    \ by the classification from the marker \nperspective and the main players. Then,\
    \ it compares \nthe state-of-the-art sensors, including navigation sen-\nsors\
    \ and environmental-perception (as aiding sensors \nfor navigation), and techniques,\
    \ including position-fix-\ning, dead-reckoning, database matching, multi-sensor\
    \ \nfusion, and motion constraints. Finally, it points out \nseveral future trends,\
    \ including the improvement of \nsensors, the use of multi-platform, multi-device,\
    \ and \nmulti-sensor information fusion, the development of \nself-learning algorithms\
    \ and systems, the integration \nwith 5G/IoT/edge computing, and the use of HD\
    \ maps \nfor indoor PLAN.\nAuthors’ contributions\nNE devised the article structure\
    \ and general contents and structure and \nwriting parts of the manuscript. YL\
    \ assisted in summarizing and writing the \nmanuscript. Both authors have read\
    \ and approved the final manuscript.\nAuthors’ information\nNaser El‑Sheimy is\
    \ a Professor at the Department of Geomatics Engineering, \nthe University of\
    \ Calgary. He is a Fellow of the Canadian Academy of Engineer‑\ning and the US\
    \ Institute of Navigation and a Tier‑I Canada Research Chair in \nGeomatics Multi‑sensor\
    \ Systems. His research expertise includes Geomatics \nmulti‑sensor systems, GPS/INS\
    \ integration, and mobile mapping systems. He \nis also the founder and CEO of\
    \ Profound Positioning Inc. He published two \nbooks, 6 book chapters, and over\
    \ 450 papers in academic journals, conference \nand workshop proceedings, in which\
    \ he has received over 30 paper awards. \nHe supervised and graduated over 60\
    \ Masters and Ph.D. students. He is the \nrecipient of many national and international\
    \ awards including the ASTech \n“Leadership in Alberta Technology” Award, and\
    \ the Association of Professional \nEngineers, Geologists, and Geophysicists of\
    \ Alberta (APEGGA) Educational \nExcellence Award.\nYou Li is a Senior Researcher\
    \ at the University of Calgary. He received Ph.D. \ndegrees from both Wuhan University\
    \ and the University of Calgary in 2016 \nand was selected for the national young\
    \ talented project in 2020. His research \nfocuses on ubiquitous internet‑of‑things\
    \ localization. He has hosted/partici‑\npated in four national research projects,\
    \ and co‑published over 70 academic \npapers, and has over 20 patents pending.\
    \ He serves as an Associate Editor for \nthe IEEE Sensors Journal, a committee\
    \ member at the IAG unmanned naviga‑\ntion system and ISPRS mobile mapping working\
    \ groups. He has won four \nbest paper awards and a winner in the EvAAL international\
    \ indoor localization \ncompetition.\nFunding\nThis work was supported by Canada\
    \ Research Chairs programs (Grant No. \nRT691875).\nAvailability of data and materials\n\
    Data sharing is not applicable to this article as no datasets were generated or\
    \ \nanalyzed in this review article.\nCompeting interests\nThe authors declare\
    \ that they have no competing interests.\nReceived: 3 November 2020   Accepted:\
    \ 9 February 2021\nPage 21 of 23\nEl‑Sheimy and Li  Satell Navig             (2021)\
    \ 2:7 \n \nReferences\nAbdulrahim, K., Hide, C., Moore, T., & Hill, C. (2010).\
    \ Aiding MEMS IMU with \nbuilding heading for indoor pedestrian navigation. In\
    \ 2010 ubiquitous \npositioning indoor navigation and location based service.\
    \ Helsinki: IEEE.\nAbdulrahim, K., Hide, C., Moore, T., & Hill, C. (2012). Using\
    \ constraints for \nshoe mounted indoor pedestrian navigation. Journal of Navigation,\
    \ \n65(1), 15–28.\nAbuelsamid, S. (2017). BMW, HERE and mobileye team up to crowd‑source\
    \ \nHD maps for self‑driving. https ://www.forbe s.com/sites /samab uelsa \nmid/2017/02/21/bmw‑here‑and‑mobil\
    \ eye‑team‑up‑to‑crowd ‑sourc \ne‑hd‑maps‑for‑self‑drivi ng/#6f04e 0577c b3. Accessed\
    \ April 28, 2020.\nAgency, E. G. (2019). Report on road user needs and requirements.\
    \ https \n://www.gsc‑europ a.eu/sites /defau lt/files /sites /all/files /Repor\
    \ t_on_\nUser_Needs _and_Requi remen ts_Road.pdf. Accessed April 28, 2020.\nAlvarez,\
    \ D., González, R. C., López, A., & Alvarez, J. C. (2006). Comparison \nof step\
    \ length estimators from weareable accelerometer devices. \nAnnual international\
    \ conference of the IEEE engineering in medicine and \nbiology (pp. 5964–5967).\
    \ IEEE: New York.\nAndrews, J. G., Buzzi, S., Choi, W., Hanly, S. V., Lozano,\
    \ A., Soong, A. C. K., & \nZhang, J. C. (2014). What will 5G be? IEEE Journal\
    \ on Selected Areas in \nCommunications, 32(6), 1065–1082.\nBadawy, A., Khattab,\
    \ T., Trinchero, D., Fouly, T. E., & Mohamed, A. (2014). A \nsimple AoA estimation\
    \ scheme. arXiv:1409.5744.\nBai, L., Peng, C. Y., & Biswas, S. (2008). Association\
    \ of DOA estimation from \ntwo ULAs. IEEE Transactions on Instrumentation and\
    \ Measurement, \n57(6), 1094–1101. https ://doi.org/10.1109/TIM.2007.91512 2.\n\
    Basnayake, C., Williams, T., Alves, P., & Lachapelle, G. J. G. W. (2010). Can\
    \ GNSS \nDrive V2X? GPS World, 21(10), 35–43.\nBiber, P., & Straßer, W. (2003).\
    \ The normal distributions transform: A new \napproach to laser scan matching.\
    \ Proceedings 2003 IEEE/RSJ international \nconference on intelligent robots and\
    \ systems (IROS) (pp. 2743–2748). IEEE: \nLas Vegas, NV.\nBluetooth. (2017). Exploring\
    \ Bluetooth 5—going the distance. https ://www.\nbluet ooth.com/blog/explo ring‑bluet\
    \ ooth‑5‑going ‑the‑dista nce/. \nAccessed April 28, 2020.\nBluetooth. (2019).\
    \ Bluetooth 5.1 Direction finding. https ://www.bluet ooth.\ncom/wp‑conte nt/uploa\
    \ ds/2019/05/BTAsi a/1145‑NORDI C‑Bluet ooth‑\nAsia‑2019B lueto oth‑5.1‑Direc\
    \ tion‑Findi ng‑Theor y‑and‑Pract ice‑v0.pdf. \nAccessed April 28, 2020.\nBrossard,\
    \ M., Barrau, A., & Bonnabel, S. (2020). AI‑IMU dead‑reckoning. \nIEEE Transactions\
    \ on Intelligent Vehicles, 5(4), 585–595. https ://doi.\norg/10.1109/TIV.2020.29807\
    \ 58.\nBrunker, A., Wohlgemuth, T., Frey, M., & Gauterin, F. (2018). Odometry\
    \ 2.0: A \nslip‑adaptive EIF‑based four‑wheel‑odometry model for parking. IEEE\
    \ \nTransactions on Intelligent Vehicles, 4(1), 114–126.\nBshara, M., Orguner,\
    \ U., Gustafsson, F., & Van Biesen, L. (2011). Robust tracking \nin cellular networks\
    \ using HMM filters and cell‑ID measurements. IEEE \nTransactions on Vehicular\
    \ Technology, 60(3), 1016–1024.\nCadena, C., Carlone, L., Carrillo, H., Latif,\
    \ Y., Scaramuzza, D., Neira, J., et al. (2016). \nPast, present, and future of\
    \ simultaneous localization and mapping: \nToward the robust‑perception age. IEEE\
    \ Transactions on Robotics, 32(6), \n1309–1332.\nChen, C., Zhao, P., Lu, C. X.,\
    \ Wang, W., Markham, A., & Trigoni, A. (2020). Deep‑\nlearning‑based pedestrian\
    \ inertial navigation: Methods, data set, and \non‑device inference. IEEE Internet\
    \ of Things Journal, 7(5), 4431–4441.\nCheng, Y. C., Chawathe, Y., Lamarca, A.,\
    \ & Krumm, J. (2005). Accuracy charac‑\nterization for metropolitan‑scale Wi‑Fi\
    \ localization. In Proceedings of the \n3rd international conference on mobile\
    \ systems, applications, and services, \nMobiSys 2005 (pp. 233–245). Seattle,\
    \ WA: IEEE.\nChetverikov, D., Svirko, D., Stepanov, D., & Krsek, P. (2002). The\
    \ trimmed iterative \nclosest point algorithm. Object recognition supported by\
    \ user interaction \nfor service robots (pp. 545–548). IEEE: Quebec City, QC.\n\
    Ciurana, M., Barcelo‑Arroyo, F., & Izquierdo, F. (2007). A ranging system with\
    \ \nIEEE 802.11 data frames. In 2007 IEEE radio and wireless symposium (pp. \n\
    133–136). Long Beach, CA: IEEE.\nCluzel, S., Franck, L., Radzik, J., Cazalens,\
    \ S., Dervin, M., Baudoin, C., & Drago‑\nmirescu, D. (2018). 3GPP NB‑IOT coverage\
    \ extension using LEO satel‑\nlites. IEEE Vehicular Technology Conference (pp.\
    \ 1–5). IEEE: Porto.\nde Paula Veronese, L., Guivant, J., Cheein, F. A. A., Oliveira‑Santos,\
    \ T., Mutz, F., de \nAguiar, E., et al. (2016). A light‑weight yet accurate localization\
    \ system \nfor autonomous cars in large‑scale and complex environments. 2016 \n\
    IEEE 19th international conference on intelligent transportation systems \n(ITSC)\
    \ (pp. 520–525). IEEE: Rio de Janeiro.\nDecawave. (2020). DWM1000 Module. https\
    \ ://www.decaw ave.com/produ ct/\ndwm10 00‑modul e/. Accessed April 28, 2020.\n\
    del Peral‑Rosado, J. A., Raulefs, R., López‑Salcedo, J. A., & Seco‑Granados, G.\
    \ \n(2017). Survey of cellular mobile radio localization methods: From 1G to \n\
    5G. IEEE Communications Surveys and Tutorials, 20(2), 1124–1148.\nDodge, D. (2013).\
    \ Indoor Location startups innovating Indoor Positioning. \nhttps ://dondo dge.typep\
    \ ad.com/the_next_big_thing /2013/06/indoo \nr‑locat ion‑start ups‑innov ating\
    \ ‑indoo r‑posit ionin g.html. Accessed April \n28, 2020.\nEl‑Sheimy, N., & Niu,\
    \ X. (2007a). The promise of MEMS to the navigation com‑\nmunity. Inside GNSS,\
    \ 2(2), 46–56.\nEl‑Sheimy, N., & Niu, X. (2007b). The promise of MEMS to the navigation\
    \ com‑\nmunity. Inside GNSS, 2(2), 26–56.\nEl‑Sheimy, N., Hou, H., & Niu, X. (2007).\
    \ Analysis and modeling of inertial \nsensors using Allan variance. IEEE Transactions\
    \ on Instrumentation and \nMeasurement, 57(1), 140–149.\nEl‑Sheimy, N., & Youssef,\
    \ A. (2020). Inertial sensors technologies for navigation \napplications: State\
    \ of the art and future trends. Satellite Navigation, 1(1), \n2.\nFCC. (2015).\
    \ FCC 15–9. https ://ecfsa pi.fcc.gov/file/60001 02592 5.pdf. Accessed \n28 April\
    \ 2020.\nFoxlin, E. (2005). Pedestrian tracking with shoe‑mounted inertial sensors.\
    \ IEEE \nComputer Graphics and Applications, 25(6), 38–46.\nGao, Z., Ge, M., Li,\
    \ Y., Pan, Y., Chen, Q., & Zhang, H. (2020). Modeling of multi‑\nsensor tightly\
    \ aided BDS triple‑frequency precise point positioning and \ninitial assessments.\
    \ Information Fusion, 55, 184–198.\nGebre‑Egziabher, D., Elkaim, G. H., David\
    \ Powell, J., & Parkinson, B. W. (2006). \nCalibration of strapdown magnetometers\
    \ in magnetic field domain. \nJournal of Aerospace Engineering, 19(2), 87–102.\n\
    Glennie, C., & Lichti, D. D. J. R. S. (2010). Static calibration and analysis\
    \ of the \nVelodyne HDL‑64E S2 for high accuracy mobile scanning. Remote Sens-\n\
    ing, 2(6), 1610–1624.\nGodha, S., & Cannon, M. E. (2007). GPS/MEMS INS integrated\
    \ system for naviga‑\ntion in urban areas. GPS Solutions, 11(3), 193–203.\nGoldstein.\
    \ (2019). Global Indoor Positioning and Indoor Navigation (IPIN) \nMarket Outlook,\
    \ 2024. https ://www.golds teinr esear ch.com/repor t/\ngloba l‑indoo r‑posit\
    \ ionin g‑and‑indoo r‑navig ation ‑ipin‑marke t‑outlo \nok‑2024‑globa l‑oppor\
    \ tunit y‑and‑deman d‑analy sis‑marke t‑forec ast‑\n2016‑2024. Accessed April\
    \ 28, 2020.\nGruyer, D., Belaroussi, R., & Revilloud, M. (2016). Accurate lateral\
    \ position‑\ning from map data and road marking detection. Expert Systems with\
    \ \nApplications, 43, 1–8.\nGuo, X., Ansari, N., Li, L., & Li, H. (2018). Indoor\
    \ localization by fusing a group \nof fingerprints based on random forests. IEEE\
    \ Internet of Things Journal, \n5(6), 4686–4698.\nGuvenc, I., & Chong, C. C. (2009).\
    \ A survey on TOA based wireless localization \nand NLOS mitigation techniques.\
    \ IEEE Communications Surveys and \nTutorials, 11(3), 107–124.\nHaeberlen, A.,\
    \ Flannery, E., Ladd, A. M., Rudys, A., Wallach, D. S., & Kavraki, L.E. \n(2004).\
    \ Practical robust localization over large‑scale 802.11 wireless \nnetworks. In\
    \ Proceedings of the 10th annual international conference on \nMobile computing\
    \ and networking (pp. 70–84). Philadelphia, PA: IEEE.\nHähnel, B. F. D., & Fox,\
    \ D. (2006). Gaussian processes for signal strength‑based \nlocation estimation.\
    \ In Proceeding of robotics: Science and systems. \nPhiladelphia, PA: IEEE.\n\
    Halperin, D., Hu, W., Sheth, A., & Wetherall, D. (2011). Tool release: Gathering\
    \ \n802.11 n traces with channel state information. ACM SIGCOMM Com-\nputer Communication\
    \ Review, 41(1), 53–53.\nHe, S., Chan, S. H. G., Yu, L., & Liu, N. (2018). SLAC:\
    \ Calibration‑free pedometer‑\nfingerprint fusion for indoor localization. IEEE\
    \ Transactions on Mobile \nComputing, 17(5), 1176–1189.\nIbisch, A., Stümper,\
    \ S., Altinger, H., Neuhausen, M., Tschentscher, M., Schlipsing, \nM., Salinen,\
    \ J., & Knoll, A. (2013). Towards autonomous driving in a \nparking garage: Vehicle\
    \ localization and tracking using environment‑\nembedded lidar sensors. In 2013\
    \ IEEE intelligent vehicles symposium (IV) \n(pp. 829–834). Gold Coast: IEEE.\n\
    Ibisch, A., Houben, S., Michael, M., Kesten, R., & Schuller, F. (2015). Arbitrary\
    \ \nobject localization and tracking via multiple‑camera surveillance \nsystem\
    \ embedded in a parking garage. In Video surveillance and \nPage 22 of 23\nEl‑Sheimy and\
    \ Li  Satell Navig             (2021) 2:7 \ntransportation imaging applications\
    \ 2015 (pp. 94070G). San Francisco, \nCA: International Society for Optics and\
    \ Photonics.\nIEEE. (2020). IEEE 802.11TM Wireless Local Area Network. http://www.ieee8\
    \ \n02.org/11/. Accessed 28 April 2020.\nKaune, R., Hörst, J., & Koch, W. (2011).\
    \ Accuracy analysis for TDOA localization in \nsensor networks. 14th international\
    \ conference on information fusion (pp. \n1–8). IEEE: Chicago, Illinois, USA.\n\
    Kim, K. J., Agrawal, V., Gaunaurd, I., Gailey, R. S., & Bennett, C. L. (2016).\
    \ Missing \nsample recovery for wireless inertial sensor‑based human movement\
    \ \nacquisition. IEEE Transactions on Neural Systems and Rehabilitation Engi-\n\
    neering, 24(11), 1191–1198. https ://doi.org/10.1109/TNSRE .2016.25321 \n21.\n\
    Kodippili, N. S., & Dias, D. (2010). Integration of fingerprinting and trilateration\
    \ \ntechniques for improved indoor localization. In 2010 7th international \n\
    conference on wireless and optical communications networks. Colombo: \nIEEE.\n\
    Kok, M., & Solin, A. (2018). Scalable magnetic field SLAM in 3D using Gaussian\
    \ \nprocess maps. 2018 21st international conference on information fusion \n\
    (FUSION) (pp. 1353–1360). IEEE: Cambridge.\nLangley, R. B. (1999). Dilution of\
    \ precision. GPS World, 1(1), 1–5.\nLeugner, S., Pelka, M., & Hellbrück, H. (2016).\
    \ Comparison of wired and wireless \nsynchronization with clock drift compensation\
    \ suited for U‑TDoA locali‑\nzation. 2016 13th workshop on positioning, navigation\
    \ and communica-\ntions (WPNC) (pp. 1–4). IEEE: Bremen.\nLevinson, J., Montemerlo,\
    \ M., & Thrun, S. (2007). Map‑based precision vehicle \nlocalization in urban\
    \ environments. In Robotics: Science and systems (pp. \n1). Atlanta, GA: IEEE.\n\
    Levinson, J., & Thrun, S. (2010). Robust vehicle localization in urban environ‑\n\
    ments using probabilistic maps. 2010 IEEE international conference on \nrobotics\
    \ and automation (pp. 4372–4378). IEEE: Anchorage, AK.\nLi, X. (2006). RSS‑based\
    \ location estimation with unknown pathloss model. \nIEEE Transactions on Wireless\
    \ Communications, 5(12), 3626–3633. https ://\ndoi.org/10.1109/TWC.2006.25698\
    \ 5.\nLi, Y., Georgy, J., Niu, X., Li, Q., & El‑Sheimy, N. (2015). Autonomous\
    \ calibration of \nMEMS gyros in consumer portable devices. IEEE Sensors Journal,\
    \ 15(7), \n4062–4072.\nLi, Y., Zhuang, Y., Zhang, P., Lan, H., Niu, X., & El‑Sheimy,\
    \ N. (2017). An improved \ninertial/wifi/magnetic fusion structure for indoor\
    \ navigation. Informa-\ntion Fusion, 34, 101–119.\nLi, Y., Gao, Z., He, Z., Zhang,\
    \ P., Chen, R., & El‑Sheimy, N. (2018). Multi‑sensor \nmulti‑floor 3D localization\
    \ with robust floor detection. IEEE Access, 6, \n76689–76699.\nLi, Y., Zahran,\
    \ S., Zhuang, Y., Gao, Z. Z., Luo, Y. R., He, Z., et al. (2019a). IMU/mag‑\nnetometer/barometer/mass‑flow\
    \ sensor integrated indoor quadrotor \nUAV localization with robust velocity updates.\
    \ Remote Sensing, 11(7), \n838. https ://doi.org/10.3390/rs110 70838 .\nLi, Y.,\
    \ Gao, Z. Z., He, Z., Zhuang, Y., Radi, A., Chen, R. Z., & El‑Sheimy, N. (2019b).\
    \ \nWireless fingerprinting uncertainty prediction based on machine learn‑\ning.\
    \ Sensors, 19(2), 324.\nLi, Y., Hu, X., Zhuang, Y., Gao, Z., Zhang, P., & El‑Sheimy,\
    \ N. (2019c). Deep \nReinforcement Learning (DRL): another perspective for unsupervised\
    \ \nwireless localization. IEEE Internet of Things Journal.\nLi, Y., He, Z., Zhuang,\
    \ Y., Gao, Z. Z., Tsai, G. J., & Pei, L. (2019d). Robust localiza‑\ntion through\
    \ integration of crowdsourcing and machine learning. In \nPresented at the International\
    \ conference on mobile mapping technology. \nShenzhen, China.\nLi, Y., He, Z.,\
    \ Gao, Z., Zhuang, Y., Shi, C., & El‑Sheimy, N. (2019). Toward robust \ncrowdsourcing‑based\
    \ localization: A fingerprinting accuracy indicator \nenhanced wireless/magnetic/inertial\
    \ integration approach. IEEE Internet \nof Things Journal, 6(2), 3585–3600.\n\
    Li, Y., Zhuang, Y., Hu, X., Gao, Z. Z., Hu, J., Chen, L., He, Z., Pei, L., Chen,\
    \ K. J., Wang, \nM. S., Niu, X. J., Chen, R. Z., Thompson, J., Ghannouchi, F.,\
    \ & El‑Sheimy, \nN. (2020a). Location‑Enabled IoT (LE‑IoT): A survey of positioning\
    \ tech‑\nniques, error sources, and mitigation. IEEE Internet of Things Journal.\n\
    Li, Y., Yan, K. L., He, Z., Li, Y. Q., Gao, Z. Z., Pei, L., et al. (2020). Cost‑effective\
    \ locali‑\nzation using RSS from single wireless access point. IEEE Transactions\
    \ \non Instrumentation and Measurement, 69(5), 1860–1870. https ://doi.\norg/10.1109/TIM.2019.29227\
    \ 52.\nLim, H., Kung, L. C., Hou, J. C., & Luo, H. (2006). Zero‑configuration,\
    \ robust \nindoor localization: Theory and experimentation. In Proceedings IEEE\
    \ \nINFOCOM 2006. 25TH IEEE international conference on computer com-\nmunications.\
    \ Barcelona: IEEE.\nLin, Y., Gao, F., Qin, T., Gao, W. L., Liu, T. B., Wu, W.,\
    \ et al. (2018). Autonomous \naerial navigation using monocular visual‑inertial\
    \ fusion. Journal of Field \nRobotics, 35(1), 23–51.\nLiu, R., Wang, J., & Zhang,\
    \ B. (2020). High definition map for automated driving: \nOverview and analysis.\
    \ The Journal of Navigation, 73(2), 324–341.\nMachineDesign. (2020). 5G’s Important\
    \ Role in Autonomous Car Technol‑\nogy. https ://www.machi nedes ign.com/mecha\
    \ nical ‑motio n‑syste ms/\nartic le/21837 614/5gs‑impor tant‑role‑in‑auton omous\
    \ ‑car‑techn ology . \nAccessed April 28, 2020.\nMarvelmind. (2020). Indoor Navigation\
    \ System Operating manual. https ://\nmarve lmind .com/pics/marve lmind _navig\
    \ ation _syste m_manua l.pdf. \nAccessed April 28, 2020.\nMaybeck, P. S. (1982).\
    \ Stochastic models, estimation, and control. London: \nAcademic Press.\nMcManus,\
    \ C., Churchill, W., Napier, A., Davis, B., & Newman, P. (2013). Distraction \n\
    suppression for vision‑based pose estimation at city scales. 2013 IEEE \ninternational\
    \ conference on robotics and automation (pp. 3762–3769). \nIEEE: Karlsruhe.\n\
    Mur‑Artal, R., & Tardós, J. D. (2017). Orb‑slam2: An open‑source slam system for\
    \ \nmonocular, stereo, and RGB‑d cameras. IEEE Transactions on Robotics, \n33(5),\
    \ 1255–1262.\nNHTSA. (2017). Federal motor vehicle safety standards; V2V communications.\
    \ \nFederal Register, 82(8), 3854–4019.\nNiu, X., Zhang, H., Chiang, K. W., &\
    \ El‑Sheimy, N. (2010). Using land‑vehicle \nsteering constraint to improve the\
    \ heading estimation of mems GPS/\nins georeferencing systems. ISPRS - International\
    \ Archives of the Photo-\ngrammetry, Remote Sensing Spatial Information Sciences,\
    \ 38(1), 1–5.\nNiu, X., Li, Y., Kuang, J., & Zhang, P. (2019). Data fusion of\
    \ dual foot‑mounted \nIMU for pedestrian navigation. IEEE Sensors Journal, 19(12),\
    \ 4577–4584.\nNovAtel, H. (2020). IMU‑FSAS. https ://docs.novat el.com/OEM7/Conte\
    \ nt/Techn \nical_Specs _IMU/FSAS_Overv iew.htm. Accessed 28 April 2020.\nNvidia.\
    \ (2020). DRIVE Labs: How Localization Helps Vehicles Find Their Way. \nhttps\
    \ ://news.devel oper.nvidi a.com/drive ‑labs‑how‑local izati on‑helps \n‑vehic\
    \ les‑find‑their ‑way/. Accessed April 28, 2020.\nOteafy, S. M. A., & Hassanein,\
    \ H. S. (2018). IoT in the fog: A roadmap for \ndata‑centric IoT development.\
    \ IEEE Communications Magazine, 56(3), \n157–163.\nPei, L., Liu, D., Zou, D.,\
    \ Leefookchoy, R., Chen, Y., & He, Z. (2018). Optimal \nheading estimation based\
    \ multidimensional particle filter for pedes‑\ntrian indoor positioning. IEEE\
    \ Access, 6, 49705–49720. https ://doi.\norg/10.1109/ACCES S.2018.28687 92.\n\
    Petovello, M. (2003). Real-time integration of a tactical-grade IMU and GPS for\
    \ \nhigh-accuracy positioning and navigation. Calgary: University of Calgary.\n\
    Pivato, P., Palopoli, L., & Petri, D. (2011). Accuracy of RSS‑based centroid \n\
    localization algorithms in an indoor environment. IEEE Transactions on \nInstrumentation\
    \ and Measurement, 60(10), 3451–3460.\nPoggenhans, F., Salscheider, N. O., & Stiller,\
    \ C. (2018). Precise localization in \nhigh‑definition road maps for urban regions.\
    \ 2018 IEEE/RSJ international \nconference on intelligent robots and systems (IROS)\
    \ (pp. 2167–2174). IEEE: \nMadrid.\nQuuppa. (2020). Product and Technology. http://quupp\
    \ a.com/techn ology /. \nAccessed 28 April 2020.\nRadi, A., Bakalli, G., Guerrier,\
    \ S., El‑Sheimy, N., Sesay, A. B., & Molinari, R. (2019). \nA multisignal wavelet\
    \ variance‑based framework for inertial sensor \nstochastic error modeling. IEEE\
    \ Transactions on Instrumentation and \nMeasurement, 68(12), 4924–4936.\nRantakokko,\
    \ J., Händel, P., Fredholm, M., & Marsten‑Eklöf, F. (2010). User require‑\nments\
    \ for localization and tracking technology: A survey of mission‑\nspecific needs\
    \ and constraints. 2010 international conference on indoor \npositioning and indoor\
    \ navigation (pp. 1–9). IEEE: Zurich.\nReid, T. G. R., Houts, S. E., Cammarata,\
    \ R., Mills, G., Agarwal, S., Vora, A., & \nPandey, G. (2019). Localization requirements\
    \ for autonomous vehicles. \narXiv:1906.01061.\nRestrepo, J. (2020). World radio\
    \ 5G roadmap: challenges and opportunities \nahead. https ://www.itu.int/en/ITU‑R/semin\
    \ ars/rrs/RRS‑17‑Ameri cas/\nDocum ents/Forum /1_ITU%20Joa quin%20Res trepo .pdf.\
    \ Accessed April \n28, 2020.\nPage 23 of 23\nEl‑Sheimy and Li  Satell Navig  \
    \           (2021) 2:7 \n \nRusu, R. B., Blodow, N., Marton, Z. C., & Beetz, M.\
    \ (2008). Aligning point cloud \nviews using persistent feature histograms. 2008\
    \ IEEE/RSJ international \nconference on intelligent robots and systems (pp. 3384–3391).\
    \ IEEE: Nice.\nSAE‑International. (2016). Taxonomy and definitions for terms related\
    \ to driv‑\ning automation systems for on‑road motor vehicles. https ://www.sae.\n\
    org/stand ards/conte nt/j3016 _20160 9/. Accessed April 28, 2020.\nSallouha, H.,\
    \ Azari, M. M., Chiumento, A., & Pollin, S. (2018). Aerial anchors posi‑\ntioning\
    \ for reliable RSS‑based outdoor localization in urban environ‑\nments. IEEE Wireless\
    \ Communications Letters, 7(3), 376–379.\nScaramuzza, D., & Fraundorfer, F. (2011).\
    \ Visual odometry [tutorial]. IEEE Robotics \nand Automation Magazine, 18(4),\
    \ 80–92.\nSchneider, O. (2010). Requirements for positioning and navigation in\
    \ under‑\nground constructions. International conference on indoor positioning\
    \ and \nindoor navigation (pp. 1–4). IEEE: Zurich.\nSchönenberger. (2019). The\
    \ automotive digital transformation and the eco‑\nnomic impacts of existing data\
    \ access model. https ://www.fiare gion1 \n.com/wp‑conte nt/uploa ds/2019/03/The‑Autom\
    \ otive ‑Digit al‑Trans \nforma tion_Full‑study .pdf. Accessed April 28, 2020.\n\
    Seco, F., & Jiménez, A. R. (2017). Autocalibration of a wireless positioning net‑\n\
    work with a FastSLAM algorithm. 2017 international conference on indoor \npositioning\
    \ and indoor navigation (pp. 1–8). IEEE: Sapporo.\nSeif, H. G., & Hu, X. (2016).\
    \ Autonomous driving in the iCity—HD maps as a key \nchallenge of the automotive\
    \ industry. Engineering, 2(2), 159–162.\nShi, W., Cao, J., Zhang, Q., Li, Y.,\
    \ & Xu, L. (2016). Edge computing: Vision and \nchallenges. IEEE Internet of Things\
    \ Journal, 3(5), 637–646.\nShin, E. H. (2005). Estimation techniques for low-cost\
    \ inertial navigation. Calgary: \nUniversity of Calgary.\nShin, S.H., Park, C.G.,\
    \ Kim, J.W., Hong, H.S., & Lee, J.M. (2007). Adaptive step \nlength estimation\
    \ algorithm using low‑cost MEMS inertial sensors. In \nProceedings of the 2007\
    \ IEEE sensors applications symposium. San Diego, \nCA: IEEE.\nSingh, S. (2015).\
    \ Critical reasons for crashes investigated in the national motor \nvehicle crash\
    \ causation survey. https ://crash stats .nhtsa .dot.gov/Api/\nPubli c/ViewP ublic\
    \ ation /81211 5. Accessed April 28, 2020.\nStephenson, S. (2016). Automotive\
    \ applications of high precision GNSS. Notting‑\nham: University of Nottingham.\n\
    Synced. (2018). The Golden Age of HD Mapping for Autonomous Driving. \nhttps ://mediu\
    \ m.com/synce drevi ew/the‑golde n‑age‑of‑hd‑mappi ng‑\nfor‑auton omous ‑drivi\
    \ ng‑b2a2e c4c11 d. Accessed April 28, 2020.\nTDK‑InvenSense. (2020). MPU‑9250\
    \ Nine‑Axis (Gyro + Accelerometer + \nCompass) MEMS MotionTracking™ Device. https\
    \ ://inven sense .tdk.com/\nprodu cts/motio n‑track ing/9‑axis/mpu‑9250/. Accessed\
    \ April 28, 2020.\nTesla. (2020). Autopilot. https ://www.tesla .com/autop ilot.\
    \ Accessed April 28, \n2020.\nTiemann, J., Schweikowski, F., & Wietfeld, C. (2015).\
    \ Design of an UWB indoor‑\npositioning system for UAV navigation in GNSS‑denied\
    \ environments. \n2015 international conference on indoor positioning and indoor\
    \ navigation \n(IPIN) (pp. 1–7). IEEE: Calgary.\nTitterton, D., Weston, J.L.,\
    \ & Weston, J. (2004). Strapdown inertial navigation \ntechnology. IET.\nTomTom.\
    \ (2020). Extending the vision of automated vehicles with HD Maps \nand ADASIS.\
    \ http://downl oad.tomto m.com/open/banne rs/Elekt robit \n_TomTo m_white paper\
    \ .pdf. Accessed April 28, 2020.\nTrimble. (2020). Trimble RTX. https ://posit\
    \ ionin gserv ices.trimb le.com/servi ces/\nrtx/?gclid =CjwKC AjwnI r1BRA WEiwA\
    \ 6GpwN Y78s‑u6pUz ELeIu _elfou \nmO63L mR2QH f72Q9 pM‑L‑NXyJj omWCX 6BoCE 5YQAv\
    \ D_BwE. Accessed \nApril 28, 2020.\nVasisht, D., Kumar, S., & Katabi, D. (2016).\
    \ Decimeter‑level localization with a \nsingle WiFi access point. 13th USENIX\
    \ symposium on networked systems \ndesign and implementation (pp. 165–178). USENIX\
    \ Association: Santa \nClara.\nVelodyne. (2020). HDL‑64E High Definition Real‑Time\
    \ 3D Lidar. https ://velod \nyneli dar.com/produ cts/hdl‑64e/. Accessed April\
    \ 28, 2020.\nWang, L., Chen, R. Z., Li, D. R., Zhang, G., Shen, X., Yu, B. G.,\
    \ et al. (2018). Initial \nassessment of the LEO based navigation signal augmentation\
    \ system \nfrom Luojia‑1A satellite. Sensors (Switzerland), 18(11), 3919.\nWang,\
    \ Y., & Ho, K. J. I. T. O. W. C. (2015). An asymptotically efficient estimator\
    \ \nin closed‑form for 3‑D AOA localization using a sensor network. IEEE \nTransactions\
    \ on Wireless Communications, 14(12), 6524–6535.\nWang, Y. T., Li, J., Zheng,\
    \ R., & Zhao, D. (2017). ARABIS: An Asynchronous acous‑\ntic indoor positioning\
    \ system for mobile devices. 2017 international \nconference on indoor positioning\
    \ and indoor navigation (pp. 1–8). IEEE: \nSapporo.\nWiFi‑Alliance. (2020). Wi‑Fi\
    \ HaLow low power, long range Wi‑Fi. https ://www.\nwi‑fi.org/disco ver‑wi‑fi/wi‑fi‑halow\
    \ . Accessed April 28, 2020.\nWill, H., Hillebrandt, T., Yuan, Y., Yubin, Z.,\
    \ & Kyas, M. (2012). The membership \ndegree min‑max localization algorithm. 2012\
    \ ubiquitous positioning, \nindoor navigation, and location based service (UPINLBS)\
    \ (pp. 1–10). IEEE: \nHelsinki.\nWitrisal, K., Meissner, P., Leitinger, E., Shen,\
    \ Y., Gustafson, C., Tufvesson, F., et al. \n(2016). High‑accuracy localization\
    \ for assisted living: 5G systems will \nturn multipath channels from foe to friend.\
    \ IEEE Signal Processing \nMagazine, 33(2), 59–70.\nWolcott, R. W., & Eustice,\
    \ R. M. (2014). Visual localization within lidar maps for \nautomated urban driving.\
    \ 2014 IEEE/RSJ international conference on intel-\nligent robots and systems\
    \ (pp. 176–183). IEEE: Chicago, IL.\nWolcott, R. W., & Eustice, R. M. (2017).\
    \ Robust LIDAR localization using \nmultiresolution Gaussian mixture maps for\
    \ autonomous driving. The \nInternational Journal of Robotics Research, 36(3),\
    \ 292–319.\nZhang, J., Han, G., Sun, N., & Shu, L. (2017). Path‑loss‑based fingerprint\
    \ localiza‑\ntion approach for location‑based services in indoor environments.\
    \ IEEE \nAccess, 5, 13756–13769.\nZhang, P., Lu, J., Wang, Y., & Wang, Q. (2017).\
    \ Cooperative localization in 5G \nnetworks: A survey. ICT Express, 3(1), 27–32.\n\
    Zhou, B., Li, Q., Mao, Q., Tu, W., & Zhang, X. (2015). Activity sequence‑based\
    \ \nindoor pedestrian localization using smartphones. IEEE Transactions on \n\
    Human-Machine Systems, 45(5), 562–574.\nZhuang, Y., Lan, H., Li, Y., & El‑Sheimy,\
    \ N. (2015). PDR/INS/WiFi integration based \non handheld devices for indoor pedestrian\
    \ navigation. Micromachines, \n6(6), 793–812.\nZhuang, Y., Yang, J., Li, Y., Qi,\
    \ L., & El‑Sheimy, N. (2016). Smartphone‑based \nindoor localization with bluetooth\
    \ low energy beacons. Sensors, 16(5), \n596.\nZhuang, Y., Wang, Q., Li, Y., Gao,\
    \ Z. Z., Zhou, B. P., Qi, L. N., et al. (2019). The inte‑\ngration of photodiode\
    \ and camera for visible light positioning by using \nfixed‑lag ensemble Kalman\
    \ smoother. Remote Sensing, 11(11), 1387.\nPublisher’s note\nSpringer Nature remains\
    \ neutral with regard to jurisdictional claims in pub‑\nlished maps and institutional\
    \ affiliations.\n"
  inline_citation: '>'
  journal: Satellite Navigation (Online)
  limitations: '>'
  pdf_link: https://satellite-navigation.springeropen.com/counter/pdf/10.1186/s43020-021-00041-3
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Indoor navigation: state of the art and future trends'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/drones5040148
  analysis: '>'
  authors:
  - Yassine Yazid
  - Imad Ez‐zazi
  - Antonio Guerrero-González
  - Ahmed El Oualkadi
  - Mounir Arioua
  citation_count: 46
  full_citation: '>'
  full_text: ">\ndrones\nReview\nUAV-Enabled Mobile Edge-Computing for IoT Based on\
    \ AI:\nA Comprehensive Review\nYassine Yazid 1,2,*, Imad Ez-Zazi 3\n, Antonio\
    \ Guerrero-González 2, Ahmed El Oualkadi 1\nand Mounir Arioua 1\n\x01\x02\x03\x01\
    \x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Yazid, Y.; Ez-Zazi,\
    \ I.;\nGuerrero-González, A.; El Oualkadi,\nA.; Arioua, M. UAV-Enabled Mobile\n\
    Edge-Computing for IoT Based on AI:\nA Comprehensive Review. Drones\n2021, 5,\
    \ 148. https://doi.org/\n10.3390/drones5040148\nAcademic Editors: Vishal Sharma,\n\
    Abderrahmane Lakas, Mohammed\nAtiquzzaman, Omar Sami Oubbati,\nSahar Hoteit and\
    \ Taieb Znati\nReceived: 27 October 2021\nAccepted: 9 December 2021\nPublished:\
    \ 13 December 2021\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright: © 2021\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nLaboratory of Information and Communication Technologies (LabTIC),\
    \ National School of Applied Sciences\nof Tangier (ENSATg), Abdelmalk Essaadi\
    \ University, ENSA Tanger, Route Ziaten, Tangier BP 1818, Morocco;\naeloualkadi@uae.ac.ma\
    \ (A.E.O.); m.arioua@uae.ac.ma (M.A.)\n2\nDepartment of Automation, Electrical\
    \ Engineering and Electronic Technology, Universidad Politécnica de\nCartagena,\
    \ Plaza del Hospital 1, 30202 Cartagena, Spain; antonio.guerrero@upct.es\n3\n\
    National School of Applied Sciences of Fez (ENSAF), Sidi Mohamed Ben Abdellah\
    \ University, Fez BP 2626,\nMorocco; imad.ezzazi@usmba.ac.ma\n*\nCorrespondence:\
    \ y.yazid@uae.ac.ma\nAbstract: Unmanned aerial vehicles (UAVs) are becoming integrated\
    \ into a wide range of modern\nIoT applications. The growing number of networked\
    \ IoT devices generates a large amount of data.\nHowever, processing and memorizing\
    \ this massive volume of data at local nodes have been deemed\ncritical challenges,\
    \ especially when using artiﬁcial intelligence (AI) systems to extract and exploit\n\
    valuable information. In this context, mobile edge computing (MEC) has emerged\
    \ as a way to bring\ncloud computing (CC) processes within reach of users, to\
    \ address computation-intensive ofﬂoading\nand latency issues. This paper provides\
    \ a comprehensive review of the most relevant research works\nrelated to UAV technology\
    \ applications in terms of enabled or assisted MEC architectures. It details\n\
    the utility of UAV-enabled MEC architecture regarding emerging IoT applications\
    \ and the role of\nboth deep learning (DL) and machine learning (ML) in meeting\
    \ various limitations related to latency,\ntask ofﬂoading, energy demand, and\
    \ security. Furthermore, throughout this article, the reader gains\nan insight\
    \ into the future of UAV-enabled MEC, the advantages and the critical challenges\
    \ to be\ntackled when using AI.\nKeywords: UAVs; IoT; cloud computing; edge computing;\
    \ MEC; AI; review\n1. Introduction\nThe Internet of Things (IoT) paradigm is constantly\
    \ expanding to cover many ﬁelds\nand applications. IoT devices present many beneﬁts\
    \ for improving services in a broad\nrange of contexts. The number of connected\
    \ devices is forecasted to reach impressive\nheights in the coming years. According\
    \ to CISCO, more than 70 billion devices will be\nconnected by the end of 2025\
    \ [1,2]. Recently, unmanned aerial vehicles (UAVs), typically\nknown as drones,\
    \ have attracted considerable attention from academia and industrial\ncommunities\
    \ due to their excellent capabilities and attractive features. They promise to\n\
    bring an ideal contribution to the ﬁeld of IoT, based on their unique characteristics.\
    \ They\noffer elastic and ﬂexible mobile features, as required in many omnipresent\
    \ IoT applications,\nmaking their integration into wireless network communication\
    \ easy and feasible.\nMoreover, integrating embedded intelligent devices such\
    \ as cameras and sensors on\nUAVs offer many advantages when monitoring hostile\
    \ and unreachable environments.\nIn addition, they can potentially provide many\
    \ services in the context of modern IoT\ninterconnection, such as smart cities,\
    \ smart farming, smart factories, smart grids, and\nintelligent transportation.\
    \ The development of communication protocols and networks\nhas also improved the\
    \ tracking and maneuverability of drones to cover many application\nrequirements,\
    \ as well as their contribution as a critical component of the communication\n\
    network [3]. UAVs can also guarantee reliable connectivity in hostile areas with\
    \ limited\nDrones 2021, 5, 148. https://doi.org/10.3390/drones5040148\nhttps://www.mdpi.com/journal/drones\n\
    Drones 2021, 5, 148\n2 of 30\nor unavailable communication infrastructure. Typically,\
    \ UAVs can be deployed as aided\ncommunication networks by integrating them into\
    \ the peripheral network as ﬂying base\nstations (BSs) [4,5], relay nodes [6],\
    \ or terminal nodes [7]. Therefore, they act primarily as a\nmeans of enabling\
    \ ﬂexible communication services in remote areas when interconnections\nwith existing\
    \ networks are lost. To this end, UAVs can be used in edge-computing (EC),\nfog-computing\
    \ (FC), and as crucial equipment in cellular networks [8].\nIoT networks enable\
    \ comprehensive connectivity for many mobile users by enabling\nvarious emerged\
    \ application services (e.g., automatic surveillance, unmanned control\nvehicles\
    \ and object recognition). Centralized servers, such as cloud computing (CC)\n\
    facilities and data centers, generally process and analyze the generated data\
    \ by carrying out\ncomputational intelligence based on artiﬁcial intelligence\
    \ (AI). These centralized systems\nare quick to deploy, inexpensive to maintain,\
    \ and practical when data need to be centrally\ncontrolled. However, they are\
    \ mostly constrained by their high failure rate, security risks\nand access delay.\
    \ Data processing at the central level causes considerable time delays that\n\
    affect the overall system quality of service (QoS), especially regarding the response-time\n\
    requirement for latency-sensitive applications. Decentralized and distributed\
    \ systems have\nemerged to solve the issue of centralized system constraints.\
    \ The decentralized system relies\non servers that are supposed to store a copy\
    \ of the resources. Users in distributed systems\nhave equal access to data, yet\
    \ user rights can be enabled as necessary, and data ownership\ncan be shared efﬁciently.\
    \ Hardware and software resources are also allocated between\nusers, increasing\
    \ truthfulness, reducing component failure, and enhancing reliability.\nEC has\
    \ recently been introduced to provide intermediate devices between the data\n\
    generator and CC services. This reduces latency and provides efﬁcient bandwidth\
    \ uti-\nlization. However, due to their limited computing power and battery life,\
    \ mobile devices\nstruggle to provide these services. To this end, mobile edge\
    \ computing (MEC) solutions\nhave been employed to ameliorate the intensive computation\
    \ and ofﬂoading bottlenecks\nbetween end-nodes and centralized data servers [9].\
    \ They allow mobile devices to ofﬂoad\ntheir computation duties onto servers at\
    \ the edge of the IoT network, such as cellular BSs\nor access points. In contrast\
    \ to traditional CC, MEC servers can be close to end-users. As a\nresult, MEC\
    \ servers can deliver low latency and secure services, while saving energy for\n\
    mobile users.\nRecently, UAVs have been integrated as air–ground equipment to\
    \ fulﬁll the processing\nand storage needs at IoT network edges. As a promising\
    \ solution, they could provide ultra-\nlow latency support for latency-sensitive\
    \ applications, facilitate the distribution of big data\nprocessing and analysis,\
    \ improve the scalability and management of massive mobile con-\nnectivity, as\
    \ well as content caching and mobile delivery [10]. The advantage presented by\n\
    their ﬂexible mobility has facilitated the integration of UAVs with MEC services\
    \ to provide\nUAV-enabled MEC networks. UAV-enabled MEC is typically deployed\
    \ in unpredictable\nenvironments such as in wild, desert, and complex landscapes.\
    \ Furthermore, the computa-\ntion performance may be adapted based on the distance\
    \ that UAVs can smoothly control.\nThis combination of UAV technology with MEC\
    \ makes the system more advantageous\nand ﬂexible than traditional MEC systems,\
    \ which are constrained by high deployment\ncosts due to their ﬁxed architecture.\
    \ In addition, the integration of UAV-enabled MEC\nwith the most recent security\
    \ approaches, such as the blockchain structure, increases the\nsecurity level\
    \ [11]. The blockchain is a distributed ledger that gives a secure, immutable,\n\
    transparent, and trustworthy environment for the UAVs to store their data as a\
    \ transaction\nin a chain of blocks [12]. This is a viable solution to mitigate\
    \ the security and privacy issues\nrelated to UAV networks. Therefore, integrating\
    \ blockchain into UAVs ensures the MEC\nsystem’s trustworthiness with the additional,\
    \ advantageous features of automating data\ntransaction, decision-making, storage,\
    \ and veriﬁcation [13]. Therefore, UAVs can play a\ncrucial role in enabling MEC\
    \ capability in IoT applications. However, many critical issues\nhave yet to be\
    \ addressed to improve the performance of UAV-enabled MEC. Most of the\nimpairments\
    \ are related to drones as they are autonomous and battery-powered, with\nlimited\
    \ resources. Furthermore, given the broadcast nature of communications between\n\
    Drones 2021, 5, 148\n3 of 30\nground-based users and UAVs, many performance aspects\
    \ should be addressed, including\nsecurity, task ofﬂoading, energy consumption,\
    \ resource allocation, computing capacity, and\nuser latency performance under\
    \ various channel circumstances.\nSince this topic is revolutionary in the IoT\
    \ research ﬁeld, reviewing the current sci-\nentiﬁc achievements and technological\
    \ limitations of UAV-enabled MEC networks is of\nparamount importance. Furthermore,\
    \ the limits of existing surveys on UAV-enabled MEC\nin IoT applications have\
    \ motivated us to put forward a detailed review. This paper explores\nthe use\
    \ of UAVs in emerging IoT applications and the utility of both deep learning (DL)\n\
    and machine learning (ML) in UAV-enabled MEC systems. For instance, the authors\
    \ of [14]\nhave elaborated a review about the energy efﬁciency constraints related\
    \ to UAV-enabled\nMEC systems for IoT devices. Additionally, the authors of [15,16]\
    \ have presented a survey\nabout communication and networking technologies for\
    \ UAVs. The research work presented\nin [17] has addressed both fundamental and\
    \ recent advances of computation ofﬂoading\nin UAV-enabled MEC. However, only\
    \ a few of the challenges are mentioned in the above\nworks, including energy,\
    \ communication facilities, and limited resource allocation issues.\nIn this paper,\
    \ the most critical issues and challenges of UAV-enabled MEC based on AI are\n\
    accurately outlined and discussed.\nIndeed, there are several recent reviews about\
    \ the UAV-enabled MEC paradigm. How-\never, most of the previous reviews have\
    \ focused on UAV energy efﬁciency, communication\ntechnologies connecting various\
    \ UAVs, and computation ofﬂoading in UAV-enabled MEC.\nOur review considers a\
    \ more practical and recent scenario wherein massively generated\ndata need to\
    \ be processed and analyzed using AI algorithms for decision-making at the\nedge\
    \ of networks. This has not been considered in the previous works. Adopting AI\n\
    methods would affect all the requirements that have already been investigated,\
    \ such as\nenergy efﬁciency, communication technologies, processing capacity,\
    \ privacy and security,\nand the autonomy of UAV-enabled MEC. Almost all domains\
    \ are currently relying on AI\nto outperform the traditional systems and provide\
    \ decision-making systems. For instance,\nIndustry 4.0 has newly emerged as a\
    \ revolutionary paradigm in which intelligent and\nautonomous drones based on\
    \ AI would be the key element. However, the integration of\nautonomous UAVs based\
    \ on AI is not obvious in most practical cases. This is why UAV-\nenabled MEC\
    \ based on AI would enable many applications in the industry community to\ndeploy\
    \ their solutions, by cooperatively executing and processing the massive volumes\n\
    of conﬁdential data near the users at the edge of the network. Consequently, the\
    \ current\nreview highlights the most recent challenges and open issues of UAV-enabled\
    \ MEC based\non AI, considering their various architectures and applications.\
    \ We will discuss the most\nrecent related works on data processing at the edge,\
    \ based on AI, and their advantages and\ninconveniences regarding the UAV environment.\
    \ We will even emphasize the effect of AI\non energy efﬁciency, communication\
    \ technologies, processing capacity, and security when\nUAV-enabled MEC architecture\
    \ is considered. In addition, we propose a list of applications\nwith open issues\
    \ that have to be taken into account when considering a UAV-enabled MEC\narchitecture.\n\
    The rest of this paper is structured as follows. Section 2 gives an overview of\
    \ UAVs and\nhighlights some of their related applications. Section 3 focuses on\
    \ the possible opportunities\nenabled by UAVs, focusing on MEC servers. Section\
    \ 4 highlights the UAV-enabled MEC\nbased on AI. Section 5 lists signiﬁcant issues\
    \ and open research directions related to UAV-\nenabled MEC systems. Finally,\
    \ Section 6 presents a conclusion.\n2. UAV System Model\nRecently, there has been\
    \ an increase in customer demand for airborne intelligence\nmissions, which has\
    \ led to the design and development of various types of UAVs in various\nshapes\
    \ and ﬂight modes. This section highlights the different styles and characteristics\
    \ of\nUAVs and their application scenarios.\nDrones 2021, 5, 148\n4 of 30\n2.1.\
    \ UAVs Classiﬁcation\nDeploying a UAV network (known as swarms in IoT contexts)\
    \ is becoming a practical\nand necessary requirement for many applications. Various\
    \ UAVs are currently available\non the market, with distinctive features such\
    \ as supportable altitude, speed, and battery\nautonomy, for multiple applications.\
    \ Generally, the selection of any UAV model should\nfulﬁll many of the criteria\
    \ of the targeted application, such as QoS, energy capacity, envi-\nronmental\
    \ restrictions, and federal rules [18]. There are three types of UAVs: low-altitude\n\
    platforms (LAPs), high-altitude platforms (HAPs), and satellites. Since this work\
    \ focuses\non UAV-enabled MEC, UAVs are described based on many aspects.\nFigure\
    \ 1 categorizes UAVs into the LAPs category based on their type, size, range,\n\
    and type of rotors. Figure 2 shows the shape and form of three kinds of commercialized\n\
    UAVs: a rotary-wing drone (Figure 2a), a ﬁxed-wing drone (Figure 2b), and a ﬁxed\
    \ wing\nhybrid VTOL UAV (Figure 2c).\nautonomy, for multiple applications. Generally,\
    \ the selection of any UAV model should \nfulfill many of the criteria of the\
    \ targeted application, such as QoS, energy capacity, \nenvironmental restrictions,\
    \ and federal rules [18]. There are three types of UAVs: low-\naltitude platforms\
    \ (LAPs), high-altitude platforms (HAPs), and satellites. Since this work \nfocuses\
    \ on UAV-enabled MEC, UAVs are described based on many aspects.  \nFigure 1 categorizes\
    \ UAVs into the LAPs category based on their type, size, range, \nand type of\
    \ rotors. Figure 2 shows the shape and form of three kinds of commercialized \n\
    UAVs: a rotary-wing drone (Figure 2a), a fixed-wing drone (Figure 2b), and a fixed\
    \ wing \nhybrid VTOL UAV (Figure 2c). \nTypically, UAVs present unique characteristics,\
    \ being dynamic, agile, easy to repair, \neasy to deploy, and offering the potential\
    \ to provide various measurements wherever and \nwhenever required. They provide\
    \ a low-cost alternative for collecting and providing \ninformation to intelligent\
    \ systems that can undertake the necessary data analysis (e.g., \nreal-time image\
    \ or video analysis). UAVs will substantially promote the progress of \nfarming,\
    \ defense, insurance inspection, law enforcement, emergency assistance, pollution\
    \ \nmonitoring, disaster recovery, and package delivery. \nThe data are collected\
    \ remotely through controllable devices installed on UAVs, each \ntriggered via\
    \ the platform. The collected data are processed locally onboard the UAVs or \n\
    are offloaded to cloud servers, based on the required power. Deploying a practical\
    \ UAV-\nbased IoT framework requires an orchestrator platform that recognizes\
    \ various contextual \ninformation about UAVs, such as flight trajectories, IoT\
    \ equipment, and battery status. \n \nFigure 1. Classification of LAP UAVs. \n\
    \ \n \n(a) \n(b) \nLAP UAV classification\nSize\nMicro UAV\nMini UAV\nMedium \n\
    UAV\nLarge UAV\nRange\nMedium \nShort\nClose\nRotors\nTricopter\nQuadcopter\n\
    Hexacopter\nOctacopter\nLanding\nHTOL\nVTOL\nAerodynamics\nFixed wing\nFlapping\
    \ wing\nDucted fan\nMulti rotor\nType\nAircraft\nBalloon\nFigure 1. Classiﬁcation\
    \ of LAP UAVs.\nDrones 2021, 5, x FOR PEER REVIEW \n5 of 30 \n \n \n \n \n(a)\
    \ \n(b) \n \n(c) \nFigure 2. Examples of several types of UAV: (a) rotary-wing\
    \ drone, (b) fixed-wing drone, (c) fixed-\nwind hybrid vertical take-off and landing\
    \ (VTOL) drone (modified from [19]). \nTwo main UAV communication networks exist:\
    \ ad hoc UAV networks and UAV-\nassisted aided communication networks. The former\
    \ is characterized by a flexible \ntopology and self-organized architecture, while\
    \ the latter’s main feature comprises \nflexible scheduling at the edge side of\
    \ the network. \nUAVs can collect data massively by being equipped with sensors\
    \ of different sizes, \nforms, features, and capabilities. Many remote sensing\
    \ devices for airborne and satellite \nplatforms are now adopting miniature and\
    \ low-cost versions for UAV platforms, such as \nmultispectral, hyperspectral,\
    \ short/medium-wave range cameras (e.g., thermal imaging \ncamera), and light\
    \ LiDAR. Table 1 gives a list of the sensors and cameras integrated with \nFigure\
    \ 2. Examples of several types of UAV: (a) rotary-wing drone, (b) ﬁxed-wing drone,\
    \ (c) ﬁxed-\nwind hybrid vertical take-off and landing (VTOL) drone (modiﬁed from\
    \ [19]).\nTypically, UAVs present unique characteristics, being dynamic, agile,\
    \ easy to repair,\neasy to deploy, and offering the potential to provide various\
    \ measurements wherever\nand whenever required. They provide a low-cost alternative\
    \ for collecting and providing\ninformation to intelligent systems that can undertake\
    \ the necessary data analysis (e.g.,\nDrones 2021, 5, 148\n5 of 30\nreal-time\
    \ image or video analysis). UAVs will substantially promote the progress of\n\
    farming, defense, insurance inspection, law enforcement, emergency assistance,\
    \ pollution\nmonitoring, disaster recovery, and package delivery.\nThe data are\
    \ collected remotely through controllable devices installed on UAVs, each\ntriggered\
    \ via the platform. The collected data are processed locally onboard the UAVs\
    \ or\nare ofﬂoaded to cloud servers, based on the required power. Deploying a\
    \ practical UAV-\nbased IoT framework requires an orchestrator platform that recognizes\
    \ various contextual\ninformation about UAVs, such as ﬂight trajectories, IoT\
    \ equipment, and battery status.\nTwo main UAV communication networks exist: ad\
    \ hoc UAV networks and UAV-\nassisted aided communication networks. The former\
    \ is characterized by a ﬂexible topology\nand self-organized architecture, while\
    \ the latter’s main feature comprises ﬂexible schedul-\ning at the edge side of\
    \ the network.\nUAVs can collect data massively by being equipped with sensors\
    \ of different sizes,\nforms, features, and capabilities. Many remote sensing\
    \ devices for airborne and satellite\nplatforms are now adopting miniature and\
    \ low-cost versions for UAV platforms, such as\nmultispectral, hyperspectral,\
    \ short/medium-wave range cameras (e.g., thermal imaging\ncamera), and light LiDAR.\
    \ Table 1 gives a list of the sensors and cameras integrated with\nUAVs and their\
    \ usefulness for monitoring various applications. The characteristics and\nspeciﬁcations\
    \ of each type differ according to speciﬁcations. For example, the RGB camera\n\
    can be helpful for visual analysis, mapping and classifying objects and tracking\
    \ animals\nand people. Moreover, UAVs with lightweight thermal infra-red sensors\
    \ can deal with\ncomplex natural tracking such as monitoring volcanoes and forest\
    \ ﬁres, tracking animals,\nand in hydrothermal scientiﬁc studies.\nTable 1. Examples\
    \ of UAV onboard sensors and cameras.\nSensor/Camera\nUtility\nRef.\nRGB Camera\n\
    •\nVisual analysis\n•\nMapping\n•\nLanding\n•\nObject classiﬁcation\n•\nVehicle\
    \ detection\n•\nTracking animals and people\n[20]\nUAV LiDAR\n•\nVegetation canopy\
    \ analysis\n•\nEstimation of forest carbon\n•\nAbsorption\n•\nMapping cultural\
    \ heritage\n•\nBuilding information\n[21]\nHyperspectral sensors\n•\nLand cover/land\
    \ use mapping\n•\nVegetation indices estimation\n•\nBiophysical, physiological,\
    \ or biochemical parameter estimation\n•\nAgriculture and vegetation disease\n\
    •\nDetection, including disaster damage\n•\nAssessment\n[22]\nLightweight cameras\n\
    •\nVisual analysis, vegetation detection and analysis, crop monitoring\n•\nMining\n\
    •\nSoil moisture estimation, ﬁres\n•\nDetection, water level measurement\n•\n\
    Land cover/land use mapping\n[23]\nLightweight thermal infra-red sensors\n•\n\
    Tracking creatures\n•\nVolcanoes\n•\nDetection, including forest ﬁres\n•\nHydrothermal\
    \ studies, urban heat monitoring\n•\nIslands and hazardous area tracking\n[24]\n\
    Drones 2021, 5, 148\n6 of 30\n2.2. UAV-Enabled Services\nUAV technology’s appealing\
    \ ﬂexibility and mobility characteristics have drawn atten-\ntion in terms of\
    \ integration with other networks as a way to address various challenging\napplications.\
    \ UAVs can be a part of IoT networks, referred to as the Internet of Flying\n\
    Things (IoFT) [25]. The IoFT can improve the availability of IoT services in areas\
    \ with poor\ncommunication coverage and limited infrastructures. For instance,\
    \ UAVs can provide FC\nand EC services and cellular communications in rural or\
    \ developing regions and submarine\nenvironments. As a result, reaching hostile\
    \ and congested environments has become easier\nand faster, thus improving emergent\
    \ intervention wherever and whenever it is required.\nAs support to communication\
    \ networks, UAVs can be dispatched as peripheral nodes with\nvarious operating\
    \ units, such as ﬂying BSs, relay nodes, or end-node stations [7]. UAVs act\n\
    as relay/terminal nodes related to disconnected nodes, stabilizing communication\
    \ links\nin an ad hoc manner. A set of deployed UAVs can thereby form a ﬂying\
    \ ad hoc network\n(FANET), which is a subclass of the mobile ad hoc network (MANET)\
    \ [26].\nIn IoT networks, UAVs can potentially adopt many recent cellular and\
    \ non-cellular\nwireless communication networks to control the UAV on the one\
    \ hand, and to enhance\nthe coverage and latency services on the other. The most\
    \ prominent communication pro-\ntocols that can be used with UAVs are IEEE 802.11\
    \ (Wi-Fi), IEEE 802.16 (WiMax), IEEE\n802.15.4 (LRWPAN), cellular networks (3G/4G),\
    \ IEEE 802.15.1 (Bluetooth), LoRaWAN\n(LoRa), SigFox and narrowband IoT (NB-IoT)\
    \ [27–31]. Typically, the choice of communica-\ntion protocol depends on the desired\
    \ achievable throughput, power consumption, range,\nimplementation cost, reliability,\
    \ delay, and security. Grouped according to application\nrequirements, the characteristics\
    \ of the most-used communication protocols are presented\nin [32]. As described\
    \ in Table 2, there are various available communication protocols that\ncan be\
    \ used in UAV-enabled MEC. Each protocol is given a list of advantages and disad-\n\
    vantages regarding data rate, coverage, deployment cost, energy consumption, latency,\n\
    spectrum availability, and the number of supported users. Thus, the use of communication\n\
    technology depends literally on the application requirements.\nAlong with high\
    \ mobility and scalability, UAVs can offer many potential opportu-\nnities in\
    \ terms of enabling services such as pervasive connectivity, aerial intelligence,\n\
    self-maintenance capabilities for communications, and sensor deployment. Therefore,\n\
    UAVs act as airborne BSs [33], data collectors, relay nodes [34], jammers [35],\
    \ monitors [36],\nedge- and cloud computing servers [37], and power suppliers\
    \ [38] to support IoT applica-\ntions. These will extend network coverage and\
    \ provide diversiﬁed and ﬂexible intelligence\nfacilities for new potentialities\
    \ in modern IoT applications. In summary, as illustrated\nin Figure 3, UAVs can\
    \ facilitate a wide range of solutions in IoT applications. They can\nprovide\
    \ intelligent communications by establishing wireless networks in inaccessible\
    \ and\nhazardous environments; they also enable parallel intelligent areal services,\
    \ such as CC,\nEC, and LC.\nDrones 2021, 5, 148\n7 of 30\nTable 2. Characteristics\
    \ of the most-used communication technologies employed in UAV applications.\n\
    Protocol\nMax Data Rate\nMax Range\nDeployment Cost\nEnergy\nLatency\nSpectrum\n\
    Max Connectivity\nPros/Cons\nNB-IoT\nUL: 158.5 kbps\nDL: 106 kbps\n15 km\nHigh\n\
    (>15,000 $/BS)\nLow\n(3 µA rest,\nTx: 74–220 mA,\nRx: 46 mA)\n1.6 s\nLicensed\
    \ Sub-GHz\nMassive\n(>50,000 sensor\ndevices)\n+\nSupport remote healthcare monitoring,\n\
    +\nEnergy-efﬁciency\n+\nProvide fast, reliable network\n−\nHigh maintenance costs\n\
    −\nOperational cost since it is on the\nlicensed spectrum\n−\nCost of SIM card\
    \ purchase\n−\nNo mobility support\nLoRa\nLoRa CSS: 0.3–5 kbps\nFSK: 50 kbps\n\
    5 km\n(Urban) 15 km (Rural)\nHigh\n(100–1000 $/BS)\nVery Low\n(2 µA resting, 12\
    \ mA\nListening)\n>1 s\nSub-GHz ISM band\nMassive\n(40,000 sensor devices)\n+\n\
    Long communication range\n+\nEnergy efﬁciency\n+\nLow operational cost\n−\nLow\
    \ data reliability\n−\nInterference issue\n−\nHigh deployment cost\nSigFox\nUL:\
    \ 100/600 bps\nDL: 600 bps\n10 km (urban), 50 km\n(rural)\nHigh\n(>4000 $/BS)\n\
    Very Low\n10–100 mW\n(<0.01 mA resting, Tx:\n28 mA, Rx: 10.5 mA)\n10 s\nSub-GHz\
    \ ISM band\nMassive\n(40,000 sensor devices)\n+\nLong communication range\n+\n\
    Energy efﬁciency\n+\nLow operational cost\n−\nInterference issue\n−\nHigh deployment\
    \ cost\n−\nLow data reliability\n−\nNo mobility supports\n−\nLimited number of\
    \ messages per day\n(140 Message/day, 12 bytes/message)\nZigBee\n250 Kbps\n<1\
    \ km\nLow\n(1–5 $)\nHigh\n30 mA\n(3.16 µW–1 mW)\n−25 to 0 dBm\n15 ms\nISM\nModerate\n\
    (255)\n+\nFree license\n+\nThe node supports\n+\nFlexible architecture and ease\
    \ to install\n+\nSupport mesh networking\n+\nEasy to control and monitor\n−\n\
    Security issues\n−\nEnergy consumption\n−\nShort transmission distance\n−\nProne\
    \ to network interference due to the\nuse of 2.4 GHz band\nBluetooth\nIEEE 802.15.1\n\
    3 Mbps\n100 m\nLow\n(5–10 $)\nLow\n(1 W)\n1–10 mW\n0–10 dBm\n3 ms\nISM\n(2.4–2.4835\
    \ GHz)\nLow\n(Over 1000 in Bluetooth\nmesh networking)\n+\nFree of charge\n+\n\
    Simplicity\n−\nLow connectivity\n−\nEnergy consumption\n−\nShort coverage\n−\n\
    Security\nBLE\n2 Mbps\n240 m\nHigh\n(>25 $)\nLow\n(0.01–0.5 W)\n50 ms\nISM\n(2.4–2.5\
    \ GHz)\nLow\n+\nLow power consumption\n+\nFast Connection establishment\n+\nFree\
    \ of charge\n+\nReliable for small size data transfer,\nespecially in IoT\n−\n\
    Open to interception and attack\n−\nShort coverage\n−\nLimited data rates\nDrones\
    \ 2021, 5, 148\n8 of 30\nTable 2. Cont.\nProtocol\nMax Data Rate\nMax Range\n\
    Deployment Cost\nEnergy\nLatency\nSpectrum\nMax Connectivity\nPros/Cons\n5G/6G\n\
    1 Gbps (5G)\n>10 Gbps (6G)\n200 m\nHigh\n(>13,000 $)\nMedium\n1 ms (5G)\n0.1 ms\
    \ (6G)\nLicensed cellular\nMassive\n1 million/km2 (5G)\n10 million/km2 (6G)\n\
    +\nIncreased connectivity\n+\nLower latency\n+\nEnergy efﬁciency plans\n+\nAI\
    \ adoption\n−\nHigh deployment cost\n−\nSecurity and privacy issues\n−\nLimited\
    \ coverage\nWi-Fi\nIEEE 802.11\n11/54/300 Mbps\n7 Gbps\n250 m\n100 m\nHigh\n(100–1000\
    \ $ per BS)\nMedium\n>20 ms\nUnlicensed ISM\n(2.4–5 GHz)\nModerate\n(255)\n+\n\
    Mobility\n+\nCost\n+\nConvenience\n−\nRange\n−\nSecurity\n−\nReliability\nLTE\
    \ M (Rel13\nand Rel14)\n1 Mbps\n(LTE M Rel13)\n4 Mbps\n(LTE M Rel14)\n12 km\n\
    High\n(>5000 $)\nMedium\n>150 ms\nLicensed LTE frequency\nband\nMassive\n(20,000\
    \ sensor devices)\n+\nSupport remote healthcare monitoring,\n+\nEnergy efﬁciency\n\
    +\nProvide fast reliable network\n−\nLimited network capacity\nDrones 2021, 5,\
    \ 148\n9 of 30\np\ng\n[\n],\np\npp\n[\n]\npp\npp\nThese will extend network coverage\
    \ and provide diversified and flexible intelligence fa-\ncilities for new potentialities\
    \ in modern IoT applications. In summary, as illustrated in \nFigure 3, UAVs can\
    \ facilitate a wide range of solutions in IoT applications. They can pro-\nvide\
    \ intelligent communications by establishing wireless networks in inaccessible\
    \ and \nhazardous environments; they also enable parallel intelligent areal services,\
    \ such as CC, \nEC, and LC. \n \nFigure 3. UAV-enabled intelligent services in\
    \ IoT. \n2.3. UAV Applications \nDespite the strict restrictions on the civilian\
    \ usage of drones, they play a promotional \nrole in providing many facilities\
    \ and enhancements in different application scenarios. \nMoreover, with the rapid\
    \ development and emergence of new communication paradigms \nto achieve global\
    \ connectivity, drones will positively facilitate many intelligent features. \n\
    Table 3 shows a list of UAV applications in various domains, their advantages\
    \ and \ndisadvantages, and current research challenges. \n• \nAgriculture: \n\
    Drones have been used to monitor large agricultural fields to detect specific\
    \ diseases \nthat threaten the quality of plants at an early stage. The implemented\
    \ system can predict \nfarm diseases in real-time by exploiting image processing\
    \ and AI classification based on \nIoT architecture, using real-time data acquisition\
    \ [39]. In ref. [40], the authors have \nproposed an architecture combining UAVs\
    \ and wireless sensor networks (WSNs) with \nIoT approaches to provide precise\
    \ ecological agriculture. Another architecture for crop \nmapping monitoring and\
    \ disease assessment-based satellite imagery using the DL \napproach has been\
    \ proposed to analyze the images acquired through UAV airborne \nmultispectral\
    \ sensors [41]. Additionally, UAVs can efficiently enhance the productivity of\
    \ \nfarming activities, as referenced in [42–44]. In addition, UAVs play an exciting\
    \ role in crop \nmonitoring by facilitating many tasks previously restricted to\
    \ the laborer and farmer [45–\n47]. \n• \nIndustry 4.0: \nUAV\nIntelligent communications\n\
    Communications\nNetworks\nApplication layer\nIntelligent aerial services \nLC\n\
    EC\nCC\nFigure 3. UAV-enabled intelligent services in IoT.\n2.3. UAV Applications\n\
    Despite the strict restrictions on the civilian usage of drones, they play a promotional\n\
    role in providing many facilities and enhancements in different application scenarios.\n\
    Moreover, with the rapid development and emergence of new communication paradigms\n\
    to achieve global connectivity, drones will positively facilitate many intelligent\
    \ features.\nTable 3 shows a list of UAV applications in various domains, their\
    \ advantages and disad-\nvantages, and current research challenges.\n•\nAgriculture:\n\
    Drones have been used to monitor large agricultural ﬁelds to detect speciﬁc diseases\n\
    that threaten the quality of plants at an early stage. The implemented system\
    \ can predict\nfarm diseases in real-time by exploiting image processing and AI\
    \ classiﬁcation based on IoT\narchitecture, using real-time data acquisition [39].\
    \ In ref. [40], the authors have proposed an\narchitecture combining UAVs and\
    \ wireless sensor networks (WSNs) with IoT approaches to\nprovide precise ecological\
    \ agriculture. Another architecture for crop mapping monitoring\nand disease assessment-based\
    \ satellite imagery using the DL approach has been proposed\nto analyze the images\
    \ acquired through UAV airborne multispectral sensors [41]. Addi-\ntionally, UAVs\
    \ can efﬁciently enhance the productivity of farming activities, as referenced\n\
    in [42–44]. In addition, UAVs play an exciting role in crop monitoring by facilitating\
    \ many\ntasks previously restricted to the laborer and farmer [45–47].\n•\nIndustry\
    \ 4.0:\nThe increasing demand for fast and low-cost productivity has encouraged\
    \ the indus-\ntrial and research communities to incorporate robotics into the\
    \ industrial process. UAVs\nhave recently attracted the attention of industrial\
    \ solution providers in response to the\nincreased need for productivity; for\
    \ instance, the authors proposed an industrial IoT-based\nsystem that collects\
    \ data by a UAV camera and sends it to a cloud server for process-\ning [48].\
    \ The design aims to monitor the industrial zone to prevent undesirable incidents\n\
    in the production process, relying on the robust intelligence of computer vision\
    \ (CV) ap-\nproaches [49,50]. The mining industry has also increased the level\
    \ of interest in drones for\n3D mapping, mine safety, and mine management [51].\n\
    •\nEnvironment:\nUAVs are being adopted as a means to monitor and survey various\
    \ environmental\nareas. They can be used for the monitoring and data aggregation\
    \ of archeological sites. For\nexample, the authors of [52] have reported that\
    \ UAVs can present accurate and precise\nimages of the studied archeological space,\
    \ compared to terrestrial measurements. UAV\nDrones 2021, 5, 148\n10 of 30\ntechnologies\
    \ can also be deployed in ecological monitoring systems to track wildlife in\n\
    heterogeneous territories and topographically challenging areas as a supporting\
    \ platform\nfor traditional techniques [53]. Besides, this technology may facilitate\
    \ geological researchers\nwhen collecting remote data about many species and animals\
    \ [54]. Moreover, the authors\nof [55] proposed an intelligent model based on\
    \ UAV, dedicated to monitoring several types\nof plants using the latest computer\
    \ vision algorithms and cloud computing technologies.\nUAVs are also used to track\
    \ wild animals over large areas [56].\n•\nHealth and emergency:\nDrones can offer\
    \ several beneﬁts for public health emergencies, for instance, tackling\nepidemics\
    \ and contagious diseases such as COVID-19. For instance, during the COVID-19\n\
    pandemic, some governments and countries adopted drones to survey the rapid spread\n\
    of the virus, diagnose patients, and then predict the mortality risk factor by\
    \ applying AI\napproaches to the collected data. The drones have been used to\
    \ observe crowds, broadcast\ncritical public announcements and information, spray\
    \ disinfectants, and carry out extensive\ntemperature measurements in several\
    \ residential areas [57]. Additionally, the lifeguard\ncommunity uses UAVs for\
    \ search and rescue missions requiring rapid intervention. Their\nversatility\
    \ also allows obtaining a quick overview of the rescue situation instead of using\n\
    human-crewed airplanes that may take extra time to deploy [58]. Relying on UAV-enabled\n\
    MEC, AI, and CV schemes could lead to new applications that simulate visual reality,\n\
    thus enabling faster and real-time decisions in emergency interventions. For instance,\n\
    UAVs typically detect obstacles by ﬂying over them, gathering data, extracting\
    \ the most\nprominent features, and making decisions based on machine vision and\
    \ pattern recognition\ntechnologies. In this manner, people with visual impairments\
    \ can maneuver comfortably.\nThis technology is expected to be a key solution\
    \ in the healthcare revolution [58].\n•\nSmart cities and smart homes:\nThe urban\
    \ environment is expected to acquire a massive number of dynamically\nconnected\
    \ devices due to diverse activities wherein UAVs as mobile vehicles will have\
    \ many\npivotal roles, including real-time trafﬁc control [59], transportation\
    \ [60], infrastructure\ncontrol and management [61], and buildings observation\
    \ [62]. Accordingly, UAVs are\nexpected to provide communication services to heterogeneous\
    \ smart devices in urban\nareas, to improve the smart city from application perspectives\
    \ [63]. For example, the\nauthors of [64] have proposed an architecture for 5G\
    \ hierarchical IoT networks where the\nUAVs play a fundamental role as a data\
    \ fusion center, formation controller, and network\ngateway. In another context,\
    \ UAVs were used to perform lightweight parts delivery to\nworkstation operators\
    \ within a manufacturing plant, where GPS could not provide a\npractical solution\
    \ for indoor positioning, in addition to intelligent shipping, intelligent\nmonitoring,\
    \ and intelligent control [65].\n•\nNatural disaster tracking:\nDuring natural\
    \ disasters, a rapid and effective response is required to assist the popu-\n\
    lation, avoid increasing the number of victims, and minimize the economic impact.\
    \ UAVs\ncan respond quickly to earthquake help requests, ﬁnd missing people, and\
    \ facilitate the\nmonitoring and rescue of victims in danger of drowning during\
    \ ﬂoods [66,67]. Collecting\na large amount of data from different sensors deployed\
    \ in the environment, using UAV-\nenabled MEC with AI algorithms, can help to\
    \ rapidly predict and intervene in natural\ndisasters such as tornadoes, volcanic\
    \ eruptions, tsunamis, and storms.\n•\nConstruction:\nUAV-enabled MEC and computer\
    \ vision techniques are promising solutions for the\ncondition assessment of civilian\
    \ and public infrastructures. UAVs are being used increas-\ningly in many construction\
    \ tasks, such as building inspections [68], building condition\nmonitoring, damage\
    \ assessments of buildings after disasters [69], public site surveying\nand mapping\
    \ [70], safety inspections of construction sites and workers, and monitoring\n\
    the progress of construction [71].\nDrones 2021, 5, 148\n11 of 30\nTable 3. Comparative\
    \ study of UAV application objectives.\nApplication Domains\nObjectives\nPros/Cons\n\
    Future Insights\nRef.\nAgriculture/Precision agriculture\n\x13\nOptimizing spraying\
    \ process\n\x13\nCrop monitoring\n\x13\nCrop maturity monitoring\n\x13\nDetection\
    \ and prediction of various\ncrop diseases\n\x13\nIrrigation management\n\x13\n\
    Artiﬁcial pollination\n\x13\nGreenhouse temperature and humidity\nmonitoring\n\
    \x13\nWater assessment\n+\nBasic knowledge and skills are required to\noperate\n\
    +\nUAVs with greater capabilities cost more\n−\nWeather conditions limit the utilization\n\
    of UAVs\n−\nLimited energy of drones\n\x13\nMulti-UAV integration\n\x13\nDifﬁcult\
    \ to ﬂy in harsh conditions\n\x13\nEnergy efﬁciency\n\x13\nUAV-based autonomous\
    \ decisions\n\x13\nAutonomous decision-making based on DL\n\x13\nShort-range coverage\
    \ of BLE-enabled UAVS\n(100 m)\n\x13\nInterference (Wi-Fi, Zigbee, and regular\n\
    Bluetooth technologies)\n\x13\nInteroperability with new raised\ncommunication\
    \ technologies\n\x13\nMore work on using AI to model crop growth\nand disease\
    \ management is expected based on\non-farm and meteorological data\n\x13\nWhen\
    \ developing laws and regulations for IoT\nin agriculture, the involvement of\
    \ the\ngovernment or agricultural department must\nbe assured\n\x13\nMore effort\
    \ should be addressed to enhance\nreal-time monitoring features\n[72]\nIndustry/Construction\n\
    \x13\nMining industry (surface mining, underground\nmines, abandoned mines)\n\x13\
    \nRegular (e.g., monthly) routines and control of\nsafety and risk management\n\
    \x13\nStrategic planning\n+\nEasy to control\n+\nFast and real-time intervention\n\
    −\nThe battery life limits the ﬂying time of drones.\n−\nCoexistence of obstacles\
    \ in underground mines\n−\nHumidity or water leakage damage the\nelectronic components\n\
    −\nBattery issues\n\x13\nMore effort should be addressed to the design\nand structure\
    \ of UAVs dedicated to\nunderground environments\n\x13\nApplying ML techniques\n\
    \x13\nReal-time processing of drone photos, recorded\nmovies, and efﬁcient data\
    \ collection algorithms\n\x13\nEnhance the security through blockchain\n[51]\n\
    Environment/Natural disasters\n\x13\nMonitoring, forecasting, early warning systems\n\
    \x13\nDisaster information fusion\n\x13\nSearch and rescue missions\n\x13\nDamage\
    \ assessment\n\x13\nStandalone communication systems\n+\nReducing cost and economic\
    \ losses\n+\nFast intervention\n+\nEasy to install\n−\nBad weather conditions\n\
    −\nLimited battery\n−\nLimited ﬂying time\n\x13\nData fusion and handover issues\n\
    \x13\nImprove the UAV localization systems\n\x13\nDesign efﬁcient schemes for\
    \ UAVs\n[32]\nDrones 2021, 5, 148\n12 of 30\nTable 3. Cont.\nApplication Domains\n\
    Objectives\nPros/Cons\nFuture Insights\nRef.\nSmart cities\n\x13\nUrban security\
    \ management\n\x13\nTrafﬁc and crowd management\n\x13\nCivil security control\
    \ (smart home)\n\x13\nMobile processing units\n\x13\nNatural disaster monitoring\n\
    \x13\nHealth emergencies\n\x13\nUsed to maintain connectivity\n+\nEnhance energy\
    \ efﬁciency of IoT devices on the\nground in intelligent cities\n+\nDelivering\
    \ collected data in real-time\n+\nEnhancing the quality of life\n+\nReducing cost\
    \ and economic losses\n+\nLow latency services (fog-computing architecture)\n\
    −\nDrone equips many different IoT devices,\nwhich affect processing services\
    \ and energy\n\x13\nBig data processing issues\n\x13\nEthical and privacy\n\x13\
    \nLicensing and legislations\n\x13\nDevelopment of automated image data\ncompression\
    \ algorithms,\n\x13\nDevelopment of a network-centric infrastructure\n\x13\nPrecision\
    \ ﬂying should be improved under all\nweather conditions\n\x13\nCommunication\
    \ constraints\n\x13\nSecurity threats should be addressed by using\nnew emerged\
    \ technologies (i.e., blockchains)\n\x13\nApplying ML techniques between edge/fog\n\
    computing (drone) and the IoT cloud\n\x13\nReal-time processing of swarms of drones’\n\
    photos, recorded movies, and data collection\nnecessitates implementing and designing\n\
    efﬁcient power-distributed algorithms\n[72]\nLogistics and Transportation\n\x13\
    \nFood delivery services\n\x13\nDelivery of ofﬁcial documents\n\x13\nDelivery\
    \ of lightweight commercial products\n+\nFaster delivery of food\n+\nFaster response\n\
    −\nData security on the transmission line\n−\nDrones’ batteries are limited\n\x13\
    \nAir trafﬁc control\n\x13\nBad weather conditions\n\x13\nLiability insurance\n\
    \x13\nLegislations\n\x13\nNavigation system should be developed to\nenable autonomous\
    \ ﬂying of UAVs\n\x13\nLimited ﬂight time\n\x13\nEquations of motion\n[73]\nWireless\
    \ and cellular systems\n\x13\nProvide aerial wireless BSs\n\x13\nUsed to maintain\
    \ connectivity\n\x13\nEnable cellular communications\n+\nLow cost and no signiﬁcant\
    \ infrastructure\nare required\n+\nAllows on-demand communication\n+\nPossibility\
    \ of coverage and network\ncapacity enhancement\n+\nIoT support\n+\nEnhancing\
    \ the performance of delivering\ncommunication services\n+\nMaintaining QoS\n\
    −\nBattery limitation\n−\nInterference\n−\nInteroperability\n\x13\nEnergy limitation\
    \ of the UAVs\n\x13\nChannel modeling and interference\nmanagement\n\x13\nThe\
    \ autonomy and self-control of drones can\nbe improved\n\x13\nFlight time constraints\n\
    \x13\nPerformance analysis under mobility\nconsiderations\n\x13\nSpectrum sharing\
    \ with cellular networks\n\x13\nMobile edge computing with UAV-BSs requires\n\
    more research efforts to enhance its applicability\n[3]\nDrones 2021, 5, 148\n\
    13 of 30\n•\nWireless and cellular networks:\nMany efforts have been dedicated\
    \ to harnessing the full potential of UAV communi-\ncations for cellular and wireless\
    \ communications in the networks industry. The research\ncommunity explored the\
    \ opportunity of UAV-mounted utilization via ﬂying relays and BSs\nthat can dynamically\
    \ reposition themselves to boost network coverage, increase spectral\nefﬁciency,\
    \ and improve user QoS. The UAVs enable low-altitude supports beyond line-of-\n\
    sight (LOS) control and reliable communications [72]. Furthermore, UAVs can bring\
    \ many\nfacilities to cellular IoT-based networks by providing processing facilities\
    \ near the ground\nfor users.\n2.4. UAV-Enabled and -Assisted MEC Architecture\n\
    Centralized networks are easy to maintain because they have just one point of\
    \ failure.\nHowever, due to the instability of the system categories, this design\
    \ is insufﬁcient to\nrespond to ubiquitous applications. A single issue affecting\
    \ the core server might destroy\nthe entire system. Unlike centralized networks,\
    \ distributed networks are deemed more\nstable due to their decentralized architecture,\
    \ since the entirety of the information system\nis dispersed among a vast number\
    \ of nodes that maintain similar conditions. This feature\nimproves distributed\
    \ system security by making it challenging to target many users.\nFurthermore,\
    \ blockchain is a peer-to-peer (P2P) distributed ledger that provides a\nsecure,\
    \ immutable, transparent, and trustless environment due to its distributed architec-\n\
    ture. Integrating this approach with UAVs allows them to record their data in\
    \ the chain of\nblocks as a transaction, ensuring their trustworthiness [74].\
    \ The essential foundations of\nblockchain technology are intelligent contracts\
    \ and consensus mechanisms. This method\neliminates the requirement for a trusted\
    \ third-party system to protect data privacy since\nconsensus techniques maintain\
    \ data integrity. The use of cryptographic methods guaran-\ntees that data on\
    \ blockchains are secure. These exciting blockchain characteristics increase\n\
    the applicability of UAVs in a variety of civil and mission-critical applications\
    \ that use\nUAV-enabled MEC architecture. Moreover, distributed systems outperform\
    \ centralized\nsystems in terms of network speed, since the information is not\
    \ stored in a central lo-\ncation, and the number of users attempting to access\
    \ a server is more signiﬁcant than\nthe server can support, causing long waiting\
    \ times and slowing down the system for\ndecentralized architecture.\nMoving all\
    \ computing activities to the cloud has proven an effective mechanism to\nprocess\
    \ data since the cloud offers greater processing capacity than network edge devices.\n\
    However, data-processing speeds have risen rapidly due to the size of communicated\
    \ data\nand the networks’ bandwidth. Therefore, CC suffers from bottlenecks due\
    \ to the massive\nvolume of data generated in real time. Cameras in UAVs capture\
    \ a tremendous amount\nof video data, which the system should process in real-time\
    \ to enable good decision-\nmaking. Sending data from UAVs to the cloud server\
    \ would mostly result in longer\ndelays. Deploying a large number of IoT devices,\
    \ such as UAVs, would restrict bandwidth,\nreliability and security. Therefore,\
    \ processing data at the network edge would yield shorter\nresponse times, more\
    \ efﬁcient processing, and less pressure on the network.\nMEC is widely acknowledged\
    \ as a vital technology to implement many methods for\nnext-generation IoT applications.\
    \ Due to their versatility and ease of deployment, UAVs\ncan play various roles\
    \ in delivering edge computing services. UAV-enabled MEC designs\ncan be classiﬁed\
    \ and dedicated to a speciﬁc application scenario. A UAV can be considered\nas\
    \ a mobile EC server, an IoT node, or a relay. Firstly, UAVs can participate in\
    \ the system as\nmobile devices when they ofﬂoad their computing to an MEC server.\
    \ Secondly, the UAV\ncan act as the MEC responsible for monitoring a group of\
    \ mobile end nodes. Thirdly, the\nUAV can serve as a relay or gateway between\
    \ mobile end nodes and an MEC server.\nThe UAV may be regarded as a speciﬁc user\
    \ that could ofﬂoad those computing tasks\nexceeding its memory and processing\
    \ capacity to a MEC server, as shown in Figure 4a.\nUAVs typically have limited\
    \ battery capacity and insufﬁcient memory and computing\npower to execute complex\
    \ computational tasks. As a result, ofﬂoading their processing to\nDrones 2021,\
    \ 5, 148\n14 of 30\nthe ground MEC server for computation may increase its battery\
    \ life. In another situation,\nas shown in Figure 4b, the UAV may keep the MEC\
    \ server on board and ﬂy to assist the\nground-based users with the task of computing\
    \ once the ground-based users ofﬂoad their\ncomputation responsibilities to the\
    \ latter. In the third scenario depicted in Figure 4c, the\nUAV serves as a central\
    \ relay, assisting mobile users to ofﬂoad their computing tasks to a\nspeciﬁc\
    \ MEC server.\nDrones 2021, 5, x FOR PEER REVIEW \n13 of 29 \n \nground-based\
    \ users with the task of computing once the ground-based users offload their \n\
    computation responsibilities to the latter. In the third scenario depicted in\
    \ Figure 4c, the \nUAV serves as a central relay, assisting mobile users to offload\
    \ their computing tasks to a \nspecific MEC server. \n \nFigure 4. UAV-enabled\
    \ architecture. \nDespite the substantial benefits afforded by the architecture\
    \ of UAV-enabled MECs \nto provide low latency and high-reliability services to\
    \ IoT devices, numerous challenges \nremain. These challenges are found in intra-UAV\
    \ communication, UAV security, air data \nsecurity, data storage, and management.\
    \ Moreover, the coordination between UAVs and \nground-based users requires considerable\
    \ improvement due to the system’s mobility \ncharacteristics, which complicate\
    \ communication. Another significant limitation of UAVs \nis found in their low\
    \ onboard battery capacity. In addition to the energy spent in hovering, \naccelerating/decelerating,\
    \ and climbing up/down, additional energy is consumed due to \nonboard computations.\
    \ Therefore, designing efficient methods for resource and energy \nmanagement\
    \ is urgently required. \nFurthermore, one of the major design problems regarding\
    \ computation task \nrequirements is the joint trajectory design in UAV-enabled\
    \ MEC networks. In this regard, \nresearch efforts should emphasize how to forecast\
    \ mobile user movement and follow the \ntrajectory so that computing activities\
    \ can be offloaded quickly, and computation results \nmay be sent back to users\
    \ on time. The trajectory design is especially challenging when \ndealing with\
    \ multi-UAV-enabled MEC services. Another challenge is found in the \nintegration\
    \ of the blockchain into UAVs. As standalone technologies, UAVs face many \nchallenges\
    \ such as privacy issues, air traffic violations, quantum attacks, ML, and \n\
    algorithmic game-theory-based attacks [13]. \n3. UAV-Enabled and Assisted MEC\
    \ State of the Art \nThe rapid spread of smart devices has led to intensive computation\
    \ in many \napplications, such as virtual reality, face and object recognition,\
    \ and automatic driving. \nThis poses a severe challenge when intelligent devices\
    \ with limited computing and energy \nresources need to perform the required tasks\
    \ locally [75]. CC can be considered as an \nexpensive solution to overcome these\
    \ impairments. In addition, the CC solution suffers \nfrom high communication\
    \ expenses and high transmission delays due to the core \nFigure 4. UAV-enabled\
    \ architecture.\nDespite the substantial beneﬁts afforded by the architecture\
    \ of UAV-enabled MECs\nto provide low latency and high-reliability services to\
    \ IoT devices, numerous challenges\nremain. These challenges are found in intra-UAV\
    \ communication, UAV security, air data\nsecurity, data storage, and management.\
    \ Moreover, the coordination between UAVs and\nground-based users requires considerable\
    \ improvement due to the system’s mobility\ncharacteristics, which complicate\
    \ communication. Another signiﬁcant limitation of UAVs\nis found in their low\
    \ onboard battery capacity. In addition to the energy spent in hovering,\naccelerating/decelerating,\
    \ and climbing up/down, additional energy is consumed due to\nonboard computations.\
    \ Therefore, designing efﬁcient methods for resource and energy\nmanagement is\
    \ urgently required.\nFurthermore, one of the major design problems regarding\
    \ computation task require-\nments is the joint trajectory design in UAV-enabled\
    \ MEC networks. In this regard, research\nefforts should emphasize how to forecast\
    \ mobile user movement and follow the trajectory\nso that computing activities\
    \ can be ofﬂoaded quickly, and computation results may be sent\nback to users\
    \ on time. The trajectory design is especially challenging when dealing with\n\
    multi-UAV-enabled MEC services. Another challenge is found in the integration\
    \ of the\nblockchain into UAVs. As standalone technologies, UAVs face many challenges\
    \ such as pri-\nvacy issues, air trafﬁc violations, quantum attacks, ML, and algorithmic\
    \ game-theory-based\nattacks [13].\n3. UAV-Enabled and Assisted MEC State of the\
    \ Art\nThe rapid spread of smart devices has led to intensive computation in many\
    \ appli-\ncations, such as virtual reality, face and object recognition, and automatic\
    \ driving. This\nposes a severe challenge when intelligent devices with limited\
    \ computing and energy\nDrones 2021, 5, 148\n15 of 30\nresources need to perform\
    \ the required tasks locally [75]. CC can be considered as an\nexpensive solution\
    \ to overcome these impairments. In addition, the CC solution suffers\nfrom high\
    \ communication expenses and high transmission delays due to the core network’s\n\
    involvement. To this end, some prominent alternatives have been proposed to explore\
    \ the\nlatency delay, including recalling the computation resources from the cloud\
    \ to the edge of\nthe network.\nAs an extension of the edge concept, recently,\
    \ MEC was intensively investigated.\nMEC can bring information technology (IT)\
    \ services and cloud-computing capabilities\nto a mobile network, guaranteeing\
    \ ultra-low delays and offering high bandwidth to the\nuser [76]. UAVs can be\
    \ embedded with lightweight CPUs (central processing units) or\nGPUs (graphics\
    \ processing units) to offer computation services. Therefore, UAVs ﬂy MEC\nservers\
    \ in the sky, offering controllable mobility and high-quality communication links,\n\
    supplying the existing MEC servers on the ground. In this regard, we summarize\
    \ the\nstate-of-the-art situation regarding UAVs’ possibilities as MEC enablers\
    \ or as part of a\nMEC system in an IoT environment where end-nodes and actuators\
    \ cannot deal with the\ngenerated data onboard.\nThe research on UAV-enabled MEC\
    \ or UAV-assisted MEC is in its early phases, includ-\ning using the fog and edge\
    \ computing concepts instead of cloud computing to enhance\nlatency and computation\
    \ performances in IoT users. A summary of related research activi-\nties regarding\
    \ UAV opportunities as an MEC enabler or as part of a MEC system in the IoT\n\
    is listed and highlighted in Table 4.\nTable 4. UAV-enabled MEC and assisted MEC\
    \ research activities.\nRef.\nYear\nEvaluated Performance Metrics\nSummary\n[77]\n\
    2021\n•\nCommunication security issue\nin the dual-UAV-MEC system\nA secure communication\
    \ mechanism was created, dedicated to the\ndual-UAV-MEC system. The main objective\
    \ of this task was to\nmaximize the user’s security and computing capacity by\
    \ optimizing\nthe resources and trajectory of the UAV server. The authors relied\
    \ on\nmathematical techniques, including the sequential convex\napproximation\
    \ (SCA) and block coordinate descent (BCD) algorithms\nto enhance UAV-enabled\
    \ MEC security and computing capacity.\n[37]\n2020\n•\nComputation ofﬂoading\n\
    A hybrid DL and fuzzy c-means clustering-based algorithms were\nproposed to predict\
    \ the positions of ground-based users and UAVs in\na hybrid MEC (H-MEC) network.\
    \ As a result, IoT devices can\nefﬁciently ofﬂoad their intensive tasks to the\
    \ UAV servers.\n[78]\n2020\n•\nComputation ofﬂoading\n•\nLatency\nThe authors\
    \ proposed an intelligent task-ofﬂoading algorithm (iTOA)\nfor UAV-enabled MEC\
    \ services. The proposed approach intelligently\nperceives the network’s environment\
    \ and decides the ofﬂoading\naction using the deep Monte Carlo tree algorithm.\
    \ This method\noutperforms game theory and greedy search-based methods in\nlatency\
    \ performance.\n[79]\n2021\n•\nComputation ofﬂoading\n•\nLatency\nUAVs were adopted\
    \ in 5G mobile networks to reduce the end-to-end\nlatency and improve communication\
    \ reliability. Using UAVs with\nMEC has provided effective trafﬁc management,\
    \ resulting in\ndecreased latency and better ofﬂoading operations.\n[80]\n2021\n\
    •\nEnergy\nA novel system called GEESE was proposed to provide computation\nservices\
    \ on the network’s edge by integrating cloudlets on multiple\naerial UAVs. The\
    \ system performance has been investigated to\nunderstand the relationship between\
    \ energy efﬁciency and\ncomputation task ofﬂoading.\nDrones 2021, 5, 148\n16 of\
    \ 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\nSummary\n[81]\n\
    2021\n•\nEnergy\n•\nComputation handling for\ninnovative logistic applications\n\
    The energy management of UAV-enabled MEC was investigated in\nthe context of a\
    \ realistic autonomous delivery network. A\ncomputational management solution\
    \ was designed explicitly for\nMEC-based task ofﬂoading and scheduling strategies.\
    \ The integrated\nsolution includes both static task ofﬂoading and dynamic resource\n\
    scheduling. The experimental results have revealed that the system\ncan handle\
    \ a greater UAV payload while using less energy.\n[82]\n2021\n•\nEnergy consumption\n\
    The authors addressed the issue of the energy consumption of IoT\ndevices in UAV-enabled\
    \ MEC networks. The energy and ofﬂoading\nrequirements have been improved by optimizing\
    \ the UAV trajectory\nplanning, communications, and computing resource allocation.\n\
    [83]\n2020\n•\nEnergy consumption\n•\nTrajectory planning for UAVs\nA UAV-assisted\
    \ MEC system, in which the UAVs acts as edge servers,\nwas designed to provide\
    \ computing services for IoT devices. The\nproposed approach is based on a k-means\
    \ clustering algorithm to\nminimize the energy consumption of the system by planning\
    \ the\ntrajectories of UAVs efﬁciently.\n[84]\n2020\n•\nEnergy consumption\nThe\
    \ Lagrangian duality method and successive convex\napproximation techniques were\
    \ proposed to reduce UAV-assisted\nMEC computational complexity. The proposed\
    \ approach aimed to\nminimize total energy consumption, including\ncommunication-related\
    \ energy, computation-related energy, and\nUAV energy. This was achieved by optimizing\
    \ bits allocation,\ntime-slot scheduling, power allocation, and UAV trajectory\
    \ design.\n[85]\n2019\n•\nEnergy consumption\n•\nBandwidth allocation\nThe authors\
    \ proposed a UAV-enabled MEC architecture in which the\nUAVs were considered as\
    \ MEC servers. The objective of this\napproach was to minimize the energy consumption\
    \ of both UAV and\nground-based users by scheduling computation resources and\n\
    optimizing the UAV trajectories.\n[86]\n2019\n•\nEnergy consumption\n•\nTime slot\
    \ allocation\n•\nComputation tasks\nThe authors have investigated a UAV-enabled\
    \ MEC system based on\nthe time division multiple access (TDMA) model. A TDMA-based\n\
    scheme was proposed to minimize the user’s energy consumption by\noptimizing the\
    \ UAV coordinates, time-slot allocation, and\ntask partitioning.\n[87]\n2020\n\
    •\nEnergy consumption\n•\nMEC deployment\nA two-layer optimization method was\
    \ provided to address\ndeployment and task-planning issues in a UAV-enabled MEC\
    \ system.\nThis approach proved efﬁcient for power consumption optimization.\n\
    The proposed method was based on a differential evolution\nalgorithm with a removal\
    \ agent.\n[88]\n2021\n•\nEnergy minimization\n•\nUAV trajectory optimization\n\
    A multi-UAV architecture was proposed in which the UAVs act as\ncomputer servers\
    \ to process the ground-based user’s data and to\nminimize energy consumption.\
    \ In this approach, a two-layer strategy\nwas used to optimize the UAV’s task\
    \ scheduling based on dynamic\nscheduling-based bidding, whereas the second layer\
    \ addressed bits\nallocation and the UAV’s ﬂight path.\n[89]\n2021\n•\nEnergy\
    \ optimization\n•\nTasks ofﬂoading\nUAV-enabled MEC architecture based on the\
    \ Markov decision\nprocess (MDP) was proposed to optimize mobile users’ energy\n\
    demands and task ofﬂoading. In this work, the UAVs were\nconsidered intelligent\
    \ mobile users.\n[90]\n2020\n•\nEnergy-saving\n•\nTask ofﬂoading\nAn algorithm\
    \ based on block coordinate descent and successive\nconvex approximation techniques\
    \ was proposed to optimize data\nofﬂoading. By considering a single UAV, the proposed\
    \ system\nimproved the tasks of ofﬂoading and energy consumption.\nDrones 2021,\
    \ 5, 148\n17 of 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\n\
    Summary\n[91]\n2020\n•\nLatency\nA UAV-assisted MEC method was proposed, in which\
    \ the UAVs\nacted as intermediate devices between the ground-based users and\n\
    MEC servers. This method leveraged airborne computing and\nstorage facilities\
    \ to minimize the execution time of ofﬂoaded tasks for\nIoT users. Therefore,\
    \ the task scheduling and ﬂight path of the UAVs\nwere jointly optimized.\n[92]\n\
    2020\n•\nLatency\n•\nOfﬂoading tasks\n•\nSecurity\nThe authors proposed a low-complexity\
    \ iterative algorithm to\noptimize security and privacy, subject to latency, offloading,\
    \ and energy\nconstraints. This method was proposed to optimize the UAV location,\n\
    the user’s transmission power, UAV jamming power, offloading ratio,\nUAV computing\
    \ capacity, and offloading user association.\n[93]\n2018\n•\nLatency\n•\nReliability\n\
    •\nComputation\nAn air/ground framework for MEC was proposed to combine the\n\
    capabilities of ground vehicles with UAVs in terms of\ncommunication, computing,\
    \ and storage.\n[11]\n2020\n•\nLimited ofﬂoading tasks\nAn automatic ofﬂoading\
    \ approach based on the MEC architecture\nhas been proposed to deal with the limited\
    \ processing capabilities of\nMEC servers and ground-based users. The UAVs have\
    \ been used to\ncache the generated data from the IoT devices and then send it\
    \ to the\nMEC servers, which operate in a private blockchain network.\n[94]\n\
    2017\n•\nNetwork connectivity\nA UAV-based MEC infrastructure was proposed to\
    \ improve the\nnetwork connectivity in uncovered areas. The system helped terrestrial\n\
    users to compute their tasks in circumstances such as natural\ncatastrophes or\
    \ in rural locations without communication coverage.\n[95]\n2019\n•\nOfﬂoading\
    \ tasks\n•\nQoS\nUAVs were used as MEC-aided systems in wireless communication\n\
    systems to ensure high QoS for ground-based users. The UAVs ﬂew\naround the users\
    \ to provide computing services in an orthogonal way\nover time.\n[96]\n2021\n\
    •\nPath planning\n•\nQoS\nA multi-UAV-enabled MEC platform was investigated to\
    \ assess RL\nQoS and path planning. The study studied the autonomy and\nself-hovering\
    \ ability of a network of UAVs relying on RL algorithms.\n[97]\n2019\n•\nPower\
    \ consumption\n•\nComputing services\n•\nResources allocation\nMobile peripheral\
    \ computing was deemed a promising technique to\naddress computationally intensive\
    \ issues. UAV-assisted MEC based\non NOMA (non-orthogonal multiple access) can\
    \ provide ﬂexible\ncomputing services for mobile terminals (MTs) in large-scale\
    \ access\nnetworks, as NOMA methods can be adaptive to massive\nconnectivity.\
    \ In this work, an optimization approach was presented\nto minimize the power\
    \ consumption of MTs by jointly optimizing\ntrajectory, task ofﬂoading, computing,\
    \ and resource allocations.\n[98]\n2018\n•\nPropagation losses\n•\nEnergy harvesting\n\
    The authors proposed a UAV-enabled MEC and wireless-powered\narchitecture to tackle\
    \ propagation packet loss in the IoT era.\n[8]\n2019\n•\nQoS\nA joint architecture\
    \ using the edge and cloud models based on UAV\nswarms was proposed to assure\
    \ high service qualities in\nresource-intensive and real-time applications.\n\
    [10]\n2018\n•\nRadio access networks\n•\nEdge caching and computing\nAn AGMEN\
    \ (aerial–ground integrated mobile edge network)\narchitecture was proposed to\
    \ address many EC network issues, such\nas communication, computing, and caching.\
    \ The objective of this\napproach was to optimally allocate computing and storage\
    \ resources.\nThe authors deployed a set of UAVs to ensure spatial and temporal\n\
    coverage, as well as ensuring data delivery for mobile IoT users.\n[99]\n2021\n\
    •\nReal-time\n•\nComputation overhead\nA trafﬁc monitoring system based on the\
    \ multi-EYE method was\npresented to detect and estimate the velocity of unmanned\
    \ vehicles using\naerial image tracking. The image processing was executed in\
    \ real-time\non an embedded edge-computing platform installed on the UAV.\nDrones\
    \ 2021, 5, 148\n18 of 30\nTable 4. Cont.\nRef.\nYear\nEvaluated Performance Metrics\n\
    Summary\n[100]\n2020\n•\nReduce cost\nThe concept of EC with UAV was used to perform\
    \ mapping and\nlodging assessment in a rice crop without human interaction to\n\
    reduce maneuvering cost and improve the quality of productivity.\nThe process\
    \ relies mainly on UAV as an edge server to execute the\nDNN algorithm while processing\
    \ the images.\n[101]\n2021\n•\nResource allocation\nIn this work, AI methods have\
    \ been used in a UAV-enabled MEC\nbased on the NOMA system. This approach allows\
    \ terrestrial mobile\nusers to ofﬂoad their computing duties intelligently. This\
    \ is intended\nto increase connectivity and minimize transmission latency and\n\
    power consumption.\n[102]\n2019\n•\nResource allocation\n•\nEnergy\nThe authors\
    \ intended to extend a 5G network for a video surveillance\napplication using\
    \ a ﬂying ad hoc network consisting of UAVs and EC\nservices. The authors aimed\
    \ to increase the performance of the entire\nMEC aerial platform, reduce latency,\
    \ and ameliorate the reliability of\nthe system’s source usage.\n[103]\n2021\n\
    •\nResource allocation\n•\nPower control in a MEC\nbased system\nTwo approaches\
    \ were proposed to deal with resource allocation and\npower control in a UAV-enabled\
    \ MEC system. The ﬁrst approach was\na centralized multi-agent RL (MARL) algorithm,\
    \ which has been\nused to optimize the system’s power consumption and resource\n\
    allocation. The second approach is a federated multi-agent\nreinforcement learning\
    \ (MAFRL) algorithm, which has been\nproposed to guarantee security and privacy.\n\
    [104]\n2019\n•\nSecurity\nA cyber-defense approach based on a non-cooperative\
    \ game\nalgorithm was proposed to protect a UAV-enabled MEC from\nnetwork and\
    \ ofﬂoading attacks.\n[105]\n2019\n•\nSecurity\n•\nPrivacy\nA MEC server-based\
    \ authentication framework was proposed to be\nintegrated into UAVs. This was\
    \ mainly to enhance the privacy and\nauthentication of UAVs.\n[106]\n2020\n•\n\
    Task ofﬂoading\n•\nResource allocation\nA UAV-assisted multi-user MEC system based\
    \ on frequency division\nmultiple access (FDMA) under Rician’s fading channels\
    \ was proposed\nto test task offloading and resource allocation performances.\n\
    [107]\n2019\n•\nTask ofﬂoading\nA theoretical game strategy based on three types\
    \ of players was\nproposed to formulate and solve the problem of ofﬂoading task\n\
    calculations in UAV-enabled MEC networks.\n[108]\n2018\n•\nTask ofﬂoading\n•\n\
    Throughput\nIn this work, a UAV was used as a mobile edge server to manage\nofﬂoading\
    \ processing tasks in real-time for ground-based users. A\nhybrid scheme based\
    \ on a semi-Markov decision process and DL was\nproposed to maximize the throughput\
    \ requirement.\n[109]\n2020\n•\nTask ofﬂoading\nTwo ofﬂoading schemes for multiple\
    \ UAVs-enabled MEC networks\nwere proposed to optimize computation time and energy\n\
    consumption. A game theory model was adopted to validate the\nproposed strategies.\n\
    [110]\n2018\n•\nTransmission power\n•\nUAV trajectory\nA UAV-assisted MEC environment\
    \ over the social internet of vehicles\n(SIoV) with a three-layer integrated architecture\
    \ was adopted. Total\nutility maximization was achieved by jointly optimizing\
    \ the\ntransmission power of the vehicle and the UAV trajectory.\n4. UAV-Enabled\
    \ MEC and Assisted MEC Based on AI\nMEC is an effective method for overcoming\
    \ time-constrained computing challenges\nin resource-constrained mobile IoT devices.\
    \ The objective is to bring CC services closer\nto customers to minimize latency\
    \ and backhaul network congestion. UAVs with storage\nunits, processing, and communication\
    \ capabilities can function as ﬂying MEC servers at\nthe IoT system’s edge. In\
    \ this context, resource-constrained IoT devices may ofﬂoad their\nDrones 2021,\
    \ 5, 148\n19 of 30\ncomputing activities, either partially or totally, to MEC-server-mounted\
    \ UAVs through\ndirect line-of-sight connectivity. Nevertheless, the system faces\
    \ many challenges related to\ntask prediction, UAV deployment, users’ association,\
    \ signal processing, and joint resource\nallocation. Considering the EC architecture,\
    \ UAVs with ﬂexibility and mobility are likely\nto deliver decentralized solution\
    \ perspectives signiﬁcantly. The ﬂying edge architecture is\nintended to improve\
    \ the CC capabilities of latency-sensitive and real-time IoT applications.\nThis\
    \ enables computing ofﬂoading at the edge of IoT devices rather than centralized\
    \ data\ncenters, reducing communication latency and facilitating real-time decision-making\
    \ and\ncontrol. Since the IoT system operates with many end-devices, a large quantity\
    \ of data\nis ofﬂoaded to the edge devices; this requires developing mechanisms\
    \ that manage and\nexploit the data for various purposes, such as auto-maintenance,\
    \ self-monitoring, and\nprediction. There is a considerable difference between\
    \ EC devices and centralized cloud\nservers regarding their processing capacities\
    \ and memory, limiting multiple AI technolo-\ngies for data processing at the\
    \ edge. Therefore, numerous criteria should be considered\nwhen incorporating\
    \ any AI technique to proﬁt from their robustness, due to memory ca-\npacity and\
    \ energy consumption constraints [111]. EC delivers resources in a decentralized\n\
    manner, allowing faster addressing of user demands than a regular CC, even with\
    \ limited\ncomputational capability. Various challenges arise, such as task scheduling,\
    \ resource allo-\ncation, and ofﬂoading, substantially inﬂuencing the overall\
    \ performance. Nevertheless,\nmost of the proposed solutions are characterized\
    \ by non-convexity and complexity, as\nthey enable continuous learning ability\
    \ for the dynamic environment and make a real-time\ninference with low computational\
    \ complexity. Applying AI to networking challenges has\ngained popularity over\
    \ the past few decades. For instance, ML has been widely used\nin the networking\
    \ domain due to its ability to interact with complex environments and\nmake decisions.\
    \ It may also provide eminent solutions to improve network performance in\nmany\
    \ subdomains, such as resource allocation, network trafﬁc prediction and classiﬁcation,\n\
    congestion control, and routing [32].\nIn most UAV-enabled MEC architectures,\
    \ a controller called the follow-me cloud\n(FMC) collects information about overall\
    \ system states (i.e., users, UAVs, and MEC servers).\nThis control unit is in\
    \ charge of managing ofﬂoading activities using AI technologies.\nFigure 5 displays\
    \ an example of a cloudlet mounted on a UAV for a UAV-assisted MEC\nsystem. The\
    \ UAV receives ofﬂoaded tasks from an IoT device and sends the results back\n\
    upon fulﬁllment of the task’s execution. Furthermore, the UAV could transport\
    \ the received\ndata to the nearest ground servers in case of complex processing\
    \ requirements that overﬁt\nthe onboard cloudlet’s capabilities. The system may\
    \ contain a set of UAVs that serve a\nmassive area of deployed IoT devices that\
    \ include mobile phones, sensors, vehicles, and\nrobots. The data generated by\
    \ the users is analyzed and treated via onboard cloudlets with\nthe help of the\
    \ AI approach.\nAs shown in Table 5, the DRL, DL, and GA can be utilized to solve\
    \ task ofﬂoading\nchallenges such as energy consumption limits, processing, and\
    \ latency. Furthermore,\nfor resource allocation management issues, the algorithms\
    \ RL, DRL, GA, and RL-ACO\nmight be utilized to regulate the energy consumption\
    \ in UAVs and reduce the latency and\nreaction time. Moreover, the later algorithms,\
    \ DE and ACO, can be applied to address\njoint optimization difﬁculties, whereas\
    \ DL may enhance UAVs’ security and path planning\nperformance.\nMEC networks\
    \ should offer seamless connection, meet the QoS needs of many sensors,\nand handle\
    \ a vast volume of data created by physical surroundings. AI approaches offering\n\
    robust analysis, learning, optimizing, and intelligent recognition capabilities\
    \ may be inte-\ngrated into UAV-enabled MEC systems to intelligently carry out\
    \ performance optimization,\ninformation discovery, advanced learning, structure\
    \ organization, and complex decision-\nmaking. Relevant AI techniques include\
    \ supervised learning, unsupervised learning, and\nreinforcement learning.\nDrones\
    \ 2021, 5, 148\n20 of 30\nassisted MEC system. The UAV receives offloaded tasks\
    \ from an IoT device and sends the \nresults back upon fulfillment of the task’s\
    \ execution. Furthermore, the UAV could \ntransport the received data to the nearest\
    \ ground servers in case of complex processing \nrequirements that overfit the\
    \ onboard cloudlet’s capabilities. The system may contain a \nset of UAVs that\
    \ serve a massive area of deployed IoT devices that include mobile phones, \n\
    sensors, vehicles, and robots. The data generated by the users is analyzed and\
    \ treated via \nonboard cloudlets with the help of the AI approach. \n \nFigure\
    \ 5. UAV-enabled MEC architecture. \nAs shown in Table 5, the DRL, DL, and GA\
    \ can be utilized to solve task offloading \nchallenges such as energy consumption\
    \ limits, processing, and latency. Furthermore, for \nresource allocation management\
    \ issues, the algorithms RL, DRL, GA, and RL-ACO might \nbe utilized to regulate\
    \ the energy consumption in UAVs and reduce the latency and \nreaction time. Moreover,\
    \ the later algorithms, DE and ACO, can be applied to address \njoint optimization\
    \ difficulties, whereas DL may enhance UAVs’ security and path \nplanning performance.\
    \ \nMEC networks should offer seamless connection, meet the QoS needs of many\
    \ \nsensors, and handle a vast volume of data created by physical surroundings.\
    \ AI \napproaches offering robust analysis, learning, optimizing, and intelligent\
    \ recognition \ncapabilities may be integrated into UAV-enabled MEC systems to\
    \ intelligently carry out \nperformance optimization, information discovery, advanced\
    \ learning, structure \norganization, and complex decision-making. Relevant AI\
    \ techniques include supervised \nlearning, unsupervised learning, and reinforcement\
    \ learning. \nFigure 5. UAV-enabled MEC architecture.\nFor instance, DRL does\
    \ not require labeled training data for resource allocation. Thus,\nit may enhance\
    \ the process of ofﬂoading choices based on various states of the channel en-\n\
    vironment. This results in reducing the energy bandwidth and computations. To\
    \ that end,\nan MDP method was provided to reduce the delay, energy consumption,\
    \ and bandwidth\nin UAV-assisted MEC by analyzing the instability of energy arrival,\
    \ stochastic computation\ntasks that are provided by wireless users, and a time-varying\
    \ channel state [112]. According\nto the authors of [113], UAV-assisted MEC-based\
    \ DL and DRL would ease the develop-\nment of next-generation communications.\
    \ This is particularly true for joint optimization\nchallenges to improve system\
    \ efﬁciency. Furthermore, UAV communication will be incor-\nporated with 6G networks,\
    \ where IoT device mobility might lead to position uncertainty. In\nthis case,\
    \ DRL, as a hybrid of DL and RL, can offer decision-making solutions and optimize\n\
    handover issues in real-time. This approach allows UAVs to move dynamically and\
    \ in\nreal-time while assuring and minimizing communication delay [114].\nTable\
    \ 5. AI-based approaches used in UAV-enabled MEC.\nAddressed Issues\nAI Approach\n\
    Metrics\nReferences\nTask ofﬂoading\nRL\nEnergy consumption, processing time,\
    \ latency\n[115]\nDRL\nEnergy consumption, latency, cost\n[116]\nGA\nEnergy consumption,\
    \ latency\n[117,118]\nDL\nSecurity, privacy, task prediction, and\ncomputation\
    \ ofﬂoading\n[119,120]\nFI\nExecution time\n[121]\nResources allocation\nRL\n\
    Resources allocation, energy\n[122,123]\nDRL\nLatency, response time, resource\
    \ utilization,\nenergy consumption\n[124,125]\nGA\nEnergy consumption, latency\n\
    [126]\nRL-ACO\nThroughput\n[123]\nJoint optimization issue\nRL\nSecurity and privacy,\
    \ energy consumption\n[127]\nDRL\nCost, energy consumption, latency\n[128]\nGA\n\
    Energy consumption, makespan\n[129]\nDL\nEnergy consumption, cost\n[130]\nRL-ACO\n\
    Energy consumption\n[131]\nSecurity\nRL\nSecurity caching\n[127]\nPath planning\n\
    RL\nPath planning\n[35,132,133]\nDrones 2021, 5, 148\n21 of 30\nAuthors in [134]\
    \ have proved that the deep supervised learning (DSL) method min-\nimizes the\
    \ computation and ofﬂoading overheads and cost of mobile users in the MEC\nsystem.\
    \ This technique allows terrestrial users to obtain an optimal ofﬂoading policy,\
    \ with\nenergy-saving and processing speed enhancement.\nThe authors of [91] have\
    \ investigated the challenges associated with applying AI\ntechniques to UAV-NOMA-MEC\
    \ networks. They proposed an architecture that relies\non AI-based approaches,\
    \ particularly on federated learning and reinforcement learning.\nThe proposed\
    \ framework was dedicated to enabling terrestrial mobile users to ofﬂoad\ntheir\
    \ computational tasks simultaneously, intelligently, and ﬂexibly, thus enhancing\
    \ their\nconnectivity and reducing their transmission latency and energy consumption.\n\
    The authors of [135] used RL and transfer learning algorithms to reduce the latency\
    \ and\nenergy consumption in UAV-enabled MEC networks. They proved that transfer\
    \ learning,\nwhen combined with RL, could signiﬁcantly enhance the system training\
    \ performance\nwhen the users operated dynamically.\nAn optimization problem based\
    \ on MDP was formulated by the authors of [35] to\naddress UAV trajectory optimization\
    \ in UAV-mounted MEC networks. The approach\naimed to enhance the overall system\
    \ QoS, maximize the long-term system reward, and\nmeet the QoS constraint, including\
    \ the computation tasks of mobile users. In [136], the\nauthors have used the\
    \ semi-Markov process and DRL-based algorithms to address the\nUAV-enabled MEC\
    \ networks’ ofﬂoading decisions and resource management policies.\nThe authors\
    \ of [137] have developed a platform known as a ﬂying UAV MEC, in which\nUAVs\
    \ are outﬁtted with computing resources and provide task-ofﬂoading services to\
    \ users.\nThe suggested architecture’s primary purpose was to maximize UAV aerial\
    \ trajectory,\nuser association, and resource allocation. The trajectory control\
    \ method has been used\nto address the optimization issue, assisted by an RL-based\
    \ technique. The results of this\napproach outperformed the results of the equivalent\
    \ benchmark methods. Moreover, the\nauthors of [138] formulated an ML-based novel\
    \ framework to optimize UAV trajectories\nby estimating the user’s mobility data\
    \ to ﬁnd optimal initial UAV placement locations.\nThe joint problem, consisting\
    \ of UAVs trajectories and power control to improve the sum\nrate and maintain\
    \ the data rate requirements of mobile users, was also addressed in the\nemployment\
    \ of a multi-agent Q-learning-based technique. A smart ofﬂoading based on the\n\
    deep Q-learning approach was proposed by the authors of [139] to optimize performance\n\
    in terms of the delay perceived by ground devices connected to the FANET, to enable\
    \ MEC\nin the 5G ﬁeld.\n5. Discussion and Open Issues\nComputational intelligence,\
    \ when combined with UAVs, has improved the underlying\ntechnologies and implementations\
    \ of IoT applications. Nevertheless, researchers should\naddress the remaining\
    \ challenges. Therefore, some signiﬁcant issues need more attention\nin order\
    \ to beneﬁt from UAVs for the realization of ﬂying ECs. These issues may be\n\
    related to scientiﬁc, technological, and societal problems, including challenges\
    \ regarding\nthe technical aspects of the technology, security and privacy concerns,\
    \ and standardization.\nThe challenges concern both the UAVs themselves and EC\
    \ devices. Therefore, great effort\nis needed to address the following challenges.\n\
    Energy consumption: In any UAV-enabled IoT system, most sensors, edge devices,\
    \ and\ndrones are battery-powered and can only remain powered for a limited period.\
    \ Therefore,\nefﬁcient energy consumption protocols and mechanisms are essential\
    \ for UAVs and IoT de-\nvices to ensure a long network lifetime. Improvement efforts\
    \ should address the hardware\nand software architecture of the IoT components\
    \ by integrating energy-harvesting solutions\nor efﬁcient routing protocols. For\
    \ example, AI schemes can be adopted to predict a UAV’s\nresidual energy and energy\
    \ dissipation through the precise adjustment of transmission\nand control parameters\
    \ concerning channel changes. The processing energy dissipation,\ncommunication\
    \ energy, storage energy, and environmental reliability should be considered\n\
    to mitigate the energy of UAVs [115,140]. Moreover, the issues listed below should\
    \ also\nDrones 2021, 5, 148\n22 of 30\nbe considered to mitigate energy consumption,\
    \ to extend the on-air ﬂying time of the\nUAVs employed.\nInterference: The communication\
    \ links between UAVs and IoT devices may become\ndisconnected due to interference,\
    \ which reduces latency performance and may also affect\nthe overall network,\
    \ especially when the UAVs act as a mobile BS. Therefore, the problem\nof interference\
    \ should be addressed, especially in urban and industrial environments,\nwhere\
    \ the number of interconnected devices on the same frequency band is very dense.\
    \ An\nAI-based solution can be applied in UAV-enabled MEC to predict the signal-to-interference\n\
    ratio, based on the collected channel state information (CSI). It is then possible\
    \ to decide on\nthe most appropriate scheme to combat the impact of interference\
    \ or to adjust transmission\nparameters in order to reduce power consumption.\n\
    Interoperability: In any IoT environment, many devices are expected to handle\
    \ the\nrequired tasks without any effort from the end-users. These devices try\
    \ to connect and\ninteract with each other using different protocols and communication\
    \ paradigms. With\nthis diversity, it is sometimes challenging to orchestrate\
    \ the system smoothly. Therefore,\nfurther investigations are necessary to unify\
    \ the controller and communication protocols to\nensure interoperability among\
    \ them.\nMobility and path planning: UAVs require auto-maneuvering without distant\
    \ hu-\nman pilot intervention in random dynamic IoT applications. Therefore, many\
    \ intelligent\nmethods should be considered to enable autonomous UAV ﬂights that\
    \ include collision\navoidance. AI algorithms are the most viable solutions that\
    \ can be used to detect obsta-\ncles and avoid collisions [141]. For instance,\
    \ DL techniques can enable learning from the\ngathered data, which makes their\
    \ integration into UAV a signiﬁcant solution. A serious\neffort should be considered\
    \ to develop green-federated AI solutions, such as RL, to ensure\naccurate auto-ﬂying\
    \ decisions and path and trajectory planning [35,132].\nScalability: The scalability\
    \ challenges concern resources, applications, load balancing,\nand connections.\
    \ Enabling high scalability requires designing efﬁcient schemes that could\neffectively\
    \ manage heterogeneous mobile devices and servers in a UAV-enabled MEC\nenvironment,\
    \ with its highly dynamic demand behavior. For example, some mobile appli-\ncations,\
    \ such as UAVs and autonomous driving, require high data throughput ofﬂoading\
    \ to\nsuccessfully provide such services, despite heterogeneity in the number\
    \ of mobile devices\nand the dynamic demand behavior of the applications mentioned\
    \ in the MEC environment.\nThe MEC system should have an acceptable degree of\
    \ scalability regarding the number\nof servers and services required. As a result,\
    \ it is challenging for difﬁcult areas to estab-\nlish connections and communications\
    \ between mobile devices and servers. To achieve\nconvenient and cost-effective\
    \ mobility and scalability, resulting in continuous service, it is\nnecessary\
    \ to have a stable connection, even in adverse environmental conditions.\nSecurity:\
    \ Drones enable ubiquitous services on an IoT scale. The communications\nand controls\
    \ are realized through P2P wireless transmissions and thus are open to many\n\
    security threats. Therefore, unauthorized connections threaten the system’s privacy.\
    \ It is\nnecessary to propose and design security mechanisms to improve UAV-enabled\
    \ MEC sys-\ntems’ security [142]. The effort should focus on the physical, application,\
    \ and MAC layers.\nThe solutions should integrate recent robust techniques such\
    \ as blockchains, especially\nin IoT applications where UAVs are expected to facilitate\
    \ communication networks. The\ncombination of UAVs with blockchain and AI is now\
    \ an exciting avenue of research to\npredict all sorts of attacks and malware\
    \ that threaten the system’s privacy [127]. However,\nwhile there has been signiﬁcant\
    \ progress in this area, more work needs to be done. Power\nconsumption might\
    \ be a critical constraint for blockchain-based applications as they need\nmore\
    \ computing power. Increasingly complex attacks, such as quantum attacks, ML,\
    \ and\ntheory-based game attacks, could challenge the privacy of blockchain systems\
    \ [143]. More\nresearch is needed to make private blockchain networks more immutable\
    \ and secure in\nUAV-enabled MEC architectures. Moreover, blockchain-enabled softwarization\
    \ for secure\nUAV network systems is also a critical challenge. Blockchain implementation\
    \ in UAV\nDrones 2021, 5, 148\n23 of 30\nsystems presents a complex system integration\
    \ problem requiring rigorous testing before\nconcrete implementation [12].\nIntegration\
    \ of AI schemes: Recently, the utilization of AI schemes among DL, ML, and\nRL\
    \ has become increasingly of interest, to beneﬁt from their powerful performance.\
    \ AI\nschemes are being integrated into UAV-enabled MEC systems as a way to make\
    \ contextual\ndecisions and learn from aggregated data gathered from previous\
    \ tracking experiences. The\ndata collected by the sensors in real-time can be\
    \ proﬁtably exploited for the autonomous\npiloting of UAVs. Therefore, processing\
    \ tasks demand strict computing and storage\nrequirements at computing facilities,\
    \ to be executed exceptionally at the edge. UAVs\nalso have energy and storage\
    \ limitations; thus, portable and lightweight RL, ML, and DL\nalgorithms should\
    \ be designed to cope with these constraints.\nRegulations: Despite the rapid\
    \ emergence of this technology, UAV regulations are\nstill in their infancy, and\
    \ a lack of heterogeneity of national rules and varying levels of\nimplementation\
    \ can be observed. These regulations differ from state to state, and the type\n\
    of regulation is based on the requirements of that use. Several problems are associated\
    \ with\nUAV regulation, including delays in ﬂight approval and poorly documented\
    \ administrative\nprocesses limiting the desired ﬂexibility, preventing widespread\
    \ use of the technology [144].\nLatency and computation issues: Communication\
    \ latency and computing optimization\nremain concerns in MEC-enabled UAV applications,\
    \ affecting transmission efﬁciency and\nreaction time under communication and\
    \ computing constraints. UAV transmission success\nmay be accomplished by offering\
    \ effective methods that decrease response delay. In\none study [145], for example,\
    \ stochastic geometry and queueing theory approaches were\nstudied to minimize\
    \ the response delay for a MEC-enabled UAV network.\nResource allocation: Due\
    \ to UAV battery concerns and trajectory constraints, resource\nallocation is\
    \ critical in UAV-enabled MEC networks. Resources allocation is involved in\n\
    three processes: computing task ofﬂoading, local computing, and UAV hovering.\
    \ Design-\ning an appropriate trajectory can ultimately compromise the calculated\
    \ performance and\noperating costs. According to the authors of [146], resource\
    \ allocation may be structured to\nmeet various goals, including computing bit\
    \ maximization, energy minimization, compu-\ntational efﬁciency maximization,\
    \ cost minimization, completion time minimization, and\nthe consideration of fairness.\n\
    UAV-enabled IoT for B5G and 6G issues: Data-gathering faces several problems in\
    \ IoT\nthat extend beyond the ﬁfth-generation (B5G) and upcoming sixth-generation\
    \ (6G) wireless\nmobile networks. A large amount of data will be generated by\
    \ heterogeneous devices,\nparticularly IoT devices and smartphones at the mobile\
    \ edge; these data are fragmented and\ndispersed among several machines. Therefore,\
    \ distributed solutions such as UAV-enabled\nMEC should be leveraged near mobile\
    \ users to ofﬂoad and process the data. Meanwhile,\ngrowing privacy concerns make\
    \ data collecting increasingly challenging. This consumes\nmore energy and decreases\
    \ the system’s ofﬂoading time [147].\n6. Conclusions\nThe development of wireless\
    \ communication technologies and IT services has made\nthe role of drones more\
    \ ubiquitous in various ﬁelds of application. Drones can serve\nas a link between\
    \ smart devices and cloud data centers, to provide many services that\ncan increase\
    \ the performance of a given IoT system. To the best of our knowledge, this\n\
    paper is considered the ﬁrst work that provides a review of drone-enabled MECs\
    \ based on\nAI. This work discusses the current research trends and provides future\
    \ insights into the\npotential uses of UAV-enabled MEC in the ﬁeld of IoT. It\
    \ highlights the potential roles that\nUAVs can play in enabling communications\
    \ and intelligent computing in the IoT era, by\nreferring to the most widely emerging\
    \ AI techniques that are employed. As mentioned,\nUAVs as MECs are attracting\
    \ considerable interest in scientiﬁc research, to address the\nvarious problems\
    \ and challenges experienced in order to improve the performance of such\napplications\
    \ in different scenarios, such as resource allocation, energy efﬁciency, latency,\n\
    task ofﬂoading, and security. UAV-enabled MEC present an emerging concept that\
    \ require\nDrones 2021, 5, 148\n24 of 30\nmore effort to achieve the necessary\
    \ performance in every scenario of UAV application in\nIoT environments, especially\
    \ regarding MEC.\nAuthor Contributions: Y.Y. carried out this research as part\
    \ of his Ph.D. thesis, under the supervision\nof A.E.O. and M.A. Y.Y., I.E.-Z.,\
    \ A.G.-G., M.A. and A.E.O. contributed to the design and implementa-\ntion of\
    \ the research review, upon the analysis and the selection of the papers, and\
    \ the writing of the\nmanuscript. All authors have read and agreed to the published\
    \ version of the manuscript.\nFunding: This research received no external funding.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    Abbreviations\nThe following abbreviations are used in this manuscript.\nAbbreviation\n\
    Deﬁnition\nAI\nArtiﬁcial intelligence\nCC\nCloud computing\nCPU\nCentral processing\
    \ units\nCV\nComputer vision\nDRL\nDeep reinforcement learning\nEC\nEdge computing\n\
    FANET\nFlying ad hoc network\nFI\nFuzzy inference\nGA\nGenetic algorithm\nGPU\n\
    Graphics processing units\nIoFT\nInternet of Flying Things\nIoT\nInternet of Things\n\
    ISM\nIndustrial scientiﬁc medical\nLC\nLocal computing\nLoRa\nLong-range\nTDMA\n\
    Time division multiple access\nMEC\nMobile edge computing\nML\nMachine learning\n\
    NOMA\nNon-orthogonal multiple access\nQoS\nQuality of service\nRL\nReinforcement\
    \ learning\nUAV\nUnmanned aerial vehicle\nVANET\nVehicular ad hoc network\nBLE\n\
    Bluetooth low energy\nRL-ACO\nReinforcement learning based on ant-colony optimization\n\
    DRL\nDeep reinforcement learning\nVTOL\nVertical take-off and landing\nHTOL\n\
    Horizontal take-off and landing\nLiDAR\nLight detection and ranging\nReferences\n\
    1.\nNižeti´c, S.; Šoli´c, P.; López-de-Ipiña González-de-Artaza, D.; Patrono,\
    \ L. Internet of Things (IoT): Opportunities, issues and\nchallenges towards a\
    \ smart and sustainable future. J. Clean. Prod. 2020, 274, 122877. [CrossRef]\n\
    2.\nShaﬁque, K.; Khawaja, B.A.; Sabir, F.; Qazi, S.; Mustaqim, M. Internet of\
    \ things (IoT) for next-generation smart systems: A review\nof current challenges,\
    \ future trends and prospects for emerging 5G-IoT Scenarios. IEEE Access 2020,\
    \ 8, 23022–23040. [CrossRef]\n3.\nMozaffari, M.; Saad, W.; Bennis, M.; Nam, Y.H.;\
    \ Debbah, M. A Tutorial on UAVs for Wireless Networks: Applications, Challenges,\n\
    and Open Problems. IEEE Commun. Surv. Tutor. 2019, 21, 2334–2360. [CrossRef]\n\
    4.\nLyu, J.; Zeng, Y.; Zhang, R.; Lim, T.J. Placement Optimization of UAV-Mounted\
    \ Mobile Base Stations. IEEE Commun. Lett. 2017,\n21, 604–607. [CrossRef]\nDrones\
    \ 2021, 5, 148\n25 of 30\n5.\nAlzenad, M.; El-Keyi, A.; Lagum, F.; Yanikomeroglu,\
    \ H. 3-D Placement of an Unmanned Aerial Vehicle Base Station (UAV-BS) for\nEnergy-Efﬁcient\
    \ Maximal Coverage. IEEE Wirel. Commun. Lett. 2017, 6, 434–437. [CrossRef]\n6.\n\
    Zhang, S.; Zhang, H.; Di, B.; Song, L. Joint trajectory and power optimization\
    \ for UAV sensing over cellular networks. IEEE\nCommun. Lett. 2018, 22, 2382–2385.\
    \ [CrossRef]\n7.\nMotlagh, N.H.; Bagaa, M.; Taleb, T. UAV-Based IoT Platform:\
    \ A Crowd Surveillance Use Case. IEEE Commun. Mag. 2017, 55,\n128–134. [CrossRef]\n\
    8.\nChen, W.; Liu, B.; Huang, H.; Guo, S.; Zheng, Z. When UAV Swarm Meets Edge-Cloud\
    \ Computing: The QoS Perspective.\nIEEE Netw. 2019, 33, 36–43. [CrossRef]\n9.\n\
    Mao, Y.; You, C.; Zhang, J.; Huang, K.; Letaief, K.B. A Survey on Mobile Edge\
    \ Computing: The Communication Perspective.\nIEEE Commun. Surv. Tutor. 2017, 19,\
    \ 2322–2358. [CrossRef]\n10.\nCheng, N.; Xu, W.; Shi, W.; Zhou, Y.; Lu, N.; Zhou,\
    \ H.; Shen, X. Air-ground integrated mobile edge networks: Architecture,\nchallenges,\
    \ and opportunities. IEEE Commun. Mag. 2018, 56, 26–32. [CrossRef]\n11.\nLiu,\
    \ J.; Zhou, A.; Liu, C.; Zhang, T.; Qi, L.; Wang, S.; Buyya, R. Reliability-Enhanced\
    \ Task Ofﬂoading in Mobile Edge Computing\nEnvironments. IEEE Internet Things\
    \ J. 2021, 124–129. [CrossRef]\n12.\nKumari, A.; Gupta, R.; Tanwar, S.; Kumar,\
    \ N. A taxonomy of blockchain-enabled softwarization for secure UAV network. Comput.\n\
    Commun. 2020, 161, 304–323. [CrossRef]\n13.\nMehta, P.; Gupta, R.; Tanwar, S.\
    \ Blockchain envisioned UAV networks: Challenges, solutions, and comparisons.\
    \ Comput. Commun.\n2020, 151, 518–538. [CrossRef]\n14.\nAbrar, M.; Ajmal, U.;\
    \ Almohaimeed, Z.M.; Gui, X.; Akram, R.; Masroor, R. Energy Efﬁcient UAV-Enabled\
    \ Mobile Edge Computing\nfor IoT Devices: A Review. IEEE Access 2021, 9, 127779–127798.\
    \ [CrossRef]\n15.\nSharma, A.; Vanjani, P.; Paliwal, N.; Basnayaka, C.M.W.; Jayakody,\
    \ D.N.K.; Wang, H.C.; Muthuchidambaranathan, P. Communica-\ntion and networking\
    \ technologies for UAVs: A survey. J. Netw. Comput. Appl. 2020, 168, 102739. [CrossRef]\n\
    16.\nZhang, W.; Li, L.; Zhang, N.; Han, T.; Wang, S. Air-Ground Integrated Mobile\
    \ Edge Networks: A Survey. IEEE Access 2020, 8,\n125998–126018. [CrossRef]\n17.\n\
    Shakarami, A.; Ghobaei-Arani, M.; Shahidinejad, A. A survey on the computation\
    \ ofﬂoading approaches in mobile edge\ncomputing: A machine learning-based perspective.\
    \ Comput. Netw. 2020, 182, 107496. [CrossRef]\n18.\nKorchenko, A.G.; Illyash,\
    \ O.S. The generalized classiﬁcation of Unmanned Air Vehicles. In Proceedings\
    \ of the 2013 IEEE 2nd\nInternational Conference Actual Problems of Unmanned Air\
    \ Vehicles Developments Proceedings (APUAVD), Kiev, Ukraine,\n15–17 October 2013;\
    \ pp. 28–34. [CrossRef]\n19.\nChamola, V.; Kotesh, P.; Agarwal, A.; Naren; Gupta,\
    \ N.; Guizani, M. A Comprehensive Review of Unmanned Aerial Vehicle\nAttacks and\
    \ Neutralization Techniques. Ad Hoc Netw. 2021, 111, 102324. [CrossRef]\n20.\n\
    Guo, Y.; Yin, G.; Sun, H.; Wang, H.; Chen, S.; Senthilnath, J.; Wang, J.; Fu,\
    \ Y. Scaling effects on chlorophyll content estimations\nwith RGB camera mounted\
    \ on a UAV platform using machine-learning methods. Sensors 2020, 20, 5130. [CrossRef]\n\
    21.\nLin, Y.C.; Cheng, Y.T.; Zhou, T.; Ravi, R.; Hasheminasab, S.M.; Flatt, J.E.;\
    \ Troy, C.; Habib, A. Evaluation of UAV LiDAR for\nmapping coastal environments.\
    \ Remote Sens. 2019, 11, 2893. [CrossRef]\n22.\nMiyoshi, G.T.; Arruda, S.; Osco,\
    \ L.P.; Junior, M.; Gonçalves, D.N.; Imai, N.N. A Novel Deep Learning Method to\
    \ Identify Single\nTree Species in UAV-Based Hyperspectral Images. Remote Sens.\
    \ 2020, 12, 1294. [CrossRef]\n23.\nCen, H.; Wan, L.; Zhu, J.; Li, Y.; Li, X.;\
    \ Zhu, Y.; Weng, H. Dynamic monitoring of biomass of rice under different nitrogen\n\
    treatments using a lightweight UAV with dual image—Frame snapshot cameras. Plant\
    \ Methods 2019, 15, 32. [CrossRef] [PubMed]\n24.\nHill, A.C.; Laugier, E.J. Archaeological\
    \ Remote Sensing Using Infrared (NIR) Imagery: A Case Study at the Enﬁeld Shaker\
    \ Village,\nNew Hampshire. Remote Sens. 2020, 12, 690. [CrossRef]\n25.\nZaidi,\
    \ S.; Atiquzzaman, M.; Calafate, C.T. Internet of Flying Things (IoFT): A Survey.\
    \ Comput. Commun. 2021, 165, 53–74.\n[CrossRef]\n26.\nNazib, R.A.; Moh, S. Routing\
    \ Protocols for Unmanned Aerial Vehicle-Aided Vehicular Ad Hoc Networks: A Survey.\
    \ IEEE Access\n2020, 8, 77535–77560. [CrossRef]\n27.\nAl-Fuqaha, A.; Guizani,\
    \ M.; Mohammadi, M.; Aledhari, M.; Ayyash, M. Internet of Things: A Survey on\
    \ Enabling Technologies,\nProtocols, and Applications. IEEE Commun. Surv. Tutor.\
    \ 2015, 17, 2347–2376. [CrossRef]\n28.\nMekki, K.; Bajic, E.; Chaxel, F.; Meyer,\
    \ F. A comparative study of LPWAN technologies for large-scale IoT deployment.\
    \ ICT Express\n2019, 5, 1–7. [CrossRef]\n29.\nYazid, Y.; Ez-Zazi, I.; Arioua,\
    \ M.; Oualkadi, A.E.L. On the LoRa performances under different physical layer\
    \ parameter selection.\nIn Proceedings of the 2020 International Symposium on\
    \ Advanced Electrical and Communication Technologies (ISAECT), Kenitra,\nMorocco,\
    \ 25–27 November 2020; pp. 13–18. [CrossRef]\n30.\nAkpakwu, G.A.; Silva, B.J.;\
    \ Hancke, G.P.; Abu-Mahfouz, A.M. A Survey on 5G Networks for the Internet of\
    \ Things: Communica-\ntion Technologies and Challenges. IEEE Access 2017, 6, 3619–3647.\
    \ [CrossRef]\n31.\nMignardi, S.; Marini, R.; Verdone, R.; Buratti, C. On the performance\
    \ of a uav-aided wireless network based on nb-iot. Drones\n2021, 5, 94. [CrossRef]\n\
    32.\nErdelj, M.; Król, M.; Natalizio, E. Wireless Sensor Networks and Multi-UAV\
    \ systems for natural disaster management.\nComput. Netw. 2017, 124, 72–86. [CrossRef]\n\
    Drones 2021, 5, 148\n26 of 30\n33.\nSohail, M.F.; Member, S. Non-Orthogonal Multiple\
    \ Access for Unmanned Aerial Vehicle Assisted Communication. IEEE Access\n2018,\
    \ 6, 22716–22727. [CrossRef]\n34.\nLiu, D.; Xu, Y.; Wang, J.; Chen, J.; Yao, K.;\
    \ Wu, Q.; Anpalagan, A. Opportunistic UAV utilization in wireless networks: Motivations,\n\
    applications, and challenges. IEEE Commun. Mag. 2020, 58, 62–68. [CrossRef]\n\
    35.\nLiu, Q.; Shi, L.; Sun, L.; Li, J.; Ding, M.; Shu, F.S. Path Planning for\
    \ UAV-Mounted Mobile Edge Computing with Deep\nReinforcement Learning. IEEE Trans.\
    \ Veh. Technol. 2020, 69, 5723–5728. [CrossRef]\n36.\nAli, N.; Jhanjhi, N.Z.;\
    \ Nawaz, S.; Sher, R.; Usmani, A. Smart trafﬁc monitoring system using Unmanned\
    \ Aerial Vehicles (UAVs).\nComput. Commun. 2020, 157, 434–443. [CrossRef]\n37.\n\
    Jiang, F.; Wang, K.; Dong, L.; Pan, C.; Xu, W.; Yang, K. Deep Learning Based Joint\
    \ Resource Scheduling Algorithms for Hybrid\nMEC Networks. IEEE Internet Things\
    \ J. 2020, 7, 6252–6265. [CrossRef]\n38.\nZhou, F.; Wu, Y.; Sun, H.; Chu, Z. UAV-Enabled\
    \ mobile edge computing: Ofﬂoading optimization and trajectory design. In\nProceedings\
    \ of the 2018 IEEE International Conference on Communications (ICC), Kansas City,\
    \ MO, USA, 20–24 May 2018;\npp. 1–6. [CrossRef]\n39.\nKitpo, N.; Inoue, M. Early\
    \ rice disease detection and position mapping system using drone and IoT architecture.\
    \ In Proceedings of\nthe 2018 12th South East Asian Technical University Consortium\
    \ (SEATUC), Yogyakarta, Indonesia, 12–13 March 2018. [CrossRef]\n40.\nPopescu,\
    \ D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana, C. Advanced UAV–WSN System\
    \ for Intelligent Monitoring in\nPrecision Agriculture. Sensors 2020, 20, 817.\
    \ [CrossRef]\n41.\nMazzia, V.; Comba, L.; Khaliq, A.; Chiaberge, M.; Gay, P. UAV\
    \ and Machine Learning Based Reﬁnement of a Satellite-Driven\nVegetation Index\
    \ for Precision Agriculture. Sensors 2020, 20, 2530. [CrossRef]\n42.\nMaddikunta,\
    \ P.K.R.; Hakak, S.; Alazab, M.; Bhattacharya, S.; Gadekallu, T.R.; Khan, W.Z.;\
    \ Pham, Q.V. Unmanned Aerial Vehicles\nin Smart Agriculture: Applications, Requirements,\
    \ and Challenges. IEEE Sens. J. 2021, 21, 17608–17619. [CrossRef]\n43.\nGrosso,\
    \ R.; Mecca, U.; Moglia, G.; Prizzon, F.; Rebaudengo, M. Collecting built environment\
    \ information using UAVs: Time and\napplicability in building inspection activities.\
    \ Sustainability 2020, 12, 4731. [CrossRef]\n44.\nPanday, U.S.; Shrestha, N.;\
    \ Maharjan, S.; Pratihast, A.K.; Shahnawaz; Shrestha, K.L.; Aryal, J. Correlating\
    \ the plant height of\nwheat with aboveground biomass and crop yield using drone\
    \ imagery and crop surface model, a case study from Nepal. Drones\n2020, 4, 28.\
    \ [CrossRef]\n45.\nHentschke, M.; de Freitas, E.P.; Hennig, C.H.; da Veiga, I.C.G.\
    \ Evaluation of altitude sensors for a crop spraying drone. Drones\n2018, 2, 25.\
    \ [CrossRef]\n46.\nSuen, H.K.; Ary, D. Reliability: Conventional Methods. Anal.\
    \ Quant. Behav. Obs. Data 2020, 111–142. [CrossRef]\n47.\nAgapiou, A. Vegetation\
    \ extraction using visible-bands from openly licensed unmanned aerial vehicle\
    \ imagery. Drones 2020, 4, 27.\n[CrossRef]\n48.\nSharma, V.; Choudhary, G.; Ko,\
    \ Y. Behavior and Vulnerability Assessment of Drones-Enabled Industrial Internet\
    \ of Things (IIoT).\nIEEE Access 2018, 6, 43368–43383. [CrossRef]\n49.\nSalhaoui,\
    \ M.; Guerrero-González, A.; Arioua, M.; Ortiz, F.J.; El Oualkadi, A.; Torregrosa,\
    \ C.L. Smart industrial iot monitoring and\ncontrol system based on UAV and cloud\
    \ computing applied to a concrete plant. Sensors 2019, 19, 3316. [CrossRef] [PubMed]\n\
    50.\nNooralishahi, P.; Ibarra-Castanedo, C.; Deane, S.; López, F.; Pant, S.; Genest,\
    \ M.; Avdelidis, N.P.; V Maldague, X.P.; González\nJorge, H.; Miguel González\
    \ de Santos, L. Drone-Based Non-Destructive Inspection of Industrial Sites: A\
    \ Review and Case Studies.\nDrones 2021, 5, 106. [CrossRef]\n51.\nShahmoradi,\
    \ J.; Talebi, E.; Roghanchi, P.; Hassanalian, M. A Comprehensive Review of Applications\
    \ of Drone Technology in the\nMining Industry. Drones 2020, 4, 34. [CrossRef]\n\
    52.\nCowley, D.C.; Moriarty, C.; Geddes, G.; Brown, G.L.; Wade, T.; Nichol, C.J.\
    \ UAVs in context: Archaeological airborne recording in\na national body of survey\
    \ and record. Drones 2018, 2, 2. [CrossRef]\n53.\nMangewa, L.J.; Ndakidemi, P.A.;\
    \ Munishi, L.K. Integrating UAV technology in an ecological monitoring system\
    \ for community\nwildlife management areas in Tanzania. Sustainability 2019, 11,\
    \ 6116. [CrossRef]\n54.\nRees, A.F.; Avens, L.; Ballorain, K.; Bevan, E.; Broderick,\
    \ A.C.; Carthy, R.R.; Christianen, M.J.A.; Duclos, G.; Heithaus, M.R.;\nJohnston,\
    \ D.W.; et al. The potential of unmanned aerial systems for sea turtle research\
    \ and conservation: A review and future\ndirections. Endanger. Species Res. 2018,\
    \ 35, 81–100. [CrossRef]\n55.\nSalhaoui, M.; Molina-molina, J.C.; Guerrero-gonz,\
    \ A.; Arioua, M.; Ortiz, F.J. Autonomous Underwater Monitoring System for\nDetecting\
    \ Life on the Seabed by Means of Computer Vision Cloud Services. Remote Sens.\
    \ 2020, 12, 198. [CrossRef]\n56.\nWang, D.; Shao, Q.; Yue, H. Surveying wild animals\
    \ from satellites, manned aircraft and unmanned aerial systems (UASs):\nA review.\
    \ Remote Sens. 2019, 11, 1308. [CrossRef]\n57.\nChamola, V.; Hassija, V.; Gupta,\
    \ V.; Guizani, M. A Comprehensive Review of the COVID-19 Pandemic and the Role\
    \ of IoT, Drones,\nAI, Blockchain, and 5G in Managing its Impact. IEEE Access\
    \ 2020, 8, 90225–90265. [CrossRef]\n58.\nJeyabalan, V.; Nouvet, E.; Meier, P.;\
    \ Donelle, L. Context-speciﬁc challenges, opportunities, and ethics of drones\
    \ for healthcare\ndelivery in the eyes of program managers and ﬁeld staff: A multi-site\
    \ qualitative study. Drones 2020, 4, 44. [CrossRef]\n59.\nZhu, J.; Sun, K.; Jia,\
    \ S.; Li, Q.; Hou, X.; Lin, W.; Liu, B.; Qiu, G. Urban Trafﬁc Density Estimation\
    \ Based on Neural Network. IEEE J.\nSel. Top. Appl. Earth Obs. Remote Sens. 2018,\
    \ 11, 4968–4981. [CrossRef]\n60.\nCongress, S.S.C.; Puppala, A.J.; Lundberg, C.L.\
    \ Total system error analysis of UAV-CRP technology for monitoring transportation\n\
    infrastructure assets. Eng. Geol. 2018, 247, 104–116. [CrossRef]\nDrones 2021,\
    \ 5, 148\n27 of 30\n61.\nOutay, F.; Abdullah, H.; Adnan, M. Applications of unmanned\
    \ aerial vehicle (UAV) in road safety, trafﬁc and highway infrastruc-\nture management:\
    \ Recent advances and challenges. Transp. Res. Part A 2020, 141, 116–129. [CrossRef]\n\
    62.\nMalihi, S.; Javad, M.; Zoej, V.; Hahn, M. Large-Scale Accurate Reconstruction\
    \ of Buildings Employing Point Clouds Generated\nfrom UAV Imagery. Remote Sens.\
    \ 2018, 10, 1148. [CrossRef]\n63.\nMohamed, N.; Al-jaroodi, J.; Jawhar, I.; Idries,\
    \ A.; Mohammed, F. Technological Forecasting & Social Change Unmanned aerial\n\
    vehicles applications in future smart cities. Technol. Forecast. Soc. Chang. 2020,\
    \ 153, 119293. [CrossRef]\n64.\nQi, F.; Zhu, X.; Mang, G.; Kadoch, M.; Li, W.\
    \ Internet of things for smart citites: Technologies and applications UAV Network\
    \ and\nIoT in the Sky for Future Smart Cities. IEEE Netw. 2019, 33, 96–101. [CrossRef]\n\
    65.\nOrgeira-crespo, P.; Ulloa, C.; Rey-gonzalez, G.; Antonio, P. Methodology\
    \ for Indoor Positioning and Landing of an Unmanned\nAerial Vehicle in a Smart\
    \ Manufacturing Plant for Light Part Delivery. Electronics 2020, 9, 1680. [CrossRef]\n\
    66.\nErdelj, M.; Natalizio, E. UAV-assisted disaster management: Applications\
    \ and open issues. In Proceedings of the 2016 International\nConference on Computing,\
    \ Networking and Communications (ICNC), Kauai, HI, USA, 15–18 February 2016; pp.\
    \ 1–5. [CrossRef]\n67.\nErdelj, M.; Natalizio, E.; Chowdhury, K.R.; Akyildiz,\
    \ I.F. Help from the Sky: Leveraging UAVs for Disaster Management.\nIEEE Pervasive\
    \ Comput. 2017, 16, 24–32. [CrossRef]\n68.\nLiu, D.; Xia, X.; Chen, J.; Li, S.\
    \ Integrating Building Information Model and Augmented Reality for Drone-Based\
    \ Building\nInspection. J. Comput. Civ. Eng. 2021, 35, 04020073. [CrossRef]\n\
    69.\nChen, S.; Laefer, D.F.; Mangina, E.; Zolanvari, S.M.I.; Byrne, J. UAV Bridge\
    \ Inspection through Evaluated 3D Reconstructions.\nJ. Bridg. Eng. 2019, 24, 05019001.\
    \ [CrossRef]\n70.\nHildmann, H.; Kovacs, E. Review: Using Unmanned Aerial Vehicles\
    \ (UAVs) as Mobile Sensing Platforms (MSPs) for Disaster\nResponse, Civil Security\
    \ and Public Safety. Drones 2019, 3, 59. [CrossRef]\n71.\nBang, S.; Kim, H.; Kim,\
    \ H. Automation in Construction UAV-based automatic generation of high-resolution\
    \ panorama at a\nconstruction site with a focus on preprocessing for image stitching.\
    \ Autom. Constr. 2017, 84, 70–80. [CrossRef]\n72.\nLin, X.; Yajnanarayana, V.;\
    \ Muruganathan, S.D.; Gao, S.; Asplund, H.; Maattanen, H.L.; Bergstrom, M.; Euler,\
    \ S.; Wang, Y.P.E. The\nSky is Not the Limit: LTE for Unmanned Aerial Vehicles.\
    \ IEEE Commun. Mag. 2018, 56, 204–210. [CrossRef]\n73.\nVilla, D.K.D.; Brandão,\
    \ A.S.; Sarcinelli-Filho, M. A Survey on Load Transportation Using Multirotor\
    \ UAVs. J. Intell. Robot. Syst.\nTheory Appl. 2020, 98, 267–296. [CrossRef]\n\
    74.\nAlladi, T.; Chamola, V.; Sahu, N.; Guizani, M. Applications of blockchain\
    \ in unmanned aerial vehicles: A review. Veh. Commun.\n2020, 23, 100249. [CrossRef]\n\
    75.\nRen, J.; Guo, H.; Xu, C.; Zhang, Y. Serving at the Edge: A Scalable IoT Architecture\
    \ Based on Transparent Computing. IEEE Netw.\n2017, 31, 96–105. [CrossRef]\n76.\n\
    Mach, P.; Becvar, Z. Mobile Edge Computing: A Survey on Architecture and Computation\
    \ Ofﬂoading. IEEE Commun. Surv. Tutor.\n2017, 19, 1628–1656. [CrossRef]\n77.\n\
    Lu, W.; Ding, Y.; Gao, Y.; Hu, S.; Wu, Y.; Zhao, N.; Gong, Y. Resource and Trajectory\
    \ Optimization for Secure Communications in\nDual-UAV-MEC Systems. IEEE Trans.\
    \ Ind. Inform. 2021, 3203, 1–10. [CrossRef]\n78.\nChen, J.; Chen, S.; Luo, S.;\
    \ Wang, Q.; Cao, B.; Li, X. An intelligent task of ﬂ oading algorithm (iTOA) for\
    \ UAV edge computing\nnetwork. Digit. Commun. Netw. 2020, 6, 433–443. [CrossRef]\n\
    79.\nZhu, S.; Lin, G.; Zhao, D.; Cheng, N.; Zhang, Q.; Lang, X. Learning-Based\
    \ Computation Ofﬂoading Approaches in UAVs-Assisted\nEdge Computing. IEEE Trans.\
    \ Veh. Technol. 2021, 70, 928–944. [CrossRef]\n80.\nLiyanage, M.; Dar, F.; Sharma,\
    \ R.; Flores, H. GEESE: Edge computing enabled by UAVs. Pervasive Mob. Comput.\
    \ 2021, 72, 101340.\n[CrossRef]\n81.\nXu, J.; Liu, X.; Li, X.; Zhang, L.; Jin,\
    \ J.; Yang, Y. Energy aware Computation Management Strategy for Smart Logistic\
    \ System with\nMEC. IEEE Internet Things J. 2021, 4662, 1–17. [CrossRef]\n82.\n\
    Li, W.T.; Zhao, M.; Wu, Y.H.; Yu, J.J.; Bao, L.Y.; Yang, H.; Liu, D. Collaborative\
    \ ofﬂoading for UAV—enabled time—sensitive MEC\nnetworks. EURASIP J. Wirel. Commun.\
    \ Netw. 2021, 2021, 1. [CrossRef]\n83.\nLiu, Y.; Xiong, K.; Ni, Q.; Member, S.;\
    \ Fan, P.; Member, S.; Letaief, K.B. UAV-assisted Wireless Powered Cooperative\
    \ Mobile Edge\nComputing: Joint Ofﬂoading, CPU Control and Trajectory Optimization.\
    \ IEEE Internet Things J. 2019, 7, 2777–2790. [CrossRef]\n84.\nZhang, T.; Xu,\
    \ Y.; Loo, J.; Yang, D.; Xiao, L. Joint Computation and Communication Design for\
    \ UAV-Assisted Mobile Edge\nComputing in IoT. IEEE Trans. Ind. Inform. 2019, 16,\
    \ 5505–5516. [CrossRef]\n85.\nHu, X.; Wong, K.K.; Yang, K.; Zheng, Z. UAV-Assisted\
    \ Relaying and Edge Computing: Scheduling and Trajectory Optimization.\nIEEE Trans.\
    \ Wirel. Commun. 2019, 18, 4738–4752. [CrossRef]\n86.\nDu, Y.; Yang, K.; Wang,\
    \ K.; Zhang, G.; Zhao, Y.; Chen, D. Joint Resources and Workﬂow Scheduling in\
    \ UAV-Enabled Wirelessly-\nPowered MEC for IoT Systems. IEEE Trans. Veh. Technol.\
    \ 2019, 68, 10187–10200. [CrossRef]\n87.\nWang, Y.; Ru, Z.Y.; Wang, K.; Huang,\
    \ P.Q. Joint Deployment and Task Scheduling Optimization for Large-Scale Mobile\
    \ Users in\nMulti-UAV-Enabled Mobile Edge Computing. IEEE Trans. Cybern. 2020,\
    \ 50, 3984–3997. [CrossRef] [PubMed]\n88.\nLuo, Y.; Ding, W.; Zhang, B. Optimization\
    \ of Task Scheduling and Dynamic Service Strategy for Multi-UAV-enabled Mobile\
    \ Edge\nComputing System. IEEE Trans. Cogn. Commun. Netw. 2021, 7, 970–984. [CrossRef]\n\
    89.\nOuyang, W.; Chen, Z.; Wu, J.; Yu, G.; Zhang, H. Dynamic Task Migration Combining\
    \ Energy Efﬁciency and Load Balancing\nOptimization in Three-Tier UAV-Enabled\
    \ Mobile Edge Computing System. Electronics 2021, 10, 190. [CrossRef]\nDrones\
    \ 2021, 5, 148\n28 of 30\n90.\nGuo, H.; Liu, J. UAV-Enhanced Intelligent Ofﬂoading\
    \ for Internet of Things at the Edge. IEEE Trans. Ind. Inform. 2020, 16,\n2737–2746.\
    \ [CrossRef]\n91.\nZhang, B.; Zhang, G.; Ma, S.; Yang, K.; Wang, K. Efﬁcient Multitask\
    \ Scheduling for Completion Time Minimization in UAV-\nAssisted Mobile Edge Computing.\
    \ Mob. Inf. Syst. 2020, 2020, 8791030. [CrossRef]\n92.\nZhou, Y.; Pan, C.; Yeoh,\
    \ P.L.; Wang, K.; Elkashlan, M.; Vucetic, B.; Li, Y. Secure Communications for\
    \ UAV-Enabled Mobile Edge\nComputing Systems. IEEE Trans. Commun. 2020, 68, 376–388.\
    \ [CrossRef]\n93.\nZhou, Z.; Feng, J.; Tan, L.; He, Y.; Gong, J. An air-ground\
    \ integration approach for mobile edge computing in IoT. IEEE Commun.\nMag. 2018,\
    \ 56, 40–47. [CrossRef]\n94.\nNarang, M.; Xiang, S.; Liu, W.; Gutierrez, J.; Chiaraviglio,\
    \ L. UAV-assisted Edge Infrastructure for Challenged Networks. In\nProceedings\
    \ of the 2017 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS),\
    \ Atlanta, GA, USA,\n1–4 May 2017. [CrossRef]\n95.\nHu, Q.; Cai, Y.; Yu, G.; Qin,\
    \ Z.; Zhao, M.; Li, G.Y. Joint ofﬂoading and trajectory design for UAV-enabled\
    \ mobile edge computing\nsystems. IEEE Internet Things J. 2019, 6, 1879–1892.\
    \ [CrossRef]\n96.\nChang, H.; Chen, Y.; Zhang, B.; Doermann, D. Multi-UAV Mobile\
    \ Edge Computing and Path Planning Platform Based on\nReinforcement Learning.\
    \ IEEE Trans. Emerg. Top. Comput. Intell. 2021, 1–10. [CrossRef]\n97.\nDiao, X.;\
    \ Zheng, J.; Wu, Y.; Cai, Y.; Anpalagan, A. Joint Trajectory Design, Task Data,\
    \ and Computing Resource Allocations for\nNOMA-Based and UAV-Assisted Mobile Edge\
    \ Computing. IEEE Access 2019, 7, 117448–117459. [CrossRef]\n98.\nZhou, F.; Wu,\
    \ Y.; Hu, R.Q.; Qian, Y. Computation rate maximization in UAV-Enabled wireless-powered\
    \ mobile-edge computing\nsystems. IEEE J. Sel. Areas Commun. 2018, 36, 1927–1941.\
    \ [CrossRef]\n99.\nBalamuralidhar, N.; Tilon, S.; Nex, F. MultEYE: Monitoring\
    \ System for Real-Time Vehicle Detection, Tracking and Speed\nEstimation from\
    \ UAV Imagery on Edge-Computing Platforms. Remote Sens. 2021, 13, 573. [CrossRef]\n\
    100. Yang, M.; Boubin, J.G.; Ping, H.; Tseng, H.; Hsu, Y.; Stewart, C.C. Adaptive\
    \ autonomous UAV scouting for rice lodging assessment\nusing edge computing with\
    \ deep learning EDANet. Comput. Electron. Agric. 2020, 179, 105817. [CrossRef]\n\
    101. Yang, Z.; Chen, M.; Liu, X.; Liu, Y.; Chen, Y.; Cui, S.; Poor, H.V. Aerial\
    \ Computing: Drones for Multi-Access Edge Computing\nAI-Driven UAV-NOMA-MEC in\
    \ Next Generation Wireless Networks. IEEE Wirel. Commun. 2021, 28. [CrossRef]\n\
    102. Grasso, C.; Schembra, G. A Fleet of MEC UAVs to Extend a 5G Network Slice\
    \ for Video Monitoring with Low-Latency Constraints.\nJ. Sens. Actuator Netw.\
    \ 2019, 8, 3. [CrossRef]\n103. Nie, Y.; Member, S.; Zhao, J.; Member, S.; Gao,\
    \ F.; Yu, F.R. Semi-Distributed Resource Management in UAV-Aided MEC Systems:\n\
    A Multi-Agent Federated Reinforcement Learning Approach. IEEE Trans. Veh. Technol.\
    \ 2021, 1–12. [CrossRef]\n104. Sedjelmaci, H.; Boudguiga, A.; Ben, I.; Mohammed,\
    \ S. Ad Hoc Networks An efﬁcient cyber defense framework for UAV-Edge\ncomputing\
    \ network. Ad Hoc Netw. 2019, 94, 101970. [CrossRef]\n105. Tian, Y.; Yuan, J.;\
    \ Song, H. Journal of Information Security and Applications Efﬁcient privacy-preserving\
    \ authentication framework\nfor e dge-assiste d Internet of Drones. J. Inf. Secur.\
    \ Appl. 2019, 48, 102354. [CrossRef]\n106. Wang, G.; Yu, X.; Xu, F.; Cai, J. Task\
    \ ofﬂoading and resource allocation for UAV-assisted mobile edge computing with\
    \ imperfect\nchannel estimation over Rician fading channels. EURASIP J. Wirel.\
    \ Commun. Netw. 2020, 8, 1–19. [CrossRef]\n107. Messous, M.; Arfaoui, A.; Alioua,\
    \ A.; Senouci, S.; Ea, D.; Comté, F. A Sequential Game Approach for Computation-Ofﬂoading\n\
    in an UAV Network. In Proceedings of the GLOBECOM 2017—2017 IEEE Global Communications\
    \ Conference, Singapore,\n4–8 December 2017; pp. 1–7. [CrossRef]\n108. Li, J.;\
    \ Liu, Q.; Wu, P.; Shu, F.; Jin, S. Task Ofﬂoading for UAV-based Mobile Edge Computing\
    \ via Deep Reinforcement Learning. In\nProceedings of the 2018 IEEE/CIC International\
    \ Conference on Communications, Beijing, China, 16–18 August 2018; pp. 798–802.\n\
    [CrossRef]\n109. Ren, Y.; Xie, Z.; Ding, Z.; Sun, X.; Xia, J.; Tian, Y. Computation\
    \ ofﬂoading game in multiple unmanned aerial vehicle-enabled\nmobile edge computing\
    \ networks. IET Commun. 2021, 15, 1392–1401. [CrossRef]\n110. Zhang, L.; Zhao,\
    \ Z.; Wu, Q.; Zhao, H.; Xu, H.; Wu, X. Energy-Aware Dynamic Resource Allocation\
    \ in UAV Assisted Mobile Edge\nComputing Over Social Internet of Vehicles. IEEE\
    \ Access 2018, 6, 56700–56715. [CrossRef]\n111. Wang, X.; Han, Y.; Leung, V.C.M.;\
    \ Niyato, D.; Yan, X.; Chen, X. Convergence of Edge Computing and Deep Learning:\
    \ A Compre-\nhensive Survey. IEEE Commun. Surv. Tutor. 2020, 22, 869–904. [CrossRef]\n\
    112. Wang, H.; Ke, H.; Sun, W. Unmanned-aerial-vehicle-assisted computation ofﬂoading\
    \ for mobile edge computing based on deep\nreinforcement learning. IEEE Access\
    \ 2020, 8, 180784–180798. [CrossRef]\n113. Ullah, Z.; Al-Turjman, F.; Moatasim,\
    \ U.; Mostarda, L.; Gagliardi, R. UAVs joint optimization problems and machine\
    \ learning to\nimprove the 5G and Beyond communication. Comput. Netw. 2020, 182,\
    \ 107478. [CrossRef]\n114. Pourghasemian, M.; Abedi, M.R.; Salarhosseini, S.;\
    \ Mokari, N.; Javan, M.R.; Jorswieck, E.A. AI-Based and Mobility-Aware Energy\n\
    Efﬁcient Resource Allocation and Trajectory Design for NFV Enabled Aerial Networks.\
    \ arXiv 2021, arXiv:2105.10282. Available\nonline: https://arxiv.org/abs/2105.10282v1\
    \ (accessed on 12 November 2021).\n115. Xu, J.; Chen, L.; Ren, S. Online Learning\
    \ for Ofﬂoading and Autoscaling in Energy Harvesting Mobile Edge Computing.\n\
    IEEE Trans. Cogn. Commun. Netw. 2017, 3, 361–373. [CrossRef]\n116. Wang, J.; Hu,\
    \ J.; Min, G.; Zhan, W.; Ni, Q.; Georgalas, N. Computation Ofﬂoading in Multi-Access\
    \ Edge Computing Using a Deep\nSequential Model Based on Reinforcement Learning.\
    \ IEEE Commun. Mag. 2019, 57, 64–69. [CrossRef]\nDrones 2021, 5, 148\n29 of 30\n\
    117. Bozorgchenani, A.; Member, S.; Mashhadi, F.; Member, S. Multi-Objective Computation\
    \ Sharing in Energy and Delay Constrained\nMobile Edge Computing Environments.\
    \ IEEE Trans. Mob. Comput. 2020, 20, 2992–3005. [CrossRef]\n118. Tang, L.; Tang,\
    \ B.; Kang, L.; Zhang, L. A Novel Task Caching and Migration Strategy in Multi-Access\
    \ Edge Computing Based on\nthe Genetic Algorithm. Futur. Internet 2019, 11, 181.\
    \ [CrossRef]\n119. Dinh, T.Q.; Member, S.; La, Q.D.; Quek, T.Q.S. Distributed\
    \ Learning for Computation Ofﬂoading in Mobile Edge Computing.\nIEEE Trans. Commun.\
    \ 2018, 66, 6353–6367. [CrossRef]\n120. Miao, Y.; Wu, G.; Li, M.; Ghoneim, A.;\
    \ Al-rakhami, M. Intelligent task prediction and computation ofﬂoading based on\
    \ mobile-\nedge cloud computing. Futur. Gener. Comput. Syst. 2020, 102, 925–931.\
    \ [CrossRef]\n121. Li, G.; Zhou, H.; Feng, B.; Li, G.; Li, T.; Xu, Q.; Quan, W.\
    \ Fuzzy Theory Based Security Service Chaining for Sustainable\nMobile-Edge Computing.\
    \ Mob. Inf. Syst. 2017, 2017, 8098394. [CrossRef]\n122. Vimal, S.; Khari, M.;\
    \ Dey, N.; González, R.; Robinson, Y.H. Enhanced resource allocation in mobile\
    \ edge computing using\nreinforcement learning based MOACO algorithm for IIOT.\
    \ Comput. Commun. 2020, 151, 355–364. [CrossRef]\n123. Li, J.; Gao, H.; Lv, T.;\
    \ Lu, Y. Deep reinforcement learning based computation ofﬂoading and resource\
    \ allocation for MEC. In\nProceedings of the 2018 IEEE Wireless Communications\
    \ and Networking Conference (WCNC), Barcelona, Spain, 15–18 April\n2018; pp. 1–6.\
    \ [CrossRef]\n124. Wang, J.; Member, S.; Zhao, L.; Member, S.; Liu, J.; Member,\
    \ S. Smart Resource Allocation for Mobile Edge Computing: A Deep\nReinforcement\
    \ Learning Approach. IEEE Trans. Emerg. Top. Comput. 2019, 9, 1529–1541. [CrossRef]\n\
    125. Zhang, Q.; Lin, M.; Yang, L.T.; Chen, Z.; Li, P. Energy-Efﬁcient Scheduling\
    \ for Real-Time Systems Based on Deep Q-Learning\nModel. IEEE Trans. Sustain.\
    \ Comput. 2017, 4, 132–141. [CrossRef]\n126. Luo, Z.; Liwang, M.; Lin, Z.; Huang,\
    \ L.; Du, X. Energy-Efﬁcient Caching for Mobile Edge Computing in 5G Networks.\
    \ Appl. Sci.\n2017, 7, 557. [CrossRef]\n127. Xiao, L.; Wan, X.; Dai, C.; Du, X.;\
    \ Chen, X.; Guizani, M. Security in Mobile Edge Caching with Reinforcement Learning.\
    \ IEEE Wirel.\nCommun. 2018, 25, 116–122. [CrossRef]\n128. Huang, L.; Feng, X.;\
    \ Zhang, C.; Qian, L.; Wu, Y. Deep reinforcement learning-based joint task of\
    \ ﬂ oading and bandwidth\nallocation for multi-user mobile edge computing. Digit.\
    \ Commun. Netw. 2019, 5, 10–17. [CrossRef]\n129. Li, Z. Genetic Algorithm-Based\
    \ Optimization of Ofﬂoading and Resource Allocation in Mobile-Edge Computing.\
    \ Information\n2020, 11, 83. [CrossRef]\n130. Huang, L.; Feng, X.; Feng, A.; Huang,\
    \ Y.; Qian, L.P. Distributed Deep Learning-based Ofﬂoading for Mobile Edge Computing\n\
    Distributed Deep Learning-based Ofﬂoading for Mobile Edge. Mob. Netw. Appl. 2018,\
    \ 1–8. [CrossRef]\n131. Guo, F.; Zhang, H.; Ji, H.; Li, X.; Leung, V.C.M. An efﬁcient\
    \ computation ofﬂoading management scheme in the densely deployed\nsmall cell\
    \ networks with mobile edge computing. IEEE/ACM Trans. Netw. 2018, 26, 2651–2664.\
    \ [CrossRef]\n132. Wang, L.; Wang, K.; Pan, C.; Xu, W.; Aslam, N.; Hanzo, L. Multi-Agent\
    \ Deep Reinforcement Learning-Based Trajectory Planning\nfor Multi-UAV Assisted\
    \ Mobile Edge Computing. IEEE Trans. Cogn. Commun. Netw. 2021, 7, 73–84. [CrossRef]\n\
    133. Liu, Y.; Member, S.; Chen, Y.; Member, S. Artiﬁcial Intelligence Driven UAV-NOMA-MEC\
    \ in Next Generation Wireless Networks.\narXiv 2021, arXiv:2101.11681. Available\
    \ online: https://arxiv.org/abs/2101.11681v1 (accessed on 12 November 2021).\n\
    134. Yu, S.; Wang, X.; Langar, R. Computation ofﬂoading for mobile edge computing:\
    \ A deep learning approach. In Proceedings of the\nIEEE International Symposium\
    \ on Personal, Indoor and Mobile Radio Communications, Bologna, Italy, 9–12 September\
    \ 2018;\npp. 1–6. [CrossRef]\n135. Chen, L.; Zhao, R.; He, K.; Zhao, Z.; Fan,\
    \ L. Intelligent ubiquitous computing for future UAV-enabled MEC network systems.\n\
    Cluster Comput. 2021. [CrossRef]\n136. Liu, Y.; Xie, S.; Zhang, Y. Cooperative\
    \ Ofﬂoading and Resource Management for UAV-Enabled Mobile Edge Computing in Power\n\
    IoT System. IEEE Trans. Veh. Technol. 2020, 69, 12229–12239. [CrossRef]\n137.\
    \ Liu, X.; Liu, Y.; Chen, Y.; Hanzo, L. Trajectory design and power control for\
    \ multi-UAV assisted wireless networks: A machine\nlearning approach. IEEE Trans.\
    \ Veh. Technol. 2019, 68, 7957–7969. [CrossRef]\n138. Ma, X.; Yin, C.; Liu, X.\
    \ Machine Learning Based Joint Ofﬂoading and Trajectory Design in UAV Based MEC\
    \ System for IoT\nDevices. In Proceedings of the 2020 IEEE 6th International Conference\
    \ on Computer and Communications (ICCC), Chengdu,\nChina, 11–14 December 2020;\
    \ pp. 902–909. [CrossRef]\n139. Grasso, C.; Raftopoulos, R.; Schembra, G. Deep\
    \ Q-Learning for Job Ofﬂoading Orchestration in a Fleet of MEC UAVs in 5G\nEnvironments.\
    \ In Proceedings of the 2021 IEEE 7th International Conference on Network Softwarization\
    \ (NetSoft), Tokyo, Japan,\n28 June–2 July 2021; pp. 186–190. [CrossRef]\n140.\
    \ Zhang, C.; Zheng, Z. Task migration for mobile edge computing using deep reinforcement\
    \ learning. Futur. Gener. Comput. Syst.\n2019, 96, 111–118. [CrossRef]\n141. Fraga-Lamas,\
    \ P.; Ramos, L.; Mondéjar-Guerra, V.; Fernández-Caramés, T.M. A review on IoT\
    \ deep learning UAV systems for\nautonomous obstacle detection and collision avoidance.\
    \ Remote Sens. 2019, 11, 2144. [CrossRef]\n142. Lagkas, T.; Argyriou, V.; Bibi,\
    \ S.; Sarigiannidis, P. UAV IoT framework views and challenges: Towards protecting\
    \ drones as\n“things”. Sensors 2018, 18, 4015. [CrossRef]\n143. Jensen, I.J.;\
    \ Selvaraj, D.F.; Ranganathan, P. Blockchain technology for networked swarms of\
    \ unmanned aerial vehicles (UAVs).\nIn Proceedings of the 2019 IEEE 20th International\
    \ Symposium on A World of Wireless, Mobile and Multimedia Networks\n(WoWMoM),\
    \ Washington, DC, USA, 10–12 June 2019. [CrossRef]\nDrones 2021, 5, 148\n30 of\
    \ 30\n144. Stöcker, C.; Bennett, R.; Nex, F.; Gerke, M.; Zevenbergen, J. Review\
    \ of the Current State of UAV Regulations. Remote Sens. 2017, 9,\n459. [CrossRef]\n\
    145. Zhang, Q.; Chen, J.; Ji, L.; Feng, Z.; Han, Z.; Chen, Z. Response Delay Optimization\
    \ in Mobile Edge Computing Enabled UAV\nSwarm. IEEE Trans. Veh. Technol. 2020,\
    \ 69, 3280–3295. [CrossRef]\n146. Zhou, F.; Hu, R.Q.; Li, Z.; Wang, Y. Mobile\
    \ edge computing in unmanned aerial vehicle networks. IEEE Wirel. Commun. 2020,\
    \ 27,\n140–146. [CrossRef]\n147. Tang, S.; Zhou, W.; Chen, L.; Lai, L.; Xia, J.;\
    \ Fan, L. Battery-constrained federated edge learning in UAV-enabled IoT for B5G/6G\n\
    networks. Phys. Commun. 2021, 47, 101381. [CrossRef]\n"
  inline_citation: '>'
  journal: Drones (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2504-446X/5/4/148/pdf?version=1639379359
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'UAV-Enabled Mobile Edge-Computing for IoT Based on AI: A Comprehensive Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/nafosted.2017.8108080
  analysis: '>'
  authors:
  - Quang Tran Minh
  - Duy H. N. Nguyen
  - An N. Le
  - Hai Duc Nguyen
  - Anh Truong
  citation_count: 35
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences
    >2017 4th NAFOSTED Conference ... Toward service placement on Fog computing landscape
    Publisher: IEEE Cite This PDF Quang Tran Minh; Duy Tai Nguyen; An Van Le; Hai
    Duc Nguyen; Anh Truong All Authors 35 Cites in Papers 800 Full Text Views Abstract
    Document Sections I. Introduction II. Related Work III. Overall Architecture and
    Problem Definition IV. Service Placement on the Fog Landscape V. Evaluation Show
    Full Outline Authors Figures References Citations Keywords Metrics Abstract: This
    paper proposes an approach to optimize service placement on Fog landscape in the
    context of the Internet of Things (IoT). A multi-tier fog computing architecture
    that supports IoT service provision is devised. Based on this architecture, a
    novel service placement mechanism that optimizes service decentralization on Fog
    landscape leveraging context-aware information such as location, time, quality
    of services (QoS) has been proposed. An experiment has been conducted to evaluate
    the proposed approach with several simulations applying to smart grid applications.
    The results reveal the effectiveness of the proposed approach in terms of reducing
    latency, energy consumption, and network load in comparison with the conventional
    cloud computing model. Published in: 2017 4th NAFOSTED Conference on Information
    and Computer Science Date of Conference: 24-25 November 2017 Date Added to IEEE
    Xplore: 16 November 2017 ISBN Information: DOI: 10.1109/NAFOSTED.2017.8108080
    Publisher: IEEE Conference Location: Hanoi, Vietnam I. Introduction The Internet
    of Things (IoT) has emerged as a revolutionary technology to offer a fully connected
    “smart” world. It enables the acceleration of the 4th industrial revolution where
    thousands or millions of things in the physical world are connected with each
    other to share data and services. These data and services are used to specify,
    monitor, and manage the physical world, from which applications for smart city,
    smart healthcare, smart agriculture, etc., can be built to transform the way we
    work, play and live, improving the quality of life and the human civilization.
    Sign in to Continue Reading Authors Figures References Citations Keywords Metrics
    More Like This Method of Data Collection in Wireless Sensor Networks Using Flying
    Ad Hoc Network 2018 International Scientific-Practical Conference Problems of
    Infocommunications. Science and Technology (PIC S&T) Published: 2018 A presence-based
    architecture for a gateway to integrate vehicular ad-hoc networks (VANETs), IP
    multimedia subsystems (IMS) and wireless sensor networks (WSNs) 2013 9th International
    Wireless Communications and Mobile Computing Conference (IWCMC) Published: 2013
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: Toward service placement on Fog computing landscape
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22010196
  analysis: '>'
  authors:
  - Nancy A Angel
  - D. Ravindran
  - Pascal Vincent
  - Kathiravan Srinivasan
  - Yuh-Chung Hu
  citation_count: 33
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Angel, N.A.; Ravindran, D.;\nVincent, P.M.D.R.; Srinivasan, K.;\nHu,\
    \ Y.-C. Recent Advances\nin Evolving Computing Paradigms:\nCloud, Edge, and Fog\
    \ Technologies.\nSensors 2022, 22, 196. https://\ndoi.org/10.3390/s22010196\n\
    Academic Editors:\nRobertas Damaševiˇcius, M. Poongodi,\nHaﬁz Tayyab Rauf and\
    \ Hasan\nAli Khattak\nReceived: 6 December 2021\nAccepted: 23 December 2021\n\
    Published: 28 December 2021\nPublisher’s Note: MDPI stays neutral\nwith regard\
    \ to jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nRecent Advances in Evolving Computing Paradigms: Cloud,\n\
    Edge, and Fog Technologies\nNancy A Angel 1\n, Dakshanamoorthy Ravindran 1, P\
    \ M Durai Raj Vincent 2\n, Kathiravan Srinivasan 3\nand Yuh-Chung Hu 4,*\n1\n\
    Department of Computer Science, St. Joseph’s College (Autonomous), Bharathidasan\
    \ University,\nTiruchirappalli 620002, India; angelnancy_phdcs@mail.sjctni.edu\
    \ (N.A.A.);\nravindran_cs1@mail.sjctni.edu (D.R.)\n2\nSchool of Information Technology\
    \ and Engineering, Vellore Institute of Technology, Vellore 632014, India;\npmvincent@vit.ac.in\n\
    3\nSchool of Computer Science and Engineering, Vellore Institute of Technology,\
    \ Vellore 632014, India;\nkathiravan.srinivasan@vit.ac.in\n4\nDepartment of Mechanical\
    \ and Electromechanical Engineering, National ILan University, Yilan 26047, Taiwan\n\
    *\nCorrespondence: ychu@niu.edu.tw\nAbstract: Cloud computing has become integral\
    \ lately due to the ever-expanding Internet-of-things\n(IoT) network. It still\
    \ is and continues to be the best practice for implementing complex computational\n\
    applications, emphasizing the massive processing of data. However, the cloud falls\
    \ short due to\nthe critical constraints of novel IoT applications generating\
    \ vast data, which entails a swift response\ntime with improved privacy. The newest\
    \ drift is moving computational and storage resources to\nthe edge of the network,\
    \ involving a decentralized distributed architecture. The data processing\nand\
    \ analytics perform at proximity to end-users, and overcome the bottleneck of\
    \ cloud computing.\nThe trend of deploying machine learning (ML) at the network\
    \ edge to enhance computing applications\nand services has gained momentum lately,\
    \ speciﬁcally to reduce latency and energy consumed while\noptimizing the security\
    \ and management of resources. There is a need for rigorous research efforts\n\
    oriented towards developing and implementing machine learning algorithms that\
    \ deliver the best\nresults in terms of speed, accuracy, storage, and security,\
    \ with low power consumption. This\nextensive survey presented on the prominent\
    \ computing paradigms in practice highlights the latest\ninnovations resulting\
    \ from the fusion between ML and the evolving computing paradigms and\ndiscusses\
    \ the underlying open research challenges and future prospects.\nKeywords: cloud\
    \ computing; edge computing; fog computing; internet-of-things; machine learning\n\
    1. Introduction\nThere has been a signiﬁcant progression of computing paradigms\
    \ during recent\ndecades. Cloud computing is perhaps the most well-established,\
    \ which emerged from\nthe requirement of harnessing “computing as a utility”,\
    \ enabling the rapid growth of new\ninternet services [1]. The arrival of the\
    \ Internet of Things (IoT) paved the way for vast data\ngeneration, eventually\
    \ leading to big data [2]. Cloud computing was a hot research area\nuntil the\
    \ widespread use of the Internet of Things disclosed all of the centralized paradigm’s\n\
    ﬂaws [1]. With cloud-based deployment, cloud data centers manage the analyzing,\
    \ storing,\nand decision-making of data. As the data volume along with the velocity\
    \ surged, trans-\nferring the big data brought forth by IoT devices to the cloud\
    \ became inefﬁcient, owing\nto bandwidth constraints, and would not meet the time-sensitive\
    \ and ultra-low latency\ndemands of applications and could raise privacy concerns\
    \ as well.\nThe scope of IoT has broadened since its advent and speciﬁes a digital\
    \ interconnection\nof devices and objects, capable of procuring and sharing information\
    \ across platforms for\nadded value [3]. The proliferation of IoT is consorted\
    \ by an increased capacity, reduced\nSensors 2022, 22, 196. https://doi.org/10.3390/s22010196\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 196\n2 of 38\ncommunication\
    \ cost, and astounding technological development. IoT warrants not just\ndevice\
    \ data management, but also information exchange among multidisciplinary plat-\n\
    forms. The huge data procured from numerous smart devices entails sharing to add\
    \ value\nand a comprehensive understanding of the concerned domain. With collaborative\
    \ IoT,\nheterogeneous domains and settings enable sensors, gateways, and services\
    \ to collaborate\nat various levels, enriching the quality of human life while\
    \ improving business processes.\nThe IoT ecosystem extends in scale and complexity,\
    \ encompassing a range of heteroge-\nneous devices that stretch over several layers\
    \ of IoT architecture. As IoT systems partake\nin critical infrastructures, they\
    \ necessitate resilient service operability [4]. IoT applications\nare disparate,\
    \ deployed in healthcare, industries, domotics, smart homes, smart cities,\nsmart\
    \ transportation, etc. The IoT devices are constituted of small, resource-constrained\n\
    smart objects, ineffective at handling complex tasks, which entails task ofﬂoading\
    \ to distant\ncloud servers [5]. The limited storage and computing potential forces\
    \ IoT devices to rely\non cloud data centers [6]. This ensues an increased latency,\
    \ and the intermittent internet\nconnectivity renders IoT devices inept at managing\
    \ time-critical real-time applications.\nThus, the IoT revolution has steered\
    \ new research into decentralized models. In this\ncontext, edge computing emerged,\
    \ intending to bring cloud computing capability to the net-\nwork edge, addressing\
    \ unfolding issues that cannot be ﬁxed by cloud computing solely,\nsuch as latency,\
    \ bandwidth, and connectivity challenges [7]. Correspondingly, numerous\nedge\
    \ computing solutions have been suggested, including Mobile Cloud Computing (MCC)\n\
    and Mobile Edge Computing (MEC) [8,9]. Fog computing surfaced as one of the highly\n\
    evolved Edge computing concepts. Fog computing aspires to represent a comprehensive\n\
    framework, allocating resources in sequence along the cloud to the smart devices\
    \ [10].\nThus, it is not a mere cloud extension, as it actively engages in synergizing\
    \ the cloud with\nIoT. In addition, the requisite for sustainable/green computing\
    \ that aids in conserving\nenergy is crucial to IoT devices. As IoT devices have\
    \ energy limitations, it is vital to de-\nvise energy-aware solutions into the\
    \ future [11]. In parallel with technological progress,\nit is imperative to cut\
    \ back on the carbon footprint to limit environmental deterioration\nalongside\
    \ global warming [12]. The exploration of edge paradigms is at its budding phase,\n\
    and innovative viewpoints pertaining to these paradigms that arise in literature\
    \ regularly\nwarrant extensive research [13].\nTable 1 shows the list of acronyms\
    \ used in this manuscript. Figure 1 shows the structure\nof this survey.\nTable\
    \ 1. List of acronyms used in the manuscript and their expansion.\nAcronym\nFull\
    \ Form\nAI\nArtiﬁcial Intelligence\nAR\nAugmented Reality\nCoT\nCloud of Things\n\
    CC\nCloud Computing\nCCTV\nClosed-Circuit Television\nCPU\nCentral Processing\
    \ Unit\nCR\nCloud Robotics\nDDoS\nDistributed Denial of Service\nDL\nDeep Learning\n\
    EC\nEdge Computing\nETSI\nEuropean Telecommunications Standard Institute\nFaaS\n\
    Function-as-a-Service\nFC\nFog Computing\nIaaS\nInfrastructure-as-a-Service\n\
    ICT\nInformation and Communications Technology\nIDC\nInternational Data Corporation\n\
    IoT\nInternet-of-Things\nSensors 2022, 22, 196\n3 of 38\nTable 1. Cont.\nAcronym\n\
    Full Form\nIT\nInformation Technology\nITS\nIntelligent Transport System\nITU\n\
    International Telecommunication Union\nMACC\nMobile Ad hoc Cloud Computing\nMEC\n\
    Multi-access Edge Computing\nMC\nMobile Computing\nMCC\nMobile Cloud Computing\n\
    MDC\nMicro Data Center\nmist\nMist Computing\nML\nMachine Learning\nMMA\nMan-in-the-Middle\
    \ Attack\nMIT\nMassachusetts Institute of Technology\nNIST\nNational Institute\
    \ of Standards and Technology\nOP\nOperational Technology\nPaaS\nPlatform-as-a-Service\n\
    PRISMA\nPreferred Reporting Items for Systematic Reviews and\nMeta-Analyses\n\
    QoE\nQuality of Experience\nQoS\nQuality of Service\nRAN\nRadio Access Network\n\
    RAS\nReliability Availability Serviceability\nSaaS\nSoftware-as-a-Service\nSDN\n\
    Software-Deﬁned Networking\nSLA\nService-Level Agreement\nVM\nVirtual Machine\n\
    VR\nVirtual Reality\nWSN\nWireless Sensor Network\nSensors 2022, 22, x FOR PEER\
    \ REVIEW \n3 of 41 \n \n \nIaaS \nInfrastructure-as-a-Service \nICT \nInformation\
    \ and Communications Technology \nIDC \nInternational Data Corporation \nIoT \n\
    Internet-of-Things \nIT \nInformation Technology \nITS \nIntelligent Transport\
    \ System \nITU \nInternational Telecommunication Union \nMACC \nMobile Ad hoc\
    \ Cloud Computing \nMEC \nMulti-access Edge Computing \nMC \nMobile Computing\
    \ \nMCC \nMobile Cloud Computing \nMDC \nMicro Data Center \nmist \nMist Computing\
    \ \nML \nMachine Learning \nMMA \nMan-in-the-Middle Attack \nMIT \nMassachusetts\
    \ Institute of Technology \nNIST \nNational Institute of Standards and Technology\
    \ \nOP \nOperational Technology \nPaaS \nPlatform-as-a-Service \nPRISMA \nPreferred\
    \ Reporting Items for Systematic Reviews and Meta-Analyses \nQoE \nQuality of\
    \ Experience \nQoS \nQuality of Service \nRAN \nRadio Access Network \nRAS \n\
    Reliability Availability Serviceability \nSaaS \nSoftware-as-a-Service \nSDN \n\
    Software-Defined Networking \nSLA \nService-Level Agreement \nVM \nVirtual Machine\
    \ \nVR \nVirtual Reality \nWSN \nWireless Sensor Network \n \nFigure 1. Organization\
    \ of this survey paper. \nFigure 1. Organization of this survey paper.\n2. Contribution\
    \ of This Survey\nThe contribution of this survey is outlined as follows:\nSensors\
    \ 2022, 22, 196\n4 of 38\n•\nA comprehensive account of computing paradigms is\
    \ rendered, especially cloud\ncomputing, fog computing, edge computing, and how\
    \ they are related to other similar\nparadigms such as mist, cloudlet, MEC, etc.\n\
    •\nA detailed illustration of the motives that instigated the evolution of edge/fog\
    \ com-\nputing and related paradigms is furnished.\n•\nA comparison of cloud,\
    \ edge, and fog computing paradigms are presented and ML\nconvergence’s signiﬁcance\
    \ with fog/edge is discussed.\n•\nA list of challenges and future research directions\
    \ concerning computing paradigms is\ndevised.\n2.1. Survey Methodology\nWe harnessed\
    \ the Preferred Reporting Items for Systematic Reviews and Meta-Analyses\n(PRISMA)\
    \ procedure to systematically choose the articles used in this survey.\n2.1.1.\
    \ Search Strategy and Literature Sources\nFor this review, articles pertaining\
    \ to Evolving Computing Paradigms were searched\nin Google Scholar, ScienceDirect,\
    \ IEEE Xplore, ACM Digital Library, Wiley Online Library,\nand Springer databases\
    \ from January 2009 to January 2022.\nThe search string used in this study was\
    \ (“Cloud computing” or “Edge computing”, or\n“Fog computing” or “Internet-of-Things”\
    \ or “Machine learning”) and collected 2360 articles.\n2.1.2. Inclusion Criteria\n\
    The articles written and published in English between January 2009 and January\n\
    2022 on Evolving Computing Paradigms were included. This review includes relatively\n\
    new research.\n2.1.3. Elimination Criteria\nThe articles published in languages\
    \ other than English, from January 2009, including\ncase reports/case series,\
    \ opinions, letters to the editor, commentaries, conference abstracts,\ntheses,\
    \ and dissertations, were excluded from this review.\n2.1.4. Results\nInitially,\
    \ from 2360 articles, duplicates found were removed and, after reviewing\nthe\
    \ abstracts of these papers, 874 of them were selected for a full-text review.\
    \ This study\nincluded both journal and conference articles. After reviewing the\
    \ full-text of these papers,\n693 papers were excluded, as they used duplicate\
    \ methods or were published earlier.\nFinally, 181 papers were studied in this\
    \ research. Figure 2 illustrates the selection procedure\nof the articles for\
    \ this study using a PRISMA diagram.\nSensors 2022, 22, 196\n5 of 38\nsors 2022,\
    \ 22, x FOR PEER REVIEW \n5 of 41 \n \nFigure 2. PRISMA flow diagram for the selection\
    \ process of the research articles used in this \nreview. \nThe 181 articles studied\
    \ in this research from 2009 to 2020 are depicted in Figure 3. \n \nFigure 3.\
    \ Number and year of publications studied in this review. \nThe review/survey\
    \ papers analyzed in this study is elucidated in Table 2. \nTable 2. Review/survey\
    \ papers and their contributions. \nuthor and \nYear \nArticles \nReferenced \n\
    Time \nSpan \nSystematic Study \nSurvey/Review Outline \nComputing \nParadigms\
    \ \nFuture Directions \nCloud \nComputing \nFog \nComputing \nEdge \nComputing\
    \ \ntzori et al. \n[14], 2016 \n119 \n1999 \n– \n2016 \n× \nThe survey examines\
    \ the prospect of Internet-of-\nThings from the evolutionary perspective, the\
    \ role of \nIoT in modern society and ensuing challenges. \n✓ \n× \n✓ \n× \nFigure\
    \ 2. PRISMA ﬂow diagram for the selection process of the research articles used\
    \ in this review.\nThe 181 articles studied in this research from 2009 to 2020\
    \ are depicted in Figure 3.\nSensors 2022, 22, x FOR PEER REVIEW \n5 of 41 \n\
    \ \n \n \nFigure 2. PRISMA flow diagram for the selection process of the research\
    \ articles used in this \nreview. \nThe 181 articles studied in this research\
    \ from 2009 to 2020 are depicted in Figure 3. \n \nFigure 3. Number and year of\
    \ publications studied in this review. \nThe review/survey papers analyzed in\
    \ this study is elucidated in Table 2. \nTable 2. Review/survey papers and their\
    \ contributions. \nAuthor and \nYear \nArticles \nReferenced \nTime \nSpan \n\
    Systematic Study \nSurvey/Review Outline \nComputing \nParadigms \nFuture Directions\
    \ \nCloud \nComputing \nFog \nComputing \nEdge \nComputing \nAtzori et al. \n\
    [14], 2016 \n119 \n1999 \n– \n2016 \n× \nThe survey examines the prospect of Internet-of-\n\
    Things from the evolutionary perspective, the role of \nIoT in modern society\
    \ and ensuing challenges. \n✓ \n× \n✓ \n× \nFigure 3. Number and year of publications\
    \ studied in this review.\nThe review/survey papers analyzed in this study is\
    \ elucidated in Table 2.\nTable 2. Review/survey papers and their contributions.\n\
    Author and\nYear\nArticles\nReferenced\nTime Span\nSystematic Study\nSurvey/Review\
    \ Outline\nComputing\nParadigms\nFuture Directions\nCloud\nComputing\nFog\nComputing\n\
    Edge\nComputing\nAtzori et al.\n[14], 2016\n119\n1999\n–\n2016\n×\nThe survey\
    \ examines the prospect of Internet-of-Things\nfrom the evolutionary perspective,\
    \ the role of IoT\nin modern society and ensuing challenges.\n✓\n×\n✓\n×\nHu et\
    \ al. [15],\n2017\n123\n2001\n–\n2017\n×\nThe review presents fog computing features,\
    \ architecture,\ncompares with other computing paradigms, and\nsummarizes key\
    \ technologies that aid in application and\ndeployment.\n✓\n✓\n✓\n✓\nSensors 2022,\
    \ 22, 196\n6 of 38\nTable 2. Cont.\nAuthor and\nYear\nArticles\nReferenced\nTime\
    \ Span\nSystematic Study\nSurvey/Review Outline\nComputing\nParadigms\nFuture\
    \ Directions\nCloud\nComputing\nFog\nComputing\nEdge\nComputing\nMahmud et al.\n\
    [16], 2017\n47\n2012\n–\n2016\n×\nThe work presents a taxonomy from a comprehensive\n\
    analysis of fog features and challenges pertaining to\nthe structure, service,\
    \ and security and identiﬁes research\ngaps.\n✓\n✓\n✓\n✓\nLin et al. [17],\n2017\n\
    167\n2001\n–\n2017\n×\nThe article offers a comprehensive overview of\nstate-of-the-art\
    \ IoT-enabling technologies, system\narchitecture, privacy, security issues, and\
    \ concerns of IoT\nand fog/edge computing integration during real-world\ndeployment.\n\
    ×\n✓\n✓\n✓\nMao et al. [18],\n2017\n242\n2003\n–\n2017\n×\nAn exhaustive outline\
    \ of state-of-the-art MEC from\na communication viewpoint, resource management,\n\
    comparison with MCC is presented.\n✓\n×\n✓\n✓\nNaha et al.\n[19], 2018\n142\n\
    2001\n–\n2018\n×\nThe survey article presents fog computing overview,\narchitecture,\
    \ related technologies, taxonomy by analyzing\nfog requirement and reviewing challenges,\
    \ research issues,\nand trends.\n✓\n✓\n✓\n✓\nMouradian\net al. [20], 2018\n168\n\
    2006\n–\n2017\n✓\nAn exhaustive survey is tendered on fog computing\narchitectures,\
    \ algorithms, afﬁliated concepts, and their\ndissimilarities; additionally, challenges\
    \ and research\ndirections were discussed.\n×\n✓\n×\n✓\nMukherjee\net al. [21],\
    \ 2018\n225\n1997\n–\n2017\n×\nThe survey extends an overview of fog computing\
    \ basics,\narchitecture and highlights the approach for service and\nallocation\
    \ of resources to overcome latency, bandwidth,\nand energy consumption.\n×\n✓\n\
    ×\n✓\nElazhary [22],\n2018\n412\n1991\n–\n2018\n×\nThe exhaustive review researches\
    \ arenas such as IoT, cloud\ncomputing, mobile computing, and related\nconcepts\
    \ and attempts to disambiguate emerging\nparadigms as well as technologies.\n\
    ✓\n✓\n✓\n✓\nAtlam et al.\n[23], 2018\n63\n2012\n–\n2017\n×\nThis work reviews\
    \ fog computing state-of-the-art,\nincluding fog features, architecture, and merits,\
    \ and insists\non fog being an IoT enabler.\n×\n✓\n×\n✓\nBangui et al.\n[24],\
    \ 2018\n114\n2012\n–\n2018\n×\nThe review outlines edge computing technology and\n\
    the challenges and concerns that accompany\nDistributed environments while shifting\
    \ services from\ncloud’s centralized to edge’s decentralized platforms.\n×\n✓\n\
    ✓\n✓\nYousefpour\net al. [2], 2019\n450\n2001\n–\n2018\n×\nA comprehensive survey\
    \ is furnished that emphasizes fog\ncomputing, associated computing\nparadigms,\
    \ and presents a taxonomy of research subjects,\nunderlying challenges, and future\
    \ leanings of fog.\n✓\n✓\n✓\n✓\nAbdulkareem\net al. [25], 2019\n95\n2011\n–\n\
    2019\n×\nThis review highlights recent advancements of ML\ntechniques related\
    \ to the accuracy, resource management\nand security of fog computing and its\
    \ role in edge\ncomputing.\n×\n✓\n✓\n✓\nDonno et al.\n[9], 2019\n71\n2004\n–\n\
    2019\n×\nThe review article offers clariﬁcation for beginners into\nresearch on\
    \ cloud computing, edge computing, and fog\ncomputing by illustrating features\
    \ and architecture of each\nparadigm and concludes by stating fog computing’s\n\
    relevance as fog binds cloud, edge computing, and IoT\ntogether.\n✓\n✓\n✓\n✓\n\
    Khan et al.\n[26], 2019\n101\n2009\n–\n2019\n×\nThe study focuses on cloud and\
    \ state-of-the-art edge\ncomputing concepts, critical requirements, limitations\
    \ and\nidentiﬁed unaddressed issues.\n✓\n✓\n✓\n✓\nCao et al. [27],\n2020\n62\n\
    2005\n–\n2020\n×\nThe article reviews research related to edge\ncomputing, summarizes\
    \ key concepts, technologies,\narchitecture, privacy, and security.\n✓\n×\n✓\n\
    ✓\nHabibi et al.\n[28], 2020\n191\n2002\n–\n2019\n×\nThe survey covers existing\
    \ computing paradigms and\nemphasizes fog computing research areas by presenting\n\
    a taxonomy and analyses from fog’s architectural\nviewpoint.\n✓\n✓\n✓\n✓\nMoura\
    \ et al.\n[29], 2020\n194\n1999\n–\n2020\n×\nThis work surveys state-of-the-art\
    \ fog computing systems,\noffers insights into designing and managing resilient\
    \ fog\nsystems and illustrates research issues and upcoming\nfuture trends.\n\
    ×\n✓\n×\n✓\nAslanpour\net al. [30], 2020\n50\n2010\n–\n2020\n×\nThe study offers\
    \ a taxonomy of real-world\nperformance metrics to assess the computing paradigms\
    \ of\ncloud, fog, and edge.\n✓\n✓\n✓\n✓\nAlli et al. [31],\n2020\n102\n2009\n\
    –\n2020\n×\nThe article delves into the ecosystems of IoT–fog–cloud,\nanalyzing\
    \ concepts, architecture, standards, tools of fog\nCloud-of-Things, and presents\
    \ a taxonomy on emerging\nissues. It concludes that ML and AI in fog ecosystems\n\
    would be appropriate for latency-sensitive and\nresource-constrained systems.\n\
    ✓\n✓\n✓\n✓\n(✓: Yes, ×: No).\nSensors 2022, 22, 196\n7 of 38\n3. Evolving Computing\
    \ Paradigms and Related Concepts\n3.1. Cloud Computing\nCloud computing pertains\
    \ to extending applications via the internet as services, as well\nas the software\
    \ and technology that underpins the data centers furnishing these services [1].\n\
    NIST formalizes cloud computing [32] as “a model for enabling ubiquitous, convenient,\n\
    on-demand network access to a shared pool of conﬁgurable computing resources (e.g.,\
    \ net-\nworks, servers, storage, applications, and services) which can be rapidly\
    \ provisioned and\nreleased with minimal management effort or service provider\
    \ interaction”. The essential\ncharacteristics of the cloud model include on-demand\
    \ self-service, broad network access, re-\nsource pooling, rapid elasticity, and\
    \ measured service. A cloud infrastructure encompasses\nsoftware and hardware,\
    \ extending vital features of the cloud model.\nThe cloud solutions are procurable\
    \ through the following service models [33]:\n•\nSoftware as a service (SaaS)—the\
    \ cloud provider presents consumers with applications\naccessible via the program\
    \ interface or web browser, and the consumer has limited\ncontrol over user-speciﬁc\
    \ applications.\n•\nPlatform as a service (PaaS)—On the cloud infrastructure,\
    \ the consumers are allowed to\nbuild and distribute applications. They can exercise\
    \ control on applications deployed\nbut not on the cloud infrastructure.\n•\n\
    Infrastructure as a service (IaaS)—The customer is furnished with essential computing\n\
    resources vital to processing, storing, and networking. The user exercises control\
    \ upon\nstorage, applications, and operating systems, but not cloud infrastructure.\
    \ The cloud\nservice models and deployment models are depicted in Figure 4.\n\
    Sensors 2022, 22, x FOR PEER REVIEW \n8 of 41 \n \n \nFigure 4. Common cloud service\
    \ models and their classifications. \nThe cloud solutions are deployable as [33]:\
    \ \n• \nPrivate cloud—a particular organization that can also be a third party\
    \ exclusively \nowns and controls the private cloud, which can be available on\
    \ or off-premises. \n• \nCommunity cloud—the specific community comprises of organizations\
    \ that share \ncommon concerns may provide cloud infrastructure for exclusive\
    \ usage available on \nor off-premises, managed by organizations within the community\
    \ or by a third party. \n• \nPublic cloud—the public cloud available on the cloud\
    \ provider’s premises can be \nowned or managed by any enterprise and is open\
    \ to the use of the general public. \n• \nHybrid cloud—it may be composed of two\
    \ or more cloud models (private, \ncommunity, or public); although they are distinct\
    \ entities, they are bound by \nt\nh\nl\nitti\nth\nt bilit\nf\nli\nti\nll\nd t\n\
    Figure 4. Common cloud service models and their classiﬁcations.\nThe cloud solutions\
    \ are deployable as [33]:\n•\nPrivate cloud—a particular organization that can\
    \ also be a third party exclusively\nowns and controls the private cloud, which\
    \ can be available on or off-premises.\n•\nCommunity cloud—the speciﬁc community\
    \ comprises of organizations that share\ncommon concerns may provide cloud infrastructure\
    \ for exclusive usage available on\nor off-premises, managed by organizations\
    \ within the community or by a third party.\nSensors 2022, 22, 196\n8 of 38\n\
    •\nPublic cloud—the public cloud available on the cloud provider’s premises can\
    \ be\nowned or managed by any enterprise and is open to the use of the general\
    \ public.\n•\nHybrid cloud—it may be composed of two or more cloud models (private,\
    \ community,\nor public); although they are distinct entities, they are bound\
    \ by technology permitting\nthe portability of application as well as data.\n\
    3.2. Internet-of-Things\nKevin Ashton, co-creator and executive director of the\
    \ Auto-ID Center at the Mas-\nsachusetts Institute of Technology (MIT), in 1999\
    \ introduced the phrase “Internet of\nThings” [34]. The Internet of Things (IoT)\
    \ [35] characterizes an extensive environment\nconnecting heterogeneous physical\
    \ objects to the internet to ﬁne-tune the efﬁciency of\nreal-time ubiquitous applications.\
    \ As per the International Telecommunication Union\n(ITU), the Internet of Things\
    \ (IoT) is a universal framework that connects things which\nmay be physical as\
    \ well as virtual, distinguished, and incorporated within communi-\ncation networks,\
    \ depending on prevailing and emerging collaborative information and\ncommunication\
    \ technologies (ICT) to facilitate enhanced services [36].\n3.2.1. Essential Features\n\
    The fundamental characteristics of the Internet of Things include [37–40]:\n•\n\
    Interconnectivity—the IoT may be connected to global communication infrastructure.\n\
    •\nThings-related services—IoT is adept at offering physical/virtual things, privacy,\
    \ as\nwell as semantic consistency services within the limits of things.\n•\n\
    Heterogeneity—the IoT devices pertain to diverse hardware platforms and networks.\n\
    •\nConstrained resources—the IoT devices encounter computational and energy restric-\n\
    tions.\n•\nDynamic change—the state of devices and the related environment are\
    \ subject to\ndynamic change.\n•\nUncontrolled environment—the IoT devices are\
    \ deployed in an uncontrolled setting.\n•\nMassive scale—the devices to be monitored\
    \ and those that connect with one another\nare enormous and will continue to surge\
    \ exponentially into the future.\n3.2.2. New Challenges in IoT\nAs billions of\
    \ devices are connected globally, data expands exponentially and accumu-\nlates\
    \ 24/7, driving big data to become the current buzzword [41]. The International\
    \ Data\nCorporation (IDC) estimates that by 2025, IoT devices may reach 41.6 billion\
    \ and create\n79.4 zettabytes of data [42]. The ﬁve Vs of big data [43], namely,\
    \ volume, variety, velocity,\nveracity, and value, pose distinct challenges. In\
    \ the current scenario, the majority of data\nresulting from IoT devices are managed\
    \ by the cloud. The resulting cloud IoT synergy\nposes demands that cannot be\
    \ tackled by the existing cloud computing model alone [44].\nA concise outline\
    \ of challenges that IoT encounters [13,45–48] drives the need for edge and\n\
    fog computing as a solution to manage demands [36] and is outlined as follows:\n\
    •\nLow latency—IoT applications [44] and industrial control systems [49] demand\
    \ low\nlatency within a few milliseconds that can hardly be met by the existing\
    \ cloud model.\n•\nHigh network bandwidth—The escalating amount of IoT devices\
    \ produce sizable\ndata [50], which may be rendered useless due to high bandwidth\
    \ usage to transfer it\nto the cloud or denied due to privacy concerns; hence,\
    \ entails to be dealt with locally.\n•\nLimited resources—numerous IoT-connected\
    \ devices possess limited resources to\ninteract directly with the cloud, demanding\
    \ intensive computation and complex\nprotocols.\n•\nIT and OT convergence—In industrial\
    \ systems, the conﬂuence of information technol-\nogy (IT) and operational technology\
    \ (OT) creates new needs. As ofﬂine systems may\ncause business loss or consumer\
    \ annoyance, contemporary cyber-physical systems\ndemand continual and safe operation.\
    \ Thus, the upgradation of the system software\nand hardware causes concern.\n\
    Sensors 2022, 22, 196\n9 of 38\n•\nIntermittent connectivity—When IoT devices\
    \ have intermittent network connectivity,\nit is difﬁcult to provide uninterrupted\
    \ cloud services to those devices.\n•\nGeographical distribution—the majority\
    \ of IoT devices entail services of comput-\ning and storage that are dispersed\
    \ across large geographic areas, and it is highly\nchallenging to position them\
    \ at a location that meets IoT demands [51].\n•\nContext-awareness—Local contextual\
    \ data must be accessed and processed by IoT\napplications (vehicular networks\
    \ and augmented reality), for which the physical\ndistance between IoT devices\
    \ and the centralized cloud is a hindrance.\n•\nSecurity and privacy—The existing\
    \ cybersecurity solutions prove to be unsatisfactory\nto manage IoT applications\
    \ due to the evolving security challenges [52,53].\n3.3. Mobile Computing\nThe\
    \ computation carried out through mobile phones, tablets, or laptops is noted\
    \ as\nmobile computing. The mobile devices offer substantial beneﬁts to mobile\
    \ users but still\nencounter limitations due to a low processing capability, battery,\
    \ memory due to their\nportable size, and operate at on-and-off network connectivity\
    \ [2]. Along with resource\nconstraints, mobile computing encounters communication\
    \ latency, demand adaptability\nof mobile clients, etc. Thus, these drawbacks\
    \ cause mobile computing to be inept for\napplications with demands for low latency,\
    \ robustness, and when huge data generated\nfrom mobile devices need to be processed\
    \ and stored on it. Moreover, the escalation\nin mobile device utilization increased\
    \ the data ﬂow, causing network congestion. Data\nofﬂoading is a viable solution\
    \ to mitigate the strain on the cellular network [54]. The existing\ndemerits\
    \ of mobile computing can be overcome by integrating it with cloud computing [55].\n\
    The expansion of mobile computing set the stage for and impacted the cloud and\
    \ fog\ncomputing evolution.\n3.4. Mobile Cloud Computing\nNIST states that the\
    \ cloud computing alliance with IoT devices and mobile devices fa-\ncilitates\
    \ data and CPU-intensive applications suitable for the IoT environment [56]. The\
    \ con-\ncept of Mobile Cloud Computing (MCC) is that it combines cloud computing\
    \ and mobile\napplications with sophisticated computing modules processed on the\
    \ cloud [57]. It enables\ndata processing and storage away from mobile devices,\
    \ beneﬁtting not just smartphones\nand a wide range of mobile subscribers. Major\
    \ computational tasks are moved to the cloud\nwith MCC, improving mobile devices’\
    \ battery life [2]. With MCC being grounded on\nthe notion of mobile ofﬂoading,\
    \ mobile devices entrust storage as well as processing to\nremote units to achieve\
    \ workload mitigation and optimization in terms of energy, cost, and\nlongevity\
    \ [45].\nThe mobile devices’ proliferation entails the efﬁcient management of\
    \ constrained\nresources with MCC, as it operates on the synergy between cloud\
    \ computing and mobile\ncomputing. It is capable of operating data-intensive mobile\
    \ applications as it prevails over\nbattery, memory, and computation power restrictions\
    \ from the user viewpoint. However,\nwith cellular communication, long-distance\
    \ data transmission to/from a core network\nresults in higher latency, jitter,\
    \ and network overhead. This can be overcome if the computa-\ntion, analysis,\
    \ and ﬁltering of data occurs at the proximity of the data source, facilitating\
    \ Fog\nComputing (FC) and MEC [58]. The limited bandwidth, ﬂexibility, and control,\
    \ along with\nan unreliable latency, security, and privacy issues are some challenges\
    \ faced by MCC [28].\nThe partitioning of mobile applications by adaptive ofﬂoading\
    \ during runtime allows\nthe management of computer-intensive units of the application\
    \ [59].\n3.5. Mobile Ad hoc Cloud Computing\nMobile Ad hoc Cloud Computing (MACC)\
    \ is an edge computing paradigm involving\nmobile devices that share resources\
    \ in a dynamic and temporary network facilitated by\ntransport and routing protocols\
    \ [2,58,60]. It offers a decentralized network [61] with\ndynamic mobile devices,\
    \ accommodating devices joining or leaving the network continually.\nSensors 2022,\
    \ 22, 196\n10 of 38\nIt favors environments that lack uninterrupted internet connectivity.\
    \ MACC is the most\ndecentralized, as it comprises mobile devices only.\n3.6.\
    \ Cloud of Things\nThe two concepts of cloud computing and IoT have evolved independently\
    \ through\nthe years in terms of hardware and software. With IoT facing challenges\
    \ due to the process-\ning, battery, and storage capacity, these issues can be\
    \ solved by combining cloud computing\nand IoT [62]. Cloud computing is capable\
    \ of ﬁlling the gaps in IoT regarding computing,\nnetworking, and storage capabilities\
    \ due to the cloud’s virtually unlimited capabilities and\nresources. It can assist\
    \ in implementing numerous IoT applications [63,64]. In the Cloud-\nof-Things\
    \ (CoT), IoT devices constitute a virtualized cloud structure. Here, computing\
    \ is\nperformed over the cloud of pooled resources consisting of IoT devices in\
    \ contrast to mist\ncomputing, where computing is carried out on IoT devices [65].\n\
    3.7. Mist Computing\nMist computing is initiated to include endpoint connected\
    \ devices at the extreme edge\nsuitable for self-aware autonomic systems in the\
    \ near future [2,66]. In the IoT-fog-cloud\ncontinuum, mist computing is the ﬁrst\
    \ computing point to allow computation, storage,\nand networking across fog to\
    \ things. Mist computing forms the superset of MACC, as\nmist, devices, and networking\
    \ are not restricted to mobile devices and ad hoc, respectively.\nIt allows utilizing\
    \ the peripheral component (sensors or actuators) capacity to pre-process\ndata\
    \ before sending them to the fog or cloud layer [67]. Mist computing aids in large-scale\n\
    IoT systems development and enriches computational efﬁciency at the edge of the\
    \ IoT\narchitecture [68].\n3.8. Edge Computing\nDespite the fact that edge computing\
    \ has been mentioned in the literature before\ncloud computing, its signiﬁcance\
    \ grew dramatically with the introduction of IoT and\nthe ensuing demands. Edge\
    \ computing places cloud computing’s services close to the end-\nuser, distinguished\
    \ by a rapid processing and response time [26]. Edge computing denotes\ntechnologies\
    \ that enable computation to be accomplished at the network’s edge, upon\ndownstream\
    \ data for cloud services, and upstream data for IoT services [69]. It unfolds\n\
    the cloud’s network by extending the computation, storage, and resources to the\
    \ edge\nof the network, close to the data source, with the resolve to accomplish\
    \ critical needs of\nreal-time servicing, application intelligence, security,\
    \ and privacy, along with the network’s\nrequirements for low latency and high\
    \ bandwidth [13,27].\nThe signiﬁcant aspects of cloud computing are its ability\
    \ to grasp the big picture,\nprocess vast amounts of data, perform in-depth analyses,\
    \ process data in non-real-time,\nand determine business decisions. Being centralized,\
    \ entire data must be transferred to\nthe cloud with underlying risks of data\
    \ loss and data leakage, as security and privacy\ncannot be ensured, and sensitive\
    \ information is at threat of disclosure [27]. Edge computing\nis an extension\
    \ to cloud computing, which considerably minimizes the volume of data\ntransmitted\
    \ across nodes, lowering transmission costs and the network bandwidth usage.\n\
    It leads to utilization and computing efﬁciency along with energy consumption.\
    \ Edge\ncomputing can be more effective in small-scale, intelligent, real-time\
    \ analyses. It eliminates\nthe risk associated with the network transmission,\
    \ ensuring data security. If data become\ncompromised, it impacts only local data.\
    \ The edge computing architecture is federated,\nwherein edge devices are positioned\
    \ between the cloud and terminal devices to tender\ncloud services to the network’s\
    \ edge [24,70]. As edge computing shifts service provisioning\nfrom the cloud\
    \ to the edge, it favors IoT application demands, enabling IoT devices to\nbe\
    \ more scalable and energy-efﬁcient [71]. The cloud–edge alliance involves a typical\n\
    three-layer model distinguished as the terminal (sensors, cameras, and smartphones),\
    \ edge\n(base stations, access points, routers, switches, and gateways), and cloud\
    \ [27]. In terms of\nSensors 2022, 22, 196\n11 of 38\ndevice types, communication\
    \ protocols, and services, edge computing can be implemented\nin various ways\
    \ [9,13,26].\n3.9. Multi-Access Edge Computing (MEC)\nThe Mobile Edge Computing\
    \ standard has been constituted by the European Telecom-\nmunications Standards\
    \ Institute (ETSI) [72], which offers cloud computing and IT function-\nalities\
    \ within the Radio Access Network (RAN) in the vicinity of mobile subscribers\
    \ [71].\nAs of 2017, ETSI renamed “Mobile Edge Computing” to “Multi-Access Edge\
    \ Computing”\ndue to increasing interest in MEC by non-cellular operators [73,74].\
    \ MEC is a continuation\nof mobile computing via edge computing, delivering computation\
    \ and storage to energy\nand resource-constrained mobile devices [2].\nWith Multi-Access\
    \ Edge Computing, a cloud server is deployed at the cellular net-\nwork’s base\
    \ stations. It executes tasks such as enhancing the application’s performance\
    \ and\nminimizing network congestion, bandwidth use, and latency for subscribers\
    \ that cannot\nbe achieved with a conventional network architecture [75–77]. Even\
    \ though the process-\ning and memory capabilities of mobile devices improve,\
    \ they are still not sufﬁcient to\nhandle compute-intensive tasks, which has led\
    \ to MCC and MEC models [78]. The MEC\narchitecture is portrayed in Figure 5.\
    \ MEC considerably reduces the process duration\nand energy demands of mobile\
    \ devices by setting up computational and other resources\nclose to the base stations\
    \ [79]. As base stations serve as crucial access points to several\nIoT devices,\
    \ end devices could be directly serviced with just one hop through MEC [80].\n\
    MEC showcases a low latency, proximity to the user, location awareness, and geographical\n\
    distribution. However, it restraints the need to install a dedicated MEC server\
    \ for MEC\nservices. With the rise in the demand for resources over time, scaling\
    \ is another major\nchallenge [81]. MEC exhibits the reliability, energy efﬁciency,\
    \ and a low latency suitable to\ndiverse applications [82] and outperforms MCC\
    \ comparably [83].\nSensors 2022, 22, x FOR PEER REVIEW \n12 of 41 \n \nenergy\
    \ demands of mobile devices by setting up computational and other resources close\
    \ \nto the base stations [79]. As base stations serve as crucial access points\
    \ to several IoT \ndevices, end devices could be directly serviced with just one\
    \ hop through MEC [80]. MEC \nshowcases a low latency, proximity to the user,\
    \ location awareness, and geographical \ndistribution. However, it restraints\
    \ the need to install a dedicated MEC server for MEC \nservices. With the rise\
    \ in the demand for resources over time, scaling is another major \nchallenge\
    \ [81]. MEC exhibits the reliability, energy efficiency, and a low latency suitable\
    \ \nto diverse applications [82] and outperforms MCC comparably [83]. \n \nFigure\
    \ 5. Multi-access edge computing systems—a general architecture. \n3.10. Cloudlet\
    \ \nA cloudlet has been envisioned by researchers at Carnegie Mellon University,\
    \ which \nis a small cluster or data centers capable of computation and storage,\
    \ positioned close to \nmobile devices [84,85]. Cloudlet computing shares MCC\
    \ and MEC particularities, further \ncontending with the demerits of MCC. A cloudlet\
    \ may be referred to as a mini-cloud [86], \noffering a secured cloud infrastructure\
    \ for computing and delivering results to mobile \ndevices and works alongside\
    \ the cloud. It is positioned at the network edge and is \nFigure 5. Multi-access\
    \ edge computing systems—a general architecture.\n3.10. Cloudlet\nA cloudlet has\
    \ been envisioned by researchers at Carnegie Mellon University, which\nis a small\
    \ cluster or data centers capable of computation and storage, positioned close\n\
    Sensors 2022, 22, 196\n12 of 38\nto mobile devices [84,85]. Cloudlet computing\
    \ shares MCC and MEC particularities,\nfurther contending with the demerits of\
    \ MCC. A cloudlet may be referred to as a mini-\ncloud [86], offering a secured\
    \ cloud infrastructure for computing and delivering results to\nmobile devices\
    \ and works alongside the cloud. It is positioned at the network edge and\nis\
    \ accessible to adjacent mobile units [87,88]. The notion is computational ofﬂoading\
    \ to\nthe virtual machine (VM)-based cloudlets at the network edge from mobile\
    \ devices [89].\nThe cloudlet is featured as the middle layer in the three-tier\
    \ architecture comprising of\nmobile devices, the cloudlet, and the cloud [84,85]\
    \ shown in Figure 6. It further possesses\nconnectivity, security, virtualization\
    \ features, and closeness to mobile users enabling a low\nlatency. Cloudlets are\
    \ similar to mobile clouds and nearer to mobile devices beﬁtting\nreal-time scenarios.\
    \ They focus on servicing time-sensitive applications operating under\nrestricted\
    \ bandwidth conditions and interactive mobile applications with a large resource\n\
    demand and offer resources at a minimum latency [83]. Cloudlets back mobile clients’\
    \ local\nservices by splitting tasks within cloudlet nodes that are nearer to\
    \ mobile devices. While\nthe cloudlet suits the mobile–cloudlet–cloud structure\
    \ [90], fog computing is an alternative,\nsupporting huge data trafﬁc with resources\
    \ located at anyplace within the thing-to-cloud\ncontinuum [2]. Cloudlets are\
    \ alluded to as micro data centers (MDC) at times [91], mirroring\nconventional\
    \ data centers of cloud computing. The MDC may be a cloudlet or edge node\nimplemented\
    \ in between IoT devices and the cloud [2].\nSensors 2022, 22, x FOR PEER REVIEW\
    \ \n13 of 41 \n \ncenters (MDC) at times [91], mirroring conventional data centers\
    \ of cloud computing. The \nMDC may be a cloudlet or edge node implemented in\
    \ between IoT devices and the cloud \n[2]. \n \nFigure 6. Mobile device–cloudlet–cloud\
    \ model. \n3.11. Cloud Robotics \nRobotics engineering is becoming a vital part\
    \ of everyday life, with diverse sensors \ngenerating big data demanding complex\
    \ computations [92]. Cloud robotics is a branch of \nIoT that evolved from the\
    \ fusion of cloud computing and networked robots [93]. The \nmassive storage capacity\
    \ of a centralized cloud and broad library of skills can be leveraged \nby robots\
    \ to learn with experience. The cloud robotics architecture comprises two levels:\
    \ \nmachine-to-machine and machine-to-cloud. At the machine-to-machine level,\
    \ robots \ndetermine decisions through a wireless collaboration. The machine-to-cloud\
    \ level offers a \nshared pool of storage and computation resources to be allocated\
    \ as per demands. Cloud \nrobotics capitalizes on the elasticity feature of cloud\
    \ computing besides others. \nAdditionally, robots-as-a-service (RaaS) stems from\
    \ considering robots as resources, \nproviding resource sharing services to other\
    \ robots [94–97]. The sharing of resources and \ndata between robots through the\
    \ cloud is integral to CR, along with robots themselves \nbeing shared as resources.\
    \ These systems require standards for enabling coherent, \nsemantic, data sharing,\
    \ and service provisioning among the robots [93]. Cloud computing \ndelegates\
    \ fast and robust processing and storage capabilities to robots, along with \n\
    Figure 6. Mobile device–cloudlet–cloud model.\n3.11. Cloud Robotics\nRobotics\
    \ engineering is becoming a vital part of everyday life, with diverse sensors\n\
    generating big data demanding complex computations [92]. Cloud robotics is a branch\
    \ of\nIoT that evolved from the fusion of cloud computing and networked robots\
    \ [93]. The mas-\nsive storage capacity of a centralized cloud and broad library\
    \ of skills can be leveraged\nby robots to learn with experience. The cloud robotics\
    \ architecture comprises two lev-\nels: machine-to-machine and machine-to-cloud.\
    \ At the machine-to-machine level, robots\ndetermine decisions through a wireless\
    \ collaboration. The machine-to-cloud level offers\na shared pool of storage and\
    \ computation resources to be allocated as per demands. Cloud\nrobotics capitalizes\
    \ on the elasticity feature of cloud computing besides others. Additionally,\n\
    robots-as-a-service (RaaS) stems from considering robots as resources, providing\
    \ resource\nsharing services to other robots [94–97]. The sharing of resources\
    \ and data between robots\nSensors 2022, 22, 196\n13 of 38\nthrough the cloud\
    \ is integral to CR, along with robots themselves being shared as resources.\n\
    These systems require standards for enabling coherent, semantic, data sharing,\
    \ and service\nprovisioning among the robots [93]. Cloud computing delegates fast\
    \ and robust processing\nand storage capabilities to robots, along with collaborative\
    \ learning capabilities through\nthe sharing of knowledge. Recent advancement\
    \ in this ﬁeld have incited cloud robotics\narchitecture development and its application\
    \ in several domains [98].\n3.12. Fog Computing\nThe idea of processing at the\
    \ edge has been around since the 2000s [99,100]. A related\nconcept of cloudlets\
    \ has been presented in 2009 [101]. The phrase ‘Fog Computing’ has\nbeen propounded\
    \ by Cisco researchers in 2012 [42,102]. Fog computing and cloudlets are\nrelated\
    \ concepts operating at the edge level, with cloudlets deployed at mobile networks\n\
    and fog computing dealing with connected things [103].\nFog computing is frequently\
    \ deliberated as a form of edge computing [7,8,104]. Fog\ncomputing literally\
    \ delivers distributed processing, networking, and storage potential\nnearer to\
    \ the user [105]. Fog computing is more than a mere deployment of the edge\ncomputing\
    \ concept; it is the pinnacle of reinforcing edge computing concepts [9]. It is\n\
    not an extension or replacement of the Cloud; instead, it is a new paradigm operating\n\
    in between IoT and the cloud, with the intent of supporting and enhancing Interaction\
    \ and\nintegration of the cloud, edge, and IoT.\nCisco describes fog computing\
    \ [44] as a highly virtualized setup that caters to services\nof computing, storage,\
    \ and networking between conventional cloud data centers and end\ndevices, generally\
    \ but not solely deployed at the network’s edge. According to the OpenFog\nConsortium\
    \ [10], fog computing is delineated as “a system-level horizontal architecture\
    \ that\ndistributes resources and services of computing, storage, control and\
    \ networking anywhere\nalong the continuum from Cloud to Things, thereby accelerating\
    \ the velocity of decision-\nmaking”. Fog computing adopts a distributed tactic\
    \ originating from the edge computing\nmodel to outdo the limitations of the centralized\
    \ cloud computing approach [25], with fog\nnodes positioned anyplace between cloud\
    \ and end devices. The computing paradigms\nassociated with fog computing are\
    \ depicted in Figure 7.\nSensors 2022, 22, x FOR PEER REVIEW \n14 of 41 \n \n\
    Fog computing is frequently deliberated as a form of edge computing [7,8,104].\
    \ Fog \ncomputing literally delivers distributed processing, networking, and storage\
    \ potential \nnearer to the user [105]. Fog computing is more than a mere deployment\
    \ of the edge \ncomputing concept; it is the pinnacle of reinforcing edge computing\
    \ concepts [9]. It is not \nan extension or replacement of the Cloud; instead,\
    \ it is a new paradigm operating in \nbetween IoT and the cloud, with the intent\
    \ of supporting and enhancing Interaction and \nintegration of the cloud, edge,\
    \ and IoT. \nCisco describes fog computing [44] as a highly virtualized setup\
    \ that caters to services \nof computing, storage, and networking between conventional\
    \ cloud data centers and end \ndevices, generally but not solely deployed at the\
    \ network’s edge. According to the \nOpenFog Consortium [10], fog computing is\
    \ delineated as “a system-level horizontal \narchitecture that distributes resources\
    \ and services of computing, storage, control and \nnetworking anywhere along\
    \ the continuum from Cloud to Things, thereby accelerating \nthe velocity of decision-making”.\
    \ Fog computing adopts a distributed tactic originating \nfrom the edge computing\
    \ model to outdo the limitations of the centralized cloud \ncomputing approach\
    \ [25], with fog nodes positioned anyplace between cloud and end \ndevices. The\
    \ computing paradigms associated with fog computing are depicted in Figure \n\
    7. \n \nFigure 7. Fog computing and its related computing paradigms. \n3.12.1.\
    \ Essential Features \nThe significant trait of fog computing is that the computation,\
    \ communication, and \nstorage tasks are accomplished close to end-users by capitalizing\
    \ on the key attribute of \nfog’s proximity to the edge. The additional characteristics\
    \ of fog computing [15,106] are \noutlined as follows: \n• \nLow latency: The\
    \ proximity of fog nodes to end devices that generate data, such as \nsensors\
    \ and actuators, entails a significantly faster reaction and analysis than from\
    \ \nthe centralized cloud data center. This feature considerably minimizes the\
    \ data \ntransfer across the internet and enables a low latency to manage real-time\
    \ \napplications, notably sensitive to latency and time. \n•\nSave bandwidth:\
    \ As the fog model allows data computation and storage between\nFigure 7. Fog\
    \ computing and its related computing paradigms.\n3.12.1. Essential Features\n\
    The signiﬁcant trait of fog computing is that the computation, communication,\
    \ and\nstorage tasks are accomplished close to end-users by capitalizing on the\
    \ key attribute of\nfog’s proximity to the edge. The additional characteristics\
    \ of fog computing [15,106] are\noutlined as follows:\n•\nLow latency: The proximity\
    \ of fog nodes to end devices that generate data, such as\nsensors and actuators,\
    \ entails a signiﬁcantly faster reaction and analysis than from\nSensors 2022,\
    \ 22, 196\n14 of 38\nthe centralized cloud data center. This feature considerably\
    \ minimizes the data transfer\nacross the internet and enables a low latency to\
    \ manage real-time applications, notably\nsensitive to latency and time.\n•\n\
    Save bandwidth: As the fog model allows data computation and storage between\n\
    conventional cloud and end nodes, less complex pre-processing tasks are handled\n\
    locally. It dramatically minimizes data transfer across the internet, with endpoints\n\
    offering fast and premium localized computer and storage services. Transferring\
    \ only\nappropriate data to the cloud substantially reduces the network transmission\
    \ and\nbandwidth usage, beﬁtting the big data era.\n•\nMulti-tenancy: On account\
    \ of the vastly virtualized and distributed infrastructure,\nmulti-tenancy in\
    \ a constrained environment is possible.\n•\nSupport for mobility: Due to the\
    \ direct interaction between fog applications and\nmobile devices, more control\
    \ over mobile devices is maintained. Thus, the fog model\nfacilitates better control\
    \ of users along with mobile devices to administrators and\nsatisﬁes mobility\
    \ demands that are location-based and the way information is accessed,\nresulting\
    \ in enhanced system performance and service quality.\n•\nInteraction in real-time:\
    \ Contrary to the cloud, fog applications deliver services in real-\ntime because\
    \ of their low-latency feature.\n•\nContext-awareness: the nodes and end devices\
    \ in the fog setting are aware of the con-\ntextual location.\n•\nGeographically\
    \ wide distribution: The fog model’s decentralized architecture facili-\ntates\
    \ geographically distributed deployment with a large number of widely dispersed\n\
    nodes. It imparts closer data analysis, rapid big data processing, improved decision-\n\
    making potential in real-time and location-based services to consumers.\n•\nWireless\
    \ access networking: Though fog is deployed in wired environments, it is also\n\
    suitable for IoT wireless networks.\n•\nSupport for heterogeneity: The fog infrastructure\
    \ encompasses high-speed lines to\nthe data center and wireless access methods\
    \ to the edge devices. Fog nodes are avail-\nable physically or virtually, and\
    \ service interfaces are incredibly dynamic, operating\nin wired and wireless\
    \ settings coming from different hardware and software ven-\ndors and heterogeneous\
    \ to cater to the low latency demand of globally distributed\napplications.\n\
    •\nSeamless interoperability and federation: Owing to its heterogeneous nature,\
    \ fog\nnodes and devices originate from various vendors and are generally deployed\
    \ in di-\nverse settings. For the effective interaction of devices from different\
    \ providers, fog\ncomputing must enable interoperability with federated services\
    \ across domains. Thus,\nto allow interoperability and cooperation across diverse\
    \ resources and devices, fog\ncomputing employs policies for resource management.\n\
    •\nReal-time analytics: With data collected and processed close to the sources,\
    \ real-time\nanalytics is possible.\n•\nScalability: Fog computing exhibits scalability\
    \ and adaptability to varying conditions\nwith the data load, resource pooling,\
    \ network demands, and ﬂexible computing.\n•\nSupport for industrial applications:\
    \ As computing and analyses are conducted in real-\ntime, industrial applications\
    \ widely beneﬁt.\n•\nSecurity and privacy: Fog computing brings facilities nearer\
    \ to end consumers while\nensuring privacy and security of sensitive and private\
    \ data using integrity checking,\naccess control, and encryption methods by fog\
    \ nodes. Moreover, it can mitigate\nthe vulnerabilities associated with system\
    \ upgrades and limit updates at the fog end.\n•\nLow energy consumption: as fog\
    \ nodes are spatially distributed and do not require\na cooling system, fog computing\
    \ is more ecologically friendly; communication within\na short-range as well as\
    \ energy management rules obviously minimize the communi-\ncation energy use.\n\
    In addition, fog nodes are expected to possess features such as autonomy, heterogene-\n\
    ity, hierarchical clustering, manageability, and programmability to fog implementation.\n\
    Sensors 2022, 22, 196\n15 of 38\n3.12.2. Architecture\nThe illustration of the\
    \ fog architectural model has recently been a prominent area\nof research. Extensive\
    \ related research alluded to the architecture comprising of three-\nlayer [15,17,107–109].\
    \ Moreover, the N-Tier architecture recommended by the OpenFog\nConsortium may\
    \ be regarded as an enhancement of this three-layer model [10].\n1.\nThree-Layer\
    \ Architecture\nThe basic three-layer model portrayed in Figure 8 stems from the\
    \ fog computing\nconcept being an essential extension to the cloud computing model,\
    \ with the fog layer\nposing as an intermediate layer between the cloud and IoT\
    \ devices [15].\nSensors 2022, 22, x FOR PEER REVIEW \n16 of 41 \n \n \nThe basic\
    \ three-layer model portrayed in Figure 8 stems from the fog computing \nconcept\
    \ being an essential extension to the cloud computing model, with the fog layer\
    \ \nposing as an intermediate layer between the cloud and IoT devices [15]. \n\
    a. \nIoT Layer \nIt is nearest to the end-user’s physical setting. Sensors, smart\
    \ cars, drones, \nsmartphones, tablets, and other devices compose this layer.\
    \ Even though some of these \ndevices possess computational capabilities, they\
    \ are used as mere smart sensing devices \nat this layer. Overall, these devices\
    \ are widely distributed geographically to sense and \ntransfer data to the next\
    \ higher layer for the sake of storage and computation. \n \nFigure 8. Typical\
    \ cloud–fog computing architecture. \nb. \nFog Layer \nThis layer comprises numerous\
    \ fog nodes and forms the basis for the fog computing \narchitecture. As per the\
    \ OpenFog Consortium [10], fog nodes may be a physical or logical \nnetwork element\
    \ that enforces fog services. Thus, fog nodes have a direct connection to \nextend\
    \ services to end devices. On the other end, fog nodes are linked to the cloud\
    \ \ninfrastructure to deliver and receive its services and benefits. \nc. \nCloud\
    \ Layer \nThe centralized cloud infrastructure composes the majority of this tier.\
    \ It comprises \nseveral servers with advanced computational and storage capabilities\
    \ offering a variety \nof services. Dissimilar to typical cloud computing architectures,\
    \ the fog model can ease \nthe burden on cloud resources by efficiently transferring\
    \ computational services from the \ncloud layer to fog and enhancing productivity.\
    \ \n2. \nOpenFog N-Tier Architecture \nThe OpenFog Consortium’s recommended N-tier\
    \ architecture [10] is rendered in \nFigure 9. Its primary intent is to offer\
    \ a standard guideline for implementing fog \ncomputing in a given circumstance.\
    \ Though fog systems are deployed in a scenario-\nspecific manner, the core elements\
    \ of the architecture are apparent to every fog \ndeployment. Endpoints (or things),\
    \ fog nodes, and the cloud are the three main \nFigure 8. Typical cloud–fog computing\
    \ architecture.\na.\nIoT Layer\nIt is nearest to the end-user’s physical setting.\
    \ Sensors, smart cars, drones, smart-\nphones, tablets, and other devices compose\
    \ this layer. Even though some of these devices\npossess computational capabilities,\
    \ they are used as mere smart sensing devices at this\nlayer. Overall, these devices\
    \ are widely distributed geographically to sense and transfer\ndata to the next\
    \ higher layer for the sake of storage and computation.\nb.\nFog Layer\nThis layer\
    \ comprises numerous fog nodes and forms the basis for the fog computing\narchitecture.\
    \ As per the OpenFog Consortium [10], fog nodes may be a physical or logical\n\
    network element that enforces fog services. Thus, fog nodes have a direct connection\n\
    to extend services to end devices. On the other end, fog nodes are linked to the\
    \ cloud\ninfrastructure to deliver and receive its services and beneﬁts.\nc.\n\
    Cloud Layer\nThe centralized cloud infrastructure composes the majority of this\
    \ tier. It comprises\nseveral servers with advanced computational and storage\
    \ capabilities offering a variety\nof services. Dissimilar to typical cloud computing\
    \ architectures, the fog model can ease\nthe burden on cloud resources by efﬁciently\
    \ transferring computational services from\nthe cloud layer to fog and enhancing\
    \ productivity.\nSensors 2022, 22, 196\n16 of 38\n2.\nOpenFog N-Tier Architecture\n\
    The OpenFog Consortium’s recommended N-tier architecture [10] is rendered in Figure\
    \ 9.\nIts primary intent is to offer a standard guideline for implementing fog\
    \ computing in a given\ncircumstance. Though fog systems are deployed in a scenario-speciﬁc\
    \ manner, the core\nelements of the architecture are apparent to every fog deployment.\
    \ Endpoints (or things),\nfog nodes, and the cloud are the three main components\
    \ of the idea. In addition, multiple\nlayers of fog nodes (N-tiers) may constitute\
    \ the fog layer; when the nodes are more distant\nfrom the end devices, improving\
    \ computing potential and intelligence are acquired.\n \ncomponents of the idea.\
    \ In addition, multiple layers of fog nodes (N-tiers) may constitute \nthe fog\
    \ layer; when the nodes are more distant from the end devices, improving \ncomputing\
    \ potential and intelligence are acquired. \nThe higher levels of the fog layer\
    \ refine and collect more pertinent data; therefore, \nenhancing intelligence.\
    \ The scenario-specific needs ascertain the number of tiers in a \nparticular\
    \ implementation. Furthermore, fog nodes connected in a mesh on each layer are\
    \ \nadept at providing added characteristics such as fault tolerance, elasticity,\
    \ load balancing, \netc. Thus, the fog nodes may interact both vertically and\
    \ horizontally. \nFog nodes may be categorized based on their closeness to the\
    \ cloud and endpoints: \n• \nLowest tier: with the primary focus on the acquisition,\
    \ normalization, and collection \nof data obtained at the sensors, and the actuators\
    \ are managed by fog nodes. \n• \nIntermediate tier: filtering, compressing, and\
    \ altering data received from the bottom \nlayer is the responsibility of fog\
    \ nodes in the intermediate tier; on average, these \nnodes are better at analyzing\
    \ data. \n• \nHighest tier: aggregating data and eliciting knowledge from it is\
    \ the intent of fog \nnodes at this tier. \n \nFigure 9. N-tier architecture.\
    \ \n3. \nSeven-Layer Architecture \nA fog computing model positioned between the\
    \ cloud layer, and edge devices extend \nservices of processing, network, and\
    \ storage to IoT devices, with the primary intent of \nminimizing latency for\
    \ time-critical applications. The services offered by the fog model \nare limited\
    \ compared to the sophisticated cloud data centers. In line with various fog \n\
    architectures presented by researchers [110,111] with diverse layers, a reference\
    \ \narchitecture comprising distinct layers with designated tasks is featured\
    \ here and \ndepicted in Figure 10. \na. \nPhysical layer \nFigure 9. N-tier architecture.\n\
    The higher levels of the fog layer reﬁne and collect more pertinent data; therefore,\n\
    enhancing intelligence. The scenario-speciﬁc needs ascertain the number of tiers\
    \ in a partic-\nular implementation. Furthermore, fog nodes connected in a mesh\
    \ on each layer are adept\nat providing added characteristics such as fault tolerance,\
    \ elasticity, load balancing, etc.\nThus, the fog nodes may interact both vertically\
    \ and horizontally.\nFog nodes may be categorized based on their closeness to\
    \ the cloud and endpoints:\n•\nLowest tier: with the primary focus on the acquisition,\
    \ normalization, and collection\nof data obtained at the sensors, and the actuators\
    \ are managed by fog nodes.\n•\nIntermediate tier: ﬁltering, compressing, and\
    \ altering data received from the bottom\nlayer is the responsibility of fog nodes\
    \ in the intermediate tier; on average, these nodes\nare better at analyzing data.\n\
    •\nHighest tier: aggregating data and eliciting knowledge from it is the intent\
    \ of fog\nnodes at this tier.\n3.\nSeven-Layer Architecture\nA fog computing model\
    \ positioned between the cloud layer, and edge devices extend\nservices of processing,\
    \ network, and storage to IoT devices, with the primary intent of\nminimizing\
    \ latency for time-critical applications. The services offered by the fog model\n\
    Sensors 2022, 22, 196\n17 of 38\nare limited compared to the sophisticated cloud\
    \ data centers. In line with various fog\narchitectures presented by researchers\
    \ [110,111] with diverse layers, a reference architecture\ncomprising distinct\
    \ layers with designated tasks is featured here and depicted in Figure 10.\n \n\
    An individual device or IoT could be a fog device, server, or gateway. The fog\
    \ server \nentails configuration, computation, and storage capabilities, higher\
    \ comparably in order \nto handle the fog device and gateway. It further pertains\
    \ to hardware configuration, \ndevices it can handle, network connectivity, etc.,\
    \ with its role defining it to be distinct or \nan IoT fragment. A set of virtual\
    \ and physical sensors are attached to the fog device. In \nthe same manner, a\
    \ set of fog devices could be attached to a fog server. A specific group \nof\
    \ fog devices connected to a particular fog server can interact as and when required.\
    \ The \nprocessing has to be performed at multiple fog servers and devices to\
    \ determine a proper \ndecision. The level of fog devices and servers is in charge\
    \ of handling and servicing data \non storage and hardware configuration and connectivity\
    \ for the fog servers and devices. \nThe processing demands of different applications\
    \ are addressed at this layer. \n \nFigure 10. Typical fog computing architectural\
    \ layers. \nc. \nMonitoring layer \nThe system operation, services, resources,\
    \ and responses are tracked by the \nmonitoring layer, which facilitates identifying\
    \ appropriate resources in the midst of the \noperation. If a possibility arises\
    \ for the fog device as well as the fog server where resource \navailability becomes\
    \ negative for processing or storage, assistance from peers may be \nsought. The\
    \ system monitoring unit aids in efficient decision making in such unforeseen\
    \ \nscenarios and resource failure by tracking the present resource consumption,\
    \ usage and \nthen estimating resource demands into the future. The performance\
    \ prediction \nFigure 10. Typical fog computing architectural layers.\na.\nPhysical\
    \ layer\nThe sensors are the devices that serve as the primary data source producing\
    \ diverse\ndata in a fog setting. The data may be from smart devices and homes,\
    \ autonomous vehicles,\nclosed-circuit television (CCTV) monitoring, trafﬁc systems,\
    \ sensors tracking temperature\nand humidity, etc. Alongside physical sensors,\
    \ the physical layer also comprises virtual\nsensors, which also produce data\
    \ as well.\nb.\nFog device, server, and gateway layer\nAn individual device or\
    \ IoT could be a fog device, server, or gateway. The fog server\nentails conﬁguration,\
    \ computation, and storage capabilities, higher comparably in order to\nhandle\
    \ the fog device and gateway. It further pertains to hardware conﬁguration, devices\n\
    it can handle, network connectivity, etc., with its role deﬁning it to be distinct\
    \ or an IoT\nfragment. A set of virtual and physical sensors are attached to the\
    \ fog device. In the same\nmanner, a set of fog devices could be attached to a\
    \ fog server. A speciﬁc group of fog devices\nconnected to a particular fog server\
    \ can interact as and when required. The processing has to\nbe performed at multiple\
    \ fog servers and devices to determine a proper decision. The level\nof fog devices\
    \ and servers is in charge of handling and servicing data on storage and\nhardware\
    \ conﬁguration and connectivity for the fog servers and devices. The processing\n\
    demands of different applications are addressed at this layer.\nc.\nMonitoring\
    \ layer\nThe system operation, services, resources, and responses are tracked\
    \ by the monitoring\nlayer, which facilitates identifying appropriate resources\
    \ in the midst of the operation. If\na possibility arises for the fog device as\
    \ well as the fog server where resource availability\nSensors 2022, 22, 196\n\
    18 of 38\nbecomes negative for processing or storage, assistance from peers may\
    \ be sought. The sys-\ntem monitoring unit aids in efﬁcient decision making in\
    \ such unforeseen scenarios and\nresource failure by tracking the present resource\
    \ consumption, usage and then estimating\nresource demands into the future. The\
    \ performance prediction component tracks and\nforecasts the performance of the\
    \ fog system depending on the resource availability and\nsystem load. This unit\
    \ is necessary to keep up with the relevant Quality of Service (QoS)\ndemands\
    \ in SLA (service level agreements). The occurrence of repeated SLA violations\
    \ may\nincrease system costs due to penalties for the provider. Even though this\
    \ issue cannot be\ncompletely ruled out, SLA violations can be greatly reduced\
    \ if the performance prediction\ncomponent foresees the system’s performance and\
    \ usage.\nd.\nPre- and post-processing layer\nThe multiple components of this\
    \ layer are distinctly concerned with the data analysis\nat the basic as well\
    \ as advanced levels. The data accumulated are subjected to analysis and\nﬁltering\
    \ with trimming alongside a reconstruction performed when needed. Once data\n\
    processing is accomplished, the component called data ﬂow ﬁnalizes the process\
    \ if the data\nhave to be stored locally or in the cloud. Fog computing insists\
    \ on stream processing,\nwhich processes and stores minimum relevant data at the\
    \ edge, as all data generated may\nnot be useful. As per the application, requisite\
    \ data trimming can be performed where\nthe mean value of the data within a minute\
    \ or hour could be stored if the sensor produces\ndata every second. In instances\
    \ where data values do not differ signiﬁcantly over time\nbut tend to affect performance,\
    \ the number of readings taken can be reduced. Though\nperfect accuracy would\
    \ not be achievable, application requisites may be attained. The data\nreconstruction\
    \ module reconstructs the data as per the pattern in which data is generated\n\
    in times of incomplete and faulty data produced by sensors to avoid application\
    \ failure or\nan interruption.\ne.\nStorage layer\nThe storage module is accountable\
    \ for data storage by storage virtualization. The unit\nreferred to as the data\
    \ backup afﬁrms data availability and minimizes data loss caused by\nsystem failure\
    \ by creating a backup of critical data. It also periodically customizes schemes\n\
    of data backups. By storage virtualization, a collection of storage devices functions\
    \ as\na single device, enabling manageability and maintainability; thus, offering\
    \ an enterprise-\nlevel operation, at low-cost hardware and storage.\nf.\nResource\
    \ management layer\nThe resource management layer addresses resource allocation,\
    \ resource scheduling,\nand energy saving. The reliability unit at this layer\
    \ ensures the application of scheduling\nreliability, system reliability, and\
    \ the allocation of resources. Maintaining reliability is\ncritical, as a complex\
    \ fog system encompasses IoT and fog devices alongside the cloud\nwith many failure\
    \ possibilities. The scalability component assures that the fog resources\nare\
    \ scalable when resource demand surges at peak hours. The fog model aspires to\
    \ offer\nhorizontal as well as vertical scalability, while the cloud platform\
    \ ensures horizontal scal-\nability. With distributed resources for processing,\
    \ networking, and storage, the resource\nallocation unit allocates, deallocates,\
    \ and reallocates resources. As multiple applications\nare run concurrently in\
    \ fog systems, the scheduling of applications is managed by the ap-\nplication\
    \ scheduling component. The energy-efﬁcient resource management is handled by\n\
    an energy-saving component at this layer, which reduces operational costs.\ng.\n\
    Security layer\nThe security layer deals with all issues that relate to security,\
    \ such as encrypting\ncommunication, securing stored data, preserving fog users’\
    \ privacy, etc. Similar to cloud\ncomputing, fog computing is deliberated as a\
    \ utility model. As users connect to the cloud\nfor availing services, users also\
    \ connect to the fog system for services; however, the fog\nmiddleware manages\
    \ interactions with the cloud. The provider must authorize the user\nattempting\
    \ the service connection, and the authentication unit authenticates the user’s\n\
    Sensors 2022, 22, 196\n19 of 38\nrequest to avail fog service. To ensure security\
    \ and evade security breaches by intruders,\nevery interaction has to be encrypted.\
    \ The component of encryption encrypts the connection\nbetween IoT devices and\
    \ the cloud. The majority of fog components is connected wirelessly,\nand ensures\
    \ security is critical. Fog systems acting on users’ private data should not reveal\n\
    those without proper user approval. At times where users accept a provider’s security\n\
    policy without reading it, it is critical to assure that user privacy is upheld.\n\
    h.\nApplication Layer\nDespite the fact that fog computing emerged to handle IoT,\
    \ various applications\npertaining to the Wireless Sensor Network (WSN) back fog\
    \ computing. The majority of\nlatency-sensitive applications leverage fog’s utility\
    \ model that delivers a cost-effective and\nenhanced service quality. The systems\
    \ deploying the augmented reality (AR) and virtual\nreality (VR) concepts can\
    \ harness the fog computing attribute of processing in real-time.\nAugmented reality\
    \ adds virtual content into a user’s real-life experience. Virtual reality, on\n\
    the other hand, produces a computer-generated simulation of a virtual world. With\
    \ AR\nand VR reckoned to transform the world in the near future, association with\
    \ fog will ensure\na continued reﬁnement.\n3.12.3. Fog Computing Applications\n\
    Numerous applications, such as smart homes, smart cities, smart grids, smart water\n\
    management, smart transportation, smart agriculture, augmented reality, virtual\
    \ reality,\nsmart healthcare, and smart vehicles, compel the fog framework’s efﬁcient\
    \ services. The fog\ncomputing applications described here are depicted in Figure\
    \ 11.\na.\nSmart grid\nA smart grid extends the reliable, efﬁcient, automated\
    \ electricity distribution model\naiming to cut down operation costs, enhance\
    \ transmission efﬁciency, and offer to smoothly\nintegrate with systems involving\
    \ renewable energy [112]. It further enables service providers\nand consumers\
    \ to track and regulate the real-time price, output, and consumption of\npower\
    \ [113]. The fog systems play a key part in favoring smart grids within smart\
    \ cities,\nminimizing electricity bills. Here, the data produced by the fog devices\
    \ can be locally\nanalyzed and ﬁltered by fog collectors deployed at the edge\
    \ and transmitted to the cloud\nfor complex analysis, visualization, and long-term\
    \ storage [114]. As per varying demands,\nsuch as a low-cost and energy, smart\
    \ grids allow switching over to any other supplies\nof energy, such as solar or\
    \ wind, with edge/fog devices gathering local data to decide\nin real-time [115].\n\
    Sensors 2022, 22, x FOR PEER REVIEW \n20 of 41 \n \nconnected wirelessly, and\
    \ ensures security is critical. Fog systems acting on users’ private \ndata should\
    \ not reveal those without proper user approval. At times where users accept \n\
    a provider’s security policy without reading it, it is critical to assure that\
    \ user privacy is \nupheld. \nh. \nApplication Layer \nDespite the fact that fog\
    \ computing emerged to handle IoT, various applications \npertaining to the Wireless\
    \ Sensor Network (WSN) back fog computing. The majority of \nlatency-sensitive\
    \ applications leverage fog’s utility model that delivers a cost-effective and\
    \ \nenhanced service quality. The systems deploying the augmented reality (AR)\
    \ and virtual \nreality (VR) concepts can harness the fog computing attribute\
    \ of processing in real-time. \nAugmented reality adds virtual content into a\
    \ user’s real-life experience. Virtual reality, \non the other hand, produces\
    \ a computer-generated simulation of a virtual world. With \nAR and VR reckoned\
    \ to transform the world in the near future, association with fog will \nensure\
    \ a continued refinement.  \n3.12.3. Fog Computing Applications \nNumerous applications,\
    \ such as smart homes, smart cities, smart grids, smart water \nmanagement, smart\
    \ transportation, smart agriculture, augmented reality, virtual reality, \nsmart\
    \ healthcare, and smart vehicles, compel the fog framework’s efficient services.\
    \ The \nfog computing applications described here are depicted in Figure 11. \n\
    a. Smart grid \nA smart grid extends the reliable, efficient, automated electricity\
    \ distribution model \naiming to cut down operation costs, enhance transmission\
    \ efficiency, and offer to \nsmoothly integrate with systems involving renewable\
    \ energy [112]. It further enables \nservice providers and consumers to track\
    \ and regulate the real-time price, output, and \nconsumption of power [113].\
    \ The fog systems play a key part in favoring smart grids \nwithin smart cities,\
    \ minimizing electricity bills. Here, the data produced by the fog devices \n\
    can be locally analyzed and filtered by fog collectors deployed at the edge and\
    \ transmitted \nto the cloud for complex analysis, visualization, and long-term\
    \ storage [114]. As per \nvarying demands, such as a low-cost and energy, smart\
    \ grids allow switching over to any \nother supplies of energy, such as solar\
    \ or wind, with edge/fog devices gathering local data \nto decide in real-time\
    \ [115]. \n \nFigure 11. Applications of fog computing. \nb. Smart traffic lights\
    \ and transportation systems \nIn smart traffic light applications, smart traffic\
    \ lights aid in lowering traffic \ncongestion, noise, fuel consumption and avert\
    \ accidents thus, improving the driving \nexperience. These connected lights functioning\
    \ as fog devices are adept at detecting the \nFigure 11. Applications of fog computing.\n\
    b.\nSmart trafﬁc lights and transportation systems\nIn smart trafﬁc light applications,\
    \ smart trafﬁc lights aid in lowering trafﬁc congestion,\nnoise, fuel consumption\
    \ and avert accidents thus, improving the driving experience. These\nSensors 2022,\
    \ 22, 196\n20 of 38\nconnected lights functioning as fog devices are adept at\
    \ detecting the ambulance’s ﬂashing\nlights and changing the trafﬁc signal to\
    \ open lanes for the ambulance to travel through [116].\nIt recognizes pedestrians\
    \ and cyclists and ﬁgures out the speed and distance of vehicles\napproaching\
    \ and collaborates to provide warning messages to adjacent vehicles. Moreover,\n\
    smart lighting is switched on when movement is detected and turned off automatically\n\
    when trafﬁc passes. This system comes handy in averting accidents, maintaining\
    \ low\nand steady trafﬁc, and collecting pertinent data to enhance performance.\
    \ With huge data\nproduced by intelligent transportation systems (ITS), processing\
    \ using centralized model\nresults in large delays. In this sense, fog nodes at\
    \ particular intersections could be utilized\nto analyze data locally and brief\
    \ people on current situations, substantially lessening\nthe delay [117].\nc.\n\
    Augmented reality (AR) and virtual reality (VR)\nAugmented reality overlays digital\
    \ and virtual content into a physical environment. It\nis highly time-critical,\
    \ warranting responses in real-time. Moreover, it is extremely latency-\nintolerant,\
    \ as even a minor delay may impact user experience, effectuating a negative\n\
    response [116]. For this reason, fog computing has the potential to become a key\
    \ player\nin the augmented reality domain, as computer-intensive jobs can be ofﬂoaded\
    \ to nearby\nfog devices. This also holds true for the virtual reality (VR) ﬁeld,\
    \ which offers real-world\nexperience through a simulated environment and is generated\
    \ by computer technology.\nd.\nSmart healthcare system\nWhen distant cloud servers\
    \ are used to process and store enormous healthcare data\ngenerated from sensors,\
    \ the huge data transmission, deﬁning of location, and access latency\npose critical\
    \ challenges [118,119]. As healthcare datasets increase, there is a higher possi-\n\
    bility of error occurrence during processing as well as transmission. Even a minute\
    \ data\nanalysis error may instigate the administering of an inappropriate treatment\
    \ that could cost\na human life. The patient health data is sensitive; hence,\
    \ security and privacy preservation\nare vital. The integration of fog computing\
    \ into healthcare enhances efﬁciency and quality\nas the computer and storage\
    \ are provided nearer to end devices, which permits aggregation,\nprocessing,\
    \ local storage, and real-time analytics. It further displayed a low latency,\
    \ mobil-\nity support, privacy, and location awareness, and experiments demonstrated\
    \ an enhanced\nsystem response time along with an improvement in energy consumption\
    \ [120].\ne.\nSmart agriculture\nAs agriculture caters to the food supply chain,\
    \ it plays a prime role in smart city\nschemes [121]. With smart agriculture,\
    \ sensors installed in ﬁeld vehicles gather data\non plant growth and ﬁeld climate\
    \ conditions. Moreover, the ﬁeld can be sensed from\nthe sky using air balloons.\
    \ These sensing activities can be effectively accomplished by fog\ncomputing,\
    \ and agricultural lands can be managed and tracked through sensor nodes’\nalarm\
    \ notiﬁcations.\nf.\nSmart water management\nAs far as sustainable smart cities\
    \ are concerned, smart water management is crucial. It\nsupervises the quantity\
    \ of water consumed, transported and anticipates the use of water\nin the future.\
    \ Above all, it enhances the water system of the city to be more reliable,\nsustainable,\
    \ and efﬁcient, as it assists in mitigating water loss using sensors that collect\
    \ and\nanalyze data of the water system [121].\n4. Challenges and Opportunities\n\
    Despite the fact that cloud computing has been around for a long time, it still\
    \ confronts\nproblems. Cloud security, privacy, conﬁdentiality, availability [122],\
    \ and sustainability [123]\nare among them. The dependability of cloud services\
    \ is an issue as well; when a limited\nnumber of data centers offer critical functions,\
    \ it might be disastrous if one of the data\ncenters goes down [124]. Cloud data\
    \ centers require immense energy to operate, which\nSensors 2022, 22, 196\n21\
    \ of 38\nrequires mitigating energy usage by resource provision optimization policies.\
    \ The cloud\nnetworking infrastructure faces challenges pertaining to network\
    \ utilization, data conges-\ntion, cloud federation [125], etc. As the IoT devices\
    \ arrived, an emphasis was placed on\nreducing energy and resource usage, and\
    \ critical difﬁculties included increasing the battery\nlife or optimizing the\
    \ energy utilization of smart devices [126]. The security of IoT devices\nand\
    \ withholding the privacy of sensitive data collected by the connected devices\
    \ pose\nunique challenges [127]. The availability, reliability, scalability, and\
    \ interoperability of IoT\nnetworks are labelled to be challenging.\nEdge computing,\
    \ which moves computation to the network’s edge, poses a number of\ncomplications,\
    \ such as focusing on the programmability of edge devices, naming schemes\nfor\
    \ a large number of edge devices, including security, privacy, data abstraction,\
    \ service\nmanagement, and optimization issues [41]. With fog computing still\
    \ in its developmental\nstage, it faces many open challenges. It has difﬁculties\
    \ similar to edge computing due to\nits correlations, and the notable challenges\
    \ include programmability, managing heteroge-\nneous systems, providing security,\
    \ interoperability, mobility, scalability, federation, and\nenergy/resource efﬁciency\
    \ [20,128].\nFog computing is a more generic model compared to related paradigms\
    \ due to the far-\nreaching scope and presence in the Thing-to-Cloud continuum.\
    \ The comparison and\nfeatures of the fog, edge and cloud [2,129–131] are displayed\
    \ in Tables 3 and 4. The associa-\ntion between cloud, edge, and fog computing\
    \ [132] is shown in Figure 12. Fog computing\nis imminent of offering amelioration\
    \ in the near future in an open-standards setting of\nconnected devices, apparent\
    \ when the IEEE Standard adopted the Open-Fog Reference\nArchitecture [133]. Hence,\
    \ our cynosure for the rest of the paper is on challenges and future\nresearch\
    \ directions pertaining to fog computing.\nSensors 2022, 22, x FOR PEER REVIEW\
    \ \n22 of 41 \n \n \noperate, which requires mitigating energy usage by resource\
    \ provision optimization \npolicies. The cloud networking infrastructure faces\
    \ challenges pertaining to network \nutilization, data congestion, cloud federation\
    \ [125], etc. As the IoT devices arrived, an \nemphasis was placed on reducing\
    \ energy and resource usage, and critical difficulties \nincluded increasing the\
    \ battery life or optimizing the energy utilization of smart devices \n[126].\
    \ The security of IoT devices and withholding the privacy of sensitive data collected\
    \ \nby the connected devices pose unique challenges [127]. The availability, reliability,\
    \ \nscalability, and interoperability of IoT networks are labelled to be challenging.\
    \ \nEdge computing, which moves computation to the network’s edge, poses a number\
    \ \nof complications, such as focusing on the programmability of edge devices,\
    \ naming \nschemes for a large number of edge devices, including security, privacy,\
    \ data abstraction, \nservice management, and optimization issues [41]. With fog\
    \ computing still in its \ndevelopmental stage, it faces many open challenges.\
    \ It has difficulties similar to edge \ncomputing due to its correlations, and\
    \ the notable challenges include programmability, \nmanaging heterogeneous systems,\
    \ providing security, interoperability, mobility, \nscalability, federation, and\
    \ energy/resource efficiency [20,128]. \nFog computing is a more generic model\
    \ compared to related paradigms due to the \nfar-reaching scope and presence in\
    \ the Thing-to-Cloud continuum. The comparison and \nfeatures of the fog, edge\
    \ and cloud [2,129–131] are displayed in Tables 3 and 4. The \nassociation between\
    \ cloud, edge, and fog computing [132] is shown in Figure 12. Fog \ncomputing\
    \ is imminent of offering amelioration in the near future in an open-standards\
    \ \nsetting of connected devices, apparent when the IEEE Standard adopted the\
    \ Open-Fog \nReference Architecture [133]. Hence, our cynosure for the rest of\
    \ the paper is on challenges \nand future research directions pertaining to fog\
    \ computing. \n \nFigure 12. Cloud, fog, and edge computing alliance. \nTable\
    \ 3. Comparison of fog, edge and cloud computing characteristics. \nCharacteristic\
    \ \nFog \nEdge \nCloud \nOperators \nUsers and cloud provider \nLocal enterprise\
    \ or network \ninfrastructure providers \nCloud provider \nParticipating Nodes\
    \ \nFog devices (switches,  \nEdge devices \nFewer nodes spanning cloud \nto IoT\
    \ devices \nFigure 12. Cloud, fog, and edge computing alliance.\nSensors 2022,\
    \ 22, 196\n22 of 38\nTable 3. Comparison of fog, edge and cloud computing characteristics.\n\
    Characteristic\nFog\nEdge\nCloud\nOperators\nUsers and cloud provider\nLocal enterprise\
    \ or network\ninfrastructure providers\nCloud provider\nParticipating Nodes\n\
    Fog devices (switches,\nrouters, access points, etc.) and IoT devices\nEdge devices\n\
    Fewer nodes spanning cloud to IoT\ndevices\nService Type\nLess global\nLocal\n\
    Global\nManagement\nDistributed/centralized\nLocal business and service provider\n\
    Centralized\nHardware\nDevices with virtualization facility (access\npoints, routers,\
    \ switches, servers)\nEdge devices with compute capacity\nMassive data centers\
    \ and equipment\nwith virtualization potential\nComputation Device\nAny device\
    \ capable of\ncomputation, networking, and storage\nEdge devices\nPowerful cloud\
    \ servers\nAvailable Computing\nResources\nModerate\nModerate\nHigh\nNature of\
    \ Failure\nHighly diverse\nHighly diverse\nPredictable\nMain Driver\nAcademia/\
    \ Industry\nAcademia/industry\nAcademia/industry\nUser Connectivity\nMostly wireless\n\
    Mostly wireless\nHigh speed (Both wired and wireless)\nDistance from Users\nRelatively\
    \ close\nClose\nFar\nInternal Connectivity\nOperate autonomously with intermittent\n\
    or no internet connectivity\nOperate autonomously with\nintermittent or no internet\n\
    connectivity\nRequires internet connectivity\nthroughout service duration\nMain\n\
    Standardization\nEntity\nOpenFog Consortium, IEEE\n-\nNational Institute of Standards\
    \ and\nTechnology (NIST), Cloud Security\nAlliance (CSA), Distributed\nManagement\
    \ Task Force (DMFT),\nOpen Commons Consortium (OCC),\nGlobal Inter-Cloud Technology\
    \ Forum\n(GICTF)\nPower Source\nBattery/green energy/\ndirect power\nBattery/green\
    \ energy/direct power\nDirect power\nPower Consumption\nLow\nLow\nHigh\nApplication\
    \ Type\nHigh computation with lower latency\nLow latency computation\nAmple computation\n\
    Architecture\nDecentralized/hierarchical\nLocalized/distributed\nCentralized/hierarchical\n\
    Computation Capacity\nModerate\nModerate\nHigh\nStorage Capacity\nLimited\nLimited\n\
    Massive storage capacity\nAvailability\nHigh\nAverage\nHigh\nLatency\nLow\nLow\n\
    Relatively high\nNode mobility\nHigh\nHigh\nVery low\nSecurity/Vulnerability\n\
    Must be provided on\nparticipant nodes\nMust be provided on edge devices\nMust\
    \ be provided along\nCloud-to-Things continuum\nServer Location\nCan be deployed\
    \ at edge or dedicated\nlocations\nNear edge devices\nStationed in huge\ndedicated\
    \ buildings\nNumber of\nIntermediate Hops\nOne/few\nOne\nMultiple\nHardware\n\
    Connectivity\nWAN, LAN, WLAN, Wi-Fi, cellular\nWAN, LAN, WLAN, Wi-Fi___33,\ncellular,\
    \ ZigBee\nWAN\nApplication Handling—real-time\nAchievable\nAchievable\nDifﬁcult\
    \ owing to\nincreased latency\nService Access\nThrough connected devices from\
    \ the edge\nto the core\nAt the edge of the internet\nThrough core\nComputation\
    \ Cost\nLow\nLow\nHigh\nCooling Cost\nVery low\nVery low\nHigh\nDeployment Space\n\
    Less\nLess\nMassive\nDelay Cost\nLess\nLess\nMore\nTable 4. Fog, edge, and cloud\
    \ computing functionalities.\nFeature\nFog\nEdge\nCloud\nHeterogeneity support\n\
    Yes\nYes\nYes\nConnection to cloud\nYes\nYes or No\nYes\nInfrastructure need\n\
    Yes\nYes\nYes\nGeographically distributed\nYes\nYes\nNo\nVirtualization technology\n\
    Yes\nNo\nYes\nLocation awareness\nYes\nYes\nNo\nUltra-low latency\nYes\nYes\n\
    No\nScalability\nYes\nYes\nYes\nMobility support\nYes\nYes\nNo\nApplication support—real-time\n\
    Yes\nYes\nNo\nApplication support—large-scale\nYes\nYes\nYes\nStandardized\nYes\n\
    Yes\nYes\nMultiple IoT applications\nYes\nNo\nYes\nData persistence\nYes\nNo\n\
    Yes\nComputation migration\nYes\nNo\nNo\nConserving energy\nYes\nYes\nNo\nSensors\
    \ 2022, 22, 196\n23 of 38\n4.1. Fog Computing: Open Challenges\nThe fog computing\
    \ paradigm has evolved from the cloud computing utility model.\nWith IoT proliferation,\
    \ computations closer to the network edge signiﬁcantly minimize\nthe cost of computing\
    \ and data ofﬂoading at the cloud. However, processing at the edge\nposes numerous\
    \ challenges pertaining to devices, security, the network, integrating fog,\n\
    and IoT, which the distributed fog system has to deal with [28,44,110]. The open\
    \ challenges\nidentiﬁed are pictured in Figure 13.\n•\nStandards and programming\
    \ languages\nThe fog structure is distinct from the cloud as it extends cloud\
    \ services to end-user\ndevices, warranting upgraded standards and associated\
    \ programming languages, along\nwith effective user interfaces and network protocols\
    \ for IoT device management.\n•\nScalability\nScalability is a key issue for systems\
    \ involving extensive IoT applications on fog, and\nexploring optimal algorithms\
    \ that illustrate the fog system’s complexity would be valuable.\nIn the fog model,\
    \ time-critical tasks are executed at the fog, and others are moved for\nprocessing\
    \ to the cloud. Ascertaining when fog resources are utilized optimally depending\n\
    on service type, user count, and resource availability are signiﬁcant.\n•\nComputational\
    \ challenges\nThe Fog system continually interacts with the cloud servers. It\
    \ intends to respond\nto users within a stipulated duration and forward complex\
    \ computer-intensive tasks to\nthe cloud, which may take longer. The parts of\
    \ computation that are unrestricted by\nresponse time are sent to the cloud, while\
    \ others are carried out at the edge for a minimum\ncomputational cost. The challenge\
    \ lies with ﬁguring out which computer tasks are to be\nexecuted at the edge and\
    \ ofﬂoaded to the cloud.\n•\nDeployment challenges\nThe fog system has to be precisely\
    \ deployed to subdue latency. Factors such as\nthe type and task amount performed\
    \ at a particular tier, fog device capability, and reliability,\nand the number\
    \ of sensors determine implementation decisions. As per the application\nrequirements,\
    \ resource scaling, as well as shrinking, are carried out without hindering\n\
    the operation of ongoing services. OpenFog recommends the N-tier fog model from\
    \ s\nmobilization viewpoint; however, escalating the fog layer levels may instigate\
    \ delays,\nwhich require deﬁning the number of levels for the speciﬁc application.\n\
    •\nDecentralized framework and failure management\nThe decentralized fog entails\
    \ a high likeliness of fog device malfunction relating to\nthe software, hardware,\
    \ power source, mobility, as well as connectivity issues considering\nan unreliable\
    \ wireless connection, linking the majority of fog devices. The fog system is\n\
    adaptable to a minor disruption and resource shortage. The fog node failure may\
    \ make\nits respective virtualized resources unavailable, and related issues,\
    \ such as latency and\nmigration, have to be dealt with for resource availability\
    \ at downtime. The decentral-\nized fog results in the repetition of code at edge\
    \ devices, and this redundancy has to\nbe checked. The random distribution of\
    \ network resources at the edge complicates con-\nnectivity, which can be rectiﬁed\
    \ by deploying a middleware that manages resources to\nthe demanding application.\
    \ The small client services are disseminated from the cloud\nto the edge, and\
    \ acquiring such services from fog systems is quite challenging. The fog\nsystem\
    \ manages billions of IoT devices; hence, provisioning services to all fog devices\n\
    is arduous. The portability of the fog’s edge node requisites ubiquitous fog computing.\n\
    With fog being distributed, the preciseness of computation needs to be conﬁrmed\
    \ as its\napplications demand consistency.\nSensors 2022, 22, 196\n24 of 38\n\
    \ \nconnectivity, which can be rectified by deploying a middleware that manages\
    \ resources \nto the demanding application. The small client services are disseminated\
    \ from the cloud \nto the edge, and acquiring such services from fog systems is\
    \ quite challenging. The fog \nsystem manages billions of IoT devices; hence,\
    \ provisioning services to all fog devices is \narduous. The portability of the\
    \ fog’s edge node requisites ubiquitous fog computing. With \nfog being distributed,\
    \ the preciseness of computation needs to be confirmed as its \napplications demand\
    \ consistency. \n \nFigure 13. Fog computing—open challenges. \n• \nDevice heterogeneity\
    \ and resource management \nFog computing sets the stage for numerous heterogeneous\
    \ technologies to offer IoT \nservices with a key challenge of linking resources\
    \ from diverse platforms. It is vital to \nexamine algorithms that are competent\
    \ at handling scheduling, synchronizing for the \neffective utilization of IoT\
    \ devices that are short on resources. The diversified nature of \nedge devices\
    \ has to be emphasized by the fog architecture at the device as well as the \n\
    network levels. Utilizing heterogeneous devices in a diverse fog setting with\
    \ varying \napplication demands is strenuous. Numerous IoT devices from diverse\
    \ hardware and \nFigure 13. Fog computing—open challenges.\n•\nDevice heterogeneity\
    \ and resource management\nFog computing sets the stage for numerous heterogeneous\
    \ technologies to offer IoT\nservices with a key challenge of linking resources\
    \ from diverse platforms. It is vital to exam-\nine algorithms that are competent\
    \ at handling scheduling, synchronizing for the effective\nutilization of IoT\
    \ devices that are short on resources. The diversified nature of edge devices\n\
    has to be emphasized by the fog architecture at the device as well as the network\
    \ levels.\nUtilizing heterogeneous devices in a diverse fog setting with varying\
    \ application demands\nis strenuous. Numerous IoT devices from diverse hardware\
    \ and software vendors add to\nthe complexity factor. When the edge lacks computational\
    \ resources, it can be acquired and\nassigned from among the fog nodes setting\
    \ up a common pool of computing, network, and\nstorage resources, availed by applications\
    \ as per demand. The heterogeneity of fog devices\nand resources in the dynamic\
    \ fog setting enables resource scheduling and allocation to be\nmore challenging\
    \ than that of the cloud, with utilizing idle resources being fog’s top priority.\n\
    •\nSecurity and privacy\nThe heterogeneity of devices makes the fog framework\
    \ vulnerable to various attacks\ndue to its deployment in a not-so-secure setting.\
    \ As fog nodes are positioned between\nthe cloud and end-users, fog computing\
    \ is susceptible to security issues. Assuring the pri-\nvacy of sensitive data\
    \ originating from sensors is critical. The fog-based Distributed Denial\nof Service\
    \ (DDoS) attack is highly destructive, as diverse malignant devices overwhelm\n\
    resource-limited end devices with fake service requests. Another such attack is\
    \ the Man-in-\nthe-Middle Attack (MMA), which discloses sensitive private data.\
    \ The physical components\nof IoT devices can also be attacked, referred to as\
    \ a physical attack based on the protection\nlevel and implemented location.\n\
    •\nQoS\nThe fog framework encompasses devices from the cloud to the edge, and\
    \ the fog nodes\nare to provide end-to-end services adhering to users’ service-speciﬁc\
    \ QoS features. The fog\nsystem is entitled to manage the distribution of computing\
    \ and storage to the cloud while\norchestrating heterogeneous edge devices. Hence,\
    \ it is necessary to dynamically integrate\ncloud servers and fog devices.\n•\n\
    Blockchain and Software-Deﬁned Networking (SDN)\nSensors 2022, 22, 196\n25 of\
    \ 38\nIn fog-based IoT settings, blockchain technology can provide a secure framework\
    \ for\ncontrolling data and information exchanges amongst independently operating\
    \ devices.\nTo improve privacy and security, blockchain offers the safe transmission\
    \ and storage of\ndigitally signed documents. As a result, an additional study\
    \ into this technology is critical\nin order to offer and improve methods for\
    \ securely transmitting data between IoT devices,\nutilizing a trustworthy approach\
    \ such as a time-stamped contractual handshake.\nFurthermore, Software Deﬁned\
    \ Networking (SDN) is a networking technology that\nmay be used in conjunction\
    \ with fog technology to enable effective data exchange and\nresource collaboration.\
    \ SDN may also bring intelligence to fog-based IoT networks, among\nother things.\
    \ SDN may also be utilized to protect fog-based IoT infrastructures. The authors,\n\
    for example, developed a hybrid network design for smart cities that included\
    \ SDN with\nblockchain. As a result, research into SDN and its integration with\
    \ blockchain would be\nhelpful in providing an efﬁcient architecture for sustainable\
    \ smart cities.\n•\nLatency management\nLatency control is required in fog computing\
    \ to guarantee an acceptable level of Quality\nof Service. As a result, research\
    \ into various latency management techniques would aid\nin delivering services\
    \ with the least amount of delay and ensuring a higher QoS throughout\nthe system.\
    \ The estimate of resources is another key topic in fog computing. It aids\nin\
    \ allocating computing resources depending on various policies, allowing for the\
    \ correct\nallocation of resources for future computation. In order to attain\
    \ the necessary QoS,\na comprehensive study into various resource estimate policies\
    \ in terms of multiple aspects\nsuch as user attributes and experienced Quality\
    \ of Experience (QoE) would be useful.\n•\nSustainability\nIn order to reduce\
    \ the total carbon footprint, sustainability which refers to the utiliza-\ntion\
    \ of renewable energy supplies, energy harvesting, and energy-efﬁcient architecture,\n\
    is a crucial necessity when building fog-based IoT architectures for smart cities.\
    \ Dense\nIoT end-devices and fog computing servers are predicted in smart cities.\
    \ As a result,\nthe smart city infrastructure would suffer considerable energy\
    \ constraints. As a result, it is\ncritical to research various methods for increasing\
    \ the energy efﬁciency of fog-based IoT\nsystems without sacriﬁcing QoS, which\
    \ could be accomplished through energy-efﬁcient\ncaching methods.\n•\nInteroperability\
    \ and federation of fog\nAnother essential prerequisite for accomplishing the\
    \ goal of a fog-based IoT and sus-\ntainable smart cities becoming a reality is\
    \ interoperability. Because of the large number of\nheterogeneous IoT devices\
    \ running on multiple protocols, the interoperability of fog-based\nIoT systems\
    \ in sustainable smart cities is difficult. The fog-based IoT architecture should\n\
    provide interoperability so that various systems and devices can correctly comprehend\
    \ and\nuse each other’s functionalities. On that account, intense research efforts\
    \ are recommended\nto create frameworks that allow interoperability for fog-based\
    \ IoT systems in sustainable\nsmart cities.\nOn the fog, requests are processed\
    \ at proximity, mitigating latency. If numerous\nlatency-sensitive applications\
    \ were to request services, the interoperability of the Fog\nclusters and its\
    \ servers along with federation would be required so that a fog device can\nrequest\
    \ its peers to manage processing to avoid cloud involvement that increases latency.\n\
    •\nPower management\nFog nodes manage innumerable end devices, as in sensors,\
    \ and when fog nodes\nare employed as needed, they substantially multiply active\
    \ nodes, increasing the whole\nsystem’s power consumption. Hence, power has to\
    \ be managed effectively in large fog sys-\ntems. One such option to study would\
    \ be integrating the fog nodes in speciﬁc applications\nand moving tasks among\
    \ nodes. The majority of fog devices are power-constrained, and\nefﬁcient energy\
    \ utilization is essential.\nSensors 2022, 22, 196\n26 of 38\nTable 5 furnishes\
    \ the summary of open issues and potential solutions concerned with\nfog computing.\n\
    Table 5. Open challenges and future research directions—summary.\nOpen Issue\n\
    Limitations\nPrevalent\nPotential Solutions or\nResearch Prospect\nRelated\nSpeciﬁcs\n\
    Impact\nStandardization of\nfog computing\nSeveral fog deﬁnitions and related\n\
    concepts are being proposed.\nFormulate fog deﬁnition that can be\nuniversally\
    \ accepted.\nFoundation\nStandards and\nDeﬁnition\nScalability\nMajor fog system\
    \ schemes in practice fail\nto scale IoT vastitude.\nDesign algorithms and procedures\
    \ that ensure\nscalability.\nScalability\nPlacement; Service\nProvisioning;\n\
    Scheduling; Load\nBalancing;\nOfﬂoading\nBandwidth-aware\nsystem\nAlthough reducing\
    \ bandwidth usage is\nkey, fewer fog computing regard\nconserving bandwidth through\
    \ fog\nsystems.\nDeliberate on saving bandwidth through fog\nsystems and measure\
    \ bandwidth usage under\nfog systems.\nBandwidth\nTestbeds and\nExperiments; Control\n\
    and Monitoring;\nInfrastructure Design\nSLA for fog\nsystem\nSLAs for cloud system\
    \ are deﬁned, but\nSLAs for fog systems are not deﬁned.\nDevise new SLA compatible\
    \ for fog\ncomputing systems that supports\nmulti-vendors.\nCost, QoS\nFog Infrastructure;\n\
    Control and\nMonitoring\nMobility\nMajor existing work considers ﬁxed fog\nnodes\
    \ and mobile IoT devices.\nPropose fog systems with mobile fog nodes\nand design\
    \ suitable task ofﬂoading and\nscheduling plans ensuring availability to IoT\n\
    nodes.\nMobility,\nManagement\nConcepts and\nFramework; Security\nand Privacy;\n\
    Scheduling, Load\nBalancing and\nOfﬂoading\nFog node site\nselection\nThe issue\
    \ of site selection for fog node is\nhighlighted by limited studies.\nThe placing\
    \ of fog servers at appropriate\npositions is crucial to offer maximum\nservice.\
    \ Analysis of demand and\nworkload of a speciﬁc node prior to\nplacement minimizes\
    \ maintenance cost.\nDevise site selection policies for fog nodes,\naddressing\
    \ computation, communication,\nstorage, and cost.\nQoS, Cost, RAS\nResource Analysis\
    \ and\nEstimation;\nInfrastructure Design\nSDN support\nFog computing does not\
    \ provide native\nsupport to SDN.\nImproving and standardizing SDN for fog\nsystems.\n\
    Programmability\nSoftware and Tools;\nDeﬁnition and\nStandards\nResource\nMonitoring\n\
    Fog resource monitoring is addressed by\nvery few studies.\nFormulate procedures\
    \ that monitor resources\nof fog systems involving multi-operators.\nManagement,\n\
    Programmability\nSoftware and Tools;\nControl and\nMonitoring\nHigh-speed user\n\
    support\nExisting communication protocols do not\nassist high-speed users.\nDevelop\
    \ protocols supporting high-speed\nusers and mobility-predicting algorithms\n\
    based on machine learning.\nMobility\nArchitecture and\nFramework\nFederation\n\
    Federation schemes or application for fog\nis unavailable.\nFormulate new fog\
    \ node federation strategy\noperating across diverse domains.\nProgrammability,\n\
    Management\nSoftware and Tools\nFog node\nsecurity\nThe fog nodes positioned at\
    \ proximity of\nend user incites security challenge.\nConﬁgure secure fog nodes\
    \ with robust access\ncontrol policies that handle site attacks and\nsecure hardware\
    \ design to withstand physical\ndamage.\nSecurity, Device\nHeterogeneity\nSecurity\
    \ and Privacy;\nHardware Design\nTrust and\nauthentication\nHeterogeneous IoT\
    \ nodes and fog nodes\nmake the traditional authentication and\ntrust strategies\
    \ inept. The providers of\nfog service may be internet service\nprovider, cloud\
    \ vendor, or end-users,\nwhich jeopardizes the trust in fog.\nDesign of novel\
    \ trust and authentication\nstructure for user, service, and nodes is\nneedful.\n\
    Heterogeneity,\nSecurity\nSecurity and Privacy;\nDeﬁnition and\nStandards\nSecurity\
    \ for fog\nofﬂoading\nFog node task ofﬂoading may lead to\nsecurity and privacy\
    \ concern.\nDevise secure ofﬂoading technique and\nintegrity, correctness checking\
    \ scheme for task\nofﬂoaded.\nSecurity, QoS\nOfﬂoading, Security,\nand Privacy\n\
    Privacy\nWith various networks involved and fog\noperating predominantly on wireless\n\
    technology, privacy issues arise. The end\nuser can access numerous fog nodes\n\
    which involves sensitive data.\nMaintaining the privacy of sensitive personal\n\
    data is vital.\nPrivacy\nPrivacy and Security\nFlexibility\nFault or failure at\
    \ network is not\nregarded by existing fog networks, with\nfog nodes being more\
    \ prone to DoS\nattacks due to limited resources.\nRegard fault prevention, detection,\
    \ and\nrecovery in fog networks and design\nDoS-resilient fog system.\nSecurity\n\
    Security and Privacy;\nInfrastructure Design;\nControl and\nMonitoring\nGreen\
    \ fog\ncomputing\nEnhancing energy efﬁciency of overall\nfog system has to be\
    \ deliberate.\nUtilize battery storages and energy harvesting\nfor IoT sensors\
    \ and devices and place fog\nnodes near renewable energy sources.\nEnergy\nResource\
    \ analysis,\nEstimation;\nInfrastructure Design\nEnergy\nconsumption\nWith huge\
    \ number of fog nodes, energy\nconsumed is large. The energy demand\nof fog nodes\
    \ should be reduced to\nmitigate cost and energy.\nDevice resource provisioning\
    \ strategy that is\nenergy efﬁcient, while being aware of fog\nnode positions.\n\
    Energy\nResource Analysis,\nEstimation;\nInfrastructure Design\nMulti-objective\n\
    design\nMany existent schemes reckon certain\nobjectives and overlook other objectives.\n\
    Propound schemes that regard multiple\nobjectives concurrently (task ofﬂoad strategy\n\
    that deems availability, bandwidth, energy,\nand security).\nQoS\nScheduling,\
    \ Load\nBalancing, and\nOfﬂoading; Resource\nAnalysis and\nEstimation; Testbeds\n\
    and Experiments\nSensors 2022, 22, 196\n27 of 38\n4.2. Future Prospects of Fog/Edge\
    \ Computing\nThe technological possibilities that may lead fog/edge computing\
    \ paradigms into\nthe future are portrayed in Figure 14 and detailed as follows:\n\
    -objective \nn \nMany existent schemes \nreckon certain objectives and \noverlook\
    \ other objectives. \nPropound schemes that regard \nmultiple objectives concurrently\
    \ \n(task offload strategy that deems \navailability, bandwidth, energy, and \n\
    security). \nQoS \nBalancing, and \nOffloading; \nResource Analysis \nand Estimation;\
    \ \nTestbeds and \nExperiments \n4.2. Future Prospects of Fog/Edge computing \n\
    The technological possibilities that may lead fog/edge computing paradigms into\
    \ the \nfuture are portrayed in Figure 14 and detailed as follows: \n \nFigure\
    \ 14. Future opportunities—fog computing and other evolving computing paradigms.\
    \ \n4.2.1. Big Data Analytics \nThe proliferation of the ubiquitous IoT has led\
    \ up to an overwhelmingly immense \namount of data generation, inferred as big\
    \ data [134]. Big data entails ever-expanding \ndatasets, which are heterogeneous\
    \ in nature, comprising of structured, semi-structured, \nand unstructured data\
    \ [135]. It garners potential for opportunities as well as challenges, \nincluding\
    \ the five Vs [136]. Thus, big data analytics is a promising solution that processes\
    \ \nthe humongous big data and transforms it into smart data, imparting actionable\
    \ insights \ninto making data-driven decisions [137]. The key feature of fog computing\
    \ and edge \nFigure 14. Future opportunities—fog computing and other evolving\
    \ computing paradigms.\n4.2.1. Big Data Analytics\nThe proliferation of the ubiquitous\
    \ IoT has led up to an overwhelmingly immense\namount of data generation, inferred\
    \ as big data [134]. Big data entails ever-expanding\ndatasets, which are heterogeneous\
    \ in nature, comprising of structured, semi-structured,\nand unstructured data\
    \ [135]. It garners potential for opportunities as well as challenges,\nincluding\
    \ the ﬁve Vs [136]. Thus, big data analytics is a promising solution that processes\n\
    the humongous big data and transforms it into smart data, imparting actionable\
    \ insights\ninto making data-driven decisions [137]. The key feature of fog computing\
    \ and edge\ncomputing models is the potential to quickly store and process data,\
    \ beneﬁting real-time\napplications and playing a crucial part in efﬁcient business\
    \ operations [138,139].\n4.2.2. Serverless Computing\nServerless computing facilitates\
    \ an easy and hastier IoT application development\nby eliminating the need to\
    \ manage a real infrastructure [140]. It is also referred to as\nthe Function-as-a-Service\
    \ (FaaS), implementing code as independent functions through\ndynamic resource\
    \ provisioning, which enhances the runtime infrastructure scalability [141,\n\
    142]. Integrating serverless computing to the edge computing model increases the\
    \ com-\nputation speed of data generated and processed by IoT applications deployed\
    \ on edge\ndevices [143]. As individual functions are executed on edge devices,\
    \ the response time,\nlatency, and energy consumed is decreased, and the reliability\
    \ is improved.\n4.2.3. Blockchain\nBlockchain is a novel concept to store data\
    \ as a chain of blocks to enhance data\nsecurity [144]. It is a super-secure method\
    \ to store, authenticate, and protect data, which\npromotes trusted transactions.\
    \ Blockchain usually revolves around securing cryptocurrency\nwith real potential\
    \ being transparent and immutable. It utilizes the distributed ledger\nmodel to\
    \ secure transactions and is decentralized in nature, providing accurate and efﬁcient\n\
    transactions, evading intermediaries. Blockchain is engaged in offering services\
    \ pertaining\nto ﬁnance, voting, supply chain monitoring, and smart contracts.\
    \ It can be deployed to\nsecure data generated by IoT applications [145,146].\n\
    4.2.4. Quantum Computing\nThe emerging ﬁeld of quantum computing extends a substantial\
    \ computational lead\nover classical computing by leveraging the quantum physics\
    \ principles of entanglement\nSensors 2022, 22, 196\n28 of 38\nand superposition\
    \ [147]. With unimaginably swift quantum computers, calculations are\nperformed\
    \ and stored using quantum bits referred to as qubits, which allows number\ncrunching\
    \ and problem-solving at an exponential scale. Seemingly unsolvable complex\n\
    tasks, predicting viable solutions to issues, and the processing of a massive\
    \ amount of\ndata can be handled with absolute ease by quantum computers. They\
    \ can further enhance\ncomputational efﬁciency, security, and energy efﬁciency\
    \ [148]. Quantum computing can\nbe combined with ML and DL techniques to predict\
    \ the resource demand and handle\nan efﬁcient resource and energy utilization\
    \ at fog and edge layers [149,150]. Quantum\ncomputing is in its budding stage,\
    \ with research efforts underway at an accelerating\npace [148].\n4.2.5. Software-Deﬁned\
    \ Networking\nSoftware-Deﬁned Networking is an upcoming paradigm that overcomes\
    \ the verti-\ncal integration issue by separating the control logic of the network\
    \ from the underlying\nswitches and routers, enabling a logical network control\
    \ centralization [151]. It makes it\nsimpler to manage a ﬂexible and reliable\
    \ network, introduces new networking abstrac-\ntions, and leads to network evolution.\
    \ SDN overcomes conventional network issues by\nenhancing the virtualization,\
    \ security, energy efﬁciency, and network reliability, optimizing\nthe network\
    \ topology, managing complexity, service orchestration-beneﬁtting fog, and\nedge\
    \ computing [152,153].\n4.2.6. Artiﬁcial Intelligence (AI)\nArtiﬁcial intelligence\
    \ is a key ﬁeld of computer science, where machines mimic human\nintelligence/behavior\
    \ and is already transforming the world. The accelerating ability\nof machines\
    \ to learn and act smart is gearing up to drive even more businesses and\ntechnologies.\
    \ AI, collectively with its subﬁelds of machine learning and deep learning,\n\
    help businesses save cost, enrich customer experience, communicate effectively,\
    \ streamline\nworkﬂows, and obtain insights for better decisions. ML is the ability\
    \ of a machine to learn\nwithout involving explicit programming. It can analyze\
    \ huge datasets and offer actionable\ninsights. DL, which is a subset of ML, is\
    \ capable of handling complex computational tasks.\nAI has begun to see the light\
    \ of the day with automation and implementation occurring at\na large scale and\
    \ fast pace. Likewise, intense research efforts are underway for integrating\n\
    fog and edge computing with artiﬁcial intelligence to enhance the overall performance,\n\
    including resource, energy management, security, and reliability [154–156].\n\
    5. Sustainable/Green Computing in Fog/Edge\nSustainable/green computing is the\
    \ efﬁcient management of computational, commu-\nnication, and storage devices\
    \ through convincing design and manufacturing practices with\na reduced impact\
    \ on the environment [157]. The last decade has seen sustainable/green\ncomputing\
    \ permeating ﬁelds of social computing, mobile computing, agent systems based\n\
    on AI, as well as the Internet of Things. IoT nodes possess power constraints\
    \ and connecting\nwith the internet makes them vulnerable to attacks. For IoT\
    \ to be sustainable, energy and\nsecurity are the two key aspects to be emphasized.\n\
    5.1. Energy Sustainability\nWith IoT services pervading all aspects of our lives,\
    \ energy-constrained IoT devices\nspark concern while considering sustainability.\
    \ The massive number IoT sensors and\nactuators deployed necessitate a continuous\
    \ and persistent power supply. As the IoT\nnode size reduces, the size of the\
    \ battery also decreases. In light of the current trend to\nenhance IoT device\
    \ functionality, formulating sustainable solutions for confronting power\nconstraints\
    \ is essential [158].\nNumerous research efforts have been oriented towards energy\
    \ harvesting for self-\nsufﬁcient IoT functioning, alongside tackling IoT security\
    \ issues. The energy consumed\nby digital and smart gadgets has become concerning.\
    \ Energy harvesting from renewable\nSensors 2022, 22, 196\n29 of 38\nenergy sources\
    \ can power a myriad of IoT sensors [159,160]. With IoT sensors having\na battery\
    \ that lasts for a limited time, frequent charging or replacement is not viable\
    \ at\nall times. Hence, energy harvesting from renewable energy such as kinetic,\
    \ solar, ther-\nmal, etc., seems plausible [161]. Moreover, energy harvesting\
    \ this issue can be handled\nby deploying an efﬁcient data transmission policy\
    \ [162], with almost 80% of a sensor’s\nenergy being depleted on data transmission.\
    \ Even though efforts for enriching the energy\nefﬁciency of IoT systems are underway,\
    \ they hardly match the proliferating pace of IoT\nservices/dependence [158].\n\
    5.2. Security Sustainability\nIoT sustainability emphasizes the security of data\
    \ and devices. Securing data involves\nhandling conﬁdentiality and integrity aspects,\
    \ whereas device security concerns defense\nagainst stealth attacks. Energy-harvesting\
    \ chips are susceptible to malicious attacks, in-\ncluding DoS attacks that disrupt\
    \ sensors. Both the criteria of energy efﬁciency and security\ncharacterize the\
    \ IoT sustainability while, at the same time, challenging IoT progress [163]\n\
    as IoT devices are power constrained, which demands a reﬁned, lightweight energy\
    \ and\nsecurity framework.\nAccording to a study, 70% of connected devices are\
    \ at risk of cyber-attacks [164]. Fur-\nthermore, vulnerable smart devices are\
    \ estimated to cause 25% of all industrial attacks [158].\nAs IoT devices are\
    \ resource-constrained, they are highly prone to attack than desktops\nor laptops.\
    \ As the battery size decreases, it can hold less energy, which in turn reduces\n\
    the availability of resources that provide security. Hence, lightweight security\
    \ mechanisms\nsuitable for power constraint devices are essential, as traditional\
    \ security solutions designed\nfor resource-rich devices consume more energy,\
    \ owing to more computations. Research\nshows that the advanced encryption standard,\
    \ as well as the elliptic curve cryptography,\noffer a lightweight cryptographic\
    \ solution with an evaluation based on resource limitations,\nchip space, latency,\
    \ and throughput [165]. For the IoT systems to be sustainable, the balanc-\ning\
    \ of aspects such as energy efﬁciency, power consumption, performance, and security\
    \ is\nrequired [158].\n6. Conﬂuence of ML and Fog/Edge\nThe conventional cloud\
    \ model falls short of fulﬁlling IoT application necessities due\nto the enormous\
    \ data generated from IoT devices [166]. Transmitting the overwhelming\nIoT data\
    \ to the cloud would cause network overhead, consuming bandwidth, and latency\n\
    issues [167]. Hence, to cut back on the data transfer cost as well as network\
    \ delays, service\nproviders are steering towards the fog and edge computing [168],\
    \ with an additional\nopportunity for enforcing security and privacy [169]. The\
    \ IoT systems comprise edge\nequipment, sensors, and actuators with latency, bandwidth,\
    \ and security necessities [166].\nThe fog computing technology of extending computer\
    \ and storage to network’s edge solves\nprocessing and networking impediments\
    \ [167], enabling rapid processing close to the data\nsource [170]. The complexity\
    \ and dynamism of fog computing with its communication\nnetworks facilitating\
    \ low latency makes sophisticated computation possible in a conducive\nenvironment.\
    \ Fog computing confers societal beneﬁts through its range of applications,\n\
    namely, healthcare, Industry 4.0, autonomous vehicles, smart cities [171], etc.\n\
    Despite that, it encounters performance as well as security setbacks. As a result,\n\
    machine learning (ML), which is a subﬁeld of artiﬁcial intelligence (AI), is catching\
    \ on to\nassist FC in resolving its shortcomings. Using ML to enhance FC applications\
    \ and deliver\nefﬁcient services in terms of accuracy, latency reduction, energy\
    \ consumption, security,\nprivacy, resource, and trafﬁc management [25,172,173]\
    \ has been increasingly popular\nin recent times. Fog computing resource management\
    \ involving ML enhances the computer,\ndecision-making, and resource provisioning,\
    \ along with delay prediction. Deploying ML\ntechniques in fog computing facilitates\
    \ accurate data processing and analyses in real-time\nwhile managing the network\
    \ overhead as well as communication trafﬁc, owing to fog’s\ndecentralized model.\
    \ The security aspects for the device, network, and data involving fog\nSensors\
    \ 2022, 22, 196\n30 of 38\ncomputing accompanied by ML prove to be effective.\
    \ The merging of the fog model with\nmachine learning has evolved into robust\
    \ end-user and upper-layer services, allowing for\ndeeper analytics and intelligent\
    \ answers to tasks.\nMachine learning (ML) is a promising option for intelligent\
    \ data processing and infer-\nence and is a prime enabler to various IoT application\
    \ domains [166], such as healthcare,\nsmart home, smart agriculture, smart industry,\
    \ smart grid, etc. It has a crucial part in design-\ning the intelligent/smart\
    \ setting for autonomous operations [167]. Machine learning has\nimmense potential\
    \ as a signiﬁcant IoT technology gaining traction to provide insights for\nIoT\
    \ applications [174]. IoT has excellent prospects for enhancing human life and\
    \ industrial\ngrowth as innumerable sensing devices perform monitoring and increase\
    \ communication\npotential [175]. For resource-constrained IoT devices, the conﬂuence\
    \ of machine learning\nwith the cloud, edge, and fog is vital for IoT implementation\
    \ [156,175] to usher in efﬁcient\nperformance, greater controllability, productivity,\
    \ and cost reduction possibilities, while\nmanaging IoT’s QoS challenges.\nEnabling\
    \ intelligence at fog and IoT improves the overall performance [100]. FC moves\n\
    the cloud’s potential to the edge of the network, where IoT and human users are\
    \ present.\nIntelligence can be incorporated into FC as device-driven or human-driven.\
    \ In a device-\ndriven approach, fog and IoT are equipped with more sensing, processing,\
    \ network, and\nstorage capabilities, enabling context awareness for decision\
    \ making and local resource\nmanagement. In a human-driven model, human users\
    \ act as the data source to the system,\nwhose behavioral pattern is the key in\
    \ shaping the network while serving them. Collectively,\nthese two approaches\
    \ can help meet IoT’s demand for QoS when designing fog computing\nsystems.\n\
    The harnessing of machine learning in an IoT setting facilitates deeper analytics\n\
    and helps materialize efﬁcient and smart IoT applications [174]. Moreover, it\
    \ can be\nutilized to overcome networking difﬁculties pertaining to routing, resource\
    \ allocation,\ntrafﬁc engineering, and security [176–180]. Neural networks are\
    \ deployed to effectively\nanalyze enormous data produced by IoT [181]. Moreover,\
    \ advanced AI involving deep\nlearning has been thriving in data analytics, decision\
    \ making, and prediction [85].\nThe potential of IoT has remarkably expanded thanks\
    \ to the convergence of ma-\nchine learning and artiﬁcial intelligence. Advanced\
    \ machine intelligence approaches have\nenabled substantial insights into a number\
    \ of real-world situations and the capacity to\ndetermine critical operational\
    \ choices from the massive volume of IoT sensory data. As\na result, ML and IoT\
    \ must work in tandem to solve complicated real-world issues and\nfulﬁll computation\
    \ and communication needs.\n7. Conclusions\nCloud computing has revolutionized\
    \ device interactions on the internet, which ush-\nered in the Internet-of-Things\
    \ and implemented a plethora of connected gadgets, with\nthe potential to continually\
    \ sense and respond to user requirements. The proliferation\nof networked IoT\
    \ devices and ensuing big data and the rigorous demands of emerging\nIoT applications,\
    \ such as low latency, location awareness, and mobility support in a geo-\ndistributed\
    \ scenario, have challenged the conventional cloud computing architecture.\nHence,\
    \ various computing paradigms such as edge and fog have emerged to address these\n\
    limitations by deploying resources at the network’s edge. The computing at edge\
    \ and fog\nimplies collecting, processing, and analyzing data close to the data\
    \ source and transmitting\nreﬁned results to the centralized cloud, favoring time-sensitive\
    \ applications that require\nincreased accuracy, low latency, high-speed analytics,\
    \ faster response time, improved re-\nliability, and availability. Combining fog/edge\
    \ with cloud computing has the prospect\nof aiding IoT in multiple ways. Because\
    \ the fog and edge computing paradigms are up-\nand-coming, exhaustive research\
    \ on this new technology is imperative. The evolving\ncomputing paradigms, as\
    \ well as the challenges and opportunities, were explored in this\nstudy. Budding\
    \ researchers can largely beneﬁt from this extensive survey to comprehend\nrecent\
    \ advances in evolving computing paradigms.\nSensors 2022, 22, 196\n31 of 38\n\
    Author Contributions: Conceptualization, N.A.A., D.R. and K.S.; methodology, N.A.A.,\
    \ D.R. and\nK.S.; software, P.M.D.R.V.; validation, P.M.D.R.V., K.S. and Y.-C.H.;\
    \ formal analysis, N.A.A.; in-\nvestigation, N.A.A.; resources, K.S. and Y.-C.H.;\
    \ data curation, P.M.D.R.V.; writing—original draft\npreparation, N.A.A., D.R.\
    \ and K.S.; writing—review and editing, N.A.A., D.R., P.M.D.R.V., K.S. and\nY.-C.H.;\
    \ visualization, N.A.A.; supervision, D.R.; project administration, Y.-C.H.; funding\
    \ acquisition,\nY.-C.H. All authors have read and agreed to the published version\
    \ of the manuscript.\nFunding: This research was funded by the MINISTRY OF SCIENCE\
    \ AND TECHNOLOGY, TAIWAN,\ngrant number MOST 110-2622-E-197-009.\nInstitutional\
    \ Review Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\n\
    Data Availability Statement: Not applicable.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest. The funders had no role in the design\nof the\
    \ study; in the collection, analyses, or interpretation of data; in the writing\
    \ of the manuscript, or\nin the decision to publish the results.\nReferences\n\
    1.\nArmbrust, M.; Fox, A.; Grifﬁth, R.; Joseph, A.D.; Katz, R.; Konwinski, A.;\
    \ Lee, G.; Patterson, D.; Rabkin, A.; Stoica, I.; et al. A View\nof Cloud Computing.\
    \ Commun. ACM 2010, 53, 50–58. [CrossRef]\n2.\nYousefpour, A.; Fung, C.; Nguyen,\
    \ T.; Kadiyala, K.; Jalali, F.; Niakanlahiji, A.; Kong, J.; Jue, J.P. All One\
    \ Needs to Know about Fog\nComputing and Related Edge Computing Paradigms: A Complete\
    \ Survey. J. Syst. Archit. 2019, 98, 289–330. [CrossRef]\n3.\nOrtiz, G.; Zouai,\
    \ M.; Kazar, O.; Garcia-de-Prado, A. Atmosphere: Context and Situational-Aware\
    \ Collaborative IoT Architecture\nfor Edge-Fog-Cloud Computing. Comput. Stand.\
    \ Interfaces 2022, 79, 103550. [CrossRef]\n4.\nBerger, C.; Eichhammer, P.; Reiser,\
    \ H.P.; Domaschka, J.; Hauck, F.J.; Habiger, G. A Survey on Resilience in the\
    \ IoT: Taxonomy,\nClassiﬁcation, and Discussion of Resilience Mechanisms. ACM\
    \ Comput. Surv. 2022, 54, 1–39. [CrossRef]\n5.\nFersi, G. Fog Computing and Internet\
    \ of Things in One Building Block: A Survey and an Overview of Interacting Technologies.\n\
    Cluster Comput. 2021, 24, 2757–2787. [CrossRef]\n6.\nSen, A.A.A.; Yamin, M. Advantages\
    \ of Using Fog in IoT Applications. Int. J. Inf. Tecnol. 2021, 13, 829–837. [CrossRef]\n\
    7.\nShi, W.; Dustdar, S. The Promise of Edge Computing. Computer 2016, 49, 78–81.\
    \ [CrossRef]\n8.\nDolui, K.; Datta, S.K. Comparison of Edge Computing. In 2017\
    \ Global Internet of Things Summit (GIoTS); IEEE: Geneva, Switzerland,\n2017;\
    \ pp. 1–6. [CrossRef]\n9.\nLiu, Y.; Fieldsend, J.E.; Min, G. A Framework of Fog\
    \ Computing: Architecture, Challenges, and Optimization. IEEE Access 2017, 5,\n\
    25445–25454. [CrossRef]\n10.\nIEEE Standard 1934–2018; IEEE Standard for Adoption\
    \ of OpenFog Reference Architecture for Fog Computing. 2018; pp. 1–176.\nAvailable\
    \ online: https://ieeexplore.ieee.org/document/8423800 (accessed on 22 December\
    \ 2021).\n11.\nOkewu, E.; Misra, S.; Maskeli¯unas, R.; Damaševiˇcius, R.; Fernandez-Sanz,\
    \ L. Optimizing Green Computing Awareness for\nEnvironmental Sustainability and\
    \ Economic Security as a Stochastic Optimization Problem. Sustainability 2017,\
    \ 9, 1857. [CrossRef]\n12.\nVenckauskas, A.; Stuikys, V.; Damasevicius, R.; Jusas,\
    \ N. Modelling of Internet of Things Units for Estimating Security-Energy-\nPerformance\
    \ Relationships for Quality of Service and Environment Awareness: Modelling of\
    \ IoT Units for Estimating Quality of\nService. Secur. Comm. Netw. 2016, 9, 3324–3339.\
    \ [CrossRef]\n13.\nMaskeli¯unas, R.; Damaševiˇcius, R.; Segal, S. A Review of\
    \ Internet of Things Technologies for Ambient Assisted Living Environ-\nments.\
    \ Future Internet 2019, 11, 259. [CrossRef]\n14.\nAtzori, L.; Iera, A.; Morabito,\
    \ G. Understanding the Internet of Things: Deﬁnition, Potentials, and Societal\
    \ Role of a Fast Evolving\nParadigm. Ad Hoc Netw. 2017, 56, 122–140. [CrossRef]\n\
    15.\nHu, P.; Dhelim, S.; Ning, H.; Qiu, T. Survey on Fog Computing: Architecture,\
    \ Key Technologies, Applications and Open Issues.\nJ. Netw. Comput. Appl. 2017,\
    \ 98, 27–42. [CrossRef]\n16.\nMahmud, R.; Kotagiri, R.; Buyya, R. Fog Computing:\
    \ A Taxonomy, Survey and Future Directions. In Internet of Everything. Internet\n\
    of Things (Technology, Communications and Computing); Di Martino, B., Li, K.-C.,\
    \ Yang, L.T., Esposito, A., Eds.; Springer: Singapore,\n2018; pp. 103–130. [CrossRef]\n\
    17.\nLin, J.; Yu, W.; Zhang, N.; Yang, X.; Zhang, H.; Zhao, W. A Survey on Internet\
    \ of Things: Architecture, Enabling Technologies,\nSecurity and Privacy, and Applications.\
    \ IEEE Internet Things J. 2017, 4, 1125–1142. [CrossRef]\n18.\nMao, Y.; You, C.;\
    \ Zhang, J.; Huang, K.; Letaief, K.B. A Survey on Mobile Edge Computing: The Communication\
    \ Perspective. IEEE\nCommun. Surv. Tutor. 2017, 19, 2322–2358. [CrossRef]\n19.\n\
    Yong, B.; Wei, W.; Li, K.C.; Shen, J.; Zhou, Q.; Wozniak, M.; Damaševiˇcius, R.\
    \ Ensemble machine learning approaches for webshell\ndetection in Internet of\
    \ things environments. Trans. Emerg. Telecommun. Technol. 2020, e4085. [CrossRef]\n\
    20.\nMouradian, C.; Naboulsi, D.; Yangui, S.; Glitho, R.H.; Morrow, M.J.; Polakos,\
    \ P.A. A Comprehensive Survey on Fog Computing:\nState-of-the-Art and Research\
    \ Challenges. IEEE Commun. Surv. Tutor. 2018, 20, 416–464. [CrossRef]\nSensors\
    \ 2022, 22, 196\n32 of 38\n21.\nMukherjee, M.; Shu, L.; Wang, D. Survey of Fog\
    \ Computing: Fundamental, Network Applications, and Research Challenges.\nIEEE\
    \ Commun. Surv. Tutor. 2018, 20, 1826–1857. [CrossRef]\n22.\nElazhary, H. Internet\
    \ of Things (IoT), Mobile Cloud, Cloudlet, Mobile IoT, IoT Cloud, Fog, Mobile\
    \ Edge, and Edge Emerging\nComputing Paradigms: Disambiguation and Research Directions.\
    \ J. Netw. Comput. Appl. 2019, 128, 105–140. [CrossRef]\n23.\nAtlam, H.F.; Walters,\
    \ R.J.; Wills, G.B. Fog Computing and the Internet of Things: A Review. Big Data\
    \ Cogn. Comput. 2018, 2, 10.\n[CrossRef]\n24.\nBangui, H.; Rakrak, S.; Raghay,\
    \ S.; Buhnova, B. Moving to the Edge-Cloud-of-Things: Recent Advances and Future\
    \ Research\nDirections. Electronics 2018, 7, 309. [CrossRef]\n25.\nAbdulkareem,\
    \ K.H.; Mohammed, M.A.; Gunasekaran, S.S.; Al-Mhiqani, M.N.; Mutlag, A.A.; Mostafa,\
    \ S.A.; Ali, N.S.; Ibrahim,\nD.A. A Review of Fog Computing and Machine Learning:\
    \ Concepts, Applications, Challenges, and Open Issues. IEEE Access\n2019, 7, 153123–153140.\
    \ [CrossRef]\n26.\nKhan, W.Z.; Ahmed, E.; Hakak, S.; Yaqoob, I.; Ahmed, A. Edge\
    \ Computing: A Survey. Future Gener. Comput. Syst. 2019, 97,\n219–235. [CrossRef]\n\
    27.\nCao, K.; Liu, Y.; Meng, G.; Sun, Q. An Overview on Edge Computing Research.\
    \ IEEE Access 2020, 8, 85714–85728. [CrossRef]\n28.\nYunana, K.; Alfa, A.A.; Misra,\
    \ S.; Damasevicius, R.; Maskeliunas, R.; Oluranti, J. Internet of Things: Applications,\
    \ Adoptions and\nComponents—A Conceptual Overview. In Hybrid Intelligent Systems.\
    \ HIS Advances in Intelligent Systems and Computing; Abraham,\nA., Hanne, T.,\
    \ Castillo, O., Gandhi, N., Nogueira Rios, T., Hong, T.P., Eds.; Springer: Cham,\
    \ Switzerland, 2021. [CrossRef]\n29.\nMoura, J.; Hutchison, D. Fog Computing Systems:\
    \ State of the Art, Research Issues and Future Trends, with a Focus on Resilience.\n\
    J. Netw. Comput. Appl. 2020, 169, 102784. [CrossRef]\n30.\nAslanpour, M.S.; Gill,\
    \ S.S.; Toosi, A.N. Performance Evaluation Metrics for Cloud, Fog and Edge Computing:\
    \ A Review, Taxonomy,\nBenchmarks and Standards for Future Research. Internet\
    \ Things 2020, 12, 100273. [CrossRef]\n31.\nAlli, A.A.; Alam, M.M. The Fog Cloud\
    \ of Things: A Survey on Concepts, Architecture, Standards, Tools, and Applications.\n\
    Internet Things 2020, 9, 100177. [CrossRef]\n32.\nMell, P.; Grance, T. The NIST\
    \ Deﬁnition of Cloud Computing; National Institute of Standards & Technology:\
    \ Gaithersburg, MA,\nUSA, 2011; p. 2.\n33.\nLiu, F.; Tong, J.; Mao, J.; Bohn,\
    \ R.; Messina, J.; Badger, L.; Leaf, D. NIST Cloud Computing Reference Architecture.\
    \ NIST Special\nPublication, Technology Report. 2011. Available online: https://bigdatawg.nist.gov/_uploadﬁles/M0007_v1_3376532289.pdf\n\
    (accessed on 14 September 2011).\n34.\nDorsemaine, B.; Gaulier, J.-P.; Wary, J.-P.;\
    \ Kheir, N.; Urien, P. Internet of Things: A Deﬁnition & amp; Taxonomy. In Proceedings\
    \ of\nthe 2015 9th International Conference on Next Generation Mobile Applications,\
    \ Services and Technologies, Cambridge, UK, 9–11 September\n2015; IEEE: Cambridge,\
    \ UK, 2015; pp. 72–77. [CrossRef]\n35.\nMahmoud, R.; Yousuf, T.; Aloul, F.; Zualkernan,\
    \ I. Internet of Things (IoT) Security: Current Status, Challenges and Prospective\n\
    Measures. In Proceedings of the 10th International Conference for Internet Technology\
    \ and Secured Transactions (ICITST),\nLondon, UK, 14–16 December 2015; pp. 336–341.\n\
    36.\nGubbi, J.; Buyya, R.; Marusic, S.; Palaniswami, M. Internet of Things (IoT):\
    \ A Vision, Architectural Elements, and Future Directions.\nFuture Gener. Comput.\
    \ Syst. 2013, 29, 1645–1660. [CrossRef]\n37.\nRecommendation-ITU-T Y.2060 Overview\
    \ of the Internet of Things, Document, International Telecommunication Union.\
    \ June\n2012. Article No. E 38086. Available online: https://www.itu.int/rec/T-REC-Y.2060-201206-I\
    \ (accessed on 15 June 2012).\n38.\nKhan, W.Z.; Aalsalem, M.Y.; Khan, M.K.; Arshad,\
    \ Q. Enabling Consumer Trust upon Acceptance of IoT Technologies through\nSecurity\
    \ and Privacy Model. In Advanced Multimedia and Ubiquitous Engineering; Park,\
    \ J.J., Jin, H., Jeong, Y.-S., Khan, M.K., Eds.;\nLecture Notes in Electrical\
    \ Engineering; Springer Singapore: Singapore, 2016; Volume 393, pp. 111–117. [CrossRef]\n\
    39.\nSaichaitanya, P.; Karthik, N.; Surender, D. Recent Trends in Iot. J. Inf.\
    \ Comput. Sci. 2016, 9, 9.\n40.\nKhan, N.; Naim, A.; Hussain, M.R.; Naveed, Q.N.;\
    \ Ahmad, N.; Qamar, S. The 51 V’s Of Big Data: Survey, Technologies,\nCharacteristics,\
    \ Opportunities, Issues and Challenges. In Proceedings of the International Conference\
    \ on Omni-Layer Intelligent\nSystems, Crete, Greece, 5–7 May 2019; ACM: Crete,\
    \ Greece, 2019; pp. 19–24. [CrossRef]\n41.\nMartinez, I.; Haﬁd, A.S.; Jarray,\
    \ A. Design, Resource Management, and Evaluation of Fog Computing Systems: A Survey.\
    \ IEEE\nInternet Things J. 2021, 8, 2494–2516. [CrossRef]\n42.\nStorey, V.C.;\
    \ Song, I.-Y. Big Data Technologies and Management: What Conceptual Modeling Can\
    \ Do. Data Knowl. Eng. 2017, 108,\n50–67. [CrossRef]\n43.\nRoman, R.; Lopez, J.;\
    \ Mambo, M. Mobile Edge Computing, Fog et al.: A Survey and Analysis of Security\
    \ Threats and Challenges.\nFuture Gener. Comput. Syst. 2018, 78, 680–698. [CrossRef]\n\
    44.\nBonomi, F.; Milito, R.; Zhu, J.; Addepalli, S. Fog Computing and Its Role\
    \ in the Internet of Things. In Proceedings of the First\nEdition of the MCC Workshop\
    \ on Mobile Cloud Computing, New York, NY, USA, 17 August 2012; pp. 13–16. [CrossRef]\n\
    45.\nChiang, M.; Zhang, T. Fog and IoT: An Overview of Research Opportunities.\
    \ IEEE Internet Things J. 2016, 3, 854–864. [CrossRef]\n46.\nZhang, T.; Zheng,\
    \ Y.; Zheng, R.; Antunes, H. Securing the Internet of Things: Need for a New Paradigm\
    \ and Fog Computing.\nIn Fog for 5G and IoT; Chiang, M., Balasubramanian, B.,\
    \ Bonomi, F., Eds.; John Wiley & Sons, Inc.: Hoboken, NJ, USA, 2017; pp.\n261–283.\
    \ [CrossRef]\n47.\nPuliaﬁto, C.; Mingozzi, E.; Longo, F.; Puliaﬁto, A.; Rana,\
    \ O. Fog Computing for the Internet of Things: A Survey. ACM Trans.\nInternet\
    \ Technol. 2019, 19, 1–41. [CrossRef]\nSensors 2022, 22, 196\n33 of 38\n48.\n\
    Weiner, M.; Jorgovanovic, M.; Sahai, A.; Nikolie, B. Design of a Low-Latency,\
    \ High-Reliability Wireless Communication System\nfor Control Applications. In\
    \ Proceedings of the 2014 IEEE International Conference on Communications (ICC),\
    \ Sydney, NSW, Australia,\n10–14 June 2014; IEEE: Sydney, NSW, Australia, 2014;\
    \ pp. 3829–3835. [CrossRef]\n49.\nGedeon, J.; Brandherm, F.; Egert, R.; Grube,\
    \ T.; Muhlhauser, M. What the Fog? Edge Computing Revisited: Promises, Applications\n\
    and Future Challenges. IEEE Access 2019, 7, 152847–152878. [CrossRef]\n50.\nYannuzzi,\
    \ M.; Milito, R.; Serral-Gracia, R.; Montero, D.; Nemirovsky, M. Key Ingredients\
    \ in an IoT Recipe: Fog Computing, Cloud\nComputing, and More Fog Computing. In\
    \ Proceedings of the 2014 IEEE 19th International Workshop on Computer Aided Modeling\
    \ and\nDesign of Communication Links and Networks (CAMAD), Athens, Greece, 1–3\
    \ December 2014; IEEE: Athens, Greece, 2014; pp. 325–329.\n[CrossRef]\n51.\nCaiza,\
    \ G.; Saeteros, M.; Oñate, W.; Garcia, M.V. Fog Computing at Industrial Level,\
    \ Architecture, Latency, Energy, and Security:\nA Review. Heliyon 2020, 6, e03706.\
    \ [CrossRef]\n52.\nSeitz, A.; Buchinger, D.; Bruegge, B. The Conjunction of Fog\
    \ Computing and the Industrial Internet of Things—An Applied\nApproach. In Proceedings\
    \ of the 2018 IEEE International Conference on Pervasive Computing and Communications\
    \ Workshops (PerCom\nWorkshops), Athens, Greece, 19–23 March 2018; IEEE: Athens,\
    \ Greece, 2018; pp. 812–817. [CrossRef]\n53.\nMahmoudi, C.; Mourlin, F.; Battou,\
    \ A. Formal Deﬁnition of Edge Computing: An Emphasis on Mobile Cloud and IoT Composition.\n\
    In Proceedings of the IEEE 2018 Third International Conference on Fog and Mobile\
    \ Edge Computing (FMEC), Barcelona, Spain, 23–26 April\n2018; IEEE: Barcelona,\
    \ Spain, 2018; pp. 34–42. [CrossRef]\n54.\nBashar, A. Secure and cost efﬁcient\
    \ implementation of the mobile computing using ofﬂoading technique. JITDW 2019,\
    \ 1, 48–57.\n[CrossRef]\n55.\nAl-Janabi, S.; Al-Shourbaji, I.; Shojafar, M.; Abdelhag,\
    \ M. Mobile Cloud Computing: Challenges and Future Research Directions.\nIn Proceedings\
    \ of the 2017 10th International Conference on Developments in eSystems Engineering\
    \ (DeSE), Paris, France, 14–16 June 2017;\nIEEE: Paris, France, 2017; pp. 62–67.\
    \ [CrossRef]\n56.\nDinh, H.T.; Lee, C.; Niyato, D.; Wang, P. A Survey of Mobile\
    \ Cloud Computing: Architecture, Applications, and Approaches:\nA Survey of Mobile\
    \ Cloud Computing. Wirel. Commun. Mob. Comput. 2013, 13, 1587–1611. [CrossRef]\n\
    57.\nFernando, N.; Loke, S.W.; Rahayu, W. Mobile Cloud Computing: A Survey. Future\
    \ Gener. Comput. Syst. 2013, 29, 84–106.\n[CrossRef]\n58.\nMansouri, Y.; Babar,\
    \ M.A. A Review of Edge Computing: Features and Resource Virtualization. J. Parallel\
    \ Distrib. Comput. 2021,\n150, 155–183. [CrossRef]\n59.\nShiraz, M.; Gani, A.;\
    \ Khokhar, R.H.; Buyya, R. A Review on Distributed Application Processing Frameworks\
    \ in Smart Mobile\nDevices for Mobile Cloud Computing. IEEE Commun. Surv. Tutor.\
    \ 2013, 15, 1294–1313. [CrossRef]\n60.\nYaqoob, I.; Ahmed, E.; Gani, A.; Mokhtar,\
    \ S.; Imran, M.; Guizani, S. Mobile Ad Hoc Cloud: A Survey: Mobile Ad Hoc Cloud.\n\
    Wirel. Commun. Mob. Comput. 2016, 16, 2572–2589. [CrossRef]\n61.\nHubaux, J.-P.;\
    \ Gross, T.; Le Boudec, J.-Y.; Vetterli, M. Toward Self-Organized Mobile Ad Hoc\
    \ Networks: The Terminodes Project.\nIEEE Commun. Mag. 2001, 39, 118–124. [CrossRef]\n\
    62.\nAri, A.A.A.; Ngangmo, O.K.; Titouna, C.; Thiare, O.; Kolyang; Mohamadou,\
    \ A.; Gueroui, A.M. Enabling privacy and security\nin Cloud of Things: Architecture,\
    \ applications, security & privacy challenges. Appl. Comput. Inform. 2019. ahead-of-print.\n\
    [CrossRef]\n63.\nAazam, M.; Khan, I.; Alsaffar, A.A.; Huh, E.-N. Cloud of Things:\
    \ Integrating Internet of Things and Cloud Computing and\nthe Issues Involved.\
    \ In Proceedings of 2014 11th International Bhurban Conference on Applied Sciences\
    \ & Technology (IBCAST), Islamabad,\nPakistan, 14–18 January, 2014; IEEE: Islamabad,\
    \ Pakistan, 2014; pp. 414–419. [CrossRef]\n64.\nMahmoud, M.M.E.; Rodrigues, J.J.P.C.;\
    \ Ahmed, S.H.; Shah, S.C.; Al-Muhtadi, J.F.; Korotaev, V.V.; De Albuquerque, V.H.C.\n\
    Enabling Technologies on Cloud of Things for Smart Healthcare. IEEE Access 2018,\
    \ 6, 31950–31967. [CrossRef]\n65.\nAbdelwahab, S.; Hamdaoui, B.; Guizani, M.;\
    \ Znati, T. Cloud of Things for Sensing-as-a-Service: Architecture, Algorithms,\
    \ and\nUse Case. IEEE Internet Things J. 2016, 3, 1099–1112. [CrossRef]\n66.\n\
    Preden, J.S.; Tammemae, K.; Jantsch, A.; Leier, M.; Riid, A.; Calis, E. The Beneﬁts\
    \ of Self-Awareness and Attention in Fog and Mist\nComputing. Computer 2015, 48,\
    \ 37–45. [CrossRef]\n67.\nGalambos, P. Cloud, Fog, and Mist Computing: Advanced\
    \ Robot Applications. IEEE Syst. Man Cybern. Mag. 2020, 6, 41–45.\n[CrossRef]\n\
    68.\nYogi, M.K.; Chandrasekhar, K.C.; Kumar, G.V. Mist Computing: Principles,\
    \ Trends and Future Direction. IJCSE 2017, 4, 19–21.\n[CrossRef]\n69.\nShi, W.;\
    \ Cao, J.; Zhang, Q.; Li, Y.; Xu, L. Edge Computing: Vision and Challenges. IEEE\
    \ Internet Things J. 2016, 3, 637–646.\n[CrossRef]\n70.\nRen, J.; Guo, H.; Xu,\
    \ C.; Zhang, Y. Serving at the Edge: A Scalable IoT Architecture Based on Transparent\
    \ Computing. IEEE Netw.\n2017, 31, 96–105. [CrossRef]\n71.\nChen, G.; Kang, B.-T.;\
    \ Kandemir, M.; Vijaykrishnan, N.; Irwin, M.J.; Chandramouli, R. Studying Energy\
    \ Trade Offs in Ofﬂoading\nComputation/Compilation in Java-Enabled Mobile Devices.\
    \ IEEE Trans. Parallel Distrib. Syst. 2004, 15, 795–809. [CrossRef]\nSensors 2022,\
    \ 22, 196\n34 of 38\n72.\nPatel, M.; Hu, Y.; Hédé, P.; Joubert, J.; Ramos, J.R.;\
    \ Sprecher, N.; Abeta, S.; Neal, A.; Cosimini, P.; Pollard, A.; et al. Contributing\n\
    Organizations and Authors. Mobile-Edge Computing Introductory Technical White\
    \ Paper. White Paper, Mobile-Edge Com-\nputing (MEC) Industry Initiative. 2014.\
    \ Available online: https://portal.etsi.org/portals/0/tbpages/mec/docs/mobile-edge_\n\
    computing_-_introductory_technical_white_paper_v1%2018-09-14.pdf (accessed on\
    \ 1 September 2014).\n73.\nShahzadi, S.; Iqbal, M.; Dagiuklas, T.; Qayyum, Z.U.\
    \ Multi-Access Edge Computing: Open Issues, Challenges and Future\nPerspectives.\
    \ J. Cloud Comp. 2017, 6, 30. [CrossRef]\n74.\nGiust, F.; Verin, G.; Antevski,\
    \ K.; Chou, J.; Fang, Y. MEC Deployments in 4G and Evolution towards 5G. ETSI\
    \ White Paper No.\n24. First Edition. February 2018. Available online: https://www.etsi.org/images/ﬁles/ETSIWhitePapers/etsi_wp24_MEC_\n\
    deployment_in_4G_5G_FINAL.pdf (accessed on 20 February 2018).\n75.\nPan, J.; McElhannon,\
    \ J. Future Edge Cloud and Edge Computing for Internet of Things Applications.\
    \ IEEE Internet Things J. 2018,\n5, 439–449. [CrossRef]\n76.\nHu, Y.; Patel, M.;\
    \ Sabella, D.; Sprecher, N.; Young, V. Mobile Edge Computing A Key Technology\
    \ towards 5G. ETSI White Paper\nNo. 11. First Edition. Available online: https://www.etsi.org/images/ﬁles/etsiwhitepapers/etsi_wp11_mec_a_key_technology_\n\
    towards_5g.pdf (accessed on 5 September 2015).\n77.\nSabella, D.; Vaillant, A.;\
    \ Kuure, P.; Rauschenbach, U.; Giust, F. Mobile-Edge Computing Architecture: The\
    \ Role of MEC\nin the Internet of Things. IEEE Consumer Electron. Mag. 2016, 5,\
    \ 84–91. [CrossRef]\n78.\nAbedin, S.F.; Bairagi, A.K.; Munir, M.S.; Tran, N.H.;\
    \ Hong, C.S. Fog Load Balancing for Massive Machine Type Communications:\nA Game\
    \ and Transport Theoretic Approach. IEEE Access 2019, 7, 4204–4218. [CrossRef]\n\
    79.\nZbakh, M.; Essaaidi, M.; Manneback, P.; Rong, C. (Eds.) Cloud Computing and\
    \ Big Data: Technologies, Applications and Security.\nIn Lecture Notes in Networks\
    \ and Systems; Springer International Publishing: Cham, Switzerland, 2019. [CrossRef]\n\
    80.\nYu, Y. Mobile edge computing towards 5G: Vision, recent progress, and open\
    \ challenges. China Commun. 2016, 13, 89–99.\n[CrossRef]\n81.\nKlas, G.I. Fog\
    \ Computing and Mobile Edge Cloud Gain Momentum Open Fog Consortium, ETSI MEC\
    \ and Cloudlets. 2015.\nAvailable online: https://yucianga.info/wp-content/uploads/2015/11/15_11_22-_Fog_computing_and_mobile_edge_cloud_\n\
    gain_momentum_Open_Fog_Consortium-ETSI_MEC-Cloudlets_v1_1.pdf (accessed on 22\
    \ December 2021).\n82.\nBonomi, F.; Milito, R.; Natarajan, P.; Zhu, J. Fog Computing:\
    \ A Platform for Internet of Things and Analytics. In Big Data and\nInternet of\
    \ Things: A Roadmap for Smart Environments; Bessis, N., Dobre, C., Eds.; Studies\
    \ in Computational Intelligence; Springer\nInternational Publishing: Cham, Switzerland,\
    \ 2014; Volume 546, pp. 169–186. [CrossRef]\n83.\nTalebkhah, M.; Sali, A.; Marjani,\
    \ M.; Gordan, M.; Hashim, S.J.; Rokhani, F.Z. Edge Computing: Architecture, Applications\
    \ and\nFuture Perspectives. In Proceedings of the 2020 IEEE 2nd International\
    \ Conference on Artiﬁcial Intelligence in Engineering and Technology\n(IICAIET),\
    \ Kota Kinabalu, Malaysia, 26–27 September 2020; IEEE: Kota Kinabalu, Malaysia,\
    \ 2020; pp. 1–6. [CrossRef]\n84.\nWang, F.; Zhang, M.; Wang, X.; Ma, X.; Liu,\
    \ J. Deep Learning for Edge Computing Applications: A State-of-the-Art Survey.\
    \ IEEE\nAccess 2020, 8, 58322–58336. [CrossRef]\n85.\nChang, Z.; Liu, S.; Xiong,\
    \ X.; Cai, Z.; Tu, G. A Survey of Recent Advances in Edge-Computing-Powered Artiﬁcial\
    \ Intelligence of\nThings. IEEE Internet Things J. 2021, 8, 13849–13875. [CrossRef]\n\
    86.\nNayyer, M.Z.; Raza, I.; Hussain, S.A. A Survey of Cloudlet-Based Mobile Augmentation\
    \ Approaches for Resource Optimization.\nACM Comput. Surv. 2019, 51, 1–28. [CrossRef]\n\
    87.\nSatyanarayanan, M.; Bahl, V.; Caceres, R.; Davies, N. The Case for VM-Based\
    \ Cloudlets in Mobile Computing. IEEE Pervasive\nComput. 2009, 8, 14–23. [CrossRef]\n\
    88.\nGusev, M.; Dustdar, S. Going Back to the Roots—The Evolution of Edge Computing,\
    \ An IoT Perspective. IEEE Internet Comput.\n2018, 22, 5–15. [CrossRef]\n89.\n\
    Hao, P.; Bai, Y.; Zhang, X.; Zhang, Y. Edgecourier: An Edge-Hosted Personal Service\
    \ for Low-Bandwidth Document Synchroniza-\ntion in Mobile Cloud Storage Services.\
    \ In Proceedings of the Second ACM/IEEE Symposium on Edge Computing, San Jose,\
    \ CA,\nUSA, 12–14 October 2017; ACM: San Jose, CA, USA, 2017; pp. 1–14. [CrossRef]\n\
    90.\nJararweh, Y.; Tawalbeh, L.; Ababneh, F.; Dosari, F. Resource Efﬁcient Mobile\
    \ Computing Using Cloudlet Infrastructure. In Pro-\nceedings of the 2013 IEEE\
    \ 9th International Conference on Mobile Ad-hoc and Sensor Networks, Dalian, China,\
    \ 11–13 December\n2013; IEEE: Dalian, China, 2013; pp. 373–377. [CrossRef]\n91.\n\
    Bahl, V. Emergence of Micro Datacenter (Cloudlets/Edges) for Mobile Computing;\
    \ Microsoft Devices & Networking Summit: Paris,\nFrance, 2015.\n92.\nSiriweera,\
    \ A.; Naruse, K. Survey on Cloud Robotics Architecture and Model-Driven Reference\
    \ Architecture for Decentralized\nMulticloud Heterogeneous-Robotics Platform.\
    \ IEEE Access 2021, 9, 40521–40539. [CrossRef]\n93.\nPignaton de Freitas, E.;\
    \ Olszewska, J.I.; Carbonera, J.L.; Fiorini, S.R.; Khamis, A.; Ragavan, S.V.;\
    \ Barreto, M.E.; Prestes, E.; Habib,\nM.K.; Redﬁeld, S.; et al. Ontological Concepts\
    \ for Information Sharing in Cloud Robotics. J. Ambient Intell. Human Comput.\
    \ 2020,\n1–12. [CrossRef]\n94.\nKehoe, B.; Patil, S.; Abbeel, P.; Goldberg, K.\
    \ A Survey of Research on Cloud Robotics and Automation. IEEE Trans. Automat.\
    \ Sci.\nEng. 2015, 12, 398–409. [CrossRef]\n95.\nQuintas, J.; Menezes, P.; Dias,\
    \ J. Interoperability in Cloud Robotics—Developing and Matching Knowledge Information\
    \ Models\nfor Heterogenous Multi-Robot Systems. In Proceedings of the 2017 26th\
    \ IEEE International Symposium on Robot and Human Interactive\nCommunication (RO-MAN),\
    \ Lisbon, Portugal, 28 August–1 September 2017; IEEE: Lisbon, Portugal, 2017;\
    \ pp. 1291–1296. [CrossRef]\nSensors 2022, 22, 196\n35 of 38\n96.\nBozcuoglu,\
    \ A.K.; Kazhoyan, G.; Furuta, Y.; Stelter, S.; Beetz, M.; Okada, K.; Inaba, M.\
    \ The Exchange of Knowledge Using Cloud\nRobotics. IEEE Robot. Autom. Lett. 2018,\
    \ 3, 1072–1079. [CrossRef]\n97.\nYazdani, F.; Kazhoyan, G.; Bozcuoglu, A.K.; Haidu,\
    \ A.; Balint-Benczedi, F.; Bebler, D.; Pomarlan, M.; Beetz, M. Cognition-Enabled\n\
    Framework for Mixed Human-Robot Rescue Teams. In Proceedings of the 2018 IEEE/RSJ\
    \ International Conference on Intelligent Robots\nand Systems (IROS), Madrid,\
    \ Spain, 1–5 October 2018; IEEE: Madrid, Spain, 2018; pp. 1421–1428. [CrossRef]\n\
    98.\nSaha, O.; Dasgupta, P. A Comprehensive Survey of Recent Trends in Cloud Robotics\
    \ Architectures and Applications. Robotics\n2018, 7, 47. [CrossRef]\n99.\nXie,\
    \ X.; Zeng, H.-J.; Ma, W.-Y. Enabling Personalization Services on the Edge. In\
    \ Proceedings of the 10th ACM International Conference\non Multimedia (MULTIMEDIA\
    \ ’02), New York, NY, USA, 1–6 December 2002; Association for Computing Machinery:\
    \ New York, NY,\nUSA, 2002; pp. 263–266. [CrossRef]\n100. Gelsinger, P.P. Microprocessors\
    \ for the New Millennium: Challenges, Opportunities, and New Frontiers. In Proceedings\
    \ of the 2001\nIEEE International Solid-State Circuits Conference, San Francisco,\
    \ CA, USA, 7 February 2001; Digest of Technical Papers. ISSCC (Cat.\nNo.01CH37177);\
    \ IEEE: San Francisco, CA, USA, 2001; pp. 22–25. [CrossRef]\n101. Ibrahim, S.;\
    \ Jin, H.; Cheng, B.; Cao, H.; Wu, S.; Qi, L. CLOUDLET: Towards Mapreduce Implementation\
    \ on Virtual Machines.\nIn Proceedings of the 18th ACM International Symposium\
    \ on High Performance Distributed Computing—HPDC ’09, Garching, Germany,\n11–13\
    \ June 2009; ACM Press: Garching, Germany, 2009; p. 65. [CrossRef]\n102. Minh,\
    \ Q.T.; Nguyen, D.T.; Van Le, A.; Nguyen, H.D.; Truong, A. Toward Service Placement\
    \ on Fog Computing Landscape.\nIn Proceedings of the 2017 4th NAFOSTED Conference\
    \ on Information and Computer Science, Hanoi, Vietnam, 24–25 November 2017;\n\
    IEEE: Hanoi, Vietnam, 2017; pp. 291–296. [CrossRef]\n103. Gonzalez, N.M.; Goya,\
    \ W.A.; de Fatima Pereira, R.; Langona, K.; Silva, E.A.; Melo de Brito Carvalho,\
    \ T.C.; Miers, C.C.; Mangs,\nJ.-E.; Seﬁdcon, A. Fog Computing: Data Analytics\
    \ and Cloud Distributed Processing on the Network Edges. In Proceedings of\nthe\
    \ 2016 35th International Conference of the Chilean Computer Science Society (SCCC),\
    \ Valparaíso, Chile, 10 October 2016–10 February\n2017; IEEE: Valparaiso, Chile,\
    \ 2016; pp. 1–9. [CrossRef]\n104. Li, C.; Xue, Y.; Wang, J.; Zhang, W.; Li, T.\
    \ Edge-Oriented Computing Paradigms: A Survey on Architecture Design and System\n\
    Management. ACM Comput. Surv. 2018, 51, 1–34. [CrossRef]\n105. Chiang, M.; Ha,\
    \ S.; Risso, F.; Zhang, T.; Chih-Lin, I. Clarifying Fog Computing and Networking:\
    \ 10 Questions and Answers. IEEE\nCommun. Mag. 2017, 55, 18–20. [CrossRef]\n106.\
    \ Iorga, M.; Feldman, L.; Barton, R.; Martin, M.J.; Goren, N.; Mahmoudi, C. Fog\
    \ Computing Conceptual Model; Special Publication\n(NIST SP) 500-325; National\
    \ Institute of Standards and Technology: Gaithersburg, MD, USA, 2018. [CrossRef]\n\
    107. Stojmenovic, I.; Wen, S. The Fog Computing Paradigm: Scenarios and Security\
    \ Issues. In Proceedings of the Federated Conference\non Computer Science and\
    \ Information Systems, Warsaw, Poland, 7–10 September 2014; pp. 1–8. [CrossRef]\n\
    108. Yi, S.; Hao, Z.; Qin, Z.; Li, Q. Fog Computing: Platform and Applications.\
    \ In Proceedings of the 2015 Third IEEE Workshop on Hot\nTopics in Web Systems\
    \ and Technologies (HotWeb), Washington, DC, USA, 12–13 November 2015; IEEE: Washington\
    \ DC, DC, USA,\n2015; pp. 73–78. [CrossRef]\n109. Ni, J.; Zhang, K.; Lin, X.;\
    \ Shen, X. Securing Fog Computing for Internet of Things Applications: Challenges\
    \ and Solutions. IEEE\nCommun. Surv. Tutor. 2018, 20, 601–628. [CrossRef]\n110.\
    \ Aazam, M.; Huh, E.-N. Fog Computing Micro Datacenter Based Dynamic Resource\
    \ Estimation and Pricing Model for IoT.\nIn Proceedings of the 2015 IEEE 29th\
    \ International Conference on Advanced Information Networking and Applications,\
    \ Gwangju, Korea,\n25–27 March 2015; IEEE: Gwangiu, Korea, 2015; pp. 687–694.\
    \ [CrossRef]\n111. Dastjerdi, A.V.; Gupta, H.; Calheiros, R.N.; Ghosh, S.K.; Buyya,\
    \ R. Fog Computing: Principles, Architectures, and Applications.\nIn Internet\
    \ of Things: Principles and Paradigms; Morgan Kaufmann: San Francisco, CA, USA,\
    \ 2016; pp. 61–75.\n112. Abujubbeh, M.; Al-Turjman, F.; Fahrioglu, M. Software-Deﬁned\
    \ Wireless Sensor Networks in Smart Grids: An Overview. Sustain.\nCities Soc.\
    \ 2019, 51, 101754. [CrossRef]\n113. Barik, R.K.; Gudey, S.K.; Reddy, G.G.; Pant,\
    \ M.; Dubey, H.; Mankodiya, K.; Kumar, V. FogGrid: Leveraging Fog Computing\n\
    for Enhanced Smart Grid Network. In Proceedings of the 2017 14th IEEE India Council\
    \ International Conference (INDICON),\nRoorkee, India, 5–17 December 2017; IEEE:\
    \ Roorkee, India, 2017; pp. 1–6. [CrossRef]\n114. Brzoza-Woch, R.; Konieczny,\
    \ M.; Kwolek, B.; Nawrocki, P.; Szydło, T.; Zieli´nski, K. Holistic Approach to\
    \ Urgent Computing for\nFlood Decision Support. Procedia Comput. Sci. 2015, 51,\
    \ 2387–2396. [CrossRef]\n115. Fog Computing: Concepts, Frameworks and Technologies;\
    \ Mahmood, Z. (Ed.) Springer International Publishing: Cham, Switzerland,\n2018.\
    \ [CrossRef]\n116. Al-Turjman, F.; Malekloo, A. Smart Parking in IoT-Enabled Cities:\
    \ A Survey. Sustain. Cities Soc. 2019, 49, 101608. [CrossRef]\n117. Dastjerdi,\
    \ A.V.; Buyya, R. Fog Computing: Helping the Internet of Things Realize Its Potential.\
    \ Computer 2016, 49, 112–116.\n[CrossRef]\n118. Gia, T.N.; Jiang, M.; Rahmani,\
    \ A.-M.; Westerlund, T.; Liljeberg, P.; Tenhunen, H. Fog Computing in Healthcare\
    \ Internet of Things:\nA Case Study on ECG Feature Extraction. In Proceedings\
    \ of the 2015 IEEE International Conference on Computer and Information\nTechnology;\
    \ Ubiquitous Computing and Communications; Dependable, Autonomic and Secure Computing;\
    \ Pervasive Intelligence and\nComputing, Liverpool, UK, 26–28 October 2015; IEEE:\
    \ Liverpool, UK, 2015; pp. 356–363. [CrossRef]\n119. Stantchev, V.; Barnawi, A.;\
    \ Ghulam, S.; Schubert, J.; Tamm, G. Smart Items, Fog and Cloud Computing as Enablers\
    \ of Servitization\nin Healthcare. Sens. Transducers. 2015, 185, 121–128.\nSensors\
    \ 2022, 22, 196\n36 of 38\n120. Zahmatkesh, H.; Al-Turjman, F. Fog Computing for\
    \ Sustainable Smart Cities in the IoT Era: Caching Techniques and Enabling\nTechnologie—An\
    \ Overview. Sustain. Cities Soc. 2020, 59, 102139. [CrossRef]\n121. Perera, C.;\
    \ Qin, Y.; Estrella, J.C.; Reiff-Marganiec, S.; Vasilakos, A.V. Fog Computing\
    \ for Sustainable Smart Cities: A Survey. ACM\nComput. Surv. 2017, 50, 1–43. [CrossRef]\n\
    122. Hajibaba, M.; Gorgin, S. A Review on Modern Distributed Computing Paradigms:\
    \ Cloud Computing, Jungle Computing and\nFog Computing. CIT 2014, 22, 69. [CrossRef]\n\
    123. Puthal, D.; Sahoo, B.P.S.; Mishra, S.; Swain, S. Cloud Computing Features,\
    \ Issues, and Challenges: A Big Picture. In Proceedings\nof the 2015 International\
    \ Conference on Computational Intelligence and Networks, Jabalpur, India, 12–14\
    \ December 2015; IEEE: Odisha,\nIndia, 2015; pp. 116–123. [CrossRef]\n124. Varghese,\
    \ B.; Buyya, R. Next Generation Cloud Computing: New Trends and Research Directions.\
    \ Future Gener. Comput. Syst.\n2018, 79, 849–861. [CrossRef]\n125. Moura, J.;\
    \ Hutchison, D. Review and Analysis of Networking Challenges in Cloud Computing.\
    \ J. Netw. Comput. Appl. 2016, 60,\n113–129. [CrossRef]\n126. Abbas, Z.; Yoon,\
    \ W. A Survey on Energy Conserving Mechanisms for the Internet of Things: Wireless\
    \ Networking Aspects.\nSensors 2015, 15, 24818–24847. [CrossRef]\n127. Silva,\
    \ B.N.; Khan, M.; Han, K. Internet of Things: A Comprehensive Review of Enabling\
    \ Technologies, Architecture, and\nChallenges. IETE Tech. Rev. 2018, 35, 205–220.\
    \ [CrossRef]\n128. Bouzarkouna, I.; Sahnoun, M.; Sghaier, N.; Baudry, D.; Gout,\
    \ C. Challenges Facing the Industrial Implementation of Fog\nComputing. In Proceedings\
    \ of the 2018 IEEE 6th International Conference on Future Internet of Things and\
    \ Cloud (FiCloud), Barcelona,\nSpain, 6–8 August 2018; IEEE: Barcelona, Spain,\
    \ 2018; pp. 341–348. [CrossRef]\n129. Olaniyan, R.; Fadahunsi, O.; Maheswaran,\
    \ M.; Zhani, M.F. Opportunistic Edge Computing: Concepts, Opportunities and\n\
    Research Challenges. Future Gener. Comput. Syst. 2018, 89, 633–645. [CrossRef]\n\
    130. Ullah, R.; Ahmed, S.H.; Kim, B.-S. Information-Centric Networking with Edge\
    \ Computing for IoT: Research Challenges and\nFuture Directions. IEEE Access 2018,\
    \ 6, 73465–73488. [CrossRef]\n131. Nguyen, B.M.; Thi Thanh Binh, H.; The Anh,\
    \ T.; Bao Son, D. Evolutionary Algorithms to Optimize Task Scheduling Problem\
    \ for\nthe IoT Based Bag-of-Tasks Application in Cloud–Fog Computing Environment.\
    \ Appl. Sci. 2019, 9, 1730. [CrossRef]\n132. Singh, S.P.; Nayyar, A.; Kumar, R.;\
    \ Sharma, A. Fog Computing: From Architecture to Edge Computing and Big Data Processing.\
    \ J.\nSupercomput. 2019, 75, 2070–2105. [CrossRef]\n133. Singh, J.; Singh, P.;\
    \ Gill, S.S. Fog Computing: A Taxonomy, Systematic Review, Current Trends and\
    \ Research Challenges. J. Parallel\nDistrib. Comput. 2021, 157, 56–85. [CrossRef]\n\
    134. Gill, S.S.; Buyya, R. Bio-Inspired Algorithms for Big Data Analytics: A Survey,\
    \ Taxonomy, and Open Challenges. In Advances\nin Ubiquitous Sensing Applications\
    \ for Healthcare, Big Data Analytics for Intelligent Healthcare Management; Academic\
    \ Press: Cambridge,\nMA, USA, 2019; pp. 1–17. [CrossRef]\n135. Oussous, A.; Benjelloun,\
    \ F.-Z.; Ait Lahcen, A.; Belfkih, S. Big Data Technologies: A Survey. J. King\
    \ Saud Univ.—Comput. Inf. Sci.\n2018, 30, 431–448. [CrossRef]\n136. Gandomi, A.;\
    \ Haider, M. Beyond the Hype: Big Data Concepts, Methods, and Analytics. Int.\
    \ J. Inf. Manag. 2015, 35, 137–144.\n[CrossRef]\n137. Hariri, R.H.; Fredericks,\
    \ E.M.; Bowers, K.M. Uncertainty in Big Data Analytics: Survey, Opportunities,\
    \ and Challenges. J. Big Data\n2019, 6, 44. [CrossRef]\n138. Badidi, E.; Mahrez,\
    \ Z.; Sabir, E. Fog Computing for Smart Cities’ Big Data Management and Analytics:\
    \ A Review. Future Internet\n2020, 12, 190. [CrossRef]\n139. Hussain, M.M.; Beg,\
    \ M.M.S.; Alam, M.S. Fog Computing for Big Data Analytics in IoT Aided Smart Grid\
    \ Networks. Wireless Pers.\nCommun. 2020, 114, 3395–3418. [CrossRef]\n140. Baldini,\
    \ I.; Castro, P.; Chang, K.; Cheng, P.; Fink, S.; Ishakian, V.; Mitchell, N.;\
    \ Muthusamy, V.; Rabbah, R.; Slominski, A.; et al.\nServerless Computing: Current\
    \ Trends and Open Problems. In Research Advances in Cloud Computing; Chaudhary,\
    \ S., Somani, G.,\nBuyya, R., Eds.; Springer: Singapore, 2017; pp. 1–20. [CrossRef]\n\
    141. McGrath, G.; Brenner, P.R. Serverless Computing: Design, Implementation,\
    \ and Performance. In Proceedings of the 2017 IEEE 37th\nInternational Conference\
    \ on Distributed Computing Systems Workshops (ICDCSW), Atlanta, GA, USA, 5–8 June\
    \ 2017; IEEE: Atlanta,\nGA, USA, 2017; pp. 405–410. [CrossRef]\n142. Fox, G.C.;\
    \ Ishakian, V.; Muthusamy, V.; Slominski, A. Status of Serverless Computing and\
    \ Function-as-a-Service (FaaS) in Industry\nand Research. arXiv Preprint 2017,\
    \ arXiv:1708.08028.\n143. Aslanpour, M.S.; Toosi, A.N.; Cicconetti, C.; Javadi,\
    \ B.; Sbarski, P.; Taibi, D.; Assuncao, M.; Gill, S.S.; Gaire, R.; Dustdar, S.\n\
    Serverless Edge Computing: Vision and Challenges. In Proceedings of the 2021 Australasian\
    \ Computer Science Week Multiconference,\nDunedin, New Zealand, 1–5 February 2021;\
    \ ACM: Dunedin, New Zealand, 2021; pp. 1–10. [CrossRef]\n144. Bouraga, S. A Taxonomy\
    \ of Blockchain Consensus Protocols: A Survey and Classiﬁcation Framework. Expert\
    \ Syst. Appl. 2021,\n168, 114384. [CrossRef]\n145. Mamdiwar, S.D.; R, A.; Shakruwala,\
    \ Z.; Chadha, U.; Srinivasan, K.; Chang, C.-Y. Recent Advances on IoT-Assisted\
    \ Wearable\nSensor Systems for Healthcare Monitoring. Biosensors 2021, 11, 372.\
    \ [CrossRef] [PubMed]\nSensors 2022, 22, 196\n37 of 38\n146. Ankenbrand, T.; Bieri,\
    \ D.; Cortivo, R.; Hoehener, J.; Hardjono, T. Proposal for a Comprehensive (Crypto)\
    \ Asset Taxonomy.\nIn Proceedings of the 2020 Crypto Valley Conference on Blockchain\
    \ Technology (CVCBT), Rotkreuz, Switzerland, 11–12 June 2020; IEEE:\nRotkreuz,\
    \ Switzerland, 2020; pp. 16–26. [CrossRef]\n147. Gill, S.S. Quantum and blockchain\
    \ based Serverless edge computing: A vision, model, new trends and future directions.\
    \ Internet\nTechnol. Lett. 2021, e275. [CrossRef]\n148. Gill, S.S.; Kumar, A.;\
    \ Singh, H.; Singh, M.; Kaur, K.; Usman, M.; Buyya, R. Quantum Computing: A Taxonomy,\
    \ Systematic Review\nand Future Directions. Softw: Pract. Exper. 2022, 52, 66–114.\
    \ [CrossRef]\n149. Gill, S.S. A Manifesto for Modern Fog and Edge Computing: Vision,\
    \ New Paradigms, Opportunities, and Future Directions.\nIn Operationalizing Multi-Cloud\
    \ Environments; Nagarajan, R., Raj, P., Thirunavukarasu, R., Eds.; EAI/Springer\
    \ Innovations\nin Communication and Computing; Springer International Publishing:\
    \ Cham, Switzerland, 2022; pp. 237–253. [CrossRef]\n150. Liu, W.; Chen, J.; Wang,\
    \ Y.; Gao, P.; Lei, Z.; Ma, X. Quantum-Based Feature Selection for Multiclassiﬁcation\
    \ Problem in Complex\nSystems with Edge Computing. Complexity 2020, 2020, 8216874.\
    \ [CrossRef]\n151. Kreutz, D.; Ramos, F.M.V.; Esteves Verissimo, P.; Esteve Rothenberg,\
    \ C.; Azodolmolky, S.; Uhlig, S. Software-Deﬁned Networking:\nA Comprehensive\
    \ Survey. Proc. IEEE 2015, 103, 14–76. [CrossRef]\n152. Duan, Y.; Li, W.; Fu,\
    \ X.; Luo, Y.; Yang, L. A Methodology for Reliability of WSN Based on Software\
    \ Deﬁned Network in Adaptive\nIndustrial Environment. IEEE/CAA J. Autom. Sinica\
    \ 2018, 5, 74–82. [CrossRef]\n153. Raﬁque, W.; Qi, L.; Yaqoob, I.; Imran, M.;\
    \ Rasool, R.U.; Dou, W. Complementing IoT Services through Software Deﬁned\nNetworking\
    \ and Edge Computing: A Comprehensive Survey. IEEE Commun. Surv. Tutorials 2020,\
    \ 22, 1761–1804. [CrossRef]\n154. Deng, S.; Zhao, H.; Fang, W.; Yin, J.; Dustdar,\
    \ S.; Zomaya, A.Y. Edge Intelligence: The Conﬂuence of Edge Computing and\nArtiﬁcial\
    \ Intelligence. IEEE Internet Things J. 2020, 7, 7457–7469. [CrossRef]\n155. Zou,\
    \ Z.; Nevalainen, P.; Huan, Y.; Heikkonen, J.; Westerlund, T. Edge and Fog Computing\
    \ Enabled AI for IoT—An Overview.\nIn Proceedings of the 2019 IEEE International\
    \ Conference on Artiﬁcial Intelligence Circuits and Systems (AICAS), Hsinchu,\n\
    Taiwan, 18–20 March 2019; IEEE: Hsinchu, Taiwan, 2019.\n156. Huh, J.-H.; Seo,\
    \ Y.-S. Understanding Edge Computing: Engineering Evolution with Artiﬁcial Intelligence.\
    \ IEEE Access 2019, 7,\n164229–164245. [CrossRef]\n157. Murugesan, S. Harnessing\
    \ Green IT: Principles and Practices. Green Comput. 2008, 10, 24–33. [CrossRef]\n\
    158. Anand, P.; Singh, Y.; Selwal, A.; Alazab, M.; Tanwar, S.; Kumar, N. IoT Vulnerability\
    \ Assessment for Sustainable Computing:\nThreats, Current Solutions, and Open\
    \ Challenges. IEEE Access 2020, 8, 168825–168853. [CrossRef]\n159. Lopez, O.L.A.;\
    \ Alves, H.; Souza, R.D.; Montejo-Sanchez, S.; Fernandez, E.M.G.; Latva-Aho, M.\
    \ Massive Wireless Energy Transfer:\nEnabling Sustainable IoT Toward 6G Era. IEEE\
    \ Internet Things J. 2021, 8, 8816–8835. [CrossRef]\n160. Kumari, A.; Gupta, R.;\
    \ Tanwar, S.; Kumar, N. Blockchain and AI Amalgamation for Energy Cloud Management:\
    \ Challenges,\nSolutions, and Future Directions. J. Parallel Distrib. Comput.\
    \ 2020, 143, 148–166. [CrossRef]\n161. Khairy, S.; Han, M.; Cai, L.X.; Cheng,\
    \ Y. Sustainable Wireless IoT Networks with RF Energy Charging over Wi-Fi (CoWiFi).\
    \ IEEE\nInternet Things J. 2019, 6, 10205–10218. [CrossRef]\n162. Banerjee, U.;\
    \ Juvekar, C.; Fuller, S.H.; Chandrakasan, A.P. EeDTLS: Energy-Efﬁcient Datagram\
    \ Transport Layer Security for\nthe Internet of Things. In Proceedings of the\
    \ GLOBECOM 2017—2017 IEEE Global Communications Conference, Singapore, 4–8\nDecember\
    \ 2017; IEEE: Singapore, 2017; pp. 1–6. [CrossRef]\n163. Ram, S.K.; Sahoo, S.R.;\
    \ Das, B.B.; Mahapatra, K.; Mohanty, S.P. Eternal-Thing: A Secure Aging-Aware\
    \ Solar-Energy Harvester\nThing for Sustainable IoT. IEEE Trans. Sustain. Comput.\
    \ 2021, 6, 320–333. [CrossRef]\n164. Makhdoom, I.; Abolhasan, M.; Lipman, J.;\
    \ Liu, R.P.; Ni, W. Anatomy of Threats to the Internet of Things. IEEE Commun.\
    \ Surv.\nTutor. 2019, 21, 1636–1675. [CrossRef]\n165. Dhanda, S.S.; Singh, B.;\
    \ Jindal, P. Lightweight Cryptography: A Solution to Secure IoT. Wireless Pers.\
    \ Commun. 2020, 112,\n1947–1980. [CrossRef]\n166. Samie, F.; Bauer, L.; Henkel,\
    \ J. From Cloud down to Things: An Overview of Machine Learning in Internet of\
    \ Things. IEEE\nInternet Things J. 2019, 6, 4921–4934. [CrossRef]\n167. Samann,\
    \ F.E.F.; Abdulazeez, A.M.; Askar, S. Fog Computing Based on Machine Learning:\
    \ A Review. Int. J. Interact. Mob. Technol.\n2021, 15, 21. [CrossRef]\n168. Hurbungs,\
    \ V.; Bassoo, V.; Fowdur, T.P. Fog and Edge Computing: Concepts, Tools and Focus\
    \ Areas. Int. J. Inf. Tecnol. 2021, 13,\n511–522. [CrossRef]\n169. Losavio, M.\
    \ Fog Computing, Edge Computing and a Return to Privacy and Personal Autonomy.\
    \ Proc. Comp. Sci. 2020, 171,\n1750–1759. [CrossRef]\n170. Wang, M.; Cui, Y.;\
    \ Wang, X.; Xiao, S.; Jiang, J. Machine Learning for Networking: Workﬂow, Advances\
    \ and Opportunities. IEEE\nNetw. 2018, 32, 92–99. [CrossRef]\n171. Laghari, A.A.;\
    \ Jumani, A.K.; Laghari, R.A. Review and State of Art of Fog Computing. Arch.\
    \ Computat. Methods Eng. 2021, 28,\n3631–3643. [CrossRef]\n172. Hegarty, R.; Taylor,\
    \ M. Digital Evidence in Fog Computing Systems. Comp. Law Secur. Rev. 2021, 41,\
    \ 105576. [CrossRef]\n173. Mehta, S.; Singh, A.; Singh, K.K. Role of Machine Learning\
    \ in Resource Allocation of Fog Computing. In Proceedings of the 2021\n11th International\
    \ Conference on Cloud Computing, Data Science & Engineering (Conﬂuence), Noida,\
    \ India, 28–29 January 2021; IEEE:\nNoida, India, 2021; pp. 262–266. [CrossRef]\n\
    Sensors 2022, 22, 196\n38 of 38\n174. Suryadevara, N.K. Energy and Latency Reductions\
    \ at the Fog Gateway Using a Machine Learning Classiﬁer. Sustain. Comput.\nInform.\
    \ Syst. 2021, 31, 100582. [CrossRef]\n175. Cui, L.; Yang, S.; Chen, F.; Ming,\
    \ Z.; Lu, N.; Qin, J. A Survey on Application of Machine Learning for Internet\
    \ of Things. Int. J.\nMach. Learn. Cyber. 2018, 9, 1399–1417. [CrossRef]\n176.\
    \ Adi, E.; Anwar, A.; Baig, Z.; Zeadally, S. Machine Learning and Data Analytics\
    \ for the IoT. Neural. Comp. Applic. 2020, 32,\n16205–16233. [CrossRef]\n177.\
    \ Ayoubi, S.; Limam, N.; Salahuddin, M.A.; Shahriar, N.; Boutaba, R.; Estrada-Solano,\
    \ F.; Caicedo, O.M. Machine Learning for\nCognitive Network Management. IEEE Commun.\
    \ Mag. 2018, 56, 158–165. [CrossRef]\n178. Fadlullah, Z.M.; Tang, F.; Mao, B.;\
    \ Kato, N.; Akashi, O.; Inoue, T.; Mizutani, K. State-of-the-Art Deep Learning:\
    \ Evolving Machine\nIntelligence toward Tomorrow’s Intelligent Network Trafﬁc\
    \ Control Systems. IEEE Commun. Surv. Tutor. 2017, 19, 2432–2455.\n[CrossRef]\n\
    179. Hammerschmidt, C.A.; Garcia, S.; Verwer, S.; State, R. Reliable Machine Learning\
    \ for Networking: Key Issues and Approaches.\nIn Proceedings of the 2017 IEEE\
    \ 42nd Conference on Local Computer Networks (LCN), Singapore, 9–12 October 2017;\
    \ IEEE: Singapore,\n2017; pp. 167–170. [CrossRef]\n180. Casas, P.; Vanerio, J.;\
    \ Fukuda, K. GML Learning, a Generic Machine Learning Model for Network Measurements\
    \ Analysis.\nIn Proceedings of the 2017 13th International Conference on Network\
    \ and Service Management (CNSM), Tokyo, Japan, 26–30 November\n2017; IEEE: Tokyo,\
    \ Japan, 2017; pp. 1–9. [CrossRef]\n181. Sobecki, A.; Szyma´nski, J.; Gil, D.;\
    \ Mora, H. Deep Learning in the Fog. Int. J. Distrib. Sens. Netw. 2019, 15, 155014771986707.\n\
    [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/1/196/pdf?version=1640786089
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Recent Advances in Evolving Computing Paradigms: Cloud, Edge, and Fog Technologies'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21020568
  analysis: '>'
  authors:
  - Viviane Cunha Farias da Costa
  - Luiz Oliveira
  - Jano Moreira de Souza
  citation_count: 37
  full_citation: '>'
  full_text: ">\nsensors\nReview\nInternet of Everything (IoE) Taxonomies: A Survey\
    \ and a Novel\nKnowledge-Based Taxonomy\nViviane Cunha Farias da Costa 1,*\n,\
    \ Luiz Oliveira 1,2\nand Jano de Souza 1\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\
    \n\x01\x02\x03\x04\x05\x06\a\nCitation: Farias da Costa, V.C.;\nOliveira, L.;\
    \ de Souza, J. Internet of\nEverything (IoE) Taxonomies:\nA Survey and a Novel\n\
    Knowledge-Based Taxonomy. Sensors\n2021, 21, 568. https://doi.org/\n10.3390/s21020568\n\
    Received: 29 November 2020\nAccepted: 8 January 2021\nPublished: 14 January 2021\n\
    Publisher’s Note: MDPI stays neu-\ntral with regard to jurisdictional clai-\n\
    ms in published maps and institutio-\nnal afﬁliations.\nCopyright: © 2021 by the\
    \ authors. Li-\ncensee MDPI, Basel,\nSwitzerland.\nThis article is an open access\
    \ article\ndistributed under the terms and con-\nditions of the Creative Commons\
    \ At-\ntribution (CC BY)\nlicense (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nSystems Engineering and Computer Science Program/COPPE, Federal University\
    \ of Rio de Janeiro,\nRio de Janeiro 21941-590, Brazil; lfoliveira@cos.ufrj.br\
    \ (L.O.); jano@cos.ufrj.br (J.d.S.)\n2\nFederal Institute of Rio de Janeiro, Niterói\
    \ Campus, Niterói 24315-375, Brazil\n*\nCorrespondence: vfarias@cos.ufrj.br\n\
    Abstract: The paradigm of the Internet of everything (IoE) is advancing toward\
    \ enriching people’s\nlives by adding value to the Internet of things (IoT), with\
    \ connections among people, processes, data,\nand things. This paper provides\
    \ a survey of the literature on IoE research, highlighting concerns in\nterms\
    \ of intelligence services and knowledge creation. The signiﬁcant contributions\
    \ of this study are\nas follows: (1) a systematic literature review of IoE taxonomies\
    \ (including IoT); (2) development of a\ntaxonomy to guide the identiﬁcation of\
    \ critical knowledge in IoE applications, an in-depth classiﬁ-\ncation of IoE\
    \ enablers (sensors and actuators); (3) validation of the deﬁned taxonomy with\
    \ 50 IoE\napplications; and (4) identiﬁcation of issues and challenges in existing\
    \ IoE applications (using the\ndeﬁned taxonomy) with regard to insights about\
    \ knowledge processes. To the best of our knowledge,\nand taking into consideration\
    \ the 76 other taxonomies compared, this present work represents the\nmost comprehensive\
    \ taxonomy that provides the orchestration of intelligence in network connections\n\
    concerning knowledge processes, type of IoE enablers, observation characteristics,\
    \ and technological\ncapabilities in IoE applications.\nKeywords: Internet of\
    \ everything; Internet of things; IoE; IoT; taxonomy; sensors; big-data; knowledge\n\
    1. Introduction\nThe Internet of everything (IoE) is a term that was ﬁrst deﬁned\
    \ by CISCO in 2012 [1]\nas a network of networks that reunites people, processes,\
    \ data, and things in network\nconnections more signiﬁcant and valuable than ever\
    \ [2–4]. While the Internet of things\n(IoT) is a dynamic global network infrastructure\
    \ [5] concerned about things (i.e., physical\ndevices, accessed through the Internet),\
    \ IoE lays an upper foundation over IoT and is\nconcerned with intelligent network\
    \ connections and technologies [6–9].\nIoE supports creating new capacities, better-off\
    \ competencies, and outstanding eco-\nnomic opportunities for businesses and society\
    \ [1]. For Fiaidhi and Mohammed [10],\nIoE expands on the IoT concept by connecting\
    \ devices and people in one network. Beyond\nthe concept of IoT, the IoE paradigm\
    \ covers a wide range of Internet-based concepts; for\nexample, the Internet of\
    \ people (IoP), which considers social networks and connections\namong people;\
    \ and the industrial Internet (II), which is focused on data of interest to indus-\n\
    try [7]. The concept of IoE incorporates nanosensors in diverse objects using\
    \ nano-networks.\nIt provides access to data that had previously been impossible\
    \ to sense. This technology\ntransition involving IoE is a concept called the\
    \ Internet of Nano things [11].\nWith more relevant connections than machine-to-machine\
    \ communications, IoE has\nenabled the global democratization of skills, including\
    \ person-to-machine and person-to-\nperson connections [12,13].\nAccordingly,\
    \ Auger et al. [4] argue that IoE extends the concept of IoT by exceeding\nthe\
    \ connections of things and integrating common impacts, risks, and economic beneﬁts\
    \ for\nthe novel interconnected society. Thus, “intelligent services”, together\
    \ with the “things”,\nrepresent the “everything” in IoE [14].\nSensors 2021, 21,\
    \ 568. https://doi.org/10.3390/s21020568\nhttps://www.mdpi.com/journal/sensors\n\
    Sensors 2021, 21, 568\n2 of 35\nFor Raj and Prakash [13], IoE is a superset of\
    \ IoT and requires advanced capabilities\nwithin the area of information sharing.\
    \ The IoE paradigm can extract and analyze real-time\ndata collected from diverse\
    \ and heterogeneous IoE environments, from simple sensors\nand actuators to complex\
    \ robotic devices, and from autonomous service agents to human\nactors [3]. Thus,\
    \ IoE applications require appropriate measures to be taken in the initial\nphases\
    \ of their design and implementation [13]. Artiﬁcial intelligence (AI) integrated\
    \ into\nsmart devices provides the increasing deployment of innovative and useful\
    \ IoE-based\napplications, where people and things interact appropriately within\
    \ a social context and\nmulti-user environment [11].\nProcesses are the core of\
    \ IoE; they represent network “connections” and real-time\ndata/information ﬂows\
    \ [15] among IoE nodes [16]. The result is smartness and intelli-\ngence [17],\
    \ and real-time insights working in concert [18], far beyond IoT context dis-\n\
    ruptions [19], addressing the societal and organizational needs for more data\
    \ and more\nactionable intelligence.\nActions and interactions within the IoE\
    \ environment create and expand knowledge\nin a transcending process through which\
    \ entities (people, things, and data) acquire new\nknowledge and new interactions\
    \ are created in knowledge-creation cycles [20]. This trans-\nformation from data\
    \ to knowledge in IoE provides essential insights and various possible\napplications\
    \ [21,22].\nValue-generating activities come through knowledge processes that\
    \ ﬁlter data, in-\nformation, and knowledge into a decision context, in which\
    \ it becomes actionable intel-\nligence [23]. A knowledge-based strategy for selecting\
    \ and managing technologies and\ndecision support artifacts (big data, data, information,\
    \ knowledge, and intelligence) assists\nin the management and governance of data\
    \ and technologies to ensure great beneﬁt from\nIoE’s capacity to provide enhanced\
    \ intelligent services.\nFigure 1 shows the “four enablers” (people, data, processes,\
    \ and things) in IoE.\nFigure 1. Internet of everything, adapted from [16].\n\
    Several taxonomies for IoT [24–30] and IoE [6,13,15,17,31,32], have been proposed.\n\
    However, there are challenges concerning the ranking and managing of knowledge\
    \ pro-\ncesses in IoE applications.\nFirst, there is still a fragmented framework:\
    \ (1) A lack of consensus and new demands\nare unique to the IoE context (e.g.,\
    \ empowering people and providing intelligence ser-\nvices and insights through\
    \ the collaboration of IoE enablers [sensors and actuators]); and\n(2) A lack\
    \ of consideration for the integration of IoE connections (machine-to-machine,\n\
    people-to-people, and people to machine) from perspectives that support the high\
    \ hetero-\ngeneity of existing IoE devices and the expected value creation in\
    \ IoE applications—the\nperspective of knowledge that refers to actions, comprehension,\
    \ and meaning derived\nSensors 2021, 21, 568\n3 of 35\nfrom the information inside\
    \ a context; the perspective of sensors and actuators physi-\ncal characteristics\
    \ and usage in IoE context, the perspective of information observation\nwithin\
    \ ever-changing IoE contexts, and the perspective of infrastructure capabilities\
    \ and\nresources required.\nThe successful adoption of a particular technology\
    \ depends on the comprehension of\nits use and features [33]. Research on knowledge\
    \ management has focused on understand-\ning the complex relationships between\
    \ data, information, and knowledge creation, and how\nthey are impacted and beneﬁted\
    \ by the sources (or spaces) of data and information and the\ncontexts in which\
    \ they are analyzed and shared [34]. Therefore, an in-depth classiﬁcation\nof\
    \ IoE enablers (sensors and actuators) identiﬁes issues and challenges in existing\
    \ IoE\napplications regarding insights about managing knowledge processes that\
    \ create value\nfrom the IoT context.\nIn this current study, we present research\
    \ challenges in the IoE paradigm and a\nway forward in the classiﬁcation of IoE\
    \ knowledge enablers (sensors and actuators) to\nsupport the identiﬁcation of\
    \ critical knowledge sources that lead to actionable intelligence\nin IoE applications.\
    \ We conducted a systematic literature review of existing IoE and IoT\ntaxonomies.\
    \ From this, we were able to present a knowledge-based IoE taxonomy that\nprovides\
    \ a consistent picture of IoE systems and their constituents (i.e., IoE sensors\
    \ and\nactuators characterized in knowledge processes, observations, and network\
    \ characteristics).\nThe proposed taxonomy is based on knowledge in IoE applications—the\
    \ knowledge\nprovided or used by different types of sensors and actuators. The\
    \ focus is to identify to\nwhat extent tacit knowledge from people, implicit knowledge\
    \ generated from data analysis\nand integrated into smart devices, and explicit\
    \ knowledge available from diverse data\nsources are composed to support observations\
    \ that contribute to intelligent services in the\nIoE context. We then validated\
    \ the deﬁned taxonomy with 50 IoE applications in order to\nprove its quality\
    \ attributes and identify research challenges.\nThe remainder of this paper is\
    \ organized as follows: Section 2 introduces related\nworks, including the theoretical\
    \ background and state of the art of IoE theory; Section 3\ncontains the systematic\
    \ literature review and methodology that provided the basis for the\ndevelopment\
    \ of our proposed taxonomy; Section 4 describes our novel IoE taxonomy in\ndetail;\
    \ Section 5 discusses the qualitative outcomes; Section 6 presents the validation\
    \ of the\nproposed taxonomy in diverse IoE domains; and, ﬁnally, Section 7 concludes\
    \ the review\nwith proposed directions for future research.\n2. Related Work\n\
    Several authors have proposed taxonomies for dealing with IoE and IoT systems\n\
    in the following distinct approaches: technology and architecture design [24,35–40],\
    \ sen-\nsors’ capabilities [26,41–45], and observation context issues [25,27,28,46–51].\
    \ However,\nstill, due to the considerable heterogeneity of actual IoT devices,\
    \ these taxonomies have\napproach limitations, mostly restricted to enabling technology\
    \ and infrastructure. Nearly\nall disregard the collective intelligence of IoE\
    \ applications, in which human sensors are\nknowledge producers and consumers\
    \ [52]. This human-thinking perspective integrated\ninto IoE is still a research\
    \ gap. Due to a large amount of heterogeneous and distributed\nIoE entities (human\
    \ and non-human sensors/actuators), IoE requires the orchestration\nof intelligence\
    \ in network connections concerning the knowledge provided, type of IoE\nentities,\
    \ observation characteristics, and technological capabilities. This section provides\n\
    an overview of related works, theoretical background, and state of the art of\
    \ IoE theory.\n2.1. Technology\nAs IoT is the technology architecture facet of\
    \ IoE, many studies have focused on\ncentral concepts and their relationships\
    \ in an IoT domain [35]. IoT is a self-conﬁguring,\nadaptive, complex network\
    \ with standard communication protocols that connects “things”\nto the Internet\
    \ [24]. Yaqoob et al. [25] proposed an end-to-end view taxonomy to categorize\n\
    and classify IoT architectures, considering requisites such as application domains,\
    \ business\nSensors 2021, 21, 568\n4 of 35\nobjectives, enabling technologies,\
    \ architectural requirements, network topologies, and IoT\nplatform architecture\
    \ characteristics. Recent studies have addressed different research\nchallenges\
    \ in IoT areas. In Mountrouidou et al. [26], the authors characterized IoT based\n\
    on generic building blocks or primitives, deﬁning IoT devices as sensing or actuating\n\
    devices that can communicate with other devices and perform speciﬁc functions.\
    \ Shahid\nand Aneja [41] proposed an IoT taxonomy, developing technologies and\
    \ solutions for\nenabling IoT vision, which is related to smart objects’ ability\
    \ to communicate and interact,\neither in building networks of connected items\
    \ or with end-users or other entities in the\nnetwork. Noura et al. [27] developed\
    \ a taxonomy for IoT devices, networks and platforms\nrelated to the heterogeneity\
    \ challenges of syntactic and semantic interoperability. Obinikpo\nand Kantarci\
    \ [42] presented a taxonomy of methodologies to categorize types of sensors\n\
    and sensing data. Other works have proposed taxonomies to classify the IoT’s connected\n\
    objects, devices, and smart objects [43–45].\n2.2. Management and Security\nManagement\
    \ solutions must show grounds for efﬁcient control of IoT systems. Sinche\net\
    \ al. [30] proposed a taxonomy related to IoT device management, and Perera et\
    \ al. [36]\nsurveyed a wide selection of techniques, methods, models, and solutions\
    \ related to context\nawareness in IoT. Some authors have proposed taxonomies\
    \ for security approaches in the\nadoption of IoT technologies and applications\
    \ [46]. Using autonomic terminology, Ashraf\nand Habaebi [53] proposed a taxonomy\
    \ that aims to group IoT security vulnerabilities\nand their mitigation solutions.\
    \ Haron et al. [37] proposed a taxonomy of trustworthiness\nfor IoT sensor data.\
    \ Based on the notion of trust, semantics, Kotis et al. [54] presented an\neffective\
    \ modeling approach towards supporting IoT entities’ selection and deployment.\n\
    Alsamani and Lahza [55] studied the relationship between object characteristics,\
    \ security,\nand privacy, and they proposed a taxonomy to categorize potential\
    \ security threats in\nIoT. In Zhang et al. [56], the authors presented an extensive\
    \ analysis of data security\nand privacy threats, protection technologies, and\
    \ security solutions for edge computing.\nOteafy and Hassanein [57] proposed a\
    \ taxonomy of edge-IoT systems designed for rapid\ndata acquisition.\nOther studies\
    \ have focused on network architecture for IoT and IoE. Thota et al. [58]\nstudied\
    \ the emerging communication techniques for the implementation of IoE applications.\n\
    Gluhak et al. [38] provided a taxonomy for the scope and architecture of testbeds\
    \ in the IoT.\nNaha et al. [59] proposed a taxonomy considering the requirements\
    \ of the fog computing\nparadigm. In Hassan et al. [60], a taxonomy of edge computing\
    \ classiﬁes and categorizes\nexisting edge computing paradigms for IoT. Ahad et\
    \ al. [61] provided a state-of-art review\nof 5G- and IoT-enabled smart healthcare.\
    \ Bellavista and Berrocal [39] presented a uniﬁed\narchitectural model and proposed\
    \ a new taxonomy after comparing solutions that had\nemerged for supporting the\
    \ requirements of IoT applications. However, these works\nignored the critical\
    \ role of data ﬂow throughout sensors and actuators of different types,\nhow they\
    \ collaborate to create value in cyberspace, and the context of observations.\n\
    2.3. Collaboration\nSome works have focused on establishing an effective collaboration\
    \ process between\nsmart devices integrating humans in the loop [62]. A comprehensive\
    \ look at IoT en-\nvironment collaboration is presented in [28], in taxonomy to\
    \ clarify how IoT enables\ncollaboration. People (as customers) and applications\
    \ are perspectives that nurtured the\nIoT taxonomy presented by Smutný [29]. Sholla\
    \ et al. [47] argue that integrating socio-\ncultural and ethical aspects within\
    \ a smart city architecture turns it into a people-friendly\nenvironment.\nHui\
    \ and Sherratt [63] discussed how to strengthen human senses and capture human\n\
    reactions, and they proposed a new taxonomy for disappearing user interfaces.\
    \ Yebda\net al. [64] reviewed existing solutions for social sensing. In [65],\
    \ the authors presented\na taxonomy based on the critical issues in mobile crowdsourcing.\
    \ Chaochaisit et al. [66]\nSensors 2021, 21, 568\n5 of 35\npresented an ontology\
    \ for human localization sensors to address challenges in searching\nfor users’\
    \ location-aware sensors. Sethi and Sarangi [48] proposed a novel taxonomy for\n\
    IoT technologies and proﬁles and some applications that have the readiness to\
    \ make a\nremarkable difference in human life. Salim and Haque [67] proposed a\
    \ taxonomy for\ncategorizing and characterizing urban computing technologies and\
    \ also discussed the\nlevel of participation these technologies stimulate in modern\
    \ society. In [49], the authors\nproposed a technical taxonomy for service composition\
    \ in the IoT environment, based on\nfunctional and non-functional aspects. Bugeja\
    \ et al. [50] proposed a classiﬁcation model\nbased on the functionality of smart\
    \ home devices. Oberländer et al. [51] contributed\nto the IoT’s descriptive knowledge\
    \ and presented a classiﬁcation of business-to-things\ninteractions to facilitate\
    \ sense-making and theory-led design. In summary, these studies\nfocused on the\
    \ collaboration perspective but seldom investigated how smart sensors and\nhumans\
    \ contribute to knowledge creation to achieve a common goal.\n2.4. Data Analysis\n\
    Many studies have focused on information ﬂow, ranking information, and quality\n\
    of data for the data-driven perspective and analytics applications. Bisdikian\
    \ et al. [68]\npresented a framework for categorizing information products based\
    \ on their value of\ninformation attributes. Different works have paved the way\
    \ for effective utilization of the\navailable opportunities in big data analytics\
    \ and IoT. Shah et al. [69] created a thematic\ntaxonomy for deploying these solutions\
    \ collaboratively to provide guidelines for harvesting,\ntransmitting, managing,\
    \ and analyzing disaster data from diverse data sources in order to\ndeliver valuable\
    \ information to assist disaster management environments.\nFocusing on successfully\
    \ understanding and extracting value and insights from data\nanalysis, [70,71],\
    \ and [72] proposed semantic web techniques for better representation\nand exploration\
    \ of sensor data. Qanbari et al. [71] incorporated semantic and linked data\n\
    technologies to increase data quality. In [72], Rozsa et al. presented a taxonomy\
    \ that\nidentiﬁes and categorizes sensors as the source devices to support publishing,\
    \ discovery,\nsharing, reuse, and integration of sensed data.\nMarjani et al.\
    \ [40] explained the interdependence between big data analytics and IoT\nand proposed\
    \ a novel architecture for IoT big data analytics. The authors in [73] surveyed\n\
    the domain of big data by examining the different techniques utilized for processing\n\
    and analytics. Another taxonomy on big data sensing and services was presented\
    \ by\nGao et al. [74]. The latest developments in the big data sensing ﬁeld applied\
    \ to context-\naware big data systems were discussed by Subbu and Vasilakos [75],\
    \ who proposed a\ntaxonomy of recent works based on sensing platforms.\nGe et\
    \ al. [76] surveyed big data technologies that stimulate knowledge sharing across\n\
    IoT domains, whereas Moustaka et al. [77] proposed a taxonomy to integrate data\
    \ science\nand smart city domains by focusing on concepts correlated to community\
    \ data sources and\nanalytics approaches regarding data harvesting and data-mining\
    \ processes.\nHowever, few studies have investigated the interaction between human-based\
    \ sensors\nand smart devices and how and to what degree they contribute to and\
    \ beneﬁt from big\ndata analysis in cyberspace in the context of knowledge creation.\n\
    2.5. Interoperability\nMany studies have focused on the interaction among sensors\
    \ and actuators in tri-space\n(cyber, physical, and cyber-physical). Kotis and\
    \ Katasonov [78] presented a framework\nfor supporting semantic interoperability\
    \ between many distributed and heterogeneous\nIoT entities (sensors, actuators,\
    \ and applications). Agarwal et al. [79] highlighted several\ncore concepts from\
    \ various mainstream ontologies and taxonomies, and they proposed\nan ontology\
    \ for reusing and interconnecting existing ontologies. Alkhabbas et al. [24]\n\
    proposed a characterization of IoT systems, which provides a holistic view of\
    \ IoT systems\nsynthesized from other existing taxonomies. Different works have\
    \ discussed challenges\nin mobility and localization. Shit et al. [80] proposed\
    \ a hierarchical taxonomy of the\nSensors 2021, 21, 568\n6 of 35\nlocalization\
    \ technique based on ofﬂine localization training, namely self-determining and\n\
    training-dependent approaches. Saad et al. [81] presented a taxonomy that classiﬁes\
    \ variant\nlocalization algorithms. Pozza et al. [82] made a classiﬁcation between\
    \ mobility-agnostic\nand mobility-aware discovery protocols. Berger et al. [83]\
    \ developed a multilayer taxonomy\nof digital technologies that comprises eight\
    \ structured dimensions coupled with four layers\nof standard modular architectures:\
    \ service, content, network, and devices.\nDespite this, few works have investigated\
    \ who participates in a smart environment\nand how things interact with human\
    \ sensors through knowledge processes that lead to\nactionable intelligence. The\
    \ critical goal of integrating human actors is to develop proper\ninterfaces based\
    \ on application domains, type of operation to be performed, and integration\n\
    between human sensors within the role system [84]. As in a collaborative workspace\
    \ [85],\nhumans can maintain situation awareness in order to work collaboratively\
    \ with smart\ndevices. Moreover, things apprehend the situation, understand people’s\
    \ requirements to\nenhance the value chain autonomously, and support intelligence\
    \ services [86].\n2.6. Challenges\nEven though recent works are similar to ours\
    \ in terms of coverage and analysis of\nthe IoE paradigm, some approaches address\
    \ our review criteria only to a varying degree.\nTo clarify the contributions\
    \ of the current paper, Section 5 summarizes a brief comparison\nof the scope\
    \ of the proposed IoE taxonomy and 76 IoE and IoT previous works, selected in\n\
    the literature review (presented in Section 3). The scope of the proposed knowledge-based\n\
    IoE taxonomy is considerably more embracing in terms of visibility of intelligent\
    \ connec-\ntions between sensors and actuators in IoE applications than existing\
    \ works. Some works\ntouch upon knowledge creation and collaboration among IoE\
    \ devices, while others pro-\npose taxonomies concerning speciﬁc areas (e.g.,\
    \ observations, infrastructure, sensor type,\nand analytics for IoT and IoE).\
    \ They identify design challenges from several perspectives;\nhowever, they fall\
    \ short in the two respects detailed below.\nFirst, they do not explicitly address\
    \ the characteristics of knowledge enablers (sensors\nand actuators) and to what\
    \ degree they collaborate to improve efﬁciency in IoE solutions.\nIn general,\
    \ the identiﬁcation of knowledge sources in human and non-human sensor nodes\n\
    requires further research to enhance intelligence services through managing knowledge\n\
    processes. Furthermore, for knowledge-intensive IoE applications, the governance\
    \ of\nknowledge sharing in human–machine relationships are still mostly inadequate.\
    \ This situ-\nation requires a complete taxonomy that leverages awareness from\
    \ the length and breadth\nof the knowledge hierarchy, considering knowledge interaction\
    \ and transformations from\nsensor platforms in collecting raw data for the foresight\
    \ and intelligence that drive decision-\nmaking processes and provide outcomes\
    \ and wisdom.\nSecond, although they provide an overview of hardware and software\
    \ components\nin IoE systems, the studies do not categorize and organize them\
    \ in a concise manner that\nprovides a contextual understanding of the complexity\
    \ of IoE enablers. The related works\ndo not categorize the sensors and actuators\
    \ in terms of knowledge users and providers\nand how they participate in knowledge\
    \ creation in IoE applications. We propose a com-\nprehensive knowledge-based\
    \ IoE taxonomy that optimizes technological and architectural\ncomponents as integrated\
    \ resources that drive knowledge creation.\nProviding a broad and forward-looking\
    \ view of the IoE paradigm is, essentially,\nthe principal contribution of this\
    \ present study. This paper proposes an IoE taxonomy,\nbased on knowledge, to\
    \ elicit how intrinsic knowledge in sensors and actuators—in con-\njunction with\
    \ enabling technologies and infrastructures—are applied in observations to\nproduce\
    \ intelligent services in the IoE context.\n3. Research Methodology\nTaxonomies\
    \ are interpretations of reality and represent sense-making structures [87]\n\
    (p. 51) for organizing information and knowledge into hierarchical relationships\
    \ between\nSensors 2021, 21, 568\n7 of 35\nthe terms. This involves uncovering\
    \ how the theories evolve, which enables researchers to\nstudy the essences and\
    \ their relationships in the research territory [88].\nAs a form of classiﬁcation\
    \ [88], a taxonomy for IoE sensors that considers knowledge\nenablers elucidates\
    \ how some types of sensors are pooled and used in diverse application\ndomains\
    \ and how issues with capabilities and observations can affect the quality of\
    \ services\nand knowledge creation. In order to develop a taxonomy to guide the\
    \ identiﬁcation of\ncritical knowledge in IoE applications and an in-depth classiﬁcation\
    \ of IoE enablers (sensors\nand actuators), we surveyed existing taxonomies related\
    \ to IoT and IoE. The ﬁrst step\nin developing our taxonomy was to review the\
    \ existing classiﬁcation schemes, semantic\ndescriptions, and taxonomies, which\
    \ could suggest design implications for IoE systems.\nThe methodological guidelines\
    \ suggested by Kitchenham and Charters [89] for litera-\nture reviews guided this\
    \ survey. Our review included contributions from the ACM Digital\nLibrary, IEEE\
    \ Digital Library, ISI Web of Science, Science@Direct, and Scopus databases,\n\
    which we considered to be the most relevant for ﬁnding speciﬁc studies in journal\
    \ and\nconference papers in English. The following speciﬁc search string was sought:\
    \ (“Internet of\neverything” OR “IoE” OR “Internet of things” OR “IoT”) AND (“taxonomy”)\
    \ in the “Title”,\n“Abstract”, or “Keywords” ﬁelds.\nWe designed the search string\
    \ to retrieve from the databases as many studies as\npossible that were relevant\
    \ to the review, even if the query results returned articles not\nrelevant to\
    \ the survey. Relevant studies not retrieved after the ﬁrst query were also included\n\
    in a second iteration analysis in June 2020, considering studies likely to be\
    \ explicitly related\nto IoE. Furthermore, most contributions were survey papers\
    \ for IoT, which indicates a lack\nof maturity in work in the ﬁeld of IoE.\nWe\
    \ selected only studies published in English in journals (already published and\n\
    in press), conference proceedings, books, and technical reports. After discarding\
    \ the\nduplicates, a total of 394 candidate articles remained from the initial\
    \ search (Table 1).\nTable 1. Summary of literature review stages.\nLiterature\
    \ Review Stage\nNumber of Papers\nSearch of ISI Web of Science\n235\nSearch of\
    \ Scopus\n323\nSearch of IEEE\n118\nSearch of ACM Digital Library\n22\nScience@Direct\n\
    62\nTotal\n760\nDuplicates\n366\nTotal after discarding duplicates\n394\nApproval\
    \ for analytical reading\n76\nRejected\n318\nEach candidate article was subjected\
    \ to the following series of steps before its eventual\nselection: (1) evaluate\
    \ the title and read the summary; (2) retrieve the selected papers and\nread the\
    \ introduction and conclusions; and (3) critically assess the contribution considering\n\
    the degree of adherence to IoE applications and the contribution’s relevance.\n\
    Finally, after applying the ﬁlters, 76 articles relevant to this literature review\
    \ remained.\nThe studies were diverse and promoted different approaches. From\
    \ the list of papers\nselected, it was possible to extract works related to IoT\
    \ and IoE taxonomies, thus revealing\nthe proposed IoE taxonomy. A qualitative\
    \ analysis of the results summarized the main\nﬁndings and provided some guidelines\
    \ and a comprehensive overview of the topic that\nsupported the novel knowledge-based\
    \ IoE taxonomy proposal.\n4. Proposed IoE Taxonomy\nThis section presents the\
    \ proposed IoE taxonomy. For the conception of this taxonomy,\nwe selected a method\
    \ proposed by Nickerson et al. [88] for taxonomy development that\nSensors 2021,\
    \ 21, 568\n8 of 35\nhas been adequately addressed for taxonomy development in\
    \ the information systems (IS)\ndomain. The proposed taxonomy identiﬁes and categorizes\
    \ sensors, attributes, and charac-\nteristics that are essential for developing\
    \ IoE applications. This study is the ﬁrst attempt to\nrepresent the types of\
    \ knowledge (from sensors and actuators) in the IoE domain and how\nknowledge\
    \ processes lead to intelligent services in IoE applications.\nThe development\
    \ of an IoE taxonomy involves determining the characteristics of\nthe sensors\
    \ in IoE applications that arise from a reﬁnement process at various stages to\n\
    sufﬁciently satisfy the following qualitative attributes from Nickerson et al.\
    \ [88] regarding\nthe taxonomy:\n1.\nConcise: has a limited number of dimensions\
    \ and characteristics, restricted to what is\nrelevant and understandable;\n2.\n\
    Robust: contains suitable dimensions and characteristics to distinguish the objects\
    \ of\ninterest;\n3.\nComprehensive: includes appropriate and enough dimensions\
    \ to classify all known\nobjects within the domain under regard;\n4.\nExtendable:\
    \ allows for the insertion of additional dimensions and characteristics\nwithin\
    \ a size to contemplate new incorporated objects;\n5.\nExplanatory: provides useful\
    \ explanations and valuable descriptions of the nature of\nthe objects under study.\n\
    Additionally, developing a useful taxonomy is a search process of design [88].\
    \ Kotis\net al. [90] presented requirements for a well-deﬁned collaborative and\
    \ iterative methodol-\nogy, addressing practical aspects that drive consensus\
    \ on developments—a “live” method\nof development in which the artifacts evolve\
    \ over time. An artifact must preserve its live-\nness, evolution, and reusability\
    \ during its life cycle (i.e., it may be in-use in a particular time\nor instant,\
    \ be under constant maintenance or update and be used in applications/projects\n\
    beyond its original purpose).\nWe followed an iterative method during the development\
    \ process, as suggested by\nNickerson et al. [88], and a conceptual to the empirical\
    \ approach, based on the surveyed\nexisting taxonomies related to IoT and IoE\
    \ (Section 3). Furthermore, a collaborative\napproach that relied on authors´\
    \ insight, experience, intuition led to proper identiﬁcation\nof the proposed\
    \ dimensions and characteristics, as resumed in the following stages of the\n\
    development.\nFor Nickerson et al. [88], the taxonomy’s purpose (meta-characteristic)\
    \ drives the\ntaxonomy’s dimensions and characteristics. Each element or classiﬁcation\
    \ proposed in the\ntaxonomy should be a logical outcome of the meta-characteristic.\
    \ Our aim was “to guide\nthe identiﬁcation of critical knowledge in IoE applications,\
    \ an in-depth classiﬁcation of IoE\nenablers (sensors and actuators) based on\
    \ the knowledge they provide in intelligent tasks”.\nThe development process ended\
    \ when both objective and subjective conditions have\nbeen met [88]. During the\
    \ iterations processes, new characteristics were identiﬁed and\nincluded, and\
    \ when any characteristic turned out not to be relevant, they were eliminated\n\
    after consensus. Further analysis succeeded until reach the ending conditions,\
    \ engag-\ning authors in close collaboration towards shaping commonly agreed dimensions\
    \ and\ncharacteristics. We used two objectives ending conditions: no new dimensions\
    \ were\nadded in the last iteration, and every characteristic was unique within\
    \ its dimension. Sub-\njectively, the process ended when the taxonomy was determined\
    \ to be concise, robust,\ncomprehensive, extendible, and explanatory [88] and\
    \ fulﬁlled the quality requirements of\nliveness, evolution, and reusability [90]\
    \ that are suitable to dynamics of the IoE pervasive\nenvironment.\nAccordingly,\
    \ ranking knowledge in IoE sensors is a matter of eliciting the main\ncharacteristics\
    \ in IoE applications. In order to understand the IoE domain, we applied\nspeciﬁc\
    \ questions by answering the 4 ws (what, when, who, and where) and 1 h (how)\n\
    identiﬁed using the 4W1H methodology [91,92]. This methodology addresses the challenge\n\
    imposed due to the high heterogeneity of existing IoE devices. A similar approach\
    \ was\nproposed in [68] to measure the quality and value of information when considering\
    \ the\nSensors 2021, 21, 568\n9 of 35\nvalue created by the IoE in applications.\
    \ These questions guided the deﬁnition of the\nfollowing four complementary categories\
    \ that drive the purpose of taxonomy dimensions\nand characteristics:\n(a)\nKnowledge:\
    \ regarding knowledge in action; that is, the artifact or information inside\n\
    a context (what) with comprehension and meaning;\n(b)\nType: typiﬁes sensors and\
    \ actuators—who they are, their physical characteristics,\ntheir usage, and their\
    \ role in IoE context: sensors or actuators in cyber, physical,\nor cyber-physical\
    \ presentation;\n(c)\nObservation: the physical context in time (when) and space\
    \ (where); that is, the in-\nstant and location that the information content was\
    \ sensed or perceived within ever-\nchanging IoE contexts;\n(d)\nCapabilities:\
    \ how the information is ﬂowing, the infrastructure capabilities, and the\nresources\
    \ required.\nFor this stage of development, we used the top-down development process,\
    \ starting\nwith deﬁning the most general categories (knowledge, type, observation,\
    \ and capabilities).\nWe then selected dimensions and characteristics previously\
    \ derived from a theoretical foun-\ndation from reviewing the related literature,\
    \ as presented in Section 3 and grouped them in\nrelated knowledge, type, observation,\
    \ and capabilities categories, revealing the resulting taxon-\nomy. Our IoE taxonomy\
    \ consists of four categories (see Figure 2) and groups 18 dimensions,\neach comprising\
    \ of mutually exclusive and generally collectively exhaustive characteristics.\n\
    Section 4.1 describes the knowledge category, which analyses the knowledge characteristics\n\
    and the value created by IoE applications. Section 4.2 details sensor characteristics\
    \ related\nto their use in IoE applications (types). Section 4.3 presents the\
    \ observation category, which\nclassiﬁes how data are sensed and gathered in IoE\
    \ observations. Finally, in Section 4.4,\nthe sensors’ capabilities are classiﬁed\
    \ into a few dimensions that address the technological\naspects for designing\
    \ IoE applications.\nFigure 2. IoE taxonomy.\n4.1. Knowledge\nThe knowledge category\
    \ contains ﬁve dimensions related to knowledge creation and\ninformation ﬂow:\
    \ explicitness, structure, trust, outcome, and action. Each has its own\nspeciﬁc\
    \ sub-dimensions or characteristics, as shown in Figure 3.\nSensors 2021, 21,\
    \ 568\n10 of 35\nFigure 3. IoE Taxonomy: knowledge category with dimensions and\
    \ characteristics.\n4.1.1. Explicitness\nIoE environment architectures consist\
    \ of IoT standard architecture [93], but with the\naddition of the human element\
    \ (which acts as a node) and intelligent services to the IoT\nnetwork [32]. knowledge\
    \ discovery approaches used in developing IoT solutions [82],\nwhich involve sharing\
    \ information from smart objects, should be optimized by examining\nhow humans\
    \ process data sources of information to form knowledge [41]. For Perera\net al.\
    \ [36], this requires knowledge from different perspectives, for example, knowledge\
    \ of\nsensors, applications, users, and so forth. Moreover, these uncovered knowledge\
    \ patterns\nare analyzed and integrated for subsequent use in real time, using\
    \ multiple knowledge\nmanagement approaches [76,94,95]. The intelligence of connected\
    \ things varies from non-\nexistent to absolutely rational [24]. There are different\
    \ kinds of knowledge, and it demands\ndistinct representations. A taxonomy is\
    \ a central link between knowledge engineering\nand knowledge management [96].\
    \ Regarding explicitness, this work classiﬁes knowledge\nprovided by sensors in\
    \ IoE applications into three distinct types:\n•\nTacit: This knowledge is rooted\
    \ in actions, experiences, and involvement in spe-\nciﬁc contexts. Tacit knowledge\
    \ consists of people’s knowledge based on intuitive\nevaluations of sensory inputs\
    \ and perceptions, which is sometimes hard to express\n(i.e., feelings, beliefs,\
    \ insights, values, and ideals) [97]. The increase of human senses\nthrough sensor\
    \ and data fusion and context awareness is the essence that supports\nsmarter\
    \ wearable devices for relating mutually with human cognitive memories [98].\n\
    •\nExplicit: This knowledge is codiﬁed and articulated knowledge (i.e., the form\
    \ of\nknowledge that is easy to codify using formal language, procedures or principles)\
    \ [97].\nExplicit knowledge from hard sensing-based data acquisition results in\
    \ discovering\nhidden patterns in the aggregated sensor data [42,66]. The explicitness\
    \ denotes aware-\nness of a fact or artifact, which means the application of knowledge\
    \ [98] from efﬁcient\nscheduling of the resources in IoE applications [82,99].\
    \ Sensors continuously generate\nenormous amounts of data, with the value created\
    \ being conditioned to its analysis.\n•\nImplicit: Knowledge is not explicitly\
    \ represented in the knowledge base but is inferred\nfrom it by using several\
    \ assumptions [100]. Thus, implicit knowledge may be implicit\ninformation intertwined\
    \ in information systems and data sources [97]. Myriad data\nanalytic algorithms\
    \ can be executed to extract a higher level of information from\nsensed data [99].\
    \ The value created by implicit knowledge emerges from machine\nlearning and AI\
    \ technologies, mainly in machine intelligence services [101]. It consists\nof\
    \ outputs to make predictions oriented toward decision support and automation\
    \ in\ndiverse IoE application scenarios [102].\nSensors 2021, 21, 568\n11 of 35\n\
    4.1.2. Structure\nThe combination of data streams with background knowledge enables\
    \ meaningful\nanalysis to derive higher levels of abstraction and deliver quality\
    \ actionable information to\nIoE services [71,95,99]. Sensor data are a piece\
    \ of explicit knowledge with metadata charac-\nterizing the body of evidence [68].\
    \ The distinctions between data, information, and knowledge\nare largely irrelevant\
    \ [97]. Knowledge is created by transforming the multiple data formats\ncollected\
    \ (structured, semi-structured, and unstructured) [103] into high-level informa-\n\
    tion [36,64,94,104], and useful knowledge patterns [36]. Descriptions of these\
    \ data formats\nare given below:\n•\nStructured: These data have an identiﬁed\
    \ format and a relational structure, frequently\naccessed using a standard SQL-type\
    \ language and stored in relational database\nmanagement systems.\nTypical examples\
    \ of structured data are string, numeral,\nand date. [105].\n•\nSemi-structured:\
    \ These data cannot be managed by conventional database manage-\nment system techniques,\
    \ but the interpretation and analysis of these data require com-\nprehensive and\
    \ intelligent rules. Typical examples of semi-structured data are extensi-\nble\
    \ markup language (XML) and JavaScript object notation (JSON) data. [50,101,105].\n\
    •\nUnstructured: These data do not follow any speciﬁc format and are often represented\n\
    in a rather complex structure that contains hidden relationships. Examples of\
    \ unstruc-\ntured data are videos, text, time information, and geographic location\
    \ [40]. With the\namount of data generated by sensors, devices constantly produce\
    \ large volumes of\nstructured, unstructured, and semi-structured data, which\
    \ results in ”big data” [73,74].\nIoT processing of sensing data streams provides\
    \ ubiquitous sensing services [42,102,106].\nData aggregation processes are vital\
    \ for improving the quality of the designed system [107].\nBig data technologies\
    \ assist in data processing [76], the uncovering of new and valuable in-\nsights\
    \ and information from incorporated data sources [28,69], and in improving prediction\n\
    and decision-making [102].\n4.1.3. Trust\nIn a hybrid human-based and device-based\
    \ environment, such as IoE, data’s trustwor-\nthiness can be estimated mostly\
    \ by the sensor nodes’ reputation [37]. Trust management is\na decisive challenge\
    \ for data access and data storage on IoE applications [49,108].\nDynamic and\
    \ heterogeneous network environments and the diversity of devices\nconnected in\
    \ the IoT generate an extensive array of potential security threats [27,60,61,109].\n\
    The network interoperability level should address concerns such as the security\
    \ of the\ndata to be transmitted [64], and a coherent IoT architecture would provide\
    \ a layer of data\nsecurity [110,111] since the IoT has no uniform architecture.\
    \ Approaches and methods to\nimprove users’ awareness about the effects of potential\
    \ IoT threats may mitigate the risk of\nexposure [53,65,68,112].\nKnowledge assets\
    \ vary in veracity levels [97], between the extremes of truth and\nuntruth [52].\
    \ In some broad sense, the value of knowledge depends on the quality of\nthe sensors’\
    \ information. Security approaches must be made self-sufﬁcient and auto-\nnomic,\
    \ with the minimal manual human intervention [53]. Sensor networks’ applications\n\
    need support regarding privacy, security accuracy, timeliness, relevance, completeness,\n\
    and provenance [46,68]. The data source’s reputation represents the source’s truthfulness\n\
    in providing quality content to handle changing external requirements and contexts\
    \ [101].\nAny direct or indirect connections of user information with connected\
    \ objects within IoT\nlandscapes categorize trust in communication and security\
    \ issues [108] [110]. The trust\nvalues are considered based on the reliability\
    \ of devices and the level of security and trust\nengaged in implementing and\
    \ operating the connectivity [113,114]. Knowledge of sensors\nand sensor data\
    \ in IoE applications is either trustful or untrustful:\n•\nTrustful: Based on\
    \ protecting both user and service provider privacy precedents [40].\nConstituting\
    \ meaningful identity, using trusted communication paths, and preserving\nSensors\
    \ 2021, 21, 568\n12 of 35\ncontextual information is essential to guarantee the\
    \ protection of users’ privacy in the\nIoE environment [115]. The work in [55]\
    \ addressed the security of IoT objects and\nprivacy issues by merging identiﬁcation,\
    \ authentication, and authorization into one\nargument: access control. The security\
    \ dimension encompasses ﬁve concepts: access\ncontrol, conﬁdentiality, integrity,\
    \ availability, and non-repudiation. Different studies\nhave covered concerns\
    \ such as anonymity, liability, and moral, ethical, legal, cultural,\nand regional\
    \ parameters, among other things [39,45,47,116].\n•\nUntrustful: False or misleading\
    \ data culminates in wrong decisions and critical conse-\nquences and lead to\
    \ uncertainty at all knowledge transformation levels. Incomplete-\nness in data\
    \ occurs at the lower layer of the sensor readings or raw data collected.\nVagueness\
    \ frequently appears at a higher level of contextual information [37,69]. Pos-\n\
    sible security risks associated with IoT data are the heterogeneity of the smart\
    \ devices\nand the nature of sensed data or authentication among different trust\
    \ domains [56],\nwhich further complicates access control decisions.\n4.1.4. Outcome\n\
    The IoE paradigm impacts human interaction with everyday objects. Considering\n\
    the type of information exchanged between humans and the system [84], the expected\n\
    outcomes from IoE applications provide multiple tiers of cognition with the ﬁne-tuning\n\
    sensory acquisition from heterogeneous contexts [57]. Distinct levels of collaboration\
    \ be-\ntween IoE resources require efﬁcient solutions. Human sensors peculiarities\
    \ contemplated\nby collaboration theory and technical aspects of user interaction\
    \ are challenges in computer\nnetwork theory [28]. It is imperative to provide\
    \ awareness of collective intelligence and\nwhere the intelligence is [113], representing\
    \ the outcomes expected in designing the IoE\nsolutions, based on the application\
    \ domain [28,104].\nThe outcome dimension refers to the degree to which knowledge\
    \ sources (things and\nhumans) contribute to knowledge creation in IoE intelligent\
    \ services. Relevant knowledge\ncontributions from human or non-human enablers\
    \ (sensors or actuators) either complement\nor substitute (or both in some cases)\
    \ to provide improved outcomes reached through\nknowledge sharing processes, and\
    \ sometimes automating or transforming traditional\ntasks [55] into IoE environment\
    \ disruptions:\n•\nComplementing: Represents knowledge sharing between IoE sensors\
    \ and actuators.\nComplementing outcomes occurs when humans utilize mobile devices\
    \ like sensors\nto collect their observations and information about the environment\
    \ and infrastruc-\ntures [25,51,65] or when artiﬁcial intelligence complements\
    \ human knowledge.\n•\nSubstituting: Provides insights and novel interpretation\
    \ of reality to enhance the\nquality of life (livability), regarding knowledge\
    \ acquisition as the “core element” and\nthe realization of “intelligence” [77].\n\
    4.1.5. Action\nThe Action dimension refers to knowledge creation. Actionable intelligence\
    \ is mean-\ningful for humans to promote automated processes [51], ranging from\
    \ creating value\nwhen used in a speciﬁc usage context [25,68,117] to transforming\
    \ and changing the state\nof their environment [24]. Big data analytics aims to\
    \ improve the understanding of data,\nthereby supporting useful and timely decision-making\
    \ with the reﬁned information gath-\nered [40,42,69].\nThe goals of IoT systems\
    \ range between general and speciﬁc and include monitoring,\nreducing costs, and\
    \ improving processes [109].\nFor Russell et al. [117], even in the case of uncertainty,\
    \ a rational agent is one that acts\nto achieve the best outcome or the best-expected\
    \ outcome. There is a close interrelation-\nship between intelligence and automation\
    \ [55], or creating and pursuing goals through\ntransformation. Sensor information\
    \ in IoE applications provides either automation or\ntransformation of the IoE\
    \ environment, which are deﬁned as follows:\nSensors 2021, 21, 568\n13 of 35\n\
    •\nAutomation: the aptitude to make cognitive decisions related to a given situation,\n\
    which guarantees the right action is performed. The automation of tasks and de-\n\
    pendency on machines may reduce human abilities [105]. When combined with\nAI\
    \ and machine learning, new applications will beneﬁt from automated decision-\n\
    making [106], with efﬁcient usage of network resources, minimization of operational\n\
    costs, coordination of computational resources, and efﬁcient and effective data\
    \ man-\nagement mechanisms [60] associated with the quality of experience [104,118].\n\
    •\nTransformation: an enormous number of raw observations (created by the machine\n\
    and human sensors) can be transformed into higher-level abstractions [57] that\
    \ are\nmeaningful for human or automated decision-making processes [55]. When\
    \ an IoE\nsolution provides transformation, smart things act independently, with\
    \ minimal\nor no human intervention [51]. With the support of wireless communications\
    \ and\nAI, humans beneﬁt from improvements in technological advancements [42,101]\
    \ by\ncollecting, modeling, and reasoning the context [36].\nConsidering how actions\
    \ generate changes in the environment to achieve the desired\ngoal, automation\
    \ and transformation processes may occur in the short or long term or may\nrepresent\
    \ a prominent solution. Some works have explored the implications of the IoE for\n\
    value creation and decision-making provided by smart things and big data [15,39].\
    \ How-\never, our study is concerned with how humans respond and interact with\
    \ the environment\nin assisting the evolutions of future systems (deﬁned in [15]),\
    \ which can be:\n•\nReactive: having the ability to promptly react to a changing\
    \ environment;\n•\nAdaptive: having the steadier ability to adapt their behavior\
    \ to changes;\n•\nPredictive: having the ability to use computation and analytics\
    \ techniques to identify\nrelevant patterns, in-depth knowledge of the environment,\
    \ and the most appropriate\nsolutions or possible evolutions to each IoE system\
    \ situation.\n4.2. Type\nThe type category contains ﬁve dimensions or subcategories\
    \ for the classiﬁcation of\nsensors and actuators: presentation, nature, use,\
    \ role, and engagement. Figure 4 highlights\nthe type category, its dimensions,\
    \ and characteristics.\nFigure 4. IoE Taxonomy: type category, its dimensions,\
    \ and characteristics.\n4.2.1. Presentation\nPresentation refers to the physical\
    \ aspects of sensors and actuators that interact with\nthe physical world. The\
    \ physical and virtual world can be merged by integrating computa-\nSensors 2021,\
    \ 21, 568\n14 of 35\ntion and physical processes in one of the following ways:\
    \ a) physical, b) cyber or virtual,\nand c) cyber-physical or logical [30,46,62,67,79,84].\n\
    Humans are content receivers and can act as a sensor collecting data for the sensory\n\
    systems or actuators performing actions, but humans are also content providers\
    \ who share\ndiverse and relevant types of spatial-temporal data [59,63,65]. The\
    \ physical dimension\ncharacterizes the mobility of the system’s things and the\
    \ dependency of the collaboration\nof human and non-human devices [28,39]. Accordingly,\
    \ sensors and actuators can be\nclassiﬁed as follows:\n•\nPhysical: Physical entities\
    \ are tangible devices that generate sensor data or perform\nactions changing\
    \ the environment. The data retrieved from physical sensors repre-\nsent a low-level\
    \ context [36]. Examples of physical sensors are temperature sensors,\npressure\
    \ sensors, biosensors, light sensors [6], and human sensors [35]. Examples of\n\
    the physical actuator are a door opener actuator invoked by an intelligent system\
    \ and\nhuman actuators.\n•\nCyber or virtual: An abstract information entity that\
    \ invokes sensor or actuator\nfunctions but does not directly interact with the\
    \ physical world. Examples of cyber\nor virtual entities are computer programs\
    \ and systems, communication processes,\nand monitoring activities with no physical\
    \ body (e.g., sensing web service) [51,66,74].\nVirtual entities use web services\
    \ technology to send and receive data from many\nsources [36].\n•\nCyber-physical\
    \ or logical: Represents the connection of the cyber and physical worlds\nas a\
    \ combination of physical and virtual entities to generate meaningful informa-\n\
    tion [25,83]. Similar to virtual entities, they commonly use web services technology\
    \ to\nsend and receive data and interact with the physical world [36]. They are\
    \ autonomous\nobjects augmented with sensing, actuating, processing, storing capabilities\
    \ [45]. Ex-\namples of cyber-physical entities are web services dedicated to providing\
    \ weather\ninformation resulted from physical sensors that sense weather information\
    \ and virtual\nsensors that process historic weather data.\n4.2.2. Nature\nThis\
    \ dimension is related to sensor or actuator knowledge, intertwined with its\n\
    architecture and functionality [43]. A sensor is anything that observes, and an\
    \ actuator\nis anything that performs deﬁned actions [119]. People can be modeled\
    \ as sensors and\nactuators [117], so anything that acts individually to perform\
    \ a task in the IoE context\nis an individual IoE device [59]. Knowing the nature\
    \ of knowledge source devices is\ncrucial for publication, discovery, sharing,\
    \ reuse, and integration of information within\nthe IoE environment [72]. Human\
    \ beings with dedicated roles, as well as machines,\ndevices, and services [35,106,110],\
    \ implies system constraints when it interacts with the\nphysical space [46].\
    \ Humans are content receivers through the sensory systems and also\ncontent providers—mainly\
    \ through sensing and actuating abilities [63,120], and through\ntacit knowledge\
    \ and experiences that can affect their actuations in IoE applications and\ncognitive\
    \ tasks.\nThe level of autonomy of an IoE sensor or actuator (human or non-human)\
    \ refers\nto its ability to act independently [24,83,113]. Several works have\
    \ identiﬁed entities—\nsensors/actuators—types according to activities carried\
    \ out in physical and virtual\nworlds [30,37,62].\nAccording to their built-in\
    \ nature, sensors and actuators in IoE are classiﬁed [62]\nas follows:\n•\nElectronic-based:\
    \ Deﬁne physical IoT devices constituted of electronic or mechanical\nsystems\
    \ that sense or actuate physical phenomena.\n•\nSoftware-based: Deﬁne virtual\
    \ entities that process information from data sources or\ngenerate analytical\
    \ results.\nSensors 2021, 21, 568\n15 of 35\n•\nHuman-based: Refers to humans\
    \ or virtual entities based on knowledge provided\nor expressed by human perception\
    \ about any phenomena arising in their physical,\nvirtual, or social environment.\n\
    •\nNon-human-based: Deﬁne biotic sensors/actuators or virtual entities based on\
    \ knowl-\nedge data provided by biotic perception about any phenomena arising\
    \ in their physical\nenvironment. In the constantly growing area of animal cognition,\
    \ sensor networks\nmonitor the health and well-being of animals in livestock herds\
    \ and in animal surveil-\nlance applications [121].\n4.2.3. Use\nRefers to the\
    \ physical characteristics of physical IoE sensors or actuators related to\ntheir\
    \ usage in a particular application. The devices inherit the attributes of their\
    \ owners\nor of the entities or places [79] to which or where they are attached\
    \ [43,66,113]. A wide\nvariety of objects—a group of infrastructures and devices\
    \ [44] such as embedded devices,\nsensors, and actuators—have integrated communication\
    \ and strong interactions to create\na ubiquitous environment [71,106,110]. A\
    \ taxonomy for IoT sensors communicates how\ndistinct types of sensors are combined\
    \ and used in speciﬁc application domains [72].\nSmutný [29] described things\
    \ according to how they are used or applied in relation\nto humans:\n•\nEmbeddable:\
    \ Things that are in the user or under the user’s skin, that are non-\nautonomous,\
    \ or embedded in carry-on devices [42]. The level of autonomy ranges\nfrom human-companion\
    \ device tasks [65] to opportunistic devices, which decide and\nact independently\
    \ [24,28]. For example, a mobile phone is a ubiquitous, convenient\nand user-friendly\
    \ device and has many sensors embedded [48], which is why it has\nturned into\
    \ a global mobile sensing device [67].\n•\nWearable: Things that rest on a person’s\
    \ body or can be used, worn, or attached to\ntheir owners and enable accurate\
    \ detection of the wearers’ motions [50,63,64,75].\n•\nSurroundable: Things that\
    \ are autonomous, near or around the user, but which have\nno physical contact\
    \ with the user. Recently, several non-contact techniques have\nbeen interpreted\
    \ as highly valuable in dealing with highly infectious diseases such as\nCOVID-19.\
    \ In a pandemic scenario, non-contact sensing was able to detect information\n\
    without direct contact with the patients and without devices physically touching\
    \ the\nbody [122].\n4.2.4. Role\nIoT devices have sensing and actuating capability\
    \ according to deﬁned rules under\nvarious scenarios [59,72]. They perform sensing\
    \ and actuating functions [24,26,51] that\nhelp in interacting with the physical\
    \ environment [48]. An IoE device or enabler can be a\nsensor, an actuator, or\
    \ a sensor and actuator [44,77,106].\n•\nSensor: A device that observes and senses.\
    \ Sensing is a read operation over a con-\ntext entity. The data collected by\
    \ a sensor is stored and processed intelligently to\nderive useful inferences\
    \ and to support the decision-making process [46]. Sensors\nare monitor devices\
    \ and physical entities, which provide the information required to\nimmediately\
    \ control actuators, whereas actuators act on the physical entity or control\n\
    other things [28,35,114].\n•\nActuator: Affects a particular domain of the physical\
    \ space or a combination of both.\nActuation is a write operation over a context\
    \ entity, in which the conceptual entity\nrepresents the domain of a sensor or\
    \ an actuator [44]. Actuators perform the decided\nactions and effect a change\
    \ in the environment [36,39,48].\n•\nSensor and actuator: This device is a hybrid\
    \ of the two previous categories, and it can\ngather data and act within its environment.\n\
    Processing and analytics (ﬁxed process or algorithm, machine learning, or AI)\
    \ do not\nﬁt within this classiﬁcation [113].\nSensors 2021, 21, 568\n16 of 35\n\
    4.2.5. Engagement\nParticipation is an interaction between people with existing\
    \ technologies and occurs\nat different engagement levels [67]. Engagement refers\
    \ to sensing tasks. In data acquisition,\nit can be both opportunistic and participatory,\
    \ and it provides sensory information that\ncollectively forms knowledge.\nFor\
    \ example, enhancing human senses is possible when machines interact with hu-\n\
    mans or provide remote operation in perceived real time in ubiquitous computing\
    \ [57,63].\nCooperative smart things can interact with other entities of the IoE\
    \ in order to achieve a uni-\nﬁed objective [15]. With mobile crowdsourcing, the\
    \ primary information shared voluntarily\nis user knowledge and opinion, along\
    \ with location as the only sensor information [65].\nThe engagement of a sensor\
    \ node in an IoE application is one of the following:\n•\nParticipatory: The IoE\
    \ enabler (sensor node or actuator) is actively involved and\nactively reports\
    \ observations [120]. It can provide information about the environment\nor surroundings,\
    \ as well as any other sensory information that could be on social groups\n(social\
    \ sensing) or with everyone (public sensing) or at the community level [37,67,106].\n\
    •\nOpportunistic: The IoE node has minimal or no involvement—it senses and monitors\n\
    tasks running in the background. Embedding sensors trigger the data automatically\n\
    (either periodically or based on events).\n4.3. Observation\nThe observation category\
    \ contains ﬁve dimensions or subcategories related to sensed\ncontext: location,\
    \ reach, mobility, time, and mode. Figure 5 emphasizes the dimensions\nand their\
    \ sub-dimensions or characteristics.\nFigure 5. IoE taxonomy: observation category,\
    \ its dimensions, and characteristics.\n4.3.1. Location\nLocation is used to describe\
    \ the spatial context (physical context) of users/devices\nwithin a local or global\
    \ network [24,113]. It represents the geophysical position of a sensor\nor actuator\
    \ in absolute values, identifying the coordinates (latitude and longitude) or\n\
    relative speciﬁcations through location tags [45], which is obtained manually\
    \ or automat-\nically [120,123]. It represents the deﬁnition of an area covered\
    \ by a particular object [79].\nSensors that are randomly deployed get the required\
    \ information about the target environ-\nment [81].\nLocation systems can be categorized\
    \ as context-aware systems [75]. The precise location\nof an object is critical\
    \ since location plays a critical role in context-aware computing [36,66,80].\n\
    Sensors 2021, 21, 568\n17 of 35\nMoreover, aggregation of knowledge patterns facilitates\
    \ reduced data transfer in distant\nenvironments and minimizes bandwidth use [94].\
    \ Some physical measurement-based\nlocalization schemes are classiﬁed as coarse-grained\
    \ and ﬁne-grained [80].\n4.3.2. Reach\nReach classiﬁcation distinguishes between\
    \ individual and collective knowledge. It refers\nto an environment of sensing\
    \ interest [71]. Sensors are becoming more sophisticated in\ntechnology advances,\
    \ cheaper in price, and smaller in size. This evolution stimulates\nlarge-scale\
    \ deployments [36], and dense geographical distribution [60].\nThe domain of interest\
    \ represents the applicative domain in which the device is\noperative [79,81]\
    \ and ensures that IoT services are accessible or reached only by authorized\n\
    access [113,124].\nThe prevalence of mobile devices, such as smartphones, has\
    \ triggered challenges\nfor mobile networks worldwide [125], as well as novel\
    \ classiﬁcations, such as collective\nknowledge classiﬁed into individual or group,\
    \ internal or external, full or partial do-\nmains. For example, a conglomeration\
    \ of sensor data stored on cloud infrastructure can be\ndesigned as big data sensing,\
    \ and based on the reach of its sensing requests and require-\nments [74], it\
    \ can be referred to as a) private, b) public, c) community, or d) hybrid big\n\
    data sensing.\nIn crowdsourcing, regarding the boundaries of the individual scope\
    \ in which crowds\ncollaborators are immersed, the reach can be classiﬁed as ranging\
    \ from small to large-scale\n(from a person to a group, community, city, and so\
    \ forth) [28,65].\n4.3.3. Mobility\nMobility, which is also called monitoring\
    \ continuity [36], is one of the main character-\nistics that enables identiﬁcation\
    \ of the state of sensors and actuators and their capability\nof movement [26,36,39,43,44,80],\
    \ with signiﬁcant implications on device operation, con-\nnectivity, and location\
    \ management [30,48,80]. Devices are classiﬁed into two categories:\nstatic/immobile/ﬁxed\
    \ and mobile [26,77,82,113].\n•\nFixed/static/immobile: Objects that remain static\
    \ to a speciﬁc location or cannot move.\nTheir observations are restricted to\
    \ a speciﬁc location, in a static or very constrained\n(in terms of mobility)\
    \ environment that is not designed to move (relative to their point\nof installation)\
    \ without being uninstalled.\n•\nMobile: The objects move [44], and their location\
    \ may be calculated in absolute\ncoordinates or relative to reference nodes in\
    \ the network [81], requiring wireless\ncommunications to transmit data and allow\
    \ conﬁguration and control [113]. Their\nmovement and mobility capability are\
    \ controlled independently (or autonomously) or\ndependently through device users\
    \ [43].\nA self-moving device moves autonomously and relative to its setup/installation\
    \ point,\nwithout being uninstalled (e.g., smart car), whereas a non-self-moving\
    \ device does not\nmove autonomously but can still move relative to its original\
    \ location without being\nuninstalled [26,77].\nMobility of the things in the\
    \ system is dependent on the collaboration of the items\nphysically coupled with\
    \ the humans in the system [28], as in crowdsensing applications,\nin which geographically\
    \ dispersed users actively (participatory) or passively (opportunistic)\ncollect\
    \ data with their smartphones [51,75]. Classiﬁcations between mobility-agnostic\
    \ and\nmobility-aware [82] highlight an approach that ignores knowledge about\
    \ mobility and the\nones that consider and exploit it for optimization [12].\n\
    Challenges related to mobility include frequent disconnections and handoffs, which\n\
    affect perfect connectivity [126]. Mobility techniques in the cloud, fog, and\
    \ edge archi-\ntectures [60] support mobility, and other protocols apply routing\
    \ and resource discovery\nmechanisms [39].\nSensors 2021, 21, 568\n18 of 35\n\
    4.3.4. Time\nTime represents the instant of observation (i.e., timestamp) [79].\
    \ Information about\ntime and location are critical features of some applications\
    \ (called spatial-temporal-aware\napplications) that require tasks to make observations\
    \ at a speciﬁc location during a deﬁned\nperiod [120]. In [24], latency relates\
    \ to the time an IoE system needs to answer to a stimulus.\nInteraction between\
    \ IoE smart devices can inﬂuence the service’s response time to end-\nusers. The\
    \ time interval between the initiation and the conclusion of the task is the response\n\
    time [49,107,109].\nThe time dimension depends on how sensors are requested or\
    \ provide data to the\nsystem in speciﬁc periods or on an ad-hoc basis (as software\
    \ system makes a request),\nwhich is characterized as the following two distinct\
    \ methods that were proposed in [107]:\n•\nPull method: The software component\
    \ in the control of obtaining sensor data from\nsensors makes a requisition periodically\
    \ (after speciﬁc intervals) or instantly obtains\nsensed data [107].\n•\nPush\
    \ method: The physical or virtual sensor pushes data to the software component\n\
    in the control of obtaining sensor data periodically [36,107]. In many cases,\
    \ a sensor\nobservation can be the result of a local sensor data fusion [68].\n\
    Real-time applications monitor the state of the environment and react to changes\n\
    accordingly and in a timely manner.\nThe deployment of IoE applications in real-world\
    \ scenarios creates a massive amount\nof data from real-time interactions, usually\
    \ at high data rates. It faces challenges as temporal\ndata consistency related\
    \ to the coherency between the value of the data in the system and its\nenvironment\
    \ state [107]; and high latency during interactions [39], when inferred contexts\n\
    evolve with time [91,94], and the exchanged data may not be accurate.\nHard real-time\
    \ data cannot accept any delay; in contrast, soft real-time data can\naccept various\
    \ bounded delays. Delay-tolerant applications can be categorized as nonreal\n\
    time [60,107]. In ofﬂine circumstances, the delayed transmission may be crucial\
    \ to address\nquality and security constraints [37,65].\nIn real-time situations,\
    \ timeliness [69,107] describes data processing in a speciﬁc\ndeadline, which\
    \ is real time, near real time, or batch processing [113].\n•\nReal time: refers\
    \ to the immediate data processing to provide instant results for a\ntime-sensitive\
    \ application.\n•\nNear real time: refers to situations when the delay time is\
    \ still relevant for the applica-\ntion, but the computation process is not as\
    \ immediate as real time.\n•\nBatch-processing: refers to situations when data\
    \ are ﬁrst collected and processed at a\npredetermined interval or when a speciﬁed\
    \ volume of data is available [37].\n4.3.5. Mode\nThe combination of sensors serving\
    \ different purposes and data generated in IoE\napplications implies the need\
    \ to classify data sources and information in the IoT con-\ntext [72]. During\
    \ real-time data harvesting, it can be challenging to determine the possible\n\
    relationships among heterogeneous knowledge sources [69]. Smart device sensors\
    \ are\neither active or passive sensors, depending on their usage and functionalities.\
    \ If the sensor\ndata collected are reﬂected in the same way as designed, this\
    \ is called active functionality.\nHowever, sensors operate passively when collected\
    \ data are interpreted or processed in\nnew ways [17,65].\nEris et al. [28] deﬁned\
    \ how much interaction is required within the network in three\nlevels of collaboration\
    \ interdependence [28]:\n•\nPooled interdependence: The lowest level of collaboration,\
    \ in which each collaborator\nbarely contributes to the collaboration environment\
    \ and beneﬁts from the contribu-\ntions of others. The collaborators neither synchronize\
    \ nor negotiate the nature of each\nother’s contributions.\nSensors 2021, 21,\
    \ 568\n19 of 35\n•\nSequential interdependence: The middle level, in which the\
    \ contributions of one\ncollaborator become the inputs to another collaborator\
    \ contributions. In this case,\nthere is a temporal ordering of the collaboration\
    \ efforts.\n•\nReciprocal interdependence: The highest interdependence level,\
    \ in which one collabo-\nrator’s contributions are the next collaborator’s inputs,\
    \ and collaborators must also\nnegotiate the nature of each other’s contributions\
    \ to the collaboration environment.\nThe Mode dimension refers to the way of linking\
    \ the physical and digital world in\norder to acquire context [127], and it can\
    \ be either sensed, derived, or manually provided:\n•\nSensed: Data gathered through\
    \ sensors.\n•\nDerived: Includes the sensed data stored in databases or the information\
    \ generated by\nperforming computational operations on sensor data. Data aggregation\
    \ is the ground\nfor the application’s workﬂow and unconditionally impacts the\
    \ application’s quality.\nDistinct aggregations may have speciﬁc requirements\
    \ to be supported by design [107].\n•\nManually provided: Human sensors provide\
    \ the context information [36].\n4.4. Capabilities\nThe capabilities category\
    \ contains three dimensions or subcategories (communication,\nprocessing, and\
    \ storage) and refers to the processing power and storage capacity of the\nunderlying\
    \ technologies and communication protocols. Each dimension has its speciﬁc\nsub-dimensions\
    \ or characteristics, as represented in Figure 6.\nFigure 6. IoE Taxonomy: capability\
    \ category, its dimensions, and characteristics.\n4.4.1. Communication\nThe communication\
    \ capability refers to the sensors’ ability to communicate and change\ninformation\
    \ locally. This ability may vary at different levels of interoperability between\n\
    IoE sensors and systems and be classiﬁed as no connection (no connectivity between\n\
    enablers), technical (basic network connectivity), syntactical (basic interoperability\
    \ and data\nexchange), semantic (understanding about the semantics of the data),\
    \ pragmatic or dynamic\n(applicability of the information), conceptual (shared\
    \ view of the pervasive world) [27],\nor organizational (coordination and alignment\
    \ of business processes across organizational\nboundaries) [128]. Additionally,\
    \ based on communication capabilities, IoT devices are\nclassiﬁed into two categories:\
    \ gateway devices and constrained devices [43,45]. Moreover,\naccording to their\
    \ abilities to interact with other objects, IoT objects can be classiﬁed into\n\
    four levels (Level 0–Level 3). Level 0 objects only receive, and Level 1 objects\
    \ only send\ninformation. Level 2 objects can perform both operations with one\
    \ object, while Level 3\nextends the interaction to any other object [50].\nSensors\
    \ 2021, 21, 568\n20 of 35\nDifferent networking protocols and technologies provide\
    \ networking interoperabil-\nity in IoT [27,48,114]. IoT systems can exploit several\
    \ types of networks with different\ncharacteristics in terms of size, data transfer,\
    \ coverage, latency requirements, capacity,\nand supported reachability [69,74,75,83,110].\
    \ The central networking and communica-\ntion technologies are local area networks,\
    \ wireless local area networks, wireless personal\narea networks, wide area networks,\
    \ metropolitan area networks, wireless regional area\nnetworks, body area networks,\
    \ mobile communication networks, wireless metropolitan\narea networks, satellite\
    \ networks (e.g., GPS) [24,118,129], Neul, IPv6 over low-power\npersonal area\
    \ networks (6LowPAN), low-range wireless area networks, cellular Sigfox,\nnarrowband-IoT,\
    \ and thread or mesh technologies such as Zigbee and SDNs [25,30,113].\nThere\
    \ are three types of communication protocol that enable IoT to interconnect and\n\
    communicate: (1) device-to-device, which is applied to communication between mobile\n\
    phones within reach and is the next-generation of mobile networks; (2) device\
    \ to the server,\nin which the sensed data are sent to the servers, nearby or\
    \ away from devices (applies to\ncloud processing); and (3) server-to-server,\
    \ in which servers transmit data between each\nother—mainly used for mobile networks\
    \ [99].\n4.4.2. Processing\nThe sensors and devices used for data collection also\
    \ vary in their processing ca-\npabilities [130]. The study of Mon et al. [127]\
    \ classiﬁes sensors as high-end or low-end\ndevices, depending on resources and\
    \ computational capabilities. Low-end devices are\nresource-constrained with regard\
    \ to energy, processing power, and communication capac-\nities. The processing\
    \ capability refers to the sensors’ ability to process aggregated data\nlocally\
    \ [55].\nFor IoE systems, data are automatically processed to deduce knowledge\
    \ and gen-\nerate actionable insights. In general, data processing techniques\
    \ are either historical or\nproactive. Historical data processing is related to\
    \ knowledge discovery, whereas proactive\ndata processing provides predictive\
    \ and actionable insights [24]. A broad category of\napplications participates\
    \ in the continuous generation and analysis of high-volume hetero-\ngeneous stream\
    \ data. Next-generation applications will be developed to handle the data in\n\
    streaming mode and on-the-ﬂy as the value of data resides in its real-time processing\
    \ [131].\nAnalytics technology refers to the systematic computational analysis\
    \ of transforming\na variety of data from different sources into information [105]\
    \ and applying data fusion and\nmining techniques [94] to make intelligent decisions\
    \ at the following distribution levels:\n(1) the device level, where devices are\
    \ responsible for storage and computing process;\n(2) the network level, which\
    \ demands remote communication to fog computing nodes\n(hubs, base stations, gateways,\
    \ routers, and servers); and (3) cloud level, which demands\nremote communication\
    \ within a group of interconnected servers [24,38,73,114,118].\nCloud, edge and\
    \ fog computing are critical aspects of the centralized and decentralized\nIoE\
    \ environment, considering that devices that have restricted compute and memory\n\
    capacity need to delegate these functions [25,26,29]. Integrated with cloud computing,\n\
    edge computing can efﬁciently address the processing problems related to edge\
    \ big data.\nSince in the edge computing paradigm, the data are at the edge of\
    \ the network [28,56].\nA variety of cloud computing and edge computing paradigms\
    \ are mobile cloud\ncomputing, mobile edge computing, and fog computing [32,60,126].\
    \ Cloudlets, mobile edge\ncomputing, and fog computing are edge computing technologies\
    \ and rely on virtualization,\nwhile mobile cloud computing processes the data\
    \ of mobile applications at a remote cloud\ndata center.\n4.4.3. Storage\nThis\
    \ capability refers to an IoE system’s storage function, based on the paradigm\n\
    where its storage function resides: cloud, fog, or edge [73]. A storage platform\
    \ (public,\nvirtual, or private) offers the ﬂexibility and scalability that an\
    \ IoE application needs,\nfrom development to deployment [29]. Storage refers\
    \ to storing data internally, and it varies\nSensors 2021, 21, 568\n21 of 35\n\
    intensively from one object to another [55]. Storage interactions between IoE\
    \ enablers may\nbe distinguished signiﬁcantly depending on the object’s storage\
    \ capabilities. Some objects\nmay have restricted capabilities and store minimum\
    \ information [132]. Most mobile devices\nat the edge of the network are resource-constrained\
    \ in terms of storage, computation\ncapability and battery life [56]. Although\
    \ almost all of the objects have the capacity to store\nembedded codes to function\
    \ internally, they differ in storing aggregated and processed\ndata [104]. An\
    \ object’s storage should also be based on the sensitivity of the information\n\
    stored [55].\nAnalytics processing requires real-time data stream processing for\
    \ supporting the rate\nof data arrival, data management, and data storage [105]\
    \ at diverse distribution levels.\nDepending on the storage and compute capabilities,\
    \ the storage capability of an IoE\nnode or application is [114]:\n1.\nDevice-level:\
    \ devices are participants in the storage and compute process;\n2.\nNetwork-level:\
    \ the storage process uses remote connections to fog computing nodes;\n3.\nCluster\
    \ level: storage function is provided between a set of interconnected servers\
    \ [114].\n5. Discussion and Comparison with Previous Work\nIn this section, we\
    \ discuss theoretical and practical implications and limitations.\nWe present\
    \ a brief comparison of the scope of the proposed IoE taxonomy and 76 IoE and\n\
    IoT taxonomy previous works selected in the literature review (presented in Section\
    \ 3).\nWe examined their diverse approaches in order to enhance understanding\
    \ of the contextual\naspects of IoE/IoT addressed and their relationships in identifying\
    \ knowledge in IoE/IoT\napplications.\nTable 2 shows the adherence of the analyzed\
    \ studies to our proposed IoE taxonomy\nacross the proposed categories and dimensions.\
    \ In relation to dimensions of the IoE\ntaxonomy, capabilities is the category\
    \ most frequently addressed and studied, followed by\nobservation and type of\
    \ sensor, respectively. The summaries show that most taxonomies\nsupport at least\
    \ two dimensions, but knowledge support is limited.\nThe proposed IoE taxonomy\
    \ (in bold) covered all (100%) of the 18 dimensions.\nIt should be noted that,\
    \ on average, the remaining 76 studies covered 25,5% of the dimen-\nsions. The\
    \ framework proposed by Boyes and Hallaq [113] obtained the second-highest\ncoverage\
    \ (72,2%), with 13 dimensions; however, it did not include aspects related to\
    \ the\ntype of knowledge in IoE applications. On average, the knowledge category\
    \ obtained 24,7%\ncoverage, while the type of sensor, observation, and capabilities\
    \ categories appeared in 20.5,\n20, and 44.3% of the studies, respectively.\n\
    The results indicated a lack of interest (only 15.8%) in identifying knowledge\
    \ sources\nin terms of explicitness (tacit, explicit, or implicit). Moreover,\
    \ only 13.1% of the studies\naddressed how the outcome of the IoE application\
    \ was achieved and beneﬁted by comple-\nmentation (accompaniment) or substitution\
    \ (replacement) of knowledge in IoE processes\n(between things, data, and humans).\
    \ Thus, further research should consider this gap and\nattempt to examine the\
    \ impact of knowledge identiﬁcation on the design of IoE applications\nand how\
    \ knowledge should be synthesized and combined to drive knowledge creation\nand\
    \ intelligent services that create value. In conclusion, the ﬁndings of this present\
    \ study\nprovided an insight into the current trend of IoE research.\nSensors\
    \ 2021, 21, 568\n22 of 35\nTable 2. Comparison of the scope of the proposed IoE\
    \ taxonomy with previous works.\nCategory\nKnowledge\nType\nObservation\nCapabilities\n\
    Score\nDimensions\nExplicitness\nStructure\nTrust\nOutcome\nAction\nPresentation\n\
    Nature\nUse\nRole\nEngagement\nLocation\nReach\nMobility\nTime\nMode\nCommunication\n\
    Processing\nStorage\nTotal Acquired\nRef.\nYear\nThis study\n2020\n\x14\n\x14\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\
    \x14\n\x14\n\x14\n100%\n[24]\n2019\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\
    38.8%\n[26]\n2019\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[27]\n2019\n\x14\n\x14\
    \n\x14\n16.6%\n[30]\n2019\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[57]\n2019\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[61]\n2019\n\x14\n\x14\n11.1%\n[39]\n2019\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n50%\n[64]\n2019\n\x14\n\x14\
    \n\x14\n16.6%\n[65]\n2019\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\
    \n50%\n[69]\n2019\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[84]\n2019\n\x14\
    \n\x14\n11.1%\n[95]\n2019\n\x14\n\x14\n\x14\n16.6%\n[105]\n2019\n\x14\n\x14\n\x14\
    \n\x14\n22.2%\n[107]\n2019\n\x14\n\x14\n\x14\n16.6%\n[109]\n2019\n\x14\n\x14\n\
    \x14\n16.6%\n[112]\n2019\n\x14\n\x14\n\x14\n\x14\n22.2%\n[126]\n2019\n\x14\n\x14\
    \n\x14\n16.6%\n[62]\n2018\n\x14\n\x14\n11.1%\n[37]\n2018\n\x14\n\x14\n\x14\n\x14\
    \n22.2%\n[55]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[56]\n2018\n\x14\n\x14\
    \n\x14\n16.6%\n[59]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[60]\n2018\n\x14\
    \n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n50%\n[49]\n2018\n\x14\n\x14\n\
    \x14\n16.6%\n[50]\n2018\n\x14\n\x14\n\x14\n16.6%\nSensors 2021, 21, 568\n23 of\
    \ 35\nTable 2. Cont.\nCategory\nKnowledge\nType\nObservation\nCapabilities\nScore\n\
    Dimensions\nExplicitness\nStructure\nTrust\nOutcome\nAction\nPresentation\nNature\n\
    Use\nRole\nEngagement\nLocation\nReach\nMobility\nTime\nMode\nCommunication\n\
    Processing\nStorage\nTotal Acquired\n[51]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n\
    \x14\n33.3%\n[76]\n2018\n\x14\n\x14\n11.1%\n[80]\n2018\n\x14\n\x14\n\x14\n\x14\
    \n22.2%\n[81]\n2018\n\x14\n\x14\n\x14\n16.6%\n[83]\n2018\n\x14\n\x14\n\x14\n16.6%\n\
    [99]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[102]\n2018\n\x14\n\x14\n11.1%\n\
    [104]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n44.4%\n[106]\n2018\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n55.5%\n[113]\n2018\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\
    72.2%\n[114]\n2018\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[116]\n2018\n\x14\
    \n\x14\n\x14\n\x14\n22.2%\n[77]\n2018\n\x14\n\x14\n\x14\n\x14\n22.2%\n[120]\n\
    2018\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[124]\n2018\n\x14\n\x14\n\x14\n\x14\
    \n\x14\n27.7%\n[127]\n2018\n\x14\n\x14\n11.1%\n[25]\n2017\n\x14\n\x14\n\x14\n\x14\
    \n22.2%\n[41]\n2017\n\x14\n\x14\n\x14\n\x14\n22.2%\n[42]\n2017\n\x14\n\x14\n\x14\
    \n\x14\n\x14\n27.7%\n[43]\n2017\n\x14\n\x14\n\x14\n\x14\n22.2%\n[47]\n2017\n\x14\
    \n\x14\n\x14\n16.6%\n[63]\n2017\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[48]\n\
    2017\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[40]\n2017\n\x14\n\x14\n\x14\n\
    \x14\n\x14\n27.7%\n[75]\n2017\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[79]\n2017\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[94]\n2017\n\x14\n\x14\n\x14\n\x14\n\
    \x14\n\x14\n\x14\n\x14\n\x14\n50%\nSensors 2021, 21, 568\n24 of 35\nTable 2. Cont.\n\
    Category\nKnowledge\nType\nObservation\nCapabilities\nScore\nDimensions\nExplicitness\n\
    Structure\nTrust\nOutcome\nAction\nPresentation\nNature\nUse\nRole\nEngagement\n\
    Location\nReach\nMobility\nTime\nMode\nCommunication\nProcessing\nStorage\nTotal\
    \ Acquired\n[101]\n2017\n\x14\n\x14\n\x14\n\x14\n22.2%\n[133]\n2017\n\x14\n5.5%\n\
    [29]\n2016\n\x14\n\x14\n\x14\n16.6%\n[44]\n2016\n\x14\n\x14\n\x14\n\x14\n22.2%\n\
    [66]\n2016\n\x14\n\x14\n\x14\n\x14\n22.2%\n[72]\n2016\n\x14\n\x14\n\x14\n\x14\n\
    22.2%\n[73]\n2016\n\x14\n\x14\n\x14\n16.6%\n[111]\n2016\n\x14\n\x14\n\x14\n\x14\
    \n22.2%\n[115]\n2016\n\x14\n\x14\n\x14\n\x14\n22.2%\n[118]\n2016\n\x14\n\x14\n\
    11.1%\n[28]\n2015\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n44.4%\n[53]\n\
    2015\n\x14\n\x14\n\x14\n16.6%\n[67]\n2015\n\x14\n\x14\n\x14\n16.6%\n[71]\n2015\n\
    \x14\n\x14\n\x14\n16.6%\n[74]\n2015\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\
    38.8%\n[82]\n2015\n\x14\n\x14\n\x14\n\x14\n\x14\n27.7%\n[45]\n2014\n\x14\n\x14\
    \n\x14\n\x14\n22.2%\n[36]\n2014\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\n\x14\
    \n\x14\n\x14\n55.5%\n[108]\n2014\n\x14\n\x14\n11.1%\n[110]\n2014\n\x14\n\x14\n\
    \x14\n\x14\n\x14\n27.7%\n[35]\n2013\n\x14\n\x14\n\x14\n16.6%\n[68]\n2013\n\x14\
    \n\x14\n\x14\n\x14\n\x14\n\x14\n33.3%\n[46]\n2011\n\x14\n\x14\n\x14\n\x14\n22.2%\n\
    [38]\n2011\n\x14\n\x14\n\x14\n16.6%\nSensors 2021, 21, 568\n25 of 35\n6. Results\n\
    This section presents the application of the proposed taxonomy in diverse IoE\
    \ domains.\nWe intended to validate the IoE taxonomy’s practical applicability\
    \ for classifying knowledge\nin the IoE applications in relation to the following\
    \ proposed categories: knowledge, type,\nobservation, and capabilities. We conducted\
    \ conceptual and pragmatical validations aimed\nto show that the proposed taxonomy\
    \ involves the qualitative attributes of robustness\nand comprehensiveness. It\
    \ contains enough dimensions and characteristics to clearly\ndifferentiate the\
    \ objects of interest into distinct domains and to classify all known objects\n\
    within the ﬁeld under consideration [88].\n6.1. Validation of Proposed IoE Taxonomy\
    \ in Distinct Domains\nWe illustrate the validation of the proposed taxonomy over\
    \ 50 distinct IoE applications\nin the following three domains: crowdsourcing\
    \ applications [134], IoT/IoE applications\nwith analytics [114], and cyber-physical\
    \ systems [135]. We selected crowdsourcing appli-\ncations due to the integration\
    \ of crowd knowledge and participatory sensing, IoT/IoE\napplications with analytics\
    \ to validate the applications with an implicit knowledge and big\ndata sensing\
    \ and cyber-physical systems due to the pervasive environment of thing-to-thing\n\
    collaborations.\nTable 3 presents a sample of analyses of the 50 applications.\
    \ Our analyses will provide\nthe roadmap for future research on IoE sensors and\
    \ applications. To assist with future\nstudies, the full results and details are\
    \ available in a dataset within a technical report [136]\n(https://www.cos.ufrj.br/uploadﬁle/publicacao/2963.pdf).\n\
    Table 3. Validation of proposed IoE taxonomy in distinct domains.\nCategory/Dimension\n\
    Applications Classiﬁed According to IoE Proposed Taxonomy Characteristics:\nCyber-Physical\
    \ Systems (CPS) [136], Crowdsourcing Applications [137–147],\nApplications with\
    \ Analytics: [148–152]\nKnowledge\nExplicitness\nTacit [114,137–140,144–147,151,152]\
    \ Explicit [136,138–140,142–144,146,147,150–152]\nImplicit [136,141,145,146,149–152]\n\
    Structure\nStructured [135,137–152] Semi-structured [135,146,147,152] Unstructured\
    \ [135,145]\nTrust\nTrustful [135,148–152] Untrustful [137–145,147]\nOutcome\n\
    Complements [135,137–150] Substitutes [135,151,152]\nAction\nAutomation [135,137,150–152]\
    \ Transformation [135,138–144,146–149]\nType\nPresentation\nCyber [135] Physical\
    \ [135,137–139,142–152] Cyber-physical [135,140,142,144–152]\nNature\nElectronic-based\
    \ [135,137,148–152] Software-based [135,147,150]\nHuman-based [135,137–147,151,152]\n\
    Use\nWearables [135,137–142,152] Surroundable [135,148–151] Embeddable [140,142,150]\n\
    Role\nSensor [137–147,149,152] Actuator [152] Sensor and actuator [135,148,150,151]\n\
    Engagement\nOpportunistic [135,140,144,146,149,151] Participatory [141–143,145,147,148,150,152]\n\
    Observation\nLocation\nCoarse-grained [137–139,141–144,147–151] Fine-grained [135,140,145,146,152]\n\
    Reach\nFull [137–139,141–145,147,148] Partial [135,140,146,150,151]\nMobility\n\
    Fixed [152] Mobile [137–151]\nTime\nPull [140,145,147–150,152] Push [135,137–144,146,151,152]\n\
    Mode\nSense [135,137–152] Derive [135,140,145,146,149,151,152] Manually provided\
    \ [142,143,148]\nCapabilities\nCommunication\nSemantic [135,137–147] Pragmatic\
    \ [135,148–151] Conceptual [152]\nProcessing\nCloud [135,137–152] Fog mobile edge:\
    \ [139,140,144,145,147]\nStorage\nDevice level [150] Network level [149,152] Cluster\
    \ level [135,137–152]\nUsing different perspectives and approaches, most IoE applications\
    \ demand knowl-\nedge, such as knowledge provided by sensors, knowledge about\
    \ system’s domains, knowl-\nedge about users and activities, as well as knowledge\
    \ for automated conﬁguration of\nsensors and data annotation, reasoning, and event\
    \ detection to the IoE system [93].\nRegarding the crowdsourcing application domain\
    \ and using the proposed taxon-\nomy, we analyzed 11 applications observed by\
    \ Melo et al. [134] in a Crowd Application\nSensors 2021, 21, 568\n26 of 35\n\
    Database (http://cadb.demoro.net). According to the authors of this study, there\
    \ is a\nneed to create mechanisms to warn users about using their data. It is\
    \ essential to evaluate\nthe boundaries between people and things and their collaboration\
    \ processes to create\ncollective intelligence. This should beneﬁt from our IoE\
    \ taxonomy in terms of knowledge\nidentiﬁcation and awareness. The 11 knowledge-intensive\
    \ applications selected from\nthe crowd application database were: Noisetube [137],\
    \ CenceMe [138], MicroBlog [139],\nUbiﬁt Garden [140], GarbageWatch [141], Galaxy\
    \ Zoo [142], eBird [143], SenSay [144],\nJog Falls [145], MobAsthma [146], and\
    \ Transafe [147]. These applications are intrinsically\ncomposed of knowledge-intensive\
    \ tasks for the expected purpose and value creation.\nThe transformations or automation\
    \ provided by these applications consist of conversions\nof tacit-explicit-implicit\
    \ knowledge when people, things, and data are connected in the IoE\nenvironment\
    \ to provide relevant services and collective intelligence. Table 3 classiﬁes\
    \ these\n11 applications using the proposed IoE taxonomy. The full results and\
    \ details are available\nin [136].\nRegarding IoE applications that beneﬁt from\
    \ data analytics, we selected 30 applications\nin Siow et al. [114], which analyzed\
    \ (for the 2011–2017 period) the top ﬁve application\ndomains: health, living,\
    \ environment, industry, and transport. We categorized the selected\napplications\
    \ (from distinct domains and with diverse analytical capabilities) in order to\n\
    validate the IoE taxonomy, as presented in [136].\nAs a sample for application\
    \ of the proposed IoE taxonomy, Table 3 shows the cat-\negorization of 5 applications\
    \ that were selected from Siow et al. [114] (smart clothing\nmonitoring [148],\
    \ travel routing [149], chemical process monitoring [150], smart farm-\ning [151],\
    \ and on-shelf availability [152]). We prioritized applications with descriptive\n\
    capabilities, which are the primary source of knowledge creation. The ﬁve applications\n\
    consist of knowledge sharing between sensors’ explicit knowledge, tacit human\
    \ knowledge,\nand implicit knowledge in systems.\nSmart clothing monitoring [148]\
    \ is a monitoring system improved with a machine-\nlearning algorithm for diagnostic\
    \ and predictive analytics of patients’ health conditions.\nTravel routing [149]\
    \ suggests the best travel routes, using analytical techniques for trafﬁc\nﬂow\
    \ prediction in order to predict future trafﬁc ﬂow. Chemical process monitoring\
    \ [150]\nuses predictions to provide quality monitoring and enhanced control systems\
    \ in plants to\nautomatically react and prescribe process improvements “to prevent\
    \ off-grade products”.\nSmart farming [151] applications discover relevant events\
    \ on semantically enriched data\nstreams from sensors related to two smart farming\
    \ scenarios. Moreover, on-shelf availabil-\nity [152] is a system that improves\
    \ shoppers’ experiences, forecasts demand and provides\ninsights on buyers’ behavior.\n\
    Siow et al. [114] emphasized similarities between knowledge hierarchy, which trans-\n\
    forms data to wisdom with analytical capabilities of IoE applications. Their study\
    \ formed\na comprehensive hierarchical classiﬁcation of analytic capabilities\
    \ (descriptive, diagnos-\ntic, discovery, predictive, and prescriptive), where\
    \ each level of the hierarchy lies in the\nprevious tier and relates to a corresponding\
    \ level of data-to-knowledge-wisdom hierar-\nchy approach. However, the study\
    \ neglected the characteristics of knowledge processes\nand combination of tacit\
    \ (from humans), explicit (sensed data), and implicit (analytics)\nknowledge,\
    \ which we consider to be the great impact for knowledge created from analytics\n\
    capabilities and value creation from intelligent services. We addressed this understanding\n\
    in the proposed knowledge-based IoE taxonomy, which characterizes knowledge sources\n\
    in terms of the smart services they provide, their characteristics, and how they\
    \ interact to\nprovide foresight: real-time data (explicit knowledge) combines\
    \ with models from learning\nsystems (implicit knowledge) to recommend action\
    \ (integrating tacit knowledge from\nhuman sensors).\nAdditionally, we used the\
    \ proposed IoE taxonomy to understand nine domains of\ncyber-physical systems\
    \ (CPS) [135]; the full results and details are available in a dataset\nwithin\
    \ a technical report [136]. In Table 3, we validated the IoE taxonomy in terms\
    \ of\nthe main characteristics of CPS applications [135]. CPS applications incorporate\
    \ physical\nSensors 2021, 21, 568\n27 of 35\nprocesses, highly networked computers,\
    \ machines, and robots to interact with the physical\nworld in an extremely integrated\
    \ and technical environment. They have a vital impact\non older people’s daily\
    \ lives, as well as on healthcare, agriculture, manufacturing, en-\nergy and critical\
    \ infrastructures, logistics, transport, security, and safety. In applications\n\
    that support older people’s daily lives, patient care services will improve their\
    \ quality.\nThey will beneﬁt from the combination of real-time data collected\
    \ from wearable sensors\nwith tacit knowledge from medical professionals and AI\
    \ from specialized task-oriented\nrobots. In healthcare application domains, robots\
    \ and humans will work together in a\nsmart medical environment, and diagnostic\
    \ processes based on evidence-supported results\nand treatments will be automated\
    \ and optimized. In agriculture, information mining and\ndecision-making patterns\
    \ will cause job losses as technologies replace human workers.\nEven though industries\
    \ will develop autonomous agricultural machines, this will create a\nniche for\
    \ high-skilled jobs.\nThe proposed knowledge-based taxonomy in the classiﬁcation\
    \ of CPS enablers,\nin many ways, will support a foundation to build integration\
    \ of tacit knowledge from\nhuman sensors in knowledge-intense applications applied\
    \ to cyber-physical environments\nsuch as in CPS.\nThe recognized value of tacit\
    \ knowledge from humans will emerge in highly trained\nskilled engineers who will\
    \ manage robots. In manufacturing, there will be an increasing\nincentive for\
    \ those who acquire digital skills to deal with a vast volume of real-time data\n\
    collected through sensors.\n6.2. Example of Classiﬁcation of One Application with\
    \ the Proposed Taxonomy\nTable 4 describes the classiﬁcation of a speciﬁc application\
    \ selected from Siow et al. [114]\nin accordance with the previously deﬁned taxonomy.\
    \ We selected the on-shelf availability\napplication [152] application due to\
    \ the diversity of its sensor types and knowledge sources.\nTable 4. Classiﬁcation\
    \ of IoE enablers of a speciﬁc industry domain application [114], according to\
    \ IoE proposed taxonomy\ncharacteristics.\nCategory/Dimension\nCharacteristics\
    \ of an industry domain application (on-shelf availability application [152])\n\
    Knowledge\nExplicitness\nTacit: shoppers’ experience, staff experience | Explicit:\
    \ enterprise point of sale (POS) systems and\ninventory systems |\nImplicit: algorithm\
    \ and models from learning systems\nStructure\nStructured: enterprise data| Semi-structured:\
    \ weather data, local events, and promotion details |\nUnstructured: real-time\
    \ sensor data\nTrust\nTrustful: data from enterprise systems | Untrustful: real-time\
    \ data from shoppers’ sensors\nOutcome\nComplements: Recommended action plans\
    \ | Substitutes: predictive analytics to provide insights\nAction\nAutomation:\
    \ stock business processes | Transformation: insights into buyers’ behavior\n\
    Type\nPresentation\nCyber: predictive analytics algorithm | Physical: cameras,\
    \ shoppers, staff of the store, light, infra-red,\nand RFID sensors | Cyber-Physical:\
    \ point of sale (POS) systems\nNature\nElectronic-based: video cameras, light,\
    \ infra-red, and RFID sensors | Software-based: point of sale (POS)\nsystems |\
    \ Human-based: shoppers, the staff of the store | Non-human-based: shoppers’ pets\n\
    Use\nWearables: shoppers’ mobile devices | Surroundables: video cameras, infra-red\
    \ sensors | Embeddable:\nlight, RFID sensors\nRole\nSensor: video cameras, light,\
    \ infra-red, and RFID sensors, shoppers, the staff of the store | Actuator: staff\n\
    of the store who restock products or actuators to rectify problems | sensor, and\
    \ actuator: staff of the store\nwho senses and executes recommended actions\n\
    Engagement\nOpportunistic: shoppers | Participatory: shoppers/staff of the store\n\
    Observation\nLocation\nCoarse-grained: supply chain context | Fine-grained: store\
    \ environment\nReach\nFull: supply chain context Partial: physical store environment\n\
    Mobility\nFixed: inside the store supply chain context | Mobile: shoppers’ mobile\
    \ devices\nTime\nPull: meta-data produced and sent to the cloud | Push: forecast\
    \ demands provided by systems\nMode\nSense: store sensor devices | Derive: information\
    \ derived from sensors |Manually provided: data\nprovides from shoppers’ demand\n\
    Capabilities\nCommunication\nConceptual communication: supports the execution\
    \ of recommended actions and provides a novel\nshopping experience\nProcessing\n\
    Cloud: metadata produced | Fog/Edge: Edge: video streams processed locally | Mobile\
    \ cloud: mobile\ndevices from shoppers\nStorage\nDevice-level: processing video\
    \ streams locally | Network level | Cluster level: metadata produced is\nsent\
    \ to the cloud\nSensors 2021, 21, 568\n28 of 35\nThe on-shelf availability application\
    \ [152] is an industry domain application [114] and\nrelates to a system that\
    \ beneﬁts customers’ experience by enhancing the on-shelf availability\nof products.\
    \ The system also seeks to forecast demand and provide insights into buyers’\n\
    behavior, with predictive analytics employed in business processes. It is composed\
    \ of an\neffective algorithm that beneﬁts from sensor data and provides a wide\
    \ scope for discovering\npatterns and trends. Real-time data from sensors provides\
    \ the relevant information to\nactuators (staff of the store) to immediately solve\
    \ problems like products being out of stock\non the shelves.\nOther sensors like\
    \ video cameras process video streams locally to provide the analysis\nof product\
    \ availability on the shelves. The information is conﬁrmed by other sensors (light\n\
    sensors, infra-red, and RFID sensors), and the data and metadata are sent to the\
    \ cloud to be\nprocessed. Other relevant information, such as weather data, local\
    \ events and commemo-\nrative dates, and promotion details, are analyzed and combined\
    \ with the current on-shelf\navailability of products to provide demand forecasting\
    \ and model buyer behavior [114].\nIn the cloud servers, real-time data are processed\
    \ and combined with models from learning\nsystems, data obtained from enterprise\
    \ Point of Sale systems, and inventory systems to\nrecommend action plans to maintain\
    \ the on-shelf availability of products. The store staff is\ninformed, and action\
    \ is taken to restock products and rectify business processes for quality\nimprovement.\
    \ While shopping, customers can take their pets to the pet store for bathing\n\
    and grooming, and they can use their mobile devices to monitor their pets via\
    \ a sensor on\nthe animal’s collar.\nThe classiﬁcation of the on-shelf availability\
    \ application using the proposed IoE tax-\nonomy highlighted the interdependencies\
    \ between knowledge characteristics, sensors,\nand observations, considering the\
    \ capabilities of available resources and expected out-\ncomes for a new buying\
    \ experience, such as insights for customers and business process\nimprovement\
    \ for suppliers.\nWith these elements, we deﬁned a common vocabulary that can\
    \ uncover existing and\nforthcoming application characteristics. The taxonomy\
    \ has the quality attribute of being\nconcise and having a limited number of dimensions,\
    \ restricted to what is relevant and\nunderstandable. Moreover, it is explanatory\
    \ enough to provide useful explanations and\nvaluable descriptions of the nature\
    \ of the exempliﬁed application selected.\n7. Conclusions\nThis work contributes\
    \ to the development of a knowledge-based taxonomy related\nto IoE applications,\
    \ which will guide both interested researchers in this ﬁeld, as well as\napplication\
    \ developers, in the design of knowledge-intensive IoE services.\nThe proposed\
    \ taxonomy is extendable: it allows for the inclusion of additional di-\nmensions\
    \ and new characteristics within the IoE paradigm and other emerging paradigms\n\
    under the IoE umbrella or concerned with intelligent network connections.\nThe\
    \ novel knowledge-based IoE taxonomy was revealed considering diverse ap-\nproaches\
    \ and main ﬁndings in 76 relevant works selected from the literature review of\
    \ IoT\nand IoE taxonomies, which provided guidelines and a comprehensive overview\
    \ of the topic.\nIn Table 2, we presented the analyzed studies’ adherence to our\
    \ proposed IoE taxonomy,\nwhich is proved to be the most comprehensive taxonomy\
    \ taking into consideration the\nother taxonomies compared.\nThe conceptual and\
    \ pragmatical validations aimed to show that the proposed taxon-\nomy involves\
    \ the qualitative attributes of robustness and comprehensiveness and contain\n\
    enough dimensions and characteristics to differentiate the objects of interest\
    \ from dis-\ntinct application domains clearly: cyber-physical systems (CPS) [135],\
    \ crowdsourcing\napplications [137–147], applications with analytics: [148–152],\
    \ as presented in Table 3.\nTo exemplify the orchestration of intelligence in\
    \ network connections concerning\nknowledge processes, type of IoE enablers, observation\
    \ characteristics, and technological\ncapabilities in IoE applications, Table\
    \ 4 presents the IoE enablers’ classiﬁcation and speciﬁc\nindustry domain application\
    \ [114], according to IoE proposed taxonomy characteristics.\nSensors 2021, 21,\
    \ 568\n29 of 35\nWith this study, we aimed to better understand the potential\
    \ in reshaping interactions\namong people and things in the IoE context, considering\
    \ a knowledge management per-\nspective. In future work, we will extend the research\
    \ and apply a quantitative assessment\nfor ranking knowledge of IoE enablers,\
    \ based on the hierarchical structure of the proposed\nIoE taxonomy.\nNevertheless,\
    \ in order to entirely understand the transformative potential of collab-\noration\
    \ between people and things in IoE applications, there is a research gap that\
    \ must\nbe overcome regarding insights into the characteristics of knowledge creation,\
    \ actions,\nand transformations provided by using IoE applications and the value\
    \ created from people\nand things in this context. Thus, we believe there is still\
    \ signiﬁcant room for future research\nand work on this topic.\nAuthor Contributions:\
    \ Conceptualization, V.C.F.d.C.; methodology, V.C.F.d.C., L.O. and J.d.S.;\nvalidation,\
    \ V.C.F.d.C., L.O. and J.d.S.; formal analysis, V.C.F.d.C., L.O. and J.d.S.; investigation,\n\
    V.C.F.d.C.; writing—original draft preparation, V.C.F.d.C.; writing—review and\
    \ editing, V.C.F.d.C.,\nL.O. and J.d.S.; supervision, V.C.F.d.C., L.O. and J.d.S.;\
    \ project administration, J.d.S.; funding acquisi-\ntion, J.d.S. All authors have\
    \ read and agreed to the published version of the manuscript.\nFunding: The work\
    \ of J. de Souza was supported in part by the Brazilian Research Council (CNPq)\n\
    under Research Grant #311865/2017-8.\nData Availability Statement: Not applicable.\n\
    Conﬂicts of Interest: The authors declare no conﬂict of interest.\nReferences\n\
    1.\nEvans, D. The Internet of Everything: How More Relevant and Valuable Connections\
    \ Will Change the World. Available\nonline: https://www.cisco.com/web/about/ac79/docs/innov/IoE.pdf.comiweb/aboutlac79/docs/innov/IoE.pdf\
    \ (accessed\non 8 September 2020).\n2.\nCharmonman, S.; Mongkhonvanit, P. Special\
    \ Consideration for Big Data in IoE or Internet of Everything. In Proceedings\
    \ of the\n13th International Conference on ICT and Knowledge Engineering (ICT\
    \ and Knowledge Engineering 2015), Bangkok, Thailand,\n18–20 November 2015; pp.\
    \ 147–150.\n3.\nYu, J.; Kwon, S.; Kang, H.; Kim, S.; Bae, J.; Pyo, C. A Framework\
    \ on Semantic Thing Retrieval Method in IoT and IoE Environment.\nIn Proceedings\
    \ of the International Conference on Platform Technology and Service, Jeju, Korea,\
    \ 29–31 January 2018; pp. 1–6.\n4.\nAuger, A.; Exposito, E.; Lochin, E. Towards\
    \ the Internet of Everything: Deployment Scenarios for a QoO-Aware Integration\n\
    Platform. In Proceedings of the IEEE 4th World Forum Internet Things, Singapore,\
    \ 5–8 February 2018; pp. 499–504.\n5.\nXu, G.; Shi, Y.; Sun, X.; Shen, W. Internet\
    \ of Things in Marine Environment Monitoring: A Review. Sensors 2019, 19, 1711.\n\
    [CrossRef] [PubMed]\n6.\nSrinivas, K.; Jabbar, M.A.; Neeraja, K.S. Sensors in\
    \ IoE: A Review. Int. J. Eng. Technol. 2018, 7, 158. [CrossRef]\n7.\nDi Martino,\
    \ B.; Li, K.-C.; Yang, L.T.; Esposito, A. Internet of Everything: Algorithms,\
    \ Methodologies, Technologies and Perspectives;\nSpringer: Singapore, 2018; ISBN\
    \ 978-981-10-5860-8.\n8.\nVaya, D.; Hadpawat, T. Internet of Everything (IoE):\
    \ A New Era of IoT. In ICCCE 2019; Lecture Notes in Electrical Engineering;\n\
    Springer: Singapore, 2020; Volume 570, pp. 1–6.\n9.\nBojanova, I.; Hurlburt, G.;\
    \ Voas, J. Imagineering an Internet of Anything. Computer—IEEE Comput. Soc. 2014,\
    \ 47, 72–77. [CrossRef]\n10.\nFiaidhi, J.; Mohammed, S. Internet of Everything\
    \ as a Platform for Extreme Automation. IT Prof. 2019, 21, 21–25. [CrossRef]\n\
    11.\nMiraz, M.H.; Ali, M.; Excell, P.S.; Picking, R. Internet of Nano-Things,\
    \ Things and Everything: Future Growth Trends. Future\nInternet 2018, 10, 68.\
    \ [CrossRef]\n12.\nSrinivasan, C.R.; Rajesh, B.; Saikalyan, P.; Premsagar, K.;\
    \ Yadav, E.S. A Review on the Different Types of Internet of Things (IoT).\nJ.\
    \ Adv. Res. Dyn. Control Syst. 2019, 11, 6.\n13.\nRaj, A.; Prakash, S. Internet\
    \ of Everything: A Survey Based on Architecture, Issues and Challenges. In Proceedings\
    \ of the 5th\nIEEE Uttar Pradesh Section International Conference on Electrical,\
    \ Electronics and Computer Engineering, Gorakhpur, India,\n2–4 November 2018;\
    \ pp. 1–6.\n14.\nGhosh, A.; Chakraborty, D.; Law, A. Artiﬁcial Intelligence in\
    \ Internet of Things. CAAI Trans. Intell. Technol. 2018, 3, 208–218.\n[CrossRef]\n\
    15.\nLangley, D.J.; van Doorn, J.; Ng, I.C.L.; Stieglitz, S.; Lazovik, A.; Boonstra,\
    \ A. The Internet of Everything: Smart Things and Their\nImpact on Business Models.\
    \ J. Bus. Res. 2020, 122, 853–863. [CrossRef]\n16.\nMiraz, M.H.; Ali, M.; Excell,\
    \ P.S.; Picking, R. A Review on Internet of Things (IoT), Internet of Everything\
    \ (IoE) and Internet\nof Nano Things (IoNT). In Proceedings of the Internet Technologies\
    \ and Applications, Wrexham, UK, 8–11 September 2015;\npp. 219–224.\nSensors 2021,\
    \ 21, 568\n30 of 35\n17.\nMasoud, M.; Jaradat, Y.; Manasrah, A.; Jannoud, I. Sensors\
    \ of Smart Devices in the Internet of Everything (IoE) Era: Big\nOpportunities\
    \ and Massive Doubts. J. Sens. 2019, 2019, 1–26. [CrossRef]\n18.\nVandebroek,\
    \ S.V. 1, 2 Three Pillars Enabling the Internet of Everything: Smart Everyday\
    \ Objects Information-Centric Networks,\nand Automated Real-Time Insights. In\
    \ Proceedings of the IEEE International Solid-State Circuits Conference, San Francisco,\
    \ CA,\nUSA, 31 January–4 February 2016; pp. 14–20.\n19.\nMajeed, A. Developing\
    \ Countries and Internet-of-Everything (IoE). In Proceedings of the IEEE 7th Annual\
    \ Computing and\nCommunication Workshop and Conference, Las Vegas, NV, USA, 9–11\
    \ January 2017; pp. 1–4.\n20.\nNonaka, I.; Toyama, R. The Knowledge-Creating Theory\
    \ Revisited: Knowledge Creation as a Synthesizing Process. In The\nEssentials\
    \ of Knowledge Management; Palgrave Macmillan: London, UK, 2015; pp. 95–110.\n\
    21.\nDi Martino, B.; Li, K.-C.; Yang, L.T.; Esposito, A. Trends and Strategic\
    \ Researches in Internet of Everything. In Internet of\nEverything; Internet of\
    \ Things; Di Martino, B., Li, K.-C., Yang, L.T., Esposito, A., Eds.; Springer:\
    \ Singapore, 2018; pp. 1–12.\nISBN 978-981-10-5860-8.\n22.\nRoy, S.; Chowdhury,\
    \ C. Integration of Internet of Everything (IoE) with Cloud. In Beyond the Internet\
    \ of Things; Internet of Things;\nBatalla, J.M., Mastorakis, G., Mavromoustakis,\
    \ C.X., Pallis, E., Eds.; Springer International Publishing: Cham, Germany, 2017;\n\
    pp. 199–222. ISBN 978-3-319-50756-9.\n23.\nJennex, M.E. Big Data, the Internet\
    \ of Things, and the Revised Knowledge Pyramid. SIGMIS Database 2017, 48, 69–79.\
    \ [CrossRef]\n24.\nAlkhabbas, F.; Spalazzese, R.; Davidsson, P. Characterizing\
    \ Internet of Things Systems through Taxonomies: A Systematic\nMapping Study.\
    \ Internet Things 2019, 7, 100084. [CrossRef]\n25.\nYaqoob, I.; Ahmed, E.; Hashem,\
    \ I.A.T.; Ahmed, A.I.A.; Gani, A.; Imran, M.; Guizani, M. Internet of Things Architecture:\
    \ Recent\nAdvances, Taxonomy, Requirements, and Open Challenges. IEEE Wirel. Commun.\
    \ 2017, 24, 10–16. [CrossRef]\n26.\nMountrouidou, X.; Billings, B.; Mejia-Ricart,\
    \ L. Not Just Another Internet of Things Taxonomy: A Method for Validation of\n\
    Taxonomies. Internet Things 2019, 6, 100049. [CrossRef]\n27.\nNoura, M.; Atiquzzaman,\
    \ M.; Gaedke, M. Interoperability in Internet of Things: Taxonomies and Open Challenges.\
    \ Mob. Netw.\nAppl. 2019, 24, 796–809. [CrossRef]\n28.\nEris, O.; Drury, J.; Ercolini,\
    \ D. A Collaboration-Focused Taxonomy of the Internet of Things. In Proceedings\
    \ of the IEEE 2nd\nWorld Forum on Internet of Things, Milan, Italy, 14–16 December\
    \ 2015; pp. 29–34.\n29.\nSmutný, P. Different Perspectives on Classiﬁcation of\
    \ the Internet of Things. In Proceedings of the 17th International Carpathian\n\
    Control Conference, Tatranska Lomnica, Slovakia, 29 May–1 June 2016; pp. 692–696.\n\
    30.\nSinche, S.; Raposo, D.; Armando, N.; Rodrigues, A.; Boavida, F.; Pereira,\
    \ V.; Silva, J.S. A Survey of IoT Management Protocols and\nFrameworks. IEEE Commun.\
    \ Surv. Tutor. 2019, 22, 1168–1190. [CrossRef]\n31.\nYounis, M. Internet of Everything\
    \ and Everybody: Architecture and Service Virtualization. Comput. Commun. 2018,\
    \ 131, 66–72.\n[CrossRef]\n32.\nNezami, Z.; Zamanifar, K. Internet of Things/Internet\
    \ of Everything: Structure and Ingredients. IEEE Potentials 2019, 38, 12–17.\n\
    [CrossRef]\n33.\nAl-Emran, M.; Mezhuyev, V.; Kamaludin, A.; Shaalan, K. The Impact\
    \ of Knowledge Management Processes on Information\nSystems: A Systematic Review.\
    \ Int. J. Inf. Manag. 2018, 43, 173–187. [CrossRef]\n34.\nPhilip, J. An Application\
    \ of the Dynamic Knowledge Creation Model in Big Data. Technol. Soc. 2018, 54,\
    \ 120–127. [CrossRef]\n35.\nHaller, S.; Serbanati, A.; Bauer, M.; Carrez, F. A\
    \ Domain Model for the Internet of Things. In Proceedings of the IEEE International\n\
    Conference on Green Computing and Communications and IEEE Internet of Things and\
    \ IEEE Cyber, Physical and Social\nComputing, Beijing, China, 20–23 August 2013;\
    \ pp. 411–417.\n36.\nPerera, C.; Zaslavsky, A.; Christen, P.; Georgakopoulos,\
    \ D. Context Aware Computing for The Internet of Things: A Survey. IEEE\nCommun.\
    \ Surv. Tutor. 2014, 16, 414–454. [CrossRef]\n37.\nHaron, N.; Jaafar, J.; Aziz,\
    \ I.A.; Hassan, M.H.; Shapiai, M.I. Data Trustworthiness in Internet of Things:\
    \ A Taxonomy and\nFuture Directions. In Proceedings of the IEEE Conference on\
    \ Big Data and Analytics, Kuching, Malaysia, 16–17 November 2017;\npp. 25–30.\n\
    38.\nGluhak, A.; Krco, S.; Nati, M.; Pﬁsterer, D.; Mitton, N.; Razaﬁndralambo,\
    \ T. A Survey on Facilities for Experimental Internet of\nThings Research. IEEE\
    \ Commun. Mag. 2011, 49, 58–67. [CrossRef]\n39.\nBellavista, P.; Berrocal, J.\
    \ A Survey on Fog Computing for the Internet of Things. Pervasive Mob. Comput.\
    \ 2019, 52, 71–99.\n[CrossRef]\n40.\nMarjani, M.; Nasaruddin, F.; Gani, A.; Karim,\
    \ A.; Hashem, I.A.T.; Siddiqa, A.; Yaqoob, I. Big IoT Data Analytics: Architecture,\n\
    Opportunities, and Open Research Challenges. IEEE Access 2017, 5, 5247–5261.\n\
    41.\nShahid, N.; Aneja, S. Internet of Things: Vision, Application Areas and Research\
    \ Challenges. In Proceedings of the International\nConference on I-SMAC (IoT in\
    \ Social, Mobile, Analytics and Cloud), Palladam, India, 10–11 February 2017;\
    \ pp. 583–587.\n42.\nObinikpo, A.A.; Kantarci, B. Big Sensed Data Meets Deep Learning\
    \ for Smarter Health Care in Smart Cities. J. Sens. Actuator Netw.\n2017, 6, 26.\
    \ [CrossRef]\n43.\nBhatt, S.; Patwa, F.; Sandhu, R. An Access Control Framework\
    \ for Cloud-Enabled Wearable Internet of Things. In Proceedings\nof the IEEE 3rd\
    \ International Conference on Collaboration and Internet Computing, San Jose,\
    \ CA, USA, 15–17 October 2017;\npp. 328–338.\nSensors 2021, 21, 568\n31 of 35\n\
    44.\nDorsemaine, B.; Gaulier, J.; Wary, J.; Kheir, N.; Urien, P. Internet of Things:\
    \ A Deﬁnition & Taxonomy. In Proceedings of the 9th\nInternational Conference\
    \ on Next Generation Mobile Applications, Services and Technologies, Cambridge,\
    \ UK, 9–11 September\n2015; pp. 72–77.\n45.\nFortino, G.; Rovella, A.; Russo,\
    \ W.; Savaglio, C. On the Classiﬁcation of Cyberphysical Smart Objects in the\
    \ Internet of Things.\nIn Proceedings of the International Workshop on Networks\
    \ of Cooperating Objects for Smart Cities 2014 (UBICITEC 2014), Berlin,\nGermany,\
    \ 14 April 2014; Volume 1156, pp. 86–94.\n46.\nChen, C.; Helal, S. A Device-Centric\
    \ Approach to a Safer Internet of Things. In Proceedings of the International\
    \ Workshop on\nNetworking and Object Memories for the Internet of Things, Beijing,\
    \ China, 18 September 2011; pp. 1–6.\n47.\nSholla, S.; Naaz, R.; Chishti, M.A.\
    \ Ethics Aware Object Oriented Smart City Architecture. China Commun. 2017, 14,\
    \ 160–173.\n[CrossRef]\n48.\nSethi, P.; Sarangi, S.R. Internet of Things: Architectures,\
    \ Protocols, and Applications. J. Electr. Comput. Eng. 2017, 2017, 1–25.\n[CrossRef]\n\
    49.\nAsghari, P.; Rahmani, A.M.; Javadi, H.H.S. Service Composition Approaches\
    \ in IoT: A Systematic Review. J. Netw. Comput. Appl.\n2018, 120, 61–77. [CrossRef]\n\
    50.\nBugeja, J.; Davidsson, P.; Jacobsson, A. Functional Classiﬁcation and Quantitative\
    \ Analysis of Smart Connected Home Devices.\nIn Proceedings of the Global Internet\
    \ of Things Summit, Bilbao, Spain, 4–6 June 2018; pp. 1–6.\n51.\nOberländer, A.M.;\
    \ Röglinger, M.; Rosemann, M.; Kees, A. Conceptualizing Business-to-Thing Interactions—A\
    \ Sociomaterial\nPerspective on the Internet of Things. Eur. J. Inf. Syst. 2018,\
    \ 27, 486–502. [CrossRef]\n52.\nBamgboye, O.; Liu, X.; Cruickshank, P. Towards\
    \ Modelling and Reasoning About Uncertain Data of Sensor Measurements for\nDecision\
    \ Support in Smart Spaces. In Proceedings of the IEEE 42nd Annual Computer Software\
    \ and Applications Conference,\nTokyo, Japan, 23–27 July 2018; pp. 744–749.\n\
    53.\nAshraf, Q.M.; Habaebi, M.H. Autonomic Schemes for Threat Mitigation in Internet\
    \ of Things. J. Netw. Comput. Appl. 2015, 49,\n112–127. [CrossRef]\n54.\nKotis,\
    \ K.; Athanasakis, I.; Vouros, G.A. Semantically Enabling IoT Trust to Ensure\
    \ and Secure Deployment of IoT Entities. Int. J.\nInternet Things Cyber-Assur.\
    \ 2018, 1, 3–21. [CrossRef]\n55.\nAlsamani, B.; Lahza, H. A Taxonomy of IoT: Security\
    \ and Privacy Threats. In Proceedings of the International Conference on\nInformation\
    \ and Computer Technologies, DeKalb, IL, USA, 23–25 March 2018; pp. 72–77.\n56.\n\
    Zhang, J.; Chen, B.; Zhao, Y.; Cheng, X.; Hu, F. Data Security and Privacy-Preserving\
    \ in Edge Computing Paradigm: Survey and\nOpen Issues. IEEE Access 2018, 6, 18209–18237.\
    \ [CrossRef]\n57.\nOteafy, S.M.A.; Hassanein, H.S. Leveraging Tactile Internet\
    \ Cognizance and Operation via IoT and Edge Technologies. Proc. IEEE\n2019, 107,\
    \ 364–375. [CrossRef]\n58.\nThota, C.; Mavromoustakis, C.X.; Mastorakis, G.; Batalla,\
    \ J. Internet of Everything: A Survey on Technologies, Challenges,\nand Applications.\
    \ In Cloud and Fog Computing in 5G Mobile Networks: Emerging Advances and Applications;\
    \ The Institution of\nEngineering and Technology: Stevenage, UK, 2017; pp. 211–238.\
    \ [CrossRef]\n59.\nNaha, R.K.; Garg, S.; Georgakopoulos, D.; Jayaraman, P.P.;\
    \ Gao, L.; Xiang, Y.; Ranjan, R. Fog Computing: Survey of Trends,\nArchitectures,\
    \ Requirements, and Research Directions. IEEE Access 2018, 6, 47980–48009. [CrossRef]\n\
    60.\nHassan, N.; Gillani, S.; Ahmed, E.; Yaqoob, I.; Imran, M. The Role of Edge\
    \ Computing in Internet of Things. IEEE Commun. Mag.\n2018, 56, 110–115. [CrossRef]\n\
    61.\nAhad, A.; Tahir, M.; Yau, K.-L.A. 5G-Based Smart Healthcare Network: Architecture,\
    \ Taxonomy, Challenges and Future Research\nDirections. IEEE Access 2019, 7, 100747–100762.\
    \ [CrossRef]\n62.\nArmando, N.; Rodrigues, A.; Pereira, V.; Sá Silva, J.; Boavida,\
    \ F. An Outlook on Physical and Virtual Sensors for a Socially\nInteractive Internet.\
    \ Sensors 2018, 18, 2578. [CrossRef]\n63.\nHui, T.K.L.; Sherratt, R.S. Towards\
    \ Disappearing User Interfaces for Ubiquitous Computing: Human Enhancement from\
    \ Sixth\nSense to Super Senses. J. Ambient. Intell. Humaniz. Comput. 2017, 8,\
    \ 449–465. [CrossRef]\n64.\nYebda, T.; Benois-Pineau, J.; Amieva, H.; Frolicher,\
    \ B. Multi-Sensing of Fragile Persons for Risk Situation Detection: Devices,\n\
    Methods, Challenges. In Proceedings of the International Conference on Content-Based\
    \ Multimedia Indexing, Dublin, Ireland,\n4–6 September 2019; pp. 1–6.\n65.\nPhuttharak,\
    \ J.; Loke, S.W. A Review of Mobile Crowdsourcing Architectures and Challenges:\
    \ Toward Crowd-Empowered\nInternet-of-Things. IEEE Access 2019, 7, 304–324. [CrossRef]\n\
    66.\nChaochaisit, W.; Bessho, M.; Koshizuka, N.; Sakamura, K. Human Localization\
    \ Sensor Ontology: Enabling OWL 2 DL-Based\nSearch for User’s Location-Aware Sensors\
    \ in the IoT. In Proceedings of the IEEE Tenth International Conference on Semantic\n\
    Computing, Laguna Hills, CA, USA, 4–6 February 2016; pp. 107–111.\n67.\nSalim,\
    \ F.; Haque, U. Urban Computing in the Wild: A Survey on Large Scale Participation\
    \ and Citizen Engagement with\nUbiquitous Computing, Cyber Physical Systems, and\
    \ Internet of Things. Int. J. Hum. Comput. Stud. 2015, 81, 31–48. [CrossRef]\n\
    68.\nBisdikian, C.; Kaplan, L.M.; Srivastava, M.B. On the Quality and Value of\
    \ Information in Sensor Networks. ACM Trans. Sen. Netw.\n2013, 9, 1–26. [CrossRef]\n\
    69.\nShah, S.A.; Seker, D.Z.; Hameed, S.; Draheim, D. The Rising Role of Big Data\
    \ Analytics and IoT in Disaster Management: Recent\nAdvances, Taxonomy and Prospects.\
    \ IEEE Access 2019, 7, 54595–54614. [CrossRef]\nSensors 2021, 21, 568\n32 of 35\n\
    70.\nRistoski, P.; Paulheim, H. Semantic Web in Data Mining and Knowledge Discovery:\
    \ A Comprehensive Survey. J. Web Semant.\n2016, 36, 1–22. [CrossRef]\n71.\nQanbari,\
    \ S.; Behinaein, N.; Rahimzadeh, R.; Dustdar, S. Gatica: Linked Sensed Data Enrichment\
    \ and Analytics Middleware\nfor IoT Gateways. In Proceedings of the 3rd International\
    \ Conference on Future Internet of Things and Cloud, Rome, Italy,\n24–26 August\
    \ 2015; pp. 38–43.\n72.\nRozsa, V.; Denisczwicz, M.; Dutra, M.; Ghodous, P.; Silva,\
    \ C.F.D.; Moayeri, N.; Biennier, F.; Figay, N. An Application Domain-\nBased Taxonomy\
    \ for IoT Sensors. In Transdisciplinary Engineering: Crossing Boundaries, Proceedings\
    \ of the 23rd ISPE International\nConference on Transdisciplinary Engineering:\
    \ Crossing Boundaries, Curitiba, Brazil, 3–7 October 2016; IOS Press BV: Amsterdam,\n\
    The Netherlands, 2016; Volume 4, pp. 249–258.\n73.\nYaqoob, I.; Hashem, I.A.T.;\
    \ Gani, A.; Mokhtar, S.; Ahmed, E.; Anuar, N.B.; Vasilakos, A.V. Big Data: From\
    \ Beginning to Future.\nInt. J. Inf. Manag. 2016, 36, 1231–1247. [CrossRef]\n\
    74.\nGao, J.; Lei, L.; Yu, S. Big Data Sensing and Service: A Tutorial. In Proceedings\
    \ of the IEEE First International Conference on Big\nData Computing Service and\
    \ Applications, Redwood City, CA, USA, 30 March–2 April 2015; pp. 79–88.\n75.\n\
    Subbu, K.P.; Vasilakos, A.V. Big Data for Context Aware Computing—Perspectives\
    \ and Challenges. Big Data Res. 2017, 10, 33–43.\n[CrossRef]\n76.\nGe, M.; Bangui,\
    \ H.; Buhnova, B. Big Data for Internet of Things: A Survey. Future Gener. Comput.\
    \ Syst. 2018, 87, 601–614.\n[CrossRef]\n77.\nMoustaka, V.; Vakali, A.; Anthopoulos,\
    \ L.G. A Systematic Review for Smart City Data Analytics. ACM Comput. Surv. 2018,\
    \ 51,\n1–41. [CrossRef]\n78.\nKotis, K.; Katasonov, A. Semantic Interoperability\
    \ on the Internet of Things: The Semantic Smart Gateway Framework. Int. J.\nDistrib.\
    \ Syst. Technol. 2013, 4, 47–69. [CrossRef]\n79.\nAgarwal, R.; Fernandez, D.G.;\
    \ Elsaleh, T.; Gyrard, A.; Lanza, J.; Sanchez, L.; Georgantas, N.; Issarny, V.\
    \ Uniﬁed IoT Ontology to\nEnable Interoperability and Federation of Testbeds.\
    \ In Proceedings of the IEEE 3rd World Forum on Internet of Things, Reston,\n\
    VA, USA, 12–14 December 2016; pp. 70–75.\n80.\nShit, R.C.; Sharma, S.; Puthal,\
    \ D.; Zomaya, A.Y. Location of Things (LoT): A Review and Taxonomy of Sensors\
    \ Localization in IoT\nInfrastructure. IEEE Commun. Surv. Tutor. 2018, 20, 2028–2061.\
    \ [CrossRef]\n81.\nSaad, E.; Elhosseini, M.; Haikal, A.Y. Recent Achievements\
    \ in Sensor Localization Algorithms. Alex. Eng. J. 2018, 57, 4219–4228.\n[CrossRef]\n\
    82.\nPozza, R.; Nati, M.; Georgoulas, S.; Moessner, K.; Gluhak, A. Neighbor Discovery\
    \ for Opportunistic Networking in Internet of\nThings Scenarios: A Survey. IEEE\
    \ Access 2015, 3, 1101–1131. [CrossRef]\n83.\nBerger, S.; Denner, M.-S.; Röglinger,\
    \ M. The Nature of Digital Technologies—Development of a Multi-Layer Taxonomy.\
    \ In Pro-\nceedings of the Twenty-Sixth European Conference on Information Systems,\
    \ Portsmouth, UK, 23–28 June 2018; pp. 1–19.\n84.\nSahinel, D.; Akpolat, C.; Gorur,\
    \ O.C.; Sivrikaya, F. Integration of Human Actors in IoT and CPS Landscape. In\
    \ Proceedings of the\nIEEE 5th World Forum on Internet of Things, Limerick, Ireland,\
    \ 15–18 April 2019; pp. 485–490.\n85.\nGutwin, C.; Greenberg, S. The importance\
    \ of awareness for team cognition in distributed collaboration. In Team Cognition:\n\
    Understanding the Factors That Drive Process and Performance; Salas, E., Fiore,\
    \ S.M., Eds.; American Psychological Association:\nWashington, DC, USA, 2004;\
    \ pp. 177–201. ISBN 978-1-59147-103-5.\n86.\nRho, S.; Chen, Y. Social Internet\
    \ of Things: Applications, Architectures and Protocols. Future Gener. Comput.\
    \ Syst. 2018, 82,\n667–668. [CrossRef]\n87.\nEdwards, J.S. The Essentials of Knowledge\
    \ Management; Palgrave Macmillan: London, UK, 2015; ISBN 978-1-349-57523-7.\n\
    88.\nNickerson, R.C.; Varshney, U.; Muntermann, J. A Method for Taxonomy Development\
    \ and Its Application in Information Systems.\nEur. J. Inf. Syst. 2013, 22, 336–359.\
    \ [CrossRef]\n89.\nKitchenham, B.; Pretorius, R.; Budgen, D.; Pearl Brereton,\
    \ O.; Turner, M.; Niazi, M.; Linkman, S. Systematic Literature Reviews in\nSoftware\
    \ Engineering—A Tertiary Study. Inf. Softw. Technol. 2010, 52, 792–805. [CrossRef]\n\
    90.\nKotis, K.I.; Vouros, G.A.; Spiliotopoulos, D. Ontology Engineering Methodologies\
    \ for the Evolution of Living and Reused\nOntologies: Status, Trends, Findings\
    \ and Recommendations. Knowl. Eng. Rev. 2020, 35. [CrossRef]\n91.\nBajaj, G.;\
    \ Agarwal, R.; Singh, P.; Georgantas, N.; Issarny, V. 4W1H in IoT Semantics. IEEE\
    \ Access 2018, 6, 65488–65506. [CrossRef]\n92.\nBajaj, G.; Agarwal, R.; Singh,\
    \ P.; Georgantas, N.; Issarny, V. A Study of Existing Ontologies in the IoT-Domain.\
    \ arXiv 2017,\narXiv:1707.00112, 1–24.\n93.\nDe Matos, E.; Amaral, L.A.; Hessel,\
    \ F. Context-Aware Systems: Technologies and Challenges in Internet of Everything\
    \ Environ-\nments. In Beyond the Internet of Things; Internet of Things; Batalla,\
    \ J.M., Mastorakis, G., Mavromoustakis, C.X., Pallis, E., Eds.;\nSpringer International\
    \ Publishing: Cham, Germany, 2017; pp. 1–25. ISBN 978-3-319-50756-9.\n94.\nUr\
    \ Rehman, M.H.; Liew, C.S.; Wah, T.Y.; Khan, M.K. Towards Next-Generation Heterogeneous\
    \ Mobile Data Stream Mining\nApplications: Opportunities, Challenges, and Future\
    \ Research Directions. J. Netw. Comput. Appl. 2017, 79, 1–24. [CrossRef]\n95.\n\
    Bonte, P.; Tommasini, R.; De Turck, F.; Ongenae, F.; Valle, E.D. C-Sprite: Efﬁcient\
    \ Hierarchical Reasoning for Rapid RDF Stream\nProcessing. In Proceedings of the\
    \ 13th ACM International Conference on Distributed and Event-based Systems—DEBS\
    \ ’19,\nDarmstadt, Germany, 24–28 June 2019; pp. 103–114.\n96.\nPrat, N. A Hierarchical\
    \ Model for Knowledge Management. In Encyclopedia of Knowledge Management; IGI\
    \ Global: Hershey, PA,\nUSA, 2011; pp. 376–388. ISBN 978-1-59904-931-1.\nSensors\
    \ 2021, 21, 568\n33 of 35\n97.\nEin-Dor, P. Taxonomies of Knowledge. In Encyclopedia\
    \ of Knowledge Management, 2nd ed.; IGI Global: Hershey, PA, USA, 2011;\npp. 1490–1499.\n\
    98.\nPerera, C.; Vasilakos, A.V. A Knowledge-Based Resource Discovery for Internet\
    \ of Things. Knowledge-Based Syst. 2016, 109,\n122–136. [CrossRef]\n99.\nMahdavinejad,\
    \ M.; Rezvan, M.; Barekatain, M. Machine Learning for Internet of Things Data\
    \ Analysis: A Survey. Digit. Commun.\nNetw. 2018, 4, 161–175. [CrossRef]\n100.\
    \ Grant, J.; Parisi, F. Logic and Knowledge Bases. In Encyclopedia of Knowledge\
    \ Management, 2nd ed.; Schwartz, D., Ed.; IGI Global:\nHershey, PA, USA, 2010;\
    \ ISBN 978-1-59904-931-1.\n101. Höller, J.; Tsiatsis, V.; Mulligan, C. Toward\
    \ a Machine Intelligence Layer for Diverse Industrial IoT Use Cases. IEEE Intell.\
    \ Syst.\n2017, 32, 64–71. [CrossRef]\n102. Ruta, M.; Scioscia, F.; Loseto, G.;\
    \ Pinto, A.; Di Sciascio, E. Machine Learning in the Internet of Things: A Semantic-Enhanced\n\
    Approach. Semant. Web 2018, 10, 183–204. [CrossRef]\n103. Damiani, E. Toward Big\
    \ Data Risk Analysis. In Proceedings of the IEEE International Conference on Big\
    \ Data, Santa Clara, CA,\nUSA, 29 October–1 November 2015; pp. 1905–1909.\n104.\
    \ Pal, D.; Vanijja, V.; Varadarajan, V. Quality Provisioning in the Internet of\
    \ Things Era: Current State and Future Directions.\nIn Proceedings of the 10th\
    \ International Conference on Advances in Information Technology, Bangkok, Thailand,\
    \ 10–13 December\n2018; pp. 1–7.\n105. Mohamed, A.; Najafabadi, M.K.; Wah, Y.B.;\
    \ Zaman, E.A.K.; Maskat, R. The State of the Art and Taxonomy of Big Data Analytics:\n\
    View from New Big Data Framework. Artif. Intell. Rev. 2019. [CrossRef]\n106. Atat,\
    \ R.; Liu, L.; Wu, J.; Li, G.; Ye, C.; Yang, Y. Big Data Meet Cyber-Physical Systems:\
    \ A Panoramic Survey. IEEE Access 2018, 6,\n73603–73636. [CrossRef]\n107. Cai,\
    \ S.; Gallina, B.; Nyström, D.; Seceleanu, C. Data Aggregation Processes: A Survey,\
    \ a Taxonomy, and Design Guidelines.\nComputing 2018, 1–33. [CrossRef]\n108. Jing,\
    \ Q.; Vasilakos, A.V.; Wan, J.; Lu, J.; Qiu, D. Security of the Internet of Things:\
    \ Perspectives and Challenges. Wirel. Netw. 2014,\n20, 2481–2501. [CrossRef]\n\
    109. Asghari, P.; Rahmani, A.M.; Javadi, H.H.S. Internet of Things Applications:\
    \ A Systematic Review. Comput. Netw. 2019, 148,\n241–261. [CrossRef]\n110. Barker,\
    \ L.; White, M.; Patoli, Z.; Huggins, B.; Pascu, T.; Curran, M.; Beloff, N. Taxonomy\
    \ for Internet of Things—Tools for\nMonitoring Personal Effects. In Proceedings\
    \ of the 4th International Conference on Pervasive and Embedded Computing and\n\
    Communication Systems, Lisbon, Portugal, 7–9 January 2014; Volume 1, pp. 67–71.\n\
    111. Botta, A.; de Donato, W.; Persico, V.; Pescapé, A. Integration of Cloud Computing\
    \ and Internet of Things: A Survey. Future Gener.\nComput. Syst. 2016, 56, 684–700.\
    \ [CrossRef]\n112. Neshenko, N.; Bou-Harb, E.; Crichigno, J.; Kaddoum, G.; Ghani,\
    \ N. Demystifying IoT Security: An Exhaustive Survey on IoT\nVulnerabilities and\
    \ a First Empirical Look on Internet-Scale IoT Exploitations. IEEE Commun. Surv.\
    \ Tutor. 2019, 21, 2702–2733.\n[CrossRef]\n113. Boyes, H.; Hallaq, B.; Cunningham,\
    \ J.; Watson, T. The Industrial Internet of Things (IIoT): An Analysis Framework.\
    \ Comput. Ind.\n2018, 101, 1–12. [CrossRef]\n114. Siow, E.; Tiropanis, T.; Hall,\
    \ W. Analytics for the Internet of Things: A Survey. ACM Comput. Surv. 2018, 51,\
    \ 1–36. [CrossRef]\n115. Chellappan, V.; Sivalingam, K.M. Security and privacy\
    \ in the Internet of Things. In Internet of Things—Principles and Paradigms;\n\
    Morgan Kaufmann: Burlington, MA, USA, 2016; pp. 183–200. ISBN 978-0-12-805395-9.\n\
    116. Abbas, N.; Zhang, Y.; Taherkordi, A.; Skeie, T. Mobile Edge Computing: A\
    \ Survey. IEEE Internet Things J. 2018, 5, 450–465.\n[CrossRef]\n117. Russell,\
    \ S.J.; Norvig, P.; Davis, E. Artiﬁcial Intelligence: A Modern Approach, 3rd ed.;\
    \ Prentice Hall Series in Artiﬁcial Intelligence;\nPrentice Hall: Upper Saddle\
    \ River, NJ, USA, 2016; ISBN 978-0-13-604259-4.\n118. Ahmed, E.; Yaqoob, I.; Gani,\
    \ A.; Imran, M.; Guizani, M. Internet-of-Things-Based Smart Environments: State\
    \ of the Art, Taxonomy,\nand Open Research Challenges. IEEE Wirel. Commun. 2016,\
    \ 23, 10–16. [CrossRef]\n119. Compton, M.; Barnaghi, P.; Bermudez, L.; García-Castro,\
    \ R.; Corcho, O.; Cox, S.; Graybeal, J.; Hauswirth, M.; Henson, C.; Herzog,\n\
    A.; et al. The SSN Ontology of the W3C Semantic Sensor Network Incubator Group.\
    \ J. Web Semant. 2012, 17, 25–32. [CrossRef]\n120. Montori, F.; Jayaraman, P.P.;\
    \ Yavari, A.; Hassani, A.; Georgakopoulos, D. The Curse of Sensing: Survey of\
    \ Techniques and\nChallenges to Cope with Sparse and Dense Data in Mobile Crowd\
    \ Sensing for Internet of Things. Pervasive Mob. Comput. 2018, 49,\n111–125. [CrossRef]\n\
    121. Ravignani, A.; Olivera, V.; Gingras, B.; Hofer, R.; Hernández, C.; Sonnweber,\
    \ R.-S.; Fitch, W. Primate Drum Kit: A System\nfor Studying Acoustic Pattern Production\
    \ by Non-Human Primates Using Acceleration and Strain Sensors. Sensors 2013, 13,\n\
    9790–9820. [CrossRef]\n122. Taylor, W.; Abbasi, Q.H.; Dashtipour, K.; Ansari,\
    \ S.; Shah, S.A.; Khalid, A.; Imran, M.A. A Review of the State of the Art in\n\
    Non-Contact Sensing for COVID-19. Sensors 2020, 20, 5665. [CrossRef]\n123. Oliveira,\
    \ L.; Schneider, D.; De Souza, J.; Shen, W. Mobile Device Detection Through WiFi\
    \ Probe Request Analysis. IEEE Access\n2019, 7, 98579–98588. [CrossRef]\nSensors\
    \ 2021, 21, 568\n34 of 35\n124. Abdul-Ghani, H.A.; Konstantas, D.; Mahyoub, M.\
    \ A Comprehensive IoT Attacks Survey Based on a Building-Blocked Reference\nModel.\
    \ Int. J. Adv. Comput. Sci. Appl. 2018, 9. [CrossRef]\n125. Abbas, S.S.A.; Priya,\
    \ K.L. Self Conﬁgurations, Optimization and Protection Scenarios with Wireless\
    \ Sensor Networks in IIoT.\nIn Proceedings of the International Conference on\
    \ Communication and Signal Processing, Chennai, India, 4–6 April 2019;\npp. 0679–0684.\n\
    126. Nayyer, M.Z.; Raza, I.; Hussain, S.A. A Survey of Cloudlet-Based Mobile Augmentation\
    \ Approaches for Resource Optimization.\nACM Comput. Surv. (CSUR) 2019, 51, 107.\
    \ [CrossRef]\n127. Mon, A.; Giorgio, H.R.D.; María, E.D.; Querel, M.; Figuerola,\
    \ C. Evaluation of Technological Development for the Deﬁnition of\nIndustries\
    \ 4.0. In Proceedings of the Congreso Argentino de Ciencias de la Informática\
    \ y Desarrollos de Investigación, Buenos\nAires, Argentina, 28–30 November 2018;\
    \ pp. 1–6.\n128. Pliatsios, A.; Goumopoulos, C.; Kotis, K. A Review on IoT Frameworks\
    \ Supporting Multi-Level Interoperability—The Semantic\nSocial Network of Things\
    \ Framework. Int. J. Adv. Internet Technol. 2020, 13, 46–64.\n129. Mehmood, Y.;\
    \ Ahmad, F.; Yaqoob, I.; Adnane, A.; Imran, M.; Guizani, S. Internet-of-Things-Based\
    \ Smart Cities: Recent Advances\nand Challenges. IEEE Commun. Mag. 2017, 55, 16–24.\
    \ [CrossRef]\n130. Fan, H.; Li, J.; Chen, N.; Hu, C. Capability Representation\
    \ Model for Heterogeneous Remote Sensing Sensors: Case Study on Soil\nMoisture\
    \ Monitoring. Environ. Model. Softw. 2015, 70, 65–79. [CrossRef]\n131. Mehmood,\
    \ E.; Anees, T. Challenges and Solutions for Processing Real-Time Big Data Stream:\
    \ A Systematic Literature Review.\nIEEE Access 2020, 8, 119123–119143. [CrossRef]\n\
    132. Uschold, M.; Gruninger, M. Ontologies: Principles, Methods and Applications.\
    \ Knowl. Eng. Rev. 1996, 11, 93–155. [CrossRef]\n133. Akoka, J.; Comyn-Wattiau,\
    \ I.; Laouﬁ, N. Research on Big Data—A Systematic Mapping Study. Comput. Stand.\
    \ Interfaces 2017, 54,\n105–115. [CrossRef]\n134. Melo, G.; Oliveira, L.; Schneider,\
    \ D.; de Souza, J. Towards an Observatory for Mobile Participatory Sensing Applications.\n\
    In Proceedings of the IEEE 21st International Conference on Computer Supported\
    \ Cooperative Work in Design, Wellington,\nNew Zealand, 26–28 April 2017; pp.\
    \ 305–312.\n135. Peng, S.-L.; Pal, S.; Huang, L. Principles of Internet of Things\
    \ (IoT) Ecosystem: Insight Paradigm; Intelligent Systems Reference Library;\n\
    Springer International Publishing: Cham, Germany, 2020; Volume 174, ISBN 978-3-030-33595-3.\n\
    136. Farias, V.; Oliveira, L.M.L.; Souza, J. Internet of Everything Taxonomy:\
    \ Technical Report of IoE Applications. Federal University\nof Rio de Janeiro:\
    \ Systems Engineering and Computer Science Program. Available online: https://www.cos.ufrj.br/index.php/\n\
    pt-BR/publicacoes-pesquisa (accessed on 27 November 2020).\n137. Maisonneuve,\
    \ N.; Stevens, M.; Niessen, M.E.; Steels, L. NoiseTube: Measuring and Mapping\
    \ Noise Pollution with Mobile\nPhones. In Proceedings of the Information Technologies\
    \ in Environmental Engineering; Athanasiadis, I.N., Rizzoli, A.E., Mitkas, P.A.,\n\
    Gómez, J.M., Eds.; Springer: Berlin/Heidelberg, Germany, 2009; pp. 215–228.\n\
    138. Miluzzo, E.; Lane, N.D.; Fodor, K.; Peterson, R.; Lu, H.; Musolesi, M.; Eisenman,\
    \ S.B.; Zheng, X.; Campbell, A.T. Sensing Meets\nMobile Social Networks: The Design,\
    \ Implementation and Evaluation of the CenceMe Application. In Proceedings of\
    \ the 6th\nACM Conference on Embedded Network Sensor Systems, Raleigh, NC, USA,\
    \ 5–7 November 2008; pp. 337–350.\n139. Gaonkar, S.; Li, J.; Choudhury, R.R.;\
    \ Cox, L.; Schmidt, A. Micro-Blog: Sharing and Querying Content Through Mobile\
    \ Phones\nand Social Participation, Applications, and Services. In Proceedings\
    \ of the 6th International Conference on Mobile Systems,\nBreckenridge, CO, USA,\
    \ 17–20 June 2008; pp. 174–186.\n140. Consolvo, S.; McDonald, D.W.; Toscos, T.;\
    \ Chen, M.Y.; Froehlich, J.; Harrison, B.; Klasnja, P.; LaMarca, A.; LeGrand,\
    \ L.;\nLibby, R.; et al. Activity Sensing in the Wild: A Field Trial of Ubiﬁt\
    \ Garden. In Proceedings of the SIGCHI Conference on Human\nFactors in Computing\
    \ Systems, Florence, Italy, 5–10 April 2008; pp. 1797–1806.\n141. Estrin, D.;\
    \ Chandy, K.M.; Young, R.M.; Smarr, L.; Odlyzko, A.; Clark, D.; Reding, V.; Ishida,\
    \ T.; Sharma, S.; Cerf, V.G.; et al.\nParticipatory Sensing: Applications and\
    \ Architecture [Internet Predictions]. IEEE Internet Comput. 2010, 14, 12–42.\
    \ [CrossRef]\n142. Masters, K.L.; Nichol, R.C.; Hoyle, B.; Lintott, C.; Bamford,\
    \ S.; Edmondson, E.M.; Fortson, L.; Keel, W.C.; Schawinski, K.; Smith, A.;\net\
    \ al. Galaxy Zoo: Bars in Disk Galaxies. Mon. Not. R. Astron. Soc. 2011, 411,\
    \ 2026–2034. [CrossRef]\n143. Wiggins, A. EBirding: Technology Adoption and the\
    \ Transformation of Leisure into Science. In Proceedings of the iConference,\n\
    Seattle, WA, USA, 8–11 February 2011; pp. 798–799.\n144. Siewiorek, D.; Smailagic,\
    \ A.; Furukawa, J.; Krause, A.; Moraveji, N.; Reiger, K.; Shaffer, J.; Wong, F.L.\
    \ SenSay: A Context-Aware\nMobile Phone. In Proceedings of the Seventh IEEE International\
    \ Symposium on Wearable Computers, White Plains, NY, USA,\n21–23 October 2003;\
    \ pp. 248–249.\n145. Nachman, L.; Baxi, A.; Bhattacharya, S.; Darera, V.; Deshpande,\
    \ P.; Kodalapura, N.; Mageshkumar, V.; Rath, S.; Shahabdeen,\nJ.; Acharya, R.\
    \ Jog Falls: A Pervasive Healthcare Platform for Diabetes Management. In Proceedings\
    \ of the Pervasive Computing;\nFloréen, P., Krüger, A., Spasojevic, M., Eds.;\
    \ Springer: Berlin/Heidelberg, Germany, 2010; pp. 94–111.\n146. Kanjo, E.; Bacon,\
    \ J.; Roberts, D.; Landshoff, P. MobSens: Making Smart Phones Smarter. IEEE Pervasive\
    \ Comput. 2009, 8, 50–57.\n[CrossRef]\n147. Hamilton, M.; Salim, F.; Cheng, E.;\
    \ Choy, S.L. Transafe. SIGCAS Comput. Soc 2011, 41, 32–37. [CrossRef]\n148. Chen,\
    \ M.; Ma, Y.; Song, J.; Lai, C.-F.; Hu, B. Smart Clothing: Connecting Human with\
    \ Clouds and Big Data for Sustainable Health\nMonitoring. Mob. Netw. Appl. 2016,\
    \ 21, 825–845. [CrossRef]\nSensors 2021, 21, 568\n35 of 35\n149. Liebig, T.; Piatkowski,\
    \ N. Predictive Trip Planning—Smart Routing in Smart Cities. In Proceedings of\
    \ the Workshop EDBT/ICDT\n2014 Joint Conference, Athens, Greece, 28 March 2014;\
    \ pp. 331–338.\n150. Chiang, L.; Lu, B.; Castillo, I. Big Data Analytics in Chemical\
    \ Engineering. Annu. Rev. Chem. Biomol. Eng. 2017, 8, 63–85.\n[CrossRef] [PubMed]\n\
    151. Kamilaris, A.; Gao, F.; Prenafeta-Boldu, F.X.; Ali, M.I. Agri-IoT: A Semantic\
    \ Framework for Internet of Things-Enabled Smart\nFarming Applications. In Proceedings\
    \ of the IEEE 3rd World Forum on Internet of Things, Reston, VA, USA, 12–14 December\n\
    2016; pp. 442–447.\n152. Vargheese, R.; Dahir, H. An IoT/IoE Enabled Architecture\
    \ Framework for Precision on Shelf Availability: Enhancing Proactive\nShopper\
    \ Experience. In Proceedings of the 2014 IEEE International Conference on Big\
    \ Data, Washington, DC, USA, 27–30 October\n2014; pp. 21–26.\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/2/568/pdf?version=1610634567
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Everything (IoE) Taxonomies: A Survey and a Novel Knowledge-Based
    Taxonomy'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2019/6215454
  analysis: '>'
  authors:
  - Minh-Quang Tran
  - Duy H. N. Nguyen
  - Van An Le
  - Thanh-Dong Pham
  citation_count: 63
  full_citation: '>'
  full_text: '>

    This website stores data such as cookies to enable essential site functionality,
    as well as marketing, personalization, and analytics. By remaining on this website
    you indicate your consent. Cookie Policy Journals Publish with us Publishing partnerships
    About us Blog Wireless Communications and Mobile Computing Journal overview For
    authors For reviewers For editors Table of Contents Special Issues Wireless Communications
    and Mobile Computing/ 2019/ Article On this page Abstract Introduction Related
    Work Evaluation Discussion Conclusion Data Availability Conflicts of Interest
    Acknowledgments References Copyright Related Articles Research Article | Open
    Access Volume 2019 | Article ID 6215454 | https://doi.org/10.1155/2019/6215454
    Show citation Task Placement on Fog Computing Made Efficient for IoT Application
    Provision Minh-Quang Tran ,1Duy Tai Nguyen ,1Van An Le ,1Duc Hai Nguyen,1and Tran
    Vu Pham 1 Show more Guest Editor: Antonio Moschitta Received 23 Jul 2018 Revised
    23 Nov 2018 Accepted 20 Dec 2018 Published 10 Jan 2019 Abstract Fog computing
    is one of the promising technologies for realizing global-scale Internet of Things
    (IoT) applications as it allows moving compute and storage resources closer to
    IoT devices, where data is generated, in order to solve the limitations in cloud-based
    technologies such as communication delay, network load, energy consumption, and
    operational cost. However, this technology is still in its infancy stage containing
    essential research challenges. For instance, what is a suitable fog computing
    scheme where effective service provision models can be deployed is still an open
    question. This paper proposes a novel multitier fog computing architecture that
    supports IoT service provisioning. Concretely, a solid service placement mechanism
    that optimizes service decentralization on fog landscape leveraging context-aware
    information such as location, response time, and resource consumption of services
    has been devised. The proposed approach optimally utilizes virtual resources available
    on the network edges to improve the performance of IoT services in terms of response
    time, energy, and cost reduction. The experimental results from both simulated
    data and use cases from service deployments in real-world applications, namely,
    the intelligent transportation system (ITS) in Ho Chi Minh City, show the effectiveness
    of the proposed solution in terms of maximizing fog device utilization while reducing
    latency, energy consumption, network load, and operational cost. The results confirm
    the robustness of the proposed scheme revealing its capability to maximize the
    IoT potential. 1. Introduction The Internet of Things (IoT) has emerged as a revolutionary
    technology that offers a fully connected “smart" world that accelerates the 4th
    industrial revolution where thousands or millions of things in the physical world
    are connected with each other. These things share data and services to specify,
    monitor, and manage the physical world thereby smart city, healthcare, agriculture
    services, and applications are enabled to transform the way we work, play, and
    live, improving the quality of life and the human civilization. Realization of
    IoT services in a large scale, however, is hindered due to the constraints of
    IoT devices (embedded on everyday objects such as consumer goods, enduring products,
    vehicles, utility components, sensors, and other physical devices) in terms of
    computing resources, memory capacity, energy, and bandwidth limitations. Many
    of these issues could be resolved by employing the Cloud-Assisted Internet of
    Things or Cloud-of-Things (CoT) technology as it offers large-scaled and on-demand
    networked computing resources to manage, store, process, and share IoT data and
    services [ 1]. Nevertheless, the CoT paradigm is facing increasing difficulties
    to handle Big Data generated by IoT services associated with beyond billions of
    connected devices. As these devices are frequently (e.g., in every second or even
    shorter intervals) generating data, a large amount of data is generated every
    moment (exabytes of data per day). If every IoT captured data pattern is transferred
    to data centers (DCs) on the cloud for processing and storage, and then another
    large amount of information is returned to users or to actuators on the physical
    world, a huge volume of traffic is pumped into the network making it congested
    or malfunctioned. Obviously, this process challenges systems’ performance and
    robustness in terms of ensuring low latency and network bandwidth consumption,
    optimal utilization of computational resources, and scalability. In fact, most
    of IoT data and services are generated and consumed by local users. Therefore,
    to cope with the aforementioned issues, a recent trend is to devise effective
    edge computing infrastructures, termed as Edge-of-Things (EoT) computing, edge
    computing, or fog computing [ 2]. Fog computing allows moving compute and storage
    resources closer to IoT devices where data is generated. Fog computing devices
    could be smart gateways or routers deployed at the network edge, local PCs, and
    even mobile devices such as smartphones or tablets carried by users that can offer
    computing and storage capabilities. These devices play their own roles of determining
    what data should be stored or processed locally (for low latency and saving network
    bandwidth) and what needs to be sent to the cloud for further analysis. It is
    clear that EoT complements CoT paradigm in terms of providing high scalability,
    low delay, and location awareness and leveraging local resources which are available
    at the network edges. Although the benefit of fog computing in the IoTs is clear
    and the basic ideas of this computing paradigm have been well stated in various
    researches [ 3, 4], there still lacks systematical modeling for practical fog
    computing frameworks and effective service placement approaches to maximize the
    utilization of existing devices on the fog landscape while satisfying application
    response times and reducing energy and operation cost. In this article, we propose
    a novel approach to task placement on fog computing made efficient for IoT application
    provision. The main contributions of this work are summarized as follows. (i)
    We propose a systematical fog computing framework consisting of multiple intelligent
    tiers that effectively support IoT service decentralization. (ii) We devise an
    efficient task (service) placement approach to optimizing service decentralization
    on fog computing landscape leveraging context-aware information such as location,
    compute and storage capacities of fog devices, and expected deadline of an application
    and, hence, maximize the utilization of fog devices that are available at the
    network edge, and minimize the latency, energy consumption, and cost. (iii) We
    conduct a thorough feasibility and performance analysis with various simulations.
    The results provide a comprehensive understanding of the effectiveness of the
    proposed approach in terms of maximizing the utilization of fog devices while
    reducing latency, energy consumption, and network load. In addition, the experimental
    results with service deployment in real-world applications that we have built
    for a smart city ecosystem in Ho Chi Minh City such as the intelligent transportation
    system (ITS) show the feasibility of the proposed solution. These results demonstrate
    the robustness of the proposed scheme revealing its capability to maximize the
    IoT potential. The rest of the paper is organized as follows. Section 2 reviews
    related work. The overall architecture and problem definition are described in
    Section 3. The proposed service placement mechanism is presented in Section 4.
    Section 5 describes the evaluation of the proposed approach while Section 6 concludes
    the paper. 2. Related Work Most of the existing IoT related projects assume the
    availability of centralized data centers based on a cloud-centric approach [ 5].
    A typical example is described in [ 6] which addresses necessary components of
    a cloud-centric IoT architecture. The authors proposed a federation between a
    private cloud (e.g., Aneka their own system) and a public cloud (e.g., Microsoft
    Azure cloud) to efficiently handle sensing data from wireless sensor networks
    (WSNs). In the networking aspects this approach focused on access networks while
    ignoring the core networks. Consequently, it could not satisfy the effectiveness
    required in IoT as global services are mainly computed on the cloud, and transmitted
    and managed over the core networks. There are several works to reinforce the shortage
    of cloud-centric IoT approaches by employing localization of computing resource
    [ 2, 3, 7]. The work in [ 7] describes a Locality-Based Utility Computing (LUC)
    Operating System. These utilities are distributed over the network backbones,
    such as local servers connecting to routers, aiming to provide the computing resources.
    The motivation of this work is similar to our present paper which is, instead
    of building bigger and bigger data centers and oversized networks, we should bring
    resources near to the network edges or users, where the IoT data is created. Unfortunately,
    the work in [ 7] had not utilized context-aware information such as location awareness
    and other related information to improve its effectiveness but keeps location
    awareness for future work. Deploying miniclouds or private clouds on the network
    edges to handle IoT data processing and service provisioning has extracted numerous
    researches [ 8, 9]. Having small clouds or microdata centers at the edges can
    help to efficiently deliver services closer to users, hence mitigating traffic
    bombing on the network and reducing communication cost. In order to direct research
    to a more standardized approach, Cisco proposed the fog computing concept in a
    seminal study in [ 2]. Fog computing is a highly virtualized platform that provides
    compute, storage, and networking services between end devices and traditional
    cloud computing data centers, typically but not exclusively located at the edge
    of network. Several studies such as [ 8, 10] discuss the challenges, potential
    applications, and benefits of fog computing. It is considered a complementary
    technique to cloud computing that provides the missing links in the cloud-to-thing
    continuum in the IoT paradigm [ 11, 12]. Studies in [ 13] analyze the essential
    roles of fog computing for extending continuous links of IoT data and services
    from the cloud to the network edges. Meanwhile, studies in [ 14] propose architectural
    imperatives for fog computing and analyze use cases, requirements, and architectural
    techniques for fog-enabled IoT networks. Although there are several proposals
    that help researches on fog computing converge, to some extent, to standardization.
    Fog computing is still in its infancy stage containing inherent difficulties that
    need to be thoroughly investigated. For instance, what is a suitable fog computing
    scheme where effective and efficient service provision models can be deployed
    is still an open challenge. There are numerous studies in the area of resource
    provisioning in distributed environments such as in cloud computing [ 15, 16]
    and mobile cloud computing [ 17, 18]. Although service provisioning problems in
    fog computing share similar concepts and research issues with virtual machine
    placement problems in edge networks as discussed in [ 19, 20], the existing approaches
    cannot be directly applied to fog computing. One of the reasons is that fog landscapes
    are usually more volatile compared to those of cloud environments, hence more
    context-aware information around fog landscapes and Things should be utilized
    to effectively adopt with the dynamic change of large-scaled IoT environments.
    In order to resolve the difficulties discussed above, several recent researches
    have been dedicated to resource allocation problems in edge and fog computing
    by investigating various imperatives [ 14]. A study in [ 21] proposes a fog computing
    platform where software modules are dynamically deployed on end devices (Things),
    while the study in [ 22] introduces a model that effectively allocates computing
    resources on network edges to process local and regional data. In another direction
    such as in [ 23], the authors introduce solutions for QoS-aware service allocation
    in fog computing as a basic optimization problem. More recent work in [ 24, 25]
    investigates a conceptual framework for the service provisioning problem in fog
    computing. These studies propose interesting concepts of fog cells as software
    modules running on IoT nodes and orchestrating models of these cells for handling
    services. Our proposed fog computing scheme in this present paper is closely related
    to Cisco’s Fog computing model [ 2]. One of the major differences in our work
    compared to existing work discussed above is that the computing resources in our
    newly proposed approach are more flexibly designed and allocated/distributed in
    accordance with context-aware information, specifically location, network condition,
    type of service, and quality of the service (QoS, in terms of expected response
    time). Concretely, location identifies the location of IoT data sources or sinks
    which help to effectively determine where on the fog landscape a particular service
    should be deployed, in accordance with network conditions and the constraint of
    the service type. This context is useful for optimally distributing services on
    the fog, in terms of maximizing virtualized resources available along network
    edge, while satisfying the expected response time of applications, another context
    required by users/consumers. There are also references on the passive microdatacenter,
    that is, rechargeable datacenter (e.g., using solar energy) at a very small scale
    [ 26]. This datacenter concept can be extended and applied in our proposed architecture
    where not only energy but also communication delay can be reduced by reasonably
    deploying compute and storage services such as computational power, data organization
    and indexing, and functional computing on these datacenters. However, as mentioned
    before, the existing work on fog computing has not effectively utilized context-aware
    information for optimizing IoT resources to maximize its potential [ 7]. In this
    present work, we thoroughly extend our previous study on task placement on fog
    landscapes [ 27]. Concretely, we analyze context-aware information that is necessary
    for effectively provisioning fog services. As a result, resource allocation is
    effectively conducted improving the quality of services such as reducing communication
    latency and mitigating network load, while saving energy and deployment costs
    significantly. In addition, we provide a thorough analysis on experimental results
    with service deployment in real-world applications for a smart city ecosystem
    in Ho Chi Minh City such as the ITS to confirm the effectiveness and the robustness
    of the proposed scheme. 3. Context-Aware Multitier Fog Computing Scheme This section
    presents the proposed context-aware multitier fog computing architecture for IoTs
    where necessary context information and concepts related to task placement in
    the proposed scheme are described. 3.1. Context-Aware IoT Service Provision As
    discussed, context information could be useful for IoT service provision; meanwhile
    context-aware solutions for effectively utilizing IoT resources have not been
    thoroughly addressed in the existing technologies [ 7]. This section describes
    fundamental context used in the proposed multitier fog computing scheme. The notion
    of context has been observed in numerous areas including linguistics, knowledge
    discovery, artificial intelligent, information retrieval, reasoning, and theory
    of communications [ 28, 29]. As a high level of abstraction, context is defined
    as “that which surrounds, and gives meaning to, something else." In this definition
    “something" can be an artifact, a building, a person, a computer system, or even
    an assertion in logic as “context is any information that can be used to characterize
    the situation of an entity. An entity is a person, place, or object that is considered
    relevant to the interaction between a user and an application, including the user
    and applications themselves" [ 30]. In the IoT environment, context includes but
    is not limited to location, network condition, and type of service, quality of
    service. In this work, context information used for service placement is described
    as follows. (i) Location: identifies the location of IoT devices/users where IoT
    data is generated or consumed. This context is more useful for service placement
    when it is associated with network topology and computation scheme (e.g., fog/edge
    computing scheme) in the proposed multitier model presented in the next section.
    (ii) Network Condition: describes the current network condition such as topology
    and resource (computation, storage,...) available at each node and communication
    quality (delay and packet loss) between nodes. (iii) Type of Service: specifies
    service’s features such as sensing, actuating, computing, and storing which define
    the possibility of deploying a particular service on a specific node/device based
    on its resource availability (e.g., a storing service cannot be conducted at a
    light-weight sensor without storage capacity). (iv) Quality of a Service (QoS):
    describes the expected QoS when users/consumers receive a service upon their request.
    This work utilizes the response time as the indicator for QoS. Obviously, the
    above context information is relevant for optimization of data/service placement,
    allocating resources (computing, storage, and communications) in the IoT where
    there are a large number of devices and a huge amount of complicated services.
    However, it could be difficult to apply this concept of context-aware IoT service
    provision in the conventional Internet architecture. To realize this approach,
    we proposed a new computing scheme, namely, the multitier fog computing architecture
    presented in the next section. It is worth to be noticed that the context is dynamically
    changed, specifically in the IoT environment. How to effectively deal with dynamic
    context complying with the requirements of applications, especially new arrival
    ones, is an open challenge. It is not always good if the service placement solutions
    immediately change upon any change of the context and requirements as the service
    placement algorithms need to back-and-forth scan the environment condition. On
    the other hand, if the context information is not affected in time, the context
    could be useless. In order to overcome this dilemma, the proposed service placement
    method evaluates context and resolves the service placement problems in appropriate
    time period, namely, placement turn as presented in Section 4.3.1. Here, the duration
    of a turn is dynamically estimated by the response time of all tasks assigned
    in the current turn at a particular node. New arrival nodes will be stored in
    a waiting queue which is processed in the next turn with updated context information.
    3.2. Overall Architecture The natural features of an IoT system are its complicated
    connections between a huge number of devices while the provision of data and services
    is specific to application domains (e.g., healthcare, agriculture, traffic,...).
    IoT devices are distributed almost everywhere in the physical world to which data
    and services are mostly generated and consumed by local users. In some other cases
    these services are consumed by global users via cloud computing paradigm. In general,
    sensor systems, distributed service computing elements are connected with each
    other via intermediate connection elements (e.g., local servers) and global computing
    elements on the cloud in order to resolve the challenges on scalability, flexibility,
    and domain specific on IoT. However, in which way these distributed systems can
    be efficiently managed in the current infrastructures, specifically the current
    Internet which is not originally designed to support for the distributed computing
    with high flexibility in the IoT environments, is an essential research question.
    In this article, we firstly introduce a novel multitier architecture for the IoT,
    namely, the 3-tier architecture, and then we propose a novel approach to task
    placement on fog computing made efficient for IoT service provision. In the 3-tier
    architecture, IoT elements such as sensors, mobile phones, laptops, vehicles,
    base stations, local servers, network connection, and management elements are
    connected in a multitier distributed scheme consisting of different levels of
    intelligence: device/group-of-devices tier, regional tier, and global tier as
    depicted in Figure 1 and described as follows. (i) Device/Group-of-Device Tier
    includes IoT distributed services (DSs). This tier manages distributed services
    generated by things such as wireless sensors, vehicles, and mobile devices connected
    with each other via ad-hoc or P2P modes. These services can be useful for local
    users such as mobile users surrounding IoT devices in the DS sites. Examples for
    these services include advertisements sent to mobile users when they pass a favorite
    restaurant at a department store, a warning on overspeed sent to a driver, and
    so on. (ii) Regional Tier consists of IoT services that are computed at a fog
    colony on the fog landscape. Each fog colony consists of a fog orchestration node
    serving as a service fog endpoint (SFE) and several fog cells. SFEs provide services/contents
    that could not be found from DSs. SFEs also serve as intermediate processing nodes
    used for data preprocessing or data integrations, for example, before being forwarded
    to DCs on the cloud for further computations. This scheme not only mitigates communication
    and computation costs but also helps to reduce latency of local-based services
    for local users. In addition, it enables us to provide services which are best
    fit with the local context. For instance, in a smart IoT-based heart disease monitoring
    system [ 31], the system collects patients’ ECG and heart beat signals (via wearable
    devices) to detect abnormality (e.g., heart attacks) and provide healthcare services.
    The device itself can detect certain abnormalities based on some thresholds on
    ECG or heart beat signals. However, more sophisticated detections such as those
    based on machine learning approaches using historical data could not be conducted
    at IoT devices because of their computation and storage limitations. The proposed
    scheme can introduce appropriate regional services at suitable clinics, in terms
    of specialty and capacity of analyzing patients’ data (context about service types),
    which are close to users/patients (context about location). Regional services
    at the recommended clinic analyze patients’ ECG and heart beat signals to advice
    for on-site treatments and prepare necessary equipment as well as medical practitioners
    for registering patients when they are hospitalized at the clinic. (iii) Global
    Tier provides global IoT services or cloud services which are computed/integrated
    at centralized DCs or service cloud endpoints (SCEs). SCEs collect data from multiple
    SFEs or even from multiple DSs and provide global services to global users. These
    global services are adequate with common context to a specific application. For
    example, in a healthcare system, in accordance with flu symptoms such as high
    fever, headache, nausea, etc., reported by a user, besides introducing appropriate
    clinics nearby (by SFEs) as mentioned before, this data is also sent to a preventive
    healthcare center for further analysis. If this is a transmissive flu, the center
    will immediately provide related information and instructions to the community
    to prevent the flu spreading. This is a global service computed on the cloud (at
    SCEs) using global data such as medical dictionary, descriptive data about epidemic,
    and data supplied by users.    Figure 1  A multitier architecture for the Internet
    of Things. 3.3. Applications and Services in the 3-Tier Architecture In order
    to understand the usage of the proposed 3-tier architecture, we clarify concepts
    related to IoT applications and services as follows. (1) An IoT Application is
    a concrete application on an IoT environment that provides data, information,
    or actuating functions to the requesting clients from the Internet. An application
    is a set of services (or tasks) described as follows. (2) A Service is considered
    as the smallest component that processes a concrete task. A task can be classified
    in one of the following types: sensing, actuating, computing, and storing. The
    task type will limit the possibility to deploy it on a particular node/device
    (e.g., a storing service cannot be conducted at a light-weight sensor without
    storage capacity). In this article, the terms service and task are used interchangeably.
    (3) Service Provider is any device in the 3-tier architecture that provides the
    execution of a task upon a corresponding request from a client. For example, IoT
    devices (Things) are service providers for sensing or actuating services, whereas
    providers for computing services can be IoT devices, fog devices, and DCs on the
    cloud, and providers for storing services could be fog devices and DCs on the
    cloud. (4) Client is a user application that issues application requests. We assume
    that the code for the available IoT applications and services is already loaded
    to the corresponding devices (providers) in the 3-tier architecture. The architecture
    is not aware of computation details done by applications or services. It just
    knows what type of providers needed to satisfy client requests (defined by sensing
    actuation and context properties), the overlay topology of the providers, and
    the resources required by each service with the constraint of service’s response
    time. Assuming that applications and services are predefined and registered to
    SCEs or SFEs which are front-end points for clients to request particular applications.
    The procedure generated when a client, c, requests an application, a, is described
    as follows: (i) c asks its associated SCE (or even an SFE on its closest fog instance).
    (ii) The involved SCE or SFE will identify the tasks (services) associated with
    the requested application and recognize corresponding providers by running the
    task placement method to optimize the utilization of virtualized resources in
    the fog. (iii) The involved providers (i.e., devices where tasks are deployed)
    execute the corresponding tasks and provide the results (processed data/information,
    informing of the completion of an actuating/storing task,...) to the service front-end
    (i.e., SCE or SFE) for integration and then return the integrated results to the
    client c. 4. Task Placement on the Fog Landscape An inherent issue in fog computing
    is how to optimize the utilization of virtualized resources on the fog landscape
    in order to not only mitigate the response time of requested applications but
    also reduce energy consumption and other operation costs. This section proposes
    a novel method for maximizing such available resources, in accordance with the
    current context, when deploying tasks in the proposed 3-tier architecture. 4.1.
    Problem Definition and System Notations Given a set of applications each of which
    is constrained with a deadline , suppose that each application is composed of
    independent tasks (i.e., tasks can be executed simultaneously) (In IoT, the degree
    of dependencies between tasks could be complicated, we defer those issues to the
    future work. This work focuses on devising a 3-tier fog computing architecture
    combining with context information for task placement on the fog landscape.),
    . Let be the set of tasks resulting from the decomposition of all applications
    that need to be deployed on the 3-tier network. This work aims at deploying the
    tasks mentioned above on the fog landscape and the cloud based on the current
    context. As presented in Section 3.1, the four main contexts, namely, location,
    network condition including network topology, nodes’ resource availability and
    communication quality, service type, and QoS (in terms of expected response time),
    are taken into account in the proposed task/service placement solution. In addition,
    the task placement approach must satisfy the two criteria as follows. C1 (hard
    criteria): No application misses its deadline as described in equation (1), where
    is the response time of . Here, the context of expected response time and estimated
    execution time of tasks are taken into account: C2 (soft/optimal criteria): The
    number of tasks deployed on the fog landscape is maximized. In order to properly
    form and solve the optimized service placement problem, we need to devise estimation
    metrics for the fog landscape w.r.t the network architecture proposed in Section
    3. We describe the functional components, their resource capability, communication
    delays, and energy consumption in the fog computing paradigm. Table 1 shows the
    notations and descriptions of terms used for task placement modeling in this paper.
    Table 1  Notation and description of terms in the proposed task placement model.
    4.2. Task Placement Modeling This subsection proposes a practical task placement
    model on the fog landscape to maximize the utilization of already available virtualized
    resources at the network edges, reducing latency and energy consumption. It is
    worth to be noted that fog colony is the basic entity of fog landscape, each of
    which consists of a set of computational devices denoted as fog cells or fog nodes,
    . Each fog colony is managed by a fog orchestration node, , which is a fog cell
    with more powerful and extended functionality for managing resources and controlling
    the task placement and execution. Upon receiving application requests from clients,
    the corresponding fog orchestration node is responsible for generating and deploying
    tasks over the system in accordance with two criteria (C1 and C2) mentioned in
    Section 4.1. Given a task , node will determine to place it on one of the four
    places: (i) On itself (i.e., on F) (ii) On a fog cell on the colony managed by
    F, that is, any , where denotes a set of fog cells in ’s colony that comply with
    service type required by (iii) On its neighbor colony controlled by the orchestration
    node N (the details of task management and execution are delegated to N) (iv)
    On the cloud denoted as R. It is worth to be noted that the orchestration node
    F provides context information about network, capacity (CPU, RAM, communication
    quality, and computation type) of each fog cell in its colony, and the context
    about its neighbor colony’s capacity at the placement time. Let be binary variables
    telling whether the task is deployed on a fog node ( ), on the fog orchestration
    node (), on the neighbor colony (), or on the cloud (). Since a task is deployed
    only once, the constraint in (2) is held: Since our purposed method is to maximize
    the number of tasks assigned on the fog landscape, with a given fog colony orchestrated
    by F, the objective function is formed in (3): where are coefficients defining
    the priority of task deployment on different types of computational entities (fog
    cell , fog orchestration node , neighbor colony N, or on the cloud R, respectively).
    This prioritizing helps to mitigate the computation time of the solver. These
    parameters could be determined by examining historical data or can be heuristically
    selected based on an intuition that a task should be tried at a fog cell or at
    the fog orchestration node before being propagated to the neighbor colony, and
    propagating to the cloud is the last choice. In this work, we set for evaluation
    without losing the generality of the proposed approach while presenting the utilization
    of location context (i.e., resources close to IoT data sources are utilized first).
    In addition, Res(F) describes context about network condition (topology, resource
    availability at each node, etc.) which is periodically updated at the beginning
    of a task placement turn. Resolving the objective function in equation (3) provides
    an optimal placement plan that maximizes the number of tasks deployed on the fog
    landscape (i.e., near to data sources and better utilize the available virtualized
    resources). This plan satisfies the QoS constraint presented in equation (1) where
    every application is completed before a predefined deadline under the available
    virtualized resources on the fog landscape. This means that, for a task which
    is planned to be deployed on a node p (fog cell, fog orchestration node), p must
    satisfy resources required by and all the tasks composing the application must
    be completed before the application’s deadline to satisfy the global constraint
    in equation (1). Therefore, the hard constraint in this problem solving is that
    available resources in the deployment node such as computation power (CPU) and
    storage (memory) capacity must be adequate to process the requested tasks in time
    (i.e., the application consisting of tasks will be completed before its deadline).
    In addition, the priority to assign a task locally on the considering fog colony
    is significantly higher than that of assigning such a task to a neighbor colony
    or to the cloud. This can be seen as a soft constraint to maximize the utilization
    of fog devices revealing the reduction of communication latency, energy consumption,
    and operational cost. 4.3. Response Time Estimation As discussed before, the task
    placement plan provided by the proposed model must satisfy the hard constraint
    on the application response time (i.e., presented in equation (1)). The difficulty
    here is that how to appropriately model or estimate the response time of an application
    which consists of multiple tasks being deployed at different locations. This subsection
    addresses this issue by thoroughly estimating the time expended for application
    execution w.r.t the related resource constraints such as CPU power and memory
    capacity of available fog devices. 4.3.1. Estimating Response Time of a Task and
    an Application Accomplishing a task requires four steps: task submission, deployment,
    execution, and result return. Therefore, the response time of such a task is calculated
    as follows: where (i) is the deployment time in which data and compute resources
    needed by the task are prepared. (ii) is the execution time (or makespan time)
    in which the task actually utilizes resources on the deploying node for execution.
    (iii) is the communication time consisting of (a) task submission time which is
    the time it takes to move necessary information from the fog orchestration node
    to the node where the task will be deployed and (b) result return time which is
    the time it takes to return the result to the fog orchestration node and release
    unused resources. We assume that resources on the cloud are unlimited; hence when
    a task is submitted to the cloud, it is executed and finished immediately. Therefore,
    if a task is assigned to the cloud, its response time is composed of only the
    communication time (i.e., ). Estimating the response time of a task running on
    a fog cell, in contrast, strongly depends on how the fog orchestration node distributes
    tasks to other nodes and the mechanisms each node uses to schedule task deployment
    and execution. We briefly describe those as follows. Each fog node p runs tasks
    in multiple turns, namely, 1, 2,…, M. At the beginning of a turn, the node loads
    all tasks assigned to it and deploys all of them. Once a task is deployed successfully,
    the node uses a part of its computation power to execute the task. Right after
    the task has been finished, the result will then be transferred back to its corresponding
    fog control node. When every task has been done, the node releases all resources
    and marks the current turn as “finish.” After that, the node moves to the next
    turn, loads new tasks, and executes them, if there is any assignment. It should
    be noted that a task must be completed within a single turn. It cannot be propagated
    across multiple turns. In addition, a node only deploys tasks at the beginning
    of a turn. Therefore, if a task is assigned to a node, this node does not start
    the task immediately but waits for the current turn to finish (tasks are put on
    the node’s waiting queue). More formally, a node deploys new tasks if and only
    if: (i) there exists at least one task in its waiting queue, and (ii) all tasks
    in the previous turn have been finished and the node is ready for releasing resources
    for deploying new tasks. Since a node loads all tasks assigned to it in each turn
    and tasks are executed concurrently, and all fog nodes are controlled (i.e., they
    can be synchronized) by the fog orchestration node, the response time of an application
    can be estimated as follows: Given this mechanism, the next subsection presents
    in detail the estimation of each time component, namely, , based on the available
    CPU, memory, and communication resources of the destination node (where the task
    will be deployed on) and the corresponding resource requirement from the task.
    4.3.2. Estimating Deployment Time () In this work we assume that if a task is
    deployed on the cloud R, it can be deployed immediately as the resource on the
    cloud is always available on demand. Therefore, the deployment of the task is
    accountable when is deployed on the fog landscape. This time is calculated in
    equation (6): where (i) is the time the task spends on the waiting queue of the
    neighbor fog colony , if it is assigned to the neighbor colony (i.e., ) is the
    time the task spends on the waiting queue of the fog orchestration node , if it
    is assigned to the fog orchestration node (i.e., ) (ii) is the time the task spends
    on the waiting queue of a fog node , if it is assigned to this node (i.e., ).
    In order to estimate , the fog orchestration node examines the historical data
    collected from N during previous execution turns. Supposing that at node N, m
    turns have passed, then is calculated in equation (7): where (i) is the amount
    of time passed after the turn had finished (i.e., the fog node in N has run its
    current turn for time unit (s); see Figure 2 for more details).    Figure 2  Estimation
    of the task’s waiting time at the neighbor fog colony N, . (ii) is the average
    duration (i.e., the total time a node spends on a turn for deploying, executing
    tasks and releasing resources) of a turn calculated from the previous m turns
    and is calculated by the following equation: where is the waiting length (duration)
    of the turn m. reflects the sensitivity of the approximation. If approaches 1,
    the approximation tends to rely much on the recent duration of the last turn.
    On the other hand, if approaches 0, the approximation tends to rely on the previous
    approximation on historical data. Obviously, and can also be calculated using
    this method. However, tasks are given beforehand, expected to be executed in a
    single turn, and there is no new task or application generated during the execution;
    it is reasonable to set . Consequently, equation (6) can be rewritten as in 4.3.3.
    Estimating Execution Time () Execution time or makespan time is the time required
    to execute the task given the CPU power of the node where the task is deployed.
    This time is calculated in the following equation: where , and are the execution
    times if the task is deployed at the fog orchestration node F, fog node f under
    the control of F (e.g., ), the neighbor fog colony N, and the cloud R, respectively.
    These times are calculated as follows. Let p be the selected node where the task
    will be deployed; the execution time is calculated in accordance with compute
    capacity (i.e., CPU power) of p, denoted as , which is the maximum number of (million)
    instructions per second (or MIPS) that this node can spend on running tasks (other
    compute capacity which has to be used for other operations such as transferring
    data is set aside and will not be considered in here). It should be noted that
    if p is a node on the considering colony (i.e., F, ), the is available to the
    considering orchestration node F. If p represents the cloud (i.e., R), in this
    case the task must be deployed on the cloud due to the time constraint; the cloud-based
    compute resource is required adequately to complete the task on time. Therefore,
    the orchestration node F is not responsible for estimating this resource. As a
    result, the execution time in equation (10) can be rewritten as in the following
    equation: Besides the compute capacity , execution time of a task is also affected
    by the task size, denoted as , which is measured by the number of (million) instructions
    to be executed (denoted as MI). This size is directly calculated by the fog orchestration
    node F and can be used as an explicit input for computation resource requirement.
    Our target is to reduce the execution time of the task as much as possible; thus
    the computation capacity of the node must be fully used. To do so, assume that
    at every turn m the node p has a set of tasks to execute . We assign the computation
    capacity proportionally to each task in accordance with tasks’ sizes. More formally,
    the amount of computation capacity assigned to task is presented in the following
    equation: Consequently, the execution time of task is calculated in the following
    equation: Since compute resource is proportionally divided to tasks based on their
    sizes, all tasks in the same turn (deployed on the same node) will have the same
    execution time regardless of their sizes. From (12) and (13) the execution time
    of a task can be rewritten in Since a fog colony executes all tasks assigned to
    it within a single turn, we can clarify the execution time of a task when it is
    deployed at the orchestration fog node F, at a regular fog node f, and when it
    is propagated to the neighbor colony N as follows. (i) Estimating the Execution
    Time and , When Is Deployed on the Considering Colony. According to equation (14),
    and can be clarified as in equations (15) and (16), respectively: (ii) Estimating
    the Execution Time When the Task Is Deployed on the Neighbor Colony N. Obviously,
    cannot be directly calculated as the same way as the calculation for and mentioned
    above since the orchestration node F does not have information about other tasks
    that are currently running on the neighbor colony N. In order to overcome this
    difficulty, we proposed to estimate through historical data from previous executions
    on N. Suppose that there were k tasks executed on N previously, the can be estimated
    in where is the average execution time of tasks from the 1st task to the th task
    and is defined in where (i) is the execution time of the th task which has been
    done at the colony N (ii) is the average execution time of tasks from the 1st
    task to the th task (iii) is a predefined parameter which reflects the weight
    of the execution time of recent moving tasks. 4.3.4. Estimating Communication
    Time () In order to estimate the communication time we need to model the networked
    resources in our proposed 3-tier architecture. We denote the system as an undirected
    graph G=(V,E), where is the set of vertices representing the physical elements
    that consist of the cloud (R), fog orchestration node (F) of each fog colony,
    and fog cells (), E is the set of physical connections between two vertices in
    the graph. Formally, the set of connections (links) in the network topology can
    be represented in where is the set of physical connections between the orchestration
    node and the fog cells in the colony k. is the number of fog cells in the considered
    colony k, is the set of physical connections between the orchestration node of
    the colony k and its neighbors. is the number of fog neighbors of the considered
    colony k, is the physical connection between the orchestration node of the colony
    k and the cloud, b is the maximum throughput of the considered link when data
    is transferred, and is the propagation delay of the considered physical link.
    As a result, when the task is distributed from the orchestration node to an appropriate
    node (i.e., F, f, N, or R), the communication time is calculated in where are
    one-way latencies when the task is deployed on f, N, or R, respectively. It should
    be noted that the communication time is the double of this one-way latency and
    the latency when the task is deployed on F (namely, ) is 0; hence it does not
    appear in equation (20). For any p representing any type (f, N, or R), is calculated
    in where are the communication times of task caused by the transportation, propagation,
    and queuing times, respectively. This work assumes that the queuing time is 0.
    is the amount of data (in Byte) of the task that need to be transferred on the
    considered link. It should be noted that reaching this stage all the deployment
    time, makespan time, and communication time () of the task have been thoroughly
    estimated. They can be applied to equation (5) in Section 4.3.1 to estimate the
    response time of an application, . 4.3.5. Memory Constraint In order to deploy
    a task on an appropriate node p, the memory constraint must be satisfied as shown
    in where is the memory required to executing the task (Bytes). It is assumed that
    this value can be estimated by the corresponding orchestration node F. is the
    memory capacity of node p (Bytes). It should be noted that the corresponding orchestration
    node F can examine of any fog cell f belonging to its colony. Meanwhile, the orchestration
    node of the neighbor colony N must notify to F its available memory . The memory
    on the cloud always satisfies the required memory of the deployed tasks. 5. Evaluation
    The main purpose of the evaluation is to verify the effectiveness of the proposed
    approach in terms of reducing of latency, energy consumption, and network load,
    while increasing the utilization of virtualized resources available on the fog
    landscape, thus mitigating the operational costs in comparison with the conventional
    cloud computing model. We have conducted various experiments using simulations
    including those simulating task distribution problems in real world applications
    that we are building for a smart city system such as the ITS in Ho Chi Minh City.
    5.1. Experiment Environment In order to evaluate the optimized task distribution
    model presented in Section 4, we need to describe several experimental variables
    as follows. (i) Network topologies and resource description: We use iFogsim [
    32] to generate various network topologies associated with their devices’ resource
    description such as fog colonies, the orchestration node of a specific colony,
    fog cells in a fog colony associated with their CPU, memory capacities, and the
    network bandwidth as well as the propagation delays on each link between two physical
    nodes in the considered topology. (ii) Application composition and resource requirement
    by tasks: In order to describe applications and tasks we have analyzed several
    real world applications such as the ITS that we are building for Ho Chi Minh City.
    We analyzed application composition (which tasks are composed in a specific application)
    and the resource required by each task (the memory and CPU capacities and the
    size of each task) as well as the reasonable deadline required by each application
    in the ITS applications. Concrete examples for these descriptions are presented
    in the next subsection that describes different application scenarios. (iii) Optimize
    task placement on the fog landscape: In order to solve the optimization problem
    of task placement on the fog landscape proposed in Section 4, we implemented a
    program for optimization problem solving leveraging the IMB CPLEX solver [ 33].
    The result is an optimal placement plan which is used to (i) analyze the network
    performance and (ii) redeploy on the considering network topology using iFogsim
    [ 32] to verify the network performances. 5.2. Experimental Results As discussed,
    energy consumption reduction, fog device utilization, and cost saving as functions
    of application complexities (i.e., number of applications, number of tasks in
    each application, and resources required by each task) and network topologies
    (number of fog nodes and the capacity of each node) have been thoroughly evaluated
    through experiments on general scenarios and real world applications. 5.2.1. Evaluation
    on General Scenarios In this section, we evaluate how the proposed approach works
    to provide task placement plans on different situations in terms of network topologies
    and applications (including tasks) to be processed on each network topologies.
    We have simulated 28 different network topologies (configurations), each of which
    has a structure as follows: one orchestration node F, several fog cells controlled
    by F, one neighbor colony N, and a data center on the cloud. Table 2 depicts an
    example of a configuration that consists of 1 colony with 4 fog cells managed
    by an orchestration node F connecting with a neighbor colony N and the cloud R.
    Table 2  Configuration of the general network topology. In our simulations, the
    requirements of network topologies are randomly selected with reasonable constraints.
    In order to ensure the diversity of the simulations, various parameters have been
    varied as summarized in Table 3. Each configuration is deemed to deploy several
    applications varying from 1 to 6, each of which consists of 1 to 8 tasks. Each
    application and task are varied by the required deadline (min, average, and max
    values are shown in the table) and the required CPU (to which the response time
    of each task can be inferred in accordance with network topologies and deployment
    plans), respectively. Network topologies are varied by the number of fog cells
    (f) in the considering colony which is ranged from 1 to 4. Fog cell is characterized
    by three parameters, namely, the CPU capacity, delay, and energy consumption as
    shown in the table. Table 3  Summary of simulation scenarios. We have conducted
    28 different scenarios and collected information of 65 applications in total with
    variants mentioned above. The above summary of scenarios is also illustrated in
    Figure 3. The figures show application deadlines, node’s CPU, task’s CPU and number
    of tasks, applications, and nodes with regard to network configurations. Figure
    3(a) shows the number of applications, number of tasks need to be deployed, and
    the number of fog nodes in each network topology in the 28 scenarios. In addition,
    as a general rule, the available resources of a topology have to be greater than
    those required by planned applications. While the average node delay is less than
    the average application deadline in Figure 3(b) to allocate time slots for executing
    applications, the application CPU is intersected by node CPU because in the worst
    case tasks could be deployed to the cloud (see Figure 3(c)). An example of application
    composition is illustrated in Table 4. Table 4  Applications associated with tasks
    deployed on the 3-tier architecture.   (a) The number of applications, tasks,
    and nodes       (a) The number of applications, tasks, and nodes  (b) Average
    application deadline and node delay  (c) Average application CPU and node CPU       Figure
    3  Simulation configurations. As presented, each network configuration consists
    of 4 to 7 nodes to deploy 1 to 6 applications, each of which is composed of 1
    to 8 tasks. As a result, the maximum number of variables in each topology is ;
    it ensures that the CPLEX resolver is able to produce the results. Other apparent
    constraints include , , . Obviously, in order to satisfy these constraints accompanied
    with the objective function presented in equation (3), Section 4.2, each simulation
    takes into account context about location, network condition, service type, and
    expected response time collected at the starting time of each placement turn.
    We have solved the optimization problem of task placement on fog landscape and
    applied the task distribution plan on the given network topology to evaluate the
    effectiveness of the proposed approach in terms of satisfying deadline requirement,
    energy consumption reduction, fog utilization, and cost saving compared to the
    cloud based approach. The results are presented and analyzed as follows. Deadline
    Satisfaction. As we have analyzed, one of the advantages of the proposed 3-tier
    architecture is its capability of utilizing the locally available resources on
    the fog landscape for computing tasks; hence it can reduce the communication times
    (compared to the cloud-based approach) providing more chances to satisfy the required
    application deadlines. In these evaluations, the response time, r of each application
    is estimated using the model presented in equation (5), while the response time
    of each task is estimated using equation (4), Section 4.3.1. For simplicity, without
    losing the generality of the response time estimating model, the deployment time
    at each fog node is ignored (), while the execution time () and the communication
    time () are calculated using equations (10) and (20), respectively, using data
    provided in Tables 2 and 4. After estimation, is compared with the corresponding
    deadline provided in Table 4. The comparison results are presented in Figure 4.    Figure
    4  Response times in the proposed 3-tier architecture compared with the conventional
    cloud approach extracted from 65 applications. As shown, around 57% of the applications
    miss the deadline if they are processed on the cloud. Meanwhile, no application
    in the proposed 3-tier approach misses the deadline. It should be noted that there
    are some cases the response times in the proposed approach are larger than the
    cloud-based ones (both of them satisfy the deadlines). These situations occur
    when applications consisting of heavy tasks (i.e., tasks require a large number
    of processing instructions) are deployed on fog nodes with low computational power.
    Fog Landscape Utilization. Figure 5 shows an effective utilization of the virtual
    resources available on the fog landscape in our proposed method. Among 28 configurations
    (consisting of 65 applications), there is only one configuration that involves
    the cloud revealing that more than 95% of configurations the applications are
    fully processed on the fog landscape (without using any cloud-based resource).
    An interesting point here is that applications are firstly attempted on the fog
    orchestration node, then on fog cells, then on the neighbor colony, and finally
    on the cloud. Obviously, the communication time needed for applications to be
    deployed on the fog orchestration node is 0, and the computation power of this
    node is commonly much more powerful than those of fog cells; in many cases tasks
    are referred to be and successfully be deployed on this node. It is also worth
    to be noticed that, in the cases when cloud resources are involved, only 15% of
    such resources are required; the remained resources come from the fog landscape.    Figure
    5  Utilization of the fog landscape. Energy Consumption Reduction. We also evaluated
    the energy saving by the proposed architecture and the results are depicted in
    Figure 6. In most of the cases the proposed architecture saves more than 80% of
    the energy compared to that of the cloud-based approach. There are only 2 cases
    among 28 configurations (i.e., 7%); the energy consumption in our proposed method
    is comparable or a little bit higher than that of the cloud-based method. This
    is because the main objective of our approach is to maximize the task deployment
    on the fog landscape when the estimated response time still satisfies the required
    deadline although the computation time is higher than the case that tasks are
    processed on the cloud. However, as mentioned, these situations are rare (only
    7%) and in fact (in most of the cases) the proposed 3-tier architecture provides
    benefits in both the response time (computation and communication times) and the
    energy saving.    Figure 6  Energy consumption in the proposed scheme compared
    with the cloud-based approach. Cost Saving. Figure 7 reveals the effectiveness
    of the proposed method in terms of cost saving. As analyzed before, in most of
    configurations applications are fully deployed on the fog landscape (see Figure
    5); no renting cost is required for cloud services in these cases. Cost incurs
    only in one configuration (configuration 15) when some of cloud resources are
    required.    Figure 7  Cost saving in the proposed method. 5.2.2. Verification
    under the Real World ITS Application The communications infrastructure in HCMC
    is not designed for a specific application such as the ITS. Meanwhile, we could
    not redesign the network infrastructure physically. Instead, we applied the proposed
    model to realize the fog computing paradigm, solving the problem of task placement,
    thus improving the performance of the ITS that we are building for Ho Chi Minh
    City. In this work we have designed the system with the following principles.
    (i) Decentralization: The whole system is geographically partitioned into small
    autonomy regions, each of which is considered a fog colony operating independently
    with a minimized interference from a “central light-weight controller” (normally
    a high-end server or a data center). This principle mitigates global communications
    to lessen the impact of poor connections. Moreover, the autonomy regions help
    to strengthen the system’s availability and fault tolerance. (ii) Localization:
    Computing resources are distributed across local regions deployed close to data
    sources; hence the data can be processed locally without invoking many parts of
    the system. This principle guarantees instant responses even in the context of
    low and unstable connections. This localization also allows us to provide qualified
    services at low cost by efficiently utilizing computation resources already available
    at the network edges. Besides helping to save the high cost of renting computation
    and storage resources from the cloud, these edge-based devices commonly consume
    less energy compared to that of data centers on the cloud when processing the
    same tasks. We apply principles mentioned above in our ITS system in accordance
    with the proposed 3-tier architecture with 3 layers, namely, cloud, fog, and IoT
    devices. We partition the whole city into smaller areas and deploy a fog colony
    on each area (formed by a group of multiple fog nodes) to handle data and services
    related to the considered areas such as to estimate the average velocity of a
    traffic flow on a specific road segment on the considered area. The organization
    of a fog colony is followed with the designs on the proposed 3-tier architecture
    presented in Section 4. Each fog colony maintains connection to one (or more)
    neighbor colony. If the fog colony is overloaded, it moves some tasks to its neighbor
    and/or to the cloud. We designed a testbed for emulating our model with the configuration
    described in Table 5. Note that we use 2 physical machines with Intel Core i7-4790
    @ 3.60GHz CPU, 4GB memory and running on Ubuntu 16.04 (64-bit); each machine emulates
    one fog colony. Concretely, we deploy 1 orchestration node and 3 other fog nodes,
    each of which is emulated by a single virtual machine, to describe the detailed
    configuration of a specific colony. The other machine is used to simulate the
    neighbor colony of the above colony. The fog colonies connect to a data center
    (cloud) at Ho Chi Minh City University of Technology’s high performance computing
    center (30 km apart from the fog nodes mentioned above). The data center is deployed
    with 2 CPU Intel Xeon E5-2680v3 @ 2.15GHz x 24 CPU and 128GB memory. The connection
    between fog nodes is emulated by Mininet and the configuration of this topology
    is described as follows. Table 5  Configuration of the network topology in the
    ITS testbed. In this work, we select two representative applications among many
    ITS applications for analysis as follows. (i) Analyzing traffic flow: Given a
    set of GPS signal from vehicles traveling on a road segment, estimate the average
    velocity and the density of the considered traffic flow. (ii) Traffic light control:
    Given a traffic light currently at the beginning of its color phase (that is the
    sequence of the green, red, and yellow lights), set the duration of each light’s
    color for the next phase appropriately with the traffic condition. Table 6 shows
    parameters associated with each application mentioned above. Table 6  ITS’s applications
    and associated tasks. As presented, each application above is composed of a single
    task. However, many of similar applications can run concurrently on the same colony
    (i.e., each application is applied for one road segment in the region covered
    by the considered colony). We have solved the optimization problem of task placement
    on fog landscape to this real world application design. Then, we applied the task
    distribution plan on the given network topology to evaluate energy consumption
    reduction, fog utilization, and cost saving of the proposed method compared to
    the cloud-based approach. As shown in Table 7, the proposed approach in the 3-tier
    architecture is significantly more effective compared to the cloud computing counterpart,
    in all of the three factors (deadline missing rate, energy consumption, and cost).
    The deadline missing rate in the proposed method is 0% while it is more than 50%
    in the cloud approach, mainly because of communication latency. As for the energy
    consumption, when more tasks are deployed on the cloud the energy consumption
    is large as the cloud-based servers must be up waiting for the arrival of tasks
    (which are delayed due to upward communication latencies). For example, in the
    last row, the energy consumptions in the proposed method and the cloud approach
    are 448.8 (J) and 3318.4 (J), respectively, which are significantly different.
    The last column shows the cost for renting computing services on the cloud, while
    the cost on our proposed approach is 0 as the virtual resources available on the
    network edges are utilized. It should be noted that the cloud service cost is
    calculated in accordance with the cloud service renting model described in [ 34,
    35]. Table 7  Effectiveness of the proposed 3-tier scheme compared with the cloud-based
    approach in the real-world ITS applications. 6. Discussion This work directly
    focuses on the feasibility of the optimization on task provision on fog landscape
    to improve the capacity of fog computing paradigm. In order to reach this target,
    we have thoroughly analyzed and modeled applications, tasks associated with their
    required resources, and network configurations with their resource capacity to
    clarify concrete constraints on the proposed optimization model. The proposed
    approach is more effective and robust than the existing approaches in terms of
    practical realization, energy, and cost reduction by means of maximizing the utilization
    of fog computing paradigm. However, further improvements should be considered.
    Orchestration node selection: In the current design and prototype, the orchestration
    node is statically decided in advance based on their computation and storage capacities.
    As fog devices may die due to energy shortage, a dynamic fog orchestration election
    model should be thoroughly investigated. This model could be useful for IoT environment
    with mobile devices. Nontree based structure: The 3-tier architecture is composed
    based on a tree-based structure which helps to simplify the network management.
    However, this may danger the network as it is vulnerable to orchestration node
    failure. As discussed before, when orchestration nodes can be elected dynamically
    and if this approach is extended thereby every node can serve as an orchestration
    node if it satisfies some criteria then the architecture in the fog landscape
    could become “flat." In this sense, the system is more tolerant with node failures
    but it could be complicated for network management and for task distribution.
    Task distribution: In this work, task distribution is handled by orchestration
    nodes. The inherent limitation here is that each orchestration node can obtain
    only local information about fog nodes in its colony and limited information from
    its neighbor colonies, rather than examining a global view of the whole network;
    hence global optimization is not achieved. SDN/Openflow [ 36] based approaches
    can help to achieve global optimization by the capability of collecting global
    network statistics from the Controller. There is a potential direction to apply
    SDN approach for dynamic task provision in the proposed 3-tier architecture. Task
    dependencies: In this work, tasks composing an application are assumed to be executed
    simultaneously to make the proposed 3-tier architecture combining with context-aware
    service placement viable, before going further. It should be noted that, however,
    in the IoT applications, the degree of parallelism and dependencies between tasks
    could be complicated. Therefore, similar to the dynamic of context update the
    dependence degrees between tasks could also dynamically change. Context-aware
    service placement in large-scale IoT environments with multiple dependence degrees
    between tasks is a challenge but potential research direction for our future work
    which can be developed from this paper. 7. Conclusion In this article, we have
    proposed a novel approach to task placement on fog computing made efficient for
    IoT application provision where a systematical fog computing framework consisting
    of multiple intelligent tiers for the IoT has been introduced and a context-aware
    task provision mechanism in the fog has been devised. The proposed approach optimally
    utilizes virtual resources available on the network edges to improve the performance
    of IoT services in terms of response time, energy, and cost reduction. The experimental
    results from both simulated data and data summarized from service deployments
    in real-world applications, namely, the ITS in Ho Chi Minh City which we are building,
    show the effectiveness of the proposed approach in terms of maximizing the utilization
    of fog devices while reducing latency, energy consumption, network load, and operational
    cost. These results confirm the robustness of the proposed scheme revealing its
    capability to maximize the IoT potential. In the future, we are planning to implement
    this method in real applications to support the process of realizing large-scaled
    IoT applications, smart city ecosystems. Data Availability The [simulated evaluation]
    data used to support the findings of this study are included within the article.
    Conflicts of Interest The authors declare that there are no conflicts of interest
    regarding the publication of this paper. Acknowledgments This research is funded
    by Vietnam National Foundation for Science and Technology Development (NAFOSTED)
    under grant number 102.01-2016.28. References Y. Nan, W. Li, W. Bao, F. C. Delicato,
    P. F. Pires, and A. Y. Zomaya, “Cost-effective processing for Delay-sensitive
    applications in Cloud of Things systems,” in Proceedings of the 15th IEEE International
    Symposium on Network Computing and Applications, NCA 2016, pp. 162–169, Cambridge,
    Mass, USA, November 2016. View at: Google Scholar F. Bonomi, R. Milito, J. Zhu,
    and S. Addepalli, “Fog computing and its role in the internet of things,” in Proceedings
    of the 1st ACM Mobile Cloud Computing Workshop, MCC 2012, pp. 13–15, Helsinki,
    Finland, August 2012. View at: Publisher Site | Google Scholar A. V. Dastjerdi,
    H. Gupta, R. N. Calheiros, S. K. Ghosh, and R. Buyya, Fog Computing: Principles,
    Architectures, and Applications, Internet of Things: Principles and Paradigms,
    chap. 4. Morgan Kaufmann, 2016. S. Sarkar, S. Chatterjee, and S. Misra, “Assessment
    of the Suitability of Fog Computing in the Context of Internet of Things,” IEEE
    Transactions on Cloud Computing, vol. 6, no. 1, pp. 46–59, 2015. View at: Publisher
    Site | Google Scholar D. Miorandi, S. Sicari, F. de Pellegrini, and I. Chlamtac,
    “Internet of things: vision, applications and research challenges,” Ad Hoc Networks,
    vol. 10, no. 7, pp. 1497–1516, 2012. View at: Publisher Site | Google Scholar
    J. Gubbi, R. Buyya, S. Marusic, and M. Palaniswami, “Internet of Things (IoT):
    a vision, architectural elements, and future directions,” Future Generation Computer
    Systems, vol. 29, no. 7, pp. 1645–1660, 2013. View at: Publisher Site | Google
    Scholar M. Bertier, F. Desprez, G. Fedak et al., “Beyond the cloud, how should
    next generation utility computing infrastructures be designed?” in Cloud Computing.
    Computer Communications and Networks, Z. Mahmood, Ed., pp. 325–345, Springer,
    2014. View at: Google Scholar L. M. Vaquero and L. Rodero-Merino, “Finding your
    way in the fog: towards a comprehensive definition of fog computing,” ACM SIGCOMM
    Computer Communication Review Archive, vol. 44, no. 5, pp. 27–32, 2014. View at:
    Publisher Site | Google Scholar M. Aazam and E. N. Huh, “Fog Computing Micro Datacenter
    Based Dynamic Resource Estimation and Pricing Model for IoT,” in Proceedings of
    the IEEE 29th International Conference on Advanced Information Networking and
    Applications (AINA ''15), pp. 687–694, IEEE, Gwangiu, South Korea, March 2015.
    View at: Publisher Site | Google Scholar S. Yi, Z. Hao, Z. Qin, and Q. Li, “Fog
    computing: Platform and applications,” in Proceedings of the 3rd Workshop on Hot
    Topics in Web Systems and Technologies, HotWeb 2015, pp. 73–78, Washington, DC,
    USA, November 2015. View at: Publisher Site | Google Scholar OpenFog Consortium,
    2018, https://www.openfogconsortium.org/. OpenFog Consortium Architecture Working
    Group, OpenFog Reference Architecture for Fog Computing, technical report [PhD
    thesis], 2017. R. S. Montero, E. Rojas, A. A. Carrillo, and I. M. Llorente, “Extending
    the Cloud to the Network Edge,” The Computer Journal, vol. 50, no. 4, pp. 91–95,
    2017. View at: Publisher Site | Google Scholar C. C. Byers, “Architectural Imperatives
    for Fog Computing: Use Cases, Requirements, and Architectural Techniques for Fog-Enabled
    IoT Networks,” IEEE Communications Magazine, vol. 55, no. 8, pp. 14–20, 2017.
    View at: Publisher Site | Google Scholar P. Hoenisch, I. Weber, S. Schulte, L.
    Zhu, and A. Fekete, “Four-fold Auto-Scaling on a Contemporary Deployment Platform
    using Docker Containers,” in Proceedings of the 13th International Conference
    on Service Oriented Computing (ICSOC 2015), vol. 9435 of Lecture Notes in Computer
    Science, pp. 316–323, Springer, 2015. View at: Publisher Site | Google Scholar
    P. Leitner, W. Hummer, B. Satzger, C. Inzinger, and S. Dustdar, “Cost-efficient
    and application SLA-aware client side request scheduling in an infrastructure-as-a-service
    cloud,” in Proceedings of the 2012 IEEE 5th International Conference on Cloud
    Computing, CLOUD 2012, pp. 213–220, USA, June 2012. View at: Google Scholar H.
    T. Dinh, C. Lee, D. Niyato, and P. Wang, “A survey of mobile cloud computing:
    Architecture, applications, and approaches,” Wireless Communications and Mobile
    Computing, vol. 13, no. 18, pp. 1587–1611, 2013. View at: Publisher Site | Google
    Scholar N. Fernando, S. W. Loke, and W. Rahayu, “Mobile cloud computing: a survey,”
    Future Generation Computer Systems, vol. 29, no. 1, pp. 84–106, 2013. View at:
    Publisher Site | Google Scholar Y.-J. Yu, T.-C. Chiu, A.-C. Pang, M.-F. Chen,
    and J. Liu, “Virtual machine placement for backhaul traffic minimization in fog
    radio access networks,” in Proceedings of the IEEE International Conference on
    Communications (ICC), pp. 1–7, 2017. View at: Google Scholar L. Gu, D. Zeng, S.
    Guo, A. Barnawi, and Y. Xiang, “Cost efficient resource management in fog computing
    supported medical cyber-physical system,” IEEE Transactions on Emerging Topics
    in Computing, vol. 5, no. 1, pp. 108–119, 2017. View at: Publisher Site | Google
    Scholar H. J. Hong, P. H. Tsai, and C. H. Hsu, “Dynamic module deployment in a
    fog computing platform,” in Proceedings of the 18th Asia-Pacific Network Operations
    and Management Symposium, APNOMS 2016, pp. 1–6, Japan, October 2016. View at:
    Google Scholar J. Xu, B. Palanisamy, H. Ludwig, and Q. Wang, “Zenith: Utility-Aware
    Resource Allocation for Edge Computing,” in Proceedings of the 1st IEEE International
    Conference on Edge Computing, EDGE 2017, pp. 47–54, USA, June 2017. View at: Google
    Scholar V. B. Souza, W. Ramirez, X. Masip-Bruin, E. Marin-Tordera, G. Ren, and
    G. Tashakor, “Handling service allocation in combined Fog-cloud scenarios,” in
    Proceedings of the ICC 2016 - 2016 IEEE International Conference on Communications,
    pp. 1–5, Kuala Lumpur, Malaysia, May 2016. View at: Publisher Site | Google Scholar
    O. Skarlat, S. Schulte, M. Borkowski, and P. Leitner, “Resource provisioning for
    IoT services in the fog,” in Proceedings of the 9th IEEE International Conference
    on Service-Oriented Computing and Applications, SOCA 2016, pp. 32–39, China, November
    2016. View at: Google Scholar O. Skarlat, M. Nardelli, S. Schulte, and S. Dustdar,
    “Towards QoS-Aware Fog Service Placement,” in Proceedings of the 1st IEEE International
    Conference on Fog and Edge Computing, ICFEC 2017, pp. 89–96, IEEE, Madrid, Spain,
    2017. View at: Publisher Site | Google Scholar 2018, http://parasol.cs.rutgers.edu/.
    T. M. Quang, D. T. Nguyen, A. Van Le, H. D. Nguyen, and A. Truong, “Toward service
    placement on Fog computing landscape,” in Proceedings of the 4th NAFOSTED Conference
    on Information and Computer Science, pp. 291–296, Hanoi, Vietnam, 2017. View at:
    Google Scholar V. Akman, Context in Artificial Intelligence: A Fleeting Overview,
    McGraw-Hill, Milano, Italy, 2002. P. Bouquet, C. Ghidini, F. Giunchiglia, and
    E. Blanzieri, “Theories and uses of context in knowledge representation and reasoning,”
    Journal of Pragmatics, vol. 35, no. 3, pp. 455–484, 2003. View at: Publisher Site
    | Google Scholar A. K. Dey, “Understanding and using context,” Personal and Ubiquitous
    Computing, vol. 5, no. 1, pp. 4–7, 2001. View at: Publisher Site | Google Scholar
    T. T. Do, P. H. Phung, and T. M. Quang, “Toward An IoT-based Expert System for
    Heart Disease Diagnosis,” in the 28th Modern Artificial Intelligence and Cognitive
    Science Conference (MAICS), pp. 157–164, Fort Wayne, Ind, USA, 2017. View at:
    Google Scholar H. Gupta, A. V. Dastjerdi, S. K. Ghosh, and R. Buyya, “iFogSim:
    A Toolkit for Modeling and Simulation of Resource Management Techniques in Internet
    of Things, Edge and Fog Computing En-vironments,” Tech. Rep. CLOUDS-TR-2016-2,
    Cloud Computing and Distributed Systems Laboratory, The University of Melbourne,
    2016. View at: Google Scholar IBM CPLEX Optimizer, 2018, https://www.ibm.com/analytics/data-science/prescriptive-analytics/cplex-optimizer.
    I. Pietri, G. Juve, E. Deelman, and R. Sakellariou, “A performance model to estimate
    execution time of scientific workflows on the cloud,” in Proceedings of the 9th
    Workshop on Workflows in Support of Large-Scale Science, WORKS 2014, pp. 11–19,
    New Orleans, LA, USA. View at: Google Scholar Elastic Compute Cloud (EC2), 2018,
    https://aws.amazon.com/ec2/pricing/on-demand/. N. McKeown, T. Anderson, H. Balakrishnan
    et al., “OpenFlow: enabling innovation in campus networks,” Computer Communication
    Review, vol. 38, no. 2, pp. 69–74, 2008. View at: Publisher Site | Google Scholar
    Copyright Copyright © 2019 Minh-Quang Tran et al. This is an open access article
    distributed under the Creative Commons Attribution License, which permits unrestricted
    use, distribution, and reproduction in any medium, provided the original work
    is properly cited. PDF Download Citation Download other formats Order printed
    copies Views 6090 Downloads 2494 Citations 70 About Us Contact us Partnerships
    Blog Journals Article Processing Charges Print editions Authors Editors Reviewers
    Partnerships Hindawi XML Corpus Open Archives Initiative Fraud prevention Follow
    us: Privacy PolicyTerms of ServiceResponsible Disclosure PolicyCookie PolicyCopyrightModern
    slavery statementCookie Preferences'
  inline_citation: '>'
  journal: Wireless Communications and Mobile Computing
  limitations: '>'
  pdf_link: null
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Task Placement on Fog Computing Made Efficient for IoT Application Provision
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/3474552
  analysis: '>'
  authors:
  - RanaweeraPasika
  - JurcutAnca
  - Madhusanka Liyanage
  citation_count: 35
  full_citation: '>'
  full_text: '>

    186

    MEC-enabled 5G Use Cases: A Survey on Security

    Vulnerabilities and Countermeasures

    PASIKA RANAWEERA and ANCA JURCUT, University College Dublin, Ireland

    MADHUSANKA LIYANAGE, University College Dublin, Ireland and University of Oulu,
    Finland

    The future of mobile and internet technologies are manifesting advancements beyond
    the existing scope

    of science. The concepts of automated driving, augmented-reality, and machine-type-communication

    are quite sophisticated and require an elevation of the current mobile infrastructure
    for launching. The

    fifth-generation (5G) mobile technology serves as the solution, though it lacks
    a proximate networking

    infrastructure to satisfy the service guarantees. Multi-access Edge Computing
    (MEC) envisages such an

    edge computing platform. In this survey, we are revealing security vulnerabilities
    of key 5G-based use cases

    deployed in the MEC context. Probable security flows of each case are specified,
    while countermeasures are

    proposed for mitigating them.

    CCS Concepts: •

    Human-centered computing → Ubiquitous and mobile computing; •

    Security

    and privacy; • General and reference → Surveys and overviews; • Computer systems
    organization

    → Cloud computing;

    Additional Key Words and Phrases: 5G, use cases, MEC, security, ITS, V2E, AR,
    VR, UAV, mMTC, eMBB

    ACM Reference format:

    Pasika Ranaweera, Anca Jurcut, and Madhusanka Liyanage. 2021. MEC-enabled 5G Use
    Cases: A Survey on

    Security Vulnerabilities and Countermeasures. ACM Comput. Surv. 54, 9, Article
    186 (October 2021), 37 pages.

    https://doi.org/10.1145/3474552

    1

    INTRODUCTION

    Moore’s Law suggests the processor speed is exponentially incrementing over time
    [12, 87]. Hence,

    the number of Internet of Things (IoT) devices employed at industries serving
    Big Data applica-

    tions are thriving with the possibility of proliferated processing capability
    in miniaturized devices.

    Moreover, improved smart device usage literacy of general public in modern era
    are enabling the

    social internet platforms to launch cumbersome bandwidth consuming applications
    for elevating

    their subscriptions with immersive Quality of Service (QoS). It is estimated that
    the number of

    mobile terminals are reaching 2.8 billion by 2019 and monthly mobile data traffic
    is reaching be-

    yond 49 exabytes by 2021 according to Cisco [117]. Thus, deployments of billions
    of smart devices

    This work is partly supported by the Academy of Finland under the 6Genesis (Grant
    No. 318927) project.

    Authors’ addresses: P. Ranaweera, School of Computer Science, University College
    Dublin, Belfield, Dublin 4, Ireland; email:

    pasika.ranaweera@ucdconnect.ie; A. D. Jurcut, School of Computer Science, University
    College Dublin, Belfield, Dublin 4,

    Ireland; email: anca.jurcut@ucd.ie; M. Liyanage, School of Computer Science, University
    College Dublin, Belfield, Dublin

    4, Ireland and Centre for Wireless Communications (CWC), University of Oulu, Erkki
    Koiso-Kanttilan katu 3, 90570 Oulu,

    Finland; emails: madhusanka@ucd.ie, madhusanka.liyanage@oulu.fi.

    Permission to make digital or hard copies of all or part of this work for personal
    or classroom use is granted without fee

    provided that copies are not made or distributed for profit or commercial advantage
    and that copies bear this notice and

    the full citation on the first page. Copyrights for components of this work owned
    by others than ACM must be honored.

    Abstracting with credit is permitted. To copy otherwise, or republish, to post
    on servers or to redistribute to lists, requires

    prior specific permission and/or a fee. Request permissions from permissions@acm.org.

    © 2021 Association for Computing Machinery.

    0360-0300/2021/10-ART186 $15.00

    https://doi.org/10.1145/3474552

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:2

    P. Ranaweera et al.

    demand access capacity and bandwidth requirement from the access interfaces of
    mobile base

    stations.

    The fifth-generation (5G) mobile technology is the seminal advancement explored
    by the Mo-

    bile Network Operators (MNOs) to reach beyond the constrictions of the prevailing
    network

    architecture. To achieve the novel requirements of enhanced performance, portability,
    interop-

    erability, elasticity, reliability, spectral and energy efficiency; a network
    softwarization approach

    should be followed by the evolving mobile networks [63]. Virtualization, service
    migration, orches-

    tration, and service automation (as in service function chaining [48]) are the
    main phases of paving

    the path toward 5G and beyond 5G mobile paradigms [24]. As the core and backhaul
    portions

    of the emerging mobile networks are softwarized, techniques of ultra-dense networks,
    massive

    Multiple-Input-Multiple-Output (MIMO), and high-frequency communication are prominent

    methods for improving the wireless access network [117]. Due to these technological
    improve-

    ments, 5G guarantees a 1,000 times enhancement of the capacity than its predecessor.

    Even with the softwarized 5G core network, facilitating the diverse requirements
    demanded by

    the IoT-based devices is still a predicament due to the drawbacks of existing
    service provisioning

    infrastructure[25]. Conventional cloud computing architecture fails to provision
    emerging myri-

    ads of services [80]. The geographically distant placement of data centres and
    limited access ca-

    pacity contrives unintended delays and jitters that compromise the entire service
    infrastructure.

    Moreover, cloud servers are incapable of servicing billions of IoT devices ubiquitously.
    These limi-

    tations in cloud computing paradigm enforce vulnerabilities that can be exploitable
    by adversaries

    [130]. Moreover, privacy is a major concern with the outsourcing-based cloud computing
    service

    models [41]. Most cloud service providers are violating the locational and data
    privacy of their

    consumers.

    To overcome these constrictions in storage and processing service models, Edge
    Computing

    (EC) as a paradigm was introduced in 1990s with Content Delivery Networks (CDN)
    that decen-

    tralized the data centre functions [140]. Main objective of EC was to extend the
    functions offered

    from cloud computing to the edge of the mobile network [103]. With in-proximity
    dispensing of

    cloud functions at the edge, drawbacks of the cloud paradigm could be mitigated.
    In fact, this ar-

    chitectural paradigm shift is the raison d’etre for 5G- and beyond-5G-based concepts
    to achieve

    the guaranteed performance metrics. There are various flavours of edge concepts
    introduced for

    expanding this notion. Multi-access Edge Computing (MEC), Fog computing, Mobile
    Cloud

    Computing (MCC), Cloudlets, and Transparent Computing (TC) are such directives
    followed

    by research communities [103, 117]. Out of these concepts however, MEC and fog
    computing are

    leading to be adopted pragmatically and in terms of standardization. In this survey,
    we are investi-

    gating the MEC paradigm as its standardization is much more convincing than the
    other concepts.

    1.1

    Related Surveys

    There are several research studies that focus on MEC, 5G, and various approaches
    related to the

    deployment of these aspects, including security. Ren et al. [117] explore the
    orchestration mech-

    anisms within end-edge-cloud context for fog, MEC, TC, and cloudlets. Different
    edge flavours

    are contrasted with an evaluation criteria that sets the criterion indices based
    on heterogeneity

    support, QoS requirements, elastic scalability, mobility, and interoperability.
    Moreover, computa-

    tional offloading, caching, security, privacy, and future research directions
    are discussed further.

    In Reference [115], a comprehensive survey is conducted on service migration scenarios
    for edge

    computing paradigms. The diversity among the existing migration schemes are highlighted
    while

    architectures, platforms, and implementations related to migration are presented
    further. More-

    over, future research directions are presented considering the gaps identified
    in the literature. Li

    et al. [77] review the edge oriented computing systems focusing on their architectural
    features,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:3

    resource management approaches, and design objectives. Though, the investigation
    is more con-

    centrated on fog computing than other EC paradigms. The adaptation of Distributed
    Ledger

    Technologies (DLTs) on IoT-based applications have been studied in Reference [157].
    IoT use

    cases of smart home, smart transport, supply chain, smart healthcare, and smart
    energy are de-

    scribed in the applicable DLT platform context. Offloading is a vital consideration
    for EC scenar-

    ios. Thus, a survey is conducted on offloading algorithms in Reference [139] for
    edge and cloud

    deployments. The surveys in References [37, 142] discuss Network Function Virtualization

    (NFV), Software Defined Networks (SDN), Service Function Chaining (SFC), and Network

    Slicing (NS) as MEC enablers, where focus on security is not comprehensive.

    Ferrer et al. [36] present a concise comparison between MCC, Mobile Ad hoc Computing,
    and

    EC to emphasize the novel aspects of decentralized cloud approaches. Reliable
    resource provi-

    sioning problem with edge-cloud computing environments is addressed in Reference
    [28]. More

    emphasis is drawn to the machine learning as a solution for workload characterization,
    work-

    load prediction, component placement, system consolidation, and application elasticity
    aspects of

    prevailing resource provisioning approaches. Knowledge on IoT-based communication
    protocols

    such as Message Queuing Telemetry Transport (MQTT), Advanced Message Queuing Pro-

    tocol (AMQP), Extensible Messaging and Presence Protocol (XMPP), Data Distribution

    Service (DDS), Hypertext Transfer Protocol (HTTP), and Constrained Application
    Proto-

    col (CoAP) are imperative for realizing the formation of 5G-based use cases. A
    comprehensive

    survey is conducted in Reference [26] on such IoT protocols emphasizing their
    characteristics, and

    performance issues in the context of fog and cloud computing integration.

    Khan et al. [63] address security and privacy advancements of 5G in the viewpoint
    of novel

    technologies of SDN, NFV, NS, and MEC. This survey has investigated the Physical
    Layer Secu-

    rity (PLS), security monitoring and management, privacy, and security standardization
    aspects

    of 5G to a comprehensive extent. Though, 5G-based use cases are not considered
    in their scope.

    Ranaweera et al. [109, 110] present a comprehensive inductive research on MEC
    security and pri-

    vacy aspects, considering real-world MEC deployment scenarios accustoming to the
    ETSI stan-

    dardization. Despite their holistic nature, their work does not focus on the 5G
    use cases that this

    article is introducing. The use cases of industrial automation, Intelligent Transport
    Systems

    (ITSs), Virtual Reality (VR), smart grids, e-health, and education are considered
    in Reference

    [99] on the latency requirement perspective. Though this survey states the latency
    requirements

    of each use case, their security issues and prospects on edge computing has not
    been addressed.

    1.2

    Scope and Contribution

    In this survey, we are exploring the security vulnerabilities of 5G use cases
    deployed in accor-

    dance to MEC-based scenarios. The use cases of critical infrastructure-based services,
    enhanced

    Mobile Broadband (eMBB), massive Machine Type Communication (mMTC), Autonomous

    driving/Vehicle-to-Vehicle (V2V) connections, Augmented Reality (AR)/Virtual Reality

    (VR)/Mixed Reality (MR), and Unmanned Aerial Vehicles (UAVs) are investigated
    for security

    vulnerabilities. Further, prevailing security solutions are mapped as solutions
    and countermeasures

    for each use case. This is the main contribution of this research as current literature
    lacks the discus-

    sion of security in 5G-enabled edge computing-based deployments. Understanding
    the progress of

    state-of-the-art industrial and academic projects in 5G and MEC are vital to realize
    the adaptation

    of the scoped use cases. Thus, this article presents a holistic overview of leading
    projects.

    1.3

    Article Organization

    The rest of the article is organized into five sections. Section 2 presents the
    background on 5G, MEC,

    and role of MEC in 5G. Core contribution of this research is contained in Section
    3, where use cases

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:4

    P. Ranaweera et al.

    are investigated for their security issues and usable solutions. Section 4 summarizes
    the details on

    current research groups and institutions proceeding in MEC and 5G focused security
    developments.

    Insights gained from this survey are discussed in Section 5, while probable novel
    applications and

    challenges for wide adoption of 5G are presented briefly. Finally, Section 6 concludes
    the article.

    2

    BACKGROUND

    Despite that 5G and MEC can be operable independently, the integration of them
    would enable

    applications and use cases with requirements of Ultra-reliable Low Latency Communication

    (URLLC) capabilities in addition to improved security and privacy aspects [37].
    Thus, assimilation

    of 5G and MEC standardization is imperative to realize the context of this article.
    The following

    section describes the key information on 5G, MEC, and the role of MEC in 5G.

    2.1

    5G

    The data rates of 1 ∼ 10 Gbps, 1 ms round trip latency, enhanced capacity for
    plethora of connect-

    ing devices through high-bandwidth channels, perceived availability of 99.999%,
    100% ubiquitous

    connectivity, and improving battery life through 90% energy reduction are major
    requirements for

    5G in the performance perspective [2]. The softwarization of the 5G core enables
    the segmentation

    of functions to a layered architecture with its featured flexibility. The Fifth
    Generation Infras-

    tructure Public Private Partnership (5G-PPP) project proposes the five layers
    of infrastructure,

    network/control, orchestration, business, and services for forming the 5G functional
    architecture

    [40]. The orchestration layer, however, is a dispersed function among other layers
    while services

    layer can be represented as an extension of the business layer [63]. The infrastructure
    layer rep-

    resents the RAN connectivity portion of the mobile network. The Radio Access Technologies

    (RATs) employed in the 5G infrastructure layer are supporting Non-Orthogonal Multiple
    Ac-

    cess (NOMA), massive Multiple-Input-Multiple-Output (MIMO), Coordinated Multi-Point

    (CoMP) transmission, and millimeter Wave (mmWave) technologies [13, 31]. Control
    layer in-

    hibits the network management function while network and business services are
    assigned to the

    business layer.

    Security measures targeted for ensuring confidentiality, integrity, availability,
    accountability,

    authentication and authorization aspects were implemented with predecessor mobile
    networks

    ranging from 2G to Long-term Evolution (LTE). Though, Information Assurance (IA)
    policies

    has become most profound for 5G and beyond networks with the requisite to assure
    the content in

    processing, usage, and transmission in the cyber space [121]. Encryption is the
    key security mech-

    anism to ensure security in mobile networks. Encryption schemes of A3, A5/2, A5/3,
    A8, Kasumi,

    SNOW-3G, and Evolved Packet System (EPS) Encryption Algorithm (EEA) along with
    EPS

    Integrity Algorithm (EIA) were such methods employed for confidentiality and integrity
    protec-

    tion [63, 80]. Moreover, TS 23.122 and TS 33.210 specifications are defining the
    Access Stratum

    (AS) and Non-access Stratum (NAS) security functions of the 3rd Generation Partnership

    Project (3GPP)-based mobile deployments [72]. AS and NAS are functional layers
    of the Uni-

    versal Mobile Telecommunications System (UMTS) and LTE protocol stack. Though,
    novel

    mobile network deployments require the allowance to be dynamically customized
    in accordance

    to the specifications of impending use cases and applications [3]. Thus, architectural
    amendments

    in 5G do not permit the utilization of security measures employed for pre-5G networks
    [59]. In ad-

    dition, flash crowd network traffic demand, radio interface security, user plane
    integrity, roaming,

    Denial of Service (DoS) or saturation attacks, and signalling storms are identified
    as novel chal-

    lenges for 5G mobile networks [4]. The heterogeneous nature of 5G-enabled devices
    empowered

    with IoT technologies are envisaging massive scalability with cross-platform issues.
    Introducing

    novel services and applications are imminent to attract enormous amount of subscribers;
    hence,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:5

    contriving a flash crowd demand (unintended surge in subscribers) situation in
    the mobile network.

    Such situations are exploitable by capable adversaries to overload both application
    and radio inter-

    faces that mimic a DoS effect [82]. Further, DoS or Distributed DoS (DDoS) attacks
    pose a service

    interruption risk for latency sensitive 5G applications via impeding the service
    with continuous

    malicious accessing attempts. Similar effect is expected from signalling storms,
    by generating a

    massive amount of signalling traffic in the control plane; access is granted by
    the intruder from a

    signalling attack perpetrated at the 5G interfaces. As 5G core network components
    such as User

    Plane Function (UPF) are deployed in line with the edge/user level, such signalling
    storms could

    sabotage the entire mobile domain [65]. The heightened mobility with 5G devices
    incur roaming,

    handover, and migration situations more frequent. Thus, timing-based interposing
    attacks are im-

    minent on such control channels, channel assignments, and migration sessions [134].
    In addition,

    malicious User Equipment (UE) and fake BSs launching masquerading attempts resulting
    in

    wormhole, or sinkhole effects are imminent in the user plane [11, 61, 110]. Thus,
    integrity and au-

    thenticity of the user plane is paramount for 5G. Solutions such as Host Identity
    Protocol (HIP)

    schemes, mandating global visibility for security policies, Cloud RAN (C-RAN)
    and EC, isola-

    tion of Virtual Network Functions (VNFs) are adaptable for meeting the security
    requirements

    [3, 81, 135]. More details on 5G security can be assimilated from [35, 38, 49,
    80, 144].

    2.2

    Multi-access Edge Computing (MEC)

    In contrast to other edge computing paradigms, MEC edge infrastructure is proposed
    to be de-

    ployed at the Radio Network Controller (RNC), or the Base Station (BS), or gNodeB
    (gNB)

    in 5G terms [103]. Thus, its reliance on MNOs service quality is higher than the
    other paradigms.

    The ETSI defined MEC architecture is formed with two levels that are deployed
    along with the

    BS and the mobile core network entities referred as the edge/ host level and the
    system level, re-

    spectively [33]. These two levels are segmenting the functions of service registration
    and service

    provisioning for improved access and security. Isolating the orchestration function
    of the entire sys-

    tem from the edge infrastructure, mitigates the possibilities of holistic system
    compromise through

    intrusions. Moreover, an edge infrastructure operating unburdened by the service
    registration pro-

    cesses would serve with improved mobility, scalability, availability, and context
    awareness [119].

    In addition, an edge infrastructure capable of operating standalone or with cloud
    connectivity, en-

    visages a very low latency and jitter for enhanced service access [152]. These
    features of MEC

    enable the compatibility and adaptability for IoT-based services facilitated with
    the edge domain

    [118]. However, these novel structures and virtualization technologies employed
    for deploying a

    dynamic service environment are creating unprecedented issues in security and
    privacy context.

    The MEC operational structure depicted in Figure 1 represents the various entities
    defined by

    the ETSI for accomplishing classified tasks at the edge and the core [109]. The
    functions approv-

    ing, rejecting, and managing service requests are handled by the entities of User
    Application

    Life-Cycle Management Proxy (UALCMP), Customer Facing Service Portal (CFSP), and

    Operations Support System (OSS) at the core. Mobile Edge Orchestrator (MEO) is
    orches-

    trating the entire MEC system under its domain. The edge system is governed by
    Mobile Edge

    Platform Manager (MEPM), while Virtualization Infrastructure Manager (VIM) is
    acting

    as the hypervisor for the edge environment. Mobile Edge Hosts (MEHs) are virtual
    entities that

    are configured for the subscriber service requirements, which perpetrates the
    actual storage and

    processing operations in the MEC system. Service instances instigated by the User
    Equipment

    Applications (UE Apps) are interacting with its counterpart at a particular MEH
    called Mobile

    Edge Application (ME App). Mobile Edge Platform (MEP) is managing the resources
    and

    networking within a MEH.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:6

    P. Ranaweera et al.

    Fig. 1. MEC operation and structure.

    MEC is built on top of the driving technologies SDN, NFV, Information Centric
    Networking

    (ICN), NS, and IoT [83, 103]. Thus, implementing security for heterogeneous services
    overlaid on

    top of the diverse driving technologies of the MEC is an intricate task. Moreover,
    extended access

    capacity at the edge with wireless channels and mobile offloading/delegation schemes
    are elevating

    the probable penetrative and vulnerable vectors in the edge network that would
    be subjected for

    exploitation by the adversaries [50]. Thus, revealing vulnerabilities and threats
    in 5G-based MEC

    deployments should be handled case-by-case for each probable use case of 5G.

    2.3

    Role of MEC in 5G

    MEC plays a key role in realizing the envisaged use cases of 5G. Six use cases,
    as depicted in

    Figure 2, are elaborated in Section 3 for stating the investigated security vulnerabilities
    in MEC-

    enabled scenarios. As these use cases are offered as services to the 5G consumers,
    service quality

    in terms of QoS and Quality of Experience (QoE) are key factors for service continuity
    that

    eventually decides the pricing /charge of the particular service [21]. Thus, 5G
    core network de-

    ployment itself cannot ensure the required service quality from these impending
    applications due

    to limitations of access network. As discussed above, MEC and other edge computing
    paradigms

    facilitate the infrastructure for enhancing the access interfaces to cater ultra-low
    latency, real-time

    ubiquity, security, and privacy aspects of the mobile network [82]. Though, managing
    the diverse

    services that demand various requirements (i.e., low latency is critical for UAV
    and V2V applica-

    tions while reliability, QoS, and QoE are required for eMBB and AR use cases)
    is a challenge for

    MNOs. Network Slicing is a concept identified for achieving this purpose maintaining
    the QoS

    and QoE levels specified by each service [151]. MEC supports the multi-domain
    globally dispersed

    services through sliced network deployments for heterogeneous applications and
    services [56].

    ETSI-defined MEC edge platform allows dynamic launching of service instances configurable
    for

    required specifications. Thus, network slice instances can be launched as ME Apps
    at MEC host

    level to enable multi-slice deployments.

    3

    SECURITY OF MEC USE CASES

    In this section, use cases and applications of MEC are considered. For different
    MEC applications,

    security vulnerabilities are investigated while possible countermeasures are presented
    from the

    existing literature.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:7

    Fig. 2. MEC-enabled 5G-based use cases.

    3.1

    Critical Infrastructure

    Critical Infrastructure-based services, such as energy, water and sewage, offshore
    oil drilling rigs,

    financial, and emergency applications have expanded their scope through digitizing
    their control-

    ling systems with IoT technology. Even industrial sectors are revolutionizing
    their deployments

    with novel technologies to cope with the rapid development [133]. Though global
    expansion of

    these services to dispersed global clusters constricts the usability of a centralized
    data centre for

    storage and processing. Thus, integrating MEC platforms for critical infrastructure
    services are

    probable and would improve the interfacing of the general public toward the services
    as critical

    customer status updating of billing, consumer usage, and service interruption
    notifications.

    The energy sector holds the profound significance out of infrastructure services
    as it ener-

    gizes all the other sectors and envisages a sophisticated deployment options with
    the evolution

    of smart-grid technology. The integration of IoT-based technologies enables the
    formation of Ad-

    vanced Metering Infrastructure (AMI)/smart metering/net metering that overlay
    a monitoring

    framework for the smart energy solution [61]. In addition, the incorporation of
    renewable en-

    ergy sources demands a decentralized deployment of power coordinating entities
    (smart grids)

    that enforce bi-directional energy flow through the transmission grids [8]. Thus,
    employing an

    effective power utilization scheme is an intrinsic requirement and achievable
    through system sta-

    tus analytics on consumer consumption, consistency of the generation, grid utilization
    and per-

    formance of the operating devices. The consumers are granted the opportunity to
    utilize their

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:8

    P. Ranaweera et al.

    Fig. 3. Critical infrastructure connectivity to MEC platform.

    household utility spending by monitoring the IoT interfacing tools, which facilitate
    the visu-

    alization of any incoherent consumption patterns. The coordinated group of European
    Com-

    mittee for Standardization-European Committee for Electrotechnical Standardization-

    European Telecommunications Standards Institute (CEN-CENELEC-ETSI) proposed a

    Smart-grid Architectural Model (SGAM) for realizing smart energy use cases [75].
    Proposed

    architecture formulates three dimensions that concatenate five functional interoperability
    layers

    with energy sector domains and zones, which accounts for power system management.
    Thus, the

    amalgamation of IoT technologies with electro technical devices is reinforced
    from this proposal

    for achieving the ultimate integration of IoT and energy solutions. Moreover,
    decentralized na-

    ture of smart grids in the energy network and the requirement for minimizing the
    latency for

    critical parameter transmission demands the deployment of MEC. Subscribing MEC
    services for

    SCADA-based smart grids enable the connectivity among them across the network
    for establish-

    ing a monitoring and awareness channel to maintain a balanced energy flow [1].
    This approach

    is capable of alleviating the cost to improve the grid utilization. The consumer
    interfacing and

    remote activation/deactivation of household electrical apparatus is probable from
    MEC-based ME

    Apps that interconnect the smart grids to the Smart Energy Meters (SEMs).

    In an era of urbanization, water and sewage treatment is a paramount necessity
    for achieving

    sustainable development facilitated through improved urban sanitation and quality
    of human life

    [147]. MEC plays a key role in optimizing the existing water governance techniques
    that are at-

    tributing complexities due to diversified cost structures formed by origin of
    water sources and

    environmental externalities [90]. One of the most obvious use case for MEC is
    the deployment of

    smart metering infrastructure embedded with Smart Water Meters (SWMs) resembling
    the AMI

    setup as indicated in Figure 3. MEC edge servers or MEHs are responsible for facilitating
    a low

    latency communication platform between consumer end, water treatment plant and
    the central

    monitoring station. Moreover, sensory inclusions in an automated treatment plant
    act as a MTC

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:9

    application that is capable of calibrating the control mechanisms to achieve utilized
    water gover-

    nance. However, current water treatment plants employ SCADA systems for controlling
    the fluid

    flow through processes such as debris removal, filtration, recarbination, flocculation,
    coagulation

    and chlorination. Enhanced MTC (eMTC) solutions to establishing communication
    channels are

    guaranteed through LTE PHY layer for SCADA deployments such as in Remote Terminal
    Units

    (RTUs) that operate at different controlling structures [23].

    Petroleum extraction is a vital industry that caters the fossil fuels that generate
    combustible

    energy for energizing vehicular engines and electricity generating plants throughout
    the globe.

    The continuous extraction has led to the scarcity of natural resources that forced
    the petroleum

    industry to shift the drilling process to the offshore reservoirs where the aquatic
    resources are

    still intact [57]. Thus, offshore plants are intrinsic requisites for petroleum
    industry despite the

    precarious conditions granted to the employees. Automation is an approach to be
    considered for

    entrusting the safety of employees at offshore plants. Magnitude of the power
    dissipation at the

    heavy machinery demands the employment of SCADA systems for controlling them.
    Deploying

    MEC for expanding the scope and alleviating the latency for oil drilling services
    improves the

    probability of launching eMTC-based operating infrastructure at offshore plants.
    This enables the

    remote automated operation of drilling devices, which are linked through satellite
    communication

    for mitigating human casualties probable at a plant malfunctioning.

    Any service infrastructure that utilizes a communication network at its formation
    is prone to

    significant security threats. In 2015, the National Cyber-security and Communication

    Integration Centre—Industrial Control Systems Cyber Emergency Response Team

    (NCCIC/ICS-CERT) witnessed that the attacks on critical infrastructure have steadily
    increased

    over the years [69]. Thus, investigating threats applicable for these application
    scenarios are criti-

    cal. Figure 3 depicts the various critical infrastructure-based services and their
    connections to the

    MEC serviceable platform.

    3.1.1

    Security Vulnerabilities. If we remain with the assumption of internal connectivity
    of

    these critical infrastructure facilities are secured by design, then their bi-directional
    connectiv-

    ity with the BS could be the only vector to be considered for penetration by malicious
    adversaries.

    The threats to such connectivity would resemble any intrusion-based, intervention,
    DoS, or Dis-

    tributed DoS (DDoS) attacks, which are capable of ceasing ME Apps launched in
    the edge from

    accessing the relevant infrastructure services. Due to the higher scale of the
    applications, the MEC

    edge level entities should have to subscribe more than one MEH and the geo-distributed
    nature

    would link more than one MEC edge levels or system levels for a particular critical
    infrastructure-

    based service. This fact improves the possibility of prone to be attacked or infected
    by a malicious

    agent through the MEC server side.

    The dispersed deployment of SEMs across households in an AMI-based smart-grid
    installation

    encourages the adversaries to launch interposing attacks such as eavesdropping,
    modifying and

    interrupting in the wireless communication channels additionally to the physical
    damages effec-

    tuated in close proximity [93]. Moreover, Sleep Deprivation Torture (SDT) and
    Battery Ex-

    haustion Attacks (BEA) are probable in smart-grid environments [42]. Similar affect
    is imposed

    on SWM installations in a smart water governance scenario. However, the nature
    of attacks is

    dependent on the deployment scenario of the critical infrastructure application.

    As the core functions of the discussed critical infrastructure-based applications
    are facilitated

    through the SCADA systems, the internal security vulnerabilities are common for
    all cases. The iso-

    lated and disconnected nature of SCADA-based systems advocated resilience against
    cyber-attacks

    in the past [17]. However, threats and vulnerabilities were detected with SCADA
    systems as in

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:10

    P. Ranaweera et al.

    the case of the popular worm STUXNET that raised the probability of critical infrastructure
    ser-

    vices being vulnerable [92]. Moreover, penetration on the sewage system in Maroochi
    (Australia),

    BlackEnergy Trojan, which targeted a Ukrainian power grid, HAVEX malware, and
    command in-

    jection attack on water treatment plant in Kemuri are exemplifying the compromised
    SCADA sys-

    tems [71, 128]. The communication of the SCADA installations is attained by Modbus,
    DNP3 and

    Profibus protocols [128]. Cyber-attacks probable on Programmable Logic Controllers
    (PLCs)

    are categorized into Reconnaissance, command injection, response injection and
    DoS attacks [71].

    In that scenario, MEC system would be infiltrated from the critical infrastructure
    direction. As

    an example, the distributed nature of smart grids would allow an infiltrated smart
    grid to unbal-

    ance the energy load by feeding misleading information to the edge entities that
    could lead to

    catastrophic circumstances.

    The connectivity of the critical infrastructure nodes with the BS in the proximity
    should be

    secured with extensive cryptographic means due to their criticality and inherent
    resources. The

    priority for communication protocol would be the secureness in spite of latency
    and bandwidth

    usage. Though the security measures to be adopted internally are different from
    one application

    to another.

    3.1.2

    Existing Solutions. Yang et al. [147] proposed a model for a smart sewage plant
    operating

    on intelligent and picturesque SCADA system where sensory devices are employed
    for conveying

    monitoring statistics to the intelligent control systems. A high speed and reliable
    networking plat-

    form is formulated to maintain the connectivity between the SCADA-based control
    system and the

    sensing devices. Features such as Real-time regulation for optimizing, intelligent
    decision making,

    efficient security analysis, self-healing/correction, superior effluent quality,
    humanized and visu-

    alized inter-operable platform are the intended objectives of the proposed model.SWMs
    are used

    to measure the consumer water consumption while updating the central monitoring
    stations as

    illustrated in Figure 3. As malware are definite threats to SCADA systems, the
    approach instated

    by Shirazi et al. [128] for detecting anomalies in SCADA systems employing machine
    learning

    techniques is a prominent solution. The K-Means and Naive Bayes are configured
    in their su-

    pervised mode while Principle Component Analysis using Singular Value Decomposition

    (PCA-SVD) and Gaussian Mixture Model (GMM) techniques are configured to their
    unsuper-

    vised mode. The precision values of the machine learning techniques are evaluated
    against naive

    and complex response injections, malicious state/parameter and function command
    injections,

    DoS, and reconnaissance anomalies methods in a gas pipeline simulation model [102,
    131]. In ad-

    dition, as VNFs are imminent to be deployed in edge infrastructure in line with
    SCADA systems,

    cryptographic means to support VNF isolation and shielding for security critical
    function over less

    critical functions are important in the context of MEC [11].

    Hussain et al. [57] introduced an edge computing-based resource allocation model
    to utilize the

    existing cloud data centre-based latency prone systems, which communicated through
    satellites.

    Task scheduling policies such as First Come First Server (FCFS) and Shortest Job
    First (SJF)

    are considered for remote operations controlled at the edge level through a VM-based
    coordinator

    to minimize the reliance on onshore distant resources. Proposed heuristics are
    analysed for various

    workload conditions.

    Leligou et al. [74] proposed a framework that comprised the four layers: energy
    layer, telecom-

    munication layer, VNF layer and the application layer. The framework is employing
    MEC as an

    expanded Multi-radio Access Technology (RAT) xMEC deployment for enabling offloading

    where blockchain-based VNF Descriptors (VNFD) are acting as process tags to achieve
    traceabil-

    ity in the energy layer. However, the deployment scenario for xMEC offloading
    is not convincingly

    explicated to validate the applicability of the framework for smart grids.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:11

    Fig. 4. AR and video streaming applications with MEC.

    Saez et al. [122] propose a framework called System-level Manufacturing and Automation
    Re-

    search Test-bed (SMART) that is controlled through PLC over an IP network engaging
    the OPC

    UA protocol in diagnosing and detecting anomalies in the data extracted from the
    data sourcing

    devices: CNCs, RFID sensors, cameras, and conveyors. According to the data processing
    frame-

    work, data transforming, analyzing, storing, and image-processing tasks are conducted
    at the edge

    servers for enhancing the efficiency of the smart system. Thus, probable integrating
    scenarios with

    different PLC-based technologies validate the deployment as a critical infrastructure
    solution.

    Experimental setup was orchestrated by Oyekanlu et al. [96] for determining channel
    capacity

    in an edge computing scenario to evaluate the performance of various IoT devices.
    The channel ca-

    pacities in terms of SNR for edge computing use cases: smar grids ( for periodic,
    non-periodic, and

    synchronized phasor management units) and IIoT are formulated assuming wired transmission

    channels. The results of this conduct are influential for manufacturers in spite
    of lesser number of

    loads been considered.

    The blockchain model proposed by Gai et al. [42] were focusing on energy security
    in smart-grid

    environments. The intended objective of the system is to detect improper energy
    usage patterns

    to prevent probable energy related attacks such as SDT and BEA. Blockchain technique
    is applied

    to form a network resembling a Smart-grid Network (SGN) that is capable of achieving
    optimal

    resource management.

    3.2

    Enhanced Mobile Broadband Channels/Video Streaming and Analytics/Big Events

    Video stream analysis-based applications such as vehicular license plate recognition,
    face recogni-

    tion and domestic surveillance, which require high computational complexity for
    their algorithms

    to be reliant on UHD transmissions [1, 87]. Mobile gaming applications based on
    VR and AR

    integration are probable deployments for high level video streaming UHD channels
    that endan-

    ger the bandwidth provisioned for priority services. Cisco predicts that the share
    of mobile video

    streaming would be increased rapidly while the bandwidth saving approaches to
    Over the Top

    (OTT) streaming channels are identified as intrinsic preliminaries to form multimedia
    channels

    [86]. The crowd-sourcing-based media are uploaded into the servers through multimedia
    channels

    precipitately, as in 72 h of video content uploaded to YouTube, 2.4 million pieces
    uploaded to Face-

    book, and 347,000 and 216,000 images uploaded into WhatsApp and Instagram in a
    minute [15].

    Moreover, consumer bandwidth has extended from single view to multi-view, 2D to
    3D, and sin-

    gle source stream representation to adaptive multi-bit-rate multi-resolution representation.
    Thus,

    necessity to implement measures for utilizing the bandwidth from OTT streaming
    services is a

    manifesting predicament. There are two scenarios where the video streaming applications
    are

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:12

    P. Ranaweera et al.

    deployed. Peer-to-peer (P2P) streaming traffic routed from an eNodeB serviced
    by a MEC edge

    level platform is conveyed to a UE directly that would save the backbone capacity
    and traffic of

    the network operator. In case of big event streaming, the streams are digested
    at a MEC host ser-

    vice subscribed by a local video production studio that would convey the streams
    to the UEs. This

    approach however, could be subjected to amendments by the video editors. Figure
    4 is represent-

    ing various AR- and video-streaming-based services that are capable of deploying
    under a MEC

    service infrastructure.

    3.2.1

    Security Vulnerabilities. A confiscated video stream is probable for embezzlement
    by the

    attackers for distilling counterfeited credentials that would violate the integrity
    of the content [69].

    A news feed manipulations result in misleading circumstances for the viewers and
    would be critical

    depending on the entropy of the information. As most video streaming traffic are
    generated from

    crowd-sourcing applications, an infected UE poses the threat of multi-casting
    malicious content

    acting as an egress point through the video streaming channels. The majority of
    the social me-

    dia and crowd-sourcing accounts are not equipped with strong password-based credentials.
    Thus,

    phishing type attacks are capable of commandeering such accounts that violate
    integrity. Video

    streaming channels however, is encoded with an acceptable level of encryption.
    It makes the inter-

    posing attacks less probable. As streaming content are stored and processed in
    MEHs, malicious

    agents could be conveyed via UEs engaged in various applications mentioned above.
    This type of

    attack results in compromising the edge infrastructure. Moreover, an infected
    ME App that pro-

    cesses the streaming content is capable of convincing the MEP and VIM to allocate
    unnecessary

    resources to exhaust the system.

    3.2.2

    Existing Solutions. Makinen [86] proposed a business model for video streaming
    in events

    handling incorporating MEC service platforms. The business model is analysed in
    terms of service,

    technology, organization, and finance designs for P2P and big event streaming
    scenarios. Bilal et al.

    [15] presented solutions for interactive multi-view streaming and gaming communities
    incorporat-

    ing edge computing deployments. Interactive multi-view/free-view video, video
    stream transcod-

    ing, and cloud gaming scenarios are considered for identifying edge technologies
    that involve

    techniques such as Muti-view Video Coding (MVC), Interactive Multi-view Video
    Stream-

    ing (IMVS), Content Delivery Networks (CDNs), and Adaptive Bitrate Streaming (ABR).

    Ren et al. [116] investigated the latency minimization problem in a multi-user
    time-division mul-

    tiple access Mobile Edge Computing Offloading (MECO) system. Three computation
    models:

    local compression, edge cloud compression, and partial compression offloading
    are formulated for

    optimizing video compression mechanisms analogous to video streaming deployments.

    3.3

    Machine to Machine (M2M) and Massive Machine Type Communication (mMTC)

    Links in IoT

    Applications such as e-health wearables, IoT devices, and entire range of machine
    controlled au-

    tomated communication deployments are considered under this application [61].
    The perception

    level of the majority of IoT applications is composed of sensory devices and actuators,
    which rely

    on M2M communication for data transferring and conveying of control signals. The
    devices en-

    gaged in M2M communication are called Machine Type Communication Devices (MTCDs)

    by 3GPP. The access network facilitated for most MTCDs is non-cellular technologies,
    which are

    Ultra Wideband (UWB), WLAN, ZigBee, Bluetooth, Low Power Wide Area (LPWA), Long

    Range (LoRa), Narrowband IoT (NB-IoT), or Wireless Body Area Networks (WBANs)
    in

    case of e-health applications [20, 78, 138]. The realization of IoT-based services
    covers the extent

    of communication types, which range from Human-to-Human (H2H), Human-to- Machine

    (H2M), or vice versa, and Machine-to-Machine (M2M) [20]. Though a typical MTC
    architecture

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:13

    Fig. 5. MTC integration with MEC.

    instigates two communication scenarios: between MTCDs and MTC servers or inter-MTCD
    D2D

    type [27]. Healthcare applications such as health-assisting humanoid robots, remote
    surgeries and

    remote patient monitoring are plausible with MEC MTC deployments, which uses WBANs
    for

    monitoring e-health statistics [103]. The types of MTCDs employed in WBANs are
    Implantable

    Cardiac Defibrillators (ICD), pacemakers, neuro-stimulators, gluco-meters, oximeters
    and vital

    sign monitors [138]. These heterogeneous bio-sensors, which are attached to different
    parts of

    the human body are communicating to the BS through a Machine Type Communication
    Gate-

    ways (MTCGs) using non-cellular network technologies. Figure 5 illustrates various
    applications

    plausible for integrating into a MEC system.

    3.3.1

    Security Vulnerabilities. MTCDs inherit three main vulnerabilities. They are:
    commu-

    nication media (such as wireless radio, which would be subjected to eavesdropping),
    resource

    scarcity regarding power and processing. Nano-networks are limiting the usage
    of powerful se-

    curity schemes such as X.805 and translation sequences for security protocols
    between wired and

    wireless communication networks to preserve power consumption [20, 138]. Attacks
    such as DoS,

    jamming and data tampering targeted at nano-nodes in a WBAN are plausible. An
    exploited WBAN

    or a MTCG would penetrate the BS and misinform ME Apps operated under the e-health
    appli-

    cations in MEHs by risking the health of patients. Moreover, DoS or jamming attacks
    targeting a

    WBAN would cause service disruption of the corresponding ME Apps. Moreover, industry-based

    MTCDs are prioritizing the longer operating time over the throughput [78]. Thus,
    the scarcity of

    computational resources in MTCDs is preventing the employment of strong security
    mechanisms.

    All these facts and diversity of communication protocols employed by MTCDs are
    improving the

    probability to penetrate the MEC system by malicious content.

    3.3.2

    Existing Solutions. The SMART framework proposed in Reference [122] facilitates
    data

    extraction, transformation and load process for a plant floor data sourcing strategy.
    This deploy-

    ment is capable of launching OPC-UA and MTConnect MTC protocols for extracting
    data from de-

    vices such as CNC, RFID, robots, sensors, gantry, conveyor, camera, Variable Frequency
    Drives

    (VFDs), and energy meters. Integration of edge computing utilize the storage,
    communication,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:14

    P. Ranaweera et al.

    control, configuration, measurement, and management processes while data analysis
    based on ge-

    ometry, event, and signals are orchestrated for data reduction.

    Li et al. [78] proposed a novel framework that integrates M2M communication with
    MEC in a

    virtualized cellular network for offloading MTCD computational tasks toward the
    edge to utilize

    the energy consumption. Connectivity among the four layers: physical resource
    layer, NFV layer,

    virtual network layer, controller layer, and the application layer are established
    from the conjunc-

    tion of Wireless Network Virtualization (WNV) and SDN technologies. The random
    access

    process is formulated employing Partially Observable Markov Decision Process (POMDP)

    to optimize the cost in terms of energy consumption and computation execution
    time. Moreover,

    a new technology called embedded Subscriber Identity Module (eSIM) is integrated
    into the

    MTCDs that offers the switching ability among virtual networks considering their
    distinct features

    and QoS requirements. Zhang et al. [154] proposed a statistical delay bounded
    QoS provisioning

    scheme for two types of mobile data offloading scenarios: WiFi offloading and
    D2D offloading. This

    offloading scheme intends to be deployed on edge computing mobile wireless networks.
    The D2D

    offloading scenario is applicable to MTC deployments that require off-site processing
    environment

    due to resource scarcity in MTCDs. Th effective capacity and the optimal probability
    of using D2D

    offloading scenario is modeled mathematically to forecast a QoS guarantee for
    D2D-based edge

    deployments.

    Dong et al. [27] propose an ICN approach to support anycast services in the core
    network

    through the MTC engagement at the mobile edge network located at the eNodeBs.
    Network soft-

    warization is established from slicing of different service layers managed from
    an orchestration

    entity and a slice controller. A cropland monitoring use case is considered for
    formulating the

    solution where a protocol is proposed to indicate the intended message flows among
    the entities

    eNodeB, SGW, PGW, MTC server, and MTCDs. The results suggest that the bandwidth
    saving is

    higher at lower anycast update intervals times. Braeken et al. [18] proposes an
    Edge Support-

    ive Secure MAR (ESSMAR) architecture to assist doctors with additional information
    via MAR

    means to conclude the diagnosis. It is obvious that medical/healthcare information
    is extremely

    private, and should be protected against external parties. Thus, ESSMAR is included
    of a registra-

    tion/ authentication key management scheme that was validated against MitM and
    replay attacks

    through AVISPA verification tool. The security analysis conducted among the mobile
    devices, edge

    server, cloud server, and underlying networks has given valid insights in formalizing
    the ESSMAR

    protocols.

    3.4

    Autonomous Driving Channels/Connected Vehicles and Vehicle to

    Vehicle (V2V) Connectivity

    The V2E adaptation is an initiative taken for Intelligent Transportation Systems
    (ITS) [101].

    Vehicular Networks (VNs) that form the ITS deployments have its distinct place
    in 5G context

    [136]. Employing MEC system or any other edge paradigm for launching V2E applications
    is a

    certain fact due to its requirement of ultra-low latency and reliability [103].
    The 3GPP defined con-

    nected vehicles technology is focused on enhancing safety, reducing traffic congestions,
    sensing

    vehicle behavior and servicing other vehicular value added services by offloading
    computational

    and geo-distributed services to roadside BSs or Infrastructure to enable autonomous
    driving with

    data connectivity that attribute the alleviated latency [87]. Though, with envisaged
    drastic de-

    velopment, transportation industries are becoming conspicuous cyber-targets for
    adversaries due

    to their rapidly evolving mobility structure as concluded by the report from IBM
    X-Force and

    Transport Systems Catapult [43]. The smart sensors deployed in vehicles enable
    the Advanced

    Driver Assistant Systems (ADAS), which is introduced as the preliminary stage
    of self-driving

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:15

    Fig. 6. ITS integration with MEC.

    applications [145]. The embedded features that attribute to 100 million lines
    of program code and

    processing ability of 25 GB data per hour improves the feasibility for deployment
    [73]. Vehicle

    automation approaches are entirely reliant on sensors. As sensors being electronic
    devices prone

    to be penetrated by adversaries, any successful malicious penetration could result
    in vehicle colli-

    sions, traffic congestions or damages to properties or human lives.

    The connectivity between the vehicles is different from the connectivity from
    a vehicle to the BS.

    The protocols and the communication technology employed for this connectivity
    depends highly

    on the manufacturer. Though, in the United States the standard for V2V connectivity
    is Dedicated

    Short-range Communication (DSRC) technology, which would transmit location, direction
    and

    speed of the vehicle to the nearby vehicle [137]. The intention of this V2V deployment
    is to provide

    early warnings to imminent accidents detected through a smart system embedded
    in the vehicles.

    Figure 6 depicts the wide range of aspects in ITS deployments integrated with
    a MEC system.

    Further, possible attack vectors are indicated in an illustrative context.

    3.4.1

    Security Vulnerabilities. Vehicular entities are prone to attacks, which could
    be launched

    in the proximity of the targeted device as physical damage, hardware Trojans,
    and side-channel at-

    tacks. These attacks could grant access to the communication devices of the smart
    vehicles, which

    are in direct connection to the Engine Control Unit (ECU) of the vehicle. The
    infiltration of the

    ECU could lead to circumvention of the safety critical systems in the vehicle
    [101]. Thus, influ-

    encing the ECU with false statistics in case of an autonomous or semi-autonomous
    driving could

    endanger the vehicle and the passengers travelling in it. Moreover, false information
    could be con-

    veyed by an infected system to a ME App operated under a MEH for causing vehicular
    accidents

    with malfunctioning automotive processes.

    The threats plausible for vehicles are mainly targeted at the different systems
    in a vehicular en-

    tity, such as GPS (spoofing and jamming), in-vehicle devices (malware, head unit
    attack), acoustic

    sensor (fake noises or interference), radar (jamming, repeater, chaff and smart
    materials), LIDAR

    (jamming and smart materials), Odometric sensor (magnetic or thermal), and electronic
    devices

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:16

    P. Ranaweera et al.

    (electromagnetic pulse) [101]. Attacks such as dictionary, rainbow table, and
    brute-force attacks to

    extract the passwords or keys, DoS, or DDoS attacks for service disruption, protocol-based
    attacks

    targeting Controller Area Network (CAN), or FlexRay and Rouge updates where the
    adversary

    targets the ECU firmware are plausible attacks on software perspective [98]. Out
    of those, attacks

    focused on in-vehicle, GPS and electronic devices are significant for MEC-based
    connected vehicle

    deployments. Apart from service disruption of self-driving applications, latency
    precipitated from

    these interposing or jamming attacks would still be crucial for connected vehicle
    applications.

    “Uconnect” is a remote monitoring and controlling in-vehicle connectivity tool
    that maintains

    a link with the internet from ECU for facilitating drivers the off-the-vehicle
    access. The same

    link with the internet is prone to exploitation for compromising vehicular controlling
    (brakes,

    steering, and lighting) and peripheral ECU/Bluetooth-based infotainment systems
    that improve

    the plausibility of impregnating user mobile devices [43]. The traditional measures
    for protecting

    the vehicular systems are inviable due to the evolving softwarize infrastructure
    of the connected

    vehicle concept.

    The mobility of the connected vehicles would be a major concern as their speeds
    and direction

    are changing rapidly with their movement. This mobility aspect of V2E applications
    are prone

    to threats of frequency hijacking of roamed channel, masquerading during handshake,
    and VM

    migration attacks presented [68]. The causes of this threats could result in traffic
    congestions,

    accidents, property damages, or human casualties with the latency caused by mobility.

    An infiltrated vehicular communication device is capable of injecting false information
    with the

    intention of causing accidents. A threat originated at a vehicular sub system
    for propagating a ma-

    licious agent to the MEC system is facilitated by the intrinsic circuitry of novel
    V2E deployments.

    As these embedded circuits are enriched with resources, connectivity and coverage
    for infiltration

    could be achieved. But the threat origination could incur at a vehicle that is
    not connected to the

    BS directly. The wireless links established between the vehicles in close proximity
    are vulnerable

    to jamming or interference attacks that disrupt the V2V communication links entirely.
    However,

    the possibility of a V2V link being subjected for intervention-based attacks such
    as MitM and relay

    would be less probable due to the speeds where the vehicles are travelling.

    3.4.2

    Existing Solutions. To counter the security threats on ITS deployments, security
    proce-

    dures and algorithms have been defined in the IEEE Wireless Access for Vehicular
    Environ-

    ments (WAVE) standard, which are followed in U.S. and Europe under ETSI [58].
    This standard

    proposes an ECC-based schema for certification and encryption where the wireless
    technology

    IEEE 802.11p is used for secure communication. An adversary is capable of exploiting
    even the

    smallest sensors inbuilt in a vehicle, such as ultrasonic sensors, which are used
    to detect the short

    range distances for assisting parking. Xu et al. suggested two defense strategies
    for vehicular sen-

    sory systems. They are single-sensor-based Physical Shift Authentication (PSA)
    scheme that

    verifies signals on the physical level and Multiple Sensor Consistency Check (MSCC)
    that em-

    ploys multiple sensors to verify signals on the system level to overcome the probable
    attacks on

    ultrasonic sensors such as random spoofing, adaptive spoofing and jamming attacks
    [145].

    As an initiative to achieve the efficiency guaranteed by Vehicular Delay Tolerant
    Networks

    (VDTNs), Kumar et al. [66] proposed a system architecture that integrates the
    smart-grid envi-

    ronments with MEC-based hosting platform for various applications commandeered
    by mobile

    devices that are operating within the vicinity of Plug-in Hybrid Electric Vehicles
    (PHEVs).

    The architecture consists of four layers where the edge data centers responsible
    for data stor-

    age, file services and CA servers for legitimizing secure entities are included
    in the third layer.

    Smart charging functionality is modeled for PHEVs using the Bayesian cooperative
    coalition game

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:17

    approach in which the throughput increased by 10–15% while 20% and 10% decrements
    are ob-

    tained for response time and incurred delay, respectively.

    Grewe et al. [45] discussed MEC as a solution to alleviating the cost and latency
    associated with

    the resource heavy algorithms executed at the cloud in Electronic Horizon (EH)
    ADAS systems.

    The strategy involves offloading the EH instances to the Base Transceiver Station
    (BTS) or the

    Road-side Unit (RSU). This enables mobility independent data retrieval and virtualized
    services

    with Information Centric Networking (ICN) integration. Security and privacy challenges
    in

    relation to the ICN integration are identified in the article.

    Cao et al. [19] introduced a MEC-based supporting architecture for Electrical
    Vehicle (EV)

    charging that employs RSUs as edge elements to orchestrate the operations: disseminating
    Charg-

    ing Station (CS) availability to EVs, information mining and aggregation for EV
    charging reser-

    vations. A protocol for signaling is designed between the entities CS, Global
    Controller (GC)

    located in the cloud and RSU, EV operating in the edge network. A process flow
    for charging was

    introduced in use of 4 algorithms and a scenario was simulated considering an
    area of 4,500 × 3,400

    m2 in Helsinki.

    Aissioui et al. [6] conceptualized the Follow Me edge-Cloud (FMeC) directive amalgamating

    the MEC and Follow Me Cloud (FMC) concepts that sustain the requirements of 5G
    automotive

    systems. The envisioned FMeC architecture enrolls PMIPv6 domains that serve edge
    cloud services

    and links to the vehicular entities from eNodeBs covering the domain area. Performance
    was eval-

    uated from a simulation to model mobile network environment, vehicle traffic environment,
    and

    network communication model that employed the tools MONeT++, INET, SimuLTE, and
    Veins.

    3.5

    Augmented Reality (AR), Virtual Reality (VR), and Mixed Reality (MR)

    Of encompassed 5G service categories: enhanced Mobile Boradband (eMBB), massive

    Machine-Type Communication (mMTC), and Ultra-Reliable and Low-Latency Commu-

    nication (URLLC); mobile VR, MR, and AR are use cases of eMBB and URLLC, which
    guarantees

    the ultra-reliability for the considered applications [30, 132]. As a 5G use case
    AR, VR, and MR

    are facilitating the services of providing immersive and interactive experience
    for: 5G hotspots,

    in-vehicle infotainment systems, and gaming for educating/instructing [88], in
    addition to envis-

    aged smart-health applications of remote surgery and remote robotic controlling
    [111]. The VR

    refers to a 100% simulated visualization while AR and MR are differing by the
    extent of virtualiza-

    tion overlaid with digitization on visual perception [30]. A typical VR Head Mounted
    Display

    (HMD) occludes the users’ field of view and positions the virtualized elements
    through eye and

    head movement tracking. In the current market, VR services are delegated to the
    low cost mobile

    devices such as Samsung Gear VR and Google Cardboard while Oculus Rift, HTC Vive
    or PlaySta-

    tion VR are high quality streaming products with latency sensitivity. The Motion-to-Photone

    (MTP) latency exceeding 15–20 ms for image rendering causes motion sickness for
    users through

    conflicted signals precipitated on Vestibulo-Occular Reflex.

    Latency < 10 ms, bandwidth > 1 Gbps and cell capacity > 500 connections are the
    requirements

    for ensuring the AR services with performance factors of screen response ≈ 2 ms,
    sensory extrac-

    tions ≈ 1 ms, refresh rate at 120 fps ≈ 8 ms, and network RTT processing ≈ 2 ms
    for AR to be

    deployed as a 5G use case [88]. Basic function of an AR mechanism is to combine
    digital data

    generated through computed processing to the physical reality that intensifies
    the human expe-

    rience. AR applications have adopted mobile technologies such as Layar, Junaio,
    Google goggles

    and Wikitude to enable its integration toward MEC [1]. Error diagnosing in industries
    and fixing,

    remote live supporting by the Original Equipment Manufacturer (OEM), Human-Machine-

    Interface (HMI) functionality for machine operation and virtual training for operators
    are few

    plausible use cases of AR and VR applications in the industries [69]. Typical
    AR process requires

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:18

    P. Ranaweera et al.

    five critical components operate: video source (mobile camera), tracker (position
    tracker of the

    user), mapper (modeling of the environment), object recognizer (known object identifier),
    and a

    renderer (processing of the frames) where the components other than the locally
    deployable video

    source and the renderer could be hosted in the MEC server for computer intensive
    offloading [87].

    An AR deployment on MEC test-bed has shown the latency and energy consumption
    reduction

    by 88% and 93%, respectively, through computational offloading [84]. This result
    is increasing the

    plausibility of integrating AR applications with MEC. Moreover, web-based AR (web
    AR) is an

    approach that overcomes the cross-platform and extensive provisioning limitations
    that are inher-

    ent with device-based and app-based AR applications. MEC is a pertinent deployment
    option for

    web AR that is envisioning to achieve 1 ms latency with 5G integration [104].

    3.5.1

    Security Vulnerabilities. The main threats plausible in AR applications are accessing
    and

    unauthorized manipulation of the video streams, where the attacker could easily
    distill the sen-

    sitive data of the users while manipulations of the video streams could lead to
    critical failures in

    machinery in industrial applications [69, 87]. Thus, an exploited streaming channel
    between the

    MEC servers and the AR applications could confiscate the content in MEC hosts,
    which would

    infect the streaming traffic conveyed to other AR users in the proximity operated
    under the ME

    application. An infected ME App would manipulate the MEP and MEPM of the MEC servers
    to

    allocate more inessential resources for the particular application resulting service
    interruption of

    the MEC Hosts. Conversely, the privacy of both physical and virtual worlds of
    AR and VR users is

    a great concern [70]. Other than the private information such as credit card details,
    banking and

    personal passwords, virtual information composing the behavioral patterns (pulse
    and eye track-

    ing enabling sensitive inferences [70]) would be a critical security concern.
    The interposing of any

    high-bandwidth channel is conceivable for attacks such as MitM, impersonation,
    malicious node

    inspection, relay attacks and any attack plausible for intervening communication
    channels.

    3.5.2

    Existing Solutions. Langfinger et al. [69] proposed a secure architecture for
    industrial AR

    applications to be compatible with Industry 4.0 standardization. In the deployment,
    an industrial

    automation device (as a Programmable Logic Controller (PLC)) is securely connected
    to a

    mobile device that would convey the camera frames into the edge server through
    the AR pipeline.

    After pose estimation, 3D registration, and rendering processes, AR output is
    visualized at the

    mobile device transferred in the same secure channel. Measures such as prohibition
    of parallel

    connections that links the UE and the edge, one directional information flow as
    in data diodes,

    using Transport Layer Security (TLS) protocol, and dynamic assignment of permissions
    for UE

    are proposed to enhance the security in this solution.

    Qiao et al. proposed a framework in Reference [104] for integrating web AR with
    MEC. The

    framework is formed from terminal, edge cloud, and remote cloud levels. The terminal
    level is

    pursuing the service scheduling and processing tasks while image capturing, image
    matching and

    3D rendering are performed under processing operation. The edge level orchestrates
    the AR ob-

    ject deployment, destruction and support functions while the remote cloud level
    is provisioning

    generalized services in terms of resource management. A performance evaluation
    conducted em-

    ploying Samsung Note 4, Wi-Fi, and Alibaba cloud for launching the MEC framework
    revealed the

    effectiveness of edge computing compared with cloud computing.

    The computational intensive and delay sensitive features of AR deployments prompt
    the issue

    of battery life time on AR devices. To address this predicament, Al-Shuwaili et
    al. [7] formulated

    a model for offloading AR tasks to a cloudlet operating in the edge to alleviate
    the computational

    and communication overhead thereby utilizing the energy consumption. Successive
    Convex Ap-

    proximation (SCA) scheme is adapted to allocate the resources in the AR process
    in an energy

    efficient manner.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:19

    Fig. 7. Applications and security of MEC-based UAV.

    Elbamby et al. [30] investigated a use case for multiplayer immersive and interactive
    VR gaming

    scenario for assessing the URLLC performance that employs edge computing and mmWave
    Ac-

    cess Points (mmAPs). In the gaming environment, the location and orientation of
    VR Players

    (VRPs) are are tracked and mapped into the virtual space using the mmWave head-mounted

    displays (mmHMDs). MEC network is formed to perform the offloaded real-time computing

    tasks that are conveyed through the mmAPs.

    Even though the MEC paradigm improves the network responsiveness of the VR applications

    through alleviated latency, saving the communication bandwidth is vital for the
    network to avoid

    congestions. Conversely, leveraging computation and caching resources in mobile
    VR devices are

    an approach of sustaining the transmission efficiency. Thus, Yang et al. [148]
    proposed a commu-

    nication constrained MEC framework that utilizes the consumption of resources
    in the mobile

    VR devices through the exploitation of caching mechanisms in the edge servers.
    Lyapunov the-

    ory was used to produce the offloading decision optimization algorithm, which
    acts as an optimal

    task scheduling policy, while the task requests are modeled as a Bernoulli process
    among other

    mathematical scenarios considered.

    3.6

    Unmanned Aerial Vehicles (UAVs)

    UAVs play an increasingly important role in various scenarios such as photography,
    disaster re-

    sponse, inspection, monitoring, precision agriculture, military, communication
    relaying, traffic

    control, and disaster relief services [50, 87]. Tasks such as disaster relief
    efforts, detection of dam-

    aged reactors in the Fukushima nuclear power plant, real-time sensing of radiation
    levels, and sta-

    tus assessment of the neutralizing program was orchestrated by UAVs during the
    Japans’ East great

    earthquake [91]. Federal Aviation Administration (FAA) is predicting the amount
    of UAVs to

    be sold annually to 4.3 million by 2020 as an indication on the extent of applicability
    for UAVs

    [39]. UAV-based communication deployments attribute: the Line-of-Sight (LoS) transmission
    at-

    tained by hovering to targeted locations, dynamic deployment ability that features
    robustness to

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:20

    P. Ranaweera et al.

    climatic effects and nullified costs for site installation in case of an acting
    BS, and UAV-based swarm

    networks that facilitate ubiquitous connectivity to ground users with high flexibility
    and various

    provisioning options [76]. UAV operations are categorized as Low-altitude Platforms
    (LAPs)

    and High-altitude Platforms (HAPs) that are distinguished on altitude, computation,
    coverage,

    power, capacity and endurance capabilities. Moreover, Size, Weight and Power (SWAP)
    of UAVs

    are constraints for attaining desired performance metrics. The priority of the
    UAV is to conserve its

    battery life for flying while offloading the computational or storage content
    to the MEC servers for

    processing [103]. Thus, employing strong cryptographic primitives or prolonged
    security protocols

    would be infeasible. The controlling link to UAVs could be maintained from a ground
    station or by

    a remote station controlled through a MEC system. Figure 7 illustrates various
    UAV-enabled appli-

    cations in addition to embedded components of a UAV plausible for exploitation
    and attack vectors.

    3.6.1

    Security Vulnerabilities. In this application, the usage of cryptographic primitives
    would

    be limited due to the requirement of preserving power (e.g., drones). Concisely,
    threats plausi-

    ble for UAVs are categorized under Electronic/Electromagnetic, Cyber, and Physical
    (ECP)

    spaces [39]. Most common type of attack plausible for drones or UAVs is the GPS
    spoofing attack,

    in which fake GPS locations are sent to the UAV for misleading or crashing the
    object. Approaches

    to bypass the cryptographic measures with electromagnetic, optical, or acoustic
    emanations called

    compromising emanations are mentioned in Reference [39]. Apart from that attacks
    such as mal-

    ware, key-loggers, blinding the sight of the remote pilot with laser, identity
    spoofing, cross-layer,

    multi-protocol and various DoS or DDoS attacks focused on exhausting the battery
    of the UAV is

    plausible [50, 107]. In the two methods where UAV maintains direct connectivity
    with the BS for

    controlling or computational offloading, the connectivity could be subjected to
    interposing attacks

    plausible on the air interface [109]. The threats toward the MEC system from UAV-based
    attacks

    can exist with the computational offloading method where a malicious agent could
    be propagated

    to the MEH for manipulating ME Apps. Any successful attack could result in UAV
    crashing that

    cause damages to property or human lives.

    3.6.2

    Existing Solutions. Fouda et al. conducted a comprehensive assessment for plausible
    at-

    tacks on UAV Systems (UAS) focusing on Software-defined Radio (SDR)-based UAS
    architec-

    tures [39]. Hooper et al. [54] proposed a multi-layer security framework that
    integrates the Open

    System Interconnection (OSI) model layers with the Linux operating system kernel
    to secure the

    Parrot Bebop type UAVs from the exploits buffer overflow, DoS and Address Resolution
    Proto-

    col (ARP) cache poison attacks. Penetration tests have been undergone in addition
    to introducing

    a watchdog timer to utilize the CPU operations to the navigational processes and
    anti-spoofing

    mechanisms to the UAV access point.

    Motlagh et al. [91] proposed a crowd surveillance method adopting UAVs and face
    recognition

    techniques for detecting crimes, vandalism, and terrorist acts. In this case,
    MEC servers are de-

    ployed alongside a BS for offloading the surveillance processing tasks to utilize
    the battery life of

    UAVs. In the experimental setup, a hexa-copter used as the UAV is embedded with
    a camera, LTE

    modem, computing and sensory inclusions for flight controlling. The access to
    the MEC server is

    facilitated from a LTE eNodeB while the face recognition process is operated at
    the ground con-

    trol station. Local Binary Pattern Histogram (LBPH) algorithm is employed for
    face detection

    while the results demonstrated a significant reduction in energy consumption and
    processing time.

    Garg et al. [43] proposed a load balancing system for vehicular edge processes
    where UAVs are

    used as intermediary hubs for transmitting information for processing and surveillance
    activities.

    The system includes the entities: vehicular entity, UAV, dispatcher, edge devices,
    cryptographic en-

    tity, and the aggregator. The main steps of the model are authentication, balance
    load distribution,

    data processing, encryption, decryption, aggregation of data, and decision delivery
    to the vehicle

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:21

    Table 1. Summary of Security Challenges for MEC Integrated 5G-enabled Use Cases

    through the UAV. A triple-Bloom-filter is used to launch a fast service processing
    platform between

    the vehicles and UAVs for distinguishing traffic, alleviating E2E delay, and enhancing
    authentica-

    tion mechanism. The experiments conducted in a vulnerable environment with 100
    possible attack

    vectors concluded the improved factors: computation time complexity, time complexity,
    delay, and

    precision.

    Inspired by the Wireless Power Transmission (WPT) technologies and their usability
    on

    MEC use cases, Zhou et al. [155] introduced a novel UAV-enabled wireless powered
    MEC system

    for prolonging the operational time of the energy limited mobile devices. UAVs
    are transmitting

    wireless energy to UEs that are located in the coverage area, where the UEs are
    granted the ability

    to leverage the harvested energy to perform computations or offloading tasks.
    A 3D Euclidean

    coordinate system and Time Division Multiple Access (TDMA) protocol is adopted
    for formu-

    lating the model. Moreover, energy minimization, computation offloading, CPU frequency
    opti-

    mization, and trajectory optimization are studied employing Sequential Convex
    Approxima-

    tion (SCA) technique and Karush-Kuhn-Tucker (KKT) conditions. The simulated results
    sug-

    gest a decremented total energy consumption of UAVs in the proposed scheme compared
    with two

    other schemes. The minimization however, is not significant. Security challenges
    for MEC-based

    5G use cases are specified in Table 1. Further, security countermeasures/best
    practices adoptable

    for MEC use cases are tabulated in Table 2.

    4

    MEC- AND 5G-RELATED PROJECTS

    The MEC initiative is evolving around Europe as most of the companies that collaborate
    to stan-

    dardize the concept are European institutions including the ETSI. Thus, it is
    conspicuous that most

    of the MEC-based projects are formed around Europe. The European 5G Infrastructure
    Public

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:22

    P. Ranaweera et al.

    Table 2. Summary of Security Countermeasures/ Best Practices for MEC Use Cases
    / Applications

    Ref.

    No.

    Proposed Security Countermeasures / Best Practices

    Critical

    Infrastructure

    eMBB Cases

    M2M and mMTC

    Auto Driving/ V2V

    AR/ VR/ MR/ XR

    UAVs

    [128]

    Machine learning-based anomaly detection technique for

    SCADA systems

    ✓

    ✓

    [74]

    Utilizing blockchain-based VNF descriptors for energy level

    tracking in RAT xMEC offloading deployment

    ✓

    ✓

    [122]

    SMART framework for detecting anomalies in PLC-based

    extracted data

    ✓

    ✓

    [42]

    Blockchain model for SGNs to counter SDT and BEA, energy

    related attacks

    ✓

    ✓ ✓

    [66]

    Legitimization of PHEV entities from CA servers in the

    proposed architecture for MEC-based smart-grid vehicular

    charging process

    ✓

    ✓

    [45]

    Security and privacy considerations in the ICN integrated

    MEC-based offloading scenario for EH ADAS systems

    ✓

    ✓

    [69]

    Secure architecture for industrial AR applications that form a

    secure pipeline between UE and the edge servers

    ✓

    ✓

    ✓

    [54]

    Multi-layer security framework for Parrot Bebop UAVs

    integrating OSI model

    ✓

    [43]

    Cryptographic means used in authentication mechanism

    considered for UAV-based load balancing for edge processes

    ✓

    ✓

    [108]

    Security as a Service (SECaaS) approaches for the edge

    ✓

    ✓ ✓ ✓ ✓ ✓

    Private Partnership (5G PPP) with the initiative of Horizon 2020 grants have funded
    a multi-

    tude of research groups in excelling their products and innovative insights on
    5G related directives

    [103]. MEC is an underlying concept of most of such projects to achieve the guaranteed
    features.

    Therefore, in this section, MEC related projects and details of the research groups
    are addressed.

    4.1

    MEC AI (January 2018–December 2019)

    MEC AI [95] is a directive pursued under the Edge Computing Enhanced by Artificial
    Intelli-

    gence (EDGE AI) project conducted by University of Oulu, Finaland. The project
    is funded by the

    Technology Industries of Finland Centennial Foundation, Jane and Aatos Erkko Foundation,
    and

    “Future Makers” award. As a pioneer in cutting edge research on 5G directive,
    researches in Uni-

    versity of Oulu are focused on realizing the potential of employing edge computing
    as a means for

    processing data extracted from sensory and network devices to be utilized for
    applications such as

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:23

    hospitals, industry and vehicle steering. Prime objectives of this initiative
    are low latency and se-

    curity. MEC-based AI methods are developed to achieve those objectives in collaboration
    with the

    Finnish industries as Nokia. Especially, security aspects of MEC and AI integration
    is considered

    as a prime focus.

    4.2

    ANASTACIA [Advanced Networked Agents for Security and Trust Assessment in

    CPS/IoT Architectures] (January 2017–December 2019)

    ANASTACIA [14] is a EU H2020 funded project that integrates MEC and IoT for CPS-based
    de-

    ployments to guarantee holistic trust and security by-design solutions. This is
    one of the highly

    functioning H2020 projects that investigate security from NFV and SDN applicability
    perspective.

    ANASTACIA achieved the goals of adaptation of security and privacy practices evident
    from the

    results of the projects that yield the technological integration of Low-resource
    IoT, VNF image

    integrity, MEC resource geo-partitioning, NFV security best practices, anomaly-based
    IDS, secure

    NFVI, network softwarization, 5G NB-IoT, Security-as-a-Service and many other
    novel concepts.

    4.3

    SESAME [Small Cells Coordination for Multi-tenancy and Edge Services]

    (July 2015–January 2020)

    SESAME [47] is a EU H2020 project that targets the innovation of network intelligence,
    applica-

    tions in the edge and NFV elements established through the extension of small
    cell concept for

    realizing highly dense 5G scenarios. MEC concept is studied for proposing the
    Cloud-enabled

    Small Cell (CESC) concept that forms a multi-operator configurable small cell
    to integrate virtu-

    alized execution platforms. SESAME targets to develop the orchestration strategy,
    NFV manage-

    ment, consumer virtualization management interfacing, self-x feature and radio
    access manage-

    ment techniques demonstrated through a prototype implementation.

    4.4

    SUPERFLUIDITY [A Super-Fluid, Cloud-Native, Converged Edge System]

    (July 2015–March 2018)

    SUPERFLUIDITY [123] project is intending to achieve super fluidity in the network
    by extend-

    ing services to the core, aggregation, and edge partitions as in the case of zero
    viscosity fluids.

    This project is funded by the EU H2020 initiative. SUPERFLUIDITY answers the shortcoming
    of

    current networks such as impeding provisioning times, wasteful over-provisioning
    in variable de-

    mand, ineffective hardware, and ineffective heterogeneity support for multi-vendor
    components.

    The project developers are aiming to furnish the location, time, scale, and hardware
    independence

    benefits to the 5G networks guaranteeing telecom operators the capability to blend
    IT infrastruc-

    ture effectively. Developing a security framework to control the access of network
    processing

    functions is one of the project objectives of SUPERFLUIDITY. Recent directives
    of the project have

    shifted toward SDN and NFV technologies.

    4.5

    5G EVE [5G European Validation Platform for Extensive Trials]

    (July 2018–July 2021)

    5G EVE [34] intend to implement and test, an advanced 5G infrastructure formed
    by intercon-

    necting existing European sites at Greece, Spain, France, and Italy. It is one
    of the three projects

    funded by the 5G PPP in 2018. The conceptual goal of this project is to develop
    a 5G end-to-end

    facility in Europe to validate the network Key Performance Indicators (KPIs) of
    the 5G pro-

    totype scenarios through experimentation. The targeted experimental subjects include
    advanced

    spectrum management, MEC, core/backhaul services, heterogeneous accessing methods,
    and site

    internetworking via multi-slice orchestration. The telecommunication operators
    OTE, Telefonica,

    Orange, and TIM are facilitating the sites at European vicinities that focus on
    diverse use cases

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:24

    P. Ranaweera et al.

    as smart mobility, Industry 4.0, smart energy, smart environment, Immersive media
    and entertain-

    ment. Services such as URLLC, eMBB, and mMTC are dominating the deployment options.

    4.6

    6G FLAGSHIP (June 2018–May 2026)

    This project initiated by University of Oulu, Finland [94], envisions the wireless
    connectivity for

    2030 with data-driven and near-instant features. MEC and use cases specified in
    this article are

    considered directives of 6g-Flagship in addition to Machine Learning (ML) and
    Artificial In-

    telligence (AI) approaches to automate the functions optimally. The goals of this
    project reach

    from finalizing the 5G adoption, to the development of the 6G-enabling technologies
    with speed-

    ing up the digitization process. The domains of wireless connectivity, devices/circuits
    technology,

    distributed computing, and services/applications on 6G are covered in this project.
    A 5G test net-

    work is already deployed in the project and deployed for developing easy to use
    tools for future

    advancements.

    Table 3 represents the summary of MEC-based projects been discussed and their
    targeted aspects

    in terms of security, privacy, trust, mobility, and interoperability.

    5

    DISCUSSION AND FUTURE WORK

    This section comprises a concise explication of assimilated insights from the
    survey in terms of

    security and privacy of MEC systems. Presented insights are aligned with the future
    directives

    proposed from emerging researches for recognizing potential of the MEC deployments.
    Moreover,

    potential applications and probable technological solutions to be integrated with
    MEC to enhance

    the security are summarized.

    5.1

    MEC Applications

    5.1.1

    Critical Infrastructure.

    Lessons Learned: It is evident that MEC capabilities forecast the potential to
    realize the smart

    city concept. Enabling the versatility of infrastructure-based servicing is the
    key to achieving that

    goal. Though assuring security for diverse infrastructure-based services is an
    arduous task due

    to their heterogeneous system architectures. Offloading storage and processing
    functions to the

    MEC edge network however, guarantees that these variant technologies are operating
    in a com-

    plied digitized environment in the data processing phases. SCADA- and PLC-based
    operators are

    common in these deployments. Threats originating internally in such environments
    are capable

    of exploiting the edge system once instilled through the communication channels.
    Eventhough

    mechanisms have been studied to detect malicious entities in SCADA-based systems,
    the security

    of offloading channels are not addressed significantly.

    Future Directions: In terms of smart-grid security, various approaches such as
    key distribution

    based on Needham-Schroeder authentication protocol, ECC, PKI, Trusted Anchor (TA),
    Light-

    weight Directory Access Protocol (LDAP) as a third-party, hybrid Diffie-Hellman,
    AES, RSA,

    Tsai-Lo identity-based encryption scheme, and ECC-based ElGamal schemes are proposed
    for se-

    curing the connectivity extending from the SEM to the smart grid [89, 93, 126].
    Blockchain is an

    approach to be considered in the future to ensure the privacy of subscriber consumption
    statistics

    traversing in SGNs [60]. Similar approaches are plausible for developing security
    solutions to ter-

    minal entities in other infrastructure services. Moreover, securing the offloading
    channels of the

    edge system is a critical directive for mitigating threats originated internally.
    In addition, outsourc-

    ing security to a trusted MEC-based service as in Security as a Service (SECaaS)
    approaches are

    gaining popularity due to its optimum resource utilization in the context of critical
    infrastructure

    [108].

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:25

    Table 3. Summary of 5G and MEC Projects and Research Groups

    Project

    Main Research Focus

    Security Privacy Trust Mobility Interoperability

    MEC AI [95]

    Ensuring low latency and

    security in 5G networks via

    MEC and AI integration

    ✓

    ✓

    ✓

    ANASTACIA

    [14]

    Investigating and

    demonstrating a holistic

    trust and security by design

    solution for CPSs with

    integrated MEC and IoT

    concepts that employ

    NFV/SDN-based

    networking infrastructure

    ✓

    ✓

    ✓

    ✓

    SESAME [47] Extending the small cell

    concept to achieve CESC,

    with the integration of

    MEC and NFV technologies

    to realize 5G dense

    scenarios

    ✓

    ✓

    SUPERFLUID

    [123]

    Proposes a converged

    cloud-based 5G concept

    that enable mobile edge use

    cases by extending the

    service functionality to the

    holistic network

    ✓

    ✓

    ✓

    5G EVE [34]

    Implementing and testing

    an advanced 5G

    infrastructure extended to

    European sites for

    validating 5G services

    including MEC

    ✓

    ✓

    6G FLAGSHIP

    [94]

    Developing the

    fundamental technologies

    for emerging 6G with an

    emphasis on wireless

    connectivity and intelligent

    distributed computing

    ✓

    ✓

    ✓

    ✓

    5.1.2

    eMBB Channels/Video Analytics/Big Events.

    Lessons Learned: Crowd-sourcing applications are one of the major contributors
    for prolifer-

    ation of video streaming traffic. As these services are demanding UHD level quality
    in videos to

    facilitate ubiquitous reception at mobile devices, managing the bandwidth utilization
    is a conun-

    drum for MNOs. This requisite is prominent in case of a big event coverage is
    undergoing. Thus,

    MEC in-proximity servers are capable of buffering the content prior to launching
    the streaming

    service, that enables the seamless video transmission. Advance video analytic
    capabilities are plau-

    sible with MEC servers that align with CCTV, face and vehicular name plate recognition
    techniques

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:26

    P. Ranaweera et al.

    adapted by authorities. Most common type of security attack plausible for streaming
    channels is

    the interposing attacks conducted for altering the content for misleading the
    receiver, which are

    influenced by politics, terrorist, or cyber marketing strategies. To secure the
    channel, an acceptable

    level of encryption should be employed. Though embedding security measures for
    video stream-

    ing channels in these scenarios are costing the bandwidth utilization. Thus, metrics
    should be

    established to retain the balance between security and bandwidth usage.

    Future Directions: As trending video streaming and crowd-sourcing applications
    are demand-

    ing their services to mobile devices, mobility is an aspect to be considered for
    proposing security

    measures. Thus, PLS-based approaches as in Reference [143] could be utilized to
    ensure security

    from the mobile device end. Joint network coding and re-transmission is an approach
    to secure

    the video streaming channels in IoT systems as proposed in Reference [105]. Moreover,
    embedding

    security mechanisms in the video coding protocols at the design stage with minimum
    bandwidth

    adaptation is an interesting research directive for the future.

    5.1.3

    mMTC Links in IoT.

    Lessons Learned: The mMTC applications are ranging from the personally using e-health
    type

    WBAN wearables to massive industrial applications that employ MTCDs of different
    scales to cre-

    ate an autonomous environment. MEC plays a vital role for ensuring security for
    wearables with

    attributed location and context awareness. Moreover, edge infrastructure acts
    as a offloading ser-

    viceable platform to the industrial mMTC applications to improve their efficiency
    and global reach.

    As MTCDs are operating with various non-cellular communication technologies, employing
    secu-

    rity mechanisms should be applied to each technology separately in accordance
    with their proto-

    cols and specifications. Authentication mechanisms to be adapted should vary dependent
    on the

    authenticating entity as both human and machine entities are engaging in mMTC
    communica-

    tions. Service impeding attacks such as DoS and DDoS are causing more damages
    to mMTC-based

    industrial systems due to their reliance on scheduled operations. Privacy is a
    considerable factor

    for WBAN-based services that is not addressed significantly.

    Future Directions: For implementing security in WBAN based on nano-technological
    scale,

    biochemical cryptography could be adopted where biological molecules such as DNA
    or Ribonu-

    cleic Acid (RNA) are used as a source of encryption [138]. Though, this emerging
    field is cre-

    ating new set of challenges, a cryptographic key based on molecular configuration
    or chemical

    reaction unique to a person would grant the level of inherence required from the
    bio-metrics in

    the nano-domain. Moreover, ECC-based lightweight cryptographic protocols could
    be employed

    with WBAN sensory devices that are more resourceful than nano-level devices. In
    Reference [153],

    a Lightweight and Robust Security Aware (LRSA) D2D assisting Certificate Less
    Generalized

    SignCryption scheme is proposed for WBAN-based Mobile Health (M-Health) applications
    that

    resemble the requirement. As M2M-based authentication schemes are prominent in
    this use case,

    PUF-based approaches would be viable for deployment. Integrating security into
    D2D offloading

    schemes is a potential research area for the future under this application. Blockchain
    is becoming

    a solid resolution for privacy protection. Thus, blockchain-based solutions such
    as Reference [52]

    for tele-health wearable privacy preservation and certificate revocation approaches
    for M2M links

    as in Reference [51] are promising directives for the future.

    5.1.4

    Autonomous Driving/Vehicle to Vehicle (V2V) Communication.

    Lessons Learned: This is one of the leading use cases of MEC that relies on processing
    capa-

    bility of the edge for enabling autonomous driving to mitigate traffic congestions
    and accidents.

    Context awareness feature of the MEC is the key to deploying these services. In
    this use case, most

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:27

    probable attack vectors are emanating from the in-vehicle systems as they are
    prone to physical

    attacks. The radio-based links that communicate with the MEC BSs directly are
    exploitable by at-

    tackers to cause accidents. In an ITS system, infrastructure-based intermediary
    entities are located

    for expanding coverage. These entities are accessible for physical manipulations.
    Moreover, inter-

    facing vehicular entities that engage in V2E adaptations are plausible scenarios
    for MEC. In that

    aspect, security in DSRC protocols that enable the V2V communication is a significant
    factor to

    be considered as explicated in Reference [150].

    Future Directions: Embedding adequate security measures to DSRC protocols as proposed
    in

    Reference [79] should be considered to enhance V2E type communication channels.
    As vehicu-

    lar offloading channels are requiring high responsiveness compared with other
    offloading mech-

    anisms, an approach as Vehicular Edge Computing Network (VECN) proposed in Reference

    [125] could be employed to secure the offloading channels specific to vehicular
    communications.

    According to ITS standard, vehicular entities are connecting with the edge under
    different scenar-

    ios of V2X. Thus, adaptive security mechanisms should be utilized as proposed
    in Reference [113].

    Moreover, adaptable measures to enhance the security in ECU of vehicles should
    be investigated

    to mitigate in-vehicle threats. Since all such security measures cannot be applied
    manually, au-

    tonomous approaches should be sought out employing AI or ML methods with novel
    algorithms

    to exploit the trade-off of security application, latency, and energy consumption
    [12].

    5.1.5

    AR/VR/MR.

    Lessons Learned: AR and VR technologies are prominent for gaming and e-learning-based
    ap-

    plications that are extended from eMBB and URLLC adaptation. Latency, bandwidth,
    and cellular

    capacity are prime factors to achieve the required performance. Similar to video
    streaming appli-

    cations, MEC facilitate a closer proximity video server for processing and storing
    AR scenarios.

    Alleviating the latency associated with image rendering and transmission is critical
    for the VR

    or AR users to avoid health issues as motion sickness. The remote surgeries, error
    diagnosis and

    maintenance in industries are viable AR deployments for the future. Thus, minimizing
    the delay is

    vital for realizing these deployments. In the perspective of security, service
    impeding attacks are

    jeopardizing such latency prone services. Attack vectors such as physical tampering,
    side-channel

    attacks, malicious code injections, and hardware Trojans are applicable to AR/VR
    HMDs. Privacy

    is a key concern with AR systems, as they are extracting a higher range of sensory
    acquisition

    scope (visual strength, ocular orientation, location, and arm/leg motion tracking)
    that expose user

    sensitive credentials and behavioral statistics.

    Future Directions: Developing security measures in the user devices as HMDs is
    imperative to

    ensure the privacy of users. As behavioral statistics could be gained from AR-
    or VR-based games

    played by the users without their awareness, legislations should be put forward
    to extract user

    consent before enrolling with a particular game. Moreover, human health is a concerning
    factor

    for AR/VR-based services that could result in ocular discomfort. Thus, proper
    methods should exist

    to notify the user regrading the timely visual quality that AR application is
    attributing to safeguard

    the user health. Though elevated number of sensory extracting apparatus embedded
    in AR devices

    are forming an opportunity to improve the existing authentication schemes and
    network security

    through visualization as patented in References [10, 124].

    5.1.6

    Unmanned Aerial Vehicles (UAVs).

    Lessons Learned: As most UAV-based services are operated with a direct connectivity
    main-

    tained with the UAV from a ground station, mobility tackling and LoS control signal
    transmissions

    are factors that raise concerns over the communication aspects. The dispersed
    MEC servers are

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:28

    P. Ranaweera et al.

    providing an extended coverage for UAVs to operate seamlessly. UAVs could enhance
    the perfor-

    mance by offloading the processing to MEC servers. Due to the higher mobility
    and eccentric

    reachability, UAV deployments are perceptible for surveillance activities in the
    future. Though bat-

    tery life is the prime factor that decides their performance. Thus, UAV targeted
    attacks are focusing

    on exhausting the resources of it to terminate its life-cycle. In addition, eavesdropping
    scenarios

    are probable with intently placing of fake UAVs to induce spoofing attacks.

    Future Directions: Proper measures should be explored to pursue the operation
    of the UAVs in

    instances that it fails to maintain the LOS connectivity to the operating ground
    station. Utilizing AI

    for developing an adaptive auto-pilot scheme is an approach to overcome that requirement
    [146].

    PLS measures could be adapted as in Reference [156] for maximizing the Intercept
    Probability

    Security Region (IPSR) to obscure the eavesdroppers through friendly jamming.
    Moreover, UAV-

    enabled mobile relaying with an integrated MEC platform could be utilized for
    improving PLS in

    mobile communication environments [141]. UAVs should be embedded with self-activated
    security

    features at the manufacturing stage to counter intercepting attacks as isolation
    from the communi-

    cation network is not an option. Similar to V2V applications, UAV requires the
    autonomous edge

    intelligence through means of AI/ML methods to improve decision making, and security
    manage-

    ment [46, 149].

    5.2

    Futuristic Applications

    5.2.1

    Rural Communication. The term “rural” signifies an opposite meaning to an urbanized

    area that does not inherit adequate amount of resources to facilitate a seamless
    communication

    operation. As telecom operators are prioritizing their return on investment, developing
    telecom-

    munication infrastructure extending to areas that occupy minor population is ineffective
    in their

    perspective. Moreover, pragmatic circumstances such as geological location, atmospheric
    condi-

    tions, LoS, and failure to acquire land to launch remote sites are plausible factors
    that enable rural

    communication. Thus, existing communication options are limited to satellite links
    that are accessi-

    ble globally with attributed drawbacks of latency and high reliance on atmospheric
    conditions [22].

    Rural communication is applicable for various instances where rural communities
    are restricted

    of accessing novel technologies that rely on mobile connectivity for operation
    [120]. Rural Smart

    Grids are one such instance in which an isolated facility or minor community are
    serviced by a low

    capacity grid deployment [62]. Moreover, health sector is a widely applicable
    rural circumstance

    that requires assistance from underlying communication infrastructure to handle
    emergency situ-

    ations including ambulances [29, 55]. Due to the improved capacity and coverage
    in mobile sites of

    MEC systems, servicing the rural areas are plausible with proper mobile propagation
    parametric

    adjustments. In addition, MEC-enabled RAN access interfaces are capable of supporting
    non-3GPP

    communication services that are plausible for connecting the rural sites to the
    proximate BS. MEC-

    based rural transmission of data endure an improved opportunity to ensure security
    and privacy

    compared with satellite communications.

    5.2.2

    Smart Agriculture/Farming. The rapid population growth demands excessive food
    pro-

    duction to cater humans and live stocks in farming industries. Resource depletion,
    pollution and

    scarcity for labor are elevating the arduousness of maintaining agriculture-based
    services to cater

    the demand [100]. Thus, automation is an imminent option for improving the servicing
    of smart

    farms with IoT integration. IoT sensors are deployable for monitoring climatic
    and crop devel-

    opment status to automate the water and fertilizer dispersing mechanisms. These
    automation

    strategies draw insights from gathered data analytics to maximize the crop production.
    Adapting

    machine learning is such a strategy for crop selection and maximizing crop yielding
    rates [67].

    M2M links are typically established between IoT devices that employ technologies
    such as BLE,

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:29

    NFC, or Wi-Fi. As these devices are located remotely to the main farm site, physical
    tampering

    due to intended or natural causes is plausible. Vehicular monitoring is another
    aspect of smart

    agriculture that enhances the efficiency of the outcome. UAVs are applicable to
    remote monitoring

    of crops while autonomous vehicles (tractors) are enabling precision farming [103].

    Nanotechnology-based bio-sensors are a trending adoption for smart farming applications
    to

    conduct accurate analysis on soil humidity, water, pesticide usage, and plant
    pathogens in a nano-

    scale [9]. Dong et al. [27] proposed an information centric approach to achieve
    the anycast service

    in MTC with ICN (Information Centric Networking) being enabled as a slice in the
    future net-

    work adaptable to smart farming. The mobile edge computing at the eNodeB facilitates
    the any-

    cast service to the clients with significantly less experienced latency and reduced
    control message

    overhead generated in the core network. In the MEC perspective, similar to rural
    communication,

    MEC servers remotely situated or reached via enhanced coverage of MEC-enabled
    BSs, contribute

    to smart agriculture services significantly. Though achieving security is a challenging
    task due to

    wide coverage.

    5.2.3

    Industrial IoT (IIoT) and Industry 4.0. Industrial Internet, IIoT or “Industry
    4.0” is a stan-

    dard represented by the Fourth Industrial Revolution (4IR) for integrating IoT
    services for

    industrial sectors [103]. Initial intention of the Industry 4.0 standard was to
    integrate Cyber-

    Physical Systems (CPS), IoT and cloud computing-based data analytics to facilitate
    automa-

    tion for industries by assuring interoperability, information transparency, technical
    assistance,

    and decentralize decision making design principles [106]. Sensors in IIoT are
    optimizing the pro-

    duction from captured sensory data via Programmable Automation Controllers (PAC)
    that

    handle processing and communication [44, 127]. The majority of current industrial
    automation

    plants are embedded with SCADA systems. Thus, security vulnerabilities explicated
    under criti-

    cal infrastructure-based applications are adoptable for this circumstance. Moreover,
    IIoT could be

    visualized as a way of amalgamating the machine-based and human-based workforces
    for achiev-

    ing a maximal outcome that benefit industrial owners and human operators. Digitized
    data of

    every aspect in the manufacturing processes offer opportunities to optimize the
    practices revealed

    through proper mechanisms. As industrial factories are large vicinities, MEC-enabled
    BSs could

    be launched inside the factories for enhanced service provisioning depending on
    the occupied

    human and non-human workforce. MEC edge level launched within a factory premises
    could be

    configured for servicing specialized industrial requisites to achieve low latency
    and high reliability.

    Several edge-based approaches are proposed for enhancing IIoT operation in References
    [16, 97].

    As M2M-based communications are imminent, security protocols should adopt proper
    D2D au-

    thentication mechanisms such as PUF and PLS for mitigating exploitations.

    5.2.4

    Tactile Internet. The Tactile internet is considered as the next evolutionary
    level of the In-

    ternet that deliver real-time control, touch, sensing/actuation information via
    a reliable, available,

    responsive, secure, and intelligent connectivity that envisions a broader internetworking
    context

    capable of handling unprecedented circumstances probable with impending applications
    [5]. This

    vision preemptively coined by G. P. Fettweis in 2014, creates a plethora of opportunities
    and ap-

    plications that provision features required for expanding IT market base [85].
    It is standardized

    by the IEEE Tactile Internet Standards Working Group that is designated by IEEE
    1918.1 [53]. The

    5G mobile network concept is the raison d’etre for Tactile internet that focuses
    on serving the

    industries expanding with the Industry 4.0 standard [129]. Functional representation
    of the end-

    to-end Tactile internet architecture includes master, slave, and network domains
    where master and

    slave domains are operating at Tactile edges[5]. These deployments are mainly
    focused on serv-

    ing CPSs, MTC, M2M, D2D, and VR applications that require 1 ms of round-trip latency.
    Maier

    et al. [85] investigates the deployment of Tactile internet concept with Fiber-Wireless
    (Fi-Wi)

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:30

    P. Ranaweera et al.

    enhanced LTE-A heterogeneous networks to be adopted in MEC considering the latency
    and relia-

    bility performance aspects. MEC with its attributed ultra-low latency and high
    reliability process-

    ing infrastructure in the edge envisage the visions of Tactile internet that enable
    proper security

    mechanisms as a significant factor.

    5.2.5

    Disaster Management. Environmental disasters were once believed as a means of
    balanc-

    ing the human population from over-exhausting the resources on earth from devastation’s
    such as

    landslides, earthquakes, avalanches, tsunamis, volcanic eruptions, flooding, forest-fire,
    and light-

    ning. Though current disasters are prone to be emanated by human intervention
    as in massive

    explosions resulted from industrial malfunctions that extend to nuclear level
    or extremist acts re-

    sulted from terrorism. In spite of the origination of disasters, the damage and
    casualties associated

    with them are unpredictable. Unprecedented nature of the affected scope by geographical
    and at-

    mospheric means are exacerbating the circumstances for evacuation procedures conducted
    by the

    authorities. Thus, scientists are focusing on integrating IoT for disaster management
    and relieving

    scenarios that contribute to early warning, notification, data analytics, knowledge
    aggregation,

    remote monitoring, real-time analytics, and victim localization functions [114].

    Deployment of IoT sensors for measuring the environmental statistics (such as
    atmospheric,

    seismic, volcanic, radiation, and ocean level) is paramount to forecasting disasters
    and their mag-

    nitude. Maintaining the communication links without been overloaded is a prime
    requisite for

    telecommunication service providers perspective in a disaster situation. MEC is
    a paradigm intro-

    duced to improve the standards of current telecommunication infrastructure in
    terms of service

    provisioning and access capacity. Thus, Disaster management services extended
    through WSNs

    could be operated by a MEC edge level in a certain geographical coverage area,
    enabling the disas-

    ter mitigation functions mentioned above. Proliferated responsiveness of the MEC
    RF-based access

    interfaces, attribute the potential to improve the evacuation procedures and notification
    schemes

    with the integration of crowd-sourcing applications [112]. As Ray et al. [114]
    presents various

    IoT-based state-of-the-art solutions applicable to disaster management situations,
    proposed cloud-

    based IoT systems as RESCUE by Khan et al. [64] are extensible for MEC platforms.
    Leveraging

    UAVs for disaster relief missions specialized in crowd localization is an effective
    use case that MEC

    can contribute for enhancing the performance [32].

    5.3

    Challenges for Wide Adaptation of 5G

    The wide adaptation of 5G for IoT realization is imminent. The networking infrastructure
    standard-

    ized for 5G is different from LTE-based deployments in both access and core network
    formation.

    Thus, following aspects can be presented as major challenges for 5G realization.

    URLLC capabilities are burdening the security engineers in applying appropriate
    level of secu-

    rity for communication protocols and payload overheads. Thus, novel cryptographic
    means should

    be investigated to minimize the overhead drastically. Massive IoT applications
    are creating is-

    sues for resource utilization at the edge in terms of processing, communication,
    and networking

    aspects with the proliferated IoT devices. Managing security is evidently arduous
    in such circum-

    stances. Energy efficiency of both UEs and intermediary resource constrained edge
    nodes are

    quite vital for the service continuity. Thus, energy saving mechanisms (i.e.,
    hibernation), energy

    harvesting techniques, and energy optimum processing are quite crucial for 5G
    deployments.

    Service migration is becoming an imminent aspect of edge computing, with local
    5G operator-

    based gNBs. Security concerns associated with migration process in terms of virtualization

    technologies, MNO domains, and handover handling should be investigated thoroughly.
    Scalable

    security requirements are vital for 5G-based deployments where security and latency
    have a clear

    trade-off. Thus, security features/mechanisms should be applied in accordance
    to the requisites

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:31

    from the application and its priority level. Orchestration is the most researched
    aspect in virtual-

    ization domain, which requires complete autonomous control embedded with intelligence
    in case

    of edge computing. Security is a vital function under orchestration, and should
    be standardized for

    autonomous operation.

    6

    CONCLUSION

    Security and Privacy are vital requirements for upcoming digital services that
    hold similar sig-

    nificance to performance metrics. Therefore, robustness of a particular application
    against cyber-

    intrusions is a demanding factor for raising its selectivity among consumers.
    However, security

    flaws should be investigated according to a deployment scenario for accurate identification
    of vul-

    nerabilities and mapping existing security solutions to mitigate them. In this
    article, we stated

    various vulnerabilities and attacks that range through cyber and physical space.
    The standardized

    MEC architecture has aided us to specify the flaws unique to each use case. Novel
    security solu-

    tions that are proposed for cyber-physical systems, ICN, NFV, and other impending
    technologies

    are mapped for each use case in the MEC context. The excessive discussion on assimilated
    facts

    and future directives are reinforcing our proposals with comprehension. As this
    survey focus on

    multiple use cases, it is our hope that scientists working on these novel areas
    will find the presented

    insights valuable.

    REFERENCES

    [1] Nasir Abbas, Yan Zhang, Amir Taherkordi, and Tor Skeie. 2018. Mobile edge
    computing: A survey. IEEE Internet

    Things J. 5, 1 (2018), 450–465.

    [2] Mamta Agiwal, Abhishek Roy, and Navrati Saxena. 2016. Next generation 5G wireless
    networks: A comprehensive

    survey. IEEE Commun. Surveys Tutor. 18, 3 (2016), 1617–1655.

    [3] Ijaz Ahmad, Tanesh Kumar, Madhusanka Liyanage, Jude Okwuibe, Mika Ylianttila,
    and Andrei Gurtov. 2017. 5G

    security: Analysis of threats and solutions. In Proceedings of the IEEE Conference
    on Standards for Communications

    and Networking (CSCN’17). IEEE, 193–199.

    [4] Ijaz Ahmad, Tanesh Kumar, Madhusanka Liyanage, Jude Okwuibe, Mika Ylianttila,
    and Andrei Gurtov. 2018.

    Overview of 5G security challenges and solutions. IEEE Commun. Standards Mag.
    2, 1 (2018), 36–43.

    [5] Adnan Aijaz and Mahesh Sooriyabandara. 2019. The tactile internet for industries:
    A review. Proc. IEEE 107, 2 (2019),

    414–435.

    [6] Abdelkader Aissioui, Adlen Ksentini, Abdelhak Mourad Gueroui, and Tarik Taleb.
    2018. On enabling 5G automotive

    systems using follow me edge-cloud concept. IEEE Trans. Vehic. Technol. 67, 6
    (2018), 5302–5316.

    [7] Ali Al-Shuwaili and Osvaldo Simeone. 2017. Energy-efficient resource allocation
    for mobile edge computing-based

    augmented reality applications. IEEE Wireless Commun. Lett. 6, 3 (2017), 398–401.

    [8] Fadele Ayotunde Alaba, Mazliza Othman, Ibrahim Abaker Targio Hashem, and Faiz
    Alotaibi. 2017. Internet of Things

    security: A survey. J. Netw. Comput. Appl. 88 (2017), 10–28.

    [9] Amina Antonacci, Fabiana Arduini, Danila Moscone, Giuseppe Palleschi, and
    Viviana Scognamiglio. 2018. Nanos-

    tructured (Bio) sensors for smart agriculture. TrAC Trends Analyt. Chem. 98 (2018),
    95–103.

    [10] Axelle Apvrille. 2019. Augmented Reality Visualization Device for Network
    Security. U.S. Patent App. No. 10/178,130.

    [11] Michael Bartock, Jeffrey Cichonski, and Murugiah Souppaya. 2020. 5G Cybersecurity:
    Preparing a Secure Evolution to

    5G. Technical Report. National Institute of Standards and Technology.

    [12] Pete Beckman, Charlie Catlett, Moinuddin Ahmed, Mohammed Alawad, Linquan
    Bai, Prasanna Balaprakash, Kevin

    Barker, Pete Beckman, Randall Berry, Arup Bhuyan, et al. 2020. 5G Enabled Energy
    Innovation: Advanced Wireless

    Networks for Science, Workshop Report. Technical Report. USDOE Office of Science
    (SC).

    [13] Vimal Bhatia, Pragya Swami, Sanjeev Sharma, and Rangeet Mitra. 2020. Non-orthogonal
    multiple access: An enabler

    for massive connectivity. J. Indian Inst. Sci. 100, 2 (2020), 337–348.

    [14] Stefano Bianchi. 2017. ANASTACIA Project—Advanced Networked Agents for Security
    and Trust Assessment in

    CPS/IoT Architectures. Retrieved from http://www.anastacia-h2020.eu/.

    [15] Kashif Bilal and Aiman Erbad. 2017. Edge computing for interactive media
    and video streaming. In Proceedings of

    the 2nd International Conference on Fog and Mobile Edge Computing (FMEC’17). IEEE,
    68–73.

    [16] Bartosz Boguslawski, Matthieu Boujonnier, Loryne Bissuel-Beauvais, Fahd Saghir,
    Rajesh D. Sharma, et al. 2018. IIoT

    edge analytics: Deploying machine learning at the wellhead to identify rod pump
    failure. In Proceedings of the SPE

    Middle East Artificial Lift Conference and Exhibition. Society of Petroleum Engineers.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:32

    P. Ranaweera et al.

    [17] Mohammad Borhani, Madhusanka Liyanage, Ali Hassan Sodhro, Pardeep Kumar,
    Anca Delia Jurcut, and Andrei

    Gurtov. 2020. Secure and resilient communications in the industrial internet.
    In Guide to Disaster-Resilient Commu-

    nication Networks. Springer, 219–242.

    [18] An Braeken, Pawani Porambage, Amirthan Puvaneswaran, and Madhusanka Liyanage.
    2020. ESSMAR: Edge support-

    ive secure mobile augmented reality architecture for healthcare. In Proceedings
    of the 5th International Conference on

    Cloud Computing and Artificial Intelligence: Technologies and Applications (CloudTech’20).
    IEEE, 1–7.

    [19] Yue Cao, Omprakash Kaiwartya, Yuan Zhuang, Naveed Ahmad, Yan Sun, and Jaime
    Lloret. 2018. A decentralized

    deadline-driven electric vehicle charging recommendation. IEEE Syst. J. 99 (2018),
    1–12.

    [20] Shuyi Chen, Ruofei Ma, Hsiao-Hwa Chen, Hong Zhang, Weixiao Meng, and Jiamin
    Liu. 2017. Machine-to-machine

    communications in ultra-dense Networks—A survey. IEEE Commun. Surveys Tutor. 19,
    3 (2017), 1478–1503.

    [21] Xi Chen, Zonghang Li, Yupeng Zhang, Ruiming Long, Hongfang Yu, Xiaojiang
    Du, and Mohsen Guizani. 2018. Re-

    inforcement learning–based QoS/QoE-aware service function chaining in software-driven
    5G slices. Trans. Emerg.

    Telecommun. Technol. 29, 11 (2018), e3477.

    [22] Edgar Lemos Cid, Manuel Garcia Sanchez, and Ana Vazquez Alejos. 2016. Wideband
    analysis of the satellite commu-

    nication channel at KU and X-bands. IEEE Trans. Vehic. Technol. 65, 4 (2016),
    2787–2790.

    [23] Mirsad Cosovic, Achilleas Tsitsimelis, Dejan Vukobratovic, Javier Matamoros,
    and Carles Anton-Haro. 2017. 5G

    mobile cellular networks: Enabling distributed state estimation for smart grids.
    IEEE Commun. Mag. 55, 10 (2017),

    62–69.

    [24] Jose Costa-Requena. 2014. SDN integration in LTE mobile backhaul networks.
    In Proceedings of the International

    Conference on Information Networking (ICOIN’14). IEEE, 264–269.

    [25] Chamitha De Alwis, Anshuman Kalla, Quoc-Viet Pham, Pardeep Kumar, Kapal Dev,
    Won-Joo Hwang, and

    Madhusanka Liyanage. 2021. Survey on 6G frontiers: Trends, applications, requirements,
    technologies and future

    research. IEEE Open J. Commun. Soc. (2021).

    [26] Jasenka Dizdarević, Francisco Carpio, Admela Jukan, and Xavi Masip-Bruin.
    2019. A survey of communication pro-

    tocols for internet of things and related challenges of fog and cloud computing
    integration. ACM Comput. Surveys

    51, 6 (2019), 116.

    [27] Lijun Dong and Guoqiang Wang. 2017. Information centric approach in achieving
    anycast service in machine type

    communications. In Proceedings of the IEEE Conference on Standards for Communications
    and Networking (CSCN’17).

    IEEE, 157–162.

    [28] Thang Le Duc, Rafael García Leiva, Paolo Casari, and Per-Olov Östberg. 2019.
    Machine learning methods for reliable

    resource provisioning in edge-cloud computing: A survey. ACM Comput. Surveys 52,
    5 (2019), 94.

    [29] Leila Eadie, Alasdair Mort, Luke Regan, Ashish S. MacAden, and Philip Wilson.
    2016. Remotely supported prehos-

    pital ultrasound: Real-time communication for diagnosis in remote and rural communities.
    In Proceedings of the 3rd

    European Workshop on Practical Aspects of Health Informatics. CEUR-WS.

    [30] Mohammed S. Elbamby, Cristina Perfecto, Mehdi Bennis, and Klaus Doppler.
    2018. Toward low-latency and ultra-

    reliable virtual reality. IEEE Netw. 32, 2 (2018), 78–84.

    [31] Mohammed Elbayoumi, Mahmoud Kamel, Walaa Hamouda, and Amr Youssef. 2020.
    NOMA-assisted machine-type

    communications in UDN: State-of-the-art and challenges. IEEE Commun. Surveys Tutor.
    22, 2 (2020), 1276–1304.

    [32] Milan Erdelj, Enrico Natalizio, Kaushik R. Chowdhury, and Ian F. Akyildiz.
    2017. Help from the Sky: Leveraging

    UAVs for disaster management. IEEE Pervas. Comput. 16, 1 (2017), 24–32.

    [33] ETSI. 2016. Mobile edge computing (MEC) framework and reference architecture.
    ETSI White Paper #3. Retrieved

    from https://www.etsi.org/deliver/etsi_gs/MEC/001_099/003/01.01.01_60/gs_MEC003v010101p.pdf.

    [34] EU-H2020. 2018. 5G-EVE. Retrieved from https://www.5g-eve.eu/.

    [35] Dongfeng Fang and Yi Qian. 2020. 5G wireless security and privacy: Architecture
    and flexible mechanisms. IEEE

    Vehic. Technol. Mag. 15, 2 (2020), 58–64.

    [36] Ana Juan Ferrer, Joan Manuel Marquès, and Josep Jorba. 2019. Towards the
    decentralised cloud: Survey on approaches

    and challenges for mobile, ad hoc, and edge computing. ACM Comput. Surveys. 51,
    6 (2019), 111.

    [37] Abderrahime Filali, Amine Abouaomar, Soumaya Cherkaoui, Abdellatif Kobbane,
    and Mohsen Guizani. 2020. Multi-

    access edge computing: A survey. IEEE Access 8 (2020), 197017–197046.

    [38] Shane Fonyi. 2020. Overview of 5G security and vulnerabilities. Cyber Defense
    Rev. 5, 1 (2020), 117–134.

    [39] Reham M. Fouda. 2018. Security vulnerabilities of cyberphysical unmanned
    aircraft systems. IEEE Aerospace Elec-

    tronic Syst. Mag. 33, 9 (2018), 4–17.

    [40] Xenofon Foukas, Georgios Patounas, Ahmed Elmokashfi, and Mahesh K. Marina.
    2017. Network slicing in 5G: Survey

    and challenges. IEEE Commun. Mag. 55, 5 (2017), 94–100.

    [41] Keke Gai, Meikang Qiu, Hui Zhao, and Jian Xiong. 2016. Privacy-aware adaptive
    data encryption strategy of big data

    in cloud computing. In Proceedings of the IEEE 3rd International Conference on
    Cyber Security and Cloud Computing

    (CSCloud’16). IEEE, 273–278.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:33

    [42] Keke Gai, Yulu Wu, Liehuang Zhu, Lei Xu, and Yan Zhang. 2019. Permissioned
    blockchain and edge computing

    empowered privacy-preserving smart grid networks. IEEE Internet Things J. 6, 5
    (2019), 7992–8004.

    [43] Sahil Garg, Amritpal Singh, Shalini Batra, Neeraj Kumar, and Laurence T.
    Yang. 2018. UAV-empowered edge com-

    puting environment for cyber-threat detection in smart vehicles. IEEE Netw. 32,
    3 (2018), 42–51.

    [44] Kuntal Gaur, Anshuman Kalla, Jyoti Grover, Mohammad Borhani, Andrei Gurtov,
    and Madhusanka Liyanage. 2021.

    A survey of virtual private LAN services (VPLS): Past, present and future. Comput.
    Netw. 196, Article 108245 (2021).

    [45] Dennis Grewe, Marco Wagner, Mayutan Arumaithurai, Ioannis Psaras, and Dirk
    Kutscher. 2017. Information-centric

    mobile edge computing for connected vehicle environments: Challenges and research
    directions. In Proceedings of

    the Workshop on Mobile Edge Communications. ACM, 7–12.

    [46] Rajesh Gupta, Dakshita Reebadiya, and Sudeep Tanwar. 2021. 6G-enabled edge
    intelligence for ultra-reliable low

    latency applications: Vision and mission. Comput. Stand. Interfaces 77 (2021),
    103521.

    [47] H2020. 2015. Small Cells Coordination for Multi-tenancy and Edge Services.
    Retrieved from http://www.sesame-

    h2020-5g-ppp.eu/Home.aspx.

    [48] Hajar Hantouti, Nabil Benamar, Tarik Taleb, and Abdelquoddous Laghrissi.
    2018. Traffic steering for service function

    chaining. IEEE Commun. Surveys Tutor. 21, 1 (2018), 487–507.

    [49] Remy Harel and Steve Babbage. 2016. 5G Security Recommendations Package 2:
    Network Slicing. https://www.ngmn.

    org/fileadmin/user_upload/160429_NGMN_5G_Security_Network_Slicing_v1_0.pdf.

    [50] Daojing He, Sammy Chan, and Mohsen Guizani. 2018. Security in the Internet
    of Things supported by mobile edge

    computing. IEEE Commun. Mag. 56, 8 (2018), 56–61.

    [51] Tharaka Hewa, An Bracken, Mika Ylianttila, and Madhusanka Liyanage. 2020.
    Blockchain-based automated certifi-

    cate revocation for 5G IoT. In Proceedings of the IEEE International Conference
    on Communications (ICC’20). IEEE,

    1–7.

    [52] Tharaka Hewa, An Braeken, Mika Ylianttila, and Madhusanka Liyanage. 2020.
    Multi-access edge computing and

    blockchain-based secure telehealth system connected with 5G and IoT. In Proceedings
    of the 8th IEEE International

    Conference on Communications and Networking (ComNet’20).

    [53] Oliver Holland, Eckehard Steinbach, R. Venkatesha Prasad, Qian Liu, Zaher
    Dawy, Adnan Aijaz, Nikolaos Pappas,

    Kishor Chandra, Vijay S. Rao, Sharief Oteafy, et al. 2019. The IEEE 1918.1 “Tactile
    Internet” standards working group

    and its standards. Proc. IEEE 107, 2 (2019), 256–279.

    [54] Michael Hooper, Yifan Tian, Runxuan Zhou, Bin Cao, Adrian P. Lauf, Lanier
    Watkins, William H. Robinson, and

    Wlajimir Alexis. 2016. Securing commercial wifi-based UAVs from common security
    attacks. In Proceedings of the

    Military Communications Conference (MILCOM’16). IEEE, 1213–1218.

    [55] Mohammad Hosseini, Yu Jiang, Ali Yekkehkhany, Richard R. Berlin, and Lui
    Sha. 2017. A mobile geo-communication

    dataset for physiology-aware dash in rural ambulance transport. In Proceedings
    of the 8th ACM on Multimedia Systems

    Conference. ACM, 158–163.

    [56] Syed Husain, Andreas Kunz, Athul Prasad, Konstantinos Samdanis, and JaeSeung
    Song. 2018. Mobile edge computing

    with network resource slicing for internet-of-things. In Proceedings of the IEEE
    4th World Forum on Internet of Things

    (WF-IoT’18). IEEE, 1–6.

    [57] Razin Farhan Hussain, Mohsen Amini Salehi, Anna Kovalenko, Saeed Salehi,
    and Omid Semiari. 2018. Robust re-

    source allocation using edge computing for smart oil fields. In Proceedings of
    the International Conference on Parallel

    and Distributed Processing Techniques and Applications (PDPTA’18). The Steering
    Committee of The World Congress

    in Computer Science, 204–210.

    [58] Muhammad Javed, Elyes Ben Hamida, Ala Al-Fuqaha, and Bharat Bhargava. 2017.
    Adaptive security for intelligent

    transport system applications. IEEE Intell. Transport. Syst. Mag. 10, 2 (2017),
    110–120.

    [59] Dushantha Nalin K. Jayakody, Kathiravan Srinivasan, and Vishal Sharma. 2019.
    5G Enabled Secure Wireless Networks.

    Springer.

    [60] Eranda Harshanath Jayatunga, Pasika Sashmal Ranaweera, and Indika Anuradha
    Mendis Balapuwaduge. 2021.

    Blockchain advances and security practices in WSN, CRN, SDN, opportunistic mobile
    networks, delay tolerant net-

    works. In Revolutionary Applications of Blockchain-Enabled Privacy and Access
    Control. IGI Global, 1–34.

    [61] Anca D. Jurcut, Pasika Ranaweera, and Lina Xu. 2020. Introduction to IoT
    security. In IoT Security: Advances in

    Authentication. M. Liyanage, A. Braeken, P. Kumar, and M. Ylianttila (Eds.). Wiley.
    https://doi.org/10.1002/

    9781119527978.ch2

    [62] Fahad Khan, Atiq ur Rehman, Muhammad Arif, Muhammad Aftab, and Baber Khan
    Jadoon. 2016. A survey of com-

    munication technologies for smart grid connectivity. In Proceedings of the International
    Conference on Computing,

    Electronic and Electrical Engineering (ICECube’16). IEEE, 256–261.

    [63] Rabia Khan, Pardeep Kumar, Dushantha Nalin K. Jayakody, and Madhusanka Liyanage.
    2019. A survey on secu-

    rity and privacy of 5G technologies: Potential solutions, recent advancements
    and future directions. IEEE Commun.

    Surveys Tutor. 22, 1 (2019), 196–248.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:34

    P. Ranaweera et al.

    [64] Taher Khan, Saptarshi Ghosh, Muddesar Iqbal, George Ubakanma, and Tasos Dagiuklas.
    2018. RESCUE: A resilient

    cloud based IoT system for emergency and disaster recovery. In Proceedings of
    the IEEE 20th International Conference

    on High Performance Computing and Communications; IEEE 16th International Conference
    on Smart City; IEEE 4th

    International Conference on Data Science and Systems (HPCC/SmartCity/DSS’18).
    IEEE, 1043–1047.

    [65] Adlen Ksentini and Pantelis A. Frangoudis. 2020. Toward slicing-enabled multi-access
    edge computing in 5g. IEEE

    Netw. 34, 2 (2020), 99–105.

    [66] Neeraj Kumar, Sherali Zeadally, and Joel J. P. C. Rodrigues. 2016. Vehicular
    delay-tolerant networks for smart grid

    data management using mobile edge computing. IEEE Commun. Mag. 54, 10 (2016),
    60–66.

    [67] Rakesh Kumar, M. P. Singh, Prabhat Kumar, and J. P. Singh. 2015. Crop selection
    method to maximize crop yield

    rate using machine learning technique. In Proceedings of the International Conference
    on Smart Technologies and

    Management for Computing, Communication, Controls, Energy and Materials (ICSTM’15).
    IEEE, 138–145.

    [68] Shankar Lal, Tarik Taleb, and Ashutosh Dutta. 2017. NFV: Security threats
    and best practices. IEEE Commun. Mag.

    55, 8 (2017), 211–217.

    [69] Michael Langfinger, Michael Schneider, Didier Stricker, and Hans D. Schotten.
    2017. Addressing security challenges

    in industrial augmented reality systems. In Proceedings of the 15th International
    Conference on Industrial Informatics

    (INDIN’17). IEEE, 299–304.

    [70] Kiron Lebeck, Kimberly Ruth, Tadayoshi Kohno, and Franziska Roesner. 2018.
    Towards security and privacy for

    multi-user augmented reality: Foundations with end users. In Proceedings of the
    IEEE Symposium on Security and

    Privacy (SP’18). IEEE.

    [71] Chiking Lee. 2018. Discovering cyber vulnerabilities in SCADA control system
    via examination of water treatment

    plant in laboratory environment. UNSW Canberra ADFA J. Undergrad. Eng. Res. 9,
    1 (2018).

    [72] Craig Lee and Andrea Fumagalli. 2019. Internet of Things security-multilayered
    method for end to end data commu-

    nications over cellular networks. In Proceedings of the IEEE 5th World Forum on
    Internet of Things (WF-IoT’19). IEEE,

    24–28.

    [73] Jong-Hyouk Lee and Hyoungshick Kim. 2017. Security and privacy challenges
    in the Internet of Things [security

    and privacy matters]. IEEE Consum. Electron. Mag. 6, 3 (2017), 134–136.

    [74] Helen C. Leligou, Theodore Zahariadis, Lambros Sarakis, Eleftherios Tsampasis,
    Artemis Voulkidis, and Terpsichori E.

    Velivassaki. 2018. Smart grid: A demanding use case for 5G technologies. In Proceedings
    of the IEEE International

    Conference on Pervasive Computing and Communications Workshops (PerCom’18). IEEE,
    215–220.

    [75] A. Leonardi, K. Mathioudakis, A. Wiesmaier, and F. Zeiger. 2014. Towards
    the smart grid: Substation automation

    architecture and technologies. Adv. Electric. Eng. 2014, Article 896296 (2014),
    13 pages.

    [76] Bin Li, Zesong Fei, and Yan Zhang. 2018. UAV communications for 5G and beyond:
    Recent advances and future

    trends. IEEE Internet Things J. 6, 2 (2018), 2241–2263.

    [77] Chao Li, Yushu Xue, Jing Wang, Weigong Zhang, and Tao Li. 2018. Edge-oriented
    computing paradigms: A survey

    on architecture design and system management. ACM Comput. Surveys 51, 2 (2018),
    39.

    [78] Meng Li, Richard Yu, Pengbo Si, and Yanhua Zhang. 2018. Energy-efficient
    machine-to-machine (M2M) communica-

    tions in virtualized cellular networks with mobile edge computing (MEC). IEEE
    Trans. Mobile Comput. 18, 7 (2018),

    1541–1555.

    [79] Chung-Wei Lin and Alberto Sangiovanni-Vincentelli. 2017. Security-aware design
    for V2V communication. In

    Security-Aware Design for Cyber-Physical Systems. Springer, 77–86.

    [80] Madhusanka Liyanage, Ijaz Ahmad, Ahmed Bux Abro, Andrei Gurtov, and Mika
    Ylianttila. 2018. A Comprehensive

    Guide to 5G Security. Wiley Online Library.

    [81] Madhusanka Liyanage, Ijaz Ahmed, Mika Ylianttila, Jesus Llorente Santos,
    Raimo Kantola, Oscar Lopez Perez,

    Mikel Uriarte Itzazelaia, Edgardo Montes De Oca, Asier Valtierra, and Carlos Jimenez.
    2015. Security for future

    software defined mobile networks. In Proceedings of the 9th International Conference
    on Next Generation Mobile Ap-

    plications, Services and Technologies. IEEE, 256–264.

    [82] Madhusanka Liyanage, An Braeken, Pardeep Kumar, and Mika Ylianttila. 2020.
    IoT Security: Advances in Authentica-

    tion. John Wiley & Sons.

    [83] Madhusanka Liyanage, Pawani Porambage, Aaron Yi Ding, and Anshuman Kalla.
    2021. Driving forces for multi-

    access edge computing (MEC) IoT integration in 5G. ICT Express 7, 2 (2021), 127–137.

    [84] Pavel Mach and Zdenek Becvar. 2017. Mobile edge computing: A survey on architecture
    and computation offloading.

    IEEE Commun. Surveys Tutor. 19, 3 (2017), 1628–1656.

    [85] Martin Maier, Mahfuzulhoq Chowdhury, Bhaskar Prasad Rimal, and Dung Pham
    Van. 2016. The tactile internet:

    Vision, recent progress, and open challenges. IEEE Commun. Mag. 54, 5 (2016),
    138–145.

    [86] Olli Mäkinen. 2015. Streaming at the edge: Local service concepts utilizing
    mobile edge computing. In Proceedings

    of the 9th International Conference on Next Generation Mobile Applications, Services
    and Technologies. IEEE, 1–6.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:35

    [87] Yuyi Mao, Changsheng You, Jun Zhang, Kaibin Huang, and Khaled B. Letaief.
    2017. A survey on mobile edge com-

    puting: The communication pserspective. IEEE Commun. Surveys Tutor. 19, 4 (2017),
    2322–2358.

    [88] Jeremy Mitchell, David Soldani, and Malcolm Shore. 2018. The Path to 5G in
    Australia: Architecture Evolution from

    4G to 5G. Retrieved from http://huaweihub.com.au/wp-content/uploads/2018/07/The-path-to-5G-in-Australia-03-

    August-2018-2.pdf.

    [89] Amin Mohammadali, Mohammad Sayad Haghighi, Mohammad Hesam Tadayon, and Alireza
    Mohammadi-

    Nodooshan. 2018. A novel identity-based key establishment method for advanced
    metering infrastructure in smart

    grid. IEEE Trans. Smart Grid 9, 4 (2018), 2834–2842.

    [90] Andrés Molina. 2018. Water governance in the smart city. WIT Trans. Built
    Environ. 179, 1 (2018), 13–22.

    [91] Naser Hossein Motlagh, Miloud Bagaa, and Tarik Taleb. 2017. UAV-based IoT
    platform: A crowd surveillance use

    case. IEEE Commun. Mag. 55, 2 (2017), 128–134.

    [92] Arash Nourian and Stuart Madnick. 2018. A systems theoretic approach to the
    security threats in cyber physical

    systems applied to stuxnet. IEEE Trans. Depend. Secure Comput. 15, 1 (2018), 2–13.

    [93] Vanga Odelu, Ashok Kumar Das, Mohammad Wazid, and Mauro Conti. 2018. Provably
    secure authenticated key

    agreement scheme for smart grid. IEEE Trans. Smart Grid 9, 3 (2018), 1900–1910.

    [94] University of Oulu. 2020. 6G-FLAGSHIP. Retrieved from https://www.oulu.fi/6gflagship/.

    [95] Oulu. 2018. Multi-Access Edge Computing (MEC) Artificial Intelligence (AI).
    Retrieved from http://www.edgeai.info/

    project/mec-ai/.

    [96] Emmanuel Oyekanlu, Charles Nelatury, Alfred O. Fatade, Olumuyiwa Alaba, and
    Ola Abass. 2017. Edge computing

    for industrial IoT and the smart grid: Channel capacity for M2M communication
    over the power line. In Proceedings

    of the IEEE 3rd International Conference on Electro-Technology for National Development
    (NIGERCON’17). IEEE, 1–11.

    [97] Christoph Pallasch, Stephan Wein, Nicolai Hoffmann, Markus Obdenbusch, Tilman
    Buchner, Josef Waltl, and

    Christian Brecher. 2018. Edge powered industrial control: Concept for combining
    cloud and automation technologies.

    In Proceedings of the IEEE International Conference on Edge Computing (EDGE’18).
    IEEE, 130–134.

    [98] Simon Parkinson, Paul Ward, Kyle Wilson, and Jonathan Miller. 2017. Cyber
    threats facing autonomous and con-

    nected vehicles: Future challenges. IEEE Trans. Intell. Transport. Syst. 18, 11
    (2017), 2898–2915.

    [99] Imtiaz Parvez, Ali Rahmati, Ismail Guvenc, Arif I. Sarwat, and Huaiyu Dai.
    2018. A survey on low latency towards

    5G: RAN, core network and caching solutions. IEEE Commun. Surveys Tutor. 20, 4
    (2018), 3098–3130.

    [100] Charith Perera, Chi Harold Liu, and Srimal Jayawardena. 2015. The emerging
    Internet of Things marketplace from

    an industrial perspective: A survey. IEEE Trans. Emerg. Topics Comput. 3, 4 (2015),
    585–598.

    [101] Jonathan Petit and Steven E. Shladover. 2015. Potential cyberattacks on
    automated vehicles. IEEE Trans. Intell. Trans-

    port. Syst. 16, 2 (2015), 546–556.

    [102] Pawani Porambage, Gürkan Gür, Diana Pamela Moya Osorio, Madhusanka Liyanage,
    Andrei Gurtov, and Mika Yliant-

    tila. 2021. The roadmap to 6G security and privacy. IEEE Open J. Commun. Soc.
    2 (2021), 1094–1122.

    [103] Pawani Porambage, Jude Okwuibe, Madhusanka Liyanage, Mika Ylianttila, and
    Tarik Taleb. 2018. Survey on multi-

    access edge computing for Internet of Things realization. IEEE Commun. Surveys
    Tutor. 20, 4 (2018), 2961–2991.

    [104] Xiuquan Qiao, Pei Ren, Schahram Dustdar, and Junliang Chen. 2018. A new
    era for web AR with mobile edge com-

    puting. IEEE Internet Comput. 22, 4 (2018), 46–55.

    [105] Pengxiang Qin, Pinyi Ren, Qinghe Du, and Li Sun. 2018. Security enhancement
    for IoT video streaming via joint

    network coding and retransmission design. In Proceedings of the International
    Conference on Internet of Things as a

    Service. Springer, 40–47.

    [106] Hamed Rahimi, Ali Zibaeenejad, and Ali Akbar Safavi. 2018. A novel IoT architecture
    based on 5G-IoT and next

    generation technologies. In Proceedings of the IEEE 9th Annual Information Technology,
    Electronics and Mobile Com-

    munication Conference (IEMCON’18). IEEE, 81–88.

    [107] Archana Rajakaruna, Ahsan Manzoor, Pawani Porambage, Madhusanka Liyanage,
    Mika Ylianttila, and Andrei

    Gurtov. 2019. Enabling end-to-end secure connectivity for low-power IoT devices
    with uavs. In Proceedings of the

    IEEE Wireless Communications and Networking Conference Workshop (WCNCW’19). IEEE,
    1–6.

    [108] Pasika Ranaweera, Vashish N. Imrith, Madhusanka Liyanag, and Anca Delia
    Jurcut. 2020. Security as a service plat-

    form leveraging multi-access edge computing infrastructure provisions. In Proceedings
    of the IEEE International Con-

    ference on Communications (ICC’20). IEEE, 1–6.

    [109] Pasika Ranaweera, Anca Delia Jurcut, and Madhusanka Liyanage. 2019. Realizing
    multi-access edge computing fea-

    sibility: Security perspective. In Proceedings of the IEEE Conference on Standards
    for Communications and Networking

    (CSCN’19). IEEE, 1–7.

    [110] Pasika Ranaweera, Anca Delia Jurcut, and Madhusanka Liyanage. 2021. Survey
    on multi-access edge computing

    security and privacy. IEEE Commun. Surveys Tutor. 23, 2 (2021), 1078–1124.

    [111] Pasika Ranaweera, Madhusanka Liyanage, and Anca Delia Jurcut. 2020. Novel
    MEC based approaches for smart

    hospitals to combat COVID-19 pandemic. IEEE Consum. Electron. Mag. 10, 2 (2020),
    80–91.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    186:36

    P. Ranaweera et al.

    [112] Ashish Rauniyar, Paal Engelstad, Boning Feng, et al. 2016. Crowdsourcing-based
    disaster management using fog

    computing in Internet of Things Paradigm. In Proceedings of the IEEE 2nd International
    Conference on Collaboration

    and Internet Computing (CIC’16). IEEE, 490–494.

    [113] Danda B. Rawat and Chandra Bajracharya. 2016. Vehicular Cyber Physical Systems:
    Adaptive Connectivity and Security.

    Springer.

    [114] Partha Pratim Ray, Mithun Mukherjee, and Lei Shu. 2017. Internet of Things
    for disaster management: State-of-the-

    art and prospects. IEEE Access 5 (2017), 18818–18835.

    [115] Zeineb Rejiba, Xavier Masip-Bruin, and Eva Marín-Tordera. 2019. A survey
    on mobility-induced service migration

    in the fog, edge, and related computing paradigms. ACM Comput. Surveys 52, 5 (2019),
    90.

    [116] Jinke Ren, Guanding Yu, Yunlong Cai, and Yinghui He. 2018. Latency optimization
    for resource allocation in mobile-

    edge computation offloading. IEEE Trans. Wireless Commun. 17, 8 (2018), 5506–5519.

    [117] Ju Ren, Deyu Zhang, Shiwen He, Yaoxue Zhang, and Tao Li. 2019. A survey
    on end-edge-cloud orchestrated network

    computing paradigms: Transparent computing, mobile edge computing, fog computing,
    and cloudlet. ACM Comput.

    Surveys 52, 6 (2019), 125.

    [118] Alex Reznik, Yonggang Fang, and Saad Ullah. 2018. MEC in an enterprise setting:
    A solution outline. ETSI White Paper

    #30 2, 30 (2018). Retrieved from https://www.etsi.org/images/files/ETSIWhitePapers/etsi_wp30_MEC_Enterprise_

    FINAL.pdf.

    [119] Rodrigo Roman, Javier Lopez, and Masahiro Mambo. 2018. Mobile edge computing,
    Fog et al.: A survey and analysis

    of security threats and challenges. Future Gen. Comput. Syst. 78 (2018), 680–698.

    [120] Harri Saarnisaari, Sudhir Dixit, Mohamed-Slim Alouini, Abdelaali Chaoub,
    Marco Giordani, Adrian Kliks, Marja

    Matinmikko-Blue, Nan Zhang, Anuj Agrawal, Mats Andersson, et al. 2020. A 6G white
    paper on connectivity for

    remote areas. Retrieved from https://arXiv:2004.14699.

    [121] Matthew N. O. Sadiku, Shumon Alam, and Sarhan M. Musa. 2017. Information
    assurance benefits and challenges:

    An introduction. Info. Secur. 36, 1 (2017), 1–5.

    [122] Miguel Saez, Steven Lengieza, Francisco Maturana, Kira Barton, and Dawn
    Tilbury. 2018. A data transformation

    adapter for smart manufacturing systems with edge and cloud computing capabilities.
    In Proceedings of the IEEE

    International Conference on Electro/Information Technology (EIT’18). IEEE, 0519–0524.

    [123] S. Salsano. 2015. Superfluidity: A Super-fluid, Cloud-native, Converged
    Edge System. Retrieved from http://

    superfluidity.eu/.

    [124] Mike Scavezze, Jason Scott, Jonathan Steed, Ian McIntyre, Aaron Krauss,
    Daniel McCulloch, Stephen Latta, Kevin

    Geisner, and Brian Mount. 2015. User Authentication on Augmented Reality Display
    Device. U.S. Patent No. 9,092,600.

    [125] Hichem Sedjelmaci, Ines Ben Jemaa, Makhlouf Hadji, and Arnaud Kaiser. 2018.
    Security framework for vehicular

    edge computing network based on behavioral game. In Proceedings of the IEEE Global
    Communications Conference

    (GLOBECOM’18). IEEE, 1–6.

    [126] Vahe Seferian, Rouwaida Kanj, Ali Chehab, and Ayman Kayssi. 2018. Identity
    based key distribution framework for

    link layer security of AMI networks. IEEE Trans. Smart Grid 9, 4 (2018), 3166–3179.

    [127] Syed Noorulhassan Shirazi, Antonios Gouglidis, Arsham Farshad, and David
    Hutchison. 2017. The extended cloud:

    Review and analysis of mobile edge computing and fog from a security and resilience
    perspective. IEEE J. Select.

    Areas Commun. 35, 11 (2017), 2586–2595.

    [128] Syed Noorulhassan Shirazi, Antonios Gouglidis, Kanza Noor Syeda, Steven
    Simpson, Andreas Mauthe, Ioannis M.

    Stephanakis, and David Hutchison. 2016. Evaluation of anomaly detection techniques
    for SCADA communication

    resilience. In Proceedings of the Resilience Week (RWS’16). IEEE, 140–145.

    [129] Meryem Simsek, Adnan Aijaz, Mischa Dohler, Joachim Sachs, and Gerhard Fettweis.
    2016. 5G-enabled tactile internet.

    IEEE J. Select. Areas Commun. 34, 3 (2016), 460–473.

    [130] Saurabh Singh, Young-Sik Jeong, and Jong Hyuk Park. 2016. A survey on cloud
    computing security: Issues, threats,

    and solutions. J. Netw. Comput. Appl. 75 (2016), 200–222.

    [131] Yushan Siriwardhana, Pawani Porambage, Madhusanka Liyanage, and Mika Ylianttila.
    2021. AI and 6G security:

    Opportunities and challenges. In Proceedings of the IEEE Joint European Conference
    0n Network Communincations

    (EuCNC’21): 6G Summit. 1–6.

    [132] Yushan Siriwardhana, Pawani Porambage, Madhusanka Liyanage, and Mika Ylinattila.
    2021. A survey on mobile

    augmented reality with 5G mobile edge computing: Architectures, applications and
    technical aspects. IEEE Commun.

    Surveys Tutor. 23, 2 (2021), 1160–1192.

    [133] Yushan Siriwardhana, Pawani Porambage, Mika Ylianttila, and Madhusanka Liyanage.
    2020. Performance analysis

    of local 5G operator architectures for industrial internet. IEEE Internet Things
    J. 7, 12 (2020), 11559–11575.

    [134] Prakash Suthar, Vivek Agarwal, Rajaneesh Sudhakar Shetty, and Anil Jangam.
    2020. Migration and interworking

    between 4G and 5G. In Proceedings of the IEEE 3rd 5G World Forum (5GWF’20). IEEE,
    401–406.

    [135] Rahim Tafazolli, Chin-Liang Wang, Periklis Chatzimisios, and Madhusanka
    Liyanage. 2021. The Wiley 5G REF: Secu-

    rity. Wiley Online Library.

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures

    186:37

    [136] Irina Tal and Gabriel-Miro Muntean. 2018. Towards reasoning vehicles: A
    survey of fuzzy logic-based solutions in

    vehicular networks. ACM Comput. Surveys 50, 6 (2018), 80.

    [137] Elisabeth Uhlemann. 2017. The US and europe advances V2V deployment [connected
    vehicles]. IEEE Vehic. Technol.

    Mag. 12, 2 (2017), 18–22.

    [138] Muhammad Usman, Muhammad Rizwan Asghar, Imran Shafique Ansari, and Marwa
    Qaraqe. 2018. Security in wire-

    less body area networks: From in-body to off-body communications. IEEE Access
    6 (2018), 58064–58074.

    [139] Jianyu Wang, Jianli Pan, Flavio Esposito, Prasad Calyam, Zhicheng Yang,
    and Prasant Mohapatra. 2019. Edge cloud

    offloading algorithms: Issues, methods, and perspectives. ACM Comput. Surveys
    52, 1 (2019), 2.

    [140] Meisong Wang, Prem Prakash Jayaraman, Rajiv Ranjan, Karan Mitra, Miranda
    Zhang, Eddie Li, Samee Khan,

    Mukkaddim Pathan, and Dimitrios Georgeakopoulos. 2015. An overview of cloud based
    content delivery networks:

    Research dimensions and state-of-the-art. In Transactions on Large-Scale Data-and
    Knowledge-Centered Systems XX.

    Springer, 131–158.

    [141] Qian Wang, Zhi Chen, Weidong Mei, and Jun Fang. 2017. Improving physical
    layer security using UAV-enabled

    mobile relaying. IEEE Wireless Commun. Lett. 6, 3 (2017), 310–313.

    [142] Shalitha Wijethilaka and Madhusanka Liyanage. 2021. Survey on network slicing
    for internet of things realization

    in 5G networks. IEEE Commun. Surveys Tutor. 23, 2 (2021), 957–994.

    [143] Lin Xiang, Derrick Wing Kwan Ng, Robert Schober, and Vincent W. S. Wong.
    2018. Cache-enabled physical layer

    security for video streaming in backhaul-limited cellular networks. IEEE Trans.
    Wireless Commun. 17, 2 (2018),

    736–751.

    [144] L. Xu, A. D. Jurcut, and H. Ahmadi. 2019. Emerging challenges and requirements
    for Internet of Things in 5G. In

    5G-Enabled Internet of Things. CRC Press.

    [145] Wenyuan Xu, Chen Yan, Weibin Jia, Xiaoyu Ji, and Jianhao Liu. 2018. Analyzing
    and enhancing the security of

    ultrasonic sensors for autonomous vehicles. IEEE Internet Things J. 5, 6 (2018),
    5015–5029.

    [146] Anil Kumar Yadav and Prerna Gaur. 2014. AI-based adaptive control and design
    of autopilot system for nonlinear

    UAV. Sadhana 39, 4 (2014), 765–783.

    [147] Shan-Shan Yang, Ji-Wei Pang, Xiao-Man Jin, Zhong-Yang Wu, Xiao-Yin Yang,
    Wan-Qian Guo, Zhi-Qing Zhao, and

    Nan-Qi Ren. 2018. Let a sewage plant running smart. In Proceedings of the IOP
    Conference Series: Earth and Environ-

    mental Science, Vol. 127. IOP Publishing, 012013.

    [148] Xiao Yang, Zhiyong Chen, Kuikui Li, Yaping Sun, Ning Liu, Weiliang Xie,
    and Yong Zhao. 2018. Communication-

    constrained mobile edge computing systems for wireless virtual reality: Scheduling
    and tradeoff. IEEE Access 6 (2018),

    16665–16677.

    [149] Zhong Yang, Mingzhe Chen, Xiao Liu, Yuanwei Liu, Yue Chen, Shuguang Cui,
    and H. Vincent Poor. 2021. Artificial

    intelligence driven UAV-NOMA-MEC in next generation wireless networks. Retrieved
    from https://arXiv:2101.11681.

    [150] E. Yeh, Junil Choi, N. Prelcic, C. Bhat, and R. Heath. 2016. Security in
    automotive radar and vehicular networks.

    Microwave J. 60, 5 (2016), 148–164.

    [151] Faqir Zarrar Yousaf, Marco Gramaglia, Vasilis Friderikos, Borislava Gajic,
    Dirk von Hugo, Bessem Sayadi, Vincenzo

    Sciancalepore, and Marcos Rates Crippa. 2017. Network slicing with flexible mobility
    and QoS/QoE support for

    5G Networks. In Proceedings of the IEEE International Conference on Communications
    Workshops (ICC’17). IEEE,

    1195–1201.

    [152] Ashkan Yousefpour, Caleb Fung, Tam Nguyen, Krishna Kadiyala, Fatemeh Jalali,
    Amirreza Niakanlahiji, Jian Kong,

    and Jason P. Jue. 2019. All one needs to know about fog computing and related
    edge computing paradigms: A com-

    plete survey. J. Syst. Architect. 98 (2019), 289–330.

    [153] Aiqing Zhang, Lei Wang, Xinrong Ye, and Xiaodong Lin. 2017. Light-weight
    and robust security-aware D2D-assist

    data transmission protocol for mobile-health systems. IEEE Trans. Info. Forensics
    Secur. 12, 3 (2017), 662–675.

    [154] Xi Zhang and Qixuan Zhu. 2017. Statistical quality of service provisioning
    over edge computing mobile wireless

    networks. In Proceedings of the IEEE Military Communications Conference (MILCOM’17).
    IEEE, 412–417.

    [155] Fuhui Zhou, Yongpeng Wu, Haijian Sun, and Zheng Chu. 2018. UAV-enabled mobile
    edge computing: Offloading

    optimization and trajectory design. In Proceedings of the IEEE International Conference
    on Communications (ICC’18).

    IEEE, 1–6.

    [156] Yi Zhou, Phee Lep Yeoh, He Chen, Yonghui Li, Robert Schober, Li Zhuo, and
    Branka Vucetic. 2018. Improving physical

    layer security via a UAV friendly jammer for unknown eavesdropper location. IEEE
    Trans. Vehic. Technol. 67, 11 (2018),

    11280–11284.

    [157] Qingyi Zhu, Seng W. Loke, Rolando Trujillo-Rasua, Frank Jiang, and Yong
    Xiang. 2019. Applications of distributed

    ledger technologies to the Internet of Things: A survey. ACM Comput. Surveys 52,
    6 (2019), 120.

    Received January 2020; revised May 2021; accepted July 2021

    ACM Computing Surveys, Vol. 54, No. 9, Article 186. Publication date: October
    2021.

    '
  inline_citation: '>'
  journal: ACM computing surveys
  limitations: '>'
  pdf_link: https://dl.acm.org/doi/pdf/10.1145/3474552
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'MEC-enabled 5G Use Cases: A Survey on Security Vulnerabilities and Countermeasures'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.iot.2022.100674
  analysis: '>'
  authors:
  - Sundas Iftikhar
  - Sukhpal Singh Gill
  - Chenghao Song
  - Minxian Xu
  - Mohammad Sadegh Aslanpour
  - Adel Nadjaran Toosi
  - Junying Du
  - Huaming Wu
  - Shreya Ghosh
  - Deepraj Chowdhury
  - Muhammed Golec
  - Mohit Kumar
  - Ahmed M. Abdelmoniem
  - Félix Cuadrado
  - Blesson Varghese
  - Omer F. Rana
  - Schahram Dustdar
  - Steve Uhlig
  citation_count: 39
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Review
    methodology 3. AI/ML for Fog/Edge computing: Background and current status 4.
    AI based techniques for resource management in Fog/Edge computing 5. Taxonomy
    6. Result outcomes 7. Open issues and future directions 8. Summary and conclusions
    Declaration of Competing Interest Acknowledgments Appendix A. A quality assessment
    forms Appendix B. Data items extracted from all articles Appendix C. Journals
    and conferences for publishing articles about AI/ML in Fog/Edge computing Appendix
    D. List of acronyms Data availability References Vitae Show full outline Cited
    by (54) Figures (17) Show 11 more figures Tables (10) Table 1 Table 2 Table 3
    Table 4 Table 5 Table 6 Show all tables Internet of Things Volume 21, April 2023,
    100674 Review article AI-based fog and edge computing: A systematic review, taxonomy
    and future directions Author links open overlay panel Sundas Iftikhar a b, Sukhpal
    Singh Gill a 1, Chenghao Song c, Minxian Xu c, Mohammad Sadegh Aslanpour d e,
    Adel N. Toosi d, Junhui Du f, Huaming Wu f, Shreya Ghosh g, Deepraj Chowdhury
    h, Muhammed Golec a i, Mohit Kumar j, Ahmed M. Abdelmoniem a, Felix Cuadrado k,
    Blesson Varghese l, Omer Rana m, Schahram Dustdar n, Steve Uhlig a Show more Share
    Cite https://doi.org/10.1016/j.iot.2022.100674 Get rights and content Highlights
    • Review AI/ML approaches used for the realization of AI/ML for fog/edge computing.
    • Discuss the background of AI/ML for fog/edge computing with broad taxonomy.
    • Present a current status of AI/ML-based resource management in fog/edge computing.
    • Propose a taxonomy of AI/ML-based resource management methods in fog/edge computing.
    • Identify open issues and future directions for the union of edge and AI as Edge
    AI. Abstract Resource management in computing is a very challenging problem that
    involves making sequential decisions. Resource limitations, resource heterogeneity,
    dynamic and diverse nature of workload, and the unpredictability of fog/edge computing
    environments have made resource management even more challenging to be considered
    in the fog landscape. Recently Artificial Intelligence (AI) and Machine Learning
    (ML) based solutions are adopted to solve this problem. AI/ML methods with the
    capability to make sequential decisions like reinforcement learning seem most
    promising for these type of problems. But these algorithms come with their own
    challenges such as high variance, explainability, and online training. The continuously
    changing fog/edge environment dynamics require solutions that learn online, adopting
    changing computing environment. In this paper, we used standard review methodology
    to conduct this Systematic Literature Review (SLR) to analyze the role of AI/ML
    algorithms and the challenges in the applicability of these algorithms for resource
    management in fog/edge computing environments. Further, various machine learning,
    deep learning and reinforcement learning techniques for edge AI management have
    been discussed. Furthermore, we have presented the background and current status
    of AI/ML-based Fog/Edge Computing. Moreover, a taxonomy of AI/ML-based resource
    management techniques for fog/edge computing has been proposed and compared the
    existing techniques based on the proposed taxonomy. Finally, open challenges and
    promising future research directions have been identified and discussed in the
    area of AI/ML-based fog/edge computing. Graphical abstract Download : Download
    high-res image (200KB) Download : Download full-size image Previous article in
    issue Next article in issue Keywords Artificial IntelligenceCloud computingFog
    computingEdge computingMachine LearningInternet of ThingsSystematic Literature
    Review 1. Introduction Most modern web applications now follow the standard practice
    of tapping into the remote computing resources provided by cloud data centers
    [1]. Mobile phones, wearables, and other user devices, as well as sensors in a
    smart city or factory, all create data that is often sent to remote clouds for
    processing and storage [2]. Due to the likelihood of a rise in communication latencies
    when billions of devices are linked to the Internet, this computing architecture
    is impractical for the long term [3]. The increased communication latencies will
    negatively affect applications and lower the Quality of Service (QoS) [4]. Bringing
    computing resources nearer to end devices and sensors and employing them for data
    processing is an alternate computing strategy that can help with the aforementioned
    issue (even if only partially) [5]. This might lessen the load placed on the cloud
    and speed up communications. The recent fashion in computing research is to implement
    this concept by moving part of the processing power currently housed in huge data
    centers to the network’s periphery, where it will be closer to end-users and sensors
    [6]. Internet of Things (IoT) devices such as routers, gateways, and switches
    may be equipped with computer resources, or specialized “micro” data centers may
    be built within public/private infrastructure for the ease of access and security
    [7]. “Edge computing” refers to a computing model that takes advantage of network
    edge resources. “Fog computing” refers to a paradigm that employs both on-premises
    hardware and cloud services [8]. Edge resources differ from cloud resources in
    several ways [9], [10], [11]: (a) they are resource constrained, meaning they
    have fewer computational capabilities due to edge devices’ smaller processors
    and lower power budgets; (b) they are heterogeneous, meaning that different processors
    use different configurations; and (c) their workloads adjustment and applications
    fight for them. Hence, one of the major difficulties in fog and edge computing
    is managing resources. 1.1. Resource management issues in Fog/Edge computing In
    recent years, IoT applications (e.g. smart homes, self-driving cars, smart agriculture,
    smart healthcare) have improved people’s quality of life [12]. The increase in
    IoT applications has also increased a number of IoT devices such as sensors, smart
    CCTV cameras, smart gadgets, and other smart devices. These IoT applications generate
    a massive amount of data [13]. According to a report by International Data Corporation,
    in 2025 data generation from IoT devices will reach 79.4 zettabytes [14]. Traditional
    cloud infrastructure is not designed to handle such a huge amount of data [15].
    The large amount of data generated from the actuators, mobile devices and sensors,
    has incorporated latency, network bandwidth and security challenges to cloud infrastructure
    for time-sensitive applications [16]. To overcome these challenges, the emerging
    distributed computing paradigm “fog computing” and “edge computing” as an extension
    of Cloud computing has drawn the attention of the industrial and research community
    [17]. Fog/edge computing provides computing, network and storage services and
    control close to the data origin by combining distanced resources between cloud
    and end devices [18]. Though the resources in fog/edge are more limited in capability
    than cloud resources, they can play an important role in processing data for time-sensitive
    or real-time applications [19]. It enables location awareness, user mobility support,
    real-time interactions, low latency, high scalability, and interoperability that
    cloud-based systems could not support [20]. But the increase in IoT applications
    and limited resources in fog/edge computing environments has made efficient resource
    management very crucial. 1.2. Need of AI/ML for Fog/Edge computing With the increase
    in the use of IoT and Machine Learning (ML), cloud and fog/edge workloads are
    becoming increasingly diverse and dynamic. The confluence of fog and AI for improvement
    in human quality of life necessitates the use of smart management of fog resources.
    In traditional cloud computing platforms, resource management is done using traditional
    heuristic approaches without considering diverse and dynamic workloads [21]. Most
    of these methods (e.g., Threshold-based method) are static heuristics configured
    offline to certain workload scenarios. They are not able to scale applications
    in and out at run time based on the pattern and behavior of workload [22]. The
    performance of heuristic methods can also be drastically downgraded when the system
    is scaled up. Resource contention is also a major problem in fog environments
    where co-located applications compete for shared resources in such policies and
    cause performance deterioration and Service Level Agreement (SLA) violation [23].
    The shift of application structure from monolithic applications to micro-services
    and serverless has also increased the complexity [24]. Dependency in micro-services
    may cause Service Level Objective (SLO) violations due to communication costs
    and higher resource demands in fog computing. The fast-rising diversity of workloads,
    the complexity of applications and the near optimum requirement of QoS parameters
    of some IoT applications in Fog/Cloud environments, motivate the utilization of
    AI/ML techniques to optimize their resource management policies [25]. AI and ML
    models could be used to model and predict application and infrastructure level
    metrics that could also assist in task/resource orchestration by improving the
    quality of resource provisioning decisions [26]. Also, ML method can be directly
    used for resource management decisions for high accuracy and lower time overhead
    in large-scale systems [27]. ML algorithms e.g., Support Vector Machine (SVM),
    and polynomial regression, can be used to explore relations between performance
    metrics [1], the K-means algorithm can be used for the detection of abnormal system
    behaviors, Reinforcement learning models can be adopted for decision-making for
    resource provisioning, advanced Recurrent neural network can be used for the analysis
    of resource utilization or regression of application performance metrics and SVM
    can also be utilized for dependency analysis of application components [28]. 1.2.1.
    Motivation In the fog/edge computing context, AI/ML-based solutions have been
    employed for a variety of goals, including resource efficiency, load balancing,
    energy efficiency, SLA assurance, etc. Therefore in this article, we aim to investigate
    “AI for fog/edge computing” and its components for the realization of fog/edge-enabled
    AI. • AI/ML-based resource management techniques have demonstrated potential for
    managing resources and deploying applications in cloud computing. Hence, aim to
    outline the evolution and principles of AI/ML-based resource management in fog/edge
    computing in recent studies. • Existing survey papers do provide light on AI/ML-based
    resource management for fog/edge computing, but this area of study is rapidly
    growing as new AI/ML models are integrated. In order to uncover new research problems,
    trends, and potential future directions, a new Systematic Literature Review (SLR)
    of AI/ML-based resource management systems for fog/edge computing is required.
    1.3. Related surveys and contributions Many reviews/surveys have been conducted
    that discuss the role of AI/ML in fog/edge computing. Ghobaei-Arani et al. [12]
    reviewed solutions for resource management approaches in fog computing. They presented
    a taxonomy of resource management methods considering six dimensions, resource
    planning, load balancing, task offloading, resource allocation, resource provisioning,
    and application placement. They presented a thorough analysis of several case
    studies and their methodologies but focused on general approaches and partially
    discussed AI approaches. They did not provide any classification of AI-based solutions.
    Zhong et al. [1] presented a review of machine learning approaches for container
    orchestration issues from resource management. They proposed a taxonomy to classify
    current research by its common features. Duc et al. [29] investigated machine
    learning-based resource provisioning in joint edge–fog–cloud environments, and
    surveys technologies, mechanisms, and ML-based methods that can be used to improve
    the reliability of distributed applications in diverse and heterogeneous network
    environments. Casalicchio et al. [30] explored the problem of autonomic container
    orchestration and presented a taxonomy of container technology, container tools,
    and architecture, but they only provided a generalized discussion on container
    technology not specific to edge or fog. Another review [31] addressed the confluence
    of edge computing and AI. This work has two-dimensional agenda: the use of edge
    computing for AI and the use of AI for Edge. They only focused on computational
    offloading and mobility management with AI methods and only discussed a few AI-based
    works for these issues. Kansal et al. [32] presented a review of data-driven approaches
    for fog management issues. They are classified based on the technology used, QoS
    factors, and data-driven strategies. However, they generically reviewed all the
    data-driven techniques and do not present any classification or taxonomy of AI
    techniques. Although existing survey articles provide new insights into AI/ML-based
    resource management for fog/edge computing, the research field is constantly expanding
    with the integration of new AI/ML models. Therefore, new reviews of AI/ML-based
    resource management approaches are needed to identify emerging research challenges
    and possible future directions. Further, none of the existing surveys have used
    the Systematic Literature Review (SLR) approach to conduct the survey. In this
    work, we followed a systematic review methodology as per the “Centre for Reviews
    and Dissemination (CRD) guidelines” given by Kitchenham [33] to conduct this review
    on AI/ML-based resource management in Fog/Edge computing. Table 1 compares the
    related surveys with our SLR based on important key parameters. 1.3.1. Our contributions
    The main contributions of this Systematic Literature Review (SLR) are summarized
    as follows: • Review AI/ML approaches used for the realization of AI/ML for fog/edge
    computing. • Offer a comprehensive literature review to discuss the background
    and current status of AI/ML-based resource management approaches in fog/edge computing
    environments. • Propose a taxonomy of the most common AI algorithms used for resource
    management in fog/edge computing environments. • Compare existing studies using
    various parameters related to identified categories through the proposed taxonomy.
    • Identify open issues and future directions for the confluence of edge and AI
    as Edge AI. Table 1. Comparison of related surveys with our Systematic Literature
    Review (SLR). Work [12] [30] [31] [1] [34] [35] [36] [29] [37] [38] [39] [32]
    Our SLR Year 2020 2019 2020 2022 2020 2019 2018 2019 2021 2022 2021 2022 2022
    Environment IoT ✓ ✓ ✓ ✓ ✓ Edge ✓ ✓ ✓ Fog ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ Empty Cell Cloud
    ✓ ✓ ✓ ✓ AI Method Machine learning ✓ ✓ ✓ ✓ Deep learning ✓ ✓ ✓ Reinforcement learning
    ✓ ✓ ✓ ✓ AI for Fog/Edge Resource Discovery ✓ ✓ Resource Estimation ✓ ✓ ✓ Application
    Placement ✓ ✓ ✓ ✓ ✓ Resource Orchestration ✓ ✓ ✓ ✓ Resource Scheduling ✓ ✓ ✓ Resource
    Provisioning ✓ ✓ ✓ ✓ ✓ ✓ Task offloading ✓ ✓ ✓ ✓ Load balancing ✓ ✓ ✓ Taxonomy
    ✓ ✓ ✓ ✓ ✓ ✓ ✓ Classification ✓ ✓ ✓ ✓ ✓ ✓ Systematic Literature Review (SLR) ✓
    1.4. Article organization The rest of this article is structured as illustrated
    in Fig. 1. In Section 2, the review methodology is described. Section 3 presents
    the background and current status of AI based resource management approaches,
    Section 4 gives a detailed review of AI/ML-based techniques used for resource
    management issues and their current status. Section 5 presents a taxonomy of frameworks
    and comparison analysis in AI-based edge and fog computing. Section 6 discusses
    result outcomes and Section 7 provides open issues and future directions. Finally,
    Section 8 concludes the paper. Download : Download high-res image (888KB) Download
    : Download full-size image Fig. 1. The organization of this Systematic Literature
    Review (SLR). 2. Review methodology This work is a Systematic Literature Review
    (SLR) of AI/ML-based resource management in Fog/Edge computing. We followed a
    systematic review methodology as per the “Centre for Reviews and Dissemination
    (CRD) guidelines” given by Kitchenham [33] to collect the most relevant studies
    on this issue. The following steps are included in the process of reviewing this
    article: (i) establishing the evaluation process; (ii) describing the evaluation
    criteria; (iii) creating the taxonomy; (iv) performing the analysis; (v) contrasting
    the different previous studies; (vi) analyzing the finding and outcomes; and (vii)
    emphasizing promising research directions. 2.1. Planning the review Creating research
    questions is the first step in designing the rules of evaluation. We used these
    carefully constructed queries to do additional searches across a variety of data
    sources. The review method identifies and accumulates relevant data for the intended
    investigation. Articles are either taken into consideration or discarded heavily
    due to the evaluation procedure. The selection of this task by a single researcher
    might potentially instill bias in the study. This Systematic Literature Review
    was thus conducted by splitting among all of the contributors of this paper. Each
    author has written a document that outlines their thoughts on the review process
    and distributed it to other team members. Over a set period of time, this cycle
    has replicated itself. After much debate over several versions, the review guidelines
    have been completed. Several online databases have been combed thoroughly. Fig.
    2 represents the evaluation process. Download : Download high-res image (192KB)
    Download : Download full-size image Fig. 2. Process of review methodology. 2.2.
    Research questions In order to better understand AI/ML for fog/edge computing,
    we plan to do a comprehensive overview of the field. Researchers may use the results
    of this study to have a better grasp of the state of AI/ML-based fog/edge computing
    and to pinpoint fruitful avenues for further investigation. Planning the review
    procedure requires the Research Questions (RQ). Table 2 displays the research
    questions, the rationale behind them, and the relationships between various parts
    and subsections of our literature review to demonstrate how we are addressing
    these RQs using Systematic Literature Review (SLR). Table 2. Research questions,
    Motivation, Category and Mapping sections. Sr. No. Research question Motivation
    Category Mapping section RQ1 What is the current status of AI/ML-based fog/edge
    computing? The research question investigates the many different subareas within
    AI/ML-based fog/edge computing. Current Status & Background and Result Outcomes
    Sections 3 AI/ML for Fog/Edge computing: Background and current status, 6 Result
    outcomes RQ2 In fog/edge computing, what resource management methods are available
    that are based on AI and ML? The purpose of this question is to delve into the
    numerous methods employed in either the simulation or real-time application of
    AI/ML-based fog/edge computing. AI For Resource Management in Fog/Edge and Taxonomy
    Sections 4 AI based techniques for resource management in Fog/Edge computing,
    5 Taxonomy RQ3 What are the most important sub-fields of AI/ML-powered fog/edge
    computing? This question is useful for determining the nature of research that
    has been conducted utilising AI/ML-based fog/edge computing. Current Status &
    Background and AI For Resource Management in Fog/Edge Sections 3 AI/ML for Fog/Edge
    computing: Background and current status, 4 AI based techniques for resource management
    in Fog/Edge computing RQ4 Where are AI/ML-based fog/edge computing frameworks
    stand right now? This inquiry probes the Multiple models for AI/ML-driven fog/edge
    computing that have been established by scholars for use in certain IoT use cases.
    AI For Resource Management in Fog/Edge and Taxonomy Sections 4 AI based techniques
    for resource management in Fog/Edge computing, 5 Taxonomy RQ5 How can the efficiency
    of AI/ML-based fog/edge computing be measured, and what metrics are used for this
    purpose? The effectiveness of AI/ML-based Resource Management Techniques for fog/edge
    computing is measured in terms of delay, cost, and power usage, among others,
    by the researchers. Performance Metrics Section 3.8 RQ6 What kinds of workloads
    are utilised to evaluate the efficacy of AI/ML-based fog/edge computing frameworks?
    The survey identifies and mentions the workloads utilised by the fog/edge computing
    system. Workloads Section 3.10 RQ7 Which simulators are utilized for fog/edge
    computing that is based on AI/ML? The paper identifies and discusses the simulators
    utilised in the fog/edge computing architecture for AI/ML-based Resource Management
    techniques. Simulators Section 3.9 RQ8 What are the most common applications of
    IoT-enabled Edge/Fog AI? Use cases for IoT-enabled Edge/Fog AI are discovered
    and discussed in the paper. Edge/Fog AI and Usecases of IoT enabled Edge/Fog AI
    Sections 3.1 Edge/Fog AI, 3.2 Usecases of IoT enabled Edge/Fog AI RQ9 What are
    ML/DL/RL, Online and Offline Learning Techniques for Edge AI Management? Various
    techniques for Edge AI management are discovered and discussed in the paper. ML
    with Fog/Edge and ML-based Resource Management Sections 3.4 Machine Learning with
    Fog/Edge computing, 3.7 ML-based resource management in Fog/Edge computing RQ10
    What are the techniques for Edge AI Management? Various Deep Learning/Reinforcement
    Learning techniques for Edge AI management are discovered and discussed in the
    paper. AI For Resource Management in Fog/Edge Section 4 RQ11 How will AI and machine
    learning impact fog and edge computing in the future? Finding out where fog/edge
    computing research is headed and what problems remain unanswered is crucial. Open
    Challenges and Research Directions Section 7 2.3. Sources of information A comprehensive
    search of electronic sources is essential for a thorough literature evaluation.
    In an effort to improve the probability of locating relevant research publications,
    we have selected the following collection of data sources: • Wiley Interscience
    (www3.interscience.wiley.com) • Springer (www.springerlink.com) • ACM Digital
    Library (www.acm.org/dl) • IEEE eXplore (ieeexplore.ieee.org) • ScienceDirect
    (www.sciencedirect.com) • Semantic Scholar (www.semanticscholar.org) Additional
    Sources: In order to broaden our search for relevant research, we also consulted
    the following supplementary sources: • Investigated the original sources included
    in the reference list. • Technical Reports • Edited Books and Text Books 2.4.
    Search criteria The determined search method from various online sources is presented
    in Table 3. The research articles featured here were gathered using the most widely-used
    Internet resources in the field of AI/ML for fog/edge computing. ScienceDirect,
    IEEE Xplore, Springer, Taylor & Francis (T&F), ACM, Sage, Wiley, InderScience,
    and Google Scholar are only a few of the digital libraries from which the papers
    were retrieved. Finding relevant studies in the literature relies heavily on “Search
    string construction” and “Search keywords choice”. Search terms like “fog computing”
    and “edge computing” and related terms like “Artificial Intelligence” and “Machine
    Learning” and “Deep Learning” revealed relevant items. Combining the keywords
    with the boolean operators AND and OR produced the final string for search. The
    following sequence has the following specified format: Download : Download high-res
    image (290KB) Download : Download full-size image Firstly, we constructed a search
    query based on the formulated research questions in Table 2. Table 3 details the
    evaluation process’s search strings. Table 3. Search strings for e-resources.
    Sr. No. e-resource Search string Dates Source type Subjects 1 ieeexplore.ieee.org
    Abstract: Artificial Intelligence or Machine Learning for Fog Computing or Edge
    Computing 2015–2022 Conferences, Journals, Magazines and Transactions Fog Computing,
    Edge Computing, Machine Learning, Deep Learning, Artificial Intelligence 2 www.springerlink.com
    Abstract: Artificial Intelligence or Machine Learning for Fog Computing, Edge
    Computing 2015–2022 Conferences, Journals and Magazines Fog Computing, AI, ML,
    DRL, RL, Edge Computing 3 www.sciencedirect.com Abstract: Artificial Intelligence
    or Machine Learning for Fog Computing, Edge Computing 2015–2022 All sources Fog
    Computing, Deep Learning, Artificial Intelligence, Edge Computing 4 www.onlinelibrary.wiley.com/
    Abstract: Artificial Intelligence or Machine Learning for Fog Computing 2015–2022
    Conferences, Journals, Magazines and Transactions Fog Computing, Edge Computing,
    Machine Learning, Deep Learning, Artificial Intelligence 5 www.acm.org/dl Abstract:
    Article Title: Fog, Full Text/Abstract: Artificial Intelligence or Machine Learning
    for fog or edge 2015–2022 Conferences, Journals, Magazines and Transactions AI/ML,
    Fog, Cloud, Edge 6 www.taylorandfrancis.com/ Abstract: Artificial Intelligence
    or Machine Learning for Fog/Edge Computing 2015–2022 Conferences and Journals
    Edge, Fog, AI, ML, DRL 7 www.inderscience.com/ Abstract: Artificial Intelligence
    or Machine Learning for Fog Computing 2015–2022 Journals All Subjects 8 www.semanticscholar.org
    Abstract: AI/ML for Fog/Edge Computing 2016–2022 arXiv Preprints Fog Computing,
    Edge Computing, Machine Learning, Deep Learning, Artificial Intelligence 9 Other
    Publishers Article Title: Fog, Full Text/Abstract: AI/Ml for fog or edge 2015–2022
    All sources Edge, Fog, AI, ML, DRL 2.5. Inclusion and exclusion criteria AI/ML-based
    Fog/edge computing is a relatively new area of study, and only a small number
    of papers have addressed the key questions surrounding them prior to 2015. As
    a result, the number of articles covering the topic before 2015 was quite low.
    Fig. 2 displays the selection procedure of research papers from the Internet and
    digital library databases. The aforementioned search terms and string combinations
    were utilized to narrow the available databases down to the most pertinent articles.
    Starting with publications that were not peer-reviewed or indexed by ISI, 320+
    papers were chosen for the first phase. To find quality publications, a research
    screening method has been done to exclude brief publications, non-peer-reviewed
    papers, low quality book chapters, and low-quality studies that were not capable
    of delivering any technical knowledge and scientific argument. By the end of the
    process, 135 articles from prestigious journals and conferences had been hand-picked
    for this evaluation. In Section 5, the suggested taxonomy is explained alongside
    an analysis of each work that fits into it. The elimination of research was performed
    using the following criteria to pick the rigorous quality publications: • Neither
    the journal nor the conference are indexed. • The articles present any survey
    and analysis work. • These are the documents that were not written using the English
    language. • Works that do not undergo a rigorous peer review procedure. 2.6. Quality
    assessment There are several research publications on AI/ML for fog/edge computing
    in a wide variety of journals and proceedings from conferences. After applying
    the exclusion and inclusion criteria, we conducted a quality evaluation of the
    selected papers to choose the most relevant ones for further consideration. To
    evaluate the studies’ overall quality, we checked them against critical factors
    such as objectivity, internal consistency, and bias using the CRD recommendations
    [33]. We have established quality evaluation forms as presented in Appendix A
    to evaluate high-quality research papers for this systematic review of the literature.
    We have asked both broad, exploratory questions and in-depth, exploratory ones.
    Preliminary Examining questions are a helpful tool for locating high-level research
    publications that are associated with AI/ML in Fog/Edge Computing. In addition,
    specific questions are used to choose the research papers that are the most pertinent
    to the primary context of AI/ML in Fog/Edge Computing. 2.7. Data extraction The
    methodology for extracting data from the 135 research papers included in this
    analysis was detailed in Appendix B. Initiating the data-gathering process inspired
    us to create this data extraction form in order to answer the research questions.
    Our carefully stated selection criteria allowed us to identify the best works
    on AI/ML for fog/edge computing from a wide range of prestigious journals and
    conferences as listed in Appendix C. In addition, we have reached out to a number
    of authors in order to collect the necessary information regarding scholarly works.
    In this SLR, we used this procedure to retrieve the data: • A set of authors read
    through all 135 publications to collect the necessary information. • Other authors
    used random samples to verify the accuracy of data collection. • Any issue that
    arose throughout the cross-checking procedure was discussed and settled in a number
    of meetings. 2.8. Acronyms Abbreviations utilized in the systematic literature
    evaluation are given in Appendix D. 3. AI/ML for Fog/Edge computing: Background
    and current status In this section, we discuss the background concepts, including
    AI and ML with Fog/Edge Computing. Further, this section presents other concepts
    such as resource management in Fog/Edge computing, categorization of resource
    management approach in Fog and Edge computing, IoT applications, performance metrics,
    workloads and simulators. Fig. 3 represents a broad taxonomy of AI/ML for Fog/Edge
    Computing. Download : Download high-res image (514KB) Download : Download full-size
    image Fig. 3. Taxonomy of AI/ML for Fog/Edge computing. 3.1. Edge/Fog AI The emerging
    computing model named fog and edge computing can alleviate the problem of bringing
    the computational resources closer to the end user. These computing models offered
    the services to several latency-sensitive IoT applications such as vehicular networks,
    agriculture, healthcare, smart home, and transportation system [40], where cloud
    models fall behind in handling the services with minimum response time [41]. The
    fog/edge paradigm supports low latency, high mobility, and interoperability with
    resource constraints for IoT applications [42]. The contemporary research trend
    resides in the decentralization of resources towards the edge of the network.
    In contrast to cloud resources, edge resources need distinctive managerial techniques
    because of underlying heterogeneous resources, dynamic workload, scalable data
    centers, and last but not least, unpredictability, fluctuating interactions and
    multi-tenancy across end users [43]. The dynamic workloads make the process even
    more complex when real-time applications are competing for limited resources [44].
    Failure recovery, data redundancy, high cost, power consumption, and privacy are
    still issues with the emerging computing paradigm, it necessitates the management
    of fog/edge resources is considered one of the significant challenges and needs
    to be addressed by the intelligent solution to improve the performance metrics
    and resolve the mentioned issues [45]. Resource provisioning, task offloading,
    resource scheduling and allocation, service placement, and load balancing are
    the components of resource management [46]. Each component of resource management
    and its related issues are discussed briefly. 3.1.1. Resource provisioning Resource
    provisioning is defined as selection, deployment, and run time management of software
    and hardware resources for the efficient performance of applications. There are
    fluctuations in IoT devices’ workload that leads to the issue of over and under
    provisioning. In the case of overprovisioning, a greater number of resources are
    allocated as compared with the required IoT workload, and IoT users must pay more
    for the services used [47]. In case of under provisioning, a smaller number of
    resources are allocated for IoT services, as per the requirement of IoT workload
    and it increases the possibility of SLA violations [48]. Hence, an efficient mechanism
    is needed to overcome the mentioned challenges and provide the resources based
    on the service demands. 3.1.2. Task offloading It is problematic to take the offloading
    decision at runtime due to the complex architecture of fog and edge networks with
    resource constraints and allocate the best possible resource (cloud or fog) for
    computation-intensive tasks. The most common applications it supports are virtual
    reality, vehicular networks, and multimedia delivery [12]. We required an intelligent
    agent to decide, where the IoT devices-based workload will be processed and return
    the results within the deadline. The offloading decision are depending upon several
    factors like types of workloads, deadlines, priority, communication link, the
    capacity of fog nodes, and IoT devices. The main aim is to, utilize the link,
    and improve the latency and power consumption. 3.1.3. Resource scheduling and
    allocation The number of fog/edge nodes are available to process the IoT requests,
    but required an efficient scheduling technique that will search the optimal resources
    for the upcoming workload and execute it within the deadline [49]. The scheduling
    of IoT service requests with objective function over the heterogeneous fog/edge
    nodes belongs to the class of NP-Complete and it is difficult to find the exact
    solution to the problem [50]. Resource scheduling and allocation is a different
    problem in the edge/fog paradigm with additional entities as compared with the
    cloud paradigm, and becomes a double mapping problem under-provisioning and IoT
    services demands [51]. 3.1.4. Service placement The objective of service placement
    is to look at the optimum resources for IoT services, and deploy over the virtualized
    edge/fog nodes to enhance the QoS metrics, while maintaining the SLA [37]. An
    IoT application can be mapped with more than one fog/edge node or multiple services
    can be placed over a single fog node, depending upon the requirement of services
    and computation capacity of resources. 3.1.5. Load balancing It is one of the
    vital issues to distribute the workload over the virtualized fog nodes in balancing
    mode and avoid the possibility of over or underutilization of resources [52].
    The goal of load balancing in edge/fog computing is to reduce the response time
    for latency-sensitive applications and address the challenges like network delay,
    high waiting time, and scalability to improve the system performance with potential
    solutions [53]. There are many resource management solutions are existed for the
    cloud paradigm, but cannot apply the same for fog/edge computing due to different
    network conditions, and characteristics, more distributed infrastructure, and
    processing capabilities of nodes [50], [53]. Hence, it is more challenging to
    address the issues of resource management in the fog/edge platform, as compared
    to the cloud platform [54]. Several researchers are working in this direction
    to manage the resources of a heterogeneous network, accurate offloading decisions,
    optimal provisioning, intelligent scheduling techniques, best-effort service placement
    and efficient workload sharing for load balancing, but no one has explored all
    the mentioned challenges entirely despite its importance for real-time applications,
    hence it opened the door for the new researchers to propose a novel solution for
    the existing issues. 3.2. Usecases of IoT enabled Edge/Fog AI IoT has attracted
    significant research interests from both industry and academia and facilitates
    varied novel applications, including smart home, surveillance, smart healthcare
    and so on. Here, we present a brief summarization of different types of IoT applications.
    3.2.1. Healthcare IoT solutions have been considered and deployed for health management
    systems by efficiently tracing agents (patients, medical practitioners, medical
    resources), automatic data sensing and authentication and it is defined as Internet
    of Health Things (IoHT) [55]. IoHT technology has redefined the healthcare system
    by health monitoring of patients anytime and anywhere for post-discharge care,
    elderly health management and several other emergency situations like pandemic
    [56]. Wearable sensor is one of the major components in IoHT where health-related
    parameters are collected in different time intervals and processed for smart e-healthcare
    applications [57], [58]. A framework with IoT-based wearable sensors coupled with
    machine learning methods has been proposed for monitoring sport’s person health
    conditions by collecting health parameters and exercise traces [59]. Carlos et
    al. [60] presented an IoHT-based deep learning framework for medical image (cerebral
    vascular accident image, lung nodule and skin images) classifications [60]. Another
    work by Ray et al. [61] designed a prototype of a cost-effective and low-power
    sensor system that is conducive to monitoring real-time intravenous (IV) fluid
    bag levels in e-healthcare applications. A collaborative edge-IoT framework, named
    RESCUE is proposed in [62] for provisioning healthcare services specifically in
    exigency time by collecting patient’s location, and health condition and predicting
    the route of nearby healthcare centers. The framework also devises latency-aware
    and power-aware frameworks using IoT devices. Several research works have been
    carried out to mitigate COVID-19 by leveraging IoT-based solutions using AI/ML
    [63], [64]. Khan et al. [65] present Deep Collaborative Alerts-recommendation
    (DCA)-Internet of Medical Things (IoMT), a location-aware knowledge-graph-based
    recommendation framework for an alert generation against COVID-19. FairHealth,
    an IoMT framework is proposed in [66], where the fairness-aware resource scheduling
    method is deployed in 5G edge healthcare. Another imperative issue in the healthcare
    domain is the privacy aspect since such collected health data is sensitive in
    nature [67]. To mitigate such issues, a secure IoMT framework is presented leveraging
    blockchain [68]. In particular, when IoMT devices send data using a patient’s
    Personal Digital Assistant (PDA), the data is transacted on the blockchain by
    the cloud server. Similarly, in the context of COVID-19, a blockchain-based privacy-preserving
    algorithm is proposed by Lv et al. [69] for contact tracing. The authors investigate
    several practical challenges including protecting data security and location privacy,
    dynamically and effectively deploying short-range communication IoT for activity-tracking
    and location-based services in large areas. The utility of IoT is explored for
    vaccine supply chain distribution in India [70]. 3.2.2. Smart-home IoT solutions
    can provision smart home services including automatic control of domestic appliances,
    alarm generation, security controls and developing an Internet-connected system.
    Gavrila et al. [71] present an IoT-based framework for seamless integration with
    a Hybrid broadcast broadband TV-enabled television set in a smart home environment
    for a better user experience. A multi-objective and smart residential load management
    framework is presented for energy management in smart-homes [72]. Specifically,
    an IoT based controller manages the home loads and generates alerts if any malfunction
    in the household loads is detected. In the smart-home context, cyberattacks cause
    potential harm to the occupants and compromise their safety. In this regard, Yamauchi
    et al. [73] devised a novel method to detect such attacks by learning occupants’
    behavior as sequences of events such as the operation of home IoT devices and
    activities along with environmental variables (temperature, humidity, time of
    the day). The method compares learned sequences and current sequences when an
    operation command is activated, and an anomaly is detected. Kratos+, a multi-user
    and multi-device-aware access control mechanism is proposed in a similar context
    for allowing smart home users to specify the access control demands [74]. Li et
    al. [75] present a human pose forecasting system for smart homes leveraging graph
    convolutional neural network on the IoT edge for online learning. IoT Meta-Control
    Firewall (IMCF+) is proposed to mitigate energy consumption and CO2 emission issues
    while also maintaining user comfort [76]. 3.2.3. Agriculture IoT has brought dramatic
    improvements in agricultural production by enhancing the quality of agricultural
    products, reducing labor costs, and effective farm management [77]. Alahi et al.
    [78] design a smart nitrate sensor that monitors nitrate concentrations in ground
    and surface water. The system is supported by WiFi-based IoT that can send data
    directly to an IoT-based web server and serves as a distributed monitoring system
    [79]. A cyber–physical system for crop evapotranspiration estimation is proposed
    [80]. A gradient-boosting decision tree along with a fuzzy granulation method
    is used on IoT data from Xi’an Fruit Technology Promotion Center in Shaanxi Province,
    China for cherry tree evapotranspiration estimation and the proposed system achieved
    promising accuracy [81]. The continuous monitoring of crop growth is one of the
    most important aspects of precision agriculture. Bauer et al. [82] design a complementary
    framework for low-cost crop sensing leveraging temporal variations of the signal
    strength of low-power IoT radio communication [83]. Multidimensional feature compensation
    residual neural network (MDFC-ResNet) framework [84] identifies fine-grained crop
    disease using IoT technology and deep learning method. 3.2.4. Smart transportation
    IoT demonstrates a promising future in Intelligent Transportation Systems (ITS)
    by collecting, analyzing traffic/mobility-related data and developing a smart,
    safe, reliable and sustainable ITS [85]. A smart parking surveillance system (detecting
    parking occupancy) is proposed by using edge computing and real-time video feed
    [86]. Bansal et al. [87] propose DeepBus for identifying surface irregularities
    (e.g., potholes) on roads using IoT sensor and machine learning methods. The system
    centrally hosts a map and alerts users and authorities regarding pothole locations.
    Philip et al. [88] designed an IoT-based smart traffic control system where a
    group of self-driving cars interact with road-side units and independently decide
    their lane velocities. IoT-based energy efficient ITS framework is presented that
    can reduce energy consumption, noise pollution, waiting time and greenhouse gas
    emissions in smart city environment [89]. Wan et al. [90] proposed a framework
    consisting IoTs of vehicles for vehicle number estimation which in turn helps
    in vehicle localization. A predictive framework is designed for forecasting the
    parking space occupancy leveraging deep learning-based ensemble technique [91]
    in IoT environment. The system specifically reduces the search time for parking
    and the optimization of the flow of cars helps in better traffic management in
    congested areas of a city. 3.2.5. Spatial applications Internet of Spatial Things
    (IoST) integrates spatial or location information in the core IoT architecture
    to facilitate location-aware services [92], [93]. Ghosh et al. [94] presented
    a mobility-aware IoST framework for time-critical applications (e.g., ambulance
    service, disaster relief) for predicting optimal paths with less delay. Koh et
    al. [95] proposed a new location spoofing detection algorithm that can be used
    for spatial tagging and location-based services in an IoT environment. A spatial-data
    driven IoT framework, STOPPAGE is developed for predicting COVID-19 hotspot zones
    and efficient medical resource management in varied regions [96]. 3.3. AI with
    Fog/Edge computing IoT is a communication network created by objects that can
    connect to the Internet and communicate with each other [97]. It has started to
    be used everywhere, from healthcare applications to military applications, and
    it is estimated that the number of IoT devices will reach approximately 30 billion
    by 2030 [98]. Along with the vertical increase in the number of IoTs, the amount
    of data that needs to be processed and produced by sensors has reached gigantic
    proportions. Processing this data in the cloud seems like a logical solution at
    first because of its advantages, such as high processing power and storage capacity
    [99]. However, problems such as [100] latency may occur in time-sensitive IoT
    applications such as instant patient follow-up. Fog computing can be seen as an
    inspiring development to solve problems such as latency, power consumption, and
    network traffic in Cloud-based IoT systems [101]. Unlike cloud data centers, Fog
    nodes are located close to the IoT layer. Thus, execution time and bandwidth issues
    can be reduced [102]. On the other hand, fog nodes do not consist of devices with
    powerful processing power and large storage ability such as cloud data centers
    [12]. Therefore, one of the difficulties that need to be solved in fog computing
    is resource management, which consists of subheadings such as resource scheduling,
    task offloading and resource provisioning [9]. Resource management issue for Edge/Fog
    AI is addressed using diverse techniques. One of these methods is AI-based techniques
    that have been gaining popularity recently. AI-based techniques used to solve
    resource management problems in Fog/Edge computing can be summarized as Deep Learning
    (DL), Machine Learning (ML), Reinforcement Learning (RL), and Deep Reinforcement
    Learning (DRL). AI-based techniques are very effective in dynamic resource scheduling
    [32]. In particular, DRL has been shown to be very successful in dynamic complex
    problems and dynamic task offloading [32]. In addition, AI-based techniques such
    as neural networking and RL were found to be more popular in resource estimation
    than mathematical models [103]. 3.4. Machine Learning with Fog/Edge computing
    AI and ML became an integral part of everyday application decision-making. It
    is used by recommender systems for tech giants such as Google, Amazon, Netflix,
    and Facebook and in more complicated use cases such as self-driving cars [104],
    earthquake prediction [105], and smart healthcare [106]. Due to the abundance
    of data sources at the edge, Fog/Edge computing received increasing attention
    as an enabler of Machine Learning methods. In this section, we examine Centralized
    vs Decentralized ML Methods and Online vs Offline ML for fog/edge computing. 3.4.1.
    Centralized ML methods AI and ML models feed on a tremendous amount of data generated
    by thousands to millions of mobile and IoT devices. Typically, these devices continuously
    stream the generated data into the cloud applications to be stored for later processing
    and analysis. These data are analyzed to extract certain features to help train
    AI/ML models. These models are trained on high-performance servers residing in
    the data centers of the cloud. Google Cloud, Microsoft Azure, Amazon AWS are the
    most common providers for ML-as-a-service where models can be trained on large
    amounts of data at scale. The interactions between the various services in the
    Fog/Edge are another source of training data that can be leveraged to enable more
    intelligent ML-based applications to be deployed and enhance the service for the
    users. However, the major concern with this setting is the security and privacy
    of the collected data used for training which may contain private and sensitive
    information. Other major problems for centralized Fog/Edge-based ML methods are
    latency and communication transfer costs [107], [108], [109]. There are many centralized
    learning methods for the purposes of workload prediction to aid with the resource
    allocation problem in literature [110], [111], [112], [113]. Wang et al. [111]
    proposed a feasible solution for edge cloud resource allocation over time based
    on an online algorithm to solve sub-problems with logarithmic objectives. The
    algorithm is shown to achieve a parameterized competitive ratio, without requiring
    any a priori knowledge of the resource price or the user mobility. The results
    with real-world and synthetic data confirm the effectiveness of the proposed algorithm.
    Rosendo et al. [112] provided an overview of the main state-of-the-art libraries
    and frameworks for ML and data analytics on the Edge-to-Cloud Continuum. This
    work also covers the main simulation, emulation, deployment systems, and testbeds.
    In addition, a holistic understanding of the performance optimization of applications
    and efficient deployment of AI/ML workflows is given. Nguyen et al. [113] proposed
    a market-based resource allocation framework in which the services act as buyers
    and fog resources act as divisible goods in the market. The aim is to compute
    a Market Equilibrium (ME) solution at which every service obtains its favorite
    resource bundle under the budget constraint, while the system achieves high resource
    utilization. The work discusses both centralized and privacy-preserving distributed
    solutions. 3.4.2. Decentralized ML methods Centralized learning (CL) for learning
    ML models is becoming obsolete because it requires the collection of decentralized
    user data imposing security and privacy risks and expensive data transfer [114],
    [115], [116], [117], [118]. Hence, decentralized paradigms are being explored
    as alternatives. Several techniques leverage decentralized learning methods for
    the purposes of workload prediction to aid with the resource allocation problem
    [119], [120], [121]. • Federated Learning (FL): In FL architecture, the learners
    are end-user devices such as smartphones, sensors, or IoT devices; training data
    is owned and stored at these devices; the learners train a global model collaboratively
    with the assistance of a centralized FL (or aggregation) server [114], [117],
    [118], [122], [123]. As described in [114], [118], [122], the training of the
    global model occurs over a series of rounds until the model converges to a satisfactory
    accuracy. In each round, a few clients are sampled to update the model and a new
    model is produced. But, due to the server’s central role, FL faces challenges
    of synchronization, reliability, and expensive communication [116]. At the start
    of each round, the server waits for available devices to check-in. The server
    selects a subset of these devices which meet certain conditions, such as being
    idle and connected to WiFi and a power source. Then, the server sends the global
    model along with the necessary configurations (i.e., hyper-parameter settings)
    to the selected clients. The learners perform the same number of local optimization
    steps as set by the server. Then, the learners send their updated models (or the
    delta) to the server. Finally, the server aggregates, with the global model, the
    model updates sent by the clients, and then checkpoints the new global model to
    the local storage [122]. One of the main challenges in FL use cases is the heterogeneity
    of the environment [114], [116] which is studied and addressed by several works
    [117], [118], [123]. • Decentralized Learning (DL): It is an alternative approach
    for training common models on decentralized data, typically in environments consisting
    of edge devices [115], [124]. In DL, the learners, without centralized coordination,
    engage in the learning process to train a model tailored to their common tasks
    and coordinate among themselves via peer-to-peer communication. Thus, device groups
    can train a common model while each device preserves its data. However, due to
    a lack of central coordination, the devices need to be available at the same time
    to iterate over the training process in a lock-step fashion, causing training
    to be as fast as the slowest device. This hinders the scalability and efficiency
    as devices cannot train at their own pace without being held back by slow learners
    [115], [116]. There has been recent interest in techniques that leverage the non-conventional
    decentralized learning methods for the purposes of workload prediction to aid
    with the resource allocation problem [119], [120], [121]. Zarandi et al. [119]
    provides an optimization of the offloading decisions, computation resource allocation,
    and transmit power allocation for Edge IoT networks. The problem is presented
    as a multi-agent Distributed Deep Reinforcement Learning (DDRL) problem which
    is addressed via double deep Q-network (DDQN), where the actions are offloading
    decisions. Then, federated deep learning (FDL) is used to enhance the learning
    speed of IoT devices (agents) by creating a context for cooperation between agents
    with minimal impact on their privacy. Fantacci et al. [120] applies FL to train
    models for demand prediction. The proposed method achieves high accuracy levels
    on the predicted application demand via aggregating the feedback received from
    the user models. Chen et al. [121] propose a two-timescale federated deep reinforcement
    learning based on Deep Deterministic Policy Gradient (DDPG) to solve the joint
    optimization problem of task offloading and resource allocation to minimize the
    energy consumption of all IoT devices subject to delay threshold and limited resources.
    The simulation results show that the proposed algorithm can greatly reduce the
    energy consumption of all IoT devices. 3.4.3. Online machine learning One of the
    design options used when modeling ML method is Online ML. In this model, the learning
    algorithm is constantly updated using new data [125]. Therefore, real-time data
    must be used in scenarios where Online ML is used for fog/edge computing. An example
    is models that predict the stock market [126]. Fig. 4 shows the working scheme
    of Online ML [126]. ML parameters are updated by being trained by a new set of
    data each time. The learning step continues as new data comes in, and this process
    is quite fast and inexpensive. Online ML can be a suitable design option for scenarios
    where data flow is intense and constantly changing. Download : Download high-res
    image (266KB) Download : Download full-size image Fig. 4. Online Machine Learning
    general scheme for Fog/Edge computing. 3.4.4. Offline machine learning Unlike
    Online ML, there is no continuous data flow in Offline ML or Batch Learning. The
    ML model is trained using a certain number of data. After the model is trained,
    the test set performance is checked. If the test set performance is good enough,
    the learning phase ends. In case the model needs to be trained using new data,
    old and new data are used together. Fig. 5 gives the working diagram of Offline
    ML [126]. Compared to online ML, the amount of data used to train the model is
    larger. Therefore, it is obvious that more CPU and RAM will be needed to train
    a model in Offline ML. In addition, with a large amount of data, it will take
    longer to train the models. In Fog/Edge Computing, offline ML methods are often
    used to solve offloading problems. Download : Download high-res image (230KB)
    Download : Download full-size image Fig. 5. Offline Machine Learning general scheme
    for Fog/Edge computing. 3.5. Resource management in Fog/Edge computing This computing
    architecture is not sustainable in the long run because of the expected increase
    in communication latencies when billions of devices are connected to the Internet.
    Application performance will suffer and QoS may drop as a result of longer connection
    delays [127]. An alternative computing method that can aid with this problem is
    to bring computer resources closer to end devices and sensors and use them for
    data processing. Communications might be sped up and cloud resources used could
    be reduced [128]. In recent years, there has been a trend in Computer Science
    to put this theory into practice by relocating some of the computing capacity
    now located in massive data centers to the network’s perimeter, making it more
    accessible to end-users and sensors [129]. The Internet’s routers, gateways, and
    switches may have access to computing power, or “micro” data centers may be set
    up in existing public and private networks for convenience and safety. Computing
    models that take advantage of network edge resources are known as “edge computing”.
    Fog computing is the practice of combining local hardware with remote cloud resources.
    Edge resources are distinct from cloud resources in that they are resource limited.
    This means that they have less computing capability than cloud resources because
    of the smaller processing units and reduced energy constraints of edge devices.
    They also employ various configurations for different CPUs, making them heterogeneous
    [130]. 3.6. Categorization of resource management approach in Fog and Edge computing
    For the edge computing paradigm and the fog computing paradigm [131], the common
    denominator of the two is to sink the computing resources in the cloud to the
    user side, and provide better services for those user devices that do not have
    enough resources at a lower latency and energy consumption. To do this, we need
    to offload task data or place applications on another device or multiple devices,
    these devices usually have more computing resources or fewer energy constraints
    than the user device [132]. Generally, resource management is closely related
    to task offloading, in order to make better offloading decisions, we need to understand
    in detail the different resources in fog computing and edge computing scenarios,
    and these are all provided by resource management technologies [133]. For example,
    the estimation, discovery, and matching for resources can be used to make offload
    decisions, while resource allocation techniques can be used to perform offload
    decisions, and load balancing and resource orchestration or consolidation are
    designed to improve resource utilization and speed up response across the system
    after offloading tasks [134]. All in all, a better approach to resource management
    is to better offload task data or application placement to better serve users.
    Fig. 6 shows the flow of resource management approaches in the edge and fog continuum
    for realizing Edge AI. Download : Download high-res image (837KB) Download : Download
    full-size image Fig. 6. The flow chart of resource management in fog and edge
    computing. 3.6.1. Resource estimation Our estimates of resources under the two
    computational paradigms focus on the following five aspects [135]: computational
    resources [136] (e.g., CPU computational frequency, the number of CPU cycles required
    for computing one bit data, etc.), communication resources [137] (e.g., spectrum
    resources under Frequency division multiple access (FDMA) [138], length of time
    allocated per user under Time-division multiple access (TDMA) [139], etc.), storage
    resources (e.g., memory for devices, flash memory, etc.), data resources (e.g.,
    some popular content), energy resources (e.g., battery power, virtual energy queues,
    etc.). 3.6.2. Resource discovery For resource discovery, it is mostly about discovering
    which resources are available, where are they located, and how long can they be
    used (especially devices with batteries). Regarding the implementation of resource
    discovery, there are two main ways: centralized and distributed. Centralized [140],
    [141] refers to selecting a device as a Cluster Header (CH) to record resources
    on other devices in a cluster of many devices, or setting up a central resource
    agent as the CH to record resource information for other devices. Once the user
    has a need, the user sends a message requesting the service to a nearby node,
    and then the requested device node will check whether it meets the user’s needs,
    if it does not meet, the node will send the user’s request packet to the CH of
    the cluster where the node is located, and then the CH will retrieve the resource
    record table on it to find a node that meets the user’s needs for the user; Distributed
    [142], [143] refers to the fact that there is no CH to record the resources of
    other devices, when there is user demand, send a request message to the surrounding
    agent nodes, and then the requested node checks whether it meets the user needs,
    if not, the agent node (or the mobile device itself) sends resource request packets
    directly to all surrounding nodes by broadcasting to “discover” the required resources.
    3.6.3. Resource matching With the continuous development of the era of big data,
    different types of sensors, mobile devices, edge servers, and fog nodes will be
    connected to the core network, and the number of devices connected together will
    be in the hundreds of millions. In the face of so many resource-rich devices and
    edge nodes to choose from, we should not directly take all the resource nodes
    found as input before making an offload decision, which will increase the complexity
    of the offload optimization algorithm and make it difficult to converge. As with
    a complex neural network model [144], it is better to preprocess the collected
    raw data first, rather than directly using the collected data as input to the
    neural network. Resource matching plays the role of “data preprocessing”. For
    two different computing paradigms, the first thing we have to do is to identify
    malicious nodes [145], exclude malicious nodes by judging the data integrity of
    the nodes found, and then because the user needs of the two computing paradigms
    are not only computing, but also storage, acceleration networks, etc., so in addition
    to the initial matching and screening of resources such as computing, communication,
    energy and other resources on nodes [146], it is also necessary to filter out
    devices with insufficient processing power or insufficient energy, thereby reducing
    the dimensionality of input data for offloading decisions. Then, we also need
    to match and screen these nodes for reliability, security, social ratings, etc.
    3.6.4. Task offloading and resource allocation Task offloading is the transfer
    of resource-intensive computational tasks to an external, resource-rich platform.
    Partial or full task offloading is usually done to accelerate resource-intensive
    and latency-sensitive applications [147]. Resource allocation is usually directly
    associated with task offloading, for the edge computing paradigm, usually we not
    only have to give offload decisions (Binary offloading [148], [149] or partial
    offloading [150], [151]), but also under the response time, energy constraints,
    or other constraints, give the resource allocation scheme of all devices [152],
    [153], [154], in order to meet the needs of users with different preferences.
    3.6.5. Load balancing For task offloading, we generally formulate the offload
    strategy from the user’s point of view, in order to respond to the user’s needs
    faster and reduce the energy consumption of the user’s device [155]. However,
    the reality is that there may be many users who choose the same edge server or
    fog node for task offload in a period of time. Due to the resource heterogeneity
    of each device node, in the case of many task requests, there may be some resource-rich
    nodes with a too-heavy load, and some nodes will have a too-light load, then there
    will be a waste of resources for the entire system, and may lead to many user
    processes waiting for too long a time [156]. Then, in order to improve resource
    utilization more effectively and speed up the response, we must fully consider
    the load of the system when making the offload decision, transfer the task data
    from each user device to all edge servers or fog nodes equally, or optimize the
    processing sequence of the task data of each user [157], which can not only alleviate
    the waste of resources, but also shorten the waiting time of many processes and
    achieve load balancing of the entire system [156], [158]. The load we generally
    consider can be CPU load, amount of memory used, latency, or network load. Load
    balancing is defined as a technique that divides workloads into multiple devices
    (such as edge servers or fog nodes), so load balancing not only considers the
    needs of users, but also improves the resource utilization of the entire system
    from the perspective of the system. 3.6.6. Resource orchestration A lot of research
    work is to take load balancing into account before making offload decisions, but
    the reality may be that after the offload decision, some nodes are still selected
    by many user devices at the same time, resulting in high latency and low bandwidth
    of the entire system, for example, when some edge servers or fog nodes have a
    good signal-to-noise ratio, or contain a lot of popular cache content and high
    processing power [159]. These servers or nodes are often used by a large number
    of user devices. Therefore, we need to perform resource orchestration of task
    offloading between nodes [160] to improve their service capabilities and the load
    balance of the entire system. Resource orchestration refers to the coordination
    of resource allocation of the entire system by migrating offloaded user task data,
    etc., to each node. 3.6.7. Application placement In addition to the user’s data
    needing to be offloaded, sometimes we also need to place the application or model
    on the user’s device on the edge server or fog node, such as some latency-sensitive
    IoT applications: interactive online games, face recognition, etc. Application
    placement [161] means that all or some of the compute-intensive components of
    an IoT application (e.g., services, modules, applications, or models) can be placed
    (i.e., offloaded) executed and stored on edge servers or fog nodes to reduce the
    execution time of IoT applications and the energy consumption of IoT devices.
    3.6.8. Resource/server consolidation In order to ensure that the placement of
    applications and the offloading of computing tasks can improve the performance
    of the entire system on the basis of completing user needs, we can not only re-orchestrate
    the user’s computing tasks or applications, but also consolidate the resources
    of the entire system, such as server consolidation with the help of Virtual Machine
    (VM) migration technology [162]; Save more energy for the entire system at the
    cost of increasing the latency of single or multiple users [149]; Or from the
    perspective of resource utilization [163], when the resource utilization is reduced
    to a certain threshold, resource migration is carried out to achieve the purpose
    of consolidating resources. 3.7. ML-based resource management in Fog/Edge computing
    In general, ML algorithms can be broadly classified into (i) supervised learning
    and (ii) unsupervised learning. Supervised learning aims to develop a model from
    a collection of training instances ( ) where and represents the predictor and
    label respectively. In unsupervised learning, the algorithms discover hidden patterns
    and learn the structure of the training data. In the context of offline learning,
    the models learn over all the observations in a dataset at a go. First, we discuss
    the problems related to resource management followed by different AI/ML-based
    offline learning techniques. 3.7.1. Supervised learning It works by predicting
    Y outputs using the X inputs given to the algorithm to learn from [164]. In short,
    it consists of ML methods that generate functions with training data. It is generally
    classified in two ways classification and regression algorithms [165]. It gives
    better results in complex problems than unsupervised ML algorithms. On the other
    hand, since the prediction results depend on the training data, the prediction
    success rate will decrease when there is bad training data. Intelligent Offloading
    problems in Edge computing can be solved using Supervised Learning [166]. 3.7.2.
    Unsupervised learning Contrary to supervised learning, is the learning of correlations
    in data without input–output tags between data [167]. In short, they are ML methods
    that produce functions according to the densities of the data and their neighborhood
    relations. It consists of two main approaches: Dimensionality reduction and Cluster
    analysis [168]. Dimensionality reduction is also converted to a low dimensional
    space [169], as high data will require more processing load. Cluster analysis
    involves grouping clusters of objects with higher correlations to each other [170].
    Resource management in Edge and Fog computing using Unsupervised Learning is still
    an open research area. • K-means Clustering: K-means clustering refers to the
    method of vector quantization to partition observations into clusters where each
    observation belongs to the cluster with the nearest mean (cluster centers or cluster
    centroid). K-means clustering is one of the popular methods in resource allocation
    that can be used for clustering different types of devices based on the available
    resources in fog/edge computing environments. Such resources can be allocated
    according to the QoS requirements of each cluster. 3.7.3. Semi-supervised learning
    It is a machine learning method used to combine lowly labeled data with high rates
    of unlabeled data. It is generally used where Natural Language Process (NLP) is
    used. It is frequently used for computation offloading problems in Edge and Fog
    computing [171]. • Graph Neural Network (GNN): GNN analyzes data represented as
    graphs for extracting inferences on node-level and edge-level. Graph theory can
    be adopted where the network can be represented as graph topology. Chen et al.
    [172] propose a GNN-based framework for resource allocation in wireless IoT networks.
    The framework specifically deals with the computational and time complexity for
    conventional resource allocation and outperforms two tasks, namely, link scheduling
    in Device-to-Device (D2D) networks and joint channel and power allocation. Wang
    et al. [173] present aggregation graph neural network for resource allocation
    in decentralized wireless networks. 3.7.4. Reinforcement learning Standard RL
    is based on an agent being in connection with the environment by way of perception
    and action. The agent performs an action based on the environment. The RL model
    is trained in an iterative manner. The agent upon receiving an input (I) along
    with an indication of the current state of the environment (S), the agent then
    chooses apt action, which is triggered as output [174]. The agent works with the
    objective to maximize reward points. The state can be defined as the snapshot
    of the environment at that instant particular in time. In the past decade, RL
    has expeditiously drawn interest amongst the machine learning and artificial intelligence
    communities. It is one of the dominant and potential techniques, which is immensely
    being utilized in several domains, including industry and manufacturing. Q-Learning
    and State-Action-Reward-State-Action (SARSA) are prominent algorithms of this
    category that have been widely preferred by researchers in the arena of Fog/Edge
    computing [175]. Fog nodes often face challenges in context to mobility amongst
    VMs/Containers and location awareness. Concurrently, it becomes expensive to move
    the VMs to a new location for which RL provides an efficient solution [176]. Resource
    Allocation Strategies: RL components such as action space, state space, reward,
    and Markov Decision Process (MDP) emphasize decisions in different computing paradigms.
    The algorithms for predicting and deciding which resource to be allocated and
    when, i.e. optimized resource allocation can be done by following algorithms:
    • Deep Neural Network (DNN): A DNN is a category of an Artificial Neural Network
    (ANN) with many hidden layers placed between the Output and Input layers [177].
    It can perform real-time allocation of resources as it requires a simple operation.
    The decisions are made based on experiences and learning, it is different from
    neural networks in terms of creativity and complications and, hence, gives a global
    solution with minimal input data [178]. • Deep Q-Learning (DQN): Deep Q-Learning
    is a simple form of RL that utilizes action or Q-values that enhance the behavior
    of a learning agent iteratively. In Deep Q-learning, the initial state is input
    to the neural network which in return output all possible Q-values. It was developed
    by DeepMind in 2015 giving the benefits of both reinforcement learning and deep
    neural networks [179]. • Double Deep Q-Network (DDQN): Double DQN uses Double
    Q-Learning to minimize overestimation by breaking down the max operation in the
    target to action selection and evaluation. The difference between DDQN and DQN
    is that DDQN uses the main value network for selecting an action [180]. • Deep
    Reinforcement Learning (DRL): It is a sub-field of ML that combines the benefits
    of both Deep Learning and Reinforcement Learning. It is able to input large data
    sets and predicts what action to perform for optimizing an action. The two sub-algorithms
    are used in this paradigm, namely, model-based and model-free reinforcement learning
    algorithms [181]. Table 4 shows the summary of RL-based resource allocation strategies
    for Fog/Edge Computing. Table 4. RL-based resource allocation strategies for Fog
    Computing (FC) and Edge Computing (EC). Work Research focus/Application area Paradigm
    Method/ Algorithm Parameter Result [176] Task offloading energy efficiently in
    Vehicular Fog Computing (VFC) for smart villages FC Fuzzy Reinforcement Learning,
    Integrated on-policy reinforcement learning technique (SARSA) and Greedy heuristic
    Total task service time, energy consumption, and average response time Outperforms
    over other algorithms up to 15.38% and 46.73% in terms of query response time
    and energy consumption respectively. [175] Computation offloading in Virtual Edge
    computing systems (Sliced Radio Access Networks) EC Integrated Double Deep Q-Network
    with Q-Function decomposition technique (online Deep-state–action-reward-state–action-based
    RL algorithm (Deep-SARL)) Maximizing Long term utility performance Outperforms
    over three baseline schemes, namely, mobile execution, server execution, and greedy
    execution [182] Intelligent offloading system for vehicular networks EC Mobility-Aware
    Double DQN (MADD), Dynamic V2I Matching Algorithm Task scheduling and resource
    allocation (Quality of Experience) Proposed MADD algorithm performance is 20%
    and 12% higher than greedy and DQN method, respectively [183] Green Fog Computing
    (Battery management) FC Markov-Based analytical model integrated with reinforcement
    learning process Job Loss Probability Effect of Battery Energy Storage System
    (BESS) varies on the system according to the number of servers [184] Resource
    allocation edge computing network for multiple user EC Deep Q-Learning Data packet
    size, Channel quality, and waiting time Deep Q-learning outperforms the random
    and equal scheduling [185] Intelligent Resource Allocation Framework (iRAF) for
    Edge paradigm EC Deep Neural Network for prediction and Monte Carlo Tree Search
    (MCTS) approach for generating training data Network states and task characteristics
    like utilization of edge network resources, the channel quality, latency requirement
    of services, etc iRAF achieves 51.71% and 59.27% performance over deep learning
    and greedy search methods respectively [181] Task offloading scheme on priority
    basis for vehicular Fog Computing FC Soft Actor–Critic (SAC) based Deep reinforcement
    learning algorithm Entropy of policy and Expected utility to be maximized High
    priority task completed preferentially while having better performance of task
    completion and ratio offloading delay [186] Resource allocation in Internet-of-Things
    network EC -greedy Q-learning Long term weighted sum cost (task execution latency
    and power consumption) Achieved a better trade-off between edge and local computing
    modes 3.8. Performance metrics Optimization and comparison of any AI-based fog
    and edge computing architectures are done on the basis of one or more performance
    metrics, hence these metrics play an important role in the analysis of this architecture
    and also help to define the merits and demerits of an architecture [187]. Performance
    metrics are mostly dependent on the type of layers/ computing model where the
    architecture is performed. In general, any Fog/Edge computing architecture can
    be separated on the basis of the following 4 layers. • IoT Layer: This layer is
    regarded as the first layer of any architecture. This layer is defined as where
    the IoT devices like Raspberry pi or Arduino can do computation and can coordinate
    with other sensor nodes and forms a mesh topology-based network. In this layer,
    the devices are responsible for sensing the data from the sensors and doing some
    minor operations. This layer can be implemented without any interaction with edge,
    fog or cloud layers. • Edge Computing Layer: This layer comes next to the IoT
    layer. This layer consists of switches and routers which are generally termed
    gateways. This layer acts as an entry point to the fog and cloud layers. It is
    responsible for workload distribution and traffic monitoring. It is also responsible
    for a few less expensive operations resulting in minimizing the response time
    and optimizing the latency. • Fog Computing Layer: Fog can be defined as the combination
    of edge and cloud. This layer is located near to edge and IoT layer, and has the
    capability to perform the expensive operation in comparison to the edge layer.
    This layer helps to respond to the request faster by computing the work rather
    than sending the request to the cloud. • Cloud Computing Layer: This layer is
    the ultimate layer and most powerful layer. The operations which are highly expensive
    and cannot be performed by any of the previous layers are performed in this layer.
    The performance of the above-mentioned layers is measured in multiple terms. 3.8.1.
    Monitoring related metrics These metrics are responsible for monitoring the performance
    of the entire architecture. Few such metrics are 1. Resource Utilization: This
    metric is defined as the amount or the percentage of the resource used or occupied
    by a specific incoming workload. 2. Throughput: It can be considered as a ratio
    of the number of tasks arrived at to the number of tasks processed for a certain
    interval of time. 3. Resource Load: It is defined as the measure of the number
    of tasks waiting in the queue to be executed along with the number of tasks running.
    4. Latency: It is the amount of time gap between actual response time and desired
    response time. 5. Maximum Running Resource: It is the highest number of resources
    used. 6. Virtual Machine Runtime: It is the time for which the VM is borrowed.
    7. SLA Violation: It is defined as the number of tasks that have been delayed
    more than the time conceded. 8. Energy Consumption: It is described as the measurement
    of the energy required by a source to finish the execution of a certain workload.
    9. Fault tolerance: It can be defined as a ratio of the number of faults detected
    to the number of faults that exist. 3.8.2. Analysis related metrics Analysis-related
    metrics are used for the analysis of the performance using monitoring-related
    metrics. Statistical methods like machine learning or deep learning can be used
    for this purpose. 1. Statistical Analysis: This is the process where a huge amount
    of time series data is statistically analyzed and some meaningful information
    is extracted. 3.8.3. Planing related metrics Planning is the phase in which decision
    regarding optimization is taken such as VM migration and VM placement. 1. Decision
    Number: It is referred to the total number of decisions taken. 2. Contradictory
    Decision: It is the number of times an already made decision is reversed, due
    to an incorrect decision. 3. Completion Ratio: It is referred to as the ratio
    in which sources compete for resources. 4. Cache Hit Ratio: It is referred to
    as the success of a service caching system in reducing the data transmission across
    the network. 3.9. Simulators Simulators are the first experimental setup in which
    architecture is tested before deployment. As any architecture has multiple layers,
    simulators differ from layer to layer. 3.9.1. IoT layer simulators IoT layers
    initially experiment in this environment. Two Popularly known simulators are:
    1. SysML4IoT: Abstractions are provided by SysML4IoT to precisely specify various
    hardware and software services, data flows, and personnel [188]. 2. IOTSim: IOTSim
    [189] is a simulator that uses the MapReduce model, for IoT Big Data processing
    and simulations in the cloud computing environment. Using this simulator makes
    the work easier and more cost-effective instead of renting entire large-scale
    data centers. 3.9.2. Edge layer simulators The edge layer is the next layer to
    the IoT layer, this layer consist of the Gateways and switches. A few well-known
    simulators used for the simulation of Edge layers are: 1. PureEdgeSim: PureEdgeSim
    [190] is a large-scale simulation framework for studying the IoT as a distributed,
    dynamic, and highly heterogeneous infrastructure, as well as the applications
    that run on these things. It includes realistic infrastructure models, allowing
    for research on the edge-to-cloud continuum. It covers all aspects of edge computing
    modeling and simulation. It has a modular design, with each module addressing
    a different aspect of the simulation. For example, the Datacenters Manager module
    is concerned with the creation of data centers, servers, and end devices, as well
    as their heterogeneity. The Location Manager module, on the other hand, handles
    their geo-distribution and mobility. Similarly, the Network Module is in-charge
    of allocating bandwidth and data transfer. 2. IoTsimEdge: IoTsimEdge [191] is
    the extension of IoTsim, which provides the testing of the Edge layer of architecture.
    This helps its user to test the heterogeneous edge and IoT layer in a configurable
    manner. It is very user-friendly and easy to use. 3. SimEdgeIntel: SimEdgeIntel
    [192] is an edge simulator that provides the facility to easily deploy mobile
    with edge intelligence. It provides researchers with detailed configuration options
    such as customized mobility models, caching algorithms and switching strategies
    to test their resource management techniques. 3.9.3. Fog layer simulator A few
    majorly known Fog layer simulators are: 1. iFogSim: iFogSim [193] allows researchers
    to develop, deploy and test their IoT applications in fog–cloud infrastructure
    to test custom-made resource management strategies. It provides a hierarchical
    fog architecture simulation with the first layer made of sensors and actuators
    for the generation of data, and other layers simulate fog and cloud computing,
    network, and storage resources. 2. iFogSim2: iFogSim2 [194] is an advanced version
    of iFogSim [193]. It offers advanced features like migration, mobility support,
    dynamic distribution, and microservice orchestration with resource management.
    3. RelIoT: RelIoT [195] is NS-3 simulator-based reliability framework for IoT
    networks. It enables researchers to design customized network reliability management
    strategies by providing reliability-oriented analysis and predictions early in
    the design cycle. 4. YAFS: YAFS (Yet Another Fog Simulator) is a discrete event-based
    simulator [196] used to model complex IoT application scenarios in fog infrastructure.
    With the placement, scheduling, and routing strategy modeling facility, it also
    provides dynamic module allocation and user movement features. 5. COSCO: COSCO
    [197] is a python-based simulator that provides the facility to develop and test
    scheduling policies for edge, fog, and cloud-integrated environment. It provides
    seamless integration of scheduling policies with a simulated back-end for enhanced
    decision-making. It also supports real deployment of real-world applications.
    6. DeepFogSim: It is an extension of VirtFogSim which provides the execution of
    applications described by generally directed Application Graphs [198]. DeepFogSim
    simulates the Conditional Neural Networks (CNNs) with early exit on customized
    fog topology and performance of dynamic joint optimization and tracking of the
    energy and delay performance of Mobile-Fog–Cloud systems. 7. iThermoFog: This
    simulator is used to measure the heat or temperature of Cloud Data Centers (CDC)
    [130]. This simulator uses a Gaussian model to approximate the thermal characteristics
    of the fog layer server, and optimize the average temperature by scheduling the
    task. 8. FogNetSim++: It is an extension of FogNetSim and provides the facility
    to simulate both networks with computing modeling aspects of fog computing [199].
    It supports low-level network details such as switching and packet routing. 3.9.4.
    Cloud layer simulator Cloud layer is the final layer of any architecture, which
    is responsible for storage and high-capacity computation. A few major Cloud layer
    simulators are: 1. CloudSim: CloudSim [200] is the most widely used simulator
    for the simulation of Cloud layer architecture. Many modifications and advances
    of CloudSim are brought like Dynamic Cloudsim, Container CloudSim, Network CloudSim,
    and CloudSim Plus. The most recent version of CloudSim is CloudSim5, which combines
    various releases including containers, VM extensions with performance monitoring
    features and modeling of Web applications on multi-clouds. This version of CloudSim
    can also work with other Software-Defined Networking (SDN)/Service Function Chaining
    (SFC) simulation functions. 2. ThermoSim: ThermoSim [201] is similar to iThermoFog
    [130], but the CDC whose thermal profile optimization is the cloud layer CDC.
    This simulator reduces the temperature of cloud CDC by proper scheduling of tasks.
    3. IoTSim: IoTSim is built on top of Cloudsim simulator, it simulates the processing
    of IoT big data using the MapReduce model in cloud [189]. 3.10. Workloads Different
    researchers have used multiple execution traces and benchmarks for the simulation
    of workloads for AI applications. Some of the well-known workload traces and benchmarks
    are: 1. DeFog: DeFog consists of five computation-intensive AI applications. These
    applications cover a diversity of workloads such as deep learning-based object
    classification applications (YOLO), speech-to-text conversion applications (PocketSphinx),
    geo-location based online mobile game applications (ipoke-Mon), IoT edge gateway
    applications (FogLamp), real-time face detection from video streams application
    (RealFD) and Text audio synchronization or forced alignment (Aeneas). This benchmark
    captures application-specific system performance metrics for different application
    domains [124]. 2. AIOT BENCH: This benchmark is designed for evaluating IoT device
    intelligence. It covers different application domains such as image recognition,
    speech recognition, and natural language processing [202]. 3. RIoTBench: It is
    a real-time suit that captures both system level such as CPU, memory, network,
    and storage performance metrics, and application-specific system performance metrics
    for different application domains. It evaluates distributed stream processing
    systems for streaming IoT applications. It contains 27 IoT tasks classified across
    multiple categories [203]. 4. Edge AIBench: This benchmark model four application
    scenarios namely: Smart home, autonomous vehicle, Intensive Care Unit (ICU) patient
    monitoring, and Surveillance Camera for workload collaboration between three layers.
    Given models can be executed using a federated learning framework available publically
    [204]. 5. Bitbrain: Bitbrain traces consist of performance metrics of more than
    one thousand hosts of the heterogeneous cloud data center [205]. These traces
    are categorized into two categories: (1) FastStorage and (2) Rnd workload trace
    datasets. They consist of models of CPU, RAM, Disk and Bandwidth utilization characteristics.
    These traces are related to business-critical workloads. 6. Azure2016: This dataset
    contains VM workload traces captured from November 16, 2016 to February 16, 2017.
    The information captured in this dataset includes VM id, its subscription, VM
    role name, cores, memory, and disk allocations, and minimum, average, and maximum
    VM resource utilization [206]. 4. AI based techniques for resource management
    in Fog/Edge computing In this section, we discuss resource management-focused
    AI/ML techniques for enabling Edge/Fog AI and present a summary of AI/ML-based
    resource management techniques for Fog/Edge Computing. Fig. 7 shows the taxonomy
    of AI-Based Techniques For Resource Management in Fog/Edge Computing. Download
    : Download high-res image (237KB) Download : Download full-size image Fig. 7.
    Taxonomy of AI-Based Techniques For Resource Management in Fog/Edge computing.
    4.1. Machine learning techniques for Edge AI management Machine learning is showing
    remarkable results in various fields. The promising results of machine learning
    in various domains are also attracting researchers’ attention to the use of ML
    for modeling, classification, prediction, and forecasting related to resource
    management in fog computing for enabling Edge AI [207]. When we discuss multi-tenant
    environments where infrastructure is used by many applications which have different
    requirements, it is very obvious that tunning one application may have impacts
    on other applications [208]. Also adding complexity to the problem, these applications
    are deployed on multiple heterogeneous distributed resources. When dealing with
    different workloads, and heterogeneous distributed resources, it is better to
    analyze the workload from application and infrastructure perspectives. Understanding
    workload behavior can lessen the complexity of the problem and improve the performance
    of an application in edge AI [209]. Different works in the literature considered
    workload analysis using ML algorithms. The IoT-enabled edge AI is also prone to
    temporal effects. There can be an increase in workloads on certain resources at
    certain times. The prediction of workload behavior or spatio-temporal effects
    in advance can ease the resource orchestration process. To facilitate auto scaling
    of resources, Liu et al. [210] proposed a workload pattern discrimination-based
    adaptive prediction approach for infrastructure as a service. Due to the speed
    of workload change, they classified workload into two groups: fast time scale
    data and slow time scale data. Fast time scale data had the feature of stochasticity
    and nonlinearity while slow time scale data had the feature of linearity. For
    two datasets they used Support Vector Machine (SVM) and Linear regression (LR)
    for the prediction of workload. Another work proposed use of auto-correlation
    measurement and similarity clustering for CPU workload prediction on VMs [211].
    A combination of random forest, SVM and neural network is used to predict future
    workloads to reduce training time and increase the accuracy of the model [212].
    Work in Ref. [213] addressed the issue of workload management using decision trees.
    As fog environments are distributed and heterogeneous, and diverse IoT-based AI
    applications with different resource requirements make a selection of optimal
    nodes for application placement to satisfy QoS and Quality of Experience (QoE)
    constraints, more challenging. Addressing the application placement problem in
    mobile fog, Rahbari et al. proposed to use of classification and regression trees.
    In order to manage power consumption in edge/fog-based smart building services,
    work in [214] used k-nearest neighbors (KNN) and decision tree algorithms. In
    another work, they addressed the application placement problem for smart city
    applications. They employed logistic regression and support vector machine for
    job completion time approximation [215]. Addressing the resource scheduling problem,
    Liu et al. [186] combined fuzzy c-mean clustering with particle swarm optimization.
    Using optimized fuzzy c-mean clustering they tried to reduce the scale of resource
    search. They compared the proposed work with Fuzzy c-mean clustering and the objective
    function value of optimized fuzzy c-mean showed faster convergence speed than
    the Fuzzy c-mean algorithm. Yadav et al. [145] also used fuzzy c-mean clustering
    for task allocation in distributed systems to minimize the cost of the system.
    To minimize delay for IoT-based applications in fog environment, Shooshtarian
    et al. [216] used hierarchical clustering to find the nearest neighbor node to
    the IoT device to solve the resource allocation problem. Container orchestration
    is also investigated using ML methods by many researchers. Researchers in Ref.
    [217] used a time series analysis model (ARIMA) combined with the docker container
    technique for resource utilization prediction in containerized applications. Another
    work explored performance analysis of containerized applications using polynomial
    regression and k-means clustering. They classified multi-layer container execution
    structures based on the application performance requirement in distributed resources
    [218]. Authors in [219] used SVM, Boosting decision tree, Random forest and Naive
    Bayes for node performance prediction to improve resource scheduling decisions.
    Podolskiy et al. [220] used Lesso for the self-adaptive problem of vertical elasticity
    for co-located containerized applications. Fig. 8 presents a summary of machine
    learning algorithms that are used for the analysis and prediction of workload
    and resource usage to aid resource management in edge/fog computing. Download
    : Download high-res image (474KB) Download : Download full-size image Fig. 8.
    Summary of Machine Learning-based resource management for Fog/Edge Computing.
    4.2. Deep learning techniques for Edge AI management Currently, deep learning-based
    prediction models are the most promising architectures for computational intelligence.
    It shows good performance in various problems such as workload prediction, where
    traditional machine learning algorithms fail. CNNs can be used to model wide spatial
    dependencies by extracting local features by adopting layers with convolutional
    filters [221]. Long Short-Term Memory (LSTM) can be utilized for the prediction
    of fluctuating and volatile workload time series due to its capability to capture
    long-term temporal dependencies [222]. For time series analysis, authors in [223]
    have presented a deep learning model based on the canonical polyadic decomposition
    for workload prediction for industry informatics. Sima and Saeed [224] used CNN
    for predicting future cloud workload in advance for optimized resource allocation.
    For dynamic management of network resources, Bega et al. [225] also used CNN in
    their work. Their proposed strategy returns a cost-aware capacity forecast, which
    can be directly used by network operators to take re-allocation decisions that
    maximize their revenues. Authors in Ref. [185], [226] addressed the resource provisioning
    issue with Fully Convolutional Networks (FCNs). Tuli et al. [22] focused on straggler
    detection for the system’s QoS and used an encoder LSTM network for the analysis
    of tasks. Their proposed model analyzes the tasks and predicts which tasks can
    be a straggler. Work in [227] also used Bi-LSTM to address the scheduling issue
    of fog-enabled Radio Access Networks (F-RAN). For optimal performance, they used
    Bi-LSTM for the prediction of content popularity. Some of the recent work also
    used DNN as a surrogate model for QoS prediction to make scheduling decisions
    [177], [178]. Considering accurate resource requests prediction essential for
    achieving efficient task scheduling and load balancing, Zhang et al. [228] used
    Deep Brief Network (DBN) for day and hour scale predictions of CPU and memory
    utilization. They evaluated their proposed technique with the Google dataset.
    Many works also improved prediction performance by ensembling multiple algorithms
    for workload prediction for fog computing [229]. To provide real time responses
    to vehicular applications, such as traffic and accident warnings in the highly
    dynamic Internet of vehicles (IoV) environment. Lee et al. [230] used LSTM-based
    Deep Neural Networks (DNNs) to predict mobility behavior and movements of vehicles.
    They combined RL with LSTM-based DNN for resource allocation in Vehicular Fog
    Computing (VFC). In their other work, they also used Recurrent Neural Network
    (RNN) for resource allocation problems. To extract the time and space-based pattern
    of resource availability, they integrated the RNN into the DNN of the proximal
    policy optimization algorithm [230]. Another work [231] used a hybrid CNN-LSTM
    model for the prediction of multivariate workload in an attempt to extract complex
    features of the VM usage components, then model temporal information of irregular
    trends in the time series components. They evaluated the proposed model for resource
    provisioning using bitbrains dataset and compared it with other predictive models.
    To minimize the complexity and non-linearity of the prediction model, Yazdanian
    et al. [229] decomposed workload time series into its constituent components in
    different frequency bands and used ensemble Generative Adversarial Networks (GAN)/LSTM
    for prediction of each sub-band workload time-series. The proposed model employs
    stacked LSTM blocks as its generator and 1D ConvNets as the discriminator. Graph
    Neural Network (GNN) analyzes data represented as graphs for extracting inferences
    on node-level and edge-level. Graph theory can be adopted where the network can
    be represented as graph topology. Chen et al. [172] propose a GNN-based framework
    for resource allocation in wireless IoT networks. The framework specifically deals
    with the computational and time complexity for conventional resource allocation
    and outperforms two tasks, namely, link scheduling in D2D networks and joint channel
    and power allocation. Wang et al. [173] present aggregation graph neural network
    for resource allocation in decentralized wireless networks. Fig. 9 presents a
    detailed classification of deep learning-based algorithms used for Resource Management
    in Edge/Fog computing. Download : Download high-res image (406KB) Download : Download
    full-size image Fig. 9. Summary of deep learning-based resource management for
    Fog/Edge computing. 4.3. Reinforcement learning techniques for Edge AI management
    As resources are heterogeneous and capacity-constrained in edge, smart resource
    allocation is considered as one of the important factors in enabling Edge AI.
    Considering edge/fog a pool of different resources like CPU, GPU, storage etc.
    efficient resource allocation necessitates resource sharing. Reinforcement learning
    algorithms are the most experimented algorithms for resource sharing and allocation
    decision-making at the moment. Usually, MDP type problems are solved using policy
    gradient methods, tabular RL and deep Q-learning methods. Tabular methods such
    as Q and SARSA are not preferred by researchers due to their low scalability for
    modeling computing systems with thousands of devices. Shi et al. [181] presented
    a deep reinforcement learning (DRL)-based scheme for task offloading for VFC application.
    They proposed a soft-actor critic for the maximization of the policy of entropy
    and anticipated reward. Fu et al. [232] utilized a maximum entropy framework-based
    soft actor–critic DRL algorithm in VFC-enabled IoV for providing low bitrate variance
    live streaming service for vehicles. To reduce the vehicle’s long-term mean cost
    with promising reliability and latency performance in VFC, a Deep Q Network (DQN)
    is presented for the switching problem. They designed the mobile network operator
    (MNO) preference and switching problem by simultaneously analyzing switching cost,
    cost variation by MNO and fog servers, and QoS variation within MNOs [233]. In
    another work [234], a dual neural network of Deep Q-Learning method is implemented
    for resource slicing management. They formulated a semi-MDP for the simultaneous
    allocation of resources. Considering computational offloading an important factor
    for enabling edge AI, another work considered energy-efficient vehicle scheduling
    for task offloading in VFC. To resolve the high dimensionality issue caused by
    the increased number of vehicles in road-side units (RSU) coverage, an on-policy
    reinforcement learning-based scheduling algorithm combined with a fuzzy logic-based
    greedy heuristic, named Fuzzy Reinforcement Learning (FRL) is proposed. This greedy
    heuristic not only accelerates the learning process, but also improves long-term
    reward when compared to Q-learning algorithm [176]. Chen et al. [175] addressed
    offloading issue of virtual edge computing. They formulated the offloading problem
    in a sliced radio access network as MDP. They resort to DNN based function approximator
    and drive a double deep q network for making offloading decisions. Cheng et al.
    [235] proposed a policy gradient learning-based scheduler for task scheduling
    in edge devices. The same approach Multi-agent Deep Deterministic Policy Gradient
    (DDPG)-based scheduling is adapted for joint task partitioning and power control
    in fog computing networks. Ning et al. [182] explored deep reinforcement learning
    for optimization of task scheduling and resource allocation in vehicular networks.
    They divided the problem into two sub-optimization problems. First is deciding
    the priority of the vehicles for the quality of experience of users using a utility
    function. The second subproblem of resource allocation is formulated as the DRL
    problem. A deep Q network is improved by applying dropout regularization and double
    deep Q networks to deal with the defect of overestimation. To address the resource
    provisioning issue in fog, work in Ref. [236], [237] used Deep RL based on DQN.
    In addition, some authors experimented with Policy gradient learning for efficient
    resource provisioning resources [238]. One other work used A3C (Asynchronous Advantage
    Actor–Critic) and residual neural network for scheduling stochastic edge–cloud
    environment [239] some work also used the same RL model for workflow scheduling
    [240], [241]. Liu et al. [186] also addressed the resource allocation problem
    for IoT-enabled edge AI and proposed a greedy Q-learning-based optimum offloading
    algorithm. The problem is formulated as a weighted sum cost minimization problem
    with its objective function including the task execution latency and the power
    consumption of both the edge device and the end device. Since in the majority
    of IoT-based Edge AI systems, sensors produce a lot of data that needs to be processed
    within the deadline of applications, the inherent lack of information in tasks
    arrival of such systems necessitates adaptive task scheduling. Intelligent task
    scheduling not only minimizes task execution delays but also improves system key
    performance indicators (KPI) like reduced energy consumption, and load balancing.
    DRL methods have shown some promising results in decision-making problems. There
    are several works in the literature that explored RL for adaptive task scheduling.
    To minimize computation costs and long-term service delays, a Double deep Q learning
    (DDQL) is proposed in work [180]. In order to achieve optimal action selection,
    each agent used two separate models for action selection and Q-value calculation.
    Each RL agent was embedded in the gateway device to schedule tasks and allocate
    resources to tasks. The RL agent tries to maximize cumulative reward to achieve
    reduced end-to-end delay. To cease fluctuation in the results, they integrated
    the target network and experience replay mechanism in the DDQL-based scheduling
    policy. In order to maximize the long-term value of QoE, Sheng et al. [242] designed
    an intelligent task scheduling system using a model-free DRL algorithm. They formulated
    a task scheduling problem on heterogeneous virtual machines as an MDP problem
    and solved it with policy-based DRL. This work considered task satisfaction degree
    as reward and action is represented as a pair of tasks and VM. They decoupled
    real-time steps from scheduling steps in MDP formulation to make action space
    linear with a product of the number of virtual VMs and queue size and to schedule
    multiple tasks in a single time step. In order to achieve ultra-low latency and
    fairness in resource sharing, Bian et al. [243] proposed FairTS that ensures fairness
    between tasks and with ultra-low average task latency. One other factor that can
    degrade the performance of Edge AI applications is an imbalance in workload distribution
    between resources in the system. The solution to this issue is offloading or redistribution
    of tasks. RL is investigated for offloading decision-making in [244]. They formulated
    Offloading problem as MDP and proposed a DRL-based scheme to make users enable
    to make near-optimal decisions by considering uncertainties in the user device
    and cloudlet movements and resource availabilities. Another work used Deep Q Network
    (DQN) for making optimal actions on how main tasks will be offloaded and how many
    processed locally  [245]. Chen et al. [121] propose a two-timescale federated
    deep reinforcement learning based on Deep Deterministic Policy Gradient (DDPG)
    to solve the joint optimization problem of task offloading and resource allocation
    to minimize the energy consumption of all IoT devices subject to delay threshold
    and limited resources. The simulation results show that the proposed algorithm
    can greatly reduce the energy consumption of all IoT devices. Lee and Lee [230]
    utilized proximal policy optimization (PPO) RL for offloading problems in order
    to provide real-time responses for vehicular applications. PPO with the ability
    to continuously learn dynamic environments can easily adjust to make resource
    allocation decisions accordingly. Some works [84], [238] used Policy gradient
    learning for the deployment of DNN in Edge AI. For efficient real-time resource
    allocation and offloading in internet of vehicles, Hazarika et al. [246] utilized
    DDPG and twin delayed DDPG (TD3) algorithms. They compared the proposed technique
    Soft Actor–Critic (SAC) and DDPG. Another work formulated resource allocation
    in Mobile Edge Computing (MEC) as an MDP problem in order to minimize system delay
    and solved it with hindsight experience replay (HER) improved DQN [247]. Fig.
    10 presents a summary of reinforcement learning-based algorithms that are used
    separately or in a hybrid fashion with DL for resource management in Edge/Fog
    computing. Download : Download high-res image (382KB) Download : Download full-size
    image Fig. 10. Summary of reinforcement learning-based resource management for
    Fog/Edge computing. 5. Taxonomy This section discusses the proposed taxonomy of
    frameworks and comparison analysis in AI-based edge and fog computing 5.1. Taxonomy
    of AI-based Fog and Edge computing In this section, a comprehensive taxonomy of
    AI-based fog and edge computing approaches is proposed based on the existing studies
    following a systematic review. The taxonomy of the framework is shown in Fig.
    11, which includes infrastructure that supports the platform, objectives that
    the proposed approach aims to achieve, deployed platform, the mechanism for resource
    management, metrics for performance evaluations, the category of AI-based methods,
    and target application. Each taxonomy is further classified into the detailed
    study of AI-based fog and edge computing framework. Infrastructure: The AI-based
    fog and edge computing approaches can be supported by different infrastructure
    models including single cloud, multi-cloud, hybrid cloud and community cloud with
    different focuses. For example, multiple clouds can work collaboratively to complete
    the partitioned deep learning tasks in fog to edge environment. Download : Download
    high-res image (354KB) Download : Download full-size image Fig. 11. Taxonomy of
    AI-based fog and edge computing frameworks. Objectives: Based on our investigation,
    we notice that the existing major optimization objectives in AI-based fog and
    edge computing approaches are improving resource efficiency, reducing energy consumption,
    decreasing cost efficiency, assuring SLA and ensuring QoS. Platform: The platform
    indicates how the fog and edge computing approach is deployed. The current mainstream
    platforms include fog-to-fog, edge-to-fog, shared fog, fog-to-cloud and IoT-Fog-cloud.
    Resource Management: One of the key challenges in fog and edge computing environments
    is managing the resources efficiently. The current research has been conducted
    for resource matching that maps the suitable amount of resources to tasks, task
    offloading that processes task collaboratively among fog and edge, load balancing
    that balances the workloads for different nodes, application placement that deploys
    the fog/edge applications to devices, resource orchestration that automates the
    resource allocation, resource discovery that provides the naming services of available
    services and resource estimation that predicts the amount the required resources.
    Metrics: Multiple metrics have been utilized to evaluate the performance of proposed
    approaches. The dominant metrics include resource utilization, throughput, resource
    load, latency, maximum running resources, virtual machine runtime, SLA violations,
    energy consumption and fault tolerance. AI-based methods: The fog and edge environment
    has adopted AI-based methods to assist their management. Some existing categories
    of AI-based methods include regression, classification, decision making and time
    series analysis, which can be applied to workloads prediction, application feature
    analysis and making resource scheduling policies. Target applications: The investigated
    approaches have been applied to support IoT applications in different areas including
    smart cities, healthcare, transportation, agriculture, content delivery and etc.
    5.2. Comparison of existing studies based on taxonomy Table 5 summarizes and compares
    the selected studies of AI-based fog and edge computing frameworks discussed in
    previous sections in terms of infrastructure, objectives, platform, resource management,
    metrics, AI-based methods and target application. For example, Golec et al. [100]
    applied their approach in a multi-cloud environment and aimed to improve resource
    efficiency under the IoT-Fog-Cloud paradigm. They also utilized an AI-based approach
    for classification in resource orchestration to improve resource utilization.
    Wu et al. [248] exploited the task offloading technique to reduce energy consumption
    and the proposed approach-based AI can help to make optimized decisions on when
    and how to manage offloaded tasks. Vu et al. [156] considered their scenario for
    smart cities with a hybrid cloud model to improve resource utilization under fog
    to cloud environment. Based on our investigation and comparison, we can notice
    that AI-based approaches have been comprehensively applied in fog and edge environments
    and more applications can be further incorporated into this paradigm. To summarize,
    the existing research works have covered all the types of dominant infrastructures
    including single cloud, multi-cloud and hybrid cloud. In terms of optimization
    objectives, most of the works focus on improving resource efficiency and QoS.
    As for the deployed platforms, Edge-to-Fog, IoT-Fog-Cloud, and Fog-to-Fog are
    the mainstream ones to support applications. The techniques applied to optimize
    resource management are diverse, including load balancing, resource matching,
    resource orchestration, application placement and task offloading. There are several
    metrics have been widely utilized to measure the performance of the proposed approach
    from different perspectives, including resource utilization, latency, energy consumption,
    throughput and SLA violation. The AI-based methods have been exploited for two
    main objectives, including classification, prediction and decision-making. Table
    5. Comparison of existing studies based on Taxonomy. Approach Infrastructure Objectives
    Platform Resource management Metrics AI-based methods Target application Rafique
    et al. [249] Multi-cloud Resource Efficiency Edge to fog Load balancing Resource
    utilization None Others Golec et al. [97] Single Cloud Others (safety) IoT-Fog-cloud
    Resource matching Latency None Others Golec et al. [100] Hybrid Cloud Resource
    Efficiency IoT-Fog-cloud Resource orchestration Running resources Classification
    Healthcare Iftikhar et al. [102] Multi-cloud Resource Efficiency Edge to fog Resource
    orchestration Resource utilization Decision making Others McChesney et al. [124]
    Hybrid Cloud Resource Efficiency Edge to fog Application placement Latency None
    Others Aazam et al. [136] Multi-cloud Cost Efficiency Edge to fog Resource estimation
    Energy consumption Decision making Others Aazam et al. [137] Hybrid Cloud QoS;
    Cost Efficiency IoT-Dog-cloud Resource estimation Resource utilization Decision
    making Others Ahmed et al. [250] Multi-Cloud Resource Efficiency Fog to cloud
    Resource orchestration Throughput Classification Others Bi et al. [149] Single
    Cloud Resource Efficiency IoT-Dog-cloud Task offloading Resource load Regression
    Others Sim et al. [143] Multi-cloud Resource Efficiency Fog to fog Resource orchestration
    None None Others Vu et al. [156] Hybrid Cloud Resource Efficiency Fog to cloud
    Resource orchestration Resource utilization None Smart cities Yadav et al. [145]
    Multi-cloud QoS Fog to fog Application placement Running resources Decision making
    Others Yao et al. [154] Multi-cloud QoS Edge to fog Task offloading Latency Decision
    making Others Wu et al. [251] Hybrid Cloud QoS Edge to fog Resource orchestration
    SLA violation Decision making Others Xue et al. [252] Hybrid Cloud Energy Efficiency
    Edge to fog Task offloading Energy consumption Decision making Others Wu et al.
    [248] Hybrid Cloud Energy Efficiency Edge to fog Task offloading Energy consumption
    Decision making Others Liu et al. [210] Single Cloud Resource Efficiency Edge
    to Cloud Resource Provisioning Cost, Resource Utilization Decision making Others
    6. Result outcomes Our study highlights the systematic review of various articles
    in order to understand the prevailing status of fog/edge computing. The extensive
    study comprises various driving forces responsible for making an impact on emerging
    paradigms in the form of open issues and future work. In total, we collected 320
    articles, out of which 135 were shortlisted after the iterative selection process.
    The articles emphasize the state-of-art work done in the domain of research management
    in fog/edge and how the implication of intelligent paradigms like Artificial Intelligence,
    Machine Learning is inciting researchers. The taxonomy of our study has been designed
    with references to articles from the year 2015 to 2022. As depicted in Fig. 12,
    the majority of our referred papers are from the year 2022. This accentuates the
    fact that our survey includes the latest work done by the research community.
    The structure and methodology of the survey are inspired by the Systematic literature
    review (SLR) procedure by Kitchenham [33]. Furthermore, the identification of
    research questions channelizes the process flow of reviewing methodology. In a
    research review, the search process comprises the research topic which plays a
    significant role. The content in this paper has been accumulated from various
    sources including ACM Digital Library, IEEE Xplore, Springer Link, and other resources
    like Scopus, National Digital Library and electronic scientific research databases.
    Fig. 13 describes the yearly bifurcation of various sources in the form of paper
    count from different publications that represent most of the articles are from
    IEEE journals, transactions and conferences as compared with other publishers.
    Further, we have rigorously reviewed every article and divided it into five sections
    review, survey literature review, Implementation in real and simulation environments
    and book chapters as shown in Fig. 14. Download : Download high-res image (175KB)
    Download : Download full-size image Fig. 12. Year-wise publications of AI/ML based
    Fog/Edge computing papers. This study considers various aspects of fog/edge computing
    which have been categorized into resource relating aspects of resource management
    further categorized as resource provisioning, task offloading and resource allocation),
    QoS parameters, and concerning other factors relating to real-world challenges
    like IoT, healthcare, security and privacy as shown in Fig. 15. Download : Download
    high-res image (220KB) Download : Download full-size image Fig. 13. Bifurcation
    of research papers on the basis of publishers. A major chunk of our survey is
    inspired by the resource aspect comprising 61 papers and QoS parameters including
    49 papers. The studies have been demonstrated in chronological order similar to
    other studies for the identification of state-of-art work in an effective manner.
    Download : Download high-res image (153KB) Download : Download full-size image
    Fig. 14. Study type of research paper. Download : Download high-res image (267KB)
    Download : Download full-size image Fig. 15. Categorization of papers based on
    factors relating to fog/edge computing. 7. Open issues and future directions Despite
    the fact that a significant amount of progress has been made in AI and ML thanks
    to fog and edge computing. Despite this, there are a great number of problems
    and obstacles in this area that need to be solved. We have compiled a list of
    outstanding challenges in this field based on the existing literature. 7.1. Heterogeneity
    Fog and edge computing are meant to support IoT applications that will emerge
    in different programming languages (e.g., C, Python, and Java), hardware architecture
    (e.g., ARM and AMD), processing units (e.g., CPU, GPU, and TPU), etc. Such heterogeneity
    appears a highly challenging concern for the problem of resource management. That
    is, a resource manager, e.g., a resource balancer, requires understanding such
    differences in decision-making. Otherwise, traditional homogeneous-based solutions
    would result in considerable resource wastage and inappropriate decisions made
    by the resource manager. For instance, if some edge devices are ARM-based and
    others are AMD-based architecture, the resource manager must adhere to this difference
    since IoT applications may be incompatible with counterpart architectures. Another
    example is when fog devices provide unequal computation capacities. In this case,
    the resource manager requires an understanding of the devices’ capacity to treat
    them proportionally. Otherwise, resources will be wasted and the QoS will degrade.
    When AI-based solutions are approached, the heterogeneity becomes even further
    challenging since AI models are agnostic to the heterogeneity while they perform
    completely differently on different devices. For instance, if an edge device to
    run AI models is enabled with accelerators such as GPU which can provide higher
    precision and shorter latency, the resource manager requires an understanding
    of such differences to other edge devices that lack accelerators. Otherwise, costly
    accelerators will be undermined. Hence, heterogeneous resources at the edge will
    bring several opportunities for AI-based resource management, only if the traditional
    solutions are redesigned to support them. 7.2. Environmental sustainability Sustainability
    appears to be a first-class requirement of IoT applications, since many of them
    rely on renewable energy sources such as solar irradiation. Sustainability is
    further important since edge devices are presumably constrained in computation
    resources. With such characteristics, edge devices strive for resource efficiency,
    in terms of energy or computations. However, this appears to conflict with the
    resource-hungry nature of AI models that demand a considerable amount of resources
    to be able to perform as expected. With the sustainability requirements of edge
    and resource-hungry features of AI models, it is very challenging to welcome AI
    at the edge. The hardware sector at the edge side and the software developing
    sector on the AI have to progress towards this ambition. However, as far as AI-based
    resource management is concerned, certain considerations can be assessed by the
    community. That is, a trade off between how much benefit the AI-based solution,
    as compared to a non-AI-based solution, can achieve and how much resource is consumed
    is a key question. Another direction is, instead of asking about using AI-based
    solutions or not, what sort of AI-based solutions in terms of precision should
    be used? For instance, models can train to perform on lightweight frameworks to
    remain edge-friendly, but provide weaker precision. For instance, a resource manager
    can perform on the TensorFlow framework to make precise decisions, but consume
    a considerable amount of resources; or can perform on TensorFlow Lite to consume
    fewer resources upon inferences, but provide weaker precision. Hence, the open
    question is when and how to utilize AI-based solutions to satisfy the requirements
    of IoT applications, while achieving desirable precision. 7.3. Security versus
    efficiency AI-based resource management solutions for IoT applications require
    to adhere to security concerns. While edge computing is to not necessarily rely
    on the cloud, it brings its own limitations such as security. IoT applications
    in many domains such as Smart Home or Smart Healthcare, require the edge platform
    to adhere to such. The resource manager is a key component of an edge platform,
    hence, requires re-architect to satisfy that. This appears challenging due to
    the distributed nature of edge platforms. However, when AI-based solutions are
    enabled, this becomes even further challenging since AI-based models continuously
    require observations of the IoT applications to obtain sufficient data for the
    training or inference. Hence, the open issue here is how to satisfy AI requirements
    without degrading security. From another perspective, the security requirement
    itself can be driven by AI itself where the resource manager can utilize AI to
    learn patterns, outliers and features that can affect the security of an AI-based
    resource manager. An open question here would be how to leave such responsibilities
    to the resource manager through AI. 7.4. AI for edge and AI at the edge AI-based
    resource management represents a perfect example of AI for an edge while AI-based
    applications, such as object detection, classification, etc, represent AI-based
    applications serving at the edge. Throughout this paper, AI for edge was discussed,
    but the cohabitation of AI applications and AI managers would raise several new
    opportunities and challenges. A key open issue is how to shift the resource manager’s
    focus from tuning the resources, e.g., by offloading, scheduling, etc, to tuning
    the AI application to achieve the adaptation. This is important because AI applications
    can be tuned to consume different amounts of resources from CPU to accelerators.
    Even on CPUs, they can perform differently such that they affect the energy and
    computation resources variably. Hence, with AI both for and at the edge, there
    are many opportunities that require investigations. 7.5. AI for serverless computing
    While new AI applications are being used at the edge for certain use cases such
    as object detection for a smart traffic light, new application deployment and
    development models are also entering the edge. Serverless computing with its Function-as-a-Service
    (FaaS) is one of the major technologies in this context. FaaS is an application
    development model that turns bulky applications into single-purpose execution
    units, called functions, that are deployed upon event-based invocations and terminated
    after executions to save cost and resources. However, if long-running AI-based
    applications and resource managers stem into this area, several questions would
    raise that require investigation. For instance, would FaaS, whose billing model
    highly relies on the execution duration, still be cost-efficient? would this ephemerality
    (executing and terminating) be a bonus for the AI-based resource manager to remain
    resource efficient? Would the cold start of a function, the time duration from
    invoking to launching, deteriorate for AI-based applicants that require loading
    presumable heavy run-times? 7.6. Resource federation Distributed edge and fog
    devices require shared data and computation to function properly. Using AI-based
    managers for inference requires such data to be collected regularly and may be
    of a bigger size than typical raw data. For instance, if a traditional manager
    collects CPU usage of devices, an AI-based solution may collect other forms of
    data such as objects. Using AI-based managers for training also requires much
    more data. Add to this demand the scatteredness and scale of a network in a distributed
    edge that can span up to thousands of devices. Given a such scale, research areas
    around decentralized and federated AI-based resource management appear highly
    important. The decentralization means each resource manager is in charge of a
    portion of the cluster. The federation means while each portion works in isolation,
    they can collaborate with peers to use resources or to achieve a collective goal.
    Such areas have already commenced in edge computing and AI, but little effort
    has been made, particularly in the area of resource management which requires
    consideration. 8. Summary and conclusions In this work, we have conducted a systematic
    literature review on how machine learning and artificial learning-based solution
    are utilized for the resource management problem in fog and edge computing environments.
    Recent research works have witnessed a quickly growing trend of adopting AI-based
    methods to address the limitations of traditional heuristic approaches without
    sufficient consideration of diverse and dynamic factors in the environment. Compared
    with most traditional heuristic methods, AI-based approaches can be used to make
    accurate resource management decisions with lower time overhead, model and predict
    application and infrastructure metrics to improve the quality of services. Our
    work also advances the relevant surveys by considering fog computing and edge
    computing together with extensive comparisons To summarize, we have noticed that
    AI-based methods have been applied in a wide range of scenarios, including resource
    estimation, resource discovery, resource matching, task offloading, load balancing,
    resource orchestration, application placement, and resource consolidation. We
    also observe that the applications deployed on fog and edge computing environment
    ranges from healthcare, smart home, agriculture, smart transportation, and spatial.
    Significant efforts have been made to utilize advanced AI-based approaches, e.g.
    DNN, Q-learning, DQN, and reinforcement learning-based algorithms, to optimize
    resource utilization, throughput, SLA violations, energy consumption, and fault
    tolerance. In conclusion, although the relevant research progresses fast, there
    is no systematic literature review that combines fog and edge computing with an
    AI-based optimization framework in charge of the whole resource management process.
    Employing microservice and serverless can be a promising approach to further optimize
    the application and system performance with fine-grained resource control. This
    taxonomy work will assist the researcher to find the important research directions
    in edge and fog computing and will also help to choose the most suitable AI-based
    methods for efficient resource management under the hybrid paradigm under a dynamic
    environment. Declaration of Competing Interest The authors declare that they have
    no known competing financial interests or personal relationships that could have
    appeared to influence the work reported in this paper. Acknowledgments Sundas
    Iftikhar would like thank the Higher Education Commission (HEC) Pakistan for their
    support and funding (Grant No. 2-5/FDPOS/HRD/UoK/QMUL/2020/1). This work is partially
    funded by Chinese Academy of Sciences President’s International Fellowship Initiative
    (Grant No. 2023VTC0006), and Shenzhen Science and Technology Program (Grant No.
    RCBS20210609104609044). Appendix A. A quality assessment forms A.1. Preliminary
    examining questions Table 6 represents the list of questions used during the preliminary
    examination. Table 6. Preliminary examining questions. Question Yes No Q1. Does
    the article discuss the use of AI/ML in Fog/Edge Computing? This report compiles
    findings from studies conducted on AI/ML in Fog/Edge Computing. This survey takes
    into consideration all of the research publications, including case studies, experimental
    studies, and so on. Q2. Is the primary emphasis of this paper the AI/ML-based
    management of resources in Fog/Edge Computing? Does this paper provide a method,
    approach, system, or framework for resource management that could be used for
    AI/ML in Fog/Edge Computing? Is the validity of this investigation ensured by
    utilising a simulated testbed for fog/edge computing? Is the validity of this
    investigation ensured by utilising a real testbed for fog/edge computing? A.2.
    Specific questions Table 7 represents the list of questions used during evaluations.
    Table 7. Specific questions. Question Yes No Q1: what resource management methods
    are available that are based on artificial intelligence and machine learning?
    Q2: Where are AI/ML-based fog/edge computing frameworks stand right now? Q3: How
    can the efficiency of AI/ML-based fog/edge computing be measured, and what metrics
    are used for this purpose? Q4: Which simulators are utilized for fog/edge computing
    that is based on AI/ML? Q5: What are the most common applications of IoT-enabled
    Edge/Fog AI? Q6: What kinds of workloads are utilised to evaluate the efficacy
    of AI/ML-based fog/edge computing frameworks? Appendix B. Data items extracted
    from all articles Table 8 shows the data items extracted from all articles. Table
    8. Data items extracted from all articles. Data item Description Paper identifier
    Digital Object Identifier (DOI) Online Publication Date Publication Year Bibliographic
    Information Author(s) Name(s), Publication Date, Article Title, and Journal Name
    Type of Article Conference, Workshop and Journal Motivation What exactly are the
    primary aims of this work? Innovation Mechanism and context/application What is
    the Problem Statement The problem, as well as a description of it, is addressed
    and resolved in the research. What is the method for managing resources? AI/ML-based
    Resource Management Technique for Fog/Edge Computing Implementation Environment
    The technique is carried out utilising either a simulated or actual setting. Performance
    Evaluation Which constraints were taken into account when the technique was analysed?
    Workload Type How do you create a dataset for use in experiments? Performance
    Metrics How are the results of a research evaluated using what kind of QoS metrics?
    Drawbacks Where do you see the field of research going in the future? Table 9.
    Appendix C: Journals, Workshops and Conferences. Publication venue J/C/W # N IEEE
    Transactions on Parallel and Distributed Systems J 4 4 IEEE Transactions on Cloud
    Computing J 6 11 IEEE Transactions on Services Computing J 4 6 IEEE Internet of
    Things Journal J 17 35 IEEE Transactions on Industrial Informatics J 7 13 IEEE
    Transactions on Vehicular Technology J 2 6 IEEE Transactions on Network and Service
    Management J 2 3 IEEE Transactions on Sustainable Computing J 1 3 IEEE/ACM Transactions
    on Networking J 1 2 IEEE Transactions on Mobile Computing J 3 6 IEEE Transactions
    on Wireless Communications J 2 5 IEEE Transactions on Green Communications and
    Networking J 2 4 IEEE Transactions on Computational Social Systems J 1 1 IEEE
    Transactions on Network Science and Engineering J 2 2 IEEE Transactions on Consumer
    Electronics J 1 1 IEEE Transactions on Industry Applications J 1 1 IEEE Transactions
    on Broadcasting J 1 1 IEEE Transactions on Intelligent Transportation Systems
    J 2 2 ACM Transactions on Internet Technology J 4 6 ACM Transactions on Internet
    of Things J 4 6 ACM Transactions on Sensor Networks J 1 1 IEEE Access J 8 41 Future
    Generation Computer Systems J 4 9 Journal of Parallel and Distributed Computing
    J 2 4 Journal of Systems and Software J 4 6 Software: Practice and Experience
    J 9 25 Journal of Network and Computer Applications J 3 5 Transactions on Emerging
    Telecommunications Technologies J 1 2 Internet of Things (Elsevier) J 7 12 IEEE
    International Symposium on Cluster, Cloud and Internet Computing (CCGrid) C 1
    2 Euromicro Conference on Software Engineering and Advanced Applications C 1 2
    IEEE International Conference on Distributed Computing Systems (ICDCS) C 2 4 IEEE
    International Conference on Communications C 3 5 Australasian Computer Science
    Week Multiconference C 2 4 IEEE/ACM International Conference on Utility and Cloud
    Computing (UCC) C 1 1 International Conference on Service-Oriented Computing C
    1 3 IEEE International Conference on Pervasive Computing and Communication (PerCom)
    Workshop W 1 2 IEEE International Conference on Advanced Networks and Telecommunications
    Systems (ANTS) C 1 2 International Conference on Internet of Things C 1 4 IEEE
    International Conference on Networking, Architecture and Storage (NAS) C 1 2 Table
    10. List of Acronyms. Abbreviation Description IoT Internet of Things QoS Quality
    of Service SLA Service-Level Agreement VM Virtual Machines ML Machine Learning
    AI Artificial Intelligence SLO Service Level Objectives RQ Research Questions
    FC Fog Computing EC Edge Computing IoHT Internet of Health Things PDA Personal
    Digital Assistant IMCF+ IoT Meta-Control Firewall ITS Intelligent Transportation
    Systems DL Deep Learning RL Reinforcement Learning DRL Deep Reinforcement Learning
    CL Centralized learning FDMA Frequency Division Multiple Access TDMA Time Division
    Multiple Access CDC Cloud Data Centers VFC Vehicular Fog Computing DQN Deep Q
    Network MNO Mobile Network Operator FRL Fuzzy Reinforcement Learning DDQL Double
    Deep Q Learning MDP Markov Decision Process ANN Artificial Neural Network GNN
    Graph neural network GPU Graphical Processing Unit TPU Tensor Processing Unit
    Appendix C. Journals and conferences for publishing articles about AI/ML in Fog/Edge
    computing Table 9 lists the top journals and conferences for publishing articles
    about AI/ML in fog/edge computing. Notations:J – Journal (including IEEE/ACM Transactions),
    C – Conference, W – Workshop, – The total number of papers that reported AI/ML-based
    Resource Management Technique for Fog/Edge Computing as their primary research
    focus, # – The total number of publications examined. Appendix D. List of acronyms
    Table 10 shows the list of acronyms. Data availability No data was used for the
    research described in the article. References [1] Zhong Z., Xu M., Rodriguez M.A.,
    Xu C., Buyya R. Machine learning-based orchestration of containers: A taxonomy
    and future directions ACM Comput. Surv. (2022) Google Scholar [2] Dai X., Xiao
    Z., Jiang H., Alazab M., Lui J.C., Min G., Dustdar S., Liu J. Task offloading
    for cloud-assisted fog computing with dynamic service caching in enterprise management
    systems IEEE Trans. Ind. Inform. (2022) Google Scholar [3] Gill S.S., Tuli S.,
    Xu M., Singh I., Singh K.V., Lindsay D., Tuli S., Smirnova D., Singh M., Jain
    U., et al. Transformative effects of IoT, blockchain and artificial intelligence
    on cloud computing: Evolution, vision, trends and open challenges Internet Things,
    8 (2019), Article 100118 View PDFView articleView in ScopusGoogle Scholar [4]
    Hazra A., Donta P.K., Amgoth T., Dustdar S. Cooperative transmission scheduling
    and computation offloading with collaboration of fog and cloud for industrial
    IoT applications IEEE Internet Things J. (2022) Google Scholar [5] Chakraborty
    A., Kumar M., et al. Journey from cloud of things to fog of things: Survey, new
    trends, and research directions Softw. - Pract. Exp. (2022) Google Scholar [6]
    Singh J., et al. Fog computing: A taxonomy, systematic review, current trends
    and research challenges J. Parallel Distrib. Comput., 157 (2021), pp. 56-85 View
    PDFView articleView in ScopusGoogle Scholar [7] Sri Raghavendra M., et al. DEEDSP:
    Deadline-aware and energy-efficient dynamic service placement in integrated Internet
    of Things and fog computing environments Trans. Emerg. Telecommun. Technol., 32
    (12) (2021), Article e4368 View in ScopusGoogle Scholar [8] Pujol V.C., Dustdar
    S. Fog robotics—Understanding the research challenges IEEE Internet Comput., 25
    (5) (2021), pp. 10-17 Google Scholar [9] Iftikhar S., Golec M., et al. FogDLearner:
    A deep learning-based cardiac health diagnosis framework using fog computing Australasian
    Computer Science Week 2022 (2022), pp. 136-144 CrossRefView in ScopusGoogle Scholar
    [10] Karagiannis V., Frangoudis P.A., Dustdar S., Schulte S. Context-aware routing
    in fog computing systems IEEE Trans. Cloud Comput. (2021) Google Scholar [11]
    Murturi I., Egyed A., Dustdar S. Utilizing AI planning on the edge IEEE Internet
    Comput., 26 (2) (2022), pp. 28-35 CrossRefView in ScopusGoogle Scholar [12] Ghobaei-Arani
    M., Souri A., Rahmanian A.A. Resource management approaches in fog computing:
    a comprehensive review J. Grid Comput., 18 (1) (2020), pp. 1-42 CrossRefGoogle
    Scholar [13] Dehury C., Srirama S.N., Donta P.K., Dustdar S. Securing clustered
    edge intelligence with blockchain IEEE Consum. Electron. Mag. (2022) Google Scholar
    [14] Yousefpour A., Fung C., Nguyen T., Kadiyala K., Jalali F., Niakanlahiji A.,
    Kong J., Jue J.P. All one needs to know about fog computing and related edge computing
    paradigms: A complete survey J. Syst. Archit., 98 (2019), pp. 289-330 View PDFView
    articleView in ScopusGoogle Scholar [15] Kansal P., Sharma D., Kumar M. Introduction
    to fog data analytics for IoT applications Fog Data Analytics for IoT Applications,
    Springer (2020), pp. 19-38 CrossRefView in ScopusGoogle Scholar [16] Ding A.Y.,
    Peltonen E., Meuser T., Aral A., Becker C., Dustdar S., Hiessl T., Kranzlmüller
    D., Liyanage M., Maghsudi S., et al. Roadmap for edge AI: A Dagstuhl perspective
    ACM SIGCOMM Comput. Commun. Rev., 52 (1) (2022), pp. 28-33 CrossRefView in ScopusGoogle
    Scholar [17] Deng Y., Chen Z., Zhang D., Zhao M. Workload scheduling toward worst-case
    delay and optimal utility for single-hop Fog-IoT architecture IET Commun., 12
    (17) (2018), pp. 2164-2173 CrossRefView in ScopusGoogle Scholar [18] Lan D., Taherkordi
    A., Eliassen F., Liu L., Delbruel S., Dustdar S., Yang Y. Task partitioning and
    orchestration on heterogeneous edge platforms: The case of vision applications
    IEEE Internet Things J., 9 (10) (2022), pp. 7418-7432 CrossRefView in ScopusGoogle
    Scholar [19] Yang J., et al. A federated learning attack method based on edge
    collaboration via cloud Softw. - Pract. Exp. (2022), pp. 1-18 arXiv:https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.3180
    Google Scholar [20] Gill S.S. A manifesto for modern fog and edge computing: Vision,
    new paradigms, opportunities, and future directions Operationalizing Multi-Cloud
    Environments, Springer (2022), pp. 237-253 CrossRefView in ScopusGoogle Scholar
    [21] Gill S.S., Xu M., Ottaviani C., Patros P., Bahsoon R., Shaghaghi A., Golec
    M., Stankovski V., Wu H., Abraham A., et al. AI for next generation computing:
    Emerging trends and future directions Internet Things, 19 (2022), Article 100514
    View PDFView articleView in ScopusGoogle Scholar [22] Tuli S., et al. Start: Straggler
    prediction and mitigation for cloud computing environments using encoder lstm
    networks IEEE Trans. Serv. Comput. (2021) Google Scholar [23] Teoh Y.K., et al.
    IoT and fog computing based predictive maintenance model for effective asset management
    in industry 4.0 using machine learning IEEE Internet Things J. (2021) Google Scholar
    [24] Xu M., et al. CoScal: Multi-faceted scaling of microservices with reinforcement
    learning IEEE Trans. Netw. Serv. Manag. (2022) Google Scholar [25] Bianchini R.,
    Fontoura M., Cortez E., Bonde A., Muzio A., Constantin A.-M., Moscibroda T., Magalhaes
    G., Bablani G., Russinovich M. Toward ml-centric cloud platforms Commun. ACM,
    63 (2) (2020), pp. 50-59 CrossRefView in ScopusGoogle Scholar [26] Shao T., et
    al. IoT-Pi: A machine learning-based lightweight framework for cost-effective
    distributed computing using IoT Internet Technol. Lett., 5 (3) (2022), Article
    e355 View in ScopusGoogle Scholar [27] Tang Z., Zhou X., Zhang F., Jia W., Zhao
    W. Migration modeling and learning algorithms for containers in fog computing
    IEEE Trans. Serv. Comput., 12 (5) (2018), pp. 712-725 CrossRefGoogle Scholar [28]
    Yau K.-L.A., Qadir J., Khoo H.L., Ling M.H., Komisarczuk P. A survey on reinforcement
    learning models and algorithms for traffic signal control ACM Comput. Surv., 50
    (3) (2017), pp. 1-38 View in ScopusGoogle Scholar [29] Duc T.L., Leiva R.G., Casari
    P., Östberg P.-O. Machine learning methods for reliable resource provisioning
    in edge-cloud computing: A survey ACM Comput. Surv., 52 (5) (2019), pp. 1-39 CrossRefGoogle
    Scholar [30] Casalicchio E. Container orchestration: A survey Syst. Model. Methodol.
    Tools (2019), pp. 221-235 CrossRefGoogle Scholar [31] Deng S., Zhao H., Fang W.,
    Yin J., Dustdar S., Zomaya A.Y. Edge intelligence: The confluence of edge computing
    and artificial intelligence IEEE Internet Things J., 7 (8) (2020), pp. 7457-7469
    CrossRefView in ScopusGoogle Scholar [32] Kansal P., Kumar M., Verma O.P. Classification
    of resource management approaches in fog/edge paradigm and future research prospects:
    A systematic review J. Supercomput., 78 (11) (2022), pp. 13145-13204 CrossRefView
    in ScopusGoogle Scholar [33] Kitchenham B. Procedures for performing systematic
    reviews, Vol. 33, no. 2004 Keele University, Keele, UK (2004), pp. 1-26 Google
    Scholar [34] Yang X., Rahmani N. Task scheduling mechanisms in fog computing:
    Review, trends, and perspectives Kybernetes (2020) Google Scholar [35] Abdulkareem
    K.H., Mohammed M.A., Gunasekaran S.S., Al-Mhiqani M.N., Mutlag A.A., Mostafa S.A.,
    Ali N.S., Ibrahim D.A. A review of fog computing and machine learning: Concepts,
    applications, challenges, and open issues IEEE Access, 7 (2019), pp. 153123-153140
    CrossRefView in ScopusGoogle Scholar [36] Atlam H.F., Walters R.J., Wills G.B.
    Fog computing and the internet of things: A review Big Data Cogn. Comput., 2 (2)
    (2018), p. 10 CrossRefGoogle Scholar [37] Nayeri Z.M., Ghafarian T., Javadi B.
    Application placement in Fog computing with AI approach: Taxonomy and a state
    of the art survey J. Netw. Comput. Appl., 185 (2021), Article 103078 View PDFView
    articleView in ScopusGoogle Scholar [38] Tran-Dang H., Bhardwaj S., Rahim T.,
    Musaddiq A., Kim D.-S. Reinforcement learning based resource management for fog
    computing environment: Literature review, challenges, and open issues J. Commun.
    Netw. (2022) Google Scholar [39] Askar S., Hamad Z.J., Kareem S.W. Deep learning
    and fog computing: A review Int. J. Sci. Bus., 5 (6) (2021), pp. 197-208 Google
    Scholar [40] Kumari N., Yadav A., Jana P.K. Task offloading in fog computing:
    A survey of algorithms and optimization techniques Comput. Netw., 214 (2022),
    Article 109137 View PDFView articleView in ScopusGoogle Scholar [41] Gill S.S.,
    Arya R.C., Wander G.S., Buyya R. Fog-based smart healthcare as a big data and
    cloud service for heart patients using IoT International Conference on Intelligent
    Data Communication Technologies and Internet of Things, Springer (2018), pp. 1376-1383
    Google Scholar [42] N Toosi A., Agarwal C., Mashayekhy L., Moghaddam S.K., Mahmud
    R., Tari Z. GreenFog: A framework for sustainable fog computing International
    Conference on Service-Oriented Computing, Springer (2022), pp. 540-549 CrossRefView
    in ScopusGoogle Scholar [43] Jennings B., Stadler R. Resource management in clouds:
    Survey and research challenges J. Netw. Syst. Manage., 23 (3) (2015), pp. 567-619
    CrossRefView in ScopusGoogle Scholar [44] Tuli S., et al. HealthFog: An ensemble
    deep learning based smart healthcare system for automatic diagnosis of heart diseases
    in integrated IoT and fog computing environments Future Gener. Comput. Syst.,
    104 (2020), pp. 187-200 View PDFView articleView in ScopusGoogle Scholar [45]
    Kök İ., Okay F.Y., Özdemir S. FogAI: An AI-supported fog controller for next generation
    IoT Internet Things, 19 (2022), Article 100572 View PDFView articleView in ScopusGoogle
    Scholar [46] Shakarami A., Shakarami H., Ghobaei-Arani M., Nikougoftar E., Faraji-Mehmandar
    M. Resource provisioning in edge/fog computing: A comprehensive and systematic
    review J. Syst. Archit., 122 (2022), Article 102362 View PDFView articleView in
    ScopusGoogle Scholar [47] S. Iftikhar, et al., TESCO: Multiple Simulations Based
    AI-Augmented Fog Computing for QoS Optimization, in: The 22nd IEEE International
    Conference on Scalable Computing and Communications, ScalCom 2022, Hainan, China,
    15-18 December 2022, 2022. Google Scholar [48] Lindsay D., et al. The evolution
    of distributed computing systems: from fundamental to new frontiers Computing,
    103 (8) (2021), pp. 1859-1878 CrossRefView in ScopusGoogle Scholar [49] Gill S.S.,
    et al. ROUTER: Fog enabled cloud based intelligent resource management approach
    for smart home IoT devices J. Syst. Softw., 154 (2019), pp. 125-138 View PDFView
    articleView in ScopusGoogle Scholar [50] Tuli S., et al. HUNTER: AI based holistic
    resource management for sustainable cloud computing J. Syst. Softw., 184 (2022),
    Article 111124 View PDFView articleView in ScopusGoogle Scholar [51] Nabavi S.S.,
    et al. TRACTOR: Traffic-aware and power-efficient virtual machine placement in
    edge-cloud data centers using artificial bee colony optimization Int. J. Commun.
    Syst., 35 (1) (2022), Article e4747 View in ScopusGoogle Scholar [52] Souri A.
    Artificial intelligence mechanisms for management of QoS-aware connectivity in
    Internet of vehicles J. High Speed Netw. (Preprint) (2022), pp. 1-10 Google Scholar
    [53] Iftikhar S., et al. HunterPlus: AI based energy-efficient task scheduling
    for cloud-Fog computing environments Internet Things, 21 (2023), pp. 1-17 100667,
    URL https://www.sciencedirect.com/science/article/pii/S2542660522001482 View in
    ScopusGoogle Scholar [54] Souri A., Chen M.-Y., Navimipour N.J. Computational
    intelligence methods for smart connectivity in IoT J. Interconnect. Netw. (2022),
    Article 2202001 View in ScopusGoogle Scholar [55] Tuli S., et al. Next generation
    technologies for smart healthcare: Challenges, vision, model, trends and future
    directions Internet Technol. Lett., 3 (2) (2020), Article e145 View in ScopusGoogle
    Scholar [56] Habibzadeh H., Dinesh K., Shishvan O.R., Boggio-Dandry A., Sharma
    G., Soyata T. A survey of healthcare Internet of Things (hIoT): A clinical perspective
    IEEE Internet Things J., 7 (1) (2019), pp. 53-71 View in ScopusGoogle Scholar
    [57] Wu T., Wu F., Qiu C., Redouté J.-M., Yuce M.R. A rigid-flex wearable health
    monitoring sensor patch for IoT-connected healthcare applications IEEE Internet
    Things J., 7 (8) (2020), pp. 6932-6945 CrossRefView in ScopusGoogle Scholar [58]
    Esmaeili S., Tabbakh S.R.K., Shakeri H. A priority-aware lightweight secure sensing
    model for body area networks with clinical healthcare applications in Internet
    of Things Pervasive Mob. Comput., 69 (2020), Article 101265 View PDFView articleView
    in ScopusGoogle Scholar [59] Huifeng W., Kadry S.N., Raj E.D. Continuous health
    monitoring of sportsperson using IoT devices based wearable technology Comput.
    Commun., 160 (2020), pp. 588-595 View PDFView articleView in ScopusGoogle Scholar
    [60] Dourado C.M., da Silva S.P.P., da Nobrega R.V.M., Reboucas Filho P.P., Muhammad
    K., de Albuquerque V.H.C. An open IoHT-based deep learning framework for online
    medical image recognition IEEE J. Sel. Areas Commun., 39 (2) (2020), pp. 541-548
    Google Scholar [61] Ray P.P., Thapa N., Dash D., De D. Novel implementation of
    IoT based non-invasive sensor system for real-time monitoring of intravenous fluid
    level for assistive e-healthcare Circuit World, 45 (3) (2019), pp. 109-123 CrossRefView
    in ScopusGoogle Scholar [62] Das J., Ghosh S., Mukherjee A., Ghosh S.K., Buyya
    R. RESCUE: Enabling green healthcare services using integrated IoT-edge-fog-cloud
    computing environments Softw. - Pract. Exp. (2022) Google Scholar [63] Kumar A.,
    et al. A drone-based networked system and methods for combating coronavirus disease
    (COVID-19) pandemic Future Gener. Comput. Syst., 115 (2021), pp. 1-19 View PDFView
    articleView in ScopusGoogle Scholar [64] Tuli S., et al. Predicting the growth
    and trend of COVID-19 pandemic using machine learning and cloud computing Internet
    Things, 11 (2020), Article 100222 View PDFView articleView in ScopusGoogle Scholar
    [65] Khan N., Ma Z., Ullah A., Polat K. DCA-IoMT: Knowledge graph embedding-enhanced
    deep collaborative alerts-recommendation against COVID19 IEEE Trans. Ind. Inform.
    (2022) Google Scholar [66] Lin X., Wu J., Bashir A.K., Yang W., Singh A., AlZubi
    A.A. FairHealth: Long-term proportional fairness-driven 5G edge healthcare in
    Internet of medical things IEEE Trans. Ind. Inform. (2022) Google Scholar [67]
    Desai F., et al. HealthCloud: A system for monitoring health status of heart patients
    using machine learning and cloud computing Internet Things, 17 (2022), Article
    100485 View PDFView articleView in ScopusGoogle Scholar [68] Dewangan N.K., Chandrakar
    P. Patient-centric token-based healthcare blockchain implementation using secure
    Internet of medical things IEEE Trans. Comput. Soc. Syst. (2022) Google Scholar
    [69] Lv W., Wu S., Jiang C., Cui Y., Qiu X., Zhang Y. Towards large-scale and
    privacy-preserving contact tracing in COVID-19 pandemic: a blockchain perspective
    IEEE Trans. Netw. Sci. Eng. (2020) Google Scholar [70] Kumar S., Raut R.D., Priyadarshinee
    P., Mangla S.K., Awan U., Narkhede B.E. The impact of IoT on the performance of
    vaccine supply chain distribution in the COVID-19 context IEEE Trans. Eng. Manage.
    (2022) Google Scholar [71] Gavrila C., Popescu V., Fadda M., Anedda M., Murroni
    M. On the suitability of HbbTV for unified smart home experience IEEE Trans. Broadcast.,
    67 (1) (2020), pp. 253-262 Google Scholar [72] Chatterjee A., Paul S., Ganguly
    B. Multi-objective energy management of a smart home in real time environment
    IEEE Trans. Ind. Appl. (2022) Google Scholar [73] Yamauchi M., Ohsita Y., Murata
    M., Ueda K., Kato Y. Anomaly detection in smart home operation from user behaviors
    and home conditions IEEE Trans. Consum. Electron., 66 (2) (2020), pp. 183-192
    CrossRefView in ScopusGoogle Scholar [74] Sikder A.K., Babun L., Celik Z.B., Aksu
    H., McDaniel P., Kirda E., Uluagac A.S. Who’s controlling my device? Multi-user
    multi-device-aware access control system for shared smart home environment ACM
    Trans. Internet Things, 3 (4) (2022), pp. 1-39 CrossRefGoogle Scholar [75] Li
    X., Li D. GPFS: A graph-based human pose forecasting system for smart home with
    online learning ACM Trans. Sensor Netw., 17 (3) (2021), pp. 1-19 Google Scholar
    [76] Constantinou S., Konstantinidis A., Chrysanthis P.K., Zeinalipour-Yazti D.
    Green planning of IoT home automation workflows in smart buildings ACM Trans.
    Internet Things, 3 (4) (2022), pp. 1-30 CrossRefGoogle Scholar [77] Liu Y., Ma
    X., Shu L., Hancke G.P., Abu-Mahfouz A.M. From industry 4.0 to agriculture 4.0:
    Current status, enabling technologies, and research challenges IEEE Trans. Ind.
    Inform., 17 (6) (2020), pp. 4322-4334 CrossRefGoogle Scholar [78] Alahi M.E.E.,
    Xie L., Mukhopadhyay S., Burkitt L. A temperature compensated smart nitrate-sensor
    for agricultural industry IEEE Trans. Ind. Electron., 64 (9) (2017), pp. 7333-7341
    View in ScopusGoogle Scholar [79] Sengupta A., et al. Mobile edge computing based
    Internet of agricultural things: A systematic review and future directions Mob.
    Edge Comput. (2021), pp. 415-441 CrossRefView in ScopusGoogle Scholar [80] Wang
    T., Wang X., Jiang Y., Sun Z., Liang Y., Hu X., Li H., Shi Y., Xu J., Ruan J.
    Hybrid machine learning approach for evapotranspiration estimation of fruit tree
    in agricultural cyber-physical systems IEEE Trans. Cybern. (2022) Google Scholar
    [81] Singh S., Chana I., Buyya R. Agri-info: Cloud based autonomic system for
    delivering agriculture as a service Internet Things, 9 (2020), Article 100131
    View PDFView articleView in ScopusGoogle Scholar [82] Bauer J., Aschenbruck N.
    Towards a low-cost rssi-based crop monitoring ACM Trans. Internet Things, 1 (4)
    (2020), pp. 1-26 CrossRefGoogle Scholar [83] Gill S.S., Chana I., Buyya R. IoT
    based agriculture as a cloud and big data service: The beginning of digital India
    J. Organ. End User Comput. (JOEUC), 29 (4) (2017), pp. 1-23 View in ScopusGoogle
    Scholar [84] Hu W.-J., Fan J., Du Y.-X., Li B.-S., Xiong N., Bekkering E. MDFC–ResNet:
    An agricultural IoT system to accurately recognize crop diseases IEEE Access,
    8 (2020), pp. 115287-115298 CrossRefView in ScopusGoogle Scholar [85] Zhu F.,
    Lv Y., Chen Y., Wang X., Xiong G., Wang F.-Y. Parallel transportation systems:
    Toward IoT-enabled smart urban traffic control and management IEEE Trans. Intell.
    Transp. Syst., 21 (10) (2019), pp. 4063-4071 Google Scholar [86] Ke R., Zhuang
    Y., Pu Z., Wang Y. A smart, efficient, and reliable parking surveillance system
    with edge artificial intelligence on IoT devices IEEE Trans. Intell. Transp. Syst.,
    22 (8) (2020), pp. 4962-4974 Google Scholar [87] Bansal K., et al. DeepBus: Machine
    learning based real time pothole detection system for smart transportation using
    IoT Internet Technol. Lett., 3 (3) (2020), Article e156 View in ScopusGoogle Scholar
    [88] Philip B.V., Alpcan T., Jin J., Palaniswami M. Distributed real-time IoT
    for autonomous vehicles IEEE Trans. Ind. Inform., 15 (2) (2018), pp. 1131-1140
    CrossRefGoogle Scholar [89] Chavhan S., Gupta D., Gochhayat S.P., N C.B., Khanna
    A., Shankar K., Rodrigues J.J.P.C. Edge computing AI-IoT integrated energy efficient
    intelligent transportation system for smart cities ACM Trans. Internet Technol.,
    22 (4) (2022), pp. 1-18 URL http://dx.doi.org/10.1145/3507906 CrossRefGoogle Scholar
    [90] Wan L., Zhang M., Sun L., Wang X. Machine learning empowered IoT for intelligent
    vehicle location in smart cities ACM Trans. Internet Technol. (TOIT), 21 (3) (2021),
    pp. 1-25 CrossRefGoogle Scholar [91] Piccialli F., Giampaolo F., Prezioso E.,
    Crisci D., Cuomo S. Predictive analytics for smart parking: A deep learning approach
    in forecasting of iot data ACM Trans. Internet Technol. (TOIT), 21 (3) (2021),
    pp. 1-21 CrossRefGoogle Scholar [92] Eldrandaly K.A., Abdel-Basset M., Shawky
    L.A. Internet of spatial things: A new reference model with insight analysis IEEE
    Access, 7 (2019), pp. 19653-19669 CrossRefView in ScopusGoogle Scholar [93] Sarwat
    M. Spatial data systems support for the internet of things: Challenges and opportunities
    Sigspatial Special, 12 (2) (2020), pp. 42-47 CrossRefGoogle Scholar [94] Ghosh
    S., Mukherjee A., Ghosh S.K., Buyya R. Mobi-iost: Mobility-aware cloud-fog-edge-iot
    collaborative framework for time-critical applications IEEE Trans. Netw. Sci.
    Eng., 7 (4) (2019), pp. 2271-2285 Google Scholar [95] Koh J.Y., Nevat I., Leong
    D., Wong W.-C. Geo-spatial location spoofing detection for Internet of Things
    IEEE Internet Things J., 3 (6) (2016), pp. 971-978 View in ScopusGoogle Scholar
    [96] Ghosh S., Mukherjee A., Ghosh S., Buyya R. STOPPAGE: Spatio-temporal data
    driven cloud-fog-edge computing framework for pandemic monitoring and management
    Softw. - Pract. Exp. (2022) Google Scholar [97] Golec M., et al. BioSec: A biometric
    authentication framework for secure and private communication among edge devices
    in IoT and industry 4.0 IEEE Consum. Electron. Mag., 11 (2) (2022), pp. 51-56
    CrossRefView in ScopusGoogle Scholar [98] Vailshery L.S. IOT connected devices
    worldwide 2019–2030 Statista (2022) URL https://www.statista.com/statistics/1183457/iot-connected-devices-worldwide/
    Google Scholar [99] Golec M., et al. AIBLOCK: Blockchain based lightweight framework
    for serverless computing using AI 2022 22nd IEEE International Symposium on Cluster,
    Cloud and Internet Computing, CCGrid, IEEE (2022), pp. 886-892 CrossRefView in
    ScopusGoogle Scholar [100] Golec M., Ozturac R., et al. IFaaSBus: A security-and
    privacy-based lightweight framework for serverless computing using IoT and machine
    learning IEEE Trans. Ind. Inform., 18 (5) (2021), pp. 3522-3529 Google Scholar
    [101] Miah M.S., Schukat M., Barrett E. An enhanced sum rate in the cluster based
    cognitive radio relay network using the sequential approach for the future Internet
    of Things Human-Centric Comput. Inf. Sci., 8 (1) (2018), pp. 1-27 View in ScopusGoogle
    Scholar [102] Iftikhar S., Golec M., et al. Fog computing based router-distributor
    application for sustainable smart home 2022 IEEE 95th Vehicular Technology Conference,
    VTC2022-Spring, IEEE (2022), pp. 1-5 Google Scholar [103] Guo J., Li C., Chen
    Y., Luo Y. On-demand resource provision based on load estimation and service expenditure
    in edge cloud environment J. Netw. Comput. Appl., 151 (2020), Article 102506 View
    PDFView articleView in ScopusGoogle Scholar [104] Li L., Ota K., Dong M. Humanlike
    driving: Empirical decisionmaking system for autonomous vehicles IEEE Trans. Veh.
    Technol., 67 (8) (2018), pp. 6814-6823 CrossRefView in ScopusGoogle Scholar [105]
    Wang Q., Guo Y., Yu L., Li P. Earthquake prediction based on spatio-temporal data
    mining: An LSTM network approach IEEE Trans. Emerg. Top. Comput., 8 (1) (2020),
    pp. 148-158 CrossRefView in ScopusGoogle Scholar [106] Amin S.U., Hossain M.S.,
    Muhammad G., Alhussein M., Rahman M.A. Cognitive smart healthcare for pathology
    detection and monitoring IEEE Access, 7 (2019), pp. 10745-10753 CrossRefView in
    ScopusGoogle Scholar [107] Xu H., Ho C.-Y., Abdelmoniem A.M., Dutta A., Bergou
    E.H., Karatsenidis K., Canini M., Kalnis P. GRACE: A compressed communication
    framework for distributed machine learning 2021 IEEE 41st International Conference
    on Distributed Computing Systems, ICDCS (2021), pp. 561-572 CrossRefView in ScopusGoogle
    Scholar [108] Abdelmoniem A.M., Canini M. DC2: Delay-aware compression control
    for distributed machine learning IEEE Conference on Computer Communications, INFOCOM,
    IEEE (2021), pp. 1-10 CrossRefGoogle Scholar [109] M Abdelmoniem A., Elzanaty
    A., Alouini M.-S., Canini M. An efficient statistical-based gradient compression
    technique for distributed training systems Proc. Mach. Learn. Syst. (MLSys), 3
    (2021), pp. 297-322 Google Scholar [110] Misra S., Tyagi A.K., Piuri V., Garg
    L. Artificial Intelligence for Cloud and Edge Computing Springer Nature (2022)
    Google Scholar [111] L. Wang, L. Jiao, J. Li, M. Mühlhäuser, Online Resource Allocation
    for Arbitrary User Mobility in Distributed Edge Clouds, in: IEEE International
    Conference on Distributed Computing Systems, ICDCS, 2017. Google Scholar [112]
    Rosendo D., Costan A., Valduriez P., Antoniu G. Distributed intelligence on the
    edge-to-cloud continuum: A systematic literature review J. Parallel Distrib. Comput.,
    166 (2022), pp. 71-94 View PDFView articleView in ScopusGoogle Scholar [113] Nguyen
    D.T., Le L.B., Bhargava V.K. A market-based framework for multi-resource allocation
    in Fog computing IEEE/ACM Trans. Netw., 27 (3) (2019), pp. 1151-1164 CrossRefView
    in ScopusGoogle Scholar [114] Bonawitz K., Eichner H., Grieskamp W., Huba D.,
    Ingerman A., Ivanov V., Kiddon C., Konečnỳ J., Mazzocchi S., McMahan B., et al.
    Towards federated learning at scale: System design Proc. Mach. Learn. Syst., 1
    (2019), pp. 374-388 Google Scholar [115] H. Daga, P.K. Nicholson, A. Gavrilovska,
    D. Lugones, Cartel: A system for collaborative transfer learning at the edge,
    in: Proceedings of the ACM Symposium on Cloud Computing, 2019, pp. 25–37. Google
    Scholar [116] Kairouz P., McMahan H.B., Avent B., Bellet A., Bennis M., Bhagoji
    A.N., Bonawitz K., Charles Z., Cormode G., Cummings R., et al. Advances and open
    problems in federated learning Found. Trends® Mach. Learn., 14 (1–2) (2021), pp.
    1-210 CrossRefView in ScopusGoogle Scholar [117] Abdelmoniem A.M., Ho C.-Y., Papageorgiou
    P., Canini M. Empirical analysis of federated learning in heterogeneous environments
    ACM EuroMLSys (2022) Google Scholar [118] Abdelmoniem A.M., Sahu A.N., Canini
    M., Fahmy S.A. Resource-efficient federated learning (2021) arXiv:abs/2111.01108
    Google Scholar [119] Zarandi S., Tabassum H. Federated double deep Q-learning
    for joint delay and energy minimization in IoT networks (2021) arXiv:2104.11320
    Google Scholar [120] Fantacci R., Picano B. Federated learning framework for mobile
    edge computing networks CAAI Trans. Intell. Technol., 5 (1) (2020), pp. 15-21
    CrossRefView in ScopusGoogle Scholar [121] Chen X., Liu G. Federated deep reinforcement
    learning-based task offloading and resource allocation for smart cities in a mobile
    edge network Sensors, 22 (13) (2022) Google Scholar [122] McMahan B., Moore E.,
    Ramage D., Hampson S., y Arcas B.A. Communication-efficient learning of deep networks
    from decentralized data Artificial Intelligence and Statistics, PMLR (2017), pp.
    1273-1282 View in ScopusGoogle Scholar [123] Abdelmoniem A.M., Canini M. Towards
    mitigating device heterogeneity in federated learning via adaptive model quantization
    ACM EuroMLSys (2021) Google Scholar [124] J. McChesney, N. Wang, A. Tanwer, E.
    De Lara, B. Varghese, Defog: fog computing benchmarks, in: Proceedings of the
    4th ACM/IEEE Symposium on Edge Computing, 2019, pp. 47–58. Google Scholar [125]
    Fontenla-Romero Ó., Guijarro-Berdiñas B., Martinez-Rego D., Pérez-Sánchez B.,
    Peteiro-Barral D. Online machine learning Efficiency and Scalability Methods for
    Computational Intellect, IGI Global (2013), pp. 27-54 CrossRefView in ScopusGoogle
    Scholar [126] Bisong E. Batch vs. online learning Building Machine Learning and
    Deep Learning Models on Google Cloud Platform, Springer (2019), pp. 199-201 CrossRefGoogle
    Scholar [127] Moqurrab S.A., Tariq N., et al. A deep learning-based privacy-preserving
    model for smart healthcare in Internet of medical things using fog computing Wirel.
    Pers. Commun., 126 (3) (2022), pp. 2379-2401 CrossRefView in ScopusGoogle Scholar
    [128] Singh P., et al. Machine learning for cloud, fog, edge and serverless computing
    environments: Comparisons, performance evaluation benchmark and future directions
    Int. J. Grid Util. Comput., 13 (4) (2022), pp. 447-457 CrossRefView in ScopusGoogle
    Scholar [129] Dhillon A., Singh A., et al. IoTPulse: Machine learning-based enterprise
    health information system to predict alcohol addiction in Punjab (India) using
    IoT and fog computing Enterp. Inf. Syst., 16 (7) (2022), Article 1820583 View
    in ScopusGoogle Scholar [130] Tuli S., et al. IThermoFog: IoT-Fog based automatic
    thermal profile creation for cloud data centers using artificial intelligence
    techniques Internet Technol. Lett., 3 (5) (2020), Article e198 View in ScopusGoogle
    Scholar [131] Yousefpour A., Fung C., Nguyen T., Kadiyala K., Jalali F., Niakanlahiji
    A., Kong J., Jue J.P. All one needs to know about fog computing and related edge
    computing paradigms: A complete survey J. Syst. Archit., 98 (2019), pp. 289-330
    View PDFView articleView in ScopusGoogle Scholar [132] S. Ghafouri, A. Karami,
    et al., Mobile-Kube: Mobility-aware and Energy-efficient Service Orchestration
    on Kubernetes Edge Servers, in: 15th IEEE/ACM International Conference on Utility
    and Cloud Computing, UCC 2022, Washington State University Portland, OR, United
    States, December 6-9, 2022, 2022. Google Scholar [133] Sriraghavendra M., et al.
    DoSP: A deadline-aware dynamic service placement algorithm for workflow-oriented
    IoT applications in fog-cloud computing environments Energy Conservation Solutions
    for Fog-Edge Computing Paradigms, Springer (2022), pp. 21-47 CrossRefView in ScopusGoogle
    Scholar [134] Gill S.S. Quantum and blockchain based serverless edge computing:
    A vision, model, new trends and future directions Internet Technol. Lett. (2021),
    Article e275 Google Scholar [135] Klervie T., Simin N.T. A taxonomy for management
    and optimization of multiple resources in edge computing Wirel. Commun. Mob. Comput.
    (2018) Google Scholar [136] Aazam M., Huh E.-N. Dynamic resource provisioning
    through Fog micro datacenter 2015 IEEE International Conference on Pervasive Computing
    and Communication Workshops, PerCom Workshops (2015), pp. 105-110 CrossRefView
    in ScopusGoogle Scholar [137] Aazam M., Huh E.-N.a. Fog computing micro datacenter
    based dynamic resource estimation and pricing model for IoT 2015 IEEE 29th International
    Conference on Advanced Information Networking and Applications, IEEE (2015), pp.
    687-694 CrossRefView in ScopusGoogle Scholar [138] Myung H.G., Lim J., Goodman
    D.J. Single carrier FDMA for uplink wireless transmission IEEE Veh. Technol. Mag.,
    1 (3) (2006), pp. 30-38 View in ScopusGoogle Scholar [139] Rhee I., Warrier A.,
    Min J., Xu L. DRAND: Distributed randomized TDMA scheduling for wireless Ad Hoc
    networks IEEE Trans. Mob. Comput., 8 (10) (2009), pp. 1384-1396 View in ScopusGoogle
    Scholar [140] Athwani P., Vidyarthi D.P. Resource discovery in mobile cloud computing:
    A clustering based approach 2015 IEEE UP Section Conference on Electrical Computer
    and Electronics, UPCON, IEEE (2015), pp. 1-6 CrossRefGoogle Scholar [141] Arkian
    H.R., Atani R.E., Diyanat A., Pourkhalili A. A cluster-based vehicular cloud architecture
    with learning-based resource management J. Supercomput., 71 (4) (2015), pp. 1401-1426
    CrossRefView in ScopusGoogle Scholar [142] Liu W., Nishio T., Shinkuma R., Takahashi
    T. Adaptive resource discovery in mobile cloud computing Comput. Commun., 50 (2014),
    pp. 119-129 View PDFView articleView in ScopusGoogle Scholar [143] Sim K.M. Agent-based
    fog computing: Gossiping, reasoning, and bargaining IEEE Lett. Comput. Soc., 1
    (2) (2018), pp. 21-24 CrossRefGoogle Scholar [144] Schmidhuber J. Deep learning
    in neural networks: An overview Neural Netw., 61 (2015), pp. 85-117 View PDFView
    articleView in ScopusGoogle Scholar [145] Yadav R., Baranwal G. Trust-aware framework
    for application placement in fog computing 2019 IEEE International Conference
    on Advanced Networks and Telecommunications Systems, ANTS, IEEE (2019), pp. 1-6
    Google Scholar [146] Li G., Song J., Wu J., Wang J. Method of resource estimation
    based on QoS in edge computing Wirel. Commun. Mob. Comput., 2018 (2018), pp. 1-9
    View PDFView articleGoogle Scholar [147] Saeik F., Avgeris M., Spatharakis D.,
    Santi N., Dechouniotis D., Violos J., Leivadeas A., Athanasopoulos N., Mitton
    N., Papavassiliou S. Task offloading in edge and cloud computing: A survey on
    mathematical, artificial intelligence and control theory solutions Comput. Netw.,
    195 (2021), Article 108177 View PDFView articleView in ScopusGoogle Scholar [148]
    You C., Huang K., Chae H. Energy efficient mobile cloud computing powered by wireless
    energy transfer IEEE J. Sel. Areas Commun., 34 (5) (2016), pp. 1757-1771 View
    in ScopusGoogle Scholar [149] Bi S., Zhang Y.J. Computation rate maximization
    for wireless powered mobile-edge computing with binary computation offloading
    IEEE Trans. Wireless Commun., 17 (6) (2018), pp. 4177-4190 CrossRefView in ScopusGoogle
    Scholar [150] Shi L., Ye Y., Chu X., Lu G. Computation energy efficiency maximization
    for a NOMA-based WPT-MEC network IEEE Internet Things J., 8 (13) (2021), pp. 10731-10744
    CrossRefView in ScopusGoogle Scholar [151] You C., Huang K., Chae H., Kim B.H.
    Energy-efficient resource allocation for mobile-edge computation offloading IEEE
    Trans. Wireless Commun., 16 (3) (2017), pp. 1397-1411 View in ScopusGoogle Scholar
    [152] Huang P.-Q., Wang Y., Wang K., Zhang Q. Combining Lyapunov optimization
    with evolutionary transfer optimization for long-term energy minimization in IRS-aided
    communications IEEE Trans. Cybern. (2022), pp. 1-11 Google Scholar [153] Shi L.,
    Ye Y., Chu X., Lu G. Computation bits maximization in a backscatter assisted wirelessly
    powered MEC network IEEE Commun. Lett., 25 (2) (2021), pp. 528-532 CrossRefView
    in ScopusGoogle Scholar [154] Yao J., Ansari N. Task allocation in Fog-aided mobile
    IoT by Lyapunov online reinforcement learning IEEE Trans. Green Commun. Netw.,
    4 (2) (2020), pp. 556-565 CrossRefView in ScopusGoogle Scholar [155] Lu J., Chen
    L., Xia J., Zhu F., Tang M., Fan C., Ou J. Analytical offloading design for mobile
    edge computing-based smart internet of vehicle EURASIP J. Adv. Signal Process.,
    2022 (1) (2022), pp. 1-19 Google Scholar [156] Zeng M., Fodor V. Dynamic spectrum
    sharing for load balancing in multi-cell mobile edge computing IEEE Wirel. Commun.
    Lett., 9 (2) (2019), pp. 189-193 View in ScopusGoogle Scholar [157] Thomas A.,
    Krishnalal G., Raj V.J. Credit based scheduling algorithm in cloud computing environment
    Procedia Comput. Sci., 46 (2015), pp. 913-920 View PDFView articleView in ScopusGoogle
    Scholar [158] Mondal B., Dasgupta K., Dutta P. Load balancing in cloud computing
    using Stochastic hill climbing-A soft computing approach Proc. Technol., 4 (1)
    (2012), pp. 783-789 View PDFView articleGoogle Scholar [159] Malik S.U., et al.
    EFFORT: Energy efficient framework for offload communication in mobile cloud computing
    Softw. - Pract. Exp., 51 (9) (2021), pp. 1896-1909 CrossRefView in ScopusGoogle
    Scholar [160] Vu D.-N., Dao N.-N., Na W., Cho S. Dynamic resource orchestration
    for service capability maximization in Fog-enabled connected vehicle networks
    IEEE Trans. Cloud Comput., 10 (3) (2022), pp. 1726-1737 CrossRefView in ScopusGoogle
    Scholar [161] Min M., Xiao L., Chen Y., Cheng P., Wu D., Zhuang W. Learning-based
    computation offloading for IoT devices with energy harvesting IEEE Trans. Veh.
    Technol., 68 (2) (2019), pp. 1930-1941 CrossRefView in ScopusGoogle Scholar [162]
    Duc T.L., Leiva R.G., Casari P., Östberg P.-O. Machine learning methods for reliable
    resource provisioning in edge-cloud computing: A survey ACM Comput. Surv., 52
    (5) (2019), pp. 1-39 CrossRefGoogle Scholar [163] Arif M., Kiani A.K., Qadir J.
    Machine learning based optimized live virtual machine migration over WAN links
    Telecommun. Syst., 64 (2) (2016), pp. 1-13 Google Scholar [164] Cunningham P.,
    Cord M., Delany S.J. Supervised learning Machine Learning Techniques for Multimedia,
    Springer (2008), pp. 21-49 CrossRefGoogle Scholar [165] Nasteski V. An overview
    of the supervised machine learning methods Horizons. B, 4 (2017), pp. 51-62 CrossRefGoogle
    Scholar [166] Cao B., Zhang L., Li Y., Feng D., Cao W. Intelligent offloading
    in multi-access edge computing: A state-of-the-art review and framework IEEE Commun.
    Mag., 57 (3) (2019), pp. 56-62 CrossRefView in ScopusGoogle Scholar [167] Barlow
    H.B. Unsupervised learning Neural Comput., 1 (3) (1989), pp. 295-311 CrossRefGoogle
    Scholar [168] Han J., Ge Z. Effect of dimensionality reduction on stock selection
    with cluster analysis in different market situations Expert Syst. Appl., 147 (2020),
    Article 113226 View PDFView articleView in ScopusGoogle Scholar [169] Dash M.,
    Liu H., Yao J. Dimensionality reduction of unsupervised data Proceedings Ninth
    Ieee International Conference on Tools with Artificial Intelligence, IEEE (1997),
    pp. 532-539 View in ScopusGoogle Scholar [170] Kassambara A. Practical Guide to
    Cluster Analysis in R: Unsupervised Machine Learning, Vol. 1 Sthda (2017) Google
    Scholar [171] Carvalho G., Cabral B., Pereira V., Bernardino J. Computation offloading
    in edge computing environments using artificial intelligence techniques Eng. Appl.
    Artif. Intell., 95 (2020), Article 103840 View PDFView articleView in ScopusGoogle
    Scholar [172] Chen T., Zhang X., You M., Zheng G., Lambotharan S. A GNN-based
    supervised learning framework for resource allocation in wireless IoT networks
    IEEE Internet Things J., 9 (3) (2021), pp. 1712-1724 CrossRefView in ScopusGoogle
    Scholar [173] Wang Z., Eisen M., Ribeiro A. Learning decentralized wireless resource
    allocations with graph neural networks IEEE Trans. Signal Process., 70 (2022),
    pp. 1850-1863 CrossRefView in ScopusGoogle Scholar [174] Yang T., Andrew G., Eichner
    H., Sun H., Li W., Kong N., Ramage D., Beaufays F. Applied Federated Learning:
    Improving Google Keyboard Query Suggestions (2018) arXiv:1812.02903 Google Scholar
    [175] Chen X., Zhang H., Wu C., Mao S., Ji Y., Bennis M. Optimized computation
    offloading performance in virtual edge computing systems via deep reinforcement
    learning IEEE Internet Things J., 6 (3) (2018), pp. 4005-4018 Google Scholar [176]
    Vemireddy S., Rout R.R. Fuzzy reinforcement learning for energy efficient task
    offloading in vehicular fog computing Comput. Netw., 199 (2021), Article 108463
    View PDFView articleView in ScopusGoogle Scholar [177] Tuli S., Casale G., Jennings
    N.R. GOSH: Task scheduling using deep surrogate models in fog computing environments
    IEEE Trans. Parallel Distrib. Syst., 33 (11) (2021), pp. 2821-2833 Google Scholar
    [178] Tuli S., Casale G., Jennings N.R.a. MCDS: AI augmented workflow scheduling
    in mobile edge cloud computing systems IEEE Trans. Parallel Distrib. Syst., 33
    (11) (2021), pp. 2794-2807 Google Scholar [179] Chen M., Xiao Y., Li Q., Chen
    K.-c. Minimizing age-of-information for fog computing-supported vehicular networks
    with deep Q-learning ICC 2020-2020 IEEE International Conference on Communications,
    ICC, IEEE (2020), pp. 1-6 Google Scholar [180] Gazori P., Rahbari D., Nickray
    M. Saving time and cost on the scheduling of fog-based IoT applications using
    deep reinforcement learning approach Future Gener. Comput. Syst., 110 (2020),
    pp. 1098-1115 View PDFView articleView in ScopusGoogle Scholar [181] Shi J., Du
    J., Wang J., Wang J., Yuan J. Priority-aware task offloading in vehicular fog
    computing based on deep reinforcement learning IEEE Trans. Veh. Technol., 69 (12)
    (2020), pp. 16067-16081 CrossRefView in ScopusGoogle Scholar [182] Ning Z., Dong
    P., Wang X., Rodrigues J.J., Xia F. Deep reinforcement learning for vehicular
    edge computing: An intelligent offloading system ACM Trans. Intell. Syst. Technol.,
    10 (6) (2019), pp. 1-24 CrossRefGoogle Scholar [183] Conti S., Faraci G., Nicolosi
    R., Rizzo S.A., Schembra G. Battery management in a green fog-computing node:
    A reinforcement-learning approach IEEE Access, 5 (2017), pp. 21126-21138 View
    in ScopusGoogle Scholar [184] Yang T., Hu Y., Gursoy M.C., Schmeink A., Mathar
    R. Deep reinforcement learning based resource allocation in low latency edge computing
    networks 2018 15th International Symposium on Wireless Communication Systems,
    ISWCS, IEEE (2018), pp. 1-5 Google Scholar [185] Chen J., Chen S., Wang Q., Cao
    B., Feng G., Hu J. iRAF: A deep reinforcement learning approach for collaborative
    mobile edge computing IoT networks IEEE Internet Things J., 6 (4) (2019), pp.
    7011-7024 CrossRefView in ScopusGoogle Scholar [186] Liu X., Qin Z., Gao Y. Resource
    allocation for edge computing in IoT networks via reinforcement learning ICC 2019-2019
    IEEE International Conference on Communications, ICC, IEEE (2019), pp. 1-6 View
    PDFView articleGoogle Scholar [187] Aslanpour M.S., et al. Performance evaluation
    metrics for cloud, fog and edge computing: A review, taxonomy, benchmarks and
    standards for future research Internet Things, 12 (2020), Article 100273 View
    PDFView articleView in ScopusGoogle Scholar [188] Costa B., Pires P.F., Delicato
    F.C. Modeling IoT applications with sysml4iot 2016 42th Euromicro Conference on
    Software Engineering and Advanced Applications, SEAA, IEEE (2016), pp. 157-164
    CrossRefView in ScopusGoogle Scholar [189] Zeng X., Garg S.K., Strazdins P., Jayaraman
    P.P., Georgakopoulos D., Ranjan R. IOTSim: A simulator for analysing IoT applications
    J. Syst. Archit., 72 (2017), pp. 93-107 View PDFView articleView in ScopusGoogle
    Scholar [190] Mechalikh C., Taktak H., Moussa F. PureEdgeSim: A simulation toolkit
    for performance evaluation of cloud, fog, and pure edge computing environments
    2019 International Conference on High Performance Computing & Simulation, HPCS,
    IEEE (2019), pp. 700-707 CrossRefView in ScopusGoogle Scholar [191] Jha D.N.,
    Alwasel K., Alshoshan A., Huang X., Naha R.K., Battula S.K., Garg S., Puthal D.,
    James P., Zomaya A., et al. IoTSim-edge: a simulation framework for modeling the
    behavior of internet of things and edge computing environments Softw. - Pract.
    Exp., 50 (6) (2020), pp. 844-867 CrossRefView in ScopusGoogle Scholar [192] Wang
    C., Li R., Li W., Qiu C., Wang X. SimEdgeIntel: A open-source simulation platform
    for resource management in edge intelligence J. Syst. Archit., 115 (2021), Article
    102016 View PDFView articleView in ScopusGoogle Scholar [193] Gupta H., Vahid
    Dastjerdi A., Ghosh S.K., Buyya R. IFogSim: A toolkit for modeling and simulation
    of resource management techniques in the Internet of Things, edge and Fog computing
    environments Softw. - Pract. Exp., 47 (9) (2017), pp. 1275-1296 CrossRefView in
    ScopusGoogle Scholar [194] Mahmud R., Pallewatta S., Goudarzi M., Buyya R. Ifogsim2:
    An extended ifogsim simulator for mobility, clustering, and microservice management
    in edge and fog computing environments J. Syst. Softw., 190 (2022), Article 111351
    View PDFView articleView in ScopusGoogle Scholar [195] Ergun K., Yu X., Nagesh
    N., Cherkasova L., Mercati P., Ayoub R., Rosing T. RelIoT: Reliability simulator
    for IoT networks International Conference on Internet of Things, Springer (2020),
    pp. 63-81 CrossRefView in ScopusGoogle Scholar [196] Lera I., Guerrero C., Juiz
    C. YAFS: A simulator for IoT scenarios in fog computing IEEE Access, 7 (2019),
    pp. 91745-91758 CrossRefView in ScopusGoogle Scholar [197] Tuli S., Poojara S.R.,
    Srirama S.N., Casale G., Jennings N.R. COSCO: Container orchestration using co-simulation
    and gradient based optimization for fog computing environments IEEE Trans. Parallel
    Distrib. Syst., 33 (1) (2021), pp. 101-116 Google Scholar [198] Scarpiniti M.,
    Baccarelli E., Momenzadeh A., Sarv Ahrabi S. DeepFogSim: A toolbox for execution
    and performance evaluation of the inference phase of conditional deep neural networks
    with early exits atop distributed Fog platforms Appl. Sci., 11 (1) (2021), p.
    377 CrossRefGoogle Scholar [199] Qayyum T., Malik A.W., Khattak M.A.K., Khalid
    O., Khan S.U. FogNetSim++: A toolkit for modeling and simulation of distributed
    fog environment IEEE Access, 6 (2018), pp. 63570-63583 CrossRefView in ScopusGoogle
    Scholar [200] Calheiros R.N., Ranjan R., Beloglazov A., De Rose C.A., Buyya R.
    CloudSim: A toolkit for modeling and simulation of cloud computing environments
    and evaluation of resource provisioning algorithms Softw. - Pract. Exp., 41 (1)
    (2011), pp. 23-50 CrossRefGoogle Scholar [201] Gill S.S., Tuli S., Toosi A.N.,
    Cuadrado F., Garraghan P., Bahsoon R., Lutfiyya H., Sakellariou R., Rana O., Dustdar
    S., et al. ThermoSim: Deep learning based framework for modeling and simulation
    of thermal-aware resource management for cloud computing environments J. Syst.
    Softw., 166 (2020), Article 110596 View PDFView articleView in ScopusGoogle Scholar
    [202] Luo C., Zhang F., Huang C., Xiong X., Chen J., Wang L., Gao W., Ye H., Wu
    T., Zhou R., et al. AIoT bench: Towards comprehensive benchmarking mobile and
    embedded device intelligence International Symposium on Benchmarking, Measuring
    and Optimization, Springer (2018), pp. 31-35 View in ScopusGoogle Scholar [203]
    Shukla A., Chaturvedi S., Simmhan Y. Riotbench: An iot benchmark for distributed
    stream processing systems Concurr. Comput.: Pract. Exper., 29 (21) (2017), Article
    e4257 View in ScopusGoogle Scholar [204] Hao T., Huang Y., Wen X., Gao W., Zhang
    F., Zheng C., Wang L., Ye H., Hwang K., Ren Z., et al. Edge AIBench: Towards comprehensive
    end-to-end edge computing benchmarking International Symposium on Benchmarking,
    Measuring and Optimization, Springer (2018), pp. 23-30 CrossRefGoogle Scholar
    [205] Shen S., Van Beek V., Iosup A. Statistical characterization of business-critical
    workloads hosted in cloud datacenters 2015 15th IEEE/ACM International Symposium
    on Cluster, Cloud and Grid Computing, IEEE (2015), pp. 465-474 View in ScopusGoogle
    Scholar [206] E. Cortez, A. Bonde, A. Muzio, M. Russinovich, M. Fontoura, R. Bianchini,
    Resource central: Understanding and predicting workloads for improved resource
    management in large cloud platforms, in: Proceedings of the 26th Symposium on
    Operating Systems Principles, 2017, pp. 153–167. Google Scholar [207] Merenda
    M., Porcaro C., Iero D. Edge machine learning for ai-enabled iot devices: A review
    Sensors, 20 (9) (2020), p. 2533 CrossRefView in ScopusGoogle Scholar [208] Murshed
    M.S., Murphy C., Hou D., Khan N., Ananthanarayanan G., Hussain F. Machine learning
    at the network edge: A survey ACM Comput. Surv., 54 (8) (2021), pp. 1-37 CrossRefGoogle
    Scholar [209] Lee Y.-L., Tsung P.-K., Wu M. Techology trend of edge AI 2018 International
    Symposium on VLSI Design, Automation and Test, VLSI-DAT, IEEE (2018), pp. 1-2
    Google Scholar [210] Liu C., Liu C., Shang Y., Chen S., Cheng B., Chen J. An adaptive
    prediction approach based on workload pattern discrimination in the cloud J. Netw.
    Comput. Appl., 80 (2017), pp. 35-44 View PDFView articleGoogle Scholar [211] Bankole
    A.A., Ajila S.A. Predicting cloud resource provisioning using machine learning
    techniques 2016 26th IEEE Canadian Conference on Electrical and Computer Engineering,
    CCECE, IEEE (2016), pp. 1-4 View in ScopusGoogle Scholar [212] D. Didona, F. Quaglia,
    P. Romano, E. Torre, Enhancing performance prediction robustness by combining
    analytical modeling and machine learning, in: Proceedings of the 6th ACM/SPEC
    International Conference on Performance Engineering, 2015, pp. 145–156. Google
    Scholar [213] Marcus R., Papaemmanouil O. Workload management for cloud databases
    via machine learning 2016 IEEE 32nd International Conference on Data Engineering
    Workshops, ICDEW, IEEE (2016), pp. 27-30 CrossRefView in ScopusGoogle Scholar
    [214] Ferrández-Pastor F.-J., Mora H., Jimeno-Morenilla A., Volckaert B. Deployment
    of IoT edge and fog computing technologies to develop smart building services
    Sustainability, 10 (11) (2018), p. 3832 CrossRefView in ScopusGoogle Scholar [215]
    He J., Wei J., Chen K., Tang Z., Zhou Y., Zhang Y. Multitier fog computing with
    large-scale IoT data analytics for smart cities IEEE Internet Things J., 5 (2)
    (2017), pp. 677-686 View in ScopusGoogle Scholar [216] Shooshtarian L., Lan D.,
    Taherkordi A. A clustering-based approach to efficient resource allocation in
    fog computing International Symposium on Pervasive Systems, Algorithms and Networks,
    Springer (2019), pp. 207-224 CrossRefView in ScopusGoogle Scholar [217] Meng Y.,
    Rao R., Zhang X., Hong P. CRUPA: A container resource utilization prediction algorithm
    for auto-scaling based on time series analysis 2016 International Conference on
    Progress in Informatics and Computing, PIC, IEEE (2016), pp. 468-472 CrossRefView
    in ScopusGoogle Scholar [218] Venkateswaran S., Sarkar S. Fitness-aware containerization
    service leveraging machine learning IEEE Trans. Serv. Comput., 14 (6) (2019),
    pp. 1751-1764 Google Scholar [219] Yang R., Ouyang X., Chen Y., Townend P., Xu
    J. Intelligent resource scheduling at scale: a machine learning perspective 2018
    IEEE Symposium on Service-Oriented System Engineering, SOSE, IEEE (2018), pp.
    132-141 CrossRefView in ScopusGoogle Scholar [220] Podolskiy V., Mayo M., Koay
    A., Gerndt M., Patros P. Maintaining SLOs of cloud-native applications via self-adaptive
    resource sharing 2019 IEEE 13th International Conference on Self-Adaptive and
    Self-Organizing Systems, SASO, IEEE (2019), pp. 72-81 CrossRefView in ScopusGoogle
    Scholar [221] Mozo A., Ordozgoiti B., Gómez-Canaval S. Forecasting short-term
    data center network traffic load with convolutional neural networks PLoS One,
    13 (2) (2018), Article e0191939 CrossRefView in ScopusGoogle Scholar [222] Kumar
    J., Goomer R., Singh A.K. Long short term memory recurrent neural network (LSTM-RNN)
    based workload forecasting model for cloud datacenters Procedia Comput. Sci.,
    125 (2018), pp. 676-682 View PDFView articleView in ScopusGoogle Scholar [223]
    Zhang Q., Yang L.T., Yan Z., Chen Z., Li P. An efficient deep learning model to
    predict cloud workload for industry informatics IEEE Trans. Ind. Inform., 14 (7)
    (2018), pp. 3170-3178 CrossRefView in ScopusGoogle Scholar [224] Jeddi S., Sharifian
    S. A water cycle optimized wavelet neural network algorithm for demand prediction
    in cloud computing Cluster Comput., 22 (4) (2019), pp. 1397-1412 CrossRefView
    in ScopusGoogle Scholar [225] Bega D., Gramaglia M., Fiore M., Banchs A., Costa-Perez
    X. DeepCog: Optimizing resource provisioning in network slicing with AI-based
    capacity forecasting IEEE J. Sel. Areas Commun., 38 (2) (2019), pp. 361-376 Google
    Scholar [226] S. Levy, R. Yao, Y. Wu, Y. Dang, P. Huang, Z. Mu, P. Zhao, T. Ramani,
    N. Govindaraju, X. Li, et al., Predictive and Adaptive Failure Mitigation to Avert
    Production Cloud { } Interruptions, in: 14th USENIX Symposium on Operating Systems
    Design and Implementation, OSDI 20, 2020, pp. 1155–1170. Google Scholar [227]
    Feng H., Jiang Y., Niyato D., Zheng F.-C., You X. Content popularity prediction
    via deep learning in cache-enabled fog radio access networks 2019 IEEE Global
    Communications Conference, GLOBECOM, IEEE (2019), pp. 1-6 Google Scholar [228]
    Zhang W., Duan P., Yang L.T., Xia F., Li Z., Lu Q., Gong W., Yang S. Resource
    requests prediction in the cloud computing environment with a deep belief network
    Softw. - Pract. Exp., 47 (3) (2017), pp. 473-488 CrossRefView in ScopusGoogle
    Scholar [229] Yazdanian P., Sharifian S. E2LG: A multiscale ensemble of LSTM/GAN
    deep learning architecture for multistep-ahead cloud workload prediction J. Supercomput.,
    77 (10) (2021), pp. 11052-11082 CrossRefView in ScopusGoogle Scholar [230] Lee
    S.-s., Lee S. Resource allocation for vehicular fog computing using reinforcement
    learning combined with heuristic information IEEE Internet Things J., 7 (10) (2020),
    pp. 10450-10464 CrossRefView in ScopusGoogle Scholar [231] Ouhame S., Hadi Y.,
    Ullah A. An efficient forecasting approach for resource utilization in cloud data
    center using CNN-LSTM model Neural Comput. Appl., 33 (16) (2021), pp. 10043-10055
    CrossRefView in ScopusGoogle Scholar [232] Fu F., Kang Y., Zhang Z., Yu F.R.,
    Wu T. Soft actor–critic DRL for live transcoding and streaming in vehicular fog-computing-enabled
    IoV IEEE Internet Things J., 8 (3) (2020), pp. 1308-1321 CrossRefView in ScopusGoogle
    Scholar [233] Zhang X., Xiao Y., Li Q., Saad W. Deep reinforcement learning for
    fog computing-based vehicular system with multi-operator support ICC 2020-2020
    IEEE International Conference on Communications, ICC, IEEE (2020), pp. 1-6 Google
    Scholar [234] Van Huynh N., Hoang D.T., Nguyen D.N., Dutkiewicz E. Optimal and
    fast real-time resource slicing with deep dueling neural networks IEEE J. Sel.
    Areas Commun., 37 (6) (2019), pp. 1455-1470 CrossRefView in ScopusGoogle Scholar
    [235] Cheng Z., Min M., Liwang M., Huang L., Gao Z. Multiagent DDPG-based joint
    task partitioning and power control in Fog computing networks IEEE Internet Things
    J., 9 (1) (2021), pp. 104-116 CrossRefView in ScopusGoogle Scholar [236] Sami
    H., Otrok H., Bentahar J., Mourad A. AI-based resource provisioning of IoE services
    in 6G: A deep reinforcement learning approach IEEE Trans. Netw. Serv. Manag.,
    18 (3) (2021), pp. 3527-3540 CrossRefView in ScopusGoogle Scholar [237] Xu Z.,
    Tang J., Yin C., Wang Y., Xue G., Wang J., Gursoy M.C. ReCARL: resource allocation
    in cloud RANs with deep reinforcement learning IEEE Trans. Mob. Comput. (2020)
    Google Scholar [238] Chen M., Wang T., Zhang S., Liu A. Deep reinforcement learning
    for computation offloading in mobile edge computing environment Comput. Commun.,
    175 (2021), pp. 1-12 View PDFView articleGoogle Scholar [239] Tuli S., Ilager
    S., Ramamohanarao K., Buyya R. Dynamic scheduling for stochastic edge-cloud computing
    environments using a3c learning and residual recurrent neural networks IEEE Trans.
    Mob. Comput. (2020) Google Scholar [240] Hu Y., de Laat C., Zhao Z. Learning workflow
    scheduling on multi-resource clusters 2019 IEEE International Conference on Networking,
    Architecture and Storage, NAS, IEEE (2019), pp. 1-8 Google Scholar [241] Ghosal
    G.R., Ghosal D., Sim A., Thakur A.V., Wu K. A deep deterministic policy gradient
    based network scheduler for deadline-driven data transfers 2020 IFIP Networking
    Conference, Networking, IEEE (2020), pp. 253-261 View in ScopusGoogle Scholar
    [242] Sheng S., Chen P., Chen Z., Wu L., Yao Y. Deep reinforcement learning-based
    task scheduling in iot edge computing Sensors, 21 (5) (2021), p. 1666 CrossRefGoogle
    Scholar [243] Bian S., Huang X., Shao Z. Online task scheduling for fog computing
    with multi-resource fairness 2019 IEEE 90th Vehicular Technology Conference, VTC2019-Fall,
    IEEE (2019), pp. 1-5 CrossRefGoogle Scholar [244] Van Le D., Tham C.-K. A deep
    reinforcement learning based offloading scheme in ad-hoc mobile clouds IEEE INFOCOM
    2018-IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS, IEEE
    (2018), pp. 760-765 View in ScopusGoogle Scholar [245] Mnih V., Kavukcuoglu K.,
    Silver D., Rusu A.A., Veness J., Bellemare M.G., Graves A., Riedmiller M., Fidjeland
    A.K., Ostrovski G., et al. Human-level control through deep reinforcement learning
    Nature, 518 (7540) (2015), pp. 529-533 CrossRefView in ScopusGoogle Scholar [246]
    Hazarika B., Singh K., Biswas S., Li C.-P. DRL-based resource allocation for computation
    offloading in IoV networks IEEE Trans. Ind. Inform. (2022) Google Scholar [247]
    Cen J., Li Y. Resource allocation strategy using deep reinforcement learning in
    cloud-edge collaborative computing environment Mob. Inf. Syst., 2022 (2022) Google
    Scholar [248] Wu H., Zhang Z., Guan C., Wolter K., Xu M. Collaborate edge and
    cloud computing with distributed deep learning for smart city internet of things
    IEEE Internet Things J., 7 (9) (2020), pp. 8099-8110 CrossRefView in ScopusGoogle
    Scholar [249] Rafique H., Shah M.A., Islam S.U., Maqsood T., Khan S., Maple C.
    A novel bio-inspired hybrid algorithm (NBIHA) for efficient resource management
    in fog computing IEEE Access, 7 (2019), pp. 115760-115773 CrossRefView in ScopusGoogle
    Scholar [250] Abdelmoniem A.M., Canini M. DC2: Delay-aware compression control
    for distributed machine learning IEEE INFOCOM 2021-IEEE Conference on Computer
    Communications, IEEE (2021), pp. 1-10 CrossRefGoogle Scholar [251] Wu H., Wolter
    K., Jiao P., Deng Y., Zhao Y., Xu M. EEDTO: an energy-efficient dynamic task offloading
    algorithm for blockchain-enabled IoT-edge-cloud orchestrated computing IEEE Internet
    Things J., 8 (4) (2020), pp. 2163-2176 View in ScopusGoogle Scholar [252] Xue
    M., Wu H., Li R., Xu M., Jiao P. EosDNN: AN efficient offloading scheme for DNN
    inference acceleration in local-edge-cloud collaborative environments IEEE Trans.
    Green Commun. Netw., 6 (1) (2021), pp. 248-264 View in ScopusGoogle Scholar Cited
    by (54) UAVEC-FLchain: Distributed multi-regional jujube orchard joint yield estimation
    for secure agricultural-IoT applications 2024, Internet of Things (Netherlands)
    Show abstract A scalable modified deep reinforcement learning algorithm for serverless
    IoT microservice composition infrastructure in fog layer 2024, Future Generation
    Computer Systems Show abstract Modern computing: Vision and challenges 2024, Telematics
    and Informatics Reports Show abstract A comprehensive survey of energy-efficient
    computing to enable sustainable massive IoT networks 2024, Alexandria Engineering
    Journal Show abstract Energy efficient task scheduling based on deep reinforcement
    learning in cloud environment: A specialized review 2024, Future Generation Computer
    Systems Show abstract Multipoint communication using a fog-robotic coordinated
    nodal conveying system for wireless networks 2024, Journal of Network and Computer
    Applications Show abstract View all citing articles on Scopus Sundas Iftikhar
    is a Ph.D. Scholar at the School of Electronic Engineering and Computer Science,
    Queen Mary University of London. Prior to this, she held positions as Research
    associate and Lecturer at University of Kotli Azad Jammu and Kashmir, Azad Kashmir,
    Pakistan. She did her Masters in computer software engineering from National University
    of Science and Technology, Pakistan. Her research interest include Cloud computing,
    Fog computing, and resource Management in Fog. Sukhpal Singh Gill is a Lecturer
    (Assistant Professor) in Cloud Computing at the School of Electronic Engineering
    and Computer Science, Queen Mary University of London, UK. Prior to his present
    stint, Dr. Gill has held positions as a Research Associate at the School of Computing
    and Communications, Lancaster University, UK and also as a Postdoctoral Research
    Fellow at CLOUDS Laboratory, The University of Melbourne, Australia. Dr. Gill
    is serving as an Associate Editor in Wiley ETT and IET Networks Journal. He has
    co-authored 70+ peer-reviewed papers (with H-index 30+) and has published in prominent
    international journals and conferences such as IEEE TCC, IEEE TSC, IEEE TII, IEEE
    TNSM, IEEE IoT Journal, Elsevier JSS/FGCS, IEEE/ACM UCC and IEEE CCGRID. He has
    received several awards, including the Distinguished Reviewer Award from SPE (Wiley),
    2018, Best Paper Award AusPDC at ACSW 2021 and has also served as the PC member
    for venues such as PerCom, UCC, CCGRID, CLOUDS, ICFEC, AusPDC. His research interests
    include Cloud Computing, Fog Computing, Software Engineering, Internet of Things
    and Energy Efficiency. For further information, please visit http://www.ssgill.me.
    Chenghao Song received his B.Sc. degree from University of Electronic Science
    and Technology of China. Now he is a master student at University of Melbourne,
    he is also a visiting student at Shenzhen Institutes of Advanced Technology, Chinese
    Academy of Science. His research interest includes deep learning for cloud resource
    optimization. Minxian Xu is currently an associate professor at Shenzhen Institute
    of Advanced Technology, Chinese Academy of Sciences. He received the B.Sc. degree
    and the M.Sc. degree, both in software engineering from University of Electronic
    Science and Technology of China. He obtained his Ph.D. degree from the University
    of Melbourne in 2019. His research interests include resource scheduling and optimization
    in cloud computing. He has co-authored 30+ peer-reviewed papers published in prominent
    international journals and conferences, such as ACM Computing Surveys, IEEE Transactions
    on Sustainable Computing, IEEE Transactions on Cloud Computing, Journal of Parallel
    and Distributed Computing, Software: Practice and Experience, International Conference
    on Service-Oriented Computing. His Ph.D. Thesis was awarded the 2019 IEEE TCSC
    Outstanding Ph.D. Dissertation Award. He is member of CCF and IEEE. More information
    can be found at: http://www.minxianxu.info. Mohammad Sadegh Aslanpour is a Ph.D.
    student in Monash University and CSIRO’s DATA61, Australia. He obtained his M.Sc.
    degree in Computer Engineering Islamic Azad University, Tehran Science and Research
    (Sirjan) Branch, Iran in 2016. He also obtained his Bachelor and Associate degrees
    in Computer-Software in 2012 and 2010, respectively. From 2011 to 2019, he worked
    in the industry, IT Department of Jahrom Municipality, Iran as Software Engineer.
    He is also serving as Editorial Board Member and Reviewer for some international
    high-ranked journals. His research interests include orchestration of Cloud, Fog
    and Edge Computing, Serverless Computing, and Autonomous Systems. For more details,
    please visit his homepage: aslanpour.github.io. Adel N. Toosi is a senior lecturer
    (a.k.a. Associate Professor) at Department of Software Systems and Cybersecurity,
    Faculty of Information Technology, Monash University, Australia. Before joining
    Monash, Dr Toosi was a Postdoctoral Research Fellow at the University of Melbourne
    from 2015 to 2018. He received his Ph.D. degree in 2015 from the School of Computing
    and Information Systems at the University of Melbourne. His Ph.D. thesis was nominated
    for CORE John Makepeace Bennett Award for the Australasian Distinguished Doctoral
    Dissertation and John Melvin Memorial Scholarship for the Best Ph.D. thesis in
    Engineering. Dr Toosi made significant contributions to the areas of resource
    management and software systems for cloud computing. His research interests include
    Cloud/Fog/Edge Computing, Software Defined Networking, Green Computing and Energy
    Efficiency. Currently, he is working on green energy harvesting for Edge/Fog computing
    environments. For further information, please visit his homepage: http://adelndjarantoosi.info.
    Junhui Du received the B.Sc. degree in mathematics from the Nanjing University
    of Information Science Technology, China, in 2021. He is currently working towards
    the master’s degree in mathematics with the Center for Applied Mathematics, Tianjin
    University, China. His research interests include Internet of Things, deep learning,
    and mobile edge computing. Huaming Wu received the BE and MS degrees from the
    Harbin Institute of Technology, China, in 2009 and 2011, respectively, both in
    electrical engineering, and the Ph.D. degree with the highest honor in computer
    science at Freie Universität Berlin, Germany, in 2015. He is currently an associate
    professor with the Center for Applied Mathematics, Tianjin University, China.
    His research interests include model-based evaluation, wireless and mobile network
    systems, mobile cloud computing and deep learning. He is a senior member of IEEE
    and a member of ACM. For further information, please visit: http://huamingwu.cn.
    Shreya Ghosh is a Postdoctoral Research Fellow at The Pennsylvania State University,
    Pennsylvania, USA. She received her Ph.D. from the Department of Computer Science
    and Engineering, IIT Kharagpur, India in 2021. Her current research interests
    include machine learning, trajectory data mining, cloud computing and Internet
    of Spatial Things. Shreya is the recipient of the prestigious TCS fellowship.
    She is the member of AnitaB.org and member of IEEE and ACM. Deepraj Chowdhury
    is with department of electronics and communication, IIIT-Naya Raipur. He has
    Co-authored 4 research papers in different conferences like ICACCP 2021, INDICON
    2021. He also has 3 Indian copyright registered, and applied for 2 Indian Patent.
    He is also serving as a reviewer in Wiley Transaction on emerging Telecommunication
    Technologies. Muhammed Golec is a Ph.D. student in Computer Science at Queen Mary
    University. After his undergraduate graduation, he was awarded the Ministry of
    Education Scholarship, one of the most prestigious scholarships in his country.
    Within the scope of this scholarship, he graduated from Queen Mary University
    of London Computer Science with a high degree (Distinction). His master thesis
    was found successful and published in IEEE Consumer Electronics Magazine. He worked
    at Sisecam Company as an Electrical and Electronics Maintenance Engineer for one
    year to consolidate his academic skills in the private sector. His research interests
    include AI, Cloud Computing, and Security and Privacy. For further information,
    please visit https://www.linkedin.com/in/muhammed-golec-b55756119/. Mohit Kumar
    is Assistant Professor in the Department of Information Technology at Dr. B R
    Ambedkar National Institute of Technology, Jalandhar, India. He received his Ph.D.
    degree from Indian Institute of Technology Roorkee in the field of Cloud Computing,
    2018, and M.Tech degree in Computer Science and Engineering from ABV-Indian Institute
    of Information Technology Gwalior, India in 2013. He has received his B.Tech degree
    in Computer Science and Engineering from MJP Rohilkhand University Bareilly, 2009.
    His research topics cover the areas of Cloud computing, Fog computing, Edge Computing,
    Internet of Things, Soft Computing. He has published more than 20 research articles
    in reputed journals and international conferences. He has been Session chair and
    keynotes Speaker of many International conferences, webinars, FDP, STC in India.
    He has guided two M.Tech Thesis and guided 1 Ph.D. Scholar. He is an active reviewer
    of several reputed journals and international conferences. He is a member of the
    IEEE. Ahmed M. Abdelmoniem is a Lecturer (Assistant Professor) of Big Data and
    Distributed Systems at the School of EECS, QMUL and leads the Scalable Adaptive
    Yet Efficient Distributed (SAYED) Systems Research Group. He has a Ph.D. in Computer
    Science and Engineering from the Hong Kong University of Science and Technology
    (HKUST), Hong Kong. His research interests lie in the intersection of distributed
    systems, computer networks and machine learning. He is an investigator on several
    UK and international grants totaling nearly USD 650K in funding. His work appears
    in top-tier conferences and journals including NeurIPS, AAAI, MLSys, ACM EuroSys,
    IEEE INFOCOM, IEEE ICDCS, and IEEE/ACM Transactions on Networking. He is interested
    in supervising students with a background in Computer Networks, Machine Learning,
    Distributed Systems and Cloud/Edge Computing. Felix Cuadrado received the Ph.D.
    degree in telecommunications engineering from the Universidad Politécnica de Madrid
    (UPM), Spain, in 2009. He is currently a Senior Distinguished Fellow (Beatriz
    Galindo scheme) with the Universidad Politécnica de Madrid, a Visiting Reader
    at the Queen Mary University of London, and a fellow of the Alan Turing Institute.
    He has numerous publications in top tier journals and conferences, including IEEE
    TSC, IEEE TCC, Elsevier JSS, Elsevier FCGS, IEEE ICDCS, and WWW. His research
    explores the challenges arising from large-scale data-intensive applications through
    a combination of software engineering, distributed systems, and mathematical approaches.
    Blesson Varghese received the Ph.D. degree in computer science from the University
    of Reading, UK on international scholarships. He is a Reader (Associate Professor)
    in computer science at the University of St Andrews and an honorary faculty member
    at Queen’s University Belfast. He is the Principal Investigator of the Edge Computing
    Hub and was a Royal Society Short Industry Fellow to British Telecommunications
    plc. His interests include developing and analyzing novel parallel and distributed
    systems and applications that span the cloud–edge–device continuum. More information
    is available from http://www.blessonv.com. Omer Rana is a Professor of Performance
    Engineering in School of Computer Science & Informatics at Cardiff University
    and Deputy Director of the Welsh e-Science Centre. He holds a Ph.D. from Imperial
    College. His research interests extend to three main areas within computer science:
    problem solving environments, high performance agent systems and novel algorithms
    for data analysis and management. Moreover, he leads the Complex Systems research
    group in the School of Computer Science & Informatics and is director of the ‘Internet
    of Things’ Lab, at Cardiff University. He has published over 310 papers in peer-reviewed
    international conferences and journals. He serves on the Editorial Board of IEEE
    Transactions on Parallel and Distributed Systems, ACM Transactions on Internet
    Technology, and ACM Transactions on Autonomous and Adaptive Systems. He has served
    as a Co-Editor for a number of journals, including Concurrency: Practice and Experience
    (John Wiley), IEEE Transactions on System, Man, and Cybernetics: Systems, and
    IEEE Transactions on Cloud Computing. Schahram Dustdar is Full Professor of computer
    science heading the Research Division of Distributed Systems at the TU Wien, Austria.
    He is founding Co-Editor-in-Chief of the new ACM Transactions on Internet of Things
    (ACM TIoT) as well as Editor-in-Chief of Computing (Springer). He is an Associate
    Editor of IEEE Transactions on Services Computing, IEEE Transactions on Cloud
    Computing, ACM Transactions on the Web, and ACM Transactions on Internet Technology,
    as well as on the editorial board of IEEE Internet Computing and IEEE Computer.
    Dustdar is IEEE Fellow (2016), recipient of the ACM Distinguished Scientist Award
    (2009), the ACM Distinguished Speaker ward (2021), the IBM Faculty Award (2012),
    an Elected Member of the Academia Europaea: The Academy of Europe, where he is
    Chairman of the Informatics Section. In 2021 Dustdar was elected EAI Fellow as
    well as Fellow and President for the Asia-Pacific Artificial Intelligence Association
    (AAIA). Steve Uhlig obtained a Ph.D. degree in Applied Sciences from the University
    of Louvain, Belgium, in 2004. From 2004 to 2006, he was a Postdoctoral Fellow
    of the Belgian National Fund for Scientific Research (F.N.R.S.). His thesis won
    the annual IBM Belgium/F.N.R.S. Computer Science Prize 2005. Between 2004 and
    2006, he was a visiting scientist at Intel Research Cambridge, UK, and at the
    Applied Mathematics Department of University of Adelaide, Australia. Between 2006
    and 2008, he was with Delft University of Technology, the Netherlands. Prior to
    joining Queen Mary University of London, he was a Senior Research Scientist with
    Technische Universität Berlin/Deutsche Telekom Laboratories, Berlin, Germany.
    Since January 2012, he has been the Professor of Networks and Head of the Networks
    Research group at Queen Mary, University of London. Between 2012 and 2016, he
    was a guest professor at the Institute of Computing Technology, Chinese Academy
    of Sciences, Beijing, China. With expertise in network monitoring, large-scale
    network measurements and analysis, and network engineering, during his career
    he has been published in over 100 peer-reviewed journals, and awarded over £3million
    in grant funding. Awarded a Turing Fellow, Steve is also the Principal Investigator
    on a new project funded by the Alan Turing Institute: ‘Learning-based reactive
    Internet Engineering’ (LIME). He is currently the Editor in Chief of ACM SIGCOMM
    Computer Communication Review, the newsletter of the ACM SIGCOMM SIG on data communications.
    Since December 2020, Steve has also held the position of Head of School of Electronic
    Engineering and Computer Science. Current Research interests: Internet measurements,
    software-defined networking, content delivery. 1 Co-led this work with first author.
    View Abstract © 2022 Elsevier B.V. All rights reserved. Recommended articles Resource
    provisioning in edge/fog computing: A Comprehensive and Systematic Review Journal
    of Systems Architecture, Volume 122, 2022, Article 102362 Ali Shakarami, …, Mohammad
    Faraji-Mehmandar View PDF Fog computing: A taxonomy, systematic review, current
    trends and research challenges Journal of Parallel and Distributed Computing,
    Volume 157, 2021, pp. 56-85 Jagdeep Singh, …, Sukhpal Singh Gill View PDF An efficient
    edge computing management mechanism for sustainable smart cities Sustainable Computing:
    Informatics and Systems, Volume 38, 2023, Article 100867 Quy Vu Khanh, …, Abdellah
    Chehri View PDF Show 3 more articles Article Metrics Citations Citation Indexes:
    33 Captures Readers: 128 Mentions News Mentions: 1 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Internet of things (Amsterdam. Online)
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'AI-based fog and edge computing: A systematic review, taxonomy and future
    directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jproc.2018.2812836
  analysis: '>'
  authors:
  - O. Andrisano
  - Ilaria Bartolini
  - Paolo Bellavista
  - Andrea Boeri
  - Luciano Bononi
  - Alberto Borghetti
  - Armando Brath
  - G.E. Corazza
  - Antonio Corradi
  - Stefano de Miranda
  - Fabio Fava
  - Luca Foschini
  - Giovanni Leoni
  - Danila Longo
  - Michela Milano
  - Fabio Napolitano
  - Carlo Alberto Nucci
  - Gianni Pasolini
  - Marco Patella
  - Tullio Salmon Cinotti
  - Daniele Tarchi
  - Francesco Ubertini
  - Daniele Vigo
  citation_count: 41
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >Proceedings
    of the IEEE >Volume: 106 Issue: 4 The Need of Multidisciplinary Approaches and
    Engineering Tools for the Development and Implementation of the Smart City Paradigm
    Publisher: IEEE Cite This PDF Oreste Andrisano; Ilaria Bartolini; Paolo Bellavista;
    Andrea Boeri; Luciano Bononi; Alberto Borghetti; Armando Brath; Giovanni Emanuele
    Corazza All Authors 38 Cites in Papers 1640 Full Text Views Abstract Document
    Sections I. Introduction II. The Role of ICT Systems III. Integrated Infrastructures
    and Processes: Research at the University of Bologna IV. Sustainable Urban Mobility:
    Research at the University of Bologna V. Sustainable Districts and Urban Environments:
    Research at the University of Bologna Show Full Outline Authors Figures References
    Citations Keywords Metrics Footnotes Abstract: This paper is motivated by the
    concept that the successful, effective, and sustainable implementation of the
    smart city paradigm requires a close cooperation among researchers with different,
    complementary interests and, in most cases, a multidisciplinary approach. It first
    briefly discusses how such a multidisciplinary methodology, transversal to various
    disciplines such as architecture, computer science, civil engineering, electrical,
    electronic and telecommunication engineering, social science and behavioral science,
    etc., can be successfully employed for the development of suitable modeling tools
    and real solutions of such sociotechnical systems. Then, the paper presents some
    pilot projects accomplished by the authors within the framework of some major
    European Union (EU) and national research programs, also involving the Bologna
    municipality and some of the key players of the smart city industry. Each project,
    characterized by different and complementary approaches/modeling tools, is illustrated
    along with the relevant contextualization and the advancements with respect to
    the state of the art. Published in: Proceedings of the IEEE ( Volume: 106, Issue:
    4, April 2018) Page(s): 738 - 760 Date of Publication: 27 March 2018 ISSN Information:
    DOI: 10.1109/JPROC.2018.2812836 Publisher: IEEE I. Introduction The smart city
    paradigm has recently emerged as a revolutionary approach to tackle the challenges
    posed by modern urban areas [1]–[3]. Rapid urbanization, buildings aging, vehicular
    traffic, energy provision, personal safety, and data security are, among others,
    some of the issues that place serious strains on citizens’ quality of life and
    health as well as on the economic and environmental sustainability of human activities.
    The topic is certainly of importance as the population living in urban areas is
    expected to double by 2050 [5]. 1 In this paper, we will deliberately disregard
    health issues as this topic is addressed in the companion paper by Bertini et
    al. [4]. Sign in to Continue Reading Authors Figures References Citations Keywords
    Metrics Footnotes More Like This AI Applications in Smart City Employing Technology
    Adoption Model: Hofstede’s Cultural Perspective 2023 2nd International Conference
    for Innovation in Technology (INOCON) Published: 2023 Modelling Smart Cities Through
    Socio-Technical Systems 2020 IEEE International Smart Cities Conference (ISC2)
    Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: Proceedings of the IEEE
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: The Need of Multidisciplinary Approaches and Engineering Tools for the Development
    and Implementation of the Smart City Paradigm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s12008-023-01217-8
  analysis: '>'
  authors:
  - Abirami Raja Santhi
  - Padmakumar Muthuswamy
  citation_count: 47
  full_citation: '>'
  full_text: ">\nINDUSTRIAL PAPER\nInternational Journal on Interactive Design and\
    \ Manufacturing (IJIDeM) (2023) 17:947–979\nhttps://doi.org/10.1007/s12008-023-01217-8\n\
    and moved to neighboring cities to work in factories. It \nwas believed to have\
    \ started in Britain before spreading \nto the rest of Europe and America [2].\
    \ The late 1800s and \nthe early 1900s witnessed the onset of the second indus-\n\
    trial revolution which was characterized by the widespread \nscience-based inventions\
    \ such as mechanization of agri-\nculture, textile industries, railroads, machinery,\
    \ internal \ncombustion engines, electric power, and the iron and steel \nproduction\
    \ [229]. Vaclav Smil, a Czech Canadian scientist, \nprofessor, and policy analyst\
    \ called the period between 1867 \nand 1914 the “age of synergy” during which\
    \ the founda-\ntion for the 20th -century advancements was laid [3]. How-\never,\
    \ the drawback of both these industrial revolutions was \nassociated with the\
    \ poor and dangerous working conditions \nwhich resulted in the formation of labor\
    \ unions and factory \nregulations to safeguard workers.\nThe third industrial\
    \ revolution began in the 1950s with \nthe inventions of transistors and microprocessors\
    \ that paved \nthe way for automated production, which was supported \n1 Introduction\n\
    In the early 1800s, the world witnessed the beginning of \nthe industrial revolution\
    \ through which the agrarian soci-\nety shifted to industrialization and urbanization\
    \ [1]. Coal, \nwater, and steam were predominantly used to drive large \nsteam\
    \ engines that were used in the textile and manufactur-\ning industries. During\
    \ this time, people who worked on the \nfarms and spun textiles by hand abandoned\
    \ their villages \n \n Padmakumar Muthuswamy\nmpadmakumar86@gmail.com\nAbirami\
    \ Raja Santhi\nabiramirajasanthi@gmail.com\n1 \nCommunication Business Unit, ThinkPalm\
    \ Technologies Pvt. \nLtd, 600119 Chennai, India\n2 \nTechnology Center (KSSPL\
    \ GES), Kennametal India Ltd, \n560073 Bangalore, India\nAbstract\nThe Industrial\
    \ Revolution can be termed as the transformation of traditional industrial practices\
    \ into new techniques \ndominated by the technologies available at that time.\
    \ The first three industrial revolutions were driven respectively by \nmechanization,\
    \ electrification, and automation which had gradually transformed the agrarian\
    \ economy into a manufactur-\ning-based economy. It helped in enhancing the lifestyle\
    \ of the factory workers and the healthcare system, which improved \nthe overall\
    \ quality of living. The industries that adapted to the change witnessed a tremendous\
    \ increase in the production \nof goods, competitive advantage, and cross-border\
    \ business opportunities. While we are currently living to see the fourth \nindustrial\
    \ revolution (also known as Industry 4.0) unfolding around us, the world is poised\
    \ for the next big leap, the fifth \nindustrial revolution or Industry 5.0. Hence,\
    \ the first half of the paper outlines the enabling technologies of Industry 4.0\
    \ \nand conceptualizes how they would act as the foundation for the fifth industrial\
    \ revolution. The socio-economic challenges \nof the technologies and the need\
    \ for Industry 5.0 technologies are also discussed. The second half of the paper\
    \ outlines the \nprospective technologies of Industry 5.0, their potential applications\
    \ from the perspective of industry leaders and scholars \nand conceptualizes how\
    \ they can overcome the challenges of Industry 4.0. The definition of “sustainability\
    \ trilemma” a \nnew term coined by the authors, and the reasoning for calling\
    \ the next industrial revolution “Industry 4.0S” (another new \nterm) rather than\
    \ Industry 5.0 are also presented.\nKeywords Industrial revolution · Sustainability\
    \ · Artificial Intelligence · Internet of things · Collaborative robots · \nDigital\
    \ twins · Edge computing · Block chain · Cyber-Physical Systems\nReceived: 18\
    \ February 2022 / Accepted: 20 January 2023 / Published online: 5 February 2023\n\
    © The Author(s), under exclusive licence to Springer-Verlag France SAS, part of\
    \ Springer Nature 2023\nIndustry 5.0 or industry 4.0S? Introduction to industry\
    \ 4.0 and a peek \ninto the prospective industry 5.0 technologies\nAbirami Raja\
    \ Santhi1,2\n · Padmakumar Muthuswamy1,2\n1 3\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\nby various electronic devices.\
    \ Digital sensors and comput-\ners became a part of the shop floor. Although the\
    \ work-\ning conditions improved tremendously during this period, \nexploitation\
    \ of labor continued, cities became overcrowded, \nand widespread pollution and\
    \ environmental degradation \nbecame common across the world. The ongoing fourth\
    \ indus-\ntrial revolution which is commonly referred to as Industry \n4.0 or\
    \ 4IR is built upon the third industrial revolution which \nrelied on transistors,\
    \ sensors, and micro-electronics to gen-\nerate data. The term Industry 4.0 was\
    \ coined by German \nProfessor Wolfgang Wahlster, in the year 2011 at the Han-\n\
    nover Fair. It is the digital transformation of manufacturing \nindustries that\
    \ focuses on automation, interconnectivity, and \nreal-time process optimization\
    \ using enabling digital tech-\nnologies such as Internet of Things (IoT), Machine\
    \ Learning \n(ML), Artificial Intelligence (AI), Cyber-Physical Systems \n(CPS),\
    \ Cloud computing, Additive Manufacturing (AM), \nDigital twins,  Cybersecurity\
    \ and so on to communicate and \ncontrol each other [4, 5]. In other words, it\
    \ can be called \nthe computerization of manufacturing in which advanced \ndigital\
    \ technologies are married to industrial machines and \nprocesses. The interconnection\
    \ of these technologies into \nthe manufacturing setup is to achieve operational\
    \ efficiency, \nproductivity, and automation to the highest possible extent \n\
    [6]. This in turn creates a manufacturing ecosystem that is \nsmart, connected,\
    \ and driven by data.\nThe fundamental model of Industry 4.0 can be divided \n\
    into digital or computing technologies that are married \nwith the systems of\
    \ the physical world. While AI, ML, Big \nData, Cloud Computing, and cyber security\
    \ form a part of \nthe core computing technologies, other technologies such \n\
    as Automation and Robotics, IoT, CPS, and AM form the \nphysical part. These technologies\
    \ together realize the ben-\nefits of Industry 4.0 systems to enable agile, flexible,\
    \ and \non-demand manufacturing which is an essential part of \nsmart manufacturing\
    \ or smart factories. While there are \ntremendous advantages for the industries\
    \ in implementing \nthese technologies to achieve competitive advantage and \n\
    higher operational efficiency, there is widespread apprehen-\nsion about the potential\
    \ job loss for low-skilled laborers due \nto the high level of automation which\
    \ can cause economic \nimbalance and greater inequality in the society [7]. The\
    \ vari-\nous stages of the Industrial Revolution with their timeline, \ndriving\
    \ force, and technologies are shown in Fig. 1.\nWhile the world is still trying\
    \ to adapt and realize the \npotential of Industry 4.0, some industrialists and\
    \ scholars \nhave started envisioning and discussing the next Industrial \nRevolution,\
    \ Industry 5.0. If Industry 4.0 is about digitally \nconnecting machines to enable\
    \ a seamless flow of data and \nthe highest possible optimization, Industry 5.0\
    \ is believed \nto bring humans back into the game for collaboration and \nintroduce\
    \ the human touch to manufactured products while \nsimultaneously focusing on\
    \ sustainable manufacturing [8, \n9]. Elon Musk, a visionary entrepreneur and\
    \ CEO of one \nof the most highly automated factories in the world, Tesla \nInc.,\
    \ has acknowledged the downside of excessive automa-\ntion through his tweet in\
    \ April 2018, “Yes, excessive auto-\nmation at Tesla was a mistake. To be precise,\
    \ my mistake. \nHumans are underrated”. He went on to admit that robots \nhave\
    \ slowed down production, and humans, not machines, \nwere the solution. This\
    \ is in line with the predictions that the \nnext big thing would be the collaboration\
    \ between humans, \nrobots, and digital technologies.\n1.1 Need for the study\n\
    Despite the ongoing adaptation of Industry 4.0 in vari-\nous sectors and growing\
    \ discussions on Industry 5.0, this \npaper aims to provide a brief background\
    \ on the enabling \ntechnologies of Industry 4.0 and their application in vari-\n\
    ous functions of manufacturing industries, the prospective \nIndustry 5.0 technologies\
    \ and their potential applications \nFig. 1 The various stages of the Industrial\
    \ Revolution\n \n1 3\n948\nInternational Journal on Interactive Design and Manufacturing\
    \ (IJIDeM) (2023) 17:947–979\nand attempts to answer the following five research\
    \ ques-\ntions (RQ),\nRQ1. What are the enabling technologies of Industry 4.0\
    \ \nand their application in manufacturing industries?\nRQ2. What are the socio-economic\
    \ challenges of Indus-\ntry 4.0 technologies? Why must the industries overlook\
    \ \nthese technologies and upgrade to the prospective Industry \n5.0 technologies?\n\
    RQ3. What are the prospective technologies of Industry \n5.0 and their application\
    \ in manufacturing industries?\nRQ4. What is “sustainability trilemma” and how\
    \ does \nIndustry 5.0 technologies help to overcome it?\nRQ5. Why “Industry 5.0”\
    \ must be called “Industry \n4.0S”?\nThe above questions are answered through\
    \ various sec-\ntions of this article. The Sect. 2 introduces the various \nenabling\
    \ technologies of Industry 4.0 and their application \nin manufacturing industries\
    \ which aims to answer RQ1. The \nsocio-economic challenges of Industry 4.0 technologies\
    \ and \nthe reason to overlook these technologies and upgrade to \nthe prospective\
    \ Industry 5.0 technologies are explained in \nSect. 3 which answers RQ2. The\
    \ Sect. 4 of the article dis-\ncusses the predictions from industry leaders and\
    \ provides \nthe definitions of Industry 5.0 as quoted by industries and \nscholars.\
    \ The scholarly articles related to the prospective \nIndustry 5.0 technologies\
    \ and their application in manu-\nfacturing industries are discussed in Sect.\
    \ 5 which answers \nRQ3. The definition of “sustainability trilemma” a new \n\
    term coined by the authors, the sustainability dimension \nof Industry 5.0 technologies,\
    \ and how the industries can \nembrace sustainable development using the technologies\
    \ \nare discussed in Sect. 6 which answers RQ4. The key dif-\nference between\
    \ Industry 4.0 and Industry 5.0 technologies \nin terms of sustainable development\
    \ (economic, social, and \nenvironmental sustainability) forms the core ideology\
    \ of the \npaper. The article concludes with the justifications for call-\ning\
    \ the next industrial revolution “Industry 4.0S” rather than \n“Industry 5.0”\
    \ which answers RQ5.\n1.2 Methodology and structure\nTo understand the enabling\
    \ technologies of Industry 4.0, \nprospective Industry 5.0 technologies, and their\
    \ respective \napplication in various functions of manufacturing indus-\ntries,\
    \ a comprehensive literature review was performed. \nThe various search terms\
    \ combinations such as “Indus-\ntry 4.0”, “Industry 5.0\" and various technologies\
    \ such as \nArtificial Intelligence, Machine Learning, Digital twins, \nand so\
    \ on were used to find the relevant articles in Google \nScholar, Scopus, and\
    \ Web of Science. A preliminary screen-\ning of the articles to identify their\
    \ relevance to the study \nwas conducted by reading the title and abstract. The\
    \ main \nfindings and conclusions are summarized in a narrative or \ndescriptive\
    \ format. It should be noted that the study does not \ninclude all the articles\
    \ published on the topic but is focused \nonly to cover the latest and important\
    \ progress in the area, \nto summarize and provide an overview to the readers\
    \ on the \nstatus and future direction. The article follows a descriptive \nreview\
    \ approach, and the overall structure of the paper is \nshown in Fig. 2.\n2 Enabling\
    \ technologies of industry 4.0\n2.1 Artificial intelligence (AI)\nArtificial Intelligence\
    \ (AI) is an algorithm-based intelli-\ngence fed to machines to impart problem-solving,\
    \ decision-\nmaking skills, and perform human-like assignments [229]. \nIn other\
    \ words, AI make computers think and behave like \nhumans. It is a combination\
    \ of several digital and software \ntechnologies that acts as the driving force\
    \ of Industry 4.0. \nThe origin of AI can be traced back to the 1940s [10] and\
    \ \ntook the first big leap in the 1980s [11]. The subsequent \ninventions such\
    \ as statistical learning [12], Greedy learn-\ning algorithm [13], Recurrent Neural\
    \ Network [14], Graph \nTransformer Network [15], Deep Belief Network [16], and\
    \ \nConvolutional Neural Network [17] paved the way for vari-\nous new algorithms\
    \ that are currently been used and are \nbeing developed on a regular interval.\n\
    The application of AI in Industry 4.0 has shown great \npotential in predictive\
    \ maintenance, predictive analytics, \ninventory management, machine vision, industrial\
    \ robotics, \nand supply chain management [231]. Liu et al. [18] have \nreviewed\
    \ the application of various AI-driven algorithms \nsuch as k-NN, Naive Bayes,\
    \ ANN, and Deep Learning \nin fault diagnostics of rotating machinery that helped\
    \ in \nreducing the machine downtime, cost of maintenance, and \neliminating safety\
    \ threats. As each of the algorithms have \ntheir strengths and limitations such\
    \ as accuracy, speed, and \nrobustness, they propose to develop a hybrid intelligent\
    \ sys-\ntem to address future challenges.\nZhao et al. [19] have used Recurrent\
    \ Neural Networks \n(RNN) based algorithm as a predictive maintenance tool to\
    \ \nmonitor the health of the machine and successfully applied \nthe technique\
    \ to predict tool wear in a milling operation, and \nfault diagnosis in gearbox\
    \ and bearings. Wang et al. [20] \nhave applied Deep Belief Network (DBN), a data-driven\
    \ \ntechnique to build an accurate relationship between various \noperational\
    \ parameters used in a polishing operation and the \namount of material removed.\
    \ The same technique was also \nused by Deutsch [21] to predict the useful life\
    \ of a hybrid \nceramic bearing. As the various operations of manufactur-\ning\
    \ industries are nonlinear, stochastic, and have a lot of \n1 3\n949\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    Fig. 3 Opportunities of AI in a manufacturing system\n \nFig. 2 The structure\
    \ of the article\n \n1 3\n950\nInternational Journal on Interactive Design and\
    \ Manufacturing (IJIDeM) (2023) 17:947–979\nneuron to mimic the human brain. Machine\
    \ learning meth-\nods can be broadly classified into supervised and unsuper-\n\
    vised learning, although few literatures show two more \ncategories, semi-supervised\
    \ and reinforcement learning. \nThe classifications of ML and a few common algorithms\
    \ are \nshown in Fig. 4.\nML allows the connected systems to transfer data between\
    \ \nthem and improve the process on its own based on algo-\nrithms. The repeated\
    \ learning and optimization loop lead \nto unprecedented performance that converts\
    \ a traditional \nautomated factory into a smart factory. Condition monitor-\n\
    ing of machinery, health monitoring of structures, predictive \nmaintenance, predictive\
    \ quality control, and supply chain \nmanagement are some of the applications\
    \ of ML in the \nmanufacturing industry [231]. The data collected through \nvarious\
    \ sensors are processed using machine learning algo-\nrithms to recognize the\
    \ pattern of failure and even predict \nfuture failures which can eliminate the\
    \ routine manual \ninspections. By combining machine vision with ML algo-\nrithms,\
    \ real-time monitoring and identification of defective \nuncertainties many researchers\
    \ have tried different AI-based \ntechniques to enable the optimal material flow.\
    \ The poten-\ntial opportunities of artificial intelligence in the manufactur-\n\
    ing industry are shown in Fig. 3.\n2.2 Machine learning (ML)\nMachine learning\
    \ is a subset of artificial intelligence that \nuses data, algorithms, and software\
    \ to predict the outcome \naccurately through statistical learning. The historical\
    \ data is \nused to train the system to make predictions and improve \ngradually\
    \ to increase the prediction accuracy. Although \nmachine learning, deep learning\
    \ (DL), and neural network \nor artificial neural network (ANN) are all a subset\
    \ of artifi-\ncial intelligence, IBM classifies DL as a branch of ML, and \nANN\
    \ as a branch of DL. While traditional machine learn-\ning is dependent on human\
    \ teaching to learn, deep learning \ncan do it automatically. ANN has an input\
    \ node layer, out-\nput node layer, and numerous intermediate hidden layers. \n\
    Each node that is connected to the other acts as an artificial \nFig. 4 Supervised\
    \ and unsupervised machine learning algorithm\n \n1 3\n951\nInternational Journal\
    \ on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n(bot-controlled\
    \ chat messenger), computer vision (self-driv-\ning cars), recommendation engines\
    \ (internet search engines, \nand product search tools in e-commerce websites),\
    \ and \nautomated stock trading.\n2.3 Big data & analytics\nThe wide Variety and\
    \ Volume of data that comes at a high \nVelocity (also known as 3Vs) is Big Data.\
    \ In simple words, \nbig data is an enormous amount of data that is usually mea-\n\
    sured in petabytes or zettabytes. The advanced analytic tech-\nnique that is used\
    \ systematically to identify the unknown \npatterns behind the data and correlate\
    \ them with certain \nbehavior that helps to make decisions is Big Data Analytics.\
    \ \nResearchers have added additional “V”s to the original 3Vs \nto define the\
    \ characteristics of Big Data. For instance, Liao \net al. [31] defined it as\
    \ 4Vs (3V + Variability), while Gan-\ndomi and Haider [32] emphasized on 6Vs (4V\
    \ + Veracity \nand Value). Perhaps, with the emergence of artificial intelli-\n\
    gence, sensor-based connected systems, social networking, \nand digital communication\
    \ devices, a massive amount of \ndata is generated every second that requires\
    \ real-time pro-\ncessing to predict the outcome and make faster decisions.\n\
    The concept of Big Data can be traced back to the early \n1960s when the first\
    \ database management system and data \ncenters were created to collect and store\
    \ data. Over the \nyears with the widespread availability of high-speed inter-\n\
    net, more and more physical objects got connected to the \ninternet (IoT) which\
    \ started collecting an enormous amount \nparts can be performed automatically\
    \ without human inter-\nvention. Predicting consumer behavior and managing the\
    \ \nsupply chain is another area of the business that has a higher \nimpact on\
    \ profitability due to unsold inventory or lack of \ninventory, both of which\
    \ affect the manufacturer. Machine \nlearning algorithms have been successfully\
    \ used in demand \nforecasting and inventory management. A few success-\nful applications\
    \ of machine learning-based algorithms in a \nmanufacturing environment are shown\
    \ in Table 1.\nOther real-world common-man applications include \nspeech recognition\
    \ (Alexa, Siri), customer service \nTable 1 Successful applications of machine\
    \ learning based algorithm\nS#\nAuthors\nApplication\n1\nCao et al. [22]\nPredict\
    \ rolling force in hot rolling of \nelectrical steel\n2\nReddy et al. [23]\nPredict\
    \ temperature distributions in \nelectron beam–welded plates\n3\nShahani et al.\
    \ [24]\nPredict slab behavior in the hot roll-\ning process\n4\nHu et al. [25]\n\
    Predicting failure pressure of com-\nposite cylinders for hydrogen storage\n5\n\
    Kazan et al. [26]\nPrediction model for spring back in \nwipe-bending process\n\
    6\nUmbrello et al. [27] Predict optimal cutting conditions \nand residual stresses\
    \ in machining\n7\nJun et al. [28]\nStress prediction in SLA additive \nmanufacturing\
    \ process\n8\nPatil et al. [29]\nDeep learning algorithms for condi-\ntion monitoring\
    \ of milling tools\n9\nFahle et al. [30]\nMachine learning algorithms for \nvarious\
    \ manufacturing processes\nFig. 5 Various challenges associated with Big Data\n\
    \ \n1 3\n952\nInternational Journal on Interactive Design and Manufacturing (IJIDeM)\
    \ (2023) 17:947–979\nthe entire infrastructure is managed by professional IT ser-\n\
    vice providers, the business organizations and individuals \ncan get on-demand\
    \ access through heterogeneous internet \nservices. As shown in Fig. 6 the three\
    \ major service mod-\nels of cloud computing are, Software as a Service (SasS),\
    \ \nPlatform as a Service (PaaS), and Infrastructure as a Service \n(IaaS), and\
    \ the three major deployment models are public, \nprivate, and hybrid clouds.\n\
    The manufacturing sectors adopted cloud computing in \ntwo different ways-one\
    \ is the direct adaptation of digital \ntechnologies to enable “cloud computing\
    \ in manufacturing” \nand the other is “cloud manufacturing”. The integration\
    \ \nof distributed and distribution of integrated manufactur-\ning resources such\
    \ as software applications, machines, and \nof user and machine data. The development\
    \ of ML and AI \nfurther accelerated the growth of data creation which sky-\n\
    rocketed the volume of data that is handled and processed. \nSo basically, artificial\
    \ intelligence, machine learning, and \nbig data are all interconnected, and one\
    \ cannot exist inde-\npendently without the other. As the raw data doesn’t provide\
    \ \nany value, to unlock its potential, industries perform differ-\nent analyses\
    \ which are fundamentally classified as descrip-\ntive, inquisitive, predictive,\
    \ prescriptive, and preemptive \n[33]. Such analysis helps large organizations\
    \ to acquire \nand retain customers, targeted advertisements, develop new \nproducts,\
    \ optimize product prices based on customer behav-\nior, supply chain management,\
    \ risk management, and faster \ndecision making [229].\nHowever, storing and handling\
    \ a large volume of data \ncomes with its challenges. A report by Oracle shows\
    \ that \norganizations are struggling to handle the data as the vol-\nume of data\
    \ that is getting generated is doubling every year. \nIt is not just the storing\
    \ of data, but the real challenge lies \nin data curation. To be precise, cleaning\
    \ up unwanted data, \nprocessing, analyzing, and securing the data to give granu-\n\
    lar level access to get more insight and make a meaningful \ndecision out of it.\
    \ The various other challenges associated \nwith Big Data as classified by Akerkar\
    \ [34] and Zicari [35] \nare summarized in Fig. 5.\n2.4 Cloud computing and cloud\
    \ manufacturing\nThe delivery of networking and computing services over \nthe\
    \ internet is called cloud computing. As the services like \nserver, storage,\
    \ database, networking, analytics, and intel-\nligence are delivered through the\
    \ internet (the “cloud”) it \nis cost-effective and highly flexible. Reliability,\
    \ scalabil-\nity, and centralized management of data and software are \nsome of\
    \ the benefits of adopting cloud computing. While \nTable 2 The major categories\
    \ of research in cloud manufacturing\nCategory of \nresearch\nDescription\nResearch\
    \ studies\nArchitecture \nand platform \ndesign\nDetails the fundamental \nstructure\
    \ of the cloud \nmanufacturing system \nand its behavior.\nQu et al. [39], Wu\
    \ et \nal. [40], Liu et al. [41], \nYang et al. [42], Wang \net al. [43]\nResource\
    \ \ndescription and \ncapabilities\nTransformation of \nabstract capabilities\
    \ to \nformalized cloud manu-\nfacturing services.\nZhang et al. [44], Tao \n\
    et al. [45], Xu et al. \n[46], Xu et al. [47], Lu \net al. [48]\nService \nselection\
    \ and \ncomposition\nIntegration of distributed \nservices into a group that \n\
    can work together.\nLu et al. [49], Zhou et \nal. [50], Zheng et al. \n[51], Zhang\
    \ et al. [52], \nZhou et al. [53]\nResource \nallocation \nand service \nscheduling\n\
    Allocation of resources \nand scheduling to enable \nmulti-tasking.\nLiu et al.\
    \ [54], Wang et \nal. [55], Cao et al. [56], \nThekinen et al. [57], \nAkbaripour\
    \ et al. [58]\nService \nsearching and \nmatching\nSearch and match the ser-\n\
    vice based on customer \ndemand and fulfill the \nrequirement.\nYuan et al. [59],\
    \ Tai et \nal. [60], Cheng et al. \n[61], Sheng et al. [62], \nGuo et al. [63]\n\
    Fig. 6 Deployment and service \nmodels of cloud computing\n \n1 3\n953\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    connected systems from such malicious digital attacks. As \nmanufacturing is one\
    \ of the sectors with less regulated com-\npliance standards the vulnerability\
    \ to threats is much higher \nwhen compared to other sectors. Besides, the complexity\
    \ in \nunderstanding the security system, disparate technologies, \nand lack of\
    \ in-house expertise further intensify the threats to \nmanufacturing industries.\n\
    According to Honeywell’s “Industrial USB Threat \nReport 2021” which details the\
    \ consolidated findings from \nvarious industries across more than 60 countries,\
    \ threats \nthat are designed to take advantage of removable storage \ndevices\
    \ such as USB drives have increased from 19% to \n2019 to 37% in 2020. Besides,\
    \ 79% of the threats were \ncapable of completely disrupting the operational technol-\n\
    ogy. The report also outlines that the usage of removable \nUSB drives has gone\
    \ up by 30% which shows the level \nof security exposure that these industries\
    \ are facing [64]. \nAnother report from IBM shows that the average cost of a\
    \ \ndata breach has gone up from USD 3.86 M to USD 4.16 M \nglobally which is\
    \ an all-time high in the past 17 years of the \nreport’s history [65]. Ransomware,\
    \ insider attacks, server \naccess, theft of credentials, remote access trojans,\
    \ business \nemail compromise, spam, web script, and misconfiguration \nare some\
    \ of the types of threats that are commonly targeted \nat industries. The eight\
    \ major widely accepted cybersecurity \ndomains to protect against theft of information\
    \ as outlined \nby IBM are shown in Fig. 7.\nOver the past few years, numerous\
    \ agencies have come \nup with guidelines containing documents to assist industries\
    \ \nwith procedures to address cybersecurity-related issues. \nSome of those guidelines\
    \ for the businesses that are in the \nprocess of moving towards Industry 4.0\
    \ practices can be \nseen in Table 3.\nResearchers have applied various frameworks\
    \ and meth-\nodologies to deal with cybersecurity-related threats in an \nIndustry\
    \ 4.0 environment. Some of them are SDN-based \ncapabilities used for design,\
    \ manufacturing, and fulfillment \nto manage a product’s manufacturing lifecycle\
    \ is cloud \nmanufacturing. The concept of “design anywhere and man-\nufacture\
    \ anywhere” that was conceptualized in the early \n2000s can be accomplished by\
    \ cloud manufacturing [36]. It \nprovides manufacturers the benefit of high efficiency,\
    \ cost-\neffectiveness, and flexibility in managing their processes. \nThe modern\
    \ digital and computing technologies such as \nIoT, Radio-Frequency Identification\
    \ (RFID), sensors, \nGPS, cyber-physical systems, and cloud computing come \n\
    together as enablers of cloud manufacturing service [37]. \nDesign engineers get\
    \ access to various design resources \nwhenever and wherever they get access to\
    \ the internet \nwhich leads to faster lead time while the manufacturing \nengineers\
    \ can access their resources anytime and anywhere \nto enable uninterrupted manufacturing\
    \ even from outside \nthe factory premises. The efficiency of the supply chain\
    \ can \nbe increased, and the costs lowered by storing parts digitally \nand manufacturing\
    \ them only when required [38].\nThe detailed literature review has shown that\
    \ the numer-\nous studies performed by various researchers on cloud man-\nufacturing\
    \ can be grouped into five broad categories. They \nare studies on architecture\
    \ and platform design, resource \ndescription and capabilities, service selection\
    \ and composi-\ntion, resource allocation and service schedule, and service \n\
    searching and matching [37]. A brief overview of the studies \nis shown in Table\
    \ 2.\n2.5 Cyber security\nAs many industries have started embracing or preparing\
    \ to \nembrace Industry 4.0, more and more isolated systems are \ngetting connected\
    \ to the internet which increases the vulner-\nability of them getting exposed\
    \ to potential security risks \nsuch as, data theft, malware, denial of service,\
    \ and device \nhacking. Cyber security is the technique to defend the \nFig. 7\
    \ Various cybersecurity domains\n \n1 3\n954\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\ncyber-attack on Ukraine’s\
    \ power grid infrastructure in 2015 \nthrough a malware-infected email was the\
    \ first known attack \non the power infrastructure which shows the vulnerability\
    \ \nof physical industrial assets [83]. The various risks, security \nrequirements,\
    \ and the impact of threats to the businesses as \noutlined by Corallo et al.\
    \ [84] are summarized in Table 4.\nThe studies show that although implementing\
    \ digi-\ntal technologies on a factory shopfloor has a huge poten-\ntial, businesses\
    \ must be cautious of the increasing cyber \nthreats, and they must develop and\
    \ invest in suitable data \nsecurity programs to get the real benefits of Industry\
    \ 4.0 \ntransformation.\n2.6 Automation and robotics\nBoth automation and robotics\
    \ go hand in hand as their pur-\npose is to work independently and efficiently\
    \ in the indus-\ntries to improve productivity. By connecting robots to a \ncentralized\
    \ computer system, their activities can be con-\ntrolled which would help them\
    \ to complete the task without \nthe intervention of humans [85]. With the advancements\
    \ in \nmachine vision techniques, they take the advantage of high-\nresolution\
    \ cameras attached to the robotic arms to track \nthe movement of objects in real-time\
    \ and perform visual \nassignments such as identifying and removing defective\
    \ \nparts from the production line. Although automation and \nrobotics are used\
    \ in industries for many decades, the robots \nthat would be used in Industry\
    \ 4.0 environment would have \nadvanced sensors, control algorithms, data communica-\n\
    tion channels, navigation and guidance systems, and data \nprocessing abilities\
    \ [86]. The major differentiating factors \nbetween the earlier generation and\
    \ current generation robots \nare their capabilities to self-learn, flexibility\
    \ to perform a \nwide variety of operations, and agility which are supported \n\
    by the various complex algorithm-based neural networks.\nThe significant applications\
    \ of automation and robotics \nin Industry 4.0 includes performing complex and\
    \ dangerous \njobs [87], enabling uninterrupted production [88], improv-\ning\
    \ productivity and reliability [89], extracting data [90], \nworking in unpleasant\
    \ environments [91], perform monoto-\nnous and difficult tasks [92], deliver higher\
    \ efficiency [93], \nworking for long hours [94], material handling [95], cus-\n\
    tomer service [96], surveillance [97], manage assembly \nlines and fabrication\
    \ [98, 99] which all are supported by \nvarious digital technologies.\nRobotic\
    \ Process Automation (RPA) is another technol-\nogy that has enormous benefits\
    \ and use-cases in automat-\ning various processes of an organization, especially\
    \ in \nERP-related (Enterprise Resource Planning) activities. \nVarious technologies\
    \ such as AI algorithms, text recogni-\ntion, and language processing techniques\
    \ come together to \nachieve this goal. RPA which is also referred to as a “digital\
    \ \n(software-defined networks) [76], DevOps-based approach \n[77], attack tree\
    \ approach [78], hierarchical model [79], \nimpact assessment model [80], and\
    \ vulnerability assessment \nbased on SCADA [81].\nA recent study shows that businesses\
    \ that are affected by \ncyber-attacks have resulted either in the closure of\
    \ produc-\ntion lines, loss in man-hours, enormous financial damage, \nor all\
    \ the above. Apart from financial losses, it could also \nlead to loss of reputation,\
    \ losing customer confidence, and \neven judicial actions. According to a study\
    \ by IBM, manu-\nfacturing industries moved to the 2nd position in 2020 (the \n\
    financial sector is at the 1st position) from its 8th position \nin 2019 in the\
    \ list of most targeted industries [82]. This is \nprimarily due to the increase\
    \ in adaptation to digital tech-\nnologies and connected devices. Some typical\
    \ examples \nof cyber-attacks on big manufacturing industries include \nwebsite\
    \ breaches in OXO International and Hanesbrands \nInc., a whaling attack targeting\
    \ the accounting department \nof FACC AG, ransomware attacks on Norsk Hydro, Visser\
    \ \nPrecision, and Renault-Nissan, and an internet worm infec-\ntion on Daimler\
    \ Chryslers’ manufacturing units. Besides, a \nTable 3 Cybersecurity guidelines\n\
    Document\nIndustrial asset\nReference\nISA/IEC 62,443\nIndustrial Automation and\
    \ Con-\ntrol Systems (IACS)\nRef [66]\nIACS Cybersecurity \nCertification Frame-\n\
    work (ICCF)\nIndustrial Automation and Con-\ntrol Systems (IACS)\nRef [67]\nANSSI\
    \ Cybersecurity \nfor Industrial Control \nSystems\nIndustrial Control Systems\
    \ (ICS)\nRef \n[68–70]\nAPI Standard 1164\nSupervisory Control and Data \nAcquisition\
    \ (SCADA)\nRef [71]\nICS Security \nCompendium\nIndustrial Control Systems (ICS)\n\
    Ref [72]\nCatalog of Control \nSystems Security\nControl Systems of critical infra-\n\
    structures and key resources\nRef [73]\nICS-CERT \nAssessments\nIndustrial Control\
    \ Systems (ICS)\nRef [74]\nNIST 800 − 82\nIndustrial Control Systems (ICS)\nRef\
    \ [75]\nTable 4 Impact of cyberattacks\nRisk\nSecurity \nrequirements\nBusiness\
    \ impact\nAvailability\nAvailability \nof data when \nrequired\nDenial of service,\
    \ poor \nproduct quality, and loss of \nproduction time\nIntegrity\nProtection\
    \ of data \nfrom alterations\nDamage to critical physical \ninfrastructure, unsafe\
    \ work \nconditions for workers, and \npoor product quality\nConfidentiality\n\
    Protection of \nconfidential data \nfrom leaks\nLoss of trade secrets and \ncompetitive\
    \ advantage, \ndamage to reputation, \nbreach of data protection \ncontracts with\
    \ partners\n1 3\n955\nInternational Journal on Interactive Design and Manufacturing\
    \ (IJIDeM) (2023) 17:947–979\na model to predict the wear of a cutting tool and\
    \ failure of \nspindle motor bearing. Researchers have shown that IoT \nsystems\
    \ can be used in predictive maintenance of machine \ntools [106], anomaly detection\
    \ [107], and error prediction \nin machine centers [108]. The IoT system can also\
    \ be used \nin hazardous work environments such as nuclear power \nplants, chemical\
    \ factories, wastewater treatment, and manu-\nfacturing industries to collect\
    \ critical machine data through \nappropriate sensors that can be used to monitor\
    \ and con-\ntrol production and operation. However, as more and more \n“things”\
    \ are connected, the complexity of protecting sensi-\ntive information increases\
    \ manyfold that needs novel safety \nalgorithms [109].\n2.8 Cyber-physical systems\
    \ (CPS)\nA cyber-physical system is an intelligent computer system \nthat integrates\
    \ sensing, computation, control, and network-\ning capabilities into physical\
    \ objects, and connects them \nto the Internet and to each other. While IoT and\
    \ CPS look \nmuch similar, there is one major difference between them. \nIoT refers\
    \ to a physical object embedded with critical sen-\nsors (sensing) that can gather\
    \ data and transmit (network-\ning) it through the internet. On the other hand,\
    \ apart from \nthe sensors and internet, a CPS contains components that \nare\
    \ required for computation and control that make the sys-\ntem highly efficient.\
    \ The diverse application area of CPS \nincludes aviation, self-driving cars,\
    \ energy, disaster and \nemergency management, healthcare, smart manufacturing,\
    \ \nand smart city.\nIn the case of smart manufacturing, CPS can be imple-\nmented\
    \ in a factory for monitoring production and assembly \nlines, monitoring of assets,\
    \ predictive analysis, and supply \nchain management. A typical CPS framework\
    \ has a physi-\ncal layer that contains the physical sensory, communication, \n\
    and data processing modules. Various physical components \nsuch as sensors, GPS,\
    \ RFID, machine vision camera, and \nIoT modules recognize and generates an enormous\
    \ amount \nof real-time data about their surroundings and send it to the \ncommunication\
    \ layer. The middle layer or the communica-\ntion layer is responsible for the\
    \ real-time transfer of data \nfrom the physical layer to the cyber computation\
    \ layer. The \nlayer has various communication channels such as local \narea network\
    \ (LAN), wide area network (WAN), Bluetooth, \nWi-Fi, switches, and routers. It\
    \ creates a channel between \nexternal applications, the physical layer, and the\
    \ cyber layer. \nThe computation layer acts as the third layer that is respon-\n\
    sible for the intelligent processing of data received from the \nphysical layer.\
    \ It also performs supervisory control, makes \ndecisions based on the data, and\
    \ sends commands back to \nthe physical layer [110]. The guidelines of a cyber-physical\
    \ \nworker” is a software program that is used in the automa-\ntion of high volume,\
    \ routine, and repeatable production \ntasks to boost the overall productivity\
    \ of an organization. \nAutomatic singing-in into software applications, data\
    \ edit-\ning and migration, autoreply to emails, filling online forms, \nreport\
    \ generation, and automatic invoicing are a few appli-\ncations of RPA [100].\
    \ The major disadvantage of RPA is that \nit works based on a set of simple rules\
    \ and is incapable of \nusing data or analytical models to work in complex, data-\n\
    intensive decision-making systems. However, combining \nRPA with ML can overcome\
    \ this to some extent [101].\n2.7 Internet of things (IoT) and industrial internet\
    \ \nof things (IIoT)\nThe network of various physical objects (“things”) inte-\n\
    grated with sensors, software, and digital technologies that \nallow them to connect\
    \ and communicate with each other \nusing the internet is termed as Internet of\
    \ Things (IoT). The \nkey difference between IoT and IIoT lies in the “things”\
    \ that \nare connected to the internet. IoT refers to the connected \ndevices\
    \ or systems that are used in general consumer appli-\ncations such as consumer\
    \ electronics, smart home appli-\nances, personal health tracking devices, etc.,\
    \ while IIoT \nrefers to the connected industrial devices or systems used \nto\
    \ support industrial operations like manufacturing, quality \ncontrol, and supply\
    \ chain and logistics.\nThe entire concept of the fourth industrial revolution\
    \ is \nbuilt around establishing a communication channel through \nthe internet\
    \ that allows a seamless two-way flow of data \nbetween human-machine and machine-machine\
    \ [102]. The \nsmall size and cost-efficient IoT sensors would allow the \nconnection\
    \ of more physical objects that make the system \nwork efficiently, smartly, and\
    \ safely [103]. In a manufac-\nturing system, the data from these sensors such\
    \ as heat, \ntemperature, pressure, moisture level, humidity, vibration, \nfriction,\
    \ and movement are collected real-time to build a \nstatistical relationship with\
    \ the product performance. From \nreducing the manufacturing cost to assisting\
    \ in preventive \nmaintenance and providing a safer work environment the \npotential\
    \ of IoT is enormous in future smart factories. Stop-\nping a production line\
    \ to fix repairs would result in loss of \nproduction time and affect the dependent\
    \ assembly lines. \nHence, identifying the malfunction in advance using appro-\n\
    priate sensors would support manufacturing by eliminating \nfailures which in\
    \ turn results in saving.\nZhang et al. [104] developed models based on Long \n\
    Short-Term Memory (LSTM) network and used 21 sen-\nsors placed at different locations\
    \ to collect and monitor the \nhealth of an aero propulsion engine system and\
    \ monitor its \nperformance and predict its degradation. Using appropriate \n\
    sensors and AI-based algorithms Lee et al. [105] presented \n1 3\n956\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    the manufacturing industry to print highly complex func-\ntional parts in any\
    \ required material with very tight preci-\nsion and good aesthetics which are\
    \ critical in industries such \nas aerospace, biomedical, automotive, manufacturing,\
    \ and \nconsumer goods [115]. While conventional additive manu-\nfacturing is\
    \ already used by many manufacturing industries, \nthe current interest is on\
    \ the system’s flexibility in adapt-\ning to different challenging applications\
    \ such as printing of \nsmart materials, printable electronics, printable assemblies,\
    \ \nand hydraulic components.\nSoft robotics is one of the emerging fields in\
    \ robotics that \nis used to manufacture robots from highly compatible flex-\n\
    ible materials such as thermoset elastomers that can mimic \nhuman motion, and\
    \ additive manufacturing plays a vital role \nas the key technology enabler [118].\
    \ Some of the applica-\ntions of soft robots in a manufacturing setup include\
    \ soft \nactuators [119], stiffness-controllable robot links [120], \ninflatable\
    \ robotic arms [121], continuum robots [122], and \nadaptive graspers [123]. The\
    \ smart materials (shape mem-\nory alloys and polymers) printed by additive manufactur-\n\
    ing technique develop the ability to be flexible and react to \ntheir surroundings\
    \ by changing their shapes or properties \nwhich gives rise to a new technique\
    \ called “4D printing” \n[124]. MacCurdy et al. [125] have designed and 3D printed\
    \ \na novel functional hydraulic force transmitting mechanism \npre-filled with\
    \ hydraulic liquid that eliminates the need for \nassembly. In the studies conducted\
    \ by Ota et al. [126] and \nMacdonald et al. [127] they have demonstrated the\
    \ possibil-\nities of 3D printing electronics components such as LEDs, \ncircuits,\
    \ temperature sensors, and related control electron-\nics. The other latest addition\
    \ to the AM portfolio is 5D print-\ning in which the printing head gets additional\
    \ degrees of \nfreedom to print objects from 5 different axis (similar to \n5-axis\
    \ machining centers), and hybrid manufacturing that \ncombines the possibilities\
    \ of performing both additive and \nsystem based on 5C architecture as proposed\
    \ by researchers \n[111, 112] are shown in Fig. 8.\nSome of the successful applications\
    \ of CPS in a manu-\nfacturing environment includes CPS modules for a machin-\n\
    ing cell, plug and work applications, automatic process plan \ngeneration in a\
    \ dynamic manufacturing unit, CPS based \nautomatic process planning and maintenance\
    \ system, adap-\ntive scheduling and alternative routing, inter-company data \n\
    transfer, and set up pilot systems for research and devel-\nopment activities\
    \ [113]. Despite their tremendous benefits, \nindustries and researchers are also\
    \ wary about the associated \nchallenges and risks. Especially the challenges\
    \ such as the \ncomplexities in design, testing, and validating the holistic \n\
    functionality of the system, and implementation challenges. \nBesides the safety\
    \ and security issues that are typical to any \nsystem connected over the internet\
    \ like the threat to data \nprivacy and confidentiality, data corruption, and\
    \ malware \nare valid for a CPS as well [114].\n2.9 Additive manufacturing (3D\
    \ printing, \n4Dprinting, and 5D printing)\nAdditive Manufacturing (AM) is a technique\
    \ of printing \n3-dimensional solid objects by building a layer of materi-\nals\
    \ one over the other using CAD models [230]. Although \nthe technology was developed\
    \ in the early 1980s it started \ngaining traction in the last decade with the\
    \ adoption of sup-\nporting digital and intelligent technologies in the industries\
    \ \n[115]. As mass customization is one of the core contexts \nof Industry 4.0\
    \ [116], it is critical in developing unconven-\ntional manufacturing processes\
    \ like AM which is expected \nto become a key technology driver to fabricate highly\
    \ \nsophisticated customized products with advanced features \nthat are otherwise\
    \ not possible to produce with conventional \nmanufacturing processes [117]. Over\
    \ the past few decades, \nthe AM technology has matured which currently allows\
    \ \nFig. 8 5C architecture of a CPS\n \n1 3\n957\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\nthe huge pressure on the\
    \ low and medium-skilled laborers \ncould intensify wage disparity. The study\
    \ also warns that \nsoon AI-enabled robots can replace even high-skilled pro-\n\
    fessions such as software programmers, doctors, and archi-\ntects [130]. While\
    \ AI and robots continuously encroaching \nthe fields that were previously thought\
    \ exclusive to humans, \nand UN data estimates a 6 billion working-age population\
    \ \nby 2050, the increase in threat to human employment is \nhighly likely.\n\
    3.1.2 Loss of craftsmanship\nSince the 1980s the chess competition between human\
    \ chess \nmasters versus computers is a battle that was keenly watched \nby more\
    \ technocrats rather than sports enthusiasts which is \nbelieved as a demonstration\
    \ and successful use case of AI \nalgorithms. Besides, there are numerous successful\
    \ exam-\nples of AI beating humans in visual recognition, reading \ncomprehension,\
    \ complex strategy games, and autonomous \ncars. Some recent demonstrations show\
    \ that AI can even \nwrite original melodies, and even beat experienced lawyers\
    \ \nin accurately identifying issues with legal contracts [131]. \nIn 2016, an\
    \ attempt was made through an AI project named \n“The Next Rembrandt” to replicate\
    \ the artwork of one of the \ngreatest painters, printmakers, and draughtsman\
    \ of the 17th \ncentury, Rembrandt. By analyzing and studying the paint-\nings\
    \ pixel by pixel, AI learned Rembrandt’s style and repro-\nduced a highly convincing\
    \ masterpiece [132]. Recently, the \nAI went further and restored the missing\
    \ pieces of one of \nRembrandt’s paintings [133]. The above few examples of \n\
    AI’s capabilities show that AI technologies can compete \nwith humans not only\
    \ in labor-intensive and monotonous \njobs but also in creative, artistic, niche,\
    \ human-only jobs.\n3.1.3 Wage disparity\nThe rapid adoption of new technologies\
    \ over the past few \ndecades has significantly affected the wage difference \n\
    between different labor categories. A recent study [134] by \nthe World Bank highlights\
    \ the polarization of the labor mar-\nket with increasing wage disparity and a\
    \ steady decline in \nthe income of medium-skilled occupations since the 1990s.\
    \ \nThis was partly attributed to the rise of information tech-\nnologies and\
    \ the cognitive job market which has increased \nthe wages of high-skilled labor.\
    \ Acemoglu and Restrepo \n[135] studied the impact of automation on the US labor\
    \ \nmarket and reported that the employment and wages of low-\nskilled labor are\
    \ highly affected, but the high-skilled labor \nis unaffected. The threat of automation\
    \ and AI has once \nagain brought the old idea of universal basic income which\
    \ \nensures a regular and guaranteed sum of money to every \nadult irrespective\
    \ of income or financial condition [136].\nsubtractive manufacturing in a single\
    \ setup to gain the ben-\nefits of both the technologies [128].\n3 Socio-economic\
    \ challenges of industry 4.0\nBefore the Industrial Revolution, communities and\
    \ societ-\nies were diversified with varieties of occupations, some of \nthem\
    \ are physically demanding while others depend on the \ncreativity and intellectuality\
    \ of the human mind. Although \nthe focus of the industrial revolutions was to\
    \ improve pro-\nductivity and product quality, it has also eliminated humans \n\
    from the hazardous and unpleasant working environment. \nThe introduction of automation\
    \ and robots into the indus-\ntries helped humans to channel their focus on jobs\
    \ that \ndemands decision-making, problem-solving, intuition, \npersuasion, or\
    \ cognitive skills, while the heavy lifting was \ndone by the machines. Especially,\
    \ various artistic occupa-\ntions that are based on expressing human creativity\
    \ such \nas poetry, story, painting, sculpture, architecture and so on \nwhich\
    \ are exclusive to humans are considered a prohibited \nzone for machines. However,\
    \ studies show that recent tech-\nnology such as AI has the potential even to\
    \ challenge and \neven surpass humans in the cognitive space. Hence, apart \n\
    from the technical challenges such as handling exponential \ndata growth, interoperability,\
    \ data sensitivity, data security, \ncost, high processing power and energy consumption\
    \ the \nother critical challenges like human and social factors that \ncan be\
    \ disrupted by Industry 4.0 technologies are discussed \non this section.\n3.1\
    \ Challenges of industry 4.0\n3.1.1 Unemployment\nStudies have shown that unemployment\
    \ is predominantly \ninfluenced by major social events such as the industrial\
    \ \nrevolution, the great depression, and world wars. Although \nthe earlier industrial\
    \ revolutions have increased the demand \nfor labor which led to urbanization\
    \ and population concen-\ntration, it also resulted in inequality in the rural\
    \ and urban \nemployment market [129]. The machines and robots of the \nearlier\
    \ industrial revolution assisted humans by providing \ntheir muscle power to help\
    \ industries improve productivity \nwhile leaving brainpower to humans. But the\
    \ real threat of \nIndustry 4.0 technologies is the challenge of AI’s capability\
    \ \nto autonomously solve complex problems and attempting \nto substitute even\
    \ human intelligence. A study by the UN \nDepartment of Economic and Social Affairs\
    \ (DESA) shows \nthat the risk of job loss due to automation can be over 80% \n\
    in the low- and medium-income group. While the high-\nskilled labor stands to\
    \ gain from the implementation of AI, \n1 3\n958\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\nThe European Commission\
    \ has termed Industry 5.0 as \nthe vision of industries to think beyond increasing\
    \ produc-\ntivity and efficiency and contribute to society by placing \nthe workers\
    \ at the center of the production process. The \nemphasis was on research and\
    \ innovation that is sustainable, \nhuman-centric, and resilient [137].\nEsben\
    \ H. Østergaard, CTO of Universal Robots has \ntermed Industry 5.0 as the transformation\
    \ of mass cus-\ntomization enabled by Industry 4.0 technologies to mass \npersonalization\
    \ and hence labeled it as the “human touch” \nrevolution. He also forecasts a\
    \ return of the pre-industrial \nway of manufacturing that is supported by technologies\
    \ in \nwhich humans play a critical role rather than being alien-\nated. The importance\
    \ of bringing humans back to the manu-\nfacturing loop to provide personalization\
    \ and human touch \nwas reiterated through collaborative robots or cobots [138].\n\
    Nexus Integra, a service provider in Big Data and \nIndustrial IoT platforms defines\
    \ Industry 5.0 as “the next \nstep, which involves leveraging the collaboration\
    \ between \nincreasingly powerful and accurate machinery and the \nunique creative\
    \ potential of the human being” [139].\nThe Global Electronic Services repairs\
    \ and services \ndefine Industry 5.0 as “the revolution in which man and \nmachine\
    \ reconcile and find ways to work together to improve \nthe means and efficiency\
    \ of production” [140].\nLevity, a service provider in Artificial Intelligence\
    \ terms \nIndustry 5.0 as something that “adds a personal human \ntouch to the\
    \ two main pillars of Industry 4.0, automation \nand efficiency. It refers to\
    \ people working alongside robots, \nsmart machines, and technologies.” They have\
    \ also pointed \nout that the core element of Industry 5.0 would be the per-\n\
    sonal touch which cannot be provided by technologies \n[141].\nFrost & Sullivan\
    \ calls Industry 5.0 as “a model of the \nnext level of industrialization characterized\
    \ by the return \nof manpower to factories, distributed production, intelligent\
    \ \nsupply chains, and hyper customization, all aimed to deliver \na tailored\
    \ customer experience time after time” [142].\nAssociation for Advancing Automation\
    \ has predicted \nthat the need for greater customization and personaliza-\ntion\
    \ would drive the fifth industrial revolution that would \nrevolve around a larger\
    \ collaboration between machines and \nhumans to realize the dual benefits of\
    \ cognitive computing \nand human intelligence [143].\nAndreas Eschbach, founder,\
    \ and CEO of a software solu-\ntions provider says that Industry 5.0 would be\
    \ an evolution \nin the manufacturing process in which humans are assisted \n\
    by machines to realize the dual benefits of accuracy and \ncognitive skills [144].\n\
    Neil Sharp of JJS manufacturing, a manufacturing solu-\ntion provider has stated\
    \ that human-centric development, \nsustainability, and resilience would be the\
    \ three pillars of the \n3.2 Key takeaways\nFrom the various sections discussed\
    \ till now, it can be \ninterpreted that the entire concept of Industry 4.0 revolves\
    \ \naround collecting, processing, monitoring, storing, and ana-\nlyzing data\
    \ from various sources in digital form to improve \nthe process efficiency, make\
    \ decisions, learn, and improve \non the go. The data collected from various sensors\
    \ that are \nconnected to a physical system are processed in a central-\nized\
    \ location using AI and ML algorithms to understand \nthe manufacturing processes\
    \ which helps the industries to \noptimize their operation and even teach the\
    \ learnings back \nto the system. The in-depth analysis of data collected from\
    \ \nvarious processes gives a new level of understanding of the \nprocess which\
    \ helps industries to operate at the highest pos-\nsible efficiency.\nIf Industry\
    \ 3.0 is about generating data, then Industry 4.0 \nis about processing and analyzing\
    \ it to achieve the high-\nest possible optimization which improves the quality\
    \ of the \nmanufactured parts to an unprecedented extent. Although \nindustries\
    \ can realize the benefits of adopting these digital \nand computing technologies,\
    \ the higher implementation \ncost and requirements on the highly skilled workforce\
    \ are \na few deterrents to their rapid adaptation. Besides, many \norganizations\
    \ are still skeptical about how these new-age \ndisruptive technologies would\
    \ benefit their business consid-\nering their size of the business and the cost\
    \ of restructur-\ning and reskilling requirements. However, rather than the \n\
    cost and technical challenges, the impact of these technolo-\ngies on the socio-economic\
    \ factor is the serious concern. If \nleft unchecked, the disruption it can have\
    \ on society would \nbe enormous and irreversible. Hence, business leaders \n\
    and policymakers must urgently investigate the technolo-\ngies and identify methods\
    \ to adopt them without affecting \npeople and communities. Hence the current\
    \ need is to find \nways to include humans in the game rather than alienating\
    \ \nthem again which may altogether require a different set of \ntechnologies\
    \ or a new Industrial Revolution (Industry 5.0) \nwhich are discussed in the following\
    \ sections.\n4 Industry 5.0: definitions from industries \nand scholars\nMany\
    \ industries that are closely associated with digital \ntechnologies have come\
    \ up with different definitions for \nthe impending fifth industrial revolution.\
    \ While Industry \n4.0 concept itself is yet to get a head start in many devel-\n\
    oped and emerging economies, these definitions could be \nconsidered as a wish\
    \ list or predictions for the upcoming \nrevolution.\n1 3\n959\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    5 Prospective technologies and applications \nof industry 5.0\nFrom the previous\
    \ sections, it can be implied that Industry \n4.0 has solely focused on improving\
    \ profits by concentrat-\ning only on product quality and process efficiency using\
    \ dif-\nferent digital technologies. However, it has widely ignored \nthe need\
    \ for human intelligence and failed to acknowledge \nthe impact of digital technologies\
    \ on the environment and \nsociety. Hence Industry 5.0 is predicted to include\
    \ the two \nkey missing elements, the inclusion of humans and sustain-\nable development.\
    \ In addition, it is also expected to pro-\nvide flexibility and agility that\
    \ industries require to quickly \nrespond to the changing market conditions and\
    \ customer \npreferences. However, although most industrial leaders and \nmany\
    \ scholars have predicted leveraging human creativ-\nity as the key difference\
    \ of Industry 5.0, few other schol-\nars argue that Industry 5.0 would just be\
    \ an evolution or an \nincremental advancement of Industry 4.0 technologies and\
    \ \npractices [150, 151]. The key differentiating factors between \nthe industrial\
    \ revolutions are shown in Fig. 9.\nDespite being conceptualized as an incremental\
    \ advance-\nment, discussions on various enabling technologies and the \nfifth\
    \ industrial revolution which aims to empower humans \nand not replace them [145].\n\
    Eric Howard of Simio LLC, a simulation software pro-\nvider has also indicated\
    \ that combining human capabilities \nand automation to meet the demand for personalization\
    \ \nwould be the driver of the next industrial revolution [146].\nOzdemir and\
    \ Hekim [147] proposed Industry 5.0 to be a \nmuch-required evolutionary and incremental\
    \ development \nthat is built on the concept and practices of Industry 4.0.\n\
    So far, every industrial revolution had attempted either \nto eliminate or alienate\
    \ humans who stand to lose against \nthe superior productivity and efficiency\
    \ of automation and \ndigital technologies. However, for the first time, most\
    \ of \nthe definitions have confirmed the inclusion of humans and \nsustainability\
    \ as the additional key pillars of the fifth indus-\ntrial revolution. Even at\
    \ the heart of Japan’s “Society 5.0” \nmodel, they strive to create a human-centered\
    \ revolution to \nattain economic development by integrating physical and \ncyberspace\
    \ [148, 149].\nFig. 9 The key differential factors of Industry 3.0 Vs 4.0 Vs 5.0\n\
    \ \n1 3\n960\nInternational Journal on Interactive Design and Manufacturing (IJIDeM)\
    \ (2023) 17:947–979\nneed a break in the production line which increases the com-\n\
    plexities and compromises its efficiency, quality, and results \nin higher cost.\
    \ In fact, his black-only strategy has helped \nFord to reduce the overall cost\
    \ of the model by more than \nhalf in a few years. This mass production strategy\
    \ signifi-\ncantly changed the American economy and society and even \nhelped\
    \ Ford’s own factory workers to afford a car which \nwas until then possible only\
    \ for rich and elites. Nearly \nafter a century, the concept of mass production\
    \ has already \nstarted fading in favor of mass personalization in the name \n\
    of the fifth industrial revolution with the support of digi-\ntal technologies\
    \ which would be discussed in the following \nsections. The diagrammatic representation\
    \ of prospective \nIndustry 5.0 technologies is shown in Fig. 10.\napplications\
    \ of the fifth industrial revolution have already \ngathered pace. The union between\
    \ the accuracy and effi-\nciency of digital technologies and the creative thinking\
    \ abil-\nity of humans would create a synergy between humans and \nmachines. The\
    \ increasing customer requirements for highly \npersonalized products is believed\
    \ to be another benefit of \nIndustry 5.0 which can leverage various software\
    \ tools, arti-\nficial intelligence, machine learning, and additive manufac-\n\
    turing. If the earlier industrial revolution was about mass \nproduction, the\
    \ future is predicted to be driven by mass per-\nsonalization as “there is no\
    \ one size that fits all”.\nIn his autobiography “My Life and Work”, Henry Ford\
    \ \nhas mentioned that he once said, “any customer can have a \ncar painted any\
    \ color that he wants, so long as it is black”. \nThe statement was around the\
    \ launch of “Model T” in the \nyear 1909 when mass production was the buzzword\
    \ of \nindustries. It was an era during which any minor changes \non the product\
    \ like even a variation in paint color would \nFig. 10 The prospective technologies\
    \ of Industry 5.0\n \n1 3\n961\nInternational Journal on Interactive Design and\
    \ Manufacturing (IJIDeM) (2023) 17:947–979\nmid-sized German manufacturer of drying\
    \ machinery prod-\nucts has reported a tremendous improvement in its produc-\n\
    tivity and quality of parts after employing a cobot in their \nwelding cell. The\
    \ welding operation which typically takes a \nday was completed by a 6-axis KUKA\
    \ KR Cybertech cobot \nwith the required precision and top-notch craftmanship\
    \ in a \nmere 50 min [154]. Few other industries that are realizing \nthe benefits\
    \ of employing cobots in their operations include \nbiomedical, agriculture, food\
    \ processing, electronics man-\nufacturing, warehousing, automotive, metal processing,\
    \ \npackaging, and logistics. Although cobots prove to be highly \nefficient in\
    \ an industrial environment, the other aspects such \nas safety, trust, loss of\
    \ shared emotions between workers, \nand possible job loss for humans still looms\
    \ large which \nmust be addressed [155].\n5.2 Smart sensors\nA sensor is an electronic\
    \ device that can sense any changes \nin physical properties and convey them through\
    \ an appro-\npriate change in electrical output. For instance, a thermo-\ncouple\
    \ sensor responds to the change in temperature by \nproducing a suitable output\
    \ voltage. While a conventional \nsensor has only the base sensing elements, a\
    \ smart sensor \nsystem can independently perform data collection, data \nconversion,\
    \ data processing, and establish communica-\ntion to an external system such as\
    \ a cloud server which are \nsome of the critical requirements of future smart\
    \ factories. \nSuch extended capabilities are achieved through a suitable \nbase\
    \ sensing element, microprocessor, communication, and \nmemory modules all embedded\
    \ in one system. Basically, \nsmart sensors and actuators are an integral element\
    \ of IoT, \nCPS, automation, robotics, and all intelligent systems which \nare\
    \ the driving force behind Industry 4.0 and Industry 5.0 \ntechnologies. Hence\
    \ the importance and functionality of a \nsmart sensor can be understood from\
    \ the various sections \nof this article.\n5.3 Digital twins\nThe accurate digital\
    \ replication of a physical system that \nacts as its virtual counterpart is the\
    \ digital twins. In gen-\neral, using the data gathered from the original model\
    \ and \nmirroring it on its replicate model to simulate and under-\nstand the\
    \ real-time behavior is the core concept of twin-\nning [231]. The concept of\
    \ using “twins” was believed to be \nin practice since the late 1960s when NASA\
    \ was working \non the Apollo space mission. NASA scientists have made \ntwo identical\
    \ spaceships to allow precise mirroring of the \nconditions that the spaceship\
    \ in orbit experiences with its \ntwin on the earth [156]. However, with the advancements\
    \ \nin digital technologies, currently, it is possible to mirror the \n5.1 Collaborative\
    \ robots (cobots)\nAlthough robots are used in industries for many decades \n\
    the highly connected fourth industrial revolution robots are \ndesigned to work\
    \ autonomously without human supervi-\nsion, and they already play an active role\
    \ in many factories \ncurrently. However, instead of working independently, the\
    \ \nfifth industrial generation robots are expected to collaborate \nwith humans\
    \ and work under his guidance. Thanks to the \nadvancement in digital technologies\
    \ such as artificial intel-\nligence, machine learning, and conventional robotics\
    \ that \ngave rise to the next-gen collaborative robots or “cobots”. \nSuch cobots\
    \ can sense their surroundings, adapt to them, \nand learn on the go. This makes\
    \ them highly flexible and \nadapts to the changes instantaneously to support\
    \ the manu-\nfacturing of small batch sizes and fulfill highly personalized \n\
    products which would be one of the major requirements of \nfuture manufacturing.\
    \ While the current generation robots \nwork inside fenced surroundings to perform\
    \ a predefined set \nof operations, the cobots are released from their confine-\n\
    ment to enable 3Cs (Coexist, Cooperate and Collaborate) \nwith their human counterparts.\
    \ These lightweight, sensitive, \nprecise, and highly flexible cobots are easily\
    \ programma-\nble to work aside humans to relieve them from physically \ndemanding,\
    \ hazardous, or monotonous activities.\nKUKA, a leading manufacturer of industrial\
    \ robots \nand automation systems has already introduced their first-\ngeneration\
    \ lightweight collaborative robot named “LBR \niiwa” which is currently being\
    \ used in assembly and pro-\nduction lines of Ford, Daimler, BMW, Skoda, and many\
    \ \nother automotive companies. As the cobots are small and \nmobile, they are\
    \ capable of working in almost all the areas \nof an industrial setup such as\
    \ laboratories, handling of raw \nmaterial, production and assembly lines, material\
    \ handling, \ntransportation, packaging, quality control, and shipping of \nfinished\
    \ products to the customers. Their flexibility to adapt \nto different job requirements\
    \ can reduce the dependency \non conventional industrial robots that significantly\
    \ reduce \nthe cost of ownership in the manufacturing industries. The \nrecent\
    \ advancements in technologies such as distributed \nartificial intelligence,\
    \ edge computing, parallel processing, \nand linked data enable cobots to make\
    \ real-time decisions \neffectively [152]. As the cobots are highly affordable,\
    \ ver-\nsatile, and easy to deploy, it gives the advantage of a level \nplaying\
    \ field for the small-scale industries to compete with \nlarge conglomerates and\
    \ multinational corporations.\nFor instance, a cobot installed in Craft and Technik\
    \ \nIndustries in India which is an automotive part manufactur-\ning company has\
    \ shown a 20% improvement in the prod-\nuct quality by handling the monotonous\
    \ job of loading and \nunloading components from a CNC machine while simul-\n\
    taneously performing inspection [153]. Stela Laxhuber, a \n1 3\n962\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    digital model to track the history and evaluation of data and \nthis process is\
    \ called threading. Cloud computing technol-\nogy is used to store these data\
    \ [159]. As digital twin is an \nultra-realistic representation of a physical\
    \ system, it can be \ncombined with other digital technologies such as IoT, Big\
    \ \ndata, Artificial intelligence, and Machine Learning to collect \nreal-time\
    \ data and monitor the health of the system, pre-\ndict remaining useful life\
    \ and in preventive maintenance. \nThe various applications of digital twins in\
    \ the manufac-\nturing industries include product design and new product \ndevelopment,\
    \ product manufacturing, asset management, \nprocess monitoring and optimization,\
    \ quality control, pre-\ndictive maintenance, supply chain management, and assist\
    \ \nin decision making by supporting cross-functional (engi-\nneering, manufacturing,\
    \ marketing, and sales) collaboration \n[231,160]. The other industries that benefit\
    \ from the tech-\nnology are aerospace, space research, bio-medical, energy \n\
    storage, automotive, electricity production and distribution, \nand autonomous\
    \ vehicles. As the scope of the article is to \nbriefly introduce the different\
    \ digital technologies of Indus-\ntry 5.0, the scholars interested to know further\
    \ details and \nfew real-life successful implementations of digital twins can\
    \ \nrefer to these articles [161–171].\ncondition on a digital model rather than\
    \ on a physical model \nand hence derived its name, “digital twins”. Even the\
    \ term \n“digital twins” was first coined by NASA in its 2010 report \nto denote\
    \ its Simulation-Based Systems Engineering [157].\nNASA has defined a digital\
    \ twin as a system that is \ndesigned to integrate multi-physics, multi-scale,\
    \ probabilis-\ntic simulation to mirror its twin using sensors and appropri-\n\
    ate data derived from the source. The system on the digital \ntwin can prevent\
    \ the failure of a physical system and extend \nits life by suggesting suitable\
    \ changes and optimizations. \nAlthough both simulations and digital twins use\
    \ the digital \nversions of a physical system the main differential factor of\
    \ \ndigital twins is that they can be used to simultaneously run \nand study multiple\
    \ processes. The different types of digital \ntwins as outlined by IBM are shown\
    \ in Fig. 11.\nThe three main capabilities of digital twins are mirror-\ning,\
    \ shadowing, and threading [158]. The capability to \naccurately mirror the physical\
    \ system to meet the purpose \nof twinning is mirroring. The synchronization between\
    \ the \nphysical and virtual models is shadowing. The data from the \nphysical\
    \ model is transmitted to its digital counterpart at a \nregular interval through\
    \ appropriate communication chan-\nnels to enable synchronization. The data received\
    \ from the \nphysical system are stored in the form of a record in the \nFig.\
    \ 11 Types of digital twins\n \n1 3\n963\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\npreferences and insights\
    \ (“people”) collected from devices \nsuch as wearables, smartphones, social media,\
    \ smart appli-\nances, and smart digital systems (“things”) are processed \nand\
    \ analyzed by artificial intelligence algorithms (“pro-\ncess”) to provide a personalized\
    \ experience back to the \n“people”. Cisco has estimated that the real benefits\
    \ of IoE \ncan be realized once the 99.4% of the currently uncon-\nnected physical\
    \ objects become a part of IoE one day in \nthe future. Improving productivity\
    \ and reduction in costs, \nincrease in employee productivity, highly efficient\
    \ supply \nchain and logistics, innovation in new product development \nand research,\
    \ and superior customer experience are some of \nthe benefits that companies stand\
    \ to gain from IoE [172].\nThe lethal union of Artificial Intelligence and Internet\
    \ \nof Things gives birth to Artificial Intelligence of Things \n(AIoT) which\
    \ is becoming a new technology topic in indus-\ntrial automation. A conventional\
    \ IoT system consists of sen-\nsors that have the potential to generate an enormous\
    \ amount \n5.4 Internet of everything (IoE) and artificial \nintelligence of things\
    \ (AIoT)\nThe term “Internet of Everything” was coined by Cisco to \ndescribe\
    \ the all-around connectivity between, people, things, \ndata, and processes.\
    \ The hybrid connection enables to gain \nof more valuable information which can\
    \ be converted into \nnew capabilities, rich experiences, and exceptional oppor-\n\
    tunities. If IoT refers to the connection of physical objects \nwith the internet\
    \ which is a single technology transition, IoE \ncontains many technology transitions\
    \ in which IoT is one \nof the parts. The philosophy of IoE revolves around con-\n\
    necting the billions of devices, objects, and common things \naround the world\
    \ with sensors that give them wide network-\ning capability and make them smarter.\
    \ The idea of IoE and \nits data flow is shown in Fig. 12.\nThe ideology of IoE\
    \ is a closed loop in which the real-\ntime data flows through its four key pillars.\
    \ The user \nFig. 12 Ideology of IoE\n \n1 3\n964\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\ncentralized, it is susceptible\
    \ to security threats. So, adopt-\ning blockchain architecture would ensure data\
    \ security by \nproviding secure, private, and encrypted data transfer [173].\
    \ \nThe technology helps in solving trust-related problems and \nenables the automated\
    \ allocation of resources on a global \nscale. The possibility of distributed\
    \ data storing, decentral-\nized P2P transactions, automatic approval process,\
    \ program-\nmable smart contracts, eliminating counterfeit products, \nand dynamic\
    \ encryption algorithms makes Blockchain an \nattractive option for industries\
    \ to adopt [174, 175]. As this \ntechnology is a new entrant in manufacturing\
    \ industries, the \nliterature review shows that most of the current research\
    \ \non the topics is around the concept of the technology and \nits architecture\
    \ [176–181]. However, studies have recom-\nmended that reducing the size of the\
    \ blockchain, block size \noptimization, and a lightweight blockchain to reduce\
    \ trans-\naction latency and computing power are the potential area \nof future\
    \ research to make the technology sustainable [5].\n5.6 Edge and fog computing\n\
    The current efficiency of cloud-computing technology is \ninsufficient in analyzing\
    \ a large volume of data generated \nin a shorter time which affects the service\
    \ quality and the \noverall performance of the network and the IoT system \n[182].\
    \ Hence, the disadvantages of cloud computing tech-\nnology can be overcome by\
    \ using edge computing. Edge \ncomputing is a distributed computing and storage\
    \ frame-\nwork deployed near the source where the data is created \nwhich keeps\
    \ data on the local parts of the network or the \nedge devices, instead of using\
    \ a centralized data server. It \nallows data from IoT devices to be processed\
    \ at the edge (in \nthe local system itself) before sending it to the cloud which\
    \ \nimproves the response time and saves network bandwidth. A \nschematic showing\
    \ the typical functioning of edge comput-\ning is shown in Fig. 13.\nEdge computing\
    \ and Fog computing are essentially the \nsame in terms of leveraging the computing\
    \ capabilities that \nare available within a local network. The key difference\
    \ \nbetween cloud, edge, and fog computing lies in the place at \nwhich data processing\
    \ is done. In cloud computing the data \nprocessing occurs at the centralized\
    \ cloud servers that are \nmanaged by a few service providers at geographically\
    \ dis-\npersed data centers, while in edge computing it occurs at the \nphysical\
    \ device in which the IoT sensors are embedded or \nat a gateway device that is\
    \ close to the sensors. However, in \nFog computing, the activities are performed\
    \ on the proces-\nsors that are a part of the LAN hardware which are far apart\
    \ \nfrom the sensors. The main advantage of cloud computing is \nin its capability\
    \ to provide in-depth and advanced process-\ning, while edge and fog are suitable\
    \ for quick and real-time \nof unstructured data. In an industrial set up as many\
    \ IoT \ndevices are connected to form a network, the volume of \nreal-time data\
    \ that needs to be handled and analyzed gets \ntoo huge. With AIoT, a connected\
    \ physical device gains \nthe power to solve problems and make decisions that\
    \ were \nimpossible for conventional IoT-enabled devices. It is \nachieved by\
    \ embedding AI algorithms in the components \nof a physical system such as programs\
    \ and chipsets which \nall are connected to an IoT network. An appropriate applica-\n\
    tion programming interface is deployed to provide interop-\nerability between\
    \ the components at device, software, and \nplatform levels. They operate in unison\
    \ to optimize the sys-\ntem and extract the required useful data from it for the\
    \ data \nanalytics functionality, make decisions, optimize the system \nfunctionality,\
    \ and learn from it, all without the intervention \nof humans. As the technology\
    \ is relatively new the further \ncapabilities of the system must be explored.\
    \ However, few \nof the many possible applications of the technology include \n\
    consumer goods, industrial, enterprise, smart health track-\ning devices, smart\
    \ home appliances, autonomous vehicles, \nand service sectors.\n5.5 Blockchain\n\
    Blockchain is a digitally managed, distributed, and decen-\ntralized ledger used\
    \ to store both tangible and intangible \nassets in a business network in the\
    \ form of transactions in \nan immutable format. The characteristics of the technology\
    \ \nin providing trust, transparency, and traceability make it \nattractive for\
    \ applications where transactions are involved \n[5]. Each block is a file where\
    \ the transactions are perma-\nnently recorded and when a new transaction is performed\
    \ \nit gets added to the block similar to adding a new page to \na ledger. In\
    \ simple terms, the technology can be defined \nas a chain that contains data\
    \ blocks in the chronological \nsequence that are permanently stored in encrypted\
    \ form as a \ndistributed ledger that is tamper-proof or fake proof. As all \n\
    businesses rely on data and information flow across various \nstakeholders it\
    \ is critical to ensure that the flow is accurate \nand faster, and Blockchain\
    \ is the ideal technology that can \ndeliver information from a permanent ledger\
    \ only to the \napproved members. Originally created as a hack-proof sys-\ntem\
    \ for banking and financial institutions, the Blockchain \ntechnology with its\
    \ decentralized, distributed, and immu-\ntable features is proclaimed to be a\
    \ game-changer for all the \nsectors that require secure data sharing within and\
    \ outside \ntheir organizations [5].\nThe combination of new-generation information\
    \ tech-\nnologies such as Internet of Things, cloud computing, and \nBigdata along\
    \ with Blockchain technology has the poten-\ntial to transform the way data is\
    \ currently handled in almost \nall the industrial sectors. As the current IoT\
    \ architecture is \n1 3\n965\nInternational Journal on Interactive Design and\
    \ Manufacturing (IJIDeM) (2023) 17:947–979\n5.7 Cognitive computing\nCognitive\
    \ computing refers to the set of technology plat-\nforms that uses computerized\
    \ models to mimic human \nthought processes to solve complex problems [185]. \n\
    Although some scholars classify cognitive computing as \na subset of artificial\
    \ intelligence, basically they are two \nentirely different disciplines but with\
    \ overlapping method-\nologies. While the focus of artificial intelligence is\
    \ to reflect \nreality and produce accurate results based on a set of theo-\n\
    ries and algorithms, cognitive computing is built on par-\nticipation from two\
    \ distinct interdisciplinary fields such as \ncomputing (artificial intelligence,\
    \ machine learning, pattern \nrecognition, data mining) and cognitive science\
    \ (visual rec-\nognition, language processing, psychological, philosophy, \nand\
    \ anthropology) to augment human thinking and reason-\ning abilities similar to\
    \ the human brain [186].\nMachine vision, machine learning, deep learning, and\
    \ \nrobotics are some technologies that are a critical part of AI \nthat supports\
    \ learning from the vast set of data, reasoning to \nmake sense of the data, and\
    \ self-correction to take decisions. \nWith repeated learning, an AI system is\
    \ capable of surpass-\ning humans in terms of accuracy and finding new ways to\
    \ \nsolve a problem. However, the focus of cognitive computing \nresponse. The\
    \ difference between edge, fog, and cloud com-\nputing is shown in Fig. 14.\n\
    Although cloud computing is considered a critical infra-\nstructure to support\
    \ IoT applications, it is prone to latency-\nrelated issues in applications that\
    \ involve high volume and \nhigh velocity of data. Hence, the downside of cloud\
    \ com-\nputing can be solved by edge or fog computing architec-\ntures that provide\
    \ the service near the IoT device instead of \ncentralized cloud infrastructure\
    \ which is important in criti-\ncal applications such as real-time manufacturing,\
    \ autono-\nmous vehicles, cognitive assistance, and healthcare [183]. \nIn general,\
    \ cloud computing is high latency, high power \nconsuming infrastructure with\
    \ high processing capabilities, \nwhereas edge and fog computing are low latency,\
    \ low power \nconsuming infrastructure with low to moderate processing \ncapabilities\
    \ [184]. Despite their advantages, scalability, ser-\nvice availability, mobility\
    \ support, energy management, and \nsecurity are a few challenges that must be\
    \ addressed for a \nsuccessful implementation of edge or fog computing infra-\n\
    structure for IoT applications.\nFig. 13 Data processing in Edge computing\n \n\
    1 3\n966\nInternational Journal on Interactive Design and Manufacturing (IJIDeM)\
    \ (2023) 17:947–979\nday by 2025 which is equivalent to the volume of data that\
    \ \nrequires approximately 213 million DVDs every day [190]. \nWith the number\
    \ of connected devices increasing every day, \nanalyzing the data (Big data) generated\
    \ would be a daunt-\ning task for the industries which can be intercepted using\
    \ \ncognitive computing to convert the raw data into meaning-\nful information\
    \ and invaluable knowledge [191]. The real \npotential of cognitive computing\
    \ can be obtained by com-\nbining it with big data analytics and unique human\
    \ elements \nsuch as ethics, common sense, and self-directed goals. The \nmajor\
    \ difference between cognitive computing and ML tech-\nniques in terms of data\
    \ processing is that the former works \non vectors having objective data while\
    \ the latter learns by \nperforming different mathematical calculations on the\
    \ data. \nHence, the unstructured data (the data that are derived from \ntexts,\
    \ pictures, videos, etc.) must be converted to a quantita-\ntive value which is\
    \ derived as vectors to integrate cognitive \nis to replicate human reasoning\
    \ using technologies such as \ndata mining, image recognition, and language processing\
    \ to \nsolve problems and optimize human processes. Hence, the \ngoal of cognitive\
    \ computing is not to replace humans but to \nsupplement humans in making a decision\
    \ by processing a \nlarge volume of data [187]. In fact, a system with cognitive\
    \ \ncomputing capabilities can interact with humans, interpret \ncontextual language,\
    \ analyze the data based on experience \nand make assumptions based on the interaction\
    \ [188].\nA smart IoT-enabled physical system that has cognitive \ncomputing capabilities\
    \ embedded in it can assist humans \nby providing critical suggestions and help\
    \ in making deci-\nsions by analyzing the collected data. Such a system that \n\
    combines IoT with cognitive computing results in Cognitive \nThings [189]. According\
    \ to an article in the World Economic \nForum, it has been estimated that around\
    \ 463 exabytes (1 \nexabyte = 1×106 terabyte) of data would be created every \n\
    Fig. 14 Edge, fog, and cloud computing\n \n1 3\n967\nInternational Journal on\
    \ Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\nable to use\
    \ higher frequencies when compared to 5G, it can \nprovide higher capacity and\
    \ lower latency. However, as the \nexpected commercial launch of 6G technology\
    \ is almost a \ndecade away it is premature to predict the enabling tech-\nnologies\
    \ over which it would be built. But the envisioned \nkey performance indicators\
    \ are, very high data rates of up \nto 1Tbps, improved spectral efficiency and\
    \ coverage, wide \nbandwidths of up to 100 GHz, improved energy saving, \nultra-low\
    \ latency, and exceptionally high reliability. A brief \ncomparison of the key\
    \ performance indicators (KPI) of 5G \nand 6G technologies as reported by Rajatheva\
    \ et al. [200] \nand Strinati et al. [201] is shown in Table 5.\nThe usage of\
    \ 6G and beyond is expected to deliver the \nrequired latency, provide an excellent\
    \ service quality, net-\nwork infrastructure for connected devices, and support\
    \ \nintegrated artificial intelligence capabilities [202]. AI-based \nautonomous\
    \ supply chain, e-health, collaborative robots, \nmassive twinning (digital twins\
    \ created from humans, \nphysical objects, processes, and large infrastructures),\
    \ tele-\npresence using holographic techniques are some of the use \ncases of\
    \ 6G technologies predicted by Ericsson [203]. In \naddition, with the expected\
    \ increase in the number of con-\nnected devices and the enormous amount of data\
    \ collected \nto support Industry 5.0 applications, energy management is \nanother\
    \ critical environmental aspect that needs to be con-\nsidered and 6G and beyond\
    \ is expected to provide a highly \noptimized energy consumption strategy.\n5.9\
    \ Augmented reality (AR), mixed reality (MR), and \nholography\nAugmented reality\
    \ (AR) is a technology used to superimpose \ndigital information into real-world\
    \ applications to provide a \ncomposite view to the users. It is an interactive\
    \ 3D environ-\nment that combines real and virtual world together [204]. In \n\
    virtual reality (VR) a head-mounted display unit is used to \ndisconnect users\
    \ from the real world and to give them the \nexperience of a computer-generated\
    \ virtual world, whereas \nAR keeps the real-world details. Although augmented\
    \ real-\nity is one of the technologies that is often discussed along \nwith the\
    \ digital technologies of the latest industrial revolu-\ntion, its history can\
    \ be traced back to the 1960s [205, 206]. \nMixed reality as the name implies\
    \ is a mixture of real and \nvirtual worlds where the users can also interact\
    \ and manip-\nulate the virtual environment with support from high-end \nsensing\
    \ and imaging technologies. Holography is another \nvisualization tool that is\
    \ also called 3-dimensional pho-\ntography. The technique records the feature\
    \ of a 3D object \nusing lasers which are digitally reconstructed to reproduce\
    \ \nthe original objects accurately [207].\nThese technologies are built around\
    \ advancements in \nthe auxiliary technologies such as digital cameras, optical\
    \ \ncomputing and ML. To gain the real benefits from cognitive \ncomputing, the\
    \ system must be taught using numerous such \nvectors which it can interpret and\
    \ learn the underlying pat-\nterns from the data [188].\nIBM Watson is one of\
    \ the most popular cognitive com-\nputing-based systems that is revolutionizing\
    \ the healthcare \nsector by helping doctors to make superior decisions [192].\
    \ \nBesides, the image recognition algorithm can identify faults \nand provide\
    \ solutions just by reading photographs of the \nmachine, thus providing cognitive\
    \ maintenance. The speech \nrecognition can be used by the machine operator to\
    \ control \nthe machine which otherwise requires specialized program-\nming skills.\
    \ The system can recognize texts and pictures, \nhear speeches, and interpret\
    \ the questions to provide solu-\ntions. In-process visual inspection, adaptive\
    \ robotic main-\ntenance, predictive maintenance, improve operational \nefficiency,\
    \ and develop personalized products and services \nare a few other applications\
    \ of a cognitive system in manu-\nfacturing industries [193]. Although cognitive\
    \ computing is \nstill in its nascent stage of development there are numer-\n\
    ous studies that highlight the benefits of the technology in \nanalytics-oriented\
    \ industries such as banking finance [194], \neducation [195], health care [196],\
    \ marketing [197], behav-\nioral analysis [198], and customer support [199].\n\
    5.8 6G and beyond\nTo fulfill the requirements of a fully connected digital \n\
    world, innovations in digital and computing technologies \nalone are insufficient,\
    \ but a substantial advancement in com-\nmunication technologies is also critical.\
    \ However, with the \nnext gen 5G technologies just around the corners, the tele-\n\
    com giants have already kickstarted their research activities \ntowards the next\
    \ technological breakthrough that is required \nto achieve the 6G goals which\
    \ are expected for a commer-\ncial launch by 2030. 6G and beyond can help address\
    \ the \nwireless connectivity requirements of the rapidly growing \nintelligent\
    \ devices and services. As a 6G network will be \nTable 5 KPIs of 5G and 6G technologies\n\
    S# KPI\n5G\n6G\n1\nPeak data rate (Gb/s)\n20\n10,000\n2\nExperienced data rate\
    \ (Gb/s)\n0.1\n1\n3\nPeak spectral efficiency (b/s/Hz)\n30\n60\n4\nExperienced\
    \ spectral efficiency (b/s/Hz) 0.3\n3\n5\nMaximum channel bandwidth (GHz)\n1\n\
    100\n6\nArea traffic capacity (Mbps/m2)\n10\n1000\n7\nConnection density (devices/km2)\n\
    106\n107\n8\nLatency (ms)\n1\n0.1\n9\nReliability (packet error rate)\n10− 5\n\
    10− 9\n10\nMobility (km/h)\n500\n1000\n11\nEnergy efficiency (Tb/J)\nNot specified\
    \ 1\n12\nDelay jitter (ms)\nNot specified 10− 3\n1 3\n968\nInternational Journal\
    \ on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\nand industrial\
    \ units to focus on protecting the environment \nand society as well. Hence, sustainability\
    \ can be categorized \nas economic sustainability, social sustainability, and\
    \ envi-\nronmental sustainability which are collectively referred to \nas the\
    \ three pillars of sustainability. However, in addition to \nthe three pillars,\
    \ few authors have added additional pillars \nsuch as institutional, cultural,\
    \ and technical [217]. In fact, \nthe United Nations’ blueprint to achieve a better\
    \ and more \nsustainable future which is called the “2030 Agenda” or \n“Agenda\
    \ 2030” has listed 17 interlinked objectives as future \nSustainable Development\
    \ Goals.\nAlthough the various Industry 4.0 technologies have \nassisted industries\
    \ in achieving economic sustainability by \nreducing and eliminating product waste,\
    \ improving product \nquality and process performance, streamlining the manufac-\n\
    turing processes to reduce power consumption, optimizing \nprocess time, reducing\
    \ the number of manufacturing steps, \ninventory management, and improving the\
    \ useful life of \nmachinery, it has failed in checking the waste generated in\
    \ \nthe form of data. Processing such a huge volume of data \nrequires enormous\
    \ computing power, energy, and time to \nanalyze and make a meaningful decision\
    \ that affects envi-\nronmental sustainability. Environmental sustainability \n\
    refers to the reduction of waste generated in manufactur-\ning, reduction in resources\
    \ utilized, promotion of a circu-\nlar economy, reduction in energy consumption,\
    \ and using \nrenewable energy sources [218]. This is in line with the \nreport\
    \ by the World Economic Forum, which details that \nabout 75% of IoT projects\
    \ are small and medium-sized, and \nthey focus only on profitable applications\
    \ such as energy \nefficiency, productivity, competitiveness, and cost reduc-\n\
    tion, but sustainability was mostly neglected [219]. The \ntechnologies can also\
    \ cause social disruption by replacing \nlow and medium-skilled human labor on\
    \ the shop floor \nwith automation and industrial robots which affects social\
    \ \nsustainability.\n“Sustainability trilemma” refers to the current challenges\
    \ \nthat industries face in achieving all the three sustainability \npillars such\
    \ as economic, social, and environmental sustain-\nability simultaneously. For\
    \ instance, businesses focusing \nto achieve higher profits (economic sustainability)\
    \ through \nexcessive automation can result in job losses which disrupt \nsocial\
    \ sustainability. Of the three sustainability pillars, the \nenvironmental pillar\
    \ is the largest and the most critical to \nfocus on as it encompasses both the\
    \ social and economic \nsystems inside it. In addition, according to a 2022 report\
    \ \nby World Health Organization, 99% of the global popula-\ntion breathes air\
    \ that is beyond the recommended air-quality \nlimits [220]. Under such circumstances,\
    \ enforcing stringent \npollution control norms and instantly moving away from\
    \ \nfossil fuels to achieve environmental sustainability can take \na huge toll\
    \ on economic sustainability. Similar would be the \nsensors, display, accelerometers,\
    \ GPS, gyroscopes, solid \nstate compasses, motion tracking, radio-frequency iden-\n\
    tification, wireless network, and battery. Hence, although \nAR, MR, and Holography\
    \ (which can be collectively called \n“Extended reality technologies”) [208] are\
    \ not considered \nthe technology enablers of Industry 4.0 or Industry 5.0, it\
    \ \nis one of the technologies that is expected to benefit from \nthe digital\
    \ adoption and play a key role in the future smart \nfactories. For instance,\
    \ Metaverse, one of the buzzwords of \nthe ongoing decade is a fully immersive,\
    \ interactive envi-\nronment that takes elements of VR, AR, and MR to cre-\nate\
    \ a virtual world. The technologies together would play \na critical role in reducing\
    \ the overall lead time in product \ndesign, prototyping, and process development.\
    \ It also has \nthe potential to conduct conferences, product launches, live \n\
    events, and webinars virtually on a real stage without the \nphysical participation\
    \ of the presenters which can be a cost \neffective and eco-friendly alternative\
    \ to business meetings \nand in-person collaborations. Interactive manuals and\
    \ cata-\nlogs [209], remote expert guidance [210], quality assurance \n[211],\
    \ assembly and maintenance instructions [212], prod-\nuct demonstrations [213],\
    \ collaborative engineering [214], \nerror diagnosis [215], and employee training\
    \ [216] are few \nother applications of the extended reality technologies.\n6\
    \ Sustainability dimension of industry 5.0\nFrom the various sections of this\
    \ article, it can be inferred \nthat the entire concept of Industry 4.0 and Industry\
    \ 5.0 tech-\nnologies revolves around collecting, processing, monitor-\ning, storing,\
    \ and analyzing data from numerous connected \nsources to improve the process\
    \ efficiency, make decisions, \nand learn on the go. The computing, information,\
    \ and digital \ntechnologies come together to achieve this common goal. \nApart\
    \ from manufacturing industries, these technologies are \nused independently or\
    \ along with other supporting technol-\nogies in banking, financial, biomedical,\
    \ health care, social \nmedia, automotive, aerospace, autonomous vehicles, and\
    \ \nnumerous other sectors.\nThe world leaders and industrial behemoths have agreed\
    \ \nthat data is the new gold. If Industry 3.0 is about generating \ndata, then\
    \ Industry 4.0 is about processing and analyzing it, \nwhile industry 5.0 must\
    \ be all about intelligently using it \nwith a focus on sustainability. However,\
    \ sustainability is not \nmerely about reducing wastes that go into the manufactur-\n\
    ing of products, but it’s also about achieving sustainability \nthroughout the\
    \ product life cycle (from procuring raw mate-\nrial till the product reaches\
    \ the customer and later bringing \nit back for recycling) and identifying ways\
    \ to achieve it with \na minimal amount of data and in less time. In addition,\
    \ the \nimpact of these technologies must go beyond production \n1 3\n969\nInternational\
    \ Journal on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\n\
    virtual and flexible learning modules) must be considered \nby the industries\
    \ before embracing these new technologies. \nCorrespondingly, industries trying\
    \ to achieve environmen-\ntal sustainability goals through renewable energy sources\
    \ \nmight take a blow on economic targets as the current cost \nof green energy\
    \ is much higher than the energy from non-\nrenewable resources. Hence the industries\
    \ need to incorpo-\nrate a sustainability awareness culture that focuses on all\
    \ \nthree sustainability elements and future research must be in \nthe direction\
    \ to achieve it. In short, to maintain sustainable \npractices and a circular\
    \ economy, the focus of the businesses \nmust be on “how the business is made”\
    \ rather than on “how \nmuch is made” [5].\n7 Key takeaways and future directions\n\
    Based on the detailed literature review it can be implied \nthat Industry 4.0\
    \ and 5.0 technologies can be categorized \ninto three: core technologies, supporting\
    \ technologies, and \nbeneficial technologies. The technologies such as IoT, IoE,\
    \ \nAIoT, AI, cognitive computing, automation, and robotics \ncan be classified\
    \ as the core technologies or the foundation \ntechnologies around which the next\
    \ industrial revolution \nwas built. The technologies such as cloud computing,\
    \ edge \ncomputing, big data, blockchain, 6G, and cyber security \ncan be classified\
    \ as the supporting technologies which pro-\nvide critical infrastructure for\
    \ the functioning of core tech-\nnologies. Cyber-physical systems, additive manufacturing,\
    \ \ncobots, digital twins, smart sensors, and extended reality are \na few of\
    \ the beneficial technologies that rely on the core \nand supporting technologies\
    \ for their functionality and gain \nbenefits from them.\nThe technologies discussed\
    \ under Industry 5.0 enablers \nmay look like a minor improvement or an upgraded\
    \ version \nof Industry 4.0 technologies. Although it is partially true, a \n\
    closer look at each of the technologies would reveal their \nstrong focus on the\
    \ inclusion of humans, environmental, \nand social conscientiousness. ESG (Environmental,\
    \ Social, \nand Governance) and Sustainability are the two other \nbuzzwords of\
    \ the decade that industries are trying to adapt \n[223]. Going by the dictionary\
    \ definition although they are \ndifferent, ESG is an evolution of sustainability.\
    \ In simple \nterms both can be together called “doing good to the envi-\nronment\
    \ and society”, and in terms of doing good to the \nsociety, it doesn’t get bigger\
    \ than the inclusion of humans. \nFrom a survey conducted at various manufacturing\
    \ indus-\ntries, Brozzi et al. [224] have concluded that the focus of \nindustries\
    \ is more on economic sustainability while social \nand environmental sustainability\
    \ are often ignored which \nreemphasizes the need to adopt Industry 5.0 technologies.\
    \ \nLiterature also shows that there are no studies that have \ncase if the usage\
    \ of plastics is banned altogether. Any such \ndrastic efforts can increase inflation,\
    \ create inequality, and \ntrigger disruptions in society. Social sustainability\
    \ is another \nimportant but often ignored factor. Studies have also shown \n\
    that the work environment has a significant impact on the \npersonal welfare of\
    \ the workers which in turn has an influ-\nence on social wellness. Focusing on\
    \ the human aspects such \nas ensuring the well-being of workers, work-life balance,\
    \ \nhealthy workplace, and providing suitable employee assis-\ntance can boost\
    \ productivity, product quality, and efficiency \n[221]. Hence, a balance between\
    \ economic growth, environ-\nmental degradation, and social wellbeing is required.\n\
    However, this problem can be addressed to some extent \nby using next-gen Industry\
    \ 5.0 technologies such as AIoT, \nedge computing, and smart sensors which can\
    \ filter the \nunwanted data at the machine level itself and send only the \n\
    minimum required data to the subsequent stage for process-\ning and making decisions\
    \ which can provide significant \nbenefits in terms of processing power and energy\
    \ require-\nments. For instance, while the aim of automation and indus-\ntrial\
    \ robots is to eliminate humans from the shop floor, the \nintention of cobots\
    \ is to work in collaboration with humans. \nIn addition to their agility and\
    \ adaptability to the changing \nshop floor requirements, the processing power\
    \ and energy \nrequired to operate them are comparatively minimal due to \ntheir\
    \ size which makes them environment friendly. Simi-\nlarly, while digital sensors\
    \ are capable of only collecting the \nprocess data from machines, the smart sensors\
    \ can indepen-\ndently perform data collection, data conversion, data pro-\ncessing,\
    \ and establish communication to an external system \nsuch as a cloud server which\
    \ can save an enormous amount \nof processing time, money, and energy consumption\
    \ which \nsupports environmental sustainability. AI and its associ-\nated technologies\
    \ can help develop alternative eco-friendly \nmaterials to plastics. Nevertheless,\
    \ once these technologies \nevolve and mature over the years, achieving all the\
    \ three \nkey sustainability pillars simultaneously is possible in the \nfuture.\
    \ Few authors also argue that following lean manu-\nfacturing practices such as\
    \ Just-in-Time (JIT), Total Quality \nManagement (TQM), Total Preventive Maintenance\
    \ (TPM), \nand Human Resource Management (HRM) can help indus-\ntries to address\
    \ a wide range of sustainability issues [222].\nAlthough some of these next-gen\
    \ technologies are \nalready used by a few industries, the real benefits can be\
    \ \nobtained only when all the technologies are used together. \nFor instance,\
    \ big data without AI or ML is just a digital \nwaste. Hence, the businesses that\
    \ want to improve economic \nsustainability must have a strategy to address the\
    \ job loss \nto low- and medium-skilled labor. Employee training such \nas reskilling\
    \ and upskilling programs, university collabora-\ntions to facilitate new learning,\
    \ development of interdis-\nciplinary competencies, and novel training strategies\
    \ (like \n1 3\n970\nInternational Journal on Interactive Design and Manufacturing\
    \ (IJIDeM) (2023) 17:947–979\nThe industrial revolutions are all about making\
    \ prod-\nucts in a better way to meet consumer demand. However, \nsome scholars\
    \ have combined all the latest advancements \nin other fields such as bionics,\
    \ synthetic biotechnology, \ngenetic engineering, quantum computing, nanotechnology,\
    \ \nsmart self-healing materials, and Brain-computer interfaces \nas a few technology\
    \ enablers of industry 5.0 [225–228]. \nAlthough these are some of the important\
    \ technological \ninnovations in their respective fields that use one or more\
    \ \ndigital technologies such as AI, their immediate application \nin an industrial\
    \ environment is questionable. However, until \na few decades ago even electronics\
    \ and computers were \nconsidered naïve to production and manufacturing, but their\
    \ \nunion with machines has really kick-started the new indus-\ntrial revolutions.\
    \ Nevertheless, the new-age Industry 5.0 \ntechnologies can bring back the lost\
    \ collaboration between \nhumans, machines, and software systems and make the\
    \ shop \nfloor a sustainable place to work and the world a sustainable \nplace\
    \ to live. After all, we have only one place to live, and it \nmeans the world\
    \ to us.\n8 Conclusion\nIf the industry experts are to be believed the world is\
    \ already \nin the midst of the fourth industrial revolution in which a \nmyriad\
    \ of disruptive digital technologies are married to \nvarious industrial machines\
    \ and processes to collect data \nand establish a channel of communication between\
    \ them \nto deliver products at a lower cost. The integration of the \nvarious\
    \ intelligent machines and processes of an industrial \nunit with the help of\
    \ new-age digital and computing tech-\nnologies creates an eco-system that is\
    \ connected, smart and \nagile. Besides, the entire supply chain is controlled,\
    \ stream-\nlined, and automated to collect, monitor, and optimize real-\ntime\
    \ data to enable high efficiency right from procuring raw \nmaterials till the\
    \ product is delivered to the customers.\nIf Industry 3.0 was predominantly driven\
    \ by computer-\nization, then Industry 4.0 is driven by marrying digital tech-\n\
    nologies with physical systems that make them smarter and \nwork independently\
    \ without human intervention. However, \nfrom the discussion, it can also be implied\
    \ that Industry 4.0 \nhas focused on improving profits by concentrating solely\
    \ on \nproduct quality and process efficiency using different digital \ntechnologies.\
    \ But it has widely ignored the need for human \nintelligence and failed to acknowledge\
    \ the impact of digi-\ntal technologies on the environment and society. Like the\
    \ \nprevious industrial revolutions, the technologies of Industry \n4.0 also have\
    \ the destructive potential to promote automa-\ntion and alienate humans from\
    \ the factory shopfloor which \ncould result in job loss and create inequality\
    \ and imbalance \nin society. Hence the need to either give the technologies \n\
    evaluated the impact of these technologies on social sus-\ntainability which must\
    \ be a focus for future investigations. \nHence, replacing industrial robots with\
    \ cobots and adopting \ntechnologies such as IoE, AIoT, edge and fog computing,\
    \ \nsmart sensors, digital twins, 6G and beyond, and extended \nreality which\
    \ either support the inclusion of humans or are \nhighly environment conscious\
    \ must be considered. A recent \nstudy has reported that although blockchain technology\
    \ has \nnumerous benefits in the way how transactions are handled, \nextending\
    \ the network across all the supply chain partners \nwould be expensive, consume\
    \ more energy, and require \nenormous networking and computational power. The\
    \ study \nhas also recommended that reducing the size of the block-\nchain, block\
    \ size optimization, and a lightweight blockchain \nto reduce transaction latency\
    \ and computing power are the \npotential area for future research which can make\
    \ the tech-\nnology sustainable [5]. Hence, apart from performance \naspects,\
    \ optimizing and upgrading the existing technologies \nand inventing new technologies\
    \ to consciously give impor-\ntance to all the three sustainability pillars must\
    \ be the future \ndirection of scholars.\nWith more than two-thirds of the manufacturing\
    \ indus-\ntries yet to embrace Industry 4.0 and the onset of the COVID \n19 pandemic\
    \ further delaying it, there are possibilities that \nindustries can directly\
    \ leap into Industry 5.0 technologies. \nIn addition, return on investment, security,\
    \ privacy, scalabil-\nity, regulatory compliances, and non-availability of skilled\
    \ \nworkers are a few other challenges to the implementation \nand adaptation\
    \ of the technologies. So, industries could \nslowly start embracing one or the\
    \ other key technologies \nthat are critical to improving their process and may\
    \ skip the \nothers. The comparison of the evolution of Industry 4.0 into \nIndustry\
    \ 5.0 technologies is shown in Table 6.\nTable 6 A brief comparison of Industry\
    \ 4.0 and Industry 5.0 technolo-\ngies\nS#\nIndustry 4.0 technologies\nIndustry\
    \ 5.0 technologies\n1\nMass customization\nMass personalization\n2\nHighly automated\
    \ autono-\nmous systems\nIndividualized human-machine \ninteractions\n3\nAutomation\
    \ and Industrial \nrobots\nIntelligent automation, Collab-\norative robots\n4\n\
    Artificial intelligence, \nMachine learning\nCognitive computing\n5\nInternet\
    \ of Things (IoT), \nIndustrial Internet of \nThings (IIoT)\nInternet of Everything\
    \ (IoE), \nArtificial Intelligence of Things \n(AIoT)\n6\nCloud computing\nEdge\
    \ computing, Fog computing\n7\nSimulations\nDigital twins\n8\nCentralized traditional\
    \ \ndatabases\nDecentralized blockchain\n9\nLAN, Internet\nUltra-low latency high\
    \ speed \ninternet\n10\nVirtual reality\nExtended reality (AR, MR, \nHolography)\
    \ and Metaverse\n1 3\n971\nInternational Journal on Interactive Design and Manufacturing\
    \ (IJIDeM) (2023) 17:947–979\nConsent for publication Not applicable.\nDisclaimer\
    \ This disclaimer informs readers that the views, thoughts, \nand opinions expressed\
    \ in the article belong solely to the authors, and \nthey do not purport to reflect\
    \ the opinions, views, policies, or positions \nof authors’ employer, affiliates,\
    \ organization, committee or other group \nor individual.\nReferences\n1. \nFields,\
    \ G.: Urbanization and the Transition from Agrarian to \nIndustrial Society, Berkeley\
    \ Planning Journal, Volume 13, Issue \n1, (1999). https://doi.org/10.5070/BP313113032\n\
    2. \nClark, G.: Industrial Revolution. In: Durlauf, S.N., Blume, \nL.E. (eds.)\
    \ Economic Growth. The New Palgrave Economics \nCollection. Palgrave Macmillan,\
    \ London (2010). https://doi.\norg/10.1057/9780230280823_22\n3. \nSmil, V.: Creating\
    \ the Twentieth Century: Technical Innova-\ntions of 1867–1914 and Their Lasting\
    \ Impact. Oxford University \nPress, Oxford; New York (2005)\n4. \nLi, D., Xu:\
    \ Industry 4.0—Frontiers of fourth industrial revolu-\ntion. Syst. Res. Behav.\
    \ Sci. 37(4), 531–534 (2020). https://doi.\norg/10.1002/sres.2719\n5. \nRaja Santhi,\
    \ A., Muthuswamy, P.: Influence of Blockchain Tech-\nnology in Manufacturing Supply\
    \ Chain and Logistics. Logistics. \n6(1), 15 (2022). https://doi.org/10.3390/logistics6010015\n\
    6. \nLane Thames, D., Schaefer, C.I.R.P.: Volume 52, Pages 12–17, \n(2016). https://doi.org/10.1016/j.procir.2016.07.041\n\
    7. \nSony, M.: Pros and cons of implementing Industry 4.0 for the \norganizations:\
    \ a review and synthesis of evidence, Production & \nManufacturing Research, Volume\
    \ 8, 2020 - Issue 1, Pages 244–\n272, https://doi.org/10.1080/21693277.2020.1781705\n\
    8. \nNahavandi, S.: Industry 5.0—A human-centric solution. Sustain-\nability.\
    \ 11(16), 4371 (2019). https://doi.org/10.3390/su11164371\n9. \nKadir Alpaslan,\
    \ Demir: Gözde Döven, Bülent Sezen, Industry \n5.0 and Human-Robot co-working.\
    \ Procedia Comput. Sci. 158, \n688–695 (2019). https://doi.org/10.1016/j.procs.2019.09.104\n\
    10. McCulloch, W.S., Pitts, W.: A logical calculus of the ideas imma-\nnent in\
    \ nervous activity. Bull. Math. Biophys. 5, 115–133 (1943). \nhttps://doi.org/10.1007/BF02478259\n\
    11. Tank, D.W., Hopfield, J.J.: Neural computation by concentrating \ninformation\
    \ in time. Proc. Natl. Acad. Sci. U.S.A. 84(7), 1896 \n(1987). doi: https://doi.org/10.1073/pnas.84.7.1896\n\
    12. Vapnik, V.N.: An overview of statistical learning theory. IEEE \nTrans. Neural\
    \ Netw. 10(5), 988–999 (1998)\n13. Rumelhart, D.E., Hinton, G.E., Williams, R.J.:\
    \ Learning repre-\nsentations by back-propagating errors. Nature. 323(6088), 533–\n\
    536 (1986)\n14. Hihi, S.E., Hc-J, M.Q., Bengio, Y.: Hierarchical recurrent neural\
    \ \nnetworks for long-term dependencies. Adv. Neural Inf. Process. \nSyst. 8,\
    \ 493–499 (1995)\n15. Lécun, Y., Bottou, L., Bengio, Y., Haffner, P.: Gradient-based\
    \ \nlearning applied to document recognition. Proc. IEEE. 86(11), \n2278–2324\
    \ (1998)\n16. Hinton, G.E., Osindero, S., Teh, Y.W.: A fast learning algorithm\
    \ \nfor deep belief nets Neural Comput, 18 (7) pp.1527–1554. (2014)\n17. Krizhevsky,\
    \ A., Sutskever, I., Hinton, G.E.: ImageNet clas-\nsification with deep convolution\
    \ neural networks, Interna-\ntional conference on neural information processing\
    \ systems, 25 \npp. 1097–1105. (2012)\n18. Ruonan Liu, B., Yang, E., Zio, X.,\
    \ Chen: Artificial intelligence for \nfault diagnosis of rotating machinery: A\
    \ review, Mechanical Sys-\ntems and Signal Processing, Volume 108, Pages33–47,\
    \ (2018). \nhttps://doi.org/10.1016/j.ymssp.2018.02.016\na miss or upgrade them\
    \ to emphasize the inclusiveness of \nhumans into the system and to focus on eco-friendliness\
    \ is \ncritical, both of which are expected to be fulfilled by the \nnext industrial\
    \ revolution.\nWhile the small and medium scale enterprises are yet to \nrealize\
    \ the potential benefits of Industry 4.0 technologies, \nindustrial leaders have\
    \ already started envisioning what \nIndustry 5.0 would look like. Their collective\
    \ opinion echoes \nthe need to bring back the human touch to digital technolo-\n\
    gies to deliver personalized products. If Industry 4.0 is about \ndigitalization,\
    \ then Industry 5.0 would be all about realizing \nthe collaboration between the\
    \ digital world, and the critical \nand creative thinking capabilities of humans,\
    \ being agile to \nchanging market conditions, and additionally emphasizing \n\
    on sustainability. In addition, history has also shown that the \nprevious industrial\
    \ revolutions took decades or centuries to \nallow the emergence of disruptive\
    \ technologies that indus-\ntries adapt slowly before moving from one “revolution”\
    \ to \nthe other. It is aptly called a “revolution” because the level \nof innovation\
    \ behind the technologies is capable of com-\npletely revolutionizing the entire\
    \ industrial practices and not \nmerely providing incremental improvements. However,\
    \ if \nthe prophecies of the leaders and scholars are accounted for, \nthe next\
    \ big thing would be the collaboration of humans with \ndigital technologies with\
    \ an additional focus on economic, \nsocial, and environmental sustainability.\
    \ Hence it would be \nideal to call the upcoming revolution as “Industry 4.0S”\
    \ or \n“Sustainable Industry 4.0” rather than Industry 5.0. Never-\ntheless, with\
    \ Industry 4.0 technologies gaining widespread \nacceptance in the large-scale\
    \ multinational corporations of \nthe developed nations and yet to step their\
    \ feet in small and \nmedium scale industries and developing countries, it is\
    \ too \nearly to call the upcoming transformation as Industry 5.0 \nwithout understanding\
    \ what lies ahead in a few decades \nfrom now. It once again emphasizes that “Industry\
    \ 4.0S” is \nthe suitable connotation for the technologies.\nFunding The authors\
    \ declare that no funds, grants, or other support \nwere received during the preparation\
    \ of this manuscript.\nData availability The authors confirm that the data supporting\
    \ the find-\nings of this study are available within the article [and/or] its\
    \ supple-\nmentary materials.\nCode availability Not applicable.\nDeclarations\n\
    Competing interests The authors have no relevant financial or non-\nfinancial\
    \ interests to disclose.\nEthics approval Not applicable.\nConsent to participate\
    \ Not applicable.\n1 3\n972\nInternational Journal on Interactive Design and Manufacturing\
    \ (IJIDeM) (2023) 17:947–979\n35. Zicari, R.V., Big Data: Challenges and Opportunities\
    \ Akerkar R. \n(Ed.), Big data computing, CRC Press, Taylor & Francis Group, \n\
    Florida, USA (2014), pp. 103–128. (2014)\n36. Heinrichs, W.: ‘Do it anywhere’,\
    \ Electronics Systems and Soft-\nware, 3, (4), p. 30–33, DOI: (2005). https://doi.org/10.1049/\n\
    ess:20050405\n37. Ghomi, E.J., Rahmani, A.M., Qader, N.N.: Cloud manufactur-\n\
    ing: challenges, recent advances, open research issues, and future \ntrends. Int.\
    \ J. Adv. Manuf. Technol. 102, 3613–3639 (2019). \nhttps://doi.org/10.1007/s00170-019-03398-7\n\
    38. Manufacturing, \nC.: \nhttps://www.fastradius.com/\ncloud-manufacturing/\n\
    39. Qu, T., Lei, S.P., Wang, Z.Z., et al.: IoT-based real-time produc-\ntion logistics\
    \ synchronization system under smart cloud manufac-\nturing. Int. J. Adv. Manuf.\
    \ Technol. 84, 147–164 (2016). https://\ndoi.org/10.1007/s00170-015-7220-1\n40.\
    \ Dazhong Wu, D.W., Rosen, L., Wang, D., Schaefer: Cloud-based \ndesign and manufacturing:\
    \ a new paradigm in digital manufactur-\ning and design innovation. Comput. Aided\
    \ Des. 59, 1–14 (2015). \nhttps://doi.org/10.1016/j.cad.2014.07.006\n41. Liu,\
    \ X., Li, Y., Wang, L.: A cloud manufacturing architecture for \ncomplex parts\
    \ machining. J. Manuf. Sci. Eng. 137(6), 061009 \n(2015). https://doi.org/10.1115/1.4029856\n\
    42. Yang, C., Shen, W., Lin, T., et al.: A hybrid framework for integrat-\ning\
    \ multiple manufacturing clouds. Int. J. Adv. Manuf. Technol. \n86, 895–911 (2016).\
    \ https://doi.org/10.1007/s00170-015-8177-9\n43. Wang, X.V., Xu, X.W.: ICMS: a\
    \ cloud-based Manufacturing Sys-\ntem. In: Li, W., Mehnen, J. (eds.) Cloud Manufacturing.\
    \ Springer \nSeries in Advanced Manufacturing. Springer, London (2013). \nhttps://doi.org/10.1007/978-1-4471-4935-4_1\n\
    44. Zhang, Y., Zhang, G., Liu, Y., et al.: Research on services encap-\nsulation\
    \ and virtualization access model of machine for cloud \nmanufacturing. J. Intell.\
    \ Manuf. 28, 1109–1123 (2017). https://\ndoi.org/10.1007/s10845-015-1064-2\n45.\
    \ Luo, Y., Zhang, L., Tao, F., et al.: A modeling and description \nmethod of\
    \ multidimensional information for manufacturing capa-\nbility in cloud manufacturing\
    \ system. Int. J. Adv. Manuf. Technol. \n69, 961–975 (2013). https://doi.org/10.1007/s00170-013-5076-9\n\
    46. Tao, F., Zuo, Y., Li Da, X., Zhang, L.: IoT-based intelligent per-\nception\
    \ and access of manufacturing resource toward cloud man-\nufacturing. IEEE Trans.\
    \ Industr. Inf. 10(2), 1547–1557 (2014). \nhttps://doi.org/10.1109/TII.2014.2306397\n\
    47. Xu, W., Yu, J., Zhou, Z., Xie, Y., Pham, D.T., Ji, C.: Dynamic \nmodeling\
    \ of manufacturing equipment capability using condition \ninformation in cloud\
    \ manufacturing. J. Manuf. Sci. Eng. 137(4), \n040907 (2015). https://doi.org/10.1115/1.4030079\n\
    48. Lu, Y., Shao, Q., Singh, C., Xu, X., Ye, X.: Ontology for manufac-\nturing\
    \ resources in a cloud environment. Int. J. Manuf. Res. 9(4), \n448–469 (2014).\
    \ https://doi.org/10.1504/IJMR.2014.066666\n49. Lu, Y., Xu, X.: A semantic web-based\
    \ framework for service \ncomposition in a cloud manufacturing environment. J.\
    \ Manuf. \nSyst. Volume. 42, 69–81 (2017). https://doi.org/10.1016/j.\njmsy.2016.11.004\n\
    50. Zhou, J., Yao, X.: A hybrid approach combining modified arti-\nficial bee\
    \ colony and cuckoo search algorithms for multiobjec-\ntive cloud manufacturing\
    \ service composition. Int. J. Prod. Res. \n55(16), 4765–4784 (2017). https://doi.org/10.1080/00207543.20\n\
    17.1292064\n51. Zheng, H., Feng, Y., Tan, J.: A fuzzy QoS-aware resource service\
    \ \nselection considering design preference in cloud manufacturing \nsystem. Int.\
    \ J. Adv. Manuf. Technol. 84, 371–379 (2016). https://\ndoi.org/10.1007/s00170-016-8417-7\n\
    52. Zhang, Y., Zhang, G., Qu, T., Liu, Y., Ray, Y., Zhong: Analytical \ntarget\
    \ cascading for optimal configuration of cloud manufactur-\ning services. J. Clean.\
    \ Prod. 151, 330–343 (2017). https://doi.\norg/10.1016/j.jclepro.2017.03.027\n\
    19. Zhao, R., Wang, D., Yan, R., Mao, K., Shen, F., Wang, J.: Machine \nhealth\
    \ monitoring using local feature-based gated recurrent unit \nnetworks. IEEE Transa\
    \ Ind Electron. 65(2), 1539–1548 (2018). \nDoi: https://doi.org/10.1109/TIE.2017.2733438\n\
    20. Wang, P., Gao, R.X., Ruqiang, Yan: A deep learning-based \napproach to material\
    \ removal rate prediction in polishing, CIRP \nAnnals, Volume 66, Issue 1, Pages429–432,\
    \ (2017). https://doi.\norg/10.1016/j.cirp.2017.04.013\n21. Deutsch, J., He, M.,\
    \ He, D.: Remaining useful life prediction of \nHybrid Ceramic Bearings using\
    \ an Integrated Deep Learning and \nParticle Filter Approach. Appl. Sci. 7(7),\
    \ 649 (2017). https://doi.\norg/10.3390/app7070649\n22. Cao, J.G., Wang, D.H.,\
    \ Sui, L.L., Zhou, Y.S., Lai, J.Q., Wangi, \nW.Z.: Prediction model of rolling\
    \ force for electrical steel based \non finite element method and neural network,\
    \ Advanced Sci-\nence and Technology Letters, 47:383–386, (2014). https://doi.\n\
    org/10.14257/astl.2014.47.87\n23. Reddy, D.Y.A., Pratihar, D.K.: Neural network-based\
    \ expert \nsystems for predictions of temperature distributions in electron \n\
    beam welding process. Int. J. Adv. Manuf. Technol. 55, 535–548 \n(2011). https://doi.org/10.1007/s00170-010-3104-6\n\
    24. Shahani, A.R., Setayeshi, S., Nodamaie, S.A., Asadi, M.A., \nRezaie, S.: Prediction\
    \ of influence parameters on the hot rolling \nprocess using finite element method\
    \ and neural network. J. Mater. \nProcess. Technol. 209(4) (2009). Pages 1920–1935\
    \ https://doi.\norg/10.1016/j.jmatprotec.2008.04.055\n25. Hu, J., Sundararaman,\
    \ S., Menta, V.G.K., Chandrashekhara, K., \nChernicoff, W.: Failure pressure prediction\
    \ of composite cylin-\nders for hydrogen storage using thermo-mechanical analysis\
    \ and \nneural network. Adv. Compos. Mater. 18(3), 233–249 (2009). \nhttps://doi.org/10.1163/156855109X428790\n\
    26. Recep Kazan, M., Fırat: Aysun Egrisogut Tiryaki, Prediction of \nspringback\
    \ in wipe-bending process of sheet metal using neural \nnetwork, Materials & Design,\
    \ Volume 30, Issue 2, Pages 418–\n423, (2009). https://doi.org/10.1016/j.matdes.2008.05.033\n\
    27. Umbrello, D., Ambrogio, G., Filice, L., Shivpuri, R.: A hybrid \nfinite element\
    \ method–artificial neural network approach for pre-\ndicting residual stresses\
    \ and the optimal cutting conditions during \nhard turning of AISI 52100 bearing\
    \ steel. Mater. Design. 29(4), \n873–883 (2008). https://doi.org/10.1016/j.matdes.2007.03.004\n\
    28. Wang, J., Das, S., Rai, R., Zhou, C.: Data-driven simulation for \nfast prediction\
    \ of pull-up process in bottom-up stereo-lithography. \nComput. Aided Des. 99,\
    \ 29–42 (2018). https://doi.org/10.1016/j.\ncad.2018.02.002\n29. Patil, S.S.,\
    \ Pardeshi, S.S., Patange, A.D., Jegadeeshwaran, R.: Deep \nLearning Algorithms\
    \ for Tool Condition Monitoring in Milling: A \nReview, Journal of Physics: Conference\
    \ Series, Volume 012039, \n(1969). https://doi.org/10.1088/1742-6596/1969/1/012039\n\
    30. Simon Fahle, C., Prinz, B., Kuhlenkötter: Systematic review \non machine learning\
    \ (ML) methods for manufacturing pro-\ncesses – identifying artificial intelligence\
    \ (AI) methods for field \napplication. Procedia CIRP. 93, 413–418 (2020). https://doi.\n\
    org/10.1016/j.procir.2020.04.109\n31. Liao, Z., Yin, Q., Huang, Y., Sheng, L.:\
    \ Management and appli-\ncation of mobile big data International. J. Embedded\
    \ Syst. 7(1), \n63–70 (2014). https://doi.org/10.1504/IJES.2015.066143\n32. Gandomi,\
    \ A., Haider, M.: Beyond the hype: big data concepts, \nmethods, and analytics.\
    \ Int. J. Inf. Manag. 35(2), 137–144 (2015). \nhttps://doi.org/10.1016/j.ijinfomgt.2014.10.007\n\
    33. Bihani, P., Patil, S.T.: A comparative study of data analysis tech-\nniques.\
    \ Int. J. Emerg. Trends Technol. Comput. Sci. 3(2), 95–101 \n(2014)\n34. Akerkar,\
    \ R.: Big data Computing. CRC Press, Taylor & Francis \nGroup, Florida, USA (2014)\n\
    1 3\n973\nInternational Journal on Interactive Design and Manufacturing (IJIDeM)\
    \ (2023) 17:947–979\n73. Catalog of Control System Security: :Recommendations\
    \ for \nStandards Developers, U.S. Department of Homeland Security, \n(2011)\n\
    74. ICS-CERT Annual Assessment Report: Industrial Control Sys-\ntems Cyber Emergency\
    \ Response Team. National Cybersecurity \nand Communications Integration Center\
    \ (NCCIC) (2016)\n75. Stouffer, K., Pillitteri, V., Lightman, S., Abrams, M.,\
    \ Hahn, A.: \nGuide to Industrial Control Systems (ICS) Security, 2015, NIST \n\
    Special Publication 800 – 82,National Institute of Standard and \nTechnology (NIST)\n\
    76. Babiceanu, R.F., Seker, R.: Cybersecurity and Resilience Model-\nling for\
    \ Software-Defined networks-based Manufacturing Appli-\ncations. In: Borangiu,\
    \ T., Trentesaux, D., Thomas, A., Leitão, \nP., Oliveira, J. (eds.) Service Orientation\
    \ in Holonic and Multi-\nAgent Manufacturing. SOHOMA 2016. Studies in Computa-\n\
    tional Intelligence, vol. 694. Springer, Cham (2017). https://doi.\norg/10.1007/978-3-319-51100-9_15\n\
    77. Jansen, C., Jeschke, S.: Mitigating risks of digitalization through \nmanaged\
    \ industrial security services. AI & Soc. 33, 163–173 \n(2018). https://doi.org/10.1007/s00146-018-0812-1\n\
    78. Kobara, K.: Cyber physical security for industrial control systems \nand IoT,\
    \ IEICE Transactions on Information and Systems, Vol-\nume E99.D, Issue 4, pp.\
    \ 787–795. (2016). https://doi.org/10.1587/\ntransinf.2015ICI0001\n79. Zhu, Q.,\
    \ Craig, R., Basar, T.: A hierarchical security architecture \nfor cyber-physical\
    \ systems, 2011, 4th International Symposium \non Resilient Control Systems, Boise,\
    \ ID, USA\n80. Radanliev, P., De Roure, D.C., et al.: Future developments in cyber\
    \ \nrisk assessment for the internet of things, Computers in Indus-\ntry, Volume\
    \ 102, Pages14–22, (2018). https://doi.org/10.1016/j.\ncompind.2018.08.002\n81.\
    \ Januario, F., Carvalho, C., Cardoso, A., Gil, P.: Security chal-\nlenges in\
    \ SCADA systems over wireless sensor and actuator \nnetworks, 2016 8th International\
    \ Congress on Ultra-Modern Tele-\ncommunications and Control Systems and Workshops\
    \ (ICUMT), \nDOI: https://doi.org/10.1109/ICUMT.2016.7765386\n82. X-Force Threat\
    \ Intelligence Index 2021,IBM\n83. Prinsloo, J., Sinha, S., von Solms, B.: A review\
    \ of industry 4.0 \nManufacturing process security risks. Appl. Sci. 9(23), 5105\
    \ \n(2019). https://doi.org/10.3390/app9235105\n84. Angelo Corallo, M., Lazoi:\
    \ Marianna Lezzi, Cybersecurity in the \ncontext of industry 4.0: a structured\
    \ classification of critical assets \nand business impacts. Comput. Ind. 114,\
    \ 103165 (2020). https://\ndoi.org/10.1016/j.compind.2019.103165\n85. Javaid,\
    \ M., Haleem, A., Singh, R.P., Suman, R.: Substantial capa-\nbilities of robotics\
    \ in enhancing industry 4.0 implementation, \nCognitive Robotics, Volume 1, Pages\
    \ 58–75, (2021). https://doi.\norg/10.1016/j.cogr.2021.06.001\n86. Tantawi, K.H.,\
    \ Sokolov, A., Tantawi, O.: “Advances in Indus-\ntrial Robotics: From Industry\
    \ 3.0 Automation to Industry 4.0 \nCollaboration,“ 2019 4th Technology Innovation\
    \ Management \nand Engineering Science International Conference (TIMES-\niCON),\
    \ \npp. \n1–4, \ndoi: \n(2019). \nhttps://doi.org/10.1109/\nTIMES-iCON47539.2019.9024658\n\
    87. Vitanov, I., Farkhatdinov, I., Denoun, B., et al.: A suite of robotic \nsolutions\
    \ for Nuclear Waste Decommissioning. Robotics. 10(4), \n112 (2021). https://doi.org/10.3390/robotics10040112\n\
    88. Pérez, L., Rodríguez, Ã., Rodríguez, N., Usamentiaga, R., García, \nD.F.:\
    \ Robot Guidance using machine vision techniques in Indus-\ntrial environments:\
    \ a comparative review. Sensors. 16(3), 335 \n(2016). https://doi.org/10.3390/s16030335\n\
    89. Şahin, L.: Impacts of industrial robot usage on international \nlabor markets\
    \ and productivity: evidences from 22 OECD \ncountries. J. Int. Stud. 13(3), 59–67\
    \ (2020). doi:https://doi.\norg/10.14254/2071-8330.2020/13-3/4\n53. Jiajun Zhou,\
    \ X., Yao: Multi-population parallel self-adaptive \ndifferential artificial bee\
    \ colony algorithm with application in \nlarge-scale service composition for cloud\
    \ manufacturing. Appl. \nSoft Comput. 56, 379–397 (2017). https://doi.org/10.1016/j.\n\
    asoc.2017.03.017\n54. Liu, Y., Xu, X., Zhang, L., Wang, L., Ray, Y., Zhong: Workload-\n\
    based multi-task scheduling in cloud manufacturing, Robot-\nics and Computer-Integrated\
    \ Manufacturing, Volume 45, Pages \n3–20, (2017). https://doi.org/10.1016/j.rcim.2016.09.008\n\
    55. Wang, S., Zhu, Z., Kang, L.: Resource allocation model in cloud \nmanufacturing.\
    \ Proc. Inst. Mech. Eng. C J. Mech. Eng. Sci. 230(10), \n1726–1741 (2016). https://doi.org/10.1177/0954406215582016\n\
    56. Cao, Y., Wang, S., Kang, L., et al.: A TQCS-based service selec-\ntion and\
    \ scheduling strategy in cloud manufacturing. Int. J. Adv. \nManuf. Technol. 82,\
    \ 235–251 (2016). https://doi.org/10.1007/\ns00170-015-7350-5\n57. Thekinen, J.,\
    \ Panchal, J.H.: Resource allocation in cloud-based \ndesign and manufacturing:\
    \ A mechanism design approach, Jour-\nnal of Manufacturing Systems, Volume 43,\
    \ Part 2, Pages 327–\n338, (2017). https://doi.org/10.1016/j.jmsy.2016.08.005\n\
    58. Akbaripour, H., Houshmand, M., van Woensel, T., et al.: Cloud \nmanufacturing\
    \ service selection optimization and scheduling \nwith transportation considerations:\
    \ mixed-integer programming \nmodels. Int. J. Adv. Manuf. Technol. 95, 43–70 (2018).\
    \ https://\ndoi.org/10.1007/s00170-017-1167-3\n59. Yuan, M., Deng, K., Chaovalitwongse,\
    \ W.A.: Manufacturing \nresource modeling for cloud manufacturing. Int. J. Intell.\
    \ Syst. \n32(4), 414–436 (2017). https://doi.org/10.1002/int.21867\n60. Tai, L.J.,\
    \ Ru Fu, H., Chen, C.W., Huang, Y.D.: Manufacturing \nresources and demand intelligent\
    \ matching in cloud manufac-\nturing environment. Advanced Materials Research,\
    \ 616:2101–\n2104. \n \n(2013). \nhttps://doi.org/10.4028/www.scientific.net/\n\
    AMR.616-618.2101\n61. Cheng, Y., Tao, F., Zhao, D., Zhang, L.: Modeling of manu-\n\
    facturing service supply–demand matching hypernetwork in \nservice-oriented manufacturing\
    \ systems, Robotics and Com-\nputer-Integrated Manufacturing, Volume 45, Pages59–72,\
    \ (2017). \nhttps://doi.org/10.1016/j.rcim.2016.05.007\n62. Sheng, B., Zhang,\
    \ C., Yin, X., et al.: Common intelligent seman-\ntic matching engines of cloud\
    \ manufacturing service based on \nOWL-S. Int. J. Adv. Manuf. Technol. 84, 103–118\
    \ (2016). https://\ndoi.org/10.1007/s00170-015-7996-z\n63. Guo, L., Wang, S.,\
    \ Kang, L., et al.: Agent-based manufacturing \nservice discovery method for cloud\
    \ manufacturing. Int. J. Adv. \nManuf. Technol. 81, 2167–2181 (2015). https://doi.org/10.1007/\n\
    s00170-015-7221-0\n64. Industrial Cybersecurity, U.S.B.: Threat Report 2021, 2021,HON-\n\
    EYWELL FORGE\n65. Cost of a Data Breach Report: A view from the Cloud 2021. IBM\
    \ \n(2021)\n66. ISA:, “The 62443 Series of Standards”, 2016”ISA North Carolina\n\
    67. Theron, P., Lazari, A., The IACS Cybersecurity Certifica-\ntion Framework\
    \ (ICCF): : Lessons from the 2017 Study of the \nState of the Art European Commission,\
    \ (2018). https://doi.\norg/10.2760/856808\n68. ANSSI:, Managing Cybersecurity\
    \ for Industrial Control Systems, \n(2012)\n69. ANSSI:, Classification Method\
    \ and Key Measures, Cybersecurity \nfor Industrial Control Systems, (2014)\n70.\
    \ ANSSI, Detailed Measures, Cybersecurity for Industrial Control \nSystems, (2014)\n\
    71. API Standard 1164:, American Petroleum Institute (API), (2016)\n72. Bundesamt\
    \ für Sicherheit in der Informationstechnik (BSI):, \nICS Security Compendium\
    \ 2013,Federal Office for Information \nSecurity\n1 3\n974\nInternational Journal\
    \ on Interactive Design and Manufacturing (IJIDeM) (2023) 17:947–979\nCondition\
    \ Data, Procedia CIRP, Volume 80, Pages506–511, \n(2019). https://doi.org/10.1016/j.procir.2018.12.019\n\
    106. Emiliano Traini, G., Bruno, G.D.A., Lombardi, F.: Machine \nLearning Framework\
    \ for Predictive Maintenance in Milling, \nIFAC-PapersOnLine, Volume 52, Issue\
    \ 13, 2019, Pages177–182, \nhttps://doi.org/10.1016/j.ifacol.2019.11.172\n107.\
    \ Rivera, D.L., Scholz, M.R., Christoph Bühl, M., Krauss, K., Schil-\nling: Is\
    \ Big Data About to Retire Expert Knowledge? A Predictive \nMaintenance Study,\
    \ IFAC-PapersOnLine, Volume 52, Issue 24, \n2019, Pages 1–6, https://doi.org/10.1016/j.ifacol.2019.12.364\n\
    108. Li, Z., Wang, Y., Wang, K.S.: Intelligent predictive maintenance \nfor fault\
    \ diagnosis and prognosis in machine centers: indus-\ntry 4.0 scenario. Adv. Manuf.\
    \ 5, 377–387 (2017). https://doi.\norg/10.1007/s40436-017-0203-8\n109. Riel, A.,\
    \ Kreiner, C., Macher, G., Messnarz, R.: Integrated design \nfor tackling safety\
    \ and security challenges of smart products and \ndigital manufacturing, CIRP\
    \ Annals, Volume 66, Issue 1, Pages \n177–180, (2017). https://doi.org/10.1016/j.cirp.2017.04.037\n\
    110. Kim, N.Y., Rathore, S., Ryu, J.H., Park, J.H., Park, J.H.: A Survey \non\
    \ Cyber Physical System Security for IoT: issues, Challenges, \nThreats, Solutions.\
    \ J. Inform. Process. Syst. 14(6), 1361–1384 \n(2018). https://doi.org/10.3745/JIPS.03.0105\n\
    111. Lee, J., Bagheri, B., Kao, H.-A.: A Cyber-Physical Systems archi-\ntecture\
    \ for industry 4.0-based manufacturing systems. Manuf. Lett. \n3, 18–23 (2015).\
    \ https://doi.org/10.1016/j.mfglet.2014.12.001\n112. Kao, H.-A., Jin, W., Siegel,\
    \ D., Lee, J.: A Cyber Physical interface \nfor automation Systems—Methodology\
    \ and examples. Machines. \n3(2), 93–106 (2015). https://doi.org/10.3390/machines3020093\n\
    113. Monostori, L., Kádár, B., Bauernhansl, T., Kondoh, S., Kumara, \nS., Reinhart,\
    \ G., Sauer, O., Schuh, G., Sihn, W., Ueda, K.: Cyber-\nphysical systems in manufacturing.\
    \ CIRP Ann. 65(2), 621–641 \n(2016). https://doi.org/10.1016/j.cirp.2016.06.005\n\
    114. Peng, Y., Lu, T., Liu, J., Gao, Y., Guo, X., Xie, F.: “Cyber-physical \n\
    system risk assessment,” in Proceedings of 2013 9th International \nConference\
    \ on Intelligent Information Hiding and Multimedia \nSignal Processing, Beijing,\
    \ China, pp. 442–447. DOI: (2013). \nhttps://doi.org/10.1109/IIH-MSP.2013.116\n\
    115. M., P. Additive Manufacturing of Tungsten Carbide Hardmetal \nParts by Selective\
    \ Laser Melting (SLM), Selective Laser Sinter-\ning (SLS) and Binder Jet 3D Printing\
    \ (BJ3DP) Techniques.Lasers \nManuf. Mater. Process.7,338–371(2020). https://doi.org/10.1007/\n\
    s40516-020-00124-0\n116. ., Miroslav Mindas, Bednar, S.: Mass customization in\
    \ the con-\ntext of industry 4.0: implications of variety induced complexity,\
    \ \nIndustry 4.0, Mass customization, Complexity, Demand, Variety, \nAdvanced\
    \ industrial engineering, Industry 4.0, pp.21–39. (2016)\n117. Ugur, M., Dilberoglu,\
    \ B., Gharehpapagh, U., Yaman, M., Dolen: \nThe Role of Additive Manufacturing\
    \ in the Era of Industry 4.0, \nProcedia Manufacturing, Volume 11, Pages545–554,\
    \ (2017). \nhttps://doi.org/10.1016/j.promfg.2017.07.148\n118. Gianni Stano, G.,\
    \ Percoco: Additive manufacturing aimed to soft \nrobots fabrication: A review,\
    \ Extreme Mechanics Letters, Volume \n42,101079, (2021). https://doi.org/10.1016/j.eml.2020.101079\n\
    119. Miriyev, A., Stack, K., Lipson, H.: Soft material for soft actua-\ntors.\
    \ Nat. Commun. 8, 596 (2017). https://doi.org/10.1038/\ns41467-017-00685-3\n120.\
    \ Stilli, A., Wurdemann, H.A., Althoefer, K.: A novel concept for \nsafe, stiffness-controllable\
    \ robot links. Soft Robot. 4, 16–22 \n(2017). doi: https://doi.org/10.1089/soro.2016.0015\n\
    121. Voisembert, S., Mechbal, N., Riwan, A., Aoussat, A.: Design of \na novel\
    \ long-range inflatable robotic arm: manufacturing and \nnumerical evaluation\
    \ of the joints and actuation. J. Mech. Robot. \n5, 045001–045001 (2013). doi:\
    \ https://doi.org/10.1115/1.4025025\n122. Kim, Y.-J., Cheng, S., Kim, S., Iagnemma,\
    \ K.: “Design of a tubu-\nlar snake-like manipulator with stiffening capability\
    \ by layer jam-\nming,” in 2012 IEEE/RSJ International Conference on Intelligent\
    \ \n90. Roblek, V., Meško, M., Krapež, A.: A complex view of indus-\ntry 4.0,\
    \ Sage Open, Volume: 6 Issue: 2, (2016). https://doi.\norg/10.1177/2158244016653987\n\
    91. Josef, Basl: The Pilot Survey of the industry 4.0 principles pene-\ntration\
    \ in the selected czech and polish companies. J. Syst. Integr. \n7(4) (2016).\
    \ https://doi.org/10.20470/jsi.v7i4.276\n92. Abdirad, M., Krishnan, K., Gupta,\
    \ D.: A two-stage metaheuristic \nalgorithm for the dynamic vehicle routing problem\
    \ in industry 4.0 \napproach. J. Manage. Analytics. 8(1), 69–83 (2021). https://doi.\n\
    org/10.1080/23270012.2020.1811166\n93. Shao, X.-F., Liu, W., Li, Y., Chaudhry,\
    \ H.R., Yue, X.-G.: Multi-\nstage implementation framework for smart supply chain\
    \ manage-\nment under industry 4.0, Technological Forecasting and Social \nChange,\
    \ Volume 162,120354, (2021). https://doi.org/10.1016/j.\ntechfore.2020.120354\n\
    94. Qureshi, M.O., Syed, R.S.: The Impact of Robotics on Employ-\nment and Motivation\
    \ of Employees in the Service Sector, with \nSpecial Reference to Health Care,\
    \ Safety and Health at Work, Vol-\nume 5, Issue 4, Pages 198–202, (2014). https://doi.org/10.1016/j.\n\
    shaw.2014.07.003\n95. Andreas Björnsson, M., Jonsson, K., Johansen: Automated\
    \ \nmaterial handling in composite manufacturing using pick-and-\nplace systems\
    \ – a review, Robotics and Computer-Integrated \nManufacturing, Volume 51, Pages\
    \ 222–229, (2018). https://doi.\norg/10.1016/j.rcim.2017.12.003\n96. Xiao, L.,\
    \ Kumar, V.: Robotics for customer service: a useful \ncomplement or an ultimate\
    \ substitute? J. Service Res. 24(1), 9–29 \n(2021). https://doi.org/10.1177/1094670519878881\n\
    97. Sivakumar, T.B., Hasan Hussain, S., Kanmani, A., Anand, M.H., \nBabu: Surveillance\
    \ robot for health care applications using IoT \nand wireless sensor network,\
    \ Materials Today: Proceedings, \n(2021). https://doi.org/10.1016/j.matpr.2021.01.170\n\
    98. Pfeiffer, S., Robots: Industry 4.0 and humans, or why Assem-\nbly Work is\
    \ more than routine work. Societies. 6(2), 16 (2016). \nhttps://doi.org/10.3390/soc6020016\n\
    99. Karabegović, I., Karabegović, E., Mahmić, M., Husak, E.: Imple-\nmentation\
    \ of industry 4.0 and Industrial Robots in the Manufac-\nturing processes. In:\
    \ Karabegović, I. (ed.) New Technologies, \nDevelopment and Application II. NT\
    \ 2019. Lecture Notes in Net-\nworks and Systems, vol. 76. Springer, Cham (2020).\
    \ https://doi.\norg/10.1007/978-3-030-18072-0_1\n100. Ribeiro, J., Lima, R., Eckhardt,\
    \ T., Paiva, S.: Robotic process \nautomation and Artificial Intelligence in Industry\
    \ 4.0 – A litera-\nture review. Procedia Comput. Sci. 181, 51–58 (2021). https://\n\
    doi.org/10.1016/j.procs.2021.01.104\n101. Tom, Davenport: Combining Robotic Process\
    \ Automation and \nMachine Learning, White paper, https://www.sas.com/content/\n\
    dam/SAS/documents/marketing-whitepapers-ebooks/third-party-\nwhitepapers/en/combining-robotic-process-automation-machine-\n\
    learning-110369.pdf\n102. Cooper, J., James, A.: Challenges for database management\
    \ \nin the internet of things. IETE Tech. Rev. 26, 320–329 (2009). \ndoi:https://doi.org/10.4103/0256-4602.55275\n\
    103. Devarshi Shah, J., Wang, Q., Peter, He: Feature engineering in \nbig data\
    \ analytics for IoT-enabled smart manufacturing – com-\nparison between deep learning\
    \ and statistical learning. Com-\nput. Chem. Eng. 141, 106970 (2020). https://doi.org/10.1016/j.\n\
    compchemeng.2020.106970\n104. Zhang, J., Wang, P., Gao, R.Y.R.X., Deep Learning\
    \ for Improved \nSystem Remaining Life Prediction, Procedia, C.I.R.P.: Vol-\n\
    ume 72, Pages 1033–1038, (2018). https://doi.org/10.1016/j.\nprocir.2018.03.262\n\
    105. Lee, W.J., Wu, H., Yun, H., Kim, H., Martin, B.G., Jun, J.W., \nSutherland:\
    \ Predictive Maintenance of Machine Tool Systems \nUsing Artificial Intelligence\
    \ Techniques Applied to Machine \n1 3\n975\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\n143. Robotics \nOnline\
    \ \nMarketing \nTeam:, \nWhat \nis \nIndus-\ntry 5.0 and How Will Industrial Robots\
    \ Play a Role? \n29 \nMay \n2018, \nhttps://www.automate.org/blogs/\nwhat-is-industry-5-0-and-how-will-industrial-robots-play-a-role\n\
    144. Eschbach, A.: How Industry 5.0 Will Transform Process Manufac-\nturing As\
    \ We Know It, 13 July (2021). https://www.forbes.com/\nsites/forbestechcouncil/2021/07/13/how-industry-50-will-trans-\n\
    form-process-manufacturing-as-we-know-it/?sh=2127da062ad4\n145. Sharp, N.: Industry\
    \ 5.0 and the future of sustainable manufac-\nturing, 29 July 2021, https://www.jjsmanufacturing.com/blog/\n\
    industry-5.0-and-the-future-of-sustainable-manufacturing\n146. Howard, E.: Peering\
    \ into the Future of Industry 5.0, 31 \nDec \n2020, \nhttps://www.simio.com/blog/2020/12/31/\n\
    peering-future-industry-5-0/\n147. Vural, Özdemir, Hekim, N.: Birth of Industry\
    \ 5.0: Making Sense \nof Big Data with Artificial Intelligence, “The Internet\
    \ of Things” \nand Next-Generation Technology Policy, OMICS: A Journal of \nIntegrative\
    \ Biology. Vol. 22, No. 1, 65–76. (2018). https://doi.\norg/10.1089/omi.2017.0194\n\
    148. Higashihara, T.: A Search for Unicorns and the Building of “Soci-\nety 5.0”.\
    \ World Economic Forum, Davos (2018)\n149. Nakanishi, H.: Modern Society Has Reached\
    \ Its Limits – “Soci-\nety 5.0” Will Liberate us. World Economic Forum, Davos\
    \ (2019)\n150. Maddikunta, P.K.R., Pham, Q.-V., Prabadevi, B., Deepa, N., Dev,\
    \ \nK., Gadekallu, T.R., Ruby, R., Liyanage, M.: Industry 5.0: a sur-\nvey on\
    \ enabling technologies and potential applications. J. Indus-\ntrial Inform. Integr.\
    \ 100257 (2021). https://doi.org/10.1016/j.\njii.2021.100257\n151. Keshab, Panda:\
    \ Future of industrial automation: discern the pos-\nsibilities, potential, 13\
    \ Sep (2019). https://www.controleng.com/\narticles/future-of-industrial-automation-discern-the-possibilities-\n\
    potential/\n152. Elena, Fersman: What are cobots and how will they impact the\
    \ future \nof manufacturing? Ericsson blog, https://www.ericsson.com/en/\nblog/2020/5/what-are-cobots-and-the-future-of-manufacturing\n\
    153. Jürgen, V., Hollen: How cobots are levelling the man-\nufacturing \nplaying\
    \ \nfield, \n22 \nFeb \n2019, \nUniversal \nRobots \nBlog, \nhttps://www.universal-robots.com/blog/\n\
    how-cobots-are-levelling-the-manufacturing-playing-field/\n154. Welding cell welds\
    \ huge fan blades:, Kuka case study, \n(2021). \nhttps://www.kuka.com/en-de/industries/\n\
    solutions-database/2021/05/stela-laxhuber\n155. Charalambous, G., Fletcher, S.,\
    \ Webb, P.: The development of \na scale to Evaluate Trust in Industrial Human-robot\
    \ collabora-\ntion. Int. J. of Soc. Robotics. 8, 193–209 (2016). https://doi.\n\
    org/10.1007/s12369-015-0333-8\n156. Roland Rosen, G., von Wichert, G., Lo, K.D.,\
    \ Bettenhausen: About \nThe Importance of Autonomy and Digital Twins for the Future\
    \ of \nManufacturing, IFAC-PapersOnLine, Volume 48, Issue 3, 2015, \nPages 567–572,\
    \ https://doi.org/10.1016/j.ifacol.2015.06.141\n157. Shafto, M., Conroy, M., Doyle,\
    \ R., Glaessgen, E., Wang, L., \nModeling, D.R.A.F.T.:Simulation, Information\
    \ Technology & \nProcessing Roadmap Technology, (2010)\n158. Jiang Yuchen, Y.,\
    \ Shen, L., Kuan: Luo Hao and Kaynak Okyay \n2021Industrial applications of digital\
    \ twins,Philosophical Trans-\nactions of the Royal Society A. 379:20200360. https://doi.\n\
    org/10.1098/rsta.2020.0360\n159. Roberto, Saracco: Digital twins: bridging Physical\
    \ Space and \nCyberspace. IEEE Comput. Volume. 52(12), 58–64 (2019). \ndoi:https://doi.org/10.1109/MC.2019.2942803\n\
    160. Mark, Crawford: 7 Digital Twin Applications for Manufactur-\ning, 17 March\
    \ 2021, https://www.asme.org/topics-resources/\ncontent/7-digital-twin-applications-for-manufacturing\n\
    161. Jones, D., Snider, C., Nassehi, A., Yon, J., Part, A.:pp. 36–52, \nhttps://doi.org/10.1016/j.cirpj.2020.02.002.\
    \ (2020)\nRobots and Systems (IROS) (Vilamoura), 4251–4256. doi: \n(2012). https://doi.org/10.1109/IROS.2012.6385574\n\
    123. Brown, E., Rodenberg, N., Amend, J., Mozeika, A., Steltz, E., \nZakin, M.R.,\
    \ et al.: Universal robotic gripper based on the jamming \nof granular material.\
    \ Proc. Natl. Acad. Sci. U.S.A. 107, 18809–\n18814. doi: (2010). https://doi.org/10.1073/pnas.1003250107\n\
    124. Khoo, Z.X., Teoh, J.E.M., Liu, Y., et al.: 3D printing of smart \nmaterials:\
    \ a review on recent progresses in 4D printing. Virtual \nand Physical Prototyping.\
    \ 10(3), 103–122 (2015). https://doi.org/\n10.1080/17452759.2015.1097054\n125.\
    \ MacCurdy, R., Katzschmann, R., Youbin, K., Rus, D.: Printable \nhydraulics:\
    \ A method for fabricating robots by 3D co-printing \nsolids and liquids, in IEEE\
    \ International Conference on Robot-\nics and Automation (ICRA), pp. 3878–3885.\
    \ DOI: (2016). https://\ndoi.org/10.1109/ICRA.2016.7487576\n126. Hiroki Ota, S.,\
    \ Emaminejad, Y., Gao, et al.: Application of 3D \nPrinting for Smart Objects\
    \ with Embedded Electronic Sensors \nand Systems, Advanced Materials Technologies,\
    \ Volume 1, Issue \n1, 1600013, (2016). https://doi.org/10.1002/admt.201600013\n\
    127. Maccurdy, R., Katzschmann, R., Kim, Y., et al.: 3D Printing for \nthe Rapid\
    \ Prototyping of Structural Electronics. IEEE Access. 2 \n(2014). DOI: https://doi.org/10.1109/ACCESS.2014.2311810\n\
    128. Weflen, E., Frank, M.C.: Hybrid additive and subtractive manu-\nfacturing\
    \ of multi-material objects. Rapid Prototyp. J. (2021). \nhttps://doi.org/10.1108/RPJ-06-2020-0142\n\
    129. Park, Y.J.: History of Unemployment in Industrial Society, \nKorean Minjok\
    \ Leadership Academy, (2008). https://www.zum.\nde/whkmla/sp/0910/ferrari/ferrari2.html#ii1,\
    \ accessed on 20 Dec \n2021\n130. The impact of the technological revolution on\
    \ labour markets and \nincome distribution:, United Nations Department of Economic\
    \ \nand Social Affairs (DESA/DPAD), Frontier Issues, 31 July 2017\n131. Jessica,\
    \ Miley: 11 Times AI Beat Humans at Games, Art, Law \nand Everything in Between,\
    \ 12 Mar (2018). https://interestingen-\ngineering.com/11-times-ai-beat-humans-at-games-art-law-and-\n\
    everything-in-between\n132. A ‘New’ Rembrandt: : From the frontiers of AI and\
    \ not the artist’s \natelier,6 April(2016). https://www.npr.org/sections/alltechconside\n\
    red/2016/04/06/473265273/a-new-rembrandt-from-the-frontiers-\nof-ai-and-not-the-artists-atelier\n\
    133. Cristina, Criddle: Rembrandt’s The Night Watch painting \nrestored by AI,\
    \ 23 June 2021, https://www.bbc.com/news/\ntechnology-57588270\n134. World Development\
    \ Report : Digital Dividends. The World Bank. \ndoi: (2016). https://doi.org/10.1596/978-1-4648-0671-1\n\
    135. Daron Acemoglu and Pascual Restrepo: “The race between Man \nand Machine:\
    \ implications of technology for growth, factor \nshares, and employment,“. Am.\
    \ Econ. Rev. 108(6), 1488–1542 \n(2018). DOI: https://doi.org/10.3386/w22252\n\
    136. Floyd, D.: The Long, Weird History of Universal Basic Income—\nand Why It’s\
    \ Back, 30 Dec 2021. https://www.investopedia.com/\nnews/history-of-universal-basic-income/\n\
    137. Industry: 5.0, https://ec.europa.eu/info/research-and-innovation/\nresearch-area/industrial-research-and-innovation/industry-50_en\n\
    138. Esben, H., Østergaard, M.-A.: (2018). https://www.isa.org/\nintech-home/2018/march-april/features/welcome-to-industry-5-0\n\
    139. Industry 5:. 0: the new revolution, https://nexusintegra.io/\nindustry-5-0-the-new-revolution/\n\
    140. What: is Industry 4.0 and 5.0? Your Guide to Understanding \nIndustry 4.0\
    \ and 5.0, https://gesrepair.com/industry-4-and-5/\n141. Hanna, Kleinings: Industry\
    \ 5.0: Leadership in the era of AI, 15 \nJun 2021, https://levity.ai/blog/leadership-ai\n\
    142. Aroop, Zutshi: Industry 5.0—Bringing Empowered Humans \nBack to the Shop\
    \ Floor, 26 Nov (2019). https://www.frost.com/\nfrost-perspectives/industry-5-0-bringing-empowered-humans-\n\
    back-to-the-shop-floor/\n1 3\n976\nInternational Journal on Interactive Design\
    \ and Manufacturing (IJIDeM) (2023) 17:947–979\nsystems. Manuf. Lett. 20, 34–39\
    \ (2019). https://doi.org/10.1016/j.\nmfglet.2019.05.003\n179. Westerkamp, M.,\
    \ Victor, F., Küpper, A.: Tracing manufacturing \nprocesses using blockchain-based\
    \ token compositions, Digital \nCommunications and Networks, Volume 6, Issue 2,\
    \ Pages 167–\n176, (2020). https://doi.org/10.1016/j.dcan.2019.01.007\n180. Zhang,\
    \ Y., Zhang, P., Tao, F., Liu, Y., Zuo, Y.: Consensus aware \nmanufacturing service\
    \ collaboration optimization under block-\nchain based Industrial Internet platform.\
    \ Comput. Ind. Eng. 135, \n1025–1035 (2019). https://doi.org/10.1016/j.cie.2019.05.039\n\
    181. Zhu, X., Shi, J., Huang, S., Zhang, B.: Consensus-oriented cloud \nmanufacturing\
    \ based on blockchain technology: An exploratory \nstudy, Pervasive and Mobile\
    \ Computing, Volume 62,101113, \n(2020). https://doi.org/10.1016/j.pmcj.2020.101113\n\
    182. Laroui, M., Nour, B., Moungla, H., et al.: Edge and fog comput-\ning for\
    \ IoT: A survey on current research activities & future direc-\ntions, Computer\
    \ Communications, Volume 180, Pages210–231, \n(2021). https://doi.org/10.1016/j.comcom.2021.09.003\n\
    183. Ashkan Yousefpour, C., Fung, T., Nguyen, et al.: All one needs \nto know\
    \ about fog computing and related edge computing para-\ndigms: a complete survey.\
    \ J. Syst. Architect. 98, 289–330 (2019). \nhttps://doi.org/10.1016/j.sysarc.2019.02.009\n\
    184. Jalali, F., Hinton, K., Ayre, R., Alpcan, T., Tucker, R.S.: Fog \ncomputing\
    \ may help to save energy in cloud computing. IEEE J. \nSel. Areas Commun. 34(5),\
    \ 1728–1739 (2016). DOI: https://doi.\norg/10.1109/JSAC.2016.2545559\n185. Yanyan\
    \ Dong, J., Hou, N., Zhang, Zhang, M.: Research on How \nHuman Intelligence, Consciousness,\
    \ and Cognitive Computing \nAffect the Development of Artificial Intelligence,\
    \ Complexity, \n1680845, (2020). https://doi.org/10.1155/2020/1680845\n186. Hwang,\
    \ K., Chen, M.: Big-data Analytics for Cloud, IoT and \nCognitive Computing, Publisher:\
    \ John Wiley & Sons, ISBN: \n9781119247029, ISBN: 1119247020. (2017)\n187. Peter\
    \ Sommer, A., Intelligence, M., Learning, Comput-\ning, C.: 20 (2017). https://www.ibm.com/blogs/nordic-msp/\n\
    artificial-intelligence-machine-learning-cognitive-computing/\n188. Shivam Gupta,\
    \ A.K., Kar, A., Baabdullah, Wassan, A.A., Al-\nKhowaiter: Big data with cognitive\
    \ computing: a review for \nthe future. Int. J. Inf. Manag. 42, 78–89 (2018).\
    \ https://doi.\norg/10.1016/j.ijinfomgt.2018.06.005\n189. Maamar, Z., Baker, T.,\
    \ Faci, N., et al.: Cognitive Computing \nMeets The Internet of Things, n: Proceedings\
    \ of the 13th Inter-\nnational Conference on Software Technologies / [ed] Leszek\
    \ \nMaciaszek, Marten van Sinderen, SciTePress, p. 741–746. DOI: \n(2018). https://doi.org/10.5220/0006877507750780\n\
    190. Jeff, Desjardins: How much data is generated each day? \n17 \nApril \n2019,\
    \ \nhttps://www.weforum.org/agenda/2019/04/\nhow-much-data-is-generated-each-day-cf4bddf29f/\n\
    191. White Paper, I.B.M.: Computing, Cognition and the Future of \nKnowing: How\
    \ Humans and Machines are Forging a new age \nof Understanding, IBM Research and\
    \ Solutions Portfolio. IBM \nGlobal Services, New York, USA (2015)\n192. Mayank,\
    \ Aggarwal: Mani Madhukar, IBM’s Watson Analytics for \nHealth Care, In book:\
    \ Cloud Computing Systems and Applica-\ntions in Healthcare, DOI: (2017). https://doi.org/10.4018/978-1-\n\
    5225-1002-4.ch007\n193. Thorsten, Schroeer: Cognitive computing: Hello Watson\
    \ on \nthe shop floor, 9 May (2017). https://www.ibm.com/blogs/\ninternet-of-things/iot-cognitive-computing-watson/\n\
    194. Atzeni, M., Dridi, A.: Reforgiato Recupero, D. using frame-based \nresources\
    \ for sentiment analysis within the financial domain. Prog \nArtif. Intell. 7,\
    \ 273–294 (2018)\n195. Irfan, M.T., Gudivada, V.N.: Chap. 9 - Cognitive Computing\
    \ \nApplications in Education and Learning, Editor(s): Venkat N. \nGudivada, Vijay\
    \ V. Raghavan, Venu Govindaraju, C.R. Rao, \nHandbook of Statistics, Elsevier,\
    \ Volume 35, Pages 283–300, \n162. Tao, F., Zhang, H., Liu, A., Andrew, Y.C.,\
    \ Nee: Digital Twin in \nIndustry: state-of-the-art. IEEE Trans. Industr. Inf.\
    \ 15(4), 2405–\n2415 (2019). DOI: https://doi.org/10.1109/TII.2018.2873186\n163.\
    \ Barricelli, B., Casiraghi, E., Fogli, D.: 2019 A survey on digi-\ntal twin:\
    \ definitions, characteristics, applications, and design \nimplications.IEEE Access7,167\
    \ 653 – 167 671. doi:https://doi.\norg/10.1109/ACCESS.2019.2953499\n164. Qi, Q.,\
    \ Tao, F.: 2018 Digital twin and big data towards \nsmart manufacturing and Industry\
    \ 4.0: 360-degree compari-\nson.IEEE \nAccess6,3585–3593. \ndoi:https://doi.org/10.1109/\n\
    ACCESS.2018.2793265\n165. He, Y., Guo, J., Zheng, X.: From surveillance to digital\
    \ twin chal-\nlenges and recent advances of signal processing for the indus-\n\
    trial internet of things. IEEE Signal. Process. Mag. 35, 120–129 \n(2018). doi:https://doi.org/10.1109/MSP.2018.2842228\n\
    166. Jain, P., Poon, J., Singh, J.P., Spanos, C., Sanders, S.R., Panda, \nS.K.:\
    \ A digital twin approach for fault diagnosis in distributed \nphotovoltaic systems.\
    \ IEEE Trans. Power Electro. 35, 940–956 \n(2020). doi: https://doi.org/10.1109/TPEL.2019.2911594\n\
    167. Bachelor, G., Brusa, E., Ferretto, D., Mitschke, A.: Model-based \ndesign\
    \ of Complex Aeronautical Systems through Digital Twin \nand Thread Concepts.\
    \ IEEE Syst. J. 14(2), 1568–1579 (2020). \nDOI: https://doi.org/10.1109/jsyst.2019.2925627\n\
    168. Li, X., He, B., Zhou, Y., Li, G.: Multisource Model-Driven Digi-\ntal Twin\
    \ System of Robotic Assembly. IEEE Syst. J. 15(1), 114–\n123 (2021). doi: https://doi.org/10.1109/jsyst.2019.2958874\n\
    169. Campos, J., López, J., Armesto Quiroga, J., Espada Seoane, A.: \nAutomatic\
    \ generation of digital twin industrial system from a \nhigh level specification.\
    \ Procedia Manuf. 38, 1095–1102 (2019). \ndoi: https://doi.org/10.1016/j.promfg.2020.01.197\n\
    170. Schluse, M., Priggemeyer, M., Atorf, L., Rossmann, J.: IEEE \nTrans. Industr.\
    \ Inf. 14(4), 1722–1731 (2018). doi: https://doi.\norg/10.1109/TII.2018.2804917\
    \ Experimentable Digital Twins—\nStreamlining Simulation-Based Systems Engineering\
    \ for Indus-\ntry 4.0\n171. Schleich, B., Anwer, N., Mathieu, L., Wartzack, S.:\
    \ Shaping \nthe digital twin for design and production engineering, CIRP \nAnnals,\
    \ Volume 66, Issue 1, Pages 141–144, (2017). https://doi.\norg/10.1016/j.cirp.2017.04.040\n\
    172. The Internet of Everything:,Cisco IoE Value Index Study, (2013)\n173. Li,\
    \ C., Zhang, L.J.: A blockchain based new secure multi-\nlayer network model for\
    \ Internet of Things, Proceedings of the \nIEEE International Congress on Internet\
    \ of Things (ICIOT), \nIEEE pp. 33–41. DOI: (2017). https://doi.org/10.1109/IEEE.\n\
    ICIOT.2017.34\n174. Crosby, M., Pattanayak, P., Verma, S., Kalyanaraman, V.: Block-\n\
    chain Technology Beyond Bitcoin. Applied Innovation, Vol-\nume 2, Issue 2, Pages\
    \ 6–10. (2016)\n175. Conoscenti, M., Vetrò, A., De Martin, J.C.: Blockchain for\
    \ the \nInternet of Things: a systematic literature review, Proceedings of \n\
    the IEEE/ACS International Conference of Computer Systems \nand Applications,\
    \ pp. 1–6, DOI: (2017). https://doi.org/10.1109/\nAICCSA.2016.7945805\n176. Li,\
    \ Z., Barenji, A.V., Huang, G.Q.: Toward a blockchain cloud \nmanufacturing system\
    \ as a peer to peer distributed network \nplatform, Robotics and Computer-Integrated\
    \ Manufacturing, \nVolume 54, Pages 133–144, (2018). https://doi.org/10.1016/j.\n\
    rcim.2018.05.011\n177. Yu, C., Jiang, X., Yu, S., Yang, C.: Blockchain-based shared\
    \ \nmanufacturing in support of cyber physical systems: con-\ncept, framework,\
    \ and operation, Robotics and Computer-Inte-\ngrated Manufacturing, Volume 64,101931,\
    \ (2020). https://doi.\norg/10.1016/j.rcim.2019.101931\n178. Lee, J., Azamfar,\
    \ M., Singh, J.: A blockchain enabled Cyber-\nPhysical System architecture for\
    \ industry 4.0 manufacturing \n1 3\n977\nInternational Journal on Interactive\
    \ Design and Manufacturing (IJIDeM) (2023) 17:947–979\n214. Smparounis, K., Mavrikios,\
    \ D., Pappas, M., et al.: A virtual and \naugmented reality approach to collaborative\
    \ product design and \ndemonstration, in Proc. IEEE Int. Technol. Manage. Conf.\
    \ (ICE), \nLisbon, Portugal, pp. 1–8. (2008)\n215. Ong, S.K., Yuan, M.L., Nee,\
    \ A.Y.C.: Augmented reality applica-\ntions in manufacturing: a survey. Int. J.\
    \ Prod. Res. 46(10), 2707–\n2742 (2008). https://doi.org/10.1080/00207540601064773\n\
    216. Boulanger, P.: Application of augmented reality to industrial tele-\ntraining,\
    \ in Proc. 1st Can. Conf. Comput. Robot Vis., May pp. 320–\n328. DOI: (2004).\
    \ https://doi.org/10.1109/CCCRV.2004.1301462\n217. Purvis, B., Mao, Y., Robinson,\
    \ D.: Three pillars of sustainability: \nin search of conceptual origins. Sustain.\
    \ Sci. 14, 681–695 (2019). \nhttps://doi.org/10.1007/s11625-018-0627-5\n218. Jamwal,\
    \ A., Agrawal, R., Sharma, M., Giallanza, A.: Industry \n4.0 Technologies for\
    \ Manufacturing sustainability: a systematic \nreview and future research directions.\
    \ Appl. Sci. 11(12), 5725 \n(2021). https://doi.org/10.3390/app11125725\n219.\
    \ Rodrigo Arias, K.L., Lueth, A., Rastogi: The effect of the Inter-\nnet of Things\
    \ on sustainability, World Economic Forum, 21 Jan \n(2018)\n220. Billions of people\
    \ still breathe: unhealthy air: new WHO data, 4 \nApril 2022, https://www.who.int/news/item/04-04-2022-billions-\n\
    of-people-still-breathe-unhealthy-air-new-who-data\n221. Marianna Ciccarelli,\
    \ A., Papetti, M., Germani, A., Leone, G., \nRescio: Human work sustainability\
    \ tool. J. Manuf. Syst. Volume. \n62, 76–86 (2022). https://doi.org/10.1016/j.jmsy.2021.11.011\n\
    222. Resta, B., Dotti, S., Gaiardelli, P., Boffelli, A.: Lean Manufactur-\ning\
    \ and sustainability: an Integrated View. In: et al. In: Advances \nin Production\
    \ Management Systems. Initiatives for a Sustainable \nWorld. APMS 2016. IFIP Advances\
    \ in Information and Commu-\nnication Technology, vol. 488. Springer, Cham (2016).\
    \ https://\ndoi.org/10.1007/978-3-319-51133-7_78\n223. Padmakumar, Muthuswamy:\
    \ Investigation on sustainable \nmachining characteristics of tools with serrated\
    \ cutting edges \nin face milling of AISI 304 Stainless Steel, Procedia CIRP,\
    \ \nVolume 105, Pages 865–871, (2022). https://doi.org/10.1016/j.\nprocir.2022.02.143\n\
    224. Brozzi, R., Forti, D., Rauch, E., Matt, D.T.: The advantages of \nindustry\
    \ 4.0 applications for sustainability: results from a sample \nof Manufacturing\
    \ Companies. Sustainability. 12(9), 3647 (2020). \nhttps://doi.org/10.3390/su12093647\n\
    225. Peter, Sachsenmeier: Industry 5.0—The Relevance and Impli-\ncations of Bionics\
    \ and Synthetic Biology, Engineering, Vol-\nume 2, Issue 2, Pages 225–229, (2016).\
    \ https://doi.org/10.1016/J.\nENG.2016.02.015\n226. Devon, McGinnis: What Is the\
    \ Fourth Industrial Revolution? \n27 Oct 2020, Salesforce blog, https://www.salesforce.com/blog/\n\
    what-is-the-fourth-industrial-revolution-4ir/\n227. Singh, R.: Are we ready for\
    \ NDE 5.0, handbook of nondestruc-\ntive evaluation 4.0. Springer Nat. Switz.\
    \ AG. (2021). https://doi.\norg/10.1007/978-3-030-48200-8_62-1\n228. AlMaadeed,\
    \ M., Ponnamma, D.: Role of Research and Higher \nEducation on Industry 4.0, Material\
    \ Science as an example, 2020 \nIEEE International Conference on Informatics,\
    \ IoT, and Enabling \nTechnologies, IEEE Xplore, DOI: https://doi.org/10.1109/\n\
    ICIoT48696.2020.9089662\n  229.  \nAbirami, Raja Santhi Padmakumar, Muthuswamy\
    \ (2022) \nPandemic War Natural Calamities and Sustainability: Industry 4.0 \n\
    Technologies to Overcome Traditional and Contemporary Supply \nChain Challenges.\
    \ Logistics 6(4) 81-10.3390/logistics6040081 \n  230.  \nPadmakumar, Muthuswamy\
    \ (2022) Influence of powder \ncharacteristics on properties of parts manufactured\
    \ by metal addi-\ntive manufacturing. Lasers in Manufacturing and Materials Pro-\n\
    cessing 9(3) 312-337 10.1007/s40516-022-00177-3 \n  231.  \nPadmakumar, \nMuthuswamy\
    \ \nShunmugesh, \nK \nArti-\nficial intelligence based tool condition monitoring\
    \ for \nISSN 0169–7161, ISBN 9780444637444, (2016). https://doi.\norg/10.1016/bs.host.2016.07.008\n\
    196. Behera, R.K., Bala, P.K., Dhir, A.: The emerging role of cogni-\ntive computing\
    \ in healthcare: a systematic literature review. Int. J. \nMed. Informatics. 129,\
    \ 154–166 (2019). https://doi.org/10.1016/j.\nijmedinf.2019.04.024\n197. Cervenka,\
    \ P., Hlavaty, I., Miklosik, A., Lipianska, J.: Using \ncognitive systems in marketing\
    \ analysis. Economic Annals-\nXxi, Article. 160(7–8), 56–61 (2016). https://doi.org/10.21003/\n\
    ea.V160-11\n198. Hirt, R., Kühl, N., Satzger, G.: Cognitive computing for cus-\n\
    tomer profiling: meta classification for gender prediction. Elec-\ntron. Markets.\
    \ 29, 93–106 (2019). https://doi.org/10.1007/\ns12525-019-00336-z\n199. Schuetz,\
    \ S., Venkatesh, Viswanath: The rise of Human Machines: \nhow cognitive Computing\
    \ Systems Challenge Assumptions of \nuser-system Interaction (August 25, 2020).\
    \ J. Association Inform. \nSyst. 21(2), 460–482 (2020)\n200. Rajathevaet al, et\
    \ al.: White paper on broadband connectivity \nin6G, 2020, arXiv:2004.14247, http://arxiv.org/abs/2004.14247\n\
    201. Emilio Calvanese Strinati: Sergio Barbarossa; Jose Luis Gonza-\nlez-Jimenez,\
    \ 6G: the Next Frontier: from holographic messaging \nto Artificial Intelligence\
    \ using Subterahertz and visible light com-\nmunication. IEEE Veh. Technol. Mag.\
    \ 14(3) (2019). DOI: https://\ndoi.org/10.1109/MVT.2019.2921162\n202. Chowdhury,\
    \ M.Z., Shahjalal, M., Ahmed, S., Jang, Y.M.: 6G \nwireless communication systems:\
    \ Applications, requirements, \ntechnologies, challenges, and research directionsIEEE\
    \ Open J. \nCommun. Soc.,1pp. 957–975. (2020)\n203. Patrik, Rugeland, Hexa: -X:\
    \ 6G technology and its evolution \nso far, 15 July 2021, https://www.ericsson.com/en/blog/2021/7/\n\
    hexa-x-6 g-technology-6 g-use-cases\n204. Carmigniani, J., Furht, B.: Augmented\
    \ reality: an overview. In: \nFurht, B. (ed.) Handbook of Augmented Reality. Springer,\
    \ New \nYork, NY (2011). https://doi.org/10.1007/978-1-4614-0064-6_1\n205. Sutherland,\
    \ I.E.: The ultimate display, Proceedings of the IFIP \nCongress, pp. 506–508.\
    \ (1965)\n206. Sutherland, I.E.: A head-mounted three-dimensional display, Pro-\n\
    ceedings of AFIPS, San Francisco, CA, USA, Dec. pp. 757–764. \nDOI: (1968). https://doi.org/10.1145/1476589.1476686\n\
    207. Javaid, M., Haleem, A., et al.: Industry 4.0 Technologies and \nTheir Applications\
    \ in Fighting COVID-19 Pandemic, Diabetes & \nMetabolic Syndrome, vol. 14, pp.\
    \ 419–422. Clinical Research & \nReviews (2020). 4https://doi.org/10.1016/j.dsx.2020.04.032\n\
    208. Gerencer, T.: What Is Extended Reality (XR) and How Is it \nChanging the\
    \ Future? 3 April 2021, https://www.hp.com/us-en/\nshop/tech-takes/what-is-xr-changing-world\n\
    209. Schneider, M., Rambach, J., Stricker, D.: Augmented reality \nbased on edge\
    \ computing using the example of remote live sup-\nport, in Proc. 18th Annu. Int.\
    \ Conf. Ind. Technol., Mar. pp. 1277–\n1282. DOI: (2017). https://doi.org/10.1109/ICIT.2017.7915547\n\
    210. Petr Hořejší, P., Engineering: Volume 100, Pages 699–706, \n(2015). https://doi.org/10.1016/j.proeng.2015.01.422\n\
    211. Frigo, M.A., da Silva, E.C.C., Barbosa, G.F.: Augmented reality \nin aerospace\
    \ manufacturing: A review, Journal of Industrial and \nIntelligent Information\
    \ Vol. 4, No. 2, March pp. 125–130, 2016. \ndoi: (2016). https://doi.org/10.18178/jiii.4.2.125-130\n\
    212. Paelke, V.: Augmented reality in the smart factory: Support-\ning workers\
    \ in an industry 4.0. environment, in Proceedings of \nthe 2014 IEEE Emerging\
    \ Technology and Factory Automation \n(ETFA), Sep. pp. 1–4, DOI: (2014). https://doi.org/10.1109/\n\
    ETFA.2014.7005252\n213. Hauswiesner, S., Straka, M., Reitmayr, G.: Virtual try-on\
    \ through \nimage-based rendering. IEEE Trans. Vis. Comput. Graphics. \n19(9),\
    \ 1552–1565 (Sep. 2013). DOI: https://doi.org/10.1109/\nTVCG.2013.67\n1 3\n978\n\
    International Journal on Interactive Design and Manufacturing (IJIDeM) (2023)\
    \ 17:947–979\nSpringer Nature or its licensor (e.g. a society or other partner)\
    \ holds \nexclusive rights to this article under a publishing agreement with the\
    \ \nauthor(s) or other rightsholder(s); author self-archiving of the accepted\
    \ \nmanuscript version of this article is solely governed by the terms of \nsuch\
    \ publishing agreement and applicable law. \ndigital twins and industry 4.0 applications.\
    \ International Journal \non Interactive Design and Manufacturing (IJIDeM) 10.1007/\n\
    s12008-022-01050-5 \nPublisher’s note Springer Nature remains neutral with regard\
    \ to juris-\ndictional claims in published maps and institutional affiliations.\n\
    1 3\n979\n"
  inline_citation: '>'
  journal: IJIDEM (Online)
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s12008-023-01217-8.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Industry 5.0 or industry 4.0S? Introduction to industry 4.0 and a peek into
    the prospective industry 5.0 technologies
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.cirp.2019.05.010
  analysis: '>'
  authors:
  - Tetsuo Tomiyama
  - Eric Lutters
  - Rainer Stark
  - Michael Abramovici
  citation_count: 107
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Smart products 3. Enabling technologies
    for smart products 4. Development methods and tools for smart products 5. Research
    challenges for smart product development 6. Discussions and future research directions
    7. Summary and conclusions Acknowledgments References Show full outline Cited
    by (111) Figures (19) Show 13 more figures Tables (4) Table 1 Table 2 Table 3
    Table 4 CIRP Annals Volume 68, Issue 2, 2019, Pages 727-750 Development capabilities
    for smart products Author links open overlay panel Tetsuo Tomiyama (1) a, Eric
    Lutters (1) b, Rainer Stark (2) c, Michael Abramovici (2) d Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.cirp.2019.05.010 Get rights and content Abstract
    Smart products supported by new step-changing technologies, such as Internet of
    Things and artificial intelligence, are now emerging in the market. Smart products
    are cyber physical systems with services through Internet connection. For example,
    smart vehicles equipped with advanced embedded intelligence are connected to other
    vehicles, people, and environment, and offer innovative data-driven services.
    Since smart products are software-intensive, data-driven, and service-conscious,
    their development clearly needs new capabilities underpinned by advanced tools,
    methods, and models. This paper reviews the status and trends of these emerging
    development technologies such as model-based systems engineering and digital twin.
    Previous article in issue Next article in issue Keywords DesignProduct developmentModel-based
    systems engineering 1. Introduction With such features as intelligent, connected,
    and autonomous, new types of products are appearing in the market, qualitatively
    differentiating themselves from previous product generations. In this keynote
    paper, these products are called ‘smart products’ [3], [12], [34], [181]. Although
    ‘smart’ is used as a synonym for almost any concept to mean ‘intelligent’, ‘clever’,
    ‘nifty’ or even just ‘advanced’, the ‘smart product’ concept includes much wider
    connotations. This means that it is insufficient just to discuss their development
    only from the viewpoint of intelligence. This paper is an attempt to sharpen the
    smart product concept and to identify issues, challenges and research needs associated
    with the technologies, methods, tools, and models for the smart product development.
    Smart products exhibit several distinctive functional capabilities and technical
    features that differentiate them from conventional products [3], [12] (see Section
    2.2). Some of these are listed below. • Intelligence: Intelligence is critical
    for smart products, as this forms the basis for other (secondary) features. For
    example, when smart products interact with human users, their ‘intelligence’ features
    play the key role. In contrast, obviously intelligence is indispensable to autonomy
    of smart products. • Connectedness: Connectedness addresses the connectivity of
    smart products with other products, humans, data and services through networks.
    This also implies potential threat of cyber-attacks and necessity of private data
    protection. • Service integration: Intelligence and connectedness features are
    indispensable for smart products to create new ‘services’. An example of new types
    of services enabled by intelligence and connectedness is mobility service with
    autonomous driving vehicles. • Data driven: Smart products connected over the
    network form a platform to collect data and information through their sensing
    capabilities. The collected data can be processed with data analytics techniques
    [18], [154] for both technical and commercial purposes. For instance, the data
    collected through the network could be used to make lifecycle-related decisions
    such as maintenance, while the latter can be used to extract user preferences
    and profiles that are commercially important. Fig. 1 depicts the evolution of
    the smart product concept, starting from just mechatronics products, intelligent
    mechatronics systems, Cyber-Physical Systems (CPS) [19], [129], [169], [170],
    and then to smart products. Mechatronics products rely on (mostly feedback) control
    of the mechanical system using electronics. However, as software executes control,
    sophisticated control beyond simple feedback control is possible. This leads to
    so-called intelligent mechatronics products. CPS extends intelligent mechatronics
    products with cyber communication with other CPS or any agents on the Internet.
    Smart products are defined as ‘CPS, which additionally use and integrate Internet-based
    services in order to perform a required functionality’ [3]. Download : Download
    high-res image (278KB) Download : Download full-size image Fig. 1. Smart products
    as CPS integrating internet-based services. According to this definition, smart
    products are also smart product-service systems as an extension of PSS (Product-Service
    System) [28], [86], [231]. Therefore, smart products are part of a complex business
    ecosystem (see Fig. 2) including different stakeholders (e.g., users, customers,
    manufacturers, service providers), physical environment (enterprise, surrounding
    physical infrastructure) and other connected product devices. Download : Download
    high-res image (184KB) Download : Download full-size image Fig. 2. The ecosystem
    of smart products. This ecosystem supports two types of value generation mechanisms.
    The first one is traditional but explicit value for users generated by user experiences
    [92], [172]. ISO 9241-210 defines user experience as ‘a person’s perceptions and
    responses that result from the use or anticipated use of a product, system or
    service’ [104]. Through localised or personal modification of the product, it
    is also expected to improve its fit to the user or local community. For example,
    a smart phone can easily accommodate the needs and preferences of an individual
    user for superb experiences that can create value for the user. The concept of
    (user) experiences of (smart) products is strongly advocated by the human–machine
    interface community [92]. In the context of product design, Dassault Systèmes
    emphasises ‘experiences’ in their tool set [89]. The second type of value creation
    of this ecosystem is business value generated by collecting data about numerous
    events that take place surrounding smart products. The data will be collected
    through distributed sensors and processed to extract further information. This
    idea shows the relevance of the IoT (Internet of Things) technologies [82], data
    mining techniques [18], and AI (Artificial Intelligence) technologies represented
    by deep learning [39], [128], [191]. The data will also describe how these smart
    products are used and potentially bring up with enormous business opportunities
    (i.e., business value), because they illustrate the life style of users. Fig.
    3 illustrates the data-driven value generation mechanism of the ecosystem. It
    suggests that developing smart products is not just about technically developing
    physical products but about covering the entire scope of the ecosystem including
    services, mechanisms to collect, process and generate data regarding the use of
    the products and user experiences. The development should also take business models
    and objectives into consideration. Download : Download high-res image (73KB) Download
    : Download full-size image Fig. 3. Data-driven value generation of smart products.
    This keynote aims at establishing an overarching concept of smart products as
    well as reviewing technologies needed to develop smart products. Following this
    introduction, Chapter 2 will briefly overview various types of smart products
    and then list up their features such as characteristics and architecture. Chapter
    3 will overview enabling product technologies that are fundamental to build smart
    products. In contrast, Chapter 4 will examine methods, technologies and supporting
    tools to develop smart products and their services. Existing technologies might
    not be suitable for coping with the many new features of smart products related
    to, e.g., intelligence. Therefore, Chapter 5 will look into some research challenges
    of smart product development, including MBSE (Model-Based Systems Engineering)
    [262], [83]. Chapter 6 will summarise the discussion and identify future research
    directions. Chapter 7 concludes the paper. 2. Smart products 2.1. Examples of
    smart products As the number of smart products is growing rapidly, they are becoming
    ubiquitous [157]. In order to better understand the features and the challenges
    of this new product type the following section describes several examples of smart
    products: • Smart phones (see Section 2.1.1) • Smart speakers (see Section 2.1.2)
    • Smart vehicles (see Section 2.1.3) • Smart robots (see Section 2.1.4) • Smart
    factory (see Section 2.1.5) Further examples for single smart products are smart
    lights [282], smart thermostats [283] and smart meters [113]. An example of a
    smart product system is a smart home [43], smart grids [29], [69], [83], [242],
    and for a complex smart system of systems a smart city [237], [294]. 2.1.1. Smart
    phones In 2007, Apple introduced its first smart phone ‘iPhone’. Originally, this
    was marketed as a combined product of phone, iPod (Apple’s MP3 music player),
    PDA (Personal Digital Assistant) and camera, but without GPS, Apps or high-speed
    connectivity [238]. At that stage, it was merely a sum of these capabilities without
    integration. However, the 2008 model (iPhone 3G) made a step change by introducing
    the concept of Apps with possibility of intertwining these system capabilities,
    together with the introduction of iOS App Store. The system components of smart
    phones can be clustered as in Table 1. Table 1. System components of smartphones.
    Categories Components Mechanical hardware Touchscreen that disinguishes ''smart
    phone'' from other phones, vibrator Electronics hardware CPU, RAM, flash memory,
    speaker, microphone, battery Communication hardware Mobile communications, Wifi,
    USB, Bluetooth Sensors Cameras, accelerometer, GPS, light sensor, touch sensor
    Software iOS, Android, Apps Based on these capabilities, Apple created an ecosystem
    of delivering products and services including [51]: • iTunes Music Store (music,
    videos, movies) • App Store (applications) • Apple Music (music subscriptions)
    • iCloud (cloud storage) • Apple Pay According to Fig. 1, iPhone as hardware is
    a CPS. Through services made available with the Internet connectivity, various
    Apps fulfil user needs purposefully [238] which converted iPhone into a true smart
    product. An example of such services is Google’s traffic information on the Google
    Maps app when it is used as a navigation system [279]. Using GPS and other technologies,
    the phone determines its location. In a certain periodic interval, this information
    is sent to the central server, from which the speed of the vehicle is calculated.
    Information from a large number of phones using the application will be compiled
    to determine the average speed of the traffic on a certain road. This will be
    fed back to the map information with different colouring. For this smartness of
    smart phones, Internet connectivity and collecting information from many anonymous
    users play a crucial role. The operating system (iOS) as well as application software
    is automatically updated through the Internet connection. Many applications take
    advantage of being connected to (cloud) servers, allowing users to access a variety
    of information as well as computing capabilities. In addition, it is important
    to note that the way smart phone applications are organised allows a high degree
    of individualisation in the choice of applications. 2.1.2. Smart speakers So-called
    smart speakers [38] can exhibit highly sophisticated interaction capabilities
    with users, which allows them not only to play or control music but also function
    as an interactive bi-directional interface for information search services. The
    central function as a ‘voice input/control device’ is attained by advanced technologies
    for voice recognition and natural language understanding based on deep learning
    algorithms [128] made available through the Internet connection. Although obviously
    the speaker itself is no way smart, the smart speaker system as a system is able
    to learn about the user, her/his preferences, and behavioural characteristics.
    The use history and user preferences obtained from these communications are valuable
    business data about user’s life style. The smart speaker might be equipped with
    additional sensors (e.g., for temperature and brightness of the room), which will
    enable collection of characteristics of user activities, user profiles, and other
    types of business information. Therefore, smart speakers act as IoT sensing devices
    to collect information for the data-driven business ecosystem. 2.1.3. Smart vehicles
    The automotive industry is now undergoing revolutionary transformations [126].
    Sometimes captured as CASE (Connectivity, Autonomous, Shared & Services, Electric),
    these transformations include: • Drive train change (more electrification) • Autonomous
    driving • Connectedness • Shared (servicification such as MaaS (Mobility as a
    Service)) • Yearly updating The drive train technology is shifting towards more
    electrification for a number of reasons, including sustainability which is becoming
    one of the top priorities of the industry (e.g., [149]). However, it has to be
    noted that autonomous driving vehicles for sharing services need to be electric
    driven for the sake of easy and safe refuelling. Toyota Prius, the first hybrid
    electric automobile, launched in 1997, quickly became one of the bestselling cars
    in the world [285]. It aimed at improving fuel efficiency by running the ICE (Internal
    Combustion Engine) at the best fuel consumption range, while keeping the emission
    as clean as possible. All-electric vehicles (including lithium ion battery-based
    and fuel cell-based) with comparable performance to ICE-based vehicles did not
    appear until 2008 when Tesla Roadster was launched followed by Mitsubishi iMiEV
    in 2009 [281]. Tesla S introduced in 2012 was not only a luxury all-electric vehicle
    but also equipped with a number of features of smart vehicles including [284]:
    • AWD (All Wheel Drive) with dual-motors • Supercharging for 60–100KWh lithium
    ion battery • Autopilot (semi-autonomous driving) using radar and cameras • Connectivity
    to the Internet • Automatic software upgrading Autonomous driving is a technology
    currently looked into by a wide range of players from car manufacturers (such
    as GM, Audi, Tesla, and Toyota) to suppliers (such as Bosch, Denso and NVIDIA)
    to service providers (such as Waymo and Uber). While early efforts were mostly
    guided vehicles, truly autonomous driving cars controlled by visual information
    captured by stereo cameras were first developed by MITI’s Mechanical Engineering
    Laboratory in Japan in 1977 [290]. The group at Carnegie Mellon University’s NAVLAB
    funded by DARPA developed an autonomous van in the late 1980s and succeeded in
    trans-continental drive in 1995 [230]. This effort eventually led to Alphabet’s
    (Waymo’s) driverless vehicle that surprised the world [280]. Technological architectures
    for autonomous vehicles are proposed in Refs. [16], [138], [226]. Besides sensing
    technologies (such as laser-, vision-, ultra-sonic-, radar-based range scanning
    and vision recognition), advanced navigation based on SLAM (Simultaneous Localisation
    and Mapping) and AI-based recognition were breakthrough technologies. Internet
    based services in transportation opened a possibility of new service called MaaS
    (Mobility as a Service) [286]. This takes a form of a range of mobility services
    including share ride, quick car rental, subscription-based car rental, and non-traditional
    taxi service. Replacing traditional public transportation vehicles with autonomous
    vehicles would increase convenience as well as efficiency in less-populated remote
    areas and aging societies. Already a number of companies entered into the market
    in various cities on the globe. Autonomous driving is considered a next chapter
    for this type of MaaS. Internet connectivity enabled also ‘yearly updating’, which
    applies more regular software updates for the operating system and applications
    in a similar way as smart phones. Traditionally, IT equipment (e.g., PCs and handheld
    devices) and industrial machines have been maintained by upgrading the software
    in order: • to improve functions of the software, • to fix bugs, and more recently
    • to tackle cyber security threats. However, this was never the case for home
    appliances and cars, although future smart vehicles will become software intensive
    just like many other mechatronic products and CPSs. This trend of frequent updating
    will become dominant in case of more electric, autonomous, shared and connected
    vehicle to take advantage of their full capabilities [126]. Although it is not
    yet clearly advocated, besides those five trends, individualisation is also considered
    another advantage of smart vehicles. The Intelligent software-based control system
    can be flexible enough to be individualised according to the preferences of individual
    owners (see Section 2.2.10). Not only drive train technology, but overall car
    technologies are shifting towards ‘more electric’. Currently, a typical modern
    high-end passenger car may be equipped with more than 100 ECUs (Electronic Control
    Units) for, e.g., engine control and break control, but it is expected not to
    increase drastically due to the necessity of managing complexity and wiring issues
    [261]. The size of control software has significantly increased, however. Nowadays,
    a high-end passenger car is running more than 150 million lines of code [37].
    Consequently, the control software architecture is moving from a ‘federated architecture’
    to an ‘integrated one” [60]; for example, AUTOSAR (AUTOmotive Open Software Architecture)
    is jointly developed by a consortium of various industrial partners to allow such
    strategy [26]. In response to this trend, Volkswagen recently announced the shift
    towards electric vehicles. The core is the newly developed architecture called
    MEB (Modular Electrification Toolkit) [260]. The number of ECU will be significantly
    reduced to deal with the complexity issues associated with the number of ECUs
    and programme size. Fig. 4 illustrates how technological elements surrounding
    smart vehicles underpin the main trends (electrification, autonomous driving,
    connected, servicification, and yearly upgrading) and how these trends lead to
    future new service goals. (Fig. 4 depicts only four examples but there can be
    many more.) For example, MaaS will be supported by autonomous driving, connectedness,
    and servicification. Based on continuous monitoring using onboard sensors that
    collect data to be analysed using data analytics, continuous maintenance [190]
    will become feasible to monitor, diagnose and repair the vehicle proactively.
    Similarly, continuously collected operational data of the vehicle as well as the
    driver can be used to determine the option and premium of the insurance. This
    will lead to a customised insurance policy for individual drivers. Download :
    Download high-res image (202KB) Download : Download full-size image Fig. 4. New
    smart services of smart vehicles. 2.1.4. Smart robots Robots [210] have made rapid
    proliferation in manufacturing industry to replace human labour in material handling,
    assembling, welding, and inspection. Early robots were mostly equipped with anthropomorphic
    arms of up to six degrees of freedom. These are typically used for highly dumb,
    dirty, dangerous, and demanding tasks in which pre-programmed repetitive behaviours
    without locomotion capabilities suffice. Robots are also finding applications
    in logistics, construction, maintenance, and many other service industries, as
    well as household. Advances in robotic technologies have made it possible to build
    robots with such features as redundant DoF arms, dexterous robot hands, and biped
    locomotion capabilities. The invention of Honda’s Asimo [192] was epoch-making
    in that this biped humanoid robot opened up possibilities for applications of
    walking robots that are not bound to wheels. However, robots are not necessarily
    manipulator-based. One can define a robot as ‘a machine capable of carrying out
    a complex series of actions automatically, especially one programmable by a computer’
    (Oxford English Dictionary). Therefore, some robots are not meant for mechanical
    automation. For example, drones or UAVs (Unmanned Aerial Vehicles) have been put
    to practical use for picture/film shooting, surveillance, inspection, and light
    load transport [74]. The concepts of android and social robot focus on interactions
    with humans, so the appearance and conversational capability with humans are more
    crucial [75]. In this context, famous Asimov’s three laws of robotics can be given
    contemporary meanings [24]. Recently, robotic applications are increasingly requiring
    intelligence for various purposes including: • task planning • navigation (for
    mobile robots) • control and planning of locomotion and manipulation • communication
    with other agents (human, robot, machines, and environment). These capabilities
    will be executed using a variety of sensors to capture information from objects
    and the environment. For example, a vision-based part assembling robot should
    be able to locate and pick randomly placed parts. This robot will be able to deal
    with abnormality of the part it picked up by comparing the image on the camera
    and the shape information obtained from CAD. An ‘intelligent caretaking robot’
    will be taking physical care of elderly people and patients. It can also take
    care of them mentally by conversing with them. An intelligent robot can be regarded
    as a mechanism to deliver such intelligent functions through various end-effectors
    and locomotion capabilities. From the viewpoint of smart products, this is the
    point where robots are interfacing between the physical world and the cyber world.
    2.1.5. Smart factory The ‘smart factory’ [162] (Fig. 5) is an example of a complex
    smart product system within the shop floor. Fig. 5 indicates that a smart factory
    consists of various elements including machine tools, robots, material handling
    systems (such as AGVs and conveyors), controllers, and mechanisms to collect,
    process and feedback information. These individual elements need to be ‘smart’,
    too. For example, a smart machine tool should be equipped with a variety of sensors
    to capture its status and performance data. Download : Download high-res image
    (282KB) Download : Download full-size image Fig. 5. Elements of the smart factory.
    The smart factory is direct implementation of the so-called Industry 4.0 concept,
    which is a data-driven or -centric operational principle of industrial systems
    [106]. The smart factory is based on CPS or IoT advocating ‘connectedness’ starting
    from low level sensors, barcodes, and RFIDs [151], [269], [302] embedded everywhere
    in the factory including raw materials, workpieces, and components up to machines,
    material handling systems, and robots [107], [127], [132], [299]. Robots can be
    integrated in the process with human workers in an assistive manner [56]. Information
    about all processes and every event is generated and stored, contributing to the
    realisation of a ‘smart enterprise’ [97], [114], [137], [187], [264]. This means
    that such data will be analysed with data analytics methods for the purposes of
    performance management, scheduling, machining quality control, and maintenance
    of the machine tool [135], [208], [293]. This bi-directional data flow to and
    from the machine tool underpins the smartness of the machine tool in the smart
    factory. Industrial Internet [100] advocates similar principles and concepts.
    A Reference Architecture Model for smart enterprises (RAMI) has been started as
    part of Platform Industry 4.0 in Germany [185]. The past efforts within the research
    community, such as holonic [1], [136], [249], [251], [252], bionic [243] and fractal
    manufacturing systems [270], all pursued data intensive, small-lot, customisable,
    flexible, responsive, and agile manufacturing [228]. In this context, these past
    efforts laid foundation for smart factory. In Ref. [162], the concepts and the
    architecture of smart factories are analysed. The advantages of the smart factory
    are multi-fold, which include: • Increased data generation that can lead to performance
    improvements through data analytics • Agile responsivity to failures and abnormality
    • Increased changeability and flexible reconfigurability for smaller production
    volume (eventually one-off). • Improved traceability of components and quality.
    2.2. Features of smart products Smart products possess some functional capabilities
    in common that distinguish themselves from conventional products. These include
    intelligent interactions with human users, autonomy, dependability, and individualisation.
    These functional capabilities result from various technical features such as intelligence
    and resilience backed up by connectedness, sensing capabilities, and reconfigurability.
    Below, these functional capabilities and technical features are discussed in detail.
    2.2.1. Intelligence Although ‘intelligence’ is very casually discussed, no clear
    definition does exist because the notion is used in many fields. However, the
    intelligence feature is one of the most distinctive features of smart products
    and includes such capabilities as recognition (voice, vision, language, etc.),
    reasoning, and learning (or improving). In the context of smart products, clearly
    intelligence has several meanings. The first is intelligent interactions with
    human users (see Section 2.2.5, e.g., natural language interfaces such as Alexa
    of Amazon and Siri of Apple). The second aspect is so-called intelligent control
    that goes beyond the traditional feedback control. For example, advanced robots
    use various types of modern high-level control algorithms. Third, intelligence
    is useful for other features such as autonomy and reconfigurability. Traditionally,
    intelligence was implemented using so-called AI technologies (see Section 3.2)
    which follow two major approaches. One is the traditional symbolic logic-based
    methods to explicitly implement knowledge [191], which was experiencing limitations
    in knowledge acquisition and maintenance. A breakthrough came from so-called machine
    learning methods based on Deep Neural Network (DNN) [88], which were a sophisticated
    version of Artificial Neural Network (ANN). For specific applications, such as
    vision recognition, a special type of DNN called convolutional neural networks
    perform outstandingly. The learning capabilities facilitate continuous improvement
    of the performance, which is also favourable for smart product applications. The
    ownership of data and knowledge created as a result of this learning process is
    yet to be discussed. However, there are two challenges associated with DNN. One
    is training of the network, which assumes clean high-quality teaching data. Preparing
    such teaching data can be extremely difficult, if not impossible. The other challenge
    is that reasoning outcomes do not have explanations as DNN is a black box. This
    is the difference between DNN and traditional AI approaches. If real time responses
    are needed, as this may require substantial computing power, the Internet connection
    and the client-server architecture might be desirable. For example, the current
    implementation of natural language interfaces (such as Alexa of Amazon and Siri
    of Apple) assumes network connection. 2.2.2. Connectedness Connectedness to other
    agents on the Internet constitutes the foundation for all the features of smart
    products. It will enable collection of data but also facilitate self-identification
    (i.e., from others) and determination of the location. There are different types
    of computing paradigms related to connectedness that have evolved through historical
    development. Ubiquitous computing [276] (or pervasive computing) is a concept
    in which ‘the nonintrusive availability of computers throughout the physical environment,
    virtually, if not effectively, invisible to the user’ [277]. Ubiquitous computing
    is perhaps the most direct ancestor of IoT. Cloud computing is defined as ‘shared
    pools of configurable computer system resources and higher-level services that
    can be rapidly provisioned with minimal management effort, often over the Internet’
    [203]. Cloud computing liberated computing from particular servers and virtually
    removed the boundaries of computing capabilities. For example, smart products
    do not have to be limited to locally available computing resources. However, the
    introduction of the IoT technologies typically led to huge data traffic as well
    as heavy loads to the central servers, these computing and storage capabilities
    were transferred to distributed non-central (edge) nodes located closer to the
    user. This is called edge computing or fog computing [59], [206] and it is expected
    to exhibit computing performances better than cloud computing which is relying
    mainly on centralised servers. Edge computing uses computing nodes that are distributed
    in the network to maximise the system throughput and to minimise delays. The advances
    of wireless communication technologies are now pushing the boundaries of wireless
    communication to 5G and beyond [17], [178]. With the anticipated communication
    speed of 5G (20 Gbps), it is expected that many step-changing technologies, such
    as (near) real time communication without latency and peer to peer communication,
    can be introduced. When applied to moving agents (e.g., smart vehicles, mobile
    robots, etc.), these will facilitate totally different level of functionalities
    such as high-resolution image link. Even immobile assets will become free from
    wiring. In addition, many applications will have an opportunity to shift from
    local to cloud/edge/fog computing. The smart product ecosystem in Fig. 2 requires
    such high-speed communication if it has to be really data-centric or data-driven.
    Connectedness (with high-speed communication) has drawbacks as well. These issues
    will be discussed in Section 2.3.5. 2.2.3. Servicification Smart products are
    by definition product-service systems. They collect operational and use data through
    sensors to enhance service purposes, such as maintenance and life cycle management.
    DMG Mori has been deploying their MTConnect system to monitor, collect, maintain
    their machine tools in the market [62], [164]. Originally, the system was developed
    as a remote monitoring system. It now plays the core role of their smart factory
    solutions. The system basically remotely monitors operations and conditional parameters
    of the machine and sends it to the server. This information is used for managerial
    purposes as well as maintenance. With these capabilities, the company now claims
    that they can provide their customers with Industry 4.0 solutions. Rolls-Royce
    started power-by-hour services in the 1980s and this TotalCare service is now
    generating more than 50% of turnover of its civilian jet engine division. For
    airlines, TotalCare ensures engines’ performance with predictable costs, while
    for Rolls-Royce it generates steady revenue. The service can include real time
    monitoring capabilities which collect real time engine data to be used for improving
    maintenance. Obviously, this smart product design will bring up with maximum benefits
    when aligned with service design. In 2002, the company launched a new programme
    that aimed at designing new products truly ‘designed for service’ [91]. Komatsu
    is known for its successful service called ‘Komtrax’ [109], [116] which collects
    and reports the status of their construction machinery (such as bulldozers and
    excavators). The original purpose was to locate a machine using GPS but now it
    collects information including time when the engine started and shut down, total
    engine running time, service meter readings, and information about an eventual
    unauthorised machine use. These types of information are fully used for management
    and maintenance purposes, but the company is trying to extend its use to the design
    phase, too. This type of capabilities can be critical for smart vehicles used
    for autonomous MaaS service. It is estimated that actual usage rate of these vehicles
    could be above 50%, while currently more than 90% of passenger cars are used for
    only 5% of the time [66]. Technically, this implies the need for much higher reliability
    and dependability. Service-wise, new methods for providing services much faster
    and more effective, including constant real-time health-monitoring, predictive
    maintenance and proactive maintenance. 2.2.4. Sensors and sensing Smart products
    collect information about their environment as well as their own states and status
    through massively deployed sensors. These types of information are used in short
    term for the control purposes as well as in longer term, e.g., for autonomous
    operations. IoT is very relevant to smart products [21], [27], [90], [123], [159],
    [248], [287]. In particular, the development of wireless RFID sensors [269] and
    IoT chips for wireless communication with low power consumption (which are called
    ‘smart sensors’) [289] are the game changer that allows massive deployment of
    sensors throughout, e.g., machines, buildings, factories, and even social infrastructure.
    These sensors have typically monitoring applications, e.g., pressure, temperature,
    and strain, e.g., for process data mining and maintenance purposes [80], [227],
    [256]. 2.2.5. Smart human interaction Smart human interactions require both verbal
    and visual interfaces, and haptic or other forms of interaction [48], [171]. Note
    that autonomous systems are somehow contradicting to this feature of smart products,
    because autonomy requires least human interaction by definition. However, it should
    be interpreted that the best smart product is one that requires only minimum communication
    with human users in a very smart way. The use of (especially) AR (Augmented Reality)
    technologies as a human interface to smart products is considered key to understanding
    information about user’s behaviour. For example, traditional screen-based interfaces
    do not allow bi-directional interactions, unless the screen is a touch screen.
    However, even with a touch screen, the amount of information about the user’s
    behaviour is limited. With AR technologies, information obtained through interactions
    can be richer, because of the availability of the user’s focus. 2.2.6. Autonomy
    A high level of autonomy is a critical feature of smart products. Autonomous systems
    are capable of sensing external information, intelligently making decisions without
    human intervention, and performing actions in response to the situation. They
    operate and survive by adapting to the external changes and internal deterioration,
    which is the feature of resilience. However, this also means lack of surveillance.
    Therefore, it is critical that an autonomous system is dependable (see the next
    section). For example, UAVs (often a drone or a deep-sea robotic submarine) can
    be self-driving (flying or swimming) without remote controls. They should not
    do any harm to any external parties or get lost in accomplishing their mission,
    either. An autonomous system can also be self-learning, which represents non-deterministic
    behaviour. An example of autonomous self-learning is a modular product that configures
    itself after assembling the modules, which is self-organisation. The interest
    in autonomy is growing in various fields. For instance, the UK government published
    a series of white papers on robotics and autonomous systems on such application
    areas as surgical robotics; space; robotics in social care; manufacturing; agriculture;
    robotics for emergency response, disaster relief & resilience; resilient infrastructure;
    urban robotics & automation; and AI & robotics [245]. 2.2.7. Dependability According
    to the International Electrotechnical Commission (IEC), dependability is an ability
    to perform as and when required [101]. It is ‘a collective term for the time-related
    quality characteristics of an item overarching availability, reliability, recoverability,
    maintainability, and maintenance support performance’. In some cases, it may also
    include durability, safety and security. Similar concepts include trustworthiness,
    non-stop availability, and robustness. In case of autonomous systems, for instance,
    their performance needs to be always delivered under any circumstances. High dependability
    can be supported by resilience against external turbulences and internal degradation.
    Intelligence contributes to dependability through self-monitoring, self-diagnosis,
    or even self-repair. An autonomous system has potential to increase dependability
    with the possibility of removing manual maintenance. In an extreme case, autonomous
    systems might even benefit from being subject to external stressors, as they can
    become antifragile [112]. Recently, safety and security are considered indispensable
    elements of dependability [152], [189], [212]. This is particularly true in the
    automotive sector in which functional safety of embedded software need to be certified
    [102]. 2.2.8. Customization/individualization/personalization Customisation, individualisation,
    or personalisation is key to more value to the customer. In the engineering design
    research community, ‘mass customisation’ [52], [239], [295] was first discussed
    in the context of modularisation, product family, and product platform [105],
    [163], [214]. Then, the concept of personalisation that satisfies implicit personal
    wants and needs was introduced as opposed to customisation that satisfies explicitly
    articulated requirements [125], [240]. The advancement of additive manufacturing
    is facilitating the creation of really personalised products (e.g., [96], [111],
    [199], [229], [288]). In the context of smart products, customisation, individualisation
    or personalisation to meet explicit or implicit user requirements could be supported
    by reconfigurability. We will examine this issue in Section 2.2.10. 2.2.9. Resilience
    Resilience is originally a term in psychology. In the engineering context, it
    might be defined as the ability of a system to absorb external impacts without
    affecting its structure or behaviour [156]. This means in order for a system to
    exhibit resilience, it needs to have a special mechanism to absorb and counteract
    to the external impacts. The mechanism can be ‘reconfiguration’ that takes place
    at behavioural and structural levels discussed below [235]. 2.2.10. Reconfiguration
    The scale of reconfiguration can range from very minor adaptation to major changeover.
    The minor ‘adaptation’ or ‘adjustment’ include control responses to external stimuli
    and more major model tuning within the controller [184]. The major changeover
    can be morphological and topological changes or replacing units [155]. Reconfiguration,
    being minor or major ones, takes place at different levels of the system, i.e.,
    structure, behaviour, and function [7], [8], [31], [195], [196]. An example of
    reconfigurability is modular architecture, which is supported by module-wise interoperability
    and standard interface between modules. Reconfiguration can take place at any
    moment over the life time of smart products [258]. For instance, design-time reconfiguration
    is the modification of design to adapt an old model to new user requirements,
    while run-time reconfiguration can be any form of control to adapt the machine
    to changing external environments and deteriorating internal conditions. Life-time
    reconfiguration targets maximisation of the market value of the product by modifying
    part of the product over its life cycle or at the end of life. These three different
    modes of reconfiguration commonly use information obtained from sensors. While
    run-time reconfiguration is supposed to take place automatically or autonomously,
    the other two reconfiguration modes are not. However, physical (or structural)
    reconfigurability is difficult to exercise (particularly, during run-time) for
    many product categories unless they have physically interchangeable modular structure
    [7]. For this reason, software-based behavioural or functional reconfiguration
    is preferred for several smart products (e.g., smart phones). Therefore, dynamic
    real-time reconfiguration of smart products can be offered and implemented by
    using different software services [4], [5], [6]. Fig. 6 depicts life-time reconfiguration
    of a smart vehicle that goes through static reconfiguration in the middle of its
    life and later dynamic real-time reconfiguration. Static reconfiguration means
    non-personalized reconfiguration for all instances regardless of the environment
    in which these smart products exist, while dynamic reconfiguration is highly personalized
    based on the environmental data and thus instance-based [8], [196]. Download :
    Download high-res image (399KB) Download : Download full-size image Fig. 6. Reconfiguration
    of smart products. Within manufacturing systems design, reconfigurable manufacturing
    systems have been well studied [64], [122], [130], [155], [267], Another good
    example of reconfigurability is modular reconfigurable robots [168], [291], [292].
    Swarm robots are a group of robots not necessarily physically connected but loosely
    coupled with communication that performs tasks as a whole [15], [155], [160],
    [274]. For instance, a fleet of autonomous drones exhibit useful group behaviours.
    Cellular machines are composed of homogeneous cells that exhibit simple functions,
    but as a whole, useful functions emerge (i.e., storage and transportation of packets)
    [120], [193]. More recently, Amazon is operating warehouses with robots based
    on similar principles [87]. Reconfiguration is useful for the purpose of maintenance.
    Because of external disturbance or internal component deterioration, system’s
    functions fail. By reconfiguring at parametric, state, or behavioural level, the
    system’s function can be maintained. Table 2 compares various types of maintenance
    strategies through reconfiguration using the framework of the FBS (Function-Behaviour-State)
    modelling [246]. The top level is function which is an abstraction of a behaviour.
    A behaviour is a temporal sequence of state transitions. A state is a collection
    of parameters at a time containing. It is therefore a snapshot of the structure,
    which is a network of parameters. Table 2. Smart product reconfiguration during
    their use/operation phase. The simplest maintenance is to diagnose the failure
    and change the failed component. This component changing strategy, however, does
    not change, other than the broken component, any of function, behaviour, state,
    and structure (represented by the parameter network topology). Network-type redundancy
    is often used in transportation networks (railway, highway, etc.), infrastructure
    network (e.g., electricity distribution grids) and communication network (e.g.,
    telephone networks and internet networks). In these networks, when one path fails,
    an alternative route is configured quickly, which results in a different topology.
    Although the capacity of this alternative route might not be the same as the broken
    one, the total throughput might be almost at the same level. Parameter adjustment
    strategy is the control engineering approach. For example, set point adjustment
    will not change the parameter network topology but parameter values can be different.
    However, the goal of this strategy is to maintain the behaviours thereby maintaining
    the function. This can be contrasted with the control-type self-maintenance strategy
    [207], which is almost the same as set-point adjustment but when a set point exceeds,
    e.g., the physical limit, this strategy chooses a different control model. This
    means the physical parameter network does not change but the states and behaviours
    could be different. However, the total goal is to maintain the function. The last
    function-redundant-type self-maintenance strategy will utilise a latent function
    of components existing in the system [247]. Therefore, the only thing to be maintained
    is the top-level function and anything else can be different. 2.3. Contributions
    and challenges of smart products 2.3.1. Sustainability As discussed already, by
    monitoring status and environment parameters and later by processing the collected
    data using data analytics (see Section 3.3), smart products have a potential of
    better performances in maintainability, end-of-life treatment, and energy consumption,
    thereby contributing to sustainability [131], [209], [224]. For example, energy
    consumption might be reduced by understanding the machine condition better. Better
    capabilities of predicting failures early will prevent unnecessary stoppage of
    the operation, thereby guaranteeing the best use of resources as well as least
    waste. Understanding the usage over the whole life will help better decisions
    for the end-of-life treatment, thereby achieving circular economy [177], [241].
    2.3.2. Multi-disciplinarity Smart products are mostly CPSs that are an outcome
    of an integration process over a variety of disciplines. They also interact with
    the physical world through sensors and actuators in a variety of ways. This physical
    reality brings up multi-disciplinarity, too. Multi-disciplinarity on one hand
    improves the function of the product significantly. On the other hand, it will
    add complexity [65], [233]. The trade-off between functional advantages and complexity
    becomes a challenge. 2.3.3. System of systems Large scale CPSs, in particular,
    are by definition a system of systems [150] not only for the number of subsystems
    but also for the multi-disciplinarity [233]. Being a system of systems means simultaneous
    co-existing events, interdependent behaviours, and consequently emergent functions.
    All of these add complexity at phenomenological, behavioural and functional levels.
    2.3.4. Complexity There are several sources of complexity of smart products. The
    first area to look into is software complexity. Smart products are CPSs controlled
    by software. As seen in Section 2.1.3, the software size has been increasing drastically
    recently due to ever increasing requirements. Not only size but also qualitative
    complexity of software architecture is also increasing [255]. Second, the process
    complexity of the product development processes is also very high. There are a
    couple of reasons. Capturing user requirements is one problematic area, as incorrectly
    captured requirements will lead to ineffective or inefficient product development
    processes. Related to this, the fact that the product development needs to consider
    the entire ecosystem (Fig. 2) significantly increases the complexity of product
    development. In addition, process complexity increases due to the multi-disciplinarity
    nature of smart products and the system of systems nature. 2.3.5. Cyber security
    and data protection Just like any other ICT systems, cyber security has become
    one of the most concerning issues for smart products [44], [47], [186], [218].
    As seen in the famous Stuxnet case [200], cyber attacks through vulnerabilities
    of the system (even if it is a closed one) are a huge risk of a catastrophic or
    even life-threatening incident. However, smart products as embedded systems have
    difficulty in dealing with cyber security. Traditionally, these systems were considered
    relatively safer compared with PCs connected that need consider cyber attacks,
    browser vulnerabilities, malwares, e-mail attachments with viruses, and infected
    USB devices. As they were considered isolated from the network, there was no protection.
    However, as smart products are indeed connected, it is now urgently necessary
    for them to be equipped with appropriate protection mechanisms. It is known that
    through the keyless entry system, vehicles can be stolen. A related issue is data
    protection. Commercially sensitive data and information such as CAD data of a
    new product needs to be protected. However, PLMs are not different from any other
    systems. In addition, privacy data needs attention. There is an EU regulation,
    General Data Protection Regulation (GDPR), for data protection and privacy [70]
    and similar measures are discussed internationally. In the case of commercially
    sensitive data, particularly, the ownership of collected data through smart products
    can become an issue. Suppose if a machine tool manufacturer collects data about
    the operation of a machine tool for monitoring and maintenance purposes. The problem
    is that such data can also be business sensitive and needs protection. 3. Enabling
    technologies for smart products 3.1. Contributions and challenges of smart products
    There are emerging technologies that can underpin the smart product development.
    While many of these enabling technologies relevant to smart products are advanced
    ICT technologies, it is interesting to observe that advances in hardware- or material-oriented
    technologies are also enriching the concept of smart products. To name a few,
    the following can be suggested. • Additive manufacturing [96], [111], [199], [229],
    [288] facilitates truly personalised production. There is even a possibility of
    simultaneous, integrated printing of both mechanical and electrical components.
    This will change the design and production of smart products significantly. •
    Microelectronics is rapidly advancing: Semiconductor devices (CPU, memories, and
    sensors) are still making progress in performance, size, energy consumption and
    cost, which means the performance of mobile smart products in particular can improve.
    Foldable printed circuit boards and displays are already available, which allow
    denser implementation of the system. • Battery technologies are also making progress.
    It is expected that soon the current lithium ion and lithium polymer batteries
    might be replaced with all solid-state batteries with much higher energy density
    and better safety features [183]. Flexible batteries are becoming possible, too
    [300]. Non-contact charging has been commercially available. • New materials are
    emerging on the horizon, such as Cellulose Nano Fiber (CNF) with outstanding strength
    and light weight [63], 3D printable energy harvesting material [205], self-repair
    or self-healing metals, composites, polymer and ceramic that can significantly
    reduce life cycle cost [30], [32]. The following ICT technologies are leading
    the way to so-called “Internet of Everything”. These technical enablers are not
    necessarily innovatively disruptive any longer (some are indeed very classic)
    but they are technically mature enough to be integrated in a CPS product together
    with other technologies to yield a smart product. • ○ Communication technologies
    • 5G/6G mobile networks • NFC (Near Field Communication for contactless cards
    and RFID) • Bluetooth Low Energy (BLE) • M2M (Machine to Machine) networks • Internet
    technologies • IPv6 • Social media • Semantic web • Software technology • AI technology
    such as machine learning and DNN (see Section 3.2) • Big data and data analytics
    (see Section 3.3) • NoSQL databases (to be used for big data) These technologies
    together with AI technologies (Section 3.2) and data analytics (Section 3.3) form
    the core technologies to be embedded in smart products. Section 4 will look into
    technologies for the development of smart products. However, unfortunately, we
    do not have a silver bullet to tackle the challenges discussed in Section 2.3.
    3.2. Artificial intelligence (AI) Ever since IBM’s Watson defeated human contestants
    in a TV quiz show ‘Jeopardy!’ in 2011, so-called deep learning-based AI has been
    recognised a breakthrough (IBM prefers to call Watson Augmented Intelligence,
    though) [73]. The role and value of classic symbolic logic-based methods and other
    types of reasoning techniques (such as fuzzy logic and genetic algorithm) [191]
    have become relatively less valued, primarily because the performance of deep
    learning-based methods was drastically superior to those classic ones. The fundamental
    difference between conventional ANN (Artificial Neural Network) and DNN (Deep
    Neural Network) is the number of the hidden (middle) layer(s). While ANN uses
    only one or a few layers, DNN (and its variants, such as Convolutional Neural
    Network, CNN) employs multiple (sometimes more than one hundred) layers. In a
    broad sense, the learning (or training) algorithms for DNN are part of machine
    learning algorithms [88]. However, for machine learning, it was always ‘teaching’
    meaning by providing data; a teacher needs to teach the answer. In some applications
    (e.g., image recognition) [124], DNN (e.g., Convolute Neural Network) does not
    require teaching provided with a sufficiently large amount of tagged image data.
    From a viewpoint of practical applications, this feature of learning without teaching
    makes a big difference and has become the biggest catch. DNN exhibits outstanding
    performance, in particular, in pattern recognition, image recognition, and natural
    language processing. Other types of applications are now undertaken, too. However,
    obviously, a practical AI system cannot be built using solely deep learning methods.
    Many other classic reasoning methods are still valid and indispensable. If there
    is not much data available to train a DNN, it would be necessary to train the
    network through teaching, which becomes a tedious task. There is a trade-off between
    teaching time and effort against performance (e.g., output quality) of the system.
    Additionally, in principle DNN is a variant of ANN, therefore it is not possible
    to give explanations of the reasons of the reasoning outcomes. These are drawbacks
    of DNN. While applications of classic AI techniques to product development are
    plenty within the research community, there are not many applications of deep
    learning (yet) in product development. One of the possible reasons for this is
    that product developers aim to maintain an overview of the network of interdependent
    and non-deterministic decision-making processes in development cycles. With an
    increasing number of decisions that cannot be underpinned – as is the case with
    deep learning – developers may feel less confident in governing the design process
    as the rationale is increasingly lacking. However, as obviously seen in robotics
    and autonomous vehicles, these techniques are used to develop intelligent features
    of smart products. Within the CIRP community, deep learning techniques have been
    applied to the following design and manufacturing research topics; cutting process
    monitoring [78], cutting process planning [79], process planning for polishing
    [265], robotics [140], [266], feature extraction for inspection [275], optimisation
    for process planning [180], planning for machine allocation [188], operation scheduling
    [271], diagnostics [278], [296], planning and management of energy consumption
    [46], and design [268]. 3.3. Big data and data analytics The advances of computing
    technologies, especially of processor speed and storage capacity, combined with
    cheap communication means made the concept of ‘big data’ [18], [154] available
    in many application areas. For instance, financial transaction data as big data
    allows for the extraction of customer purchasing preferences useful for future
    marketing. Similarly, smart products can function as a distributed sensor network
    that creates big data about product usage and users’ behaviours [297]. Its example
    is the location information from smart phones used to create traffic information
    that will be used for navigation purposes (see Section 1). Data analytics is a
    set of mathematical methods to model, capture, cleanse, analyse, and visualise
    big data. Among these, data mining is a set of statistical methods (such as principal
    component analysis and regression analysis) to model and discover knowledge to
    be used for predictive analysis. As illustrated in Fig. 2, Fig. 3, smart products
    will be embedded in a data-centric ecosystem that will collect a huge amount of
    operational and life cycle related data. The collected data will be analysed with
    data analytics methods for technical and business purposes. 4. Development methods
    and tools for smart products 4.1. Currently available methods and tools For the
    development of complex mechatronic products, a huge number of methods and supporting
    tools with a different level of maturity are available [234]. The majority of
    these methods and tools listed in Table 3 could also be used for the development
    of smart products. However, due to the high complexity described in Section 2.3.4,
    and due to the special characteristics of smart products such as intelligence,
    existing methods and tools are not powerful enough for the development [147].
    Table 3. Commonly used developing methods and tools. Procedural approaches and
    generic methods • Systems Engineering / MBSE (Model-based Systems Engineering).
    V-Model • Agile methods adopted from the software development, • Modular Design
    • Collaborative Engineering, Lean Development, Concurrent Engineering, Simultaneous
    Engineering • Design for X  System design • Requirement engineering • Functional
    modelling • Behaviour modelling • Product architecture design • FMEA (Failure
    Mode and Effect Analysis) • QFD • Conjoint Analysis, Kano method  Domain-specific
    design tools and methods of components • Mechanical CAD / rapid prototyping •
    Electrical CAD • Software Engineering (CASE) • Service Engineering, PSS Engineering
    • Simulation methods and tools (CAE)  System integration, verification and validation
    • Multi-physics simulation • Software in the loop, Hardware in the loop, Human
    in the loop  Product data and process management • Product Lifecycle Management
    (PLM) • Application Lifecycle Management (ALM) • IoT integration platform • Enterprise
    Resource Planning (ERP) Smart products have been discussed from a variety of aspects
    including product development methods (e.g., [12], [76], [108], [142], [223]),
    marketing (e.g., [57], [110], [133], [202], [250], and CPS based smart products
    [49], [94], [158]). Design methods and methodologies targeting a specific feature
    of smart products, for instance, ‘design for reconfiguration’, is useful to develop
    a smart product that exhibits dynamic reconfigurability during use phase (but
    unfortunately, this has not been established yet). Fuzzy front-end methods address
    early phases of product development including marketing [33], mapping business
    strategies of an enterprise to a business ecosystem (Fig. 2) and value generation
    processes (Fig. 3) offered by the smart product. This needs to end up with function,
    behaviour, and the physical embodiment of the smart product. Therefore, product
    development methods and service development methods identified in Table 3 cannot
    be separately discussed. The multi-disciplinary nature of CPS adds extra complexity
    to the smart product development process. Tools and methods of Model-Based Systems
    Engineering (MBSE) [84], [273] are utilised for this purpose. We will examine
    MBSE in Section 4.4 in greater detail. Accordingly, it is expected that the way
    product development of smart products is undertaken can be drastically different
    from the current practices from very early stages. Tools and methods for smart
    product development can also be different. For example, identifying user requirements
    for traditional products is depending on user research and market research comprising
    of a variety of methods that collects data actively. However, with smart products,
    market data can be collected ‘actively’ while collecting use data and operational
    data. This ‘continuous real-time feedback’ mechanism will make requirements definition
    phase totally different [9], [10], [11], [13], [14], [54], [182]. For example,
    a smart car equipped with massively deployed sensors can collect detailed information
    about how the car is operated. The information about the status of the car can
    be useful for the owner (who can be different from the driver) to perform predictive
    maintenance and to contract favourable insurance, for the manufacturer to improve
    the car design, and for public road planner to plan smoother city traffic. The
    car can also autonomously drive collaborating with other cars to offer a new type
    of mobility service and to increase the safety on the road. This will also minimise
    the congestion, thereby contributing to sustainability. This data collection requires
    careful design of sensors, data collection methods, data mining methods, as well
    as data protection strategies, which means seamless coordination between hardware
    design and cyber system design, beyond the traditional control engineering. In
    addition, obviously (at least part of, if not all) the collected data needs to
    be stored and properly managed. To this end, the concept of ‘digital twin’ is
    actually standing on the meeting point of these two directions [85] is becoming
    important. This issue will be examined in Section 4.3. Similarly, resilience will
    increase dependability through reconfiguration. Resilient architecture contrasts
    to ‘fixed’ or ‘rigid’ architecture in which once designed, attributes, structure,
    behaviour and function will not change. Resilient architecture allows autonomous
    reconfiguration and changes, so that the system fits better to the environment
    or copes with its deterioration. This can be regarded as even growth or antifragile
    behaviour [112]. In this sense, product design for smart products is not only
    about the product itself but also about design of the mechanism for the product
    to change or grow. However, in existing literature, such ‘growing architecture’
    is not discussed fully. 4.2. Value generation through services Value generation
    through features of smart products as depicted in Fig. 3 will impact the services
    that smart products offer [20], [58], [167]. For example, a ‘smart kettle’ not
    only offers useful functions (e.g., automatic boiling of water) but also new service
    in the form of reporting abnormal behaviour by elderly users. This means smart
    products should take into consideration new PSS (Product-Service System) development,
    value chain, and business models. The smart kettle was developed by Zojirushi,
    Co., in Japan and has been in market since 2001 [301]. Due to the age, sudden
    illness, or symptoms of dementia, it is often necessary for family members to
    keep an eye on elderly people living alone. A direct solution is to set up a CCTV
    camera, but this is often problematic because it gives really an impression of
    violating privacy. As a resolution, the kettle not only boils water but also reports
    water boiling activities through mobile telephone connection. The usage information
    is sent from the server to a familiar member regularly, so that if there is anything
    wrong with the elderly person, it can be detected earlier. Similar products are
    now in the market, including ‘smart gas meter’, ‘smart photo frame’, and ‘smart
    air-conditioner’. All of these sense human activities, although the responsibility
    of detecting abnormality is in the hands of family members. In the case of a smart
    kettle, obviously not only the owner (elderly user living alone) but also additional
    stakeholders (who might be relatives, friends or neighbours) have to be considered
    in the value chain. The business model is different from that of traditional kettles,
    because of a new service element which is charged. However, value creation from
    available information is insufficient in the current model, because the system
    only reports usage data of the kettle. The system does not warn for unusual usages,
    lack of regular usage, or any other irregular activities. This is where perhaps
    some AI technologies can be introduced to generate more value for the user as
    well as for the business. The value generation mechanism in Fig. 3 assumes a stronger
    role of service elements than of products themselves. The concept of XaaS (Everything
    as a Service) is a concept originally developed in cloud computing [277] that
    offers well-defined software components over the Internet. An example of XaaS
    is MaaS of smart vehicles as shown in Fig. 4. XaaS is also relevant here, because
    functions and services of smart products can be unitised for composition towards
    an entire solution. This compositional approach has a long history in software
    and Web services as SOA (Service Oriented Architecture) [67], but this can be
    analogically compared with PSS as below and potentially useful for PSS design.
    • SaaS (Software as a Service) = Functional products • PaaS (Platform as a Service)
    = PSS • IaaS (Infrastructure as a Service) = Service infrastructure In offering
    services, information flow plays a critical role. For example, MaaS requires such
    information flows as transportation requests, traffic information, vehicle information,
    and user information. Without these types of information, MaaS does not exist.
    This suggests that future business ecosystems cannot be designed without such
    concepts as XaaS and information flows associated with this XaaS. One futuristic
    way of thinking about XaaS and future services for manufacturing is Supply Chain
    as a Service (SCaaS). Traditionally, within a supply chain for a manufacturer,
    logistics companies were considered only as a means for transportation and storage.
    However, if a logistics company like Amazon extends its services to ‘provision
    of components’, supply chains may disappear under the paradigm of cloud manufacturing
    [139]. 4.3. Digital engineering The notion of ‘digital engineering’ or ‘virtual
    engineering’ targets all engineering activities and processes from design, engineering,
    production, all through product life cycle, virtually performed on computer-supported
    systems, thereby reducing necessity of physical prototyping and testing [253].
    While ‘digital manufacturing’ [50] refers to manufacturing processes, digital
    engineering may have an emphasis on narrower fields of processes and tools for
    design and engineering. However, e.g., it was demonstrated that digital engineering
    and digital manufacturing could be seamlessly integrated with help of the digital
    twin [222]. Digital engineering covers traditional mechanical engineering design
    support tools, i.e., CAD (Computer-Aided Design), CAM (Computer-Aided Manufacturing),
    CAE (Computer-Aided Engineering), CAPP (Computer-Aided Process Planning), manufacturing
    process simulation systems, and even systems engineering tools (e.g., Matlab/Simulink
    and Modelica). These tools are now integrated on a PLM (Product Lifecycle Management)
    platform for this purpose [219]. PLM is expanding its coverage from purely mechanical
    engineering and production engineering domains to electrical engineering and systems
    engineering domains. This contrasts with existing CAD tools in electrical engineering
    and electronics (e.g., those for circuit design) that seem to tend to stay within
    their own field, because mechanical CAD deals with physical shapes that are not
    necessarily limited to mechanical components but also relevant to the entire system
    for physical integration. Manufacturing information frameworks, such as ERP [161],
    also integrate all necessary information about manufacturing processes and operations
    and used to control these. ERPs can be connected even to MES (Manufacturing Execution
    Systems) and even SCADA (Supervisory Control And Data Acquisition) for process
    control. The integration of digital engineering tools can be seen from two perspectives.
    Tool-wise, the degree of PLM-based integration of all the design and engineering
    tools for smart products is not yet complete, although this should be the direction
    [121]. Data-wise, a wide range of data can be collected by ERP (rather than PLM)
    throughout the product life cycle, beginning with design and production preparation
    down to production, operation, maintenance, and end-of-life. The newly emerging
    concept of ‘digital twin’ is actually standing on the meeting point of these two
    directions [6], [40], [85], [197], [216], [225], [244], [254]. A digital twin
    is a digital representation of an active unique product (real device, object,
    machine, service or intangible asset) or unique product service system (a system
    consisting of a product and a related service) that comprises its selected characteristics,
    properties, conditions and behaviours by means of models, information and data
    within a single or even across multiple life cycle phases [221]. It captures design
    information (i.e., to-be information), manufacturing information and operational
    information, which represents even minor differences of individual product (i.e.,
    as-is information), thereby contributing to different types of decision making
    such as maintenance and end-of-life decisions. Smart factories within Industry
    4.0 will be inevitably software intensive. The software ranges from PLM (Product
    Lifecycle Modelling), ERP (Enterprise Resource Planning), MES (Manufacturing Execution
    Systems), SCADA, PLC (Programmable Logic Control) to servo controllers of individual
    equipment and devices on the shop floor. Among others, the increased number of
    sensors due to the IoT philosophy and finer control of processes will affect the
    complexity of software [248], [259], [263]. The nature of CPS adds another dimension
    of complexity. To deal with this, it is critical to establish a reference model
    of architecture of smart factory (e.g., see Ref. [185]) and to develop software
    using Model-Based Systems Engineering approaches (MBSE) [84], [273]. The existence
    of vast use data will have very strong implications for PLM (Product Lifecycle
    Management) [2], ERP (Enterprise Resource Planning) [161] and other data management
    systems for product development. Traditionally, these tools were meant to be used
    during the design and production phases. However, the concept of digital twin
    [6], [85] aims at storing vast operational and life cycle related data collected
    by smart products using the IoT technologies. Digital twins can be established
    on these PLM or ERP platforms, which extends the use of PLM and ERP across the
    entire product life cycle and is expected to serve as the basis for digital manufacturing
    [50] (see Fig. 7) in which smart products are expected to function as a mechanism
    to deliver smart services and collect massive life cycle related data. The roles
    and future research trends of digital twin in the context of digital manufacturing
    will be discussed further in Section 6.3. Download : Download high-res image (196KB)
    Download : Download full-size image Fig. 7. Digital manufacturing and product
    life cycle. 4.4. Product development and systems engineering Modern product development
    methods for multi-disciplinary mechatronics or CPS engineering have been discussed
    by a number of authors [22], [45], [93], [94], [118], [119], [141], [165], [179],
    [204], [253], [298]. Some of them are influenced by traditional design process
    models [234], whereas others are based on systems engineering methodologies, such
    as the V-model [77] (Fig. 8). In Fig. 8, the left-hand side is the requirements
    (predicted models) whereas the right-hand side depicts actual implementation.
    It must be noted that the V-model is criticised for the discrepancies with the
    reality (e.g., [272]) and, therefore, V-model should be treated as a reference
    model rather than as a descriptive model. Download : Download high-res image (161KB)
    Download : Download full-size image Fig. 8. V-model with predicted models and
    the implanted system. The features listed in Section 2.2 can potentially influence
    the product development process, because these features rely heavily on software
    components. Ideally, the machine (hardware), electronics hardware, and the embedded
    control software should be developed as a whole as illustrated in Fig. 9. For
    instance, imagine a packaging machine. Fig. 9 reads that the first requirements
    were specified (e.g., packaging process description), which then would be transferred
    to a choice of the mechanism and a motion path of the mechanism (behavioural description).
    This would have to finally be converted to data for part making as well as a motor
    controller programme of the mechanism. Download : Download high-res image (36KB)
    Download : Download full-size image Fig. 9. Idealised product development process.
    However, in practice, it is often the case that this ideal process in Fig. 9 splits
    in domain-wise (or discipline-wise) separated processes. There is a tendency that
    the control software development process comes last [22]. This means a realistic
    multi-disciplinary product development process would look like Fig. 10. After
    the initial product definition phase where functional requirements are determined,
    the mechanical and electronic design teams work almost independently until the
    design freeze. Download : Download high-res image (86KB) Download : Download full-size
    image Fig. 10. Realistic multi-disciplinary product development process. Then,
    the integration phase starts and in parallel the control software development
    follows up the mechanical and electronic design. This means the software development
    team waits for the mechanical and electronics teams to finish at least behavioural
    design. This also suggests that the product development will be undertaken as
    collaboration of mono-disciplinary teams [232]. In addition, practically speaking,
    the software development phase tends to delay, as this is the integration and
    verification/validation phases in which the only way to solve problems is code
    but not going back to hardware design. This means delay in product release. Therefore,
    improving this stage (verification and validation) with software-based methods
    could be beneficial. In the near future, ideally, once the requirements are described
    and the mechanism is chosen, the behaviour of the mechanism as a motion path should
    be calculated automatically. The degree of automation of electronics CAD or software
    development is more or less the same and the control code can be semi-automatically
    generated. Fig. 11 illustrates this situation in which a light blue box indicates
    a potentially automated process. Due to these automated processes, project delays
    could be minimised or avoided. Download : Download high-res image (85KB) Download
    : Download full-size image Fig. 11. Near future multi-disciplinary product development
    process. In the future, eventually the smart packaging machine would (semi-)automatically
    programme itself from the packaging process description. This means that product
    development becomes integration of smart parts and we do not have to ‘programme’
    the mechanism and design intelligence or embedded intelligence takes over the
    role of the designer. Embedded intelligence indeed is a game changer in that the
    paradigm shifts from ‘programmed behaviour’ to ‘learning for behaviour modification’
    (or growth). In addition, this also means a higher degree of discipline integration.
    Fig. 12 illustrates a future situation in which the three separated disciplines
    can be integrated with a help of high-level tools. Although this is just a vision
    at this moment, model-based systems engineering (see the next section) targets
    such automation. These research and development efforts in this direction will
    be looked at in Section 5.3. Download : Download high-res image (34KB) Download
    : Download full-size image Fig. 12. Future multi-disciplinary product development
    process. 4.5. Model-based systems engineering Originating from software engineering,
    the concept of Model-Based (Systems) Engineering (MBSE) [84], [273] (which was
    initially called Model-Driven Engineering (MDE) [198]) means the use of models
    to store, exchange, and develop information about the target software system being
    developed, rather than traditional document-based or code-based methods. The core
    philosophy of MBSE has a high degree of affinity with physical domains such as
    mechanical, mechatronic, and electronic engineering, because computer-based models
    are utilised more intensively than the software domain as observed in the rise
    of digital engineering (see Section 4.3). Embedded software for smart products
    requires an appropriate level of abstraction about domain concepts to reduce the
    complexity of the domain, which was not sufficiently addressed in the traditional
    code-based development paradigm. For example, it often happens that requirements
    are recorded in a natural language in Microsoft Excel sheets. Instead, if requirements
    are recorded or illustrated in a graphical model like IDEF0 [98] or something
    that can be easily converted to a model in UML (Unified Modelling Language) [175]
    or SysML (Systems Modelling Language) [174], it would be possible to capture,
    describe, design, analyse and verify systems requirements, specifications, functions,
    and behaviours of the smart project in a formal manner. MBSE is expected to improve
    productivity of the code development process by facilitating reuse of models (i.e.,
    eventually code). To develop smart products, MBSE is particularly suitable for
    controller design (e.g., [71], [262]), as well as for programming the cyber part.
    There are four significantly different pillars that form the basis of MBSE (Fig.
    13). The first pillar is traditional systems engineering approach which is concerned
    about the development of large-scale complex systems. This approach contains rather
    top-down methods such as V-model as a prescriptive process model, formal definition
    decomposition methods, and specification methods including SysML and UML. Download
    : Download high-res image (128KB) Download : Download full-size image Fig. 13.
    Model-based systems engineering. The second is the software engineering approach
    typically including CASE tools, some of which have links to descriptions in, e.g.,
    SysML, so that outcomes of systems engineering methods can be transferred into
    software codes. The third is dynamic modelling of systems for which tools such
    as Matlab/Simulink and Modelica are gaining popularity to define, model and analyse
    systems dynamics behaviours. Recently, so-called 1D simulation or 1D CAE [211]
    is gaining interests, in particular, as a way to work with a simplified model
    which appears at very early phase of product development. Such a simplified model
    (often at physical phenomenon level) captures the essence of the function to be
    realised. Then, using a dynamic systems modelling tool, a conceptual level study
    (often with simplified differential equations) is conducted to determine key parameters
    (but very roughly). 1D modelling is often understood as a simplified method to
    speed up 2D or 3D CAE analysis processes but this is perhaps a too shallow interpretation.
    The true value of the 1D approaches is that they don’t require too much details
    as is the case with 2D CAE or 3D CAE analysis. Finally, the fourth is more recent
    recognition that physical models need to be incorporated for the smart products
    development. To do so, MBSE methods are being integrated into a PLM framework
    as illustrated in Section 5.3, which should allow easy transfer or conversion
    of information among models including even software code. 5. Research challenges
    for smart product development 5.1. State of the art of methods and tools for smart
    product development To develop hardware, software, and contents of smart products,
    a wide variety of methods and IT tools (see Sections 4.2 and 4.3) is available.
    For example, we do know how to define and design ‘connectedness’ and ‘sensor architecture’
    with systems engineering tools by representing information flow in SysML among
    various signal processing elements. However, we do not have generalised knowledge
    to build a ‘reconfigurable system’ or ‘dependable machine’, yet. Moreover, it
    is not obvious for any currently available model representation scheme within
    PLM or MBSE to represent semantic information needed to design services. For the
    development of services, while there are a few methods available (e.g., [23],
    [28], [41], [194]), there are not many strong IT tools available. Although the
    concepts of service CAD [23], [117] have been proposed, they are not yet commonly
    used in industrial practice. In addition, the linkage between product design and
    service design is rather weak. Whereas general design methodologies to achieve
    a certain service goal in the context of technical architecture are yet to be
    fully understood and established, it is possible to identify attempts to develop
    a methodology that will represent service as a way to change the states of stakeholders
    [115], [201], [231]. In such a case, services are described as transitions among
    discrete events [117]. Smart products and their ecosystem generate information
    during their life cycle stages. This information should be processed to create
    higher level business value. To do so, techniques and tools of big data and data
    analytics can be used. However, feeding the obtained information back to smart
    product design is not yet practically exercised, whereas research is intensively
    conducted (e.g., [13]). At this moment, information obtained from product operations
    is mainly used for managerial and maintenance purposes [62], [91], [109], [116],
    [131], [134], [164]. The state of the art of methods and tools for the development
    of smart products could be summarised as follows. • While there are still some
    deficiencies (e.g., immature integration of hardware and software design in MBSE,
    which will be discussed later), basic methods and IT tools for the development
    of smart products are reasonably mature and available. • During the product development,
    the verification and validation subphases are always problematic. One possible
    solution is to develop a software-based simulation tools for verification and
    validation. However, this is not a silver bullet, because the real root cause
    could be poor systems definition/decomposition, unpredicted phenomena [53], [233],
    or impossibility of reversing design decisions when mechanical or electronics
    design is once frozen. • Although methods for service design are available, IT
    tools for service design are undeveloped. • There is no concrete method that links
    the smart product PSS design to user experiences [153]. • We do have a good amount
    of knowledge on how to deal with user experiences, but this is mainly focused
    on user interface design. • Information generated from the smart product life
    cycle can be analysed adequately with a variety of methods and IT tools. But there
    are only a few formal methods to feed this information back to smart product development
    [9], [10], [11], [13], [14], [54], [182]. In the following sections, we look into
    some research challenges and current effort to tackle them. 5.2. MBSE challenges
    for smart product development The use of MBSE to develop smart products is motivated
    in the first place by the complexity of smart products. The traditional document-based
    approach employs pure textual treatment of requirements, functional capabilities
    and behavioural properties in relation to the intended product and technical (sub-)system
    characteristics. Apparently, this approach cannot handle complex situations observed
    in smart product development, such as interactions with other products and devices
    on the network and completely amalgamated multi-disciplinarity. Although MBSE
    offers many key solutions to the challenges above, there are still challenges
    to be solved. Table 4 compares different models in different domains relevant
    to smart products. From this table, it is clear that MBSE might be a promising
    approach, but there are still issues in model integration and data exchange among
    different models in different domains. • Although it might be possible to represent
    functions in any domain using the “to do something” formalism or “input–output
    relationship” formalism, there is no trivial connection between functional models
    and other models at behaviour, state, or structure levels. • Geometric model-based
    (i.e., PLM-based) integration of structure is possible for mechanical CAD and
    CAE applications. However, there are many other domain specific structural models
    that cannot be represented using only geometric models. • Parameter value lists
    as well as state transitions using, e.g., IDEF, UML, or SysML, can be used to
    represent states in many domains. • A variety of domain specific models exist
    for representing behaviours. • There is no unified “MBSE model” for smart products,
    let alone service models. It is more pragmatic to develop translational approaches
    among these different types of models, such as ReqIF (Requirements Interchange
    Format) [173], system descriptions (SysML), interface standards for models (such
    as Functional Mockup Interface (FMI) [81]), and general linkages (such as OSLC
    (Open Services for Lifecycle Collaboration) [176]). • This pragmatic translational
    approach (i.e., federation of mono-disciplinary models), as opposed to the ideal,
    unified, single model approach, seems valid, although obviously there are inevitable
    translation losses and inefficiencies. Table 4. Examples of models in different
    domains. Empty Cell Behaviour State Structure Mechanical Motion diagram 3D geometric
    model 3D geometric model Force diagram FEM analysis Stress diagram Force diagram
    Mesh model generated from 3D geometric model Electro-nic State transitions Parameter
    value list Circuit diagram Servo control Parameter value diagram Parameter value
    list Block diagram Soft-ware in general State transitions Parameter value list
    • Data model • Flowchart Mosterman and Zander studied the architecture for Industry
    4.0 from the viewpoint of software [166], which pointed out software challenges
    including: • Emerging behaviour design: As a result of compositional approach,
    behaviours can emerge unexpectedly. How can these unpredicted behaviours be dealt
    with? • Data sharing: Among models in different domains, the same data should
    be the same in a semantically correct manner, which is sometimes impossible. •
    Functionality sharing: Control software needs to assume hardware limitations.
    This type of constraint needs to be correctly shared among different domains.
    • Collaborative functionality testing: This is critically necessary for a dependable
    smart product, but such testing methods do not exist yet. There are also incompatibilities
    between elements in the 1D CAE library (typically elements that describe differential
    equations for systems dynamics models) and functional decompositions necessary
    for systems definition. The latter does not consider time dependency which is
    critical in the 1D CAE library. This is because consistent theoretical foundation
    for MBSE is not yet fully developed. Instead, various ad hoc models are considered
    across various stages of the product development process. With the introduction
    of services which are mostly defined by software elements, this incompatibility
    even exacerbates as services as software functions have nothing to do with physical
    functions. In addition, MBSE does not handle concepts like ‘adaptability’, or
    ‘customer experiences’ directly. These have to be first translated to parameters
    so that they can be modelled and manipulated with MBSE tools. This is perhaps
    extremely difficult if not impossible at all. Therefore, MBSE for smart product
    development suffers from the lack of orchestrated models, if not a single unified
    model. This variety of concepts and model types is manifested, e.g., in different
    standards such as ReqIF, SysML, FMI, and, but all of them come with limited semantic
    expressive power. In addition, there is no formal standardised method to model
    and represent function models, system architecture, and information generated
    by the operation of the smart product. If so many different types of models and
    standards are involved, traceability of data and decision making becomes extremely
    difficult to achieve due to organizational boundaries. In addition, due to a missing
    value model for data, information and digital models, it remains onerous to argue
    for investments in MBSE competence, education and model preparation. INCOSE conducted
    a survey comparing various MBSE methods and tools including UML and SysML [68].
    Comparing readiness for an integrated system approach, the concept of executable
    SysML was derived. In summary, the following limitations and shortcomings exist
    and need to be tackled for MBSE to become ready for the robust development of
    smart products. • There is no common understanding among practitioners about how
    MBSE works, for which purpose and in which cases its methods can and should be
    used. Most of them regard MBSE as a solution for current problems rather than
    a future direction. Many experts believe that there is a lack of maturity of the
    existing MBSE methodology. This can be interpreted in two ways; either the methodology
    really is incomplete, or the knowledge of practitioners is insufficient. • As
    it is rather complicated to use many different digital models correctly, dedicated
    education and training are desirable. This should cover various PLM tools, from
    CAD (E-CAD, M-CAD), CAE (both 3D and 1D) and various specification models (such
    as SysML or ReqIF) as well as integration tools and standards (such as FMI or
    OSLC). • Functional models and architecture models have not extensively been used
    in traditional engineering areas [236] although the use of functional models can
    be seen widely in precision engineering. This requires a new kind of system thinking
    away from typical embodiment design models. The anticipation of logical and physical
    dependencies out of those models remain unclear but offer significant opportunities
    to avoid late changes during the development process. • The extensive tool offering
    makes it difficult to clarify the core capabilities that are needed from a skill-set
    and competence point of view. • Today’s implicit engineering collaboration (mostly
    based on e-mails and direct oral communication) needs motivation to engage a model-based
    approach. Cultural challenges and better team-oriented review mechanisms for model-based
    engineering are critical in moving forward. In addition, currently, development
    engineers tend not to share certain model knowledge with others. • No powerful
    solutions exist yet in helping engineers to manage associated digital models without
    significant overhead. Therefore, it is a must to provide better and (partly) automated
    solutions for managing models. Engineers need a relief in orchestrating models
    in order to make an effective use of the new model richness for the anticipation
    of smart product behaviour and interactions. In response to these limitations,
    efforts are being made, as depicted in the next section, to develop methods and
    toolsets that can address at least some of the issues addressed above. One of
    them is the architecture-centric approach (e.g., [232]). According to ISO/IEC
    42010 [103], ‘architecture is fundamental concepts or properties of a system in
    its environment embodied in its elements, relationships, and in the principles
    of its design and evolution’. At this level of abstraction, e.g., behaviours will
    be represented by only parameters and their changes without any implementational
    level descriptions (i.e., mechanisms). This means architectural descriptions are
    domain-independent and units at architecture level will allow domain-independent
    compositional approach to design synthesis [71], [118], [119], [215]. 5.3. Industrial
    development of MBSE In the following, we will look at two recent approaches developed
    by vendors of integrated tools (Dassault Systèmes and Siemens). 5.3.1. Dassault
    systèmes’ approach to MBSE The developer of the 3DExperience platform, Dassault
    Systèmes, published a white paper on the development of smart products [34], which
    advises steps towards successful smart product development. • Define the target:
    Centralise and share information. Make cross-discipline requirements and design
    artefacts visible across the product development team to relevant stakeholders
    at each step of the development process. • Plan the product: Establish the smart
    product conceptual model right as early as possible. Use solutions that support
    systems modelling and simulate systems behaviours in all operation modes. • Validate
    early and often: Use early simulation at the product level with best visualization
    techniques. Facilitate informal and formal information sharing and interaction.
    • Design product architecture and validate to interfaces: Use solutions that provide
    visibility and collaboration at both the domain level and across disciplines to
    eventually ease collaborative decision making based on shared KPIs. • Aggressively
    manage change: change management must be effectively done in an integrated manner
    across disciplines. Extend change management scope beyond the current design.
    Use tools for traceability and change impact analysis. • Enable an integrated
    lifecycle view: Use modern formal data/ lifecycle management solutions as smart
    products demand more integration, transparency, and traceability. A use case of
    UAV design on the 3DExperience demonstrated the power of the MBSE approach [42].
    This used IEEE 1220 [99] to integrate requirements, functional, logical and physical
    views. Fig. 14 depicts the implementation of these views on the 3DExperience platform
    with the following features which helped a rather novice engineer to implement
    virtual flight simulation in the 3DVIA environment in a short period of time.
    Download : Download high-res image (773KB) Download : Download full-size image
    Fig. 14. The 3DEXPERIENCE Platform for Systems Engineering [42]. This demonstration
    achieved the following technical aspects. • Traceable requirement management.
    • Functional and logical design to define functional and components architectures
    with interfaces definition. • Behaviour modelling to add dynamic and static models
    of various engineering fields: These models are described in Modelica or coming
    from external modelers (such as Simulia for CFD simulation and Dymola for dynamics
    simulation, Simulink or SW code for control) through FMI. • Virtual physical prototypes
    to run experiences including 3D, model-in-loop, hardware-in-loop, and software-in-loop
    codes into in the verification and validation processes. • Automated report generation.
    An automotive multi-disciplinary case study was conducted. This demonstrated that
    the combination of the 3DExperience platform and MagicDraw (No Magic Inc.) was
    useful for, especially, architectural level systems design [72]. • Virtual physical
    prototypes to run experiences including 3D, model-in-loop, hardware-in-loop, and
    software-in-loop codes into in the verification and validation processes. • Automated
    report generation. An automotive multi-disciplinary case study was conducted.
    This demonstrated that the combination of the 3DExperience platform and MagicDraw
    (No Magic Inc.) was useful for, especially, architectural level systems design
    [72]. A comparative study compared design thinking [35] and complex systems engineering
    through experiments [61]. Design thinking focuses on creative aspects, while systems
    engineering focuses on vigorous modelling and precise simulation. It was proposed
    that a combinatory approach of design thinking and systems engineering was a desirable
    research direction. 5.3.2. Siemens approach to MBSE Siemens develops and offers
    a comprehensive suite of PLM software, such as NX (CAD), Tecnomatix (manufacturing
    process planning and simulation), Teamcenter (PLM), Simcenter (CAE), Mentor (electronics
    CAD) and Mindsphere (IoT environment) [213], across the full product lifecycle
    targeting industrial companies in a variety of industries focussed on smart product
    development and commissioning. The Siemens PLM approach to MBSE is based on a
    digitalisation strategy beginning with concept design through multi-domain simulation
    and verification across the full lifecycle of mechanical, electronics, and embedded
    software. Fig. 15 depicts the systems engineering methodology on the Siemens PLM
    platform. It is also based on the recognition that the digital twin as the virtual
    replica of the product can represent across a vast array of contributors. The
    digital twin is central to ensuring the product functions as intended and product
    behaviours can be verified to confirm performance, availability and reliability.
    Download : Download high-res image (669KB) Download : Download full-size image
    Fig. 15. Systems engineering methodology: Generative engineering to explore and
    optimize architectural combinations (courtesy of Siemens). With regard to intelligence
    of smart products, such as Autonomous ADS (Automated Driving System) functions,
    the system definition is key to representing the scope of the ADS with respect
    to its functional requirements and relationships. The ability to model each aspect
    of the vehicle, its environment, its occupants, and the relationships is paramount
    in verifying if the resulting product can meet regulatory compliance while also
    delivering the consumer features expected. In Ref. [217], a virtual validation
    and testing framework is reported that is based on a co-simulation platform of
    vehicle dynamics and traffic environment tools. To validate algorithms, it is
    imperative to take into consideration both vehicle dynamics and the wide potential
    of traffic scenarios. By simulating the algorithms in a software environment,
    it was made possible to frontload the verification of control software in the
    absence of hardware. In Ref. [257], optimisation design of powertrain architecture
    for hybrid vehicles was illustrated through a combination of automatically generated
    concepts with optimal control selection. This demonstrated the possibility of
    optimal design at the architecture level taking controls performance (e.g., energy
    management) into consideration. The increasing interest in hybrid electric vehicles
    imposes the need to provide computational support for design choices during the
    development of these vehicles. Future challenges include the expansion of domains
    beyond mechanical, electrical, electronic, and software with classical MBSE methodologies,
    extending into smart service design (e.g., mobility, traffic control, etc.). To
    do so, work is underway with Mindsphere applications in collaboration with Siemens’
    Smart City Division and eMobility inter-modal solutions to connect smart products
    to smart environments. It is also anticipated that the recent advances of IoT
    technologies will allow the collection of a massive amount of data at every stage
    of product life cycle, which will be stored in a digital twin creating a ‘hybrid
    model’ of products [254]. Fig. 16 depicts the digital twin concept used at Siemens,
    which covers the whole range of virtual product development processes. Download
    : Download high-res image (135KB) Download : Download full-size image Fig. 16.
    Digital twin concept at Siemens. 6. Discussions and future research directions
    6.1. Findings This section discusses our findings about smart product development
    capabilities and future research directions. The paper began with Chapter 1 which
    defined the smart product concept (Fig. 1) and clarified the data-driven value
    generation mechanism of smart products (Fig. 3). In designing smart products,
    it is crucial to deal with experiences as well as information generated at every
    life cycle stage of smart products appropriately. Chapter 2 reviewed some existing
    smart products and summarised their functional capabilities and technical features
    of smart products (such as intelligence and resilience). Chapter 3 overviewed
    technologies that need to be implemented in smart products, including AI technologies
    and data analytics. Chapter 4 discussed technologies to be used in developing
    smart products such as traditional product development methods, service development
    methods, systems engineering, digital engineering (including digital twin), systems
    engineering, and MBSE. Regarding services, we seem to have sufficient knowledge
    to process information collected at various life cycle stages of smart products
    for the purposes of control and management of product life cycles. However, we
    have insufficient knowledge about how to convert that information useful in designing
    smart products and services. In addition to this, we do not have a formal methodology
    to develop smart products considering the entire scope of the ecosystem. Chapter
    5 focused on challenges of these developments, among others, of MBSE. Clearly
    methodologies to deal with services consistently with other domains are yet to
    be developed. In addition, it seems that multi-disciplinarity of models is best
    handled by developing translational standards. In the following sections, we will
    discuss future research needs and trends identified in previous sections. 6.2.
    Survey on future research needs Although innovation and business model potentials
    of smart products within Industry 4.0 are increasingly recognised by industrial
    companies and research institutes, only few research projects and activities address
    the development of smart products topics comprehensively. Two studies [4], [5]
    in collaboration with about 100 international leading engineering experts have
    identified research deficiencies in the context of smart product development and
    defined following groups of research needs for the future: • Procedural approaches
    and generic methods for smart product engineering. • System design of smart products.
    • Domain-specific design of smart product components. • System integration, validation
    and verification of smart product components. • Product data and process management.
    • Smart product IT infrastructure. In the first area of procedural approaches
    and generic methods, following main needs for research have been identified: •
    Extension of the V-model of systems engineering to include service components
    as well as cooperative and agile work methods. • Extension of the smart product
    development phase: During, e.g., the usage phase, some sort of design activities
    can take place for reconfiguration purposes. This means application of reconfiguration
    to all phases of the product lifecycle, in particular, to the usage phase (run-time
    reconfiguration and life-time reconfiguration). • Establishing new disruptive
    approaches for the development of innovative smart products. Regarding the system
    design of smart products, the following needs were identified: • Development of
    ‘design for smart X’ in which X stands for a life cycle stage. This also includes
    IT tools to process feedback information from physical products [148]. • Consideration
    and modelling of business models, smart services, system interfaces and product
    cloud platforms for such business models during the smart product’s system design
    phase. • Use of feedback information from previous product generations in the
    system design stage. • Extension of existing requirement engineering and management
    methods for the smart product design. • Development of intuitive modelling and
    visualisation techniques for incomplete functional structures considering multi-layer
    abstractions. • Development of models for a smart product’s communicational, interactional
    and behavioural aspects. Domain-specific design of product components lacks the
    following research topics: • Designing smart human-machine interactions. • Virtual
    functional simulation and validation of a component’s behaviour including service
    components using multi-physics methods. • Reflecting feedback information from
    downstream design phases during the development and optimization of individual
    product components, including new design for smart X methods and security requirements.
    • Designing digital/virtual product twins, and of RAMI 4.0 administration shells
    [185] and product cloud platforms. The main research needs for system integration,
    validation and verification of smart products are: • Review and certification
    of a smart product with the objective to reduce the time required for validation
    and verification • Field data and feedback information for validation purposes
    from the product’s usage phase. • Hybrid validation of real and virtual smart
    product components (hardware in the loop, software in the loop, human in the loop).
    • Integration of customers and stakeholders into the product validation. In the
    context of the product data and process management, the following research topics
    have been suggested: • Integration of all virtual models (e.g. communicational,
    interactional and behavioural models) into PLM. • Extension of existing product
    lifecycle management approaches with field data of real product instances. • Instance-based
    management of virtual product models (management of the digital/virtual product
    twin). • Integration of flexible and agile methods into engineering workflows.
    • Integration of product reconfiguration concepts into the product lifecycle management.
    Research needs regarding IT infrastructures are: • Extension of existing neutral
    data formats (e.g. STEP and JT). • Definition of comprehensive and application-specific,
    semantically rich data models (e.g., ontologies and semantic networks). • Use
    of cloud platforms as partial smart product components as well as a part of engineering
    IT tools. • Open software system architectures for engineering IT tools. Additionally,
    engineering reference models and solution libraries for the development of smart
    products are yet to be addressed by scientific work. Furthermore, pervasively
    a high need for standardization in the context of smart product engineering and
    design has been identified. 6.3. Digital twin In Section 4.3, it was argued that
    digital twin taking advantage of PLM should be combined with IoT in the future.
    Data is collected using the IoT technologies at every life cycle stage of smart
    products starting from development, production, logistics, operation, maintenance,
    and end-of-life. The data will be converted to more useful information using big
    data and AI technologies and should be used for other activities. Fig. 17 illustrates
    the roles of digital twin in the context of digital engineering [145], [146].
    First, the smart product will be designed, and its product model will be stored
    in the PLM as a digital master. From the digital master, digital prototypes are
    generated for various types of evaluation through simulation (or analysis). The
    results of the evaluation will be reflected in design improvements. Smart products
    will be produced from the digital master, released, and operated as smart product
    service system. Its life cycle data will be collected and stored as an as-is model
    in the digital twin. Download : Download high-res image (131KB) Download : Download
    full-size image Fig. 17. Smart products and digital master, digital prototype
    and digital twin. In Fig. 17, there is an interface between the product model
    and the smart product service system through which production takes place. The
    interface between the smart product service system and the as-is model is the
    IoT sensors and any other data collection mechanisms. The feedback mechanism,
    particularly the one from the as-is model to the product model, is not yet sufficiently
    understood, which is a future research topic. At the same time, the figure stresses
    the importance of the information backbone in development cycles as well as the
    necessity of 4D-based digital twin (i.e., including time scale) rather than only
    3D-based digital twin. 6.4. Smart digital engineering This section illustrates
    a new research topic of ‘smart digital engineering’, which is now tackled within
    one of the authors’ laboratory [36], [112], [119], [223]. Smart digital engineering
    represents technology and engineering capabilities required for smart product
    development and may include the following four types of Smart Digital Engineering
    Capabilities (SDEC) [223]. In each of these areas, possible research topics will
    be explained. • Smart Digital Engineering • Smart Virtual Engineering • Smart
    Model-Based Systems Engineering • Smart Lifecycle Engineering 6.4.1. Smart digital
    engineering capabilities Digital engineering, in general, describes capabilities
    of creating digital product models, of handling digital models in the PLM in a
    consistent manner and of generating representations using the information sets
    within the PLM following digital workflows. This leads to the following definition.
    SDEC will address new digital assistance and intelligence in creating, revising,
    exploring, collaborating, testing, signing-off and releasing diverse sets of traceable
    artefacts as part of digital engineering workflows, processes and activities.
    From this definition, clearly digital engineering workflows, processes, and activities
    must be linked to behaviours of engineer (i.e., digital behaviour). Therefore,
    the first Smart Engineering Capabilities is: • SDEC #1: Identification of digital
    work behaviour (type: digital) Location within the EOS (Engineering Operating
    System): EOS is a system that controls and operates various types of a human engineer’s
    cognitive activities during product development within the triangle of artefacts,
    processes, and (IT) tools [143], [144] (see Fig. 18). A work behaviour of the
    engineer is located at the intersection among ‘virtual and physical artefacts’
    (digital models and data), ‘IT tools and systems’, and ‘process and organisations’.
    Download : Download high-res image (49KB) Download : Download full-size image
    Fig. 18. Engineering Operating System (EOS) [144]. Problem description: Engineers
    and their management face problems to properly match the type of digital work
    with the digital computer application during typical engineering work patterns
    and associated collaboration scenarios. Solution requirement description: In order
    to improve engineering activities patterns and styles with respect to quality,
    efficiency, relevance and compatibilities, it must be possible to seamlessly choose
    the best digital work behaviours for individuals and teams. Since the amount of
    digital work and its associated activities are steadily growing, optimised low-cost
    (time- and money-wise) IT solutions are needed, not only for individual and collaborative
    technical tasks but also administrative tasks. Current research concepts and demonstrators:
    The influence of digitised work environments on engineering activities has been
    neglected so far, but it is necessary for the scientific research community to
    look into activities of information procurement, agreements and documentation
    in computer applications [143]. Potential first implementation experiences: Individual
    digital work behaviour patterns of engineers at a computer workstation can be
    capturable and related to specific development activities. This is achieved by
    automated identification and comprehensive analysis of such activities with respect
    to the development task, digital tools in interplay, work processes and digital
    models [144]. 6.4.2. Smart virtual engineering capabilities Virtual engineering
    addresses a range of scientific, technological, organizational and business activities
    using advanced information and communication technology and methods with a major
    focus on process and systems integration, immersive visualization and ‘human-machine-human’
    interaction [95], potentially combined in so-called Synthetic Environments [55].
    The overall aim of virtual engineering is the early, continuous, networked (process
    view) and integrated (system view) support of the entire product life cycle concerning
    collaboration, assessment, concretisation and validation of products and processes
    with participation of all partners using virtual artefacts. • SDEC #2: Smart hybrid
    prototyping (type: virtual) Location within the EOS: The idea of smart virtual
    engineering is validation as early as possible in the product development process
    (‘process and organisation’ in Fig. 18). For this purpose, the most suitable virtualization
    tools are selected in the ‘tools and IT systems’ area. Then, appropriate models
    are built in the virtual artefacts area to be validated with, e.g., user interfaces
    with VR technologies again in the ‘tools and IT systems’ area. Problem description:
    The requirements for the new engineering capability of SHP (Smart Hybrid Prototype)
    is derived from higher-level objectives to fix industrial challenges of virtual
    engineering, e.g. the growing complexity of product and process requirements while
    drastically reducing time-to-market and classical physical product prototyping.
    Additionally, there is a need to ‘physically’ experience virtual models (e.g.,
    CAD models). This can be achieved by using haptic devices, which enable force-feedback,
    thereby, interaction with virtual models. Solution requirement description: The
    SHP approach is defined as a combination of physical prototypes and digital models
    in a virtual reality environment in order to enable a realistic experiencing of
    a mechatronic system [220]. Furthermore, it enables a multimodal experience of
    mechatronic products, which means that the human factor is given much greater
    prominence when validating the overall system in real-time. Current research concepts
    and demonstrators: These include visualization technologies such as virtual, augmented
    and mixed reality, modelling and simulation technologies with physics-based game
    engines or professional tools such as MATLAB/Simulink or Dymola, interaction technologies
    and human machine interfaces (HMIs) like haptic interfaces and tangible user interfaces
    (TUIs). Potential first implementation experiences: The SHP technology was validated
    by developing, assembling and testing a passenger car’s tailgate device [25].
    The tailgate test setup is shown in Fig. 19. Download : Download high-res image
    (157KB) Download : Download full-size image Fig. 19. SHP demonstrator [25]. 6.4.3.
    Smart (model-based) systems engineering capabilities Systems engineering addresses
    issues such as requirements engineering, reliability, logistics, coordination
    of different teams, testing and evaluation, maintainability and many other disciplines
    necessary for successful system development, design, implementation, and ultimate
    decommission. Its scope needs to be expanded when dealing with large or complex
    projects. Systems engineering deals with work-processes, optimization methods,
    and risk management tools in such projects. • SDEC #3: Model intelligence for
    IoT and Industry 4.0 (type: model based) Location within the EOS: From product
    development up to commissioning and final realization of the product/production
    system, each process step requires different types of digital models and their
    respective data. This means that MBSE sits in the ‘activities’ area in Fig. 17.
    MBSE operations need to be processed by IT tools and applications that allow lossless
    information transition and storage as well as accessibility during lifecycle phases,
    across engineering domains and across company borders. The new challenge here
    is to establish a meaningful feedback to design channel: information from product
    operation back into design and engineering phases and to provide services and
    capabilities to handle models and data appropriately. Problem description: MBSE
    methodologies and tools are required because smart products are software intensive.
    This is even getting more so, because of the introduction of IoT technologies
    such as Industry 4.0 for smart factories. However, there are no commonly accepted
    and widespread technologies and formats of how to define interconnectivity and
    services of smart products during the product development phases. Solution requirement
    description: MBSE calls for sophisticated multi-disciplinary models that integrate
    all domains of engineering. There can be two approaches to realise such an integrated
    model. One is to develop a truly integrated model that can cover many different
    disciplines, but this is impossible unless the level of descriptions is high-level
    without much details. One such a model could be the architectural level model
    discussed in Section 5.2. The other approach is to develop an integrated framework
    that can accommodate different types of models. PLM systems are typically based
    on this approach. Current research concepts and demonstrators: An example demonstration
    cell ‘Smart Factory 4.0’ is being developed at Fraunhofer-IPK in Berlin, Germany.
    It is a miniature production line for conducting research and acts as a testbed
    for tool and component vendors. The Smart Factory itself can be considered smart
    to an extent that it manufactures individualized batch-size products right after
    the customer has entered his/her product definition into the system. The basis
    here is a set of simulation models that interact intelligently with each other
    and based upon sensor data created in the physical as well as in the virtual production
    line. Both worlds are inter-connected with IoT technology. Potential first implementation
    experiences: The Fraunhofer-IPK implementation can be considered the first implementation
    of the kind. 6.4.4. Smart life cycle engineering capabilities Smart products and
    services require new capabilities in connectivity of information and data sets
    across all lifecycle phases. Additionally, new IT platforms (e.g. IoT) and technologies
    (e.g. CPS) change common methodologies in engineering design, business development
    and lifecycle thinking. Some examples of this ‘smart life cycle engineering’ have
    been discussed in Section 2.2.3. • SDEC #4: Smart services (type: life cycle)
    Location within the EOS: Products are becoming smarter and services are offered
    across the entire life cycle. In the EOS in Fig. 17, the digital and physical
    artefacts are changing in the way they exist in the life cycle, which coincides
    with the evolution of the IT tools, applications and systems. This means that
    traditional engineering companies will have to adapt their engineering processes
    and organization. For instance, it is clear that, as the IoT technologies advance,
    products will be equipped with more sensors, which will generate more information
    of different types. These will force the IT infrastructure to change and eventually,
    which will change the business as well as products, which we have seen in the
    cases of Rolls-Royce [91] and Komatsu [109], [116]. Problem description: Smart
    products and smart services require new engineering capabilities for development,
    manufacturing, use and end-of-life treatment. For these, dedicated data and connectivity
    management is required. Solution requirement description: Solutions are needed
    for both engineering processes and life cycle processes. Harmonized interaction
    of artefacts requires synchronized data management and information standards up
    to business model including PDM/PLM and IoT platforms. Current research concepts
    and demonstrators: In the future, data about business as well as consumer behaviours
    becomes the main resource for the data-driven business paradigm. Technically,
    this means big data technologies will play a key role here. Potential first implementation
    experiences: Data driven engineering is the major challenge in smart life cycle
    engineering. Several data levels and data sets (e.g., sensor data, product system
    behaviour data) need to be combined, processed and analysed. Based on that, engineering
    conclusions can be drawn. Different heterogeneous data needs to be linked and
    be prepared for analysis. Consequently, semantic level data integration seems
    to be a key enabler for gaining serious results in the understanding of engineering.
    7. Summary and conclusions 7.1. Summary This paper attempted to shape the concept
    of smart products and to identify issues and challenges of their development from
    the viewpoint of engineering capabilities. Overall, the increasing population
    of smart products will drive significant changes to the conventional and to the
    current digital transformed engineering practice. First, the concept of smart
    products was defined as CPS integrating internet-based services, which means smart
    products are software intensive, data driven, and service conscious. Smart products
    generate value in two ways (Fig. 3). One is through smart services that will increase
    the value of user experiences. The other is through operational data and information
    created at every life cycle stage. This has mostly business value. In Chapter
    2, various types of smart products were briefly reviewed, followed by identification
    and analysis of commonly found features of smart products. Chapter 3 discussed
    product technologies that will be used or implemented within smart products. Among
    them, it is worthwhile to focus on AI, big data and data analytics. Chapter 4
    reviewed product development technologies (including those for service development).
    From recent development, the paper picked up some important technologies including
    service development methods, digital engineering, and model-based systems engineering
    (MBSE). While PLM and ERP are widely used in product development, it is important
    to note that data collected with IoT technologies during the life cycle of smart
    products needs to be stored and properly processed. For this purpose, the concept
    of digital twin seems promising. MBSE is useful to co-develop multi-disciplinary
    complex CPS, in particular, those software intensive smart products. Chapter 5
    discussed insufficiency and weak points of currently available development methods
    and tools. Among others, the following five weak points were identified. • Many
    smart products specific aspects (such as resilience) lack design methods (i.e.,
    design for resilience). • Dealing with software intensive nature of smart products
    and resulting multi-disciplinarity, MBSE is considered promising from the viewpoint
    of co-development, but at this stage it still needs further development. Among
    others, at this moment, a single unified model about various aspects is not possible,
    which means conversion of models are left with ad hoc interfacing standards. •
    Service design is not well connected to other elements of smart product development
    as PSS. • Capturing and storing information generated at every life cycle stage
    of smart product are not that difficult. However, our knowledge on how to feed
    that information to design is still poor. Chapter 6 first described the outcome
    of an industrial survey about smart product development. This largely matched
    our findings, especially regarding the immaturity of theoretical development,
    and the lack of unified theory integrated design. This chapter also proposed the
    concept of smart digital engineering. 7.2. Conclusions The concept of smart products
    is now getting clearer, i.e., CPS with integrated internet-based services, which
    suggests software-intensiveness, data-driven, and multi-disciplinarity. However,
    the development of smart products is not just about introducing more software
    related capabilities. It is significantly different from the development of previous
    generations. • Smart products are software intensive and the degree of multi-disciplinarity
    is much higher than, e.g., traditional mechatronics products, because the role
    of information is more than control. This suggests the architecture of smart products
    needs to be well established and clearly defined. • The data-driven aspect of
    service elements coming from value creation through life cycle related information
    needs to be modelled, presented and utilised appropriately for smart product development.
    • Information flow within the ecosystem of smart products is complicated and,
    consequently, the entire product development can be very complex. • Decision-making
    processes during the product development become mutually dependent, thus controlling
    the product development cycle can be extremely difficult. This means the currently
    available prescriptive development models (e.g., V-model) can be inappropriate.
    • The role of digital twins will be increasing and requires further research (e.g.,
    to extend it to 4D models). • MBSE seems a promising approach to tackle multi-disciplinary
    nature integrating four relevant approaches (i.e., traditional PLM, systems engineering,
    software engineering, and dynamic systems modelling). While this requires a unified
    single object model, this is currently replaced with a group of translational
    interface standards. Further research is needed to establish the sound foundation
    of MBSE for smart product development. • From the viewpoint of education and training,
    solid competence in digital engineering, software engineering, AI algorithms,
    and MBSE will be needed for engineers and designers of smart products. 7.3. Future
    outlook • It is not difficult to imagine that future smart products will be enjoying
    faster and better connectedness, intelligence, and sensors leading to step-changing
    improvements. For instance, far better vision capabilities will be installed in
    robots, thereby improving material handling capabilities. New applications of
    such robots will be more non-traditional situations like home, office, and society
    rather than factories. • New capabilities that are not really present nowadays
    include autonomously reconfigurable products adapting to many unforeseen situations
    and extremely resilient products requiring no maintenance. For these products,
    validation and verification can be based on self-learning elements by adjusted
    algorithms. • Research-wise, researchers and industry have to mobilize aligned
    efforts to sketch out a complete foundation consisting advanced theories about
    cross-domain models that can be used for future MBSE. Acknowledgments The authors
    would like to thank for the contributions and support from Dassault Systèmes,
    in particular, from Philippe Laufer, Eliane Fourgeau and Gauthier Fanmuy. They
    would like to acknowledge the contributions and support from Pete Lamoureux of
    Siemens AG. References [1] A. Abid, M. Hammadi, J.Y. Choley, et al. A Holonic-Based
    Method for Design Process of Cyber-Physical Reconfigurable Systems, 2016 International
    Symposium on Systems Engineering, IEEE (2016), 10.1109/SysEng.2016.7753180 Google
    Scholar [2] M. Abramovici Future Trends in Product Lifecycle Management (PLM)
    Proceedings of the 17th CIRP Design Conference (2007), pp. 665-674 CrossRefView
    in ScopusGoogle Scholar [3] M. Abramovici Smart Products, CIRP Encyclopedia of
    Production Engineering Springer (2015), 10.1007/978-3-642-35950-7_16785-1 Google
    Scholar [4] M. Abramovici Engineering Smarter Produkte und Services Plattform
    (Engineering of Smart Products and Services) Industrie 4.0 Studie, Acatech, München
    (2018) 46 pages. (In German) Google Scholar [5] M. Abramovici, O. Herzog Engineering
    im Umfeld von Industrie 4.0. (Engineering in the Context of Industry 4.0) Herbert
    Utz Verlag (2016) (In German) Google Scholar [6] M. Abramovici, J.C. Göbel, P.
    Savarino Virtual Twins as Integrative Components of Smart Products IFIP Advances
    in Information and Communication Technology, 492 (2016), 10.1007/978-3-319-54660-5_20
    Google Scholar [7] M. Abramovici, J.C. Göbel, P. Savarino Reconfiguration of Smart
    Products During Their Use Phase Based on Virtual Product Twins Annals of CIRP,
    66 (1) (2017), pp. 165-168 View in ScopusGoogle Scholar [8] M. Abramovici, J.C.
    Göbel, P. Savarino, P. Gebus Towards Smart Product Lifecycle Management With an
    Integrated Reconfiguration Management IFIP Advances in Information and Communication
    Technology, 517 (2017), 10.1007/978-3-319-72905-3_43 Google Scholar [9] M. Abramovici,
    M. Neubach Knowledge-Based Representation and Analysis of Product Use Information
    for Feedback to Design Proceedings of 2nd CIRP International Seminar on IPS2,
    Shaker (2009) ISBN: 978-3-8322-8473-2 Google Scholar [10] M. Abramovici, M. Neubach,
    M. Fathi, A. Holland Knowledge-Based Feedback of Product Use Information into
    Product Development Proceedings of 17th International Conference on Engineering
    Design, 8 (2009) ISBN: 978-1904670124 Google Scholar [11] M. Abramovici, A. Quezada,
    T. Schindler MEDA: Manufacturing Energy Demand Assessment Method for Future Production
    Planning and Product Development Proceedings of 11th Global Conference on Sustainable
    Manufacturing (2013) Google Scholar [12] M. Abramovici, R. Stark Smart Product
    Engineering Springer, Berlin, Heidelberg (2013) ISBN: 978-3-642-30816-1 Google
    Scholar [13] M. Abramovici, A. Lindner Providing Product Use Knowledge for the
    Design of Improved Product Generations Annals of CIRP, 60 (1) (2011), pp. 211-214
    View in ScopusGoogle Scholar [14] M. Abramovici, A. Lindner, F. Walde, M. Fathi,
    S. Dienst Decision Support for Improving the Design of Hydraulic Systems by Leading
    Feedback into Product Development Proceedings of 18th International Conference
    on Engineering Design 2011, 9 (2011) ISBN: 978-1-904670-32-2 Google Scholar [15]
    M. Achtelik, M. Achtelik, S. Weiss, R. Siegwart Onboard IMU and Monocular Vision
    Based Control for MAVs in Unknown in- and Outdoor Environments Proceedings of
    IEEE ICRA 2011 (2011), pp. 3056-3063 CrossRefView in ScopusGoogle Scholar [16]
    M. Aeberhard, S. Rauch, M. Bahram, et al. Experience, Results and Lessons Learned
    from Automated Driving on Germany’s Highways IEEE Intelligent Transportation Systems
    Magazine, 7 (1) (2015), pp. 42-57 View in ScopusGoogle Scholar [17] M. Agiwal,
    A. Roy, N. Saxena Next Generation 5G Wireless Networks: A Comprehensive Survey
    IEEE Communications Surveys and Tutorials, 18 (3) (2016), pp. 1617-1655 View in
    ScopusGoogle Scholar [18] R. Agrawal, T. Imieliński, A. Swami Mining Association
    Rules Between Sets of Items in Large Databases ACM SIGMOD Record, 22 (2) (1993),
    pp. 207-216 Google Scholar [19] S.H. Ahmed, G. Kim, D. Kim Cyber Physical System:
    Architecture, Applications and Research Challenges, IFIP Wireless Days IEEE (2013),
    10.1109/WD.2013.6686528 Google Scholar [20] T.Z. Ahram, W. Karwowski, M.M. Soares
    Embedded Systems Engineering for Products and Services Design Work, 41 (2012),
    pp. 941-948 CrossRefView in ScopusGoogle Scholar [21] A. Al-Fuqaha, M. Guizani,
    M. Mohammadi, M. Aledhari, M. Ayyash Internet of Things: A Survey on Enabling
    Technologies, Protocols, and Applications IEEE Communications Surveys and Tutorials,
    17 (4) (2015), pp. 2347-2376 View in ScopusGoogle Scholar [22] A.A. Alvarez Cabrera,
    M.J. Foeken, O.A. Tekin, et al. Towards Automation of Control Software: A Review
    of Challenges in Mechatronic Design Mechatronics, 20 (8) (2010), pp. 876-886 View
    in ScopusGoogle Scholar [23] T. Arai, Y. Shimomura Proposal of Service CAD System—A
    Tool for Service Engineering Annals of CIRP, 53 (1) (2004), pp. 397-400 View in
    ScopusGoogle Scholar [24] I. Asimov Runaround I, Robot (The Isaac Asimov Collection
    Ed.), Doubleday, New York NY (1950) p. 40 Google Scholar [25] M. Auricht, K. Lindow,
    R. Stark Erlebbare Entwicklung und Absicherung technischer Systeme, Stuttgarter
    Symposium für Produktentwicklung (SSP) Fraunhofer Verlag, Stuttgart (2013), pp.
    8-17 ISBN: 978-3-8396-0573-8 Google Scholar [26] AUTOSAR (Automotive Open System
    Architecture), http://www.autosar.org. (Accessed 15 April 2019). Google Scholar
    [27] L. Atzori, A. Iera, G. Morabito The Internet of Things: A Survey Computer
    Networks, 54 (15) (2010), pp. 2787-2805 View in ScopusGoogle Scholar [28] T.S.
    Baines, H.W. Lightfoot, S. Evans, Neely, et al. State-of-the-Art in Product-Service
    Systems Proceedings of the Institution of Mechanical Engineers, Part B, 221 (10)
    (2007), pp. 1543-1552 View in ScopusGoogle Scholar [29] A. Barbato, A. Capone,
    M. Rodolfi, D. Tagliaferri Forecasting the Usage of Household Appliances Through
    Power Meter Sensors for Demand Management in the Smart Grid Proceedings of 2011
    IEEE International Conference on Smart Grid Communications (2011), 10.1109/SmartGridComm.2011.6102356
    Google Scholar [30] D.G. Bekas, K. Tsirka, D. Baltzis, A.S. Paipetis Self-Healing
    Materials: A Review of Advances in Materials, Evaluation, Characterization and
    Monitoring Techniques Composites Part B: Engineering, 87 (2016), pp. 92-119 View
    in ScopusGoogle Scholar [31] Z.M. Bi, S.Y.T. Lang, M. Verner, P. Orban Development
    of Reconfigurable Machines Advanced Manufacturing Technology, 39 (11-12) (2008),
    pp. 1227-1251 CrossRefView in ScopusGoogle Scholar [32] B.J. Blaiszik, S.L.B.
    Kramer, S.C. Olugebefola, et al. Self-Healing Polymers and Composites Annual Review
    of Materials Research, 40 (2010), pp. 179-211 CrossRefView in ScopusGoogle Scholar
    [33] K. Blois (Ed.), The Oxford Textbook of Marketing Paperback, OUP Oxford (2000)
    [34] Brown J (2014) Mastering the Development of Smart Products, Tech-Clarity,
    https://www.3ds.com/industries/high-tech/resource-center/white-papers/mastering-the-development-of-smart-products/
    (Accessed 15 April 2019). Google Scholar [35] T. Brown Design Thinking Harvard
    Business Review, 86 (6) (2008), pp. 84-92 Google Scholar [36] Ch. Buchholz, T.
    Vorsatz, S. Kind, R. Stark SHPbench—A Smart Hybrid Prototyping Based Environment
    for Early Testing, Verification and (User Based) Validation of Advanced Driver
    Assistant Systems of Cars Procedia CIRP, 60 (2017), pp. 139-144 View in ScopusGoogle
    Scholar [37] Burkacky O, Deichmann J, Doll G, Knochenhauer C (2018) Rethinking
    Car Software and Electronics Architecture, https://www.mckinsey.com/industries/automotive-and-assembly/our-insights/rethinking-car-software-and-electronics-architecture
    (Accessed 15 April 2019). Google Scholar [38] A. Butler Amazon Echo: The Ultimate
    Beginner’s Guide to Amazon Echo CreateSpace Independent Publishing Platform (2016)
    ISBN: 978-1539473589 Google Scholar [39] M. Campbell, A.J. Hoane, F. Hsu Deep
    Blue Artificial Intelligence, 134 (1–2) (2002), pp. 57-83 View in ScopusGoogle
    Scholar [40] A. Canedo Industrial IoT Lifecycle via Digital Twins Proceedings
    Eleventh IEEE/ACM/IFIP International Conference on Hardware/Software Codesign
    and System Synthesis (2016), p. 29 Google Scholar [41] S. Cavalieri, G. Pezzotta
    Product-Service Systems Engineering: State of the Art and Research Challenges
    Computers in Industry, 63 (4) (2012), pp. 278-288 View in ScopusGoogle Scholar
    [42] F. Chauvin, G. Fanmuy System Engineering on 3DEXPERIENCE Platform–UAS Use
    Case Proceedings of the Poster Workshop at the 2014 Complex Systems Design & Management
    International Conference co-located with 5th International Conference on Complex
    System Design & Management (CSD&M 2014) (2014), pp. 113-126 http://ceur-ws.org/Vol-1234/paper-11.pdf
    View in ScopusGoogle Scholar [43] M. Chan, D. Estève, C. Escriba, E. Campo A Review
    of Smart Homes-Present State and Future Challenges Computer Methods and Programs
    in Biomedicine, 91 (1) (2008), pp. 55-81 View in ScopusGoogle Scholar [44] M.
    Cheminod, L. Durante, A. Valenzano Review of Security Issues in Industrial Networks
    IEEE Transactions on Industrial Informatics, 9 (1) (2013), pp. 277-293 CrossRefView
    in ScopusGoogle Scholar [45] Y. Chen, Z.L. Liu, Y.B. Xie A Knowledge-Based Framework
    for Creative Conceptual Design of Multi-Disciplinary Systems Computer Aided Design,
    44 (2) (2012), pp. 146-153 Google Scholar [46] C. Chen, Y. Liu, M. Kumar, J. Qin
    Energy Consumption Modelling Using Deep Learning Technique—A Case Study of EAF
    Procedia CIRP, 72 (2018), pp. 1063-1068 View in ScopusGoogle Scholar [47] Y. Cherdantseva,
    P. Burnap, A. Blyth, et al. A Review of Cyber Security Risk Assessment Methods
    for SCADA Systems Computers and Security, 56 (2016), pp. 1-27 View in ScopusGoogle
    Scholar [48] S. Choi, K. Jung, S.D. Noh Virtual Reality Applications in Manufacturing
    Industries: Past Research, Present Findings, and Future Directions Concurrent
    Engineering, 23 (1) (2015), pp. 40-63 Google Scholar [49] D. Cimino, A. Ferrero,
    L. Queirolo, et al. A Low-Cost, Open-Source Cyber Physical System for Automated,
    Remotely Controlled Precision Agriculture Lecture Notes in Electrical Engineering,
    409 (2017), pp. 191-203 CrossRefView in ScopusGoogle Scholar [50] G. Chryssolouris,
    D. Mavrikios, N. Papakostas, et al. Digital Manufacturing: History, Perspectives,
    and Outlook Proceedings of the Institution of Mechanical Engineers, Part B, 223
    (5) (2009), pp. 451-462 View in ScopusGoogle Scholar [51] M.A. Cusumano Platforms
    Versus Products: Observations from the Literature and History S.J. Kahl, B.S.
    Silverman, M.A. Cusumano (Eds.), History and Strategy, Advances in Strategic Management,
    vol. 29 (2012), pp. 35-67 View in ScopusGoogle Scholar [52] G. Da Silveira, D.
    Borenstein, F.S. Fogliatto Mass Customization: Literature Review and Research
    Directions Production Economics, 72 (1) (2001), pp. 1-13 View in ScopusGoogle
    Scholar [53] V. D’Amelio, M.K. Chmarra, T. Tomiyama Early Design Interference
    Detection Based on Qualitative Physics Research in Engineering Design, 22 (4)
    (2011), pp. 223-243 CrossRefView in ScopusGoogle Scholar [54] Th. Damerau, H.
    Hayka, S. Neumeyer, et al. Intelligent Information Technologies to Enable Next
    Generation PLM Product Lifecycle Management for a Global Market, Springer (2014),
    pp. 485-495 ISBN: 978-3-662-45936-2 Google Scholar [55] R. Damgrave, E. Lutters
    Enhancing Development Trajectories of Synthetic Environments Annals of CIRP, 67
    (1) (2018), pp. 137-140 View in ScopusGoogle Scholar [56] K. Darvish, F. Wanderlingh,
    B. Bruno, et al. Flexible Human—Robot Cooperation Models for Assisted Shop-Floor
    Tasks Mechatronics, 51 (2018), pp. 97-114 View in ScopusGoogle Scholar [57] H.
    Dawid, R. Decker, T. Hermann, et al. Management Science in the Era of Smart Consumer
    Products: Challenges and Research Perspectives Central European Journal of Operations
    Research, 25 (1) (2017), pp. 203-230 CrossRefView in ScopusGoogle Scholar [58]
    De S. Dutra, D. Silva Jr Product-Service Architecture (PSA): Toward a Service
    Engineering Perspective in Industry 4.0 IFAC-PapersOnLine, 49 (31) (2016), pp.
    91-96 Google Scholar [59] M.S. De Brito, S. Hoque, R. Steinke, et al. Application
    of the Fog Computing Paradigm to Smart Factories and Cyber-Physical Systems Transactions
    on Emerging Telecommunications Technologies, 29 (4) (2018), 10.1002/ett.3184 Google
    Scholar [60] M. Di Natale, A.L. Sangiovanni-Vincentelli Moving from Federated
    to Integrated Architectures in Automotive: The Role of Standards, Methods and
    Tools Proceedings of the IEEE, 98 (4) (2010), pp. 603-620 View in ScopusGoogle
    Scholar [61] A. Durantin, G. Fanmuy, S. Miet, V. Pegon Disruptive Innovation in
    Complex Systems Proceedings Complex Systems Design & Management (CSDM 2016) (2017),
    pp. 41-56 CrossRefGoogle Scholar [62] B. Edrington, B. Zhao, A. Hansel, et al.
    Machine Monitoring System Based on MTConnect Technology Procedia CIRP, 22 (2014),
    pp. 92-97 View in ScopusGoogle Scholar [63] S.J. Eichhorn, A. Dufresne, M. Aranguren,
    et al. Review: Current International Research into Cellulose Nanofibres and Nanocomposites
    Journal of Materials Science, 45 (1) (2010), pp. 1-33 CrossRefView in ScopusGoogle
    Scholar [64] H.A. ElMaraghy Flexible and Reconfigurable Manufacturing Systems
    Paradigms Flexible Manufacturing Systems, 17 (4) (2005), pp. 261-276 CrossRefView
    in ScopusGoogle Scholar [65] W. ElMaraghy, H. ElMaraghy, T. Tomiyama, L. Monostori
    Complexity in Engineering Design and Manufacturing Annals of CIRP, 61 (2) (2012),
    pp. 793-814 View in ScopusGoogle Scholar [66] D. Elsy, P. Jennings, R. Roy (Eds.),
    Through-life Engineering Services for Mobility as a Service, High Value Manufacturing
    Catapult, Warwick Manufacturing Group, Cranfield University (2018) 32 pages [67]
    T. Erl Service-Oriented Architecture: Concepts, Technology, and Design Prentice
    Hall (2005) ISBN: 978-0131858589 Google Scholar [68] Estefan JA (2008) Survey
    of Model-Based Systems Engineering (MBSE) Methodologies, INCOSE MBSE Initiative,
    INCOSE-TD-2007-003-02, http://www.omgsysml.org/MBSE_Methodology_Survey_RevB.pdf
    (Accessed 15 April 2019). Google Scholar [69] European Regulators Group for Electricity
    and Gas Position Paper on Smart Grids, An ERGER Conclusions Paper (2010) Ref:
    E10-EQS-38-05 ERGEG, https://www.ceer.eu/documents/104400/-/-/3cf25df7-88cb-3ce3-f838-aa2d012ac45c
    (Accessed 15 April 2019) Google Scholar [70] European Union Regulation on the
    Protection of Natural Persons With Regard to the Processing of Personal Data and
    on the Free Movement of Such Data, and Repealing, Directive 95/46/EC (Data Protection
    Directive) EU Journal L119 (May) (2016), pp. 1-88 Google Scholar [71] E. Eyisi,
    Z. Zhang, X. Koutsoukos, et al. Model-Based Control Design and Integration of
    Cyberphysical Systems: An Adaptive Cruise Control Case Study Journal of Control
    Science and Engineering, 2013 (2013), Article 678016 View in ScopusGoogle Scholar
    [72] G. Fanmuy, D. Petrauskas An Automotive MBSE Case Study: An Interdisciplinary
    Role-Based Design With 3DEXPERIENCE Platform and MagicDraw No Magic World Symposium
    2018 (NMWS2018) (2018) https://nmws2018.com/speakers/abstracts/item/an-automotive-mbse-case-study-an-interdisciplinary-role-based-design-with-3dexperience-platform-and-magicdraw
    (Accessed 15 April 2019) Google Scholar [73] D. Ferrucci, E. Brown, J. Chu-Carroll,
    et al. Building Watson: An Overview of the DeepQA Project AI Magazine, 31 (3)
    (2010), pp. 59-79 CrossRefView in ScopusGoogle Scholar [74] D. Floreano, R.J.
    Wood Science, Technology and the Future of Small Autonomous Drones Nature, 521
    (7553) (2015), pp. 460-466 CrossRefView in ScopusGoogle Scholar [75] T. Fong,
    I. Nourbakhsh, K. Dautenhahn A Survey of Socially Interactive Robots Robotics
    and Autonomous Systems, 42 (3–4) (2003), pp. 143-166 View in ScopusGoogle Scholar
    [76] H. Forbes, D. Schaefer Social Product Development: The Democratization of
    Design, Manufacture and Innovation Procedia CIRP, 60 (2017), pp. 404-409 View
    in ScopusGoogle Scholar [77] K. Forsberg, H. Mooz The Relationship of System Engineering
    to the Project Cycle Presented at the Joint conference sponsored by: National
    Council on Systems Engineering (NCOSE) and American Society for Engineering Management
    (ASEM) (1991), pp. 1-12 Google Scholar [78] Y. Fu, Y. Zhang, H. Qiao, et al. Analysis
    of Feature Extracting Ability for Cutting State Monitoring Using Deep Belief Networks
    Procedia CIRP, 31 (2015), pp. 29-34 View in ScopusGoogle Scholar [79] M. Fujishima,
    K. Narimatsu, N. Irino, Y. Ido Thermal Displacement Reduction and Compensation
    of a Turning Center CIRP Journal of Manufacturing Science and Technology, 22 (2018),
    pp. 111-115 View in ScopusGoogle Scholar [80] M. Fujishima, K. Ohno, S. Nishikawa,
    et al. Study of Sensing Technologies for Machine Tools CIRP Journal of Manufacturing
    Science and Technology, 14 (2016), pp. 71-75 View in ScopusGoogle Scholar [81]
    Functional Mockup Interface, FMI, https://fmi-standard.org. (Accessed 15 April
    2019). Google Scholar [82] N. Gershenfeld, R. Krikorian, D. Cohen The Internet
    of Things Scientific American, 291 (4) (2004), pp. 76-81 CrossRefGoogle Scholar
    [83] H. Gharavi, R. Ghafurian Smart Grid: The Electric Energy System of the Future
    Proceedings of the IEEE, 99 (6) (2011), pp. 917-921 View in ScopusGoogle Scholar
    [84] D. Gianni, A. D’Ambrogio, A. Tolk Modeling and Simulation-Based Systems Engineering
    Handbook CRC Press (2015) ISBN 9781138748941 Google Scholar [85] E. Glaessgen
    The Digital Twin Paradigm for Future NASA and U.S. Air Force Vehicles Proceedings
    of 53rd AIAA/ASME/ASCE/AHS/ASC Structure, Structure Dynamics and Materials Conference—Special
    Session on the Digital Twin (2012) 14 pages Google Scholar [86] M.J. Goedkoop,
    C.J.G. van Halen, H.R.M. te Riele, P.J.M. Rommens Product Service systems, Ecological
    and Economic Basics, report submitted to the Dutch Ministry of Economic Affairs
    (1999) 132 pages [87] C. Gonzalez Amazon warehouse, Machine Design (2017) (Accessed
    15 April 2019) https://www.machinedesign.com/motion-control/changing-future-warehouses-amazon-robots
    Google Scholar [88] I. Goodfellow, Y. Bengio, A. Courville, F. Bach Deep Learning
    MIT Press (2017) ISBN: 978-0262035613 Google Scholar [89] P. Gray Designing the
    User Experience, Dassault Systèmes White Paper Series (2014) (Accessed 15 April
    2019) https://www.3ds.com/fileadmin/Industries/High-Tech/Pdf/whitepapers/Designing-The-User-Experience-high-tech.pdf
    Google Scholar [90] J. Gubbi, R. Buyya, S. Marusic, M. Palaniswami Internet of
    Things (IoT): A Vision, Architectural Elements, and Future Directions Future Generation
    Computer Systems, 29 (7) (2013), pp. 1645-1660 View in ScopusGoogle Scholar [91]
    A. Harrison Design for Service–Harmonising Product Design with a Services Strategy
    Proceedings of ASME Turbo Expo, 2006 (2) (2006), pp. 135-143 View in ScopusGoogle
    Scholar [92] M. Hassenzahl, N. Tractinsky User Experience—A Research Agenda Behaviour
    and Information Technology, 25 (2) (2006), pp. 91-97 CrossRefView in ScopusGoogle
    Scholar [93] C.C. Hayes, A.K. Goel, I.Y. Tumer, et al. Intelligent Support for
    Product Design: Looking Backward, Looking Forward Journal of Computing and Information
    Science in Engineering, 11 (2) (2011) 21007 Google Scholar [94] P. Hehenberger,
    B. Vogel-Heuser, D. Bradley, et al. Design, Modelling, Simulation and Integration
    of Cyber Physical Systems: Methods and Applications Computers in Industry, 82
    (2016), pp. 273-289 View in ScopusGoogle Scholar [95] J. Herter, J. Ovtcharova
    A Model Based Visualization Framework for Cross Discipline Collaboration in Industry
    4.0 Scenarios Procedia CIRP, 57 (2016), pp. 398-403 View in ScopusGoogle Scholar
    [96] K.K.B. Hon, L. Li, I.M. Hutchings Direct Writing Technology-Advances and
    Developments Annals of CIRP, 57 (2) (2008), pp. 601-620 View in ScopusGoogle Scholar
    [97] G. Hwang, J. Lee, J. Park, T.-W. Chang Developing Performance Measurement
    System for Internet of Things and Smart Factory Environment International Journal
    of Production Research, 55 (9) (2017), pp. 2590-2602 CrossRefView in ScopusGoogle
    Scholar [98] IEEE IEEE 1320.1-1998, Standard for Functional Modeling Language—Syntax
    and Semantics for IDEF0 (1998) Google Scholar [99] IEEE IEEE 1220-2005, IEEE Standard
    for Application and Management of the Systems Engineering Process (2005) (Accessed
    15 April 2019) https://standards.ieee.org/standard/1220-2005.html Google Scholar
    [100] Industrial Internet Consortium, https://www.iiconsortium.org. (Accessed
    15 April 2019). Google Scholar [101] International Electronical Commission (IEC)
    Dependability, Electropedia (2015) (Accessed 15 April 2019). http://www.electropedia.org/iev/iev.nsf/display?openform&amp;ievref=192-01-22
    Google Scholar [102] International Standard Orgnisation ISO 26262 Road vehicles
    Functional Safety Part 1–10 (2011) Google Scholar [103] International Standard
    Orgnisation ISO/IEC/IEEE 42010 Systems and Software Engineering—Architecture Description
    (2001) Google Scholar [104] International Standard Orgnisation ISO 9241-210, Ergonomics
    of Human-System Interaction–Part 210: Human-centred Design for Interactive Systems
    (2010) Google Scholar [105] J. Jiao, M.M. Tseng Methodology of Developing Product
    Family Architecture for Mass Customization Intelligent Manufacturing, 10 (1) (1999),
    pp. 3-20 View in ScopusGoogle Scholar [106] Kagermann H, Wahlster W, Helbig J,
    (Eds.) (2013), Recommendations for Implementing the Strategic Initiative Industrie
    4.0: Final Report of the Industrie 4.0 Working Group, http://en.acatech.de/publication/recommendations-for-implementing-the-strategic-initiative-industrie-4-0-final-report-of-the-industrie-4-0-working-group/
    (Accessed 15 April 2019). Google Scholar [107] Z. Kemény, R.J. Beregi, G. Erdos,
    J. Nacsa The MTA SZTAKI Smart Factory: Platform for Research and Project-Oriented
    Skill Development in Higher Education Procedia CIRP, 54 (2016), pp. 53-58 View
    in ScopusGoogle Scholar [108] W.S. Kim Robotized Products Proceedings URAI 2011–8th
    International Conference on Ubiquitous Robots and Ambient Intelligence (2011),
    pp. 612-614 View in ScopusGoogle Scholar [109] T. Kitatani Global Monitoring and
    Support Management System for Construction Machinery Using Satellite Communication
    Proceedings 2010 7th International Conference on Service Systems and Service Management
    (2010), pp. 211-215 View in ScopusGoogle Scholar [110] S. Knoch, M. Deru, S. Bergweiler,
    J. Haupert Novel Consumer-to-Product Interactions with Context-Aware Embedded
    Platforms, Lecture Notes in Computer Science, 8515, Springer (2014), pp. 513-524
    CrossRefView in Scopus [111] I. Gibson, D.W. Rosen, B. Stucker Additive Manufacturing
    Technologies: Rapid Prototyping to Direct Digital Manufacturing Springer (2010)
    ISBN: 978-1-4419-1119-3 Google Scholar [112] D. Kennon, C.S.L. Schutte, D. Lutters
    An Alternative View to Assessing Antifragility in an Organisation: A Case Study
    in a Manufacturing SME Annals of CIRP, 64 (1) (2015), pp. 177-180 View in ScopusGoogle
    Scholar [113] T. Khalifa, K. Naik, A. Nayak A Survey of Communication Protocols
    for Automatic Meter Reading Applications IEEE Communications Surveys and Tutorials,
    13 (2) (2011), pp. 168-182 View in ScopusGoogle Scholar [114] S. Kind, K. Exner,
    S. Neumeyer, R. Stark Smart Engineering in the Context of Industrie 4.0: Modular
    Systems for Experiencable Design Validation of Assembly Systems, Gemeinsames Kolloquium
    Konstruktionstechnik 2016 Shaker Publishing, Rostock (2016), pp. 251-258 ISBN:
    978-3-8440-4732-5 Google Scholar [115] P. Kölsch, C.F. Herder, V. Zimmermann,
    J.C. Aurich A Novel Concept for the Development of Availability-Oriented Business
    Models Procedia CIRP, 64 (2017), pp. 340-344 View in ScopusGoogle Scholar [116]
    Komatsu Komatsu Wireless Monitoring System (2013) (Accessed 15 April 2019) https://www.komatsu.eu/-/media/sites/komatsu/brochures/komtrax/komtrax_eess018706_1302_86944.ashx?v=9886518fd9ad492f965cc01c0edb1c81&la=en?v
    Google Scholar [117] H. Komoto, T. Tomiyama Integration of a Service CAD and a
    Life Cycle simulator Annals of CIRP, 57 (1) (2008), pp. 9-12 View in ScopusGoogle
    Scholar [118] H. Komoto, T. Tomiyama Multi-Disciplinary System Decomposition of
    Complex Mechatronics Systems Annals of CIRP Annals, 60 (1) (2011), pp. 191-194
    View in ScopusGoogle Scholar [119] H. Komoto, T. Tomiyama A Framework for Computer-Aided
    Conceptual Design and Its Application to System Architecting of Mechatronics Products
    Computer-Aided Design, 44 (10) (2012), pp. 931-946 View in ScopusGoogle Scholar
    [120] S. Kondoh, R.K. Sato, T. Tomiyama, Y. Umeda Self-Organization of the Cellular
    Manufacturing System CIRP Journal of Manufacturing Systems, 30 (6) (2000), pp.
    507-513 Google Scholar [121] S.F. Königs, G. Beier, A. Figge, R. Stark Traceability
    in Systems Engineering—Review of Industrial Practices, State-of-the-Art Technologies
    and New Research Solutions Advanced Engineering Informatics, 26 (4) (2012), pp.
    924-940 View in ScopusGoogle Scholar [122] Y. Koren, U. Heisel, F. Jovane, et
    al. Reconfigurable Manufacturing Systems Annals of CIRP, 48 (2) (1999), pp. 527-540
    View in ScopusGoogle Scholar [123] G. Kortuem, F. Kawsar, V. Sundramoorthy, D.
    Fitton Smart Objects as Building Blocks for the Internet of Things IEEE Internet
    Computing, 14 (1) (2010), pp. 44-51 View in ScopusGoogle Scholar [124] A. Krizhevsky,
    I. Sutskever, G.E. Hinton ImageNet Classification With Deep Convolutional Neural
    Networks Proceedings of 25th International Conf. on Neural Information Processing
    Systems, 1 (2012), pp. 1097-1105 Google Scholar [125] I. Kuksa, T. Fisher (Eds.),
    Design for Personalisation, Taylor & Francis (2017) [126] K. Kuhnert, C. Stürmer,
    A. Koster Five Trends Transforming the Automotive Industry, PricewaterhouseCoopers
    GmbH (2018) (Accessed 15 April 2019) https://www.pwc.com/gx/en/industries/automotive/assets/pwc-five-trends-transforming-the-automotive-industry.pdf
    Google Scholar [127] A. Kusiak Smart Manufacturing Journal of Production Research,
    56 (1–2) (2018), pp. 508-517 View in ScopusGoogle Scholar [128] Y. Lecun, Y. Bengio,
    G. Hinton Deep Learning Nature, 521 (7553) (2015), pp. 436-444 CrossRefView in
    ScopusGoogle Scholar [129] E.A. Lee Cyber Physical Systems: Design Challenges
    Proceedings of 11th IEEE Symposium on Object/Component/Service-Oriented Real-Time
    Distributed Computing (2008), pp. 363-369 View in ScopusGoogle Scholar [130] G.H.
    Lee Reconfigurability Consideration Design of Components and Manufacturing Systems
    Advanced Manufacturing Technology, 13 (5) (1997), pp. 376-386 View in ScopusGoogle
    Scholar [131] J. Lee, H.D. Ardakani, S. Yang, B. Bagheri Industrial Big Data Analytics
    and Cyber-Physical Systems for Future Maintenance & Service Innovation Procedia
    CIRP, 38 (2015), pp. 3-7 Google Scholar [132] J. Lee, B. Bagheri, H.A. Kao A Cyber-Physical
    Systems Architecture for Industry 4.0-Based Manufacturing Systems Manufacturing
    Letters, 3 (2015), pp. 18-23 View in ScopusGoogle Scholar [133] J. Lee, H.A. Kao
    Dominant Innovation Design for Smart Products-Service Systems (PSS): Strategies
    and Case Studies Annual SRII Global Conference, SRII, IEEE (2014), pp. 305-310,
    10.1109/SRII.2014.25 Google Scholar [134] J. Lee, H.A. Kao, S. Yang Service Innovation
    and Smart Analytics for Industry 4.0 and Big Data Environment Procedia CIRP, 16
    (2014), pp. 3-8 Google Scholar [135] J.Y. Lee, J.S. Yoon, B.-H. Kim A Big Data
    Analytics Platform for Smart Factories in Small and Medium-Sized Manufacturing
    Enterprises: An Empirical Case Study of a Die Casting Factory Precision Engineering
    and Manufacturing, 18 (10) (2017), pp. 1353-1361 CrossRefView in ScopusGoogle
    Scholar [136] P. Leitão, F. Restivo ADACOR: A Holonic Architecture for Agile and
    Adaptive Manufacturing Control Computers in Industry, 57 (2) (2006), pp. 121-130
    View in ScopusGoogle Scholar [137] P. Leitão, A.W. Colombo, S. Karnouskos Industrial
    Automation Based on Cyber-Physical Systems Technologies: Prototype Implementations
    and Challenges Computers in Industry, 81 (2016), pp. 11-25 View in ScopusGoogle
    Scholar [138] J. Leonard, J. How, S. Teller, et al. A Perception‐Driven Autonomous
    Urban Vehicle Journal of Field Robotics, 25 (2008), pp. 727-774 CrossRefView in
    ScopusGoogle Scholar [139] L. Ren, L. Zhang, F. Tao, et al. Cloud Manufacturing:
    From Concept to Practice Enterprise Information Systems, 9 (2) (2015), pp. 186-209
    CrossRefView in ScopusGoogle Scholar [140] H. Liu, T. Fang, T. Zhou, et al. Deep
    Learning-Based Multimodal Control Interface for Human-Robot Collaboration Procedia
    CIRP, 72 (2018), pp. 3-8 Google Scholar [141] Z.L. Liu, Y. Chen, Y.B. Xie A Knowledge-Based
    System for Multi-Disciplinary Conceptual Design Synthesis Proceedings of the Institution
    of Mechanical Engineers, Part C, 226 (12) (2012), pp. 2950-2966 CrossRefView in
    ScopusGoogle Scholar [142] J. Luetzenberger, P. Klein, K.-D. Thoben Using Knowledge
    Based Engineering to Support the Design of Smart Products Proceedings of 19th
    International Conference on Engineering Design (ICED13), Design Society, 6 (2013),
    pp. 63-72 View in ScopusGoogle Scholar [143] P. Lünnemann, W.M. Wang, R. Stark
    Methodische Analyse Der Entwicklungsaktivitäten Proceedings of 15th Gemeinsames
    Kolloquium Konstruktionstechnik. Interdisziplinäre Produktentwicklung (2017),
    pp. 89-98 ISBN: 978-3-940402-15-8 Google Scholar [144] P. Lünnemann, W.M. Wang,
    P. Ibánez Manteca, R. Stark Engineering Activities—Considering Value Creation
    from a Holistic Perspective Proceedings of 2017 International Conference on Engineering,
    Technology and Innovation (ICE/ITMC) (2017) ISBN 978-1-5386-0774-9/17 Google Scholar
    [145] E. Lutters Pilot Production Environments Driven by Digital Twins South African
    Journal of Industrial Engineering, 29 (3) (2018), pp. 40-53 View in ScopusGoogle
    Scholar [146] E. Lutters, Jde Lange, R.G.J. Damgrave Virtual Dashboards in Pilot
    Production Environments International Conference Competitive Manufacturing; COMA’19
    (2019), pp. 22-27 http://hdl.handle.net/10019.1/105429 Google Scholar [147] E.
    Lutters, F.J.A.M. van Houten, Bernard, et al. Tools and Techniques for Product
    Design Annals of CIRP, 63 (2) (2014), pp. 607-630 View in ScopusGoogle Scholar
    [148] J. Lützenberger, P. Klein, K. Hribernik, K.-D. Thoben Improving Product-Service
    Systems by Exploiting Information from the Usage Phase. A Case Study Procedia
    CIRP, 47 (2016), pp. 376-381 View in ScopusGoogle Scholar [149] C. Lv, J. Zhang,
    P. Nuzzo, et al. Design Optimization of the Control System for the Powertrain
    of an Electric Vehicle: A Cyber-Physical System Approach Proceedings of 2015 IEEE
    International Conference on Mechatronics and Automation (2015), pp. 814-819 CrossRefView
    in ScopusGoogle Scholar [150] M.W. Maier Architecting Principles for Systems-of-Systems
    Systems Engineering, 1 (4) (1998), pp. 267-284 View in ScopusGoogle Scholar [151]
    E. Marilungo, A. Papetti, M. Germani, M. Peruzzini From PSS to CPS Design: A Real
    Industrial Use Case Toward Industry 4.0 Procedia CIRP, 64 (2017), pp. 357-362
    View in ScopusGoogle Scholar [152] A. Masrur, M. Kit, V. Matěna, et al. Component-Based
    Design of Cyber-Physical Applications with Safety-Critical Requirements Microprocessors
    and Microsystems, 42 (2016), pp. 70-86 View in ScopusGoogle Scholar [153] T. Mattelmäki,
    V. Roto, J.-J. Lee, J. Zimmerman Experience Design Meets Service Design-Method
    Clash or Marriage? Extended Abstracts of the 2018 CHI Conference on Human Factors
    in Computing Systems (CHI EA’ 18), ACM (2018), 10.1145/3170427.3170626 Paper W26,
    6 pages Google Scholar [154] V. Mayer-Schönberger, K. Cukier Big Data: A Revolution
    That Will Transform How We Live, Work, and Think John Murray Publishers, London
    (2013) Google Scholar [155] M.G. Mehrabi, A.G. Ulsoy, Y. Koren, P. Heytler Trends
    and Perspectives in Flexible and Reconfigurable Manufacturing Systems Journal
    of Intelligent Manufacturing, 13 (2) (2002), pp. 135-146 1 View in ScopusGoogle
    Scholar [156] H. Mehrpouyan, B. Haley, A. Dong, et al. Resiliency Analysis for
    Complex Engineered System Design AI EDAM, 29 (1) (2015), pp. 93-108 Google Scholar
    [157] G.G. Meyer, K. Främling, J. Holmström Intelligent Products: A Survey Computers
    in Industry, 60 (3) (2009), pp. 137-148 View in ScopusGoogle Scholar [158] J.
    Michniewicz, G. Reinhart Cyber-Physical-Robotics—Modelling of Modular Robot Cells
    for Automated Planning and Execution of Assembly Tasks Mechatronics, 34 (2016),
    pp. 170-180 View in ScopusGoogle Scholar [159] D. Miorandi, S. Sicari, F. De Pellegrini,
    I. Chlamtac Internet of Things: Vision, Applications and Research Challenges Ad
    Hoc Networks, 10 (7) (2012), pp. 1497-1516 View in ScopusGoogle Scholar [160]
    Y. Mohan, S.G. Ponnambalam An Extensive Review of Research in Swarm Robotics Proceedings
    of 2009 World Congress on Nature and Biologically Inspired Computing (2009), pp.
    140-145, 10.1109/NABIC.2009.5393617 View in ScopusGoogle Scholar [161] E. Monk,
    B. Wagner Concepts in Enterprise Resource Planning (4th edition), Cengage Learning
    (2012) ISBN-13: 978-1111820398 Google Scholar [162] L. Monostori, B. Kádár, T.
    Bauernhansl, et al. Cyber-Physical Systems in Manufacturing Annals of CIRP, 65
    (2) (2016), pp. 621-641 View in ScopusGoogle Scholar [163] S.K. Moon, T.W. Simpson,
    S.R.T. Kumara A Process Model and Data Mining to Support Designing Families of
    Services Proceedings of ASME DETC2007, 6 (Part A) (2008), pp. 591-600 View in
    ScopusGoogle Scholar [164] M. Mori, M. Fujishima, M. Komatsu, et al. Development
    of Remote Monitoring and Maintenance System for Machine Tools Annals of CIRP,
    57 (1) (2008), pp. 433-436 View in ScopusGoogle Scholar [165] J. Mørkeberg Torry-Smith
    Challenges in Designing Mechatronic Systems Journal of Mechanical Design, 135
    (1) (2012), p. 11005 Google Scholar [166] P.J. Mosterman, J. Zander Industry 4.0
    as a Cyber-Physical System Study Software and Systems Modeling, 15 (1) (2016),
    pp. 17-29 CrossRefView in ScopusGoogle Scholar [167] D. Mourtzis, S. Fotia, E.
    Vlachou, A. Koutoupes A Lean PSS Design and Evaluation Framework Supported by
    KPI Monitoring and Context Sensitivity Tools Advanced Manufacturing Technology,
    94 (5-8) (2018), pp. 1623-1637 CrossRefView in ScopusGoogle Scholar [168] S. Murata,
    E. Yoshida, A. Kamimura, et al. M-TRAN: Self-Reconfigurable Modular Robotic System
    IEEE/ASME Transactions on Mechatronics, 7 (4) (2002), pp. 431-441 View in ScopusGoogle
    Scholar [169] National Institute of Standards and Technology, https://www.nist.gov/el/cyber-physical-systems.
    (Accessed 15 April 2019). Google Scholar [170] National Science Foundation Cyber-Physical
    Systems (CPS) Available at: https://www.nsf.gov/publications/pub_summ.jsp?ods_key=nsf18538.
    (Accessed 15April 2019) (2017) Google Scholar [171] A.Y.C. Nee, S.K. Ong, G. Chryssolouris,
    D. Mourtzis Augmented Reality Applications in Design and Manufacturing Annals
    of CIRP, 61 (2) (2012), pp. 657-679 View in ScopusGoogle Scholar [172] Nielsen
    Norman Group (2019) https://www.nngroup.com/articles/definition-user-experience/
    (Accessed 15 April 2019). Google Scholar [173] OMG Requirements Interchange Format
    (ReqIF) (2010) (Accessed 15 April 2019) https://www.omg.org/cgi-bin/doc?mantis/10-03-07.pdf
    Google Scholar [174] OMG Systems Modeling Language (SysML) Version 1.5 (2017)
    (Accessed 15 April 2019) https://www.omg.org/spec/SysML/1.5/ Google Scholar [175]
    OMG Unified Modeling Language (UML) Version 2.5.1 (2017) (Accessed 15 April 2019)
    https://www.omg.org/spec/UML/ Google Scholar [176] Open Services for Lifecycle
    Collaboration (OSLC), https://open-services.net (Accessed 15 April 2019). Google
    Scholar [177] A. Pagoropoulos, D.C.A. Pigosso, T.C. McAloone The Emergent Role
    of Digital Technologies in the Circular Economy: A Review Procedia CIRP, 64 (2017),
    pp. 19-24 View in ScopusGoogle Scholar [178] M.R. Palattella, M. Dohler, A. Grieco,
    et al. Internet of Things in the 5G Era: Enablers, Architecture, and Business
    Models IEEE Journal of Selected Areas in Communications, 34 (3) (2016), pp. 510-527
    View in ScopusGoogle Scholar [179] D.L. Peters, P.Y. Papalambros, A.G. Ulsoy Sequential
    Co-Design of an Artifact and Its Controller via Control Proxy Functions IFAC Proceedings
    (IFAC-PapersOnline), 43 (18) (2010), pp. 125-130 View in ScopusGoogle Scholar
    [180] J. Pfrommer, C. Zimmerling, J. Liu, et al. Optimisation of Manufacturing
    Process Parameters Using Deep Neural Networks as Surrogate Models Procedia CIRP,
    72 (2018), pp. 426-431 View in ScopusGoogle Scholar [181] M.E. Porter, J.E. Heppelmann
    How Smart, Connected Products Are Transforming Competition Harvard Business Review,
    92 (11) (2014), pp. 64-88 CrossRefGoogle Scholar [182] M. Preidel, T. Damerau,
    R. Stark Web-Based Information Visualization for Early Customer Integration Proceedings
    of Stuttgarter Symposium Produktentwicklung SSP 2017 (2017) ISSN: 2364-4885 Google
    Scholar [183] E. Quartarone, P. Mustarelli Electrolytes for Solid-State Lithium
    Rechargeable Batteries: Recent Advances and Perspectives Chemical Society Reviews,
    40 (5) (2011), pp. 2525-2540 CrossRefView in ScopusGoogle Scholar [184] F.J. Rammig,
    S. Grösbrink, K. Stahl, Y. Zhao Designing Self-Adaptive Embedded Real-Time Software-Towards
    System Engineering of Self-Adaptation Proceedings of 2014 Brazilian Symposium
    on Computing Systems Engineering, Manaus, 2014 (2014), pp. 37-42, 10.1109/SBESC.2014.15
    View in ScopusGoogle Scholar [185] Plattform Industrie 4.0 Reference Architecture
    Model Industrie 4.0 (RAMI4.0) (2015) (Accessed 15 April 2019) https://www.bitkom.org/sites/default/files/file/import/150410-Umsetzungsstrategie-0.pdf
    Google Scholar [186] P.A.S. Ralston, J.H. Graham, J.L. Hieb Cyber Security Risk
    Assessment for SCADA and DCS Networks ISA Transactions, 46 (4) (2007), pp. 583-594
    View in ScopusGoogle Scholar [187] A. Rashid, T. Masood, J.A. Erkoyuncu, et al.
    Enterprise Systems’ Life Cycle in Pursuit of Resilient Smart Factory for Emerging
    Aircraft Industry: a Synthesis of Critical Success Factors (CSFs), Theory, Knowledge
    Gaps, and Implications Enterprise Information Systems, 12 (2) (2018), pp. 96-136
    CrossRefView in ScopusGoogle Scholar [188] A. Reger, J. Dumler, O. Lobachev, J.
    Neuberger, R. Steinhilper Machine Allocation via Pattern Recognition in Harmonic
    Waves of Manufacturing Plants Procedia CIRP, 67 (2018), pp. 69-74 View in ScopusGoogle
    Scholar [189] A. Riel, C. Kreiner, G. Macher, R. Messnarz Integrated Design for
    Tackling Safety and Security Challenges of Smart Products and Digital Manufacturing
    Annals of CIRP, 66 (1) (2017), pp. 177-180 View in ScopusGoogle Scholar [190]
    R. Roy, R. Stark, K. Tracht, et al. Continuous Maintenance and the Future–Foundations
    and Technological Challenges Annals of CIRP, 65 (2) (2016), pp. 667-688 View in
    ScopusGoogle Scholar [191] S. Russell, P. Norvig Artificial Intelligence: A Modern
    Approach (3rd edition), Pearson (2009) ISBN: 978-0136042594 Google Scholar [192]
    Y. Sakagami, R. Watanabe, C. Aoyama, et al. The Intelligent ASIMO: System Overview
    and Integration Proceedings of IEE/RSJ Intl. Conf. Intelligent Robots and Systems,
    3 (2002), pp. 2478-2483 View in ScopusGoogle Scholar [193] T. Sakao, S. Kondoh,
    Y. Umeda, T. Tomiyama Development of a Cellular Automatic Warehouse Proceedings
    1996 IEEE/RSJ International Conference Intelligent Robots and Systems (IROS 96),
    IEEE 96 CH 35908, IEEE, (1996) (1996), pp. 324-331 View in ScopusGoogle Scholar
    [194] T. Sakao, Y. Shimomura Service Engineering: a Novel Engineering Discipline
    for Producers to Increase Value Combining Service and Product Journal of Cleaner
    Production, 15 (6) (2007), pp. 590-604 View in ScopusGoogle Scholar [195] P. Savarino,
    M. Abramovici, J.C. Göbel A Methodological Approach for the Identification of
    Context-Specific Reconfiguration Options in the PLM-Context Proceedings of PLM18
    (2018) Google Scholar [196] P. Savarino, M. Abramovici, J.C. Göbel, P. Gebus Design
    for Reconfiguration as Fundamental Aspect of Smart Products Procedia CIRP, 70
    (2018), pp. 374-379 View in ScopusGoogle Scholar [197] B. Schleich, N. Anwer,
    L. Mathieu, S. Wartzack Shaping the Digital Twin for Design and Production Engineering
    Annals of CIRP, 66 (1) (2017), pp. 141-144 View in ScopusGoogle Scholar [198]
    D.C. Schmidt Model-Driven Engineering EEE Computer, 39 (2) (2006), pp. 25-31 View
    in ScopusGoogle Scholar [199] M. Schmidt, M. Merklein, D. Bourell, et al. Laser
    Based Additive Manufacturing in Industry and Academia Annals of CIRP, 66 (2) (2017),
    pp. 561-583 View in ScopusGoogle Scholar [200] B. Schneier To Kill a Centrifuge
    37 pages, https://www.langner.com/wp-content/uploads/2017/03/to-kill-a-centrifuge.pdf
    (Accessed 15 April 2019) (2013) Google Scholar [201] S. Scholze, A.T. Correia,
    D. Stokic Novel Tools for Product-Service System Engineering Procedia CIRP, 47
    (2016), pp. 120-125 View in ScopusGoogle Scholar [202] F. Schweitzer, E.A. Van
    den Hende To Be or Not to Be in Thrall to the March of Smart Products Psychology
    and Marketing, 33 (10) (2016), pp. 830-842 CrossRefView in ScopusGoogle Scholar
    [203] N.K. Sehgal, P.C.P. Bhatt Cloud Computing: Concepts and Practices (1st ed.),
    Springer (2018) ISBN-13: 978-3319778389 Google Scholar [204] R. Sell, S. Seiler
    Improvements of Multi-Disciplinary Engineering Study by Exploiting Design-Centric
    Approach, Supported by Remote and Virtual Labs International Journal of Engineering
    Education, 28 (4) (2012), pp. 759-766 View in ScopusGoogle Scholar [205] M.-L.
    Seol, R. Ivaškevičiūtė, M.A. Ciappesoni All 3D Printed Energy Harvester for Autonomous
    and Sustainable Resource Utilization Nano Energy, 52 (2018), pp. 271-278 View
    in ScopusGoogle Scholar [206] W. Shi, J. Cao, Q. Zhang, et al. Edge Computing:
    Vision and Challenges IEEE Internet of Things Journal, 3 (5) (2016), pp. 637-646
    View in ScopusGoogle Scholar [207] Y. Shimomura, S. Tanigawa, Y. Umeda, T. Tomiyama
    Development of Self-Maintenance Photocopiers AI Magazine, 16 (4) (1995), pp. 41-53
    View in ScopusGoogle Scholar [208] Y.-R. Shiue, K.-C. Lee, C.-T. Su Real-Time
    Scheduling for a Smart Factory Using a Reinforcement Learning Approach Computers
    and Industrial Engineering, 125 (2018), pp. 604-614 View in ScopusGoogle Scholar
    [209] F. Shrouf, J. Ordieres, G. Miragliotta Smart Factories in Industry 4.0:
    A Review of the Concept and of Energy Management Approached in Production Based
    on the Internet of Things Paradigm IEEE International Conference Industrial Engineering
    and Engineering Management (2014), pp. 697-701 CrossRefView in ScopusGoogle Scholar
    [210] B. Siciliano, O. Khatib (Eds.), Springer Handbook of Robotics, Springer
    (2016) [211] A.G. Siemens 1D CAE Software (2018) . (Accessed 15 April 2019) https://www.plm.automation.siemens.com/global/en/our-story/glossary/mechatronic-system-simulation-1d-cae/13110
    Google Scholar [212] S. Sierla, I. Tumer, N. Papakonstantinou, et al. Early Integration
    of Safety to the Mechatronic System Design Process by the Functional Failure Identification
    and Propagation Framework Mechatronics, 22 (2) (2012), pp. 137-151 View in ScopusGoogle
    Scholar [213] Siemens, https://www.plm.automation.siemens.com/global/en/products/.
    (Accessed 15 April 2019). Google Scholar [214] T.W. Simpson Product Platform Design
    and Customization: Status and Promise AIEDAM, 18 (1) (2004), pp. 3-20 CrossRefView
    in ScopusGoogle Scholar [215] V.B. Singh, T. Benoit, V. Braibant Breaking Down
    Silos With Contract Based Design for Industrial Software Development: Illustrated
    Through an Aerospace Case Study Proceedings of 9th European Congress on Embedded
    Real Time Software and Systems (2018) https://www.erts2018.org/uploads/program/ERTS_2018_paper_22.pdf
    Google Scholar [216] R. Söderberg, K. Wärmefjord, J.S. Carlson, L. Lindkvist Toward
    a Digital Twin for Real-Time Geometry Assurance in Individualized Production Annals
    CIRP, 66 (1) (2017), pp. 137-140 View in ScopusGoogle Scholar [217] S.D. Son,
    J. Hubrechts, L. Awatsu, A. Bhave, A. Van der Auweraer A Simulation-Based Testing
    and Validation Framework for ADAS Development Proceedings of 7th Transport Research
    Arena 2018 (2018) Google Scholar [218] S. Sridhar, A. Hahn, M. Govindarasu Cyber-Physical
    System Security for the Electric Power Grid Proceedings of the IEEE, 100 (1) (2012),
    pp. 210-224 View in ScopusGoogle Scholar [219] J. Stark Product Lifecycle Management:
    21st Century Paradigm for Product Realisation (2nd ed)), Springer (2011) ISBN-13:
    978-0857295453 Google Scholar [220] R. Stark, B. Beckmann-Dobrev, J. Adenauer
    Ein Interdisziplinärer Ansatz Zur Multimodalen Funktionalen Absicherung Mechatronischer
    Systeme Am Beispiel Einer PKW-Heckklappe An interdisciplinary approach to a multimodal
    functional validation of mechatronic systems tested at an automotive tailgate),
    Grazer Symposium Virtuelles Fahrzeug (2010), pp. 18-27 View in ScopusGoogle Scholar
    [221] R. Stark, T. Damerau Digital Twin S. Chatti, L. Laperrière, G. Reinhart,
    T. Tolio (Eds.), CIRP Encyclopedia of Production Engineering, Springer, Berlin,
    Heidelberg (2019) in print Google Scholar [222] R. Stark, S. Kind, S. Neumeyer
    Innovations in Digital Modelling for Next Generation Manufacturing System Design
    Annals of CIRP, 66 (1) (2017), pp. 169-172 View in ScopusGoogle Scholar [223]
    R. Stark, K. Lindow, D. Reich, T. Vorsatz Smart Engineering Capabilities for New
    Generation Product Offerings Anais do 23. Seminário Internacional de Alta Tecnologia
    (2018) ISSN: 2175-9960 Google Scholar [224] T. Stock, G. Seliger Opportunities
    of Sustainable Manufacturing in Industry 4.0 Procedia CIRP, 40 (2016), pp. 536-541
    View in ScopusGoogle Scholar [225] F. Tao, M. Zhang, Y. Liu, A.Y.C. Nee Digital
    Twin Driven Prognostics and Health Management for Complex Equipment Annals of
    CIRP, 67 (1) (2018), pp. 169-172 View in ScopusGoogle Scholar [226] O.S. Tas,
    F. Kuhnt, J.M. Zollner, C. Stiller Functional System Architectures Towards Fully
    Automated Driving Proceedings of 2016 IEEE Intelligent Vehicles Symposium (IV)
    (2016), pp. 304-309 View in ScopusGoogle Scholar [227] R. Teti, K. Jemielniak,
    G. O’Donnell, D. Dornfeld Advanced Monitoring of Machining Operations Annals of
    CIRP, 59 (2) (2010), pp. 717-739 View in ScopusGoogle Scholar [228] A. Tharumarajah,
    A.J. Wells, L. Nemes Comparison of the Bionic, Fractal and Holonic Manufacturing
    System Concepts International Journal of Computer Integrated Manufacturing, 9
    (3) (1996), pp. 217-226 View in ScopusGoogle Scholar [229] M.K. Thompson, G. Moroni,
    T. Vaneker, et al. Design for Additive Manufacturing: Trends, Opportunities, Considerations,
    and Constraints Annals of CIRP, 65 (2) (2016), pp. 737-760 View in ScopusGoogle
    Scholar [230] C.E. Thorpe, M. Herbert, T. Kanade, S.A. Shafer Toward Autonomous
    Driving: the CMU Navlab. Part I—Perception IEEE Expert, 6 (4) (1991), pp. 3-42
    Google Scholar [231] T. Tomiyama Service Engineering to Intensify Service Contents
    in Product Life Cycles Proceedings of Second International Symposium on Environmentally
    Conscious Design and Inverse Manufacturing (EcoDesign 2001), IEEE (2001), pp.
    613-618, 10.1109/.2001.992433 View in ScopusGoogle Scholar [232] T. Tomiyama Architecture-Centric
    Model-Based Product Development Proceedings of 13th Mechatronics Forum International
    Conference, 2/3 (2012), pp. 434-443 ISBN: 978-3-99033-045-6 Google Scholar [233]
    T. Tomiyama, V. D’Amelio, J. Urbanic, W. ElMaraghy Complexity of Multi-Disciplinary
    Design Annals of CIRP, 56 (1) (2007), pp. 185-188 View in ScopusGoogle Scholar
    [234] T. Tomiyama, P. Gu, Y. Jin, et al. Design Methodologies: Industrial and
    Educational Applications Annals of CIRP, 58 (2) (2009), pp. 543-565 View in ScopusGoogle
    Scholar [235] T. Tomiyama, F. Moyen Resilient Architecture for Cyber-Physical
    Production Systems Annals of CIRP, 67 (1) (2018), pp. 161-164 View in ScopusGoogle
    Scholar [236] T. Tomiyama, T.J. van Beek, A.A. Alvarez Cabrera Making Function
    Modeling Practically Usable AI EDAM, 27 (2013), pp. 3301-3309 Google Scholar [237]
    A.M. Townsend Smart Cities: Big Data, Civic Hackers, and the Quest for a New Utopia
    WW Norton & Company (2013) Google Scholar [238] K.W. Tracy Mobile Application
    Development Experiences on Apples iOS and Android OS IEEE Potentials, 31 (4) (2012),
    pp. 30-34 View in ScopusGoogle Scholar [239] M.M. Tseng, J. Jiao, M.E. Merchant
    Design for Mass Customization Annals of CIRP, 45 (1) (1996), pp. 153-156 View
    in ScopusGoogle Scholar [240] M.M. Tseng, R.J. Jiao, C. Wang Design for Mass Personalization
    Annals of CIRP, 59 (1) (2010), pp. 175-178 View in ScopusGoogle Scholar [241]
    M.-L. Tseng, R.R. Tan, A.S.F. Chiu, et al. Circular Economy Meets Industry 4.0:
    Can Big Data Drive Industrial Symbiosis? Resources, Conservation and Recycling,
    131 (2018), pp. 146-147 View in ScopusGoogle Scholar [242] M.L. Tuballa, M.L.
    Abundo A Review of the Development of Smart Grid Technologies Renewable and Sustainable
    Energy Reviews, 59 (C) (2016), pp. 710-725 View in ScopusGoogle Scholar [243]
    K. Ueda, J. Vaario, K. Ohkura Modelling of Biological Manufacturing Systems for
    Dynamic Reconfiguration Annals of CIRP, 46 (1) (1997), pp. 343-346 View in ScopusGoogle
    Scholar [244] T.H.J. Uhlemann, C. Lehmann, R. Steinhilper The Digital Twin: Realizing
    the Cyber-Physical Production System for Industry 4.0 Procedia CIRP, 61 (2017),
    pp. 335-340 View in ScopusGoogle Scholar [245] UK RAS, 2019, https://www.ukras.org/publications/white-papers/.
    (Accessed 15 April 2019). Google Scholar [246] Y. Umeda, M. Ishii, M. Yoshioka,
    et al. Supporting Conceptual Design Based on the Function-Behavior-State Modeler
    AI EDAM, 10 (4) (1996), pp. 275-288 View in ScopusGoogle Scholar [247] Y. Umeda,
    T. Tomiyama, H. Yoshikawa, Shimomura Using Functional Maintenance to Improve Fault
    Tolerance IEEE Expert-Intelligent Systems and Their Applications, 9 (3) (1994),
    pp. 25-31 View in ScopusGoogle Scholar [248] I. Ungurean, N.-C. Gaitan, V.G. Gaitan
    An IoT Architecture for Things from Industrial Environment Proceedings of 10th
    IEEE International Conference on Communications (2014), pp. 1-4, 10.1109/ICComm.2014.6866713
    Google Scholar [249] P. Valckenaers, H. Van Brussel Holonic Manufacturing Execution
    Systems Annals of CIRP, 54 (1) (2005), pp. 427-432 View in ScopusGoogle Scholar
    [250] A. Valencia, R. Mugge, J.P.L. Schoormans, H.N.J. Schifferstein The Design
    of Smart Product-Service Systems (PSSs) International Journal of Design, 9 (1)
    (2015), pp. 13-28 View in ScopusGoogle Scholar [251] H. Van Brussel, L. Bongaerts,
    J. Wyns, P. Valckenaers, T. Van Ginderachter A Conceptual Framework for Holonic
    Manufacturing: Identification of Manufacturing Holons Journal of Manufacturing
    Systems, 18 (1) (1999), pp. 35-52 View in ScopusGoogle Scholar [252] H. Van Brussel,
    J. Wyns, P. Valckenaers, L. Bongaerts, P. Peeters Reference Architecture for Holonic
    Manufacturing Systems: PROSA Computers in Industry, 37 (3) (1998), pp. 255-274
    View in ScopusGoogle Scholar [253] H. Van Der Auweraer, J. Anthonis, S. De Bruyne,
    J. Leuridan Virtual Engineering at Work: The Challenges for Designing Mechatronic
    Products Engineering with Computers, 29 (3) (2013), pp. 389-408 CrossRefView in
    ScopusGoogle Scholar [254] H. Van der Auweraer, S. Donders, W. Desmet Simulation
    and Digital Twin for Mechatronic Product Design Proceedings of 28th International
    Conference Noise and Vibration engineering (ISMA2018) (2018) http://past.isma-isaac.be/isma2018/proceedings/
    Google Scholar [255] Eds.) P. Van de Laar, T. Punter (Eds.), Views on Evolvability
    of Embedded Systems, Springer, Netherlands (2011) ISBN 978-90-481-9849-8 [256]
    M.L. Van Eck, N. Sidorova, W.M.P. Van Der Aalst Enabling Process Mining on Sensor
    Data from Smart Products Proceedings of 2016 IEEE Tenth International Conference
    Research Challenges in Information Science (RCIS) (2016), pp. 1-12, 10.1109/RCIS.2016.7549355
    Google Scholar [257] J. Vanhuyse, N. Murgovski, M. Nicolai, et al. Closed-Loop
    Design for Hybrid Powertrains Procedings of ASME. IDETC 2017, 3 (2017), 10.1115/DETC2017-67404
    Paper No. DETC2017-67404 Google Scholar [258] J. Verriet, T. Basten, R. Hamberg,
    F. Reckers, L. Somers Adaptivity in Professional Printing Systems, Model-Based
    Design of Adaptive Embedded Systems Springer (2013), pp. 1-9, 10.1007/978-1-4614-4821-1
    Google Scholar [259] B. Vogel-Heuser, C. Diedrich, D. Pantförder, P. Göhner Coupling
    Heterogeneous Production Systems by a Multi-Agent Based Cyber-Physical Production
    System Proceedings of 2014 12th IEEE International Conference Industrial Informatics,
    INDIN 2014 (2014), pp. 713-719, 10.1109/INDIN.2014.6945601 View in ScopusGoogle
    Scholar [260] Volkswagen AG, 2017, https://www.volkswagenag.com/en/news/stories/2017/02/the-e-mobility-module.html#.
    (Accessed 15 April 2019). Google Scholar [261] Wall J., Forget, L. 2017, What’s
    new in QNX SDP7.0, https://zapdoc.tips/what-s-new-in-qnx-sdp-70.html. (Accessed
    15 April 2019). Google Scholar [262] J. Wan, A. Canedo, M.A.Al. Faruque Functional
    Model-Based Design Methodology for Automotive Cyber-Physical Systems IEEE Systems
    Journal, 11 (4) (2017), pp. 2028-2039 Google Scholar [263] J. Wan, S. Tang, Z.
    Shu, D. Li, S. Wang, M. Imran, A.V. Vasilakos Software-Defined Industrial Internet
    of Things in the Context of Industry 4.0 IEEE Sensors Journal, 16 (20) (2016),
    pp. 7373-7380 View in ScopusGoogle Scholar [264] L. Wang, M. Törngren, M. Onori
    Current Status and Advancement of Cyber-Physical Systems in Manufacturing Journal
    of Manufacturing Systems, 37 (2015), pp. 517-527 View in ScopusGoogle Scholar
    [265] P. Wang, R.X. Gao, R. Yan A Deep Learning-Based Approach to Material Removal
    Rate Prediction in Polishing Annals of CIRP, 66 (1) (2017), pp. 429-432 View in
    ScopusGoogle Scholar [266] P. Wang, H. Liu, L. Wang, R.X. Gao Deep Learning-Based
    Human Motion Recognition for Predictive Context-Aware Human-Robot Collaboration
    Annals of CIRP, 67 (1) (2018), pp. 17-20 View in ScopusGoogle Scholar [267] W.C.
    Wang, Y. Koren Design Principles of Scalable Reconfigurable Manufacturing Systems
    IFAC Proceedings, 46 (9) (2013), pp. 1411-1416 View in ScopusGoogle Scholar [268]
    Y. Wang, D.Y. Mo, M.M. Tseng Mapping Customer Needs to Design Parameters in the
    Front End of Product Design by Applying Deep Learning Annals of CIRP, 67 (1) (2018),
    pp. 145-148 Google Scholar [269] R. Want An Introduction to RFID Technology IEEE
    Pervasive Computing, 5 (1) (2006), pp. 25-33 Google Scholar [270] H.J. Warnecke
    The Fractal Company, A Revolution in Corporate Culture Springer-Verlag (1993)
    Google Scholar [271] B. Waschneck, A. Reichstaller, L. Belzner, et al. Optimization
    of Global Production Scheduling With Deep Reinforcement Learning Procedia CIRP,
    72 (2018), pp. 1264-1269 View in ScopusGoogle Scholar [272] C.S. Wasson System
    Engineering Analysis, Design, and Development: Concepts, Principles, and Practices
    John Wiley & Sons (2015) ISBN: 978-1-118-44226-5 Google Scholar [273] W. Wymore
    Model-Based Systems Engineering CRC Press (1993) ISBN 9780849380129 Google Scholar
    [274] H. Wei, Y. Cai, H. Li, D. Li, T. Wang Sambot: A Self-Assembly Modular Robot
    for Swarm Robot Proceedings of 2010 IEEE International Conference Robotics and
    Automation (2010), pp. 66-71, 10.1109/ROBOT.2010.5509214 View in ScopusGoogle
    Scholar [275] D. Weimer, B. Scholz-Reiter, M. Shpitalni Design of Deep Convolutional
    Neural Network Architectures for Automated Feature Extraction in Industrial Inspection
    Annals of CIRP, 65 (1) (2016), pp. 417-420 View in ScopusGoogle Scholar [276]
    M. Weiser The Computer for the Twenty-First Century Scientific American, 265 (3)
    (1991), pp. 94-104 CrossRefView in ScopusGoogle Scholar [277] M. Weiser Ubiquitous
    Computing IEEE Computer, 26 (10) (1993), pp. 71-72 View in ScopusGoogle Scholar
    [278] L. Wen, L. Gao, X. Li, L. Wang, J. Zhu A Jointed Signal Analysis and Convolutional
    Neural Network Method for Fault Diagnosis Procedia CIRP, 72 (2018), pp. 1084-1087
    View in ScopusGoogle Scholar [279] Wikipedia, https://en.wikipedia.org/wiki/Google_Traffic.
    (Accessed 15 April 2019). Google Scholar [280] Wikipedia, https://en.wikipedia.org/wiki/History_of_autonomous_cars.
    (Accessed 15 April 2019). Google Scholar [281] Wikipedia, https://en.wikipedia.org/wiki/History_of_the_electric_vehicle.
    (Accessed 15 April 2019). Google Scholar [282] Wikipedia, https://en.wikipedia.org/wiki/Smart_lighting.
    (Accessed 15 April 2019). Google Scholar [283] Wikipedia, https://en.wikipedia.org/wiki/Smart_thermostat.
    (Accessed 15 April 2019). Google Scholar [284] Wikipedia, https://en.wikipedia.org/wiki/Tesla_Model_S.
    (Accessed 15 April 2019). Google Scholar [285] Wikipedia, https://en.wikipedia.org/wiki/Toyota_Prius.
    (Accessed 15 April 2019). Google Scholar [286] Wikipedia, https://en.wikipedia.org/wiki/Transportation_as_a_Service.
    (Accessed 15 April 2019). Google Scholar [287] L.D. Xu, W. He, S. Li Internet
    of Things in Industries: A Survey IEEE Transactions on Industrial Informatics,
    10 (4) (2014), pp. 2233-2243 View in ScopusGoogle Scholar [288] E. Yasa, J.-P.
    Kruth, J. Deckers Manufacturing by Combining Selective Laser Melting and Selective
    Laser Erosion/laser Re-Melting Annals of CIRP, 60 (1) (2011), pp. 263-266 View
    in ScopusGoogle Scholar [289] H. Yasuura, C.-M. Kyung, Y. Liu, Y.-L. Lin (Eds.),
    Smart Sensors at the IoT Frontier, Springer (2017) ISBN: 978-3-319-55344-3 [290]
    T. Yatabe, T. Hirose, T. Tsugawa Autonomous Navigation of the Vehicle With Vision
    System Journal Society of Instrument and Control Engineers, 30 (11) (1991), pp.
    1014-1028 (in Japanese) Google Scholar [291] M. Yim, D.G. Duff, K.D. Roufas PolyBot:
    a Modular Reconfigurable Robot Proceedings of IEEE International Conference on
    Robotics and Automation, 1 (2000), pp. 514-520 View in ScopusGoogle Scholar [292]
    M. Yim, W.-M. Shen, B. Salemi, et al. Modular Self-Reconfigurable Robot Systems
    [Grand Challenges of Robotics] IEEE Robotics and Automation Magazine, 14 (1) (2007),
    pp. 43-52 View in ScopusGoogle Scholar [293] S.C. Yoon, J. Um, S.-H. Suh, et al.
    Smart Factory Information Service Bus (SIBUS) for Manufacturing Application: Requirement,
    Architecture and Implementation Journal of Intelligent Manufacturing, 30 (1) (2019),
    pp. 363-382 CrossRefView in ScopusGoogle Scholar [294] A. Zanella, N. Bui, A.
    Castellani, et al. Internet of Things for Smart Cities IEEE Internet of Things
    Journal, 1 (1) (2014), pp. 22-32 Google Scholar [295] P. Zawadzki, K. Zywicki
    Smart Product Design and Production Control for Effective Mass Customization in
    the Industry 4.0 Concept Management and Production Engineering Review, 7 (3) (2016),
    pp. 105-112 CrossRefView in ScopusGoogle Scholar [296] J. Zhang, P. Wang, R. Yan,
    R.X. Gao Deep Learning for Improved System Remaining Life Prediction Procedia
    CIRP, 72 (2018), pp. 1033-1038 CrossRefGoogle Scholar [297] L. Zhang Specification
    and Design Method for Big Data Driven Cyber Physical Systems Proceedings of 23rd
    International Conference on Systems Engineering, 1089 (2015), pp. 849-857 978-3-319-08422-0_124
    CrossRefView in ScopusGoogle Scholar [298] C. Zheng, J. Le Duigou, H. Peter, B.
    Matthieu, B. Eynard Multidisciplinary Integration During Conceptual Design Process:
    A Survey on Design Methods of Cyber-Physical Systems Proceedings of 14th International
    Design Conference, DS 84 (2016), pp. 1625-1634 View in ScopusGoogle Scholar [299]
    R.Y. Zhong, X. Xu, L. Wang IoT-Enabled Smart Factory Visibility and Traceability
    Using Laser-Scanners Procedia Manufacturing, 10 (2017), pp. 1-14 View in ScopusGoogle
    Scholar [300] G. Zhou, F. Li, H.-M. Cheng Progress in Flexible Lithium Batteries
    and Future Prospects Energy and Environmental Science, 7 (4) (2014), pp. 1307-1338
    View in ScopusGoogle Scholar [301] Zojirushi, C http://www.mimamori.net (in Japanese)
    (Accessed 15 April 2019). Google Scholar [302] D. Zuehlke SmartFactory-Towards
    a Factory-of-Things Annual Reviews in Control, 34 (1) (2010), pp. 129-138 View
    in ScopusGoogle Scholar Cited by (111) Exploring the transformative power of AI
    in art through a circular economy lens. A systematic literature review 2024, Heliyon
    Show abstract Consideration of uncertainties in a dynamic modeling system integrated
    with a deep learning based forecasting approach 2023, CIRP Journal of Manufacturing
    Science and Technology Show abstract Digital twin-enabled automated anomaly detection
    and bottleneck identification in complex manufacturing systems using a multi-agent
    approach 2023, Journal of Manufacturing Systems Show abstract Augmented reality
    support to employ tacit knowledge in non-conforming operations 2023, Procedia
    CIRP Show abstract A digital twinning reference model to facilitate multi-stakeholder
    decision-making 2023, Procedia CIRP Show abstract Knowledge Collaboration Approach
    in Smart Product Innovation Networks 2023, Procedia CIRP Show abstract View all
    citing articles on Scopus View Abstract © 2019 Published by Elsevier Ltd on behalf
    of CIRP. Recommended articles Coevolution of digitalisation, organisations and
    Product Development Cycle CIRP Annals, Volume 70, Issue 2, 2021, pp. 519-542 Lionel
    Roucoules (2), Nabil Anwer (2) View PDF Characterization and application of assistance
    systems in digital engineering CIRP Annals, Volume 70, Issue 1, 2021, pp. 131-134
    Rainer Stark (2), …, Kai Lindow View PDF Optimizing smart manufacturing systems
    by extending the smart products paradigm to the beginning of life Journal of Manufacturing
    Systems, Volume 57, 2020, pp. 274-286 Juergen Lenz, …, Thorsten Wuest View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 104 Captures
    Readers: 448 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply. We use
    cookies that are necessary to make our site work. We may also use additional cookies
    to analyze, improve, and personalize our content and your digital experience.
    For more information, see ourCookie Policy Cookie Settings Accept all cookies'
  inline_citation: '>'
  journal: CIRP Annals
  limitations: '>'
  pdf_link: null
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Development capabilities for smart products
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2021/5547530
  analysis: '>'
  authors:
  - Ruijun Duan
  - Guo Li
  citation_count: 9
  full_citation: '>'
  full_text: ">\nResearch Article\nApplication of Blockchain for Internet of Things:\
    \ A\nBibliometric Analysis\nRuijun Duan\nand Li Guo\nSchool of Economics and Commerce,\
    \ Henan University of Technology, Zhengzhou 450001, China\nCorrespondence should\
    \ be addressed to Ruijun Duan; duanrj52058@126.com\nReceived 18 January 2021;\
    \ Revised 28 March 2021; Accepted 23 April 2021; Published 29 April 2021\nAcademic\
    \ Editor: Chien Ming Chen\nCopyright © 2021 Ruijun Duan and Li Guo. Tis is an\
    \ open access article distributed under the Creative Commons Attribution\nLicense,\
    \ which permits unrestricted use, distribution, and reproduction in any medium,\
    \ provided the original work is\nproperly cited.\nAs a disruptive emerging technology,\
    \ the Internet of things (IoT) has rapidly developed, but its privacy risks and\
    \ security\nvulnerabilities are still key challenges. Te decentralized and distributed\
    \ architecture of blockchain has the potential to satisfy IoT\nprivacy and security\
    \ requirements. Tis gives birth to the new domain of blockchain for IoT (BIoT).\
    \ BIoT will cause signiﬁcant\ntransformations across several industries, paving\
    \ the way for new business models. Based on the Science Citation Index Expanded\n\
    (SCIE) and Social Sciences Citation Index (SSCI) databases in Web of Science (WoS)\
    \ Core Collection, this study aims to explore\nthe research trends and cooperation\
    \ in the ﬁeld of BIoTusing the bibliometric method. Te results indicate that the\
    \ publications in\nthis ﬁeld have increased signiﬁcantly from 2016 to 2020, with\
    \ China and the USA being the most productive and inﬂuential\ncountries. Keyword\
    \ co-occurrence analysis shows that the most important research topics are as\
    \ follows: security issues, core\ntechnologies, application dimensions, and transaction\
    \ processes. Text mining analysis indicates that future research directions for\n\
    BloT will focus more on both computing paradigms and key applications. Tis study\
    \ will provide researchers with a greater\nunderstanding on the state of the art\
    \ of BIoTand will serve as a reference for researchers engaging in this ﬁeld to\
    \ identify their own\nfuture research directions.\n1. Introduction\nInternet of\
    \ things (IoT) applications have been rapidly in-\ncreasing in recent years and\
    \ are currently playing a key role\nin the development of society. In fact, through\
    \ the con-\nnection of vehicles, household appliances, and other elec-\ntronic\
    \ devices to the Internet, IoT will create more\ncomfortable living conditions\
    \ for humans through many\napplications coming from various industrial domains\
    \ such\nas smart home, smart healthcare, transportation, agriculture,\nretail,\
    \ and wearable [1]. Cisco predicts that the share of\nmachine-to-machine (M2M)\
    \ connections will increase from\n33% in 2018 to 50% in 2023, i.e., 14.7 billion\
    \ connections,\nwith connected home applications accounting for nearly half\n\
    this share, while connected car applications will grow the\nfastest at a CAGR\
    \ of 30% [2]. Currently, most IoT solutions\nrely on a centralized server-client\
    \ paradigm, which involves\nconnecting to cloud servers through the Internet [3].\n\
    However, centralized architectures are susceptible to the\nmalicious manipulation\
    \ of information by untrusted enti-\nties, which may in turn result in the exchange\
    \ of tampered\nand forged information [4]. On the other hand, cloud\nservices\
    \ that store, forward, and process IoT data are vul-\nnerable to network attacks\
    \ such as false data injection, data\ntampering, and single node failures [5].\
    \ To sum up, the\nmajor concerns regarding the development of IoT are se-\ncurity\
    \ and privacy. In [6], it is pointed out that blockchain-\nbased decentralized\
    \ architectures provide solutions to the\nproblem of IoT application security.\n\
    Blockchain was originally invented as the underlying\ntechnology of bitcoin, but\
    \ its potential applications have\ngone far beyond the scope of cryptocurrencies.\
    \ Te emer-\ngence of blockchain marks a breakthrough in decentralized\ntechnologies.\
    \ Since trade on the Internet relies almost en-\ntirely on third-party ﬁnancial\
    \ institutions to handle elec-\ntronic payments, the existence of ﬁnancial intermediaries\n\
    Hindawi\nMathematical Problems in Engineering\nVolume 2021, Article ID 5547530,\
    \ 16 pages\nhttps://doi.org/10.1155/2021/5547530\nincreases transaction costs,\
    \ limits the minimum actual\ntransaction size, and there exist many potential\
    \ malicious\nactivity possibilities, such as fraud [7]. As a distributed\ntechnology,\
    \ blockchain is created to overcome the inherent\nweakness of this trust-based\
    \ model, because it is an elec-\ntronic payment system based on proof of encryption\
    \ rather\nthan trust. Blockchain allows peer-to-peer transactions\nthrough decentralized\
    \ networks using data encryption, time\nstamps, tree structures, and consensus\
    \ mechanisms without\nhaving to rely on third-parties [8]. It also provides public\
    \ and\nfull access to the history of transactions, allows access to all\ntransactions\
    \ that have occurred since the ﬁrst transaction,\nand their occurrence can be\
    \ veriﬁed by any entity at any time\n[3, 9]. Blockchain technology is conducive\
    \ to solving the\nproblems of poor reliability, low security, high cost, and low\n\
    eﬃciency in centralized organizations [10, 11].\nSimilar to cryptocurrencies,\
    \ many entities (nodes,\ngateways, and users) in an IoT system do not necessarily\n\
    trust each other when performing transactions. As a dis-\ntributed ledger technology,\
    \ blockchain can fulﬁll the security\nrequirements of IoT applications. Blockchain\
    \ technology\nuses public-key cryptography to record transactions between\nmultiple\
    \ parties without central coordination. Te peer-to-\npeer networks established\
    \ using blockchain can reduce the\nrisks of single-point failures commonly faced\
    \ by IoT ap-\nplications [12, 13]. Blockchain can also enrich IoT appli-\ncations\
    \ by keeping transaction records permanently in a\nveriﬁable way, and IoTinformation\
    \ for which the blockchain\nprovides trusted distributed authentication and authoriza-\n\
    tion is integral and traceable. Terefore, the use of block-\nchain can strengthen\
    \ the reliability of IoT applications.\nBlockchains can use pseudonyms without\
    \ the need for any\nidentity information to preserve anonymity and privacy [14].\n\
    Tis is attractive for many IoT applications that need to\nmaintain conﬁdential\
    \ identities and privacy. To sum up,\nblockchain-based IoT applications would\
    \ represent a key\nrevolution to solve security, privacy, and reliability problems\n\
    related to the IoT paradigm.\nWith the increased focus on the ﬁeld of blockchain\
    \ for\nIoT (BIoT), a large number of studies have emerged. As an\nobjective criterion\
    \ for evaluating the research performance\nin a ﬁeld, bibliometric analyses have\
    \ become important tools\nfor assessing scholarly quality and productivity [15,\
    \ 16]. Te\nbibliometric analysis may examine an array of diﬀerent\nobjects and\
    \ have been used in diﬀerent disciplines [17–20].\nCompared to other types of\
    \ analyses, there are numerous\nadvantages in using bibliometrics: (1) bibliometrics\
    \ can be\nused to analyze the number of publications and citations to\nﬁnd inﬂuential\
    \ authors, journals, institutions, and countries\neﬃciently [21]. (2) With the\
    \ aid of visualization techniques\n(e.g., VOSviewer software), bibliometrics can\
    \ be used to\nanalyze information more intuitively by constructing net-\nwork\
    \ connections of authors, journals, institutions, coun-\ntries, and keywords [22].\
    \ (3) Bibliometrics can be used to\nﬁnd the research hotspots and foresee future\
    \ research un-\ndertakings [23].\nIn recent years, bibliometric methods are being\
    \ in-\ncreasingly applied to the ﬁelds of blockchain and IoT. For\nexample, Firdaus\
    \ et al. [24] conducted a bibliometric\nanalysis of the blockchain which exhibited\
    \ the exploration of\nan in-depth research pattern in this area. Dabbagh et al.\
    \ [25]\nconducted a bibliometric study of the blockchain literature\nwith the\
    \ aim of systematically analyzing all the blockchain\nresearch papers that have\
    \ been indexed by WoS Core\nCollection. Muessigmann et al. [26] provided a structured\n\
    bibliometric analysis of blockchain technology in logistics\nand supply chain\
    \ management. Nobre and Tavares [27]\nperformed a bibliometric literature review\
    \ from the Scopus\nDatabase focusing on the application of big data/IoT on the\n\
    context of circular economy. Bouzembrak et al. [28]\nreviewed the use of IoT technology\
    \ in food safety using the\nbibliometric networks. However, there is still a lack\
    \ of re-\nsearch on BIoT using bibliometric methods. For this reason,\nin this\
    \ paper we apply bibliometric methods to sort out the\nscientiﬁc literature of\
    \ the BIoT domain in recent years and\nexplore publication and citation details,\
    \ research hotspots,\nand collaborations among authors, institutions, and coun-\n\
    tries. More speciﬁcally, the present article intends to answer\nthe following\
    \ questions: which publications and issues in\nBIoT-related ﬁelds have received\
    \ high attention? Which\nauthors, institutions, countries, and journals signiﬁcantly\n\
    contribute to the research domain? Which authors, insti-\ntutions, and countries\
    \ are involved in collaborative works?\nWhich journals are closely linked? Which\
    \ keywords are the\nhot issues of BIoT research? What are the future research\n\
    trends for BIoT?\nIn this study, we aim to provide a holistic vision of the\n\
    research trends, the most concerned topic and existing re-\nsearch gaps in the\
    \ ﬁeld of BIoT. Te key contributions of this\narticle lie in two main areas: on\
    \ the one hand, based on the\nkeyword co-occurrence analysis, the study explores\
    \ the hot\nissues in the BIoT ﬁeld. On the other hand, the study predicts\nthe\
    \ future research trends in the BIoT ﬁeld using text mining\ntechnology. Tis study\
    \ will provide researchers with a\ngreater understanding of the research hotspots\
    \ and trends,\nwhich will be helpful to the researchers for their future\nresearch\
    \ planning.\nTe remainder of the paper is arranged as follows. In\nSection 2,\
    \ we describe the data sources and methods of the\nstudy. In Section 3, we demonstrate\
    \ the results in detail.\nSection 4 presents hot issues, research trends, and\
    \ limita-\ntions. Section 5 summarizes the key conclusions of the study.\n2. Data\
    \ and Methods\nTe data collected in this study are based on the retrieval of\n\
    the SCIE and SSCI databases in WoS Core Collection. One of\nthe basic tenets of\
    \ this content selection for the WoS Core\nCollection is Garﬁeld’s Law of Concentration\
    \ which pos-\ntulates that a relatively small core of journals (10-20 percent)\n\
    account for the bulk (80-90 percent) of what is cited by all\npublished literature,\
    \ and that these core journals are fre-\nquently cited across a wide range of\
    \ disciplines [29].\nTerefore, we mainly analyze the most inﬂuential papers\n\
    about the topic of the BIoT, which are based on the SCIE and\nSSCI databases.\
    \ Tese two databases cover more scientiﬁc\nand authoritative publications than\
    \ others. For this study, we\nselected the “topic” search ﬁeld, and the search\
    \ terms were\n2\nMathematical Problems in Engineering\n(“blockchain ∗ ” and “IoT”)\
    \ or (“blockchain ∗ ” and “In-\nternet of things”). Te literature searching covered\
    \ “articles”\nand “reviews” published during 2016–2020. A total of 917\ndocuments\
    \ were obtained. Many papers did not include\nsearch terms in their title, abstract,\
    \ and keywords, and these\narticles were inappropriate to be included in this\
    \ study.\nTerefore, we manually screened 917 documents, elimi-\nnating articles\
    \ that did not contain the search terms in the\ntitle, abstract, and keywords,\
    \ and ﬁnally obtained 802\ndocuments.\nBecause no individual bibliometric indicator\
    \ can account\nfor all aspects of research performance, the collected data from\n\
    the SCIE and SSCI databases were analyzed using several\nbibliometric indicators,\
    \ including the total number of publi-\ncations (TP), total citations (TC), the\
    \ percentage of total\npublications (%/802), the average citations per paper (AC),\
    \ and\nh-index. Te indicator TP provides information about the\nnumber of publications\
    \ which is necessary for the analysis of\nproductive authors, institutions, and\
    \ countries. TC is a well-\nestablished, purely citation-based metric for measuring\
    \ the\nquality of scientiﬁc papers. It helps to acknowledge and trace\nthe original\
    \ source and authorship of a concept or an idea. Te\nAC indicator reﬂects average\
    \ citations per paper, and it is useful\nin performance evaluation and comparative\
    \ studies [30].\nAccording to [31], the h-index can be deﬁned as follows: A\n\
    researcher has an h-index if they have at least h publications for\nwhich they\
    \ have received at least h citations. Terefore, the\nh-index combines TP and TC\
    \ in one index [32].\nAs an important research topic in the ﬁeld of biblio-\n\
    metrics, bibliometric mapping is a network visualization that\nreﬂects the development\
    \ process and structural relationship\nof scientiﬁc knowledge using the dual attributes\
    \ of “graph”\nand “genealogy” [33, 34]. In recent years, it has become a\ncommonly\
    \ used method to explore the development of a\ncertain ﬁeld. Apart from elementary\
    \ statistics and standard\nvisualization graphs, we utilized the VOSviewer software\
    \ to\nprepare a network visualization of the bibliographic cou-\npling of authors,\
    \ co-authorship of institutions and countries,\nco-citation of journals, and co-occurrence\
    \ of keywords.\nVOSviewer is a software tool which has been developed for\nconstructing\
    \ graphs based on bibliographic data and visu-\nalizing bibliometric maps [35].\
    \ It also oﬀers text mining\nfunctionality that can be used to construct and visualize\
    \ co-\noccurrence networks of important terms extracted from a\nbody of scientiﬁc\
    \ literature [36].\nVOSviewer constructs a bibliometric mapping based on\na co-occurrence\
    \ matrix. Te construction of the bibliometric\nmapping consists of three steps:\
    \ ﬁrstly, the similarity matrix\nis calculated based on the co-occurrence matrix.\
    \ Secondly,\nthe visualization technique is applied to the similarity matrix\n\
    to construct a bibliometric mapping. Finally, it is the\ntransformation, rotation,\
    \ and mapping [35, 37].\nVOSviewer uses the strength of association to measure\n\
    similarity. Te similarity sij between individual i and in-\ndividual j can be\
    \ expressed by the following formula:\nsij \x88\ncij\nwiwj\n,\n(1)\nwhere cij\
    \ represents the number of co-occurrences of the\nindividual i and the individual\
    \ j, and wi and wj represent the\nnumber of respective occurrences of the individual\
    \ i and the\nindividual j.\nTe core idea of the similarity visualization technique\
    \ is\nto minimize the weighted square sum of the Euclidean\ndistance. Te higher\
    \ the similarity between the two indi-\nviduals, the higher the weight of the\
    \ square sum. To avoid\nthat all individuals are in the same position, a constraint\
    \ is\ngiven that the average distance between two individuals is\nequal to one.\
    \ We can represent the objective function and\nconstraints as the following mathematical\
    \ model:\nMin\nV x1 . . . xn\n\0\U0010FF01 \x88 \U0010FF58\ni<j\nsij xi − xj\n\
    \r\r\r\r\r\n\r\r\r\r\r\n2,\ns.t.\n2\nn(n − 1) \U0010FF58\ni<j\n\r\r\r\r\rxi −\
    \ xj\n\r\r\r\r\r \x88 1,\n(2)\nwherein xi \x88 (xi1, xi2) represents the position\
    \ of the indi-\nvidual i in the two-dimensional map and ‖•‖ indicates the\nEuclidean\
    \ norm.\nTe optimization problem above has no unique global\noptimal solution.\
    \ It needs to solve this problem in three\nsteps: the ﬁrst step is to transform\
    \ the solution centered on\nthe origin; the second step is to use the principal\
    \ component\nanalysis method to maximize the variance of the solution in\nthe\
    \ horizontal direction by rotation. Tirdly, if the median of\nx11, ..., xn1 is\
    \ greater than 0, the solution is mapping to the\nvertical axis; if the median\
    \ of x12, ..., xn2 is greater than 0, the\nsolution is mapping to the horizontal\
    \ axis. Tese three\ntransformations ensure that the VOSviewer produces con-\n\
    sistent results.\nItems and links together constitute a network, where\nitems\
    \ are represented by nodes whose size signiﬁes the\nweights of the items. Te distance\
    \ between two nodes ap-\nproximately reﬂects the relatedness between two items;\
    \ a\nshorter distance generally presents a stronger relation. Items\nmay be grouped\
    \ into clusters, whose nodes all bear the same\ncolor. Links can exist for any\
    \ pair of items; a link reveals a\nrelation between two items, and the stronger\
    \ the link be-\ntween two items, the thicker the line between two nodes that\n\
    is used to display the link in the visualization. Te link\nstrength (LS) indicates\
    \ the number of links of a node with\nother nodes. Te total link strength (TLS)\
    \ represents the sum\nof the link strengths of this node over all other nodes\
    \ [23].\n3. Results and Discussion\n3.1. State of the Art in BIoT Research. Using\
    \ the above\nmethod, we retrieved 802 documents from the WoS Core\nCollection\
    \ database from 2016 to 2020. Te ﬁrst article on\nBIoT was published in 2016.\
    \ Te annual change trends of TP\nare shown in Figure 1. It can be seen that the\
    \ annual number\nof publications showed an overall upward trend in the\nperiod\
    \ from 2016 to 2020. Out of a total of 802 publications,\nthe breakdown for each\
    \ year from 2016 to 2020 was 2, 6, 64,\n236, and 494, respectively. After 2018,\
    \ there was a\nMathematical Problems in Engineering\n3\nremarkable increase in\
    \ the number of BIoTstudies. 2020 was\nthe most productive year with 494 publications,\
    \ i.e., 61.6% of\nthe total 802 papers, indicating that the research on BIoT is\n\
    attracting more and more scholars’ attention and is be-\ncoming a hot research\
    \ topic.\nTable 1 presents the title, author’s name, year of pub-\nlication, and\
    \ number of total citations of the top 10 most-\ncited articles. Except for two\
    \ articles from 2016 and 2019, all\nother papers were published in 2018. Te top\
    \ 10 articles from\nTable 1 discuss the state of the art of diﬀerent themes of\
    \ BIoT\nresearch. Highly cited articles may aﬀect their respective\nresearch subdomains,\
    \ thereby setting the scope of future\nresearch eﬀorts.\nTe article titled “Blockchains\
    \ and Smart Contracts for\nthe Internet of Tings” [13] ranked ﬁrst with 1003 total\n\
    citations. In that article, K. Christidis and M. Devetsikiotis\nexamine whether\
    \ blockchains are suitable for Internet of\nTings (IoT) applications. Te conclusion\
    \ is that the\nblockchain-IoT combination can cause signiﬁcant trans-\nformations\
    \ across several industries. Te paper written by\nM.A. Khan and K. Salah entitled\
    \ “IoT security: review,\nblockchain solutions, and open challenges” [38] is the\n\
    second inﬂuential work in Table 1. Te article analyzes how\nblockchain can be\
    \ a key enabler and solve many IoTsecurity\nproblems. Te article written by Zheng\
    \ et al. entitled\n“blockchain challenges and opportunities: a survey” [39] is\n\
    the third in the list, cited 407 times. Te authors believe that\nblockchain can\
    \ help in improving the IoT sector such as\ne-business, safety, and privacy.\n\
    3.2. Analysis of Leading Authors. A total of 2676 authors\nparticipated in BIoTresearch.\
    \ Table 2 enumerates the top 10\nauthors with the highest number of publications.\
    \ J.H. Park\nfrom Seoul National University of Science and Technology\npublished\
    \ 18 papers on BIoT, becoming the most proliﬁc\nauthor. He is Associate Editor/Editor\
    \ of 14 international\njournals. Te main areas of his research include IoT, Hu-\n\
    man-Centric Ubiquitous Computing, Information Security,\nDigital Forensics, Vehicular\
    \ Cloud Computing, Multimedia\nComputing, etc. M. Guizani from Qatar University\
    \ is listed\nin the second position with 16 items. He is currently the\nEditor-in-Chief\
    \ of the IEEE Network Magazine. His research\ninterests include wireless communications\
    \ and mobile\ncomputing, computer networks, mobile cloud computing,\nsecurity,\
    \ and smart grid. Y. Zhang from University of Oslo\nranks third with 14 papers,\
    \ followed by X.J. Du (TP \x88 13)\nfrom Temple University, and K-K.R. Choo (TP\
    \ \x88 12) from\nUniversity of Texas at San Antonio. Te top 10 high-yielding\n\
    scholars contributed 119 papers, accounting for 14.84% of all\npublications.\n\
    Highly cited authors are considered to be the world’s\nmost inﬂuential researchers,\
    \ because they usually grasp the\nresearch hotspots and cutting-edge trends in\
    \ certain subject\nareas. Table 3 presents the top 10 authors with the highest\n\
    number of citations. It can be seen that K. Christidis and\nM. Devetsikiotis,\
    \ two scholars from North Carolina State\nUniversity with 1003 citations, are\
    \ the most-cited authors,\nfollowed by Z.B. Zheng of Sun Yat Sen University, J.H.\
    \ Park\nof Seoul National University of Science and Technology, and\nH.N. Dai\
    \ of Macau University of Science and Technology,\ncited 536, 533, and 504 times,\
    \ respectively. In addition, from\nthe perspective of the country distribution\
    \ of most inﬂu-\nential authors, China, the United States, and Korea dominate\n\
    the research in the ﬁeld of BIoT.\nBibliographic coupling analysis is an important\
    \ tool for\nestablishing the connections among authors who cite the\nsame publications\
    \ [40]. Te more often two researchers cite\nthe same publications, the stronger\
    \ their relatedness [41].\nFigure 2 presents a visualization of the authors’ bibliographic\n\
    coupling network. Only authors with more than 5 articles\nare labeled. Of the\
    \ 2676 authors, 39 meet this threshold. Te\nnode size represents the number of\
    \ publications while the\nthickness of the connecting lines represents the link\
    \ strength.\nAs shown in Figure 2, the authors are grouped into 7 clusters\nrepresented\
    \ by 7 colors. F.R. Yu (TLS \x88 2320), M. Guizani\n(TLS \x88 2760),\nN.\nKumar\n\
    (TLS \x88 3795),\nM.\nImran\n(TLS \x88 1434), J.H. Park (TLS \x88 3045), W.J.\
    \ Li (TLS \x88 1032),\nand T.M. Fernandez-Carames (TLS \x88 3781) are authors\
    \ with\nthe greatest bibliographic couplings in the red, green, blue,\nyellow,\
    \ purple, turquoise, and orange clusters, respectively.\nOverall, N. Kumar (TLS\
    \ \x88 3795) is the most bibliographically\ncoupled author, followed by T.M. Fernandez-Carames\n\
    (TLS \x88 3781) and K-K.R. Choo (TLS \x88 3505). Most notably,\nN. Kumar had awarded\
    \ the best research paper awards from\nIEEE ICC 2018 and IEEE Systems Journal\
    \ 2018. At present,\n0.00\n10.00\n20.00\n30.00\n40.00\n50.00\n60.00\n70.00\n0\n\
    100\n200\n300\n400\n500\n600\n2016\n2017\n2018\n2019\n2020\nAnnual percentage\
    \ of\npublications (%)\nNumber of publications\nYear\nTP\nRatio\nFigure 1: Annual\
    \ number of total publications.\n4\nMathematical Problems in Engineering\nhe is\
    \ leading the Sustainable Practices for the Internet of\nEnergy and Security research\
    \ group, where team members\nare working on the latest cutting-edge technologies.\
    \ Te\ncooperation network centered on N. Kumar represents the\nforefront of research\
    \ in this ﬁeld. By pairing authors, the\nstrongest link strength is found between\
    \ T.M. Fernandez-\nCarames and P. Fraga-Lamas (LS \x88 1917) aﬃliated with\nUniversidade\
    \ da Coruna of Spain, followed by N. Kumar and\nS. Tanwar (LS \x88 743) and M.\
    \ Guizani and X.J. Du (LS \x88 558).\n3.3. Analysis of Dominant Institutions.\
    \ A total of 1073 in-\nstitutions are involved in research related to BIoT. Table\
    \ 4\nlists the top 10 institutional contributors to BIoT research\nand ranks them\
    \ according to the number of publications. In\naddition, the table captures other\
    \ relevant information in-\ncluding country, percentage of total publications,\
    \ number of\naverage citations, and h-index.\nTe Beijing University of Posts and\
    \ Telecommunications\n(38, 4.74%) is the largest provider of BIoT research. Te\n\
    Table 1: List of top 10 inﬂuential papers.\nRank\nTitle\nAuthor(s)\nYear\nTC\n\
    1\nBlockchains and smart contracts for the internet of things\nChristidis, K.;\
    \ Devetsikiotis, M.\n2016 1003\n2\nIoT security: review, blockchain solutions,\
    \ and open challenges\nKhan, M.A.; Salah, K.\n2018\n430\n3\nBlockchain challenges\
    \ and opportunities: a survey\nZheng, Z.B.; Xie, S.A.; Dai, H.N.; Chen, X.P.;\n\
    Wang, H.M.\n2018\n407\n4\nOn blockchain and its integration with loT. Challenges\
    \ and\nopportunities\nReyna, A.; Martin, C; Chen, J.; Soler, E.; Diaz,\nM.\n2018\n\
    255\n5\nBlockchain’s roles in meeting key supply chain management objectives\n\
    Kshetri, N.\n2018\n251\n6\nBlockchain meets IoT: an architecture for scalable\
    \ access management\nin IoT\nNovo, O.\n2018\n236\n7\nConsortium blockchain for\
    \ secure energy trading in industrial internet\nof things\nLi, Z.T.; Kang, J.W.;\
    \ Yu, R.; Ye, D.D.; Deng,\nQ.Y.; Zhang, Y.\n2018\n229\n8\nBlockchain technology\
    \ in the energy sector: a systematic review of\nchallenges and opportunities\n\
    Andoni, M.; Robu, V.; Flynn, D.\n2019\n214\n9\nA review on the use of blockchain\
    \ for the Internet of things\nFernandez-Carames, T.M.; Fraga-Lamas, P.\n2018\n\
    188\n10\nA software deﬁned fog node based distributed blockchain cloud\narchitecture\
    \ for IoT\nSharma, P.K.; Chen, M.Y.; Park, J.H.\n2018\n178\nTable 2: Top 10 most\
    \ productive authors.\nAuthor\nInstitution\nCountry\nTP\nPark, J.H.\nSeoul National\
    \ University of Science and Technology\nSouth Korea\n18\nGuizani, M.\nQatar University\n\
    Qater\n16\nZhang, Y.\nUniversity of Oslo\nNorway\n14\nDu, X.J.\nTemple University\n\
    USA\n13\nChoo, K-K.R.\nUniversity of Texas at San Antonio\nUSA\n12\nKumar, N.\n\
    Tapar Institute of Engineering and Technology\nIndia\n11\nSharma, P.K.\nSeoul\
    \ National University of Science and Technology\nSouth Korea\n10\nFernandez-Carames,\
    \ T.M.\nUniversidade da Coruna\nSpain\n9\nFraga-Lamas, P.\nUniversidade da Coruna\n\
    Spain\n8\nLi, H.\nOld Dominion University\nUSA\n8\nTable 3: Top 10 most inﬂuential\
    \ authors.\nAuthor\nInstitution\nCountry\nTC\nChristidis, K.\nNorth Carolina State\
    \ University\nUSA\n1003\nDevetsikiotis, M.\nNorth Carolina State University\n\
    USA\n1003\nZheng, Z.B.\nSun Yat Sen University\nChina\n536\nPark, J.H.\nSeoul\
    \ National University of Science and Technology\nSouth Korea\n533\nDai, H.N.\n\
    Macau University of Science and Technology\nChina\n504\nSalah, K.\nKhalifa University\
    \ of Science and Technology\nUnited Arab Emirates\n473\nKhan, M.A.\nBahauddin\
    \ Zakariya University\nPakistan\n430\nZhang, Y.\nUniversity of Oslo\nNorway\n\
    424\nSharma, P.K.\nSeoul National University of Science and Technology\nSouth\
    \ Korea\n422\nXie, S.A.\nSun Yat Sen University\nChina\n416\nMathematical Problems\
    \ in Engineering\n5\nsecond position is held by the King Saud University (26,\n\
    3.24%), followed by University of Electronic Science and\nTechnology (25, 3.12%)\
    \ and the Chinese Academy of Sci-\nences (23, 2.87%). However, from the perspective\
    \ of average\ncitations, the Seoul National University of Science and\nTechnology\
    \ leads Table 3 with 26.75 average citations, fol-\nlowed by Beijing University\
    \ of Posts and Telecommunica-\ntions with 18.87 average citations and King Saud\
    \ University\nwith 18.73 average citations. In terms of h-index, the King\nSaud\
    \ University tops Table 4, followed by Beijing University\nof Posts and Telecommunications\
    \ and University of Elec-\ntronic Science and Technology of China. It is worth\
    \ noting\nthat of the 10 most productive institutions, ﬁve are from\nChina, two\
    \ institutions are from the United States, one from\nSouth Korea, one from Saudi\
    \ Arabia, and one from Pakistan.\nTis indicates with no doubt that in terms of\
    \ total\npublications, Chinese institutions play an important role in\nglobal\
    \ BIoT research. Te 10 most productive institutions\nhave contributed 221 papers,\
    \ accounting for 27.56% of all\npublications in this ﬁeld.\nFigure 3 shows the\
    \ ten most inﬂuential institutions and\nranks them according to the number of\
    \ total citations. Te\nNorth Carolina State University, with 1003 citations, leads\n\
    Figure 3 followed by Beijing University of Posts and Tele-\ncommunications (717),\
    \ Sun Yat Sen University (566), and\nMacau University of Science and Technology\
    \ (504). Note the\nsigniﬁcant contribution of the two authors: K. Christidis and\n\
    M. Devetsikiotis from North Carolina State University, who\nhave contributed 1003\
    \ citations. In the top ten places, there\nare ﬁve institutions from China, one\
    \ institution from the\nUSA, one institution from Saudi Arabia, one institution\n\
    from Pakistan, one institution from United Arab Emirates,\nFigure 2: Bibliographic\
    \ coupling network of authors.\nTable 4: Top 10 most productive institutions.\n\
    Institution\nCountry\nTP\n%802\nAC\nh-index\nBeijing University of Posts and Telecommunications\n\
    China\n38\n4.74\n18.87\n11\nKing Saud University\nSaudi Arabia\n26\n3.24\n18.73\n\
    13\nUniversity of Electronic Science and Technology of China\nChina\n25\n3.12\n\
    12.76\n10\nChinese Academy of Sciences\nChina\n23\n2.87\n13\n8\nSeoul National\
    \ University of Science and Technology\nSouth Korea\n20\n2.49\n26.75\n8\nXidian\
    \ University\nChina\n20\n2.49\n11.15\n8\nPennsylvania Commonwealth System of Higher\
    \ Education\nUSA\n18\n2.24\n9.5\n8\nTsinghua University\nChina\n18\n2.24\n16.11\n\
    6\nComsats University Islamabad (CUI)\nPakistan\n17\n2.12\n9.82\n6\nUniversity\
    \ System of Georgia\nUSA\n16\n2\n10.13\n7\n6\nMathematical Problems in Engineering\n\
    and one institution from Norway. It is worth noting that\nChina is in the leading\
    \ position in terms of institutional\ninﬂuence.\nAs an important aspect of bibliometric\
    \ studies, co-au-\nthorship analysis aims to explore the level of research col-\n\
    laborative strength in a speciﬁc ﬁeld [23]. Figure 4 depicts\nvisualization of\
    \ the institutions’ co-authorship network,\nwhere the minimum number of documents\
    \ for inclusion in\nthe ﬁgure is 5. Among the 1073 institutions, 84 meet the\n\
    threshold. Te size of the circle represents the number of\npublications. Te connection\
    \ between the two institutions\nrepresents a cooperative relationship. Figure\
    \ 4 clusters the\ninstitutions into ten groups coded with diﬀerent colors.\nBeijing\n\
    University\nof\nPosts\nand\nTelecommunications\n(TLS \x88 41) is at the center\
    \ of cooperation and has the\nstrongest co-authorship network, followed by the\
    \ University\nof Electronic Science and Technology of China (TLS \x88 37)\nand\
    \ King Saud University (TLS \x88 31). Considering the links\nbetween the two institutions,\
    \ the strongest co-authorship\ncollaboration exists between Temple University\
    \ and Qatar\nUniversity (LS \x88 8) followed by Temple University and\nUniversity\
    \ of Electronic Science and Technology of China\n(LS \x88 6) and by Chinese Academy\
    \ of Sciences and University\nof Chinese Academy of Sciences (TLS \x88 6).Te ﬁgure\
    \ reveals\nthat although institutions in geographic proximity are more\nclosely\
    \ linked, geographical advantage is not the main factor\ninﬂuencing interinstitutional\
    \ cooperation as international\nacademic exchanges become more frequent.\n3.4.\
    \ Analysis of Key Countries/Regions. A total of 72 coun-\ntries are active in\
    \ the ﬁeld of BIoTresearch. Figure 5 displays\nthe top 10 countries/regions in\
    \ the world in terms of number\nof publications and citations. China published\
    \ the highest\nnumber of literature items (337 articles), followed by the\nUnited\
    \ States (141), South Korea (100), India (77), and\nEngland (71). China’s literature\
    \ items received a total of 4306\ncitations as the highest citation number of\
    \ all countries,\nfollowed by the USA (3200), South Korea (1339), England\n(968),\
    \ and India (954). As can be seen, the number of\npublications and citations in\
    \ China and the United States is\nmuch higher than in other countries. Tis reveals\
    \ that China\nand the USA have been at the forefront of the world in BIoT\nresearch\
    \ and are likely to lead the development of global\nBIoT in the next decade.\n\
    Co-authorship collaboration among countries is shown\nin Figure 6, which displays\
    \ countries with more than ﬁve\narticles. Of the 72 countries, 37 meet the inclusion\
    \ criteria.\nTe countries are grouped into 6 clusters of diﬀerent colors.\nChina\
    \ (TLS \x88 294) is at the center of collaboration and has\nthe most cooperation\
    \ with other countries. Te countries\nthat have close cooperation with China mainly\
    \ include the\nUSA (LS \x88 69), England (LS \x88 22), Australia (LS \x88 19),\
    \ and\nCanada (LS \x88 17). Te USA (TLS \x88 171) is the second largest\nco-authorship\
    \ country, and its main partners are China\n(LS \x88 69), England (LS \x88 27),\
    \ Australia (LS \x88 26), and Can-\nada (LS \x88 18). Tis indicates that collaboration\
    \ between\ncountries can increase the amount of publications in\ncomparison to\
    \ publications from a single country. In ad-\ndition, it is worth mentioning that\
    \ the collaboration between\nChina and the United States is the most intensive.\n\
    3.5. Analysis of Popular Journals. A total of 164 journals are\npertinent to the\
    \ ﬁeld of BIoT research. Table 5 depicts the\nbasic information of the top 10\
    \ most productive journals.\nAmong them, IEEE Access (110) had the greatest number\
    \ of\npublications, accounting for 13.71%. It was followed by IEEE\nInternet of\
    \ Tings Journal (74) and Sensors (65), accounting\nfor 9.23% and 8.1%, respectively.\
    \ IEEE Access had not only\npublished most articles but also had the largest number\
    \ of\ntotal citations (2578). However, from the perspective of\naverage citation,\
    \ Future Generation Computer Systems had\nthe highest number of average citations\
    \ (36.71), followed by\nIEEE Transactions on Industrial Informatics (25.84) and\n\
    IEEE Access (23.44). In terms of the h-index, IEEE Access\nagain led Table 5 with\
    \ the highest h-index (21), while IEEE\nInternet of Tings Journal (17) obtained\
    \ the second position\n424\n430\n430\n437\n473\n488\n504\n556\n717\n1003\n0\n\
    200\n400\n600\n800\n1000\n1200\nUniversity of Oslo\nKhalifa University of Science\
    \ and Technology\nBahauddin Zakariya University\nGuangDong University of Technology\n\
    King Saud University\nNational University of Defense Technology\nMacau University\
    \ of Science and Technology\nSun Yat Sen University\nBeijing University of Posts\
    \ and…\nNorth Carolina State University\nTotal citations of publications\nFigure\
    \ 3: Top 10 highly cited institutions.\nMathematical Problems in Engineering\n\
    7\nVellore inst technol\nUniv guelph\nTapar inst engn and technol\nSoutheast univ\n\
    Shenzhen univ\nQufu normal univ\nMenouﬁa univ\nKennesaw state univ\nInt inst informat\
    \ technol\nHuazhong univ sci and technol\nChina med univ\nSungkyunkwan univ\n\
    Shaanxi normal univ\nKing abdulaziz univ\nGeorgia state univ\nUniv chinese acad\
    \ sci\nSun yat sen univ\nPeng cheng lab\nChangsha univ sci and technol\nAsia univ\n\
    Univ glasgow\nNanjing univ informat sci and te\nCsiro\nFudan univ\nGuangdong univ\
    \ technol\nUniv texas san antonio\nComsats univ islamabad\nHong kong polytech\
    \ univ\nSeoul natl univ sci and technol\nQatar univ\nTemple univ\nTsinghua univ\n\
    Chinese acad sci\nKing saud univ\nBeijing univ posts and telecommu\nFigure 4:\
    \ Co-authorship network of institutions.\n0\n50\n100\n150\n200\n250\n300\n350\n\
    400\nNumber of publications\nUSA\nSouth\nKorea\nEngland\nIndia\nAustralia Canada\n\
    Saudi\nArabia\nPakistan Taiwan\nChina\n(a)\n0\n500\n1000\n1500\n2000\n2500\n3000\n\
    3500\nUSA\nSouth\nKorea\nEngland\nIndia\nAustralia Pakistan\nSpain\nCanada\nUnited\n\
    Arab\nEmirates\nTotal citations of publications\n(b)\nFigure 5: (a) Number of\
    \ Publications; (b) total citations of publications.\n8\nMathematical Problems\
    \ in Engineering\nfollowed by IEEE Transactions on Industrial Informatics\n(16).\n\
    We now turn to the analysis of co-citation network of\njournals. Co-citation of\
    \ journals occurs when two docu-\nments of two diﬀerent journals are cited from\
    \ the same third\npublication [42]. Te more often two journals are cited in the\n\
    same document, the stronger their relatedness. In this study,\nthe co-citation\
    \ analysis of journals with a minimum of 50\ncitations is considered. Only 100\
    \ journals out of 13320 co-\ncited sources meet this criterion. As shown in Figure\
    \ 7, the\njournals are grouped into 4 clusters using 4 colors. IEEE\nAccess tops\
    \ Figure 6 with 62676 total link strengths, followed\nby IEEE Internet of Tings\
    \ Journal (TLS \x88 43272) and\nLecture\nNotes\nin\nComputer\nScience\n(TLS \x88\
    \ 29719).\nAccording to the journal collaboration network, the most\nfrequent\
    \ interactions are between IEEE Access and IEEE\nInternet of Tings Journal (LS\
    \ \x88 6736) followed by IEEE\nAccess\nand\nFuture\nGeneration\nComputer\nSystems\n\
    (LS \x88 3737), and by IEEE Access and IEEE Communications\nSurveys and Tutorials\
    \ (LS \x88 3372).\n4. Hot Issues, Research Trends, and Limitations\n4.1. Hot Issues.\
    \ Keyword co-occurrence can provide insights\ninto the research hotspots in a\
    \ certain discipline, revealing\nthe research frontiers of the subject. In this\
    \ study, the co-\noccurrence of author keywords is analyzed. Te minimum\nnumber\
    \ of occurrences of a keyword is set to 5, and 102 out\nof 1907 keywords meet\
    \ this threshold. In Figure 8, these\nkeywords are grouped into 8 colored clusters\
    \ according to\nSlovenia\nAlgeria\nIreland\nTurkey\nSweden\nIran\nGreece\nEgypt\n\
    Norway\nRussia\nPortugal\nQatar\nFinland\nSingapore\nGermany\nMalaysia\nJapan\n\
    France\nBrazil\nU arab emirates\nSpain\nItaly\nTaiwan\nPakistan\nSaudi arabia\n\
    Australia\nSouth korea\nUsa\nPeoples r china\nFigure 6: Co-authorship network\
    \ of countries.\nTable 5: Top 10 most productive journals.\nJournal\nTP\n%802\n\
    TC\nAC\nh-index\nIEEE Access\n110\n13.71\n2578\n23.44\n21\nIEEE Internet of Tings\
    \ Journal\n74\n9.23\n1152\n15.57\n17\nSensors\n65\n8.1\n484\n13.05\n13\nIEEE Transactions\
    \ on Industrial Informatics\n37\n4.61\n956\n25.84\n16\nFuture Generation Computer\
    \ Systems\n31\n3.87\n1138\n36.71\n13\nElectronics\n27\n3.37\n116\n4.3\n6\nIEEE\
    \ Network\n24\n2.99\n203\n8.46\n9\nApplied Sciences-Basel\n17\n2.12\n84\n4.94\n\
    6\nSustainability\n15\n1.87\n80\n5.33\n4\nTransactions on Emerging Telecommunications\
    \ Technologies\n14\n1.75\n47\n3.36\n4\nMathematical Problems in Engineering\n\
    9\nthe similarity of research ﬁelds. Te high-frequency key-\nwords reﬂect relevant\
    \ research hotspots and tendencies. Te\n15 most frequent keywords are “blockchain”\
    \ (582 occur-\nrences), “Internet of things” (462 occurrences), “security”\n(119\
    \ occurrences), “smart contract” (99 occurrences), “edge\ncomputing” (61 occurrences),\
    \ “industrial Internet of things”\n(59 occurrences), “privacy” (51 occurrences),\
    \ “cloud com-\nputing” (42 occurrences), “fog computing” (37 occurrences),\n“access\
    \ control” (35 occurrences), “smart city” (31), “in-\ndustry 4.0” (30 occurrences),\
    \ “authentication” (28 occur-\nrences), “peer-to-peer computing” (25 occurrences),\
    \ and\n“bitcoin” (24 occurrences). It is worth mentioning that the\nstrongest\
    \ co-occurrence networks are between “blockchain”\nand “Internet of things” (LS\
    \ \x88 198), followed by between\n“blockchain”\nand\n“security”\n(LS \x88 107).\n\
    According\nto\nTable 6, the potentially hot issues around BIoT research can\n\
    be categorized into four aspects: security issues, core tech-\nnologies, application\
    \ dimensions, and transaction processes.\n4.1.1. Security Issues. Since a typical\
    \ IoT deployment con-\ntains heterogeneous devices with embedded sensors through\n\
    interconnected networks, it inherits the drawbacks of\nconventional\ncomputer\n\
    networks\nrelated\nto\nsecurity\nvulnerabilities and privacy risks [38]. As a\
    \ decentralized and\ndistributed ledger technology, blockchain can satisfy the\n\
    security requirements and promote the development of\nsecure IoT applications,\
    \ such as anonymous authentication,\naudit capability, and conﬁdentiality. It\
    \ highlights the scal-\nability capacity that comes with smart contracts [10,\
    \ 11].\nWithin the blockchain network, smart contracts stored on\nthe blockchain\
    \ have a unique address, and users trigger a\nsmart contract by sending a transaction\
    \ to this address. Te\ncontractual clauses are then executed independently and\n\
    automatically. Blockchain can secure communications be-\ntween devices validated\
    \ through smart contracts [43]. Smart\ncontracts will enrich the IoT by providing\
    \ a secure and\nreliable processing engine which records and manages all\ntheir\
    \ interactions. With smart contracts, blockchain has the\npotential to improve\
    \ the security of IoT applications.\nOne of the key challenges for IoTapplications\
    \ is privacy,\nmainly due to the large scale and distributed nature of IoT\nnetworks.\
    \ Te blockchain can alleviate the problem through\nadvanced cryptography technologies\
    \ [44]. As an important\npart of blockchain technology, consensus mechanisms are\n\
    not only responsible for the integrity of the information\ncontained in the blockchain\
    \ but also help defend against\ndouble-spending\nattacks\n[10].\nOn\nthe\nother\n\
    hand,\nEthereum proj\nFinanc innov\nCorr\nPlos one\nJ ind inf integr\nWireless\
    \ pers commun\nRenew sust energ rev\nCluster comput\nAppl sci-basel\nP ieee\n\
    Energies\nInt j inform manage\nIeee t wirel commun\n2017 ieee international confer\n\
    Ieee t parall distr\nSustainability-basel\nIeee t smart grid\nComput secur\nProcedia\
    \ comput sci\nIeee t depend secure\nIeee t inf foren sec\nComput commun\nTesis\n\
    Ad hoc netw\nJ med syst\nTech rep\nInt j prod res\nIeee wirel commun\nIeee t veh\
    \ technol\nComputer\nP ieee s secur priv\nIeee network\nBitcoin peer to peer\n\
    Sensors-basel\nIeee t ind inform\nFuture gener comp sy\nLect notes comput sc\n\
    Ieee internet things\nIeee access\nFigure 7: Co-citation network of journals.\n\
    10\nMathematical Problems in Engineering\nblockchain-based identity authentication\
    \ and access control\ntechniques can be leveraged to enhance IoT security. For\n\
    example, the blockchain is applied to implement permitted\naccess control for\
    \ devices in the IoT to securely track data\nmanagement and prevent malicious\
    \ access [45]. Blockchains\ncan provide trusted distributed authentication and\
    \ stronger\ndefense against attacks from IoT applications, as the man-\nagement\
    \ of certiﬁcate data is done on the blockchain, so it is\nnot possible for an\
    \ attacker to inject fake signatures into the\nrecord [5, 12].\n4.1.2. Core Technologies.\
    \ Te increase in the number of IoT\ndevices has resulted in a large number of\
    \ IoT terminals.\nTerefore, a signiﬁcant portion of computing power at\nterminals\
    \ based on blockchain technology would inevitably\nbe consumed. Cloud computing\
    \ allows for centralized data\nprocessing, where the big data generated by distributed\n\
    sensors are transmitted to a cloud computing data center\nthrough the network.\
    \ Tese data are centrally processed and\nstored, leveraging the computational\
    \ power of the cloud\nplatform. Using cloud computing and big data, blockchain-\n\
    Smart home\nInternet of vehicles\nHyperledger fabric\nConsensus mechanism\nSofware\
    \ deﬁned networking\nNetwork security\nData security\nArchitecture\nResource management\n\
    Optimization\nMobile edge computing\nEncryption\nDelays\nBlockchains\nPrivacy\
    \ protection\nIot security\nIndustries\nIndustrial iot\nIiot\nComputational modeling\n\
    Trust management\nServers\nCryptocurrency\nConsensus algorithm\n5g\nReliability\n\
    Privacy-preserving\nDecentralization\nData sharing\nCybersecurity\nSupply chain\n\
    Industry 4.0\nTrust\n0\nMachine learning\nSmart city\nScalability\nComputer architecture\n\
    Ethereum\nCryptography\nBitcoin\nAuthentication\nFog computing\nCloud computing\n\
    Smart contract\nInternet of things (iot)\nIot\nBlockchain\nFigure 8: Co-occurrence\
    \ network of author keywords.\nTable 6: Main research categories in the ﬁeld of\
    \ BIoT.\nCategory\nRepresentative keywords\nSecurity issues\nSecurity (119), smart\
    \ contract (99), privacy (51), access control (35), authentication (28), cryptography\
    \ (22), trust\n(16), consensus (16), distributed ledger technology (14), decentralization\
    \ (12)\nCore technologies\nEdge computing (61), cloud computing (42), fog computing\
    \ (37), peer-to-peer computing (25), computer\narchitecture (18), machine learning\
    \ (17), artiﬁcial intelligence (17), consensus algorithm (10), computational\n\
    modelling (9)\nApplication\ndimensions\nIndustrial Internet of things (59 occurrences),\
    \ smart city (31), industry 4.0 (30 occurrences), healthcare (17), supply\nchain\
    \ (14), smart grid (11), 5 g (10), smart home (6), energy trading (6), Internet\
    \ of vehicles (6)\nTransaction processes Smart contract (99), bitcoin (24), Ethereum\
    \ (21), protocols (15), cryptocurrency (10), servers (10), task analysis (9)\n\
    Mathematical Problems in Engineering\n11\nbased cloud platforms for IoTdevice\
    \ management can adopt\nmore eﬃcient cryptographic algorithms and leverage dis-\n\
    tributed capabilities to ensure low latency and high\nthroughput\nin\ndata\nmanagement\n\
    [46].\nFurthermore,\nblockchain technology as a distributed ledger and the\ndecentralized\
    \ edge computing model has also revolutionized\nthe IoT by adding a new layer\
    \ between cloud computing and\nIoT devices. Edge computing brings the cloud capabilities\n\
    closer to the computation tasks. Te convergence of\nblockchain and edge computing\
    \ paradigms can overcome\nthe security and scalability issues of IoT [47].\nTe\
    \ diversiﬁcation and the rapid increase of IoT devices\nlead to many identity\
    \ authentication tasks, causing the users\nto wait too long. With the development\
    \ of cloud computing,\nedge computing, and fog computing, among others, these\n\
    technologies can not only achieve eﬀective identity au-\nthentication but also\
    \ guarantee the security and reliability of\ndata information. For example, edge\
    \ computing can im-\nprove the capability of data caching and computing. Based\n\
    on edge computing, the delay-tolerant computing tasks can\nbe oﬄoaded to a closer\
    \ edge computing server, and then\nmore computing tasks can be selectively accommodated\
    \ and\nexecuted on the local device, edge computing server, or\ncloud computing\
    \ server according to the current network\nstates and network environments [48].\
    \ Compared with the\ntraditional IoT architecture, this can reduce the end-to-end\n\
    delay between IoTdevices and computing resources, thereby\nfacilitating IoT service\
    \ provisioning.\n4.1.3. Application Dimensions. By providing a secure open\ncommunication\
    \ platform, BIoT can oﬀer many possible\napplications for smart cities such as\
    \ smart home, smart\nmanagement, and smart gadgets [49]. Smart cities can\nimprove\
    \ the eﬃciency of resource utilization, optimize city\nmanagement and services,\
    \ and make city life easier by\nexploiting data collection sensors to transmit\
    \ information.\nOne smart city BIoTapplication is detailed in [50], where the\n\
    use of blockchain technology is analyzed in diﬀerent smart\ncity business models.\n\
    Te energy sector can also beneﬁt from the application of\nBIoT. In [51], a prototype\
    \ implementation using the\nEthereum platform, a smart energy grid capable of\
    \ timely\nadjustment of the energy demand by enacting the expected\nenergy ﬂexibility\
    \ levels and validating all demand response\nprotocols is analyzed. In [52], a\
    \ decentralized privacy-pre-\nserving healthcare blockchain application for IoT\
    \ is pro-\nposed. Te results showed that IoT application data and\ntransactions\
    \ are more secure and anonymous over a\nblockchain-based network. In [53], various\
    \ mechanisms\nwere illustrated whereby blockchain helps achieve the key\nsupply\
    \ chain management objectives such as cost, quality,\nspeed, dependability, risk\
    \ reduction, sustainability, and\nﬂexibility. In addition, there are some other\
    \ application\nscenarios of BIoT, e.g., industry 4.0 [54], 5G [55], Internet of\n\
    vehicles [56], global value chains [57], Stock Trade [58], and\nsmart grid [59].\n\
    4.1.4. Transaction Processes. Blockchain can accelerate the\ncreation of services\
    \ and data marketplaces for the IoT\necosystem, where transactions between peers\
    \ can be carried\nout without the need for trusted parties. Bitcoin, the ﬁrst\n\
    cryptocurrency, is also the most popular application that\nruns on top of the\
    \ blockchain platform. In general, the\nbitcoin blockchain provides a secure payment\
    \ mechanism to\ncarry out monetary transactions in a fast, cheap, and reliable\n\
    manner. However, its poor scalability limits its use [3].\nEthereum is currently\
    \ the most popular blockchain-based\nplatform built for creating smart contracts.\
    \ It focuses more\non running programming codes and a consensus-based\nvirtual\
    \ machine (Ethereum Virtual Machine). Diﬀerent\nfrom transactions in the bitcoin\
    \ blockchain, which tracks the\ntransfer of ownership of cryptocurrencies, the\
    \ Ethereum\nblockchain performs state transitions under an account-\nbased system\
    \ which consists of two types of accounts, ex-\nternally owned accounts controlled\
    \ by private keys and\ncontract accounts controlled by codes in contracts [4,\
    \ 60].\nMore importantly, the Ethereum blockchain implements\nsmart contracts,\
    \ which are computerized transaction pro-\ntocols that execute the terms of the\
    \ contract. IoTdevices can\nleverage these capabilities to carry out autonomous\
    \ trans-\nactions through smart contracts. Te inclusion of smart\ncontracts makes\
    \ the potential space for Ethereum blockchain\nin IoT immense and endless [61].\
    \ Note that similar smart-\ncontract blockchain platforms have recently emerged,\
    \ such\nas Hyperledger [62], BigchainDB [63], Stellar [64], and\nTendermint [65].\n\
    4.2. Research Trends. A bibliometric analysis can provide an\nindication of potential\
    \ research trends and identify possible\nﬁelds of future progress and engagement.\
    \ Te purpose of this\nsection is to highlight some priorities for further research\n\
    using text mining analysis to better understand the research\ntrends in the ﬁeld\
    \ of BIoT. Te text mining functionality of\nVOSviewer oﬀers support for creating\
    \ term maps based on a\ncorpus of documents. A term map is a two-dimensional map\n\
    in which terms are located in such a way that the distance\nbetween two terms\
    \ indicates the relatedness of the terms,\nwhich in turn is determined through\
    \ the co-occurrences in\ndocuments [66]. Figure 9 presents an overlay visualization\n\
    term map using terms extracted from the title and abstracts\nof a corpus of academic\
    \ publications in the ﬁeld of BIoT. A\nfull counting method has been chosen, and\
    \ the minimum\nnumber of occurrences of a term is set to 35. Of the 16309\nterms,\
    \ 143 meet this threshold. For each of the 143 terms, a\nrelevance score is calculated.\
    \ Based on this score, the 86 most\nrelevant terms are selected.\nIn Figure 9,\
    \ the color of a term is determined by the score\nof the term, where by default\
    \ the colors range from blue\n(lowest score) to green to yellow (highest score).\
    \ As can be\nseen, prominent terms in this area include “edge comput-\ning,” “algorithm,”\
    \ “cost,” “block,” “protocol,” “perfor-\nmance,”\n“simulation\nresult,”\n“big\n\
    data,”\n“artiﬁcial\nintelligence,” “iiot,” “communication,” “feasibility,” “trace-\n\
    ability,” “transparency,” and so on. Terefore, it is likely that\n12\nMathematical\
    \ Problems in Engineering\nfuture research directions for BloT will focus more\
    \ on both\ncomputing paradigms and key applications.\nIn terms of computing paradigms,\
    \ traditional cloud\ncomputing is unable to meet the real-time and eﬃcient\ndata\
    \ processing requirements due to the situations of\nlimited bandwidth and increased\
    \ network latency. For\nthese reasons, in recent years, cloud computing has\n\
    evolved towards more complex edge computing and fog\ncomputing. Edge computing\
    \ pertains to data processing at\nthe edge of the network close to the data source.\
    \ It has\ngained considerable popularity in academic and industrial\ncircles because\
    \ of its ability to provide low latency, high\nbandwidth, and location awareness\
    \ support for latency-\nsensitive applications [67]. Extensive simulation results\n\
    with diﬀerent parameters show that edge computing has\nmore advantages and eﬀectiveness\
    \ compared with cloud\ncomputing [48]. Fog computing, which seamlessly inte-\n\
    grates edge devices and cloud resources, is a distributed\nparadigm that provides\
    \ cloud-like services to the network\nedge. It can signiﬁcantly alleviate the\
    \ traﬃc in the core\nnetwork and potentially accelerate big data processing.\n\
    Fog computing solves the requirements of widely dis-\ntributed applications that\
    \ require low latency [68, 69]. As\ndiscussed, future research will focus more\
    \ on the per-\nformance of fog and edge computing in BIoTapplications.\nDespite\
    \ the promising beneﬁts and the exciting future of\nedge and fog computing, there\
    \ are signiﬁcant challenges\nin security and privacy, system integration, and\
    \ resource\nmanagement [70]. Tese challenges will also trigger more\nresearch\
    \ on related topics.\nRegarding corresponding BIoT-based applications, fu-\nture\
    \ research directions are likely to concentrate on the\ntopics of artiﬁcial intelligence,\
    \ big data, communication, and\nindustrial IoT (IIoT), etc. Te convergence of\
    \ blockchain\nand artiﬁcial intelligence in the IoT network will be an\nimportant\
    \ area of future research and is revolutionizing the\nsmart city network architecture\
    \ to build sustainable eco-\nsystems [71]. It has the potential to provide real-time\
    \ cost-\neﬃcient solutions for several applications such as healthcare,\nsmart\
    \ grid surveillance, smart city monitoring, and border\nsurveillance [72]. As\
    \ IoT applications become sophisticated,\nIoT big data management in a centralized\
    \ architecture be-\ngins to suﬀer from single points of failure, poor scalability,\n\
    high latency, and privacy issues. Te blockchain can provide\na continued integrity\
    \ service for IoT big data management\nby identity, tamper-proof, fault-tolerant,\
    \ conﬁdentiality, etc.\n[73].\nAnother key BIoT application is related to communi-\n\
    cation domains. Te blockchain is providing new insights\nand addressing some of\
    \ the main challenges of many\ncommunication areas. For example, the blockchain\
    \ can\nestablish connections to various 5G networks and assist 5G\nnetworks to\
    \ select the quickest access node for every user\n[74]. Tere is clear evidence\
    \ that BIoTapplications will play a\nmajor role in regard to IIoT in the future.\
    \ As many re-\nsearchers have observed, BIoT can revolutionize most of the\ncurrent\
    \ and future industrial applications in diﬀerent sectors\nthrough the provision\
    \ of a decentralized architecture [75]. In\nparticular, the integration of blockchain\
    \ with the IIoTwill be\na key enabler for many future technologies [76]. In the\n\
    Privacy issue\nBitcoin\nTird party\nFeasibility\nArtiﬁcial intelligence\nCryptocurrency\n\
    Recent year\nEﬀectiveness Availability\nSimulation result\nSecurity analysis\n\
    Literature\nPatient\nBig data\nUse case\nResearcher\nDecentralization\nContext\n\
    Transparency\nBlockchain network\nWorld\nOpportunity\nEdge\nIot application\n\
    Iot network\nSupply chain\nLimitation\nExperiment\nTraceability\nQuality\nAspect\n\
    Access control\nPeer\nProof\nBlock\nIndustrial internet\nIntegration\nConcept\n\
    Smart city\nReview\nInfrastructure\nStorage\nAuthentication\nArea\nIiot\nUse\n\
    Edge computing\nSurvey\nResearch\nCost\nVehicle\nCommunication\nResource\nStudy\n\
    Smart contract\nPerformance\nProtocol\nIndustry\nUser\nAlgorithm\nAttack\nIot\
    \ device\nNode\nMechanism\nBlockchain technology\nScheme\nChallenge\nApplication\n\
    Device\nTechnology\nData\nBlockchain\n0.0\n0.2\n0.4\n0.6\n0.8\n1.0\nFigure 9:\
    \ Term map based on publications.\nMathematical Problems in Engineering\n13\n\
    future, industrial BIoT applications will be an active ﬁeld of\nresearch and hold\
    \ important technical promise.\n4.3. Limitations. Although the ﬁndings of this\
    \ study are\nhelpful for researchers to understand the current progress,\nhot\
    \ spots, and future directions in the ﬁeld of BIoT-related\nresearch, some limitations\
    \ should be addressed. One limi-\ntation lies on the retrieval scope (SSCI and\
    \ SCIE databases in\nWoS Core Collection), resulting in some important con-\n\
    ference papers not being included. Other databases can be\nadded in the future\
    \ to verify the robustness of this study.\nAnother limitation is that it included\
    \ only articles written in\nEnglish, which may lead to an underestimation regarding\n\
    some important literature published in other languages.\n5. Conclusions\nIn this\
    \ article, we explore the recent progress in the ﬁeld of\nBIoT-related research\
    \ based on bibliometric analysis of\npublications in 2016-2020. Statistical results\
    \ show a signif-\nicant increase in the number of annual BIoT-related pub-\nlications,\
    \ peaking in 2020. China and the USA are the most\nproductive and inﬂuential countries\
    \ with the most publi-\ncations, the highest citations, and the most cooperative\n\
    countries. Te keywords co-occurrence analysis indicates\nthat hot issues around\
    \ BIoTresearch can be categorized into\nfour areas: security issues, core technologies,\
    \ application\ndimensions, and transaction processes. According to the text\n\
    mining analysis, the future research direction of BloT will\nfocus more on computing\
    \ paradigms and key applications.\nHowever, the results obtained can help researchers\
    \ to delve\ndeeper into the speciﬁc areas of this theme and oﬀer the\npossibility\
    \ of expanding collaboration for future researchers.\nData Availability\nTe data\
    \ used to support the ﬁndings of the study are\navailable within the article.\n\
    Conflicts of Interest\nTe authors declare that they have no conﬂicts of interest.\n\
    Acknowledgments\nTis work was supported in part by the National Social\nScience\
    \ Fund of China under grant no. 16BJY087.\nReferences\n[1] D. E. Kouicem, A. Bouabdallah,\
    \ and H. Lakhlef, “Internet of\nthings security: a top-down survey,” Computer\
    \ Networks,\nvol. 141, no. 8, pp. 199–221, 2018.\n[2] Cisco, “Cisco annual internet\
    \ report,” White paper, vol. 13,\npp. 1–35, 2020.\n[3] T. M. Fernandez-Carames\
    \ and P. Fraga-Lamas, “A review on\nthe use of blockchain for the internet of\
    \ things,” IEEE Access,\nvol. 6, pp. 32979–33001, 2018.\n[4] A. Reyna, C. Mart´ın,\
    \ J. Chen, E. Soler, and M. D´ıaz, “On\nblockchain and its integration with IoT.\
    \ Challenges and\nopportunities,” Future Generation Computer Systems, vol. 88,\n\
    no. 11, pp. 173–190, 2018.\n[5] X. Wang, X. Zha, W. Ni et al., “Survey on blockchain\
    \ for\ninternet of things,” Computer Communications, vol.136, no. 2,\npp. 10–29,\
    \ 2019.\n[6] Q. Wang, X. Zhu, Y. Ni, L. Gu, and H. Zhu, “Blockchain for\nthe IoT\
    \ and industrial IoT: a review,” Internet of Tings,\nvol. 10, no. 6, Article ID\
    \ 100081, 2020.\n[7] S. Nakamoto, Bitcoin: a peer-to-peer electronic cash system\n\
    https://bitcoin.org/bitcoin.pdf, 2009.\n[8] J. Yli-Huumo, D. Ko, S. Choi, S. Park,\
    \ and K. Smolander,\n“Where is current research on blockchain technology? -A\n\
    systematic review,” PLoS One, vol. 11, no. 10, Article ID\ne0163477, 2016.\n[9]\
    \ F. Hawlitschek, B. Notheisen, and T. Teubner, “Te limits of\ntrust-free systems:\
    \ a literature review on blockchain tech-\nnology and trust in the sharing economy,”\
    \ Electronic Com-\nmerce Research and Applications, vol. 29, pp. 50–63, 2018.\n\
    [10] F. J. de Haro-Olmo, A. J. Varela-Vaca, and J. A. Alvarez-\nBermejo, “Blockchain\
    \ from the perspective of privacy and\nanonymisation: a systematic literature\
    \ review,” Sensors\n(Basel), vol. 20, no. 24, Article ID 7765152, 2020.\n[11]\
    \ P. Patil, M. Sangeetha, and V. Bhaskar, “Blockchain for IoT\naccess control,\
    \ security and privacy: a review,” Wireless\nPersonal Communications, vol. 117,\
    \ no. 1, pp. 1–20, 2020.\n[12] N. Kshetri, “Can blockchain strengthen the internet\
    \ of\nthings?” IT Professional, vol. 19, no. 4, pp. 68–72, 2017.\n[13] K. Christidis\
    \ and M. Devetsikiotis, “Blockchains and smart\ncontracts for the internet of\
    \ things,” IEEE Access, vol. 4,\npp. 2292–2303, 2016.\n[14] M. C. K. Khalilov\
    \ and A. Levi, “A survey on anonymity and\nprivacy in bitcoin-like digital cash\
    \ systems,” IEEE Commu-\nnications Surveys & Tutorials, vol. 20, no. 3, pp. 2543–2585,\n\
    2018.\n[15] M. Guti´errez-Salcedo, M. ´A. Mart´ınez, J. A. Moral-Munoz,\nE. Herrera-Viedma,\
    \ and M. J. Cobo, “Some bibliometric\nprocedures for analyzing and evaluating\
    \ research ﬁelds,”\nApplied Intelligence, vol. 48, pp. 1275–1287, 2017.\n[16]\
    \ W. Iqbal, J. Qadir, G. Tyson, A. N. Mian, S.-u. Hassan, and\nJ. Crowcroft, “A\
    \ bibliometric analysis of publications in\ncomputer networking research,” Scientometrics,\
    \ vol. 119,\nno. 2, pp. 1121–1155, 2019.\n[17] D. R. Raban and A. Gordon, “Te\
    \ evolution of data science\nand big data research: a bibliometric analysis,”\
    \ Scientometrics,\nvol. 122, no. 3, pp. 1563–1581, 2020.\n[18] S. H. Zyoud et\
    \ al., “Global research trends in microbiome-gut-\nbrain axis during 2009-2018:\
    \ a bibliometric and visualized\nstudy,” BMC Gastroenterology, vol. 19, no. 1,\
    \ Article ID\n6716890, 2019.\n[19] S. H. Zyoud, “Global scientiﬁc trends on aﬂatoxin\
    \ research\nduring 1998-2017: a bibliometric and visualized study,”\nJournal of\
    \ Occupational Medicine and Toxicology, vol. 14,\nArticle ID 6873441, 2019.\n\
    [20] H. Guo, “Bibliometric analysis of internet of things based on\nCiteSpace,”\
    \ IE&EM, vol. 2019, pp. 276–283, 2020.\n[21] D. Yu, W. Wang, W. Zhang, and S.\
    \ Zhang, “A bibliometric\nanalysis of research on multiple criteria decision making,”\n\
    Current Science, vol. 114, no. 4, pp. 747–758, 2018.\n[22] Z.-C. Li, H.-J. Huang,\
    \ and H. Yang, “Fifty years of the bot-\ntleneck model: a bibliometric review\
    \ and future research\ndirections,” Transportation Research Part B: Methodological,\n\
    vol. 139, pp. 311–342, 2020.\n14\nMathematical Problems in Engineering\n[23] H.\
    \ Liao, M. Tang, L. Luo, C. Li, F. Chiclana, and X.-J. Zeng, “A\nbibliometric\
    \ analysis and visualization of medical big data\nresearch,” Sustainability, vol.\
    \ 10, no. 1, pp. 1–18, 2018.\n[24] A. Firdaus, M. F. A. Razak, A. Feizollah, I.\
    \ A. T. Hashem,\nM. Hazim, and N. B. Anuar, “Te rise of “blockchain”:\nbibliometric\
    \ analysis of blockchain study,” Scientometrics,\nvol. 120, no. 3, pp. 1289–1331,\
    \ 2019.\n[25] M. Dabbagh, M. Sookhak, and N. S. Safa, “Te evolution of\nblockchain:\
    \ a bibliometric study,” IEEE Access, vol. 7,\npp. 19212–19221, 2019.\n[26] B.\
    \ Muessigmann, H. von der Gracht, and E. Hartmann,\n“Blockchain technology in\
    \ logistics and supply chain man-\nagement-A bibliometric literature review from\
    \ 2016 to jan-\nuary 2020,” IEEE Transactions on Engineering Management,\nvol.\
    \ 67, no. 4, pp. 988–1007, 2020.\n[27] G. C. Nobre and E. Tavares, “Scientiﬁc\
    \ literature analysis on\nbig data and internet of things applications on circular\n\
    economy: a bibliometric study,” Scientometrics, vol. 111, no. 1,\npp. 463–492,\
    \ 2017.\n[28] Y. Bouzembrak, M. Kl¨uche, A. Gavai, and H. J. P. Marvin,\n“Internet\
    \ of Tings in food safety: literature review and a\nbibliometric analysis,” Trends\
    \ in Food Science & Technology,\nvol. 94, pp. 54–64, 2019.\n[29] A. Buchan, “Accountability\
    \ and high impact journals in the\nhealth sciences,” Publications, vol. 5, no.\
    \ 1, pp. 1–12, 2017.\n[30] N. M. Modak, “Forty years of computers & chemical engi-\n\
    neering: a bibliometric analysis,” Computers & Chemical\nEngineering, vol. 141,\
    \ Article ID 106978, 2020.\n[31] J. E. Hirsch, “An index to quantify an individual’s\
    \ scientiﬁc\nresearch output,” Proceedings of the National Academy of\nSciences,\
    \ vol. 102, no. 46, pp. 16569–16572, 2005.\n[32] C. Analytics, InCites Indicators\
    \ Handbook https://clarivate.\nlibguides.com/incites_ba, 2020.\n[33] X. Zou, W.\
    \ L. Yue, and H. L. Vu, “Visualization and analysis of\nmapping knowledge domain\
    \ of road safety studies,” Accident\nAnalysis & Prevention, vol. 118, pp. 131–145,\
    \ 2018.\n[34] R. K. Buter, E. C. M. Noyons, M. Van Mackelenbergh, and\nT. Laine,\
    \ “Combining concept maps and bibliometric maps:\nﬁrst explorations,” Scientometrics,\
    \ vol. 66, no. 2, pp. 377–387,\n2006.\n[35] N. J. v. Eck and L. Waltman, “Software\
    \ survey: VOSviewer, a\ncomputer program for bibliometric mapping,” Scientometrics,\n\
    vol. 84, no. 2, pp. 523–538, 2010.\n[36] N. J. V. Eck and L. Waltman, Manual VOSviewer\
    \ https://\nwww.vosviewer.com/documentation/Manual_VOSviewer_1.\n6.15.pdf, 2020.\n\
    [37] N. M. A. M. Nadzar, A. Bakri, and R. Ibrahim, “A bibliometric\nmapping of\
    \ Malaysian publication using Co-word analysis,”\nInternational Journal of Soft\
    \ Computing and Its Applications,\nvol. 9, no. 3, pp. 90–113, 2017.\n[38] M. A.\
    \ Khan and K. Salah, “IoT security: review, blockchain\nsolutions, and open challenges,”\
    \ Future Generation Computer\nSystems, vol. 82, pp. 395–411, 2018.\n[39] Z. Zheng,\
    \ S. Xie, H. N. Dai, X. Chen, and H. Wang,\n“Blockchain challenges and opportunities:\
    \ a survey,” Inter-\nnational Journal of Web and Grid Services, vol. 14, no. 4,\n\
    pp. 352–375, 2018.\n[40] M. M. Kessler, “Bibliographic coupling between scientiﬁc\n\
    papers,” American Documentation, vol. 14, no. 1, pp. 10–25,\n1963.\n[41] A. Perianes-Rodriguez,\
    \ L. Waltman, and N. J. van Eck,\n“Constructing bibliometric networks: a comparison\
    \ between\nfull and fractional counting,” Journal of Informetrics, vol. 10,\n\
    no. 4, pp. 1178–1195, 2016.\n[42] H. Small, “Co-citation in the scientiﬁc literature:\
    \ a new\nmeasure of the relationship between two documents,” Journal\nof the American\
    \ Society for Information Science, vol. 24, no. 4,\npp. 265–269, 1973.\n[43] A.\
    \ S. Patil, “Eﬃcient privacy-preserving authentication pro-\ntocol using PUFs\
    \ with blockchain smart contracts,” Com-\nputers & Security, vol. 97, Article\
    \ ID 101958, 2020.\n[44] Q. S. He, Y. Xu, Z. B. Liu, J. H. He, Y. Sun, and R.\
    \ Zhang, “A\nprivacy-preserving Internet of Tings device management\nscheme based\
    \ on blockchain,” International Journal of Dis-\ntributed Sensor Networks, vol.\
    \ 14, no. 11, Article ID\n155014771880875, 2018.\n[45] P. J. Taylor, T. Dargahi,\
    \ A. Dehghantanha, R. M. Parizi, and\nK.-K. R. Choo, “A systematic literature\
    \ review of blockchain\ncyber security,” Digital Communications and Networks,\
    \ vol. 6,\nno. 2, pp. 147–156, 2020.\n[46] Y. Qian, Y. Jiang, J. Chen et al.,\
    \ “Towards decentralized IoT\nsecurity enhancement: a blockchain approach,” Computers\
    \ &\nElectrical Engineering, vol. 72, pp. 266–273, 2018.\n[47] F. Li, D. Wang,\
    \ Y. Wang et al., “Wireless communications and\nmobile computing blockchain-based\
    \ trust management in\ndistributed internet of things,” Wireless Communications\
    \ and\nMobile Computing, vol. 2020, no. 5, 12 pages, Article ID\n8864533, 2020.\n\
    [48] M. Li, F. R. Yu, P. Si, W. Wu, and Y. Zhang, “Resource\noptimization for\
    \ delay-tolerant data in blockchain-enabled\nIoT with edge computing: a deep reinforcement\
    \ learning\napproach,” IEEE Internet of Tings Journal, vol. 7, no. 10,\npp. 9399–9412,\
    \ 2020.\n[49] C. Ye, W. Cao, and S. Chen, “Security challenges of blockchain\n\
    in Internet of things: systematic literature review,” Transac-\ntions on Emerging\
    \ Telecommunications Technologies, vol. 11,\nArticle ID ett.4177, 2020.\n[50]\
    \ S. Ahmed, M. A. Shah, and K. Wakil, “Blockchain as a trust\nbuilder in the smart\
    \ city domain: a systematic literature re-\nview,” IEEE Access, vol. 8, pp. 92977–92985,\
    \ 2020.\n[51] C. Pop, T. Cioara, M. Antal, I. Anghel, I. Salomie, and\nM. Bertoncini,\
    \ “Blockchain based decentralized management\nof demand response programs in smart\
    \ energy grids,” Sensors\n(Basel), vol. 18, no. 1, Article ID 5796446, 2018.\n\
    [52] A. D. Dwivedi, G. Srivastava, S. Dhar, and R. Singh, “A\ndecentralized privacy-preserving\
    \ healthcare blockchain for\nIoT,” Sensors (Basel), vol. 19, no. 2, Article ID\
    \ 6359727, 2019.\n[53] N. Kshetri, “1 Blockchain’s roles in meeting key supply\
    \ chain\nmanagement objectives,” International Journal of Information\nManagement,\
    \ vol. 39, pp. 80–89, 2018.\n[54] B. Esmaeilian, “Blockchain for the future of\
    \ sustainable supply\nchain management in Industry 4.0,” Resources, Conservation\n\
    and Recycling, vol. 163, no. 12, Article ID 105064, 2020.\n[55] I. Mistry, S.\
    \ Tanwar, S. Tyagi, and N. Kumar, “Blockchain for\n5G-enabled IoT for industrial\
    \ automation: a systematic re-\nview, solutions, and challenges,” Mechanical Systems\
    \ and\nSignal Processing, vol. 135, no. 1, Article ID 106382, 2020.\n[56] U. Javaid,\
    \ M. N. Aman, and B. Sikdar, “A scalable protocol for\ndriving trust management\
    \ in internet of vehicles with\nblockchain,” IEEE Internet of Tings Journal, vol.\
    \ 7, no. 12,\npp. 11815–11829, 2020.\n[57] W. Nikolakis, L. John, and H. Krishnan,\
    \ “How blockchain can\nshape sustainable global value chains: an evidence, veriﬁ-\n\
    ability, and enforceability (EVE) framework,” Sustainability,\nvol. 10, no. 11,\
    \ Article ID 103926, 2018.\n[58] W. Lian, Q. Fan, B. Jia, Y. Liang, and J. P.\
    \ Amezquita-Sanchez,\n“A blockchain prediction model on time, value, and purchase\n\
    based on Markov chain and queuing theory in Stock trade,”\nMathematical Problems\
    \ in Engineering\n15\nMathematical Problems in Engineering, vol. 2020, Article\
    \ ID\n3984924, 13 pages, 2020.\n[59] C. Alcaraz, J. E. Rubio, and J. Lopez, “Blockchain-assisted\n\
    access for federated Smart Grid domains: coupling and fea-\ntures,” Journal of\
    \ Parallel and Distributed Computing, vol.144,\nno. 10, pp. 124–135, 2020.\n[60]\
    \ Y. Yu, Y. Li, J. Tian, and J. Liu, “Blockchain-based solutions to\nsecurity\
    \ and privacy issues in the internet of things,” IEEE\nWireless Communications,\
    \ vol. 25, no. 6, pp. 12–18, 2018.\n[61] S. Wang, L. Ouyang, Y. Yuan, X. Ni, X.\
    \ Han, and F.-Y. Wang,\n“Blockchain-Enabled smart contracts: architecture, applica-\n\
    tions, and future trends,” IEEE Transactions on Systems, Man,\nand Cybernetics:\
    \ Systems, vol. 49, no. 11, pp. 2266–2277, 2019.\n[62] Hyperledger,\nAdvancing\n\
    Business\nBlockchain\nAdoption\nthrough Global Open Source Collaboration https://www.\n\
    hyperledger.org/, 2020.\n[63] BigchainDB,\nTe\nBlockchain\nDatabase\nhttps://www.\n\
    bigchaindb.com/, 2020.\n[64] Stellar, Stellar Is an Open Network for Storing and\
    \ Moving\nMoney https://www.stellar.org/, 2020.\n[65] Tendermint, Building the\
    \ Most Powerful Tools for Distributed\nNetworks https://tendermint.com/, 2020.\n\
    [66] N. J. Van Eck and L. Waltman, “Text mining and visualization\nusing VOSviewer,”\
    \ ISSI Newsletter, vol. 7, no. 3, pp. 50–54,\n2011.\n[67] Z. Xu, W. Liu, J. Huang,\
    \ C. Yang, J. Lu, and H. Tan, “Artiﬁcial\nintelligence for securing IoT services\
    \ in edge computing: a\nsurvey,” Security and Communication Networks, vol. 2020,\n\
    no. 1, 13 pages, Article ID 8872586, 2020.\n[68] X. Huang, D. Ye, R. Yu, and L.\
    \ Shu, “Securing parked vehicle\nassisted fog computing with blockchain and optimal\
    \ smart\ncontract design,” IEEE/CAA Journal of Automatica Sinica,\nvol. 7, no.\
    \ 2, pp. 426–441, 2020.\n[69] P. Kumar, “A Distributed framework for detecting\
    \ DDoS\nattacks in smart contract-based Blockchain-IoT Systems by\nleveraging\
    \ Fog computing,” Transactions on Emerging Tele-\ncommunications Technologies,\
    \ vol. 9, pp. 1–31, 2020.\n[70] Y. Liu, J. Zhang, and J. Zhan, “Privacy protection\
    \ for fog\ncomputing and the internet of things data based on block-\nchain,”\
    \ Cluster Computing, vol. 10, 2020.\n[71] S. Singh, “Convergence of blockchain\
    \ and artiﬁcial intelli-\ngence in IoT network for the sustainable smart city,”\
    \ Sus-\ntainable Cities and Society, vol. 63, no. 12, Article ID 102364,\n2020.\n\
    [72] R. Gupta, A. Kumari, and S. Tanwar, “Fusion of blockchain\nand artiﬁcial\
    \ intelligence for secure drone networking un-\nderlying 5G communications,” Transactions\
    \ on Emerging\nTelecommunications Technologies, vol. 32, no. 1, Article ID\ne4176,\
    \ 2020.\n[73] Y. E. Oktian, S.-G. Lee, and B.-G. Lee, “Blockchain-based\ncontinued\
    \ integrity service for IoT big data management: a\ncomprehensive design,” Electronics,\
    \ vol. 9, no. 9, Article ID\n9091434, 2020.\n[74] G. Praveen, V. Chamola, V. Hassija,\
    \ and N. Kumar,\n“Blockchain for 5G: a prelude to future telecommunication,”\n\
    IEEE Network, vol. 34, no. 6, pp. 106–113, 2020.\n[75] K.-K. R. Choo, Z. Yan,\
    \ and W. Meng, “Editorial: blockchain in\nindustrial IoT applications: security\
    \ and privacy advances,\nchallenges, and opportunities,” IEEE Transactions on\
    \ Indus-\ntrial Informatics, vol. 16, no. 6, pp. 4119–4121, 2020.\n[76] B. Seok,\
    \ J. Park, and J. H. Park, “A lightweight hash-based\nblockchain architecture\
    \ for industrial IoT,” Applied Sciences,\nvol. 9, no. 18, Article ID 9183740,\
    \ 2019.\n16\nMathematical Problems in Engineering\n"
  inline_citation: '>'
  journal: Mathematical Problems in Engineering
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/mpe/2021/5547530.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Application of Blockchain for Internet of Things: A Bibliometric Analysis'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21206910
  analysis: '>'
  authors:
  - Juan S. Angarita-Zapata
  - Ainhoa Alonso-Vicario
  - Antonio D. Masegosa
  - Jon Legarda
  citation_count: 14
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nA Taxonomy of Food Supply Chain Problems from a\n\
    Computational Intelligence Perspective\nJuan S. Angarita-Zapata 1,*\n, Ainhoa\
    \ Alonso-Vicario 1\n, Antonio D. Masegosa 1,2\nand Jon Legarda 1\n\x01\x02\x03\
    \x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Angarita-Zapata,\
    \ J.S.;\nAlonso-Vicario, A.; Masegosa, A.D.;\nLegarda, J. A Taxonomy of Food\n\
    Supply Chain Problems from a\nComputational Intelligence\nPerspective. Sensors\
    \ 2021, 21, 6910.\nhttps://doi.org/10.3390/s21206910\nAcademic Editors: Christian\n\
    Krupitzer, Anthony Stein and\nJanick Edinger\nReceived: 4 September 2021\nAccepted:\
    \ 15 October 2021\nPublished: 18 October 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nDeusto Institute of Technology (DeustoTech), Faculty of Engineering,\
    \ University of Deusto,\n48007 Bilbao, Spain; ainhoa.alonso@deusto.es (A.A.-V.);\
    \ ad.masegosa@deusto.es (A.D.M.);\njlegarda@deusto.es (J.L.)\n2\nIkerbasque, Basque\
    \ Foundation for Science, 48009 Bilbao, Spain\n*\nCorrespondence: js.angarita@deusto.es\n\
    Abstract: In the last few years, the Internet of Things, and other enabling technologies,\
    \ have been\nprogressively used for digitizing Food Supply Chains (FSC). These\
    \ and other digitalization-enabling\ntechnologies are generating a massive amount\
    \ of data with enormous potential to manage supply\nchains more efﬁciently and\
    \ sustainably. Nevertheless, the intricate patterns and complexity embedded\n\
    in large volumes of data present a challenge for systematic human expert analysis.\
    \ In such a data-\ndriven context, Computational Intelligence (CI) has achieved\
    \ signiﬁcant momentum to analyze, mine,\nand extract the underlying data information,\
    \ or solve complex optimization problems, striking a\nbalance between productive\
    \ efﬁciency and sustainability of food supply systems. Although some\nrecent studies\
    \ have sorted the CI literature in this ﬁeld, they are mainly oriented towards\
    \ a single\nfamily of CI methods (a group of methods that share common characteristics)\
    \ and review their\napplication in speciﬁc FSC stages. As such, there is a gap\
    \ in identifying and classifying FSC problems\nfrom a broader perspective, encompassing\
    \ the various families of CI methods that can be applied in\ndifferent stages\
    \ (from production to retailing) and identifying the problems that arise in these\
    \ stages\nfrom a CI perspective. This paper presents a new and comprehensive taxonomy\
    \ of FSC problems\n(associated with agriculture, ﬁsh farming, and livestock) from\
    \ a CI approach; that is, it deﬁnes FSC\nproblems (from production to retail)\
    \ and categorizes them based on how they can be modeled from\na CI point of view.\
    \ Furthermore, we review the CI approaches that are more commonly used in\neach\
    \ stage of the FSC and in their corresponding categories of problems. We also\
    \ introduce a set of\nguidelines to help FSC researchers and practitioners to\
    \ decide on suitable families of methods when\naddressing any particular problems\
    \ they might encounter. Finally, based on the proposed taxonomy,\nwe identify\
    \ and discuss challenges and research opportunities that the community should\
    \ explore to\nenhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nKeywords: food supply chain; computational intelligence; fish farming;\
    \ agriculture; livestock; machine\nlearning; neural networks; deep learning; meta-heuristics;\
    \ fuzzy systems; probabilistic methods\n1. Introduction\nCurrently, one worldwide\
    \ challenge is how to sustainably guarantee global food needs\nin the face of\
    \ a growing population that is projected to be 9–10 billion by 2050 [1]. In this\n\
    sense, the enhancement of production and management of the current Food Supply\
    \ Chains\n(FSCs) is a crucial factor that contributes to accomplishing such an\
    \ aim. Nowadays, new\nInformation and Communication Technologies (ICTs) (e.g.,\
    \ the Internet of Things) play\nan active role in the digitization of FSCs [2].\
    \ As a result, large volumes of data are being\ngenerated in all FSC stages, ranging\
    \ from production to retail. The analysis of such data\nwould enable FSC actors\
    \ to extract relevant information or to optimize speciﬁc processes,\nallowing\
    \ improvement of the FSC administration, productivity, and sustainability.\nNevertheless,\
    \ the high volumes of available data and their complex patterns raise\nsigniﬁcant\
    \ challenges when analyzing and extracting values. In this context, Computational\n\
    Sensors 2021, 21, 6910. https://doi.org/10.3390/s21206910\nhttps://www.mdpi.com/journal/sensors\n\
    Sensors 2021, 21, 6910\n2 of 34\nIntelligence (CI) seems to be a successful paradigm\
    \ to build intelligent systems that are\nable to leverage this high availability\
    \ of data. CI is the ability of a digital system or\nalgorithm to perform tasks\
    \ commonly associated with intelligent beings [3]. Within such\ntasks, we can\
    \ ﬁnd speech recognition, visual perception, decision-making, prediction, and\n\
    translation, among others [4]. Over the last few years, the number of academic\
    \ publications\nconcerning CI applied to FSC has rapidly increased [5–7]. Within\
    \ the most representative\nCI methods applied to FSCs, we ﬁnd Neural Networks,\
    \ Fuzzy Logic, Swarm Intelligence,\nor Probabilistic Reasoning.\nThe scientiﬁc\
    \ literature reports different studies that aim to review and order the\napplication\
    \ of CI methods in different FSC stages. The variety of CI methods has led to\
    \ the\nemergence of research papers (published between 2012 and 2020), which select\
    \ a partic-\nular family of CI techniques and review their application in speciﬁc\
    \ FSC stages [2,6–12].\nHowever, these papers focus on only one or two families\
    \ of CI methods at most, and in the\nmajority of cases, do not cover all FSC stages.\
    \ Therefore, there is a lack of comprehensive\nstudies that review the application\
    \ of the most important families of CI methods in all FSC\nstages (from production\
    \ to retail). Additionally, few efforts have been made to classify FSC\nproblems\
    \ from a CI perspective. Hence, there is no categorization of the typologies of\
    \ FSC\nproblems to help determine how they can be modeled from a CI view (e.g.,\
    \ optimization,\nuncertain knowledge handling, reasoning) and what CI methods\
    \ can be most suitably used\nto approach them. Thus, despite the progress made\
    \ in organizing and systematizing the\nexisting literature at the point where\
    \ CI and FSCs meet, to the best of our knowledge, no\ntaxonomy has been proposed\
    \ in this regard.\nWith the above-mentioned ideas in mind, we propose a novel\
    \ taxonomy of FSC\nproblems from a CI perspective. Speciﬁcally, we focus on the\
    \ supply chain of agriculture,\nﬁsh farming, and livestock. The latter is justiﬁed\
    \ based on the fact that these supply chains\nprovide most of the food consumed\
    \ by the population of the world [13] and, therefore, they\nare the most studied\
    \ and researched FSCs in the scientiﬁc and academic literature. The\nmain contributions\
    \ of this article are:\n•\nA new taxonomy that provides a comprehensive view of\
    \ different FSC problems\nlocated in the chain stages typically studied in the\
    \ scientiﬁc literature (production,\nprocessing, distribution, and retail). This\
    \ taxonomy represents a new and broader\nproposal in order to identify and deﬁne\
    \ FSC problems that have been approached\nusing CI in the four aforementioned\
    \ stages. Besides, although some research articles\nhave described diverse FSC\
    \ problems, their deﬁnitions are not uniﬁed and vary\nfrom one paper to another.\
    \ Thus, this taxonomy also represents an effort to unify\nand consolidate deﬁnitions\
    \ of the FSC problems available in the literature, which\nrepresents a valuable\
    \ source of information for FSC researchers and practitioners\nworking in this\
    \ domain.\n•\nTo classify the FSC problems from a CI perspective. This classiﬁcation\
    \ allows FSC\nproblems to be mapped into common categories of problems in the\
    \ CI domain. Thus,\nwe provide a framework that helps display the similarities\
    \ and differences among\nFSC problems depending on how they can be modeled under\
    \ a CI perspective. To the\nbest of our knowledge, in this regard, no classiﬁcation\
    \ has been previously proposed.\n•\nTo establish a set of guidelines for the use\
    \ of CI in the FSC ﬁeld. These guidelines\naim to help FSC researchers and practitioners\
    \ to identify which FSC problems can\nbe addressed using CI, and the most appropriate\
    \ families of techniques to solve\nthem. Thus, these guidelines represent a ﬁrst\
    \ attempt to deﬁne a general framework\nto support the model selection problem\
    \ at the point where the ﬁelds of FSC and\nCI converge.\n•\nTo identify and discuss\
    \ challenges and research opportunities in the FSC domain,\nwhich are directed\
    \ towards more robust, explainable, interoperable, and accurate CI\nsolutions\
    \ that support FSC management and operation.\nThe rest of this paper is structured\
    \ as follows. Section 2 provides background in-\nformation on FSC and CI to facilitate\
    \ the understanding of the article. Furthermore, it\nSensors 2021, 21, 6910\n\
    3 of 34\nsummarizes other efforts directed at reviewing and categorizing the scientiﬁc\
    \ literature at\nthe point where FSC and CI meet in order to highlight how this\
    \ paper complements and\nenhances previous studies. Section 3 presents the proposed\
    \ taxonomy, its structure, and the\nclassiﬁcation of FSC from a CI perspective.\
    \ Afterwards, Section 4 gives FSC researchers and\npractitioners a set of guidelines\
    \ for the use of CI within the FSC domain. Lastly, Section 5\nsummarizes the main\
    \ conclusions and sets a research agenda for CI in the FSC ﬁeld.\n2. Background\
    \ and Motivation\nThis section provides some contextual and relevant background\
    \ information to facili-\ntate the understanding of the paper, and to assess similar\
    \ studies in this area. We start by\nintroducing the basic FSC stages examined\
    \ in this study (Section 2.1). Then, Section 2.2\npresents the main families of\
    \ CI approaches typically considered in FSC research. Finally,\nSection 2.3 reviews\
    \ similar works at the point where FSC and CI converge, which have\nidentiﬁed\
    \ and classiﬁed CI-based problems and methods. Section 2 ends with a discussion\n\
    of the main contributions of this research article.\n2.1. Food Supply Chain\n\
    FSC refers to the system that encompasses all activities, organizations, actors,\
    \ tech-\nnologies, information, resources, and services involved in producing\
    \ agri-food products for\nconsumer markets (e.g., fresh food, meat, and processed\
    \ food products) [14]. The upstream\nand downstream sectors form the supply of\
    \ agricultural inputs (such as seeds, fertilizers,\nfeed, medicine, or equipment)\
    \ to production, post-harvest handling, processing, transporta-\ntion, marketing,\
    \ distribution, and retailing [15]. They also include support services such as\n\
    extension services, research and development, and market information.\nBefore\
    \ the ﬁnal consumption of food products, FSC can include diverse stages wherein\n\
    production, processing, distribution, and retail are the stages most commonly\
    \ studied in\nthe scientiﬁc literature [16]. First, the production stage forms\
    \ the initial set of processes to\nobtain raw products derived from agriculture,\
    \ ﬁsh farming, or livestock. Agriculture refers\nto farming applications, including\
    \ the cultivation of soils for the harvest of crops [17]. Fish\nfarming involves\
    \ raising ﬁsh commercially in tanks or ﬁsh ponds, usually for consumer\nmarkets\
    \ [18]. Meanwhile, livestock is devoted to practices related to animal husbandry\
    \ for\nmeat, milk, eggs, or wool [19]. Continuing further down the production\
    \ chain, we ﬁnd\nthe processing stage, wherein the produced raw materials are\
    \ exposed to diverse transfor-\nmation processes (e.g., meat curing, washing and\
    \ disinfecting vegetables, fermentation),\nwhich allow consumable food products\
    \ to be obtained.\nOnce food products are ready to be delivered to the end-users,\
    \ the following FSC\nstages are distribution and retail. Their main purpose is\
    \ to connect the production and\nprocessing stages with the food users to complete\
    \ the supply chain loop [16]. Consequently,\nin the distribution stage, the processed\
    \ food is sent to distribution centers and warehouses.\nFrom such locations, different\
    \ distribution channels start to deliver the products to retail\nstores for sale.\
    \ Thus, retail is the end stage of the FSC and represents the link to consumers.\n\
    FSCs consist of a wide range of enterprises, ranging from smallholders, farmers’\n\
    organizations, co-operatives, and start-up companies to multinational enterprises\
    \ through\nparent companies or their local afﬁliates [14,15]. In this context,\
    \ FSC companies relate\nto each other through a variety of arrangements. Downstream\
    \ companies in the supply\nchain may engage in various types of relationships\
    \ with producers to secure access to\nagricultural products. They can impose standards\
    \ and speciﬁcations on producers with\nlittle involvement beyond a buying contract.\
    \ However, they can also become more actively\ninvolved, particularly through\
    \ contract farming, to coordinate production and ensure\nquality and safety [14].\
    \ In the new circular chain schemes, this type of relationship becomes\nmore complex,\
    \ involving more than one enterprise from the chain in the decision-making\nprocess\
    \ [20].\nCurrently, an appropriate and effective strategy to address this challenge\
    \ is the digiti-\nzation of FSCs, both of their internal processes and of their\
    \ relationships with other actors\nSensors 2021, 21, 6910\n4 of 34\nin the chain\
    \ [2]. Digitization has led to the generation of big volumes of data throughout\
    \ the\nentire supply chain. The exploitation of such data would allow FSC actors\
    \ to extract knowl-\nedge that could improve their internal processes in terms\
    \ of productivity and sustainability,\nas well as that of the FSC as a whole.\
    \ However, the data obtained through digitization\nusually contain complex and\
    \ intricate patterns that stand out as diverse challenges for\nprocessing and\
    \ analysis to extract value from it. Thus, CI arises as a solution that could\n\
    leverage and mine the underlying patterns of such data in order to obtain the\
    \ maximum\nvalue of the information, according to the analyses made.\n2.2. Computational\
    \ Intelligence Approaches\nCI is centered on the ability of a computer or algorithm\
    \ to learn speciﬁc tasks (e.g.,\npattern recognition, forecasting) from data that\
    \ is typically related to experimental observa-\ntions without human intervention\
    \ [3]. In the context of FSC, diverse IoT devices and data\nmanagement systems\
    \ sense and gather such data, which they then deploy in each supply\nchain stage.\
    \ After obtaining data, different CI approaches are used to process, analyze,\
    \ and\nextract information. In this section, we introduce the relevant background\
    \ information in\nrelation to families of CI-based methods that are typically\
    \ used in FSC applications. Fol-\nlowing the guidelines and classiﬁcation proposed\
    \ in [3], we have grouped the CI methods\ninto ﬁve families that are presented\
    \ in more detail below. They are CI-based Statistical\nLearning Methods, Artiﬁcial\
    \ Neural Networks and Deep Learning, CI-based Optimization\nMethods, Fuzzy Systems,\
    \ and Probabilistic Reasoning. These groups of CI-based methods\nare presented\
    \ below.\n2.2.1. CI-Based Statistical Learning Methods\nStatistical Learning Methods,\
    \ also known as Machine Learning (ML) methods are\nalgorithms that are able to\
    \ learn a speciﬁc task without being explicitly programmed. More\nformally, according\
    \ to Mitchell [21], these types of methods learn from experiences E,\nrelated\
    \ to a task T, and their performance is evaluated by a metric P. The performance\
    \ in T\nimproves according to P, with experience E. Classically, these methods\
    \ can be classiﬁed\naccording to the three basic learning approaches presented\
    \ below: unsupervised learning,\nsupervised learning, and reinforcement learning.\n\
    Unsupervised learning looks for patterns in data with no pre-existing labels.\
    \ Its\ncentral approach is usually focused on organizing X data points into speciﬁc\
    \ groups [22].\nData points that are in the same group should have similar properties,\
    \ while data points\nin different groups should have highly different features.\
    \ It is important to note that\nthese potential groups are not previously deﬁned\
    \ and it is the purpose of unsupervised\nlearning algorithms to discover them.\
    \ Some examples of unsupervised learning methods\nare hierarchical clustering,\
    \ k-means, anomaly detection techniques, among others.\nSupervised learning is\
    \ the other fundamental area of Statistical Learning Methods [23].\nIt consists\
    \ of algorithms that learn a function ( f : X 7→ Y) by training with a ﬁnite number\n\
    of input-output pairs, X being the input domain and X the output co-domain. This\
    \ learning\nstage can be seen as E in Mitchell’s deﬁnition [21], and the speciﬁc\
    \ task T usually involves\npredicting an output given a new and unseen input [24].\
    \ Common families of methods that\nstand out in supervised learning are decision\
    \ tree-based (e.g., Decision Tree, Extra Trees),\ninstance-based (e.g., K-Nearest\
    \ Neighbors), kernel-based (e.g., Support Vector Machine), or\nensemble-based\
    \ methods (Random Forest, AdaBoost).\nSupervised learning problems can usually\
    \ be divided into classiﬁcation and regres-\nsion [25,26]. In both cases, the\
    \ basis is an input data-set, X, and their difference is the\ntype of target variable,\
    \ Y, to be predicted. In the classiﬁcation case, Y is divided into\ndiscrete categories,\
    \ while in regression, the aim is to predict continuous values. Standard\nclassiﬁcation\
    \ problems can be either binary or multi-class problems [27]. In the former\n\
    case, an instance can only be associated with one of two values: the positive\
    \ or negative\nequivalent to 0 or 1; whereas, in multi-class problems, there are\
    \ more than two classes\nunder consideration. A multi-class problem means that\
    \ a given instance belongs to one of\nSensors 2021, 21, 6910\n5 of 34\nthe multiple\
    \ possible categories. Diversely, a supervised regression problem [28] consists\n\
    of ﬁnding a function that can predict, for a given example, a real value in R.\n\
    The third learning approach is reinforcement learning [29]. In this case, the\
    \ focus is\non developing a learning agent able to observe the environment and\
    \ obtain some input\nfrom it. Then, the agent makes an action and it changes to\
    \ a new environment, receiving an\nevaluation value (award or penalty) related\
    \ to the action made. Unlike the unsupervised\nlearning approach, the agent receives\
    \ guidance from an external evaluation. Moreover,\ndifferent to supervised learning,\
    \ in reinforcement learning, the agent is provided with an\nevaluation value regarding\
    \ the action made and not with a clear speciﬁcation about the\ncorrespondence\
    \ between input and output data. Relevant approaches within reinforcement\nlearning\
    \ are value-based [30], policy-based [31], and model-based [32].\nLastly, it is\
    \ important to note that Artiﬁcial Neural Networks are not considered within\n\
    this family of methods. We will treat them as a separate class of methods because\
    \ of their\nimportant role in CI.\n2.2.2. Artiﬁcial Neural Networks and Deep Learning\n\
    Artiﬁcial Neural Networks (ANNs) are computing systems with an inner structure\n\
    that is based on a set of connected units, named neurons, as they are inspired\
    \ by a biological\nbrain. Just as is the case for animals, wherein two neurons\
    \ are connected by means of a link\n(synapses), the neurons of an ANN are connected\
    \ through edges that transmit signals from\none artiﬁcial neuron to another. The\
    \ signals transferred between neurons are represented by\nreal numbers, and the\
    \ output of each neural unit is computed by some non-linear function\nof the sum\
    \ of its inputs.\nEvery edge that connects two neurons (usually) has a weight\
    \ that is adjusted as the\nlearning process of the ANN is underway. The role of\
    \ such edges is to increase or decrease\nthe strength of the signal at the connection\
    \ of two neurons. Additionally, neural units are\naggregated into layers, and\
    \ they may carry out diverse transformations on the inputs that\nthey receive.\
    \ Thus, the purpose of ANNs is to process input data from the ﬁrst layer (input\n\
    layer) to the last layer (output layer), while approximating linear or non-linear\
    \ functions\nthat are generally unknown. The collection of neuron units arranged\
    \ in layers, edges, and\nweights forms a network topology that is usually called\
    \ an architecture (Figure 1). ANNs\nhave evolved into a broad family of architectures\
    \ that depend on the speciﬁc application\ndomain. The feed-forward neural network\
    \ is a type of classical architecture. In this network,\nthe input data moves\
    \ from the input layer directly through any hidden layers (intermediate\nlayers\
    \ located in-between the input and output layers) to the output layer.\nFigure\
    \ 1. Basic architecture of an ANN. It is composed of edges and neural units arranged\
    \ using\nan input layer (blue neural units), a hidden layer (white neural units),\
    \ and an output layer (yellow\nneural units).\nBecause of their ability to reproduce\
    \ and model nonlinear processes, ANNs have been\napplied in diverse supervised\
    \ learning, unsupervised learning, and reinforcement learning\nproblems. Application\
    \ areas may include time series forecasting, pattern recognition, signal\nclassiﬁcation,\
    \ among others. However, as more complex problems (e.g., image processing,\nspeech\
    \ recognition) have arisen in the last few years, further development in the ANN\n\
    Sensors 2021, 21, 6910\n6 of 34\narea is required to deal with resulting challenges.\
    \ The common denominator of these ﬁelds\nis the high complexity and enormous volumes\
    \ of data generated and managed in them.\nAs a result, a subset of ANNs, named\
    \ Deep Learning (DL) [33] has emerged to cope with\nthis complexity.\nA deep neural\
    \ network is a classical ANN composed of multiple layers between the\ninput and\
    \ output layers. Theoretically, DL architectures allow any non-linear function\
    \ to be\napproximated [34]. Therefore, this approach has become dominant in multiple\
    \ application\nﬁelds like computer vision [35] and natural language processing\
    \ [36]. Between the most\ncommon deep neural networks, we can ﬁnd recurrent neural\
    \ networks, convolutional\nneural networks, and long short-term memory neural\
    \ networks [37]. The main strength\nof this approach lies in its ability to learn\
    \ automatically from raw data and to learn more\ncomplex representations of data\
    \ than other Statistical Learning methods [38]. The latter\ncould be valuable\
    \ for research areas characterized by having complex data, which can\nbarely be\
    \ analyzed by human reasoning and classical data preprocessing approaches. The\n\
    other relevant characteristics of Deep neural architectures come from their architectural\n\
    ﬂexibility that enables data fusion, as they allow different data formats to merge,\
    \ combining\ndata from multiple sources and therefore extracting more valuable\
    \ knowledge. In other\nwords, DL facilitates the use of multi-dimensional data,\
    \ which is quite difﬁcult to achieve\nwith classical ANNs and ML methods.\n2.2.3.\
    \ CI-Based Optimization Methods\nThe growing computational capabilities and the\
    \ fact that some problems of great\npractical value (e.g., scheduling, routing,\
    \ facility location) can not be solved optimally\n(because they are NP-Hard problems)\
    \ has led to increased use of approximating algorithms.\nMeta-heuristics are a\
    \ suitable approach in situations where exact algorithms can not give an\nanswer\
    \ using a reasonable amount of time or memory [39]. These methods arose with the\n\
    idea of extracting the best parts of different successful heuristics to create\
    \ generic methods\nthat could be applied to a more signiﬁcant number of problems\
    \ and contexts. Due to the\nwide variety of meta-heuristics, different classiﬁcation\
    \ categories have been proposed [40].\nWe group these techniques according to\
    \ the next categories: Evolutionary Computation\n(EC) [41], Swarm Intelligence\
    \ (SI) [42], and other meta-heuristics (local search-based meta-\nheuristics [43]).\
    \ These groups are presented with more detail as follows.\nEC is a group of meta-heuristic\
    \ optimization algorithms inspired by biological evolu-\ntion. Within this family\
    \ of methods, they operate from an initial set of candidate solutions\n(initial\
    \ generation), which are updated in an iterative way. Then, each new generation\n\
    is generated by randomly removing candidate solutions according to predeﬁned criteria\n\
    and by inserting random changes. After a set of iterations, the population of\
    \ solutions\nwill gradually evolve to increase its competitiveness, framed by\
    \ a ﬁtness function that is\ndetermined by each algorithm. Following the described\
    \ procedure, EC algorithms can\nproduce highly optimized solutions for complex\
    \ real-world optimization problems like the\ntraveling salesman problem [44].\
    \ Some well-known examples of EC meta-heuristics are\nGenetic algorithms [45]\
    \ and Differential evolution [46], among others.\nThe second biggest category\
    \ of meta-heuristics is the category of Swarm Intelligence\n(SI). This approach\
    \ consists of a population of agents interacting with each other and their\nenvironment.\
    \ The agents follow a set of basic rules, and although there is no centralized\n\
    control structure guiding the agents on how they should behave, the interaction\
    \ between\nthem leads to the emergence of intelligent global behavior. SI is inspired\
    \ by biological\nsystems such as ant and bee colonies and is commonly used to\
    \ solve combinatorial and\ncontinuous optimization problems (e.g., shortest path\
    \ problems for delivery or optimization\nof unknown parameters in time series).\
    \ Two of the most well-known SI algorithms are Ant\nColony [47], and Particle\
    \ Swarm [48] methods.\nSensors 2021, 21, 6910\n7 of 34\nThe third category groups\
    \ together the rest of the meta-heuristics, which are outside\nof the domains\
    \ of EC and SI but are still relevant for solving optimization problems. For\n\
    example, this is the case for local search-based meta-heuristics that are focused\
    \ on ﬁnding\na solution that maximizes a criterion among a set of candidate solutions.\
    \ These meta-\nheuristics move from one solution to another in the search space\
    \ of candidate solutions\nby applying local changes until an optimal solution\
    \ is found or a time budget is reached.\nWithin this category of meta-heuristics,\
    \ representative methods include Tabu Search [49],\nand Greedy Randomized Adaptive\
    \ Search Procedure (also known as GRASP) [50].\n2.2.4. Fuzzy Systems\nClassical\
    \ logic is based on the crisp set concept, where a group of objects is considered\n\
    to be a collection. In this sense, a crisp subset can be deﬁned from a broader\
    \ set where its\nelements belong to the subset according to some particular condition.\
    \ Thus, we can deﬁne\nthe concept of membership wherein a value of one is assigned\
    \ to the elements of the subset\nand a value of zero to the elements that do not\
    \ belong to that subset. Unlike crisp sets, a\nfuzzy set allows partial belonging\
    \ to a set through a degree of membership, denoted by\na function µ, that maps\
    \ all the elements in the set to a value in the real interval between\nzero and\
    \ one [51]. Then, as in the crisp case, a value of zero means that the element\
    \ under\nconsideration does not belong to the set, and a value of one represents\
    \ that the element\nbelongs entirely to the set. However, unlike in the crisp\
    \ case, a value greater than zero\nand lower than one represents a partial membership\
    \ to the subset. Consequently, the set’s\nmembership function is the relationship\
    \ between the elements of the set and their degree\nof belonging.\nHaving introduced\
    \ the basic notions of fuzzy sets, the next key concept is fuzzy\ninference systems.\
    \ A fuzzy system is a repository of fuzzy expert knowledge that can\nreason the\
    \ data in vague terms instead of precise Boolean logic. This expert knowledge\
    \ is a\ncollection of fuzzy membership functions and a set of fuzzy rules that\
    \ is formed as follows:\nIF (conditions are fulﬁlled) THEN (consequences are inferred).\
    \ The basic conﬁguration of a\nfuzzy system is shown in Figure 2, and it can be\
    \ divided into four main parts: a fuzziﬁer, a\nknowledge base, an inference engine,\
    \ and a defuzziﬁer [52].\nFigure 2. Structure and components of a Fuzzy System.\n\
    The Fuzziﬁer maps a real crisp input to a fuzzy function and, therefore, determines\n\
    the degree of membership of the input to a vague concept (categories using the\
    \ fuzzy sets).\nThe values of the input variables are mapped to the range of values\
    \ of the corresponding\nuniverse of discourse. The range and resolution of input-fuzzy\
    \ sets and their effect on the\nfuzziﬁcation process are considered to be factors\
    \ that affect the overall performance of\nthe system.\nThe knowledge base comprises\
    \ the knowledge of the application domain. It can be\nsplit into a database of\
    \ deﬁnitions used to express linguistic control rules in the controller\nand a\
    \ rule base that describes the knowledge held by the experts in the domain. Intuitively,\n\
    the knowledge base is the core element of a fuzzy controller as it will contain\
    \ all the\ninformation necessary to accomplish its execution tasks.\nThe Inference\
    \ Engine provides the decision-making logic of the controller. It deduces\nthe\
    \ fuzzy control actions by employing fuzzy implications and fuzzy rules of inference.\
    \ In\nmany aspects, it can be viewed as an emulation of human decision-making.\
    \ Finally, the\nDefuzziﬁcation process converts fuzzy control values into crisp\
    \ quantities; that is, it links\na single point to a fuzzy set, given that the\
    \ point belongs to the support of the fuzzy set.\nSensors 2021, 21, 6910\n8 of\
    \ 34\nThere are many de-fuzziﬁcation techniques, the most famous being the center-of-area\
    \ or\ncenter-of-gravity.\n2.2.5. Probabilistic Reasoning\nProbabilistic Reasoning\
    \ states that users can infer plausible models to explain input\ndata. Thus, a\
    \ model can predict an output based on new, unknown input data, which allows\n\
    decisions to be made regarding future actions. In this context of predictions,\
    \ uncertainty\nplays a relevant role for three reasons [53]. First, uncertainty\
    \ can be introduced from noisy\ninput data into the training process of a model.\
    \ Secondly, input data can be consistent with\ndifferent models, and therefore\
    \ which model is more appropriate for the data at hand is\nuncertain. And third,\
    \ a model can have diverse parameters (e.g., the coefﬁcients of linear\nregression)\
    \ and/or different inner structures (e.g., the architecture of ANNs); hence, there\n\
    is uncertainty regarding the speciﬁcations for a concrete model [54].\nFrom a\
    \ general perspective, the basic foundations of Probabilistic Reasoning are\n\
    condensed in the Bayesian learning paradigm [54]. Primarily, probability distributions\
    \ are\nconsidered to represent all uncertainties that can interfere in a model\
    \ (e.g., noise in the input\ndata, the model’s parameters). Then, the basic rules\
    \ of probability theory are considered\nto infer unobserved quantities given the\
    \ observed data. Thus, the process of learning\nfrom data occurs through the transformation\
    \ of the prior probability distributions (deﬁned\nbefore having the input data)\
    \ into posterior distributions (after observing the data).\nThe assumptions mentioned\
    \ above are supported by two of the basic rules of prob-\nability theory. They\
    \ are the sum rule and the product rule, which can be expressed as\nP(x) = ∑y∈Y\
    \ P(x, y) and P(x, y) = P(x)P(y | x), respectively. Here x and y correspond to\n\
    observed or uncertain quantities, taking values in sets X and Y. P(x) is the probability\
    \ of x\nregarding the frequency of observing a particular value. P(x, y) is the\
    \ joint probability of\nobserving x and y, and P(y|x) is the probability of y\
    \ conditioned on observing a concrete x\nvalue. Keeping these two probability\
    \ theory rules in mind, x and y can be integrated into\nthe Bayes’ theorem to\
    \ describe the probability of an event based on the prior knowledge\nof conditions\
    \ that might be related to the event. In the context of Statistical Learning,\
    \ this\ntheorem is stated as P(θ | D, m) = P(D|θ,m)P(θ|m)\nP(D|m)\n. Here, P(D\
    \ | θ, m) is the likelihood of\nparameters θ in model m, P(θ | m) is the prior\
    \ probability of θ, and P(θ | D, m) is the\nposterior probability of θ given data\
    \ x.\nThus, learning is the transformation of prior knowledge or assumptions regarding\
    \ the\nparameters P(θ | m), through data D, into the posterior knowledge about\
    \ the parameters\nP(θ | D, m). Such a posterior distribution then becomes prior\
    \ knowledge for future data\npredictions. Within this framework, the most typical\
    \ methods used over the last few years\nwere Bayesian networks [55]. Other representative\
    \ techniques are Markov networks and\nRandom Fields [56].\n2.2.6. Summary of CI-Based\
    \ Approaches\nHaving presented the families of CI methods usually considered in\
    \ FSC, this section\nintroduces a summary of the methods presented above and their\
    \ strengths and weak-\nnesses (Table 1). First of all, we would like to point\
    \ out that this list of advantages and\ndisadvantages does not refer to a comparison\
    \ between the different categories of methods\nconsidered in this paper, as they\
    \ are often used to solve different types of problems and\ntherefore the comparison\
    \ is not straightforward. Instead, these strengths and weaknesses\nrefer to a\
    \ comparison between CI-based approaches versus non CI-based approaches that\n\
    are used to solve similar categories of problems.\nSensors 2021, 21, 6910\n9 of\
    \ 34\nTable 1. Summary of CI-based approaches reviewed.\nCI Approach\nStrengths\n\
    Weaknesses\nCI-based statistical\nlearning methods\n- Expert knowledge of the\n\
    problem domain where they are applied is not required.\n- No assumptions about\
    \ the characteristics\nof the data available (non-parametric method) are made.\n\
    - They can work properly with medium and\nlarge sized datasets.\n- Expert Statistical\
    \ Learning knowledge\nis required.\n- Their performance is highly dependent\n\
    on the quality and availability of data.\n- They have problems ﬁnding meaningful\n\
    representations of the data when the\ncomplexity of hidden patterns of the data\
    \ is\nvery high (e.g., computer vision).\nArtiﬁcial neural networks\nand Deep\
    \ learning\n- Expert knowledge of the problem is not required\ndomain where they\
    \ are applied.\n- No assumptions about the characteristics of\nthe data available\
    \ (non-parametric method).\n- They can extract complex and non-linear\npatterns\
    \ embedded in data.\n- Work directly on raw data without almost any\nneed for\
    \ feature extraction.\n- Expert Statistical Learning knowledge\nis required.\n\
    - High volumes of data are required.\n- High computational capabilities\nare needed.\n\
    CI-based optimization\nmethods\n- Satisfactory solutions for complex\nproblems.\n\
    - They can work in scenarios with\ntime and computational capabilities\ndeﬁned\
    \ by the user.\n- They are approximate methods,\nso an optimal solution is not\
    \ guaranteed.\n- Expert knowledge is required for\nthe design of the methods.\n\
    Fuzzy systems\n- The methods are capable of modeling\nimpressions and vagueness\
    \ associated\nwith the data of the problem domain.\n- The results are easily interpretable.\n\
    - Expert knowledge associated with\nthe problem domain is required.\n- Not able\
    \ to deal effectively with\nuncertainty associated with the\ndata available.\n\
    Probabilistic Reasoning\n- Able to deal with high levels of\nuncertainty in the\
    \ data available.\n- Unable to deal with complex problems\ncharacterized by data\
    \ representing\ndifferent variables of interest.\n- Difﬁculties in modeling ambiguities\n\
    and inaccuracies in the input data.\n2.3. Motivation\nThe objectives of this section\
    \ are two-fold. First, it reviews the related work at the\npoint where FSC and\
    \ CI meet, in order to identify previous contributions regarding the\nclassiﬁcation\
    \ of FSC problems, and the CI methods used to solve them. Having already\nintroduced\
    \ these previous studies, the ﬁnal part of this section is devoted to presenting\
    \ the\nmain novelty and contributions of this paper.\nIn 2012, Grifﬁs et al. [11]\
    \ focused on the distribution stage of an FSC to present an\noverview of CI-based\
    \ optimization methods that can play a relevant role for problems like\nvehicle\
    \ routing, supply chain risks, and disruptions. The authors emphasized how meta-\n\
    heuristic techniques provide near-optimal solutions to logistics problems. Following\
    \ this\nline of research, in 2016, Wari and Zhu [12] presented an updated survey\
    \ on applying meta-\nheuristics to solve optimization problems in the processing\
    \ (e.g., fermentation, thermal\ndrying, and distillation) and distribution (e.g.,\
    \ warehousing location, production planning,\nand scheduling) stages of an FSC.\
    \ More recently, in 2017, Kamilaris et al. [7] reviewed\narticles on smart farming\
    \ to show how digital technologies can enhance the circularity of\nthe FSC at\
    \ the production stage. They highlighted the problems that can be approached by\n\
    utilizing CI-based Statistical Learning, ANNs, and DL methods.\nComplementary\
    \ to the advances reported by Kamilaris et al. [7], in 2020, Sharma et al. [15]\n\
    and Misra et al. [2] carried out a bibliometric analysis and a review, respectively,\
    \ of CI-\nbased Statistical Learning applications over the whole FSC. Based on\
    \ their results, the\nauthors designed a series of recommendations to design and\
    \ deploy Statistical Learning-\nSensors 2021, 21, 6910\n10 of 34\nbased solutions\
    \ for data-driven decision-making processes in the FSC. In the same year,\nCamarena\
    \ [10] made a critical analysis of what can be done with Artiﬁcial Intelligence,\n\
    without emphasizing any single method in particular, for the transition to a sustainable\n\
    FSC. Lastly, the studies of Liakos et al. [6] and Saiz-Rubio and Rovira-Mas [9],\
    \ in 2018 and\n2020, respectively, presented comprehensive reviews of research\
    \ directed at the application\nof ML in the FSC production stage. The authors\
    \ surveyed how ML can help farmers make\nmore informed decisions on the management\
    \ of agriculture and livestock systems.\nFigure 3 presents a synthesis of the\
    \ studies described above and highlights how this\narticle complements and extends\
    \ the existing literature. Each cited paper is represented\nby a grey circle,\
    \ which can have one or two inner circles (green and blue). Green circles\nrepresent\
    \ FSC stages covered by a study, while blue circles depict the CI approaches\n\
    considered within it. The size of the circle is determined by the number of FSC\
    \ stages and\nCI techniques considered in each article. Thus, a green circle would\
    \ have the biggest size if\nthe paper to which it belongs addresses the four basic\
    \ stages of the FSC. The same logic is\nused for the blue circles: the more families\
    \ of methods a paper considers, the bigger the\ncircle’s size would be. Furthermore,\
    \ we can ﬁnd our research article in the center of the\nﬁgure in the violet circle.\n\
    Figure 3. Motivations and state-of-the-art concepts at the point where FSC and\
    \ CI meet.\nAccording to Figure 3 we can see that there are no research articles\
    \ that present a\ncomprehensive taxonomy at the point where FSC problems and CI\
    \ converge. This means\nthat there are no research studies that consider the problems\
    \ of the four basic FSC stages,\nnor the diversity of the CI methods that can\
    \ be applied to solve them. Instead, most of the\npapers focus on one or two FSC\
    \ stages, and they tend to review the role a unique CI family\nof methods has\
    \ over them. Therefore, we propose a new taxonomy that embraces the\ncomplete\
    \ FSC and the ﬁve families of CI methods most commonly used in the FSC stages.\n\
    Sensors 2021, 21, 6910\n11 of 34\nFurthermore, our proposal extends the previous\
    \ classiﬁcation efforts by adding a new\ncategorization attribute, which indicates\
    \ the type of FSC problem being addressed from\na CI perspective. In addition\
    \ to increasing the classiﬁcation capacity of our taxonomy,\nthis attribute allows\
    \ us to establish a novel mapping between the FSC problems and the\ntypologies\
    \ of CI problems that can be used to approach the former ones. By doing so,\n\
    we contribute to facilitating the choice of the most convenient family of CI methods\
    \ to\nuse depending on the FSC problem at hand. This represents a valuable and\
    \ novel source\nof information for FSC researchers and practitioners who aim to\
    \ incorporate CI-based\nsolutions into their FSC applications.\n3. A Taxonomy\
    \ of CI-Based Problems in the Food Supply Chain\nThis section introduces details\
    \ of the taxonomy proposed. First, Section 3.1 presents\nthe methodology followed\
    \ to design the taxonomy. Then, Sections 3.3 and 3.4 show the\ntaxonomy’s structure\
    \ and describe its parts. Finally, Section 3.5 gives an overview of the\ncategorization\
    \ of FSC problems, from a CI perspective, using the taxonomy.\n3.1. Methodology\
    \ for the Design of the Taxonomy\nThis section introduces the methodology followed\
    \ to build the taxonomy proposed.\nFirst, we note that this research paper does\
    \ not aim to carry out a systematic literature\nreview or survey. Instead, our\
    \ scope lies in searching and reviewing the representative\nliterature to propose\
    \ a taxonomy that describes and categorizes FSC problems and how\nthey are solved\
    \ from a CI-based perspective. As such, the taxonomy proposed does not seek\n\
    to identify all details associated with the FSC problems to maintain its comprehensibility\n\
    and size. It is designed according to core characteristics that may alter the\
    \ complexity and\nmodeling of FSC problems from the CI perspective.\nWith these\
    \ ideas in mind, Figure 4 shows the methodology followed to build the\ntaxonomy\
    \ introduced in this research paper. This methodology follows a structure-based\n\
    literature review that includes the steps depicted in Figure 4. The ﬁrst step\
    \ is named Scope\n& Research Question, which aims to limit the areas of knowledge\
    \ to be consulted; that is,\nthe point where FSC and CI converge. For this step,\
    \ the research questions that guided\nour search were: “What are the most common\
    \ FSC problems reported in the literature?”,\n“What are the CI methods typically\
    \ used to approach these problems?”, “How can FSC\nbe categorized from a CI perspective?”,\
    \ and “Is there any taxonomy to categorize FSC\nproblems considering a CI approach?”.\n\
    Figure 4. Steps followed to build the proposed taxonomy.\nThe following step deﬁned\
    \ the search set-up. We deﬁne the keywords, periods,\nonline resources, and criteria\
    \ to search and review the scientiﬁc literature. The keywords\nconsidered were:\
    \ Food Supply Chain(s), agrifood, ﬁsh farming, agriculture, livestock,\nSensors\
    \ 2021, 21, 6910\n12 of 34\nproduction, processing, distribution, logistics, retail,\
    \ computational intelligence machine\nlearning, deep learning, meta-heuristics,\
    \ fuzzy systems, and probabilistic methods. The\nperiod was between 2012 and 2020,\
    \ and the bibliographic resources searched were the\nWeb of Science, Scopus, and\
    \ Google Scholar. Finally, the main criteria for selecting and\nreviewing the\
    \ literature was that they be review or survey papers. The latter is based on\n\
    the fact that this type of paper offers a general and consolidated overview of\
    \ the state-of-\nthe-art concerning CI-based FSC problems reported in the literature.\
    \ Moreover, these types\nof papers allowed us to know if any taxonomy was previously\
    \ proposed to classify the\nFSC problems.\nThe next stage in Figure 4 is search,\
    \ select, and review. Using the search set-up\nmentioned above, we identiﬁed the\
    \ survey and review papers introduced in the Motivation\nSection 2.3. Next, we\
    \ analyzed the FSC problems considered in these papers, the FSC stages\nwhere\
    \ the problems were located, and the families of CI methods usually considered\
    \ to\napproach these FSC problems.\nBased on the ﬁndings mentioned above, we moved\
    \ to the ﬁnal step of the methodology\nshown in Figure 4. The objective was to\
    \ design a new taxonomy that embraces the\ncomplete FSC and the ﬁve families of\
    \ CI methods most commonly used in the FSC stages.\nThis taxonomy also intends\
    \ to expand the previous classiﬁcation efforts by adding a\nnew categorization\
    \ attribute, indicating the type of FSC problem addressed from a CI\nperspective.\
    \ Thus, we characterized how the FSC problems identiﬁed in the previous\nstep\
    \ can be modeled from a CI perspective. To do so, we considered the typologies\n\
    of problems in the CI domain (problem-solving, uncertain knowledge and reasoning,\n\
    knowledge discovery and function approximation, and communication and perception)\n\
    that better suited the families of CI methods considered in the studies reviewed.\n\
    Having built the taxonomy, we checked its robustness and ability to discriminate\n\
    papers that approached different FSC problems. To accomplish this aim, we extracted\n\
    relevant references cited by the review and survey papers previously identiﬁed,\
    \ as well as\nthe recent literature, and mapped them into the proposed taxonomy.\
    \ This is shown in the\nfollowing section, where the taxonomy is introduced, to\
    \ validate its classiﬁcation power.\n3.2. The Taxonomy Overview\nThe taxonomy\
    \ aims, ﬁrstly, to extend the previous classiﬁcation efforts on FSC prob-\nlems\
    \ to cover all stages of Agrifood supply chains; and, secondly, to add a new level\
    \ of\ncategorization that allows typologies of FSC problems to be mapped to typologies\
    \ of CI\nproblems. We can see the structure of the proposed taxonomy in Figure\
    \ 5. As we can see,\nin level one, the taxonomy includes the four basic stages\
    \ of an FSC that were introduced in\nSection 2.2.1; that is, production, processing,\
    \ distribution, and retail. Then, in level two, it\ncontains the different categories\
    \ of FSC problems that we can ﬁnd in each stage. It is impor-\ntant to clarify\
    \ that although these FSC problems have been reported previously, in related\n\
    studies [2,6–12], to the best of our knowledge, this is the ﬁrst time that their\
    \ deﬁnitions are\nuniﬁed and consolidated in one taxonomy. Lastly, in level three,\
    \ the taxonomy introduces\nthe typologies of problems from a CI perspective. Speciﬁcally,\
    \ this level seeks to classify\nthe FSC problems depending on how they can be\
    \ modeled and solved by CI methods.\nHaving presented the structure of the taxonomy,\
    \ the following Section 3.3 details\nthe FSC problems identiﬁed for the production,\
    \ processing, distribution, and retail stages.\nThose problems represent the second\
    \ level of the taxonomy. They are formally deﬁned\nfrom a purely FSC perspective,\
    \ and we clearly state the key objective of each problem\nwithin the particular\
    \ chain stage where it is identiﬁed. Afterwards, Section 3.4 presents\nthe third\
    \ level of the taxonomy that contains the attributes to categorize the FSC problems\n\
    of level 2 under a CI approach. These attributes correspond to the four typologies\
    \ of CI\nproblems that are more commonly used in the literature to address FSC\
    \ problems. Finally,\nSection 3.5 introduces the classiﬁcation and mapping of\
    \ FSC problems according to how\nthey can be modeled by CI typologies.\nSensors\
    \ 2021, 21, 6910\n13 of 34\nFigure 5. A taxonomy of computational intelligence\
    \ in an FSC.\n3.3. Level 2: Identiﬁcation and Deﬁnition of Food Supply Chain Problems\n\
    In this section, we present the FSC problems identiﬁed for each of the FSC stages\n\
    shown in Figure 5, which corresponds to the second level of our taxonomy. These\
    \ problems\nare formally deﬁned in more detail below.\n3.3.1. Production Problems\n\
    The FSC production stage can be split into three main production systems: ﬁsh\n\
    farming, agriculture, and livestock. These three production systems and their\
    \ associated\nproblems can be observed in Figure 6 and they are deﬁned below.\n\
    Figure 6. FSC problems in the production stage.\nFish farming (also known as pisciculture)\
    \ is the production system concerned with\nraising ﬁsh in closed environments,\
    \ such as ponds or tanks, for human consumption. Nowa-\ndays nearly half of the\
    \ ﬁsh consumed in the word are raised in artiﬁcial environments [57].\nFish farming\
    \ production has a high degree of complexity as it involves interrelated physical\n\
    (e.g., water and nutrient supply), chemical (e.g., pH, oxygen), and environmental\
    \ (e.g.,\nwaste generated) elements. Therefore, the management of this process\
    \ requires advanced\nsensing, control, and communication technologies as well\
    \ as expert knowledge to make\nefﬁcient and sustainable decisions, and maximize\
    \ the productivity. Within this context, the\nSensors 2021, 21, 6910\n14 of 34\n\
    most typical CI-based processes reported in the literature are ﬁsh weight estimation\
    \ [58],\nproduction estimation, and optimization [59]. Their deﬁnitions are presented\
    \ below.\n•\nFish weight estimation: This process estimates ﬁsh weight considering\
    \ morphological\nfeatures (e.g., length, width, and mass).\n•\nProduction estimation\
    \ and optimization: This process is centered on the optimiza-\ntion of ﬁsh production\
    \ and forecasting of seasonal demand to adjust the production.\nTo accomplish\
    \ such aims, the optimization of production is carried out by monitoring\ncrucial\
    \ elements of ﬁsh ponds, like water oxygen levels, nutrients, and food supply,\n\
    which inﬂuence the growth of ﬁsh. Meanwhile, historical records of seasonal de-\n\
    mand are stored and continuously analyzed to determine the most suitable levels\
    \ of\nproduction depending on the year and season.\nThe following production system\
    \ considered in this study is agriculture, in particular,\nhorticulture. Horticulture\
    \ is the greenhouse industry dedicated to plant cultivation and\nprocessing of\
    \ different types of crops for food and commercial consumption (e.g., ﬂowers,\n\
    fruits and nuts, vegetables and herbs). The main challenges of these production\
    \ systems\nare to improve plant growth, yields, quality, nutritional value, and\
    \ resistance to insects,\ndiseases, and environmental stress.\nIn order to achieve\
    \ these improvements, different processes are managed to try and\nmaintain a balance\
    \ between efﬁciency, productivity, and sustainability, such as monitoring\nand\
    \ controlling indoor-outdoor climate conditions, crop management, and production\
    \ fore-\ncasting, among others. They are commonly approached in the specialized\
    \ literature [6,9,60]\nin open-ﬁeld agriculture and intensive horticulture. Within\
    \ the most representative pro-\ncesses, we ﬁnd the crop yield and harvest forecasting\
    \ [60–62], crop protection [63,64],\nweather prediction and irrigation management\
    \ [65,66], and site-speciﬁc nutrient manage-\nment [67,68]. These processes, which\
    \ are shown in Figure 6, are deﬁned as follows.\n•\nCrop yield and harvesting\
    \ prediction: This problem is focused on yield estimation\nto match crop supply\
    \ with demand and on crop management to increase productivity.\n•\nCrop protection:\
    \ This is based on the identiﬁcation and diagnosis of biotic (infesta-\ntions,\
    \ diseases, and weeds) and abiotic (nutrients, water deﬁciency) stress factors\
    \ that\naffect crop productivity.\n•\nWeather prediction and irrigation management:\
    \ This problem is mainly concerned\nwith weather forecasting for the optimal use\
    \ of water, which enables the design and\ndeployment of crop irrigation scheduling\
    \ and planning.\n•\nSite-speciﬁc nutrient management: This is based on the management\
    \ of soil quality\nto determine which nutrients need to be supplied in order to\
    \ maintain the chemical\ncharacteristics required for the crop under consideration.\n\
    Lastly, the third production system considered for the production stage is livestock.\n\
    This production system is dedicated to the growth and management of domestic animals\n\
    (e.g., cattle, sheep, and goats) raised in agricultural settings to generate food\
    \ products like\nmeat, eggs, or milk, among others. Livestock can be carried out\
    \ through either extensive or\nintensive systems. Extensive systems involve animals\
    \ roaming grasslands (usually under\nthe supervision of a herdsman). Diversely,\
    \ intensive livestock is located in closed infras-\ntructures and is equipped\
    \ with ICT technology, which enables animals to be monitored\nin real-time. Within\
    \ these production systems the most typical problems we come across\nare grassland\
    \ monitoring [69], animal welfare [70], animal behavior tracking [71], and\nlivestock\
    \ production prediction and optimization [72,73], as shown in Figure 6. The formal\n\
    deﬁnitions of these problems from an FSC perspective are listed below.\n•\nGrassland\
    \ monitoring: This problem is related to the accurate identiﬁcation of grass-\n\
    land inventories in order to discriminate between the most suitable types for\
    \ live-\nstock purposes.\n•\nAnimal welfare: This is focused on the pattern classiﬁcation\
    \ of ingestive behavior in\ngrazing animals for studies of animal nutrition, growth,\
    \ and health.\nSensors 2021, 21, 6910\n15 of 34\n•\nAnimal behavior tracking:\
    \ This is based on the use of behavior analysis to detect\nearly signs of health\
    \ issues and promote early intervention.\n•\nLivestock production: This problem\
    \ is centered on predictions and estimations of\nfarming parameters to optimize\
    \ the economic-energy efﬁciency and sustainability of\nproduction systems.\n3.3.2.\
    \ Processing Problems\nOnce the raw materials of food products have been grown,\
    \ they are delivered to the\nnext step of the FSC, or ‘processing’. Different\
    \ industrial processes (e.g., washing, disinfect-\ning, packaging) are carried\
    \ out in this stage to transform the raw output of production into\nedible food\
    \ products. Depending on the production system under consideration and the\nfood\
    \ products obtained from them, diverse industrial processes can be followed to\
    \ obtain\nthe goods that move on to the distribution stage. However, in spite\
    \ of such production\nparticularities, we have identiﬁed a set of common problems\
    \ that could occur in the three\nproduction systems presented in the section above.\
    \ These problems are shown in Figure 7\nand they are: demand prediction [74],\
    \ production planning for distribution [75], prediction\nof post-harvest losses\
    \ [76], and manufacturing industry processes, such as cooking, drying,\nand others\
    \ [77].\nFigure 7. FSC problems in the processing stage.\n•\nDemand prediction:\
    \ This problem in concerneed with the demand prediction of food\nrequirements\
    \ to avoid overstocking, overproduction, and over-utilization of resources.\n\
    The key idea is to estimate the quantity of food products that will be sold to\
    \ deﬁne\nhow much raw material needs to be processed.\n•\nProduction planning\
    \ for distribution: This is centered on production planning to\nmatch distribution\
    \ requirements. This problem is mostly determined by the sale\nvolumes that a\
    \ particular food product is expected to have.\n•\nPrediction of post-harvest\
    \ losses: This is focused on making estimations of food\nlosses associated with\
    \ the processing procedures carried out after harvesting raw\nmaterials coming\
    \ from the production stage.\n•\nFood manufacturing industry: This is associated\
    \ with the optimization of the pro-\ncessing technologies required to transform\
    \ raw foods into edible food (e.g., thermal,\ndrying, contact cooking, microwave\
    \ heating, etc.). These processes are performed\nusing industrial machinery.\n\
    3.3.3. Distribution Problems\nIn the third step of the food supply chain, food\
    \ products ready for human consumption\nare received from the processing stage\
    \ to be delivered to end-consumers. Speciﬁcally,\nﬁnished products arrive at warehouses,\
    \ and from there, the shipment department is\nin charge of deﬁning the most suitable\
    \ strategy to deliver products to end-consumers.\nThe essential purpose is to\
    \ distribute food products on time by the date speciﬁed in the\nretail stage.\n\
    Sensors 2021, 21, 6910\n16 of 34\nFor this particular stage of the FSC, the most\
    \ common problems reported in the spe-\ncialized literature are shown in Figure\
    \ 8 and deﬁned below. These problems include vehicle\nrouting and ﬂeet management\
    \ [78,79], storage location assignment [80,81], prediction of\nsupply chain risks\
    \ and disruptions [82,83], shelf life prediction and maturity level [84–86],\n\
    demand forecasting [87], and last mile delivery [88].\nFigure 8. FSC problems\
    \ in the distribution stage.\n•\nVehicle routing and ﬂeet management: This is\
    \ focused on determining the most\noptimal route for the delivery of food under\
    \ different scenario constraints (e.g., size of\nthe ﬂeet, fuel availability,\
    \ etc.).\n•\nStorage location assignment problem: This problem is concerned with\
    \ deciding the\nmost suitable way to store food products in a set of warehouses\
    \ in order to cope with\ndaily demand operations.\n•\nPrediction of supply chain\
    \ risks and disruptions: This is concerned with the fore-\ncasting of potential\
    \ disruptions in the logistics of food products and their associated\nfood losses.\n\
    •\nShelf life prediction and maturity level: This problem is related to the forecasting\
    \ of\nshelf life based on data sensed during the distribution process.\n•\nDemand\
    \ forecasting: This consists of understanding demand behaviors and forecast-\n\
    ing user demand generated from the retail stage. Thus, it is possible to optimize\
    \ the\ndelivery routes and warehouse locations used during the distribution stage.\n\
    •\nLast mile delivery: This problem is dedicated to the delivery of food products\
    \ using\nthe local road transport network (last mile) of cities.\n3.3.4. Retail\
    \ Problems\nIn the ﬁnal part of the FSC, we ﬁnd the retail stage. At this point,\
    \ food products are\nreceived through the distribution channels, ready for sale.\
    \ This stage encompasses the\nconcept of an ’end-consumer’, which could be supermarkets\
    \ or clients that go to these\nplaces to buy food products. The most common problems\
    \ identiﬁed in the literature for\nthis stage of the supply chain are deﬁned below\
    \ and are also summarized in Figure 9.\nLastly, we characterized the retail stage\
    \ (Figure 5). Retail-related problems commonly\naddressed with CI, in this link\
    \ of the FSC, are diet and nutrition applications [89,90],\nfood consumption and\
    \ food waste [91,92], consumer demand, perception and buying\nbehavior [93,94],\
    \ dynamic discounting based on the sell-by date [95], and day demand\nprediction\
    \ and inventory management [74].\nSensors 2021, 21, 6910\n17 of 34\nFigure 9.\
    \ FSC problems in the retail stage.\n•\nDiet and Nutrition: This is based on estimating\
    \ nutrient values using the classiﬁcation\nof food dishes and dietary assessment.\n\
    •\nFood consumption and food waste: This problem is associated with the identification\n\
    and prediction of food waste based on the buying and storage behavior of end-customers.\n\
    •\nConsumer demand, perception, and buying behavior: This problem is focused on\n\
    determining consumer proﬁles in order to predict buying behaviors and support\
    \ the\nmanagement of shop counters.\n•\nDynamic discounting based on sell-by date:\
    \ This is centered on automated price\nchanges at supermarkets based on the sell-by\
    \ date. The objective is to offer larger\ndiscounts for items with the shortest\
    \ remaining shelf life.\n•\nDaily demand prediction and inventory management:\
    \ This problem consists of\npredicting daily demand to better manage product stocks\
    \ at supermarkets.\n3.4. Level 3: Typologies of CI Problems\nIn this section,\
    \ we introduce the attributes that represent the most typical typologies\nof CI\
    \ modeling approaches used in the FSC literature. The attributes correspond to\
    \ the\nthird level of the taxonomy shown in Figure 5, and they are presented below.\n\
    •\nProblem-solving: This category is related to problems of complex decision-making\n\
    processes that need to be solved, keeping two key objectives in mind: quality\
    \ of the\nsolution and the computational time required to solve it. As a common\
    \ denominator,\nthis attribute categorizes problems that are NP-hard. Thus, this\
    \ class embodies FSC\nproblems for which there is no certainty that the method\
    \ can optimally solve them\nin a polynomial time (time complexity [96]) with respect\
    \ to the input data size. This\ncategory includes, for example, optimization or\
    \ search problems such as the vehicle\nrouting problem in the transportation stage\
    \ of the FSC.\n•\nUncertain knowledge and reasoning: This category corresponds\
    \ to FSC problems\ncharacterized by having partially observable, non-deterministic,\
    \ vague, or imprecise\ndata. In such uncertain scenarios, this attribute represents\
    \ problems that can be\naddressed in two possible ways. First, by using an approach\
    \ that acts based on\nassumptions of uncertain input data in order to give a probabilistic-based\
    \ solution\nto the problem at hand. Or second, by representing and reasoning with\
    \ the partially\navailable information in a manner similar to the way that humans\
    \ express knowledge\nand summarize data. This second approach allows non-exact\
    \ data to be represented\nin linguist terms in order to make decisions within\
    \ certain margins of correctness.\n•\nKnowledge discovery and function approximation:\
    \ This class represents FSC prob-\nlems that are distinguished by having large\
    \ volumes of data, which enable under-\nstanding and useful knowledge to be extracted\
    \ from them. Such knowledge could be\nused to make either predictions of future\
    \ events or discrimination and recognition of\npatterns. These types of problems\
    \ can usually be addressed with methods that can be\ntrained using the available\
    \ data to learn a speciﬁc task.\n•\nCommunication and perception: This category\
    \ consists of FSC problems focused\non the automatic extraction, analysis, and\
    \ understanding of information obtained\nSensors 2021, 21, 6910\n18 of 34\nfrom\
    \ digital images, texts, or voice recordings. It is worth noting that within the\
    \ FSC\ndomain, most problems solved using a communication and perception approach\
    \ are\nfocused on designing and developing autonomous computer vision systems.\
    \ These\nsystems are able to process high-dimensional data to support decision-making;\
    \ from\nobject detection to video tracking and object recognition.\n3.5. Mapping\
    \ Process between Level 2 and Level 3: Classiﬁcation of FSC Problems from a\n\
    CI Perspective\nThis section presents the categorization of FSC problems previously\
    \ identiﬁed in\nSection 3.3 from a CI perspective. Speciﬁcally, every problem\
    \ is categorized according\nto the four typologies of CI problems that we described\
    \ above: problem-solving, uncer-\ntain knowledge and reasoning, knowledge discovery\
    \ and function approximation, and\ncommunication and perception. In addition,\
    \ using relevant work from the recent FSC\nliterature, we show how the taxonomy\
    \ is able to effectively and robustly discriminate these\npapers. Thus, Section\
    \ 3.5.1 is devoted to classifying the FSC problems coming from the\nproduction\
    \ stage. Then, Section 3.5.2 introduces the classiﬁcation of problems deﬁned for\n\
    the processing stage. Lastly, Sections 3.5.3 and 3.5.4 expose the categorization\
    \ of problems\nfor the distribution and retail phases, respectively.\n3.5.1. Classiﬁcation\
    \ of Production Problems\nFigure 10 presents the categorization of production\
    \ problems for the ﬁsh farming\nand livestock cases. The attributes of the taxonomy\
    \ are depicted on the left in Figure 10,\nwhereas the ﬁsh farming (in purple)\
    \ and livestock (in red) problems are found on the right.\nThe problems and attributes\
    \ are connected by gray bars that connect the ways in which a\nspeciﬁc problem\
    \ can be modeled from a CI perspective. Fish weight estimation, grassland\nmonitoring,\
    \ animal welfare, and animal behavior tracking are problems that are classiﬁed\n\
    using the communication and perception attribute. This is justiﬁed due to the\
    \ fact that\nthese problems are usually characterized by having image and video\
    \ records as input\ndata (non-structured data). Having such data implies the use\
    \ of automatic information\nextraction by means of computer vision systems, based\
    \ on DL, which allow extraction of\nhigh-dimensional patterns embedded in image\
    \ and video data [97–103].\nFigure 10. Fish farming and livestock problems classiﬁed\
    \ by the proposed taxonomy.\nThe production estimation and optimization and livestock\
    \ production problems in\nFigure 10 are classiﬁed using the knowledge discovery\
    \ and function approximation and\nuncertain knowledge and reasoning attributes.\
    \ Such categorization is determined by the\ncentral characteristics of these problems,\
    \ which are concerned with the prediction and\noptimization of production values\
    \ using historical data records (structured data) [104,105].\nBesides, production\
    \ forecasting contains uncertainties regarding external factors of the\nproduction\
    \ systems, which encourage the use of probabilistic methods, such as the studies\n\
    carried out by [106,107].\nSensors 2021, 21, 6910\n19 of 34\nFigure 11 shows the\
    \ categorization of agriculture problems. As we can seen, crop\nprotection, which\
    \ usually involves video and image records, is categorized as a com-\nmunication\
    \ and perception problem commonly used in DL methods like convolutional\nand recurrent\
    \ neural networks [108–110]. On the other hand, the remaining agricultural\nproblems\
    \ can be categorized under knowledge discovery and function approximation,\nproblem-solving,\
    \ and uncertain knowledge and reasoning attributes as explained below.\nIn terms\
    \ of knowledge discovery and function approximation, this attribute categorizes\n\
    problems focused on the prediction of greenhouse conditions for the optimal management\n\
    of crop production, nutrients, and irrigation supply. This can be done using supervised\n\
    learning techniques that forecast variables of interest like temperature, water,\
    \ or nitro-\ngen [6,111]. Secondly, the problem-solving attribute categorizes\
    \ the weather prediction and\nirrigation management and the site-speciﬁc management\
    \ problems. These problems can be\ndeﬁned as optimization scenarios in which we\
    \ can ﬁnd concrete values associated with\nweather, irrigation, and nutrients.\
    \ In this case, the most common approach to solving them\nis based on meta-heuristics\
    \ [112–114].\nFinally, the uncertain knowledge and reasoning attributes characterize\
    \ the same prob-\nlems that fall into the knowledge discovery and function approximation\
    \ attribute. The\ndifference lies in the fact that the agriculture problems are\
    \ approached as decision systems\nunder uncertainty. In this case, fuzzy logic\
    \ is the most suitable strategy to accomplish such\nan aim [115–117] Speciﬁcally,\
    \ the fuzzy approach allows us to evaluate whether particular\nactions need to\
    \ be taken according to sensed and predicted conditions coming from agri-\nculture\
    \ systems (e.g., optimal management strategies for the control of temperature\
    \ control\ninside greenhouse systems).\nFigure 11. Agriculture problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.2. Classiﬁcation of Processing Problems\nHaving\
    \ presented the production stage, Figure 12 features the categorization of prob-\n\
    lems in the processing stage. Any of the depicted FSC problems are classiﬁed using\
    \ the\ncommunication and perception attribute, mainly because the type of input\
    \ data they handle\nis not associated with images or video records. In contrast,\
    \ when the aim is to determine\nfuture scenarios based on the available data,\
    \ all problems tend to have historical data as\ntheir input data.\nPrecisely,\
    \ the knowledge discovery and function approximation attribute categorizes\nthe\
    \ prediction of post-harvest losses and demand prediction problems as being super-\n\
    vised learning problems, whose aims are to claasify and forecast the objective\
    \ variable.\nFor instance, we consider research from [8,118] to be within this\
    \ category. Following the\ntaxonomy’s attributes in Figure 12, the problem-solving\
    \ attribute can represent and model\ndemand predictions, the food manufacturing\
    \ industry, and production planning for dis-\ntribution problems. In this scenario,\
    \ they are classiﬁed as being optimization problems,\nwith the objective of optimizing\
    \ procedures related to the problems listed. An example, for\ninstance, could\
    \ be the optimization of industrial manufacturing processes, like heating and\n\
    Sensors 2021, 21, 6910\n20 of 34\ndrying, using meta-heuristic techniques. Examples\
    \ of studies categorized by the taxonomy\nof the previously mentioned approaches\
    \ are found in [119,120].\nLastly, the uncertain knowledge and reasoning attribute\
    \ system also classiﬁes produc-\ntion planning for distribution problems. Probabilistic\
    \ methods tend to be used to approach\nthese kind of problems as production planning\
    \ can incorporate uncertainty coming from\nprocesses that are not directly related\
    \ to the production process, which can cope with\nprobability theory [121]. An\
    \ example of this last situation could be a change in the delivery\ndate due to\
    \ delays attributable to the weather [122].\nFigure 12. Processing problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.3. Classiﬁcation of Distribution Problems\nFigure\
    \ 13 exhibits the classiﬁcation of FSC problems in the distribution stage. Unlike\n\
    the two previous stages (production and processing), the predominant approaches\
    \ here are\nthe ones imposed by the problem-solving and knowledge discovery and\
    \ function approxi-\nmation attributes. The former attribute categorizes vehicle\
    \ routing and ﬂeet management,\nthe storage location assignment problem, and last\
    \ mile delivery problems, as they are\ndevoted to optimizing routing and delivery\
    \ situations. The purpose of these applications\nis to optimize, using meta-heuristics,\
    \ a concrete goal under different constraints; for in-\nstance, ﬂeet size, available\
    \ fuel, and others. Representative studies that fall in this category\nare [123–127].\n\
    The knowledge discovery and function approximation attribute includes prediction\n\
    of chain and disruptions, a shelf life prediction and maturity level, and demand\
    \ forecasting\nproblems. This attribute classiﬁes these problems under a supervised\
    \ learning perspective,\nwhere the aim is to predict expected values, such as\
    \ we can see in research carried out\nin [84,128–131]. For instance, potential\
    \ disruptions to the cold food products chain, or an\nestimation of how much product\
    \ volume needs to be distributed to meet retail demands.\nFigure 13. Distribution\
    \ problems classiﬁed by the proposed taxonomy.\n3.5.4. Classiﬁcation of Retail\
    \ Problems\nFinally, Figure 14 introduces the classification of problems in the\
    \ retail stage of\nthe FSC. In this last step, the communication and perception\
    \ attribute appears once\nSensors 2021, 21, 6910\n21 of 34\nagain to represent\
    \ the problems in which the input data correspond to non-structured\ndata, such\
    \ as images (dynamic discounting, daily demand prediction, and inventory\nmanagement)\
    \ [95,132–135]. For these particular cases, the problems can be modeled using\n\
    DL techniques to determining price discounts based on stock levels inside supermarkets\n\
    and by managing inventories according to food product existence.\nContrarily,\
    \ the knowledge discovery and function approximation attribute includes\nproblems\
    \ associated with the extraction of patterns (food consumption and food waste),\n\
    the prediction of future values related to consumer demand and buying behavior,\
    \ and the\ngeneration of healthy menus or estimating nutritional values. Research\
    \ articles on this\nattribute include [89,90,136–139]. Furthermore, this attribute\
    \ can also classify the dynamic\ndiscounting and daily demand prediction and inventory\
    \ management problems when\ntheir input data corresponds to structured information\
    \ like historical records.\nIn addition to the attributes mentioned above, the\
    \ uncertain knowledge and reasoning,\nand problem-solving attributes can be used\
    \ to categorize a couple of problems in the retail\nstage. Those problems are\
    \ consumer demand, perception, and buying behavior, as well\nas daily demand prediction\
    \ and inventory management. Consumer demand, perception,\nand buying behavior\
    \ can be approached with a probabilistic system [140–142], for instance,\nuncertainty\
    \ concerning what food products are expected to be bought. Meanwhile, daily\n\
    demand prediction and inventory management can be addressed with an optimization\n\
    paradigm [143,144]. For this case, the aim is to optimize stock levels in such\
    \ a way that\nfood waste can be decreased or even to avoiding over-stocking issues\
    \ completely.\nFigure 14. Retail problems classiﬁed by the proposed taxonomy.\n\
    4. Guidelines for the Use of Computational Intelligence Approaches in the Food\n\
    Supply Chain\nHaving presented and validated the taxonomy of FSC problems, this\
    \ section presents\na set of guidelines for researchers and practitioners in FSC\
    \ for the use of CI within this\ndomain (Figure 15). Concretely, we try to guide\
    \ the users to (1) select the typology of a\nCI problem that they are addressing;\
    \ and (2) identify what families of CI methods could\nbe more suitable for the\
    \ problem at hand. The latter does not mean that in all cases the\nfamily of methods\
    \ suggested is the most appropriate, as this may depend on the speciﬁc\ncharacteristics\
    \ of the problem being addressed.\nThe guidelines depicted in Figure 15 start\
    \ with a basic question posed to the user:\n“What is the purpose and modeling\
    \ characteristics of the problem at hand?” (it could be\ncommunication and perception,\
    \ uncertain knowledge and reasoning, knowledge discovery\nand function approximation,\
    \ and problem-solving). If the purpose is the automatic analysis\nand extraction\
    \ of information from digital images to decide on the action to be taken\nregarding\
    \ the management of food supply systems (communication and perception), the\n\
    suitable family of methods would be deep neural networks (e.g., convolutional\
    \ neural\nnetworks). This family of CI methods enables the creation of computer\
    \ vision systems,\nwhich allows the environment of object characteristics to be\
    \ perceived in a visual way.\nBased on this visual analysis, these systems communicate\
    \ or recommend actions that\nSensors 2021, 21, 6910\n22 of 34\nachieve desired\
    \ states or match predeﬁned conditions (e.g., identify the quality of potatoes\n\
    in order to evaluate the units that are either damaged or edible).\nFigure 15.\
    \ Guidelines for the method selection problem in the food supply chain. Pd: production,\
    \ Ps:\nprocessing, D: distribution, R: retail.\nIf the objective of the user is\
    \ to handle problems characterized by partially observable,\nnon-deterministic,\
    \ or imprecise data (uncertain knowledge and reasoning), fuzzy systems\nor probabilistic\
    \ methods are recommended. For the former CI approach, it is important\nto highlight\
    \ that fuzzy systems need to be paired with hardware (e.g., PID controllers)\n\
    to work properly in food applications. This is due to the fact that hardware components\n\
    allow decisions made by fuzzy systems to be translated into actions (e.g., management\n\
    of nutrients and irrigation supply inside a greenhouse system depending on conditions\n\
    associated with temperature). Probabilistic methods are suitable for making estimations\
    \ of\nrelevant variables (e.g., planning production according to seasonal demand)\
    \ in scenarios\nwith partially observable data.\nWhen the users’ aim is directed\
    \ at making predictions from historical data, making\nclassiﬁcations that discriminate\
    \ between data categories, or ﬁnding hidden patterns in data,\nthe best modeling\
    \ approach to use is knowledge discovery and function approximation.\nFirstly,\
    \ for predictions and classiﬁcations, the user should determine the type of input\n\
    data at hand. In general terms, the input data can be structured (e.g., historical\
    \ records,\ntabular data) or unstructured (e.g., video, images). In the former,\
    \ and depending on the\ndata size, the supervised learning techniques are the\
    \ CI methods to be used when facing\nsmall, medium, and large data no bigger than\
    \ 40–50 gigabytes. Supervised DL, how-\never, is the recommended approach for\
    \ big datasets. In terms of making predictions and\nclassiﬁcations when using\
    \ unstructured data, supervised DL would be the most suitable\nlearning approach;\
    \ while unsupervised ML or unsupervised DL are the recommended\nCI approaches\
    \ for pattern analysis. Finally, as we can see in Figure 15, the other category\n\
    of problems that users might face is problem-solving. In this case, the user’s\
    \ aim is to\noptimize particular values in order to achieve a desired level of\
    \ performance. As such,\nthe above-suggested approaches are therefore all meta-heuristics\
    \ (e.g., EC, SI, and local\nsearch-based techniques).\nIn addition to the analyses\
    \ presented above, the bottom part of Figure 15 also depicts\nwhich FSC stages\
    \ the four CI modeling approaches (and their associated methods) are\nusually\
    \ applied in. Fuzzy systems and probabilistic approaches are typically considered\
    \ for\ncontrol applications in the production, processing, and retail stages.\
    \ In contrast, optimiza-\ntion with meta-heuristics and prediction-classiﬁcation-pattern\
    \ analysis with ML and DL\nare modeling perspectives that are considered in the\
    \ entire FSC process. The contributions\nSensors 2021, 21, 6910\n23 of 34\nof\
    \ communication and perception approaches using DL methods tend to be more typically\n\
    focused on the production and retail stages.\n5. Conclusions\nThis ﬁnal section\
    \ introduces the main reﬂections drawn from the research carried out\nin this\
    \ paper. Section 5.1 introduces the summary and conclusions. Then, Section 5.2\
    \ details\na set of challenges and research opportunities to encourage further\
    \ exploration and use of\nthe possible contributions that CI might bring to the\
    \ FSC ﬁeld.\n5.1. Summary\nThis paper has proposed a new and comprehensive taxonomy\
    \ of FSC problems\nunder a CI paradigm for three representative supply chains:\
    \ agriculture, ﬁsh farming,\nand livestock. The taxonomy was built based on three\
    \ levels in order to categorize FSC\nproblems according to how they can be modeled\
    \ using CI approaches. The ﬁrst and second\nlevels are focused on identifying\
    \ the chain stage (production, processing, distribution,\nand retail) and the\
    \ speciﬁc FSC problem to be addressed (e.g., vehicle routing problems\nin the\
    \ distribution stage). The third level presents the typologies of FSC problems\
    \ from\na CI perspective, and aims to categorize FSC problems depending on how\
    \ they can be\nmodeled and solved by CI methods. In the third level of the taxonomy\
    \ we have deﬁned\nfour attributes, presented as follows, (1) problem solving,\
    \ which is in charge of classifying\nFSC problems focused on optimizing processes;\
    \ (2) uncertain knowledge and reasoning,\nwhich concers problems that have partially\
    \ observable, non-deterministic, incomplete, or\nimprecise data; (3) knowledge\
    \ discovery and function approximation, which has the role\nof categorizing problems\
    \ that aim to make predictions of future scenarios, classiﬁcation of\nvariables,\
    \ or analysis of patterns embedded in data; (4) communication and perception,\n\
    groups FSC problems that involve computer vision systems to sensing and suggesting\n\
    plausible actions to take in order to intervene in such environments.\nTo check\
    \ the robustness of the taxonomy, we categorized FSC problems with CI\nmethods,\
    \ especially in the production, processing, distribution, and retail stages. Here,\
    \ it is\nrelevant to highlight that we introduced a set of uniﬁed deﬁnitions for\
    \ these problems. As\na result, we were able to draw some interesting conclusions.\
    \ In the ﬁsh and livestock cases\nof the production stage, using the DL and the\
    \ communication and perception attribute\nsigniﬁcantly inﬂuences applications\
    \ (e.g., ﬁsh weight estimation, grassland monitoring,\nanimal welfare) where the\
    \ input data is determined by image and video records (non-\nstructured data).\
    \ In contrast, we have the case of classic ML, which is narrowed to FSC\nproblems,\
    \ and for which, the objective is to make production predictions using historical\n\
    data records (structured data). In the case of agriculture production systems,\
    \ the scope of\nthe CI approach is broader. Speciﬁcally, we found that DL, ML,\
    \ FL, and Meta-heuristics are\nmethods for modeling production problems related\
    \ to crop protection and yield, weather\nprediction, and irrigation and nutrient\
    \ management.\nIn the processing stage, ML, meta-heuristics, and probabilistic\
    \ methods are the CI\napproaches commonly used. In terms of ML, the aim is to\
    \ extract patterns and forecast\nobjective variables like demand prediction and\
    \ prediction of post-harvest losses. As for\nmeta-heuristics and probabilistic\
    \ techniques, they aim to optimize food manufacturing\nprocesses (e.g., heating,\
    \ drying) and production planning for distribution. Further down\nin the supply\
    \ chain, the predominant family of CI methods is meta-heuristics, found in\nthe\
    \ distribution link. This data-driven approach is devoted to optimizing the routing\n\
    and delivery problems under various constraints such as ﬂeet size and available\
    \ fuel.\nLastly, DL is the principal CI approach in problems with non-structured\
    \ input data (e.g.,\ndynamic discounting, diet, and nutrition) in the retail stage.\
    \ Classical ML has been used to\nextract patterns (food consumption and food waste)\
    \ and predict consumer demand and\nbuying behavior.\nThe taxonomy allowed us to\
    \ ﬁgure out which modeling approaches are more typically\nconsidered when dealing\
    \ with problems at the four supply chain stages. In this manner,\nSensors 2021,\
    \ 21, 6910\n24 of 34\nwe gave a general overview of well-established tendencies\
    \ regarding CI across the three\nsupply chains considered. Thus, the deﬁnition\
    \ and classiﬁcation of FSC problems helped\nus introduce guidelines for the incorporation\
    \ and use of CI in the food industry. These\nguidelines are built upon CI’s primary\
    \ purposes in the food supply chain: communication\nand perception, uncertain\
    \ knowledge and reasoning representations, knowledge discovery\nand function approximation,\
    \ and problem-solving. These guidelines aim to help non-expert\nCI users to identify\
    \ families of methods that can supply a solution for their particular CI-\nbased\
    \ needs in different FSC problems.\nIn summary, the taxonomy analysis suggests\
    \ that there is no family of CI methods\nthat best suits all FSC problems. However,\
    \ we state the need for a comparison framework\nthat allows the description and\
    \ analysis of the performance of different CI methods in\ndiverse supply chain\
    \ problems. In this context, the taxonomy presented sets up the basis\nfor a common\
    \ framework that, in further research, will facilitate experimentation in order\n\
    to determine which CI approaches are more appropriate for each type of FSC problem.\n\
    This may also help determine a suitable baseline of methods to make fair comparisons,\n\
    depending on the family of CI methods chosen for the FSC problem at hand.\n5.2.\
    \ Challenges and Research Opportunities\nAs industry 4.0 is ﬂourishing for the\
    \ FSC management and operation, emerging re-\nsearch paths arise for CI to yield\
    \ more robust, interoperable, and accurate methods [145,146].\nTherefore, this\
    \ section points out challenges and research opportunities that the community\n\
    should explore to enhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nThese challenges are motivated by the gaps located at the intersection\
    \ of FSC and CI, which\nwere identiﬁed through the proposed taxonomy.\n5.2.1.\
    \ Data Fusion from Different Data Sources\nSigniﬁcantly, few CI methods can incorporate\
    \ data from different types of sources.\nBesides, in real scenarios, the data\
    \ available from a unique type of sensor might not be\nsufﬁcient to fully represent\
    \ the FSC problem that is intended to be addressed. For instance,\ndifferent Internet\
    \ of Things (IoT) devices (e.g., agricultural environment monitoring sys-\ntems,\
    \ GPS, cameras) provide diverse data for the optimum management of production\n\
    systems [147–149]. Amongst the relevant data for the aforementioned example, we\
    \ ﬁnd\ntemperature, humidity, localization coordinates, crop images, and others.\n\
    As a common denominator, all the data associated with the aforementioned variables\n\
    can have a different format, ranging from historical records in the form of tables,\
    \ to non-\nstructured data like images. Additionally, all of them offer valuable\
    \ information for the\npurpose at hand (e.g., prediction of crop production or\
    \ management of pest diseases). In\nthis context, the challenge lies in deﬁning\
    \ guidelines for the harmonizing and fusion of\ndata from diverse sources. Such\
    \ guidelines should consider that each FSC stage can add\nparticularities to the\
    \ data for the CI-based problem under consideration. How to properly\ncollect\
    \ and generate a single dataset with information obtained from varied and different\n\
    sources, which are fed into a CI method, is a research opportunity that must be\
    \ addressed\nto further enhance CI contributions in the FSC domain.\nIf the integration\
    \ process is not done correctly, inconsistencies will appear, resulting in\na\
    \ decrease in the performance of CI approaches [150]. Hence, merging data from\
    \ different\ninput sources presents a notorious problem that commonly attracts\
    \ more issues, such as\ninconsistent, duplicate, redundant, and correlated data.\
    \ One potential research direction\nto take to help cope with this challenge could\
    \ be designing automatic preprocessing\napproaches that fuse and harmonize data\
    \ sources to provide the accepted input format\nof CI methods. For the latter,\
    \ it is important to note that every CI approach requires\ndifferent input data\
    \ formats, which could split the design of the aforementioned automatic\ndata\
    \ preprocessing methods into diverse paths depending on the particular family\
    \ of CI\nmethods under consideration.\nSensors 2021, 21, 6910\n25 of 34\n5.2.2.\
    \ Real-Time Data and Incremental Learning\nIn supervised learning, the input data\
    \ is available before starting any training pro-\ncesses. Here, the task is to\
    \ build up a model from that data using a batch approach. The\nlatter means that\
    \ DL and ML methods use all available samples in the input data to build\nand\
    \ train a model to make predictions or classiﬁcations when new data comes into\
    \ the\ntrained model. Currently, most DL and ML applications are focused on the\
    \ batch learning\napproach, wherein data are given before training the ML models\
    \ [151]. In this context,\nmodel training and optimization processes are purely\
    \ based on the aforementioned in-\nput dataset, whose data distribution is supposed\
    \ to be static. Nevertheless, such a static\napproach is not the case for real\
    \ CI-based applications within the FSC.\nDL and ML methods must real FSC scenarios,\
    \ wherein different IoT devices continu-\nously generate new data streams. For\
    \ instance, dynamic discounts in the retail stage or the\nmanagement of greenhouse\
    \ systems whose conditions must be constantly monitored to\nguarantee the optimal\
    \ control of crops are examples of real-time data streams. Therefore,\nthe key\
    \ challenge is to design ML and DL methods that adapt to real-time data, and work\n\
    with limited resources (e.g., memory), while maintaining their predictive capacities.\n\
    Further research is needed to deal with the aforementioned challenge, and should\n\
    include the concepts of incremental learning [152,153] in the design and deployment\
    \ of\nDL and ML methods in FSC problems. Furthermore, although incremental learning\
    \ is a\nsuitable strategy when dealing with the adaptation of DL and ML to real-time\
    \ data streams,\nthe concept of incremental learning brings up other issues that\
    \ must be considered when it\nis included in the FSC context. These issues are\
    \ introduced in more detail below.\nThe ﬁrst issue is related to the concept of\
    \ drift, which is associated with changes in\nthe new input data’s statistical\
    \ properties (e.g., statistical distribution), which can highly\ninﬂuence the\
    \ performance of pre-trained DL or ML methods [154]. Secondly, we have\nthe stability-plasticity\
    \ dilemma that, in noisy environments, refers to when and how to\nadapt the current\
    \ model to the new data stream [155]. On the one hand, quick updates\nenable fast\
    \ adaptations of the model according to new data; however, at the same time, old\n\
    information that could be useful later in the process is forgotten just as quickly.\
    \ On the\nother hand, slow adaptations can be made, and old data is retained longer,\
    \ causing the\nmodel’s reactivity capacity to decrease; thereby, affecting the\
    \ model’s forecasting power.\nThus, deﬁning policies to balance the two scenarios\
    \ mentioned above is a relevant challenge\nto support the inclusion of CI approaches\
    \ in real-time data environments.\nFinally, the third challenge associated with\
    \ incremental learning is adaptive model\ncomplexity [156]. This issue is concerned\
    \ with the fact that as concept drift events become\nmore frequent, increasing\
    \ model complexity is required. Although the latter improves the\nmodel’s performance,\
    \ increasing its complexity leads to an increase in the need of more\ncomputational\
    \ resources, which are not always affordable or available in different domains,\n\
    such as FSC.\n5.2.3. Explainability of Computational Intelligence Methods\nNowadays,\
    \ CI systems have increased their capacity to carry out different tasks (e.g.,\n\
    predictions, classiﬁcation) with almost no human intervention and are achieving\
    \ high\nproﬁciency levels. In a narrow scope, if the only objective when evaluating\
    \ CI methods is\nperformance, such an object has clearly been achieved thanks\
    \ to this increasing capacity.\nNonetheless, when decisions derived from CI-based\
    \ techniques affect the dynamics of hu-\nman life (e.g., social, cultural, environmental\
    \ dimensions), understanding how CI systems\nhave achieved this performance becomes\
    \ necessary [157].\nWhile some CI approaches, such as fuzzy logic and ML methods\
    \ (e.g., rule-based\nlearners, decision trees), can provide different degrees\
    \ of interpretability and transparency\nof decisions made in their inner structure;\
    \ other methods cannot provide this information\n(e.g., black-box decision systems\
    \ [158]). In these cases, there are no clues regarding the\nsystems’ decisions\
    \ to obtain the ﬁnal result. One example is DL methods, whose complex\ninner structure\
    \ is full of intricate connections between layers and neurons and have a broad\n\
    Sensors 2021, 21, 6910\n26 of 34\nspace of hyperparameters. Therefore, understanding\
    \ where the high performance of DL\nmethods comes from is quite tricky.\nAs DL\
    \ is increasingly being employed in diverse FSC applications due to its per-\n\
    formance capacities, the demand for interpretability, explainability, and transparency\
    \ is\ngrowing between diverse FSC stakeholders. Such demand lies in the fact that\
    \ decisions\nmade based on CI systems can lead to actions, which can not be justiﬁed\
    \ or that require\ndetailed explanations [159] in order to enhance the management\
    \ of the supply chain. For\nexample, the shelf-life of perishable products needs\
    \ to be predicted in the distribution\nstage. However, understanding the factors\
    \ that inﬂuence the deterioration or preservation\nof food products is vital to\
    \ improve the management of distribution chains. The latter is\nknown as explainable\
    \ artiﬁcial intelligence (XAI) and is widely acknowledged as a crucial\nconcept\
    \ to be taken into account in the practical deployment of CI methods [160].\n\
    In this sense, as stated by [160], the challenge of XAI in different knowledge\
    \ domains,\nsuch as FSCs, is creating more explainable methods while maintaining\
    \ their output perfor-\nmance. Besides, it is crucial to facilitate stakeholder\
    \ understanding and trust in decisions\nsupported by CI systems whose outputs\
    \ become the basis for different actions along the\nwhole supply chain.\n5.2.4.\
    \ The Method Selection Problem\nAs shown in this research paper, depending on\
    \ the FSC problem at hand, different\ntypes of CI methods could be used. In this\
    \ sense, Section 4 provides helpful information\nto guide non-expert CI users\
    \ when choosing the most suitable CI family of methods\ndepending on the purpose\
    \ to be pursued (e.g., prediction, classiﬁcation, optimization). In\nthis context,\
    \ keeping in mind the no-free-lunch theorem [161] (which states that there is\n\
    no unique algorithm that can be competitive in all problems), the proposed guidelines\n\
    contribute to dealing with the model selection problem in the FSC area. Nevertheless,\n\
    having identiﬁed the most suitable families of CI methods, it is still difﬁcult\
    \ to choose the\nbest method within each family.\nFor instance, if the objective\
    \ is to optimize a food production process in the processing\nstage, the critical\
    \ question would be to ask what meta-heuristic approach is the most\nsuitable\
    \ for the considered problem. The answer to this question could be to use an\n\
    EC, SI, or local-based approach. However, solving such a decision requires a thorough\n\
    experimentation that demands a large amount of effort and is time-consuming [162].\n\
    Another similar example of the method selection problem is the case of ML. FSC\
    \ data\nallows different variables of interest to be predicted under diverse scenarios,\
    \ ranging from\nﬁsh farming production to agriculture. These characteristics of\
    \ the production context\ninﬂuence ML method performance, and selecting the most\
    \ appropriate method from a\npool of candidates is a time-consuming task. Thus,\
    \ the automation of choosing the best CI\ntechnique from a predeﬁned set of methods\
    \ of the same family is a crucial challenge that\ncould help increase inclusion\
    \ of CI into the FSC.\nCurrently, there are well-established automated approaches\
    \ focused on ML and DL.\nTherefore, we can use the automation of complete ML or\
    \ DL workﬂows, known as Auto-\nmated Machine learning (AutoML) [163] and Automated\
    \ Deep learning (AutoDL) [164].\nSuch approaches are considered to be promising\
    \ strategies to reduce human effort and\ntime cost of ML and DL in research areas\
    \ in which specialized knowledge is an asset\nthat is not always available or\
    \ affordable. Particularly, AutoML and AutoDL seek to ﬁnd\ncompetitive ML pipelines\
    \ (the workﬂow from data preprocessing to model selection) and\nneural network\
    \ architectures automatically without almost any human intervention. The\ncentral\
    \ purpose is maximizing or minimizing a performance metric on input data without\n\
    it having to be specialized in the problem domain where the data comes.\nAutoML\
    \ and AutoDL methods have been successfully used in other areas [165,166].\nHowever,\
    \ an extensive analysis to determine their strengths and weaknesses has not been\n\
    carried out in very diverse learning tasks, such as FSCs. Additionally, the concept\
    \ of\nAutoML and AutoDL could be extrapolated to an even broader space, such as\
    \ automated\nSensors 2021, 21, 6910\n27 of 34\ncomputational intelligence. In\
    \ this case, the focus would be on supporting non-expert\nusers in selecting other\
    \ CI techniques like meta-heuristics and its sub-families (e.g., EC,\nSI, local-based\
    \ approaches). In this context, the research challenge lies in the design and\n\
    development of automated methods for other families of CI methods, including fuzzy\n\
    logic, meta-heuristic, probabilistic methods, and others.\n5.2.5. Interoperability\
    \ and Deployment of CI with Information and\nCommunication Technologies\nCI is\
    \ only one part of the entire ICT ecosystem required to digitize processes in\
    \ the\nFSC. IoT technologies, information storage and management technologies,\
    \ data analytic\nand visualization tools, or decision support technologies are\
    \ other relevant components\nwithout which CI cannot reach its full potential.\
    \ All these technologies have switched the\nfocus from traditional automation\
    \ of FSC processes to a cloud-based paradigm where all\nICTs operate efﬁciently\
    \ and intuitively [167]. Within the cloud-based approaches, major\ntechnologies\
    \ must be able to interoperate with each other and themselves. Thus, such\ninterconnectivity\
    \ and exchange of information are some of the main challenges raised\nwhen incorporating\
    \ CI and other industry 4.0 approaches into the daily operation and\nmanagement\
    \ of FSCs [168].\nOne of the latent issues is the lack of standardization of the\
    \ data models with CI\nmethods. Ultimately the goal of Industry 4.0 in FSCs is\
    \ to incorporate semantic interoper-\nability, which enables systems to exchange\
    \ information with unambiguous meaning [169].\nHowever, the study of interoperability\
    \ standards for CI approaches is a research area that\nstill needs to be fully\
    \ exploited. The demand for these standards is also growing at a\npace never seen\
    \ before, as the current trend of Industry 4.0 is characterized by complex\nautomation\
    \ and production systems where CI works with a wide variety of standards,\ncomponents,\
    \ and services in a cloud-based environment [170]. Despite such challenges, re-\n\
    cent advances have been made in interoperability standards for cloud-based environments.\n\
    Some examples are the interoperable cloud-based manufacturing system [171], the\
    \ hybrid\nmanufacturing cloud framework [172], and the new generation artiﬁcial\
    \ intelligence-driven\nintelligent manufacturing architecture [173].\nAnother\
    \ big challenge of CI in integration with ICTs lies in the manufacturing pro-\n\
    cesses of the FSC production stage. Nowadays, CI approaches are usually focused\
    \ on\nmaximizing accuracy without considering the resources they consume. Nevertheless,\
    \ with\nthe increasing demand of developing a globally low carbon economy, the\
    \ need to build an\nintelligent and environmentally friendly food industry is\
    \ becoming more urgent [174,175].\nIn this sense, CI approaches require that a\
    \ balance be struck between the computational\nresources they use, the energy\
    \ they consume, and the performance they can achieve in the\ntime-frame allowed\
    \ by food manufacturing processes [176]. Furthermore, the aforemen-\ntioned resources\
    \ are assets that are not always available in small- and medium-sized food\nindustries.\
    \ Therefore, more research is required to develop CI methods that are capable\n\
    of being deployed in IoT devices and smart manufacturing industries under different\n\
    constraints like energy efﬁciency and computational resources. In conclusion,\
    \ this research\npath could imply bringing in the concepts of edge computing and\
    \ fog computing [177] for\nthe efﬁcient inclusion of CI in food manufacturing\
    \ processes [178].\nAuthor Contributions: Conceptualization, J.S.A.-Z., A.A.-V.\
    \ and A.D.M.; Methodology, J.S.A.-Z.,\nA.A.-V. and A.D.M.; Validation, J.S.A.-Z.\
    \ and A.D.M.; Formal Analysis, J.S.A.-Z., A.A.-V., A.D.M. and\nJ.L.; Investigation,\
    \ J.S.A.-Z.; Data Curation, J.S.A.-Z.; Writing—Original Draft Preparation, J.S.A.-Z.,\n\
    A.D.M. and J.L.; Writing—Review and Editing, J.S.A.-Z., A.D.M. and J.L.; Visualization,\
    \ J.S.A.-Z.;\nSupervision, A.A.-V. and A.D.M.; Project Administration, A.A.-V.;\
    \ Funding Acquisition, A.A.-V. and\nA.D.M. All authors have read and agreed to\
    \ the published version of the manuscript.\nFunding: This work has been funded\
    \ by the European Union’s Horizon 2020 Research and Innovation\nProgramme under\
    \ Grants 101000617 and 861540. This work has also been funded by the Prize UD-\n\
    Grupo Santander 2019 and the Spanish Ministry of Science and Innovation through\
    \ research project\nPID2019-109393RA-I00.\nSensors 2021, 21, 6910\n28 of 34\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: All data analyzed during this\
    \ study are included in this article.\nAcknowledgments: We want to thank the reviewers\
    \ for their feedback that enabled us to enhance\nthis article’s quality and scientiﬁc\
    \ rigour.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nWorld Population Projected to Reach 9.8 Billion in 2050, and 11.2\
    \ Billion in 2100. 2017. Available online: https://www.un.org/\ndevelopment/desa/en/news/population/world-population-prospects-2017.html\
    \ (accessed on 30 September 2010).\n2.\nMisra, N.N.; Dixit, Y.; Al-Mallahi, A.;\
    \ Bhullar, M.S.; Upadhyay, R.; Martynenko, A. IoT, big data and artiﬁcial intelligence\
    \ in\nagriculture and food industry. IEEE Internet Things J. 2020. [CrossRef]\n\
    3.\nKacprzyk, J.; Pedrycz, W. Introduction. In Springer Handbook of Computational\
    \ Intelligence; Springer: Berlin/Heidelberg, Germany,\n2015; pp. 1–4.\n4.\nBishop,\
    \ C.M. Pattern Recognition and Machine Learning; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n5.\nKakani, V.; Nguyen, V.H.; Kumar, B.P.; Kim, H.; Pasupuleti,\
    \ V.R. A critical review on computer vision and artiﬁcial intelligence in\nfood\
    \ industry. J. Agric. Food Res. 2020, 2, 100033. [CrossRef]\n6.\nLiakos, K.G.;\
    \ Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture:\
    \ A Review. Sensors 2018, 18, 2674.\n[CrossRef]\n7.\nKamilaris, A.; Kartakoullis,\
    \ A.; Prenafeta-Boldú, F.X. A review on the practice of big data analysis in agriculture.\
    \ Comput. Electron.\nAgric. 2017, 143, 23–37. [CrossRef]\n8.\nOnwude, D.I.; Chen,\
    \ G.; Eke-emezie, N.; Kabutey, A.; Khaled, A.Y.; Sturm, B. Recent Advances in\
    \ Reducing Food Losses in the\nSupply Chain of Fresh Agricultural Produce. Processes\
    \ 2020, 8, 1431. [CrossRef]\n9.\nSaiz-Rubio, V.; Rovira-Más, F. From Smart Farming\
    \ towards Agriculture 5.0: A Review on Crop Data Management. Agronomy\n2020, 10,\
    \ 207. [CrossRef]\n10.\nCamaréna, S. Artiﬁcial intelligence in the design of the\
    \ transitions to sustainable food systems. J. Clean. Prod. 2020, 271, 122574.\n\
    [CrossRef]\n11.\nGrifﬁs, S.E.; Bell, J.E.; Closs, D.J. Metaheuristics in Logistics\
    \ and Supply Chain Management. J. Bus. Logist. 2012, 33, 90–106.\n[CrossRef]\n\
    12.\nWari, E.; Zhu, W. A survey on metaheuristics for optimization in food manufacturing\
    \ industry.\nAppl. Soft Comput. 2016,\n46, 328–343. [CrossRef]\n13.\nEnvironmental\
    \ Sustainability Vision Towards 2030: Achievements, Challenges and Opportunities.\
    \ 2012. Available online:\nwww.yumpu.com/en/document/read/20931680/environmental-sustainability-vision-towards-2030-fooddrinkeurope\
    \ (accessed\non 30 September 2010).\n14.\nOECD-FAO. OECD-FAO Guidance for Responsible\
    \ Agricultural Supply Chains; OECD: Paris, France, 2016; p. 88.\n15.\nSharma,\
    \ R.; Kamble, S.S.; Gunasekaran, A.; Kumar, V.; Kumar, A. A systematic literature\
    \ review on machine learning applications\nfor sustainable agriculture supply\
    \ chain performance. Comput. Oper. Res. 2020, 119, 104926. [CrossRef]\n16.\nBorodin,\
    \ V.; Bourtembourg, J.; Hnaien, F.; Labadie, N. Handling uncertainty in agricultural\
    \ supply chain management: A state of\nthe art. Eur. J. Oper. Res. 2016, 254,\
    \ 348–359. [CrossRef]\n17.\nDethier, J.J.; Effenberger, A. Agriculture and development:\
    \ A brief review of the literature.\nEcon. Syst. 2012, 36, 175–205.\n[CrossRef]\n\
    18.\nFøre, M.; Frank, K.; Norton, T.; Svendsen, E.; Alfredsen, J.A.; Dempster,\
    \ T.; Eguiraun, H.; Watson, W.; Stahl, A.; Sunde, L.M.; et al.\nPrecision ﬁsh\
    \ farming: A new framework to improve production in aquaculture. Biosyst. Eng.\
    \ 2018, 173, 176–193. [CrossRef]\n19.\nSundrum, A. Organic livestock farming:\
    \ A critical review. Livest. Prod. Sci. 2001, 67, 207–215. [CrossRef]\n20.\nKamble,\
    \ S.S.; Gunasekaran, A.; Gawankar, S.A. Achieving sustainable performance in a\
    \ data-driven agriculture supply chain: A\nreview for research and applications.\
    \ Int. J. Prod. Econ. 2020, 219, 179–194. [CrossRef]\n21.\nJordan, M.I.; Mitchell,\
    \ T.M. Machine learning: Trends, perspectives, and prospects. Science 2015, 349,\
    \ 255–260. [CrossRef]\n22.\nHinton, G.; Sejnowski, T.J. Unsupervised Learning:\
    \ Foundations of Neural Computation; The MIT Press: Cambridge, MA, USA, 1999.\n\
    23.\nStephen, M. Machine Learning: An Algorithmic Perspective; CRC Press: Boca\
    \ Raton, FL, USA, 2014.\n24.\nCharte, D.; Charte, F.; García, S.; Herrera, F.\
    \ A snapshot on nonstandard supervised learning problems: Taxonomy, relationships,\n\
    problem transformations and algorithm adaptations. Prog. Artif. Intell. 2019,\
    \ 8, 2192–6360. [CrossRef]\n25.\nJain, A.; Duin, R.; Mao, J. Statistical pattern\
    \ recognition: A review. IEEE Trans. Pattern Anal. Mach. Intell. 2000, 22, 4–37.\
    \ [CrossRef]\n26.\nFukunaga, K. Introduction to Statistical Pattern Recognition,\
    \ 2nd ed.; Academic Press Professional, Inc.: Cambridge, MA, USA, 1990.\n27.\n\
    Duda, R.O.; Hart, P.E.; Stork, D.G.; Duda, C.R.O.; Hart, P.E.; Stork, D.G. Pattern\
    \ Classiﬁcation, 2nd ed.; Wiley: Hoboken, NJ,\nUSA, 2001.\n28.\nSmola, A.J.; Schölkopf,\
    \ B. On a Kernel-Based Method for Pattern Recognition, Regression, Approximation,\
    \ and Operator\nInversion. Algorithmica 1998, 22, 211–231. [CrossRef]\nSensors\
    \ 2021, 21, 6910\n29 of 34\n29.\nJaafra, Y.; Luc Laurent, J.; Deruyver, A.; Saber\
    \ Naceur, M. Reinforcement learning for neural architecture search: A review.\n\
    Image Vis. Comput. 2019, 89, 57–66. [CrossRef]\n30.\nTaylor, M.E.; Stone, P. Behavior\
    \ Transfer for Value-Function-Based Reinforcement Learning. In Proceedings of\
    \ the Fourth\nInternational Joint Conference on Autonomous Agents and Multiagent\
    \ Systems, Utrecht, The Netherlands, 25–29 July 2005;\npp. 53–59.\n31.\nSewak,\
    \ M. Policy-Based Reinforcement Learning Approaches. In Deep Reinforcement Learning:\
    \ Frontiers of Artiﬁcial Intelligence;\nSpringer: Singapore, 2019; pp. 127–140.\n\
    32.\nRay, S.; Tadepalli, P. Model-Based Reinforcement Learning. In Encyclopedia\
    \ of Machine Learning; Springer: New York, NY, USA,\n2010; pp. 690–693.\n33.\n\
    Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.;\
    \ Chen, S.C.; Iyengar, S.S. A Survey on Deep Learning:\nAlgorithms, Techniques,\
    \ and Applications. ACM Comput. Surv. 2018, 51, 1–36. [CrossRef]\n34.\nLeCun,\
    \ Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [CrossRef]\n\
    35.\nLiu, L.; Ouyang, W.; Wang, X.; Fieguth, P.; Chen, J.; Liu, X.; Pietikäinen,\
    \ M. Deep Learning for Generic Object Detection: A Survey.\nInt. J. Comput. Vis.\
    \ 2020, 128, 261–318. [CrossRef]\n36.\nDeng, L.; Liu, Y. Deep Learning in Natural\
    \ Language Processing, 1st ed.; Springer: Berlin/Heidelberg, Germany, 2018.\n\
    37.\nSchmidhuber, J. Deep learning in neural networks: An overview. Neural Netw.\
    \ 2015, 61, 85–117. [CrossRef] [PubMed]\n38.\nDargan, S.; Kumar, M.; Ayyagari,\
    \ M.R.; Kumar, G. A Survey of Deep Learning and Its Applications: A New Paradigm\
    \ to Machine\nLearning. Arch. Comput. Methods Eng. 2020, 27, 1071–1092. [CrossRef]\n\
    39.\nBianchi, L.; Dorigo, M.; Gambardella, L.M.; Gutjahr, W.J. A survey on metaheuristics\
    \ for stochastic combinatorial optimization.\nNat. Comput. 2009, 8, 239–287. [CrossRef]\n\
    40.\nBlum, C.; Roli, A. Metaheuristics in Combinatorial Optimization: Overview\
    \ and Conceptual Comparison. ACM Comput. Surv.\n2003, 35, 268–308. [CrossRef]\n\
    41.\nFoster, J.A. Evolutionary computation. Nat. Rev. Genet. 2001, 2, 428–436.\
    \ [CrossRef] [PubMed]\n42.\nChakraborty, A.; Kar, A.K. Swarm Intelligence: A Review\
    \ of Algorithms. In Nature-Inspired Computing and Optimization: Theory\nand Applications;\
    \ Springer: Cham, Switzerland, 2017; pp. 475–494.\n43.\nStefan, V.; Silvano, M.;\
    \ Osman, I.H.; Cathérine, R. Advances and Trends in Local Search Paradigms for\
    \ Optimization, 1st ed.; Springer:\nNew York, NY, USA, 2000.\n44.\nBektas, T.\
    \ The multiple traveling salesman problem: an overview of formulations and solution\
    \ procedures.\nOmega 2006,\n34, 209–219. [CrossRef]\n45.\nKatoch, S.; Chauhan,\
    \ S.S.; Kumar, V. A review on genetic algorithm: past, present, and future. Multimed.\
    \ Tools Appl. 2021,\n80, 8091–8126. [CrossRef]\n46.\nStorn, R.; Price, K. Differential\
    \ Evolution—A Simple and Efﬁcient Heuristic for global Optimization over Continuous\
    \ Spaces.\nJ. Glob. Optim. 1997, 11, 341–359. [CrossRef]\n47.\nStutzle, T.; Dorigo,\
    \ M. Ant Colony Optimization, 1st ed.; The MIT Press: Cambridge, MA, USA, 2004.\n\
    48.\nKennedy, J.; Eberhart, R. Particle swarm optimization. In Proceedings of\
    \ the International Conference on Neural Networks,\nPerth, Australia, 27 November\
    \ –1 December 1995; pp. 1942–1948.\n49.\nGlover, F. Tabu Search—Part I. ORSA J.\
    \ Comput. 1989, 1, 190–206. [CrossRef]\n50.\nFeo, T.A.; Resende, M.G.C. Greedy\
    \ Randomized Adaptive Search Procedures. J. Glob. Optim. 1995, 1995, 2. [CrossRef]\n\
    51.\nBiacino, L.; Gerla, G. Fuzzy logic, continuity and effectiveness. Arch. Math.\
    \ Log. 2002, 41, 643–667. [CrossRef]\n52.\nCox, E. The Fuzzy Systems Handbook:\
    \ A Practitioner’s Guide to Building, Using, and Maintaining Fuzzy Systems; Academic\
    \ Press\nProfessional, Inc.: Cambridge, MA, USA, 1994.\n53.\nGhahramani, Z. Bayesian\
    \ non-parametrics and the probabilistic approach to modelling. Philos. Trans.\
    \ R. Soc. Math. Phys. Eng. Sci.\n2013, 371, 20110553. [CrossRef] [PubMed]\n54.\n\
    Ghahramani, Z. Probabilistic machine learning and artiﬁcial intelligence. Nature\
    \ 2015, 521, 452–459. [CrossRef]\n55.\nBorgelt, C.; Steinbrecher, M.; Kruse, R.R.\
    \ Graphical Models: Representations for Learning, Reasoning and Data Mining, 2nd\
    \ ed.; Wiley\nPublishing: Hoboken, NJ, USA, 2009.\n56.\nRue, H.; Held, L. Gaussian\
    \ Markov Random Fields: Theory and Applications, 1st ed.; Chapman and Hall/CRC:\
    \ Boca Raton, FL,\nUSA, 2005.\n57.\nAquaculture. 2021. Available online: www.fao.org/documents/card/es/c/cb4850en/\
    \ (accessed on 3 August 2021).\n58.\nKonovalov, D.A.; Saleh, A.; Efremova, D.B.;\
    \ Domingos, J.A.; Jerry, D.R. Automatic Weight Estimation of Harvested Fish\n\
    from Images. In Proceedings of the 2019 Digital Image Computing: Techniques and\
    \ Applications (DICTA), Perth, Australia,\n2–4 December 2019.\n59.\nYang, X.;\
    \ Zhang, S.; Liu, J.; Gao, Q.; Dong, S.; Zhou, C. Deep learning for smart ﬁsh\
    \ farming: Applications, opportunities and\nchallenges. Rev. Aquac. 2021, 13,\
    \ 66–90. [CrossRef]\n60.\nTaskiner, T.; Bilgen, B. Optimization Models for Harvest\
    \ and Production Planning in Agri-Food Supply Chain: A Systematic\nReview. Logistics\
    \ 2021, 5, 52. [CrossRef]\n61.\nSu, Y.; Xu, H.; Yan, L. Support vector machine-based\
    \ open crop model (SBOCM): Case of rice production in China. Saudi J. Biol.\n\
    Sci. 2017, 24, 537–547. [CrossRef]\nSensors 2021, 21, 6910\n30 of 34\n62.\nPantazi,\
    \ X.; Moshou, D.; Alexandridis, T.; Whetton, R.; Mouazen, A. Wheat yield prediction\
    \ using machine learning and advanced\nsensing techniques. Comput. Electron. Agric.\
    \ 2016, 121, 57–65. [CrossRef]\n63.\nSambasivam, G.; Opiyo, G.D. A predictive\
    \ machine learning application in agriculture: Cassava disease detection and classiﬁca-\n\
    tion with imbalanced dataset using convolutional neural networks. Egypt. Inform.\
    \ J. 2021, 22, 27–34. [CrossRef]\n64.\nJan, B.; Anne-Katrin, M.; Till, R.; Christoph,\
    \ R.; Lutz, P. A review of advanced machine learning methods for the detection\
    \ of\nbiotic stress in precision crop protection. Precis. Agric. 2015, 16, 1573–1618.\n\
    65.\nRomero, M.; Luo, Y.; Su, B.; Fuentes, S. Vineyard water status estimation\
    \ using multispectral imagery from an UAV platform and\nmachine learning algorithms\
    \ for irrigation scheduling management. Comput. Electron. Agric. 2018, 147, 109–117.\
    \ [CrossRef]\n66.\nTraore, S.; Luo, Y.; Fipps, G. Deployment of artiﬁcial neural\
    \ network for short-term forecasting of evapotranspiration using public\nweather\
    \ forecast restricted messages. Agric. Water Manag. 2016, 163, 363–379. [CrossRef]\n\
    67.\nSirsat, M.; Cernadas, E.; Fernández-Delgado, M.; Barro, S. Automatic prediction\
    \ of village-wise soil fertility for several nutrients\nin India using a wide\
    \ range of regression methods. Comput. Electron. Agric. 2018, 154, 120–133. [CrossRef]\n\
    68.\nCoopersmith, E.J.; Minsker, B.S.; Wenzel, C.E.; Gilmore, B.J. Machine learning\
    \ assessments of soil drying for agricultural planning.\nComput. Electron. Agric.\
    \ 2014, 104, 93–104. [CrossRef]\n69.\nBarrett, B.; Nitze, I.; Green, S.; Cawkwell,\
    \ F. Assessment of multi-temporal, multi-sensor radar and ancillary spatial data\
    \ for\ngrasslands monitoring in Ireland using machine learning approaches. Remote\
    \ Sens. Environ. 2014, 152, 109–124. [CrossRef]\n70.\nVinicius, P.; Zen, K.L.;\
    \ Rocha, P.C.S.; Rafael, C.; Da Silva, J.C.C.; José, K.H.; Richardson, R.; Luiz,\
    \ B.F.; Simioni, A.T. In vivo pattern\nclassiﬁcation of ingestive behavior in\
    \ ruminants using FBG sensors and machine learning. Sensors 2015, 15, 28456–28471.\n\
    71.\nMatthews, S.G.; Miller, A.L.; PlÖtz, T.; Kyriazakis, I. Automated tracking\
    \ to measure behavioural changes in pigs for health and\nwelfare monitoring. Sci.\
    \ Rep. 2017, 7, 2045–2322. [CrossRef]\n72.\nAlonso, J.; Villa, A.; Bahamonde,\
    \ A. Improved estimation of bovine weight trajectories using Support Vector Machine\
    \ Classiﬁca-\ntion. Comput. Electron. Agric. 2015, 110, 36–41. [CrossRef]\n73.\n\
    Craninx, M.; Fievez, V.; Vlaeminck, B.; De Baets, B. Artiﬁcial neural network\
    \ models of the rumen fermentation pattern in dairy\ncattle. Comput. Electron.\
    \ Agric. 2008, 60, 226–238. [CrossRef]\n74.\nErik, H.; Emanuel, R. Big data analytics\
    \ and demand forecasting in supply chains: A conceptual analysis. Int. J. Logist.\
    \ Manag.\n2018, 29, 2.\n75.\nFeng, Q.; Shanthikumar, J.G. How Research in Production\
    \ and Operations Management May Evolve in the Era of Big Data.\nProd. Oper. Manag.\
    \ 2018, 27, 1670–1684. [CrossRef]\n76.\nPurandare, H.; Ketkar, N.; Pansare, S.;\
    \ Padhye, P.; Ghotkar, A. Analysis of post-harvest losses: An Internet of Things\
    \ and machine\nlearning approach. In Proceedings of the International Conference\
    \ on Automatic Control and Dynamic Optimization Techniques,\nPune, India, 9–10\
    \ September 2016; pp. 222–226.\n77.\nBanga, J.R.; Balsa-Canto, E.; Moles, C.G.;\
    \ Alonso, A.A. Improving food processing using modern optimization methods.\n\
    Trends Food Sci. Technol. 2003, 14, 131–144. [CrossRef]\n78.\nEneko, O.; Yang,\
    \ X.S.; Fernando, D.; Enrique, O.; Masegosa, A.D.; Asier, P. A discrete ﬁreﬂy\
    \ algorithm to solve a rich vehicle\nrouting problem modelling a newspaper distribution\
    \ system with recycling policy. Soft Comput. 2017, 21, 1433–7479.\n79.\nNasr,\
    \ N.; Niaki, S.T.A.; Hussenzadek Kashan, A.; Seifbarghy, M. An efficient solution\
    \ method for an agri-fresh food supply chain:\nhybridization of Lagrangian relaxation\
    \ and genetic algorithm. Environ. Sci. Pollut. Res. 2021, 1–19. [CrossRef]\n80.\n\
    Hui, Y.Y.; Choy, K.; Ho, G.; Leung, K.; Lam, H. A cloud-based location assignment\
    \ system for packaged food allocation in\ne-fulﬁllment warehouse. Int. J. Eng.\
    \ Bus. Manag. 2016, 8, 1847979016684832. [CrossRef]\n81.\nMosallanezhad, B.; Hajiaghaei-Keshteli,\
    \ M.; Triki, C. Shrimp closed-loop supply chain network design. Soft Comput. 2021,\n\
    25, 7399–7422. [CrossRef]\n82.\nLuangkesorn, K.; Klein, G.; Bidanda, B. Analysis\
    \ of production systems with potential for severe disruptions. Int. J. Prod. Econ.\n\
    2016, 171, 478–486. [CrossRef]\n83.\nLestari, F.; Mas’ari, A.; Meilani, S.; Riandika,\
    \ I.N.; Hamid, A.B.A. Risk Mitigation Via Integrating House of Risk and Probability\n\
    Impact Matrix in Halal Food Supply Chain. J. Tek. Ind. 2021, 22, 138–154.\n84.\n\
    Wang, Y.; Zhao, Y.; Addepalli, S. Remaining Useful Life Prediction using Deep\
    \ Learning Approaches: A Review. Procedia Manuf.\n2020, 49, 81–88. [CrossRef]\n\
    85.\nBrooks, C.; Parr, L.; Smith, J.M.; Buchanan, D.; Snioch, D.; Hebishy, E.\
    \ A review of food fraud and food authenticity across the\nfood supply chain,\
    \ with an examination of the impact of the COVID-19 pandemic and Brexit on food\
    \ industry. Food Control 2021,\n130, 108171. [CrossRef]\n86.\nShahbazi, Z.; Byun,\
    \ Y.C. A Procedure for Tracing Supply Chains for Perishable Food Based on Blockchain,\
    \ Machine Learning and\nFuzzy Logic. Electronics 2021, 10, 41. [CrossRef]\n87.\n\
    Feizabadi, J. Machine learning demand forecasting and supply chain performance.\
    \ Int. J. Logist. Res. Appl. 2020, 1–24. [CrossRef]\n88.\nBányai, T. Real-Time\
    \ Decision Making in First Mile and Last Mile Logistics: How Smart Scheduling\
    \ Affects Energy Efﬁciency of\nHyperconnected Supply Chain Solutions. Energies\
    \ 2018, 11, 1833. [CrossRef]\n89.\nVasiloglou, M.F.; Mougiakakou, S.; Aubry, E.;\
    \ Bokelmann, A.; Fricker, R.; Gomes, F.; Guntermann, C.; Meyer, A.; Studerus,\
    \ D.;\nStanga, Z. A Comparative Study on Carbohydrate Estimation: GoCARB vs. Dietitians.\
    \ Nutrients 2018, 10, 741. [CrossRef]\n90.\nEftimov, T.; Korosec, P.; Korousi´c\
    \ Seljak, B. StandFood: Standardization of Foods Using a Semi-Automatic System\
    \ for Classifying\nand Describing Foods According to FoodEx2. Nutrients 2017,\
    \ 10, 542. [CrossRef]\nSensors 2021, 21, 6910\n31 of 34\n91.\nGrainger, M.J.;\
    \ Aramyan, L.; Logatcheva, K.; Piras, S.; Righi, S.; Setti, M.; Vittuari, M.;\
    \ Stewart, G.B. The use of systems models to\nidentify food waste drivers. Glob.\
    \ Food Secur. 2018, 16, 1–8. [CrossRef]\n92.\nBonaccorsi, M.; Betti, S.; Rateni,\
    \ G.; Esposito, D.; Brischetto, A.; Marseglia, M.; Dario, P.; Cavallo, F. ‘HighChest’:\
    \ An Augmented\nFreezer Designed for Smart Food Management and Promotion of Eco-Efﬁcient\
    \ Behaviour. Sensors 2017, 17, 1357. [CrossRef]\n93.\nBorimnejad, V.; Samani,\
    \ R.E. Modeling consumer’s behavior for packed vegetable in “Mayadin management\
    \ organization of\nTehran” using artiﬁcial neural network. Cogent Bus. Manag.\
    \ 2016, 3, 1208898. [CrossRef]\n94.\nCene, E.; Karaman, F. Analysing organic food\
    \ buyers’ perceptions with Bayesian networks: A case study in Turkey. J. Appl.\
    \ Stat.\n2015, 42, 1572–1590. [CrossRef]\n95.\nCEPS. Digitising Agrifood—Pathways\
    \ and Challenges. 2019. Available online: www.ceps.eu/ceps-publications/digitising-\n\
    agrifood. (accessed on 3 October 2021)\n96.\nSipser, M. Introduction to the Theory\
    \ of Computation. Available online: http://fuuu.be/polytech/INFOF408/Introduction-To-\n\
    The-Theory-Of-Computation-Michael-Sipser.pdf(accessed on 3 October 2021)\n97.\n\
    Nesteruk, S.; Shadrin, D.; Pukalchik, M.; Somov, A.; Zeidler, C.; Zabel, P.; Schubert,\
    \ D. Image Compression and Plants\nClassiﬁcation Using Machine Learning in Controlled-Environment\
    \ Agriculture: Antarctic Station Use Case. IEEE Sens. J. 2021,\n21, 17564–17572.\
    \ [CrossRef]\n98.\nIqbal, M.A.; Wang, Z.; Ali, Z.A.; Riaz, S. Automatic Fish Species\
    \ Classiﬁcation Using Deep Convolutional Neural Networks.\nWirel. Pers. Commun.\
    \ 2021, 116, 1043–1053. [CrossRef]\n99.\nPetrellis, N. Measurement of Fish Morphological\
    \ Features through Image Processing and Deep Learning Techniques. Appl. Sci.\n\
    2021, 11, 4416. [CrossRef]\n100. Jung, D.H.; Kim, N.Y.; Moon, S.H.; Jhin, C.;\
    \ Kim, H.J.; Yang, J.S.; Kim, H.S.; Lee, T.S.; Lee, J.Y.; Park, S.H. Deep Learning-Based\n\
    Cattle Vocal Classiﬁcation Model and Real-Time Livestock Monitoring System with\
    \ Noise Filtering. Animals 2021, 11, 357.\n[CrossRef] [PubMed]\n101. Kim, Y.J.;\
    \ Park, D.H.; Park, H.; Kim, S.H. Pig Datasets of Livestock for Deep Learning\
    \ to detect Posture using Surveillance\nCamera. In Proceedings of the International\
    \ Conference on Information and Communication Technology Convergence, Jeju,\n\
    Korea, 21–23 October 2020; pp. 1196–1198.\n102. Qiao, Y.; Su, D.; Kong, H.; Sukkarieh,\
    \ S.; Lomax, S.; Clark, C. Data Augmentation for Deep Learning based Cattle Segmentation\n\
    in Precision Livestock Farming. In Proceedings of the International Conference\
    \ on Automation Science and Engineering, Hong\nKong, China, 20–21 August 2020;\
    \ pp. 979–984.\n103. Qiao, Y.; Truman, M.; Sukkarieh, S. Cattle segmentation and\
    \ contour extraction based on Mask R-CNN for precision livestock\nfarming. Comput.\
    \ Electron. Agric. 2019, 165, 104958. [CrossRef]\n104. Zhao, S.; Zhang, S.; Liu,\
    \ J.; Wang, H.; Zhu, J.; Li, D.; Zhao, R. Application of machine learning in intelligent\
    \ ﬁsh aquaculture: A\nreview. Aquaculture 2021, 540, 724–736. [CrossRef]\n105.\
    \ Gao, G.; Xiao, K.; Chen, M. An intelligent IoT-based control and traceability\
    \ system to forecast and maintain water quality in\nfreshwater ﬁsh farms. Comput.\
    \ Electron. Agric. 2019, 166, 105013. [CrossRef]\n106. Lopes, B.D.M.; Silva, L.C.B.;\
    \ Blanquet, I.M.; Georgieva, P.; Marques, C.A.F. Prediction of ﬁsh mortality based\
    \ on a probabilistic\nanomaly detection approach for recirculating aquaculture\
    \ system facilities. Rev. Sci. Instrum. 2021, 92, 025119. [CrossRef]\n107. Strabel,\
    \ T.; Szyda, J.; Ptak, E.; Jamrozik, J. Comparison of Random Regression Test-Day\
    \ Models for Polish Black and White Cattle.\nJ. Dairy Sci. 2005, 88, 3688–3699.\
    \ [CrossRef]\n108. Bayer, P.E.; Edwards, D. Machine learning in agriculture: from\
    \ silos to marketplaces. Plant Biotechnol. J. 2021, 19, 648–650.\n[CrossRef]\n\
    109. Ozguven, M.M.; Adem, K. Automatic detection and classiﬁcation of leaf spot\
    \ disease in sugar beet using deep learning algorithms.\nPhys. A Stat. Mech. Appl.\
    \ 2019, 535, 122537. [CrossRef]\n110. Bah, M.D.; Dericquebourg, E.; Haﬁane, A.;\
    \ Canals, R. Deep Learning Based Classiﬁcation System for Identifying Weeds Using\n\
    High-Resolution UAV Imagery. In Intelligent Computing; Arai, K., Kapoor, S., Bhatia,\
    \ R., Eds.; Springer: Cham, Switzerland, 2019;\npp. 176–187.\n111. Chlingaryan,\
    \ A.; Sukkarieh, S.; Whelan, B. Machine learning approaches for crop yield prediction\
    \ and nitrogen status estimation\nin precision agriculture: A review. Comput.\
    \ Electron. Agric. 2018, 151, 61–69. [CrossRef]\n112. Wu, L.; Huang, G.; Fan,\
    \ J.; Ma, X.; Zhou, H.; Zeng, W. Hybrid extreme learning machine with meta-heuristic\
    \ algorithms for\nmonthly pan evaporation prediction. Comput. Electron. Agric.\
    \ 2020, 168, 105115. [CrossRef]\n113. Kong, Q.; Kuriyan, K.; Shah, N.; Guo, M.\
    \ Development of a responsive optimisation framework for decision-making in precision\n\
    agriculture. Comput. Chem. Eng. 2019, 131, 106585. [CrossRef]\n114. Valente, J.;\
    \ Del Cerro, J.; Barrientos, A.; Sanz, D. Aerial coverage optimization in precision\
    \ agriculture management: A musical\nharmony inspired approach. Comput. Electron.\
    \ Agric. 2013, 99, 153–159. [CrossRef]\n115. Remya, S.; Sasikala, R. Performance\
    \ evaluation of optimized and adaptive neuro fuzzy inference system for predictive\
    \ modeling\nin agriculture. Comput. Electr. Eng. 2020, 86, 106718. [CrossRef]\n\
    116. Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation\
    \ and water conservation in agriculture. Environ.\nModel. Softw. 2015, 63, 73–86.\
    \ [CrossRef]\n117. Papageorgiou, E.; Markinos, A.; Gemtos, T. Fuzzy cognitive\
    \ map based approach for predicting yield in cotton crop production\nas a basis\
    \ for decision support system in precision agriculture application. Appl. Soft\
    \ Comput. 2011, 11, 3643–3657. [CrossRef]\nSensors 2021, 21, 6910\n32 of 34\n\
    118. Dilkhush Mihirsen, D.; Joseph, J.T.; Renisha, B. Time Series Analysis for\
    \ Supply Chain Planning in Restaurants. In Proceedings of\nthe International Conference\
    \ on Computing, Communication and Security, Patna, India, 14–16 October 2020;\
    \ pp. 1–5.\n119. Sadati, N.; Chinnam, R.B.; Nezhad, M.Z. Observational data-driven\
    \ modeling and optimization of manufacturing processes.\nExpert Syst. Appl. 2018,\
    \ 93, 456–464. [CrossRef]\n120. Jonkman, J.; Bloemhof, J.M.; van der Vorst, J.G.;\
    \ van der Padt, A. Selecting food process designs from a supply chain perspective.\n\
    J. Food Eng. 2017, 195, 52–60. [CrossRef]\n121. Ekin, T. Integrated maintenance\
    \ and production planning with endogenous uncertain yield.\nReliab. Eng. Syst.\
    \ Saf. 2018,\n179, 52–61. [CrossRef]\n122. Graves, S.C. Uncertainty and Production\
    \ Planning. In Planning Production and Inventories in the Extended Enterprise:\
    \ A State of the\nArt Handbook, Volume 1; Springer: New York, NY, USA, 2011; pp.\
    \ 83–101.\n123. Zhang, R.Q.; Wang, M.; Pan, X. New model of the storage location\
    \ assignment problem considering demand correlation pattern.\nComput. Ind. Eng.\
    \ 2019, 129, 210–219. [CrossRef]\n124. Baldi, M.M.; Manerba, D.; Perboli, G.;\
    \ Tadei, R. A Generalized Bin Packing Problem for parcel delivery in last-mile\
    \ logistics.\nEur. J. Oper. Res. 2019, 274, 990–999. [CrossRef]\n125. Huang, K.;\
    \ Ardiansyah, M.N. A decision model for last-mile delivery planning with crowdsourcing\
    \ integration. Comput. Ind.\nEng. 2019, 135, 898–912. [CrossRef]\n126. Mummoorthy,\
    \ A.; Mohanasundaram, R.; Saraff, S.; Arun, R. Fleet Management and Vehicle Routing\
    \ in Real Time Using Parallel\nComputing Algorithms. In Soft Computing and Signal\
    \ Processing; Wang, J., Reddy, G.R.M., Prasad, V.K., Reddy, V.S., Eds. Springer:\n\
    Singapore, 2019; pp. 263–270.\n127. Goel, R.; Maini, R. A hybrid of ant colony\
    \ and ﬁreﬂy algorithms (HAFA) for solving vehicle routing problems. J. Comput.\
    \ Sci.\n2018, 25, 28–37. [CrossRef]\n128. Goel, R.; Maini, R. A survey of machine\
    \ learning techniques for food sales prediction. Artif. Intell. Rev. 2018, 52,\
    \ 441–447.\n129. Baryannis, G.; Dani, S.; Antoniou, G. Predicting supply chain\
    \ risks using machine learning: The trade-off between performance\nand interpretability.\
    \ Future Gener. Comput. Syst. 2019, 101, 993–1004. [CrossRef]\n130. Baryannis,\
    \ G.; Dani, S.; Validi, S.; Antoniou, G. Decision Support Systems and Artiﬁcial\
    \ Intelligence in Supply Chain Risk\nManagement. In Revisiting Supply Chain Risk;\
    \ Springer: Cham, Switzerland, 2019; pp. 53–71.\n131. Baryannis, G.; Validi, S.;\
    \ Dani, S.; Antoniou, G. Supply chain risk management and artiﬁcial intelligence:\
    \ state of the art and\nfuture research directions. Int. J. Prod. Res. 2019, 57,\
    \ 2179–2202. [CrossRef]\n132. Morris, S.; Conn Welch, K.; Schroeder, M. Inventory\
    \ Management of the Refrigerator’s Produce Bins Using Classiﬁcation\nAlgorithms\
    \ and Hand Analysis. In Proceedings of the IEEE SoutheastCon 2021, Virtual Conference,\
    \ 10–14 March 2021; pp. 1–8.\n133. Runzel, M.A.S.; Hassler, E.E.; Rogers, R.E.L.;\
    \ Formato, G.; Cazier, J.A. Designing a Smart Honey Supply Chain for Sustainable\n\
    Development. IEEE Consum. Electron. Mag. 2021, 10, 69–78. [CrossRef]\n134. Kudo,\
    \ T. A Proposal for Article Management Method Using Wearable Camera. Procedia\
    \ Comput. Sci. 2020, 176, 1338–1347.\n[CrossRef]\n135. Xu, L.; Kamat, V.R.; Menassa,\
    \ C.C.\nAutomatic extraction of 1D barcodes from video scans for drone-assisted\
    \ inventory\nmanagement in warehousing applications. Int. J. Logist. Res. Appl.\
    \ 2018, 21, 243–258. [CrossRef]\n136. Gunawardena, D.; Sarathchandra, K. BestDish:\
    \ A Digital Menu and Food Item Recommendation System for Restaurants in the\n\
    Hotel Sector. In Proceedings of the International Conference on Image Processing\
    \ and Robotics, Abu Dabi, United Arab Emirates,\n25–28 October 2020; pp. 1–7.\n\
    137. Chiciudean, G.O.; Harun, R.; Ilea, M.; Chiciudean, D.I.; Arion, F.H.; Ilies,\
    \ G.; Muresan, I.C. Organic Food Consumers and\nPurchase Intention: A Case Study\
    \ in Romania. Agronomy 2019, 9, 145. [CrossRef]\n138. Priore, P.; Ponte, B.; Rosillo,\
    \ R.; de la Fuente, D. Applying machine learning to the dynamic selection of replenishment\
    \ policies in\nfast-changing supply chain environments. Int. J. Prod. Res. 2019,\
    \ 57, 3663–3677. [CrossRef]\n139. Tangtisanon, P. Web Service Based Food Additive\
    \ Inventory Management with Forecasting System. In Proceedings of the 2018\n3rd\
    \ International Conference on Computer and Communication Systems (ICCCS), Nagoya,\
    \ Japan, 27–30 April 2018; pp. 448–452.\n140. Maihami, R.; Govindan, K.; Fattahi,\
    \ M. The inventory and pricing decisions in a three-echelon supply chain of deteriorating\n\
    items under probabilistic environment. Transp. Res. Part E Logist. Transp. Rev.\
    \ 2019, 131, 118–138. [CrossRef]\n141. Cevallos-Torres, L.; Botto-Tobar, M. Case\
    \ Study: Probabilistic Estimates in the Application of Inventory Models for Perishable\n\
    Products in SMEs. In Problem-Based Learning: A Didactic Strategy in the Teaching\
    \ of System Simulation; Springer: Cham, Switzerland,\n2019; pp. 123–132.\n142.\
    \ Zhang, Y.; Hua, G.; Wang, S.; Zhang, J.; Fernandez, V. Managing demand uncertainty:\
    \ Probabilistic selling versus inventory\nsubstitution. Int. J. Prod. Econ. 2018,\
    \ 196, 56–67. [CrossRef]\n143. Shen, L.; Li, F.; Li, C.; Wang, Y.; Qian, X.; Feng,\
    \ T.; Wang, C. Inventory Optimization of Fresh Agricultural Products Supply Chain\n\
    Based on Agricultural Superdocking. J. Adv. Transp. 2020, 2020, 1–13. [CrossRef]\n\
    144. Fathi, M.; Nourmohammadi, A.; Ghobakhloo, M.; Youseﬁ, M. Production Sustainability\
    \ via Supermarket Location Optimization\nin Assembly Lines. Sustainability 2020,\
    \ 12, 4728. [CrossRef]\n145. Liu, Y.; Ma, X.; Shu, L.; Hancke, G.P.; Abu-Mahfouz,\
    \ A.M. From Industry 4.0 to Agriculture 4.0: Current Status, Enabling\nTechnologies,\
    \ and Research Challenges. IEEE Trans. Ind. Inform. 2021, 17, 4322–4334. [CrossRef]\n\
    Sensors 2021, 21, 6910\n33 of 34\n146. Araujo, S.O.; Peres, R.S.; Barata, J.;\
    \ Lidon, F.; Ramalho, J.C. Characterising the Agriculture 4.0 Landscape—Emerging\
    \ Trends,\nChallenges and Opportunities. Agronomy 2021, 11, 667. [CrossRef]\n\
    147. Moysiadis, T.; Adamides, G.; Stylianou, A.; Zotos, N.; Giannakopoulou, M.;\
    \ Alexiou, G. Use of IoT technologies for irrigation\nand plant protection: the\
    \ case for Cypriot fruits and vegetables. In Bio-Economy and Agri-Production;\
    \ Bochtis, D., Achillas, C.,\nBanias, G., Lampridi, M., Eds.; Academic Press:\
    \ Cambridge, MA, USA, 2021; pp. 175–194.\n148. Serazetdinova, L.; Garratt, J.;\
    \ Baylis, A.; Stergiadis, S.; Collison, M.; Davis, S. How should we turn data\
    \ into decisions in AgriFood?\nJ. Sci. Food Agric. 2019, 99, 3213–3219. [CrossRef]\n\
    149. Brewster, C.; Roussaki, I.; Kalatzis, N.; Doolin, K.; Ellis, K. IoT in Agriculture:\
    \ Designing a Europe-Wide Large-Scale Pilot.\nIEEE Commun. Mag. 2017, 55, 26–33.\
    \ [CrossRef]\n150. Garcia, S.; Luengo, J.; Herrera, F. Data Preprocessing in Data\
    \ Mining; Springer: Cham, Switzerland, 2015.\n151. Chefrour, A. Incremental supervised\
    \ learning: Algorithms and applications in pattern recognition. Evol. Intell.\
    \ 2019, 12, 97–112.\n[CrossRef]\n152. Wu, Y.; Chen, Y.; Wang, L.; Ye, Y.; Liu,\
    \ Z.; Guo, Y.; Fu, Y. Large Scale Incremental Learning. In Proceedings of the\
    \ IEEE/CVF\nConference on Computer Vision and Pattern Recognition, Long Beach,\
    \ CA, USA, 15–20 June 2019.\n153. Castro, F.M.; Marin-Jimenez, M.J.; Guil, N.;\
    \ Schmid, C.; Alahari, K. End-to-End Incremental Learning. In Proceedings of the\n\
    European Conference on Computer Vision (ECCV), Munich, Germany, 8–14 September\
    \ 2018.\n154. Ditzler, G.; Roveri, M.; Alippi, C.; Polikar, R. Learning in Nonstationary\
    \ Environments: A Survey. IEEE Comput. Intell. Mag. 2015,\n10, 12–25. [CrossRef]\n\
    155. Polikar, R.; Upda, L.; Upda, S.; Honavar, V. Learn++: an incremental learning\
    \ algorithm for supervised neural networks.\nIEEE Trans. Syst. Man Cybern. Part\
    \ C (Appl. Rev.) 2001, 31, 497–508. [CrossRef]\n156. Agarwal, S.; Rattani, A.;\
    \ Chowdary, C.R. AILearn: An Adaptive Incremental Learning Model for Spoof Fingerprint\
    \ Detection.\narXiv 2020, arXiv:2012.14639.\n157. Goodman, B.; Flaxman, S. European\
    \ Union Regulations on Algorithmic Decision-Making and a “Right to Explanation”.\
    \ AI Mag.\n2017, 38, 50–57. [CrossRef]\n158. Castelvecchi, D. Can we open the\
    \ black box of AI? Nature 2016, 538. [CrossRef]\n159. Gunning, D.; Aha, D. DARPA’s\
    \ Explainable Artiﬁcial Intelligence (XAI) Program. AI Mag. 2019, 40, 44–58.\n\
    160. Barredo Arrieta, A.; Díaz-Rodríguez, N.; Del Ser, J.; Bennetot, A.; Tabik,\
    \ S.; Barbado, A.; Garcia, S.; Gil-Lopez, S.; Molina, D.;\nBenjamins, R.; et al.\n\
    Explainable Artiﬁcial Intelligence (XAI): Concepts, taxonomies, opportunities\
    \ and challenges toward\nresponsible AI. Inf. Fusion 2020, 58, 82–115. [CrossRef]\n\
    161. Wolpert, D.H.; Macready, W.G. No free lunch theorems for optimization. IEEE\
    \ Trans. Evol. Comput. 1997, 1, 67–82. [CrossRef]\n162. Osaba, E.; Villar-Rodriguez,\
    \ E.; Del Ser, J.; Nebro, A.J.; Molina, D.; LaTorre, A.; Suganthan, P.N.; Coello\
    \ Coello, C.A.; Herrera, F.\nA Tutorial On the design, experimentation and application\
    \ of metaheuristic algorithms to real-World optimization problems.\nSwarm Evol.\
    \ Comput. 2021, 64, 100888. [CrossRef]\n163. Hutter, F.; Kotthoff, L.; Vanschoren,\
    \ J. (Eds.)\nAutomated Machine Learning:\nMethods, Systems, Challenges; Springer:\n\
    Berlin/Heidelberg, Germany, 2018.\n164. Zimmer, L.; Lindauer, M.; Hutter, F. Auto-PyTorch\
    \ Tabular: Multi-Fidelity MetaLearning for Efﬁcient and Robust AutoDLL.\narXiv\
    \ 2020, arXiv:2006.13799.\n165. Angarita-Zapata, J.S.; Masegosa, A.D.; Triguero,\
    \ I. General-Purpose Automated Machine Learning for Transportation: A Case\nStudy\
    \ of Auto-sklearn for Trafﬁc Forecasting. In Information Processing and Management\
    \ of Uncertainty in Knowledge-Based Systems;\nLesot, M.J., Vieira, S., Reformat,\
    \ M.Z., Carvalho, J.P., Wilbik, A., Bouchon-Meunier, B., Yager, R.R., Eds.; Springer:\
    \ Cham,\nSwitzerland, 2020; pp. 728–744.\n166. Li, Z.; Guo, H.; Wang, W.M.; Guan,\
    \ Y.; Barenji, A.V.; Huang, G.Q.; McFall, K.S.; Chen, X. A Blockchain and AutoML\
    \ Approach for\nOpen and Automated Customer Service. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 3642–3651. [CrossRef]\n167. Zeid, A.; Sundaram, S.; Moghaddam, M.;\
    \ Kamarthi, S.; Marion, T. Interoperability in Smart Manufacturing: Research Challenges.\n\
    Machines 2019, 7, 21. [CrossRef]\n168. Bhatia, M.; Ahanger, T.A. Intelligent decision-making\
    \ in Smart Food Industry: Quality perspective. Pervasive Mob. Comput. 2021,\n\
    72, 101304. [CrossRef]\n169. Burns, T.; Cosgrove, J.; Doyle, F. A Review of Interoperability\
    \ Standards for Industry 4.0. Procedia Manuf. 2019, 38, 646–653.\n[CrossRef]\n\
    170. Nilsson, J.; Sandin, F. Semantic Interoperability in Industry 4.0: Survey\
    \ of Recent Developments and Outlook. In Proceedings of\nthe IEEE International\
    \ Conference on Industrial Informatics (INDIN), Porto, Portugal, 18–20 July 2018;\
    \ pp. 127–132.\n171. Wang, X.V.; Wang, L.; Givehchi, M. ICMS: A Cloud-Based System\
    \ for Production Management. In Advances in Production\nManagement Systems: Innovative\
    \ Production Management Towards Sustainable Growth; Umeda, S., Nakano, M., Mizuyama,\
    \ H.,\nHibino, H., Kiritsis, D., von Cieminski, G., Eds.; Springer: Cham, Switzerland,\
    \ 2015; pp. 444–451.\n172. Lu, Y.; Xu, X.; Xu, J. Development of a Hybrid Manufacturing\
    \ Cloud. J. Manuf. Syst. 2014, 33, 551–566. [CrossRef]\n173. Li, B.; Chai, X.;\
    \ Hou, B.; Zhang, L.; Zhou, J.; Liu, Y. New Generation Artiﬁcial Intelligence-Driven\
    \ Intelligent Manufacturing\n(NGAIIM). In Proceedings of the 2018 IEEE SmartWorld,\
    \ Ubiquitous Intelligence Computing, Advanced Trusted Computing,\nScalable Computing\
    \ Communications, Cloud Big Data Computing, Internet of People and Smart City\
    \ Innovation (Smart-\nWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Guangzhou, China,\
    \ 8–12 October 2018; pp. 1864–1869.\nSensors 2021, 21, 6910\n34 of 34\n174. Perez-Pons,\
    \ M.E.; Plaza-Hernández, M.; Alonso, R.S.; Parra-Domínguez, J.; Prieto, J. Increasing\
    \ Proﬁtability and Monitoring\nEnvironmental Performance: A Case Study in the\
    \ Agri-Food Industry through an Edge-IoT Platform. Sustainability 2021, 13, 283.\n\
    [CrossRef]\n175. Zhang, J.; Qu, X.; Sangaiah, A.K. A Study of Green Development\
    \ Mode and Total Factor Productivity of the Food Industry Based\non the Industrial\
    \ Internet of Things. IEEE Commun. Mag. 2018, 56, 72–78. [CrossRef]\n176. Alonso,\
    \ R.S.; Sittón-Candanedo, I.; García, Ó.; Prieto, J.; Rodríguez-González, S. An\
    \ intelligent Edge-IoT platform for monitoring\nlivestock and crops in a dairy\
    \ farming scenario. Ad Hoc Netw. 2020, 98, 102047. [CrossRef]\n177. Chalapathi,\
    \ G.S.S.; Chamola, V.; Vaish, A.; Buyya, R. Industrial Internet of Things (IIoT)\
    \ Applications of Edge and Fog Computing: A\nReview and Future Directions; Springer:\
    \ Cham, Switzerland, 2021; pp. 293–325.\n178. Kumar, N.; Rodrigues, J.J.P.C.;\
    \ Guizani, M.; Choo, K.K.R.; Lu, R.; Verikoukis, C.; Zhong, Z. Achieving Energy\
    \ Efﬁciency and\nSustainability in Edge/Fog Deployment. IEEE Commun. Mag. 2018,\
    \ 56, 20–21. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/20/6910/pdf?version=1634723940
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Taxonomy of Food Supply Chain Problems from a Computational Intelligence
    Perspective
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2021/5579148
  analysis: '>'
  authors:
  - Sita Rani
  - Aman Kataria
  - Vishal Sharma
  - Swaroop Ghosh
  - Vinod Karar
  - Kyungroul Lee
  - Chang Choi
  citation_count: 25
  full_citation: '>'
  full_text: ">\nReview Article\nThreats and Corrective Measures for IoT Security\
    \ with\nObservance of Cybercrime: A Survey\nSita Rani\n,1 Aman Kataria\n,2 Vishal\
    \ Sharma\n,3 Smarajit Ghosh\n,4 Vinod Karar\n,2\nKyungroul Lee\n,5 and Chang Choi\n\
    6\n1Department of Computer Science & Engineering, Gulzar Group of Institutes,\
    \ Khanna, 141401 Punjab, India\n2Optical Devices and Systems, CSIR-CSIO, Chandigarh\
    \ 160030, India\n3EEECS, Queen’s University Belfast, UK\n4Department of Electrical\
    \ and Instrumentation Engineering, Thapar Institute of Engineering and Technology,\
    \ Patiala, India\n5School of Computer Software, Daegu Catholic University, Gyeongsan-si,\
    \ Republic of Korea\n6Department of Computer Engineering, Gachon University, Seongnam,\
    \ Republic of Korea\nCorrespondence should be addressed to Vishal Sharma; vishal_sharma2012@hotmail.com\n\
    Received 5 January 2021; Revised 28 March 2021; Accepted 31 March 2021; Published\
    \ 28 April 2021\nAcademic Editor: Dario Bruneo\nCopyright © 2021 Sita Rani et\
    \ al. This is an open access article distributed under the Creative Commons Attribution\
    \ License, which\npermits unrestricted use, distribution, and reproduction in\
    \ any medium, provided the original work is properly cited.\nInternet of Things\
    \ (IoT) is the utmost assuring framework to facilitate human life with quality\
    \ and comfort. IoT has contributed\nsigniﬁcantly to numerous application areas.\
    \ The stormy expansion of smart devices and their credence for data transfer using\n\
    wireless mechanics boost their susceptibility to cyberattacks. Consequently, the\
    \ cybercrime rate is increasing day by day. Hence,\nthe study of IoT security\
    \ threats and possible corrective measures can beneﬁt researchers in identifying\
    \ appropriate solutions to\ndeal with various challenges in cybercrime investigation.\
    \ IoT forensics plays a vital role in cybercrime investigations. This review\n\
    paper presents an overview of the IoT framework consisting of IoT architecture,\
    \ protocols, and technologies. Various security\nissues at each layer and corrective\
    \ measures are also discussed in detail. This paper also presents the role of\
    \ IoT forensics in\ncybercrime investigation in various domains like smart homes,\
    \ smart cities, automated vehicles, and healthcare. The role of\nadvanced technologies\
    \ like artiﬁcial intelligence, machine learning, cloud computing, edge computing,\
    \ fog computing, and\nblockchain technology in cybercrime investigation is also\
    \ discussed. Lastly, various open research challenges in IoT to assist\ncybercrime\
    \ investigation are explained to provide a new direction for further research.\n\
    1. Introduction\nThe term “Internet of Things” (IoT) characterizes the net-\n\
    work of devices—“things”—which are equipped with diﬀer-\nent types of sensors,\
    \ advanced technologies, and software.\nAlthough the concept of IoT was introduced\
    \ by Kevin Aston\nin the year 1999, it developed very briskly only in the last\
    \ few\nyears and has become one of the most prominent technolo-\ngies of this\
    \ era [1, 2]. Smart devices and things have the fea-\ntures to gather, process,\
    \ and communicate data to deliver\nseveral services and applications for the convenience\
    \ of users\n[3–5]. Consequently, it is not a single technology but a strong\n\
    merger of 5G and beyond, big data, artiﬁcial intelligence,\nedge computing, FinTech,\
    \ and cloud computing [6] (as\nshown in Figure 1, which represents IoT as a conﬂux\
    \ of\ntechnologies).\nIn a short period, IoT has been deployed in many\ndomains.\
    \ Their applications range from simple household\ndevices to very complex and\
    \ sophisticated industrial equip-\nment and machines. Smart healthcare, supply\
    \ chains, smart\nfarming, unmanned vehicles, smart homes, underwater IoT\nsensors,\
    \ smart cars, smart grids, and smart industries are\nsome of the areas that have\
    \ beneﬁtted the most from IoT\n(as shown in Figure 2) [7, 8]. IoT has also transformed\
    \ a wide\nrange of objects into devices that provide more lifestyle-\nfriendly\
    \ digitized services [9].\nAs all the smart devices are connected through cyber-\n\
    space, an increase in their number has also widened the\nHindawi\nWireless Communications\
    \ and Mobile Computing\nVolume 2021, Article ID 5579148, 30 pages\nhttps://doi.org/10.1155/2021/5579148\n\
    attack surface for cybercrime. Although the domain of cyber-\nsecurity beneﬁtted\
    \ from its involvement with IoT devices, it\nalso introduced diﬀerent types of\
    \ security issues [10]. A sharp\nhike is observed in the statistics of security\
    \ attacks and cyber-\ncrimes across the world based on the reports published by\
    \ the\nInternet Crime Complaint Centre (IC3) in the year 2019 (as\nshown in Table\
    \ 1). From the year 2015 to 2020, a total of\n3,919,014 complaints have been received,\
    \ which caused a\ntotal loss of $23.5 billion. Based on the facts published by\n\
    IC3, India is 3rd in the list of the top 20 countries that were\nvictims of cybercrimes\
    \ [11].\nThe era of IoT-enabled devices is blooming expeditiously.\nThis rapid\
    \ development is introducing both opportunities\nand obstacles for the identiﬁcation\
    \ of physical and cyber\nthreats [12]. These attacks are malignant actions intended\n\
    to damage signiﬁcant data and information and to disturb\nimportant services [13,\
    \ 14] in diﬀerent types of IoT devices\nequipped with sensors [15]. IoT-enabled\
    \ devices facilitate\nthe process of cybercrime detection but are themselves prone\n\
    to cyber threats. One workable security solution lies at the\nmanufacturer’s end.\
    \ At the time of design and development\nof smart devices and applications, it\
    \ is necessary to practice\nsecure technologies and protocols. However, IoT-enabled\n\
    devices provide an increased attack surface for cyber threats\ndue to indigent\
    \ security measures. Security threats are\nseverely tormenting versatile IoT systems.\
    \ The level of the\nsecurity threats in the IoT domain may be even life\nthreatening.\n\
    Data from the main academic databases have been col-\nlected to study the scope\
    \ of potential research in the domain\nof cybersecurity in IoT [16]. Figure 3\
    \ depicts the number of\nresearch papers referred to in the survey related to\
    \ security\nissues in IoT from the year 1998 to 2020. As analyzed, this\narea\
    \ of research has gained a lot of importance in the last\ndecade.\nKeeping in\
    \ view the relevance of the domain and the need\nof the hour, in this paper, we\
    \ discuss IoT architecture, secu-\nrity systems, and potential IoT security threats\
    \ that may\ncause cybercrimes to occur. IoT forensics and its contribu-\ntion\
    \ to crime investigation are also discussed in detail.\nTable 2 presents the merits\
    \ of this survey in comparison to\nthe latest existing surveys. It visualizes\
    \ the novelty of this sur-\nvey as much emphasis is focused on cybercrimes, patents\n\
    reported, and real-time applications developed to mitigate\nthe problems occurring\
    \ due to cybercrimes in IoT devices.\nIn the remainder of this paper, Section\
    \ 2 is focused on the\nvarious types of risks associated with the IoT environment.\n\
    Existing work on IoT security and cybercrime and the scope\nof this survey are\
    \ presented in Section 3. Section 4 is focused\non the IoT framework and applications.\
    \ The role of digital\nforensics in cybercrime investigation is elaborated in\
    \ Section\n5. Section 6 presents the role of advanced technologies in IoT\nsecurity.\
    \ To provide a new direction to researchers, open\nresearch challenges in this\
    \ domain are discussed in Section\n7. The paper is then concluded in Section 8.\n\
    2. Risks in IoT\nThe IoT evolution is prone to cause a diversity of ethical\n\
    problems in society like unauthorized access to conﬁdential\ninformation, privacy\
    \ breach, misuse of secret data, and iden-\ntity theft. Although these problems\
    \ were already existing in\nthe era of the internet and Information and Communication\n\
    Technology (ICT), they have become more dominant in IoT\nsystems [17]. Figure\
    \ 4 describes several potential risks associ-\nated with IoT.\n5G and \nbeyond\n\
    IoT\nCloud \ncomputing\nEdge \ncomputing\nBig data\nFinTech\nAI\nFigure 1: IoT:\
    \ a conﬂux of technologies [1, 3, 5, 6].\nIoT\nSmart grid\nBlockchain\nIndustrial\
    \ \ninternet\nSmart \nhome\nConnected \ncars\nSmart \ncameras\nSmart \nfarming\n\
    Supply \nchains\nConnected \nhealth\nFigure 2: Diﬀerent applications of IoT [1,\
    \ 6, 194–199].\nTable 1: Data on crime complaints and ﬁnancial losses from 2015\n\
    to 2020 [16, 231].\nYear\nNumber of complaints registered\nTotal loss (in $billion)\n\
    2015\n288012\n1.1\n2016\n298728\n1.5\n2017\n301580\n1.4\n2018\n351937\n2.7\n2019\n\
    467361\n3.5\n2020\n2211396\n13.3\n2\nWireless Communications and Mobile Computing\n\
    1998 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016\
    \ 2017 2018 2019 2020\n0\n5\n10\n15\n20\n25\n30\n35\n40\nNumber of citations\n\
    Figure 3: Number of articles cited in this survey from the year 1998 to 2020.\n\
    Table 2: Comparison of features of this survey with the existing survey articles.\n\
    S.\nNo.\nAuthor\nYear\nCyberattacks and\nsecurity\nCybercrime\nSecurity in IoT\n\
    devices\nPrivacy in IoT\ndevices\nPatents\nreported\nDiscussions on real-time\n\
    applications\n1\nBurhan et al.\n2018\n✗\n✗\n✓\n✓\n✗\n✗\n2\nWilliams et al.\n2018\n\
    ✓\n✓\n✗\n✗\n✗\n✗\n3\nHuang et al.\n2018\n✓\n✓\n✗\n✗\n✗\n✗\n4\nBhat and Dutta 2019\n\
    ✓\n✗\n✓\n✗\n✗\n✓\n5\nMrabet et al.\n2018\n✓\n✗\n✗\n✗\n✗\n✗\n6\nTounsi and\nRais\n\
    2017\n✓\n✓\n✗\n✗\n✗\n✓\n7\nJian-hua Li\n2018\n✓\n✗\n✗\n✗\n✗\n✗\n8\nKhadam et al.\n\
    2020\n✓\n✗\n✓\n✓\n✗\n✗\n9\nShaﬁq et al.\n2018\n✓\n✗\n✗\n✗\n✗\n✗\n10\nWeichbroth\n\
    and Lysik\n2020\n✓\n✓\n✓\n✗\n✗\n✗\n11\nThis survey\n2021\n✓\n✓\n✓\n✓\n✓\n✓\nData\
    \ \nsecurity\nData \nauthenticity\nData \ncaptivity\nAvailability \nData \nsensitivity\n\
    Protocols \nsecurity\nTraceability\nApplication \nsecurity\nBoot \nstrapping\n\
    Network \nsecurity\nDevice \nlevel \nsecurity\nData \nintegrity\nPotential risks\
    \ in IoT \nFigure 4: Risks of IoT [17, 132, 170, 200–202].\n3\nWireless Communications\
    \ and Mobile Computing\n2.1. Privacy Facet. The conﬁdentiality of users and the\
    \ secrecy\nof the data generated from numerous business processes are\nthe major\
    \ areas of concern linked to the IoT [18]. The dom-\ninant usage of versatile\
    \ devices with poor security mecha-\nnisms leads to mismanagement of the IoT system\
    \ [19]. To\nhandle the security issues related to data generated by the\nIoT devices,\
    \ there is a requirement for advanced cryptogra-\nphy techniques. However, these\
    \ techniques should be energy\noptimized and have the potential to synchronize\
    \ with the\ndynamism of smart devices [20]. With the advancement in\nIoT, many\
    \ of the following privacy issues evolved [17] [21]:\n(i) Data captivity: a few\
    \ moralistic questions related to\nuser data remain unanswered, such as generating\n\
    unlawful leverage and hard competition. These\nissues are essential to evade consumer\
    \ captivity\nthrough data [22]\n(ii) Data integrity: the consistency and accuracy\
    \ of the\ndata are the primary requirements for the integrity\nof the data in\
    \ IoT devices. Maintaining data integ-\nrity is the main motive of enterprise\
    \ security solu-\ntions as compromising data integrity can lead to\nthe loss of\
    \ sensitive data. Data integrity is necessary\nfor reusability, searchability,\
    \ recovery, and trace-\nability of the data\n(iii) Data security: the data must\
    \ be secured from illegit-\nimate usage on the devices as well as during trans-\n\
    mission in the IoT environment. The diversity of\nthe IoT devices and the diﬀerent\
    \ communication\nmodes cause a challenge for data security protocols,\nwhich is\
    \ the root cause of security breaches [23].\nAnother major threat to data security\
    \ are the vari-\nous applications using this data which expose the\npersonal information\
    \ of the user to cyberattacks\n(iv) Data sensitivity: several applications collect\
    \ a user’s\npersonal information sometimes even without the\nuser’s knowledge.\
    \ Therefore, the sensitivity of the\ndata is a major area of concern. The major\
    \ risks\nassociated with this data are the frame of reference\nof usage of this\
    \ data. Consequently, there should be\nsome security protocols for context-aware\
    \ data col-\nlection and usage [24]\n(v) Protocol security: because of the versatility\
    \ of\ndevices and collaborators convoluted in the station-\ning of IoT, the biggest\
    \ challenge is the applicability\nof law and regulations for the formation of\
    \ authen-\ntic protocols for communication in the IoT. As the\nIoT systems are\
    \ evolving day by day and becoming\nglobal, there is also a clear possibility\
    \ of the applica-\nbility of multiple legislations. Besides, this is an\nimportant\
    \ area for awareness among users, IoT\nmanufacturers, and law builders\n(vi) Network\
    \ security: the network plays a vital role in\nthe security of IoT devices. The\
    \ IoT device is con-\nnected to the network for data and workload. This\ndata\
    \ can become an easy target for hackers or\nattackers who can compromise the whole\
    \ system.\nIt is necessary to adapt and devise eﬀective methods\nto protect the\
    \ network to which the IoT device is\nconnected\n(vii) Device-level security:\
    \ the security of an IoT device\nis considered at the beginning of its design.\
    \ To\nensure the secure implementation of an IoT device,\na secure architecture\
    \ is deployed. During the\nmanufacturing of an IoT device, care is taken in\n\
    terms of secure digital device IDs. The credentials\nused should be those that\
    \ can be trusted to tackle\nvarious attacks like data and device cloning, data\n\
    tampering, or any other misuse\n(viii) Boot strapping: bootstrapping refers to\
    \ any process\nwhich occurs before any IoT device becomes oper-\national. Bootstrapping\
    \ is necessary for the IoT\ndevices of the present generation. The time of boot-\n\
    strapping in the initial conﬁguration of an IoT\ndevice plays a vital role. Therefore,\
    \ the bootstrap-\nping process in IoT devices should be a highly\nsecure process\n\
    (ix) Availability: the blending of IoT in services related\nto health, security,\
    \ etc. has made the continuous\navailability of these services a critical issue.\
    \ Many\npeople are heavily dependent on the IoT devices\nutilized to provide these\
    \ services. Therefore, any\nloss to these services will severely impact human\n\
    life\n(x) Data authenticity: ownership of the collected user\ndata is a major\
    \ unaddressed issue in IoT along with\ndata management. Once the user stops using\
    \ the\nservice, the personal information remains with the\nservice provider and\
    \ can be sold to generate\nrevenue\n(xi) Application security: the applications\
    \ designed for\nvarious IoT devices are also vulnerable to diﬀerent\ntypes of\
    \ attacks. It is necessary that the application\nshould be secure and defensive\
    \ in nature to coun-\nterattack the attackers and malwares. There are dif-\nferent\
    \ types of attacks which can intrude in the\narchitecture of an IoT device like\
    \ DDoS, spam\nattack, message interception through a spyware, a\nvulnerable 3pp\
    \ library, and injection attacks\n(xii) Traceability: in an IoT environment, users\
    \ must\nhave the right to pass consent to provide personal\ninformation to numerous\
    \ real-life services. The\nimplemented security protocols and mechanisms\nshould\
    \ ensure user identiﬁcation on the network,\nbut restrict the user traceability\
    \ to attackers from\npersonal information [25, 26]\n2.2. Security Facet. The security\
    \ of a computer system encom-\npasses various methods and techniques that safeguard\
    \ all\nkinds of resources from illegitimate access. Resources may\ninclude hardware,\
    \ software, and data, whereas illegitimate\n4\nWireless Communications and Mobile\
    \ Computing\naccess may include unauthorized usage or damage to\nresources. In\
    \ IoT systems, security aspects focus on architec-\nture, the security model of\
    \ every device, bootstrapping, net-\nwork security, and application security [27].\
    \ Security\narchitecture demonstrates the various system components\ninvolved\
    \ in ensuring the security of an IoT device. The secu-\nrity model of each device\
    \ focuses on the implementation of\nsecurity methods and criteria along with the\
    \ management\nof various applications. Network security deals with the reli-\n\
    able functioning of IoT. Online application security is all\nabout the authentication\
    \ of various things on the network\nfor communication and exchange of data. Network\
    \ security\nis highly dependent on the internet, which is an anxious\nmedia of\
    \ data exchange and leads to a large possibility of\ndata stealing. The deployment\
    \ of IoT is dependent on the\ninternet and computer networks. Consequently, it\
    \ is aﬀected\nby all security issues related to computer networks as well as\n\
    the internet. Before using IoT devices, all stakeholders\nshould analyze the associated\
    \ risks related to the security\nand privacy of the user information. Accordingly,\
    \ more\nsophisticated security policies must be designed by govern-\ning organizations.\n\
    2.3. Cybercrime. Like any other crime, cybercrime may have a\nvariety of aspects\
    \ and may be committed in diﬀerent plots.\nSeveral deﬁnitions of cybercrime are\
    \ available, given from\ndiﬀerent aspects, i.e., suﬀerers, protector, or viewer.\
    \ Accord-\ning to the deﬁnition given by Marion [28], cybercrime is an\naction\
    \ in which computers or computer networks are used\nas a means, purpose, or platform\
    \ to execute some criminal\nact. It may consist of some information theft or usage\
    \ of com-\nputers to do some other criminal activity. The Council of\nEurope’s\
    \ Cybercrime Treaty deﬁnes cybercrime as any act\nof data content or copyright\
    \ transgression. The “Manual on\nthe Prevention and Control of Computer-Related\
    \ Crime”\nby the United Nations deﬁnes cybercrime as illegitimate\naccess, deceit,\
    \ and falsiﬁcation. According to Gordon and\nFord, cybercrime is any criminal\
    \ activity performed on a\ncomputer, hardware resource, or network. The Council\
    \ of\nEurope’s Convention on Cybercrime classiﬁes criminal acts\ninto four classes:\
    \ (1) breaches of data, secrecy, integrity, and\nhardware resources; (2) computer-centered\
    \ crimes; (3)\ncontent-related crimes; and (4) copyright-related crimes.\nHowever,\
    \ these classiﬁcations are over the line for some\nparameters. According to another\
    \ classiﬁcation given by\nSaini et al. [29], cybercrimes are categorized as data\
    \ crimes,\nnetwork crimes, access crimes, and content-related crimes.\nData crimes\
    \ consist of data stealing, data interception, and\ndata modiﬁcation. Network\
    \ crimes include unwanted inter-\nference in the functioning of computer networks\
    \ to breach\ndata transmitted over the network. Content-related crimes\ninclude\
    \ infringement of ownership and spontaneous cyber\nhazards. Another explanation\
    \ of cybercrime is demonstrated\nby Zhang et al. [30]; according to them, all\
    \ crimes in which\nmachines or networks are used as aids, targets, or the place\n\
    of crime and any conventional crime executed with computer\nresources are considered\
    \ cybercrime. Generally, ICT boosts\nthe rate as well as the domain of criminal\
    \ actions. The loca-\ntion of crime acts as a catalyst for criminal activities\
    \ [31].\nInternet is also a large platform for criminal acts as it was\nnot initially\
    \ deployed with highly secure protocols. As IoT\nsystems are implemented on the\
    \ ceiling of the present inter-\nnet framework, the associated cybercrime issues\
    \ remain\nunresolved. Lastly, the large base of the cyber framework\nenhances\
    \ the inclination not to reveal these criminal acts to\nthe public as the criminal\
    \ acts are executed using virtual\nmethods.\n3. Existing Work on IoT Security\n\
    and Cybercrime\nIn the last few years, several surveys have been conducted to\n\
    impress upon the improvements and research carried out in\nthe IoT systems. In\
    \ these survey papers, the focus is on the\nfundamental aspects of IoT. Along\
    \ with IoT, security issues\nare also discussed in some of these surveys. There\
    \ are few\ndedicated survey papers on IoT security and privacy conten-\ntion.\
    \ In the surveys published in the years 2010-2020, Atzori\net al. [32] discussed\
    \ the security and privacy aspects of IoT. In\nthe ﬁeld of security, the main\
    \ attention is given to authentica-\ntion and data integrity, and the scope of\
    \ research is discussed.\nIn the privacy aspect, the authors suggested limiting\
    \ access to\npersonal data. However, this survey highlights incomplete\nfacts\
    \ regarding security challenges in IoT. Miorandi et al.\n[33] assumed the implementation\
    \ of IoT at three fundamen-\ntal levels, i.e., communication, identiﬁcation, and\
    \ interaction.\nThe authors highlighted the possibility of many security chal-\n\
    lenges in IoT but proposed research on three main issues: the\nprivacy of users,\
    \ data secrecy, and trust. Many burning issues\nrelated to IoT security like access\
    \ control, data integrity, and\nauthentication of the user are not discussed in\
    \ detail [34].\nGubbi et al. [35] discussed security and privacy in the con-\n\
    texts of user identiﬁcation and authentication, data integrity,\nand privacy in\
    \ general. The authors introduced the cloud-\nbased IoT paradigm. On the same\
    \ grounds, few technologies\nare introduced along with the domains of application\
    \ of each\ntechnology.\nIn [36], Aggarwal et al. discussed a security prospectus\n\
    exclusively from a privacy perspective, whereas other security\nchallenges in\
    \ IoT platforms are not discussed. Said [37] dis-\ncussed various IoT architectures\
    \ along with research issues.\nIn this survey, only challenges faced in physical\
    \ security\nand privacy are explored. Moreover, security issues are dis-\ncussed\
    \ without giving any viable solutions. Perera et al. [38]\nelaborated that security\
    \ and privacy challenges are handled\nat the middleware level in the IoT framework\
    \ and at diﬀerent\nlayers. In this survey, security is expressed as a normal issue\n\
    and the authors did not pay any special attention to the\nresearch in the ﬁeld.\
    \ Granjal et al. [39] presented an in-\ndepth review of the diﬀerent security\
    \ mechanisms and proto-\ncols of the time for communication among smart devices.\n\
    The authors also highlighted the available scope of research.\nHowever, on the\
    \ negative side, the authors did not consider\nall security standards in their\
    \ survey but focused on only a\nfew. Sicari et al. [40] reviewed security from\
    \ three diﬀerent\nangles: security requirements, privacy, and trust. Under secu-\n\
    rity requirements, the authors explored the issues related to\naccess control,\
    \ conﬁdentiality, and authentication. The\n5\nWireless Communications and Mobile\
    \ Computing\nbiggest drawback of this work is the inadequacy of the cate-\ngorization\
    \ of research activities in the IoT security paradigm.\nAbomhara and Køein [41]\
    \ reviewed the security threats\nalong with the security and privacy research\
    \ challenges in\ntheir paper. They stressed research issues like interoperability\n\
    of diverse IoT devices and authorization.\nMahmoud et al. [42] surveyed IoT security\
    \ principles.\nThe authors also presented various security issues along with\n\
    corrective measures. The need for advanced technologies to\ntackle hardware, software,\
    \ user identiﬁcation, and wireless\ncommunication issues is also discussed. Pescatore\
    \ and\nShpantzer [43] presented the viewpoint of people actively\ninvolved in\
    \ the research of IoT security issues along with\nthe future prospects in the\
    \ ﬁeld. They also highlighted that\nIoT developers should focus more on security\
    \ issues instead\nof other ICT systems. Gil et al. [44] reviewed various technol-\n\
    ogies and security models in the context of data-related chal-\nlenges. The authors\
    \ impressed upon the collaboration of\nsocial networks and IoT and introduced\
    \ a new concept of\nthe Social Internet of Things (SIoT). IoT security is discussed\n\
    but the concept of cybersecurity in IoT is not touched.\nMuhammad et al. [45]\
    \ discussed the various possible attacks\nin IoT systems. The authors also highlighted\
    \ the security and\nprivacy challenges faced in the IoT environment by the vari-\n\
    ous sensor nodes. In this survey, the requirements of secure\nend-to-end communication\
    \ among smart devices using eﬃ-\ncient encryption and authentication methods are\
    \ suggested.\nVignesh and Samydurai [46] reviewed the three-layered\narchitecture\
    \ of IoT comprised of the application, network,\nand perception layers, along\
    \ with the diﬀerent types of secu-\nrity threats at these layers. They explained\
    \ the eﬀect of wire-\nless signals, movement of IoT in the external environment,\n\
    and the dynamism of the network model as the major chal-\nlenges at the perception\
    \ layer. At the network layer, the major\nhighlighted challenges are DoS and Man-in-the-Middle\n\
    attacks. The major issue that persists at the application layer\nis the variety\
    \ of application policies.\nRazzaq et al. [47] surveyed the diﬀerent security\
    \ require-\nments of an IoT system. The authors categorized the various\nIoT attacks\
    \ into four classes: low level, medium level, high\nlevel, and extremely high\
    \ level. They also suggested the pos-\nsible ways out in handling these attacks.\
    \ Maple [48] discussed\nthe role of IoT devices in various domains like autonomous\n\
    vehicles, health, industry 4.0, logistics, smart grid, agricul-\nture, homes,\
    \ oﬃces, and entertainment. Along with the secu-\nrity, threats in all these application\
    \ areas are also reviewed.\nThey highlighted the security issues related to the\
    \ physical\nlimitations of the things, the versatility of the devices, authen-\n\
    tication, authorization, and implementation. Various issues\nrelated to the privacy\
    \ of the users are also discussed in this\nsurvey. Rughani [49] presented the\
    \ various challenges faced\nby crime investigators to collect pieces of evidence\
    \ from the\nsmart IoT devices available at crime scenes. The author\nimpressed\
    \ upon the need for corrective measures for the\nissues to help in crime investigation\
    \ and make the process\neasy. Corser et al. [50] discussed that to make the IoT\
    \ systems\nmore secure, the security of smart devices and networks\nneeds to be\
    \ improved. To improve device-level security, pro-\ntection of data and dynamic\
    \ testing play a major role. To\nmake communication networks more reliable, there\
    \ is a\nrequirement for authentication, secure protocols, network\ndivision, and\
    \ organization. Burhan et al. [51] presented a\ndetailed survey on the diﬀerent\
    \ layers of the IoT architecture\nalong with the potential attacks at each layer.\
    \ The authors\nalso reviewed various available mechanisms to handle these\nattacks\
    \ and their limitations. Security issues in various IoT\ntechnologies like sensors,\
    \ ZigBee, Bluetooth, RFID, Wi-Fi,\nand 5G networks are discussed in detail.\n\
    Noor and Hassan [52] presented the primary objectives\nof IoT system security.\
    \ The authors highlighted that the pri-\nvacy of the user and the security of\
    \ the data and infrastruc-\nture are the main challenges in the IoT environment.\
    \ The\nauthors also reviewed various tools and simulators to imple-\nment IoT\
    \ security mechanisms. MacDermott et al. [53]\nhighlighted the sharp increase\
    \ in the usage of digital forensics\nfor crime investigation. The authors also\
    \ highlighted that the\nreason for this rise is the increase in smart devices.\
    \ To cope\nup with this change, there is a need for regular development\nin the\
    \ techniques used for crime investigation. The authors\nalso reviewed various\
    \ forensic handling methodologies. Riahi\nSfar et al. [54] presented three diﬀerent\
    \ aspects, i.e., privacy,\ntrust and identiﬁcation/authentication of IoT security.\
    \ Under\nthese three aspects, various open research issues like stan-\ndardization\
    \ of security mechanisms, reduction in the amount\nof data transmitted among smart\
    \ devices, implementation of\ntrust mechanisms to safeguard users and services,\
    \ implemen-\ntation of a global identiﬁcation mechanism for things, and\nautomatic\
    \ discovery of devices in the IoT environment are\nhighlighted.\nNeshenko et al.\
    \ [55] presented an exhaustive survey on\nIoT vulnerabilities. The need for the\
    \ endorsement of diﬀerent\nadvanced technologies like blockchain, deep learning,\
    \ and\ncloud paradigms is stressed in IoT security implementation.\nVarious research\
    \ aspects highlighted in the survey are the\nrequirement of global device identiﬁcation\
    \ mechanisms, the\nneed for more security-centric awareness among IoT users,\n\
    the requirement of more mature security protocols, and the\nadoption of secure\
    \ IoT application development processes.\nZhou et al. [56] reviewed four main\
    \ features of IoT: interde-\npendence, diversity, constraint, and myriad. Consequently,\n\
    the open research issues for these have also been discussed.\nIt is spotlighted\
    \ in the survey that in IoT systems, the devices\nare interdependent, so focusing\
    \ on security mechanisms by\nconsidering each device as a standalone will not\
    \ provide a\nsecure IoT environment. Detection of viruses in IoT devices\nis also\
    \ highlighted as an open research challenge in this sur-\nvey. The issue of sensitivity\
    \ of the user’s personal information\nis also an area of major concern for academicians\
    \ and\nresearchers. Lu and Xu [11] elaborated that the privacy and\nsecurity of\
    \ IoT systems is the biggest research challenge.\nThe authors presented a detailed\
    \ review of the state-of-art\nresearch going on in cybersecurity. IoT architecture\
    \ for\ncybersecurity is discussed in detail. Lastly, the major research\nchallenges\
    \ of the domain are also presented. Aydos et al. [57]\nclassiﬁed IoT vulnerabilities\
    \ depending upon the types of\nattack in four diﬀerent layers: physical layer,\
    \ network layer,\ndata processing layer, and application layer. Depending on\n\
    these vulnerabilities, the authors proposed a risk-based\n6\nWireless Communications\
    \ and Mobile Computing\nsecurity model to evaluate each discussed layer of the\
    \ IoT\narchitecture. Nasiri et al. [58] surveyed the security needs of\nan IoT-dependent\
    \ health care system. They classiﬁed it into\ntwo categories: cybersecurity and\
    \ cyber resilience. Under\ncybersecurity, the various features of conﬁdentiality,\
    \ integ-\nrity, availability, identiﬁcation, authentication, authorization,\n\
    privacy, accountability, nonrepudiation, auditing, and data\nfreshness are elaborated.\
    \ Under cyber resilience, safety, sur-\nvival, performance, reliability, maintenance,\
    \ and information\nsecurity are discussed in detail. Tabassum et al. [59] reviewed\n\
    various IoT security challenges. The authors also demon-\nstrated the role of\
    \ IoT in industry. This study presented\nhow the security issues of individual\
    \ devices/things used at\neach layer in the IoT architecture can aﬀect the security\
    \ of\nan IoT system.\nServida and Casey [12] presented a detailed study of the\n\
    vulnerabilities of smart devices. The authors discussed how\nthese vulnerabilities\
    \ can cause these devices to become vic-\ntims of attacks. On the positive side,\
    \ it is featured that these\nvulnerabilities can help the investigators capture\
    \ digital\ntraces and investigate the crime. Therefore, device vulnerabil-\nities\
    \ are both challenges and opportunities in crime. Blythe\net al. [60] highlighted\
    \ that the IoT environment lacks security\nfeatures as the devices are not manufactured\
    \ with security\nchallenges taken into consideration. It is also discussed that\n\
    at some events, even users do not use the available security\nfeatures of the\
    \ devices due to a lack of knowledge about the\ncustomization of these features.\
    \ In this work, the authors\nimpressed on the need for the standardization of\
    \ communi-\ncation and security protocols in IoT systems and highlighted\nthe\
    \ need for government intervention to assure security at\nthe device level. Adesola\
    \ et al. [61] suggested a novel IoT\nand big data-based smart model to investigate\
    \ and control\ncriminal activities in Nigeria. The authors also developed a\n\
    prototype for the model. This model is useful to keep records\nof criminals. Abdullah\
    \ et al. [16] discussed the security\naspects of IoT by focusing on cybersecurity.\
    \ Open research\nissues related to cybersecurity are highlighted along with pos-\n\
    sible corrective measures. The authors also applied the usage\nof blockchain technology\
    \ to strengthen the cybersecurity\naspect of IoT. Butun et al. [1] presented an\
    \ in-depth review\nof various types of security attacks in wireless sensor net-\n\
    works and IoT systems. Various mechanisms for the preven-\ntion and detection\
    \ of these attacks are also discussed in detail.\nThe authors categorized the\
    \ IoT attacks as active and passive\nattacks. It is also spotlighted that passive\
    \ attacks cannot be\nidentiﬁed using any mechanism. On the other hand, active\n\
    attacks violate the integrity and conﬁdentiality of data. Active\nattacks also\
    \ cause unauthorized access to user data.\nStoyanova et al. [62] surveyed the\
    \ various available\nmodels for digital forensics. Special consideration is given\n\
    to the methods which are used to extract digital data by\nmaintaining the privacy\
    \ of the users. The authors presented\nopen research challenges in the ﬁeld of\
    \ digital forensics by\npaying special attention to the need for more advanced\
    \ foren-\nsic analyzing techniques and universally acceptable proto-\ncols. Tawalbeh\
    \ et al. [63] discussed the various security and\nprivacy challenges of IoT. The\
    \ authors also proposed and\nevaluated a cloud-based IoT security solution. Atlam\
    \ et al.\n[64] reviewed IoT architecture and communication technol-\nogies. Various\
    \ IoT security challenges and threats are also\ndiscussed. The authors also explained\
    \ the role of digital\nforensics in crime investigation. The need for employing\n\
    real-time techniques in IoT forensics is highlighted as the\nneed of the hour.\
    \ Al-Khater et al. [65] presented a detailed\nreview of various categories of\
    \ cybercrimes in detail. Various\ncybercrime detection techniques using statistical\
    \ methods,\nneural networks, machine learning, deep learning, fuzzy\nlogic, data\
    \ mining, computer vision, biometrics, and foren-\nsics are also discussed. The\
    \ authors proposed the require-\nment of cybercriminal proﬁling, which can be\
    \ used as a\ndata set by the investigators in the process of investigation.\n\
    Table 3 presents the comparison of existing security parame-\nters and approaches\
    \ in IoT cybercrimes.\nIn this review, we examine the various aspects of IoT\n\
    systems\nlike\narchitecture,\nprotocols\nand\ntechnologies\ndeployed at various\
    \ layers and application domains. Poten-\ntial risks and possible attacks on each\
    \ layer of the IoT\narchitecture are also discussed. We also present the various\n\
    security mechanisms and their layers of implementation.\nSpecial attention is\
    \ given to IoT forensics in cybercrime\ninvestigations [66, 67]. Various domains\
    \ like smart homes,\nsmart cities, automated transport, drones, and healthcare\n\
    are examined to assist cybercrime investigation [68]. The\nrole of various advanced\
    \ technologies in the investigation\nof cybercrime is also presented. At the end\
    \ of the paper,\nvarious open research challenges in an IoT environment\nthat\
    \ contribute towards the process of IoT forensic to aid\nthe process of cybercrime\
    \ investigation are presented.\n4. IoT Framework and Applications\nIoT is a broad\
    \ network of devices connected over the\ninternet. It has expanded very briskly\
    \ in the last few years.\nCurrently, IoT has evolved as a contemporary styled\
    \ net-\nwork that acts as an agent to link the real and virtual\nworld. Application\
    \ domains of IoT are expanding day by\nday growing from the need for smartphones\
    \ to the need\nfor diﬀerent IoT devices like cameras, music players, smart\nwatches,\n\
    smart\nTVs,\nand\nsmart\nVRs\n(as\nshown\nin\nFigure 5). So is the probability\
    \ of cyberattacks. The funda-\nmental characteristic of IoT applications is to\
    \ gather data\nfrom smart devices and communicate over networks\n[69]. A gigantic\
    \ volume of personalized data is gathered\nby various IoT applications including\
    \ smart agriculture,\nhealthcare, smart homes, and meetings [70]. This large\n\
    amount of data is communicated in IoT systems and then\ninterpreted and analyzed.\
    \ In the research carried out by\nCisco, it is estimated that 50 billion smart\
    \ devices will be\nplugged into the internet in the current year. It is also pre-\n\
    dicted that because of their advanced features, smart\ndevices will become an\
    \ important part of day-to-day life\nin the current year [57]. It is being foreseen\
    \ that the trend\nof using IoT systems will spike and will keep growing\nafterward.\
    \ Due to the vast usage of IoT collected data, a\nnew trend has started. Even\
    \ data collected on smart\ndevices in an IoT environment can be shared for usage\n\
    in\nother\nreal-life\napplications.\nHowever,\nthe\nbiggest\n7\nWireless Communications\
    \ and Mobile Computing\nTable 3: Comparison of existing security parameters/approaches/models\
    \ in IoT cybercrime.\nAuthor\n(year)\nIdeology\nParameters\nAdvantages\nSecurity\n\
    issues\ndiscussed\nAtzori et al.\n(2010) [32]\nA survey of internet of things\
    \ (IoT).\nApplications, service management,\nlogistics.\nApplications of IoT were\
    \ discussed\nin a detailed manner.\n✗\nMiorandi\net al. (2012)\n[33]\nA survey\
    \ of applications and issues\nof security in IoT.\nApplications, security issues\
    \ of IoT,\nresearch challenges.\nResearch challenges and issues of\nsecurities\
    \ were explained in detail.\n✓\nGubbi et al.\n(2013) [35]\nApplication and cloud\
    \ computing-\noriented survey of IoT.\nApplications, addressing schemes,\ncloud\
    \ computing.\nCloud computing and its\napplications in IoT were discussed.\n✓\n\
    Aggarwal\net al. (2013)\n[36]\nA survey of applications, data\nmanagement, and\
    \ research\nchallenges in IoT.\nApplications, data management and\nanalytics,\
    \ security, privacy.\nData management in IoT and\napplications were discussed\
    \ in\ndetail.\n✓\nSaid (2013)\n[37]\nEvaluation of diﬀerent IoT\narchitectures\
    \ is presented.\nHierarchical architecture,\ndistributed architecture.\nDiﬀerent\
    \ IoT architectures were\ndiscussed in detail.\n✗\nPerera et al.\n(2013) [38]\n\
    The authors presented context-\naware computing for IoT devices.\nContext reasoning,\
    \ context\nmodelling, context distribution.\nDiﬀerent contexts related to the\
    \ IoT\nwere presented.\n✗\nGranja let al.\n(2015 ) [39]\nCommunication protocols\
    \ and\nsecurity parameters are discussed in\ndetail.\nDiﬀerent protocols of IoT\n\
    communications, application layer,\nphysical layer, and MAC layer\nsecurity.\n\
    The security of diﬀerent layers in\nIoT communications was discussed\nin detail.\n\
    ✓\nSicari et al.\n(2015) [40]\nResearch challenges and existing\nsolutions in\
    \ IoT security are\npresented in the survey.\nMobile security in IoT, Trust, and\n\
    privacy in IoT, enforcement in IoT,\nauthentication, conﬁdentiality, and\naccess\
    \ control in IoT.\nSecurity of IoT was discussed\nreferring to ongoing projects\
    \ on\nsecuring the IoT.\n✓\nAbomhara\nand Køein\n(2015) [41]\nResearch directions\
    \ concerning IoT\nsecurity and privacy are presented.\nDiﬀerent cyberattacks in\
    \ IoT,\nsecurity and privacy challenges in\nIoT, security threats and challenges.\n\
    Threats to IoT security were\ndiscussed in detail.\n✓\nMahmoud\net al. (2015)\n\
    [42]\nIoT layer architecture and security\nfeatures are the key aspects of this\n\
    paper.\nIoT architecture, IoT security issues,\nIoT security countermeasures.\n\
    Basic architectures of IoT and\nsecurity issues were discussed in\ndetail.\n✓\n\
    Pescatore\nand\nShpantzer\n(2016) [43]\nSurveyed perceptions on IoT, IoT\napplications,\
    \ and industry\nrepresentation by IoT.\nApplications, threats to IoT, risk\nmanagement\
    \ in IoT, data\nmonitoring.\nThe survey conducted with\nparticipants was discussed\n\
    concerning diﬀerent parameters\nrelated to IoT.\n✓\nGil et al.\n(2016) [44]\n\
    A general survey of IoT and context\nawareness of IoT.\nIoT applications domain,\
    \ services\nfor IoT, data mining for IoT.\nServices and data as services were\n\
    discussed. Applications of IoT are\nalso presented.\n✗\nIqbal et al.\n(2017) [232]\n\
    A review of security solutions\nagainst threats on IoT devices.\nDiﬀerent techniques\
    \ of attacks on\nIoT, security and privacy\nrequirements, security solutions in\n\
    IoT.\nThe threats to IoT security and its\nmeasures to counter the threats\nwere\
    \ explained in detail.\n✓\nVignesh and\nSamydurai\n(2017) [46]\nA survey on IoT\
    \ layer architecture\nand security threats on each layer.\nSecurity features of\
    \ IoT,\narchitecture, security remedies.\nSecurity issues in IoT and future\n\
    directions regarding 5G were\ndiscussed in the paper.\n✓\nRazzaq et al.\n(2017)\
    \ [47]\nA survey on diﬀerent types of threats\nin IoT and their solutions is\n\
    discussed.\nApplications of IoT, Threats to IoT,\nanalysis of diﬀerent types of\
    \ attacks.\nApplications of IoT and analysis of\ndiﬀerent types of security threats\n\
    were done.\n✓\nMaple (2017)\n[48]\nA survey of applications of IoT,\nauthentication,\
    \ and identity\nmanagement of IoT, security issues\nof IoT in diﬀerent applications.\n\
    Applications of IoT in automobiles,\nhealth, industry 4.0, agriculture,\nentertainment,\
    \ and media.\nSecurity issues on various\napplications like health and in\nautomobiles\
    \ were discussed along\nwith privacy challenges in detail.\n✓\nRughani\n(2017)\
    \ [49]\nThe authors discussed the\narchitecture of IoT devices along\nwith the\
    \ security aspects and their\napplication in forensics.\nIoT architecture, IoT\
    \ security issues,\nand digital security in IoT.\nDiscussions on forensics in\
    \ IoT and\nsecurity issues were discussed.\n✓\n8\nWireless Communications and\
    \ Mobile Computing\nTable 3: Continued.\nAuthor\n(year)\nIdeology\nParameters\n\
    Advantages\nSecurity\nissues\ndiscussed\nCorser et al.\n(2017) [50]\nThe authors\
    \ laid prime emphasis on\nthe security of IoT devices.\nIoT hardware security,\
    \ dynamic\ntesting, securing IoT networks.\nCertain security issues from a\nhardware\
    \ and software perspective\nwere discussed in detail.\n✓\nBurhan et al.\n(2018)\
    \ [51]\nCompared the diﬀerent application\ndomains of IoT and discussed the\n\
    key elements of IoT.\nApplications of IoT, diﬀerent\narchitecture layers of IoT.\n\
    Identity management framework,\nsecurity mechanisms for IoT, and\nimproved layered\
    \ architecture for\nIoT were discussed.\n✓\nNoor and\nHassan\n(2018) [52]\nA survey\
    \ on IoT security, possible\nattacks on IoT architecture layers are\npresented.\n\
    IoT security attacks on layer review\non IoT authentication, trust\nmanagement,\
    \ and secure routing.\nAttacks on the IoT architecture\nlayer were explained in\
    \ detail.\nSecure routing was presented with\nkey features.\n✓\nMacDermott\net\
    \ al. (2018)\n[53]\nThe authors discussed the IoT, the\npossible crime using,\
    \ or in IoT\ndevices.\nForensic handling regarding IoT and\ncrime using IoT devices.\n\
    Forensic evidence handling in the\nsmart city was discussed in detail.\n✗\nRiahi\
    \ Sfar\net al. (2018)\n[54]\nA survey on IoT security including\ndiscussion on\
    \ smart manufacturing.\nA cognitive approach for IoT, recent\nresearch in data\
    \ privacy trust\nmanagement system.\nCognitive and systemic security\nalong with\
    \ adaptive and context-\naware security was discussed in\ndetail.\n✓\nNeshenko\n\
    et al. (2018)\n[55]\nA survey on the exploitation of\ndiﬀerent IoT devices.\n\
    IoT architecture security in IoT, IoT\nvulnerabilities at diﬀerent\narchitectural\
    \ layers.\nThe security aspects of the layer-\nwise architecture of IoT devices\n\
    were discussed in detail.\n✓\nZhou et al.\n(2018) [56]\nA survey on security features\
    \ and\nprivacy in IoT.\nAttacks on IoT, threats, and\nchallenges in IoT devices.\n\
    Threats to IoT hardware devices\nwere discussed in detail.\n✓\nLu and Xu\n(2018)\
    \ [11]\nA survey article on IoT cyberattacks\nand security schemes.\nDiﬀerent\
    \ cyberattack and layer-wise\nsecurity schemes.\nSecurity schemes for diﬀerent\n\
    layered architectures were explained\nin detail.\n✓\nAydos et al.\n(2019) [57]\n\
    A survey of risk and threat\nassessment on diﬀerent architecture\nlayers of IoT.\n\
    IoT applications, platforms for IoT,\nIoT protocols, security, threats, and\n\
    vulnerabilities in IoT.\nAttack on a diﬀerent layer in IoT\nwas presented along\
    \ with a risk-\nbased layered approach for IoT\nsecurity assessment in detail.\n\
    ✓\nNasiri et al.\n(2019) [58]\nAn article on healthcare-based\nsecure IoT environment.\n\
    Security requirements in IoT.\nCybersecurity requirements were\ndiscussed.\n✗\n\
    Tabassum\net al. (2019)\n[59]\nAn article on various security issues\nin IoT.\n\
    IoT security requirements and\narchitecture of IoT.\nSecurity issues on perception,\n\
    application, and network layer were\ndiscussed in detail.\n✓\nServida and\nCasey\
    \ (2019)\n[12]\nAn article on IoT forensics and\ndetection of traces in IoT.\n\
    Digital forensics, privacy, and IoT\nforensics.\nIoT forensics and detection,\n\
    extraction, and parsing of traces\nfrom IoT devices were discussed in\ndetail.\n\
    ✗\nBlythe et al.\n(2019) [60]\nAn article on cyber hygiene advice\nfor IoT devices.\n\
    Security features of IoT devices,\ndesign code of practice for IoT\ndevices.\n\
    Standardization of security\nprotocols was the main emphasis.\n✓\nAdesola et al.\n\
    (2019) [61]\nAn article on crime management\nwith IoT-based architecture.\nIoT\
    \ architecture, data collection, and\nframework for IoT devices.\nA crime prediction\
    \ and monitoring\nmodel was proposed.\n✗\nAbdullah\net al. (2019)\n[16]\nA review\
    \ of cybersecurity issues and\nchallenges.\nCyberattacks, cybersecurity, IoT\n\
    architecture, and security\ntechniques.\nSecurity techniques at diﬀerent\nlayers\
    \ are discussed in detail. The\nblockchain is implemented to secure\nthe IoT network.\n\
    ✓\nButun et al.\n(2019) [1]\nA survey on diﬀerent kinds of\nattacks and their\
    \ countermeasures in\nIoT devices.\nIoT applications, security attacks on\nIoT\
    \ devices, attacks on diﬀerent\nlayers of IoT architecture.\nDefence against diﬀerent\
    \ passive\nand active attacks on diﬀerent layers\nof IoT architecture was discussed\
    \ in\ndetail.\n✓\n9\nWireless Communications and Mobile Computing\nchallenge in\
    \ the collected data is the versatility of smart\ndevices supported in the IoT\
    \ system architecture.\n4.1. IoT Architecture. There is a need for an open architecture\n\
    to deploy IoT systems to support diverse categories of smart\ndevices and to administer\
    \ interfacing among them. Many\nreviews and research articles are available demonstrating\
    \ this\nIoT architecture [41]. Fundamentally, IoT systems are\ndeployed on a four-layer\
    \ architecture as shown in Figure 6.\nThese four layers are the application layer,\
    \ network layer,\nperception layer, and transport layer. This is the basic IoT\n\
    architecture model which can be practiced with diﬀerent\nIoT applications. For\
    \ each layer of the IoT architecture, the\npossible attacks and the aﬀected domain\
    \ due to the attack\nare shown in Figure 6. These technologies help in the process\n\
    of data collection, interpretation, analysis, and communica-\ntion [71]. The diﬀerent\
    \ layers of the IoT architecture are\ncharacterized as follows:\n(i) Perception\
    \ layer: in this layer, data are generated by\nvarious smart devices. Data is\
    \ also gathered by these\ndevices, which can be further communicated within\n\
    the IoT environment or even to outside applications.\nThis layer works with two\
    \ types of things: IoT\ndevices and IoT hub nodes [72]. IoT devices identify\n\
    themselves in the IoT system, whereas IoT hub\nnodes work as gateways. The data\
    \ collected through\ndevices are transmitted through gateways [73]\n(ii) Network\
    \ layer: in this layer, communication among\nIoT devices and applications is managed.\
    \ The mode\nTable 3: Continued.\nAuthor\n(year)\nIdeology\nParameters\nAdvantages\n\
    Security\nissues\ndiscussed\nStoyanova\net al. (2020)\n[62]\nA survey on IoT forensics\
    \ and its\nchallenges.\nIoT forensic components, IoT\nattacks, IoT security, IoT\
    \ protocols,\nIoT layered architecture.\nIoT forensics challenges and their\n\
    solution, secure cloud service\nmodels were discussed in detail.\n✓\nTawalbeh\n\
    et al. (2020)\n[63]\nAn article on security and privacy in\nIoT devices.\nGeneric\
    \ IoT layers and proposed\nsystem model for secure IoT devices.\nA system model\
    \ was proposed using\nthe cloud edge nodes and IoT nodes.\n✓\nAtlam et al.\n(2020)\
    \ [64]\nAn article on cybercrime, security,\nand digital forensics for IoT devices.\n\
    IoT applications, IoT architecture,\ncharacteristics, and communication\ntechnologies\
    \ in IoT, security threats\nin IoT.\nThe security solution of four-\nlayered IoT\
    \ architecture was\ndiscussed in detail.\n✓\n(i) Mobile phone\nMobile phone\n\
    2003\n0\n2006\n2010\n2015\n2020\n2025\nYear\nCamera\nMusic player\n(i)\n(ii)\n\
    (iii)\nMobile phone\nGrowth in smart IoT devices\nCamera\n(i)\n(ii)\nMobile phone\n\
    Camera\nMusic player\nSmart watch\nSmart TV\nSmart car\n(i)\n(ii)\n(iii)\n(iv)\n\
    (v)\n(vi)\nMobile phone\nCamera\nMusic player\nSmart watch\nSmart TV\nSmart car\n\
    Smart VR/augmented devices\nSmart healthcare devices\n(i)\n(ii)\n(iii)\n(iv)\n\
    (v)\n(vi)\n(vii)\n(viii)\nMobile phone\nCamera\nMusic player\nSmart watch\n(i)\n\
    (ii)\n(iii)\n(iv)\n10\n20\nNumber of smart IoT devices\n(in billions)\n30\n40\n\
    50\n60\nFigure 5: Growth expectations in the type of IoT devices [57, 203–208].\n\
    10\nWireless Communications and Mobile Computing\nof communication may be wired\
    \ or wireless. Various\nnetwork security protocols are deployed in the net-\n\
    work layer. The IoT gateways are set up at this layer.\nThis layer receives the\
    \ data coming from the lower\nlayer and maps to the format required by the appli-\n\
    cations running in the upper layer [74]\n(iii) Application layer: the application\
    \ layer is also inter-\npreted as the service layer. Here, the data gathered by\n\
    various devices are used, analyzed, interpreted, and\npresented. This layer can\
    \ be customized under dif-\nferent policies depending upon the service adminis-\n\
    tered [75]\n(iv) Transport layer: the transport layer is responsible for\nend-to-end\
    \ communication over the network. It also\nprovides reliability multiplexing along\
    \ with ﬂow\ncontrol. Congestion control is also performed in\nthe transport layer\
    \ [76]\n4.2. Protocols. Functionalities provided by the various layers\nof the\
    \ IoT architecture are administered by the diﬀerent pro-\ntocols deployed in the\
    \ diﬀerent layers [77]. The various pro-\ntocols used at the diﬀerent layers of\
    \ the IoT architecture like\nthe application layer, perception layer, network\
    \ layer, and\ntransport layer are shown in Figure 7. Various protocols\ndeployed\
    \ in the perception layer are the IEEE 802.11 series,\nthe 802.15 series, Wireless\
    \ HART (Highway Addressable\nRemote Transducer), etc. [75]. The IEEE 802.15.4\
    \ is used\nfor data exchange in a long-range wireless personal area net-\nwork\
    \ (LR-WPAN). ZigBee and Wireless HARTs are also\ndeployed in the IoT perception\
    \ layer [78].\nThe protocols used in the network layer of the IoT archi-\ntecture\
    \ are IPv6/IPv4, 6LoWPAN (IPv6 over Low-Power\nWireless Personal Area Networks),\
    \ and 6TiSCH (Time-Slot-\nted Channel Hopping) developed by IETF which is an IPv6\n\
    standard for the 802.15.4 MAC layer protocols [79]. IPv6\nG.9959 is an IPv6 addressing\
    \ standard for the G.9959 MAC\nlayer protocol which was designed for low-power\
    \ devices in\na personal area network (PAN). For real-time systems, the\nData\
    \ Distribution Service (DDS) is used. This protocol does\nnot require any networking\
    \ middleware and network pro-\ngramming, which allow the publisher to release\
    \ speciﬁc\ninformation. The lightweight messaging protocol used in\nthe application\
    \ layer is MQTT (Message Queuing Telemetry\nTransport), and it uses machine-to-machine\
    \ communication\nbased on TCP-IP. The protocols specially designed for IoT\nenvironments,\
    \ e.g., CoAP (Constrained Application Proto-\ncol) are used in the application\
    \ layer for limited hardware.\nThe hardware that does not support HTTP can use\
    \ the CoAP\nprotocol. The XML-based protocol used in the application\nlayer is\
    \ known as the Extensible Messaging and Presence\nProtocol (XMPP). XMPP is used\
    \ for real-time instant mes-\nsaging and multiparty chat. Simple or Streaming\
    \ Text Ori-\nented Messaging Protocol (STOMP) is a protocol for\nmessage-oriented\
    \ middleware. It was designed to establish\ncommunication between clients and\
    \ brokers [80–85]. In the\ntransport layer, Datagram Transport Layer Security\
    \ (DTLS)\nis designed to prevent message forgery and tampering. The\nprotocol\
    \ similar to the time-division multiplexing in the\ntransport layer is the Time\
    \ Synchronized Mesh Protocol\n(TSMP). It was developed for intersensor communication\n\
    in timeslots. The message-oriented transport layer protocol\nis the Stream Control\
    \ Transmission Protocol (SCTP), which\nBlockchain\nSmart \nDevices\nWearables\n\
    Smart vehicles\nService \ninterruption\nData \ntheft \nReprogramming\nAccess \n\
    control\nAttacks\nApplication layer\nNetwork layer\nPerception layer\nTransport\
    \ layer\nAffected domain\nTransmission\nRouters\nWi-Fi\nProtocols\nDDoS\nRouting\n\
    Access control\nPhishing\nAttacks\nAffected domain\nTemperature Smoke detectors\n\
    sensors\nActuators\nUltrasonic\nsensors\nBooting\nvulnerabilities\nFalse data\
    \ \ninjection \nNode \ncapturing\nSide \nchannels\nAttacks\nAffected domain\n\
    Credit \ncards\nWeb domains Data server client\nSQL database\nCross-site\nrequest\
    \ forgery\n(CSRF)\nRegister \nhijacking SQL injection\nCross-site\nscripting (XSS)\n\
    Attacks\nAffected domain\nFigure 6: Layers of IoT with technologies deployed and\
    \ possible attacks [170, 209–214].\n11\nWireless Communications and Mobile Computing\n\
    uses congestion control to transfer data over a network. For\nlarge packets and\
    \ data, the Transmission Control Protocol\n(TCP) is used in the transport layer\
    \ in IoT. The User Data-\ngram Protocol (UDP) is a protocol for lesser data; it\
    \ is used\nto send data to the server and is suitable for wireless sensor\nnetwork\
    \ communication. The extension of the IPv6 routing\nprotocol is Cognitive RPL\
    \ (CORPL), which was developed\nespecially for cognitive networks. It consists\
    \ of multiple for-\nwarders with the best node selected to forward the data\n\
    [86–89].\n4.3. IoT Application Domains. The incorporation of smart\ndevices to\
    \ gather data from our day-to-day life activities\nmake many IoT applications\
    \ feasible [41]. These applications\ncan be categorized into diﬀerent domains,\
    \ summarized as\nfollows:\n(i) Personal and social domain: the applications under\n\
    this domain allow potential users to communicate\nwith the environment or with\
    \ other users to establish\nand maintain a social circle [32]\n(ii) Mobility and\
    \ transportation domain: applications\nfalling under this domain include roads\
    \ and vehicles\nequipped with sensors and other smart technologies\nwhich can\
    \ gather traﬃc-related data. This data can\nhelp with traﬃc control and management\
    \ [90].\nSome of the IoT-based transport applications with\noutstanding performance\
    \ are the Intelligent Traﬃc\nInformation Service (ITIS) and the Traﬃc Informa-\n\
    tion Grid (TIG) [91]\n(iii) Enterprise and industrial domain: IoT applications\n\
    falling under this category include smart banking,\nmanufacturing, logistics,\
    \ and industrial operations\n[2, 92]\n(iv) Service and utility monitoring domain:\
    \ this domain\nof IoT applications commonly deals with smart agri-\nculture, environment,\
    \ energy management, etc.\n4.4. Supporting Technologies. For all applications\
    \ falling in\nvarious IoT domains, diﬀerent components of the IoT system\nneed\
    \ to stay connected at all times. This is possible only with\nIoT supporting technologies\
    \ [41]. The progressive growth of\nvarious technologies like sensors, smartphones,\
    \ and software\nwill facilitate diﬀerent things in the IoT systems to stay con-\n\
    nected everywhere and at all times [93]. The fundamental\napproach to support\
    \ IoT is to connect the objects in the phys-\nical world with the digital world\
    \ [94]. Numerous technolo-\ngies and devices for these approaches are discussed\
    \ as\nfollows:\n(i) Identiﬁcation technologies: the fundamental identi-\nﬁcation\
    \ technologies\nused in\nIoT are\nRadio-\nFrequency Identiﬁcation (RFID) and Wireless\
    \ Sen-\nsor Networks (WSN). These are used in the percep-\ntion layer of the IoT\
    \ architecture [19, 32, 92]\n(ii) Network and communication technologies: both\n\
    wired and wireless technologies (e.g., GSM, UMTS,\nWi-Fi, Bluetooth, and ZigBee)\
    \ permit a large num-\nber of smart devices and services to be connected\n[95–97].\
    \ A ﬂexible and secure IoT architecture is\nrequired for reliable communication\
    \ among various\nwireless devices [90]\n(iii) Hardware and software technologies:\
    \ a lot of\nresearch is going on in the ﬁeld of nanoelectronics\nto develop wide-function\
    \ and economical wireless\nIoT systems [92]. Smart things with improved\ninternode\
    \ communication will help in the devel-\nopment of smart systems assisting fast\
    \ application\ndevelopment to support various services in IoT\n4.5. Security Challenges.\
    \ Every layer of IoT is prone to secu-\nrity attacks and threats. These attacks\
    \ may fall under any of\nthe categories of active or passive and internal or external\n\
    attacks [41, 42]. In passive IoT attacks, only the information\ntransmitted on\
    \ the network is observed, but the service is not\naﬀected. On the other hand,\
    \ in active attacks, a service stops\nresponding [98]. The various devices and\
    \ services supported\nby each layer of IoT are prone to Denial of Service (DoS)\n\
    attacks. Under DoS attacks, devices, services, and networks\nbecome unsalable\
    \ to unauthorized users. In the same man-\nner, Figure 8 describes the security\
    \ threats faced by the per-\nception\nlayer,\nnetwork\nlayer,\napplication\nlayer,\n\
    and\ntransport layer and services supported at each layer which\nare discussed\
    \ as follows:\n(i) Security threats in the perception layer: the very\nﬁrst issue\
    \ faced by the various device nodes func-\ntioning in this layer is the intensity\
    \ of the wireless\nsignals as the signals become weaker due to envi-\nronmental\n\
    disturbances.\nThe\nsecond\nissue\nis\nrelated to the physical attacks on the\
    \ IoT devices\nas the various IoT nodes usually operate in the\noutdoor environment.\
    \ The third issue is related\n(i) DDS\n(ii) MQIT\n(iii) CoAP\n(iv) XMPP\n(v) STOMP\n\
    Application \nlayer protocols\n(i) IEEE 802.11/15\n(ii) HART\n(iii) ZigBee\nPerception\
    \ \nlayer protocols\n(i) IPv4/IPv6\n(ii) 6LowPAN\n(iii) 6TiSCH\n(iv) IPv6 over\
    \ G.9959\nNetwork layer \nprotocols\n(i) DTLS\n(ii) TSMP\n(iii) SCTP\n(iv) TCP/UDP\n\
    (v) CORPL\nTransport layer \nprotocols\nFigure 7: Protocols of diﬀerent layers\
    \ in IoT [71, 79, 101, 215].\n12\nWireless Communications and Mobile Computing\n\
    to the dynamic to pology of the IoT systems\nwhich allows the frequent movement\
    \ of the IoT\nnodes\nin\nand\naround\nthe\nnetwork.\nDiﬀerent\ndevices working\
    \ in this layer use sensors and\nRFIDs. Because of their limited adequacy from\n\
    the storage and computational point of view, these\ndevices are prone to diﬀerent\
    \ kinds of security\nthreats [41, 99]. Various kinds of devices operat-\ning in\
    \ this layer are susceptible to replay attack,\ntiming attacks, node capture attacks\
    \ [45], and\nDoS attacks. All these security challenges can be\ndealt with by\
    \ encryption, access control, and\nauthentication [100]\n(ii) Security threats\
    \ in the network layer: along with the\nDoS attacks discussed previously, the\
    \ network layer\nof an IoT system can also be targeted for silent mon-\nitoring,\
    \ traﬃc analysis, and eavesdropping. The\nmajor reasons behind these attacks are\
    \ the remote\naccess and exchange of data. The vulnerability of this\nlayer to\
    \ a man-in-the-middle attack is terriﬁc [41].\nAn unsecure communication channel\
    \ is the root\ncause of eavesdropping. Communication technolo-\ngies and protocols\
    \ play a major role in stopping\neavesdropping and further stopping identity theft.\n\
    As the heterogeneity of devices is a major issue in\nthe IoT systems, it is the\
    \ biggest challenge to have\nmore secure protocols in the network layer to deal\n\
    with this diversity. Attackers also misuse the connec-\ntivity of the devices\
    \ to steal user information for\nfuture attacks [101]. Along with ensuring the\
    \ secu-\nrity of the network from the attackers, ensuring the\nsecurity of the\
    \ devices operating in the network is\nequally important. Consequently, the devices\
    \ in the\nnetwork must have the comprehension to safeguard\nthemselves against\
    \ network attacks. This can be\nobtained only with secure network protocols as\
    \ well\nas smart applications [102]\n(iii) Security threats in the application\
    \ layer: lack of stan-\ndard policies related to IoT systems causes many\nsecurity\
    \ challenges in the IoT applications and their\ndevelopment. As a variety of authentication\
    \ mecha-\nnisms are used in diﬀerent IoT applications, it is dif-\nﬁcult\nto\n\
    warrant\ndata\nsecurity\nand\nuser\nauthentication. The second major challenge\
    \ is how\nto deal with the interaction of the user with applica-\ntions, how to\
    \ deal with the volume of data\nexchanged, and how to manage the diﬀerent applica-\n\
    tions. The IoT users must be checked to conﬁrm\nwhat they wish to share about\
    \ themselves and how\nthat information is to be used and by whom [42]\n(iv) Security\
    \ threats in the transport layer: common\nthreats in the transport layer include\
    \ cross-site\nscripting (XSS). In this type of attack, the malicious\nuser injects\
    \ client-side-based scripts like Java,\nHTML, or VBScript into a webpage that\
    \ is fre-\nquently visited by the user. These scripts will be\nmasked as valid\
    \ requests between the browser (cli-\nent-side) and the webserver. It can lead\
    \ to data theft\nand manipulation. The other attacks include session\nhijacking,\
    \ cross-site request forgery (CSRF), and\nLightweight Directory Access Protocol\
    \ (LDAP)\ninjection [103]\nTable 4 describes the taxonomy of various attacks and\n\
    defence mechanisms at diﬀerent layers of IoT devices.\n4.6. IoT Security Mechanisms\
    \ and Measures. Security is a\ndemanding aﬀair that persists in IoT systems. The\
    \ beneﬁts\nSecurity mechanisms in IoT\nApplication \nlayer\nNetwork \nlayer\n\
    Preference\n-based protection\nSecurity \nframework based \non identity \nOpenHab\n\
    technology\nAccess control \nmechanism\nIoTOne\ntechnology\nPerception \nlayer\n\
    Embedded \nsecurity \nframework\nEncryption \nbased on hash\nPKI protocol\nLightweight\
    \ \ncryptography\nSecure \nauthorization \nOAuth\nReputation- \nbased \nmechanism\n\
    Identity \nmanagement \nframework\nRisk-based \nadaptive \nframework\nSDN-enabled\
    \ \nIoT\nCooperative \nnodes protocol\nCluster-based \nIDS\nTransport \nlayer\n\
    Compression \nof DTLS \nheader\nCompressed \nIPsec\nECC DTLS\n6LoWPAN \nborder\
    \ router \nECC\nFigure 8: Existing security mechanisms for the protection of IoT\
    \ applications [42, 51, 105, 107, 109, 111, 112, 114, 115, 117–120, 122, 124,\n\
    216].\n13\nWireless Communications and Mobile Computing\nof the IoT system cannot\
    \ be obtained without addressing dif-\nferent security issues [51, 104]. Various\
    \ security mechanisms\nproposed by various researchers to safeguard diﬀerent IoT\n\
    applications are shown in Figure 8. Diﬀerent security mech-\nanisms used in the\
    \ perception layer of the IoT systems are\nEncryption and Hash-based security\
    \ [105, 106], Public Key\nInfrastructure- (PKI-) Like Protocol [107, 108], Secure\n\
    Authorization Mechanism with OAuth (Open Authoriza-\ntion) [109, 110], Lightweight\
    \ Cryptographic Algorithms\n[111], and Embedded Security Framework [112, 113].\
    \ The\nnetwork layer of IoT is protected by the Identity Manage-\nment Framework\
    \ [114], Risk-Based Adaptive Framework\n[115], Association of SDN (Software-Deﬁned\
    \ Networking)\nwith IoT [116], Cooperation of Node-Based Communication\nProtocol\
    \ [117], Reputation System-Based Mechanism [118],\nand Cluster-Based Intrusion\
    \ Detection and Prevention Sys-\ntem [119]. Various security mechanisms implemented\
    \ in\nthe application layer of IoT are the Preference-Based Privacy\nProtection\
    \ Method [120, 121], Access Control Mechanisms\n[122, 123], OpenHab Technology,\
    \ IoTOne Technology\n[124], and Identity-Based Security [125, 126]. All these\
    \ secu-\nrity mechanisms about the security provided by the diﬀerent\nlayers of\
    \ IoT are compared in Table 5.\n5. Role of Digital Forensics in\nCybercrime Investigation\n\
    Although crime has always persisted in society, the aids\nused by criminals in\
    \ committing crimes have evolved\nand grew more advanced with time. With the advent\
    \ of\ntechnology, criminals have come up with new and techno-\nlogically advanced\
    \ methods to commit crimes called cyber-\ncrimes. In the past, criminal inquiries\
    \ depended on the\ninvestigation of the physical evidence and crime locations\n\
    along with witnesses. However, nowadays in the internet\nera, crime scenes may\
    \ be comprised of smart IoT devices,\ncomputers, etc. [53]. Consequently, the\
    \ process of criminal\ninvestigations may consist of the analysis of digital evi-\n\
    dence [127].\n5.1. Digital Forensics. Digital evidence may consist of a vari-\n\
    ety of elements. Primarily, the evidence would consist of\nsmartphones, laptops,\
    \ computers, hard drives, USB, etc. As\neveryone can have any of the above devices,\
    \ a large volume\nof data will be available for analysis. However, a major hin-\n\
    dering factor in the analysis is the variety of formats in which\ndata is available\
    \ on these diﬀerent devices [53]. As there is a\nbig change in the type of evidence\
    \ with time, so there is a\nneed for new techniques to handle this change eﬃciently.\
    \ Just\nlike traditional forensics, digital forensics is a domain that\ninterprets\
    \ digital data [62]. Digital forensics experts collect,\npreserve, and analyze\
    \ digital evidence [128]. Rogers states,\n“The science of digital forensics has\
    \ developed, or more cor-\nrectly is developing; while this science is arguably\
    \ in its\ninfancy, care must be taken to ensure that we do not lose\nsight of\
    \ the goal of the investigation process namely identify-\ning the parties responsible”\
    \ [53, 129]. During the design and\ndevelopment of new techniques to analyze digital\
    \ evidence, it\nis mandatory to consider other aiding domains to develop\nand\
    \ support in the process of the criminal investigation. A\ndigital forensics approach\
    \ deploys a framework for the tech-\nniques to be used in a digital forensics-dependent\
    \ investiga-\ntion [130].\n5.2. IoT Forensics in Cybercrime Investigation. The\
    \ IoT foren-\nsics can be observed as a subdomain of digital forensics. IoT\n\
    forensics is a comparatively new and less scrutinized area. Its\nfundamental aim\
    \ falls in line with digital forensics, i.e., to\nTable 4: Taxonomy of various\
    \ attacks and defence mechanism at diﬀerent layers.\nApplication layer\nNetwork\
    \ layer\nPerception layer\nTransport layer\nAttack\nPossible defence\nmechanism\n\
    Attack\nPossible defence\nmechanism\nAttack\nPossible defence\nmechanism\nAttack\n\
    Possible\ndefence\nmechanism\nCommon\ninjection\nattack\nOpenHab\ntechnology\n\
    IoTOne technology\nNode misbehaviour\nand service attack\nReputation based\nCipher\n\
    text attack\nEncryption based on\nHash\nFlooding\nattack\nCompressed\nDTLS header\n\
    Attack on\nprivacy\nPreference-based\nprotection\nIdentity theft attack\nIdentity\n\
    management\nframework\nDDoS\nattack\nPKI protocol\nReplay\nattack\nCompressed\n\
    IPsec\nIdentity\nspooﬁng\nattack\nSecurity framework\nbased on Identity\nFault\
    \ injection\nattack\nRisk-based\nadaptive\nframework\nPhishing\nattack\nSecure\
    \ authorization\nOAuth\nRouting\nattack\nECC DTLS\n6LoWPAN\nBorder router\nECC\n\
    Side channel attack\nSDN-enabled\nIoT\nSide\nchannel\nattack\nLightweight\ncryptography\n\
    No forwarding\nattack\nCooperative\nnodes protocol\nCrypt-\nanalysis\nattack\n\
    Framework based on\nembedded security\nEavesdropping\nCluster-based\nIDS\n14\n\
    Wireless Communications and Mobile Computing\ncollect and analyze digital evidence\
    \ legally and accurately\n[62]. In IoT forensics, data could be collected from\
    \ sensors,\nIoT devices, networks, and clouds [131]. IoT forensics can\nbe categorized\
    \ as device-level forensics, network forensics,\nand cloud forensics, as shown\
    \ in Figure 9.\nThe basic contrast between digital forensics and IoT\nforensics\
    \ depends upon the devices examined in crime inves-\ntigation. In digital forensics,\
    \ the various devices under exam-\nination may be computers/laptops, servers,\
    \ tablets, and\nsmartphones [132]. Although IoT forensics has a wider area\nof\
    \ applicability like smart homes, smart vehicles, drones,\nand general IoT systems,\
    \ the published literature on the area\nof applicability of IoT forensics is less\
    \ than that of digital\nforensics.\n(i) Smart homes: it has been observed that\
    \ during crim-\ninal investigation, smart home devices can provide\ncompromising\
    \ information [133]. Usually, the main\ncomponents of these devices are microphones\
    \ and\nmotion detectors. These devices play a major role\nin identifying the location\
    \ of suspects. There are\nthree main categories of devices to collect forensics:\n\
    active, passive, and single-malicious active. In [133],\ntwo smart devices, i.e.,\
    \ light and bulb, have been\nexperimented by the authors. It has been observed\n\
    that a large amount of data can be collected even\nwith these passive devices,\
    \ which can help to iden-\ntify the activity executed at a speciﬁc timestamp.\n\
    The design of another smart home solution, i.e.,\nTable 5: Comparison of existing\
    \ IoT security mechanisms in diﬀerent layers.\nMethod name\nLayer\nDescription\n\
    Issues focused on the method\nRisk-based\nadaptive\nframework\nNetwork\nEach portion\
    \ of the four portions performs its\ntasks and acknowledges the other.\nIt keeps\
    \ watching for attacks. It removes the incoming\nattack at the second portion\
    \ [115].\nPreference-based\nprivacy protection\nApplication\nThe service provider,\
    \ client, and third party\ninitiate communication in a secure environment.\nBetween\
    \ the client and the service provider, the third\nparty acts as a bridge and keeps\
    \ a check on the security\nprovided to the client through the service provider\n\
    [121].\nOpenHab in the\napplication layer\nApplication\nProvision of security.\n\
    The device mismatch is not supported but registration\nis simple [124].\nPKI protocol\n\
    Perception\nA message is sent by the base station to the\ndestination consisting\
    \ of a public key.\nThe message is delivered independently without\ncompromising\
    \ security [108].\nIoTOne\nApplication\nOpenHab technology issues are solved.\n\
    A device mismatch is allowed. The request is sent by\nthe client to the server\
    \ for the veriﬁcation of the user\n[124].\nSecurity\nframework based\non identity\n\
    Application\nRegistration, policy, client, and user\nauthentication are part of\
    \ this system.\nAdmin describes the policies. Users and all other\nresources are\
    \ managed by the framework based on\npolicies [125].\nEncryption based\non Hash\n\
    Perception\nEncryption algorithms and Hash functions are\nused in parallel.\n\
    The integrity of the message is checked [106].\nMechanism-based\non the secure\n\
    authorization\nPerception\nRBAC and ABAC mechanisms and systems are\nbased on\
    \ client-server.\nResources are provided by the server to the client on\nrequest,\
    \ thus making the system more secure [109].\nLightweight\ncryptographic\nalgorithms\n\
    Perception\nMessages are converted by using keys.\nPlain text from the message\
    \ is converted to a cipher\nusing Hash functions and symmetric and asymmetric\n\
    keys [233].\nEmbedded\nframework of\nsecurity\nPerception\nMemory operating system\
    \ and run-time\nenvironment are secured.\nMore secure memory management, secondary\n\
    storage, and run-time environment to the users [112].\nThe framework of\nidentity\n\
    management\nNetwork\nCommunication is done via service and identity.\nInformation\
    \ about the user is conﬁrmed by the\nidentity module to protect the users from\
    \ the attackers\n[114].\nSDN with IoT\nNetwork\nLow cost and lesser hardware are\
    \ used for better\nperformance.\nIoT agents and controllers are provided security\
    \ by\nSDN as all communications are done through SDN\n[116].\nMechanism-based\n\
    on reputation\nNetwork\nData structures, namely, the reputation table and\nwatchdog\
    \ mechanism, are maintained by the\nnode to prevent intruders.\nAd hoc communication-based\
    \ system [118].\nHeterogeneous\nfusion mechanism\nin IoT\nTransport\nPrevents\
    \ disclosure of data and information.\nRoaming authentication security in the\
    \ heterogeneous\nenvironment [234].\n15\nWireless Communications and Mobile Computing\n\
    the Forensics Edge Management System (FEMS), is\ndiscussed in [134]. The focus\
    \ of the proposed sys-\ntem is to administer security in smart homes along\nwith\
    \ forensics assistance. Although it has a variety\nof features ranging from automatic\
    \ detection to\nintelligence and ﬂexibility, this system has two main\nlimitations,\
    \ i.e., complex implementation and test-\ning. The authors in [135] presented\
    \ security con-\ncerns in smart devices. It is impressive that the\nsecurity threat\
    \ in an IoT environment increases\nwith an increase in the number of devices in\
    \ the net-\nwork. Consequently, the need for IoT forensics\narises. In this case\
    \ study, special attention is given\nto the IoT forensics in smart homes. The\
    \ authors\nalso highlighted the need for advanced IoT forensics\nbecause of the\
    \ diﬀerent IoT challenges. It is expected\nthat in the coming future, smart homes\
    \ will become\nwidespread. Therefore, a seven-step methodology is\nproposed for\
    \ easy investigation in smart home sur-\nroundings [136]. It is highlighted by\
    \ the authors\nthat the proposed framework assists in evidence col-\nlection and\
    \ storage. However, it needs to be tested\nwith a true home automation system\n\
    (ii) Smart city and vehicle automation: smart cities are\ncomputerized environments,\
    \ also termed cyberphy-\nsical ecosystems, that enhance the utility of tradi-\n\
    tional\ncity\ninfrastructure\nlike\nparking\nspaces,\npower grids, and gas pipes\
    \ [62, 137]. In this way,\nbetter services can be provided to the residents\n\
    [138, 139]. One important example, i.e., smart park-\ning, is an area of major\
    \ concern for most city admin-\nistrations and auto-tech companies [140]. The\n\
    network of smart vehicles assists the exchange of\ninformation between the vehicles\
    \ and the environ-\nment [132]. These smart vehicles have aided various\nimportant\
    \ areas like road safety and traﬃc adminis-\ntration. However, they have also\
    \ raised many issues\nconcerning digital forensics. In a case study [141], a\n\
    new framework named “Trust—Internet of Vehicles\n(IoV)” is proposed by the authors\
    \ for dependable\ninvestigation. It assists in gathering and saving\ndependable\
    \ evidence from a network of tremen-\ndously scattered smart vehicles [142]. This\
    \ frame-\nwork is also very useful in preserving evidence and\nassuring the integrity\
    \ of the saved evidence. In\n[143], various threats to smart vehicles are reviewed\n\
    by the authors. The authors also proposed and\ntested a new technique to investigate\
    \ smart vehicles.\nHowever, this technique still needs to be validated\nwith the\
    \ data produced by a network of smart vehi-\ncles in an actual scenario\n(iii)\
    \ Drone forensics: in [144], the authors proposed a\nnew approach for the forensic\
    \ analysis of data gath-\nered through drones. The reference data used for\nforensic\
    \ analysis were collected from the DJI Phan-\ntom III drone. Drone Open-Source\
    \ Parser (DROP),\na new tool to format the data and prepare for inter-\nnal storage\
    \ of the system, is also proposed. The\nauthors elaborated that the drone is controlled\
    \ with\nthe help of mobile and various types of data ﬁles that\nare also found\
    \ on the controlled mobile phone. The\ndata collected in these ﬁles aid to identify\
    \ the loca-\ntion, ﬂight time, and other related information of\nthe drone under\
    \ observation. However, the main\nCloud\nCore\nBase stations\nEmbedded IoT\nIoT\
    \ end devices\nDrones as IoT\nIoT forensics\nCloud forensics\nNetwork forensics\n\
    End-device forensics\nSources of \nevidence\nPublic, private, and\nhybrid cloud\
    \ systems\nHome and commercial \nnetworks\nDrones, smart cars, \nsmart camera,\
    \ etc.\nFigure 9: IoT forensic components [62, 128, 131, 217, 218].\n16\nWireless\
    \ Communications and Mobile Computing\nlimitation of the work is that it focused\
    \ only on one\ntype of drone; so, work needs to be extended to\nother types too\n\
    (iv) Cloud forensics: cloud forensics acts as a backbone\nto IoT forensics. In\
    \ [145], the authors proposed a\nnew technique to gather and analyze data from\
    \ the\nnewer BitTorrent Sync peer-to-peer cloud storage\nservice [146]. The data\
    \ is generated by experiment-\ning with a variety of diverse smart systems. The\n\
    authors observed that data stored in various log\nﬁles, installation records,\
    \ and metadata can be\nrecovered. It is highlighted that the state of the data\n\
    in memory should be conserved for accurate foren-\nsic analysis. However, the\
    \ proposed method has not\nbeen legitimized by actual device manufacturers\n[147]\n\
    (v) Smartphone forensics: in the modern era, people are\nhighly dependent on smartphones.\
    \ Smartphones\nplay a major role in the exchange of text and audio\nand video\
    \ data. Criminals can commit diﬀerent\ntypes of crimes using smartphones like\
    \ transaction\nfraud, harassment, child traﬃcking, and pornogra-\nphy. It is very\
    \ diﬃcult to elicit data related to the\nabove activities from smartphones for\
    \ forensic anal-\nysis. To solve this issue, the authors conducted a\nstudy [148].\
    \ In their study, the Samsung Galaxy S3\nphone was used as the device for the\
    \ experiment\nused for data extraction. It has been observed that\nto transplant\
    \ a mobile phone is a tedious activity\nas it is always associated with risk,\
    \ i.e., damage to\nPoP components. The authors in [148] proposed a\nnew methodology\
    \ named PoP chip-oﬀ/TCA. This\nmethodology aids in the transplantation of mobile\n\
    phones. A new technique was designed and experi-\nmented for the successful forensic\
    \ transplantation\nof a cryptographic Blackberry 9900 PGP mobile\nphone\n(vi)\
    \ Healthcare forensics: the healthcare sector is one of\nthe domains most prone\
    \ to major security threats.\nThe main reason for this is the diverse nature of\n\
    medical applications and the heterogeneity of the\ntypes of equipment used; thus,\
    \ it has a broader sur-\nface for attacks [62, 149]. Besides the evolution in\n\
    the healthcare industry that plays a major role in\nthe development of human life,\
    \ various smart health\nmonitoring systems also put the security of a\npatient’s\
    \ medical data at risk. IoT-based ﬁtness sys-\ntems could be targeted by attackers\
    \ to steal the data\nof the users, which can be further misused [150].\nNumerous\
    \ medical identity thefts have been identi-\nﬁed in the past which express the\
    \ importance of\nmedical data. In the domain of medical health ser-\nvices and\
    \ applications, a compound annual growth\nof 29-30% is expected from the year\
    \ 2019 to 2025\n[151]. Many ﬁtness wearables can be used as a\nsource of evidence\
    \ in criminal investigations as\nthese gadgets keep on storing the data related\
    \ to\nroutine activities of the users at the back end pas-\nsively. Thus, although\
    \ these gadgets were designed\nto maintain the health status of the users, it\
    \ can also\nbe used as digital evidence [14]. The number of\nusers, smart watches,\
    \ and ﬁtness bands are increas-\ning day by day; so, the study of these IoT devices\
    \ has\nbecome the center of interest for forensics practice.\nAccording to the\
    \ authors in [152], the data extracted\nfrom these gadgets may be personal to\
    \ the users.\nTherefore, special attention should be given to the\nsecurity of\
    \ this data. As the number of security-\nrelated issues is increasing exponentially,\
    \ there is a\nrequirement of more advanced techniques to ensure\nthe security\
    \ of data [153]\n(vii) General IoT system forensics: in [14], the authors\ncame\
    \ up with a new investigation platform for\ndiverse IoT systems. A risk judgment\
    \ scheme\ndependent on STRIDE and DREAD methods was\ndesigned and modeled. It\
    \ was discussed with the\nhelp of these two exemplary models that cybercrime\n\
    committed in the IoT environment can even cause\nserious risks like death. It\
    \ was observed by the\nauthors that most of the IoT systems are not\ndeployed\
    \ with default security measures; so, it pos-\nsesses high risk. A study was carried\
    \ out [154] to\nanalyze the signiﬁcance of the sync data in evidence\nanalysis.\
    \ Sync data contributes to the fair investiga-\ntion of the digital witness. A\
    \ survey was conducted\n[155] by the authors to study and analyze forensics\n\
    investigation techniques for data stored in the sys-\ntem memory. Few meaningful\
    \ alterations to the\noperating systems were also impressed upon in this\nstudy.\
    \ In [156], data contraction and partially auto-\nmated analysis techniques to\
    \ handle a large volume\nof digital evidence were suggested. This technique\n\
    assists in the analysis of a variety of IoT data gath-\nered. In [157], the authors\
    \ discussed the approaches\nof gathering, saving, and communicating digital evi-\n\
    dence in a secure way to a genuine destination.\nSome technologies to bring it\
    \ into practice were also\nhighlighted by the authors, along with the basic\n\
    components of the electronic evidence that were\nalso described\nIn [158], a novel\
    \ approach to club cloud-native and\ncloud-centric forensics for the Amazon Alexa\
    \ ecosystem\nwas proposed. A new framework named “Probe-IoT” is pre-\nsented in\
    \ [159], which aids in identifying criminal evidence\nin the IoT environment using\
    \ electronic logs. These logs pre-\nserve the complete information regarding all\
    \ data exchanges\nbetween things, users, and cloud services. This framework\n\
    was not tested experimentally, but it conceptually safeguards\nthe integrity of\
    \ the evidence. In [160], the authors presented a\nnovel model for IoT forensics\
    \ named PRoFIT to ensure the\nimplementation of standards during forensic analysis.\
    \ This\nmodel was tested in a true IoT environment deployed in a\ncoﬀee shop.\
    \ The 1-2-3 zone approach is applied by the\nauthors [161] for IoT forensic analysis.\
    \ According to the\n17\nWireless Communications and Mobile Computing\nauthors,\
    \ concerned persons and pieces of evidence fall into\nzone 1, things or devices\
    \ near to the boundary of the network\nfall into zone 2, and devices exterior\
    \ to the network are\ncapped in zone 3. This approach was developed to support\n\
    accurate IoT investigation. However, the practical implemen-\ntation of this approach\
    \ is comparatively challenging. The\nauthors in [162] presented a new framework\
    \ dependent on\na three-layer architecture. The proposed framework has\nmany advantages\
    \ to ensure data security with only one disad-\nvantage, that is, it is not much\
    \ suitable in coping with the lim-\nited resources of IoT devices like processing\
    \ power and\nbattery life. The researchers in [163] proposed a design of a\nnew\
    \ model to help forensic experts in IoT evidence analysis.\nThis model was proposed\
    \ to preserve volatile data in IoT\ndevices. This work was planned as an extension\
    \ of previous\nresearch. Using this model, forensic experts can investigate\n\
    a broader surface in the data domain. However, it has been\nobserved that this\
    \ model is laborious to implement in a true\nenvironment. In [164], the authors\
    \ presented IoT forensics\nin a new way. In this work, the IoT domain was methodically\n\
    explored to disclose the various challenges in the domain of\ndigital forensics.\
    \ A novel technique named Forensic Aware\nIoT (FAIoT) was introduced with a focus\
    \ on uncovering\nnew details in an IoT environment. However, the applicabil-\n\
    ity of the approach is doubtful as it was not veriﬁed in the IoT\nenvironment.\
    \ The authors [165] analyzed prominent techni-\ncal issues in digital forensics\
    \ which can hinder the identiﬁca-\ntion of important facts for investigation.\
    \ Various research\nissues, which can signiﬁcantly improve the process of digital\n\
    forensics, were also highlighted. Diﬀerent types of attacks\nthat are frequently\
    \ planned on the devices in an IoT environ-\nment were discussed in [166] along\
    \ with the complexity\nwhich they add to the digital investigation. The hackers\
    \ use\na large number of random UDP attacks at the same time by\nusing UDP datagrams\
    \ of varying sizes. Consequently, the\nattacks caused denial of service. The authors\
    \ introduced a\nnovel approach to handle these types of attacks by identifying\n\
    their originators. A number of patents have been granted in\nthe development of\
    \ digital forensics in the past. Table 6 pre-\nsents the patents granted in recent\
    \ years. Many applications\nof digital forensics have been developed to prevent\
    \ cyber-\ncrime. Table 7 presents the list of real-time digital forensics\napplications\
    \ that support various operating systems and\nother platforms to prevent cybercrime\
    \ in IoT devices.\n6. Advanced IoT Security\nSmart devices and applications in\
    \ various areas of IoT make\nhuman life more comfortable, but they also make IoT\
    \ sys-\ntems more vulnerable to cyberattacks. These devices and\napplications\
    \ are connected to the internet, which creates\nnew opportunities for cybercriminals\
    \ to enter the IoT envi-\nronment. Cybercriminals can enter an IoT system through\n\
    routers and can damage it in many ways. Although several\nsecurity mechanisms\
    \ are available in IoT, advanced technol-\nogies like artiﬁcial intelligence (AI),\
    \ machine learning (ML),\nneural networks (NN), blockchain technology, fog comput-\n\
    ing, and edge computing are playing a major role to handle\ncyberattacks and helping\
    \ to control cybercrime [167, 168].\nAuthors in [169] discussed in brief the various\
    \ kinds of secu-\nrity threats in an IoT environment. The need for a dynamic\n\
    and quick system to safeguard the IoT systems against cyber-\ncrime is impressed\
    \ upon. The authors proposed a hybrid sys-\ntem to detect cyberattacks using AI\
    \ and ML in a cloud\ncomputing environment. Both types of attacks, i.e., at the\n\
    device level and the network level, can be detected with this\nmodel. According\
    \ to the authors, it is considered by the secu-\nrity experts that AI and ML provide\
    \ very powerful security\nmechanisms as even future attacks may be predicted based\n\
    on past IoT attack data. Consequently, this system does not\nwait for the occurrence\
    \ of attacks but it can predict them in\nadvance. The main limitation of the system\
    \ is that it can work\nonly with standard data formats for prediction. ML provides\n\
    solutions to DoS attacks, eavesdropping, spooﬁng, and pri-\nvacy leakage in an\
    \ IoT environment [170]. The authors in\n[171] presented a multilayer architecture\
    \ to associate the var-\nious devices within IoT to make them accessible throughout\n\
    the network at all times. To deal with the security issues of\nend nodes and to\
    \ provide more credible services, a novel\nframework using NN was proposed. According\
    \ to this frame-\nwork, security issues need to be tackled in each layer of the\n\
    IoT architecture. Each end node conﬁgured using this frame-\nwork will have the\
    \ potential to self-monitor and recover after\nany unwanted event/attack. In the\
    \ proposed framework, a\nNN-based adaptive model was used for the automatic recov-\n\
    ery of the nodes. In [172], the authors presented an artiﬁcial\nneural network\
    \ (ANN) approach to control distributed\ndenial of service (DDoS) attacks. The\
    \ ANN was tested in a\nsimulated IoT environment. The results obtained with the\n\
    proposed technique were found to be 99.4% accurate, and\nthis technique is capable\
    \ of identifying numerous DDoS/DoS\nattacks. The authors in [170] highlighted\
    \ that the incorpora-\ntion of blockchain in IoT systems has numerous beneﬁts.\
    \ The\ndistributed architecture of blockchain reduces the risk of fail-\nure of\
    \ data storage nodes. Thus, it leads to more secure data\nstorage in the IoT environment\
    \ [173, 174]. The concept of\ndata encryption is used by blockchain for data storage\
    \ in\nthe IoT environment; so, there are less chances of storing\ndamaged data\
    \ in things [175]. The augmentation of block-\nchain with IoT also helps to prevent\
    \ unauthorized access,\ndata loss, and spooﬁng attacks [176]. Various challenges\
    \ in\nIoT along with the workable solutions administered by the\nblockchain technology\
    \ are discussed below in Table 8.\nIn [170], the authors discussed that a large\
    \ volume of data\nis generated by diverse devices in the IoT environment. It is\n\
    very taxing to shift the entire data to the cloud for real-time\nanalysis; thus,\
    \ the concept of fog computing evolved. Under\nthis concept, the cloud framework\
    \ is extended to the edge\nof the network [177]. Fog computing can handle various\n\
    IoT security attacks like the man-in-the-middle attack, data\ntransit attacks,\
    \ eavesdropping, and resource constraint issues\nvery eﬃciently [178]. The various\
    \ characteristics and possible\nsolutions deployed by fog computing are shown\
    \ in Figure 10.\nAuthors in [170] noted that the edge computing framework\nis\
    \ an expansion of cloud computing. The location of the com-\nputational power\
    \ and analysis mechanisms diﬀerentiate edge\ncomputing from fog computing in an\
    \ IoT environment\n18\nWireless Communications and Mobile Computing\n[179]. In\
    \ edge computing, both these potentials reside at the\nedge [180]. The various\
    \ devices in the IoT system coordinate\nto establish a network and perform various\
    \ computations\nrequired for data analysis within that network [181]. There-\n\
    fore, the need to communicate the data outside the device is\nreduced which contributes\
    \ to improved data security in the\nIoT applications. On the same grounds, this\
    \ framework also\naids in minimizing the communication cost of data [182].\nThe\
    \ concept of edge computing helps to handle data\nbreaches, data compliance issues,\
    \ safety issues, and band-\nwidth challenges in an IoT environment [183].\n7.\
    \ Road Map of Problems in IoT Forensics\nIoT forensics is a complicated and regularly\
    \ emerging\ndomain. It plays a very crucial role in cybercrime investiga-\ntion.\
    \ However, many challenges need to be addressed very\ncarefully. These challenges\
    \ open the doors for further\nresearch in the ﬁeld of IoT forensics [62]. Thus,\
    \ the main\nobjective of this section is to show a path to the researchers\nin\
    \ the domain of IoT forensics to aid in cybercrime investiga-\ntion. These include\
    \ the following:\n(i) Data locations: in IoT systems, the data are saved at\n\
    various locations in dynamic devices that may be\nregulated by diﬀerent administrations.\
    \ Conse-\nquently, the investigators undergo serious prob-\nlems trying to identify\
    \ which regulations are to be\nfollowed when the device was used to commit a\n\
    crime [184]. In this type of situation, crime investi-\ngation becomes a more\
    \ complicated task. So, there\nis a need for standard processes and mechanisms\n\
    to address this issue\n(ii) Forensic automation: there are numerous technical\n\
    issues faced during automated IoT forensic analy-\nsis. The major problems which\
    \ aﬀect the process\nare the dynamic nature of the devices and the\ninvolvement\
    \ of advanced methods in the process\nTable 6: Various patents granted in the\
    \ development of digital forensics.\nPatent title\nYear\nInventor\nCountry\nKey\
    \ features\nFiled Published\nDiﬀerencing engine for digital forensics\n2018\n\
    2020\nMonsen and\nGlisson [235]\nUS\nAnomaly detection to mitigate the security\n\
    attack on cloud-based servers.\nForensic investigation tool\n2017\n2019\nJon D.\n\
    McEachron\n[236]\nUS\nDigital investigation tool capable of recovering\nand decrypting\
    \ the content.\nForensic system, forensic methods, and\nforensic program\n2015\n\
    2016\nMorimoto\net al. [237]\nUS\nA medium to acquire and analyze the digital\n\
    information in a server or a plurality of\ncomputers.\nDevices and methods for\
    \ providing security in\na remote digital forensic environment\n2016\n2017\nKang\
    \ et al.\n[238]\nUS\nA method for collecting digital evidence from\nthe target\
    \ system. Analysis of the collected\nevidence to be done at a remote location.\n\
    Method and apparatus for digital forensics\n2008\n2012\nChoi et al.\n[239]\nUS\n\
    A method to perform digital forensics by\nextracting page ﬁles from the target\
    \ stored\nmedium. Also, extract features from the\nextracted page ﬁle.\nSystems\
    \ and methods for provisioning digital\nforensics services remotely over public\
    \ and\nprivate networks\n2012\n2015\nShannon and\nDecker [240]\nUS\nA method to\
    \ collect and analyze electronically\nstored information over public and private\n\
    networks using cloud computing.\nDigital forensics\n2009\n2014\nBuchanan\net al.\
    \ [241]\nUS\nSystem call information is acquired from the\ndevice under test.\
    \ The acquired data is\nconverted into a sequence format for further\ninvestigation.\n\
    Methods for data analysis and digital forensics\nand systems using the same\n\
    2011\n2014\nGil et al. [242]\nUS\nIt comprises an online data forensic server\
    \ to\nacquire and analyze the usage history of a\ndevice. It also issues a timestamp\
    \ to the\ncollected data.\nForensic digital watermarking with variable\norientation\
    \ and protocols\n2001\n2008\nK. Levy [243]\nUS\nA method of forensic digital watermarking\
    \ on\nthe randomly selected orientation in the\ncontent signal.\nSecure digital\
    \ forensics\n2007\n2011\nCarpenter\nand\nWesterinen\n[244]\nUS\nTo perform an\
    \ audit of computer processor\nstatus and memory, a security module is\ndesigned.\
    \ This can be done using a separate\nhardware path to access the processor register\n\
    data through a debug port.\n19\nWireless Communications and Mobile Computing\n\
    of forensic investigation. To obtain a real-time\nsolution to the problem, there\
    \ is a requirement for\nimproved IoT automation. The authors in [134]\npresented\
    \ a novel direction for IoT forensics by\nintroducing an automated technique for\
    \ forensics\nexamination. It is also impressed upon by the\nauthors that the diversity\
    \ of IoT devices is the main\nhindrance in the real-time implementation of the\n\
    proposed technique. Therefore, some standard\nmechanisms are required to deal\
    \ with the heteroge-\nneity of the devices and collected data\n(iii) IoT device\
    \ management: in an IoT environment,\nsometimes a particular device malfunctions\
    \ and\nstarts generating malignant data. Although shut-\nting that device down\
    \ may be required, it may not\nbe feasible for the forensic investigator to do\
    \ so\nbecause of the owner’s decision. In a smart home,\nfor example, even if\
    \ a washing machine is initiating\nvengeful data packets, the owner may not pass\
    \ his\nconsent to stop it as it may disturb his daily routine.\nThis may lead\
    \ to a big challenge for the expert\ncrime investigator. Therefore, due attention\
    \ needs\nTable 7: List of real-time digital forensics applications to prevent\
    \ cybercrime.\nSoftware\nOS/Support\nFeatures\nSources\nE3 Universal\nWindow,\
    \ Linux,\nmacOS, iOS\nIoT analysis, cloud data imaging, and analysis, registry\
    \ analysis,\nemail investigation, JTAG, and chip dump processing\nhttps://paraben.com/\n\
    digital-forensic-tools-6/\nWireShark\nWindows, Linux,\nmacOS, Solaris\nVoIP, GUI,\
    \ oﬄine analysis, WAN/LAN analyzer\nhttps://www.wireshark\n.org/\nAutopsy\nWindows,\
    \ Linux,\nmacOS Android\nRegistry analysis, LNK ﬁle analysis, timeline analysis,\
    \ ﬁle type\ndetection, email analysis\nhttps://www.sleuthkit\n.org/autopsy/\n\
    Paladin\nLinux\nDevice cloning support for many forensic image formats: E01,\n\
    Ex01, RAW, VHD, AFF, disk manager, and automatic logging\nhttps://sumuri.com/\n\
    software/paladin/\nDumpzilla\nUnix, Windows\nForensic information extraction from\
    \ Firefox, SeaMonkey\nbrowsers including cookies, bookmarks, web forms, SSL\n\
    certiﬁcates, browser-saved passwords\nhttps://tools.kali.org/\nforensics/dumpzilla\n\
    SIFT (SANS\ninvestigative\nforensic toolkit)\nLinux\nFile system support, diﬀerent\
    \ evidence image format support,\nrapid scripting, and analysis\nhttps://digital-forensics\n\
    .sans.org/community/\ndownloads\nToolsley\nWeb based\nFile repairing, text encoding,\
    \ ﬁle identiﬁcation, ﬁle signature\nveriﬁcation, binary inspection, CRC tool\n\
    https://www.toolsley\n.com/\nNetworkMiner\nWindows, Linux,\nmacOS X, FreeBSD\n\
    Live sniﬃng, OS ﬁngerprinting, Geo IP localization, DNS\nwhitelisting, audio extraction\
    \ and playback of VoIP calls, PCAP\nand PcapNG ﬁle parsing\nhttps://sectools.org/tool/\n\
    networkminer/\nElcomsoft\nWindows, macOS, iOS\nPassword recovery, cloud explorer,\
    \ disk decryption, wireless\nsecurity auditor\nhttps://www.elcomsoft.co\n.uk/\n\
    Belkasoft X\nWindows macOS,\nLinux, iOS, Android,\nBlackberry\nE01/DD imaging,\
    \ Hash set analysis, registry viewer, plist viewer,\nartifacts viewer, SQLite\
    \ viewer\nhttps://belkasoft.com/\nTable 8: Theoretical solutions oﬀered by deploying\
    \ blockchain in the IoT framework to prevent cyberattacks.\nChallenges in IoT\n\
    Speciﬁcations\nTheoretical blockchain solution\nDefects in architecture\nA point\
    \ of failure exists in IoT devices\nthat aﬀect the device and the network.\nValidation\
    \ can be done using blockchain. The data is also veriﬁed\nthrough cryptography\
    \ to ensure that a legitimate sender has sent it\n[245].\nManipulation of data\n\
    The data extracted from IoT devices is\nmanipulated and is used\ninappropriately.\n\
    Using blockchain, the IoT devices are interlocked due to which the\nsystem rejects\
    \ any kind of change in data through IoT devices [246,\n247].\nService ineﬃciency\
    \ due to\nheavy load on the cloud\nserver\nCloud services malfunctions due to\n\
    cyberattack, power failures, or bugs in\nsoftware.\nData records are uploaded\
    \ on diﬀerent nodes on the network. Due\nto the same data in diﬀerent nodes, there\
    \ is no single point of failure\n[248, 249].\nTraﬃc and cost\nmanagement\nThe\
    \ handling of the exponential growth\nin IoT devices is a tedious task.\nThe IoT\
    \ devices can be connected and communicated through peers\nbypassing the central\
    \ servers through the decentralization feature\n[250, 251].\nPrivacy issues in\
    \ IoT\ndevices\nThe user data present in IoT devices are\nmore vulnerable due\
    \ to cyberattacks.\nThe permissioned blockchain can eradicate this problem [252–254].\n\
    20\nWireless Communications and Mobile Computing\nto be given to design the required\
    \ mechanisms to\nprovide the crime investigators freedom of forensic\ninvestigation\
    \ without the cessation of the contin-\nued operation of things\n(iv) Forensic\
    \ analysis of data in IoT: forensic investiga-\ntors deal with a large volume\
    \ of IoT data using var-\nious analysis techniques during the process of\ncrime\
    \ investigation [185]. In an IoT environment,\nthe data are collected and analyzed\
    \ from various\ndevices and the results are used for various types\nof decision\
    \ making [186]. As the process of data\nanalysis and interpretation is complex,\
    \ the accuracy\nof the results and further investigation is aﬀected\n[156]. Therefore,\
    \ the need for more standardized,\nsimple, and accurate data analysis tools and\
    \ tech-\nniques arises\n(v) Scope and life of digital forensic evidence: the lim-\n\
    ited storage of IoT devices deters the availability\nof evidence for a long time\
    \ which results in the loss\nof crucial data related to cybercrimes [131]. To\n\
    overcome this problem, forensic data should be\ntransferred frequently to the\
    \ cloud. However, the\nprocess of data transfer gives rise to another chal-\n\
    lenge of ensuring that evidence has not been\nmanipulated during the process.\
    \ Another major\nissue is related to the visibility of the evidence.\nThe presence\
    \ of a few malignant sensors at the\ncrime scene may aﬀect the work of forensic\
    \ investi-\ngators to locate the witness equipment. Log ﬁles\nfrom various devices\
    \ may assist the forensic\nexperts; however, these may not necessarily provide\n\
    the complete set of evidence for the investigation\n(vi) Privacy of the user:\
    \ the entanglement of IoT devices\nin various domains has made human life very\
    \ com-\nfortable. However, it has put the privacy of the\nusers of smart devices\
    \ at stake. It has been observed\nthat there is a lack of privacy-speciﬁc forensic\n\
    Real time \nService\nReal time \nservice\nData \nDissemination\nData \ndissemination\n\
    Decentralization\nDecentralization\nWireless \nSecurity\nWireless \nsecurity\n\
    Cache Attack \nPrevention\nCache attack \nprevention\nTransient \nStorage\nTransient\
    \ \nstorage\n(i) Intrusion detection\n(ii) Access management\n(iii) Recognition\
    \ of an identity\nProtocol designing\nSecure data sharing \nSecure data searching\n\
    Server-aided exchange\nBig data analytics\nVerifiable computation\nResolve access\
    \ control issues\nPrevent data breaches\nOvercome advance persistant threats\n\
    More Secure APIs\nPrevent data breaches\nReduce system and application vulnerabilities\n\
    Distribution of data\nProtection and Identification of data\nRecovery of data\
    \ from attacks\n(i)\n(ii)\n(iii)\n(i)\n(ii)\n(iii)\n(i)\n(ii)\n(iii)\n(i)\n(ii)\n\
    (iii)\n(i)\n(ii)\n(iii)\nFigure 10: Possible solutions oﬀered through fog computing\
    \ [219–230].\n21\nWireless Communications and Mobile Computing\nmechanisms for\
    \ the IoT environment [187]. The\nmain loophole of most of the available forensic\n\
    solutions is that the privacy aspect of the users is\nignored during the process\
    \ of investigation [188].\nAll investigation solutions proposed in [157, 160,\n\
    189] have serious privacy challenges. In very\ndiverse and dynamic IoT systems,\
    \ the practice of\nsuitable privacy measures can enhance the involve-\nment\n\
    of\ndigital\nevidence\nfor\ncybercrime\ninvestigations\n(vii) Security in IoT\
    \ devices: the diverse nature of\ndevices in the IoT environment opens a new space\n\
    for unauthorized users to attack the system which\nis very diﬃcult to identify\
    \ during the forensic inves-\ntigation. Consequently, the process of collecting\n\
    evidence becomes more tedious. Therefore, it is\nessential that during the design\
    \ of various forensic\ninvestigation mechanisms, the diverse nature of\nIoT systems\
    \ should be kept in mind [190]. The\nauthors introduced the concept of security\
    \ and pri-\nvacy in [56, 191]. The proposed approaches and\nalgorithms provide\
    \ more liberty to forensic investi-\ngators by leaving aside security issues.\
    \ By consider-\ning the diverse and dynamic nature of the IoT\nenvironment, more\
    \ of such techniques are needed\nin cybercrime investigation [192, 193]\n(viii)\
    \ Other issues and future research: during the study\nof various challenges, it\
    \ has been observed that\nthere is a requirement for more standardized tech-\n\
    niques and mechanisms in administering the data\ngathered from heterogeneous and\
    \ dynamic devices\nto facilitate the process of cybercrime investigation.\nDue\
    \ to the diversity of the formats of the data gath-\nered from the various devices,\
    \ there is also a\nrequirement for more sophisticated data analysis\ntools and\
    \ techniques. Advanced methods need to\nbe proposed to facilitate the liberty\
    \ of investigators\nto work without interrupting the operations of\nsmart devices\
    \ and equipment. As the storage capac-\nity of most of the smart devices is limited,\
    \ there is a\nrequirement for accurate and eﬃcient techniques\nto transfer the\
    \ forensic data from IoT devices to\nthe cloud without any loss of evidence. Suitable\n\
    measures also need to be practiced ensuring the\nprivacy of the user’s personal\
    \ data during the pro-\ncess of investigation\n8. Conclusions\nIoT is a developing\
    \ technology, which has bestowed human\nlife with comfort. However, the growing\
    \ practice of IoT\ndevices in various domains related to business and personal\n\
    life has put personal and data security at greater risk. A large\nvolume of data\
    \ is exchanged openly among the various smart\ndevices in an IoT environment which\
    \ attracts hackers to pen-\netrate the security system. The dependence of IoT\
    \ systems on\nwireless communication technologies makes them prone to\ncyberattacks\
    \ which is the root cause of cybercrime. In this\npaper, we present the various\
    \ elements of the IoT framework\nlike architecture, protocols, technologies, and\
    \ application\ndomains. A detailed review of the security aspects of an IoT\n\
    environment from the years 2010 to 2020 is presented. Var-\nious security aspects\
    \ which may facilitate intruders to com-\nmit cybercrime are also discussed. Implementation\
    \ of the\nsecurity mechanisms at each layer of the IoT architecture is\npresented\
    \ in this survey. The role of IoT forensics and\nadvanced\ntechnologies\nin\n\
    cybercrime\ninvestigation\nis\nimpressed upon in this review. This survey also\
    \ consists of\npatents reported and real-time applications developed to\nmitigate\
    \ the problems occurring due to cybercrime in IoT\ndevices. Lastly, the various\
    \ open research challenges to be\naddressed are discussed to facilitate the process\
    \ of cybercrime\ninvestigation in the IoT systems.\nData Availability\nAny data\
    \ or material used in the survey is referred to in the\narticle.\nConflicts of\
    \ Interest\nThere is no conﬂict of interests to declare.\nReferences\n[1] I. Butun,\
    \ P. Osterberg, and H. Song, “Security of the internet\nof things: vulnerabilities,\
    \ attacks, and countermeasures,”\nIEEE Communications Surveys & Tutorials, vol.\
    \ 22, no. 1,\npp. 616–644, 2020.\n[2] V. Sharma, G. Choudhary, Y. Ko, and I. You,\
    \ “Behavior and\nvulnerability assessment of drones-enabled industrial inter-\n\
    net of things (IIot),” IEEE Access, vol. 6, pp. 43368–43383,\n2018.\n[3] J. Lin,\
    \ W. Yu, N. Zhang, X. Yang, H. Zhang, and W. Zhao, “A\nsurvey on internet of things:\
    \ architecture, enabling technolo-\ngies, security and privacy, and applications,”\
    \ IEEE Internet of\nThings Journal, vol. 4, no. 5, pp. 1125–1142, 2017.\n[4] S.\
    \ Forsström, I. Butun, M. Eldefrawy, U. Jennehag, and\nM. Gidlund, “Challenges\
    \ of securing the industrial internet\nof things value chain,” in 2018 Workshop\
    \ on Metrology for\nIndustry 4.0 and IoT, pp. 218–223, Brescia, Italy, April 2018.\n\
    [5] S. Jeschke, C. Brecher, H. Song, and D. Rawat, Industrial\nInternet of Things:\
    \ Foundations, Principles and Applications,\nSpringer, Cham, Switzerland, 2017.\n\
    [6] H. Song, D. B. Rawat, S. Jeschke, and C. Brecher, Cyber-phys-\nical Systems:\
    \ Foundations, Principles and Applications, Mor-\ngan Kaufmann, 2016.\n[7] P.\
    \ V. Astillo, J. Kim, V. Sharma, and I. You, “SGF-MD:\nbehavior rule speciﬁcation-based\
    \ distributed misbehavior\ndetection of embedded IoT devices in a closed-loop\
    \ smart\ngreenhouse\nfarming\nsystem,”\nIEEE\nAccess,\nvol.\n8,\npp. 196235–196252,\
    \ 2020.\n[8] A. Kataria, S. Ghosh, V. Karar, T. Gupta, K. Srinivasan, and\nY.-C.\
    \ Hu, “Improved diver communication system by com-\nbining\noptical\nand\nelectromagnetic\n\
    trackers,”\nSensors,\nvol. 20, no. 18, p. 5084, 2020.\n[9] V. Sharma, R. Kumar,\
    \ and R. Kaur, “UAV-assisted content-\nbased sensor search in IoTs,” Electronics\
    \ Letters, vol. 53,\nno. 11, pp. 724–726, 2017.\n22\nWireless Communications and\
    \ Mobile Computing\n[10] I. You, H.-C. Chen, V. Sharma, and I. Kotenko, Mobile\
    \ Inter-\nnet Security: Second International Symposium, MobiSec 2017,\nvol. 971,\
    \ Springer, Jeju Island, Republic of Korea, 2018, Octo-\nber 19–22, 2017, Revised\
    \ Selected Papers.\n[11] Y. Lu and L. D. Xu, “Internet of things (IoT) cybersecurity\n\
    research: a review of current research topics,” IEEE Internet\nof Things Journal,\
    \ vol. 6, no. 2, pp. 2103–2115, 2019.\n[12] F. Servida and E. Casey, “IoT forensic\
    \ challenges and oppor-\ntunities for digital traces,” Digital Investigation,\
    \ vol. 28,\npp. S22–S29, 2019.\n[13] V. R. Kebande, N. M. Karie, A. Michael, S.\
    \ M. G. Malapane,\nand H. S. Venter, “How an IoT-enabled “smart refrigerator”\n\
    can play a clandestine role in perpetuating cyber-crime,” in\n2017 IST-Africa\
    \ Week Conference (IST-Africa), pp. 1–10,\nWindhoek, Namibia, May 2017.\n[14]\
    \ N. Akatyev and J. I. James, “Evidence identiﬁcation in IoT\nnetworks based on\
    \ threat assessment,” Future Generation\nComputer Systems, vol. 93, pp. 814–821,\
    \ 2019.\n[15] A. K. Singholi, M. Mittal, and A. Bhargava, “A review on IoT-\n\
    based hybrid navigation system for mid-sized autonomous\nvehicles,”\nin\nAdvances\n\
    in\nElectromechanical\nTechnolo-\ngiespp. 735–744, Springer.\n[16] A. Abdullah,\
    \ R. Hamad, M. Abdulrahman, H. Moala, and\nS. Elkhediri, “CyberSecurity: a review\
    \ of internet of things\n(IoT) security issues, challenges and techniques,” in\
    \ 2019\n2nd International Conference on Computer Applications &\nInformation Security\
    \ (ICCAIS), pp. 1–6, Riyadh, Saudi Ara-\nbia, May 2019.\n[17] A. Venčkauskas,\
    \ R. Damaševičius, V. Jusas, J. Toldinas,\nD. Rudzika, and G. Drėgvaitė, “A review\
    \ of cyber-crime in\ninternet of things: technologies, investigation methods\n\
    and digital forensics,” International Journal of Engineering\nSciences and Research\
    \ Technology, vol. 4, pp. 460–477,\n2015.\n[18] A. Tewari and B. B. Gupta, “Security,\
    \ privacy and trust of dif-\nferent layers in internet-of-things (IoTs) framework,”\
    \ Future\ngeneration computer systems, vol. 108, pp. 909–920, 2020.\n[19] H. Sundmaeker,\
    \ P. Guillemin, P. Friess, and S. Woelﬄé,\n“Vision and challenges for realising\
    \ the internet of things,”\nCluster of European Research Projects on the Internet\
    \ of\nThings, European Commision, vol. 3, pp. 34–36, 2010.\n[20] G. Marias, J.\
    \ Barros, M. Fiedler et al., “Security and privacy\nissues for the network of\
    \ the future,” Security and Communi-\ncations Networks, vol. 5, no. 9, pp. 987–1005,\
    \ 2011.\n[21] K. Liebrand, K. Moser, S. Knüsli et al., “Ethics, privacy and\n\
    data protection in BUTLER,” Project Title: Ubiquitous, Secure\nInternet-of-Things\
    \ with Location and Contex-Awareness, Pro-\nject No: 287901, SWC, 2013.\n[22]\
    \ D. Patel, K. Srinivasan, C.-Y. Chang, T. Gupta, and\nA. Kataria, “Network anomaly\
    \ detection inside consumer\nnetworks—a hybrid approach,” Electronics, vol. 9,\
    \ no. 6,\np. 923, 2020.\n[23] V. Sharma, I. You, R. Kumar, and V. Chauhan, “OFFRP:\
    \ opti-\nmised fruit ﬂy based routing protocol with congestion control\nfor UAVs\
    \ guided ad hoc networks,” International Journal of\nAd Hoc and Ubiquitous Computing,\
    \ vol. 27, no. 4, pp. 233–\n255, 2018.\n[24] V. Sharma, D. N. K. Jayakody, I.\
    \ You, R. Kumar, and J. Li,\n“Secure and eﬃcient context-aware localization of\
    \ drones in\nurban scenarios,” IEEE Communications Magazine, vol. 56,\nno. 4,\
    \ pp. 120–128, 2018.\n[25] A. Nieto and J. Lopez, “Analysis and taxonomy of security/-\n\
    QoS tradeoﬀ solutions for the future internet,” Security and\nCommunication Networks,\
    \ vol. 7, no. 12, p. 2803, 2014.\n[26] J. Sutanto, E. Palme, C. H. Tan, C. W.\
    \ Phang, and Fudan Uni-\nversity, “Addressing the personalization-privacy paradox:\
    \ an\nempirical assessment from a ﬁeld experiment on smartphone\nusers,” MIS quarterly,\
    \ vol. 37, no. 4, pp. 1141–1164, 2013.\n[27] T. Heer, O. Garcia-Morchon, R. Hummen,\
    \ S. L. Keoh, S. S.\nKumar, and K. Wehrle, “Security challenges in the IP-based\n\
    internet of things,” Wireless Personal Communications,\nvol. 61, no. 3, pp. 527–542,\
    \ 2011.\n[28] N. E. Marion, “The council of Europe’s cyber crime treaty: an\n\
    exercise in symbolic legislation,” International Journal of\nCyber Criminology,\
    \ vol. 4, p. 699, 2010.\n[29] H. Saini, Y. S. Rao, and T. C. Panda, “Cyber-crimes\
    \ and their\nimpacts: a review,” International Journal of Engineering\nResearch\
    \ and Applications, vol. 2, pp. 202–209, 2012.\n[30] Y. Zhang, Y. Xiao, K. Ghaboosi,\
    \ J. Zhang, and H. Deng, “A\nsurvey of cyber crimes,” Security and Communication\
    \ Net-\nworks, vol. 5, no. 4, p. 437, 2012.\n[31] M. Felson and R. V. Clarke,\
    \ “Opportunity makes the thief,”\nPolice Research Series, Paper, vol. 98, pp.\
    \ 1–36, 1998.\n[32] L. Atzori, A. Iera, and G. Morabito, “The internet of things:\
    \ a\nsurvey,” Computer networks, vol. 54, no. 15, pp. 2787–2805,\n2010.\n[33]\
    \ D. Miorandi, S. Sicari, F. De Pellegrini, and I. Chlamtac,\n“Internet of things:\
    \ vision, applications and research chal-\nlenges,” Ad hoc networks, vol. 10,\
    \ no. 7, pp. 1497–1516, 2012.\n[34] I. You, S. Kwon, G. Choudhary, V. Sharma,\
    \ and J. Seo, “An\nenhanced LoRaWAN security protocol for privacy preserva-\n\
    tion in IoT with a case study on a smart factory-enabled park-\ning system,” Sensors,\
    \ vol. 18, no. 6, p. 1888, 2018.\n[35] J. Gubbi, R. Buyya, S. Marusic, and M.\
    \ Palaniswami, “Internet\nof things (IoT): a vision, architectural elements, and\
    \ future\ndirections,” Future generation computer systems, vol. 29,\nno. 7, pp.\
    \ 1645–1660, 2013.\n[36] C. C. Aggarwal, N. Ashish, and A. Sheth, “The internet\
    \ of\nthings: a survey from the data-centric perspective,” in Man-\naging and\
    \ Mining Sensor Data, pp. 383–428, Springer, 2013.\n[37] O. Said, “Accurate performance\
    \ evaluation of internet multi-\ncast architectures: hierarchical and fully distributed\
    \ vs. ser-\nvice-centric,”\nKSII\nTransactions\non\nInternet\nand\nInformation\
    \ Systems, vol. 7, no. 9, pp. 2194–2212, 2013.\n[38] C. Perera, A. Zaslavsky,\
    \ P. Christen, and D. Georgakopoulos,\n“Context aware computing for the internet\
    \ of things: a sur-\nvey,” IEEE communications surveys & tutorials, vol. 16,\n\
    no. 1, pp. 414–454, 2014.\n[39] J. Granjal, E. Monteiro, and J. Sa Silva, “Security\
    \ for the inter-\nnet of things: a survey of existing protocols and open research\n\
    issues,” IEEE Communications Surveys & Tutorials, vol. 17,\nno. 3, pp. 1294–1312,\
    \ 2015.\n[40] S. Sicari, A. Rizzardi, L. A. Grieco, and A. Coen-Porisini,\n“Security,\
    \ privacy and trust in internet of things: the road\nahead,” Computer networks,\
    \ vol. 76, pp. 146–164, 2015.\n[41] M. Abomhara and G. M. Køien, “Security and\
    \ privacy in the\ninternet of things: current status and open issues,” in 2014\n\
    International Conference on Privacy and Security in Mobile\nSystems (PRISMS),\
    \ pp. 1–8, Aalborg, Denmark, 2014.\n[42] R. Mahmoud, T. Yousuf, F. Aloul, and\
    \ I. Zualkernan, “Inter-\nnet of things (IoT) security: current status, challenges\
    \ and\nprospective measures,” in 2015 10th International Conference\n23\nWireless\
    \ Communications and Mobile Computing\nfor Internet Technology and Secured Transactions\
    \ (ICITST),\npp. 336–341, London UK, 2015.\n[43] J. Pescatore and G. Shpantzer,\
    \ Securing the Internet of Things\nSurvey, SANS Institute, 2014.\n[44] D. Gil,\
    \ A. Ferrández, H. Mora-Mora, and J. Peral, “Internet of\nthings: a review of\
    \ surveys based on context aware intelligent\nservices,” Sensors, vol. 16, no.\
    \ 7, p. 1069, 2016.\n[45] F. Muhammad, W. Anjum, and K. S. Mazhar, “A critical\n\
    analysis on the security concerns of internet of things\n(IoT),” International\
    \ Journal of Computer Applications,\nvol. 111, pp. 1–6, 2015.\n[46] R. Vignesh\
    \ and A. Samydurai, “Security on internet of things\n(IoT) with challenges and\
    \ countermeasures,” International\nJournal of Engineering Development and Research,\
    \ IJEDR,\nvol. 5, no. 1, pp. 417–423, 2017.\n[47] M. A. Razzaq, S. H. Gill, M.\
    \ A. Qureshi, and S. Ullah, “Secu-\nrity issues in the internet of things (IoT):\
    \ a comprehensive\nstudy,” International Journal of Advanced Computer Science\n\
    and Applications, vol. 8, p. 383, 2017.\n[48] C. Maple, “Security and privacy\
    \ in the internet of things,”\nJournal of Cyber Policy, vol. 2, pp. 155–184, 2017.\n\
    [49] P. H. Rughani, “IoT evidence acquisition—issues and chal-\nlenges,” Advances\
    \ in Computational Sciences and Technology,\nvol. 10, pp. 1285–1293, 2017.\n[50]\
    \ G. Corser, G. Fink, and J. Bielby, Internet of Things (IoT)\nSecurity Best Practices;\
    \ IEEE Internet Technology Policy Com-\nmunity; White Paper, IEEE, Piscataway,\
    \ NJ, USA, 2017.\n[51] M. Burhan, R. A. Rehman, B. Khan, and B.-S. Kim, “IoT ele-\n\
    ments, layered architectures and security issues: a compre-\nhensive survey,”\
    \ Sensors, vol. 18, p. 2796, 2018.\n[52] M. M. Noor and W. H. Hassan, “Current\
    \ research on internet\nof things (IoT) security: a survey,” Computer Networks,\n\
    vol. 148, pp. 283–294, 2019.\n[53] A. MacDermott, T. Baker, and Q. Shi, “IoT forensics:\
    \ chal-\nlenges for the IoA era,” in 2018 9th IFIP International Confer-\nence\
    \ on New Technologies, Mobility and Security (NTMS),\npp. 1–5, Paris, France,\
    \ 2018.\n[54] A. Riahi Sfar, E. Natalizio, Y. Challal, and Z. Chtourou, “A\nroadmap\
    \ for security challenges in the internet of things,”\nDigital Communications\
    \ and Networks, vol. 4, no. 2,\npp. 118–137, 2018.\n[55] N. Neshenko, E. Bou-Harb,\
    \ J. Crichigno, G. Kaddoum, and\nN. Ghani, “Demystifying IoT security: an exhaustive\
    \ survey\non IoT vulnerabilities and a ﬁrst empirical look on internet-\nscale\
    \ IoT exploitations,” IEEE Communications Surveys &\nTutorials, vol. 21, no. 3,\
    \ pp. 2702–2733, 2019.\n[56] W. Zhou, Y. Jia, A. Peng, Y. Zhang, and P. Liu, “The\
    \ eﬀect of\nIoT new features on security and privacy: new threats, exist-\ning\
    \ solutions, and challenges yet to be solved,” IEEE Internet\nof Things Journal,\
    \ vol. 6, pp. 1606–1616, 2018.\n[57] M. Aydos, Y. Vural, and A. Tekerek, “Assessing\
    \ risks and\nthreats with layered approach to internet of things security,”\n\
    Measurement and Control, vol. 52, pp. 338–353, 2019.\n[58] S. Nasiri, F. Sadoughi,\
    \ M. H. Tadayon, and A. Dehnad, “Secu-\nrity requirements of internet of things-based\
    \ healthcare sys-\ntem: a survey study,” Acta Informatica Medica, vol. 27,\np.\
    \ 253, 2019.\n[59] K. Tabassum, A. Ibrahim, and S. A. El Rahman, “Security\nissues\
    \ and challenges in IoT,” in 2019 International Confer-\nence on Computer and\
    \ Information Sciences (ICCIS), pp. 1–\n5, Sakaka, Saudi Arabia, 2019.\n[60] J.\
    \ M. Blythe, N. Sombatruang, and S. D. Johnson, “What\nsecurity features and crime\
    \ prevention advice is communi-\ncated in consumer IoT device manuals and support\
    \ pages?,”\nJournal of Cybersecurity, vol. 5, 2019.\n[61] F. Adesola, S. Misra,\
    \ N. Omoregbe et al., “An IOT-based\narchitecture for crime management in Nigeria,”\
    \ in Data,\nEngineering and Applications, pp. 245–254, Springer, Singa-\npore,\
    \ 2019.\n[62] M. Stoyanova, Y. Nikoloudakis, S. Panagiotakis, E. Pallis, and\n\
    E. K. Markakis, “A survey on the internet of things (IoT)\nforensics: challenges,\
    \ approaches and open issues,” IEEE\nCommunications Surveys & Tutorials, vol.\
    \ 22, no. 2,\npp. 1191–1221, 2020.\n[63] L.\nA.\nTawalbeh,\nF.\nMuheidat,\nM.\n\
    Tawalbeh,\nand\nM. Quwaider, “IoT privacy and security: challenges and solu-\n\
    tions,” Applied Sciences, vol. 10, article 4102, 2020.\n[64] H. F. Atlam, A. Alenezi,\
    \ M. O. Alassaﬁ, A. A. Alshdadi, and\nG. B. Wills, “Security, cybercrime and digital\
    \ forensics for\nIoT,” in Principles of Internet of Things (IoT) Ecosystem:\n\
    Insight Paradigm, S. L. Peng, S. Pal, and L. Huang, Eds.,\nvol. 174 of Intelligent\
    \ Systems Reference Library, pp. 551–\n577, Springer, Cham, 2020.\n[65] W. A.\
    \ Al-Khater, S. Al-Maadeed, A. A. Ahmed, A. S. Sadiq,\nand M. K. Khan, “Comprehensive\
    \ review of cybercrime\ndetection techniques,” IEEE Access, vol. 8, pp. 137293–\n\
    137311, 2020.\n[66] W. U. Khan, J. Liu, F. Jameel, V. Sharma, R. Jantti, and\n\
    Z. Han, “Spectral eﬃciency optimization for next generation\nNOMA-enabled IoT\
    \ networks,” IEEE Transactions on Vehic-\nular Technology, vol. 69, no. 12, pp.\
    \ 15284–15297, 2020.\n[67] V. Puri, A. Kataria, and V. Sharma, “Artiﬁcial intelligence-\n\
    powered decentralized framework for internet of things in\nhealthcare 4.0,” Transactions\
    \ on Emerging Telecommunica-\ntions Technologies, no. article e4245, 2021.\n[68]\
    \ M. U. Sheikh, M. Riaz, F. Jameel et al., “Quality-aware trajec-\ntory planning\
    \ of cellular connected UAVs,” in Proceedings of\nthe 2nd ACM MobiCom Workshop\
    \ on Drone Assisted Wire-\nless Communications for 5G and Beyond, pp. 79–85, London\n\
    United Kingdom, 2020.\n[69] K. Andersson, I. You, R. Rahmani, and V. Sharma, “Secure\n\
    computation on 4G/5G enabled internet-of-things,” Wireless\nCommunications and\
    \ Mobile Computing, vol. 2019, Article\nID 3978193, 2019.\n[70] D. Shin, V. Sharma,\
    \ J. Kim, S. Kwon, and I. You, “Secure and\neﬃcient protocol for route optimization\
    \ in PMIPv6-based\nsmart home IoT networks,” IEEE Access, vol. 5, pp. 11100–\n\
    11117, 2017.\n[71] M. Wu, T.-J. Lu, F.-Y. Ling, J. Sun, and H.-Y. Du, “Research\n\
    on the architecture of internet of things,” in 2010 3rd Interna-\ntional Conference\
    \ on Advanced Computer Theory and Engi-\nneering(ICACTE), pp. V5-484–V5-487, Chengdu,\
    \ China,\n2010.\n[72] C.-W. Tsai, C.-F. Lai, and A. V. Vasilakos, “Future internet\
    \ of\nthings: open issues and challenges,” Wireless Networks,\nvol. 20, pp. 2201–2217,\
    \ 2014.\n[73] Q. Jing, A. V. Vasilakos, J. Wan, J. Lu, and D. Qiu, “Security\n\
    of the internet of things: perspectives and challenges,” Wire-\nless Networks,\
    \ vol. 20, pp. 2481–2501, 2014.\n[74] G. Montenegro, N. Kushalnagar, J. Hui, and\
    \ D. Culler,\n“Transmission of IPv6 packets over IEEE 802.15.4 networks,”\nInternet\
    \ proposed standard RFC, vol. 4944, p. 130, 2007.\n24\nWireless Communications\
    \ and Mobile Computing\n[75] S. Raza, H. Shafagh, K. Hewage, R. Hummen, and T.\
    \ Voigt,\n“Lithe: lightweight secure CoAP for the internet of things,”\nIEEE Sensors\
    \ Journal, vol. 13, pp. 3711–3720, 2013.\n[76] S. Iren, P. D. Amer, and P. T.\
    \ Conrad, “The transport layer:\ntutorial and survey,” ACM Computing Surveys,\
    \ vol. 31,\npp. 360–404, 1999.\n[77] M. A. Sayeed, R. Kumar, V. Sharma, and M.\
    \ A. Sayeed, “Eﬃ-\ncient deployment with throughput maximization for UAVs\ncommunication\
    \ networks,” Sensors, vol. 20, article 6680,\n2020.\n[78] J. Zheng and M. J. Lee,\
    \ “A comprehensive performance study\nof IEEE 802.15.4,” Sensor Network Operations,\
    \ vol. 4,\npp. 218–237, 2006.\n[79] A. Al-Fuqaha, M. Guizani, M. Mohammadi, M.\
    \ Aledhari,\nand M. Ayyash, “Internet of things: a survey on enabling\ntechnologies,\
    \ protocols, and applications,” IEEE communica-\ntions surveys & tutorials, vol.\
    \ 17, pp. 2347–2376, 2015.\n[80] M. Kovatsch, “CoAP for the web of things: from\
    \ tiny\nresource-constrained devices to the web browser,” in Pro-\nceedings of\
    \ the 2013 ACM conference on Pervasive and Ubiq-\nuitous Computing Adjunct Publication,\
    \ pp. 1495–1504,\nZurich, Switzerland, 2013.\n[81] N. Glombitza, D. Pﬁsterer,\
    \ and S. Fischer, “LTP: an eﬃcient\nweb service transport protocol for resource\
    \ constrained\ndevices,” in 2010 7th Annual IEEE Communications Society\nConference\
    \ on Sensor, Mesh and Ad Hoc Communications\nand Networks (SECON), pp. 1–9, Boston,\
    \ MA, USA, 2010.\n[82] M. A. da Cruz, J. J. Rodrigues, E. S. Paradello, P. Lorenz,\n\
    P. Solic, and V. H. C. Albuquerque, “A proposal for bridging\nthe message queuing\
    \ telemetry transport protocol to HTTP\non IoT solutions,” in 2018 3rd International\
    \ Conference on\nSmart and Sustainable Technologies (SpliTech), pp. 1–5, Split,\n\
    Croatia, 2018.\n[83] W. Kang, K. Kapitanova, and S. H. Son, “RDDS: a real-time\n\
    data distribution service for cyber-physical systems,” IEEE\nTransactions on Industrial\
    \ Informatics, vol. 8, pp. 393–405,\n2012.\n[84] A. Hornsby and R. Walsh, “From\
    \ instant messaging to cloud\ncomputing, an XMPP review,” in IEEE International\
    \ Sympo-\nsium on Consumer Electronics (ISCE 2010), pp. 1–6, Braun-\nschweig,\
    \ Germany, 2010.\n[85] S. Vinoski, “Advanced message queuing protocol,” IEEE\n\
    Internet Computing, vol. 10, pp. 87–89, 2006.\n[86] K. Pister and L. Doherty,\
    \ “TSMP: time synchronized mesh\nprotocol,” IASTED Distributed Sensor Networks,\
    \ vol. 391,\np. 398, 2008.\n[87] R. Seggelmann, M. Tuexen, and M. Williams, “Transport\n\
    layer security (TLS) and datagram transport layer security\n(DTLS) heartbeat extension,”\
    \ Internet Engineering Task\nForce, RFC, vol. 6520, 2012.\n[88] T. Dreibholz,\
    \ E. P. Rathgeb, I. Rungeler, R. Seggelmann,\nM. Tuxen, and R. R. Stewart, “Stream\
    \ control transmission\nprotocol: past, current, and future standardization activities,”\n\
    IEEE Communications Magazine, vol. 49, pp. 82–88, 2011.\n[89] B. A. Forouzan,\
    \ TCP/IP Protocol Suite, McGraw-Hill, Inc.,\n2009.\n[90] D. Bandyopadhyay and\
    \ J. Sen, “Internet of things: applica-\ntions and challenges in technology and\
    \ standardization,”\nWireless personal communications, vol. 58, pp. 49–69, 2011.\n\
    [91] M. Li, M.-Y. Wu, Y. Li et al., “Shanghai grid as an information\nservice\
    \ grid: an overview,” in 2005 IEEE International Confer-\nence on Services Computing\
    \ (SCC'05) Vol-1, pp. 351–354,\nOrlando, FL, USA, 2005.\n[92] A. de Saint-Exupery,\
    \ “Internet of Things,” Strategic Research\nRoadmap, Corpus ID: 6436852, 2009.\n\
    [93] O. Vermesan and P. Friess, Internet of Things: Converging\nTechnologies for\
    \ Smart Environments and Integrated Ecosys-\ntems, River Publishers, 2013.\n[94]\
    \ M. A. Alsmirat, F. Al-Alem, M. Al-Ayyoub, Y. Jararweh, and\nB. Gupta, “Impact\
    \ of digital ﬁngerprint image quality on the\nﬁngerprint recognition accuracy,”\
    \ Multimedia Tools and\nApplications, vol. 78, pp. 3649–3688, 2019.\n[95] L. Tan\
    \ and N. Wang, “Future internet: the internet of things,”\nin 2010 3rd International\
    \ Conference on Advanced Computer\nTheory and Engineering (ICACTE), pp. V5-376–V5-380,\n\
    Chengdu, China, 2010.\n[96] F. Mattern and C. Floerkemeier, “From the internet\
    \ of com-\nputers to the internet of things,” in From Active Data Manage-\nment\
    \ to Event-Based Systems and More, K. Sachs, I. Petrov, and\nP. Guerrero, Eds.,\
    \ vol. 6462 of Lecture Notes in Computer Sci-\nence, pp. 242–259, Springer, Berlin,\
    \ Heidelberg, 2010.\n[97] P. N. Mahalle, B. Anggorojati, N. R. Prasad, and R.\
    \ Prasad,\n“Identity authentication and capability based access control\n(IACAC)\
    \ for the internet of things,” Journal of Cyber Security\nand Mobility, vol. 1,\
    \ pp. 309–348, 2013.\n[98] V. Sharma, R. Kumar, K. Srinivasan, and D. N. K. Jayakody,\n\
    “Coagulation attacks over networked UAVs: concept, chal-\nlenges, and research\
    \ aspects,” International Journal of\nAdvanced Trends in Computer Science and\
    \ Engineering,\nvol. 8, no. 1, pp. 67–72, 2019.\n[99] Q. Wen, X. Dong, and R.\
    \ Zhang, “Application of dynamic var-\niable cipher security certiﬁcate in internet\
    \ of things,” in 2012\nIEEE 2nd International Conference on Cloud Computing and\n\
    Intelligence Systems, pp. 1062–1066, Hangzhou, China, 2012.\n[100] C. Yu, J. Li,\
    \ X. Li, X. Ren, and B. B. Gupta, “Four-image\nencryption scheme based on quaternion\
    \ Fresnel transform,\nchaos and computer generated hologram,” Multimedia Tools\n\
    and Applications, vol. 77, pp. 4585–4608, 2018.\n[101] K. Zhao and L. Ge, “A survey\
    \ on the internet of things secu-\nrity,” in 2013 Ninth International Conference\
    \ on Computa-\ntional Intelligence and Security, pp. 663–667, Emeishan,\nChina,\
    \ 2013.\n[102] R. Roman, P. Najera, and J. Lopez, “Securing the internet of\n\
    things,” Computer, vol. 44, no. 9, pp. 51–58, 2011.\n[103] T. Alexenko, M. Jenne,\
    \ S. D. Roy, and W. Zeng, “Cross-site\nrequest forgery: attack and defense,” in\
    \ 2010 7th IEEE Con-\nsumer Communications and Networking Conference, pp. 1-\n\
    2, Las Vegas, NV, USA, 2010.\n[104] S. Li, L. Da Xu, and S. Zhao, “5G internet\
    \ of things: a survey,”\nJournal of Industrial Information Integration, vol. 10,\
    \ pp. 1–9,\n2018.\n[105] F. Li and P. Xiong, “Practical secure communication for\
    \ inte-\ngrating wireless sensor networks into the internet of things,”\nIEEE\
    \ Sensors Journal, vol. 13, pp. 3677–3684, 2013.\n[106] B.\nV.\nSundaram,\nM.\n\
    Ramnath,\nM.\nPrasanth,\nand\nV. Sundaram, “Encryption and Hash based security\
    \ in inter-\nnet of things,” in 2015 3rd International Conference on Signal\n\
    Processing, Communication and Networking (ICSCN), pp. 1–\n6, Chennai, India, 2015.\n\
    [107] R. H. Weber, “Internet of things—new security and privacy\nchallenges,”\
    \ Computer Law & Security Review, vol. 26,\npp. 23–30, 2010.\n25\nWireless Communications\
    \ and Mobile Computing\n[108] Z. Li, X. Yin, Z. Geng et al., “Research on PKI-like\
    \ protocol\nfor the internet of things,” in 2013 Fifth International Confer-\n\
    ence on Measuring Technology and Mechatronics Automa-\ntion, pp. 915–918, Hong\
    \ Kong, China, 2013.\n[109] S. Cirani, G. Ferrari, and L. Veltri, “Enforcing security\
    \ mech-\nanisms in the IP-based internet of things: an algorithmic\noverview,”\
    \ Algorithms, vol. 6, pp. 197–226, 2013.\n[110] E. Hammer-Lahav, D. Recordon,\
    \ and D. Hardt, “The oauth\n1.0 protocol,” RFC 5849, 2010.\n[111] T. Eisenbarth,\
    \ S. Kumar, C. Paar, A. Poschmann, and\nL. Uhsadel, “A survey of lightweight-cryptography\
    \ imple-\nmentations,” IEEE Design & Test of Computers, vol. 24,\npp. 522–533,\
    \ 2007.\n[112] S. Ravi, A. Raghunathan, P. Kocher, and S. Hattangady,\n“Security\
    \ in embedded systems: design challenges,” ACM\nTransactions on Embedded Computing\
    \ Systems, vol. 3,\npp. 461–491, 2004.\n[113] S. Babar, A. Stango, N. Prasad,\
    \ J. Sen, and R. Prasad, “Pro-\nposed embedded security framework for internet\
    \ of things\n(IoT),” in 2011 2nd International Conference on Wireless\nCommunication,\
    \ Vehicular Technology, Information Theory\nand Aerospace & Electronic Systems\
    \ Technology (Wireless\nVITAE), pp. 1–5, Chennai, India, 2011.\n[114] S. Horrow\
    \ and A. Sardana, “Identity management framework\nfor cloud based internet of\
    \ things,” in Proceedings of the First\nInternational Conference on Security of\
    \ Internet of Things—-\nSecurIT '12, pp. 200–203, Kollam, India, 2012.\n[115]\
    \ H. Abie and I. Balasingham, “Risk-based adaptive security for\nsmart IoT in\
    \ eHealth,” in Proceedings of the 7th International\nConference on Body Area Networks,\
    \ pp. 269–275, Oslo, Nor-\nway, 2012.\n[116] F. Al Shuhaimi, M. Jose, and A. V.\
    \ Singh, “Software deﬁned\nnetwork as solution to overcome security challenges\
    \ in\nIoT,” in 2016 5th International Conference on Reliability,\nInfocom Technologies\
    \ and Optimization (Trends and Future\nDirections) (ICRITO), pp. 491–496, Noida,\
    \ India, 2016.\n[117] S. Buchegger and J.-Y. Le Boudec, “Performance analysis\
    \ of\nthe CONFIDANT protocol,” in Proceedings of the 3rd\nACM International Symposium\
    \ on Mobile Ad Hoc Net-\nworking & Computing, pp. 226–236, Lausanne, Switzer-\n\
    land, 2002.\n[118] P. Michiardi and R. Molva, “Core: a collaborative reputation\n\
    mechanism to enforce node cooperation in mobile ad hoc\nnetworks,” in Advanced\
    \ communications and multimedia\nsecurity, B. Jerman-Blažič and T. Klobučar, Eds.,\
    \ pp. 107–\n121, Springer, Boston, MA, 2002.\n[119] J. T. Oke, J. Agajo, B. K.\
    \ Nuhu, J. G. Kolo, and L. Ajao, “Two\nlayers trust-based intrusion prevention\
    \ system for wireless\nsensor networks,” Advances inElectrical and Telecommunica-\n\
    tion Engineering, vol. 1, pp. 23–29, 2018.\n[120] X. Wang, M. Nguyen, J. Carr,\
    \ L. Cui, and K. Lim, “A group\npreference-based privacy-preserving POI recommender\
    \ sys-\ntem,” Information & Communications Technology Express\n(ICT Express),\
    \ vol. 6, no. 3, pp. 204–208, 2020.\n[121] H. Tao and W. Peiran, “Preference-based\
    \ privacy protection\nmechanism for the internet of things,” in 2010 Third Interna-\n\
    tional Symposium on Information Science and Engineering,\npp. 531–534, Shanghai,\
    \ China, 2010.\n[122] C. Bormann, A. P. Castellani, and Z. Shelby, “CoAP: an appli-\n\
    cation protocol for billions of tiny internet nodes,” IEEE\nInternet Computing,\
    \ vol. 16, pp. 62–67, 2012.\n[123] K. Gupta and S. Shukla, “Internet of things:\
    \ security chal-\nlenges for next generation networks,” in 2016 International\n\
    Conference on Innovation and Challenges in Cyber Security\n(ICICCS-INBUSH), pp.\
    \ 315–318, Greater Noida, India, 2016.\n[124] N. Gyory and M. Chuah, “IoTOne:\
    \ integrated platform for\nheterogeneous IoT devices,” in 2017 International Conference\n\
    on Computing, Networking and Communications (ICNC),\npp. 783–787, Silicon Valley,\
    \ CA, USA, 2017.\n[125] A. Sarma, A. Matos, J. Girão, and R. L. Aguiar, “Virtual\
    \ iden-\ntity framework for telecom infrastructures,” Wireless Per-\nsonal Communications,\
    \ vol. 45, pp. 521–543, 2008.\n[126] C. Hu, J. Zhang, and Q. Wen, “An identity-based\
    \ personal\nlocation system with protected privacy in IoT,” in 2011 4th\nIEEE\
    \ International Conference on Broadband Network and\nMultimedia Technology, pp.\
    \ 192–195, Shenzen, China, 2011.\n[127] V. Sharma, I. You, K. Yim, R. Chen, and\
    \ J.-H. Cho, “BRIoT:\nbehavior rule speciﬁcation-based misbehavior detection for\n\
    IoT-embedded cyber-physical systems,” IEEE Access, vol. 7,\npp. 118556–118580,\
    \ 2019.\n[128] D. P. Joseph and J. Norman, “An analysis of digital forensics\n\
    in cyber security,” in First International Conference on Artiﬁ-\ncial Intelligence\
    \ and Cognitive Computing, R. Bapi, K. Rao,\nand M. Prasad, Eds., vol. 815 of\
    \ Advances in Intelligent Sys-\ntems and Computing, pp. 701–708, Springer, Singapore,\n\
    2019.\n[129] M. Rogers, “The role of criminal proﬁling in the computer\nforensics\
    \ process,” Computers & Security, vol. 22, pp. 292–\n298, 2003.\n[130] I. You,\
    \ K. Yim, V. Sharma, G. Choudhary, R. Chen, and J.-\nH. Cho, “On IoT misbehavior\
    \ detection in cyber physical sys-\ntems,” in 2018 IEEE 23rd Paciﬁc Rim International\
    \ Sympo-\nsium on Dependable Computing (PRDC), pp. 189-190,\nTaipei, Taiwan, 2018.\n\
    [131] S. Alabdulsalam, K. Schaefer, T. Kechadi, and N.-A. Le-Khac,\n“Internet\
    \ of things forensics—challenges and a case study,” in\nAdvances in Digital Forensics\
    \ XIV. Digital Forensics 2018,\nvol. 532 of IFIP Advances in Information and Communica-\n\
    tion Technology, Springer, Cham.\n[132] I. Yaqoob, I. A. T. Hashem, A. Ahmed,\
    \ S. M. A. Kazmi, and\nC. S. Hong, “Internet of things forensics: recent advances,\n\
    taxonomy, requirements, and open challenges,” Future Gen-\neration Computer Systems,\
    \ vol. 92, pp. 265–275, 2019.\n[133] Q. Do, B. Martini, and K.-K. R. Choo, “Cyber-physical\
    \ sys-\ntems information gathering: a smart home case study,” Com-\nputer Networks,\
    \ vol. 138, pp. 1–12, 2018.\n[134] E. Oriwoh and P. Sant, “The forensics edge\
    \ management sys-\ntem: a concept and design,” in 2013 IEEE 10th International\n\
    Conference on Ubiquitous Intelligence and Computing and\n2013 IEEE 10th International\
    \ Conference on Autonomic and\nTrusted Computing, pp. 544–550, Vietri sul Mare,\
    \ Italy, 2013.\n[135] E. Oriwoh and G. Williams, “Internet of things: the argument\n\
    for smart forensics,” in Handbook of Research on Digital\nCrime, Cyberspace Security,\
    \ and Information Assurance,\nIGI-Global Publishing, 2014.\n[136] A. Goudbeek,\
    \ K.-K. R. Choo, and N.-A. Le-Khac, “A forensic\ninvestigation framework for smart\
    \ home environment,” in\n2018 17th IEEE International Conference On Trust, Security\n\
    And Privacy In Computing And Communications/12th IEEE\nInternational Conference\
    \ On Big Data Science And Engineer-\ning (TrustCom/BigDataSE), pp. 1446–1451,\
    \ New York, NY,\nUSA, 2018.\n26\nWireless Communications and Mobile Computing\n\
    [137] D. Li, L. Deng, B. B. Gupta, H. Wang, and C. Choi, “A novel\nCNN based security\
    \ guaranteed image watermarking genera-\ntion scenario for smart city applications,”\
    \ Information Sci-\nences, vol. 479, pp. 432–447, 2019.\n[138] M. S. Obaidat,\
    \ I. Traore, and I. Woungang, Biometric-Based\nPhysical and Cybersecurity Systems,\
    \ Springer, 2019.\n[139] I. You, K. Yim, V. Sharma, G. Choudhary, I.-R. Chen,\
    \ and J.-\nH. Cho, “Misbehavior detection of embedded IoT devices in\nmedical\
    \ cyber physical systems,” in Proceedings of the 2018\nIEEE/ACM International\
    \ Conference on Connected Health:\nApplications, Systems and Engineering Technologies,\
    \ pp. 88–\n93, Washington DC, 2018.\n[140] F. Al-Turjman and A. Malekloo, “Smart\
    \ parking in IoT-\nenabled cities: a survey,” Sustainable Cities and Society,\n\
    vol. 49, p. 101608, 2019.\n[141] M. M. Hossain, R. Hasan, and S. Zawoad, “Trust-IoV:\
    \ a trust-\nworthy forensic investigation framework for the internet of\nvehicles\
    \ (IoV),” in 2017 IEEE International Congress on Inter-\nnet of Things (ICIOT),,\
    \ pp. 25–32, Honolulu, HI, USA, 2017.\n[142] V. Sharma, I. You, K. Andersson,\
    \ F. Palmieri, M. H. Rehmani,\nand J. Lim, “Security, privacy and trust for smart\
    \ mobile-\ninternet of things (M-IoT): a survey,” IEEE Access, vol. 8,\npp. 167123–167163,\
    \ 2020.\n[143] X. Feng, E. S. Dawam, and S. Amin, “A new digital forensics\nmodel\
    \ of smart city automated vehicles,” in 2017 IEEE Interna-\ntional Conference\
    \ on Internet of Things (iThings) and IEEE\nGreen Computing and Communications\
    \ (GreenCom) and IEEE\nCyber, Physical and Social Computing (CPSCom) and IEEE\n\
    Smart Data (SmartData), pp. 274–279, Exeter, UK, 2017.\n[144] D. R. Clark, C.\
    \ Meﬀert, I. Baggili, and F. Breitinger, “DROP\n(DRone Open source Parser) your\
    \ drone: forensic analysis\nof the DJI Phantom III,” Digital Investigation, vol.\
    \ 22,\npp. S3–S14, 2017.\n[145] Y.-Y. Teing, A. Dehghantanha, K.-K. R. Choo, and\
    \ L. T.\nYang, “Forensic investigation of P2P cloud storage services\nand backbone\
    \ for IoT networks: BitTorrent Sync as a case\nstudy,”\nComputers\n&\nElectrical\n\
    Engineering,\nvol.\n58,\npp. 350–363, 2017.\n[146] V. Sharma, R. Kumar, and P.\
    \ Patiala, “Service-oriented mid-\ndleware for multi-UAV guided ad hoc networks,”\
    \ IT CoNver-\ngence PRActice (INPRA), vol. 2, pp. 24–33, 2014.\n[147] V. Sharma,\
    \ I. You, J. T. Seo, and M. Guizani, “Secure and reli-\nable resource allocation\
    \ and caching in aerial-terrestrial cloud\nnetworks (ATCNs),” IEEE Access, vol.\
    \ 7, pp. 13867–13881,\n2019.\n[148] T.\nHeckmann,\nK.\nMarkantonakis,\nD.\nNaccache,\n\
    and\nT. Souvignet, “Forensic smartphone analysis using adhesives:\ntransplantation\
    \ of package on package components,” Digital\nInvestigation, vol. 26, pp. 29–39,\
    \ 2018.\n[149] H. Abie, “Cognitive cybersecurity for CPS-IoT enabled\nhealthcare\
    \ ecosystems,” in 2019 13th International Sympo-\nsium on Medical Information\
    \ and Communication Technol-\nogy (ISMICT), pp. 1–6, Oslo, Norway, 2019.\n[150]\
    \ A. Cook, M. Robinson, M. A. Ferrag et al., “Internet of cloud:\nsecurity and\
    \ privacy issues,” in Cloud Computing for Optimi-\nzation: Foundations, Applications,\
    \ and Challenges, B. Mishra,\nH. Das, S. Dehuri, and A. Jagadev, Eds., vol. 39\
    \ of Studies in\nBig Data, pp. 271–301, Springer, Cham, 2018.\n[151] G. M. Insights,\
    \ Digital Health Market Share Trends 2019–\n2025 Growth Forecast Report, Global\
    \ Market Insights, Selby-\nville, 2019.\n[152] A. McIntyre, B. Blau, and M. Reitz,\
    \ Forecast: wearable elec-\ntronic devices, worldwide, Gartner, Stamford, CT,\
    \ USA, 2016.\n[153] S. Watson and A. Dehghantanha, “Digital forensics: the miss-\n\
    ing piece of the internet of things promise,” Computer Fraud\n& Security, vol.\
    \ 2016, pp. 5–8, 2016.\n[154] J. Boucher and N.-A. Le-Khac, “Forensic framework\
    \ to iden-\ntify local vs synced artefacts,” Digital Investigation, vol. 24,\n\
    pp. S68–S75, 2018.\n[155] A. Case and G. G. Richard III, “Memory forensics: the\
    \ path\nforward,” Digital Investigation, vol. 20, pp. 23–33, 2017.\n[156] D. Quick\
    \ and K.-K. R. Choo, “IoT device forensics and data\nreduction,” IEEE Access,\
    \ vol. 6, pp. 47566–47574, 2018.\n[157] A. Nieto, R. Roman, and J. Lopez, “Digital\
    \ witness: safeguard-\ning digital evidence by using secure architectures in personal\n\
    devices,” IEEE Network, vol. 30, pp. 34–41, 2016.\n[158] H. Chung, J. Park, and\
    \ S. Lee, “Digital forensic approaches for\nAmazon Alexa ecosystem,” Digital Investigation,\
    \ vol. 22,\npp. S15–S25, 2017.\n[159] M. M. Hossain, R. Hasan, and S. Zawoad,\
    \ “Probe-IoT: a pub-\nlic digital ledger based forensic investigation framework\
    \ for\nIoT,” in INFOCOM Workshops, pp. 1-2, Birmingham, USA,\n2018.\n[160] A.\
    \ Nieto, R. Rios, and J. Lopez, “A methodology for privacy-\naware IoT-forensics,”\
    \ in 2017 IEEE Trustcom/BigDataSE/I-\nCESS, pp. 626–633, Sydney, NSW, Australia,\
    \ 2017.\n[161] E. Oriwoh, D. Jazani, G. Epiphaniou, and P. Sant, “Internet of\n\
    things forensics: challenges and approaches,” in 9th IEEE\nInternational Conference\
    \ on Collaborative Computing: Net-\nworking, Applications and Worksharing, pp.\
    \ 608–615, Austin,\nTX, USA, 2013.\n[162] L. Perlepes, G. Stamoulis, and P. Kikiras,\
    \ An End-to-End\nFramework for Securing the Internet of Things, 2011.\n[163] S.\
    \ Perumal, N. M. Norwawi, and V. Raman, “Internet of\nthings (IoT) digital forensic\
    \ investigation model: top-down\nforensic approach methodology,” in 2015 Fifth\
    \ International\nConference on Digital Information Processing and Communi-\ncations\
    \ (ICDIPC), pp. 19–23, Sierre, Switzerland, 2015.\n[164] S. Zawoad and R. Hasan,\
    \ “Faiot: towards building a forensics\naware eco system for the internet of things,”\
    \ in 2015 IEEE\nInternational Conference on Services Computing, pp. 279–\n284,\
    \ New york, NY, USA, 2015.\n[165] D. Lillis, B. Becker, T. O'Sullivan, and M.\
    \ Scanlon, “Current\nchallenges and future research areas for digital forensic\
    \ inves-\ntigation,” 2016, https://arxiv.org/abs/1604.03850.\n[166] A. Bijalwan,\
    \ M. Wazid, E. S. Pilli, and R. C. Joshi, “Forensics\nof random-UDP ﬂooding attacks,”\
    \ Journal of Networks,\nvol. 10, p. 287, 2015.\n[167] V. Sharma, I. You, and G.\
    \ Kul, “Socializing drones for inter-\nservice operability in ultra-dense wireless\
    \ networks using\nblockchain,” in Proceedings of the 2017 International Work-\n\
    shop on Managing Insider Security Threats, pp. 81–84, Dallas\nTexas, USA, 2017.\n\
    [168] V. Arora, R. S. Leekha, K. Lee, and A. Kataria, “Facilitating\nuser authorization\
    \ from imbalanced data logs of credit cards\nusing artiﬁcial intelligence,” Mobile\
    \ Information Systems,\nvol. 2020, Article ID 8885269, 13 pages, 2020.\n[169]\
    \ T. G. Zewdie and A. Girma, “IOT security and the role of\nAI/ML to combat emerging\
    \ cyber threats in cloud computing\nenvironment,” Issues in Information Systems,\
    \ vol. 21, no. 4,\npp. 253–263, 2020.\n27\nWireless Communications and Mobile\
    \ Computing\n[170] V. Hassija, V. Chamola, V. Saxena, D. Jain, P. Goyal, and\n\
    B. Sikdar, “A survey on IoT security: application areas, secu-\nrity threats,\
    \ and solution architectures,” IEEE Access, vol. 7,\npp. 82721–82743, 2019.\n\
    [171] J. Pacheco, V. H. Benitez, and Z. Pan, “Security framework\nfor IoT end\
    \ nodes with neural networks,” International Jour-\nnal of Machine Learning and\
    \ Computing, vol. 9, pp. 381–386,\n2019.\n[172] E. Hodo, X. Bellekens, A. Hamilton\
    \ et al., “Threat analysis of\nIoT networks using artiﬁcial neural network intrusion\
    \ detec-\ntion system,” in 2016 International Symposium on Networks,\nComputers\
    \ and Communications (ISNCC), pp. 1–6, Yasmine\nHammamet, Tunisia, 2016.\n[173]\
    \ A. Mishra, N. Gupta, and B. Gupta, “Defense mechanisms\nagainst DDoS attack\
    \ based on entropy in SDN-cloud using\nPOX controller,” Telecommunication Systems,\
    \ pp. 1–16,\n2021.\n[174] A. Dahiya and B. B. Gupta, “A reputation score policy\
    \ and\nBayesian game theory based incentivized mechanism for\nDDoS attacks mitigation\
    \ and cyber defense,” Future Genera-\ntion Computer Systems, vol. 117, pp. 193–204,\
    \ 2021.\n[175] C. Esposito, M. Ficco, and B. B. Gupta, “Blockchain-based\nauthentication\
    \ and authorization for smart city applications,”\nInformation Processing & Management,\
    \ vol. 58, article\n102468, 2021.\n[176] B. Dickson, “How blockchain can change\
    \ the future of IoT,”\nVenture Beat, vol. 20, 2016.\n[177] V. Sharma, J. Kim,\
    \ S. Kwon, I. You, and F.-Y. Leu, “An over-\nview of 802.21a-2012 and its incorporation\
    \ into IoT-fog net-\nworks\nusing\nosmotic\nframework,”\nin\nInternational\nConference\
    \ on Internet of Things as a Service, pp. 64–72, Tai-\nchun, Taiwan, 2017.\n[178]\
    \ V. Sharma, I. You, F. Palmieri, D. N. K. Jayakody, and J. Li,\n“Secure and energy-eﬃcient\
    \ handover in fog networks using\nblockchain-based DMM,” IEEE Communications Magazine,\n\
    vol. 56, pp. 22–31, 2018.\n[179] V. Sharma, J. D. Lim, J. N. Kim, and I. You,\
    \ “SACA: self-\naware communication architecture for iot using mobile fog\nservers,”\
    \ Mobile Information Systems, vol. 2017, Article ID\n3273917, 17 pages, 2017.\n\
    [180] M. Alrowaily and Z. Lu, “Secure edge computing in IoT sys-\ntems: review\
    \ and case studies,” in 2018 IEEE/ACM Sympo-\nsium on Edge Computing (SEC), pp.\
    \ 440–444, Seattle, WA,\nUSA, 2018.\n[181] Y. Li and S. Wang, “An energy-aware\
    \ edge server placement\nalgorithm in mobile edge computing,” in 2018 IEEE Interna-\n\
    tional Conference on Edge Computing (EDGE), pp. 66–73, San\nFrancisco, CA, USA,\
    \ 2018.\n[182] E. Oyekanlu, C. Nelatury, A. O. Fatade, O. Alaba, and\nO. Abass,\
    \ “Edge computing for industrial IoT and the smart\ngrid: channel capacity for\
    \ M2M communication over the\npower line,” in 2017 IEEE 3rd International Conference\
    \ on\nElectro-Technology for National Development (NIGERCON),\npp. 1–11, Owerri,\
    \ Nigeria, 2017.\n[183] V. Sharma, I. You, D. N. K. Jayakody, D. G. Reina, and\
    \ K.-\nK. R. Choo, “Neural-blockchain-based ultrareliable caching\nfor edge-enabled\
    \ UAV networks,” IEEE Transactions on\nIndustrial Informatics, vol. 15, pp. 5723–5736,\
    \ 2019.\n[184] J. Gill, I. Okere, H. HaddadPajouh, and A. Dehghantanha,\n“Mobile\
    \ forensics: a bibliometric analysis,” in Cyber Threat\nIntelligence, A. Dehghantanha,\
    \ M. Conti, and T. Dargahi,\nEds., vol. 70 of Advances in Information Security,\
    \ pp. 297–\n310, Springer, Cham, 2018.\n[185] Y. Y. Teing, A. Dehghantanha, and\
    \ K. K. R. Choo, “CloudMe\nforensics: a case of big data forensic investigation,”\
    \ Concur-\nrency and Computation: Practice and Experience, vol. 30, arti-\ncle\
    \ e4277, 2018.\n[186] I. Yaqoob, E. Ahmed, I. A. T. Hashem et al., “Internet of\n\
    things architecture: recent advances, taxonomy, require-\nments, and open challenges,”\
    \ IEEE wireless communications,\nvol. 24, pp. 10–16, 2017.\n[187] Z. Li, V. Sharma,\
    \ and S. P. Mohanty, “Preserving data privacy\nvia federated learning: challenges\
    \ and solutions,” IEEE Con-\nsumer Electronics Magazine, vol. 9, pp. 8–16, 2020.\n\
    [188] A. Nieto, R. Rios, and J. Lopez, “IoT-forensics meets privacy:\ntowards\
    \ cooperative digital investigations,” Sensors, vol. 18,\np. 492, 2018.\n[189]\
    \ A. Nieto, R. Rios, and J. Lopez, “Digital witness and privacy in\nIoT: anonymous\
    \ witnessing approach,” in 2017 IEEE Trust-\ncom/BigDataSE/ICESS, pp. 642–649,\
    \ Sydney, NSW, 2017.\n[190] V. Sharma, J. Kim, S. Kwon, I. You, K. Lee, and K.\
    \ Yim, “A\nframework for mitigating zero-day attacks in IoT,” 2018,\nhttps://arxiv.org/abs/1804.05549.\n\
    [191] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram,\n“Blockchain for\
    \ IoT security and privacy: the case study of a\nsmart home,” in 2017 IEEE International\
    \ Conference on Per-\nvasive Computing and Communications Workshops (PerCom\n\
    Workshops), pp. 618–623, Kona, HI, USA, 2017.\n[192] V. Sharma, I. You, and N.\
    \ Guizani, “Security of 5G-V2X:\ntechnologies, standardization and research directions,”\
    \ IEEE\nNetwork, vol. 34, no. 5, pp. 306–314, 2020.\n[193] O. Gupta, S. Rani,\
    \ and D. C. Pant, “Impact of parallel com-\nputing on bioinformatics algorithms,”\
    \ in Proceedings 5th\nIEEE International Conference on Advanced Computing and\n\
    Communication Technologies, pp. 206–209, Rohtak, Hary-\nana, India, 2011.\n[194]\
    \ R. Alharbi and D. Aspinall, “An IoT analysis framework: an\ninvestigation of\
    \ IoT smart cameras' vulnerabilities,” in Living\nin the Internet of Things: Cybersecurity\
    \ of the IoT—2018, Lon-\ndon, UK, 2018.\n[195] M.\nA.\nZamora-Izquierdo,\nJ.\n\
    Santa,\nJ.\nA.\nMartínez,\nV. Martínez, and A. F. Skarmeta, “Smart farming IoT\
    \ plat-\nform based on edge and cloud computing,” Biosystems engi-\nneering, vol.\
    \ 177, pp. 4–17, 2019.\n[196] R. Singh, A. Gehlot, J. K. Khilrani, and M. Mittal,\
    \ “Internet of\nthings-triggered and power-eﬃcient smart pedometer algo-\nrithm\
    \ for intelligent wearable devices,” in Wearable and\nImplantable Medical Devices,\
    \ pp. 1–23, Elsevier, 2020.\n[197] M. Mittal, S. Tanwar, B. Agarwal, and L. M.\
    \ Goyal, Energy\nConservation for IoT Devices: Concepts, Paradigms and Solu-\n\
    tions, vol. 206, Springer, 2019.\n[198] M. Abdel-Basset, G. Manogaran, and M.\
    \ Mohamed, “Internet\nof things (IoT) and its impact on supply chain: a framework\n\
    for building smart, secure and eﬃcient systems,” Future Gen-\neration Computer\
    \ Systems, vol. 86, pp. 614–628, 2018.\n[199] F. Piccialli and A. Chianese, Editorial\
    \ for FGCS Special Issue:\nThe Internet of Cultural Things: Towards a Smart Cultural\n\
    Heritage, vol. 81, Elsevier, 2018.\n[200] P. Radanliev, D. C. de Roure, R. Nicolescu\
    \ et al., “Future\ndevelopments in cyber risk assessment for the internet of\n\
    things,” Computers in Industry, vol. 102, pp. 14–22, 2018.\n28\nWireless Communications\
    \ and Mobile Computing\n[201] N. H. N. Zulkipli, A. Alenezi, and G. B. Wills,\
    \ “IoT forensic:\nbridging the challenges in digital forensic and the internet\n\
    of things,” in Proceedings of the 2nd International Conference\non Internet of\
    \ Things, Big Data and Security, pp. 315–324,\nPorto, Portugal, 2017.\n[202] M.\
    \ Husamuddin and M. Qayyum, “Internet of things: a study\non security and privacy\
    \ threats,” in 2017 2nd International\nConference on Anti-Cyber Crimes (ICACC),\
    \ pp. 93–97, Abha,\n2017.\n[203] I. Lee and K. Lee, “The internet of things (IoT):\
    \ applications,\ninvestments, and challenges for enterprises,” Business Hori-\n\
    zons, vol. 58, pp. 431–440, 2015.\n[204] M. Babar, A. Rahman, F. Arif, and G.\
    \ Jeon, “Energy-harvest-\ning based on internet of things and big data analytics\
    \ for\nsmart health monitoring,” Sustainable Computing: Informat-\nics and Systems,\
    \ vol. 20, pp. 155–164, 2018.\n[205] J. Liu and W. Sun, “Smart attacks against\
    \ intelligent wear-\nables in people-centric internet of things,” IEEE Communica-\n\
    tions Magazine, vol. 54, pp. 44–49, 2016.\n[206] Y. Zhang, R. H. Deng, G. Han,\
    \ and D. Zheng, “Secure smart\nhealth with privacy-aware aggregate authentication\
    \ and\naccess control in internet of things,” Journal of Network and\nComputer\
    \ Applications, vol. 123, pp. 89–100, 2018.\n[207] S. Din and A. Paul, “Retracted:\
    \ Smart health monitoring and\nmanagement system: toward autonomous wearable sensing\n\
    for internet of things using big data analytics,” Future Gener-\nation Computer\
    \ Systems, vol. 91, pp. 611–619, 2019.\n[208] S. S. S. R. Depuru, L. Wang, V.\
    \ Devabhaktuni, and N. Gudi,\n“Smart meters for power grid—challenges, issues,\
    \ advantages\nand status,” in 2011 IEEE/PES Power Systems Conference and\nExposition,\
    \ pp. 1–7, Phoenix, AZ, USA, 2011.\n[209] A. C. Jose and R. Malekian, “Improving\
    \ smart home security:\nintegrating logical sensing into smart home,” IEEE Sensors\n\
    Journal, vol. 17, pp. 4269–4286, 2017.\n[210] H. Suo, J. Wan, C. Zou, and J. Liu,\
    \ “Security in the internet of\nthings: a review,” in 2012 International Conference\
    \ on Com-\nputer Science and Electronics Engineering, pp. 648–651,\nHangzhou,\
    \ China, 2012.\n[211] S. Vashi, J. Ram, J. Modi, S. Verma, and C. Prakash, “Internet\n\
    of things (IoT): a vision, architectural elements, and security\nissues,” in 2017\
    \ International Conference on I-SMAC (IoT in\nSocial, Mobile, Analytics and Cloud)\
    \ (I-SMAC), pp. 492–\n496, Palladam, India, 2017.\n[212] W. Zhang and B. Qu, “Security\
    \ architecture of the internet of\nthings oriented to perceptual layer,” International\
    \ Journal on\nComputer, Consumer and Control (IJ3C), vol. 2, pp. 37–45,\n2013.\n\
    [213] R. Kumar, H. Sharma, M. Mittal, and P. S. Rana, “Editorial.\nWireless sensor\
    \ network: design, architecture, application,\ndata communication security and\
    \ management,” Interna-\ntional Journal of Sensors Wireless Communications and\
    \ Con-\ntrol, vol. 7, pp. 169–169, 2017.\n[214] L. Li, S. Li, T. Tryfonas, and\
    \ H. Li, “The internet of things: a\nsecurity point of view,” Internet Research,\
    \ vol. 26, no. 2,\npp. 337–359, 2016.\n[215] T. Kothmayr, C. Schmitt, W. Hu, M.\
    \ Brünig, and G. Carle,\n“DTLS based security and two-way authentication for the\n\
    internet of things,” Ad Hoc Networks, vol. 11, pp. 2710–\n2723, 2013.\n[216] T.\
    \ G. Robertazzi, “Software-deﬁned networking,” in Intro-\nduction to Computer\
    \ Networking, pp. 81–87, Springer, 2017.\n[217] V. R. Kebande and I. Ray, “A generic\
    \ digital forensic investi-\ngation framework for internet of things (IoT),” in\
    \ 2016 IEEE\n4th International Conference on Future Internet of Things and\nCloud\
    \ (FiCloud), pp. 356–362, Vienna, Austria, 2016.\n[218] M. M. Losavio, K. Chow,\
    \ A. Koltay, and J. James, “The inter-\nnet of things and the smart city: legal\
    \ challenges with digital\nforensics, privacy, and security,” Security and Privacy,\n\
    vol. 1, article e23, 2018.\n[219] B. Cavallo, G. Di Crescenzo, D. Kahrobaei, and\
    \ V. Shpilrain,\n“Eﬃcient and secure delegation of group exponentiation to a\n\
    single server,” in International Workshop on Radio Frequency\nIdentiﬁcation: Security\
    \ and Privacy Issues, pp. 156–173, New\nyork, USA, 2015.\n[220] L. Li, R. Lu,\
    \ K.-K. R. Choo, A. Datta, and J. Shao, “Privacy-\npreserving-outsourced association\
    \ rule mining on vertically\npartitioned databases,” IEEE Transactions on Information\n\
    Forensics and Security, vol. 11, pp. 1847–1861, 2016.\n[221] A. Alrawais, A. Alhothaily,\
    \ C. Hu, X. Xing, and X. Cheng,\n“An attribute-based encryption scheme to secure\
    \ fog com-\nmunications,” IEEE access, vol. 5, pp. 9131–9138, 2017.\n[222] J.\
    \ Zhang, Q. Li, X. Wang, B. Feng, and D. Guo, “Towards fast\nand lightweight spam\
    \ account detection in mobile social net-\nworks through fog computing,” Peer-to-Peer\
    \ Networking and\nApplications, vol. 11, pp. 778–792, 2018.\n[223] M. Agrawal\
    \ and P. Mishra, “A comparative survey on sym-\nmetric key encryption techniques,”\
    \ International Journal on\nComputer Science and Engineering, vol. 4, p. 877,\
    \ 2012.\n[224] D. J. Wu, A. Taly, A. Shankar, and D. Boneh, “Privacy, dis-\ncovery,\
    \ and authentication for the internet of things,” in\nComputer Security—ESORICS\n\
    2016. ESORICS\n2016,\nI.\nAskoxylakis, S. Ioannidis, S. Katsikas, and C. Meadows,\n\
    Eds., vol. 9879 of Lecture Notes in Computer Science,\npp. 301–319, Springer,\
    \ Cham, 2016.\n[225] X. Liang, X. Lin, and X. S. Shen, “Enabling trustworthy ser-\n\
    vice evaluation in service-oriented mobile social networks,”\nIEEE Transactions\
    \ on Parallel and Distributed Systems,\nvol. 25, pp. 310–320, 2013.\n[226] J.\
    \ Ni, K. Zhang, K. Alharbi, X. Lin, N. Zhang, and X. S. Shen,\n“Diﬀerentially\
    \ private smart metering with fault tolerance\nand range-based ﬁltering,” IEEE\
    \ Transactions on Smart Grid,\nvol. 8, pp. 2483–2493, 2017.\n[227] S. Salonikias,\
    \ I. Mavridis, and D. Gritzalis, “Access control\nissues in utilizing fog computing\
    \ for transport infra-\nstructure,” in International Conference on Critical Informa-\n\
    tion Infrastructures Security, pp. 15–26, Berlin, Germany,\n2015.\n[228] S. Chandrasekhar\
    \ and M. Singhal, “Eﬃcient and scalable\nquery authentication for cloud-based\
    \ storage systems with\nmultiple data sources,” IEEE Transactions on Services\
    \ com-\nputing, vol. 10, pp. 520–533, 2015.\n[229] X. Yang, F. Yin, and X. Tang,\
    \ “A ﬁne-grained and privacy-\npreserving query scheme for fog computing-enhanced\n\
    location-based service,” Sensors, vol. 17, p. 1611, 2017.\n[230] G. Zhuo, Q. Jia,\
    \ L. Guo, M. Li, and P. Li, “Privacy-preserving\nveriﬁable data aggregation and\
    \ analysis for cloud-assisted\nmobile crowdsourcing,” in IEEE INFOCOM 2016—The\n\
    35th Annual IEEE International Conference on Computer\nCommunications, pp. 1–9,\
    \ San Francisco, CA, USA, 2016.\n[231] IC3, 2020, March 2021, https://www.ic3.gov/.\n\
    [232] M. A. Iqbal, O. G. Olaleye, and M. A. Bayoumi, “A review on\ninternet of\
    \ things (IoT): security and privacy requirements\n29\nWireless Communications\
    \ and Mobile Computing\nand the solution approaches,” Global Journal of Computer\n\
    Science and Technology, vol. 16, no. 7-E, 2017.\n[233] A. Fathy, I. F. Tarrad,\
    \ H. F. Hamed, and A. I. Awad,\n“Advanced encryption standard algorithm: issues\
    \ and imple-\nmentation aspects,” in International Conference on Advanced\nMachine\
    \ Learning Technologies and Applications, pp. 516–\n523, Cairo, Egypt, 2012.\n\
    [234] Z. Wan, Z. Xu, S. Liu, W. Ni, and S. Ye, “An internet of things\nroaming\
    \ authentication protocol based on heterogeneous\nfusion mechanism,” IEEE Access,\
    \ vol. 8, pp. 17663–17672,\n2020.\n[235] F. Monsen and K. Glisson, Diﬀerencing\
    \ Engine for Digital\nForensics, 2020, Google Patents.\n[236] J. D. McEachron,\
    \ Forensic Investigation Tool, 2019, Google\nPatents.\n[237] M. Morimoto, Y. Shirai,\
    \ and H. Takeda, Forensic System,\nForensic Method, and Forensic Program, 2016,\
    \ Google\nPatents.\n[238] K. SeongKu, J. Mincheol, C. Youngjun, J. Choi, K. SinKyu,\n\
    and S. Jungtaek, Device and Method for Providing Security\nin Remote Digital Forensic\
    \ Environment, 2017, Google\nPatents.\n[239] Y. H. Choi, T. G. Kim, H. G. Oh,\
    \ and D. H. Lee, Method and\nApparatus for Digital Forensics, 2012, Google Patents.\n\
    [240] M. M. Shannon and M. J. Decker, Systems and Methods for\nProvisioning Digital\
    \ Forensics Services Remotely over Public\nand Private Networks, 2015, Google\
    \ Patents.\n[241] W. J. Buchanan, J. R. Graves, and N. Bose, Digital Forensics,\n\
    2014, Google Patents.\n[242] Y. H. Gil, J. Y. Lee, S. H. Jo, Y. S. Kim, K. W.\
    \ Kim, S. S. Lee\net al., Method for Data Analysis and Digital Forensics and Sys-\n\
    tem Using the Same, 2014, Google Patents.\n[243] K. L. Levy, Forensic Digital\
    \ Watermarking with Variable Ori-\nentation and Protocols, 2008, Google Patents.\n\
    [244] T. L. Carpenter and W. J. Westerinen, “Secure digital foren-\nsics,” 2011,\
    \ Google Patents.\n[245] P. K. Sharma, M.-Y. Chen, and J. H. Park, “A software\
    \ deﬁned\nfog node based distributed blockchain cloud architecture for\nIoT,”\
    \ Ieee Access, vol. 6, pp. 115–124, 2017.\n[246] Y. Yu, Y. Li, J. Tian, and J.\
    \ Liu, “Blockchain-based solutions to\nsecurity and privacy issues in the internet\
    \ of things,” IEEE\nWireless Communications, vol. 25, pp. 12–18, 2018.\n[247]\
    \ U. Javaid, M. N. Aman, and B. Sikdar, “DrivMan: driving\ntrust management and\
    \ data sharing in VANETS with block-\nchain and smart contracts,” in 2019 IEEE\
    \ 89th Vehicular\nTechnology Conference (VTC2019-Spring), pp. 1–5, Kuala\nLumpur,\
    \ Malaysia, 2019.\n[248] K. R. Ozyilmaz and A. Yurdakul, “Designing a blockchain-\n\
    based IoT with Ethereum, swarm, and LoRa: the software\nsolution to create high\
    \ availability with minimal security\nrisks,” IEEE Consumer Electronics Magazine,\
    \ vol. 8, pp. 28–\n34, 2019.\n[249] V. Sharma, “An energy-eﬃcient transaction\
    \ model for the\nblockchain-enabled internet of vehicles (IoV),” IEEE Com-\nmunications\
    \ Letters, vol. 23, pp. 246–249, 2018.\n[250] K. Valtanen, J. Backman, and S.\
    \ Yrjölä, “Blockchain-powered\nvalue creation in the 5G and smart grid use cases,”\
    \ IEEE\nAccess, vol. 7, pp. 25690–25707, 2019.\n[251] U. Javaid, A. K. Siang,\
    \ M. N. Aman, and B. Sikdar, “Mitigat-\ning IoT device based DDoS attacks using\
    \ blockchain,” in Pro-\nceedings of the 1st Workshop on Cryptocurrencies and\n\
    Blockchains for Distributed Systems, pp. 71–76, Munich, Ger-\nmany, 2018.\n[252]\
    \ O. Novo, “Blockchain meets IoT: an architecture for scalable\naccess management\
    \ in IoT,” IEEE Internet of Things Journal,\nvol. 5, pp. 1184–1195, 2018.\n[253]\
    \ P. Lv, L. Wang, H. Zhu, W. Deng, and L. Gu, “An IoT-\noriented privacy-preserving\
    \ publish/subscribe model over\nblockchains,” IEEE Access, vol. 7, pp. 41309–41314,\
    \ 2019.\n[254] U. Javaid, M. N. Aman, and B. Sikdar, “Blockpro: blockchain\nbased\
    \ data provenance and integrity for secure iot environ-\nments,” in Proceedings\
    \ of the 1st Workshop on Blockchain-\nEnabled Networked Sensor Systems, pp. 13–18,\
    \ Shenzhen,\nChina, 2018.\n30\nWireless Communications and Mobile Computing\n"
  inline_citation: '>'
  journal: Wireless communications and mobile computing (Print)
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/wcmc/2021/5579148.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Threats and Corrective Measures for IoT Security with Observance of Cybercrime:
    A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s23052403
  analysis: '>'
  authors:
  - William David Paredes
  - Hemani Kaushal
  - Iman Vakilinia
  - Zornitza Genova Prodanoff
  citation_count: 8
  full_citation: '>'
  full_text: ">\nCitation: Paredes, W.D.; Kaushal, H.;\nVakilinia, I.; Prodanoff,\
    \ Z. LoRa\nTechnology in Flying Ad Hoc\nNetworks: A Survey of Challenges\nand\
    \ Open Issues. Sensors 2023, 23,\n2403. https://doi.org/10.3390/\ns23052403\n\
    Academic Editor: Carles Gomez\nReceived: 19 January 2023\nRevised: 13 February\
    \ 2023\nAccepted: 18 February 2023\nPublished: 21 February 2023\nCopyright:\n\
    © 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an\
    \ open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the\
    \ Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nLoRa Technology in Flying Ad Hoc Networks: A Survey of\n\
    Challenges and Open Issues\nWilliam David Paredes 1,*\n, Hemani Kaushal 1,*, Iman\
    \ Vakilinia 2\nand Zornitza Prodanoff 2\n1\nSchool of Engineering, College of\
    \ Computing, Engineering and Construction, University of North Florida,\nJacksonville,\
    \ FL 32224, USA\n2\nSchool of Computing, College of Computing, Engineering and\
    \ Construction, University of North Florida,\nJacksonville, FL 32224, USA\n*\n\
    Correspondence: n01505218@unf.edu (W.D.P.); hemani.kaushal@unf.edu (H.K.)\nAbstract:\
    \ The Internet of Things (IoT) and Flying Ad Hoc Networks (FANETs) have become\
    \ hot\ntopics among researchers because of the increased availability of Unmanned\
    \ Aerial Vehicles (UAVs)\nand the electronic components required to control and\
    \ connect them (e.g., microcontrollers, single\nboard computers, and radios).\
    \ LoRa is a wireless technology, intended for the IoT, that requires\nlow power\
    \ and provides long-range communications, which can be useful for ground and aerial\n\
    applications. This paper explores the role that LoRa plays in FANET design by\
    \ presenting a technical\noverview of both, and by performing a systematic literature\
    \ review based on a breakdown of the\ncommunications, mobility and energy topics\
    \ involved in a FANET implementation. Furthermore,\nopen issues in protocol design\
    \ are discussed, as well as other challenges associated with the use of\nLoRa\
    \ in the deployment of FANETs.\nKeywords: Internet of Things (IoT); Flying Ad\
    \ Hoc Networks (FANETs); Low Power Wide Area\nNetworks (LPWANs); Wireless Sensor\
    \ Networks (WSNs); mobility models; energy efﬁciency\n1. Introduction\nDue to\
    \ what has been called the “wireless revolution” [1,2], the last couple of decades\n\
    has seen an expansion in the number of connected devices aimed at making our lives\
    \ easier\nat home and at work, as is the case with body sensors, light dimmers,\
    \ vacuum cleaners,\nthermostats, refrigerators, autonomous vehicles, and many\
    \ more items. Various sources\nclaim that the number of connected devices has\
    \ largely surpassed the number of connected\npeople, establishing its potential\
    \ magnitude in the order of tens of billions [3–5]. These\nconnected devices need\
    \ the means to communicate with each other as well as with the user,\nand this\
    \ is frequently referred to as the Internet of Things (IoT). More formally, the\
    \ IoT is the\ncollection of objects that are equipped with sensors and actuators\
    \ and are interconnected\nthrough a private or public network—generally the Internet\
    \ in the latter scenario. The rise\nof the IoT, as is the case with many technological\
    \ innovations, has been driven by the desire\nto improve quality of life in a\
    \ cost-efﬁcient manner [3].\nWhile human communications often demand considerable\
    \ bandwidth (e.g., on-demand\nvideo streaming and ﬁle sharing) and have little\
    \ tolerance for delay (e.g., voice calls\nand videoconference), communications\
    \ between objects have different characteristics, at\nleast for the time being.\
    \ IoT communications usually involve low data rates, where a\nrelaxation of bandwidth\
    \ constraints usually results in lower power consumption and a\nlonger communication\
    \ range, considering that these devices might be placed at isolated\nlocations\
    \ with no access to a power grid or Wide Area Networks (WANs) such as those\n\
    available through internet service providers, mobile carriers, or proprietary\
    \ deployments.\nIn a natural step in the development of wireless technologies,\
    \ ad hoc networks were\nconceived as a way of connecting nodes when no centralized\
    \ infrastructure is available,\nand the concept of mobility was immediately tied\
    \ to this type of network [6]. Mobile Ad\nSensors 2023, 23, 2403. https://doi.org/10.3390/s23052403\n\
    https://www.mdpi.com/journal/sensors\nSensors 2023, 23, 2403\n2 of 25\nHoc Networks\
    \ (MANETs) have been used for military applications for many years [7].\nAs they\
    \ increasingly connect more and more objects across the globe, MANETs have\nbecome\
    \ one of the fundamental network paradigms in IoT. Moreover, the recent surge\
    \ in\nthe availability of consumer drones (also known as Unmanned Aerial Vehicles,\
    \ or UAVs;\nterms used interchangeably hereafter), has given rise to the concept\
    \ of Flying Ad Hoc\nNetworks (FANETs).\n1.1. Motivation\nWhile existing wireless\
    \ technologies—such as cellular and Wi-Fi—have been adapted\nfor the IoT [8,9],\
    \ Low Power Wide Area Networks (LPWANs) have been developed speciﬁ-\ncally as\
    \ one of the IoT’s enabling technologies for long-range applications [10–13].\
    \ LoRa is\na PHY-layer LPWAN technology that provides long-range communication\
    \ at low data rates.\nDue to its scalability, low power consumption, and ease\
    \ of deployment, LoRa technology\nhas gained a lot of attention from researchers\
    \ recently. Its attributes make it suitable for\nIoT applications, particularly\
    \ when used as part of LoRaWAN—a protocol used to create\na star topology network\
    \ using LoRa technology. However, when it comes to MANETs\nand FANETs, LoRaWAN\
    \ presents some limitations regarding its star topology, its medium\naccess control\
    \ (MAC) layer and its lack of routing procedures [14].\nSome work has been done\
    \ to assess the performance of LoRa without the con-\nstraints of LoRaWAN, for\
    \ static and ground-mobile ad hoc mesh networks in typical\nIoT scenarios [15–23].\
    \ However, there is little research activity on FANETs using LoRa tech-\nnology.\
    \ Therefore, a systematic review is needed to determine the technological maturity\n\
    of FANETs using LoRa and to understand the requirements for the MAC protocols\
    \ and\nrouting mechanisms associated with such implementation. Moreover, FANETs\
    \ have partic-\nular mobility characteristics when compared to a usual MANET;\
    \ thus, a review of mobility\nmodels and optimal placement algorithms is also\
    \ required for this kind of network.\n1.2. Methodology\nA systematic literature\
    \ review was conducted aiming at ﬁnding the most common\nor, if possible, more\
    \ appropriate MAC protocols and routing mechanisms used for the\ndeployment of\
    \ LoRa-based FANETs. Furthermore, the review also aims at identifying the\nmobility\
    \ or optimal positioning models that have been used, and the role LoRa plays in\n\
    these works.\n1.2.1. Search Strategy\nThe search was performed using the Google\
    \ Scholar search engine and the follow-\ning digital libraries: IEEE Xplore, Multidisciplinary\
    \ Digital Publishing Institute (MDPI),\nScienceDirect, and the Association for\
    \ Computing Machinery (ACM). The keywords and\nsearch expressions used are shown\
    \ in Table 1.\nThe search was restricted to the English language, and ﬁlters for\
    \ publication year\nwere applied to limit the search results to the last ﬁve years\
    \ (2017–2022), for two reasons:\nFirst, LoRaWAN v1.0 was released in 2015, bringing\
    \ attention from various researchers and\nindustry; therefore, a multitude of\
    \ research and publication of articles on related topics has\noccurred from 2017\
    \ onwards. Second, the goal was to review the most recent literature in\nthis\
    \ ﬁeld.\n1.2.2. Inclusion and Exclusion Criteria\nIn order to limit the included\
    \ articles to a more manageable number, they were\narranged by relevance, and\
    \ only the most relevant per search expression were selected\nfrom each source\
    \ library after screening titles and abstracts, with a limit of three when\navailable.\
    \ After a more thorough review of the retrieved articles, additional publications\n\
    were included from their references when identiﬁed as relevant.\nSensors 2023,\
    \ 23, 2403\n3 of 25\nTable 1. Keywords and search expressions.\nNo.\nKeywords\n\
    1.\n“LoRa” AND “FANET”\n2.\n“FANET” AND “Communications”\n3.\n“FANET” AND “Mobility”\n\
    4.\n“FANET” AND “Energy”\n5.\n“LoRa” AND “UAV” AND “Communications”\n6.\n“LoRa”\
    \ AND “UAV” AND “Architecture”\n7.\n“LoRa” AND “UAV” AND (“Medium Access Control”\
    \ OR “MAC” OR “Mesh”)\n8.\n“LoRa” AND “UAV” AND “Routing”\n9.\n“LoRa” AND “UAV”\
    \ AND “Mobility”\n10.\n“LoRa” AND “UAV” AND “Energy”\n1.3. Scope\nNumerous studies\
    \ have been carried out using LoRa or LoRaWAN with UAVs, but\nnot many have covered\
    \ the complete spectrum of topics involved in the deployment of\nFANETs. The identiﬁed\
    \ problems involved in a FANET implementation are related to\ncommunications,\
    \ mobility, and energy constraints, and are listed in Table 2.\nTable 2. Challenges\
    \ involved in a FANET implementation.\nChallenge\nTopic\nCommunications\n•\nArchitecture\n\
    •\nPHY layer technology\n•\nMedium access control\n•\nRouting\nMobility\n•\nMobility\
    \ objectives\n•\nMobility models\nEnergy\n•\nEnergy consumption reduction\n•\n\
    Energy harvesting\nThe speciﬁed problems are inherent to FANETs, regardless of\
    \ the purpose that LoRa\nserves in the network, whether it is as a backhaul network,\
    \ access network, or both. It is\nimportant to identify how these topics are addressed\
    \ when LoRa is used in the context\nof FANETs.\nThe contributions of this paper\
    \ are listed as follows:\n•\nProviding a breakdown and discussion of the research\
    \ challenges involved in the\nimplementation of FANETs.\n•\nExploring the state\
    \ of the art of using LoRa technology in FANETs.\n•\nIdentifying the mobility\
    \ models, MAC protocols, and routing techniques that are\ncommonly used for the\
    \ implementation of FANETs using LoRa technology.\nThe remainder of the paper\
    \ is organized as follows: Section 2 presents an overview of\nLoRa and FANETs.\
    \ Section 3 covers the critical review of the literature in the context of\ncommunications,\
    \ mobility, and energy constraints. A discussion of the ﬁndings and open\nissues\
    \ is contained in Section 4. Finally, the concluding remarks are stated in Section\
    \ 5.\n2. Overview of LoRa and FANETs\nThe radio access network for IoT devices\
    \ has particular requirements: scalability, low\ncost, long-range coverage, and\
    \ low power consumption. Many competing technologies\nSensors 2023, 23, 2403\n\
    4 of 25\nintend to provide radio network access for the IoT. There are also several\
    \ LPWAN technolo-\ngies, such as Ingenu, Weightless (W, N and P), Sigfox, and\
    \ LoRaWAN [10,12]. Out of all\nof these, LoRaWAN is one of the most adopted, because\
    \ of its relative simplicity and low\ncost [10,24].\nAmong cellular solutions\
    \ for IoT access networks, we can count the Third Generation\nPartnership Project\
    \ (3GPP) standards as EC-GSM-IoT, Narrow Band IoT (NB-IoT), enhanced\nMachine-Type\
    \ Communications (eMTC) [25], and Massive Machine-Type Communications\n(mMTC),\
    \ which is the current IoT speciﬁcation in 5G (Releases 16 and 17) [26]. These\n\
    speciﬁcations have managed to reduce costs and energy consumption but have not\
    \ been\nable to reach the adoption levels of other LPWAN technologies [10,13].\n\
    The same features that make LoRa suitable for IoT access networks also make it\n\
    appealing for its use in FANET communications, which are of mesh topology in nature.\n\
    Battery constraints limit the ﬂight time of UAVs; thus, a communication mechanism\
    \ that\nrequires less energy is convenient. Also, one of FANETs potential applications\
    \ derives\nfrom situations where conventional communications infrastructure might\
    \ be unavailable,\nin which case long-range capabilities are desirable. In this\
    \ scenario, exploiting LoRa,\nin combination with medium access control and routing\
    \ mechanisms, is more adequate\nthan using LoRaWAN, which has a star topology.\
    \ A technical background on LoRa and\nLoRaWAN is presented in Section 2.1, while\
    \ a description of FANET characteristics is\npresented in Section 2.2.\n2.1. LoRa\
    \ and LoRaWAN\nOften, LoRa and LoRaWAN are mentioned interchangeably; however,\
    \ though comple-\nmentary, they are two different things. LoRa is a PHY layer\
    \ proprietary technology owned\nby Semtech [27], while LoRaWAN is an open network\
    \ protocol speciﬁcation—promoted by\nthe LoRa Alliance—that uses LoRa as its physical\
    \ layer but includes MAC and application\nlayers [27,28].\n2.1.1. LoRa\nLoRa uses\
    \ a form of spread spectrum modulation called Chirp Spread Spectrum (CSS)\nto\
    \ achieve low-power communications in the range of kilometers [13,29,30] at the\
    \ expense of\ndata rate. In this modulation technique, symbols are made of chirps.\
    \ Chirps are sinusoidal\nsignals whose frequency increases or decreases continuously\
    \ within a certain range and\nat a certain rate [31]. The modulation parameters\
    \ are described next and summarized in\nTable 3.\nA.\nFrequency\nLoRa was conceived\
    \ to transmit over unlicensed spectrum in industrial, scientiﬁc,\nand medical\
    \ (ISM) bands. It currently operates in the 169 MHz, 433 MHz, 470 MHz,\n490 MHz,\
    \ 780 MHz, 868 MHz, 915 MHz, and 2.4 GHz bands [32], subject to national and\n\
    regional regulations.\nB.\nBandwidth (BW)\nBandwidth is the frequency range over\
    \ which the chirps vary. It can take any of\nten values ranging from 7.8 kHz to\
    \ 1625 kHz, depending on the chipset and frequency\nband [33–37].\nC.\nSpreading\
    \ Factor (SF)\nThe spreading factor represents the rate at which the frequency\
    \ varies over the band-\nwidth. In other words, it deﬁnes the chirp (symbol) duration.\
    \ The SF currently ranges\nfrom 5 to 12 [35–37], and the relationship between\
    \ the SF value and the symbol duration is\ndeﬁned as follows:\nTs =\n2SF\nBW[Hz][s],\n\
    (1)\nSensors 2023, 23, 2403\n5 of 25\nwhere TS is the symbol duration. Reciprocally,\
    \ the symbol rate can be deﬁned as:\nRs = BW[Hz]\n2SF\n[symbols/s].\n(2)\nAccording\
    \ to the LoRa design, the SF also represents the number of modulated bits\nper\
    \ symbol, through which we can obtain the modulated bit rate:\nRm = SF × RS =\
    \ SF × BW[Hz]\n2SF\n[bits/s].\n(3)\nConsidering that each symbol has the same\
    \ duration, this tells us that the symbols are\ndeﬁned by the starting frequency\
    \ of the chirp.\nD.\nCoding Rate (CR)\nLoRa implements forward error correction\
    \ (FEC) by adding redundancy bits to every\nfour bits of data. The number of redundancy\
    \ bits is given by CR and can go from one to\nfour. Thus, ref. [31] deﬁnes the\
    \ rate code as:\nRate Code =\n4\n4 + CR.\n(4)\nThe data bit rate is the product\
    \ of the modulated bit rate and the rate code, as follows:\nRb = Rm × RateCode\
    \ = SF × BW[Hz]\n2SF\n×\n4\n4 + CR[bits/s].\n(5)\nE.\nTransmission Power\nThe\
    \ transmission power can reach up to 22 dBm, depending on the chipset selection\n\
    and power ampliﬁer conﬁguration [33–37].\nTwo of the key parameters behind LoRa\
    \ modulation are SF and BW. The relationship\nbetween these two factors deﬁnes\
    \ the signal’s data rate, range, and time on air. The higher\nthe SF, the lower\
    \ the transmission rate and the longer the range. Conversely, the lower the\n\
    SF, the higher the transmission rate and the shorter the range.\n2.1.2. LoRaWAN\n\
    LoRaWAN is an open network speciﬁcation built on top of LoRa and developed to\
    \ be\nused by battery-powered sensors that send data over long distances at low\
    \ data rates [27].\nIt deﬁnes the system architecture of the network and its communication\
    \ protocol.\nA.\nArchitecture\nLoRaWAN deﬁnes a hierarchical network architecture\
    \ with the following elements:\n•\nEnd devices: Also called nodes; they are usually\
    \ sensors, actuators, or both, equipped\nwith LoRa transceivers that connect to\
    \ one or more gateways in a single hop.\n•\nGateways: They connect the LoRa access\
    \ network to any standard IP backhaul network\nto relay data between the end nodes\
    \ and the network server.\n•\nNetwork server: It is in charge of routing the data\
    \ between the end device and the\nappropriate application server. It also handles\
    \ network layer security by using AES-128\nencryption to authenticate end devices.\n\
    •\nApplication server: It manages the application to which the end device data\
    \ is aimed.\nIt processes the data, presents it to the user, and replies to the\
    \ end device, if necessary.\nIt also handles application layer security by using\
    \ AES-128 encryption to keep the end\nuser’s application data conﬁdential to the\
    \ network operator.\nThese network elements typically connect in a star-of-stars\
    \ topology as shown in\nFigure 1.\nSensors 2023, 23, 2403\n6 of 25\nTable 3. Summary\
    \ of LoRa modulation parameters.\nParameter\nMagnitude/Range\nChip\nReference\n\
    Frequency\n137–175 MHz\nSX1276/77/78/79\n[33]\n410–525 MHz\nSX1276/77/78/79\n\
    [33]\n862–1020 MHz\nSX1276/77/79\n[33]\n860–1020 MHz\nSX1272/73\n[34]\n410–810\
    \ MHz\nSX1268\n[35]\n150–960 MHz\nSX1261/2\n[36]\n2.4 GHz\nSX1280/SX1281\n[37]\n\
    Bandwidth (BW)\n7.8 kHz\nSX1276/77/78/79, SX1268, SX1261/2\n[33,35,36]\n10.4 kHz\n\
    SX1276/77/78/79, SX1268, SX1261/2\n[33,35,36]\n15.6 kHz\nSX1276/77/78/79, SX1268,\
    \ SX1261/2\n[33,35,36]\n20.8 kHz\nSX1276/77/78/79, SX1268, SX1261/2\n[33,35,36]\n\
    31.2 kHz\nSX1276/77/78/79, SX1268, SX1261/2\n[33,35,36]\n41.7 kHz\nSX1276/77/78/79,\
    \ SX1268, SX1261/2\n[33,35,36]\n62.5 kHz\nSX1276/77/78/79, SX1268, SX1261/2\n\
    [33,35,36]\n125 kHz\nSX1276/77/78/79, SX1272/73, SX1268, SX1261/2\n[33–36]\n250\
    \ kHz\nSX1276/77/78/79, SX1272/73, SX1268, SX1261/2\n[33–36]\n500 kHz\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2\n[33–36]\n203 kHz\nSX1280/SX1281\n[37]\n406 kHz\n\
    SX1280/SX1281\n[37]\n812 kHz\nSX1280/SX1281\n[37]\n1625 kHz\nSX1280/SX1281\n[37]\n\
    Spreading Factor (SF)\n5\nSX1268, SX1261/2, SX1280/SX1281\n[35–37]\n6–9\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2, SX1280/SX1281\n[33–37]\n10–12\nSX1276/78/79, SX1272,\
    \ SX1268, SX1261/2, SX1280/SX1281\n[33–37]\nCoding Rate (CR)\n1 (4/5)\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2, SX1280/SX1281\n[33–37]\n2 (4/6)\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2, SX1280/SX1281\n[33–37]\n3 (4/7)\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2, SX1280/SX1281\n[33–37]\n4 (4/8)\nSX1276/77/78/79,\
    \ SX1272/73, SX1268, SX1261/2, SX1280/SX1281\n[33–37]\nTransmission Power\n−4\
    \ to 20 dBm\nSX1276/77/78/79\n[33]\n−1 to 20 dBm\nSX1272/73\n[34]\n−17 to 22 dBm\n\
    SX1268\n[35]\n−17 to 22 dBm\nSX1261/2\n[36]\n−18 to 12.5 dBm\nSX1280/SX1281\n\
    [37]\nB.\nCommunications\nAs mentioned before, the LoRaWAN speciﬁcation establishes\
    \ the use of LoRa at its\nphysical layer [27]. Additionally, LoRaWAN describes\
    \ MAC and application layers whose\nimplementation depends to some extent on the\
    \ end device’s class, which can be one of\nthree classes as explained below:\n\
    •\nClass A: The end devices of this class are half-duplex transceivers that implement\
    \ pure\nALOHA for their uplink transmissions, meaning that they transmit when\
    \ they need to\ndo it, but only after a small random time has elapsed. The receiver\
    \ remains off, except\nSensors 2023, 23, 2403\n7 of 25\nfor two receive windows\
    \ that open after an uplink transmission. This is the class with\nthe lowest energy\
    \ consumption, and all LoRaWAN end devices must implement it.\n•\nClass B: This\
    \ class is meant for applications in which the end device needs to download\n\
    more trafﬁc than Class A devices. End devices of this class employ all functionalities\
    \ of\nClass A, but open additional reception windows (also called ping slots)\
    \ in a scheduled\nmanner. For these reception windows to work, synchronization\
    \ is required, which is\nachieved by the gateway sending periodic beacons to all\
    \ end nodes.\n•\nClass C: End devices of this class listen continuously except\
    \ when they are transmitting.\nAs this is the class with the most energy consumption,\
    \ it is meant for applications that\nare less power-constrained. End devices of\
    \ this class also implement all functionalities\nof Class A but must not enable\
    \ Class B concurrently.\nREVIEW \n7 of 26 \n \nFigure 1. LoRaWAN architecture.\
    \ \nB. Communications \nAs mentioned before, the LoRaWAN specification establishes\
    \ the use of LoRa at its \nphysical layer [27]. Additionally, LoRaWAN describes\
    \ MAC and application layers whose \nimplementation depends to some extent on\
    \ the end device’s class, which can be one of \nthree classes as explained below:\
    \ \n• \nClass A: The end devices of this class are half-duplex transceivers that\
    \ implement \npure ALOHA for their uplink transmissions, meaning that they transmit\
    \ when they \nneed to do it, but only after a small random time has elapsed. The\
    \ receiver remains \noff, except for two receive windows that open after an uplink\
    \ transmission. This is \nthe class with the lowest energy consumption, and all\
    \ LoRaWAN end devices must \nimplement it. \n• \nClass B: This class is meant\
    \ for applications in which the end device needs to down-\nl\nd\nffi\nh\nCl\n\
    A d\ni\nE d d\ni\nf hi\nl\nl\nll f\ni\nFigure 1. LoRaWAN architecture.\nThe LoRaWAN\
    \ speciﬁcation also deﬁnes MAC frame formats. As with any protocol\ndata unit,\
    \ frame formats are intended to allow communication between peer elements in a\n\
    layered network, for which they separate the protocol control information (overhead)\
    \ from\nthe payload, in a standardized way. The LoRaWAN frame, which is the payload\
    \ for the\nLoRa physical layer, has three ﬁelds as shown in Figure 2. The ﬁrst\
    \ ﬁeld is the MAC header\n(MHDR), which is 1 byte long and speciﬁes the type of\
    \ frame. The second ﬁeld is the MAC\nPayload, whose length can range from 7 to\
    \ M bytes, where the maximum size of M can\nreach up to 250 bytes and is calculated\
    \ based on the maximum allowed LoRa transmission\ntime [38]. Finally, the frame\
    \ closes with a 4-byte message integrity code (MIC), which is\ncalculated over\
    \ all the ﬁelds in the frame.\nRegarding control information, a series of MAC\
    \ commands are used to exchange\ncontrol information exclusively between the network\
    \ server and the end devices. As all end\ndevices join the network in Class A\
    \ mode, Class B and Class C devices must implement all\nClass A MAC commands.\n\
    Sensors 2023, 23, 2403\n8 of 25\nSensors 2023, 23, x FOR PEER REVIEW \n8 of 26\
    \ \n \n \n \nFigure 2. LoRaWAN frame. \nRegarding control information, a series\
    \ of MAC commands are used to exchange \ncontrol information exclusively between\
    \ the network server and the end devices. As all \nend devices join the network\
    \ in Class A mode, Class B and Class C devices must imple-\nment all Class A MAC\
    \ commands. \nTo be part of a LoRaWAN network, every end device must first be\
    \ activated follow-\ning one of the next two methods: \n• \nActivation by Personalization:\
    \ The information required by the end device to join a \nnetwork is statically\
    \ stored in it. This method is technically simpler, requires access \nto the end\
    \ device, and is intended to be used mostly in private networks. \n• \nOver-the-Air\
    \ Activation: The end device initiates a join procedure by sending an un-\nencrypted\
    \ Join Request frame to the network server. If the Join Request is accepted, \n\
    the server responds with an encrypted Join Accept frame. This method is dynamic\
    \ \nand can be used in public or private networks. \n2.2. Flying Ad Hoc Networks\
    \ (FANETs) \nAlthough UAVs have been used in the military since World War I [39,40],\
    \ it is not \nuntil recently that they have become widely available for civilian\
    \ applications, such as 3D \nmapping, construction inspection, land surveying,\
    \ oil exploration, agricultural monitor-\ning, emergency response operations,\
    \ surveillance, and asset management, to name a few. \nMany of these applications\
    \ could benefit from using a swarm of drones instead of a single \nUAV, for which\
    \ an ad hoc network could be established for communication and coordi-\nnation.\
    \ The authors of [41] consider FANETs as a subset of MANETs but not as a subset\
    \ \nof Vehicular Ad Hoc Networks (VANETs), while others [42–45] also consider\
    \ FANETs to \nbe a subset of VANETs. Furthermore, Bekmezci et al. [44] define\
    \ a FANET as a form of \nMANET made of multiple UAV nodes, where the communication\
    \ between UAVs cannot \nrely on infrastructure-based links. The relationship between\
    \ MANETs, VANETs, and \nFANETs is illustrated in Figure 3. \n \nFigure 3. Relationship\
    \ between MANET, VANET and FANET. \nFigure 2. LoRaWAN frame.\nTo be part of a\
    \ LoRaWAN network, every end device must ﬁrst be activated following\none of the\
    \ next two methods:\n•\nActivation by Personalization: The information required\
    \ by the end device to join a\nnetwork is statically stored in it. This method\
    \ is technically simpler, requires access to\nthe end device, and is intended\
    \ to be used mostly in private networks.\n•\nOver-the-Air Activation: The end\
    \ device initiates a join procedure by sending an\nunencrypted Join Request frame\
    \ to the network server. If the Join Request is accepted,\nthe server responds\
    \ with an encrypted Join Accept frame. This method is dynamic\nand can be used\
    \ in public or private networks.\n2.2. Flying Ad Hoc Networks (FANETs)\nAlthough\
    \ UAVs have been used in the military since World War I [39,40], it is not\nuntil\
    \ recently that they have become widely available for civilian applications, such\
    \ as 3D\nmapping, construction inspection, land surveying, oil exploration, agricultural\
    \ monitoring,\nemergency response operations, surveillance, and asset management,\
    \ to name a few. Many\nof these applications could beneﬁt from using a swarm of\
    \ drones instead of a single UAV,\nfor which an ad hoc network could be established\
    \ for communication and coordination.\nThe authors of [41] consider FANETs as\
    \ a subset of MANETs but not as a subset of Vehicular\nAd Hoc Networks (VANETs),\
    \ while others [42–45] also consider FANETs to be a subset\nof VANETs. Furthermore,\
    \ Bekmezci et al. [44] deﬁne a FANET as a form of MANET\nmade of multiple UAV\
    \ nodes, where the communication between UAVs cannot rely on\ninfrastructure-based\
    \ links. The relationship between MANETs, VANETs, and FANETs is\nillustrated in\
    \ Figure 3.\ng\nRegarding control information, a series of MAC commands are used\n\
    control information exclusively between the network server and the end d\nend\
    \ devices join the network in Class A mode, Class B and Class C devices\nment\
    \ all Class A MAC commands. \nTo be part of a LoRaWAN network, every end device\
    \ must first be acti\ning one of the next two methods: \n• \nActivation by Personalization:\
    \ The information required by the end de\nnetwork is statically stored in it.\
    \ This method is technically simpler, re\nto the end device, and is intended to\
    \ be used mostly in private network\n• \nOver-the-Air Activation: The end device\
    \ initiates a join procedure by se\nencrypted Join Request frame to the network\
    \ server. If the Join Reques\nthe server responds with an encrypted Join Accept\
    \ frame. This metho\nand can be used in public or private networks. \n2.2. Flying\
    \ Ad Hoc Networks (FANETs) \nAlthough UAVs have been used in the military since\
    \ World War I [39\nuntil recently that they have become widely available for civilian\
    \ application\nmapping, construction inspection, land surveying, oil exploration,\
    \ agricultu\ning, emergency response operations, surveillance, and asset management,\
    \ to\nMany of these applications could benefit from using a swarm of drones inste\n\
    UAV, for which an ad hoc network could be established for communication\nnation.\
    \ The authors of [41] consider FANETs as a subset of MANETs but n\nof Vehicular\
    \ Ad Hoc Networks (VANETs), while others [42–45] also conside\nbe a subset of\
    \ VANETs. Furthermore, Bekmezci et al. [44] define a FANET\nMANET made of multiple\
    \ UAV nodes, where the communication between \nrely on infrastructure-based links.\
    \ The relationship between MANETs, V\nFANETs is illustrated in Figure 3. \n \n\
    Figure 3. Relationship between MANET, VANET and FANET. \nFigure 3. Relationship\
    \ between MANET, VANET and FANET.\nSensors 2023, 23, 2403\n9 of 25\n2.2.1. UAV\
    \ Taxonomy\nRegarding UAV taxonomy, multiple categorizations are proposed in [41–43].\
    \ A sum-\nmary of this topic is presented in Table 4.\nTable 4. UAV taxonomy.\n\
    By Wing Type\nBy Size\nBy Type\nof Flight\nBy Flight Range\nBy Energy\nAutonomy\n\
    By Altitude\nBy Purpose\nFixed wing [41–43]\nRotary wing [41–43]\nHybrid [41]\n\
    Large [42,43]\nSmall [42,43]\nAutonomous [42]\nRemotely controlled [42]\nClose-range\
    \ [43]\nShort-range [43]\nMid-range [43]\nLong-range\nHigh [42]\nMedium [42]\n\
    Low [42]\nHigh [42]\nMedium [42]\nLow [42]\nMilitary [41]\nCommunications [41,42]\n\
    Surveillance [41]\nPhotography/Mapping [41,43]\nExploration/Surveying [41]\nRemote\
    \ sensing [41]\nDelivery [43]\nFirst-Person View (FPV)/Entertainment\n2.2.2. Differences\
    \ between FANETs, VANETs, and MANETs\nThe differences between FANETs, VANETs,\
    \ and MANETs are analyzed from different\nperspectives in [41–45] and presented\
    \ in Table 5. The aforementioned works highlight the\nfact that FANETs have speciﬁc\
    \ characteristics. Those speciﬁcities are summarized in the\nfollowing ﬁelds:\n\
    •\nNode mobility: Contrary to the elements of MANETs and ground VANETs, UAVs\n\
    experience relatively fewer obstacles, which allows them to move in and around\n\
    three axes with a certain amount of freedom at somewhat constant speeds. However,\n\
    holding a ﬁxed position can be more challenging, or even impossible, depending\
    \ on\nweather conditions and the type of UAV. These circumstances inﬂuence the\
    \ mobil-\nity model to be applied but also impact other characteristics, such\
    \ as node density,\ntopology change rate, localization alternatives, and applicable\
    \ propagation models.\n•\nRadio propagation: The presence of fewer obstacles allows\
    \ for the consideration of\nline-of-sight (LoS) propagation while taking into\
    \ account weather conditions and the\nDoppler effect caused by the speed of UAVs\
    \ relative to the ground and to one another.\nAir-to-air and air-to-ground are\
    \ the two main types of links that can be identiﬁed,\nalthough air-to-satellite\
    \ links might also be considered for some applications.\n•\nEnergy constraints:\
    \ They depend on the type of UAV. Battery-powered UAVs are more\nenergy-constrained,\
    \ making it useful to have communication hardware that consumes\nless power, allowing\
    \ for increased ﬂight time, although most of the energy is dedicated\nto keeping\
    \ the UAV and its payload in the air. Large ﬁxed-wing UAVs are most likely\npowered\
    \ by combustion engines that can carry and charge larger batteries, making\nthem\
    \ less energy-constrained.\nTable 5. Differences between FANET, VANET and MANET.\n\
    Characteristic\nMANET\nVANET (Ground)\nFANET\nElements [45]\nMobile phones [45]\n\
    Vehicles [45]\nUAVs, airplanes [45], balloons, HAPs\nNode speed [41,42,45]\n6\
    \ km/h [41,42]\n0–1.5 m/s [45]\n20–130 km/h [41]\n20–100 km/h [42]\n4–36 m/s [45]\n\
    6–460 km/h [41]\n50–100 km/h [42]\n8–257 m/s [45]\nSensors 2023, 23, 2403\n10\
    \ of 25\nTable 5. Cont.\nCharacteristic\nMANET\nVANET (Ground)\nFANET\nNode mobility\
    \ [41–44]\nConsistent, 2D, Random\ntrajectories, Low [41]\nLower (2D) [42]\nRelatively\
    \ slow compared to\nVANET and FANET [44]\nConsistent, 2D, Random\ntrajectories,\
    \ High [41]\nLow (2D) [42]\nFree, 3D, Either random or predeﬁned\ntrajectories,\
    \ very high [41]\nMedium to high (3D) [42]\nFaster than MANET and VANET [43]\n\
    Much higher than MANET and\nVANET [44]\nNode density [43–45]\nDense [45]\nDense\
    \ in cities and sparse in rural\nareas [45]\nMuch lower than MANET and\nVANET\
    \ [43,44]\nMission-dependent [45]\nMobility model [41–44]\nRandom [42]\nRandom\
    \ Way Point (RWP) [44]\nManhattan Models [42]\nHigh predictability [44]\nRWP,\
    \ Paparazzi (PPRZM) [41,42]\nPredetermined, random [43]\nPredetermined, random,\n\
    Semi-Random Circular\nMovement (SRCM), Pheromone map [44]\nTopology change [41–44]\n\
    Dynamic, unpredictable [41]\nLow [42]\nLinear movement but more\nprogressive\n\
    than VANET [41]\nMedium [42]\nStationary, Slow and Fast [41]\nHigh [42]\nMore\
    \ frequent than MANET or VANET\nand related to node\nmobility/availability [43]\n\
    Propagation model [41–45]\nNon-Line-of-Sight (NLoS)\n[41,44]\nRayleigh [45]\n\
    Non-Line-of-Sight (NLoS) [41,44]\nRayleigh/Rician [45]\nLine-of-Sight (LoS) [41,43,44]\n\
    Friis, Rice, Log-Normal [42]\nRayleigh/Rician [45]\nEnergy constraints [41–45]\n\
    Medium [41,42]\nConstraint [45]\nLow [41,42]\nNon-constraint [45]\nMedium to High\
    \ [41,42]\nLow to High depending on the type of\nUAV [43]\nHigh for mini-UAVs\
    \ [44]\nConstraint/ Non-constraint [45]\nComputational power [41,44]\nLimited\
    \ [41,44]\nHigh [41,44]\nHigh [41,44]\nLocalization [41,43,44]\nGlobal Positioning\
    \ System\n(GPS) [41,44]\nGPS/Assisted GPS (AGPS) [41,44]\nDifferential GPS (DGPS)\
    \ [44]\nGPS/AGPS (Assisted Global Positioning\nSystem) [41,44]\nDGPS, Inertial\
    \ Measurement Unit\n(IMU) [44]\n3. Critical Review\nThe critical review will be\
    \ covered according to the identiﬁed challenges involved in a\nFANET implementation\
    \ as stated in Section 1.3.\n3.1. Communications\nThe communication challenges\
    \ can be generally described under the conceptual\nframework of the Open Systems\
    \ Interconnection (OSI) or TCP/IP layer models, while\ntaking into consideration\
    \ the mobility and energy constraints of FANETs. The PHY layer\nwill be limited\
    \ to LoRa and LoRaWAN, which are within the scope of this work.\n3.1.1. Architecture\n\
    The communication architecture is highly dependent on the network application.\
    \ First,\na common ground for FANETs must be determined, and then, some architectures\
    \ are\nexempliﬁed to establish the types of applications on which they are employed.\
    \ Single UAV\narchitectures are not considered as FANETs because FANETs are composed\
    \ of more than\none UAV, and communication between UAVs cannot rely on infrastructure\
    \ networks [44].\nMoreover, this means that topologies can be mesh, star-of-meshes,\
    \ or mesh-of-meshes.\nAs mentioned in Section 2.2.2, three different types of\
    \ links can be identiﬁed according\nto the locations of the elements they connect,\
    \ namely air-to-air (UAV-to-UAV), air-to-\nground (UAV-to-ground) and air-to-satellite\
    \ (UAV-to-satellite). Links can also be classiﬁed\naccording to the role they\
    \ play from a communications network perspective: access links,\nbackhaul links,\
    \ and backbone links. The two mentioned classiﬁcations are illustrated in\nFigure\
    \ 4.\nSensors 2023, 23, 2403\n11 of 25\n \nof-meshes. \nAs mentioned in Section\
    \ 2.2.2, three different types of links can be identified accord-\ning to the\
    \ locations of the elements they connect, namely air-to-air (UAV-to-UAV), air-to-\n\
    ground (UAV-to-ground) and air-to-satellite (UAV-to-satellite). Links can also\
    \ be classi-\nfied according to the role they play from a communications network\
    \ perspective: access \nlinks, backhaul links, and backbone links. The two mentioned\
    \ classifications are illus-\ntrated in Figure 4. \n \n \n(a) Terrestrial-only\
    \ links \n(b) Terrestrial and satellite links \nFigure 4. FANET types of links.\
    \ \nFour UAV communication architectures are mentioned in [43], based on the type\
    \ of \ninfrastructure utilized: UAV direct communication, UAV communication via\
    \ satellite \nFigure 4. FANET types of links.\nFour UAV communication architectures\
    \ are mentioned in [43], based on the type\nof infrastructure utilized: UAV direct\
    \ communication, UAV communication via satellite\nnetworks, UAV communication\
    \ via cellular networks, and UAV communication via ad\nhoc networks. However,\
    \ these could be further summarized into communication through\ninfrastructure\
    \ and infrastructure-less communication; hence, only UAV communication via\nad\
    \ hoc networks corresponds to FANETs.\nThree hierarchical architectures are described\
    \ in [46,47], based on how the UAVs con-\nnect to each other and to a ground base\
    \ station. The ﬁrst architecture relies on a single\nUAV acting as a hub to connect\
    \ a single group of UAVs to the base station. The second\narchitecture involves\
    \ clustering UAVs into groups, each one of them having one hub to\nconnect to\
    \ the base station. Finally, in the third architecture, multiple layers of UAV\
    \ clusters\nconnect to each other through one root UAV, and only one of the groups\
    \ has a hub that\nconnects all others to the base station. According to the description,\
    \ UAV-to-UAV communi-\ncation relies on low-power, short-range links, while UAV-to-ground\
    \ communication does\nit on high-power, long-range links. These architectures\
    \ could be employed in applications\nwherein compact swarms with longer UAV-to-ground\
    \ ranges—when compared to UAV-to-\nUAV ranges—are needed. Moreover, having centralized\
    \ links to the base station implies\none or more of the following situations:\n\
    •\nMost communications take place inside the swarms.\n•\nThe communication with\
    \ the base station is less frequent or takes place at low\ndata rates.\n•\nThe\
    \ UAV that handles the link to the base station is a single point of failure and\
    \ may\nbecome a bottleneck.\nTo overcome the last issue, the authors of [48] propose\
    \ a multi-layer architecture where\nclusters are grouped in layers and each cluster\
    \ selects a UAV that acts as a hub to connect to\nthe base station or to another\
    \ layer, and a second UAV as a backup hub. The UAV clusters\ncan be grouped two-dimensionally\
    \ or in multiple layers in the three-dimensional space. A\nsimilar multi-layer\
    \ approach is also presented in [49]. The architectures described in [46–49]\n\
    can be synthesized by topology into the categories shown in Figure 5.\nIn the\
    \ case of FANETs being a part of an IoT implementation, architectures can be\n\
    local or cloud-based. When cloud infrastructure is involved, a superposition of\
    \ the IoT\nthree-layered architectural model [50] and the IoT-oriented cloud computing\
    \ architecture\ncan be useful to understand the FANET role. The IoT may present\
    \ the need to have\ncomputing resources closer to the end devices, which has led\
    \ to the coining of the terms\nedge computing and fog computing. Cloud, fog, and\
    \ edge computing refer to the segment\nwhere the computations are performed with\
    \ respect to the distance from the end node,\nas shown in Figure 6. Furthermore,\
    \ the end device could be mounted on the ground\nSensors 2023, 23, 2403\n12 of\
    \ 25\nor on the UAV, depending on the application. In both cases, the UAV becomes\
    \ an edge\ncomputing enabler.\nSensors 2023, 23, x FOR PEER REVIEW \n13 of 26\
    \ \n \n \n \n \n \n(a) Single cluster (mesh topology) \n(b) Multi-cluster (star-of-meshes\
    \ topology) \n \n \n(c) 2D Multi-layer (mesh-of-meshes topology) \n(d) 3D Multi-layer\
    \ (mesh-of-meshes topology) \nFigure 5. FANET topologies. \nIn the case of FANETs\
    \ being a part of an IoT implementation, architectures can be \nlocal or cloud-based.\
    \ When cloud infrastructure is involved, a superposition of the IoT \nthree-layered\
    \ architectural model [50] and the IoT-oriented cloud computing architecture \n\
    can be useful to understand the FANET role. The IoT may present the need to have\
    \ com-\nputing resources closer to the end devices, which has led to the coining\
    \ of the terms edge \ncomputing and fog computing. Cloud, fog, and edge computing\
    \ refer to the segment where \nthe computations are performed with respect to\
    \ the distance from the end node, as shown \nin Figure 6. Furthermore, the end\
    \ device could be mounted on the ground or on the UAV, \ndepending on the application.\
    \ In both cases, the UAV becomes an edge computing ena-\nbler. \n \n \nFigure\
    \ 5. FANET topologies.\nRegarding the use of LoRa or LoRaWAN, most works refer\
    \ to UAV-aided wireless\nsensor networks (WSNs) with single or independent UAVs\
    \ [51–58]. WSNs are sets of\nsensors that communicate with each other by forming\
    \ an ad hoc network. By this deﬁnition,\nWSNs can be considered a subset of the\
    \ IoT. However, even though WSNs and FANETs\nhave a mesh nature in common, a WSN\
    \ aided by a single UAV is not considered a FANET\nby the deﬁnition presented\
    \ in Section 2.2.\nA system called LoRaUAV is proposed in [59,60] aimed at providing\
    \ coverage to\nmobile sensors during emergencies by deploying a mesh of LoRaWAN\
    \ gateways mounted\non UAVs. In this work, LoRaWAN is used as an access network\
    \ for a ﬁxed number of\nground-mobile sensors, while UAVs relay information through\
    \ a Wi-Fi mesh network to a\nbase station. In this architecture, the LoRaWAN access\
    \ network range is longer than that of\nthe Wi-Fi mesh backhaul.\nThe feasibility\
    \ of a hybrid architecture made of LoRa and IEEE 802.11 s overlaid\nmesh networks\
    \ is analyzed in [61], where LoRa and LoRaWAN are proposed for long-\nrange-low-data-rate\
    \ communications and IEEE 802.11 s for short-to-mid-range-high-data-\nrate communications.\
    \ A hierarchical tree of multi-layer meshes is suggested, where a\nsmart selection\
    \ mechanism switches between IEEE 802.11 s and pure LoRa for UAV-to-\nUAV communications,\
    \ and between IEEE 802.11 s and LoRaWAN for UAV-to-ground\ncommunications. The\
    \ proposed architecture is aimed at being a general approach for\na wide range\
    \ of UAV-based scenarios, where, given its mobility and radio propagation\nSensors\
    \ 2023, 23, 2403\n13 of 25\nconditions, a combination of long-range-low-data-rate\
    \ and short-range-high-data-rate\nprotocols might be convenient.\nREVIEW \n14\
    \ \n \n \nFigure 6. Superposition of IoT and cloud architectures. \nRegarding\
    \ the use of LoRa or LoRaWAN, most works refer to UAV-aided wir\nsensor networks\
    \ (WSNs) with single or independent UAVs [51–58]. WSNs are sets of\nsors that\
    \ communicate with each other by forming an ad hoc network. By this defini\nWSNs\
    \ can be considered a subset of the IoT. However, even though WSNs and FAN\nhave\
    \ a mesh nature in common, a WSN aided by a single UAV is not considered a FA\n\
    by the definition presented in Section 2.2. \nA system called LoRaUAV is proposed\
    \ in [59,60] aimed at providing coverage to\nbile sensors during emergencies by\
    \ deploying a mesh of LoRaWAN gateways mou\non UAVs. In this work, LoRaWAN is\
    \ used as an access network for a fixed numb\nground-mobile sensors, while UAVs\
    \ relay information through a Wi-Fi mesh netwo\na base station. In this architecture,\
    \ the LoRaWAN access network range is longer than\nof the Wi-Fi mesh backhaul.\
    \ \nThe feasibility of a hybrid architecture made of LoRa and IEEE 802.11 s overlaid\
    \ m\nnetworks is analyzed in [61], where LoRa and LoRaWAN are proposed for long-ra\n\
    low-data-rate communications and IEEE 802.11 s for short-to-mid-range-high-data\n\
    communications. A hierarchical tree of multi-layer meshes is suggested, where\
    \ a s\nselection mechanism switches between IEEE 802.11 s and pure LoRa for UAV-to-\n\
    communications, and between IEEE 802.11 s and LoRaWAN for UAV-to-ground com\n\
    nications. The proposed architecture is aimed at being a general approach for\
    \ a wide r\nof UAV-based scenarios, where, given its mobility and radio propagation\
    \ conditio\ncombination of long-range-low-data-rate and short-range-high-data-rate\
    \ protocols m\nbe convenient. \nA single-cluster mesh is the system topology presented\
    \ in [62]. The network has\nFigure 6. Superposition of IoT and cloud architectures.\n\
    A single-cluster mesh is the system topology presented in [62]. The network has\
    \ sensor\nnodes, relay nodes (mounted on UAVs), and a gateway on the ground, where\
    \ the gateway\noperates as the root node of the mesh network, providing the air-to-ground\
    \ backbone link.\nA summary of the literature ﬁndings regarding proposed architectures\
    \ and their\napplications is shown in Table 6.\nSensors 2023, 23, 2403\n14 of\
    \ 25\nTable 6. Single UAV and FANET architectures involving LoRa or LoRaWAN.\n\
    Reference\nTopology\nCommunication Technology\nIoT\nArchitecture\nUAV Type\nApplication\n\
    Test\nAir-to-Ground\nAir-to-Air\nAir-to-Satellite\n[51]\nSingle UAV\nLoRaWAN (access)\n\
    4G/Wi-Fi (backbone)\n—\n—\nEdge\nRotary wing\nAgricultural monitoring\nSingle\
    \ UAV-to-Ground\nproof of concept\n[52]\nSingle UAV\nLoRaWAN/Bluetooth\n(both\
    \ as access)\nWi-Fi (backbone)\n—\n—\nEdge\nRotary wing\nSearch and rescue\nSingle\
    \ UAV-to-Ground\nproof of concept\n[53]\nSingle UAV\nLoRaWAN\n(access/backbone)\n\
    —\n—\nFog\nRotary wing\nDisaster monitoring\nSingle UAV-to-Ground\nproof of concept\n\
    [54]\nSingle UAV\nLoRaWAN (access)\n—\nSimulation through\ndelay (backbone)\n\
    Cloud\nRotary wing\nSensor monitoring\nSingle UAV-to-Ground\nproof of concept\n\
    [55]\nSingle UAV\nLoRaWAN (access)\nWi-Fi (backbone)\n—\n—\nCloud\nRotary wing\n\
    Environmental\nmonitoring\nSingle UAV-to-Ground\nproof of concept\n[56]\nSingle\
    \ UAV\nLoRa (access)\n—\n—\nCloud\n—\nUAV remote\nidentiﬁcation\nSingle UAV-to-Ground\n\
    simulation\n[57]\nMultiple independent UAVs\nLoRaWAN (access)\n—\n—\nCloud\nRotary\
    \ wing\nSearch and rescue, asset\nlocalization\nSingle UAV-to-Ground\nexperiments\n\
    [58]\nSingle UAV\nLoRa (access)\n—\n—\nCloud\nRotary wing\nSensor monitoring\n\
    Single UAV-to-Ground\nexperiments\n[59,60]\nSingle cluster\nLoRaWAN (access)\n\
    802.11 g (backbone)\n802.11 g (backhaul)\n—\nCloud\nRotary wing\nEmergency response\n\
    Simulation\n[61]\n3D multi-layer\n802.11 s/LoRaWAN (both\nas access/backbone)\n\
    802.11 s/LoRa\n(backhaul)\n—\nEdge, fog, cloud\nRotary wing\nSurveillance, agriculture,\n\
    ﬂight telemetry\nSingle UAV-to-Ground\nproof of concept\n[62]\nSingle cluster\n\
    LoRa (access/backbone)\nLoRa (backhaul)\n—\nCloud\nRotary wing\nEnvironmental\n\
    emergencies\nSingle UAV two-hop\nproof of concept\n[63]\nSingle cluster\nLoRa\
    \ (access/backbone)\nLoRa (backhaul)\n—\nCloud\nRotary wing\nOpen\nThree UAVs\
    \ two-hop\nproof of concept\nSensors 2023, 23, 2403\n15 of 25\n3.1.2. Medium Access\
    \ Control\nMAC protocols coordinate access to a shared medium with the purpose\
    \ of avoiding\ncollisions in an efﬁcient, fair, and timely manner. As with all\
    \ other topics pertaining to\nFANET communication, MAC protocols must be chosen\
    \ or designed to fulﬁll their goal\nwhile considering the corresponding mobility\
    \ characteristics and energy restrictions of\nFANETs. A classiﬁcation of MAC protocols\
    \ can be helpful in deciding which one to use\nfor a particular application; however,\
    \ this can be a demanding task because of the many\nparameters that can be used\
    \ to characterize them [64]. A taxonomy of MAC protocols for\nWSNs is presented\
    \ in [65], where four condensed categories are discussed: asynchronous,\nsynchronous,\
    \ frame-slotted, and multi-channel. A classiﬁcation of multi-channel MAC\nprotocols\
    \ for low-power and lossy networks is proposed in [64], with ﬁve main categories\n\
    deﬁned by channel assignment scheme, medium access strategy, way of interaction\
    \ with\nupper layers, MAC layer coordination, and physical layer management. The\
    \ authors of [66]\npresent a taxonomy of MAC protocols for FANETs with three main\
    \ categories based on\ntheir channel access strategy: contention-based, contention-free,\
    \ and hybrid. An analysis\nof MAC protocols for the IoT along with MAC protocols\
    \ for UAV networks is performed\nin [67], where the authors also present a classiﬁcation\
    \ of MAC protocols for a UAV-based\nIoT (UIoT) with three categories: contention-based,\
    \ contention-free, and based on artiﬁcial\nintelligence (AI-based). Starting from\
    \ these classiﬁcations and expanding the summarized\ncategories, a taxonomy of\
    \ MAC protocols for FANETs is presented in Figure 7.\nensors 2023, 23, x FOR PEER\
    \ REVIEW \n16 of 2\nupper layers, MAC layer coordination, and physical layer management.\
    \ The authors o\n[66] present a taxonomy of MAC protocols for FANETs with three\
    \ main categories based\non their channel access strategy: contention-based, contention-free,\
    \ and hybrid. An anal\nysis of MAC protocols for the IoT along with MAC protocols\
    \ for UAV networks is per\nformed in [67], where the authors also present a classification\
    \ of MAC protocols for \nUAV-based IoT (UIoT) with three categories: contention-based,\
    \ contention-free, and\nbased on artificial intelligence (AI-based). Starting\
    \ from these classifications and expand\ning the summarized categories, a taxonomy\
    \ of MAC protocols for FANETs is presented\nin Figure 7. \n \nFigure 7. Taxonomy\
    \ of MAC protocols for FANETs. \nAs seen in Table 6, the works presented in [59–63]\
    \ consider the use of LoRa or Lo\nRaWAN as part of a multi-UAV solution that involves\
    \ FANET communication. Moreover\nonly [61–63] consider the use of LoRa at the\
    \ heart of the FANET, i.e., on the air-to-air links\nTherefore, only the last\
    \ three works propose the use of MAC protocols different than tha\nof LoRaWAN.\
    \ A summary of the MAC protocols used in FANETs that involve LoRa o\nLoRaWAN is\
    \ shown in Table 7. \nIn order to achieve mesh networking using LoRa, a packet\
    \ structure and a Time Di\nvision Multiple Access (TDMA) scheduling are proposed\
    \ in [61]. The proposed packe\nstructure includes fields for node identification,\
    \ node positioning, and mesh configuration\ndata, intended for mesh setup and\
    \ update. Regarding performance evaluation, the au\nthors present a theoretical\
    \ analysis of the operating range of both LoRa and IEEE 802 11 s\nMAC Protocols\
    \ for FANETs\nBy channel\nSingle \nchannel\nMulti-\nchannel\nBy time synchronization\n\
    Synchronous\nLocal \nsynchronization\nGlobal \nsynchronization\nAsynchronous\n\
    By contention \nstrategy\nContention-\nbased\nRandom access\nToken-based\nContention-\n\
    free\nFigure 7. Taxonomy of MAC protocols for FANETs.\nAs seen in Table 6, the\
    \ works presented in [59–63] consider the use of LoRa or Lo-\nRaWAN as part of\
    \ a multi-UAV solution that involves FANET communication. Moreover,\nonly [61–63]\
    \ consider the use of LoRa at the heart of the FANET, i.e., on the air-to-air\
    \ links.\nTherefore, only the last three works propose the use of MAC protocols\
    \ different than that\nof LoRaWAN. A summary of the MAC protocols used in FANETs\
    \ that involve LoRa or\nLoRaWAN is shown in Table 7.\nSensors 2023, 23, 2403\n\
    16 of 25\nTable 7. Proposed MAC protocols in FANETs involving LoRa or LoRaWAN.\n\
    Reference\nTopology\nLink Type\nCommunication Technology\nProposed MAC Protocol\n\
    [59,60]\nSingle cluster\nAir-to-air\n802.11 g (backhaul)\nCSMA/CA\nAir-to-ground\n\
    LoRaWAN (access)\nALOHA\n802.11 g (backbone)\nCSMA/CA\n[61]\n3D multi-layer\n\
    Air-to-air\n802.11 s (backhaul)\nCSMA/CA\nLoRa (backhaul)\nTDMA\nAir-to-ground\n\
    802.11 s (as access/backbone)\nCSMA/CA\nLoRaWAN (as access/backbone)\nALOHA\n\
    [62]\nSingle cluster\nAir-to-air\nLoRa (backhaul)\nCustom slotted ALOHA\nAir-to-ground\n\
    LoRa (access/backbone)\nCustom slotted ALOHA\n[63]\nSingle cluster\nAir-to-air\n\
    LoRa (backhaul)\nCSMA/CA\nAir-to-ground\nLoRa (access/backbone)\nCSMA/CA\nIn order\
    \ to achieve mesh networking using LoRa, a packet structure and a Time\nDivision\
    \ Multiple Access (TDMA) scheduling are proposed in [61]. The proposed packet\n\
    structure includes ﬁelds for node identiﬁcation, node positioning, and mesh conﬁguration\n\
    data, intended for mesh setup and update. Regarding performance evaluation, the\
    \ authors\npresent a theoretical analysis of the operating range of both LoRa\
    \ and IEEE 802.11 s. Also,\na simple experimental analysis of the LoRaWAN operating\
    \ range is performed for UAV-to-\nground communications.\nCarrier Sense Multiple\
    \ Access with Collision Avoidance (CSMA/CA) and a cus-\ntomized form of Destination\
    \ Sequenced Distance Vector (DSDV) routing protocol are\nassessed in [63] to achieve\
    \ a decentralized mesh network of ﬂying drones. Two-hop perfor-\nmance is assessed\
    \ experimentally in terms of channel usage, packet delivery rate, route\nconstruction\
    \ time, and delay.\n3.1.3. Routing\nThere are countless routing protocols and\
    \ different ways to classify them depending\non the context in which they are\
    \ applied. Various routing schemes for FANETs can be\nfound in [41,43,46,48,68–74].\
    \ A taxonomy of FANET routing protocols is presented in [46],\nwhere they are\
    \ categorized into static, proactive, reactive, hybrid (proactive and reactive),\n\
    geographic (position-based), and hierarchical. A similar classiﬁcation is performed\
    \ in [43],\nwith the difference that it does not include hierarchical routing\
    \ protocols as a category.\nAdditionally, thorough taxonomies—which reach up to\
    \ four levels in depth—are pro-\nvided in [41,70–72], where additional categories\
    \ such as bio-inspired routing, swarm-based\nrouting, and machine-learning-based\
    \ routing are worth mentioning.\nRegarding the use of LoRa or LoRaWAN in FANETs,\
    \ the same observation made in\nSection 3.1.2 applies to the present section,\
    \ with the additional consideration that LoRaWAN\ndoes not incorporate routing\
    \ within its network architecture. The routing approaches\npresented in [59–63]\
    \ are discussed next and summarized in Table 8.\nAlthough LoRa is not part of\
    \ the air-to-air links in [59,60], Optimized Link State\nRouting (OLSR) is the\
    \ protocol used within the proposed Wi-Fi mesh network. According\nto the authors,\
    \ the mobility mechanism requires knowledge of the full network topology,\nwhich\
    \ is the main consideration behind this decision.\nThe Hybrid Wireless Mesh Protocol\
    \ (HWMP)—which is the default routing protocol\nfor 802.11 s—is mentioned as the\
    \ routing protocol for the Wi-Fi mesh network in [61], while\nno routing protocols\
    \ are mentioned for its use with LoRa. A GPS-based directed ﬂooding\napproach\
    \ is proposed in [62] as the routing protocol, where an experimental test with\
    \ one\nrelay node and two sensor nodes (2 hops) is performed.\nSensors 2023, 23,\
    \ 2403\n17 of 25\nTable 8. Proposed routing protocols in FANETs involving LoRa\
    \ or LoRaWAN.\nReference\nTopology\nLink Type\nCommunication Technology\nProposed\
    \ Routing Protocol\n[59,60]\nSingle cluster\nAir-to-Air\n802.11 g (backhaul)\n\
    OLSR\nAir-to-Ground\nLoRaWAN (access)\n—\n802.11 g (backbone)\nOLSR\n[61]\n3D\
    \ multi-layer\nAir-to-Air\n802.11 s (backhaul)\nHWMP\nLoRa (backhaul)\nNot deﬁned\n\
    Air-to-Ground\n802.11 s (as access/backbone)\nHWMP\nLoRaWAN (as access/backbone)\n\
    —\n[62]\nSingle cluster\nAir-to-Air\nLoRa (backhaul)\nGPS-based directed ﬂooding\n\
    Air-to-Ground\nLoRa (access/backbone)\nNot required\n[63]\nSingle cluster\nAir-to-Air\n\
    LoRa (backhaul)\nCustom DSDV\nAir-to-Ground\nLoRa (access/backbone)\nCustom DSDV\n\
    The authors of [75] propose an improvement to 802.11 s routing metrics for its\
    \ use in\nthe deployment of FANETs. Claiming that HWMP was not conceived for FANET\
    \ mobility,\nthis work presents two new routing metrics aimed at improving network\
    \ performance in\nterms of throughput and end-to-end delay. More speciﬁcally,\
    \ the ﬁrst metric is based on\nmodiﬁcations to the default frame error rate and\
    \ link time usage calculations to improve\nperformance for stationary nodes. The\
    \ second metric adds a factor based on the Received\nSignal Strength Indicator\
    \ (RSSI) of a wireless link, increasing its cost when the fade margin\nfalls below\
    \ a certain threshold.\n3.2. Mobility\nTransportation and communication problems\
    \ are analogous in many ways. In fact,\nmany terms used in communications—such\
    \ as packet or collision—come from the postal\nor transportation worlds. This\
    \ analogy gives us a sense of the importance of addressing the\nmobility problem\
    \ in FANETs. Moreover, mobility can be seen as an opportunity instead\nof a problem,\
    \ where nodes can move and reposition themselves to reconﬁgure a network\nor to\
    \ recover connectivity. In this section, the FANET mobility issue is broken down\
    \ into\nmobility objectives and mobility models.\n3.2.1. Mobility Objectives\n\
    The mobility objectives can be described as optimization problems that are dependent\n\
    on various factors such as application, environmental conditions, and available\
    \ resources.\nOptimization can be performed in the following ways:\n•\nOptimal\
    \ positioning: Where to go and why.\n•\nOptimal trajectory determination: How\
    \ to get there and why.\n•\nOptimal agent selection: Which UAVs should get there\
    \ and why.\nRegardless of the speciﬁc application, a common requirement for FANETs\
    \ is to maxi-\nmize network uptime, in the literal and ﬁgurative senses of the\
    \ expression.\n3.2.2. Mobility Models\nMobility models can be used to model movement\
    \ for FANET simulation and to achieve\nmobility optimization goals in practical\
    \ implementations. Four mobility models for FANETs\nare surveyed in [76]: Random\
    \ Way Point, Gauss-Markov, Semi-random Circular Movement,\nand Mission Plan Based.\
    \ The same models are reviewed in [43,68], with the addition of\nthe Pheromone-Based,\
    \ Paparazzi, and Particle Swarm Mobility Models. Furthermore, a\ntaxonomy of mobility\
    \ models with ﬁve categories is provided in [41], namely, random-\nbased, time-based,\
    \ path-based, group-based, and topology-based.\nSensors 2023, 23, 2403\n18 of\
    \ 25\nReference Point Group Mobility (RPGM) is used as the mobility model for\
    \ performance\nevaluations in [75], which are carried out through simulations\
    \ in Network Simulator (NS)-3.\nThese simulations show that the inclusion of an\
    \ RSSI-based factor results in an improvement\nin network throughput and a decrease\
    \ in the number of route changes, with little to no\nimpact on end-to-end delay,\
    \ especially for a mobile scenario.\nAn algorithm to ﬁnd the optimal position\
    \ of a UAV-mounted relay node is presented\nin [77] to maximize the throughput\
    \ between any pair of ﬁxed ground nodes within a\nwireless mesh network. To achieve\
    \ this, nodes—whose positions are known—are ﬁrst\nclustered in a way such that\
    \ nodes that connect within a certain RSSI margin are part\nof the same cluster.\
    \ Then, the placement optimization is performed by separating the\npositioning\
    \ problem into horizontal and vertical placement and iterating between the\ntwo.\
    \ For the horizontal placement, clusters are considered single entities around\
    \ their\ncenter of gravity, and the UAV is positioned to maximize throughput—as\
    \ a function of\nsignal-to-noise ratio—for the worst wireless link. Subsequently,\
    \ vertical positioning is\ndetermined to maximize throughput in the same manner.\
    \ Because this work focuses on\nstatic mesh networks, routing is done by means\
    \ of an optimized link state routing protocol\n(OLSRD). Simulations for up to\
    \ 20 ground nodes are implemented using a 3D map. Also,\nan experimental performance\
    \ assessment is presented with four ground nodes separated\ninto two clusters\
    \ of two nodes each.\nConcerning mobility models in FANETs that use LoRa, a Connection\
    \ Recovery and\nMaintenance (CRM) algorithm is proposed in [59,60], where a two-dimensional\
    \ mobility\nproblem is divided into four mobility modes. A Virtual Spring Force\
    \ (VSF) mobility\nalgorithm is used to handle proximity between nodes to avoid\
    \ collisions and to maintain\ndistance within communications range. Correspondingly,\
    \ if the forces are in balance, the\nUAV goes into stationary mode. Then, if a\
    \ path to the base station is lost, the UAV goes\ninto network recovery mode,\
    \ where it moves in the direction of the base station; and, if the\nconnection\
    \ is lost with a ground node, movement prediction is used alongside the spring\n\
    force mobility to try to reestablish it, based on the ground node’s last known\
    \ position,\ndirection, and speed.\n3.3. Energy\nConsidering that large ﬁxed-wing\
    \ UAVs are less energy-constrained, this section\nfocuses on FANETs comprised\
    \ of battery-powered UAVs. In energy-constrained FANETs,\nenergy consumption efﬁciency\
    \ may be achieved by taking one or more of the following\nmeasures [78]:\n•\n\
    Reducing UAV and payload weight.\n•\nIncreasing aerodynamic efﬁciency.\n•\nImproving\
    \ communication protocols, or selecting them, for reduced energy consumption.\n\
    •\nOptimizing motion to reduce energy consumption.\nEven though they do not necessarily\
    \ increase energy consumption efﬁciency, in-air\nenergy replenishment procedures\
    \ might be considered to maximize ﬂight time, such as the\nuse of solar panels\
    \ or the implementation of radio energy harvesting.\nBattery-powered UAVs are\
    \ constituted by many active communication and mobility\nelements, e.g., radio\
    \ transceivers, Global Navigation Satellite System (GNSS) units, ﬂight\ncontrollers,\
    \ motors, cameras, and other sensors. Although a lot of work focuses on develop-\n\
    ing energy-efﬁcient MAC and routing protocols [79–87], the energy required for\
    \ mobility\nis much higher than the energy required for communications [88]. To\
    \ exemplify the last\nstatement, a conservative energy consumption calculation\
    \ is shown in Table 9 for a hybrid\nLoRa/Wi-Fi UAV network node, assuming that\
    \ the transmitters work continuously at\nmaximum power during a 30-min ﬂight.\n\
    The payload weight and the percentage of energy dedicated to communications can\n\
    be reduced if the control hardware includes a Wi-Fi transceiver, which is the\
    \ case with the\nRaspberry Pi, as well as with many other single board computers\
    \ (SBC) and system-on-a-\nchip microcontrollers. This information suggests that\
    \ it might be more signiﬁcant to focus\nSensors 2023, 23, 2403\n19 of 25\non taking\
    \ measures to optimize energy consumption from the mobility perspective. From\n\
    the communications standpoint, this means that efforts should be focused on the\
    \ reduction\nof the weight and size of its components, something that is already\
    \ being done.\nTable 9. Energy consumption at different components of a FANET\
    \ node during a 30-min ﬂight.\nComponent\nCurrent [mA]\nVoltage [V]\nPower [W]\n\
    Energy for a\n30-min Flight [J]\n% of Energy\nConsumption\nWi-Fi transmitter (802.11\
    \ n at\n20 dBm, 2.4 GHz [89])\n2000\n5\n10\n18,000\n4.83%\nLoRa transmitter (RFM95\
    \ W\nat 20 dBm, 915 MHz [90])\n120\n3.7\n0.32\n799\n0.21%\nCommunications controller\n\
    (Raspberry Pi 4 B [91])\n2500\n5\n12.5\n22,500\n6.04%\nUAV (Parrot Anaﬁ USA [92])\n\
    —\n—\n4 × 46\n331,200\n88.91%\nTOTAL\n—\n—\n125.1\n372,499\n100.00%\nRegarding\
    \ the use of mechanisms to collect energy during ﬂight, the performance\nof radio\
    \ frequency (RF) energy harvesting in a UAV Relay Assisted IoT Communication\n\
    Network is assessed in [93]. In this study, time division and power splitting\
    \ schemes are\nimplemented to perform communications reception, transmission,\
    \ and energy harvesting.\nThe system assessment is done through simulation, using\
    \ communications metrics like\nsystem throughput, outage probability (availability),\
    \ and bit error rate (BER). Although\nno information is provided regarding the\
    \ amount of energy collected or saved, it can be\ninferred that the system aims\
    \ at reducing the transmission power of IoT sensors, which, as\nmentioned earlier,\
    \ might not have a signiﬁcant impact on increasing UAV ﬂight time. A\nsimilar\
    \ conclusion can be drawn from [94]. On the other hand, a solar energy-harvesting\n\
    model is proposed in [95] to power small UAVs, where analytical results show possible\n\
    ﬂight time improvements in the range of 3 to 50 min, depending on the ﬂight conditions.\n\
    4. Discussion on Findings and Open Issues\nThe systematic literature review shows\
    \ that LoRa is mostly used in single UAV archi-\ntectures for WSNs [51–58]. A\
    \ few works have considered LoRa or LoRaWAN as part of a\nFANET implementation\
    \ using hybrid architectures combined with Wi-Fi [59–61], whereas\nsome other\
    \ works have explored the application of MAC and routing protocols to extend\n\
    the use of LoRa to a UAV mesh network [62,63]. This might be attributed in part\
    \ to the fact\nthat an accurate assessment of network performance requires a multidisciplinary\
    \ implemen-\ntation of mobility models and complete network stack implementation,\
    \ even if simpliﬁed\nor abstracted. The rest of the ﬁndings and open issues are\
    \ addressed in accordance with\ncommunication, mobility, and energy aspects. Additionally,\
    \ Table 10 presents a comparison\nof FANET-related characteristics between LoRa/LoRaWAN,\
    \ Wi-Fi, and cellular LPWANs.\n4.1. Communications\nRegardless of LoRa data rate\
    \ limitations, its communication range can be exploited for\napplications that\
    \ require maximum distance between UAVs. Using LoRa as a FANET access\nnetwork\
    \ might limit applications to WSN or ﬂight control, considering that LoRa devices\n\
    are not as extended among end users as those of other types of communication.\
    \ Therefore,\na hybrid network could be more convenient for human-oriented communications,\
    \ in\napplications such as localization, short messaging, or search and rescue\
    \ operations, where\nthe access network should be of widespread use, such as Wi-Fi\
    \ or cellular. For future\nresearch, it will be important to test the maximum\
    \ communication ranges at the maximum\ndata rate available for the latest LoRa\
    \ chips in the 2.4 GHz band, which might enable some\nreal-time applications.\n\
    Sensors 2023, 23, 2403\n20 of 25\nTable 10.\nComparison between LoRa/LoRaWAN,\
    \ Wi-Fi, and cellular LPWANs for their use\nin FANETs.\nAspect\nLoRa/LoRaWAN\n\
    Wi-Fi\nCellular-Based LPWAN (NB-IoT)\nRange [10,96]\n2–5 km in urban areas and\n\
    15 km in suburban areas\nUp to 100 m\n0–1 km in urban areas and up to\n15 km in\
    \ suburban areas\nThroughput [25,31,96]\nLess than 200 kbps\nUp to hundreds of\
    \ Mbps\nUp to 1 Mbps\nFrequency bands\nISM (unlicensed)\nISM (unlicensed)\nInternational\
    \ Mobile\nTelecommunications (IMT) (licensed)\nEnergy consumption [J] *\n~800\n\
    ~18,000\n~1500 [97]\nRequires service\nprovider infrastructure\nNo\nNo\nYes\n\
    Includes protocols for\nmesh networking\nNo\nYes\nIt does not require them as\
    \ it relies\non infrastructure\n* Assuming parameters for maximum consumption\
    \ during a 30-min period.\nAs mentioned in Section 3.3, efforts in communications\
    \ improvement could be aimed at\nreducing equipment weight and improving air-to-air\
    \ range, rather than at reducing energy\nconsumption at the expense of network\
    \ performance. The same consideration applies to\nnetwork security, where the\
    \ issues are the same as those of any wireless network, with the\nexception that\
    \ the communications equipment could potentially be accessed by anyone\nthat has\
    \ the UAVs within sight. There is room for developing communication protocols\
    \ at\nthe physical layer to ﬁnd a better balance between data rate and communications\
    \ range,\nwithout having to compromise energy consumption excessively.\n4.2. Mobility\n\
    It is essential to handle the mobility of UAVs, as it has a direct impact on FANETs’\n\
    communication and energy performance. Mobility models where each UAV moves inde-\n\
    pendently do not seem appropriate for FANETs. On the contrary, group mobility\
    \ models\nappear more useful, since network information such as position or received\
    \ signal power\ncan be shared among multiple nodes. With respect to network stability,\
    \ mobility plays\na crucial role in network reconﬁguration, considering that a\
    \ node can reposition itself to\nmaintain or recover a link. In this case, energy\
    \ consumption should be considered, but it\ncan be achieved efﬁciently by keeping\
    \ in mind that the received power is exponentially\nand inversely proportional\
    \ to the distance between nodes, meaning that a small, distance-\nclosing movement\
    \ can result in the recovery of a link. Hence, mobility models that keep a\nrecord\
    \ of their current, past, or best positions can also be applicable in this context.\n\
    The mobility optimization problems must be comprised of more than one objective;\n\
    namely, the preservation of communications performance indicators such as received\n\
    signal power or signal-to-noise ratio for air-to-ground and air-to-air links,\
    \ as well as energy\nconsumption minimization. Additionally, it is necessary to\
    \ handle network handover\nbetween UAVs when they need to be replaced.\nApart\
    \ from the study in [59,60], related works that involve LoRa do not consider\n\
    mobility. Again, to assess the impact of mobility models on communications performance,\n\
    simulations require complete network stack implementation, while real experiments\
    \ require\na swarm of drones with communication equipment.\n4.3. Energy\nConcerning\
    \ energy consumption, reducing UAV and payload weight seems to be more\nsigniﬁcant\
    \ than coming up with communication protocols for improved energy efﬁciency.\n\
    Regarding in-ﬂight energy collection mechanisms, radio energy harvesting may gather\n\
    enough energy to charge a sensor battery, but it does not generate enough energy\
    \ to charge\na drone considerably. However, solar panels can be an alternative\
    \ as long as they do not\nincrease UAV weight beyond efﬁcient levels.\nSensors\
    \ 2023, 23, 2403\n21 of 25\nTables 11 and 12 present a summary of the advantages\
    \ and disadvantages of using\nLoRa in FANETs.\nTable 11. Advantages and disadvantages\
    \ of using LoRa in FANETs by aspect.\nAspect\nAdvantages\nDisadvantages\nCommunications\n\
    •\nLonger range\n•\nAffordability\n•\nWorks on unlicensed frequency bands\n•\n\
    Open above physical layer\n•\nLower data rate\n•\nLack of standardized upper-layer\
    \ protocols suited\nfor a mesh topology\nMobility [98]\n•\nStatic Doppler shift\
    \ immunity\n•\nIt might require mitigation techniques at the\nphysical layer for\
    \ dynamic Doppler shift\nEnergy\n•\nLower energy consumption\n•\nEnergy consumption\
    \ might be lower than\nnecessary for higher data rate applications\nTable 12.\
    \ Advantages and disadvantages of using LoRa in FANETs by type of link.\nLink\n\
    Advantages\nDisadvantages\nAir-to-air\n•\nLonger range\n•\nAffordability\n•\n\
    Lower energy consumption\n•\nLower data rate\n•\nLack of standardized upper-layer\
    \ protocols suited for a\nmesh topology\nAir-to-ground\n•\nAvailability for IoT\
    \ applications\n•\nLower energy consumption\n•\nNot as widespread as Wi-Fi or\
    \ cellular for\nhuman-oriented communications\n5. Conclusions\nThis work has presented\
    \ a review of LoRa and its usage in the context of Flying Ad\nHoc Networks. FANETs\
    \ have a wide range of potential applications, wherein one of the\nmain design\
    \ considerations is to ﬁnd a balance between data rate, communications range,\n\
    mobility, and energy consumption. Studying this type of network is challenging\
    \ because the\ncommunications, mobility, and energy dimensions must be evaluated\
    \ concurrently to obtain\naccurate and signiﬁcant results. Consequently, end-to-end\
    \ simulations require full network\nstack implementation, while practical experiments\
    \ require a swarm of drones. Though\nnot much research work has been conducted\
    \ on using LoRa as a mesh backhaul for air-to-\nair links, this technology can\
    \ be useful to maximize the communications range between\nUAVs in low-data-rate\
    \ applications such as WSN, remote control, ﬂight coordination,\nor drone identiﬁcation.\
    \ Furthermore, the use of hybrid architectures, in which LoRa is\ncombined with\
    \ more ubiquitous and higher-data-rate technologies, expands its usefulness\n\
    to applications such as search and rescue as well as short messaging. There is\
    \ also room\nfor developing communication protocols at the physical layer to achieve\
    \ increased data\nrates (when compared to LoRa) while maintaining a long communication\
    \ range. This\nmeans that energy utilization would be increased, but as LoRa is\
    \ at the lower end of energy\nconsumption, an increase could be possible without\
    \ affecting UAV ﬂight time considerably.\nRegarding communication protocols above\
    \ the physical layer, routing must respond to\nthe topology changes associated\
    \ with a highly mobile network to avoid unnecessary UAV\nmovement. At the same\
    \ time, mobility algorithms must optimize positioning, trajectory,\nand UAV selection,\
    \ with the purpose of maximizing ﬂight time and network performance\nwhile minimizing\
    \ energy consumption. Finally, the energy harvesting mechanisms must\nbe developed\
    \ and selected in such a way that they do not affect drone mobility.\nSensors\
    \ 2023, 23, 2403\n22 of 25\nAuthor Contributions: Conceptualization, W.D.P. and\
    \ H.K.; methodology, W.D.P. and H.K.; valida-\ntion, W.D.P., H.K., I.V. and Z.P.;\
    \ formal analysis, W.D.P. and H.K.; investigation, W.D.P.; resources,\nW.D.P.;\
    \ data curation, W.D.P.; writing—original draft preparation, W.D.P.; writing—review\
    \ and\nediting, H.K., I.V. and Z.P.; visualization, W.D.P., H.K., I.V. and Z.P.;\
    \ supervision, H.K.; project admin-\nistration, H.K.; funding acquisition, H.K.\
    \ All authors have read and agreed to the published version\nof the manuscript.\n\
    Funding: This research received no external funding.\nInstitutional Review Board\
    \ Statement: Not applicable.\nInformed Consent Statement: Not applicable.\nData\
    \ Availability Statement: Data is contained within the article.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nRappaport, T.S.\
    \ The wireless revolution. IEEE Commun. Mag. 1991, 29, 52–71. Available online:\
    \ https://ieeexplore.ieee.org/\ndocument/109666 (accessed on 2 September 2022).\
    \ [CrossRef]\n2.\nGeorge, T.D. Enabling the wireless revolution. In Proceedings\
    \ of the 1993 International Symposium on VLSI Technology, Systems,\nand Applications,\
    \ Taipei, Taiwan, 12–14 May 1993; p. 7.\n3.\nGazis, V.; Görtz, M.; Huber, M.;\
    \ Leonardi, A.; Mathioudakis, K.; Wiesmaier, A.; Zeiger, F.; Vasilomanolakis,\
    \ E. A survey of\ntechnologies for the internet of things. In Proceedings of the\
    \ 2015 International Wireless Communications and Mobile Computing\nConference\
    \ (IWCMC), Dubrovnik, Croatia, 24–28 August 2015; pp. 1090–1095.\n4.\nFirouzi,\
    \ F.; Farahani, B.; Weinberger, M.; DePace, G.; Aliee, F.S. IoT Fundamentals:\
    \ Deﬁnitions, Architectures, Challenges, and\nPromises. In Intelligent Internet\
    \ of Things: From Device to Fog and Cloud; Firouzi, F., Chakrabarty, K., Nassif,\
    \ S., Eds.; Springer\nInternational Publishing: Cham, Switzerland, 2020; pp. 3–50.\n\
    5.\nAnsere, J.A.; Han, G.; Liu, L.; Peng, Y.; Kamal, M. Optimal Resource Allocation\
    \ in Energy-Efﬁcient Internet-of-Things Networks\nwith Imperfect CSI. IEEE Internet\
    \ Things J. 2020, 7, 5401–5411. [CrossRef]\n6.\nJohnson, D.B. Routing in Ad Hoc\
    \ Networks of Mobile Hosts. In Proceedings of the 1994 First Workshop on Mobile\
    \ Computing\nSystems and Applications, Santa Cruz, CA, USA, 8–9 December 1994;\
    \ pp. 158–163.\n7.\nTavli, B.; Heinzelman, W. Introduction. In Mobile Ad Hoc Networks;\
    \ Tavli, B., Heinzelman, W., Eds.; Springer: Dordrecht, The\nNetherlands, 2006;\
    \ pp. 1–8.\n8.\nˇColakovi´c, A.; Hadžiali´c, M. Internet of Things (IoT): A review\
    \ of enabling technologies, challenges, and open research issues.\nComput. Netw.\
    \ 2018, 144, 17–39. Available online: https://www.sciencedirect.com/science/article/pii/S1389128618305243\n\
    (accessed on 2 September 2022). [CrossRef]\n9.\nFraccaroli, E.; Quaglia, D. Engineering\
    \ IoT Networks. In Intelligent Internet of Things: From Device to Fog and Cloud;\
    \ Firouzi, F.,\nChakrabarty, K., Nassif, S., Eds.; Springer International Publishing:\
    \ Cham, Switzerland, 2020; pp. 97–171.\n10.\nAdelantado, F.; Vilajosana, X.; Tuset-Peiro,\
    \ P.; Martinez, B.; Melia-Segui, J.; Watteyne, T. Understanding the Limits of\
    \ LoRaWAN.\nIEEE Commun. Mag. 2017, 55, 34–40. [CrossRef]\n11.\nAggarwal, S.;\
    \ Nasipuri, A. Survey and Performance Study of Emerging LPWAN Technologies for\
    \ IoT Applications. In Proceedings\nof the 2019 IEEE 16th International Conference\
    \ on Smart Cities: Improving Quality of Life Using ICT & IoT and AI (HONET-ICT),\n\
    Charlotte, NC, USA, 6–9 October 2019; p. 69.\n12.\nGhazali, M.H.M.; Teoh, K.;\
    \ Rahiman, W. A Systematic Review of Real-Time Deployments of UAV-Based LoRa Communication\n\
    Network. IEEE Access 2021, 9, 124817–124830. [CrossRef]\n13.\nSundaram, J.P.S.;\
    \ Du, W.; Zhao, Z. A Survey on LoRa Networking: Research Problems, Current Solutions,\
    \ and Open Issues. IEEE\nCommun. Surv. Tutor. 2020, 22, 371–388. [CrossRef]\n\
    14.\nCentelles, R.P.; Freitag, F.; Meseguer, R.; Navarro, L. Beyond the Star of\
    \ Stars: An Introduction to Multihop and Mesh for LoRa\nand LoRaWAN. IEEE Pervasive\
    \ Comput. 2021, 20, 63–72. [CrossRef]\n15.\nTran, H.P.; Jung, W.; Yoo, D.; Oh,\
    \ H. Design and Implementation of a Multi-Hop Real-Time LoRa Protocol for Dynamic\
    \ LoRa\nNetworks. Sensors 2022, 22, 3518. [CrossRef]\n16.\nBerto, R.; Napoletano,\
    \ P.; Savi, M. A LoRa-Based Mesh Network for Peer-to-Peer Long-Range Communication.\
    \ Sensors 2021, 21, 4314.\n[CrossRef]\n17.\nLiu, Y.; Liu, L.; Liang, J.; Chai,\
    \ J.; Lei, X.; Zhang, H. High-Performance Long Range-Based Medium Access Control\
    \ Layer Protocol.\nElectronics 2020, 9, 1273. [CrossRef]\n18.\nMacaraeg, K.C.V.G.;\
    \ Hilario, C.A.G.; Ambatali, C.D.C. LoRa-based Mesh Network for Off-grid Emergency\
    \ Communications. In\nProceedings of the 2020 IEEE Global Humanitarian Technology\
    \ Conference (GHTC), Seattle, WA, USA, 29 October–1 November\n2020; pp. 1–4.\n\
    Sensors 2023, 23, 2403\n23 of 25\n19.\nde Farias Medeiros, D.; Villarim, M.R.;\
    \ de Carvalho, F.B.S.; de Souza, C.P. Implementation and Analysis of Routing Protocols\
    \ for\nLoRa Wireless Mesh Networks. In Proceedings of the 2020 11th IEEE Annual\
    \ Information Technology, Electronics and Mobile\nCommunication Conference (IEMCON),\
    \ Vancouver, BC, Canada, 4–7 November 2020; p. 20.\n20.\nChache, F.M.; Maxon,\
    \ S.; Narayanan, R.M.; Bharadwaj, R. QoS Extension to a B.A.T.M.A.N. based LoRa\
    \ Mesh Network. In\nProceedings of the MILCOM 2021–2021 IEEE Military Communications\
    \ Conference (MILCOM), San Diego, CA, USA, 29\nNovember–2 December 2021; pp. 43–48.\n\
    21.\nAlmeida, N.C.; Rolle, R.P.; Godoy, E.P.; Ferrari, P.; Sisinni, E. Proposal\
    \ of a Hybrid LoRa Mesh/LoRaWAN Network. In Proceedings\nof the 2020 IEEE International\
    \ Workshop on Metrology for Industry 4.0 & IoT, Roma, Italy, 3–5 June 2020; pp.\
    \ 702–707.\n22.\nPham, V.D.; Kisel, V.; Kirichek, R.; Koucheryavy, A.; Shestakov,\
    \ A. Evaluation of A Mesh Network based on LoRa Technology.\nIn Proceedings of\
    \ the 2022 24th International Conference on Advanced Communication Technology\
    \ (ICACT), Pyeongchang,\nRepublic of Korea, 13–16 February 2022; pp. 1280–1285.\n\
    23.\nLundell, D.; Hedberg, A.; Nyberg, C.; Fitzgerald, E. A Routing Protocol for\
    \ LoRA Mesh Networks. In Proceedings of the 2018\nIEEE 19th International Symposium\
    \ on “A World of Wireless, Mobile and Multimedia Networks” (WoWMoM), Chania, Greece,\n\
    12–15 June 2018; pp. 14–19.\n24.\nLalle, Y.; Fourati, M.; Fourati, L.C.; Barraca,\
    \ J.P. Routing Strategies for LoRaWAN Multi-Hop Networks: A Survey and an\nSDN-Based\
    \ Solution for Smart Water Grid. IEEE Access 2021, 9, 168624–168647. [CrossRef]\n\
    25.\nDiaz Zayas, A.; Merino, P. The 3GPP NB-IoT system architecture for the Internet\
    \ of Things. In Proceedings of the 2017 IEEE\nInternational Conference on Communications\
    \ Workshops (ICC Workshops), Paris, France, 21–25 May 2017; pp. 277–282.\n26.\n\
    3GPP Releases. Available online: https://www.3gpp.org/speciﬁcations/releases (accessed\
    \ on 2 September 2022).\n27.\nLoRaWAN L2 1.0.4 Speciﬁcation. Available online:\
    \ https://resources.lora-alliance.org/technical-speciﬁcations/ts001-1-0-4\n-lorawan-l2-1-0-4-speciﬁcation\
    \ (accessed on 26 August 2022).\n28.\nLopez, V.H. Performance Evaluation of Long\
    \ Range (LoRa) Wireless RF Technology for the Internet of Things (IoT) Using Dragino\n\
    LoRa at 915 MHz. Master’s Thesis, University of North Florida, Jacksonville, FL,\
    \ USA, 2020.\n29.\nSaari, M.; bin Baharudin, A.M.; Sillberg, P.; Hyrynsalmi, S.;\
    \ Yan, W. LoRa—A survey of recent research trends. In Proceedings\nof the 2018\
    \ 41st International Convention on Information and Communication Technology, Electronics\
    \ and Microelectronics\n(MIPRO), Opatija, Croatia, 21–25 May 2018; p. 872.\n30.\n\
    Gkotsiopoulos, P.; Zorbas, D.; Douligeris, C. Performance Determinants in LoRa\
    \ Networks: A Literature Review. IEEE Commun.\nSurv. Tutor. 2021, 23, 1721–1758.\
    \ [CrossRef]\n31.\nAN1200.22 LoRa Modulation Basics. Available online: https://www.semtech.com/products/wireless-rf/lora-connect/sx1276#\n\
    documentation (accessed on 2 September 2022).\n32.\nLoRa Connect. Available online:\
    \ https://www.semtech.com/products/wireless-rf/lora-connect#resources (accessed\
    \ on 2\nSeptember 2022).\n33.\nSX1276/77/78/79 Datasheet.\nAvailable online:\n\
    https://www.semtech.com/products/wireless-rf/lora-connect/sx1276#\ndocumentation\
    \ (accessed on 2 September 2022).\n34.\nSX1272/73 Datasheet. Available online:\
    \ https://www.semtech.com/products/wireless-rf/lora-connect/sx1272#documentation\n\
    (accessed on 2 September 2022).\n35.\nSX1268 Long Range, Low Power, Sub-GHz RF\
    \ Transceiver Datasheet. Available online: https://www.semtech.com/products/\n\
    wireless-rf/lora-connect/sx1268#documentation (accessed on 2 September 2022).\n\
    36.\nSX1261/2 Long Range, Low Power, Sub-GHz RF Transceiver Datasheet. Available\
    \ online: https://www.semtech.com/products/\nwireless-rf/lora-connect/sx1261#documentation\
    \ (accessed on 2 September 2022).\n37.\nSX1280/SX1281 Datasheet.\nAvailable online:\n\
    https://www.semtech.com/products/wireless-rf/lora-connect/sx1280#\ndocumentation\
    \ (accessed on 16 September 2022).\n38.\nLoRaWAN Regional Parameters. Available\
    \ online: https://resources.lora-alliance.org/technical-speciﬁcations/rp002-1-0-0\n\
    -lorawan-regional-parameters (accessed on 27 September 2022).\n39.\nCook, K.L.B.\
    \ The Silent Force Multiplier: The History and Role of UAVs in Warfare. In Proceedings\
    \ of the 2007 IEEE Aerospace\nConference, Big Sky, MT, USA, 3–10 March 2007; pp.\
    \ 1–7.\n40.\nKeane, J.F.; Carr, S.S. A Brief History of Early Unmanned Aircraft.\
    \ Johns Hopkins APL Tech. Dig. 2013, 32, 558–571. Available\nonline: https://www.jhuapl.edu/TechDigest/Detail?Journal=J&VolumeID=32&IssueID=3\
    \ (accessed on 2 September 2022).\n41.\nSrivastava, A.; Prakash, J. Future FANET\
    \ with application and enabling techniques: Anatomization and sustainability issues.\n\
    Comput. Sci. Rev. 2021, 39, 100359. [CrossRef]\n42.\nGuillen-Perez, A.; Cano,\
    \ M. Flying Ad Hoc Networks: A New Domain for Network Communications. Sensors\
    \ 2018, 18, 3571.\n[CrossRef]\n43.\nChriki, A.; Touati, H.; Snoussi, H.; Kamoun,\
    \ F. FANET: Communication, mobility models and security issues. Comput. Netw.\
    \ 2019,\n163, 106877. [CrossRef]\n44.\nBekmezci, ˙I.; Sahingoz, O.K.; Temel, ¸S.\
    \ Flying Ad-Hoc Networks (FANETs): A survey. Ad Hoc Netw. 2013, 11, 1254–1270.\n\
    [CrossRef]\n45.\nWang, J.; Jiang, C. Introduction of Flying Ad Hoc Networks. In\
    \ Flying Ad Hoc Networks; Shen, X.S., Ed.; Springer: Singapore, 2022.\nSensors\
    \ 2023, 23, 2403\n24 of 25\n46.\nKhan, M.A.; Saﬁ, A.; Qureshi, I.M.; Khan, I.U.\
    \ Flying ad-hoc networks (FANETs): A review of communication architectures,\n\
    and routing protocols. In Proceedings of the 2017 First International Conference\
    \ on Latest trends in Electrical Engineering and\nComputing Technologies (INTELLECT),\
    \ Karachi, Pakistan, 15–16 November 2017; pp. 1–9.\n47.\nKhan, M.A.; Qureshi,\
    \ I.M.; Khanzada, F. A Hybrid Communication Scheme for Efﬁcient and Low-Cost Deployment\
    \ of Future\nFlying Ad-Hoc Network (FANET). Drones 2019, 3, 16. [CrossRef]\n48.\n\
    Al-Emadi, S.; Al-Mohannadi, A. Towards Enhancement of Network Communication Architectures\
    \ and Routing Protocols for\nFANETs: A Survey. In Proceedings of the 2020 3rd\
    \ International Conference on Advanced Communication Technologies and\nNetworking\
    \ (CommNet), Marrakech, Morocco, 4–6 September 2020; pp. 1–10.\n49.\nWu, Q.; Zhang,\
    \ M.; Dong, C.; Feng, Y.; Yuan, Y.; Feng, S.; Quek, T.Q.S. Routing protocol for\
    \ heterogeneous FANETs with mobility\nprediction. ChinaComm 2022, 19, 186–201.\
    \ [CrossRef]\n50.\nDe Donno, M.; Tange, K.; Dragoni, N. Foundations and Evolution\
    \ of Modern Computing Paradigms: Cloud, IoT, Edge, and Fog.\nIEEE Access 2019,\
    \ 7, 150936–150948. [CrossRef]\n51.\nGallego-Madrid, J.; Molina-Zarca, A.; Sanchez-Iborra,\
    \ R.; Bernal-Bernabe, J.; Santa, J.; Ruiz, P.M.; Skarmeta-Gómez, A.F. Enhancing\n\
    Extensive and Remote LoRa Deployments through MEC-Powered Drone Gateways. Sensors\
    \ 2020, 20, 4109. [CrossRef] [PubMed]\n52.\nBravo-Arrabal, J.; Toscano-Moreno,\
    \ M.; Fernandez-Lozano, J.; Mandow, A.; Gomez-Ruiz, J.; García-Cerezo, A. The\
    \ Internet of\nCooperative Agents Architecture (X-IoCA) for Robots, Hybrid Sensor\
    \ Networks, and MEC Centers in Complex Environments: A\nSearch and Rescue Case\
    \ Study. Sensors 2021, 21, 7843. [CrossRef] [PubMed]\n53.\nLakshmi, P.; Rejith,\
    \ G.; Toby, T.; Sai Shibu, N.B.; Rao, S.N. A Resilient IoT System Architecture\
    \ for Disaster Management in\nCollapsed Buildings. In Proceedings of the 2022\
    \ International Conference on Wireless Communications Signal Processing and\n\
    Networking (WiSPNET), Chennai, India, 24–26 March 2022; pp. 282–287.\n54.\nMarchese,\
    \ M.; Moheddine, A.; Patrone, F. UAV and Satellite Employment for the Internet\
    \ of Things Use Case. In Proceedings of\nthe 2020 IEEE Aerospace Conference, Big\
    \ Sky, MT, USA, 7–14 March 2020; pp. 1–8.\n55.\nSharma, R.; Arya, R. UAV based\
    \ long range environment monitoring system with Industry 5.0 perspectives for\
    \ smart city\ninfrastructure. Comput Ind Eng 2022, 168, 108066. [CrossRef]\n56.\n\
    Mujumdar, O.; Celebi, H.; Guvenc, I.; Sichitiu, M.; Hwang, S.; Kang, K. Use of\
    \ LoRa for UAV Remote ID with Multi-User\nInterference and Different Spreading\
    \ Factors. In Proceedings of the 2021 IEEE 93rd Vehicular Technology Conference\
    \ (VTC2021-\nSpring), Virtual, 25–28 April 2021; pp. 1–7.\n57.\nDelafontaine,\
    \ V.; Schiano, F.; Cocco, G.; Rusu, A.; Floreano, D. Drone-aided Localization\
    \ in LoRa IoT Networks. In Proceedings of\nthe 2020 IEEE International Conference\
    \ on Robotics and Automation (ICRA), Paris, France, 31 May–31 August 2020; pp.\
    \ 286–292.\n58.\nRahman, G.M.E.; Wahid, K.A. LDAP: Lightweight Dynamic Auto-Reconﬁgurable\
    \ Protocol in an IoT-Enabled WSN for Wide-Area\nRemote Monitoring. Remote Sens.\
    \ 2020, 12, 3131. [CrossRef]\n59.\nStellin, M. LoRa Networking in Mobile Scenarios\
    \ Using UAV Gateways. Master’s Thesis, Instituto Superior Técnico, Lisboa,\nPortugal,\
    \ 2018.\n60.\nStellin, M.; Sabino, S.; Grilo, A. LoRaWAN Networking in Mobile\
    \ Scenarios Using a WiFi Mesh of UAV Gateways. Electronics\n2020, 9, 630. [CrossRef]\n\
    61.\nDavoli, L.; Pagliari, E.; Ferrari, G. Hybrid LoRa-IEEE 802.11s Opportunistic\
    \ Mesh Networking for Flexible UAV Swarming. Drones\n2021, 5, 26. [CrossRef]\n\
    62.\nPan, M.; Chen, C.; Yin, X.; Huang, Z. UAV-Aided Emergency Environmental Monitoring\
    \ in Infrastructure-Less Areas: LoRa Mesh\nNetworking Approach. IEEE Internet\
    \ Things J. 2022, 9, 2918–2932. [CrossRef]\n63.\nZirak, Q.; Shashev, D.; Shidlovskiy,\
    \ S. Swarm of Drones Using LoRa Flying Ad-Hoc Network. In Proceedings of the 2021\n\
    International Conference on Information Technology (ICIT), Amman, Jordan, 14–15\
    \ July 2021; pp. 400–405.\n64.\nGarcía Algora, C.M.; Reguera, V.A.; Deligiannis,\
    \ N.; Steenhaut, K. Review and Classiﬁcation of Multichannel MAC Protocols for\n\
    Low-Power and Lossy Networks. Access 2017, 5, 19536–19561. [CrossRef]\n65.\nHuang,\
    \ P.; Xiao, L.; Soltani, S.; Mutka, M.W.; Xi, N. The Evolution of MAC Protocols\
    \ in Wireless Sensor Networks: A Survey.\nCOMST 2013, 15, 101–120. Available online:\
    \ https://ieeexplore.ieee.org/document/6188353 (accessed on 2 September 2022).\n\
    [CrossRef]\n66.\nArafat, M.Y.; Poudel, S.; Moh, S. Medium Access Control Protocols\
    \ for Flying Ad Hoc Networks: A Review. IEEE Sens. J. 2021, 21,\n4097–4121. [CrossRef]\n\
    67.\nKhisa, S.; Moh, S. Medium Access Control Protocols for the Internet of Things\
    \ Based on Unmanned Aerial Vehicles: A Comparative\nSurvey. Sensors 2020, 20,\
    \ 5586. [CrossRef]\n68.\nAmponis, G.; Lagkas, T.; Sarigiannidis, P.; Vitsas, V.;\
    \ Fouliras, P.; Wan, S. A survey on FANET routing from a cross-layer design\n\
    perspective. J. Syst. Arch. 2021, 120, 102281. [CrossRef]\n69.\nKhan, M.F.; Yau,\
    \ K.A.; Noor, R.M.; Imran, M.A. Routing Schemes in FANETs: A Survey. Sensors 2020,\
    \ 20, 38. [CrossRef]\n70.\nOubbati, O.S.; Lakas, A.; Zhou, F.; Güne¸s, M.; Yagoubi,\
    \ M.B. A survey on position-based routing protocols for Flying Ad hoc\nNetworks\
    \ (FANETs). Veh. Commun. 2017, 10, 29–56. [CrossRef]\n71.\nPasandideh, F.; da\
    \ Costa, J.P.J.; Kunst, R.; Islam, N.; Hardjawana, W.; Pignaton de Freitas, E.\
    \ A Review of Flying Ad Hoc Networks:\nKey Characteristics, Applications, and\
    \ Wireless Technologies. Remote Sens. 2022, 14, 4459. [CrossRef]\n72.\nLansky,\
    \ J.; Ali, S.; Rahmani, A.M.; Yousefpoor, M.S.; Yousefpoor, E.; Khan, F.; Hosseinzadeh,\
    \ M. Reinforcement Learning-Based\nRouting Protocols in Flying Ad Hoc Networks\
    \ (FANET): A Review. Mathematics 2022, 10, 3017. [CrossRef]\nSensors 2023, 23,\
    \ 2403\n25 of 25\n73.\nRovira-Sugranes, A.; Razi, A.; Afghah, F.; Chakareski,\
    \ J. A review of AI-enabled routing protocols for UAV networks: Trends,\nchallenges,\
    \ and future outlook. Ad Hoc Netw. 2022, 130, 102790. [CrossRef]\n74.\nWheeb,\
    \ A.H.; Nordin, R.; Samah, A.A.; Alsharif, M.H.; Khan, M.A. Topology-Based Routing\
    \ Protocols and Mobility Models for\nFlying Ad Hoc Networks: A Contemporary Review\
    \ and Future Research Directions. Drones 2022, 6, 9. [CrossRef]\n75.\nBautista,\
    \ O.; Akkaya, K.; Uluagac, A.S. Customized novel routing metrics for wireless\
    \ mesh-based swarm-of-drones applications.\nInternet Things 2020, 11, 100265.\
    \ [CrossRef]\n76.\nKumari, K.; Sah, B.; Maakar, S. A survey: Different mobility\
    \ model for FANET. Int. J. Adv. Res. Comput. Sci. Softw. Eng. 2015, 5,\n1170–1173.\n\
    77.\nEsraﬁlian, O.; Gangula, R.; Gesbert, D. Autonomous UAV-aided Mesh Wireless\
    \ Networks. In Proceedings of the IEEE INFOCOM\n2020—IEEE Conference on Computer\
    \ Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 6–9 July 2020;\n\
    pp. 634–640.\n78.\nJacewicz, M.; ˙Zugaj, M.; Gł˛ebocki, R.; Bibik, P. Quadrotor\
    \ Model for Energy Consumption Analysis. Energies 2022, 15, 7136. [CrossRef]\n\
    79.\nChowdhuri, S.; Banerjee, S.; Chaudhuri, S.S. Implementation of a novel Minimum\
    \ Energy Consume Secure Routing Protocol for\nreliable and energy efﬁcient rescue\
    \ operation of FANET. In Proceedings of the 2018 IEEE Applied Signal Processing\
    \ Conference\n(ASPCON), Kolkata, India, 7–9 December 2018; pp. 129–133.\n80.\n\
    Ayub, M.S.; Adasme, P.; Carrillo Melgarejo, D.; Lopes Rosa, R.; Zegarra Rodríguez,\
    \ D. Intelligent Hello Dissemination Model for\nFANET Routing Protocols. IEEE\
    \ Access 2022, 10, 46513–46525. [CrossRef]\n81.\nKhan, I.U.; Qureshi, I.M.; Aziz,\
    \ M.A.; Cheema, T.A.; Shah, S.B.H. Smart IoT Control-Based Nature Inspired Energy\
    \ Efﬁcient\nRouting Protocol for Flying Ad Hoc Network (FANET). IEEE Access 2020,\
    \ 8, 56371–56378. [CrossRef]\n82.\nMansour, H.S.; Mutar, M.H.; Aziz, I.A.; Mostafa,\
    \ S.A.; Mahdin, H.; Abbas, A.H.; Hassan, M.H.; Abdulsattar, N.F.; Jubair, M.A.\n\
    Cross-Layer and Energy-Aware AODV Routing Protocol for Flying Ad-Hoc Networks.\
    \ Sustainability 2022, 14, 8980. [CrossRef]\n83.\nCheriguene, Y.; Djellikh, S.;\
    \ Bousbaa, F.Z.; Lagraa, N.; Lakas, A.; Kerrache, C.A.; Karim Tahari, A.E. SEMRP:\
    \ An Energy-Efﬁcient\nMulticast Routing Protocol for UAV Swarms. In Proceedings\
    \ of the IEEE/ACM 24th International Symposium on Distributed\nSimulation and\
    \ Real Time Applications, Prague, Czech Republic, 14–16 September 2020; pp. 182–189.\n\
    84.\nMahmud, I.; Cho, Y.-Z. Adaptive Hello Interval in FANET Routing Protocols\
    \ for Green UAVs. IEEE Access 2019, 7, 63004–63015.\n[CrossRef]\n85.\nNamdev,\
    \ M.; Goyal, S.; Agarwal, R. An Optimized Communication Scheme for Energy Efﬁcient\
    \ and Secure Flying Ad-hoc\nNetwork (FANET). Wirel. Pers. Commun. 2021, 120, 1291–1312.\
    \ [CrossRef]\n86.\nTiurlikova, A.; Stepanov, N.; Mikhaylov, K. Improving the Energy\
    \ Efﬁciency of a LoRaWAN by a UAV-based Gateway. In\nProceedings of the 2019 11th\
    \ International Congress on Ultra Modern Telecommunications and Control Systems\
    \ and Workshops\n(ICUMT), Dublin, Ireland, 28–30 October 2019; pp. 1–6.\n87.\n\
    Moysiadis, V.; Lagkas, T.; Argyriou, V.; Sarigiannidis, A.; Moscholios, I.D.;\
    \ Sarigiannidis, P. Extending ADR mechanism for LoRa\nenabled mobile end-devices.\
    \ Simul. Model. Pract. Theory 2021, 113, 102388. [CrossRef]\n88.\nChoi, D.H.;\
    \ Kim, S.H.; Sung, D.K. Energy-efﬁcient maneuvering and communication of a single\
    \ UAV-based relay. IEEE Trans.\nAerosp. Electron. Syst. 2014, 50, 2320–2327. [CrossRef]\n\
    89.\nTP-LINK AC750 Wi-Fi Travel Router Model TL-WR902AC Datasheet. Available online:\
    \ https://static.tp-link.com/2020/202010/\n20201019/TL-WR902AC(EU&US)3.0_Datasheet.pdf\
    \ (accessed on 5 December 2022).\n90.\nHOPERF RFM95W/96W/98W Datasheet V2.0. Available\
    \ online: https://www.hoperf.com/modules/lora/RFM95.html (ac-\ncessed on 5 December\
    \ 2022).\n91.\nRaspberry Pi 4 Computer Model B Product Brief. Available online:\
    \ https://datasheets.raspberrypi.com/rpi4/raspberry-pi-4-\nproduct-brief.pdf (accessed\
    \ on 5 December 2022).\n92.\nPARROT ANAFI USA Technical Speciﬁcations V1.5.3.\
    \ Available online: https://www.parrot.com/assets/s3fs-public/2022-01/\nwhite-paper-anaﬁ-usa-v1.5.3_en.pdf\
    \ (accessed on 5 December 2022).\n93.\nJi, B.; Li, Y.; Zhou, B.; Li, C.; Song,\
    \ K.; Wen, H. Performance Analysis of UAV Relay Assisted IoT Communication Network\n\
    Enhanced With Energy Harvesting. IEEE Access 2019, 7, 38738–38747. [CrossRef]\n\
    94.\nYang, Z.; Xu, W.; Shikh-Bahaei, M. Energy Efﬁcient UAV Communication with\
    \ Energy Harvesting. IEEE Trans. Veh. Technol. 2020,\n69, 1913–1927. [CrossRef]\n\
    95.\nCitroni, R.; Di Paolo, F.; Livreri, P. A Novel Energy Harvester for Powering\
    \ Small UAVs: Performance Analysis, Model Validation\nand Flight Results. Sensors\
    \ 2019, 19, 1771. [CrossRef]\n96.\nAyoub, W.; Samhat, A.E.; Nouvel, F.; Mroue,\
    \ M.; Prevotet, J. Internet of Mobile Things: Overview of LoRaWAN, DASH7, and\n\
    NB-IoT in LPWANs Standards and Supported Mobility. IEEE Commun. Surv. Tutor. 2019,\
    \ 21, 1561–1581. [CrossRef]\n97.\nSARA-N2 Series Datasheet. Available online:\
    \ https://content.u-blox.com/sites/default/ﬁles/SARA-N2_ProductSummary_\n(UBX-16014015).pdf\
    \ (accessed on 5 December 2022).\n98.\nAmeloot, T.; Moeneclaey, M.; Van Torre,\
    \ P.; Rogier, H. Characterizing the Impact of Doppler Effects on Body-Centric\
    \ LoRa Links\nwith SDR. Sensors 2021, 21, 4049. [CrossRef]\nDisclaimer/Publisher’s\
    \ Note: The statements, opinions and data contained in all publications are solely\
    \ those of the individual\nauthor(s) and contributor(s) and not of MDPI and/or\
    \ the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury\
    \ to\npeople or property resulting from any ideas, methods, instructions or products\
    \ referred to in the content.\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/23/5/2403/pdf?version=1677204312
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'LoRa Technology in Flying Ad Hoc Networks: A Survey of Challenges and Open
    Issues'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
