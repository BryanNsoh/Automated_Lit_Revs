- DOI: https://doi.org/10.23919/fruct.2018.8588086
  analysis: '>'
  authors:
  - Ivan Zyrianoff
  - Alexandre Heideker
  - Dener Silva
  - Carlos Kamienski
  citation_count: 15
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathZoom.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2018
    23rd Conference of Open ... Scalability of an Internet of Things Platform for
    Smart Water Management for Agriculture Publisher: IEEE Cite This PDF Ivan Zyrianoff;
    Alexandre Heideker; Dener Silva; Carlos Kamienski All Authors 15 Cites in Papers
    402 Full Text Views Abstract Document Sections I. Introduction II. Background
    and Related Work III. Smart Water Management Platform IV. Research Design and
    Methods V. Results Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: The emergence of a new breed of smart applications requires
    middleware platforms that enable the rapid development of IoT-based solutions,
    which can be hosted partially in fog nodes, as well as in a traditional cloud
    datacenter. Currently, there is no scalable de facto open IoT platform but the
    European Commission is pushing FIWARE to fill this gap. We analyzed the performance
    of FIWARE under different platform configurations comparing fog/cloud and cloud-only
    scenarios for precision irrigation in smart farming. Our results reveal interesting
    and non-intuitive findings, such as that fog computing does not always improve
    the overall system performance and in some cases it even makes it worse. Also,
    the network between the farm and the cloud datacenter causes some unexpected differences
    between different scenarios. Published in: 2018 23rd Conference of Open Innovations
    Association (FRUCT) Date of Conference: 13-16 November 2018 Date Added to IEEE
    Xplore: 27 December 2018 ISBN Information: Print on Demand(PoD) ISSN: 2305-7254
    DOI: 10.23919/FRUCT.2018.8588086 Publisher: IEEE Conference Location: Bologna,
    Italy SECTION I. Introduction The Internet of Things (IoT) [15] and the billions
    of sensors that will be deployed in the next decade [5], as well as novel associated
    technological breakthroughs, have been enabling the emergence of a new breed of
    smart applications and services for the benefic or our society in different domains
    or verticals, such as smart farming, smart cities, smart healthcare and smart
    industries. Building interoperable IoT services and applications requires a set
    of middleware components and system development, deployment and operation tools
    and platforms, In order to avoid developing extremely focused and vertical IoT
    applications not able to interact with other applications, common and generic
    middleware services used by different application domains become necessary. The
    widespread availability of IoT-based applications requires adequate platforms
    for both development and operation phases. The former for releasing developers
    from the need of mastering different technologies outside their core business
    and that do not add value to the process [7]. The latter for freeing organizations
    from the need of deploying and testing customized platforms for supporting the
    operation of IoT-based applications. There are some IoT platforms available today,
    both open source and proprietary [4]. There is a tradeoff in the deployment of
    such platforms, which traditionally are hosted in cloud datacenters, but are slowly
    considered to be partially moved to edge infrastructure closer to the users, which
    is known as fog computing [2]. Although many IoT platforms exist today, the arena
    is not clear regarding the suitability of them for the different deployment scenarios
    for different smart applications. IoT tools and platforms must provide an end-to-end
    treatment for the data path, since data is generated by sensors, transmitted to
    the storage place, processed by smart algorithms, decisions are made, which fire
    actions that are finally forwarded to actuators as commands aimed at changing
    some configuration. Also, scalability is a major concern for IoT platforms. It
    has been shown that different architectural choices of IoT platforms affect system
    scalability and that automatic real time decision-making is feasible in an environment
    composed of dozens of thousands of sensors continuously transmitting data [16].
    Currently, there is no scalable de facto open IoT platform but the European Commission
    is pushing FIWARE to fill this gap. The SWAMP project develops and assesses an
    IoT-based smart water management platform for precision irrigation in agriculture
    with a hands-on approach that focuses on pilots in Italy, Spain and Brazil [9].
    The same underlying platform can be customized to different pilots considering
    different countries, climate, soil, and crops. The SWAMP platform may be implemented
    in a range of deployment configurations involving both cloud and fog environments.
    In this paper, we analyze the performance of FIWARE under different platform configurations
    comparing fog/cloud and cloud-only scenarios for precision irrigation using one
    of the SWAMP pilots as the evaluation scenario. Experiments consisted simulated
    sensors sending messages to FIWARE, deployed both in a fog/cloud and a cloud-only
    configuration mode. We performed experiments with a large number of probes simultaneously
    sending messages to the platform, in order to verify and understand it scalability.
    Security and privacy aspects are key components for making it possible to emergence
    of a true market for such IoT platforms for precision irrigation, such as SWAMP
    [8]. However, these aspects have not been evaluated here since they are outside
    the scope of this paper that focuses on performance and scalability of the FIWARE
    Platform when configured for the needs of SWAMP. Our results reveal interesting
    and non-intuitive outcomes, such as, that fog computing does not always improve
    the overall system performance. In some cases, the addition of a fog processing
    nodes even proved to worsen the performance. An important and unexpected factor
    in the experiments was the impact of the network. Initially, we believed that
    the network would equally impact both configurations (fog/cloud and cloud-only).
    However, the impact was much higher in the fog/cloud configuration. In the remainder
    of the paper, section II presents background and related work. Section III introduces
    SWAMP and the two scenarios for the MATOPIBA pilot. Section IV provides a detailed
    view of research design and methods. The key results are presented in section
    V, followed by discussion of lessons learned in section VI. Finally, section VII
    draws some conclusions and propose relevant future work. SECTION II. Background
    and Related Work This section introduces related background and related work.
    A. IoT and Fog Computing Fog computing is a fairly new paradigm aimed at dealing
    with challenges related to the huge amount of data that inevitably will be generated
    with the increasing utilization of IoT-based systems [2]. It solves serious problems
    such as decreasing latency from real time applications, decreasing data traffic
    between the network edge and core, and softening the processing burden of the
    cloud by performing load balancing. The metaphor comes from the fact that fog
    is a cloud but closer to the ground and to the people [13]. The fog is based on
    a highly virtualized platform that provides computing, storage and communication
    services between users and the datacenter where the cloud is hosted [1], by bringing
    services from the cloud closer to the users. Since its inception the fog has been
    envisioned for operating together with the cloud for making it possible to implement
    IoT-based smart applications. In other words, fog and IoT are related yet independent
    concepts, as the fog can deal with a broader variety of applications and IoT does
    need the fog to come true. A new technological trend that has been used for implementing
    the fog is container-based virtualization that provides a lightweight alternative
    to the traditional hypervisors [12]. Containers do not emulate the underlying
    hardware. Rather, the virtualized OS communicates directly with the host OS, which
    makes the appropriate calls to the real hardware. Lightweight virtualization minimizes
    the use of computational resources of the host machine, since there is no need
    to duplicate the operating system. B. The FIWARE Platform The FIWARE platform
    (fiware.org) has been attraction general attention for being a worldwide open
    source solution fostered and funded by the European Commission under Horizon 2020
    program. It is comprised of a series of software components called Generic Enablers
    (GE) that perform functions needed in a different variety of IoT-based applications
    for smart societies, focusing in cities, farming, industry, healthcare and sustainability.
    GEs can be used to build different applications that exchange information through
    a REST API following the OMA NGSI standard (openmobilealliance.org/release/NGSI),
    based on JSON. The central aspect of the FIWARE NGSI Context Management information
    model is the concept of entities and their attributes. Among the many GEs available
    by the FIWARE, some are considered the key enablers for smart applications. Here
    we only introduce the ones cited and used in our paper. Orion Context Broker:
    Orion is a publish/subscribe context broker, which makes it the main FIWARE GE
    and the heart of the platform. Orion provides an interface where clients can register
    entities and their attributes as well as producers/consumers of those entities.
    Orion only stores the latest version of entity attributes and it needs to work
    together with other GEs or applications in order to maintain historical data.
    Orion is available in fiware-orion.readthedocs.io. IDAS and IoT Agents: IDAS is
    an implementation of the Device Backend Management GE that comprises many IoT
    Agents that map data coming from sensors and going to actuators to the FIWARE
    NGSI information model to be stored in Orion and further processed by other GEs
    or external applications. Since low power sensors do not possess computing, storage
    and transmission capabilities for speaking NGSI, they use different IoT protocols
    such as MQTT, CoAP, Ultralight or LoRaWAN transport, which are converted into/from
    NGSI by IoT Agents. IDAS is available in catalogueserver.fiware.org/enablers/backend-device-managementidas.
    STH Comet: Short Time Historic, also known as Comet, works with Orion storing
    entity data as a time series that can be further used by applications or other
    GEs. STH Comet is available in fiware-sth-comet.readthedocs.io. The use of FIWARE
    by any organization or developer involves the installation of its GEs in an appropriate
    infrastructure where it can run, which might be standalone machines, public clouds
    or preferentially a private cloud using the OpenStack cloud manager. FIWARE has
    been used as a computing platform for many IoT-based applications, such as farming
    and environment [14]. Also, many large scale projects use FIWARE for IoT in agriculture,
    such as IoF2020 (iof2020.eu), as well as startups such as Breeze (breeze-technologies.de),
    Hop Ubiquitous (hopu.eu) and Agricolus (agricolus.com). C. Related Work Scalability
    is a major concern for IoT platforms. Numbers vary but in general it is forecasted
    that in the beginning of the 2020’s there will be about 30 billion connected devices
    [5]. It has been shown that different architectural choices of IoT platforms affect
    system scalability and that automatic real time decision-making is feasible in
    an environment composed of dozens of thousands of sensors continuously transmitting
    data [16]. The performance of FIWARE has been calling the attention its user community.
    A comprehensive study that proposes qualitative and quantitative metrics and evaluates
    the performance of various IoT platforms is presented by da Cruz et al. (2018)
    [4]. From 11 platforms analyzed by the qualitative approach, 5 were selected for
    the quantitative performance analysis, including FIWARE. However, since they adopted
    a generic approach, they did not go into the specifics of FIWARE-only a single
    Orion + STH platform configuration was considered – and they did not evaluate
    different infrastructures (as fog computing). Martínez et al. (2016) [11] gives
    a detailed description of the architecture of a testbed of the FIWARE platform
    configured for the precision agriculture domain, which differs from our approach,
    because their test application connects directly to FIWARE using NGSI JSON interface,
    while we included an IoT Agent for MQTT using a scalable IoT sensor simulator
    for generating synthetic data. Lastly, Cardoso et al. (2017) [3] compared the
    performance of FIWARE and their own implementation of ETSI M2M, under different
    running conditions, which makes it difficult to understand the tradeoffs of each
    platform. In this paper, we differ from previous work by evaluating five configurations
    of FIWARE and focusing on the scenarios of smart irrigation in agriculture from
    the SWAMP project [9]. SECTION III. Smart Water Management Platform The primary
    objective of the SWAMP project is to develop IoT based methods and approaches
    for smart water management in precision irrigation domain and to pilot them in
    four places, two pilots in Europe (Italy and Spain) and two pilots in Brazil [9],
    more information can be found in swampproject.org. Also, it is aimed at improving
    precision irrigation by increasing the awareness of the condition of the crop,
    by monitoring the field based on crop status and environment, and to adjust the
    irrigation prescription map accordingly. A. SWAMP Pilots The four SWAMP pilots
    are based on the similar technical solutions and deal with different crops and
    have different primary goals. CBEC Pilot (Bologna/Italy): the main objective of
    the Consorzio di Bonifica Emilia Centrale (CBEC) pilot is optimizing water distribution
    to the farms. Intercrop Pilot (Cartagena/Spain): Intercrop Iberica addresses several
    challenges since production is in a dry area and its primary goal is making a
    rational use of water. Guaspari Pilot (Espírito Santo do Pinhal / Brazil): The
    Guaspari Winery transfers the wine grape harvesting to the winter season (June-August)
    using irrigation techniques. The main goal for Guaspari is improving wine quality.
    MATOPIBA Pilot (Barreiras/Brazil): The Rio das Pedras Farm is located in the MATOPIBA
    region, and irrigation is mostly performed by center pivots. The main pilot goal
    is to implement and evaluate a smart irrigation system based on Variable Rate
    Irrigation (VRI) for center pivots in soybean production and save energy used
    in irrigation. The SWAMP project is developing a high-precision smart irrigation
    system concept for agriculture. The fundamental idea is to enable optimizations
    of irrigation, water distribution, and consumption based on a holistic analysis
    that collects information from all aspects of the system including even the natural
    water cycle and the cumulated knowledge related to growing particular plants.
    It results in savings to all parties as it guarantees the availability of water
    in situations where water supply is limited and also prevents over- and under-irrigation.
    A fundamental idea in SWAMP is to facilitate the replication of water management
    systems built on top of its platform with minimum redesign and redevelopment.
    Different layers of the architecture have components that are more generic and
    thus less difficult to be ported to other pilots, whereas others are more application-specific
    and thus require new development efforts whenever a new pilot is conceived. B.
    SWAMP MATOPIBA Scenario In this paper we will evaluate the performance of FIWARE
    when configured for the SWAMP MATOPIBA scenario depicted in Fig. 1 , which represents
    the center-pivot with variable-rate irrigation pilot. The scenario captures both
    the farm and SWAMP Platform viewpoints and represents a future vision and not
    the current situation. A center pivot irrigates a circular agricultural plot of
    100 hectares that alternates soybeans and cotton. The plot is further divided
    into different management zones, identified before the crop season and based on
    differences in the soil properties. Two general types of sensors collect data
    for the SWAMP system: a) stationary sensors within the soil at the root system
    depth that continuously measure metrics such as temperature and moisture, and;
    b) drones acting as flying sensors equipped with thermal/multispectral cameras
    or working as data mules by collecting sensor data and transmitting to the farm’s
    office. The center pivot is electrified to make it able to control the variable
    rate irrigation sprinklers (actuators) and thus it can also be equipped with processing
    and communication capabilities. No special energy harvesting is predicted for
    the sensing devices. We developed multiparametric probes for soil sensing, which
    include moisture, temperature and electrical conductivity sensors at three depths
    from the soil surface. Sampling and transmission rates will be adjusted from a
    few minutes up to hours, according to the time of the day and the application
    requirements. This way, the probe sensing electronics combined with ZigBee or
    LoRaWAN will be powered by extended lifespan batteries. The key difference between
    Fig. 1(a) and Fig. 1(b) is that the former includes a distributed fog/cloud configuration
    of the platform whereas the latter is solely based on the cloud for hosting all
    software components. Depending on different variables - such as farmers interest,
    availability of infrastructure, intended responsiveness to delay, robustness to
    disconnections, and cost/effectiveness – one or the other scenario may be more
    or less appropriate. For the MATOPIBA pilot, the preferred solution is the fog-based
    one, for providing autonomous processing capacity to the farm as it is located
    in a region where Internet connections may suffer periods of instability. Anyway,
    we evaluate both approaches because the cloud-based one might be used as well.
    In Fig. 1(a) both the center pivot and drones are deemed Field Fog Nodes (FFN)
    for the SWAMP architecture. Notably, the FFN at the center pivot acts as a sensor
    aggregation point and as a distributor of actuator commands received from the
    SWAMP system. FFNs communicate with the nearest fixed attachment point of the
    SWAMP platform, which usually is an on-premises Typically, when sensors are powered
    with LoRaWAN, the FFN will host the LoRaWAN Gateway and possibly the LoRaWAN Server
    and other supplementary features. The Fog Hub is located in the farm’s office.
    SWAMP allows FFNs to communicate directly with the platform running in the cloud,
    whenever this is the preferred deployment choice. The FFNs send data directly
    to the SWAMP platform located in the Fog Hub at the farm’s offices via different
    wireless technologies, which in Fig. 1(a) is WiFi. For this scenario, the functions
    performed by the SWAMP architecture are divided up into local fog and remote cloud
    components. Heavy processing, such as irrigation models and analytics using smart
    algorithms (i.e., machine learning), is performed in the cloud. External information
    is fed to the platform, such as crop yield models, meteorological data and historical
    data. On the other hand, Fig. 1(b) depicts a scenario where no fog is available
    and data generated by sensors are sent directly to the cloud via a typical cellular
    technology that might be 3G/4G or even NB-IoT. Fig. 1. SWAMP MATOPIBA scenario;
    a) Fog-cloud; b) Cloud-only Show All SECTION IV. Research Design and Methods A.
    Evaluation Scenario and Environment One of the main goals of this paper is to
    compare fog/cloud and cloud-only based approaches for smart water management.
    Therefore, based on the SWAMP MATOPIBA pilot specification ( Section 3), we designed
    a FIWARE-based IoT platform that involves obtaining sensor data values up to the
    point of they are transparently consumed by an application that can be deployed
    in the cloud and/or in the fog. The software modules depicted in Fig.3 and Fig.4
    are implemented by lightweight virtualization of Docker containers, including
    the FIWARE modules, whose container images can easily be obtained in that format.
    The other modules of this scenario are: SenSE: the Sensor Simulating Environment
    (SenSE, is an open-source large-scale IoT sensor data generator able to abstract
    real devices and to model different complex scenarios, such as smart farms [16].
    The tool is a traffic workload generator that emulates a huge number of heterogeneous
    sensors representing tens of thousands of IoT sensors sending data simultaneously
    via a typical IoT protocol (e.g., MQTT). Although the sensors are synthetic, the
    traffic is real. In our scenarios, SenSE generates probe data and represents the
    fog field node that forward sensor data to the platform. The source code can be
    download from github.com/ivanzy/SenSE-Sensor-Simulation-Environment. Mosquitto:
    Eclipse Mosquitto is an open source MQTT message broker. Available in mosquitto.org.
    MongoDB: a document-oriented NoSQL database. Available in mongodb.com. Consumer:
    Consumer is a special purpose Express.js web application that subscribes in Orion
    and receives sensor data from the probes. When Orion sends a message to the consumer’s
    API, a timestamp is recorded and is subtracted from the timestamp of the message,
    in such a way we obtain the elapsed time between the generation of the message
    until it reaches the Consumer. The sequence of processing steps and data flow
    starting from the sensor data generation and ending at the consumer is shown in
    Fig. 2. This data flow is deployed in both fog and cloud-only scenarios, depicted
    in Fig. 1. SenSE generates sensor (probe) data and sends it to Mosquitto MQTT
    broker; IoT Agent receives the probe messages from the MQTT broker, stores it
    in MongoDB, translates them to the NGSI format, and finally sends it to Orion
    through HTTP protocol; Orion Context Broker receives NGSI data from the IoT Agent,
    updates entity values, stores them in MongoDB, and sends them to the subscribed
    applications through HTTP protocol and structured as NGSI; Data is delivered to
    the consumer, which stores it and calculates the elapsed since the message was
    generated in the probe (by SenSE), the consumer is subscribed to be notified from
    all probe sensors updates. Fig. 2. Processing steps and data flow Show All In
    the cloud-only experiments ( Fig.3) the sensor data is directed sent to the cloud,
    where all modules are in the same physical machine. Since both Orion and IoT Agent
    are in the same VM, both use the same MongoDB instance. In the fog experiments,
    the first two steps of processing occur in the fog node, which means that the
    MQTT broker and the IoT Agent run in the edge device, and the Orion and Consumer
    are executed in a VM in the cloud. This configuration needs a MongoDB instance
    in each machine, where the fog hosts the IoT Agent and cloud hosts Orion and the
    Consumer. In order to fully understand the evaluation scenario, one needs to comprehend
    the data model of the probe messages. We adopted the Ultralight 2.0 (UL) protocol
    – a lightweight text based protocol aimed to constrained devices and communications
    where the bandwidth and device memory may be limited resources [6]. Each probe
    consists of a set of seven sensors of three different types: Three soil temperature
    sensors in different depths; Three soil moisture sensors in different depths;
    One soil electrical conductivity sensor. Each probe sends a message every 10 minutes
    using the UL protocol over MQTT. The structure of each message is: t1|v|t2|v|t3|v|m1|v|m2|v|m3|v|c|v|ts|v
    View Source where: t1, t2, t3: temperature sensors in different depths; m1, m2,
    m3: moisture sensors in different depths; c: electrical conductivity of the soil;
    ts: timestamp of message generation; v: value of the metric. Fig.3 and Fig.4 show
    the two evaluation scenarios, cloud-only and fog/cloud, respectively. We performed
    the experiments in a lab testbed – all the VMs in the same LAN - and using a network
    emulator (WANem – available to download at wanem.sourceforge.net) to consider
    the impact of network parameters between the place where the data is generated
    (in the farm, where the sensors and fog nodes are located) and the place it is
    processed (the cloud, usually located in some datacenters placed in big cities).
    Although the case where the machines representing the fog and the cloud are in
    the same LAN does not adequately portray the reality, it is important to further
    understand the behavior of the IoT platform and what are the impacts of a constrained
    network. Fig. 3. Cloud/Only FIWARE-SWAMP Evaluation Scenarios – with and without
    WAN Show All Fig. 4. Fog/Cloud FIWARE-SWAMP Evaluation Scenarios – with and without
    WAN Show All The experiments were performed in a private cloud environment implemented
    with OpenStack in a lab testbed. As the experiments were in our own private cloud,
    we could assure that they did not suffer from outside interference from other
    virtual machines running in the same physical servers. Both fog and cloud were
    implemented using virtual machines (VM) in OpenStack, though with very different
    configurations. We used the standard Amazon AWS VM configurations: cloud VM equivalent
    to a t2.medium instance (2vCPU - 4GB of RAM) and the fog VMs (both fog field node
    and fog hub) equivalent to a t2.small instance (1vCPU – 2 GB RAM). Our cloud was
    composed by 6 machines with the following configuration: Intel(R) Xeon(R) CPU
    E3-1240 V2 @ 3.40GHz - 8 cores and GB of RAM. Two different physical machines
    were used. B. Metrics There are two different metric used in our experiments:
    Average elapsed time: the average time elapsed since a sensor data point is generated
    in the probe until it reaches the consumer application. Basically, we are interested
    in the time elapsed since the data is collected until it is ready to be used by
    another application – such as a dashboard or an analytics module; System metrics:
    CPU and memory usage per Docker container, which allows us to observed each application,
    obtained by docker stats command every 5 seconds. C. Experiments Experiments consisted
    of SenSE simulating probes and sending messages to the IoT platform, running in
    the cloud-only configuration or in the fog/cloud configuration. We performed experiments
    with a large number of probes simultaneously sending messages to the platform,
    in order to verify and understand it scalability. Table I shows the factors and
    levels used in the performance analysis. Our experiments varied all factors with
    all levels, consisting of 16 different possibilities. Each experiment took 2 minutes
    and was replicated 30 times, totalizing 16 hours of running experiments. The asymptotic
    confidence intervals were calculated with a confidence level of 99%. Table I Factors
    and Levels To configure the emulated WAN, we tried to replicate a connection from
    a farm to a cloud. Therefore, we made a simple experiment in order to obtain the
    parameters used in the network emulator by pinging a public cloud using a 4G connection,
    and next we estimated the parameters as a 10 Mbps connection with 45ms of delay
    time and 5ms of jitter. SECTION V. Results The results for the elapsed time in
    all configurations are depicted in Fig.5, wherein one can observe the effect of
    increasing the workload in the fog/cloud and cloud-only scenarios. The platform
    remained stable during almost all experiments, except for the ones performed with
    a workload of 15,000 probes - that we consider being a very high workload. The
    high confidence interval in those experiments reveals this instability. Regarding
    the comparison between the experiments with the presence of the fog and the ones
    with only the cloud, it is essential to analyze networking issues. First we analyze
    those configurations without the network effects (no WANEm emulator), and next
    the impact of the WAN in the experiments. It is important to reinforce that experiments
    without considering the impact of the network are only for a baseline comparison
    and do not reflect real scenarios. In the experiments using a local network, the
    two approaches had equivalent results, since neither the fog nor the cloud were
    overloaded. The difference between the two approaches –fog and cloud - is that
    in the fog case some software modules (Docker containers) were moved to another
    machine (representing the fog), there was no improvement in the overall performance
    of the system when the cloud was not overloaded. Therefore, our experiments revealed
    that performing load balancing between two different machines does not improve
    the performance of the system. In the case where the cloud is overloaded (15,000
    probes), distributing the processing to another machine (the fog) should have
    improved the overall performance of the system. However, the results show that
    there is an overlap between the confidence interval of the experiments with fog
    and cloud with 15000 probes, with the fog experiments having a slightly better
    performance. This occurs due to the limited computational resources of the machine
    that represents the edge device, so that when the workload increases the fog node
    becomes the bottleneck. Experiments with the network emulator (WANem) had results
    that did not confirm our intuition. In the scenarios with a low workload (1,000
    and 5,000 probes), the cloud approach has a significant better performance than
    the fog. This occurs because in the cloud experiments the network traffic was
    composed of small MQTT packets, which did not impose a major constrain to the
    network. However, in the fog experiments the MQTT traffic is only send to the
    fog, which sends a very verbose NGSI/HTTP traffic via the network to the cloud.
    This traffic suffers much more with the network constrains (latency and limited
    bandwidth). Anyway, there is a clear trade-off between the cloud and fog approaches
    when processing becomes the bottleneck, instead of the network. The almost perfect
    balance occurs with experiments with 10,000 probes, in which both approaches achieved
    the same performance. For higher workloads, the fog has a slightly better performance
    than the cloud. The system metrics – RAM and CPU usage - for the cloud-only experiments
    are depicted in Fig. 6 and Fig. 7, for the fog/cloud experiments are showed in
    Fig. 8 and Fig. 9. Since the workload in the system is very similar with and without
    the network, we opted to portrait only the results performed considering the network,
    since they illustrate the whole set of experiments. The experiments using the
    fog approach, there were two MongoDB instances - in the fog to help the IoT Agent
    and in the cloud connected to Orion - are identified as Mongo-fog and Mongo-cloud
    respectively. Analyzing Fig. 6 and Fig. 8, it becomes clear that the container
    that demands more processing and it is the potential bottleneck of the system
    is MongoDB. Also, when comparing the cloud-only and fog/cloud results for the
    CPU usage, it is possible to infer that Orion imposes a higher workload in, since
    when the IoT Agent is on the fog node, MongoDB in the cloud has only an approximately
    20% decrease of CPU usage. Unlike the CPU usage, the memory usage has a stable
    behavior, even with the increase of the workload, as shown by Fig.7 for the cloud
    experiments, and in Fig. 9 for the fog experiments. However, there is also a decrease
    of approximately 20% of memory usage when the IoT-Agent is moved to the fog, with
    its own instance of MongoDB. Fig. 5. Response time for the cloud and fog configurations
    Show All Fig. 6. CPU usage in the cloud-only experiments Show All Fig. 7. Memory
    usage in the cloud-only experiments Show All Fig. 8. CPU usage in the fog/cloud
    experiments Show All Fig. 9. Memory usage in the fog/cloud experiments Show All
    SECTION VI. Discussion The experiments were successful in replicating a large-scale
    smart farm environment considering the number of sensors. Also, they showed that
    fog computing does not always improve the overall system performance. However,
    there are complex issues to evaluated in opting for a cloud or a fog approach
    beyond simply adding a machine in the edge of the network. There is a non-trivial
    trade-off between the given application, the available infrastructure and the
    system workload. In the SWAMP scenarios, we expect a smaller number of sensors,
    due to costs and farm sizes, and therefore the experiments that better represent
    real case scenarios are the ones with 1,000 and 5,000 probes. In those cases,
    the addition of a fog processing node proved to be a downgrade regarding performance.
    Nevertheless, the fog has others benefits that compensate the lack of performance.
    In farms in the inward countryside of Brazil, when there is Internet connectivity,
    it is frequently unstable and limited, suffering from frequent disconnections.
    In this case, the fog node is responsible to store sensor data and keep a subset
    of services online when there is no connection to the Internet. An important and
    unexpected factor in the experiments was the impact of the network. Initially,
    we believed that the network would equally impact both configurations fog and
    cloud). However, the impact was much higher in the fog configuration. This happens
    because the traffic of JSON/HTTP packets suffer more from network constrains than
    the lightweight UL 2.0 MQTT traffic. Therefore, when deploying a solution in a
    real environment, there is the need to analyze if the gain in processing part
    of the data in another device (the fog) will overcome the limitations imposed
    by the network. Another solution is to use a lightweight protocol when sending
    the data to the cloud form the fog. This set of experiments created higher awareness
    about the scalability tradeoffs of the FIWARE IoT platform. A major concern is
    regarding the default database used by Orion and the IoT Agent (i.e. MongoDB)
    that was the major bottleneck of the experiments. It is a known fact that MongoDB
    does scale as well as other NoSQL databases, such as Cassandra [10]. In the FIWARE
    documentation, there is no guide or configuration regarding using a different
    database for both software and it seems that they were hardcoded for working with
    MongoDB. FIWARE could potentially increase its scalability if it allows the of
    more efficient databases other than MongoDB. Another solution is to place MongoDB
    in a dedicated machine. Although FIWARE has a scalability ceiling due to MongoDB,
    it is suitable for most of the IoT scenarios in smart farms, being capable to
    handle 10,000 probes without major performance issues. It is proven to be a reliable
    tool with several advantages. It provides a standard communication format between
    all services in a given system through the NGSI information model. FIWARE also
    provides a transparent way to applications – such as dashboards and analytics
    – to consume sensor data. The IoT Agent can handle data from different sensors
    and translate them to a standard NGSI and automatically send this data to Orion,
    whose API is very flexible and able to add new sensors on-the-fly. Orion also
    proved to be a reliable and useful tool to manage context information, as it stores
    the last data point of each attribute and provides a simple API to consult it.
    Also, by using the subscribe operation in Orion, applications do not need to perform
    polling in the interesting devices. Rather, when data is changed, Orion notifies
    the subscribed application. SECTION VII. Conclusion We analyzed the performance
    of FIWARE under different platform configurations comparing fog/cloud and cloud-only
    scenarios for precision irrigation using one of the SWAMP pilots as the evaluation
    scenario. Our results reveal non-intuitive outcomes, such as, that fog computing
    does not always improve the overall system performance. In some cases, the addition
    of a fog processing nodes even proved to worsen the performance. Also, the network
    between the farm and the cloud datacenter causes some unexpected differences between
    different scenarios. The results presented in this paper reveal the tip of the
    iceberg. In order to fully understand the tradeoffs involved in using IoT platforms
    and particularly FIWARE, we need to broaden our scope and perform experiments
    in different configurations, pilots and in scenarios beyond smart farming. Authors
    Figures References Citations Keywords Metrics More Like This IoT based Irrigation
    and Water Logging monitoring system using Arduino and Cloud Computing 2019 International
    Conference on Vision Towards Emerging Trends in Communication and Networking (ViTECoN)
    Published: 2019 A Smart Manufacturing Service System Based on Edge Computing,
    Fog Computing, and Cloud Computing IEEE Access Published: 2019 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Scalability of an Internet of Things Platform for Smart Water Management
    for Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s19020276
  analysis: '>'
  authors:
  - Carlos Kamienski
  - Juha Pekka Soininen
  - Markus Taumberger
  - Ramide Dantas
  - Attilio Toscano
  - Tullio Salmon Cinotti
  - Rodrigo Filev Maia
  - André Torre Neto
  citation_count: 276
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nSmart Water Management Platform: IoT-Based\nPrecision\
    \ Irrigation for Agriculture †\nCarlos Kamienski 1,*\n, Juha-Pekka Soininen 2\n\
    , Markus Taumberger 2, Ramide Dantas 3\n,\nAttilio Toscano 4\n, Tullio Salmon\
    \ Cinotti 5\n, Rodrigo Filev Maia 6\nand André Torre Neto 7\n1\nCenter of Mathematics,\
    \ Computing and Cognition, Federal University of the ABC,\nSanto André 09210-580,\
    \ Brazil\n2\nVTT Technical Research Centre of Finland, FI-90571 Oulu, Finland;\
    \ Juha-Pekka.Soininen@vtt.ﬁ (J.-P.S.);\nMarkus.Taumberger@vtt.ﬁ (M.T.)\n3\nFederal\
    \ University of Pernambuco & Federal Institute of Pernambuco, Recife 50670-901,\
    \ Brazil;\nrasd@cin.ufpe.br\n4\nDepartment of Agricultural and Food Sciences (DISTAL),\
    \ University of Bologna, 40127 Bologna, Italy;\nattilio.toscano@unibo.it\n5\n\
    Advanced Research Center on Electronic Systems “Ercole De Castro” (ARCES), University\
    \ of Bologna,\n40127 Bologna, Italy; tullio.salmoncinotti@unibo.it\n6\nCentro\
    \ Universitário FEI, São Bernardo do Campo 09850-901, Brazil; rﬁlev@fei.edu.br\n\
    7\nBrazilian Agricultural Research Corporation (EMBRAPA), São Carlos 13560-970,\
    \ Brazil;\nandre.torre@embrapa.br\n*\nCorrespondence: cak@ufabc.edu.br; Tel.:\
    \ +55-11-4996-0179\n†\nThis paper is an extended version of “SWAMP: an IoT-based\
    \ Smart Water Management Platform for\nPrecision Irrigation in Agriculture” presented\
    \ at the 2018 Global Internet of Things Summit (GIoTS),\nBilbao, Spain, 4–7 June\
    \ 2018.\nReceived: 30 November 2018; Accepted: 7 January 2019; Published: 11 January\
    \ 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nAbstract:\
    \ The smart management of freshwater for precision irrigation in agriculture is\
    \ essential\nfor increasing crop yield and decreasing costs, while contributing\
    \ to environmental sustainability.\nThe intense use of technologies offers a means\
    \ for providing the exact amount of water needed by\nplants. The Internet of Things\
    \ (IoT) is the natural choice for smart water management applications,\neven though\
    \ the integration of different technologies required for making it work seamlessly\
    \ in\npractice is still not fully accomplished. The SWAMP project develops an\
    \ IoT-based smart water\nmanagement platform for precision irrigation in agriculture\
    \ with a hands-on approach based on\nfour pilots in Brazil and Europe. This paper\
    \ presents the SWAMP architecture, platform, and system\ndeployments that highlight\
    \ the replicability of the platform, and, as scalability is a major concern for\n\
    IoT applications, it includes a performance analysis of FIWARE components used\
    \ in the Platform.\nResults show that it is able to provide adequate performance\
    \ for the SWAMP pilots, but requires\nspecially designed conﬁgurations and the\
    \ re-engineering of some components to provide higher\nscalability using less\
    \ computational resources.\nKeywords: Internet of Things; smart water management;\
    \ smart agriculture; precision irrigation;\nIoT platform; FIWARE; linked data\n\
    1. Introduction\nAgriculture is the biggest consumer of freshwater in the world,\
    \ amounting to up to 70% of the\ntotal use [1], which makes the case for smart\
    \ water management in order to guarantee water and food\nsecurity to the world’s\
    \ population. Irrigation systems and ﬁeld application methods for the cultivation\n\
    of crops play an important role therein. In an attempt to avoid loss of productivity\
    \ caused by water\nSensors 2019, 19, 276; doi:10.3390/s19020276\nwww.mdpi.com/journal/sensors\n\
    Sensors 2019, 19, 276\n2 of 20\nstress (under-irrigation), farmers spray more\
    \ water than needed (over-irrigation) and as a result not\nonly productivity is\
    \ challenged but also water and energy are wasted. Precision irrigation, in its\
    \ turn,\ncan use water more efﬁciently and effectively, avoiding both under-irrigation\
    \ and over-irrigation.\nThe smart management of water for precision irrigation\
    \ in agriculture is essential for increasing crop\nyield and decreasing costs,\
    \ while at the same time contributing to the environmental sustainability.\nThe\
    \ Internet of Things (IoT) [2] emerges as the natural choice for smart water management\n\
    applications, even though the integration of different technologies required for\
    \ making it work\nseamlessly in practice is still not fully accomplished. The\
    \ emergence of IoT is a phenomenon that owes\nto the conjunction of several factors\
    \ such as inexpensive devices, low-power wireless technologies,\navailability\
    \ of cloud data centers for storage and processing, management frameworks for\
    \ dealing\nwith unstructured data from social networks, high-performance computing\
    \ resources in commodity\nplatforms, and computational intelligence algorithms\
    \ to deal with this monumental amount of data\n(aka big data analytics).\nCurrently,\
    \ there are some challenges to be overcome that still prevent the widespread use\
    \ of\nIoT for precision irrigation. Firstly, software development for IoT-based\
    \ smart applications, such as\nirrigation for agriculture, is not yet fully automatized\
    \ [3]. Secondly, advanced IoT software platforms\nare still missing, for automating\
    \ part of the process and integrating different technologies such as IoT,\nbig\
    \ data analytics, cloud computing and fog computing, for the deployment of pilot\
    \ applications for\nsmart water management. Thirdly, the integration of heterogeneous\
    \ and advanced sensors requires\nadequate standards and information models.\n\
    The SWAMP project developed and assessed an IoT-based smart water management platform\n\
    for precision irrigation in agriculture with a hands-on approach based on four\
    \ pilots in Brazil, Italy\nand Spain [4]. The SWAMP Platform can be conﬁgured\
    \ and deployed in different ways thus making\nup different SWAMP Systems, customized\
    \ to deal with the requirements and constraints of different\nsettings, countries,\
    \ climate, soils, and crops, which requires a good deal of ﬂexibility to adapt\
    \ to a\nrange of deployment conﬁgurations involving a varied mix of technologies.\n\
    This paper presents the SWAMP project, its architecture, platform and pilots,\
    \ as well as a\nscenario-based development process of derived systems. The SWAMP\
    \ layered architecture considers\nthree categories of services to ensure its replication\
    \ and adaptability. Entirely replicable services\ndeal with IoT services, storage\
    \ services, and data analytics and machine learning. Fully customizable\nservices\
    \ deal with water data management issues that specialize generic analytic services\
    \ into particular\ntechniques for different types of irrigation and water distribution.\
    \ Finally, application speciﬁc services\nrequire higher development effort since\
    \ they serve particular farms.\nThe SWAMP Platform contains the mainstream components\
    \ of FIWARE [5] and semantic features\nprovided by a SPARQL-based context engine\
    \ [6]. The platform may be deployed in a range of\ndifferent conﬁgurations for\
    \ component placement in the cloud or in the fog, involving the use of IoT\ncommunication\
    \ technologies and smart algorithms and analytics in the cloud, and fog-based\
    \ smart\ndecisions located on the farm premises. This is aimed at experimenting\
    \ with different deployment\npossibilities of the SWAMP Platform and providing\
    \ additional insights in terms of the replicability\nand adaptability of its components\
    \ to different settings. In other words, experimenting different\ndeployment conﬁgurations\
    \ is an important step for speeding up the learning process on how to deal\nwith\
    \ such a platform.\nAs scalability is a major concern for IoT applications, a\
    \ performance analysis of key software\ncomponents of its FIWARE-powered platform\
    \ was conducted, personalized for each pilot scenario.\nThe results show that\
    \ this platform can deal with the requirements of the pilots, but scalability\
    \ comes\nat a price. It was found that some FIWARE components must be ﬁne-tuned\
    \ to provide improved\nperformance and other ones must be completely re-engineered\
    \ to provide higher scalability using less\ncomputational resources. In addition,\
    \ MongoDB was identiﬁed as the bottleneck of the FIWARE tested\ninstallation that\
    \ may cause system crashes.\nSensors 2019, 19, 276\n3 of 20\nThe contributions\
    \ of this paper are threefold. Firstly, the SWAMP approach that is the result\
    \ of\na collaborative interdisciplinary project involving researchers and practitioners\
    \ in two continents is\nintroduced. Secondly, different system deployments for\
    \ the SWAMP Platform are presented. Thirdly,\nthe results of a performance analysis\
    \ study that reveals important ﬁndings for the scalability of SWAMP\nIoT Platform\
    \ based on FIWARE are shown.\nIn the remainder of this paper, Section 2 introduces\
    \ background and related work. Section 3\nintroduces SWAMP concepts, while Section\
    \ 4 presents the four pilots and Section 5 details the system\ndeployment scenarios\
    \ for the SWAMP Platform. Section 6 presents performance analysis results\nfocusing\
    \ on scalability of the SWAMP Platform. Section 7 discusses the key ﬁndings and\
    \ results and\nﬁnally Section 8 draws conclusions and future work.\n2. Background\
    \ and Related Work\nTo the best of our knowledge, there is no open IoT-based Platform\
    \ speciﬁcally focused on precision\nirrigation for agriculture, so that a clear\
    \ comparison with SWAMP is not possible. On the other\nhand, IoT has many security\
    \ requirements, such as privacy, conﬁdentiality, integrity, authentication,\n\
    authorization and accounting [7], as well as the signiﬁcant challenges posed by\
    \ security threats to the\nsuccess of IoT platforms [8]. However, this is out\
    \ of the scope of this paper.\n2.1. IoT Systems for Precision Irrigation\nCurrent\
    \ open source IoT-based systems for precision irrigation are mostly theoretical\
    \ with limited\nproof of concept experiences. They are either too generic or too\
    \ speciﬁc and do not explicitly address\neasy system deployment for facilitating\
    \ replicability and streamlining the deployment of new systems.\nWhen it comes\
    \ to providing advanced features to water management, there are some isolated\
    \ initiatives\nnot necessarily connected to the existing platforms and architectures.\
    \ For example, the FIGARO project\naims at increasing water productivity and improving\
    \ irrigation practices through the development\nof a precision irrigation management\
    \ platform, but not directly involving IoT [9]. Also, Popovi´c\net al. [10] present\
    \ a case study of a specially designed and currently limited IoT-enabled platform\n\
    for collecting data in precision agriculture and ecological monitoring domains.\
    \ Agri-IoT [11] is a\ntheoretical IoT-based framework for data analytics and real-time\
    \ processing for smart farming that\nshares some similarities with SWAMP.\nIn\
    \ the last years, much has been said about the prospective uses for IoT combined\
    \ with cloud-based\nservices and big data analytics. In Europe, there is a current\
    \ concern to understand the challenges\nand compelling impacts of IoT in large-scale\
    \ pilots for smart agriculture. Brewster et al. discuss the\ndeployment of those\
    \ large-scale pilots for IoT in agriculture and describe technologies and solutions\n\
    that might be present in some agrifood domains, such as dairy, fruit, arable crops\
    \ and meat & vegetable\nsupply chain [12].\nFIWARE has been used as a computing\
    \ platform for many IoT-based applications for smart\nfarming.\nRodriguez et al.\
    \ [13] compiled a short literature review and presented the Agricolus\nplatform\
    \ for precision farming. López-Riquelme et al. presented an implementation of\
    \ FIWARE\nfor a speciﬁc scenario of precision irrigation in agriculture in the\
    \ south of Spain [14], however, it is\nfocused on a speciﬁc use case, providing\
    \ details of devices and equipment, as well as irrigation\ntechniques. In contrast,\
    \ this paper presents an architecture and a platform based on FIWARE, as well\n\
    as conﬁgurations for system deployments in four scenarios.\nFog computing is a\
    \ fairly new paradigm aimed at dealing with challenges related to the huge\namount\
    \ of data that will be generated with the increasing utilization of IoT-based\
    \ systems [15].\nA new technological trend to implement the fog is container-based\
    \ virtualization, which provides a\nlightweight alternative to traditional hypervisors\
    \ [16]. FIWARE Generic Enablers are also distributed\nas Docker containers in\
    \ order to be used in the SWAMP fog computing approach.\nFogFlow\nprovides a programming\
    \ model for IoT-based applications for smart cities distributed over the cloud\n\
    and the fog located in the network edge [17]. Even though FogFlow is integrated\
    \ into FIWARE,\nSensors 2019, 19, 276\n4 of 20\nthe SWAMP project takes a clean\
    \ approach and uses directly the components provided by FIWARE,\nin combination\
    \ with new components developed speciﬁcally for the SWAMP precision agriculture\n\
    scenarios whenever needed.\n2.2. The FIWARE Platform\nFIWARE [5] has been attracting\
    \ general attention for being an open source EU-funded solution,\ncomprised of\
    \ a series of software components called Generic Enablers (GE) that perform functions\n\
    needed in IoT-based smart applications. GEs can be used to build different applications\
    \ that exchange\ninformation through a REST API following the OMA NGSI [18] standard\
    \ based on JSON. The central\naspect of the FIWARE NGSI Context Management information\
    \ model is the concept of entities and\ntheir attributes. There has been an ongoing\
    \ effort to develop a Context Information Management API\nbased on recent advances\
    \ in Linked Data (LD) [19] based on JSON-LD called NGSI-LD, deﬁned in\nRDF (Resource\
    \ Description Framework) [20]. Both NGSI and NGSI-LD are currently supported by\n\
    FIWARE, even though the NGSI-LD speciﬁcation is preliminary [21].\nSome FIWARE\
    \ GEs are considered key enablers, such as:\n•\nOrion: A publish/subscribe context\
    \ broker, considered the heart of FIWARE. Orion only stores\nthe latest version\
    \ of entity attributes and it needs to work together with other applications in\n\
    order to maintain historical data.\n•\nIoT Agent: Maps data coming from sensors\
    \ and going to actuators to the FIWARE NGSI information\nmodel to be stored in\
    \ Orion and further processed by other GEs or external applications.\n•\nQuantum\
    \ Leap: New GE that preserves Orion NGSI historical entity data as times series,\
    \ replacing\nthe old and less scalable STH Comet.\n•\nCygnus: A data processing\
    \ and distribution system for applications that require more elaborate\ndata ﬂow\
    \ management than simple historical data.\n•\nCosmos: A set of tools that interface\
    \ with popular Big Data Platforms.\nIt has been shown that different architectural\
    \ choices of IoT platforms affect system scalability\nand that automatic real-time\
    \ decision-making is feasible in an environment composed of dozens\nof thousands\
    \ of sensors continuously transmitting data [22]. Cruz et al. present a comprehensive\n\
    study that proposes qualitative and quantitative metrics and evaluates the performance\
    \ of various\nIoT platforms [23]. They did not focus on speciﬁc features of FIWARE\
    \ and did not evaluate different\nscenarios and infrastructures, such as fog computing.\
    \ Martínez et al. [24] give a detailed description\nof the architecture of a testbed\
    \ of the FIWARE platform conﬁgured for the precision agriculture\ndomain. It differs\
    \ from our approach because their test application connects directly to FIWARE\
    \ using\nNGSI JSON interface, while this paper uses an IoT Agent for MQTT and\
    \ an IoT sensor simulator for\ngenerating synthetic data.\nA preliminary performance\
    \ analysis of FIWARE for SWAMP revealed that fog computing does\nnot always improve\
    \ the overall system performance and can even make it worse [25]. This paper\n\
    differs from previous work as it evaluates different conﬁgurations of FIWARE and\
    \ its focus is on the\nscenarios of smart irrigation in agriculture deﬁned for\
    \ the SWAMP project.\n2.3. The SEPA Platform\nThe SPARQL Event Processing Architecture\
    \ (SEPA) [6] enables the detection and communication\nof data changes for the\
    \ Semantic Web of Things [26]. SEPA is based upon W3C SPARQL 1.1 [27],\na RDF\
    \ query language, where publishers and subscribers exchange data. The SEPA framework\n\
    offers developers a solution for implementing Dynamic Linked Data applications\
    \ and services.\nLinked Data refers to a set of best practices for publishing\
    \ and connecting structured data on\nthe Web [18]. Dynamic aspects of Linked Data\
    \ involve discovery, granularity level, description\nof changes, detection algorithms,\
    \ and notiﬁcation mechanisms. The SEPA broker is the core element\nof the architecture,\
    \ implementing a content-based publish-subscribe mechanism where publishers\n\
    Sensors 2019, 19, 276\n5 of 20\nuse SPARQL 1.1 Updates to generate events and\
    \ subscribers use SPARQL 1.1 Queries to subscribe to\nevents. The latter receives\
    \ SPARQL query results and subsequent notiﬁcations generated by changes\nin the\
    \ RDF knowledge base are expressed in terms of added and removed query results\
    \ since the\nprevious notiﬁcation.\n3. SWAMP: Concept and Overview\nThe SWAMP\
    \ project is developing a high-precision smart irrigation system concept for agriculture.\n\
    Within SWAMP, water management for agriculture is partitioned into three phases:\
    \ water reserve,\nwater distribution and water consumption. For Water Consumption\
    \ SWAMP provides real-time\nresponses for adapting irrigation as crop conditions\
    \ change. On the other hand, changes in water\ndistribution are performed in a\
    \ longer timescale. Distribution and Consumption management systems\nare integrated,\
    \ as water usage triggers water distribution. The management of water reserves\
    \ is\nnot considered.\nThe SWAMP Architecture is divided into ﬁve layers, as depicted\
    \ by Figure 1.\nSensors 2019, 19, x FOR PEER REVIEW \n6 of 21 \n \nFigure 1. SWAMP\
    \ Layered Architecture. \nDifferent layers of the architecture are comprised of\
    \ more generic components that are more \nprone to be ported to other settings,\
    \ whereas others are more application-specific and thus porting \nrequires new\
    \ development efforts. When it comes to the generality/specificity scale, the\
    \ SWAMP \narchitecture provides three categories of components: (a) Fully Replicable\
    \ Services: Layers 1, 2 and 3 \nof the architecture are generic enough to allow\
    \ them to be replicable in different settings; (b) Fully \nCustomizable Services:\
    \ Layer 4 provides services that are closer to the final application and therefore\
    \ \nmust be aware of a level of detail that may vary for different techniques\
    \ and models of water \ndistribution and irrigation, which may require customization\
    \ for every new deployment; (c) \nApplication Specific Services: Services in Layer\
    \ 5 address particularities of pilots. \n4. SWAMP Pilots \n4.1. MATOPIBA Pilot\
    \ (Luís Eduardo Magalhães—Brazil) \nThe MATOPIBA region encompasses the Brazilian\
    \ states of Maranhão (MA), Tocantins (TO), \nPiauí (PI) and Bahia (BA), and is\
    \ one of the most critical irrigated agriculture frontiers in the country, \n\
    located in the cerrado, a savannah climate subtype. Typical crops are soybeans,\
    \ corn and cotton \nwhere irrigation is mostly performed by center pivots. Figure\
    \ 2 depicts the map of Northeastern \nBrazil showing the precise location of the\
    \ pilot in the municipality of Luís Eduardo Magalhães (a), \nFigure 1. SWAMP Layered\
    \ Architecture.\n•\nLayer 1: Device & Communication: a variety of sensor and actuator\
    \ technologies to acquire soil\n(e.g., moisture), plant (e.g., growing stage)\
    \ and weather (e.g., air temperature), as well as LPWAN\ncommunication technologies\
    \ (e.g., LoRaWAN [28]) are abstracted in this layer. The SWAMP pilots\nuse commercial\
    \ sensors as well as a homemade multiparametric sensor probe. Also, commercial\n\
    drones have been used to take images but a speciﬁc drone is under development\
    \ since one of\nthe partners is a drone maker. A complete description of the sensing\
    \ infrastructure is outside the\nscope of this paper.\n•\nLayer 2: Data Acquisition,\
    \ Security & Management: protocols and software components for\ndata acquisition\
    \ (e.g., MQTT [29] and LoRa Server [30]) are the key characteristic of this layer,\n\
    in addition to security and device management functions. The FIWARE IoT Agent\
    \ GE also belongs\nto this layer as it translates the internal FIWARE data representation\
    \ in JSON from/to devices.\n•\nLayer 3: Data Management: contains software components\
    \ in charge of data storage, processing\nand distribution based on FIWARE GEs\
    \ (Orion, QuantumLeap, Cygnus and Cosmos) and SEPA\nSensors 2019, 19, 276\n6 of\
    \ 20\nSPARQL engine. A mapper between FIWARE JSON NGSI and SEPA RDF data models\
    \ also belong\nto this layer, as well as a mapper from external data sources,\
    \ such as historical agriculture yield\ndatabases and weather forecast services.\
    \ A distributed infrastructure composed of cloud servers\nand fog nodes work together\
    \ for dealing with massive amounts of data and make it available to\nthe upper\
    \ layers.\n•\nLayer 4: Water Irrigation & Distribution Models: traditional agriculture\
    \ models for estimating\nplant water needs using images generated by drones (crop-based\
    \ approach) and using soil sensors\nfor determining soil moisture (soil-based\
    \ approach) belong to this layer. Optimization models and\ntechniques for water\
    \ distribution based on plant water needs are essential whenever collective\n\
    networks replace individual water sources. Also, computational intelligence (e.g.,\
    \ machine\nlearning) works together with traditional models or in place of them.\n\
    •\nLayer 5: Water Application Services: irrigation services that make sense to\
    \ farmers and water\ndistributors via user interfaces.\nDifferent layers of the\
    \ architecture are comprised of more generic components that are more\nprone to\
    \ be ported to other settings, whereas others are more application-speciﬁc and\
    \ thus porting\nrequires new development efforts. When it comes to the generality/speciﬁcity\
    \ scale, the SWAMP\narchitecture provides three categories of components: (a)\
    \ Fully Replicable Services: Layers 1, 2\nand 3 of the architecture are generic\
    \ enough to allow them to be replicable in different settings;\n(b) Fully Customizable\
    \ Services: Layer 4 provides services that are closer to the ﬁnal application\n\
    and therefore must be aware of a level of detail that may vary for different techniques\
    \ and models\nof water distribution and irrigation, which may require customization\
    \ for every new deployment;\n(c) Application Speciﬁc Services: Services in Layer\
    \ 5 address particularities of pilots.\n4. SWAMP Pilots\n4.1. MATOPIBA Pilot (Luís\
    \ Eduardo Magalhães—Brazil)\nThe MATOPIBA region encompasses the Brazilian states\
    \ of Maranhão (MA), Tocantins (TO),\nPiauí (PI) and Bahia (BA), and is one of\
    \ the most critical irrigated agriculture frontiers in the country,\nlocated in\
    \ the cerrado, a savannah climate subtype. Typical crops are soybeans, corn and\
    \ cotton where\nirrigation is mostly performed by center pivots. Figure 2 depicts\
    \ the map of Northeastern Brazil\nshowing the precise location of the pilot in\
    \ the municipality of Luís Eduardo Magalhães (a), highlights\nthe Rio das Pedras\
    \ Farm Ofﬁce and the circular plot (b) that is irrigated by a center pivot (c).\n\
    Sensors 2019, 19, x FOR PEER REVIEW \n7 of 21 \n \n \n \n(a) \n(b) \n(c) \nFigure\
    \ 2. MATOPIBA Pilot: (a) Map of Brazil showing the four states where MATOPIBA\
    \ is located; \n(b) Rio das Pedras farm showing the farm office and the plot;\
    \ (c) Center pivot irrigation in the \nsoybeans plot. \n4.2. Guaspari Pilot (Espírito\
    \ Santo do Pinhal—Brazil) \nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality of \nEspírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce \nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots, \n\
    whose altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of\
    \ Southeastern Brazil \nshowing the precise location of the pilot (a), highlights\
    \ the winery and two selected plots (b), and the\nMA \nTO \nPI \nBA \nFigure 2.\
    \ MATOPIBA Pilot: (a) Map of Brazil showing the four states where MATOPIBA is\
    \ located;\n(b) Rio das Pedras farm showing the farm ofﬁce and the plot; (c) Center\
    \ pivot irrigation in the\nsoybeans plot.\nSensors 2019, 19, 276\n7 of 20\nThe\
    \ key challenge for the MATOPIBA pilot is to reduce energy consumption that represents\
    \ up\nto 30% of the production cost, by implementing and evaluating a smart irrigation\
    \ system based on\nVariable Rate Irrigation (VRI). VRI is able to provide the\
    \ same yield with about 30% of water usage [31]\n(up to 50% depending on the soil\
    \ type), which decreases the cost of energy.\n4.2. Guaspari Pilot (Espírito Santo\
    \ do Pinhal—Brazil)\nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality\nof Espírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce\nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots,\nwhose\
    \ altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of Southeastern\
    \ Brazil\nshowing the precise location of the pilot (a), highlights the winery\
    \ and two selected plots (b), and the\nvineyard featuring the drip irrigation\
    \ system during the harvest (c).\n \n \n \n \n(a) \n(b) \n(c) \nFigure 2. MATOPIBA\
    \ Pilot: (a) Map of Brazil showing the four states where MATOPIBA is located;\
    \ \n(b) Rio das Pedras farm showing the farm office and the plot; (c) Center pivot\
    \ irrigation in the \nsoybeans plot. \n4.2. Guaspari Pilot (Espírito Santo do\
    \ Pinhal—Brazil) \nThe Guaspari Winery is located in the Brazilian Mantiqueira\
    \ Mountain Range, municipality of \nEspírito Santo do Pinhal in the state of São\
    \ Paulo, where high technology is used to produce \nhigh-quality altitude wines.\
    \ The different terroirs that compose the vineyard are divided into plots, \n\
    whose altitude ranges vary between 800 and 1300 m. Figure 3 depicts the map of\
    \ Southeastern Brazil \nshowing the precise location of the pilot (a), highlights\
    \ the winery and two selected plots (b), and the \nvineyard featuring the drip\
    \ irrigation system during the harvest (c). \nThe key challenge of the Guaspari\
    \ pilot is to improve the quality of grapes and wines, by \nperforming automatic\
    \ measuring of soil water content at different soil depths and to provide quick\
    \ \nand accurate irrigation management information. The Guaspari Winery uses drip\
    \ irrigation in its \nvineyards. By applying a different irrigation map to each\
    \ vineyard zone, makes it possible to \nunderstand the differences of grape quality\
    \ in different soil types for making better wine blends. \n \n \n \n(a) \n(b)\
    \ \n(c) \nFigure 3. Guaspari Pilot: (a) Map of Brazil showing the location of\
    \ the Winery related to major cities; \n(b) Guaspari winery and the plots where\
    \ the pilot is located; (c) Drip irrigation in the vineyard. \n4.3. Intercrop\
    \ Pilot (Cartagena/Spain) \nThe Intercrop Pilot is located in Cartagena in the\
    \ south of Spain within the premises of \nIntercrop Iberica. Even though Cartagena\
    \ is located on the coast, it faces a serious water scarcity \nproblem, being\
    \ located in a semi-arid area with a very short rain season. A considerable amount\
    \ of \nwater comes from a desalination plant, what contributes to make it a scarce\
    \ good. These conditions \nmake the case for maintaining internal reservoirs and\
    \ making a very rational use of water, since \nthere is no guarantee that the\
    \ supply will meet the demand. Figure 4 depicts the map of Spain \nFigure 3. Guaspari\
    \ Pilot: (a) Map of Brazil showing the location of the Winery related to major\
    \ cities;\n(b) Guaspari winery and the plots where the pilot is located; (c) Drip\
    \ irrigation in the vineyard.\nThe key challenge of the Guaspari pilot is to improve\
    \ the quality of grapes and wines,\nby performing automatic measuring of soil\
    \ water content at different soil depths and to provide\nquick and accurate irrigation\
    \ management information. The Guaspari Winery uses drip irrigation\nin its vineyards.\
    \ By applying a different irrigation map to each vineyard zone, makes it possible\
    \ to\nunderstand the differences of grape quality in different soil types for\
    \ making better wine blends.\n4.3. Intercrop Pilot (Cartagena/Spain)\nThe Intercrop\
    \ Pilot is located in Cartagena in the south of Spain within the premises of Intercrop\n\
    Iberica. Even though Cartagena is located on the coast, it faces a serious water\
    \ scarcity problem, being\nlocated in a semi-arid area with a very short rain\
    \ season. A considerable amount of water comes from\na desalination plant, what\
    \ contributes to make it a scarce good. These conditions make the case for\nmaintaining\
    \ internal reservoirs and making a very rational use of water, since there is\
    \ no guarantee\nthat the supply will meet the demand. Figure 4 depicts the map\
    \ of Spain showing the precise location\nof the pilot (a), the plot entirely dedicated\
    \ to the pilot (b) and the sprinkler irrigation system in a\nspinach crop (c).\n\
    The key challenge of the Intercrop pilot is to reduce the water used in irrigation\
    \ and to maximize\nyield per amount of water. In the selected pilot plot two crops\
    \ are grown in the same season: spinach\nand lettuce, irrigated by portable sprinkler\
    \ and drip systems, respectively.\nSensors 2019, 19, 276\n8 of 20\n \nshowing\
    \ the precise location of the pilot (a), the plot entirely dedicated to the pilot\
    \ (b) and the \nsprinkler irrigation system in a spinach crop (c). \nThe key challenge\
    \ of the Intercrop pilot is to reduce the water used in irrigation and to \nmaximize\
    \ yield per amount of water. In the selected pilot plot two crops are grown in\
    \ the same \nseason: spinach and lettuce, irrigated by portable sprinkler and\
    \ drip systems, respectively. \n \n \n \n(a) \n(b) \n(c) \nFigure 4. Intercrop\
    \ Pilot: (a) Map of Spain showing the location of Intercrop Iberica; (b) Plot\
    \ where \nthe pilot is located; (c) Sprinkler irrigation in a spinach crop. \n\
    4.4. CBEC Pilot (San Michele/Fosdondo—Italy) \nThe Consorzio di Bonifica Emilia\
    \ Centrale (CBEC) is a reclamation consortium responsible for \nirrigation and\
    \ water drainage in the Emilia-Romagna Region in Northern Italy. The water is\
    \ \ndistributed to the farms by an intricate infrastructure composed of about\
    \ 3500 km of canals and \ndozens of pump stations. The irrigation network consists\
    \ of open channels on earth, and their filling \nuses substantial water volumes\
    \ that frequently are subject to a high loss rate, due to evaporation and \ninfiltration\
    \ through canal banks and bottom. Figure 5 depicts the map of Italy showing the\
    \ location \nof CBEC office in the municipality of Reggio Emilia (a), the San\
    \ Michele and Fosdondo areas where \nthe three pilot farms are located (b), and\
    \ an irrigation canal filled with water (c). \nThe key challenge of the CBEC Pilot\
    \ is to optimize water distribution to increase usage of water \npassing along\
    \ the canals, based on the real irrigation demand coming from three selected farms,\
    \ \nwhich grow different crops (vineyards and pears) and use different irrigation\
    \ systems. This \noptimization will allow CBEC to significantly reduce water waste\
    \ and energy used in pumps by \nadvanced management practices, and to optimize\
    \ the irrigation by monitoring the water balance at \nthe farm. \n \n(a) \n(b)\
    \ \n(c) \nFigure 5. CBEC Pilot: (a) Map of Italy showing the location of CBEC\
    \ office; (b) San Michele and \nFosdondo areas where the three pilot farms are\
    \ located; (c) Irrigation canal. \nFigure 4. Intercrop Pilot: (a) Map of Spain\
    \ showing the location of Intercrop Iberica; (b) Plot where the\npilot is located;\
    \ (c) Sprinkler irrigation in a spinach crop.\n4.4. CBEC Pilot (San Michele/Fosdondo—Italy)\n\
    The Consorzio di Boniﬁca Emilia Centrale (CBEC) is a reclamation consortium responsible\
    \ for\nirrigation and water drainage in the Emilia-Romagna Region in Northern\
    \ Italy. The water is distributed\nto the farms by an intricate infrastructure\
    \ composed of about 3500 km of canals and dozens of pump\nstations. The irrigation\
    \ network consists of open channels on earth, and their ﬁlling uses substantial\n\
    water volumes that frequently are subject to a high loss rate, due to evaporation\
    \ and inﬁltration\nthrough canal banks and bottom. Figure 5 depicts the map of\
    \ Italy showing the location of CBEC ofﬁce\nin the municipality of Reggio Emilia\
    \ (a), the San Michele and Fosdondo areas where the three pilot\nfarms are located\
    \ (b), and an irrigation canal ﬁlled with water (c).\n \n \n \n \n(a) \n(b) \n\
    (c) \nFigure 4. Intercrop Pilot: (a) Map of Spain showing the location of Intercrop\
    \ Iberica; (b) Plot where \nthe pilot is located; (c) Sprinkler irrigation in\
    \ a spinach crop. \n4.4. CBEC Pilot (San Michele/Fosdondo—Italy) \nThe Consorzio\
    \ di Bonifica Emilia Centrale (CBEC) is a reclamation consortium responsible for\
    \ \nirrigation and water drainage in the Emilia-Romagna Region in Northern Italy.\
    \ The water is \ndistributed to the farms by an intricate infrastructure composed\
    \ of about 3500 km of canals and \ndozens of pump stations. The irrigation network\
    \ consists of open channels on earth, and their filling \nuses substantial water\
    \ volumes that frequently are subject to a high loss rate, due to evaporation\
    \ and \ninfiltration through canal banks and bottom. Figure 5 depicts the map\
    \ of Italy showing the location \nof CBEC office in the municipality of Reggio\
    \ Emilia (a), the San Michele and Fosdondo areas where \nthe three pilot farms\
    \ are located (b), and an irrigation canal filled with water (c). \nThe key challenge\
    \ of the CBEC Pilot is to optimize water distribution to increase usage of water\
    \ \npassing along the canals, based on the real irrigation demand coming from\
    \ three selected farms, \nwhich grow different crops (vineyards and pears) and\
    \ use different irrigation systems. This \noptimization will allow CBEC to significantly\
    \ reduce water waste and energy used in pumps by \nadvanced management practices,\
    \ and to optimize the irrigation by monitoring the water balance at \nthe farm.\
    \ \n \n \n \n(a) \n(b) \n(c) \nFigure 5. CBEC Pilot: (a) Map of Italy showing\
    \ the location of CBEC office; (b) San Michele and \nFosdondo areas where the\
    \ three pilot farms are located; (c) Irrigation canal. \n5. SWAMP System Deployment\
    \ Scenarios \nFigure 5. CBEC Pilot: (a) Map of Italy showing the location of CBEC\
    \ ofﬁce; (b) San Michele and\nFosdondo areas where the three pilot farms are located;\
    \ (c) Irrigation canal.\nThe key challenge of the CBEC Pilot is to optimize water\
    \ distribution to increase usage of water\npassing along the canals, based on\
    \ the real irrigation demand coming from three selected farms, which\ngrow different\
    \ crops (vineyards and pears) and use different irrigation systems. This optimization\
    \ will\nallow CBEC to signiﬁcantly reduce water waste and energy used in pumps\
    \ by advanced management\npractices, and to optimize the irrigation by monitoring\
    \ the water balance at the farm.\n5. SWAMP System Deployment Scenarios\nIt is\
    \ useful to make a clear distinction between the SWAMP Platform and a SWAMP System.\n\
    The platform is a set of generic components depicted in Figure 1, used to build\
    \ SWAMP Systems.\nWhereas there is only one SWAMP Platform, each pilot requires\
    \ a system to be deployed to fulﬁll its\nspeciﬁc needs of irrigation or water\
    \ distribution. Generic components, mainly those from the lower\nSensors 2019,\
    \ 19, 276\n9 of 20\nlayers of the architecture belong to the platform and may\
    \ be deployed in different ways in any system.\nOn the other hand, speciﬁc components\
    \ such as user interfaces belong to the system.\n5.1. SWAMP Baseline Scenario\n\
    Figure 6 depicts a baseline deployment scenario for the SWAMP platform that includes\
    \ three\nkey components, which are the SWAMP Cloud, the SWAMP Fog Hub and SWAMP\
    \ Field Fog Node.\nThis scenario represents the most complete and distributed\
    \ version of the SWAMP Platform, which is\nnot necessarily deployed as is in the\
    \ four pilots. For example, a fog infrastructure is not necessary in\nevery system\
    \ deployment of the SWAMP platform.\n \nkey components, which are the SWAMP Cloud,\
    \ the SWAMP Fog Hub and SWAMP Field Fog Node. \nThis scenario represents the most\
    \ complete and distributed version of the SWAMP Platform, which \nis not necessarily\
    \ deployed as is in the four pilots. For example, a fog infrastructure is not\
    \ necessary \nin every system deployment of the SWAMP platform. \nFigure 6 also\
    \ highlights a hierarchical organization of the fog, divided into Fog Field Nodes\
    \ \n(FFN) and a Fog Hub in the farm office. A FFN has a stable power source and\
    \ provides data \ntransmission, storage and processing capabilities to the sensors\
    \ spread in a farm plot, i.e., behaving \nas an aggregation point for LPWAN devices\
    \ [28]. Irrigation systems like the center pivot can host a \nFFN or even drones.\
    \ Its implementation may be as simple as a LoRaWAN Gateway that forwards \ndata\
    \ to the Fog Hub or may include storage and processing. \nThe role played by the\
    \ Fog Hub may also vary depending on farmer’s requirements of \nrobustness to\
    \ Internet disconnections, which may be frequent in agriculture frontiers. The\
    \ \nfunctionalities provided by a Fog Hub may vary from a sensor aggregation point\
    \ to a full-fledged \nmini cloud data center if farmers are willing to have full\
    \ control of their irrigation systems. The \nSWAMP Cloud stores and processes\
    \ data and smart algorithms are based on existing agriculture \nmodels and on\
    \ novel computational intelligence techniques, such as machine learning. \n \n\
    Figure 6. SWAMP Baseline Scenario including SWAMP Cloud and SWAMP Fog (further\
    \ organized \ninto SWAMP Fog Hub and SWAMP Field Fog Node). \n5.2. SWAMP System\
    \ for the MATOPIBA Pilot \nThe deployment of the SWAMP Platform for the MATOPIBA\
    \ pilot has to deal with \ncommunication instability, distance from the farm office\
    \ to the center pivot, and even distance from \nFigure 6. SWAMP Baseline Scenario\
    \ including SWAMP Cloud and SWAMP Fog (further organized\ninto SWAMP Fog Hub and\
    \ SWAMP Field Fog Node).\nFigure 6 also highlights a hierarchical organization\
    \ of the fog, divided into Fog Field Nodes (FFN)\nand a Fog Hub in the farm ofﬁce.\
    \ A FFN has a stable power source and provides data transmission,\nstorage and\
    \ processing capabilities to the sensors spread in a farm plot, i.e., behaving\
    \ as an aggregation\npoint for LPWAN devices [28]. Irrigation systems like the\
    \ center pivot can host a FFN or even drones.\nIts implementation may be as simple\
    \ as a LoRaWAN Gateway that forwards data to the Fog Hub or\nmay include storage\
    \ and processing.\nThe role played by the Fog Hub may also vary depending on farmer’s\
    \ requirements of robustness\nto Internet disconnections, which may be frequent\
    \ in agriculture frontiers. The functionalities provided\nby a Fog Hub may vary\
    \ from a sensor aggregation point to a full-ﬂedged mini cloud data center\nif\
    \ farmers are willing to have full control of their irrigation systems. The SWAMP\
    \ Cloud stores\nand processes data and smart algorithms are based on existing\
    \ agriculture models and on novel\ncomputational intelligence techniques, such\
    \ as machine learning.\n5.2. SWAMP System for the MATOPIBA Pilot\nThe deployment\
    \ of the SWAMP Platform for the MATOPIBA pilot has to deal with communication\n\
    instability, distance from the farm ofﬁce to the center pivot, and even distance\
    \ from the farm to\nthe nearest downtown area A center pivot irrigates a circular\
    \ agricultural plot of 100 hectares that\nalternates soybeans and cotton and the\
    \ plot is further divided into different management zones based\non differences\
    \ in the soil properties. The center pivot controls the variable rate irrigation\
    \ sprinklers\nSensors 2019, 19, 276\n10 of 20\n(actuators). The authors developed\
    \ multiparametric probes for soil sensing, which include moisture,\ntemperature\
    \ and electrical conductivity sensors at three depths. In intensive agriculture\
    \ areas the plan\nis also to experiment ultra-low-power wireless sensor solutions\
    \ based on wake-up radios combined\nwith LoRaWAN [32].\nFigure 7 depicts the MATOPIBA\
    \ scenario where cloud and fog software components of the\nSWAMP Platform are\
    \ based on the SWAMP architecture (Figure 1). In order to represent different\n\
    system deployment possibilities, the picture shows two plots, where the topmost\
    \ plot uses a Field Fog\nNode (FFN) to aggregate sensor data and the bottommost\
    \ plot represents the sensors sending data\ndirectly to the Fog Hub. Currently,\
    \ both alternatives are under consideration but only one will be used\nin the\
    \ ﬁnal version of the pilot scenario.\n \nIn its simplest possible implementation,\
    \ the Field Fog Node only contains a LoRaWAN \ngateway. On the other hand, the\
    \ complexity of the communication and processing of sensor data is \ndealt with\
    \ by the Fog Hub. A LoRaWAN Gateway (located either in the FFN or in the Fog Hub)\
    \ \nforwards sensor data via a Mosquitto MQTT Broker [33] to a LoRa Server that\
    \ in turn sends the data \nto the FIWARE IoT Agent. The IoT Agent converts the\
    \ data format into NGSI, which goes to \nFIWARE Orion Context Broker. FIWARE Quantum\
    \ Leap is needed for different applications, such \nas the User Interface and\
    \ the Drone Platform. Also, a lightweight Fog Analytics component based on \n\
    simpler statistical techniques is used for computing the irrigation prescription\
    \ map whenever the \nInternet connection with the cloud is not available. \nThe\
    \ Cloud is represented with its essential components, which include a FIWARE central\
    \ \nContext Broker Orion connected (subscribed) to the Fog Orion. Complex processing,\
    \ such as \nirrigation models and analytics using smart algorithms (i.e., machine\
    \ learning), is performed in the \ncloud. FIWARE Cosmos is used for big data analytics.\
    \ Traditional models for precision irrigation, \nsuch as the FAO Penman-Monteith\
    \ method [34], are also provided and their results will be used \ntogether and\
    \ compared with machine learning algorithms for determining soil moisture. External\
    \ \ninformation such as crop yield models, weather forecasts and historical data,\
    \ is fed to the platform \nby specific NGSI Mappers. \n \nFigure 7. MATOPIBA Scenario\
    \ represented in the FIWARE-based SWAMP Platform. \n5.3. SWAMP System for the\
    \ Guaspari Pilot \nFigure 7. MATOPIBA Scenario represented in the FIWARE-based\
    \ SWAMP Platform.\nIn its simplest possible implementation, the Field Fog Node\
    \ only contains a LoRaWAN gateway.\nOn the other hand, the complexity of the communication\
    \ and processing of sensor data is dealt with\nby the Fog Hub. A LoRaWAN Gateway\
    \ (located either in the FFN or in the Fog Hub) forwards sensor\ndata via a Mosquitto\
    \ MQTT Broker [33] to a LoRa Server that in turn sends the data to the FIWARE\n\
    IoT Agent. The IoT Agent converts the data format into NGSI, which goes to FIWARE\
    \ Orion Context\nBroker. FIWARE Quantum Leap is needed for different applications,\
    \ such as the User Interface and the\nDrone Platform. Also, a lightweight Fog\
    \ Analytics component based on simpler statistical techniques\nis used for computing\
    \ the irrigation prescription map whenever the Internet connection with the cloud\n\
    is not available.\nThe Cloud is represented with its essential components, which\
    \ include a FIWARE central Context\nBroker Orion connected (subscribed) to the\
    \ Fog Orion. Complex processing, such as irrigation models\nand analytics using\
    \ smart algorithms (i.e., machine learning), is performed in the cloud. FIWARE\n\
    Cosmos is used for big data analytics. Traditional models for precision irrigation,\
    \ such as the FAO\nPenman-Monteith method [34], are also provided and their results\
    \ will be used together and compared\nwith machine learning algorithms for determining\
    \ soil moisture. External information such as crop\nyield models, weather forecasts\
    \ and historical data, is fed to the platform by speciﬁc NGSI Mappers.\n5.3. SWAMP\
    \ System for the Guaspari Pilot\nThe Guaspari scenario, depicted by Figure 8,\
    \ is a simpliﬁed version of MATOPIBA based on\nthe same SWAMP Architecture, but\
    \ using a smaller set of components. This system deployment\nSensors 2019, 19,\
    \ 276\n11 of 20\neliminates the Field Fog Node and implements a lightweight version\
    \ of the Fog Hub, only comprised\nof communication components, i.e., LoRa Gateway,\
    \ LoRa Server and Mosquitto. The processing\ncomponents that calculate the irrigation\
    \ prescription map, as well as drone-related functions are\nexecuted in the cloud.\
    \ This decision makes it less robust to disconnections but more robust against\n\
    failures of the fog components.\nSensors 2019, 19, x FOR PEER REVIEW \n11 of 21\
    \ \n \nThe Guaspari scenario, depicted by Figure 8, is a simplified version of\
    \ MATOPIBA based on the \nsame SWAMP Architecture, but using a smaller set of\
    \ components. This system deployment \neliminates the Field Fog Node and implements\
    \ a lightweight version of the Fog Hub, only \ncomprised of communication components,\
    \ i.e., LoRa Gateway, LoRa Server and Mosquitto. The \nprocessing components that\
    \ calculate the irrigation prescription map, as well as drone-related \nfunctions\
    \ are executed in the cloud. This decision makes it less robust to disconnections\
    \ but more \nrobust against failures of the fog components. \n \nFigure 8. Guaspari\
    \ Scenario represented in the FIWARE-based SWAMP Platform. \nThe IoT Agent is\
    \ placed in the cloud, where it converts specific data formats coming from \n\
    sensors and transmits them via wireless communication technologies to store them\
    \ in Orion. Unlike \nthe MATOPIBA scenario, in Guaspari the data format coming\
    \ from the field is transmitted over the \nInternet. Although the IoT Agent plays\
    \ a communication role and thus could also be placed in the \nfog, experience\
    \ has shown that sending verbose NGSI messages over the Internet impairs system\
    \ \nperformance and brings no noticeable benefits [7]. \n5.4. SWAMP Platform Scenario\
    \ for the Intercrop Pilot \nIn the Intercrop scenario, depicted by Figure 9, the\
    \ communication and storage infrastructure is \nagain a simplification of both\
    \ MATOPIBA and Guaspari scenarios, where no Fog Hub is deployed in \nthe farm\
    \ office. However, since in this case the sensor data have no route to the Internet\
    \ (and the \ncloud), it needs to reintroduce the Field Fog Node (FFN) using LoRa\
    \ Gateway and LoRa Server for \nsoil sensors and WiFi for drones and weather stations.\
    \ In this scenario the Mosquitto MQTT Broker \nis also placed in the cloud, thus\
    \ becoming the entry/exit point for all incoming and outgoing \nmessages. This\
    \ configuration of the SWAMP Platform is based on the premise that there is a\
    \ stable \ncellular connection (3G/4G) for the FFN to interact with the cloud.\
    \ In this scenario, apart from the \nFFN, the farm becomes independent of any\
    \ IT operations infrastructure for running the SWAMP \nPlatform. \nUnlike the\
    \ other pilot projects, in the Intercrop pilot the plot area is entirely dedicated\
    \ to the \nexperiments with IoT and irrigation. In other words, it means that\
    \ the freedom degree is much \nhigher and risks can be taken with less negative\
    \ consequences. Also, in this pilot the precision level \nof the irrigation is\
    \ increased since it deals with smaller and temporary crops, which requires a\
    \ more \ndetailed monitoring, irrigation and even analytics. \nFigure 8. Guaspari\
    \ Scenario represented in the FIWARE-based SWAMP Platform.\nThe IoT Agent is placed\
    \ in the cloud, where it converts speciﬁc data formats coming from sensors\nand\
    \ transmits them via wireless communication technologies to store them in Orion.\
    \ Unlike the\nMATOPIBA scenario, in Guaspari the data format coming from the ﬁeld\
    \ is transmitted over the\nInternet. Although the IoT Agent plays a communication\
    \ role and thus could also be placed in the\nfog, experience has shown that sending\
    \ verbose NGSI messages over the Internet impairs system\nperformance and brings\
    \ no noticeable beneﬁts [7].\n5.4. SWAMP Platform Scenario for the Intercrop Pilot\n\
    In the Intercrop scenario, depicted by Figure 9, the communication and storage\
    \ infrastructure is\nagain a simpliﬁcation of both MATOPIBA and Guaspari scenarios,\
    \ where no Fog Hub is deployed\nin the farm ofﬁce. However, since in this case\
    \ the sensor data have no route to the Internet (and the\ncloud), it needs to\
    \ reintroduce the Field Fog Node (FFN) using LoRa Gateway and LoRa Server for\n\
    soil sensors and WiFi for drones and weather stations. In this scenario the Mosquitto\
    \ MQTT Broker is\nalso placed in the cloud, thus becoming the entry/exit point\
    \ for all incoming and outgoing messages.\nThis conﬁguration of the SWAMP Platform\
    \ is based on the premise that there is a stable cellular\nconnection (3G/4G)\
    \ for the FFN to interact with the cloud. In this scenario, apart from the FFN,\n\
    the farm becomes independent of any IT operations infrastructure for running the\
    \ SWAMP Platform.\nUnlike the other pilot projects, in the Intercrop pilot the\
    \ plot area is entirely dedicated to the\nexperiments with IoT and irrigation.\
    \ In other words, it means that the freedom degree is much higher\nand risks can\
    \ be taken with less negative consequences. Also, in this pilot the precision\
    \ level of the\nirrigation is increased since it deals with smaller and temporary\
    \ crops, which requires a more detailed\nmonitoring, irrigation and even analytics.\n\
    Sensors 2019, 19, 276\n12 of 20\nSensors 2019, 19, x FOR PEER REVIEW \n12 of 21\
    \ \n \n \nFigure 9. Intercrop Scenario represented in the FIWARE-based SWAMP Platform.\
    \ \n5.5. SWAMP Platform Scenario for the CBEC Pilot \nThe SWAMP Platform Scenario\
    \ for the CBEC Pilot introduces a significant difference from the \nprevious ones,\
    \ as it manages both water distribution and irrigation. As such, not only the\
    \ irrigation \nprescription map for the farmers must be generated, but also the\
    \ distribution optimization plan for \nthe water distributor (i.e., CBEC). Also,\
    \ three different farms participate in the pilot. \nSimilarly to the Intercrop\
    \ Scenario (Figure 9), there is no Fog Hub and its functions are handed \nover\
    \ to the Field Fog Nodes (FFN) and the Cloud. The FFN has a simpler architecture\
    \ compared to \nthe Intercrop scenario, where the LoRa Server is placed in the\
    \ cloud, rather than in the FFN. \nAdditionally, in this scenario FIWARE components\
    \ are combined with SEPA SPARQL-based \nsemantic engine that represents information\
    \ in the RDF format and provides contextual semantic \nqueries. In FIWARE the\
    \ context is established as an entity defined in JSON NGSI format, whereas in\
    \ \nSEPA the context is a semantic query. While FIWARE Orion Context Broker notifies\
    \ all subscribers \nwhenever an entity is changed by a publisher, the SEPA engine\
    \ notifies subscribers whenever the \nresults of a semantic query is changed,\
    \ which is more powerful than a single entity. \nFigure 10 depicts the FIWARE\
    \ components already described, along with the SEPA SPARQL \nEngine, an NGSI-LD/RDF\
    \ Mapper and two additional applications, the Water Distribution User \nInterface\
    \ and the Water Distribution Optimization Models. Orion keeps its role as the\
    \ data \ndistribution center of the platform but the NGSI-LD (Linked Data) semantic\
    \ format must be \nconverted to the SEPA RDF format and vice-versa. In this scenario,\
    \ the FIWARE IoT Agent must be \nenhanced to generate NGSI-LD. \nFigure 9. Intercrop\
    \ Scenario represented in the FIWARE-based SWAMP Platform.\n5.5. SWAMP Platform\
    \ Scenario for the CBEC Pilot\nThe SWAMP Platform Scenario for the CBEC Pilot\
    \ introduces a signiﬁcant difference from the\nprevious ones, as it manages both\
    \ water distribution and irrigation. As such, not only the irrigation\nprescription\
    \ map for the farmers must be generated, but also the distribution optimization\
    \ plan for the\nwater distributor (i.e., CBEC). Also, three different farms participate\
    \ in the pilot.\nSimilarly to the Intercrop Scenario (Figure 9), there is no Fog\
    \ Hub and its functions are handed\nover to the Field Fog Nodes (FFN) and the\
    \ Cloud. The FFN has a simpler architecture compared to the\nIntercrop scenario,\
    \ where the LoRa Server is placed in the cloud, rather than in the FFN. Additionally,\n\
    in this scenario FIWARE components are combined with SEPA SPARQL-based semantic\
    \ engine that\nrepresents information in the RDF format and provides contextual\
    \ semantic queries. In FIWARE the\ncontext is established as an entity deﬁned\
    \ in JSON NGSI format, whereas in SEPA the context is a\nsemantic query. While\
    \ FIWARE Orion Context Broker notiﬁes all subscribers whenever an entity is\n\
    changed by a publisher, the SEPA engine notiﬁes subscribers whenever the results\
    \ of a semantic query\nis changed, which is more powerful than a single entity.\n\
    Figure 10 depicts the FIWARE components already described, along with the SEPA\
    \ SPARQL\nEngine, an NGSI-LD/RDF Mapper and two additional applications, the Water\
    \ Distribution User\nInterface and the Water Distribution Optimization Models.\
    \ Orion keeps its role as the data distribution\ncenter of the platform but the\
    \ NGSI-LD (Linked Data) semantic format must be converted to the\nSEPA RDF format\
    \ and vice-versa. In this scenario, the FIWARE IoT Agent must be enhanced to\n\
    generate NGSI-LD.\nSensors 2019, 19, 276\n13 of 20\nSensors 2019, 19, x FOR PEER\
    \ REVIEW \n13 of 21 \n \n \nFigure 10. CBEC Scenario represented in the FIWARE-SEPA-based\
    \ SWAMP Platform. \n6. Performance Analysis \nAs the SWAMP Platform is based on\
    \ FIWARE, the performance and scalability tradeoffs of this \nsolution must be\
    \ understood. The evaluation of the FIWARE-SEPA integration (Figure 10) requires\
    \ a \ndifferent methodology and therefore is not included. \n6.1. Experimental\
    \ Design and Research Methods \nIn order to analyze the performance and scalability\
    \ of the four SWAMP pilot scenarios, a \nFIWARE-based IoT testbed was designed.\
    \ This involves obtaining sensor data values up to the point \nwhere they are\
    \ transparently consumed by an application that can be deployed in different cloud\
    \ \nand fog configurations. Figure 11 depicts the four evaluation scenarios that\
    \ represent the pilot \nscenarios introduced in Section 4 abstracted for a testbed\
    \ evaluation. The key differences between \nthe scenarios are the placement of\
    \ the components in the cloud or fog. MATOPIBA and Guaspari, \nFigures 11a,b,\
    \ are represented as a heavyweight and lightweight fog as in Figures 7 and 8,\
    \ \nrespectively. Intercrop and CBEC, Figures 11c,d, do not have a fog infrastructure,\
    \ again because the \nLoRa components are not evaluated, as in Figures 9 and 10.\
    \ The CBEC scenario represents the three \nparticipant farms, where each one is\
    \ served by its own IoT Agent in the cloud (and a particular \ninstance of the\
    \ database), due to performance issues (explained in the results). \nThe additional\
    \ components are: \n \nSensor Simulating Environment (SenSE): SenSE [35] is an\
    \ open-source large-scale IoT sensor \ndata generator able to abstract real devices\
    \ and to model different complex scenarios, such as \nsmart farms [22]. The tool\
    \ is a traffic workload generator that emulates heterogeneous sensors \nrepresenting\
    \ tens of thousands of IoT devices sending data simultaneously via MQTT. \nAlthough\
    \ the sensors are synthetic, the traffic is real; \n \nMosquitto MQTT Broker:\
    \ Eclipse Mosquitto is an open source MQTT message broker; \n \nMongoDB: a document-oriented\
    \ NoSQL database, serving as the default Orion storage; \n \nConsumer: a special\
    \ purpose web application that subscribes in Orion and receives sensor data \n\
    from the probes. \n \nWANem Network Emulator [36]: emulates the Internet connection\
    \ for the assessment of the \nimpact of network parameters between the place where\
    \ the data is generated (in the farm,) and \nthe place it is processed (in the\
    \ cloud). \nFigure 10. CBEC Scenario represented in the FIWARE-SEPA-based SWAMP\
    \ Platform.\n6. Performance Analysis\nAs the SWAMP Platform is based on FIWARE,\
    \ the performance and scalability tradeoffs of this\nsolution must be understood.\
    \ The evaluation of the FIWARE-SEPA integration (Figure 10) requires a\ndifferent\
    \ methodology and therefore is not included.\n6.1. Experimental Design and Research\
    \ Methods\nIn order to analyze the performance and scalability of the four SWAMP\
    \ pilot scenarios,\na FIWARE-based IoT testbed was designed. This involves obtaining\
    \ sensor data values up to the point\nwhere they are transparently consumed by\
    \ an application that can be deployed in different cloud and\nfog conﬁgurations.\
    \ Figure 11 depicts the four evaluation scenarios that represent the pilot scenarios\n\
    introduced in Section 4 abstracted for a testbed evaluation. The key differences\
    \ between the scenarios\nare the placement of the components in the cloud or fog.\
    \ MATOPIBA and Guaspari, Figure 11a,b,\nare represented as a heavyweight and lightweight\
    \ fog as in Figures 7 and 8, respectively. Intercrop\nand CBEC, Figure 11c,d,\
    \ do not have a fog infrastructure, again because the LoRa components are not\n\
    evaluated, as in Figures 9 and 10. The CBEC scenario represents the three participant\
    \ farms, where\neach one is served by its own IoT Agent in the cloud (and a particular\
    \ instance of the database), due to\nperformance issues (explained in the results).\n\
    The additional components are:\n•\nSensor Simulating Environment (SenSE): SenSE\
    \ [35] is an open-source large-scale IoT sensor\ndata generator able to abstract\
    \ real devices and to model different complex scenarios, such as\nsmart farms\
    \ [22]. The tool is a trafﬁc workload generator that emulates heterogeneous sensors\n\
    representing tens of thousands of IoT devices sending data simultaneously via\
    \ MQTT. Although\nthe sensors are synthetic, the trafﬁc is real;\n•\nMosquitto\
    \ MQTT Broker: Eclipse Mosquitto is an open source MQTT message broker;\n•\nMongoDB:\
    \ a document-oriented NoSQL database, serving as the default Orion storage;\n\
    •\nConsumer: a special purpose web application that subscribes in Orion and receives\
    \ sensor data\nfrom the probes.\nSensors 2019, 19, 276\n14 of 20\n•\nWANem Network\
    \ Emulator [36]: emulates the Internet connection for the assessment of the\n\
    impact of network parameters between the place where the data is generated (in\
    \ the farm,) and\nthe place it is processed (in the cloud).\nSensors 2019, 19,\
    \ x FOR PEER REVIEW \n15 of 21 \n \n \n(a) MATOPIBA Scenario \n(b) Guaspari Scenario\
    \ \n \n \n(c) Intercrop Scenario \n(d) CBEC Scenario \nFigure 11. Pilot Scenarios\
    \ for the FIWARE Performance Analysis of the SWAMP Platform. \n6.2. Results \n\
    Figure 12 depicts the main scalability results according to the elapsed time metric\
    \ and following \nthe methodology described above. MATOPIBA, Guaspari and Intercrop\
    \ scenarios are shown in \nFigure 12a and Table 1 and CBEC scenario in Figure\
    \ 12b. These results highlight important \nobservations and findings: \n \nScalability\
    \ limits: For MATOPIBA, Guaspari and Intercrop scenarios the viable workload goes\
    \ \n10 000\ni i\nk\n10\ni\n(Fi\n12 )\nh\nl\nd i\nl\nFigure 11. Pilot Scenarios\
    \ for the FIWARE Performance Analysis of the SWAMP Platform.\nRegardless of the\
    \ location of components in the cloud or fog, the sequence of processing steps\n\
    and data ﬂow is always the same, from source (SenSE) to destination (Consumer);\
    \ (1) SenSE generates\nSensors 2019, 19, 276\n15 of 20\nsensor data and sends\
    \ it to Mosquitto; (2) IoT Agent receives data from Mosquitto, stores it in MongoDB,\n\
    translates it to NGSI, and sends it to Orion; (3) Orion receives NGSI data from\
    \ IoT Agent, updates\nentity values, stores them in MongoDB, and sends them to\
    \ Consumer; (4) Consumer receives data\nfrom Orion and computes the elapsed time\
    \ since it was generated by SenSE (a timestamp is embedded\nin the message and\
    \ physical machines are synchronized by NTP). For the MATOPIBA scenario, there\
    \ is\nan additional step, because of the cascading Orion solution, where the Cloud\
    \ Orion has to subscribe to\nthe fog Orion and the messages are then transferred\
    \ from one to the other.\nA lab testbed emulated the scenario for the experiments.\
    \ Both fog and cloud were implemented\nusing virtual machines (VM) in OpenStack.\
    \ The following standard Amazon AWS VM conﬁgurations\nwere deployed: cloud VM\
    \ equivalent to a t2.medium instance (2vCPU—4 GB of RAM) and the fog VMs\n(both\
    \ fog ﬁeld node and fog hub) equivalent to a t2.small instance (1vCPU—2 GB RAM).\
    \ The cloud\nwas composed of 6 VMs. Two different physical machines were used,\
    \ with the following conﬁguration:\nIntel(R) Xeon(R) CPU E3-1240 V2 @ 3.40 GHz—8\
    \ cores and 8 GB of RAM.\nThree categories of metrics were used in the reported\
    \ experiments:\n•\nApplication metric: The elapsed time is the average time taken\
    \ since a sensor data point is\ngenerated by SenSE until the Consumer receives\
    \ it. This metric represents how long it takes for\nsensor data to be available\
    \ to any subscribed application.\n•\nSystem metrics: CPU and RAM usage per Docker\
    \ container, which allows observing each\napplication, collected every 5 s.\n\
    •\nExperiment metrics: The duration of the experiment given by the number of replications\
    \ (because\nsome components crashed after some time) and the number of received\
    \ messages are used to\nunderstand how experiments unfolded.\nThe experiments\
    \ involved a large number of sensors, sending data every 10 min. The scenarios\n\
    were executed with four different workloads determined by the number of sensors\
    \ sending messages\nsimultaneously. For the MATOPIBA, Guaspari and Intercrop scenarios,\
    \ 1000, 5000, 10,000 and\n15,000 sensors were used. For the CBEC scenario, as\
    \ depicted by Figure 11d, the workload was tripled,\ntotaling 3000, 15,000, 30,000\
    \ and 45,000 sensors. Each experiment took 1 min and was replicated\n30 times,\
    \ totalizing 16 h of running experiments. Asymptotic conﬁdence intervals were\
    \ calculated\nwith a 99% conﬁdence level.\nThe conﬁguration of WANem captured\
    \ characteristics of a connection from a farm to a cloud\nbased on a simple experiment\
    \ that obtained the network parameters by pinging a public cloud using a\n4G connection,\
    \ which resulted in a connection of 10 Mbps with 45 ms of delay and 5 ms of jitter.\n\
    6.2. Results\nFigure 12 depicts the main scalability results according to the\
    \ elapsed time metric and following\nthe methodology described above. MATOPIBA,\
    \ Guaspari and Intercrop scenarios are shown in\nFigure 12a and Table 1 and CBEC\
    \ scenario in Figure 12b. These results highlight important observations\nand\
    \ ﬁndings:\n•\nScalability limits: For MATOPIBA, Guaspari and Intercrop scenarios\
    \ the viable workload goes\nup to 10,000 sensors transmitting packets every 10\
    \ min (Figure 12a) where an elapsed time less\nthan 1 s was observed. Under a\
    \ workload of 15,000 sensors, Table 1 shows that the elapsed time\nincreases to\
    \ dozens of seconds with a high variation.\n•\nLightweight fog = no fog: The Guaspari\
    \ and Intercrop scenario yield very similar results for\nthe elapsed time, which\
    \ reveals that from a performance point of view there is no signiﬁcant\ndifference\
    \ if the MQTT Broker is placed in the fog or in the cloud.\n•\nCascading Orion:\
    \ The elapsed time is higher for the MATOPIBA compared to the Guaspari and\nIntercrop,\
    \ caused by the two cascading Orion components, in the fog and in the cloud, according\n\
    to Figure 11a. Whenever Orion receives a message it notiﬁes all subscribers of\
    \ the involved entity.\nSensors 2019, 19, 276\n16 of 20\nIn this scenario, the\
    \ cloud Orion is a subscriber to the fog Orion, which means that in order for\
    \ the\nSubscriber to receive a message, it passes through two Orion notiﬁcation\
    \ steps, which is causing\nthe additional delay (up to one second with 10,000\
    \ sensors) and larger conﬁdence interval.\n•\nDivide and conquer: The CBEC scenario\
    \ has three farms represented by three SenSE trafﬁc\ngenerators in Figure 11d.\n\
    In order to scale up to 15,000 sensors per farm (which gives\n45,000 sensors),\
    \ the IoT Agent needed to be replicated in the cloud, each one in a new VM\nand\
    \ using a separate MongoDB instance. That solution increased the scalability for\
    \ the CBEC\nscenario, which were able not only to deal with 15,000 (which is not\
    \ viable in the other three\nscenarios), but also up to 45,000 sensors.\n \n\
    \ \nLightweight fog = no fog: The Guaspari and Intercrop scenario yield very similar\
    \ results for the \nelapsed time, which reveals that from a performance point\
    \ of view there is no significant \ndifference if the MQTT Broker is placed in\
    \ the fog or in the cloud. \n \nCascading Orion: The elapsed time is higher for\
    \ the MATOPIBA compared to the Guaspari and \nIntercrop, caused by the two cascading\
    \ Orion components, in the fog and in the cloud, \naccording to Figure 11a. Whenever\
    \ Orion receives a message it notifies all subscribers of the \ninvolved entity.\
    \ In this scenario, the cloud Orion is a subscriber to the fog Orion, which means\
    \ \nthat in order for the Subscriber to receive a message, it passes through two\
    \ Orion notification \nsteps, which is causing the additional delay (up to one\
    \ second with 10,000 sensors) and larger \nconfidence interval. \n \nDivide and\
    \ conquer: The CBEC scenario has three farms represented by three SenSE traffic\
    \ \ngenerators in Figure 11d. In order to scale up to 15,000 sensors per farm\
    \ (which gives 45,000 \nsensors), the IoT Agent needed to be replicated in the\
    \ cloud, each one in a new VM and using a \nseparate MongoDB instance. That solution\
    \ increased the scalability for the CBEC scenario, \nwhich were able not only\
    \ to deal with 15,000 (which is not viable in the other three scenarios), \nbut\
    \ also up to 45,000 sensors. \n \n \n(a) MATOPIBA, Guaspari and Intercrop \n(b)\
    \ CBEC \nFigure 12. Elapsed time: (a) MATOPIBA, Guaspari and Intercrop scenarios;\
    \ (b) CBEC. \nTable 1. Elapsed time for the MATOPIBA, Guaspari and Intercrop scenarios.\
    \ \nSensors \nMATOPIBA \nGuaspari \nIntercrop \nValue (ms) \nConf. Int. (ms) \n\
    Value (ms) \nConf. Int. (ms) \nValue (ms) \nConf. Int. (ms) \n1000 \n165.7 \n\
    0.7 \n79,3 \n1.0 \n79.9 \n1.2 \n5000 \n185.1 \n5.4 \n136.9 \n1.8 \n117.8 \n2.0\
    \ \n10,000 \n973.0 \n1229.8 \n242.4 \n18.7 \n229.3 \n21.5 \n15,000 \n17,417,0\
    \ \n11,270.6 \n18,979.5 \n11,216.7 \n66,549.9 \n11,648.9 \nThe quest for an explanation\
    \ for the scalability limits of the FIWARE components led us to \nanalyze system\
    \ and experiment metrics. Figure 13 depicts the percentage of CPU used by MongoDB\
    \ \n(a) and the total amount of RAM used by the IoT Agent for the Guaspari scenario\
    \ (b). The results are \nequivalent for the other three scenarios. When the system\
    \ is under a workload of 15,000 sensors the \nCPU used by MongoDB goes up to 86%\
    \ (+/−3) and the amount of RAM used by the IoT Agent goes \nup to 1 GB. \nTable\
    \ 2 also shows that for 15,000 sensors the experiment is finished before all the\
    \ messages are \nreceived (i.e., before 30 min). For example, in the MATOPIBA\
    \ scenario only 16 replications were \nperformed. Also, it can be observed that\
    \ the number of messages decreases for 15,000 compared to \n10,000, where it is\
    \ expected to increase. \nIt was found that the IoT Agent is crashing and causing\
    \ the experiment to be terminated \nprematurely, which happens because the IoT\
    \ Agent needs to allocate memory for the verbose NGSI \n0 \n200 \n400 \n600 \n\
    800 \n1,000 \n1,000 \n5,000 \n10,000 \nElapsed Time (ms) \nNumber of sensors \n\
    MATOPIBA \nGuaspari \nIntercrop \n0 \n50 \n100 \n150 \n200 \n250 \n300 \n350 \n\
    3 x 1,000 \n3 x 5,000 \n3 x 10,000 3 x 15,000 \nElapsed Time (ms) \nNumber of\
    \ sensors \nFigure 12. Elapsed time: (a) MATOPIBA, Guaspari and Intercrop scenarios;\
    \ (b) CBEC.\nTable 1. Elapsed time for the MATOPIBA, Guaspari and Intercrop scenarios.\n\
    Sensors\nMATOPIBA\nGuaspari\nIntercrop\nValue (ms)\nConf. Int. (ms)\nValue (ms)\n\
    Conf. Int. (ms)\nValue (ms)\nConf. Int. (ms)\n1000\n165.7\n0.7\n79.3\n1.0\n79.9\n\
    1.2\n5000\n185.1\n5.4\n136.9\n1.8\n117.8\n2.0\n10,000\n973.0\n1229.8\n242.4\n\
    18.7\n229.3\n21.5\n15,000\n17,417.0\n11,270.6\n18,979.5\n11,216.7\n66,549.9\n\
    11,648.9\nThe quest for an explanation for the scalability limits of the FIWARE\
    \ components led us to analyze\nsystem and experiment metrics. Figure 13 depicts\
    \ the percentage of CPU used by MongoDB (a) and the\ntotal amount of RAM used\
    \ by the IoT Agent for the Guaspari scenario (b). The results are equivalent\n\
    for the other three scenarios. When the system is under a workload of 15,000 sensors\
    \ the CPU used by\nMongoDB goes up to 86% (+/−3) and the amount of RAM used by\
    \ the IoT Agent goes up to 1 GB.\nTable 2 also shows that for 15,000 sensors the\
    \ experiment is ﬁnished before all the messages are\nreceived (i.e., before 30\
    \ min). For example, in the MATOPIBA scenario only 16 replications were\nperformed.\
    \ Also, it can be observed that the number of messages decreases for 15,000 compared\
    \ to\n10,000, where it is expected to increase.\nIt was found that the IoT Agent\
    \ is crashing and causing the experiment to be terminated\nprematurely, which\
    \ happens because the IoT Agent needs to allocate memory for the verbose NGSI\n\
    message whenever it receives a sensor message. There are two possible explanations\
    \ for that behavior\nthat may be considered either alternative or complementary\
    \ to each other. On the one hand, it is\nclearly unreasonable for such a program\
    \ to grow its memory up to 1 GB (up to 1.4 GB in some cases),\nwhich leads us\
    \ to assume that there is a memory leak. On the other hand, the response time\
    \ for\npublishing messages to Orion increases steeply thus increasing the number\
    \ of simultaneous NGSI\nmessages allocated inside the IoT Agent (which cannot\
    \ free the memory until it receives a conﬁrmation\nfrom Orion). In other words,\
    \ the increased response time together with a very likely memory leak are\ncausing\
    \ the IoT Agent to crash.\nSensors 2019, 19, 276\n17 of 20\n \nhand, it is clearly\
    \ unreasonable for such a program to grow its memory up to 1 GB (up to 1.4 GB\
    \ in \nsome cases), which leads us to assume that there is a memory leak. On the\
    \ other hand, the response \ntime for publishing messages to Orion increases steeply\
    \ thus increasing the number of simultaneous \nNGSI messages allocated inside\
    \ the IoT Agent (which cannot free the memory until it receives a \nconfirmation\
    \ from Orion). In other words, the increased response time together with a very\
    \ likely \nmemory leak are causing the IoT Agent to crash. \n \n \n(a) CPU used\
    \ by MongoDB \n(b) RAM used by IoT Agent \nFigure 13. System metrics for the Guaspari\
    \ Scenario: (a) CPU used by MongoDB; (b) RAM used by \nIoT Agent. \nTable 2. Experiment\
    \ Metrics: number of messages received and duration of the experiment (in \nreplications).\
    \ \nSensors \nMATOPIBA \nGuaspari \nIntercrop \nCBEC (Sensors x 3) \nRep \nMsg\
    \ \nRep \nMsg \nRep \nMsg \nRep \nMsg \n1000 \n30 \n2988 \n30 \n2992 \n30 \n2992\
    \ \n30 \n8962 \n5000 \n30 \n14,867 \n30 \n14,850 \n30 \n14,838 \n30 \n44,247 \n\
    10,000 \n30 \n29,225 \n30 \n29,534 \n30 \n29,532 \n30 \n42,020 \n15,000 \n16 \n\
    24,826 \n21 \n28,811 \n27 \n29,212 \n27 \n45,647 \nThe analysis of these results\
    \ leads us to conclude that the key bottleneck of the FIWARE \nPlatform is MongoDB,\
    \ which is not a surprise whatsoever, since its performance constraints are \n\
    widely known [37]. In the sequence what happens is that MongoDB delays Orion,\
    \ which in turn \ndelays IoT Agent, which as the weak link grows its memory up\
    \ to a point where a crash is \nunavoidable. \n7. Discussion \nThe main purpose\
    \ of SWAMP is to build an IoT platform for precision irrigation in agriculture\
    \ \nfocusing on different challenges, such as adaptability, deployment, complexity,\
    \ and information \nmodel: \nAdaptability: The platform must be flexible enough\
    \ to adapt to different scenarios while \nkeeping the human effort at a minimum\
    \ level. As shown in this paper, the four SWAMP pilots \nprovide enough diversity\
    \ to assist us in understanding the levels of generality and specificity to be\
    \ \nprovided by different software components. Initially we identified three levels\
    \ of components \nregarding a generality/specificity scale (fully replicable,\
    \ fully customizable and application-specific) \nand intuitively placed them in\
    \ relevant layers of the architecture. However, experience shows new \ntradeoffs,\
    \ such as the generality of a component for collecting sensor data, like the FIWARE\
    \ IoT \nAgent, which must deal with different combinations of data formats of\
    \ sensors and wireless \ntechnologies. \n0 \n20 \n40 \n60 \n80 \n100 \n1,000 \n\
    5,000 \n10,000 \n15,000 \nCPU (%) \nNumber of sensors \n0.0 \n0.2 \n0.4 \n0.6\
    \ \n0.8 \n1.0 \n1.2 \n1,000 \n5,000 \n10,000 \n15,000 \nRAM  (GB) \nNumber of\
    \ sensors \nFigure 13. System metrics for the Guaspari Scenario: (a) CPU used\
    \ by MongoDB; (b) RAM used by\nIoT Agent.\nTable 2. Experiment Metrics: number\
    \ of messages received and duration of the experiment (in replications).\nSensors\n\
    MATOPIBA\nGuaspari\nIntercrop\nCBEC (Sensors × 3)\nRep\nMsg\nRep\nMsg\nRep\nMsg\n\
    Rep\nMsg\n1000\n30\n2988\n30\n2992\n30\n2992\n30\n8962\n5000\n30\n14,867\n30\n\
    14,850\n30\n14,838\n30\n44,247\n10,000\n30\n29,225\n30\n29,534\n30\n29,532\n30\n\
    42,020\n15,000\n16\n24,826\n21\n28,811\n27\n29,212\n27\n45,647\nThe analysis of\
    \ these results leads us to conclude that the key bottleneck of the FIWARE Platform\
    \ is\nMongoDB, which is not a surprise whatsoever, since its performance constraints\
    \ are widely known [37].\nIn the sequence what happens is that MongoDB delays\
    \ Orion, which in turn delays IoT Agent, which\nas the weak link grows its memory\
    \ up to a point where a crash is unavoidable.\n7. Discussion\nThe main purpose\
    \ of SWAMP is to build an IoT platform for precision irrigation in agriculture\n\
    focusing on different challenges, such as adaptability, deployment, complexity,\
    \ and information model:\nAdaptability: The platform must be ﬂexible enough to\
    \ adapt to different scenarios while keeping\nthe human effort at a minimum level.\
    \ As shown in this paper, the four SWAMP pilots provide\nenough diversity to assist\
    \ us in understanding the levels of generality and speciﬁcity to be provided\n\
    by different software components. Initially we identiﬁed three levels of components\
    \ regarding a\ngenerality/speciﬁcity scale (fully replicable, fully customizable\
    \ and application-speciﬁc) and intuitively\nplaced them in relevant layers of\
    \ the architecture. However, experience shows new tradeoffs, such as\nthe generality\
    \ of a component for collecting sensor data, like the FIWARE IoT Agent, which\
    \ must deal\nwith different combinations of data formats of sensors and wireless\
    \ technologies.\nDeployment: A variety of factors inﬂuence the design choices\
    \ for deployment alternatives of\nvarious fog/cloud conﬁguration scenarios: (a)\
    \ the stability and robustness of the Internet connection\nin the farm area, which\
    \ in some cases faces frequent disconnections that must be dealt with, such as\
    \ in\nthe Brazilian MATOPIBA pilot; (b) the availability of resources and interest\
    \ of farmers in maintaining\nan in-house fog-based IoT system in operation with\
    \ associated service level guarantees similar to a\ncloud environment, compared\
    \ to the disruptions caused by cloud intermittent access; (c) the capacity\nand\
    \ dependability of the fog nodes; (d) the use of LPWAN technologies for collecting\
    \ sensor data\nthat might require some minimum farm level infrastructure, such\
    \ as LoRaWAN, or relying on some\nyet-to-be-deployed or limited coverage public\
    \ service, such as NB-IoT or Sigfox [28]. There is no\n“one size ﬁts all” in IoT\
    \ systems for precision irrigation, which makes the case for ﬁnding different\
    \ ways\nof conﬁguring and connecting software components in cloud- and fog-based\
    \ deployments. The need\nSensors 2019, 19, 276\n18 of 20\nfor an automated mechanism\
    \ for system deployment, given different requirements, infrastructures\nand constraints\
    \ was identiﬁed and it is currently handled within the project, but this is out\
    \ of the scope\nof this paper.\nScalability: Currently, most open IoT-based systems\
    \ that report results are proof-of-concept\npilots or small-scale IoT-based services.\
    \ Currently there is no de facto IoT Platform even though\nthere are many candidates,\
    \ including commercial solutions such as Amazon AWS IoT and Google\nCloud IoT.\
    \ FIWARE was adopted as the underlying IoT platform for the most common functions\n\
    of data distribution and storage. However, as our performance analysis revealed,\
    \ FIWARE still\nneeds signiﬁcant improvements to become a scalable solution for\
    \ extreme scenarios with heavy data\ngeneration. For example, the CBEC consortium\
    \ provides irrigation water for about 5000 farms and in\norder for the optimization\
    \ of water distribution to succeed they will need everything to be dealt with\n\
    by a single platform. For sure these large scenarios will require a considerable\
    \ number of devices that\nwill stress the platform even more than our experiments.\n\
    Complexity: There is a tradeoff in terms of dealing with complexity when it comes\
    \ to developing\nIoT-based applications. The approach taken in the CBEC scenario\
    \ is based on a hybrid solution that\ncombines a FIWARE-enabled context broker\
    \ and a semantic engine based on the linked data ontology\nmodel. While FIWARE\
    \ Orion Context Broker notiﬁes all subscribers whenever an entity is changed by\n\
    a publisher, the SEPA engine notiﬁes subscribers whenever the results of a semantic\
    \ query is changed,\nwhich is more powerful than a single entity. This conﬁguration\
    \ of the SWAMP Platform allows us to\ncompare a solution where the context broker\
    \ is simpler and the complexity dwells in the applications\n(FIWARE) to a solution\
    \ where the context broker is more complex and thus the applications can be\n\
    simpler (SEPA).\n8. Conclusions\nThe emergence of IoT is a phenomenon that owes\
    \ to the conjunction of several factors and now\nstarts to become real with huge\
    \ effort both in research and business areas. In this context, the SWAMP\nproject\
    \ develops IoT-based methods for smart water management in precision irrigation,\
    \ and pilots\nthem in Italy, Spain, and Brazil. This paper introduced the SWAMP\
    \ architecture, pilots and deployment\nscenarios for the four pilots using FIWARE\
    \ as the underlying IoT platform.\nA performance analysis of key FIWARE components\
    \ personalized for each SWAMP pilot scenario\nwas undertaken to understand the\
    \ scalability limits of the system. The results show that this platform\nmight\
    \ be able to deal with the performance requirements of our pilots, even though\
    \ requiring specially\ndesigned deployment conﬁgurations and the re-engineering\
    \ of some components to provide higher\nscalability using less computational resources.\
    \ Particularly, our experiments showed that MongoDB is\nCPU greedy, which negatively\
    \ impacts system performance.\nSWAMP is an ongoing project and therefore there\
    \ are multiple paths for future work. Some\nexamples are improving the platform\
    \ deployment scenarios, reporting the overall working of the\nSWAMP approach in\
    \ the pilots, including the experience with irrigation models and analytics and\n\
    more advanced performance analysis.\nAuthor Contributions: SWAMP is a collaborative\
    \ project and therefore concepts, architecture, platform, pilots\nand deployment\
    \ of the solution are an ongoing effort developed by many hands. Particularly,\
    \ C.K. led the writing\nand the design of the performance analysis, J.-P.S. and\
    \ M.T. contributed to the architecture design and to the\nIntercrop pilot, R.D.\
    \ and R.F.M. contributed to the design of the platform scenarios based on FIWARE,\
    \ T.S.C.\ncontributed to the CBEC pilot and to the integration of FIWARE with\
    \ SEPA, A.T. contributed to the CBEC pilot\nand with knowledge about irrigation\
    \ and models, and A.T.N. contributed to the MATOPIBA and Guaspari pilots,\nas\
    \ well as in development and integration of sensors using LoRaWAN. C.K., J.-P.S.,\
    \ M.T., R.D., A.T., T.S.C., R.F.M.\nand A.T.N. reviewed the paper.\nFunding: This\
    \ research has been jointly funded by the European Commission in Europe and MCTIC/RNP\
    \ in\nBrazil, under the EUB-02-2017 IoT Pilots call.\nAcknowledgments: Authors\
    \ would like to thank the effort of all SWAMP members, the pilot site owners and\n\
    especially Alexandre Heideker, Dener Silva and Ivan Zyrianoff who ran the performance\
    \ analysis experiments.\nSensors 2019, 19, 276\n19 of 20\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nReferences\n1.\nFAO. AQUASTAT:\
    \ Water Uses. 2016. Available online: http://www.fao.org/nr/water/aquastat/water_use\n\
    (accessed on 5 January 2019).\n2.\nAtzori, L.; Iera, A.; Morabito, G. The Internet\
    \ of Things: A survey. Comput. Netw. 2010, 54, 2787–2805.\n[CrossRef]\n3.\nKamienski,\
    \ C.; Jentsch, M.; Eisenhauer, M.; Kiljander, J.; Ferrera, E.; Rosengren, P.;\
    \ Thestrup, J.; Souto, E.;\nAndrade, W.; Sadok, D. Application Development for\
    \ the Internet of Things: A Context-Aware Mixed\nCriticality Systems Development\
    \ Platform. Comput. Commun. 2017, 104, 1–16. [CrossRef]\n4.\nKamienski, C.; Soininen,\
    \ J.P.; Taumberger, M.; Fernandes, S.; Toscano, A.; Salmon, T.; Filev, R.; Torre,\
    \ A.\nSWAMP: An IoT-based Smart Water Management Platform for Precision Irrigation\
    \ in Agriculture.\nIn Proceedings of the IEEE Global IoT Summit 2018 (GIoTS’18),\
    \ Bilbao, Spain, 4–7 June 2018.\n5.\nFIWARE. FIWARE Open Source Platform. Available\
    \ online: www.ﬁware.org (accessed on 5 January 2019).\n6.\nRofﬁa, L.; Azzoni,\
    \ P.; Aguzzi, C.; Viola, F.; Antoniazzi, F.; Salmon Cinotti, T. Dynamic Linked\
    \ Data: A SPARQL\nEvent Processing Architecture. Future Int. 2018, 10, 36. [CrossRef]\n\
    7.\nKamienski, C.; Kleinschmidt, J.; Soininen, J.P.; Kolehmainen, K.; Rofﬁa, L.;\
    \ Visoli, M.; Maia, R.F.; Fernandes, S.\nSWAMP: Smart Water Management Platform\
    \ Overview and Security Challenges. In Proceedings of the\nIEEE/IFIP International\
    \ Conference on Dependable Systems and Networks (DSN 2018), Luxembourg,\n25–28\
    \ June 2018.\n8.\nAhanger, T.A.; Aljumah, A. Internet of Things: A Comprehensive\
    \ Study of Security Issues and Defense\nMechanisms. IEEE Access 2018. [CrossRef]\n\
    9.\nDoron, L. Flexible and Precise Irrigation Platform to Improve Farm Scale Water\
    \ Productivity. Impact\n2017, 2017, 77–79. [CrossRef]\n10.\nPopovi´c, T.; Latinovi´c,\
    \ N.; Peši´c, A.; Zeˇcevi´c, Ž.; Krstaji´c, B.; Djukanovi´c, S. Architecting an\
    \ IoT-enabled\nplatform for precision agriculture and ecological monitoring: A\
    \ case study. Comput. Electron. Agric. 2017, 140,\n255–265. [CrossRef]\n11.\n\
    Kamilaris, A.; Gao, F.; Prenafeta-Boldu, F.X.; Ali, M.I. Agri-IoT: A semantic\
    \ framework for Internet of\nThings-enabled smart farming applications. In Proceedings\
    \ of the 2016 IEEE 3rd World Forum on Internet of\nThings (WF-IoT), Reston, VA,\
    \ USA, 12–14 December 2016.\n12.\nBrewster, C.; Roussaki, I.; Kalatzis, N.; Doolin,\
    \ K.; Ellis, K. IoT in Agriculture: Designing a Europe-Wide\nLarge-Scale Pilot.\
    \ IEEE Comm. Mag. 2017, 55, 26–33. [CrossRef]\n13.\nRodriguez, M.; Cuenca, L.;\
    \ Ortiz, A. FIWARE Open Source Standard Platform in Smart Farming—A Review.\n\
    In Working Conference on Virtual Enterprises; Springer: Cham, Switzerland, 2018.\n\
    14.\nLópez-Riquelme, J.A. A software architecture based on FIWARE cloud for Precision\
    \ Agriculture. Agric. Water\nManag. 2017, 183, 123–135. [CrossRef]\n15.\nBonomi,\
    \ F.; Milito, R.; Natarajan, P.; Zhu, J. Fog computing: A platform for Internet\
    \ of Things and analytics.\nIn Big Data and Internet of Things: A Roadmap for\
    \ Smart Environments; Springer: Cham, Switzerland, 2014.\n16.\nMorabito, R.; Kjällman,\
    \ J.; Komu, M. Hypervisors vs.\nLightweight Virtualization: A Performance\nComparison.\
    \ In Proceedings of the IEEE International Conference on Cloud Engineering (IC2E\
    \ 2015),\nTempe, AZ, USA, 9–13 March 2015; pp. 386–393.\n17.\nCheng, B.; Solmaz,\
    \ G.; Cirillo, F.; Kovacs, E.; Terasawa, K.; Kitazawa, A. FogFlow: Easy Programming\
    \ of IoT\nServices Over Cloud and Edges for Smart Cities. IEEE Int. Things J.\
    \ 2018, 5, 696–707. [CrossRef]\n18.\nOpen Mobile Alliance.\nNGSI Requirements,\
    \ OMA-RD-NGSI-V1_0.\nAvailable online: http://www.\nopenmobilealliance.org (accessed\
    \ on 5 January 2019).\n19.\nBizer, C.; Heath, T.; Berners-Lee, T. Linked Data:\
    \ The Story So Far. In Semantic Services, Interoperability and\nWeb Applications:\
    \ Emerging Concepts; IGI Global, 2011; pp. 205–227. Available online: https://www.igi-global.\n\
    com/chapter/linked-data-story-far/55046 (accessed on 10 January 2019).\n20.\n\
    Miller, E. An Introduction to the Resource Description Framework. Bull. Am. Soc.\
    \ Inf. Sci. Technol. 2018, 25,\n15–19. [CrossRef]\nSensors 2019, 19, 276\n20 of\
    \ 20\n21.\nETSI. NGSI-LD: Context Information Management (CIM) and Application\
    \ Programming Interface (API).\nETSI GS CIM 004 V1.1.1. April 2018. Available\
    \ online: https://www.etsi.org/deliver/etsi_gs/CIM/001_\n099/004/01.01.01_60/gs_cim004v010101p.pdf\
    \ (accessed on 5 January 2019).\n22.\nZyrianoff, I.; Borelli, F.; Biondi, G.;\
    \ Heideker, A.; Kamienski, C. Scalability of Real-Time IoT-based\nApplications\
    \ for Smart Cities. In Proceedings of the IEEE Symposium on Computers and Communications\n\
    (ISCC 2018), Natal, Brazil, 25–28 June 2018.\n23.\nda Cruz, M.A.; Rodrigues, J.J.;\
    \ Sangaiah, A.K.; Al-Muhtadi, J.; Korotaev, V. Performance Evaluation of IoT\n\
    Middleware. J. Netw. Comp. Appl. 2018, 109, 53–65. [CrossRef]\n24.\nMartínez,\
    \ R.; Pastor, J.Á.; Álvarez, B.; Iborra, A. A Testbed to Evaluate the FIWARE-based\
    \ IoT Platform in\nthe Domain of Precision Agriculture. Sensors 2016, 16, 1979.\
    \ [CrossRef] [PubMed]\n25.\nZyrianoff, I.; Heideker, A.; Silva, D.; Kamienski,\
    \ C. Scalability of an Internet of Things Platform for Smart\nWater Management\
    \ for Agriculture. In Proceedings of the Workshop on Advances in IoT based methods\
    \ for\nSmart Water Distribution and Management in Agriculture (IMSA 2018), Bologna,\
    \ Italy, 13–16 November 2018.\n26.\nPﬁsterer, D.; Romer, K.; Bimschas, D.; Kleine,\
    \ O.; Mietz, R.; Truong, C.; Hasemann, H.; Kröller, A.; Pagel, M.;\nHauswirth,\
    \ M.; et al. SPITFIRE: Toward a Semantic Web of Things. IEEE Commun. Mag. 2011,\
    \ 49, 40–48.\n[CrossRef]\n27.\nW3C. SPARQL 1.1 Overview. W3C Recommendation. 21\
    \ March 2013. Available online: http://www.w3.\norg/TR/2013/REC-sparql11-overview-20130321\
    \ (accessed on 5 January 2019).\n28.\nMekki, K.; Bajic, E.; Chaxel, F.; Meyer,\
    \ F. A comparative study of LPWAN technologies for large-scale IoT\ndeployment.\
    \ ICT Express 2018. [CrossRef]\n29.\nOASIS. MQTT Version 5.0. OASIS Committee\
    \ Speciﬁcation 02. 15 May 2018. Available online: http:\n//docs.oasis-open.org/mqtt/mqtt/v5.0/cs02/mqtt-v5.0-cs02.pdf\
    \ (accessed on 5 January 2019).\n30.\nLoRa Server. Available online: https://www.loraserver.io\
    \ (accessed on 5 January 2019).\n31.\nVellidis, G.; Liakos, V.; Porter, W.; Tucker,\
    \ M.; Liang, X. A Dynamic Variable Rate Irrigation Control System.\nIn Proceedings\
    \ of the 13th International Conference on Precision Agriculture, Louis, MI, USA,\
    \ 31 July–4\nAugust 2016.\n32.\nBedogni, L.; Bononi, L.; Canegallo, R.; Carbone,\
    \ F.; Di Felice, M.; Scarselli, E.F.; Montori, F.; Perilli, L.;\nCinotti, T.;\
    \ Salmon Trotta, A. Dual-Mode Wake-Up Nodes for IoT Monitoring Applications: Measurements\n\
    and Algorithms. In Proceedings of the 2018 IEEE International Conference on Communications\
    \ (ICC),\nKansas City, MO, USA, 20–24 May 2018.\n33.\nLight, R.A. Mosquitto: Server\
    \ and client implementation of the MQTT protocol. J. Open Source Softw. 2017,\
    \ 2.\n[CrossRef]\n34.\nAllen, R.G.; Pereira, L.; Raes, D.; Smith, M. Crop Evapotranspiration-Guidelines\
    \ for Computing Crop Water\nRequirements. In FAO Irrigation and Drainage Paper\
    \ 56; FAO: Rome, Italy, 1998.\n35.\nZyrianoff, I. SenSE—Sensor Simulation Environment.\
    \ GitHub Repository. 2017. Available online: https:\n//github.com/ivanzy/SenSE-Sensor-Simulation-Environment\
    \ (accessed on 5 January 2019).\n36.\nKalitay, H.K.; Nambiarz, M.K. Designing\
    \ WANem: A Wide Area Network emulator tool. In Proceedings\nof the 3rd IEEE International\
    \ Conference on Communication Systems and Networks (COMSNETS 2011),\nBangalore,\
    \ India, 4–8 January 2011.\n37.\nKlein, J.; Gorton, I.; Ernst, N.; Donohoe, P.;\
    \ Pham, K.; Matser, C. Performance Evaluation of NoSQL Databases:\nA Case Study.\
    \ In Proceedings of the 1st Workshop on Performance Analysis of Big Data Systems,\
    \ Austin, TX,\nUSA, 1 February 2015.\n© 2019 by the authors. Licensee MDPI, Basel,\
    \ Switzerland. This article is an open access\narticle distributed under the terms\
    \ and conditions of the Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/19/2/276/pdf?version=1547203858
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Water Management Platform: IoT-Based Precision Irrigation for Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3009298
  analysis: '>'
  authors:
  - Vippon Preet Kour
  - Sakshi Arora
  citation_count: 97
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Recent
    Developments of the Internet of Things in Agriculture: A Survey Publisher: IEEE
    Cite This PDF Vippon Preet Kour; Sakshi Arora All Authors 98 Cites in Papers 12530
    Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Sources and Search Methods III. Introduction
    to the Internet of Things (IoT) Concepts and Theories IV. Related Work V. Findings
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    A rise in the population has immensely increased the pressure on the agriculture
    sector. With the advent of technology, this decade is witnessing a shift from
    conventional approaches to the most advanced ones. The Internet of Things (IoT)
    has transformed both the quality and quantity of the agriculture sector. Hybridization
    of species along with the real-time monitoring of the farms paved a way for resource
    optimization. Scientists, research institutions, academicians, and most nations
    across the globe are moving towards the practice and execution of collaborative
    projects to explore the horizon of this field for serving mankind. The tech industry
    is racing to provide more optimal solutions. Inclusion of IoT, along with cloud
    computing, big data analytics, and wireless sensor networks can provide sufficient
    scope to predict, process, and analyze the situations and improve the activities
    in the real-time scenario. The concept of heterogeneity and interoperability of
    the devices by providing flexible, scalable, and durable methods, models are also
    opening new domains in this field. Therefore, this paper contributes towards the
    recent IoT technologies in the agriculture sector, along with the development
    of hardware and software systems. The public and private sector projects and startup''s
    started all over the globe to provide smart and sustainable solutions in precision
    agriculture are also discussed. The current scenario, applications, research potential,
    limitations, and future aspects are briefly discussed. Based on the concepts of
    IoT a precision farming framework is also proposed in this article. A graphical
    abstract for Recent developments of the Internet of Things in Agriculture: A Survey.
    Published in: IEEE Access ( Volume: 8) Page(s): 129924 - 129957 Date of Publication:
    14 July 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3009298 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction The
    term ‘Agriculture’ is inferred from the Latin words ‘Ager’ means ‘Land’ and ‘Culture’
    means ‘Cultivation’. It is the milestone field of human civilization and is one
    of the benchmark areas. This field is the withstander of the economies of various
    nations. According to the Food and Agricultural Organization of the United Nations
    (FAO), more than 60% of the human population depends on agriculture for survival
    and around 12% of the total land area is under agricultural production [1]. Predicted
    by FAO, the global population will reach the mark of 8 billion people by the year
    2025 and 9.6 billion by the end of 2050 (FAO, 2009) [2]. The interpretation of
    this data shows that to tackle this population growth, an estimated increase of
    70% in food production must be achieved worldwide by 2050 [3]. Agriculture is
    also the second-largest greenhouse gas (GHG) emitter, because of fossil-based
    fertilizers, biomass, and machinery. In some of the developed and developing nations,
    the agriculture sector is the backbone of the economy. This field has a huge contribution
    in the growth of Gross Domestic Product (GDP) of developing countries, in particular,
    some of them are listed in TABLE 1. TABLE 1 Nations Having Agriculture as a Major
    Part of Their GDP [4] In India, 53% of the population is dependent on the agriculture
    sector for employment and 61.5 % of the Indian population is primarily dependent
    on the agriculture sector for its livelihood [5]. Focusing on the market size,
    India is the second-largest fruit producer in the world. Based on certain data
    and statistics, the farming income in India is expected to double by 2022. Eyeing
    this change, there is an intra-state cluster development of certain states in
    terms of the agriculture sector. The various stats and numbers representing the
    impact of agriculture in the overall economic development of India as compared
    to other fields has been shown in Fig. 1. FIGURE 1. Contributions of various sectors
    in the Indian economy [6]. Show All At present, the demand is more than the supply
    generated and this curve will illustrate more unstable results in the coming years,
    due to increase in demand with population rise. To maintain the demand-supply
    curve, there will be enormous stress on the agricultural sector. Global warming
    and changing climatic conditions are also important factors to be taken into consideration.
    From the past decades, due to the increase in demand and pressure on the overall
    structure of the field, this area is witnessing the slow but progressive shift
    from traditional approaches to the most advanced technology-driven methods. The
    use of traditional approaches and conventional methods, as well as the changes
    in the environment, lay stress on the agricultural sector. Some of the challenges
    for the agricultural sector are given as follows: The use of traditional techniques
    of farming hinders the optimization of both cost and time. Depletion of the topsoil
    due to floods and winds resulting in the deposition of the pollutants, sediments,
    nitrates, and phosphates, result in causing the eutrophication and the runoff
    of the soil. Planting the same crop after each harvest makes the soil redundant
    of the essential nutrients. Water scarcity due to the climatic changes lowers
    the level of groundwater for irrigation, thereby disturbing the water cycle. Global
    climate changes due to the destruction of the tropical forests and the other vegetative
    species in agriculture result in the elevation of the carbon dioxide and other
    greenhouse gas levels. Lack of expertise in proper recognition of the particular
    plant species. There is no proper method to detect the disease at early stages,
    such that precautionary measures could be taken to prevent it. Therefore, because
    of these factors, the need for the creation of modern methods and intensification
    of the agricultural practices to use water, soil, minerals, and other resources
    efficiently becomes obligatory. The nature of the technology and devices is changing
    i.e. it never settles for any less. A lot of research papers addressing the challenges
    of agriculture in the IoT domain have been put forth. Constant developments and
    everlasting expectations from the existing technologies paves a great way for
    motivating academicians and researchers to set and attain new standards. During
    recent years, there has been a paradigm shift in the study and application of
    domains like IoT, cloud computing, machine learning, and big data, etc. Therefore,
    from the trends of these data sets, a constant need is felt to revisit the current
    standings and capacities of the new age IoT concepts. The modern-day requirements
    and the counteractive substitutes in the field of agriculture and changes exactly
    to the expectations based on the concepts of IoT must be addressed. The contribution
    of IoT in the agriculture field and certain gaps in resource utilization motivated
    us to perform a study that addresses current issues and applications of IoT in
    agriculture. Agriculture is expected to get immensely fortified by the advancement
    of technology especially by the domain IoT. Precision agriculture is the new term
    appended to the agriculture filed, with all the procedures being followed, addressed,
    and simulated in a tech-driven manner. Incorporation of the internet has started
    to revolutionize this field by associating devices together, now being identified
    as the Internet of Things. Coined in 1999 by a British visionary “Kevin Ashton”,
    Internet of Things is a consortium of devices connected [7]. The devices are associated
    with internet via Wireless Sensor Networks (WSN), Radio-frequency Identification
    (RIFD), Near Field Communication (NFC), Long Term Evolution (LTE), and other devices
    and communication technologies. This association helps the devices and the other
    objects transfer the information gathered to destined places all over the network.
    Precision agriculture, therefore, aims to optimize and improve agricultural processes
    to ensure optimum production with reliable, fast, and distributed dimensions thus
    providing growers a detailed overview of the ongoing scenarios in the cultivation
    stretches. This practice is followed to reduce energy consumption. The major areas
    where IoT can leave an everlasting impression are climate monitoring [8], data
    analytics [9], early disease detection [10], crop counting [11], smart irrigation
    [12], etc. With the spread of a network of devices, a communication channel can
    be established between the farmers, fields, and experts. By developing IoT based
    models, the field conditions can be monitored remotely on regular time intervals
    without any human intervention and after analyzing the data favorable and efficient
    decisions can be taken accordingly. This will help to ensure both field and market
    safety and security to the farmer. Also, with early monitoring of crops, disease
    detection can be done and thus preventive measures can be taken to save the crop
    beforehand. For producers it will also help in the analysis of consumer demands.
    Whether the product will be able to meet market expectations, thus creating an
    intelligent decision driven farming. An analysis of different existing articles
    addressing the research and development of precision agriculture is presented
    in TABLE 2. TABLE 2 Alaysis of Various Papers in the Field of Precison Agricuture
    for the Current Study In this article based on research gaps and findings obtained
    from articles analyzed below, a systematic survey is done. Therefore in this study,
    the most prominent problems of the agriculture sector, and solutions provided
    by modern systems are addressed and discussed in detail. The major contributions
    of this study are as follows: A comprehensive survey of the architectural, conceptual,
    and implementation details of IoT models adopted for Precision Agriculture has
    been carried out. Various IoT hardware platforms and other associated devices
    like sensors, accumulators, etc. along with their role in agriculture have been
    discussed in brief. Various IoT OS supported for Precision Agriculture have been
    discussed. The significance and key differences of MIoT in agriculture have been
    discussed along with related studies. Studies limited to a specific domain has
    been merged together for clear mapping of the domain. Sensors and their role in
    agriculture is discussed. Various projects/ start-up’s started all over the globe
    for tacking agricultural problems and providing intelligent and sustainable solutions
    to farmers have also been discussed. Functional concepts like limitations, improvements,
    future works and applications are discussed separately. The rest of the paper
    has been organized as in Section 2 various search and source methods used for
    the selections of relevant articles has been introduced, in Section 3 to get into
    the deep insight of the various concepts, theories, and devices related to the
    implementation of Internet of Things has been discussed, followed by Section 4
    which gives the various related studies concerning different applications of Internet
    of Things in Agriculture, findings like challenges, limitations, improvements,
    future work, etc. with a short description of our proposed work has been given
    in Section 5, and finally, at last, the article ends with a conclusion. Table
    3 gives the detailed nomenclature used throughout this article. TABLE 3 Nomenclature
    SECTION II. Sources and Search Methods The research methodology consists of going
    through articles based on the contribution of IoT and its related technologies
    for the advancement and development of the agriculture filed. For designing the
    overall structure of this article, the data and selected studies are chosen strictly
    based on a time frame. Most of the articles taken for study are sorted from 2015
    to 2020. This time frame is chosen to visualize and understand the current impact
    of IoT in the field. In TABLE 4, a summary of the resources from where the papers
    have been selected is presented. TABLE 4 Summary of the E-Reserves for Obtaining
    the Related Research Articles Given the objective of this article, research has
    been conducted thoroughly by examining the existing literature work related to
    the subject. For developing a firm foundation, the articles containing the origin
    of IoT, alongside current standings, recent trends, and technologies, were considered
    for a study concerning their contributions to the field of agriculture. By reviewing
    the existing literature, a sustainable framework has been developed to overcome
    the existing challenges in the field. The keywords mainly used to identify the
    literature included Precision Agriculture, Agriculture, Plant Monitoring, Internet
    of Things, Smart Agriculture, Smart Farming, Irrigation, Plant Pathology, Wireless
    Sensor Networks, etc. The eight-year trends of the different terminologies and
    their search significance over the years have been extracted from Google and are
    presented in Fig. 2 and Fig. 3. FIGURE 2. Worldwide distribution of IoT of the
    past eight years [19]. Show All FIGURE 3. Precision Agriculture distribution worldwide
    of the past eight years [19]. Show All From the figures, it can be seen that the
    frequency of search or usage of these two terms is somewhat stable over the past
    eight years. An average, 80% of people talk and search about these topics for
    study and other related purposes, thus establishing the growing interest worldwide
    in this area. So for a better understanding, in the next section, the various
    terminologies related to the Internet of things concepts and devise have been
    discussed. SECTION III. Introduction to the Internet of Things (IoT) Concepts
    and Theories Inspired from the technology of the internet to connect the whole
    world, the Internet of Things constitutes of things possessing unique identities
    and are connected to the internet. A cosmos of sensors, actuators, appliances,
    and other devices connected with each over the internet, results in making the
    Internet of Things (IoT). The scope of IoT is not just limited to only connecting
    things but to allow them to communicate and exchange data. Based on the Electronic
    Devices and Network Annex-IEA-4E (EDNA), by 2020 the number of connected devices
    will rise to 50 billion, thus resulting in the generation of high revenue. IoT
    works in a layered manner depending upon the problem it is addressing. Therefore,
    it can be define that IoT possesses a layered architecture [20]. All these layers
    combined are called the IoT functional blocks. Apart from the functional blocks,
    various communication models that aid the smooth working of an IoT model are a
    request-response model, publish-subscribe, push-pull, and exclusive pair [20].
    Fig. 4 represents the reference architecture of IoT in agriculture and includes
    the following layers: device/physical layer, network layer, middleware layer,
    service layer, analytics layer, and end-user layer. The layered architecture includes
    all the hardware devices, facilities, equipment, internet, communication technologies,
    protocols, and data analytic algorithms. How the layers work along with each other
    is described below: Perception Layer: Also called physical or the device layer,
    this layer lies at the bottom of the architecture and constitutes of sensors,
    actuators, microcontrollers, gateways, routers, switches, hubs, etc. The main
    role of this layer is, how efficiently the sensing devices and the other equipment’s
    can work together to gather data. The microcontroller device acts as a controller
    as it performs all the networking ifunctionalities. The microcontroller also acts
    as a network regulating body as it regulates the networks, such that the sensors
    and other devices can collect data. The main aim of this layer is to capture data
    and transfer it to the other layer i.e., the higher abstraction layers. In terms
    of agriculture, the devices in the physical layer gather, soil, water, pH value,
    humidity, leaf wetness, and other data parameters. Also, the topology in which
    the devices are placed plays a major role in power consumption and efficient data
    collection in this layer. Network Layer: It comprises of internet and other communication
    technologies. The main aim of this layer is, how to achieve better communication
    in the platform. In terms of agriculture, the design of this layer plays an important
    role in a framework due to the selection of suitable communication technologies
    relevant to field size or the test bed size. LTE, CDMA, GSM, Wi-Fi, ZigBee, LoRa,
    NFC, UWB Bluetooth, and RIFD are some of the communication technologies used for
    agriculture purposes. ZigBee, LoRa, and NFC are the most used communication technologies
    employed depending upon the problem and the area to be addressed in the agro domain.
    NFC and Bluetooth are the most suitable for the greenhouses. Various protocols
    like HTTP, WWW, and SMTP serve for efficient communication in the agricultural
    scenarios. Middleware Layer: This layer in IoT architecture is accountable for
    device management, context awareness, interoperability, portability, and security-related
    responsibilities. In terms of agriculture scenarios, HYDRA, SMEPP act as best
    middleware due to their context-aware functionalities. Service Layer: Dealing
    with agricultural problems, cloud-assisted service layer in IoT layered architecture
    plays a prominent role in providing cloud storage and Software-as-a-Service (SaaS).
    To facilitate the function of sensing, actuation, and other activities, this layer
    focuses on some main areas or domains such as monitoring, detection, control,
    decision making, recognition, etc. The service layer offers services like device
    monitoring, control, discovery, and data publishing services. Analytics Layer:
    The layer is responsible for the processing and analysis of data. This layer works
    as a consortium of two steps- 1) Data ingestion, is the step that performs storage,
    cleansing, and streaming of data and the 2) Data analytics, which performs data
    reporting, mining, and learning. In the analytics layer various machine learning
    tools, data analytic algorithms are employed to give early predictive decisions
    for measuring the crop yield, crop growth, disease detection, etc. These decisions
    can enhance farm monitoring capacity. The predictive decisions can help in the
    design of better decision support systems. End-User Layer: Being the topmost layer
    of the model, it serves the consumer or the user. To provide the interface to
    the users to control and monitor their model, this layer allows them to view the
    system status, analyze or process the data. In agro models, the farmer is the
    end-user. This layer provides a user-friendly experience and platform to the farmers.
    The services or applications in this layer are designed based on the behavioral
    study and pattern analysis of the user. Various intelligent approaches and data
    analytic studies are employed to understand the behavior of the users, as they
    come with different needs and offer a lot of diversity. Social media, Cloud computing,
    Mobile messaging are the platforms used to provide services to users, experts,
    and industries. Through this layer, the whole IoT based platform can be monitored,
    controlled, and run. The services generated from this layer are mostly the link
    between the user and the systems/platforms. FIGURE 4. A layered ecosystem/architecture
    of Agro-IoT. Show All A. Multimedia Internet of Things (MIoT) in Agriculture Based
    on the working, nature of deployment, and the subject IoT concepts are used to
    address, traditional IoT is differentiated into various forms such as IoMT, MIoT,
    IIoT, etc. Without the inclusion of these concepts, IoT systems cannot successfully
    realize the concept of ubiquitous computing. In these paradigms, the interaction
    and cooperation between the heterogeneous devices is facilitated. Due to the increase
    in the number, diversity of devices and data with time, these concepts have become
    more functional and prominent to develop models and techniques for coming challenges
    and reflect the possibilities enabled in them. All these concepts have the same
    main character of availability, intelligence, and devices but they only differ
    in their due course of action i.e., their general usage. Being an allied branch
    or extension of IoT, MIoT, include smart objects that are usually resource-constrained,
    in terms of memory, energy, and processing power. Due to the progressive reduction
    in size and cost of production of these devices, MIoT models are expected to be
    developed and deployed on a large scale. Generally, the sensors of these models
    are usually designed to be battery operated or solar power operated. Due to the
    large data sensing and analysis, these devices require high computational power.
    Mostly, the multimedia data includes audio, video, and image data, which possess
    unstructured features and is difficult to transmit and analyze on a computationally
    scarce network and low bandwidth conditions. Multimedia data shows different behavior
    compared to the scalar data due to its computational complexity and network topology
    bottlenecks to the Quality of Service (QoS). A lot of work has been done in IoT
    and its allied fields to realize the concept of heterogeneous, low-level data
    transmission, and communication. In agricultural frameworks, the data is mostly
    in the visual form e.g., pest images, plant disease images, field images, etc.
    The characteristic difference in scalar and multimedia data is shown in Fig. 5.
    FIGURE 5. Key characteristic differences between IoT and MIoT data [25]. Show
    All Depending upon the various parameters there are key differences between IoT
    and MIoT and they are discussed as: The IoT systems work mostly on non-heterogeneous
    devices while the MIoT functions well in case of heterogeneity. IoT data is mostly
    scalar, however, MIoT considers the multimedia data. Traditional IoT networks
    does not take into consideration the concept QoS while transmission and communication
    whereas in case of MIoT, QoS and QoE play a major role as the prime parameters.
    IoT can function well over low bandwidth channels whereas MIoT networks are in
    demand of high bandwidth due to bulky data. Node operation is predefined in IoT
    whereas in MIoT the node operation is adaptive in nature. Various authors have
    worked on the implementation of concepts of MIoT for agriculture. Zhang et al.
    [21], worked on the concept of preserving the concept of data confidentiality
    while realizing the challenge of low-cost data acquisition. A measurement matrix
    under the control of chaos and random subsampling is employed to capture the ruptured
    image signals. Then these sampled sub-images are assembled to form a big master
    image and then encrypted based on android transform and single value diffusion.
    Correlation, histogram, keyspace, robustness, real-time, and entropy analysis
    are performed to understand and realize the concept of low-level transmission.
    Rani et al. [22], worked on the concept of bridging the gap between the scalar
    and multimedia data, and for this, they developed an IoMT cross-layer protocol.
    This protocol considered cross-communication between the physical, data link,
    and routing layers. The main objective of this work was to achieve energy-efficient
    communication with less computational time complexity. An optimal mathematical
    model was developed to study the cross-layer behavior in all the three layers,
    therefore selecting the efficient one. A comparative study was conducted on two
    parameters like delay and distance. Usman et al. [23], proposed a multilayer framework
    based on multilevel edge computing architecture to manage, and preserve the privacy
    of end devices from external attacks. Authors mainly focused on the three major
    challenges i.e., node management, privacy-preserving, and network protection.
    The proposed architecture is divided into three layers with the first layer comprising
    of underlying network partitioned into multiple clusters to manage end-devices
    and Level-One Edge Devices (LOEDs). In the second layer, the LOEDs apply an efficient
    aggregation technique to reduce the volumes of generated data and preserve the
    privacy of end-devices. Local differential privacy-based technique is applied
    to protect the privacy of sensitive information in aggregated data. In the last
    layer, the mobile sinks are registered with a level-two edge device via a handshaking
    mechanism to protect the underlying network from external threats. Floris and
    Atzori [24], addressed the issue of evaluation of Quality of Experience (QoE)
    for IoT applications where mostly multimedia data is involved. For designing a
    layered architecture, authors first tried to analyze the QoE parameters or factors
    with applications in the relevant scenarios. Then a layered multimedia IoT architecture
    was proposed for QoE analysis by combing each of the analytic and contributing
    factors. Zikria et al. [25], presented a brief overview of the MIoT along with
    its challenges, solutions and future opportunities. The authors discussed the
    data differences between the traditional IoT and MIoT, along with the role of
    communication technologies. The demand for realizing the dream of MIoT and its
    bottlenecks were also discussed. The challenge of data collection and its impact
    over the network traffic is also discussed along with the methodologies developed
    to solve it. Nauman et al. [26], presented a comprehensive survey on the multimedia
    internet of things. Authors discussed the existing role of MIoT in concern with
    various fields like medical, agriculture, automation, and industry, etc. The importance
    of QoE and QoS for multimedia transmission over IoT channels is also discussed.
    A better need for routing and Physical-Medium Access Control (PHY-MAC) protocols
    for M-IoT was also discussed. A potential discussion on open research issues related
    to multimedia communication in IoT was presented. Alsamhi et al. [27], presented
    a survey on the role of green IoT in greener and smart cities. The authors focused
    on how the environment pollution can be controlled along with other parameters
    for making living more sustainable and green with the aid of IoT concepts. AlSkaif
    et al. [28], presented a survey on the energy efficiency of MAC protocols in low
    data rate wireless multimedia sensors. The conflicting goals of WMSN were also
    discussed. Role and challenges of multimedia data were also discussed. A focused
    analysis was performed on network parameter constraints and what techniques are
    employed to solve them. A comparison of the energy consumption of MAC protocols
    in four selected application scenarios related to smart cities and environment
    monitoring was also presented. Libo et al. [29], worked on how with the use of
    multimedia data in the form of images can be employed to detect the plant diseases.
    Rape diseases were studied as a case study. Authors also discussed the challenges
    and bottlenecks faced for the transfer of multimedia data over low bandwidth channels.
    With machine intelligence, authors also proposed a diagnostic procedure via which
    the data can be transferred over wireless multimedia sensors networks. Psannis
    et al. [30], proposed a technique for the transfer of advanced media-based smart
    big data via intelligent systems. Authors in their work addressed the problem
    of the rapid rise of devices and heterogeneity. An encoding algorithm with HVEC
    standard for performance evaluation was proposed to transfer the data intelligently.
    B. Hardware Platforms for IoT The hardware platform for IoT comprises a set of
    compatible hardware capable of running certain software. The main components of
    a hardware platform are machine language, sensors, wireless devices, programs,
    and processors, protocols, etc. The processor in a hardware platform determines
    how much fast a framework can work. To design certain new methodologies in IoT,
    various hardware platforms supported are elaborated as: 1) Raspberry Pi It is
    a series of single-board computers developed in the UK by Raspberry foundation.
    There are various families of raspberry i.e., Raspberry Pi 1, Raspberry Pi 2,
    Raspberry Pi 3, Raspberry Pi Zero, Raspberry Pi 4. All these families have different
    models. The Broadcom processor is used in most of the boards. It acts more like
    a computer system and can do multitasking [31]. 2) Arduino Uno Developed by Arduino.cc,
    it is a microcontroller board and is based on the ATMega32 processor. Arduino
    Uno possessing a USB port is a very valuable addition to the family of microcontrollers.
    Various versions of Arduino like Arduino Uno, Arduino Due, Arduino Leonardo, and
    Arduino Mega are present in the market. Out of these the most common versions
    are Arduino Uno and Arduino Mega [32]. 3) Node MCU It is an open-source IoT platform.
    It generally refers to firmware rather than the development kits. It is a low-cost
    open-source kit/module developed for the ESP8266 Wi-Fi chip. It is developed in
    the Arduino IDE environment [33]. 4) Beaglebone Developed by Texas Instruments,
    it is a low-cost open-source single-board computer. Its size measures 75 by 75
    mm and possesses all the functionality of a basic computer. It requires 2W of
    power or a 5V separate power and can work smoothly without any cooling or sinks
    [34], [35]. 5) Banana Pi It is a low-cost credit-card-sized single-board computer
    developed by a Chinese company Shenzhen SINOVOIP Co. Ltd. The hardware design
    is hugely influenced by Raspberry Pi. It is compatible with Raspberry Pi boards
    as well. It can be developed both on Android and Linux [36]. The various hardware
    platforms of IoT with their functional specifications are given in TABLE 5. TABLE
    5 Hardware Platforms of IoT and Their Specifications C. IoT Operating System (IoT
    OS) for Agriculture IoT operating system (IoT OS) is an operating system designed
    to perform within the constraints particular to Internet of Things devices. IoT
    OS are designed and developed in such a way that it can function under the restrictions
    of memory, size, power and processing capability. The main aim of IoT OS is to
    enable successful data transfer over the network via internet. The IoT OS for
    a particular framework is not chosen at random. Certain parameters such as footprint,
    scalability, portability, modularity, connectivity, and reliability are taken
    into consideration. As per the requirement of agriculture, a huge number of devices
    are connected having different features and also the devices have to withstand
    the different environments, the OS then to be chosen must be scalable, cost-efficient,
    and reliable. Various studies have been put forward for the role of IoT OS in
    network management and overall communication. Javed et al. [37], provided a detailed
    reviewed comparison of the operating systems designed for IoT devices based on
    their architecture, scheduling methods, networking technologies, programming models,
    power, and memory management methods, along with other features required for IoT
    OS applications. Musaddiq et al. [38], studied the role of small IoTOS in powering
    the scarce network devices. Authors also put light on the energy consumption of
    these devices. A detailed discussion on IoT devices and resource management is
    provided and some state of art IoT OSs such as Contiki, TinyOS, and FreeRTOS are
    also investigated. Baccelli et al. [39], a comprehensive review of RIOT is provided.
    The key components highlighted in this study are the kernel, hardware abstraction,
    software modularity for various configurations. The authors also discussed the
    operational aspects like system boot-up, timers, power management, and networking
    along with the relevant APIs. Zikria et al. [40], proposed a study for the management,
    challenges, and opportunities of IoT OS in managing IoT systems. The authors discussed
    the issue of interoperability, protocol functionalities to support heterogeneous
    deployment scenarios. Supported hardware and future research trends are also discussed.
    Ain et al. [41], proposed an efficient and flexible decision-making system for
    maintaining user thermal comfort with the help of intelligent sensors. Fuzzy based
    approach along with RIOT OS was developed to tackle the problem of fluctuation
    and adjustment. Results show that the proposed approach can perform 28% better
    than the existing approaches in terms of energy efficiency. Stergiou et al. [42],
    studied the transfer of metadata in the IoT networks. Authors discussed the techniques
    and open tools such as CC analyzers and simulators which can provide intelligent
    metadata transfer over a network. The experimentation was performed on CloudSim
    and Cooja emulator of Contiki OS for the testing of a single network segment.
    From the experimentation, it was found that no duplicate packet transfer occurred
    which is a good sign for multimedia data transmission. The various IoT OS with
    their functional specifications are presented in TABLE 6. TABLE 6 IoT OS Platforms
    in Agriculture and Their Specifications D. Sensors and Their Role in Agriculture
    Sensors are the devices, modules, machines or subsystems capable of detecting
    the changes or events in the environment. They also send signals back to the receiver
    end. Mostly the sensors are used with other electronics. A sensors sensitivity
    usually indicates how much change in sensor output occurs with respect to the
    change in the input quantity measurements. Most sensors possess the linear transfer
    function. The sensitivity of a sensor is defined as the ratio between the output
    signal and the measured property. The resolution of a sensor is the smallest change
    it can detect in the quantity it is measuring. In the area of agriculture, demand
    of technological solutions with high aim in rising production and quality is increasing
    day by day. Also the solutions are required which provide optimal analysis and
    sustainable methods for the field development with reduced cost and time. To sustain
    such challenges, sensor- based technologies have proven to be of much help to
    tackle the above issues and challenges. Precision agriculture is an emerging area
    where sensor based technologies are playing a major role. Since the sensors are
    a major data collection agents, they play a dynamic role in agriculture. Also,
    it is very difficult to collect the data from an agricultural field due to the
    undulating field conditions that keep on changing over time. Sensors are selected
    or designed according the problem to be addressed or needs identified by the farmers.
    Agriculturalists generally use sensors to sense the soil conditions, humidity,
    crop conditions, minerals, pH value, water levels, and sunlight, etc. The nature
    and the characteristics of the component which needs to be sensed also plays a
    major role in the development of a sensing device. With the development of technology,
    machinery and easy-to-use microcontroller platforms, the usage of sensors has
    expanded beyond the traditional fields of measurement i.e., temperature, pressure
    and flow. However, the analog sensors such as potentiometers and force sensing
    resistors are still widely in use. Pajares et al. [54], discussed the sensors
    in agriculture and forestry. In the article, various related works of the sensors
    performed by different authors in the same domain were presented. The role and
    importance of the component or substance which needs to be sensed was discussed
    along with their characteristics and specifications. The major areas focused by
    authors were soil analysis, seed growth, weed detection, forest stands and reflectance,
    machinery for effective treatments, microorganisms, pest control, seedling breeding,
    growing, state of health, positioning, navigation, safety, detection and classification.
    Zhu et al. [55], showed that LIDAR, IMU, and Encoder (x2) can be used for designing
    a prototype vehicle for the agricultural domain. The authors also discussed how
    these sensors can be used for the development and usage of that prototype in case
    of undulating surfaces and rough terrains. A complete review of the wireless sensors
    and the network applications used in agriculture is provided. The authors also
    addressed the importance of sensors in the field of agriculture. Along with the
    sensors, the communication technologies that support sensor communications are
    also mentioned by Rehman et al. [56]. The sensors used in the medical and agricultural
    fields have also been discussed. In the case of the agricultural field, the various
    conditions and circumstances affecting the data collection from sensors are addressed.
    The various types of sensors and their platforms used by different authors in
    their work are also included by Chokkareddy et al. [57]. Plageras et al. [58],
    used efficient IoT based sensor and big data analytics for secure collection of
    data and communication over a channel. In the study, smart housing or building
    was taken as case study, and the secure data collection with the sensors was performed
    and analyzed. The behavior of various sensors for data collection in different
    scenarios in terms of IoT and cloud computing was studied by Stergiou et al. [59].
    The secure communication among devices was also studied along with performance
    bottlenecks and challenges. The various sensors and their use in agriculture is
    discussed below: 1) Level Sensors They measure the substance of liquid in a cast.
    The cast can be any agricultural field, pond, water tank, etc. They measure data
    in two methodologies 1) Point level measurements: indicate only whether the constituent
    or level measured is above or below the sensing point or threshold. 2) Continuous
    measurements: specific range measurements and exact substance amount determination
    are performed by these sensors. In agricultural fields, the water level sensors,
    humidity sensors, and moisture sensors are used to measure the water content levels
    in a field. The point level sensors are used when the water content in the cast
    i.e., soil or testbed is very less i.e. in dry and arid areas, whereas the continuous
    level sensors are feasible for semi-arid locations. Some of the ultrasonic level
    sensors are also used in water treatment plants. Blank et al. [60], designed a
    low-level senor based fusion application for agricultural machinery design. 2)
    Temperature Sensor Temperature sensors measure the temperature of the environment
    or surroundings. They are of different types i.e. thermistors, thermocouples,
    resistance temperature detectors, infrared sensors, semiconductor sensors. In
    agriculture they measure the temperature variants in a field. Mahan et al. [61]
    designed an optimal temperature based field monitoring system by using a low-cost
    infrared sensor. 3) Proximity Sensors Detect the presence of nearby objects without
    any physical intervention. The sensor works by emitting an electromagnetic beam
    in the field and looks for any alterations in the signal. These are mainly employed
    in agricultural cattle grazing, counting of fruits, etc. Kim et al. [62] used
    a capacitive proximity sensor to optimize the harvest yield of fields. 4) Infrared
    Sensors Senses the changes in the environment by emitting infrared rays. They
    work in two approaches i.e., active and passive. An active IR sensor can both
    emit and detect the radiations and constitute a light-emitting diode and a receiver.
    The passive IR sensors can only detect the radiation and possess only a LED. In
    agriculture field infrared sensors can be employed to detect the presence of rodents
    in the orchards, count the number of plants or trees in the field, capturing satellite
    images of the field. Allred et al. [63], used IR sensor-based satellite imagery
    to map the findings and results of UAV to chart agricultural drainage systems.
    5) Touch Sensors Also known as tactile sensors, work on sensing the touch. They
    are low-cost sensors. In the agriculture field they can be used for the detection
    of intrusions in the field. Depending on the target and the range, there are different
    types of sensors, the same are discussed in Fig. 6 and TABLE 7 below: TABLE 7
    Sensors Based on Their Fields of Application FIGURE 6. Sensors and their types.
    Show All SECTION IV. Related Work The advancement and role of the Internet of
    Things in precision agriculture along with the related areas where research is
    being conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections. Various studies are performed and put forward by various
    academicians and authors concerning the evolution of agriculture relating to the
    incubation of the concepts of the Internet of Things. Kim et al. [64], reviewed
    different articles related to the induction of unmanned aerial vehicles in agriculture.
    The authors highlighted the recent trends, controls, perspectives, and platforms
    of UAV for agriculture. The study focused on what are the different platforms
    used for UAV and how those platforms can be designed. The hardware components
    related to the design of UAVs were also discussed. Sensor types compatible with
    platforms such as fixed-wing, helicopter, quadcopter, etc. were also discussed.
    A study on critical technologies for communication, modeling, and control was
    also presented. Various applications of UAVs in crop monitoring, spraying, and
    mapping, etc. were also presented. The authors concluded their study by providing
    the data on the latest technology trends and applications of UAVs in agriculture.
    Ayaz et al. [65], studied the latest trends and technologies in the field of agriculture.
    The potential sensors, IoT devices, communication techniques, used for soil, crop
    irrigation, insect, pest analysis were studied and discussed. Also, how this technology
    is redefining the agriculture system and boosting farmers to work, is portrayed.
    Authors studied the recent developments of IoT and how it is helping in providing
    the solutions while designing an IoT system for agriculture, what strategies and
    policies need to be considered. The advanced agricultural practices such as greenhouses,
    vertical farming, hydroponic farming, and phenotyping are also explained. All
    the crop stages and potential challenges are also discussed. Farooq et al. [66],
    presented many aspects of IoT in agriculture. Authors discussed all the recent
    technologies associated with IoT along with big data analytics for the development
    of precision agriculture systems. Various network topologies, architectures, layers,
    and protocols are also presented. In context to the development of a smart farm,
    all the major components and relevant technologies were discussed. Also, the regulations,
    standardizations, and policies used by several countries to standardize IoT methods
    for agriculture have been discussed. Elijah et al. [67], gave an overview of IoT
    and data analytics technologies and practices in agriculture. The authors divided
    their study into four sections i.e., communication technology, internet, data
    storage, technology. The authors also provided an analysis and data on how the
    aforementioned sections can be employed for dealing with the diminishing agricultural
    resources. The pros and cons of various technologies such as cloud computing,
    WSN, radio frequency identification, middleware systems, etc. to their application
    in the agriculture field are also discussed. Studies on how these technologies
    can be used to develop an IoT ecosystem, with technical and business scenarios
    were also presented. Misra et al. [68], discussed the concepts and role of IoT,
    AI and big data in the field of agriculture. In the review, focus was laid on
    green- house monitoring, disease detection, usage UAV machines and drones agriculture
    and supply chain modernization, social media in food industry, food quality assessment
    and modernization for food traceability. Thakur et al. [69], reviewed articles
    of repute in the context of the employability of WSN in agriculture. The authors
    highlighted the different communication technologies and WSN technologies adopted
    for precision agriculture. The authors also discussed various sensors and their
    role in agriculture. The influence of various techniques for designing the models
    is also discussed at length. Damos [70], presented a review on the pest control
    in precision agriculture. The author discussed the various computer-aided technologies
    employed for forecasting and designing decision support systems. The challenges
    and constraints of designing the decision support system were highlighted. The
    most available and published data present online in terms of pest management was
    also discussed. A differentiation between the documented and existing decision
    support systems was highlighted. The advancement and role of the internet of things
    in precision agriculture along with the related areas where research is being
    conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections and are discussed as follows: A. IoT in Farm Management
    Farm management refers to the construction and implementation of decisions for
    obtaining the maximum production and profit via organizational operation of decisions.
    This area is most benefitted by automation and the implementation of new technological
    methods. With farm management agricultural practices are made informative by evaluation
    and comparison with the other developed approaches and methods. Diedrichs et al.
    [71], with the aid of machine learning and IoT sensing devices, predicted the
    occurrence of frost events. Authors designed their system based on three layers
    i.e., a group of internet-enabled devices for water data collection. The authors
    augmented the data using the synthetic minority oversampling technique due to
    its capability of reducing the occurrence of errors with the ML approaches. The
    humidity and temperature sensors were employed to collect data from five meteorological
    stations of the Mendoza Province of Argentina. For each station, the existing
    sensor data spanning from a period 2001 to 2016 was taken as a reference to collect
    the daily data. The data was divided into two sets i.e., locally available is
    the config-local and the one available globally is the config-all. Bayesian Networks
    were employed along with SMOTE and recursive portioning, to train the system.
    Jawad et al. [72], designed a wireless power transfer technology based on a drone
    charging system for smart agriculture. The authors used the concepts of magnetic
    resonator coupling and sleep/active modes of charge transfer system for designing
    the model. Authors mainly focused on how to charge wirelessly the drones and other
    equipment employed in agricultural field monitoring. The magnetic resonant coupling
    technique was considered due to its capability of high power transfer and efficiency.
    In the experimentation, authors found that the FSC coil with 150 coil turns in
    the transmitter circuit and the MTC comprising of 60 coil turns in the receiver
    (i.e. drone) accomplish the maximum transfer power and efficiency. For finding
    the accurate efficiency, the model was tested based on different load, and how
    to load misalignment changes the model behavior was also noted. Drone flight time
    was also taken into consideration and was estimated based on the adopted battery
    capacity and payload of the drone. Tseng et al. [73], proposed an intelligent
    IoT based platform for farm management. The authors took the data based on different
    plants i.e., beans, spinach, celery via sensors, and used 3D normalization on
    that data to extract the optimal/useful data. The average and variance were moved
    to obtain user data without making any visible changes in the actual data. Farmer’s
    behavior was analyzed for the application of pesticides and fertilizers. For the
    platform development SIM5320E, IoT Development Board is used along with the BH1750
    illumination sensor and BME280 temperature and moisture sensor. Bacco et al. [74],
    designed a model based on air-ground UAV communications for smart farming. Authors
    empirically and analytically developed a real test-bed implementation of IEEE
    802.15.4 based communication between unmanned aerial vehicle and ground sensors.
    The focus was laid on how to transfer data between sensors and other devices present
    on the ground in an optimized manner to ensure fewer transmission losses. From
    the experimentation, and result analysis authors found the Gilbert-Elliot model
    to be suitable to approximate the packet loss in the link at low transmission
    speeds. The authors used approximately 80,000 datasets from the testbed. Ahmed
    et al. [75], based on the concepts of fog computing and Wi-Fi-based long-distance
    networks proposed a system for smart monitoring. In comparison to the existing
    traditional models, a scalable and flexible model was designed for monitoring
    and controlling agro farms in rural areas. Authors introduced a WiLD network and
    fog computing in the existing WSN-based solutions to cover long ranges with fewer
    delays. A cross-layer based MAC and routing solution for sensing and actuating
    were proposed to reduce the network latency. Throughput, coverage range, and network
    latency of the network structure were analyzed. Liu et al. [76], by hybridizing
    the concepts of IoT, cloud computing, and data mining proposed an integrated framework
    for the agricultural field. China was considered as the territory to design and
    devise mechanisms to enhance modern agriculture as compared to the conventional
    one. Quality, safety, management, and pollution are were taken into consideration
    while designing the model. NoSql database, DynamoDB, relational database Oracle,
    and file object storage Amazon S3, were employed to provide the hybrid data storage
    design. Bai et al. [77], due to the issue of frequently changing environmental
    conditions addressed the issue of estimation and control in the greenhouse. The
    authors studied how to collaboratively deploy WSNs and actuator schemes for agriculture.
    Sensor nodes were used to conduct a local estimation with Kalman filters to enhance
    the stability and transmission of data ensuring energy optimization. Using the
    concepts of collective clustering and mutual effect, the actuator node based scheme
    is designed for the improvement of estimation speed and conversion accuracy. Parameter
    optimization is achieved through fuzzy neural networks along with the PID control
    algorithm. Jinbo et al. [78], performed research on developing a platform for
    the monitoring of a field with agricultural modernization. A system named DEMO
    was proposed by using the SpringMVC framework, MyBatis, Spring Data DynamoDB Stored
    Procedure, Paho, and other related technologies grounded on the J2EE platform.
    Open-source elements such as raspberry, IoT gateway integrated with the ZigBee
    module were used for the development of the platform and were chosen due to their
    stable and cost-efficient properties. The proposed system is capable of massive
    data processing and analysis for agricultural monitoring. RESTful interface service
    system developed on a cloud platform, ExtJs client technology, and WeChat were
    applied to develop the Demo system of an application layer. Mukherjee et al. [79],
    worked on the challenges of a decentralized and heterogeneous UAV swarm deployment.
    The work is focused on how to design and deploy a UAV in resource-constrained,
    harsh, and challenging environments. Swarm edge due to its heterogeneous nature
    and unequal data generation within its member’s results in under-utilization of
    the available computational resources. To solve this issue, the authors proposed
    a Nash bargaining-based weighted intra edge processing offload scheme which can
    reduce the problem of heavy processing in some swarm members. The proposed method
    achieves better scalability and reduced processing delays. Chen et al. [80], developed
    an IoT based inexpensive platform named ‘AgriTalk’ for precision soil farming.
    Turmeric plant was considered for cultivation and experiments were conducted to
    enhance its growth and production. Authors employed AgriTalk in developing several
    other IoT based models for the fields of Mountain Bao in Taiwan. For the study
    authors grew turmeric in three fields. The proposed model is capable of addressing
    dynamic changes in the field conditions for plants grown via in-soil cultivation.
    Automated devices like sensors, actuators with desired farming intelligence were
    employed to design the model. Manual delays for automatic control and switching
    over long distances were also addressed. From experim-entation it was found that
    the curcumin concentration in turmeric leaves after six months was elevated to
    6685.6 μM as compared to 72.1 μM thus witnessing a fivefold increase. Lopez et
    al. [81], proposed a smart system for estimation of soil parameters using an autonomous
    wireless sensor network. Phosphorus content in the soil was measured. For power
    optimization and maintaining a balance between change rate phenomena of soil throughout
    the day for phosphorous estimation, authors developed a dynamic power management
    approach. DPM was tested on both the circuit level and the system level. ANN was
    used to find the significant correlations between the soil parameters such as
    electrical conductivity, phosphorous, temperature, and humidity. Also, energy
    harvesting with the help of IoT and cloud services is proposed. Chen and Yang
    [82], provided a detailed analysis of how efficiently the systems can be developed
    for agriculture based on the techniques of data visualization, clustering, etc.
    The authors studied the significance of various parameters in the same environment
    and effects. For the promotion of efficient development of agriculture, the authors
    proved that data visualization and cluster analysis pave a way for finding the
    key technologies to be applied in modern agriculture. For time and cost optimization,
    functions such as sensing, monitoring, identification, transmission, and feedback
    can be realized using IOT platforms and they can serve as an impetus for intelligent
    agriculture. To test and develop their methodology, authors took the agriculture
    situation in the Jhinsa river basin which lies in the upper reaches of the Yangtze
    River as a testbed. This area has become the most abundant area of biological
    communities in Eurasia. For the study, the authors collected precipitation and
    temperature data. Since data was large, k-means clustering is used to analyze
    the data. Leng et al. [83], presented a study for the application of IoT in agricultural
    products supply chain management. Authors discussed in length what to take into
    consideration, while designing a structural model for the supply chain management.
    RIFD technology was considered as the key constituent for designing the model.
    Pereira et al. [84], based on the concepts of IoT developed an instrument capable
    of performing environment monitoring in a poultry farm. The authors focused on
    designing a cost efficient prototype for the poultry monitoring which provides
    affordable benefits compared to the commercial products available in the market.
    DHT22 sensors were used to collect air pressure and temperature details and CPU
    such as Wemos Mini D1with chipset ESP-8266EXwith standard Wi-Fi 2.4 Ghz connectivity
    were used to calibrate the whole model. Singh et al. [85], developed a cloud based
    autonomic system for delivering agriculture as a service via web and mobile based
    applications. For data collection IoT and other devices were used for communication
    and coordination. Fuzzy logic was used to automatically analyze agriculture. An
    architecture named Agri-info was developed to provide user services. Kolipaka
    [86], proposed a predictive analysis using cross media references for precision
    farming. Authors focused on the usage of sensors and MEMS integrated IoT for precision
    farming. The crop growth parameters such as soil state, water, weed state, crop
    quality and seed quality were also discussed. ML and big data approaches were
    applied to perform predictive analysis and thus finding method to provide optimal
    solutions to farmers. Further based upon the certain characteristics we have tabularized
    the major findings in TABLE 8. TABLE 8 Summary of Developed Methods for Farm Management
    B. IoT in Irrigation Irrigation is the method of application of controlled water
    to the farming fields, at needed intervals. Irrigation has been a constant area
    where a lot of energy, money, and labor is invested in the case of farming. Detection
    and knowledge of water level can reduce the cost of production by half. For increasing
    crop yield, smart irrigation management is essential. Various optimized and precise
    methods have been developed by various academicians. Klein et al. [96], with the
    help of satellite images, worked on the implementation of closed-loop irrigation.
    The authors designed a real-time water requirement system, which can optimize
    water delivery for 140 cells located in four hectares of land. Vegetative indexes
    were calculated for analyzing the total water consumption and how via loops this
    facility can be automated. Through this study and experimentation it was found
    that with the integration of closed-loop strategy and advanced water analysis,
    the overall water consumption efficiency can be improved. Alahi et al. [97], extended
    research to design and develop a smart nitrate monitoring system for the monitoring
    nitrate content in the surface and groundwater. The authors proposed a portable
    sensing system with the help of a planar inter-digital sensor, associated electronics,
    instrumentation, and electrochemical impedance spectroscopy-based analysis. Through
    real-time monitoring and sending data directly to the IoT web server, the proposed
    system possesses the capacity to monitor the impact of industrial, urban, and
    agricultural activity on water content and quality. The system also ensures distributed
    monitoring. Daskalakis et al. [98], used leaf sensing technology instead of ground
    soil monitoring for knowing the plant water stress. The authors proposed a low
    cost and low power consumption leaf moisture sensing model by sensing the leaves
    with the new plant backscatter sensor node/tag. The developed tag collects the
    information from a leaf via analog and digital conversions and then the data is
    transferred via remote communication to a low-cost software-defined radio reader
    using monostatic backscatter architecture. The data collected from this node is
    then connected to the irrigation system. The proposed system is powered by a flexible
    solar panel. Jayalakshmi and Gomathi [99], proposed a sensor-cloud based precision
    agriculture for intelligent water management, to enhance crop production. For
    the model design, moisture and stress levels of different plant organs were considered
    along with the behavior vegetative and reproductive organs cell growth, and its
    effects on the water requirement were studied. The dimensionality reduction technique
    was employed to choose the optimal parameters. For the case study, the wheat plant
    was taken. The effect of soil temperature and water suction rate was studied in
    the case of the plant growth. The non-adsorbing testbed was prepared by exploding
    the sand grains at high temperatures. With the aid of WSN, it was monitored when
    the plant needs to be irrigated. Angelopoulos et al. [100], developed a small
    scale smart irrigation prototype for a strawberry greenhouse. The prototype possesses
    off the shelf hardware and software requirements and was tested on large farms
    having multiple crops to get a data gain. The reference architecture also targets
    edge data distribution. The model was tested in Greece and its performance was
    compared against the traditional existing strawberry greenhouse methods for irrigation.
    Compared to the cloud-based approaches, and their incompetence to handle network
    traffic, security challenges, and data sharing with the third party, this model
    is secure and reliable and can handle large datasets. Dominguez-Nino et al. [101],
    worked on how to integrate sensors for developing automated software tools to
    undertake the routine tasks and decision-making involved in scheduling irrigation.
    The authors also focused on the suitability of capacitance approach soil moisture
    sensors and how to automatically interpret them and providing feedback to the
    scheduling algorithm. The proposed approach was tested in the apple orchards located
    at the IRTA-Lleida Experimental Station in Mollerussa, Lleida, Spain. For the
    study, both the physiological and agronomic properties were taken into consideration
    while experimentation. Krishnan et al. [102], designed an automated irrigation
    method. The authors developed a fuzzy logic-based system for precision irrigation
    by using Global System for Mobile Communication (GSM) service to enable farmers
    to water the fields. Soil and temperature, humidity, and motor status parameters
    were monitored and taken for the study. For the efficiency evaluation of the system,
    a comparison was done between the proposed system, drip irrigation, and manual
    flooding. Harun et al. [103], designed an environment-friendly system named “Greenhouse
    Irrigation Management System” for precision irrigation in agriculture. Some critical
    environmental parameters such as soil moisture, pH, temperature, humidity are
    measured with the use of WSNs to make decisions. The sensors measure the data
    and based on certain threshold value result, the fields are irrigated. Olivo [104],
    focused on the problems associated with device growth and its effects on the control
    decisions. To address this issue, an architecture named “Rules Engine and Context
    Event Processor (RECEP)” is proposed for the dynamic processing of events originated
    in the context of IoT and PA. In this model the concept if optimization was used
    to optimize the resources to increase agricultural production. The experimental
    setup was set in a banana field located in Machala-Ecuador. The given model was
    designed for operating in low-cost infrastructures for both small and large producers.
    Marcelino et al. [105], based on the work and issues of small family farmers,
    proposed a low-cost system for control, monitoring, and automation of agricultural
    greenhouse. The proposed model was designed by prototyping Raspberry Pi and Arduino
    along with sensors. Temperature, humidity, and light sensors are used for the
    field data collection. The web human interface was developed for interaction between
    the system and the farmers. Koksal and Tekinerdogan [106], developed an automatic
    farm management information system capable of performing data acquisition, processing,
    monitoring, planning, and decision making and managing the farm fields. The authors
    tested their models on two case studies on smart farming in Turkey, one for smart
    wheat in Konya and other greenhouses in Antalya. The feature-driven domain analysis
    model is designed based on IoT reference architectures and data modeling approaches.
    The system was capable of performing all farming related functions, such as irrigation,
    crop monitoring, etc. Hate et al. [107], designed a vegetable traceability system
    with smart irrigation. The field parameters like soil moisture, humidity, water
    supply control, and temperature of particular farmland are monitored with sensors
    such as water level, humidity, soil moisture, and temperature sensors. With IoT,
    the cost is reduced and efficiency is improved. Agale and Gaikwad [108], focused
    on the problem of water reduction in farmlands. An IoT based automatic system
    is designed to collect, analyze, and monitor the real-time sensor data every 10
    seconds from soil and environment and provide irrigation solutions based on that.
    The parameters like temperature, humidity, soil moisture were considered for data
    collection. The proposed method achieved 92.24 % accuracy in water-saving strategy.
    Huan et al. [109], designed a system for monitoring of water in aquaculture ponds.
    To design the system authors used the concept of narrowband IoT (NB-IoT). The
    system used STM32L151C8 microcontroller, sensors and other devices for real time
    data collection and other services. The system was implemented and tested in ChangZhou,
    JiangSu Province, China and performed with low error rate. Vij et al. [110], developed
    a smart precision irrigation system based on the concepts of IoT and machine learning.
    The main aim of authors was to develop a computationally efficient and low cost
    system. Raspberry Pi and Arduino Mega 3 were used as microcontroller and other
    sensors were used to fabricate the system. Compared to the existing systems, the
    proposed system is computationally efficient. The various findings of this section
    have been tabularized in TABLE 9. TABLE 9 Summary of IoT Based Developed Methods
    for Irrigation C. IoT in Crop Monitoring Crop monitoring is the process or method
    of observing the farm fields and crops for enhancing productivity and reducing
    cost. This can be performed with satellites, drones, sensors, and other methods.
    Vegetative indexes of an area can also play a major role in crop monitoring by
    providing the data related to the exact area of land under cultivation etc. With
    crop monitoring the estimated time of harvest can be predicted. de Souza et al.
    [118], proposed an integrated framework with the combination of hardware, software,
    middleware, and other equipment to monitor the testbed. The authors also recorded
    the testing of each equipment in the seed test labs. An IoT based system was developed
    where soil sensors provided the relevant information/data for the growth of seeds.
    Testing was performed in the Official Seed Analysis Laboratory (OSTL) of the Brazilian
    Agricultural Research Corporation. Rekha et al. [119], developed a WSN based framework
    for sensing agricultural characteristics and then provide decisions to the farmers.
    Based on the data collected, the model will provide decisions for irrigation and
    crop monitoring. For the case study, India was taken into consideration due to
    its large farming area and population dependence on agriculture. Groundnut farming
    was studied in this work. Becker Reshef et al. [120], proposed a remote sensing
    analysis based crop monitoring system for strengthening agricultural decisions
    and improving crop security. The authors named this model as “GEOGLAM” model which
    ensures the decision support of all the necessary steps for crop security and
    analysis. Kamath et al. [121], proposed a wireless sensor-based model for monitoring
    the growth of weeds in paddy crop. The authors performed a study on how Raspberry
    Pi and WSN can be modeled for precision agriculture. Raspberry Pi based model
    was deployed to monitor crop along with the integration of Bluetooth 4.0 to send
    signals from visual sensors to the base station. A solar cell battery was used
    to provide power to the system. At the remote station, the images of the crops
    were processed to extract the background and foreground objects. Classification
    between weeds and paddy crop was performed with SVM. Rao and Sridhar [122], Developed
    an automatic irrigation system by prototyping Raspberry Pi and other IoT devices
    to enhance crop productivity. A cloud-based data collection system supported by
    sensors used for data collection is employed to collect the field data. The data
    collected is sent to the base station and based on that data, the decisions are
    made. Parameters like humidity, soil temperature, and sunlight availability are
    measured. Geng et al. [123], for greenhouse environment monitoring proposed a
    four-layer IoT based mobile system. To design the system, the authors proposed
    integration of both Raspberry Pi and Arduino chip in the design where the former
    serves as the data server and later as the master chip for a mobile system. Fabrication
    of all the sensors, actuators, and other devices was done on a single board, thereby
    reducing the device’s physical distances for better performance due to serial
    communication. A dedicated communication protocol with CYC was designed to reduce
    transmission errors and data loss. Shadrin et al. [124], designed an intelligent
    agriculture IoT equipment to monitor the crop. The authors designed the system
    using the test case of monitoring the seed germination. The proposed model was
    fabricated with the integration of low power embedding wireless sensor nodes with
    artificial intelligence. CNN was used to train the model along with the collection
    of data via sensor nodes of the different stages of germinated seeds. A 3D clustering
    analysis was used to analyze the relationship between environmental factors and
    farmer issues. Uddin et al. [125], focused on developing a system for monitoring
    crops from the stage of seed germination to harvest. For this authors proposed
    a resource optimized fast health crop monitoring system. Saudi Arabian agriculture
    was taken into consideration as a case study. IoT and drones were harnessed to
    make an efficient agricultural monitoring system. Data collection methods were
    used to collect data from heterogeneous devices arranged in localized clusters.
    The system was designed to withstand a harsh environment with agility and feasibility.
    Feng et al. [126], proposed a crop growth and nutrition diagnostic system based
    on hyperspectral remote sensing. Color canopies obtained from images captured
    with satellites, UAV, and remote sensing were used to determine the index of yield.
    To determine the color canopy of plants, the color correlation was employed. Cen
    et al. [127], discussed the usage of UAV with dual image frame cameras to estimate
    the aboveground biomass and panicle biomass of rice. The authors conducted their
    study at different growth stages of the crop. The field investigations were made
    on the variations in typical vegetation indices. The accuracy of the model was
    obtained with the extraction of RGB images at two different stages. Random forest
    was employed to obtain AGB as well as the PB. Khan and Kumar [128], proposed a
    framework for the monitoring the crop field. To make their study reliable, the
    authors monitored weather in real-time to get an idea of how to provide an ambient
    condition to farm. Production increase techniques are also proposed for precision
    farming. To overcome the problems of delay in information transfer from the field
    to the farmer, the context-based agricultural mobile sink is designed in WSN.
    Thus the mobile sink node introduction improves the overall efficiency and energy
    consumption of the model. Frontward communication area (FCA) based route selection
    is proposed to reduce energy consumption and delay. Min and Kuang [129], designed
    a system for monitoring the rice crop field. The analysis of the growth of rice
    and rice duck in real-time is done by obtaining the data via the Internet of Things.
    Authors comprehensively viewed the rice and rice duck plant species and the ambient
    farm conditions required for their growth. Qiulan et al. [130], estimated the
    production of carbon from the crop growth. The authors provided a framework for
    the estimation of organic carbon compounds in the farmland soil. The wheat plant
    was taken as a test case in this study. The model provided the real monitoring
    of the farm for carbon production with the aid of IoT and other devices. The real-time
    data was collected from the Yanzhou District of Jining City, Shandong Province,
    China. Harun et al. [131], proposed an improved crop monitoring system based on
    IoT concepts. Brassica Chinensis is the plant taken for study and was subjected
    to four different light treatments such as pulse treatment, continuous treatment,
    high intensity, and artificial control for enhancing the plant growth. The authors
    also analyzed parameters such as leaf count, height, dry weight, and chlorophyll
    a and b. An intelligent embedded system was developed to monitor and capture real-time
    data. Alonso et al. [132], designed an intelligent edge IoT based platform for
    precision livestock and crop monitoring in a dairy farming scenario. In their
    study, authors used the concepts of AI, blockchain technology, edge computing
    and IoT concepts for designing the platform. The architecture named Global Edge
    Computing Architecture (GCEA) was tried and tested in real time in a dairy farm.
    Castellanos et al. [133], proposed a narrowband IoT (NB-IoT) system for collection
    of soil parameters to monitor the potato crop health and growth. A UAV aided network
    is used to support the purpose. The architecture proposed accessed the real filed
    scenario of a potato filed near Bogota, Columbia. The main achievement of this
    work was the energy harnessing due to optimal topology applied for the deployment
    of sensors across the field and thus making the battery last for 82 hours for
    above ground sensors and 77 months for the deep buried sensors. Shafi et al. [134],
    presented a multimodal for crop health monitoring based on the concepts remote
    sensing, IoT and ML. Authors conducted their research in Pakistan. Sensors were
    deployed in fields to collect the real time data. Multispectral data from drones
    presented a NDVI and was used to analyze the crop based on its chlorophyll content.
    Variable length time series data captured from IoT devices and sensors were used
    to generate crop health maps. Deep neural networks were implemented for classification
    and provided the optimal classification. Some studies of the articles incorporating
    IoT in fields related to crop monitoring are presented in TABLE 10. TABLE 10 Summary
    of Developed Methods Crop Monitoring D. IoT in Disease Detection Diseases play
    a vital role in the economic and food crisis of a country. So to avoid this, disease
    detection is employed. This involves the detection of various diseases whether
    fungal, viral, bacterial, etc. from the stages of early to the post-harvest. Incubation
    of IoT has revolutionized the disease detection area in plant phenotyping resulting
    in major control resources available to avoid disease occurrence. Wang et al.
    [146], focused on addressing the problem of pests and insects. Authors proposed
    an IoT based model that can detect the early occurrence of the pests and diseases
    from visual references. Rough set theory algorithm and NN were used to model design.
    The proposed model was compared with existing models for accuracy and efficiency.
    Pandiyan et al. [147], applied the concepts of image segmentation and IoT, to
    develop a system/platform that can detect the diseases in plants. Authors proposed
    a novel platform having an Advanced Segmented Dimension Extraction (ASDE) with
    Heterogeneous Internet of Things procedural (HIoT) aspects, to detect the apple
    leaf diseases. A sign based plant disease identification model for real-time resembling
    of leaf diseases namely bacteria, fungi, micro-organisms, and viruses is presented.
    Three levels i.e. connectivity level, platform level, and service level were employed
    for performing data aggregation, transmission, and automatic identity identification.
    Leaf gestures were studied to identify the diseases in leaves. Zhao et al. [148],
    developed an automatic crop disease detection system capable of identifying and
    recognizing the leaves from a cluttered background. Combining IoT concepts and
    CNN, authors designed a novel approach named “Multi-Context Fusion Network (MCFN)”
    along with IoT deployments for crop diseased detection in wild. Kale and Sonavane
    [149], developed a smart and optimized smart fertilizing decision support system
    for smart farming. The authors addressed the problem of disproportion due to lack
    of judgment. Concepts of IoT and GA were used to design the system. An improved
    GA based multilevel parameter optimized feature selection algorithm for ELM classifier
    along with IoT was proposed in the designed system. The proposed system focuses
    on plant disease detection in a real-time environment. Khattab et al. [150], developed
    an IoT based cognitive automatic monitoring system for detecting the epidemic
    diseases in plants. By combining the concepts of artificial intelligence and prediction
    algorithms to develop the expert system, capable of predicting, analyzing, and
    decision making. A layered approach was used to design the model. Soil, leaf wetness,
    wind speed, and wind direction sensors were employed to gather the data. The model
    was tested on detection of the diseases like Late Blight, Early Blight, and Powdery
    Mildew in tomato and potato crops. Chen et al. [151], based on AI technologies
    and IoT, developed a system named “RiceTalk” for the detection of Blight diseases
    in the rice plant. AgriTalk model was used as a base model in this work to develop
    this system. Compared to AgriTalk, the authors used non-image IoT devices to design
    this model for disease detection. Devi et al. [152], proposed a simple and efficient
    IoT enabled solution for developing a system for automatic disease detection.
    Bunchy top of banana and Sigatoka diseases in the wild banana plant were detected
    and classified. Environmental parameters like soil moisture, temperature were
    measured with sensors and the IoT model was framed using the Raspberry PI hardware
    model. Data were classified using GLCM and RFC for disease detection. Kitpo and
    Inoue [153], developed an early disease detection system for rice crops disease
    detection. The drones based IoT architecture with real-time data collection capabilities
    was designed. For the mapping of drones on the fields, GPS sensors were used.
    The designed system is capable of displaying the analytical results and the position
    of the plant where the disease is present. Pawara et al. [154], studied the pomegranate
    diseases such as Bacterial Blight, Fruit Spot, Fruit Rot, and Leaf Spot. Developed
    a HMM and senor based model to early detect the disease and provide the solutions.
    Parameters like air temperature, leaf wetness, air humidity, and soil wetness
    were considered and studied for model design. For digital communication between
    field and farm GSM module was used. Truong et al. [155], real-time data monitoring
    capable system was designed with IoT and cloud storage for disease detection and
    recognition. The fungal diseases of rural crop fields with detected. Environmental
    data conditions such as humidity, temperature, wind speed, and rainfall were employed
    for designing decision support. A Support Vector Machine Regression (SVMr) model
    was used to classify the data. Jumat et al. [156], developed a cost-efficient
    and affordable smart farming prototype capable of detecting plant disease and
    proving decisions. For study and experimentation, Septoria plant disease was taken
    and studied for different stages right from outbreak to spread maturity. The system
    also possesses the web-enabled facilities for farmer support. Some studies of
    the articles incorporating IoT in fields related to disease detection are presented
    in TABLE 11. TABLE 11 Summary of IoT Based Developed Methods for Disease Detection
    SECTION V. Findings Several research articles related to the role and responses
    of the Internet of Things in agriculture have been studied. From the literature
    and studies, it can be seen that immense contribution has made by IoT in the field
    of agriculture starting from micro areas and moving over to macro environments.
    Internet of Things along with the concepts of cloud computing, cluster computing,
    wireless sensor networks and computer vision has revolutionized the field of monitoring,
    crop production, disease detection, and supply chain management. Since the domain
    of agriculture itself is a wide domain so considering the impact IoT has or can
    make on this field, the search was not restricted or limited to any area. The
    data acquisition for agriculture systems is a multidimensional approach. There
    are several fields in agriculture where IoT is applied e.g., crop monitoring,
    diseased detection, precision irrigation, supply chain, cattle grazing, and raising,
    etc. To design a precision approach, the target plays a very important role in
    data collection. From the existing studies it is found that mostly overall 90%
    of the data is self-acquired by the authors with the use of wireless sensors.
    This data included soil data, pH values, light, water, humidity, and images. In
    the case of crop disease detection, leaves were taken as the primary subject of
    study due to their ease of availability and quantity. Nearly 80% of the leaf data
    was self-acquired using digital cameras and web-enabled devices. However in some
    studies to validate their models, authors also used the existing standard ground
    truth databases available. Satellite imaging and remote sensing images were also
    taken to understand the demography and vegetative indexes of a region. UAV drones
    were the most used devices along with web-enabled digital cameras and mobile devices
    to capture the data in the form of images and also acted for providing real-time
    monitoring of device location in the fields. Certain issues and challenges are
    faced by the authors while capturing real-time images due to environmental and
    lighting conditions. To avoid these issues, laboratory-based testbeds such as
    greenhouses were developed and their data was acquired in a closed environment.
    From the literature, it is seen that, to develop the prototypes certain common
    parameters were taken for conducting the study irrespective of the problem to
    be addressed. Theses parameters included soil data, pH value, humidity level,
    moisture content, water content. After the analysis of the studies it was found
    that for any agricultural system to flourish all these parameters play a combined
    role. These parameters were most common for the problems addressing farm management,
    crop monitoring, and irrigation. However in certain other parameters like leaf
    wetness, salinity, disease severity, fertilizer ratio, plant height, CO2 content,
    mineral content, and conductivity were considered while addressing the specific
    problems like plant disease detection, smart irrigation, seedling germination,
    etc. These were the devices employed to collect the data. Depending upon the problem
    the authors addressed, different type of sensors were employed. For soil data
    collection, the contact method sensors such as hygrometers, or electrodes which
    penetrate the soil were used to collect soil information. While as in the case
    of the collection of soil information via tractors or vehicles non-contact soil
    sensors were employed. But for the studies it can be seen that contact method
    sensors are the most common devices used for soil data collection. In case of
    soil pH value and salinity electrochemical sensors are employed. In the case of
    soil nitrates, CO2, and fertilizer content, topsoil depth, biomass content, organic
    matter are measured. For water data collection, parameters like relative humidity,
    leakage of pipes, dissolved oxygen, nitrates, and other oxides were measured by
    the authors. To accomplish this various water sensors like ultrasonic sensors
    were employed to measure the water levels in the tanks, ponds, and farms. Temperature
    and humidity sensors were used to measure the temperature of water and humidity
    of soil for water content. In the case of plant leaves, the leaf wetness sensors
    were employed to understand the moisture content of the plants. Other than these
    sensors, neutron sensors, time travels sensors, and capacitance sensors are also
    employed by some authors for measuring the water levels. In the case of supply
    chain and cattle grazing, tags and biosensors were employed to gather the data.
    To develop the prototypes, the authors used the devices based on functional capabilities.
    From all the devices, Arduino and Raspberry Pi were the most desirable hardware
    platforms for the authors. Arduino was employed to tackle simple or sequential
    issues that do not require complex solutions. In the case of scenarios with complex
    environments, Raspberry Pi boards were employed due to their capability of addressing
    multiple problems at the same time. For functionalities that faced time issues,
    Raspberry Pi boards were employed. In the case of communication technologies,
    LoRa and ZigBee are the most commonly used communication technologies by the authors
    in the platform designs due to their capabilities of handling a multitude of solutions.
    Lora and ZigBee use GPS to enable and detect geo-locations. They are low cost
    and secure for data transmission. Other than these technologies, authors also
    made use of cloud and cluster computing to handle a large mass of data and provide
    on-spot solutions to the consumers. The authors performed the processing of data
    in different stages. At first preprocessing on data was performed to remove any
    kind of outliers or anomalies in the data. To remove the imperfect data, algorithms
    such as noise removal with Gaussian noise, salt and pepper noise, histogram equalization
    were commonly used for the preprocessing of image data. However in the case of
    numerical data missing value imputation, the banana dataset for noise reduction
    was employed. To obtain the optimal data from a given set of data, data reduction
    was performed. The data reduction approaches e.g., dimensionality reduction, attribute
    subset selection, numerosity reduction, etc. were employed by various authors.
    To make systems capable of taking decisions, several learning algorithms like
    GA, CNN, NN, SVM, PNN, GANs were used to train and test the models. From the literature,
    it is seen that most studies and experiments were performed in countries that
    have agricultural economies like the USA, China, India, Brazil, Australia, etc.
    Most of these countries are economically stable and first world countries. They
    have better infrastructure and service availability. Also only 20% of the studies
    were focused on real-time implementation of their prototypes which indicates that
    most of the experimentation was conducted in a closed environment. This pattern
    raises concerns on how these studies can be employed in real-time environments
    with low infrastructure and maintenance costs. The problem of power consumption
    was also addressed by some studies. However there were no comparisons and reasons
    given on how the dream of IoT can be made real for poor and self-financing farmers.
    Along with this, a few studies provided the cost estimation for the deployment
    of the models. In the Fig. 7, the percentage distribution and contribution of
    IoT in different fields of agriculture are shown. From the figure it can be seen
    that more extensive studies are conducted in the field of crop monitoring. FIGURE
    7. Percentage contribution of IoT in different fields of agriculture. Show All
    These studies and analysis put forth by different articles show that current/existing
    solutions have incorporated IoT to solve several challenges in the agricultural
    domain. With the incorporation of these technologies, a large number of challenges/factors
    for improvement have emerged. Along with the study of factors for improvement,
    future research directions, applications are also highlighted. The sections below
    explain the factors for improvement and the futuristic research directions. A.
    Challenges Despite the growth achieved by IoT over the past few decades, there
    still exist some conceptual, fundamental, and developmental issues. 1) Cost Designing
    a cost-optimized model is still a difficulty faced by many authors. Scientists
    are focusing on developing cost-efficient systems by reducing the hardware and
    software requirements in IoT deployments. Economic differences of countries make
    it difficult for farmers to deploy devices and technology. So, it is important
    to develop some economic models. 2) Standardization To fully utilize the technology
    for large range of applications, standardization of devices is essential. The
    present or current mechanisms do not confirm any standardization formats either
    for the data and process representation. Deprived of the cordial use of the semantic
    ontologies, machine-readable codes result in output differences due to misinterpretation
    and alterations from time to time. With standardization the interoperability issues
    of the devices, applications, systems and products can be solved. 3) Heterogeneity
    While designing a system, heterogeneous devices are used. Every device differs
    in processes and services requirements. In the case of agriculture, most models
    perform with heterogeneous devices, so it is important to create interaction between
    heterogeneous modules and communication technologies. Because of heterogeneity,
    the complexity of the network increases, and sometimes falsified results may appear.
    4) Accessibility For developing any farming decision support system based on IoT
    technology and other devices, the demand for availability of existing software
    and hardware to be present anywhere any time is a must thing. These problems need
    to be addressed to ensure the availability of services anywhere and anytime. Lack
    of availability of the required equipment can result in chaos and delay in the
    services. 5) Adaptability While designing a model, especially for precision farming,
    it is pertinent for the devices to be adaptable with the other devices and the
    surroundings. Since the environmental conditions keep varying and also sometimes
    due to certain communication or hardware issues certain devices are not adaptable
    with each other. 6) Energy Optimization Energy is the most emerging issue in IoT
    systems, WSNs, and other devices for their communication. Till now conventional
    sources of energy have been supporting the designing and working models. But due
    to an increase in devices, the consumption of conventional energy is not a reliable
    solution. Non-conventional sources of energy like solar, wind, water energy harvesting
    schemes should also be tested, but they haven’t been of much success and new methodologies
    should be developed to employ them for model development. 7) Compatibility To
    achieve the standards of fragmentation and scalability, the developed models or
    software should be flexible and should run on any machine. 8) Reliability For
    successful and smooth working, reliability is a major concern for IoT devices
    in terms of data transmission. The devices need to gather and transfer reliable
    data as based on the data received and interpreted, the decisions are made. Reliability
    is still a challenge due to system failures, node failures, battery issues, or
    other interventions. 9) Mobility Generally the systems or models developed are
    static. For smooth implementation of the framework, there should be mobility as
    most of the devices and applications are mobile. In mobile models, the issue of
    maintaining connectivity is still a difficult task. 10) Environmental Conditions
    In agriculture there are different landforms. So it becomes difficult to adapt
    to those changes, and this also jeopardizes data and services. This alters the
    accuracy of a system. 11) Real-Time Deployment Most of the studies put forward
    are not employed or tested in a real-time testbed. So before deploying a system
    or model, real-time analysis is a must, to avoid post-deployment losses. B. Improvements
    Since the growth of IoT is remarkable in the field of agriculture, certain improvements
    can be included in the growth and developmental state to make the systems and
    models more efficient, reliable, and business-oriented. 1) Warding Off the Performance
    Degradation Generally while developing systems, customer interaction or input
    is not taken. As the models serve a variety of customers from dynamic backgrounds,
    therefore their input must be taken while developing the models. This way the
    performance hazards and chaos that occurs on the filed can be avoided. 2) Sharing
    Rich Data Globally In almost all, the IoT based models designed for precision
    farming, the data sharing while integrating and mapping the system design should
    be encouraged. This can lead to the development of an interactive model globally.
    This feature can also help in understanding the topographic and demographic challenges
    of various regions on a global level. Thus the suitable solutions can be designed
    with those working in resource-constrained environments. 3) Moving Towards High-Speed
    Communication The communication domain itself is witnessing a progressive and
    dynamic shift. Since the IoT models are remotely located, so better communication
    is a prerequisite. Therefore it is important to consider high-speed communication
    strategies like 5G, for making the devices more reachable with lesser delays.
    4) Cost Analytic Studies for Model Design With the incumbent of IoT in agriculture,
    a variety of models are designed for addressing different domains such as irrigation,
    farm management, disease detection, and crop monitoring, etc. While designing
    the models various case studies are performed. As the development cost of models
    for these cases varies from country to country i.e., in first world countries
    there will be the different cost of devices and in second and third world countries
    it will be different. Therefore a model cost analysis will provide an idea of
    the purchasing power and investment a farmer from these varied economic regions
    can invest to develop a model. Also this can result in seeking or considering
    other cheaper and efficient ways to develop models. C. Future Research Directions
    With the advancement in the development of precision agriculture platforms with
    IoT and other technologies, the development of new applications or research areas
    is envisioned. After the study of the literature, certain potential concepts and
    futuristic research directions are listed and discussed below: Design of platforms
    in a user-friendly manner (from farmers’ perspective and ease of using) using
    Artificial Intelligence and other learning tools. Farmer’s perspective here means
    that an audit should be done well before designing the prototype. From this study
    a clear insight and differences between the requirements of the farmers and farming
    systems across the globe can be understood. To develop concepts and methodologies
    based on multidimensional aspects like science, expertise, experience, industry,
    etc. Energy harvesting or power optimization methodologies should be developed
    to reduce the cost of production, maintenance, and fault tolerance. It is evident
    that mostly the farms be it small or large, require power and energy for the working
    of devices. In most of the cases, the power to the devices is supplied from the
    main line or the power grid. But this is not a sustainable and efficient method.
    Thus in order to make farms self-reliant, the energy harvesting or power optimization
    approaches should be developed or incorporated while designing of the models.
    Induction of cloud sources for data gathering and processing in a reliable, systematic,
    and scientific manner. Develop systems that can withstand variable soil and environmental
    conditions. Since the agricultural environments are harsh and keep on changing
    with change in climatic conditions or seasons. So it is essential to develop systems
    which can be robust and sustainable to the changes in the external as well as
    internal factors. Development of user or farmer friendly apps for monitoring crop
    and plant health. Mostly farmers come different ethnic and linguistic backgrounds.
    So due to this their level of understanding and ways to perform agricultural tasks
    is also different. It is important to develop frameworks considering the native
    language of a region into consideration so the farmer and machine interaction
    can be improved. This will enhance enable the acceptance of precision farming
    methods easy as it can be seen some areas are reluctant to adopt due to this linguistic
    and understanding problems. Development of efficient sensor-based systems for
    high elevation areas. High elevation areas mostly have undulating surfaces and
    also in most of the countries, supply of power to these areas is still a dream.
    Form the literature, it can be seen that these areas have not been targeted for
    precision farming instead of being resource deficient. Therefore deployment and
    design of sensor based systems in these areas opens a scope in future of precision
    farming. Usage of previous and existential scientific data for the development
    of decision support systems in farming. Generally for designing the precision
    farming models, the primary data is considered. However for designing cost efficient
    and reliable models, the previous case studies and deployment models should be
    considered for the study. This means a collaborative model development methodology
    should be developed for understanding the nature of the work. To recognize various
    plant species using mixed data sets or heterogeneous data. Design of a portable
    and sustainable farming equipment control systems for large as well as small farms.
    Mostly from the study it can be seen that first world countries are welcoming
    in PA approaches while as in most third world and other nations, this concept
    is still in avoidance due to cost and shelf life of products and equipment’s.
    Development of reliable supply chain management methods for precision farming.
    D. Applications of IoT in Agriculture IoT has revolutionized the world of agriculture,
    and a manifold of application can be derivative of implementation of the Internet
    of Things in agriculture. These applications are a resultant of the architectural
    design chosen. These applications have been categorized and differentiated based
    on the subject they focus on and also the service they provide. The major sectional
    areas where IoT is applicable in agriculture are- observation, data collection
    and corroboration, governing, and management. Most of these fields work collaboratively,
    and all the applications involve at least two of these sections. All these sections
    are described below and TABLE 12 presents various IoT applications in agriculture.
    TABLE 12 Applications of IoT in Agriculture 1) Observation It is also called monitoring
    as the main aim of this section is to discern the working of various models, devices,
    applications, etc. With the incubation of the concept of IoT, it is the first
    and foremost stage to be smeared. In this phase, all the devices and equipment
    that are placed strategically are monitored for their work. Sensors, are the major
    deployment and data collection tools engaged in this phase for data collection
    of various field and non-field parameters. Monitoring the certain parameters,
    like soil salinity, pH value, volumetric water content by using various soil sensors
    and other essential parameters such leaf wetness sensors, color, humidity, etc.
    helps in the development of systems capable of performing following operations
    e.g., calculation of leaf area index, leaf health, leaf color, plant growth and
    aid in the development of automatic plant recognition systems. Other devices like
    water sensors aid in the monitoring of irrigation levels and requirements of the
    fields. Thus with such devices, smart irrigation scheduling systems are developed.
    Also with the gas sensors, remote monitoring devices such as UAV devices or images
    with hyperspectral reflectance properties, help in the estimation of biomass,
    nitrogen, carbon, and other essential gases content. This data can also be used
    to find the vegetative indexes of the filed or large demography. Heavy-duty vehicles
    such as thrashers, tractors, trucks etc., also need supervision and can use data
    analytics for farm management. Robots, autonomous vehicles, agricultural drones
    other equipment also need to be monitored remotely for better farm supervision.
    Livestock monitoring with the aid of IoT is also an important subject for precision
    farming. It includes cattle monitoring remotely using tags. Labour is also a major
    area of concern for precision farming. Since human intervention is generally prone
    to errors due to differences in understanding, decision making, and methodologies
    applied to solve a particular problem. Also the induction of human labor is cost-intensive.
    Therefore, with the application of IoT, human interference can be minimized and
    a network can be set up for monitoring thus reducing the errors and cost. 2) Data
    Collection and Corroboration Data is the main constituent of precision farming.
    It acts as both base and catalyst in the whole process. With IoT, a large number
    of data is collected in varying forms and formats. Sensors, cameras, and various
    other nodes aid in the collection of data. In precision agriculture, based on
    the nature of the problem, the IoT network can be designed and formulated to collect
    different types of data. After the data is collected, the corroboration also called
    documentation of the data is very important for better understanding. Corroboration
    is a natural application of collected data, but certain additions of different
    samples such as manual or machine integration are also seen. Data once collected
    needs to be refined and understood, labeled, and thus documented in a certain
    format. Documentation or corroboration of data helps in formulating statistical
    analysis and developing the decision support systems. Remote sensing charts and
    other crop assessing tools can be employed to understand the total crop yield
    of a particular region. Crop management can also be optimized using corroborating
    data. A yearly or term analysis can be performed on this data to improve precision
    farming. Food chain supply management can use the predictive analysis of this
    data for optimizing and designing new efficient strategies. The major areas where
    its application is seen are yield mapping for fertilization planning, field planning,
    agro-food traceability, site-specific measurements based on soil and water analysis,
    and remote vehicle monitoring for supply chains, etc. 3) Foretelling Also called
    forecasting is one of the major attributes or applications for decision making
    that is brought in agriculture with the introduction of IoT. With the IoT devices
    and network, real-time data analysis along with the comparison to the previously
    available datasets helps in the forecasting of the upcoming events in much advance.
    With this foretelling, various decision support systems can be designed capable
    of taking optimal and real time-decisions. It can also act as a preventive measure
    mechanism for avoiding or dealing with various upcoming unprecedented situations.
    With monitoring, data collection, and corroboration, foretelling can help in early
    disease detection, pest growth, weeding, drought, smart irrigation, and harvesting.
    Artificial intelligence can be employed for designing these learning systems.
    With IoT, a predictive analysis could be made way earlier than the harvest period
    for assessing crop production and consumption. Pre and post-harvest crop monitoring
    along with behavioral sciences and market analysis can also be employed to help
    site-specific farming and production increase in precision agriculture in the
    context of IoT. 4) Governing and Management It is an outcome of the monitoring
    device. Governing helps in controlling the whole system. Foretelling also plays
    a major role in governing. With IoT, it is important to govern the farm. Thresholds
    play a major role in designing a controlling strategy. Controlling is a major
    addendum of IoT in agriculture. Applications of controlling can be easily seen
    in site-specific management, working of smart irrigation models, plant growth
    monitoring models, and early crop analysis models and also in supply chain and
    smart vehicular navigation, interaction, optimization, and logistics control of
    farms. With governing, all the new strategies, formulae, practices and methods
    employed to solve the problems occurring on daily basis in farms can be monitored.
    These strategies can then be compared and analysed with the previous existential
    strategies. Therefore a knowledge base can be maintained. From the data analysis
    of that knowledge base, the best or the optimal strategies that can be employed
    to design or mould the system can be fetched. Various case studies can be performed
    to gather and test such information. From this the redundant techniques can be
    withdrawn and robust ones can be prioritised. With these methodologies and experiments,
    the management can be made more flexible, scalable and reliable. Also governing
    and management can be employed to find the best suited solutions. Due to the growth
    in agriculture sector, various public and private sector projects and startups
    are being started in various countries across the world. All these projects use
    artificial intelligence and IoT concepts to provide support and solutions to the
    growing industry of agriculture. All these projects or startups are explained
    in the TABLE 13. TABLE 13 IoT Based Public and Private Sector Projects/Startups
    for Precision Agriculture E. Our Proposed Work Inspired by the contribution of
    IoT in the field of agriculture, we proposed an architecture for precision farming.
    The layout of the architecture to be designed is proposed and shown in Fig. 8.
    The structure proposed for precision farming in case of farm management will constitute
    of different layers. The first layer would be the sensing layer, in which different
    types of sensors like soil, humidity, water, light, proximity, and conductive
    sensors will be deployed in the region of experimentation. All data from the sensors
    will be sent to the base station. The second layer is the network layer, which
    consists of gateways, internet, and other devices. This layer manages the traffic
    of the whole architecture. This layer collects data from the sensing layer and
    transfers it to the decision layer and the application layer. The third layer
    is the decision layer, which processes the data, manipulates it, and generates
    alerts or actions. The next layer is the application layer, which constitutes
    the firmware and the users. It receives all the inputs from other layers and the
    outputs are made visible to users. It also manages how the whole architecture
    will work or look. FIGURE 8. Proposed layered architecture for Precision Agriculture.
    Show All Our proposed architecture aims to observe and monitor the farm in real-time.
    Optimize the resource utilization, early detection of the diseases, and identification
    of the plant species, optimize irrigation facilities, and make definite use of
    pesticides and other manures. Monitor the growth of plants in each stage and take
    the necessary actions for the betterment of plants. The model to be designed will
    take into consideration the earning and investment of the small scale farmer.
    A scalable and cost efficient model will be designed by considering the reusability
    and recycling of the materials used. From the literature, it is found that the
    issue of interoperability and robustness is still not achieved. So, while designing
    the model these issues will be prioritized. Also, power supply and power consumption
    is a bottleneck for each model. So, from the literature it is found that energy
    harnessing approaches can be used to address this issue. In the proposed model,
    main focus will be on incorporating the concepts of energy harnessing approaches
    like solar energy and wind flow energy for power optimization. Harnessing solar
    energy for regions which have different season’s e.g., Kashmir, which has four
    seasons like spring, summer, autumn and winter throughout the year. So for these
    regions depending only on solar energy will be a bottle neck. Therefore, in the
    proposed work, a hybrid approach based on consumption of both wind and solar energy
    for reducing power consumption will be proposed. Some of the major findings of
    the proposed work will be: A scalable and cost efficient model will be designed
    by considering the reusability and recycling of materials used. The issues of
    interoperability and robustness issues of heterogeneous devices will be targeted.
    Power supply and power consumption being the bottleneck of each model will be
    targeted. To tackle such issues, energy conservation and energy harnessing approaches
    like solar and wind energy will be used. Harnessing solar energy for regions which
    have different season’s e.g., Kashmir, which has four seasons like spring, summer,
    autumn and winter throughout the year. So for these regions depending only on
    solar energy will be a bottle neck. Therefore in the proposed work, a hybrid approach
    based on consumption of both wind and solar energy for reducing power consumption
    will be proposed. Small scale farmers will be targeted for the development of
    sustainable and robust model. SECTION VI. Conclusion The Internet is revolutionizing
    our world. Communication via connective devices has become the countenance of
    survival. Agriculture is growing from precision farming to micro-farming. IoT
    has added more potential to communication by enabling the communication between
    humans and objects along with the environmental aspects. Seeking the vision of
    omnipresence i.e., anytime, anything, anywhere, everywhere, IoT should be considered
    a core for the development of new architectural concepts. Resource scarcity is
    a must address issue in precision agriculture and models should be developed to
    optimize resource utilization. Inclusion of monitoring in food supply chains,
    farms, greenhouses equipped with tags, WSN, etc. at each stage in the growth of
    the product/plant, making automatic reasoning via intelligent analysis and responses
    is moving towards much safer, secure, and trustworthy systems. In the article,
    firstly the agriculture sector along with its challenges and economic importance
    is presented. The domain of IoT along with the communication technologies and
    goals, protocols, architectures are studied and put forward. The various IoT OS,
    their specifications and features with respect to agriculture are discussed. An
    analytic study of various articles in the field of agriculture is presented, highlighting
    their most focused sections and gaps or areas not addressed. The sensors based
    on their field of application are also discussed. A systematic review of different
    articles focusing especially on crop monitoring, irrigation, disease detection,
    and farm management is offered. The articles considered for study range from the
    time frame of the year 2015 to 2020. From the studies, certain issues are put
    forward that demand research and experimentation in the future. Various existing
    public and private sector platforms or start-ups which work for precision farming
    are also presented and discussed with their specifications and applications. Making
    precision farming a base, a layout of an IoT based architecture is proposed. The
    communication technologies and the hardware platforms of IoT are also discussed.
    The applications of IoT in agriculture are also discussed. The issues, challenges,
    and future research directions are also highlighted. As a whole, the in-depth
    description of various aspects of IoT for agriculture has been discussed and how
    these studies should be catered in a way to create efficient and smart agricultural
    scenarios. Authors Figures References Citations Keywords Metrics More Like This
    Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Weighted Connected Vertex Cover Based Energy-Efficient
    Link Monitoring for Wireless Sensor Networks Towards Secure Internet of Things
    IEEE Access Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09139962.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Recent Developments of the Internet of Things in Agriculture: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/giots.2018.8534541
  analysis: '>'
  authors:
  - Carlos Kamienski
  - Juha-Pekka Soininen
  - Markus Taumberger
  - Stênio Fernandes
  - Attilio Toscano
  - Tullio Salmon Cinotti
  - Rodrigo Filev Maia
  - André Torre Neto
  citation_count: 47
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2018
    Global Internet of Thing... SWAMP: an IoT-based Smart Water Management Platform
    for Precision Irrigation in Agriculture Publisher: IEEE Cite This PDF Carlos Kamienski;
    Juha-Pekka Soininen; Markus Taumberger; Stenio Fernandes; Attilio Toscano; Tullio
    Salmon Cinotti; Rodrigo Filev Maia; Andre Torre Neto All Authors 44 Cites in Papers
    1223 Full Text Views Abstract Document Sections I. Introduction II. Iot In Precision
    Irrigation For Agriculture III. Concept and Methodology IV. Swamp Pilots V. Swamp
    Scenarios Show Full Outline Authors Figures References Citations Keywords Metrics
    Footnotes Abstract: Irrigation for agriculture is the biggest consumer of freshwater
    in the world, which makes a case for the intensive use of technology to optimize
    the use of water, reduce the consumption of energy and improve the quality of
    crops. While the Internet of Things (IoT) and other associated technologies are
    the natural choice for smart water management applications, their appropriateness
    is still to be proven in real settings with the deployment of on-site pilots.
    Also, IoT-based application development platforms should be generic enough to
    be adapted to different crops, climates, and countries. The SWAMP project develops
    IoT based methods and approaches for smart water management in precision irrigation
    domain and pilots them in Italy, Spain, and Brazil. In this paper, we present
    the SWAMP view, architecture, pilots and the scenario-based development process
    adopted in the project. Published in: 2018 Global Internet of Things Summit (GIoTS)
    Date of Conference: 04-07 June 2018 Date Added to IEEE Xplore: 15 November 2018
    ISBN Information: DOI: 10.1109/GIOTS.2018.8534541 Publisher: IEEE Conference Location:
    Bilbao, Spain SECTION I. Introduction Water is vital for ensuring food security
    to the world’s population, and agriculture is by far the biggest consumer amounting
    to 70% of freshwater [7]. The leading causes of water wastage are leakages in
    distribution and irrigation systems, as well as, the field application methods,
    which result in wastage and the cultivation of crops. The most common irrigation
    technique, surface irrigation, is also the least precise one, which wastes a high
    percentage of the water by wetting areas where no plants can benefit from it.
    On the other hand, localized irrigation can use water more efficiently and effectively,
    avoiding both under-irrigation and over-irrigation. However, in an attempt to
    avoid loss of productivity by underirrigation, farmers feed more water than is
    needed and as a result not only productivity is challenged but also water is wasted.
    Therefore, technology should be developed and deployed for sensing the level of
    water needed by the plantation and for flowing the water in the proper amount
    to places where and when it is needed. The Internet of Things (IoT) [1] and other
    related technologies can be used for that purpose, but it faces several challenges.
    Firstly, Software Development for IoT-based smart applications is today not automatized
    and demands much effort. Secondly, advanced platforms are needed, that can automate
    part of the process and integrate different technologies and components for dealing
    with a multitude of requirements. Thirdly, the integration of heterogeneous and
    advanced sensors, particularly flying sensors (i.e., drones), may provide precision
    in the water supply for irrigation in agriculture. Fourthly, the use of a Software
    Platform together with different technologies such as IoT, big data analytics,
    cloud computing, fog computing [3] and drones, for the deployment of pilot applications
    for smart water management. Fifthly, new business models for using IoT in smart
    water management settings are necessary. Moreover, finally, components must be
    interoperable, flexible and adaptable to be replicable to different locations,
    crops, and contexts. The primary objective of the SWAMP1 project is to develop
    IoT based methods and approaches for smart water management in precision irrigation
    domain and to pilot the approaches in four places, two pilots in Europe (Italy
    and Spain) and two pilots in Brazil. Also, we aim at improving precision irrigation
    by increasing the awareness of the condition of the crop, by monitoring the field
    based on crop status (size, growing phase) and environment (e.g., weather forecast)
    and to adjust the irrigation prescription map accordingly. The smart water management
    pilots aim at guaranteeing that technological components are flexible enough to
    adapt to different contexts and to be replicable in different locations and settings.
    The same underlying SWAMP platform can be customized to different pilots considering
    different countries, climate, soil, and crops. The SWAMP layered architecture
    considers three types of services to ensure its replication and adaptability to
    different crops and locations. Entirely replicable services deal with IoT services,
    virtual entities and storage services, and data analytics and machine learning,
    respectively. Fully customizable services deal with water data management issues
    that specialize generic analytic services into particular techniques for different
    types of irrigation and water distribution. Those services may require being customized
    whenever a new pilot is designed, developed and deployed. Finally, application
    specific services require higher development effort since they serve particular
    farms. The architecture may be implemented in a range of deployment configurations
    involving the use of smart algorithms and analytics in the cloud, fog-based smart
    decisions located on the farm premises and possibly mobile fog nodes acting in
    the field (e.g., drones or in the central pivot irrigation mechanisms). In this
    paper, we present the SWAMP view of water management, the SWAMP architecture,
    the four SWAMP pilots and a scenario-oriented development process that consider
    both the crop needs and technological solutions. In the remainder of this paper,
    section II introduces concepts and related work. Section III introduces SWAMP
    concepts and methodology, while section IV presents the four pilots. Section V
    presents scenarios for deploying the pilots, and finally, section VI draws conclusions
    and future work. SECTION II. Iot In Precision Irrigation For Agriculture The Internet
    of Things is expected to have a decisive influence in the automation of smart
    water management applications. However, the development of IoT-enabled applications
    still takes tremendous efforts due to the lack of proper tools [8]. This scenario
    opens new opportunities and challenges in the specification, implementation, deployment,
    and evaluation of software development platforms for smart water management. The
    SWAMP project is being built upon existing efforts, generic platforms, architectures
    and research results [13]. The IoT-A project developed the IoT Reference Architecture
    for the generation of compliant IoT concrete architectures, focusing on using
    the current state of the art, rather than applying a clean slate approach [2].
    FIWARE evolved from an EU-funded initiative for cloud services and now includes
    a platform with a set of Generic Enablers for developing smart applications [12],
    such as in the precision irrigation domain for agriculture [10]. When it comes
    to providing advanced features to the management of natural resources, such as
    water, there are some isolated initiatives not necessarily connected to the existing
    platforms and architectures. For example, the FIGARO project aims at increasing
    water productivity and improving irrigation practices through the development
    of a precision irrigation management platform, but not directly involving IoT
    [6]. Also, Popović et al. [11] present a case study of the specially designed
    and currently limited IoTenabled platform for collecting data in precision agriculture
    and ecological monitoring domains. Agri-IoT [9] is a theoretical IoT-based framework
    for data analytics and realtime processing for smart farming that shares some
    similarities with SWAMP. However, so far no real deployments have been reported,
    making it difficult to compare with SWAMP. In the last years, much has been said
    about the prospective uses for IoT combined with cloud-based services and big
    data analytics. Now, the time has come to conduct experiments in real settings.
    In Europe, there is a current concern to understand the challenges and compelling
    impacts of IoT in large-scale pilots for smart agriculture. Brewster et al. discuss
    the deployment of those large-scale pilots for IoT in agriculture and describe
    technologies and solutions that might be present in some agrifood domains, such
    as dairy, fruit, arable crops and meat & vegetable supply chain [5]. Also, the
    European project IoF2020 aims at fostering the adoption of IoT in large-scale
    pilots in the farming and food domain2. Current existing solutions are mostly
    theoretical with limited proof of concept experiences. They are either too generic
    or too specific and do not explicitly address easy system development and deployment
    for facilitating replicability of scenarios and streamlining the deployment of
    new pilots. This is where SWAMP comes to play. SECTION III. Concept and Methodology
    The SWAMP project is developing a high-precision smart irrigation system concept
    for agriculture depicted in Fig. 1. The fundamental idea is to enable optimizations
    of irrigation, water distribution, and consumption based on a holistic analysis
    that collects information from all aspects of the system including even the natural
    water cycle and the cumulated knowledge related to growing particular plants.
    It results in savings to all parties as it guarantees the availability of water
    in situations where water supply is limited and also prevents over-and under-irrigation.
    Fig. 1. Precision irrigation based on smart water management Show All As depicted
    in Fig. 1 we identify three broad phases in a water management system for agriculture:
    W1: Water reserve: water reserves coming from different sources such as rivers,
    lakes, dams, and aquifers, which follow the natural water cycle. W2: Water distribution:
    water is transported from W1 to the final usage place (W3) through a network of
    canals, pipes, pumps, valves, and gates. Water distribution may assume different
    configurations depending on the region or country. In some places, water resources
    are carefully used and controlled by a central authority. W3: Water consumption:
    in agriculture, one of the critical uses of water is irrigation, which can be
    performed by different techniques. Irrigation (W3) is the principal objective
    of the SWAMP project. The SWAMP platform provides mechanisms for data acquisition
    from sensors, making decisions using a variety of different techniques and changing
    system behavior by sending commands to both automatic and human actuators. For
    Water Consumption (W3) SWAMP will provide real-time responses for adapting irrigation
    as crop conditions change. On the other hand, as changes in water distribution
    are performed in a different timescale, the management loop for W2 will be longer.
    W2 and W3 management systems are integrated, as water usage triggers water distribution.
    The SWAMP Architecture is divided into five layers, as depicted in Fig. 2. Fig.
    2. SWAMP Architecture Show All Layer 1: IoT Services: A variety of sensor and
    actuator technologies to acquire soil (e.g., moisture and temperature), plant
    (e.g., vegetation index, canopy temperature) and weather (e.g., air temperature
    and relative humidity, precipitation, solar radiation, wind speed, and direction)
    will be tested during the project. Layer 2: Virtual Entity and Data Storage: IoT
    Service descriptions are annotated with contextual metadata about the physical
    environment to create Virtual Entity (VE) representations of physical entities.
    Distributed databases composed of cloud and fog nodes work together for dealing
    with a massive amount of data coming from sensors and make them available to the
    upper layers. Layer 3: Data Analytics: provides different components for context-aware
    management supported by cloud-based big data analytics techniques. SWAMP will
    utilize existing models and algorithms to realize the Layer 3, which may vary
    for different crops and pilots. Layer 4: Water Data Management: builds application
    related middleware management services on top of the generic data processing services
    provided by Layer 3. This layer decouples the irrigation-related business rules
    from applications providing an API for Layer 5 with a variety of algorithms, models,
    and mechanisms for facilitating and streamlining the development and deployment
    of new pilots. Layer 5: Water Application Services: A multitude of data that is
    sensed, acquired, stored, and processed is transformed into services that make
    sense to farmers. SWAMP initially will consider two types of water application
    services, water distribution services, and water usage services (i.e., irrigation).
    A fundamental idea in SWAMP is to facilitate the replication of water management
    systems built on top of its platform with minimum redesign and redevelopment.
    Different layers of the architecture have components that are more generic and
    thus less difficult to be ported to other pilots, whereas others are more application-specific
    and thus require new development efforts whenever a new pilot is conceived. When
    it comes to the generality/specificity scale, the SWAMP architecture provides
    three categories of components: a) Fully Replicable Services: Layers 1, 2 and
    3 of the architecture are generic enough to allow them to be replicable in different
    settings. Sensors, actuators and associated IoT Services vary according to the
    specific application domain; b) Fully Customizable Services: Layer 4 provides
    services that are closer to the final application and therefore must be aware
    of a level of detail that may vary for different techniques and models of water
    distribution and irrigation. Those services may require being customized for every
    new pilot; c) Application Specific Services: Services in Layer 5 address particularities
    of pilots. Given that parameters vary considerably for different countries, regulations,
    climate conditions, crops and soils, those services usually require more effort
    to be customized. SECTION IV. Swamp Pilots A. Pilot: Smart Water Distribution
    (Italy - CBEC) The Consorzio di Bonifica Emilia Centrale (CBEC) is a reclamation
    consortium of the Emilia-Romagna Region in Northern Italy, responsible for the
    irrigation and water drainage of an area of nearly 3,130 km2 where most water
    required for irrigation is withdrawn from the Po river (Fig. 3). The water is
    distributed to the farms by an intricate irrigation infrastructure composed of
    more than 3580 km of canals, more than 200 small streams, six draining plants,
    and 72 pump stations with the capacity of 416 cubic meters per second. Fig. 3.
    Water distribution management pilot: open earth canal (left), manual operation
    (center) and water intake (right) Show All The supply and irrigation network consists
    of open channels on earth. Relevant widths characterize the main canals and their
    filling for the irrigation season involves the use of substantial water volumes
    that are not always recoverable for irrigation purposes. Water losses are due
    to evaporation and infiltration through canal banks and bottom, as well as to
    the management of the irrigation network that requires the filing of long canals
    stretches and several minor streams to accommodate farmer needs. The irrigation
    network also acts as drainage network for the cultivated areas. The SWAMP project
    aims at enhancing the overall system efficiency by acting at farmers and irrigation
    consortium levels. At the farmer level, SWAMP provides a better estimation of
    water needs regarding both amounts of water and time of delivery. This precise
    estimation can be achieved by the implementation of the IoT infrastructure that
    enables the integration of groundbased information with the weather forecast.
    At the consortium level, the management of the irrigation network can benefit
    from the optimization of multiple water requests ensured by the technological
    platform. The platform collects water needs adjusting the operational management
    of canals by merging detailed information of water needs, weather forecasts, and
    multiple requirements from farmers served by the same irrigation infrastructure.
    In particular, the SWAMP project enables the monitoring, automation, and remote
    control of the major hydraulic infrastructures, through which CBEC manages the
    water distribution within the irrigation district. The renovation of the hydraulic
    infrastructures together with the implementation of the IoT platform and data
    analytics scheme is expected to enable a consistent enhancement of the water distribution
    management that will persist after the project life. B. Pilot: Smart precision
    irrigation (Spain - Intercrop) This pilot is located in Cartagena, Spain, in the
    premises of Intercrop Iberica and addresses several challenges of smart irrigation
    and water management of geographically distributed fields, aiming at demonstrating
    the use of IoT sensor platforms and drones to achieve increased crop yield with
    optimal water usage with minimum labor effort. Even though Cartagena is located
    on the coast, that is a dry area with a short rain season with intense rains in
    just a few days. A considerable amount of water comes from a desalination plant,
    what contributes to make it a scarce and expensive good. Farms are distributed
    over areas of roughly 30 km radius in intensive cropping area. Pilot site is shown
    in Fig. 4. The immediate closeness of the control fields gives ideal circumstances
    to verify the effectiveness of the deployed methods. There are three growth periods
    during the project giving an opportunity to do iterative piloting and compare
    the results of different iterations. Fig. 4. Intercrop irrigation pilot site.
    In the right, the arrow shows the precise location of the pilot site Show All
    Growing period starts in early September and finishes by late April. Crops are
    from different ranges such as lettuce, endive, spinach, herbs, and bay leaf. These
    farms are irrigated separately through their proper reservoirs and irrigation
    systems. To demonstrate the effectiveness of the methods, we selected the pilot
    site from the same area with control field that is using traditional irrigation
    and monitoring methods. Irrigation system on the pilot field is managed using
    solenoid valves, and total water consumption can be monitored via water meters.
    Facilities used in piloting are a local weather station, online weather services,
    long life smart soil sensors, drone gateway, and real-time cloud data analysis.
    C. Pilot: Variable Rate Irrigation (Brazil) The MATOPIBA region encompasses the
    Brazilian states of Maranhão (MA), Tocantins (TO), Piauí (PI) and Bahia (BA),
    and is one of the most critical irrigated agricultural frontier in the country,
    located in the cerrado, a savannah climate subtype. Irrigation is mostly performed
    by thousands of center pivots, each one with an average size of 100 ha. The municipality
    of Luís Eduardo Magalhães (Fig. 5), the location for the center pivot pilot, is
    considered the capital of Brazilian agribusiness. Fig. 5. Center-pivot irrigation
    pilot: location of the pilot site (left) and center pivot irrigation for soybean
    crop (right) Show All The soybean production reached about 5.5 million tons in
    2016. Despite such production, the farmers estimated 40% crop losses due to the
    2015/16 season drought. The production from many properties was only 30 sacks
    per hectare, while an average of 58 sacks was expected. With irrigation and investments
    in soil fertility, some producers expect that this number can reach 80 sacks.
    Although irrigation is an alternative, its expansion depends on technologies that
    improve operating costs. For example, in 2015/16 the government imposed double
    charges to the energy used in irrigation, which costs seven sacks per hectare
    against three and a half sacks with a typical energy charging. The main MATOPIBA
    pilot goal is to implement and evaluate a smart irrigation system based on Variable
    Rate Irrigation (VRI) for center pivots in soybean production. However, alternate
    crops like corn and cotton are also usual, including during the same season. Conventional
    center pivot irrigation systems help to provide a reliable supply of water, increase
    yields, and provide double cropping potential. The proposed smart irrigation will
    help the crop in the same way while making rational use of water and energy. D.
    Pilot: Precision Drop Irrigation (Brazil - Guaspari) One of the significant innovations
    of winemaking in State of São Paulo, Brazil, is occurring in the municipality
    of Espírito Santo do Pinhal in the Guaspari Winery. It is the transfer of wine
    grape harvesting to the winter season (June-August), when the thermal amplitude,
    insolation, and absence of rainfall are better for harvesting, similar to the
    great wine regions of the world. The different terroirs that compose the vineyard
    are divided into plots, which are harvested separately. In that growing area,
    altitude ranges between 1,000 m and 1,300 m; nights are cold and optimal sunshine
    during the day provides an air temperature range between 10°C and 12°C at harvesting
    time, similar to that of large European regions. The soil is developed from granite
    rock, with good drainage, which is suitable for grapes destined to produce high-quality
    wines. The application of water by an irrigation system depends on the crop, weather,
    and soil conditions. Even with the availability of several criteria and procedures
    for the performance of irrigation management, the technique has a low adoption
    rate by the farmers. Occasionally irrigation is based on only the experience of
    the grower, on the visualization of the wet soil surface or even on the perception
    of visual symptoms of plant water deficit, which, when identified late, can affect
    yield and product quality. The lack of knowledge about irrigation management procedures
    can lead to the failure of this water application practice, even if there is a
    system designed for a specific cropping area. Guaspari Winery uses drip irrigation
    in its vineyards, with a single hose and emitters spaced at 0.5 m, and measured
    the flow of 1.9 L h-1. The experimental area has 1.1 ha and is shown in Fig. 6.
    The objectives of the Guaspari Winery Pilot are: a) to perform automatic measuring
    of soil water content at different soil depths and in several vineyards inside
    the winery s growing area; b) to store data in the cloud about soil water content
    be jointly processed with weather and crop information; c) To provide quick and
    accurate irrigation management information. Fig. 6. Guaspari Winery: Vineyard
    and pilot location (right) Show All SECTION V. Swamp Scenarios The SWAMP Platform
    is being built on existing and new concepts and technologies, implementing the
    SWAMP vision (Fig. 1) through the SWAMP Architecture (Fig. 2), which may be flexible
    enough to deal with the needs of four different IoT pilots for smart water management
    in precision irrigation located in three countries. For making this vision to
    come true, a scenario-based architecture design and requirement gathering are
    being conducted to match the needs of crops and farmers’ expertise with existing
    technological solutions. Fig. 7 depicts the scenario representing the center-pivot
    with variable-rate irrigation pilot to be deployed in the MATOPIBA region in Brazil.
    The scenario captures both the farm and SWAMP Platform viewpoints and represents
    a future vision and not the current situation. A center pivot irrigates a circular
    agricultural plot of 100 hectares that alternates soybeans and cotton. The plot
    is further divided into different management zones, identified before the crop
    season and based on differences in the soil properties. Even though the crop is
    the same throughout the plot, each management zone receives a different irrigation
    prescription, to make available the same amount of water for plants regardless
    the way water is percolated and infiltrated in different soil types. Two general
    types of sensors collect data for the SWAMP system: a) stationary sensors within
    the soil at the root system depth that continually measure metrics such as temperature
    and moisture, and; b) drones acting as flying sensors equipped with thermal/multispectral
    cameras or working as data mules by collecting sensor data and transmitting to
    the farm’s office. The center pivot is electrified to make it able to control
    the variable rate irrigation sprinklers (actuators) and thus it can also be equipped
    with processing and communication capabilities. No special energy harvesting is
    predicted for the sensing devices. We will develop multiparametric probes for
    soil sensing, which include moisture, temperature and electrical conductivity
    sensors at three depths from the soil surface. In intensive agriculture areas
    the plan is also to experiment ultra low power wireless sensor solutions based
    on wake up radios combined with LoRaWAN [3]. Sensors will stay on standby and
    wake up for a few milliseconds. Sampling and transmission rates will be adjusted
    from a few minutes up to hours, according to the time of the day and the application
    requirements. This way, the probe sensing electronics combined with ZigBee or
    low power LoRaWAN will be powered by extended lifespan batteries. We consider
    using both ZigBee and LoRaWAN, for short and long distances, respectively. Other
    sensing devices deployed in low quantity or devices requiring heavier duty cycles,
    like a water source level sensor and weather station, will be solar powered. Both
    the center pivot and drones are considered Field Fog Nodes (FFN) in the SWAMP
    Architecture. Notably, the FFN at the center pivot acts as a sensor aggregation
    point and as a distributor of actuator commands received from the SWAMP system.
    FFNs communicate with the nearest fixed attachment point of the SWAMP Platform,
    which usually is an onpremises Fog Hub Node (or just fog hub) located in the farm’s
    office. Please notice that this choice aims at providing autonomous processing
    capacity to the farm at our pilot since it is in a region where Internet connections
    may suffer periods of instability. SWAMP allows FFNs to communicate directly with
    the Platform running in the cloud, whenever this is the preferred deployment choice.
    The FFNs send data directly to the SWAMP Platform located in the CFN at the farm’s
    offices via different wireless technologies. In Fig. 7 it is represented by a
    Base Station, such as a WiFi access point, a LoRaWAN gateway, a ZigBee router
    or a Cell Base Station. For this scenario, the functions performed by the SWAMP
    Architecture are divided up into local Fog and remote Cloud components. Heavy
    processing, such as irrigation models and analytics using smart algorithms (i.e.,
    machine learning), is performed in the cloud. In our pilot, we will first experiment
    with existing irrigation models for precision agriculture where analytics plays
    the role of automatic parameter tuning. After enough data is obtained, analytical
    models will be tested for generating the irrigation prescription maps. External
    information is fed to the platform, such as crop yield models, meteorological
    data and historical data. Fig. 7. Scenario representing the center-pivot irrigation
    pilot Show All Fig. 8 depicts the CBEC SWAMP pilot, focused on water distribution
    management. Water is conveyed from the Po River in Italy through a network of
    open canals automated by a set of pumps, valves, gauges and gates operated by
    CBEC. The SWAMP platform estimates the water needs of individual farms by analyzing
    sensor data and other relevant information, generates the irrigation prescription
    maps and sends them to the farmers, who perform the irrigation using the method
    they see fit. The water need estimate for each farm is in turn fed into a component
    devoted to optimizing the management of water distribution, by sending commands
    to actuators installed in devices that control the water flow through the canals,
    up to the point farmers can use them. The purpose is to make more efficient use
    of the water deviated from the river. Fig. 8 does not explicitly show how the
    data is sent from sensors to the SWAMP platform because different technologies
    are used by farmers to transmit the data through the Internet. The SWAMP Platform
    is represented as a single component, whereas in practice a distributed cloud/fog
    architecture can be used, such as the one shown in Fig. 7. SECTION VI. Conclusion
    IoT is the natural choice for smart water management applications, but its appropriateness
    is still to be proven in real settings with the deployment of on-site pilots.
    In this paper, we presented the SWAMP project, which develops IoT based methods
    for smart water management in precision irrigation, and pilots them in Italy,
    Spain, and Brazil. We introduced the SWAMP view, architecture, pilots and the
    scenario-based development process adopted in the project. SWAMP is still in its
    beginning but has already attracted the attention of farmers, agribusiness companies,
    and government agencies around the world. In its current stage, we visited and
    surveyed the pilots and explored the implications on the platform of different
    pilot sites, crops and requirements. The key insights so far refer to the commonalities
    and variability of features of pilots that can positively contribute to the design
    of a genuinely replicable SWAMP platform. Fig. 8. Scenario representing the water
    distribution pilot Show All Authors Figures References Citations Keywords Metrics
    Footnotes More Like This Smart Irrigation Control System Using Wireless Sensor
    Network Via Internet-of-Things 2020 IEEE 12th International Conference on Humanoid,
    Nanotechnology, Information Technology, Communication and Control, Environment,
    and Management (HNICEM) Published: 2020 Internet of Things based Innovative Irrigation
    System for the evaluation of Sand Quality with Security measures for Agriculture
    Land using Wireless Sensor Network 2023 Second International Conference on Electrical,
    Electronics, Information and Communication Technologies (ICEEICT) Published: 2023
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'SWAMP: an IoT-based Smart Water Management Platform for Precision Irrigation
    in Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2020.3015655
  analysis: '>'
  authors:
  - Ahmed A. Nasser
  - M. Z. Rashad
  - Sherif E. Hussein
  citation_count: 41
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathZoom.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines
    >IEEE Access >Volume: 8 A Two-Layer Water Demand Prediction System in Urban Areas
    Based on Micro-Services and LSTM Neural Networks Publisher: IEEE Cite This PDF
    Datasets Available Ahmed Abdel Nasser; Magdi Z. Rashad; Sherif E. Hussein All
    Authors 40 Cites in Papers 2578 Full Text Views Open Access Comment(s) Under a
    Creative Commons License Abstract Document Sections I. Introduction II. Related
    Work III. Methodology IV. The Infrastructure Architecture Solution V. Results
    and Discussion Show Full Outline Authors Figures References Citations Keywords
    Metrics Code & Datasets Abstract: In recent years, scarce water resources became
    one of the main problems that endanger human species existence and the advancement
    of any nation. In this research, smart water meters were implemented, distributed,
    and installed in a regional area in Cairo while data were collected at uniform
    intervals then sent to the cloud instantly. The solution paradigm uses an Internet
    of Things (IoT) based on micro-services and containers. The design incorporates
    real-time streaming and infrastructure performance optimization to store data.
    A second layer to analyze the acquired data was used to model water consumption
    using Long Short-Term Memory (LSTM). The designed LSTM is validated and tested
    to be utilized in the forecast of future water demand. Moreover, two alternative
    machine learning methods, namely Support Vector Regression and Random Forest commonly
    utilized in time series forecasting applications, were used for a comparative
    analysis of which LSTM has proven to be superior. The proper integration of the
    system elements is the key to the proposed system success. Based on the success
    of the designed system, it can be applicable on a national scale. That can enable
    the optimal management of consumers’ demand and improve water infrastructure utilization.
    The proposed paradigm presents a testbed for various scenarios that can be used
    in water resources management. The steps used to describe the proposed water demand
    prediction system were divided into two layers; the first layer is for data acquisition
    and aggregation, while the se...View more Published in: IEEE Access ( Volume:
    8) Page(s): 147647 - 147661 Date of Publication: 10 August 2020 Electronic ISSN:
    2169-3536 DOI: 10.1109/ACCESS.2020.3015655 Publisher: IEEE CCBY - IEEE is not
    the copyright holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction The smart water metering systems have just begun to gain momentum
    as water utilities started to use real-time data acquisition that can be stored
    and used in data analytics to save the scarce water resources in an optimal way
    [1]. One of the most crucial research directions supporting that trend is advanced
    metering infrastructure (AMI) that can offer a remote connection between water
    utilities [2]. However, the communication itself can take many forms, such as
    power fiber optics, cellular transmission, and broadband communication, among
    others [3]. In a smart water metering system, data can communicate between smart
    meters and water utilities with the support of analytical software architecture
    to take proper decision regarding certain actions to monitor and control the water
    supply in the system or to issue appropriate alerts to warn consumers or guide
    them to reduce their consumptions [4]. It can also predict distinctive patterns
    in water consumption for a future forecast. Due to the complex nature of the water
    system which includes pumping stations, reservoirs, and consumer services. Accurate
    prediction could help manage water utilities to avoid problems that arise in the
    times of peak consumption or water leakage [5]. In deploying a smart water metering
    communications network, proper technology for data transmissions must be used.
    As there is a diverse number of options that differ in cost, popularity, reliability,
    scalability, and security, among other indicators, choosing the proper architecture
    and communication technologies can present a barrier to water utilities. Water
    utilities integration needs to be planned carefully to ensure the durability of
    the communications network [2]. Extensive research has been done for electricity
    consumption modelling, which has significant differences [6]–[8]. However, electricity
    metering can offer measurements of higher granularity and accuracy compared to
    water metering devices [9]. Moreover, energy consumption patterns are much more
    recognized and sometimes can be fixed, compared to the variable water patterns
    [10]. For example, the energy consumption of most household devices can be directly
    calculated through their technical characteristics, which is not possible for
    showers as an example, even in the same household [11], [12]. The technology of
    the Internet of Things (IoT) has been utilized in various applications and is
    identified as one of the main factors of success for Smart Cities. Nowadays, in
    the IoT, data and its understanding are getting more important and remain the
    main concern rather than the objects that generate these data. To achieve data
    understanding, exchanging, and sharing for both information and knowledge, these
    objects need a lightweight and novel platform for the future provisioning of IoT
    services. The Web of Objects (WoO) is supported by inter-operable micro-services
    and the granularity of heterogeneous objects as well as virtualization through
    virtual objects composites. To implement the IoT of cross-domain applications,
    Jarwar et al. introduced a WoO enabled inter-operable micro-services architecture
    and demonstrated the implementation using a use case [13]. Moreover, the IoT dynamic
    environment behavior requires them to be able to evolve and scale over time, adopting
    novel technologies and various requirements. Micro-service architecture style
    has recently gained significant popularity in many fields due to the challenges
    in building large-scale, complex, and distributed applications and platforms on
    the Web. Krylovskiy et al. applied the micro-service architecture paradigm to
    design a Smart City IoT platform [14]. They suggested various benefits using their
    paradigm as compared to the other architectures’ approaches. Pau et al. showed
    that the power systems evolution using the smart grid paradigm is highly dependent
    on the distribution grids modernization [15]. They suggested that using new technologies,
    infrastructures, and applications is crucially required. Their research presented
    a smart metering infrastructure with a large set of possible services directed
    to the management and automation of distribution grids. Their architecture was
    based on a cloud solution, which facilitates the communication between the smart
    meters and the distribution grid services interface. Because a large number of
    applications can be implemented on the cloud, the focus was on enabling the automatic
    reconfiguration of the grid using a real-time distributed state-estimation algorithm.
    Kamienski et al. studied the Irrigation for agriculture which is considered the
    main consumer of fresh water worldwide [16]. The intensive use of technology could
    be useful to optimize the use of water, improve the crops quality and reduce the
    energy consumption. Kamienski and his colleagues claimed that even though, the
    IoT and other associated technologies are the normal choices for smart water management
    applications, there is still a debate about how appropriate those choices are
    in real world scenarios with the on-site pilots’ deployment. Also, the platforms
    development of IoT-based applications should be suitable to different climates,
    crops, and countries. They proposed IoT based approaches and methods for smart
    water management in the precision irrigation domain and demonstrated their use
    in Spain, Brazil, and Italy. They presented two pilot studies based on a proposed
    architecture and scenario development process. An additional research by Jarwar
    et al., discussed the objects from data management infrastructure, various energy
    generation, and consumption terminals [17]. However, they emphasized that the
    acquired data is only useful when it is available on-time for services that extract
    meaningful information to achieve intelligent decisions. The micro-services-based
    data analysis, data caching, data processing, data virtualization, and data ingestion
    methods can be applied to enhance energy efficiency, management services provisioning,
    and data availability across different buildings. WoO offers mechanisms for data
    aggregation, abstraction, and ingestion with virtual objects and composite virtual
    objects using scalability, ontologies and availability of services with micro-services.
    Their research proposed the utilization of data processing micro-services modelling
    to improve data availability while exposing services capabilities with micro-services.
    They presented a semantic web agent based on an ontology for linking, availability,
    re-usability, and enhancement of services, data-objects, and micro-services. The
    authors presented a use case to evaluate their paradigm, which included data collection
    from different sources and processing and provision of various BEEMS. They mimicked
    the enhanced data availability for BEEMS using a use case scenario. Moreno et
    al. emphasized that one of the most frequent and costly natural disasters that
    affect humankind is flooding [18]. Their developed architecture was based on the
    Message Queuing Telemetry Transport (MQTT) protocol, with security and encryption
    mechanisms, to send real-time data packages from fixed nodes to a server. The
    accessibility of data could be managed through graphical representations and customizable
    queries, to allow for flood analysis and prediction systems. Kamienski et al.
    explained that fresh water smart management for precision irrigation is essential
    to increase crop yield and decrease the involved costs while contributing to environmental
    sustainability [19]. The technologies utilization offers a means to provide the
    precise amount of water needed for plant irrigation. They demonstrated the suitability
    of the IoT for smart water management applications, although the different technologies
    integration is needed for a successful system. The developed project using smart
    water management platform based on IoT for precision irrigation in agriculture
    applied in four pilot studies in Europe and Brazil. The results showed that the
    system requires the re-engineering of some components and specially designed configurations
    to provide higher scalability with less computational resources. Therefore, the
    amount of forward-planning is considered the main obstacle in the adoption of
    many water utilities’ solutions. While the ultimate objective is to focus on predicting
    the aggregate water consumption of urban areas populations. In this research,
    the problem of data acquisition for short- and long-term water consumption was
    studied to help in forecasting and management. Moreover, a smart water meter with
    the ability to send data to the cloud was designed, while a complete architecture
    solution for data acquisition in real-time was proposed. Data were aggregated
    to be analyzed further based on micro-services and machine learning techniques
    in an expandable and secure manner with high performance, considering the big
    data involved in the proposed system. The proposed system was divided into two
    layers; the first layer is for data acquisition and aggregation, while the second
    layer is for water demand forecasting using machine learning techniques that predicts
    water demand for different regions of households. The rest of this article is
    organized as: In section II, a related work is presented with recent developments
    in the field of water demand prediction based on AI techniques and cloud services.
    In section III, a full description of data acquisition, the proposed LSTM prediction,
    and the micro-services architecture are briefly explained. In section IV, the
    solution architecture design and evaluation are presented. Section V explains
    the results achieved by aggregating data collected from distributed smart meters,
    design and evaluation of the water consumption prediction model using LSTM. While
    section VI presents the conclusion and the potentials of the proposed paradigm
    for water consumption acquisition, water demand prediction, and water demand management.
    SECTION II. Related Work Water development and saving efforts have lately focused
    on increasing user-consumer awareness by devising intervention scenarios that
    aim at educating users about their consumer behavior and guide them to reduce
    their consumptions. Research on data mining and machine learning techniques were
    recently used for short-term water consumption prediction and pattern recognition
    and on intervention methods that exploit these techniques to inform consumers
    and stimulate behavioral changes [20]. Besides, companies are currently investing
    in water monitoring devices that are installed on household bathroom faucets and
    measuring real-time water consumption, for online statistics and sending alerts
    to the consumers [9]. These interventions and alerts require that individual short-term
    consumption to be predicted as accurately as possible and in real-time so that
    they can be compared with future planned consumptions [21]. Several Artificial
    Intelligence techniques have been utilized by water demand forecasting over the
    last decades. In a recent study by Ghalehkhondabi et al., they have investigated
    the research done during the period between 2005 and 2015 related to water demand
    forecasting based on Artificial Intelligence. They found that Fuzzy models, metaheuristic
    optimization, Artificial Neural Networks, and Support Vector Machines were the
    most commonly used techniques. They postulated that Artificial Neural Network
    was the most prominent method used in water demand forecasting. However, they
    concluded that it is still difficult to choose any method as the winner among
    other methods [22]. Even though, Artificial Intelligence methods and their hybrid
    were applied in water demand forecasting, researchers indicated that further contribution
    is yet to be made to achieve a better water demand forecasting [23]. Muhammad,
    and Feng investigated several artificial intelligence techniques such as support
    vector machine, artificial neural networks, fuzzy logic, and extreme learning
    machines as well as hybrid models and Autoregressive Integrated Moving Average
    (ARIMA) in urban water demand forecasting. They concluded that artificial intelligence
    methods showed superiority especially Artificial Neural Networks for short-term
    water demand forecasting [24]. Papageorgiou et al. proposed a time series prediction
    hybrid approach based on Fuzzy Cognitive Maps and Artificial Neural Networks.
    Their proposed method aimed to select the interconnections and attributes for
    time series prediction following the training stage. They compared the proposed
    approach prediction with real data of daily water demand to validate the model
    performance [25]. Shabani et al. proposed a Support Vector Machine model based
    on the polynomial kernel function to predict monthly water demand in a use case
    city in Canada. They aimed to assess phase space reconstruction before the input
    variables combination design. They concluded that their approach could achieve
    satisfactory lag time which in turns improve the support vector machine model
    performance [26]. Recently, cloud computing services became an integral part of
    any modern system among both corporations and individuals because of its vast
    and flexible facilities. Therefore, the huge computing demand can only be met
    by the cloud computing infrastructure which can lead to an ever-growing complexity
    to meet both quality of service and service level agreement [27]. Narayanan et
    al. proposed an underground water distribution system based on an IoT architecture
    that is integrated with Fog computing. To achieve that design in a smart city,
    the authors forecasted the customers water demand. They used ARIMA to predict
    the daily demand for a period of three months in their case study. Afterwards,
    the water distribution system based on an IoT architecture was designed using
    hydraulic engineering to distribute water with minimal losses [28]. The related
    work even though offers many soft computing methods for predicting water demand,
    it lacked the possibility to accurately model short-term water demand. Moreover,
    many of the current research aim to forecast the overall future water consumption
    instead of granular water demands. The literature failed to offer means for fully
    integrated systems with online training and the possibility to incorporate cloud
    services that can manage water demands based on regions and using advanced and
    flexible methods that can adapt to the ever-changing water demand behavior of
    individual users. Therefore, Proof of concept needs to be proposed for a national
    scale system that offers a layered infrastructure that can be expanded to utilize
    the full ICT capabilities. SECTION III. Methodology This section describes the
    general methods and techniques used in the model design, data acquisition, preparation,
    and evaluation of the solution architecture. The steps used to describe the proposed
    two-layer water demand prediction system are shown in figure 1. While the next
    subsection explains in detail the design and implementation of the smart water
    meter, followed by an explanation of time series prediction techniques, the proposed
    neural network model, alternative machine learning techniques, regression accuracy
    metrics, and the benefits of micros-services architecture to provide useful possible
    processing and management solutions. FIGURE 1. A flowchart that describes the
    steps of the proposed two-layer water demand prediction system. Show All A. Smart
    Water Metering The methodology is focused on an autonomous measuring unit that
    is used with sensors to monitor water consumption along with GPS information.
    The design prototype for the smart water meter shown in figure 2, is composed
    of a microcontroller connected to the internet through a Wi-Fi module, a water
    flow sensor and a GPS sensor [29], [30]. FIGURE 2. Detailed Design for the smart
    water flow meter; (a) ESP8266 12E NodeMCU, (b) water flow sensor G1/2”, and (c)
    adafruit ultimate GPS. Show All Station, Wi-Fi access point, and microcontroller
    are all features that can be found in the nodeMCU Dev board. That combination
    of features made the development board a versatile tool for both IoT applications
    and Wi-Fi networking. Moreover, it can also be used as an access point, station
    host a webserver, or upload and fetch data to MQTT brokers through the internet.
    Therefore, it was chosen to interact with both the GPS module and the water flow
    sensor. The water flow sensor consists of a water rotor, a hall-effect sensor,
    a water rotor, and a plastic valve body. The sensor operates when water flows
    through the sensor rotor causing it to roll. The rotor speed changes with the
    water flow and the corresponding hall effect sensor accordingly changes the output.
    The water sensor can sense a range of water starting from 1  m 3 /min up to 29
    m3/min with a sensitivity of 1%. The GPS module is built using the MTK3339 chipset
    which can track up to 22 satellites with a built-in antenna and a receiver sensitivity
    of -165 dBm tracking). While the GPS module can also make 10 location updates
    per second suitable for high sensitivity and high-speed tracking or logging applications.
    Also, it has a very low power consumption of only 20 mA when the update rate ranges
    from 1 to 10 Hz with a position accuracy less than 3 m. The water smart meter
    was validated by measuring the water flow of several predetermined water quantities
    with the corresponding time duration to determine the accuracy for each meter
    which was found to be below 2% of the measured quantity. Because this research
    is based on collecting water consumption data from different households distributed
    among a neighborhood in an urban area, a selection for suitable points to install
    the smart meters were predetermined to evenly cover as many houses as possible
    [1]. Therefore, distributed smart meters were installed across 20 households in
    a region located in Maadi district in Cairo, according to the map shown in figure
    3 with blue markers. FIGURE 3. Smart water flow meters’ distribution in the pilot
    study indicated by blue markers and generated by Scribble Maps (http://www.scribblemaps.com).
    Show All B. Time Series Regression Water demand prediction is considered a use
    case from time series prediction. Time series modelling is an active area of research
    that has attracted a lot of attention recently. The main objective of time series
    modelling is to collect and analyze past time series observations to develop a
    suitable model which describes the basic pattern of the time series. The model
    is used to predict future values for the time series. The Autoregressive Integrated
    Moving Average (ARIMA) is considered one of the most popular and frequently used
    stochastic time series models that captures a suite of different standard temporal
    structures in time series data [31], [32]. ARIMA model has subclasses of other
    models, such as Moving Average (MA) which uses the dependency between an observation
    and a residual error from a moving average model applied to lagged observations
    [33], the Autoregressive (AR) which uses the dependent relationship between an
    observation and some number of lagged observations [34], and Autoregressive Moving
    Average (ARMA) model that combines both MA and AR [35]. The adoption of the ARIMA
    model is due to the simplicity to represent varieties of time series as well as
    the possibility to associate the Box-Jenkins methodology that suggests an iterative
    three-stage approach to estimate ARIMA model’s numerous parameters and hyperparameters
    for optimally building the model [36], [37]. However, these models are assumed
    to be in a linear form, which is not suitable for many situations. To overcome
    this limitation, a few non-linear stochastic models have been proposed [38], [39];
    however, the implementation process is not simple or straight forward as the ARIMA
    models. On the other hand, Holt Winters extended the idea of simple exponential
    smoothing by comprising the forecast equation and three smoothing equations; one
    for the level, one for the trend, and one for the seasonal component, with corresponding
    smoothing parameters which results in accurate predictions for univariate time
    series data [40]. Recently, the use of artificial neural networks (ANNs) in the
    domain of time series forecasting has attracted increasing attention [41]. The
    main benefit of ANNs is their capability of non-linear modelling when applied
    to time series prediction, without any a prior knowledge about data statistical
    distribution [42]. The time series model is formed based on the given dataset
    using adaptive techniques. Due to these features, ANNs are naturally self-adaptive
    and data-driven [43]. A breakthrough in time series forecasting occurred with
    the recent advances in cloud computing and the ability to solve very complex mathematical
    formulations over many servers as well as streaming and storing data across multiple
    locations which opened the way for Deep Learning Neural Networks (DLNNs) to be
    practically used to solve highly complex problems. DLNNs can be used to solve
    pattern classification problems and can be applied to other fields such as regression,
    function estimation, signal processing, and time series forecasting problems [44],
    [45]. The main advantage of DLNN is the ability to achieve better training data
    generalization. DLNN adds the ability to model the sequence dependence complexity
    among the input variables compared to regression predictive modeling. A special
    type of DLNN called recurrent neural networks is designed to handle sequence dependence.
    To elaborate on the deep learning methods for tuning the coefficients involved
    in the Holt’s Winter method, Recurrent Neural Network (RNN) is able to learn prediction
    from sequences of data and a variance of RNN called Long Short-Term Memory (LSTM)
    is able to learn from even longer sequences of data. Others have used SVM regression
    as an alternative machine learning technique for time series forecast [46]. However,
    a few recent comparative research studies have favored LSTM over SVM regression
    regarding the accuracy of both methods [47]–[49]. C. Long Short-Term Memory RNN
    is a category of Artificial Neural Networks that can learn long term dependencies
    that is useful when the network needs to retain information over long time periods.
    That means it can handle successive sequence of events in which the understanding
    of each even is based on previous events. Moreover, the deepest the RNN, the longer
    the memory period and consequently better capabilities can be achieved. However,
    RNN has its limitation because of the vanishing gradient problem due to its architecture
    restriction to long term memory capabilities. Therefore, a special type of RNN
    namely LSTM are designed to solve those problems to allow it to retain information
    for longer periods of times. LSTMs have the ability to maintain a constant error
    that allows them to recursively learn through both time and layers. Additionally,
    as seen in figure 4, LSTMs use a special type of cells called gated cells that
    can store information in a different way compared to the RNN and allow to read
    from them. Each cell can make a decision by its own regarding the information
    while closing and opening their cells to execute those decisions. The LSTMs architecture
    are like chains allowing them to contain information over long time periods to
    solve problems that RNN might fail to solve. FIGURE 4. LSTM neural network architecture.
    Show All LSTM consists of three main parts including; a type of gates called input
    gates that can add information to the cells; a type of gates called forget gates
    that allow to remove information when they are not necessary anymore; and a third
    type of gates called output gates responsible for selecting and outputting the
    necessary information. The compact forms of the LSTM unit equations for the forward
    pass are: f t = i t = o t = c ∼ t = c t = h t = σ g ( W f x t + U f h t−1 + b
    f ) σ g ( W i x t + U i h t−1 + b i ) σ g ( W o x t + U o h t−1 + b o ) σ h (
    W c x t + U c h t−1 + b c ) f t  o  c t−1 + i t o+ c ∼ t o t  o  σ h ( c t ) (1)
    (2) (3) (4) (5) (6) View Source where h o =0 , c o =0 the initial values, the
    subscript t is the time step, and the operator o represents the Hadamard product.
    x t is the LSTM unit input vector; f t is the LSTM unit forget gate’s activation
    vector; o t is the LSTM unit output gate’s activation vector; c t is the cell
    state vector; i t is the LSTM unit input/update gate’s activation vector; h t
    is the output vector of the LSTM unit; c ∼ t is the cell input activation vector;
    and W is the bias vector parameters and weight matrices which need to be learned
    during training. The Activation functions σ g and σ h are sigmoid function and
    hyperbolic tangent function respectively. The LSTM neural network uses deep learning
    to address the problems associated with the time series complexity in large architectures
    [50]. D. Alternative ML Regression Methods There are several alternative machine
    learning methods that are commonly used in time series forecasting as reported
    in the recent related literature. Among those methods is Support Vector Regression
    that is proposed for estimating the continuous function of training datasets.
    It is able to model complex nonlinear relationships by using an appropriate kernel
    function that maps the input into higher dimensional feature space and transforms
    the nonlinear relationships into linear forms Since previous studies endorsed
    the significance of the RBF kernel, it was used also in this work for the development
    of the SVR [51]. Random Forest is another successful regression technique. It
    uses multiple learning algorithms for forecasting both classification and regression
    problems. RF combines the results of decision trees trained by the “bagging” method.
    RF is one of the most successful Artificial Intelligence techniques among the
    current algorithms that use decision tree methods. It can handle large number
    of input variables [52]. As the forest building progresses, it estimates the generalization
    error. Moreover, it is a superior method in estimating the missing data while
    maintaining good accuracy. Besides, it is a relatively fast method that can produce
    a forest of decision trees for both regression and classification use cases. E.
    Regression Model Accuracy Metrics Root Mean Square Error (RMSE) is one of the
    main accuracy measures which can estimate how accurate the model can predict a
    certain response in regression problems. The RMSE is the calculation of the square
    root of the residuals’ variance. It can indicate the model fitting to the data
    and how close those data to the model’s predicted values. The lower the RMSE the
    better model accuracy. On the other hand, Mean Absolute Error (MAE) represents
    another accuracy measure specially if there are outliers in the time series. It
    is the absolute value of the difference between the actual value and the forecasted
    value. Therefore, MAE estimates expected error from the forecast on average. Another
    accuracy metric called the Mean Absolute Percentage Error (MAPE) is a widely used
    forecast accuracy metric, because of its benefits regarding interpretability and
    scale-independency. However, MAPE has its limitation as it produces undefined
    or infinite values if the time series have zero or close-to-zero actual values.
    To solve that issue, an alternative forecast accuracy measure called the Mean
    Arctangent Absolute Percentage Error (MAAPE) is used in this research. MAAPE has
    been developed to correlate with MAPE. Hence, MAAPE rely on the slope as an angle,
    while MAPE relies on the slope as a ratio. Therefore, MAAPE can inherently preserve
    the MAPE philosophy and at the same time overcome the problem that might be caused
    from the division by zero using bounded influences for outliers in a fundamental
    manner. That could be achieved through considering the ratio as an angle instead
    of a slope [53]. Therefore, the results can be verified in a quantitative way
    from the performance metrics of RMSE, MAE, and MAAPE. F. Micro-Services Motivation
    The use of cloud computing is an essential constituent of IoT as it is an IT paradigm
    that offers the ability of ubiquitous access to shared pools of configurable system
    resources and provides higher-level services that can be provisioned with minimal
    management effort and time, often over the Internet. Moreover, cloud computing
    is based on resources sharing to achieve economies and coherence of scale, like
    public utility [54]. On the other hand, when millions of objects communicate and
    exchange information between IoT applications the single business logic will result
    in a highly complex system. When the system is broken into small parts with micro-services
    architecture; it can dispel the complexity of the system [12]. Micro-services
    offer rapid development, loose coupling, lightweight, scalability, Interoperability,
    Single Task-Oriented, Broken Object Avoidance, Load Balancing, Strong Modularization,
    Plug & Play, Decentralized Governance, and Decomposability. Therefore, micro-services
    are considered one of the most promising modern technologies that can improve
    the cloud processing capabilities. Containers is considered an efficient way to
    develop and deploy micro-services which can be thought-out as an operating system
    virtualization in which workloads can share operating systems resources. Even
    though, they have been in used just recently, they are widely adopted with an
    impressive acceptance among business executives and IT professionals who are already
    using containers in mission critical workloads. While the rest of the business
    executives and IT professionals are making plans to incorporate the technology
    in their future systems. Moreover, containers can succeed in services that virtual
    machines can fail to do in the development environment [55]. Some of their distinctive
    advantages are their ability to be launched or abandoned instantly. Besides, they
    do not need an operating system overhead in the container environment as opposite
    to the virtual machine environment. Therefore, containers can be considered a
    milestone that can play a vital role to simplify the development transfer from
    one platform or environment t another. However, as found in all technologies,
    there are challenges associated with the container’s technology as most container-based
    applications are stateless [56]. Although, this is an issue for stateful applications,
    there are workarounds to solve that problem. One possible solution is to provide
    the reliable storage necessary to support stateful applications [57]. In addition,
    as with all platforms that deal with big data, data security can be a major concern.
    However, many attempts were proposed to solve those issues when containers are
    deployed in critical areas [58]. One of the most important advantages of cloud
    computing is its developer productivity. As mentioned above, developers can instantly
    start up their own cloud instances, provision the component they want, and scale
    down and up easily [59]. Moreover, containers can be an ideal technology when
    developers need to shift their utilities between private cloud, on-premises, and
    public cloud architectures. Containers can be moved quickly and with minimal disruption
    because they are independent of the underlying operating system and infrastructure.
    Many organizations use multiple public clouds providers and can shift their workloads
    back and forth, depending upon certain performance criteria such as price special
    offers from the service providers. Therefore, containers make this process simple,
    reliable, and economical specially for building IoT applications [60]. IoT devices
    are composed of various sensors that can generate many data points, which can
    be acquired at a high rate. A simple temperature sensor may generate a few bytes
    of data per minute, while a complex assembly station might generate gigabytes
    of data in just few seconds. These huge amount datasets are ingested into the
    data processing pipeline for transformation, storage, querying, processing, and
    analysis [61]. Each dataset is comprised of multiple data points that represent
    specific measures. For example, a connected ventilation, heating, and air conditioning
    system would provide desired temperature, ambient temperature, air quality, humidity,
    load, energy consumption, and blower speed measures. In a large shopping mall,
    these data points are collected frequently from hundreds of appliances. Since
    these devices may lack the power to run the full TCP networking stack, they may
    use other protocols like ZigBee and Z-Wave to send the data to a gateway that
    can aggregate the data points and process in the system [62]. MQTT is one of the
    most popular connectivity protocols in IoT that is used in this research. MQTT
    is a very lightweight messaging protocol that can operate with a constrained resource
    such as low memory, bandwidth links, and processing capability for IoT devices.
    MQTT has been utilized in various fields, including energy monitoring, smart cities,
    healthcare, and so on. MQTT protocol is built on top of TCP/IP protocol enabling
    IoT devices to connect to the Internet. MQTT is a Client-Server messaging protocol.
    MQTT consists of three components: publisher, subscriber, and a broker [63]. SECTION
    IV. The Infrastructure Architecture Solution The proposed solution starts with
    a Smart Water Meter as the IoT device in the proposed paradigm which “talk” to
    the cloud to send the water flow measurements and the GPS information. When data
    is already in the cloud, the software processes it and decides whether to perform
    an action without the need for user intervention. The IoT gateway plays an important
    role in the translation between sensors protocols, sensor data aggregation, and
    sensor data processing before to be sent onward. Because there can be several
    connectivity models, protocols, and energy profiles associated with the dispersed
    nature of the IoT systems, gateways are the means to control and manage these
    complex environments. However, for a higher throughput and lower latency, an MQTT
    proxy was used to communicate with Cloud IoT Core and publish telemetry events
    on behalf of bound devices as was the scenario in this research. The MQTT proxy
    pushes the collected data of water consumption to an Apache Kafka cluster in docker
    containers, where data can take multiple paths. Kafka is a distributed, reliable
    and fault tolerant streaming platform which is best suited for the proposed infrastructure.
    It is followed by Apache Spark that consumes data from Kafka to perform some analytics
    and build predictive models. Data points that need to be processed in real-time
    go into the hot path in which an LSTM neural network was previously taught to
    predict the water demand. At the same time, water consumption can be analyzed
    after acquiring them over a certain period. These data points are collected and
    analyzed through a process that takes the data processing pipeline cold path.
    The data points are fed through the cold path for online training of the LSTM
    neural network to update its parameter in an offline manner. In this paradigm,
    it is important to track water smart meter readings in real-time to correct the
    measured data. These data points go through an Apache Spark cluster for almost
    real-time processing, as shown in figure 5. FIGURE 5. Abstract architecture for
    water consumption data prediction. Show All No matter which path that the data
    points will pursue, they will finally be ingested by the Spark ML Pipeline interface
    into the system. Apache Kafka is considered a high-performance data ingestion
    layer dealing with huge datasets. While, the data processing pipeline components
    responsible for cold path and hot path analytics will act as subscribers of Apache
    Kafka. SECTION V. Results and Discussion A. Data Acquision and Aggregation The
    main purpose of data collection through the implemented IoT system is to acquire
    enough data for further “machine learning” processing stages. In the backend,
    the measured data is being evaluated using a big data engine. This is necessary
    since the amount of data is increasing enormously, and there must be a backend
    with a large amount of processing power and memory to process and correlate the
    various measured quantities. The data in this research were collected with consent
    from all the tenants and are installed in a neighborhood in a superb located in
    Maadi district. The acquired data contains drinking water consumption measurements
    collected from 20 residential houses along with their GPS information. The measured
    data included water consumption information from distributed locations, where
    water smart meters were installed. Data were collected during the years 2017 and
    2018 to be used in the offline stage of inspection to discard erroneous measurements
    from the datasets. As a result, there were 20 datasets taken over 12 months in
    such a way that avoided any inconsistencies in the measurements. The sampling
    rate of which data was sampled was kept constant. Measurements were collected
    every 10 min. That rate was synchronized among all smart water meters to be aggregated
    every 10 mins or multiple of that time duration. Therefore, the resulted data
    covered a duration of 12 month-long, with 10 mins resolution that reveals volumetric
    water consumption at participating households. Moreover, the aggregate dataset
    can be used to reveal other features necessary for water demand management. Figure
    6 shows the aggregated water consumption for two weeks, collected from different
    numbers of households. It is obvious that the more households participating in
    the data acquisition stage the better pattern of repeatability in the aggregated
    data. We have used Apache Spark that is good for finding some unexpected correlations
    in the acquired data sets and can stream them simultaneously for machine learning
    and batch processing. Moreover, it has an in-built interactive mode and the execution
    occupations of 10 to 100 times quicker than Hadoop MapReduce. In addition, Spark
    uses Resilient Distributed Datasets [63], which is the reason behind its higher
    computational performance than Hadoop. In addition, Spark can achieve real-time
    analytics because of its streaming module which is known as Spark streaming [64].
    FIGURE 6. Aggregated Water consumption for two weeks based on: (a) Two households,
    (b) 10 Households, (c) 20 Households. Show All B. Water Demand Prediction The
    LSTM network is a recurrent neural network that is trained using Backpropagation.
    LSTM is used to address difficult sequence problems in machine learning to achieve
    optimal results. Instead of neurons, LSTM networks have layers of memory blocks.
    A block consists of components that make it outperforms a traditional neuron combined
    with a memory for recent sequences. The block has gates that manage both the block’s
    state and the output. It operates on an input sequence and each gate within a
    block uses activation units to control its triggering state, making the change
    of state and addition of information flowing through the block to be conditional
    [65]. LSTM can achieve adequate learning and memory from one layer of LSTMs. Therefore,
    the use of higher-order abstractions can be layered with multiple of such layers
    to achieve better performance [66]. LSTMs are sensitive to the scale of the input
    data, specifically when the sigmoid or tanh activation functions are used. So,
    data were rescaled to the range of 0-to-1, prior to be trained and tested [67].
    With time series data, the sequence of values is important. Therefore, the ordered
    dataset was split into training and testing datasets with 70% of the observations
    used to train the model, leaving the remaining 30% for the model testing. The
    optimal batch size depends on the task as it limits the number of samples to be
    shown to the network before weight is updated. This same limitation is imposed
    when making predictions with the fitting model. One solution to this problem is
    to fit the model using online learning. This can be achieved by setting the batch
    size to a value of 1 while updating the network weights after each training example.
    This can have the effect of faster learning but can also add instability to the
    learning process as the weights widely vary with each batch. Therefore, we optimized
    both the number of neurons in the hidden layer and the batch size in the offline
    training stage then kept the number of neurons in the hidden layer while selecting
    a batch size of 1 in the online training and prediction stage. A mean squared
    error optimization function is used for this regression problem with the Adam
    optimization algorithm. The Adam optimization algorithm is an extension to stochastic
    gradient descent that combines both the root mean square propagation, and the
    adaptive gradient algorithm [68]. The LSTM parameters, namely the number of neurons
    in the hidden layer and the batch size, were found to be 10 and 6, respectively
    using 10-fold cross-validation. Therefore, the LSTM parameters chosen in the online
    training and prediction stage are set to an input layer with 1, 2, or 3 inputs,
    a hidden layer with 10 LSTM neurons or blocks, and an output layer with a single
    value prediction. The LSTM blocks used sigmoid activation functions and a batch
    size of 1 while the number of epochs was limited to 300 to decrease the training
    time as there was no significant increase in the model regression accuracy beyond
    that value. Once the model has been trained using the training dataset, the performance
    of the model could be estimated to give metrics suitable for comparison. Then,
    the predictions were inverted before calculating error scores to ensure that performance
    is reported in the same units as the original data (m3). Predictions are generated
    using the LSTM model and compared with the testing dataset to get an indication
    of the model performance. The predictions were shifted so that they align on the
    x-axis with the original dataset. Figure 7 is showing the original dataset in
    blue, the predictions for the training dataset in orange, and the predictions
    on the unseen testing dataset in green. The real aggregated datasets for 2, 10,
    and 20 households were used to model the water demand prediction with 3 different
    LSTM architectures for each. The first architecture uses one recent time step
    to make the prediction for the next time step. The second architecture uses two
    recent time steps while the third architecture uses three recent time steps to
    make the prediction. It can be noticed that the greater the number of aggregated
    households’ datasets, the better the periodicity that can be captured by the LSTM
    model. In addition, the third architecture with three recent time steps performed
    a better job capturing the relation of water consumption prediction in m3 and
    time in hrs. as will be furtherly evaluated and assessed using the suitable accuracy
    metrics. FIGURE 7. LSTM prediction for different number of aggregated households
    water consumption over two weeks based on: (a). (b), (c) Two households for 1,
    2, and 3 inputs respectively, (d), (e), (f) 10 Households for 1, 2, and 3 inputs
    respectively, (g), (h), (i) 20 Households for 1, 2, and 3 inputs respectively.
    The blue curve represents the actual dataset while the orange curve is the model
    response based on the training dataset and the green curve is the model response
    based on the testing dataset. Show All Support Vector Regression and Random Forest
    were trained on the same datasets while their corresponding models’ performance
    metrics were evaluated for the sake of completeness. SVR was chosen for the comparative
    study because of its popularity in the water demand forecasting as reported in
    the related literature. While RF proved to be successful in several time series
    applications. The SVR has used a radial basis function kernel with a resulted
    accuracy performance comparable to what has been achieved using LSTM. While RF
    was outperformed by both LSTM and SVR methods. However, LSTM always consider long
    term dependencies and evaluate new value after understanding the whole series
    pattern. Whereas SVR and RF consider each row as a sample for training data and
    predict the outcome accordingly and will not consider the previous patterns. Therefore,
    LSTM can be superior in its deep learning capabilities while using large sizes
    of datasets. Support vector regression modelling was applied to the dataset using
    the Gaussian RBF kernel. The three associated hyperparameters are the penalty
    factor C , the insensitivity parameter ε , and the Gaussian RBF function parameter
    σ . The value of C acts as a regularization parameter such that a very small C
    means a negligible penalty, while for a large C , a penalty gets more important
    and SVR tries to fit the data. The influence of ε affects the model complexity
    as for a very small value of ε there is not enough margin to include the data
    points and the SVR function tries to fit the data, but for a large value of ε
    there is enough margin causing a tendency for the model to get flat. On the other
    hand, a very small value of σ means the kernel is more localized resulting in
    a tendency to overfit, while a large value of σ makes ε less flexible. The optimal
    hyperparameters used in this research to reduce the 10-fold cross-validation loss,
    were found using the Bayesian optimization algorithm. The hyperparameters, namely,
    ε , and σ were found after 1000 epochs to be 36.51, 0.021, and 0.083, respectively.
    On the other hand, the RF regression hyperparameters includes the depth of the
    trees in the forest. Deep trees tend to overfit, but shallow trees tend to underfit.
    When growing the trees, the number of predictors to sample at each node can range
    from 1 to all the predictors. Because the ensembles with more learners are more
    accurate, the number of trees in the ensemble needs to be tuned due to the tendency
    of the Bayesian optimization to choose random forests containing many trees. Therefore,
    models containing many learners were penalized, as the available computation resources
    is a consideration. To find the model achieving the minimal, penalized, out-of-bag
    quantile error with respect to tree complexity and number of predictors to sample
    at each node, Bayesian optimization and 10-fold cross-validation were used. The
    hyperparameters, namely the number of decision trees, minimum sample split, maximum
    depth, maximum leaf node, minimum samples leaf, and bootstrap sample fraction,
    were found after 1000 epochs to be 127, 71, 14, 36, 224, and 0.17, respectively.
    The different LSTM architectures, the SVR, and the RF were evaluated using three
    different datasets (the aggregated data of water consumption from 2, 10, and 20
    households). The models evaluation against RMSE, MAE, and MAAPE accuracy metrics
    are summarized in table 1, table 2, and table 3, respectively. The RMSE is noticed
    to be with higher values than those of the MAE for the corresponding LSTM, SVR,
    and RF models. However, both table 1 and table 2 could support that LSTM and SVR
    were comparable in their performance. However, when it comes to all the architecture
    models using all datasets, MAAPE is the right metric to use for the overall comparison.
    The values of the MAAPE reflects better performance with aggregated data from
    more households. While LSTM with three inputs is a better architecture choice
    that outperforms other models including LSTM with one and two inputs as well as
    the SVR and the RF models. TABLE 1 The RMSE in m3 for Different LSTM Neural Networks
    That Has 1, 2, and 3 Inputs Applied to Aggregated Datasets From 2, 10, and 20
    Households as Compared to Support Vector Regression With the RBF Kernel and Random
    Forrest TABLE 2 The MAE in m3 for Different LSTM Neural Networks That Has 1, 2,
    and 3 Inputs Applied to Aggregated Datasets From 2, 10, and 20 Households as Compared
    to Support Vector Regression With the RBF Kernel and Random Forrest TABLE 3 The
    MAAPE for Different LSTM Neural Networks That Has 1, 2, and 3 Inputs Applied to
    Aggregated Datasets From 2, 10, and 20 Households as Compared to Support Vector
    Regression With the RBF Kernel and Random Forrest SECTION VI. Conclusion By leveraging
    Artificial Intelligence and Machine Learning, governments can forecast the networks’
    and customers’ needs, automate preventative actions, and tailor their services
    and products based on quantitative and qualitative measures. Moreover, the IoT
    business opportunities are limitless as grids and smart meters optimize resources,
    and remote monitoring solutions increase the efficiency of water network. In addition,
    analytics is considered an essential component of every successful IoT application.
    Therefore, IoT technology can provide insights in real time and empower intelligent,
    data-driven decisions that improve the national welfare. The smart water meters
    were installed to cover a neighborhood that can represent water consumption in
    the pilot study. Real-time streaming is critical for the system solution for further
    processing and possible prediction necessary for critical management situations.
    The paradigm used in this research takes advantage of containers and micro-services
    opposite to virtual machines cloud architecture to increase performance and decrease
    cost on the national scale IoT system used to collect water consumption data in
    a suburb in Cairo as a pilot study. The proposed system can be expanded to cover
    the whole country with sub models for different regions and represent the first
    and second stage in a smart water management system. The pilot study offers a
    testbed for water consumption to be incorporated in a water demand management
    system that can be scaled up on a national scale with integrated services taking
    into account security, cost, and scalability. The main advantage of the two-layer
    paradigm is to collect aggregated water consumption from different regions to
    be used to achieve an offline consumption model based on time and region. That
    is followed by real-time prediction over time for the water demand with an adaptive
    machine learning paradigm. Based on the water demand prediction a number of scenarios
    for both water utilities management and consumer behavior management can be incorporated
    for the ultimate goal of reduced water consumption. Also, this research suggests
    a management system that needs to offer quantitative measures for water demand
    reduction in peak times, better water demand distribution, and lower water consumption.
    In addition, it needs to measure the effect of planned city development and expansion
    imposed on water network infrastructure and performance. Future directions need
    to tackle accurate simulation for performance metrics related to the IoT cloud
    in order to optimize the microservices integration for a better performance. Another
    direction will be to add a monitoring service to continuously measure the LSTM
    neural network performance and any failing component in the system before it can
    cause significant performance degradation. Moreover, several recent meta-heuristic
    techniques can be combined with LSTMs to optimize their hyperparameters to achieve
    a higher performance. Data Availability All the acquired and analyzed water demand
    data collected during this study are included in this article. The data are accessible
    through the IEEE DataPort Open Access Data Platform. The generated datasets of
    this study are available from the corresponding author on request. Authors Figures
    References Citations Keywords Metrics Code & Datasets More Like This Demand Forecasting
    by Using Support Vector Machine Third International Conference on Natural Computation
    (ICNC 2007) Published: 2007 Non-Stationary Demand Forecasting Based on Empirical
    Mode Decomposition and Support Vector Machines IEEE Latin America Transactions
    Published: 2017 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09163328.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: A Two-Layer Water Demand Prediction System in Urban Areas Based on Micro-Services
    and LSTM Neural Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2021.3066457
  analysis: '>'
  authors:
  - Franklin Magalhães Ribeiro
  - Carlos Kamienski
  citation_count: 24
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 9 A Survey
    on Trustworthiness for the Internet of Things Publisher: IEEE Cite This PDF Franklin
    Magalhães Ribeiro Junior; Carlos Alberto Kamienski All Authors 26 Cites in Papers
    2645 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Thing-Mist-Fog-Cloud IoT Computing Continuum
    III. Trustworthiness and Related Paradigms IV. Adopted Terminologies V. Trustworthiness
    Related Studies Show Full Outline Authors Figures References Citations Keywords
    Metrics Abstract: IoT systems use sensors to collect data from smart environments
    and manage resources through data analysis. An IoT system deals with many connected
    devices with different network and hardware constraints in a real-world scenario.
    An IoT system needs to handle low-latency data analysis, security threats, internal
    vulnerabilities, and network disconnections, which cause data loss and incorrect
    decisions. Trustworthiness (also known as dependability) provides various features
    for an IoT end-to-end data flow, such as resilience, security, availability, reliability,
    scalability, maintainability, heterogeneity, hardware resources management, fault
    management policies, and data quality. This paper presents a survey on trustworthiness
    and dependability in IoT systems and proposes the Trustworthiness for IoT Framework
    (TW-IoT) to provide trustworthiness at the data level for mist and fog-based IoT
    systems. The TW-IoT framework provides data trustworthiness to ensure a continuous
    and uninterrupted operation of IoT data flow. We also discuss challenges and trade-offs
    related to data trustworthiness in IoT. Thing-Mist-Fog-Cloud IoT computing continuum.
    Published in: IEEE Access ( Volume: 9) Page(s): 42493 - 42514 Date of Publication:
    17 March 2021 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2021.3066457 Publisher:
    IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this material.
    Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction The Internet of Things (IoT) is a networked system with billions
    of connected physical devices (sensors and actuators) transmitting and receiving
    data in a given context application [1]–[3]. IoT systems can monitor water distribution
    and irrigation in agriculture, reduces logistics costs, monitor patient health
    in a hospital, or optimize vehicle traffic through smart traffic lights [4]–[7].
    Therefore, an IoT system grants services to smart scenarios in different contexts,
    efficiently managing hardware, software, and communication resources to reduce
    costs in specific domains. In IoT, dealing with vulnerabilities of a vast number
    of heterogeneous and hardware-constrained devices is a challenge [4], [8]. Trustworthiness
    enhances IoT system features to handle several system challenges. However, there
    is no consensus in the literature about the definition of trustworthiness, as
    some research lines limit this concept to security scope handling only malicious
    attacks [9], [10]. Risks and threats for IoT systems involve malicious attacks
    by external agents and system threats such as faults, vulnerabilities, or unexpected
    system behaviors. Trustworthiness and dependability [11], [12] are similar concepts.
    They include requirements of system availability, reliability, scalability, maintainability,
    heterogeneity, data quality, hardware resources, security, agility in the response
    time, and system and network resilience [13]. A way to enforce trustworthiness
    requirements in IoT systems is using fog computing because it allows real-time
    data analysis at the edge [14]–[17]. Fog computing does not limit data analysis
    to a centralized cloud server. Fog enables local data analysis at the network
    edge [18], [19], reducing the network throughput and the need for data processing
    in a cloud [20], as well as allowing faster decision-making at the edge [19],
    [21]–[23]. However, even a fog-based IoT system has trustworthiness challenges,
    considering mechanisms to manage the IoT devices’ data flow and the network, memory,
    and energy consumption constraints [8], [24], [25]. This paper presents a research
    overview of IoT trustworthiness to identify problems, challenges, approaches,
    solutions, and technologies. We identify gaps and challenges about trustworthiness
    in IoT systems and also propose the Trustworthiness for IoT Framework (TW-IoT).
    Based on mist [26] and fog computing, TW-IoT provides trustworthiness from a data
    flow perspective throughout different IoT stages (thing, mist, fog, and cloud).
    The main contributions of this paper are (i) to clarify concepts, characteristics,
    and gaps about trustworthiness in IoT systems, (ii) to propose the TW-IoT framework
    that contains a set of techniques and mechanisms for ensuring trustworthiness
    in the development of an IoT system based on mist and fog computing, (iii) to
    propose a data flow for each IoT stage (thing, mist, fog, and cloud), using the
    TW-IoT framework, (iv) to expose some trade-offs among trustworthiness mechanisms
    for the IoT data flow and finally, (v) to present the challenges related to trustworthiness
    in IoT systems. The remainder of this paper is organized as follows: Section II
    defines a fog-based IoT system architecture, Section III contextualizes concepts
    of trustworthiness, dependability, and data trustworthiness, Section IV presents
    this paper adopted terminologies, and Section V describes the trustworthiness
    related studies. Section VI introduces the TW-IoT framework for data trustworthiness
    in IoT systems based on mist and fog computing. Section VII exemplifies TW-IoT
    mechanisms for IoT data flow stages (thing, mist, fog, and cloud), and Section
    VIII explains trade-offs between these mechanisms. Section IX discusses the lessons
    learned and challenges, and finally, Section X presents conclusions and future
    work. SECTION II. Thing-Mist-Fog-Cloud IoT Computing Continuum The Internet of
    Things (IoT) connects billions of embedded devices (sensors and actuators), transmitting
    and receiving data in a network [1], [27]. Through Internet, sensors send data
    to be processed and analyzed in a cloud server, whose results can generate instructions
    to actuators. Fig. 1 describes the underlying IoT Computing Continuum [28], providing
    the rationale for analyzing the trustworthiness concept, based on four processing
    stages: thing, mist, fog, and cloud. FIGURE 1. Thing-Mist-Fog-Cloud IoT computing
    continuum. Show All A. Thing Stage The Thing stage contains the physical devices:
    sensors and actuators. Sensors gather data from a specific environment, sending
    them to the Mist stage and beyond. After it, the IoT system uses data fusion or
    different models (e.g., machine/deep learning) according to a specific application
    [29]. As a result, the model generates a decision and sends it back to actuators
    in the Thing stage as commands to change the environment accordingly (e.g., turn
    on/ off some equipment). B. Mist Stage The mist processing stage is closer to
    sensors [30], playing the role of a specific fog node deployed in the field, providing
    direct support for the communication of sensors and actuators with the Internet.
    Mist computing is a subset of fog computing, running on constrained resource equipment,
    such as single-board computers [31], [32]. A mist node significant function is
    behaving as a radio gateway for sensors and actuators, as defined by RFC 8376
    [33]. Also, it can store, preprocess, and analyze data in a distributed fashion
    over multiple nodes. For that reason, one of the mist computing benefits is to
    improve the system scalability, as it may help increase the autonomy of devices
    closer to the edge [26]. C. Fog Stage Fog computing addresses new challenges related
    to the massive amount of data generated by the increasing use of IoT systems [16],
    [18], [20]. Fog computing supports a virtualized computing platform that offers
    processing, storage, and communication services between devices, users, and the
    cloud datacenter [34]. The main goals of fog computing are (i) decreasing latency
    for real-time services negatively affected by the long physical distance between
    devices and cloud data centers, (ii) enabling system load-balance at the edge
    and reducing processing in the cloud, and (iii) decreasing data traffic between
    the edge and the network core as the system does not need to send all data to
    the cloud. Similarly to a cloud service, a fog node can store data and process
    models such as machine learning or data fusion algorithms to forecast certain
    behaviors or make decisions. However, there are significant differences between
    cloud and fog, such as the limited availability of computing resources, the security
    policies, and the hardware performance (memory and processing) [16], [35]. Fog
    is not a mandatory stage in IoT systems. However, its potential benefits may be
    worth it, such as reduced response times at the edge and more robust network resilience
    [36]. Local data processing also prevents sending irrelevant data to the cloud
    [22] by analyzing sensor data locally [20]. D. Cloud Stage Cloud computing has
    data processing high performance because it provides hardware resources in a scalable
    approach through cloud services virtualization [37]. A cloud service customer
    can execute multiple processes on a large scale since the cloud provides distributed
    hardware resources on demand for these processes [38]. The cloud plays a crucial
    role in any IoT system. Theoretically, the cloud stage is not needed because everything
    can be processed at an edge, e.g., in a farm office for smart agriculture. However,
    in practice, the cloud’s resources, robustness, and reliability, either public
    or private, are unavoidable characteristics. SECTION III. Trustworthiness and
    Related Paradigms In this section, we explain the concepts of trustworthiness,
    dependability, and data trustworthiness. A. Trustworthiness and Dependability
    Trustworthiness allows the uninterrupted continuity of system services [39]. In
    other words, a trustworthy (dependable) system should adapt and tolerate vulnerabilities
    throughout its life cycle [40]. The trustworthiness definition consists of system
    requirements concerning multiple aspects, such as security, resilience, availability,
    reliability, scalability, maintainability, heterogeneity, data quality, hardware
    resources, and fault management policies [13]. Some authors limit the trustworthiness
    concept as dealing with system security only [9], [41]. However, throughout this
    paper, trustworthiness and dependability are equivalent concepts [11], [12]. Trustworthiness
    is not only associated with failures in the system security level (by attacks)
    but also with general system vulnerabilities [13], [42]–[44]. Therefore, we consider
    the concepts of trustworthiness and dependability as synonyms, even though there
    is no consensus in the community [11], [12]. IoT critical systems need to deal
    with privacy, heterogeneity, and data analysis from billions of devices [45] in
    real-time, as well as system failures and real-time decision-making [45], [46].
    Consequently, trustworthiness is essential in these IoT environments [47]–[50].
    B. Data Trustworthiness Trustworthiness is not limited only to enhance the system
    at the software/hardware level but also to improve the system at the data level
    [44], [51]. An IoT system that collects data in an environment must ensure the
    data trustworthiness, verifying if that data contains relevant information to
    the application domain. Data trustworthiness needs to ensure data veracity, according
    to the IoT system context [52], [53]. For example, supposing the IoT system collects
    data from tropical weather. In that case, the IoT system must verify the data
    behavior, referring to these climate conditions. Otherwise, in future data analysis,
    the IoT system may not respond correctly, making wrong decisions, causing a vulnerability
    at the data level. In an IoT system, ensuring data trustworthiness also means
    ensuring resilient data flow. Therefore, the data trustworthiness consists of
    maintaining data flow continuity and trusted system decisions [44], [53]. SECTION
    IV. Adopted Terminologies We adopt terminologies in this paper as the IoT system
    concepts, IoT smart service, IoT smart application, context, and a mechanism in
    our proposal called the integration of smart everything (explained in Section
    VII). We refer to the system context as circumstance or condition related to external
    or internal variations in an IoT system environment [17], [54], [55], as the weather
    temperature, energy consumption, soil moisture, or wind velocity measurement variations.
    An IoT smart service contains smart applications. For example, a smart service
    refers to smart farming, smart mobility, or smart hospital service. At the same
    time, a smart application corresponds to applications of these smart services.
    Thus, a smart farming service contains smart applications like smart irrigation,
    smart water management, smart pest control, and a smart monitoring crop growth
    application. The IoT system represents the entire hardware and software system,
    which contains IoT smart services and, consequently, IoT smart applications. An
    ideal IoT system has multiple smart services connected by the mechanism that we
    call smart everything. SECTION V. Trustworthiness Related Studies We searched
    studies that explicitly use concepts and definitions of trustworthiness and dependability
    with the following combination of terms: dependability and IoT, trustworthiness
    and IoT, trustworthy IoT. We searched papers in IEEE Xplore, ACM Digital Library,
    Google Scholar, Science Direct, and Springer Link. We also examined the abstracts
    of the articles. For the survey scope, we found a total of 57 studies related
    to dependability and trustworthiness. We perceived that 56 investigations refer
    to IoT, fog, or edge computing. We also observed that one study only focusing
    mainly on physical devices (sensors and actuators). We identified 24 papers referring
    only to trustworthiness, 27 to dependability, and six mentioned both terms (TABLE
    1). TABLE 1 Topics Per Paper A. Related Studies Categories We classify 57 studies
    related to dependability and trustworthiness: 18 present conceptual studies, 10
    introduce a framework, 10 describe a mathematical investigation, eight present
    a performance analysis, six report algorithms or techniques, three show an architectural
    approach, and two focus on hardware related issues (Fig. 2). FIGURE 2. Related
    studies categories. Show All 1) Conceptual Regarding studies that present definitions
    on dependability and trustworthiness, some papers explore the state of the art
    and definitions [9], [42], [43], [56]–[63]. We also found surveys on trustworthiness
    [64]–[68] and dependability [69] and a systematic literature review (SLR) on dependability
    [70]. 2) Framework Design Some papers propose a framework for resource management
    in fog/cloud [71], other propose a framework for trust management for IoT devices
    [51], [72], [73], and fog nodes [74]. Also, some papers focus on security issues
    [10], [75]–[77] or fault recovery [78]. 3) Mathematical Approach Among research
    on IoT dependability, we found five studies that present mathematical approaches
    to measuring system reliability and availability [79]–[83]. In contrast, two others
    propose a calculus to estimate a confidence score to sensors [41], [84], and users
    [85]. We also found a proposal for an optimization approach for some dependability
    characteristics [86] and a theoretical approach based on Markov models to deal
    with vulnerabilities in a healthcare system [87]. 4) Performance Analysis Among
    the papers reporting a performance evaluation, some analyze trustworthiness by
    energy consumption [88]–[90], evaluate protocols [91], and communication interfaces
    [92]. Two papers compare different machine learning techniques for malicious data
    detection [93], [94], and another one compares machine learning techniques for
    data (image) reconstruction [95]. 5) Algorithms/Techniques We identified papers
    that propose techniques or algorithms to improve dependability characteristics
    [39], [96]–[98], or techniques related to trust management mechanisms [99], [100].
    6) Architectural Approach We found three studies that propose architectural approaches:
    an architectural approach for a gateway that provides security to an IoT system
    [101]; a conceptual architecture for data provenance [102]; a standards-oriented
    approach [103]. 7) Hardware Design We found two studies that propose solutions
    at the hardware level, dealing with system cryptography [104], and with limited
    computational resources in IoT focused on device memory constraints [105]. B.
    Trustworthiness Features We consider the following set of features describes the
    trustworthiness concept: security (integrity, confidentiality, availability, and
    authenticity), system and network resilience, data quality (and semantic integrity),
    system availability, system reliability, scalability, maintainability, survivability,
    heterogeneity, IoT constraints (latency, memory, processing power, energy consumption),
    fault management and redundancy (see TABLE 2). TABLE 2 Trustworthiness Features
    in Related Work 1) Security Data security is a feature for ensuring the IoT system
    trustworthiness [64], [88], [106]. A secure system needs to provide data integrity,
    authenticity, confidentiality to protect data from malicious attacks or not authorized
    access [107]. As shown in TABLE 2, we observed that security is the most mentioned
    feature of an IoT system’s trustworthiness. The main security features that we
    found as follows: Integrity: refers to data content preservation, ensuring that
    data is not corrupted or altered by a malicious user or software. Integrity is
    strongly associated with IoT system trustworthiness because fraudulent data turns
    the system no longer reliable [64] since it makes wrong decisions [66]. Authenticity:
    IoT data is authentic when it comes from a source that is a trusted part of the
    system [104], [107]. Unknown sensors can transmit non-authentic data with information
    that differs from the application context [97]. One way to deal with unreliable
    sensors in IoT is through the traceability of transmitted data [73] or by verifying
    the behavior of network sensors’ energy consumption [84]. When there is a lack
    of data authenticity, integrity is not necessarily compromised, as the data is
    not corrupted or altered but fabricated. Therefore, a trustworthy IoT system must
    deal with mechanisms to verify data authenticity. Confidentiality: ensures that
    third parties have no access to IoT devices’ data by packet interception [65].
    Consequently, the IoT system must restrict data access via encryption mechanisms
    and access validation policies [64]. Availability: from the security viewpoint,
    availability deals with interruptions [9], [104] caused by attacks such as denial
    of service (DoS), for example. However, the availability concept has a broader
    scope. A system can stop working even without any external attack but due to other
    vulnerabilities. 2) Resilience Resilience of a computer system is part of the
    trustworthiness concept [94]. It includes the ability to deal with system failures.
    Thus, a resilient system can prevent, tolerate, mitigate, remove, and predict
    failures [108], [109]. In a system with devices connected to a network, resilience
    is responsible for maintaining or recovering the communication service between
    devices, regardless of network failures [110], [111]. The concept of resilience
    is the system’s ability to resist failures [112] using recoverability (survivability),
    adaptability, and the capacity to manage failures [13]. Network, hardware, or
    software vulnerabilities can interrupt a system service, so the system must react
    to these failures when they occur. However, there are computing costs to support
    system resilience [113]. The system requires resources to recover from a failure,
    to solve or mitigate a threat, reducing or compromising the system performance.
    A resilient IoT system must deal with resource constraints (network, battery,
    memory, and processing capacity limitations) because IoT devices must react to
    failures as quickly as possible. After all, operations must occur in real-time
    [69]. A resilient fog-based IoT system data flow must prevent data losses caused
    by the network connection failure between mist/fog components. The fog also needs
    to deal with data loss due to low storage capacity in mist/fog nodes memory [111].
    A relevant resilience challenge deals with network disconnection between components
    of different IoT stages, such as thing, mist, fog, or cloud [16], [114]–[121].
    Therefore, it is necessary to establish mechanisms to ensure resilience to fog-based
    IoT systems for data transmission [16], [122], such as fault management mechanisms
    for IoT nodes [16]. A resilient system must provide security and fault management
    mechanisms. The survivability concept offers the system’s continuity through fault
    recovery techniques, which recovery techniques are one of the fault management
    features. Moreover, redundancy is a technique that the system uses to recover
    from a failure. 3) Fault Management In computer systems, a failure represents
    an unexpected behavior. In the IoT data domain, it is possible to exemplify some
    of these behaviors as data integrity loss due to semantic/syntactic vulnerabilities,
    packet loss due to network interference or connection loss between fog nodes [70],
    and data loss caused by network exhaustion or device memory overflow. The literature
    categorizes fault management into four main aspects: fault detection, fault prediction,
    fault recovery (or mitigation), and fault prevention: Fault detection: fault detection
    in IoT is the verification of unexpected behavior using, for example, statistical
    analysis or machine learning methods [69]. IoT makes it possible to detect sensor
    failures, for example, by monitoring data values coming, such as the detection
    of outliers [97]. Fault prediction: consists of predicting the fault occurrence.
    In IoT, the most common method for predicting a fault is through probabilistic
    models or data regression techniques. Fault recovery or mitigation: A way of recovering
    from a failure in IoT is, for example, using load balancing between nodes to mitigate
    service discontinuation [74]. Some studies also deal with IoT fault recovery by
    using redundancy techniques [58]. Fault prevention: When the system predicts a
    fault (perceive the fault condition before it occurs), the system can perform
    mechanisms to prevent a failure (which refers to the system’s inability to operate).
    Redundancy is an example of a mechanism for fault prevention by replicating data
    from a fog node to other fog nodes. 4) Survivability Survivability is part of
    the concept of resilience and represents a system’s ability to survive attacks,
    failures, or degradation [13], [61]. In the fog computing scope, survivability
    maintains the data flow continuity between the IoT stages (from the thing stage
    until the cloud stage). This feature uses some mechanisms to increase an IoT system’s
    ability to survive vulnerabilities, such as data replication or fault management
    mechanisms. Also, fog-based IoT systems can rely on load balancing. In the fog
    node’s imminent resource exhaustion, the fog can transfer its workload to other
    nodes [74]. An open issue related to survivability is data loss [16], which can
    occur by an eventual disconnection between IoT stages, such as between fog and
    cloud. After a disconnection, when the connection returns, the data not sent to
    the cloud is not necessarily immediately transmitted, causing a data flow gap
    between fog and cloud. Therefore, IoT stages must store data temporarily during
    disconnections and transmit it to the next stage when the connection is active
    again. Delay-tolerant networking (DTN) is a mechanism that deals with data loss
    due to network disconnections [123] and can be used together with fog-based IoT
    systems [124]–[128]. However, these proposals only focus on delay or packet loss,
    disregarding the solution impact on fog resources. Besides, the DTN design does
    not deal with IoT trustworthiness requirements. 5) Redundancy Redundancy increases
    IoT systems’ reliability and availability [58] by replicating data from one node
    to other nodes. When, for example, a fog node A fails, the system continues to
    operate if other fog nodes B and C have a data copy from the failed fog node A.
    Redundancy is not limited to providing system data replication. It also includes
    connection replication using different communication technology on the same IoT
    device [82], [83]. For example, in case of a connection failure in the LPWAN interface,
    the device may use a Wi-Fi or 4G connection to reestablish communication with
    other nodes [92]. 6) Data Quality/Semantic Integrity Data quality is related to
    the IoT system context, and it directly impacts the solution decisions. The system
    context refers to a circumstance or condition related to external or internal
    variations in an IoT system environment [17], [54], [55], as the weather temperature,
    energy consumption, soil moisture, or wind velocity measurement variations. Assuring
    data quality involves verifying whether the gathered data represents the actual
    system context [51], which means that semantic data integrity is essential in
    assessing data quality [129]. For example, in an environment where the climate
    is always humid, data with a dry climate’s characteristics is likely wrong. As
    the IoT system context directly impacts the actuators’ actions, maintaining data
    quality ensures data trustworthiness [51]. The IoT system can verify data trust
    by the data type, system behavior, and context. Therefore, an IoT system previously
    needs to know the context and problem domain to provide trustworthy data analysis
    [129]. An IoT system needs to use meaningful data for decision-making [130], which
    means that part of the initial data processing must identify and remove data outliers.
    However, in cases of fake or manipulated data, it is necessary to observe whether
    the data comes from unreliable sensors [65], [95]. A data filter can solve this
    problem [97] since fake data can compromise future system actions. 7) System Availability
    Availability ensures that the IoT system continues operating as long as possible.
    There are methods to keep the system available, like managing hardware redundancy
    [63], [82], and maintaining a fault management mechanism [58]. Some IoT applications
    are latency-sensitive and, consequently, require low latency for transmitting
    packets between IoT stages. Therefore, these systems are always available when
    it performs all actions in real-time [60]. System availability is a metric that
    indicates the operation system probability until it begins a failure state (Equation
    1) [131]. Therefore, availability is given by the MTTF (mean time to failure)
    divided by MTTF + MTTR (mean time to repair). Availability= MTTF MTTF+MTTR (1)
    View Source 8) System Reliability Reliability, as well as availability, is a relevant
    metric to ensure IoT trustworthiness. However, it is worth empathizing that both
    concepts differ since availability demands the whole system to be continuously
    available, while reliability refers to system operations’ confidence [63]. Thus,
    reliability can be measured by the probability that a system will behave as expected
    for a specific time interval (t). We measure the reliability by the MTBF (mean
    time between failures) metric if the system has some fault recovery mechanism.
    However, we measure the reliability by the MTTF (mean time to failure) if there
    is no recovery mechanism. For calculation, the first case we consider λ=1 / MTBF
    and for the second λ=1 / MTTF. Thus, we describe reliability by Equation (2),
    where R (t) is the reliability function of time t, and λ is the miss rate [132].
    R(t)= e −λt (2) View Source 9) Scalability In a scenario with thousands or millions
    of sensors, IoT systems must satisfy the scalability demand to sustain a massive
    data transmission, storage, and analysis in real-time [15], [19]. A trustworthy
    system must be scalable because poor system performance and slow data analysis
    can result in delayed and, consequently, wrong decisions. Besides, with imprecise
    choices, the system harms data trustworthiness. The scalability feature implies
    providing more computing resources to the IoT system [63]. In a fog-based IoT
    system, nodes can become computationally saturated because, in a real scenario,
    the fog is responsible for dealing with thousands of devices [60]. Therefore,
    the scalable deployment of fog computing systems requires the necessary hardware
    infrastructure. The IoT system is more trustworthy with thousands of sensors because
    it stores more information, allowing it to make more precise decisions based on
    the gathered data. However, a system with many sensors demands additional security,
    network, and resilience requirements. Maintain a scalable and continuous data
    flow requires communication resilience between the IoT stages (mist-mist, mist-fog,
    fog-fog, and fog-cloud) [24], [122]. 10) Heterogeneity A real IoT system scenario
    comprises several heterogeneous communications and device technologies [27]. IoT
    communication protocols provide interaction between different devices because
    IoT devices have different hardware technologies and cannot understand each other.
    Multiple protocols differ in terms of packet formats and communication technologies,
    and not all protocols can support every IoT system [133]. Furthermore, dealing
    with heterogeneity is an essential trustworthiness issue. LPWAN (low power wide
    area network) technologies provide long transmission ranges, low energy consumption,
    and low bandwidth. LPWAN is an attractive technology for IoT systems that send
    a few dozens of bytes every couple of minutes or hours [134], [135]. LoRaWAN,
    Sigfox, and NB-IoT are LPWAN technologies leading this front [27], [136]. There
    are other technologies for IoT system communications, as Bluetooth [133], Zigbee
    [137], and Z-Wave [138]. The IoT developer can also adopt IEEE 802.11 standards
    (Wi-Fi), transmitting over short-range distances by devices with no battery constraints
    [133]. IoT system trustworthiness solves the interconnection problems between
    heterogeneous devices. The massive number of highly heterogenous devices can increase
    communication faults in IoT infrastructures [69]. Hence, the system must support
    interoperability [76], allowing intercommunication between applications and devices
    for every connected node [20]. 11) Quality of Service (QOS) IoT systems, based
    on fog or not, must process data from thousands of sensors in real-time. Therefore,
    there is a concern with network latency in sending data from a stage to another
    since a long packet delay can impair critical decisions ’ agility and correctness.
    There is also a data loss problem caused by low-quality network connection [89]
    or caused by a disconnection between IoT stages. Some IoT latency-sensitive systems
    do not accept packet delay or packet loss problems [50]. These circumstances only
    contribute to generating undesirable behavior, affecting the system’s trustworthiness.
    As previously mentioned, trustworthiness also deals with the choice of communication
    technologies. There may be interference between specific transmission protocol
    frequencies or range restrictions between devices [133], [136]. For example, for
    the Zigbee technology [137], the transmission distance range is lower than the
    LoRaWAN range [136]. 12) Memory Capacity Maintaining all system data stored is
    a way to ensure IoT data trustworthiness [56]. However, IoT devices frequently
    suffer from primary memory constraints. Keeping data in an IoT device for an indefinite
    time has a high cost. If we suppose a fog node that loses the cloud connection
    but continues to receive data from sensors and stores the data until the Internet
    connectivity returns, the storage memory can overflow. In this case, data fusion
    is a way to reduce these costs, joining consecutive stored data [105]. 13) Energy
    Consumption Most IoT devices have little autonomy due to limited battery [88],
    [59]. The impact of this constraint can reflect in (i) faults of data gathering
    whenever a sensor runs out of battery [89], (ii) storage gaps in a data time series,
    and (iii) wrong data analysis, since the gap in time series, harms the data analysis,
    and consequently untrusty decisions. Therefore, data trustworthiness needs to
    consider the device’s energy consumption. In smart farming, energy harvesting
    is a feasible solution for device battery constraints, such as photovoltaic cells
    [139]. However, this strategy does not work for all scenarios. For this reason,
    a relevant research challenge is reducing energy consumption in IoT devices [140],
    [141]. 14) Processing Power One critical aspect of IoT systems design and development
    is the limited devices processing power capacity [59]. Therefore, it is crucial
    to consider the processing constraints, especially for mist and fog nodes, since
    they are, to a great extent, responsible for ensuring trustworthiness. In latency-sensitive
    IoT systems, some scenarios require real-time data processing [56], and the processing
    power directly impacts a system execution time (see Equation 3) [131]. Many IoT
    operations are related to fault detection, data redundancy, or load balancing.
    Therefore, IoT processing power is a concern to provide trustworthiness to IoT
    systems. CPU execution time for a program = CPU clock cycles for a program Clock
    rate (3) View Source 15) Maintainability Maintainability refers to a system’s
    capacity to deal with changes [59], [69], including system evolution and adaptation.
    In a resilient computer system, adaptability suggests that the system can learn
    specific attack types to make the most appropriate decisions to protect against
    an attack [13]. C. V’S of Big Data and Trustworthiness Features in IoT Big data
    systems have several V features, such as variety, veracity, volume, velocity,
    and value [142], [143], which overlap some data trustworthiness characteristics
    for IoT. Variety deals with heterogeneity problems such as the treatment of data
    types. Veracity relates to data quality. Volume reflects the concern of analyzing
    information on a very large scale. Velocity assumes that computer systems must
    process and store data in real-time. Finally, value considers the data relevance
    for an application [142], [143]. SECTION VI. TW-IoT Framework: a Mist-Fog-Based
    Framework for Data Trustworthiness to the Internet of Things In Section V, we
    presented the related studies on trustworthiness for IoT. However, there is still
    an unbridged gap in the literature: an architectural framework with concrete roles
    and mechanisms to ensure data trustworthiness in each stage of a mist-fog computing
    architecture. With this challenge in mind, we propose the Trustworthiness for
    IoT Framework (TW-IoT) (Fig. 3), comprised of features, mechanisms, recommendations,
    and methods to ensure data flow continuity and data trustworthiness for mist-fog-based
    IoT systems. The proposed framework contains four stages (thing, mist, fog, and
    cloud), based on the IoTinuum architecture [28] (Section II) and four layers (device,
    transport, data, and model) based on the IoTecture architecture [28]: Device Layer:
    comprises different mechanisms to ensure data trustworthiness in the physical
    devices. Transport Layer: contains mechanisms responsible for packet security
    and trustworthiness in connection, communication, and data transmission over the
    network. Data Layer: contains mechanisms for ensuring data quality and dealing
    with meaningful information in the data, as data value and veracity. Model Layer:
    this layer is related to trustworthiness in data decision models and system data
    analysis. FIGURE 3. TW-IoT framework mechanisms. Show All We also propose six
    data trustworthiness design views: data processing, data resilience, data trust,
    data security, data heterogeneity, and data fusion (Fig. 3). A. Data Resilience
    View The IoT system needs to ensure continuous and uninterrupted data flow through
    the IoT stages. Therefore, we design the data resilience view to endure vulnerabilities
    and data loss. This view includes data prediction, data flow persistence (data
    persistence mechanism, load balance, redundancy), and storage management mechanisms.
    1) Data Persistence Mechanism This mechanism focuses on ensuring data persistence
    when the network between the IoT stages disconnects. The data persistence mechanism
    improves communication between the different IoT stages, considering typical limitations
    of mist and fog nodes. The data persistence mechanism regularly performs health
    checks in network connections to avoid data losses between IoT stages. Simultaneously,
    mist and fog nodes store the data locally because they send the data later when
    the link returns, after a connection failure event. The IoT nodes have constrained
    memory resources, so deploying together the data persistence mechanism and the
    data filter mechanism (subsection B.1) reduces the amount of data transmitted.
    This persistence mechanism may cause inconveniences for long disconnections without
    the filtering mechanism, such as mist memory overflow and long data transmission
    delays. 2) Data Prediction Data prediction is a mechanism that maintains data
    flow persistence when the data from a previous stage does not reach the destination
    stage. One of the reasons for data loss is the run out of the battery of the sensors
    or network disconnections. Without the complete time series, the system makes
    incorrect decisions. Data prediction using machine learning algorithms can mitigate
    the data time series gaps and provide more reliable decisions. However, supposing
    that the system receives the lost data at the future moment, the system needs
    to replace the original data with the data created by prediction algorithms. In
    other words, it needs to compose new historical data. 3) Storage Manager Billions
    of sensors can periodically collect and transmit data. The mist/fog stages are
    responsible for storing this massive amount of data, but these nodes have limited
    memory capacity. One way to solve this problem is by using data filtering (subsection
    B.1). The system needs to evaluate how long the mist/fog nodes should preserve
    old data, thus assessing the impact that deleting old data cause on the system’s
    trustworthiness. 4) Load Balance The load balancing mechanism prevents a mist/fog
    node from exhausting memory and processing resources. When a fog node reaches
    maximum hardware utilization in an IoT scenario, fog can alert mist nodes to redirecting
    part of future data to other fog nodes with time-driven sensors. In IoT scenarios
    with event-based sensors, an overloaded fog node can temporarily redirect data
    to another fog node. 5) Redundancy Redundancy is a way to ensure system continuity
    in the event of IoT node failures. Through redundancy, the system may find a new
    data path through other mist or fog nodes. A redundancy mechanism presumes that
    nodes always replicate data to other nodes whenever possible. Therefore, if a
    node loses connection or fails, the system can use another node to maintain the
    data flow. B. Data Fusion View This design view is responsible for implementing
    data filtering mechanisms in the mist and fog stages. It is also responsible for
    verifying and selecting data models used to make decisions. 1) Data Filtering
    Data reduction (filtering) mechanisms optimize the data flow between mist, fog,
    and cloud [22], [144]–[148]. However, data filtering must deal with mist and fog
    resource constraints regarding the processing and storage capacity for a smart
    service (like smart farming) or with different smart applications of this service
    (like smart irrigation, smart water management, or smart crop growth monitoring).
    Data filters are particularly relevant at the mist and fog stages, especially
    in long disconnections, given the need to store data temporarily until the connection
    returns. Filtered data occupies less memory space, thus avoiding memory overflow.
    Also, data can be transmitted faster when the connection returns, minimizing latency.
    Filtering mechanisms can achieve significant data reduction while dealing with
    memory and latency constraints. In general terms, IoT data transmitted in short
    intervals can contain identical or very close values and classified through a
    data fusion model. This approach divides the data filtering mechanisms into two
    main methods: (i) the data fusion filtering method (by data sampling or classification
    [148]) and (ii) the data compression filtering method: Data fusion filtering method:
    fusion-based data filtering can adopt different techniques, considering smart
    applications and the computational capacity of IoT stages. The mist node has not
    the same computational power as the fog node. In other words, different stages
    need to apply different data fusion techniques for various applications. Therefore,
    it is necessary to evaluate the fusion filtering techniques concerning the constraints
    of each IoT stage. Data fusion can reduce the amount of data stored by statistical
    sampling or by data classification techniques. However, supposing that the sampling
    or classification techniques are not precise or accurate, the filtered data may
    lose details. Consequently, the system can make worse decisions. Data compression
    filtering method: allows the compression of data content and reduces data to a
    smaller size, thus lowering the resource requirements for transmission and storage.
    The data compression advantage is maintaining its details when uncompressed because
    it restores the original content. However, uncompressing generates computational
    costs because data always returns to the original size, demanding more resources
    from that particular IoT stage. 2) Quality of Context (QOC) in Data Fusion Filtering
    The consequence of fusion-based filtering is data reduction, which requires the
    data quality to be maintained. Therefore, one needs to understand how much reduction
    can be performed without jeopardizing future analysis in a given context. Ensuring
    the quality of the context in data fusion means refraining from excessively filtering.
    Therefore, IoT system designers can use a mechanism to verify the filtered data’s
    quality based on the application context and decision models. 3) Analytic Models
    An IoT system needs to perform data gathering, monitoring, and analysis to extract
    information from a given context. Thus, based on environmental conditions or circumstances
    (context), the system makes decisions based on application rules (decision data
    models) for each specific smart application [54], [130], [149]. IoT systems can
    analyze data from individual IoT smart services (as smart farming) and store information
    from sensors of different smart applications (like smart irrigation, smart water
    management, or smart crop growth monitoring, for example). Thus, the system can
    analyze data from more than one smart application to enhance the decisions. As
    the decision accuracy is directly related to the data model, this mechanism needs
    to automatically select a decision model according to the specific smart application.
    C. Data Trust View The data trust view provides a data path without data syntactic
    and semantic integrity losses with meaningful information. This view deals with
    the features of data value, data veracity, entity veracity, data order, and data
    periodicity. 1) Data Value According to the smart application, the data value
    presumes that sensors must gather the necessary and relevant information for the
    IoT system. The lack of data or unnecessary excess of data can negatively impact
    future decisions. Therefore, the data value mechanism is responsible for checking
    the essential data to the IoT system based on the application and the data decision
    model. For example, in a smart farming service, the data value mechanism works
    as follows: a sensor collects soil moisture measures from three different depths
    in a field. Supposing that the crop is in an early growth stage, the plant root
    size only reaches the first depth. Therefore, the IoT system can safely discard
    soil moisture measurements from deeper depths because they do not convey meaningful
    information. 2) Data Veracity The data veracity mechanism must verify and discard
    outliers in a data set for a given context. It also perceives manipulated, corrupted,
    and fabricated data targeted by attacks or interference. 3) Entity Veracity The
    entity veracity is an extension of the data veracity concept to verify whether
    an entity, like a sensor or mist node, is transmitting unreliable data to fog.
    The veracity mechanism is responsible for identifies untrusted entities using
    a trust score. IoT designers can use algorithms to obtain this score [41], [51].
    They can form the entity trust score by identifying the number of untrusted packets
    and their origin entity. An untrusted entity transmits untrustworthy data caused
    by malicious attacks or internal hardware/software failures. Therefore, the IoT
    system needs to discard received data from that entity to ensure the data trustworthiness.
    4) Periodicity Data gathering frequency directly impacts the network traffic between
    the IoT stages and the accuracy of system decisions. The shorter the gathering
    interval, the greater the number of collected data and perceived details. Some
    IoT systems have time-driven sensors gathering data by a fixed time interval.
    It is essential to find the ideal time interval for data gathering to obtain relevant
    decisions according to the smart application [134]. 5) Data Ordering After a network
    disconnection between the fog and the cloud, the fog nodes can send past and present
    data not ordered. Because of it, the IoT system needs to put data in order. An
    IoT application can analyze a data time series to make a decision. Sometimes the
    data order matters to guarantee trustworthy choices. Therefore, maintaining the
    chronological data order impacts the IoT system data trustworthiness. D. Data
    Processing View A fog-based IoT system needs to execute instructions and handle
    the massive data transmission in batch, in real-time, or near real-time speed.
    The lambda architecture addresses the data volume and processing in real-time
    and batch [150]. However, this architecture works for high-performance systems.
    The IoT system designers can reuse concepts from this architecture and apply them
    to fog computing standards. 1) Data Volume A massive data volume requires an indispensable
    concern with the system’s scalability. The IoT system must calculate and evaluate
    how much data each node can store and analyze, considering its hardware resource
    constraints. A node that reaches its hardware limits may use a load balancing
    mechanism to maintain the data flow under normal operating circumstances. 2) Data
    Transmission Velocity IoT latency-sensitive systems require real-time decisions,
    so mist/fog needs to analyze data in real-time. Data transfer delays may cause
    unexpected or delayed decisions. Consequently, the transmission velocity impacts
    data trustworthiness. Developers of a mist-fog-based IoT system need to design
    the IoT stages considering the communication protocols, the data flow volume,
    and hardware constraints used for each mist/fog node to increase the data transfer
    velocity. 3) Data Processing Velocity The IoT system developers need to consider
    batch, near real-time, and real-time data processing techniques for different
    smart applications to ensure desirable speed performance. 4) Auto Power On/Off
    The scope of the data processing view also deals with the execution of data gathering
    by sensors. The auto power-off mechanism works for IoT systems based on time-driven
    sensors (i.e., not event-driven sensors). This mechanism turns sensors off to
    consume less energy. It only turns the sensors on again during the next data gathering
    period. This mechanism is feasible in many fog-based IoT systems, such as in the
    SWAMP project scenario [6], that sensors gather data periodically in 10-minute
    intervals. However, supposing that the gathering time interval is too short, IoT
    designers need to conduct a performance evaluation to verify the impact of energy
    consumption before deploying it. E. Data Heterogeneity View The heterogeneity
    view has mechanisms that deal with different communication protocols, data types,
    and data formats for various smart applications. 1) Device Technology In a scenario
    with billions of sensors from different hardware and software vendors, it is expected
    that the sensors use other measurement units and scales for the same type of data.
    For example, temperature sensors may gather data in various scales such as Celsius,
    Fahrenheit, or Kelvin. Therefore, this mechanism proposes to homogenize different
    data scales. 2) Communication Technology Homogeneity There are several communication
    protocols, and each one better meets the demands of specific environments. Supposing
    that a fog node receives packets from different protocols, such as LoRa, Sigfox,
    and Zigbee, the fog node needs to understand the protocol formats and extract
    data from packet payloads. The communication technology homogeneity mechanism
    interprets message patterns for different protocols. This mechanism can also convert
    several protocol messages into only one type of protocol message format. 3) Data
    Type The IoT system deals with different data types to make a decision. Smart
    healthcare data from a hospital, for example, may contain text, audio, video,
    and image. IoT system designers need to consider all data types, integrating it
    with the scale conversion mechanism, whether this mechanism did not previously
    deploy in the thing stage. 4) Data Format In the IoT stages, it is necessary to
    deal with different data types and formats. For example, in smart city applications,
    images may have other formats such as JPEG, PNG, or BMP. Data values may also
    have different formats such as binary, octal, hexadecimal, or decimal. This mechanism
    needs to use a well-known technique to homogenize the data formats into just one,
    enabling the IoT stages to analyze it. 5) Data Application Integration A fog-based
    IoT system handles many smart applications that belong to the same smart service.
    A smart farming service, for example, can support different smart applications,
    such as precision irrigation, crop stock management, or pest control. Considering
    that data gathering and decisions for different smart applications influence the
    whole system environment, this mechanism needs to combine data between different
    smart applications of the same smart service. Additionally, it needs to adequately
    analyze data by selecting and merging different data analytics models. 6) Integration
    of Smart Everything A complex and robust smart city environment includes smart
    homes, smart healthcare, and smart mobility. In this case, the system needs to
    manage and integrate different smart services to interconnect the entire system.
    Therefore, we suggest a mechanism that allows the system to make decisions based
    on integrated data analysis using the data knowledge of all IoT smart services.
    In a hypothetical smart city system, an IoT home service detects a home accident.
    The home service transmits this information to a smart healthcare service that
    requests a smart mobility service to check the city’s best route and send an ambulance.
    Therefore, in this case, the heterogeneity view is responsible for integrating
    all system services by a mechanism called the integration of smart everything.
    Section VII.D describes the proposal for the operation of this mechanism. F. Data
    Security View Security is essential for maintaining data trustworthiness in an
    IoT system. A fog-based IoT system uses data encrypting for every IoT stage to
    ensure data confidentiality and integrity. There are various data encryption and
    decryption algorithms that demand specific execution time and computational resources.
    The decision of the security policy needs to consider hardware constraints inherent
    to each IoT stage. SECTION VII. Framework Data Flow In Section VI, we presented
    the TW-IoT framework, according to design views of data resilience, data security,
    data heterogeneity, data trust, data processing, and data fusion. The TW-IoT provides
    methods and mechanisms that satisfy data trustworthiness requirements, ensuring
    data flow continuity for mist and fog-based IoT systems. In this Section, we exemplify
    the TW-IoT framework data flow for our IoT stages. Our framework allows developers
    to choose the mechanisms to compose the data flow for each IoT stage. A. Thing
    Data Flow We designed a data flow for a microcontroller with sensors and actuators
    in the thing stage (Fig. 4). For the sensor’s data flow, a developer chooses to
    combine the framework mechanisms differently, using optional auto power on/off
    and data conversion mechanisms. In contrast, the packet encryption mechanism is
    obligatory for this data flow. Regarding actuators, the microcontroller receives
    a packet(s) and only needs to decrypt the packet payload to execute the system
    decision. FIGURE 4. Thing data flow. Show All The thing stage can use mechanisms
    to turn the radio on/off, convert the scale value, and calibrate the collected
    data. The auto power on/off mechanisms save the device battery, and calibration
    is responsible for converting the collected data in meaningful information into
    the same scale values. The framework also allows data encryption deployment to
    encapsulate data into packets and transmit them to the mist. Depending on the
    data transmission technology, the packets are in LoRa, Sigfox, or Zigbee format.
    B. Mist Data Flow The mist stage uses mechanisms to deal with communication technology
    heterogeneity, data flow persistence, data encryption and decryption, data homogeneity,
    data value and veracity, data analytics, and data filtering techniques (Fig. 5).
    FIGURE 5. Mist data flow. Show All The packets that arrive in the mist have different
    message formats, such as LoRa, Sigfox, or Zigbee format. Then, in the mist stage,
    the communication technology homogeneity mechanism is responsible for identifying
    the packet format and convert it into a single format. After handling packet heterogeneity,
    mist uses the data flow persistence mechanism to store data, avoiding data loss
    even if the fog stage is disconnected. A mist node can send packets to other mist
    nodes to maintain the data redundancy, avoiding data loss if a mist node fails.
    Supposing the mist hardware resources (CPU and memory) are close to reaching the
    capacity limit, mist redirects part of the stored packets to another mist node.
    When the IoT system is in normal operating conditions with an active connection
    between mist and fog, the mist node sends packets to fog by the data flow (A).
    When the fog connection is not active, the mist can choose two other paths, the
    first path (B) can compress data, and the second path (C) can analyze and filter
    data. Being the choice of data flows (B or C) a design option. Assuming the data
    flow follows path B (Fig. 5), the mist filter mechanism compresses the packet
    content, generating a file as output. Then, the mist awaits the fog connection
    returns to sends the file. In this case, the mist does not need to decrypt the
    data, making the data flow more secure against attacks. In case of interception,
    the file only has compressed encrypted packets. However, when a fog node receives
    this file, it needs to uncompressing the data, causing an additional computational
    cost to the fog stage. Assuming the data flow follows path C, the IoT system chooses
    to follow through the data filter, the data analysis, or both mechanisms but first
    following by packet payload decryption. Whether the system is handling LoRa packets,
    it uses LoRaWAN Network Server as ChirpStack [151] to decrypt each packet payload.
    After decryption, the IoT system converts data according to the data type and
    format. It checks the data’s veracity and value and can follow two paths: data
    analysis or data filtering. In data analysis, mist uses an analytic data model
    to make a decision. Data filtering occurs through two approaches (i) data compression
    and (ii) data fusion. Additionally, data fusion can use redundant data filtering
    based on statistical sampling or data characteristics. The choice of data filtering
    approaches and techniques is a design option. In our data path, the mist analyzes
    the data and sends decisions to actuators until the fog connection returns. The
    mist also filters data during a disconnection. If the connection returns, the
    system encrypts the filtered data and sends it to fog. Consequently, when new
    packets arrive at the mist, the older packets do not delay the mist node to send
    new packets to fog. Then, the system data flow continues to operate uninterruptedly.
    C. Fog Data Flow The mist (Fig. 5) sends filtered data or raw data to fog (Fig.
    6). Supposing the fog receives raw data from the mist. In that case, fog needs
    to handle this raw data by mechanisms like data homogeneity, data value, and data
    veracity. Consequently, the fog stage must have the same mechanisms deployed in
    the mist stage. FIGURE 6. Fog data flow. Show All The mist stage transfers packets
    with raw data or filtered data to the fog stage. When the packets contain raw
    data, the fog needs to filter and handle data similarly to the mist, but with
    some differences, passing by more mechanisms through the data path. In the data
    flow persistence mechanism, a fog node sends the data to other fog nodes to deal
    with redundancy and load balancing. Also, the fog node checks its cloud connection
    and the cloud transmission delay. Supposing the IoT system tolerates the cloud
    data transfer delay and that the communication channel between fog and cloud is
    active, the fog node transmits the data directly to the cloud. However, this delay
    is not acceptable for many IoT systems. In various smart applications, the IoT
    system must analyze data in real-time. In these situations, the fog node needs
    to analyze and filter data instead of the cloud. Upon receiving data, the fog
    node decrypts the packet payload, which can follow alternative paths: (i) if a
    packet contains filtered data, the fog node process it to make a decision, but
    (ii) if fog receives raw data, the flow passes through the data homogeneity step,
    i.e., through value mechanism (Section VI.C.1) and veracity mechanism (Section
    VI.C.2), and later on through the entity veracity mechanism (Fig. 6). The entity
    veracity mechanism (Section VI.C.3) checks the entity ID, battery level, packet
    latency, outliers, and possible manipulated data to estimate if the packet comes
    from a trusted or untrusted entity. Assuming the fog node detects an untrusted
    packet, the fog node discards the packet. It can also discard all packets from
    that entity in the future. However, if the entity is trusted, fog stores the data.
    After these steps, the fog node can use the data prediction mechanism to fill
    missing data in times series if necessary. The data flow takes two simultaneous
    paths in a row: (i) via data filtering, sending filtered data over the cloud,
    and (ii) via data analysis mechanism, where fog chooses an analytic model to analyze
    data and make decisions. Finally, the fog sends decisions to actuators. D. Cloud
    Data Flow Cloud (Fig. 7) decrypts the packet’s payload to verify whether the fog
    filtered the data. If data is not filtered, the cloud follows data homogeneity,
    value, veracity, and prediction steps. Also, the cloud selects application analytic
    models before the data analysis. After processing the data analysis mechanism,
    the cloud sends data and decisions to the user IoT application, the system actuators,
    and the integration of smart everything service (Fig. 7), responsible for transmitting
    relevant data and decisions between services in different smart services (Fig.
    8). FIGURE 7. Cloud data flow. Show All FIGURE 8. Cloud service integration data
    flow. Show All The cloud data flow includes an integration service for interconnecting
    different smart services, like a smart home, smart hospital (health care), and
    a smart mobility service (Fig. 8). In general, each service includes different
    smart applications. A smart farming service, for example, covers precision irrigation
    and pest control applications but not monitoring patient heartbeat, which is an
    application for smart hospital service. In Section VI.E.6, we mentioned the integration
    of the smart everything mechanism (Fig. 8). We discussed that a smart home service
    reports a domestic accident to a smart hospital service. Through a smart mobility
    service, the hospital verifies the best route for an ambulance to rescue the person
    who suffered the accident. This integration mechanism contains a module called
    Link Module (Fig. 8), which receives data from every smart service in the system
    and only sends part of it to virtual sensors. It means that a smart service only
    receives data related to its smart applications through the virtual sensor. The
    integration flow works in 3 steps: (i) cloud sends each smart service’s data (and
    decisions) in the IoT system to the Link Module, (ii) this module sends only relevant
    data for each virtual sensor, and (iii) the virtual sensors send data to the smart
    services. Therefore, each smart service receives data from other smart services
    through a virtual sensor (Fig. 8). Virtual sensors may send non-relevant data
    to a smart service. However, the TW-IoT framework can use the data value step
    to verify the data relevance for a specific smart service (Fig. 3 and Fig. 7).
    SECTION VIII. Trade-Offs Between Mist and Fog Data Flow The TW-IoT framework mechanisms
    provide data trustworthiness in a mist-fog-based IoT system. Still, the IoT designers
    need to consider some trade-offs through the data flow in different IoT stages.
    The mist and fog data flow needs to consider, for example, computing costs for
    mechanisms related to data security and data filtering techniques. A. Data Security
    and Data Filtering in Mist Stage Supposing the connection between mist and fog
    fails, the mist can follow two distinct flows (B or C): decrypt the packet payload
    and compress the encrypted packet content (Fig. 5). Filtering by data fusion requires
    decrypting data in the mist. However, decryption makes data more susceptible to
    malicious attackers. An attacker can capture the decrypted data from the mist
    or discover the method used to encrypt data again in the mist. However, by using
    data filtering by data compression, the mist keeps the data encrypted without
    additional security service and does not expose data to external attackers. It
    has a cost for unpacking data in the next IoT stage and possibly a cost for data
    traffic latency between mist and fog. B. Advantages and Disadvantages of Data
    Filtering Mechanisms There are advantages and disadvantages to different data
    filtering mechanisms. The mist and fog filtering methods are (i) fusion filtering
    by statistical sampling, which deals with redundant data, (ii) fusion filtering
    by data classification, and (iii) filtering by data compression. The filtering
    redundant data method reduces the data to a sample of data by statistical sampling.
    It means that IoT stages can reduce the amount of data, storage costs, and massive
    data traffic. However, it may cause data details loss and induces the IoT system
    to non-accurate decisions. Filtering by data classification can categorize data
    by machine learning techniques and only transmits each category number to the
    next IoT stage [148]. It ensures a more significant reduction in the amount of
    data than the filtering redundant data method. The categories found by the classification
    should be strictly faithful to the analytic data model for the analysis. This
    method may lead to wrong decisions. Through this filtering, the loss of details
    is even more significant. In data compression filtering, the original data remains
    intact, preventing possible equivocate system decisions. However, there is a higher
    cost for storing data, a network delay cost by sending the compressed file, and
    a computational cost to uncompressing the data in the next IoT stage. C. Data
    Analysis and CPU Usage in the Mist Stage Mist devices have low computational power,
    but data analysis demands high CPU resources depending on the algorithm or data
    model. Performing data analysis in the mist stage is a design option. However,
    a long disconnection between the mist and fog stages can cause the system to wait
    a long time without analyzing and making decisions. It compromises the system’s
    trustworthiness. It is essential to emphasize that data analysis in the mist must
    happen during a network disconnection, but using light algorithms for demanding
    less processing resources. However, using light algorithms for data analysis may
    generate untrusted decisions. The IoT designer must balance the data analysis
    complexity power and the CPU usage, maintaining the decisions’ accuracy. D. Data
    Prediction and CPU Usage in Fog Stage The data prediction techniques generally
    use regression algorithms that demand high CPU usage. Therefore, the choice of
    prediction technique should consider the fog nodes’ CPU processing power. E. Storage
    Time in IoT Stages The IoT system deals with continuous and uninterrupted data
    flow from billions of sensors. However, the mist and fog nodes have constrained
    memory capacity. The mist and fog nodes need to keep the data (received by sensors)
    because they need to analyze data and maintain the data flow persistence. The
    TW-IoT framework allows the IoT stages to store 3 data categories: raw data, refined
    data, and filtered data. According to the application, the IoT designers need
    to decide the memory usage percentage for each of these data categories and how
    long they remain stored in memory. They need to resolve it without compromising
    the data trustworthiness and future decisions. SECTION IX. Challenges This section
    presents some challenges of data trustworthiness in a fog-based IoT system, identified
    throughout this paper. A. Connection Redundancy The IoT may use different communication
    technologies with diverse packet formats and specificities. Some systems deploy
    IoT nodes with two or more communication protocols [92]. A monitoring mechanism
    can prevent disconnections and low network performance by automatically switching
    the IoT node connection technology. In this way, each IoT node receives and transmits
    data over more than one communication protocol. A node can select a communication
    protocol with better network performance to transfer data. It is a challenge to
    deploy, in a real scenario, billions of sensors with connection redundancy mechanisms
    without increase the hardware costs. B. Data Filter by Data Knowledge Fog data
    reduction (filtering) aims to reduce the amount of data stored and transmitted
    by the mist and fog stages. These techniques can discard redundant data or data
    with no relevant variations [48], [147]. However, the fog needs to consider the
    analytic data model and the smart application for data filtering because the filtered
    data will represent the original data and generate trusted decisions [147]. A
    relevant challenge is to create a mechanism that precisely and accurately filters
    data without previously knowing the analytic data model or application context.
    In other words, the challenge is to design a context-independent data filtering
    mechanism only based on the data. C. Agile Fault-Recovery A fog-based latency-sensitive
    IoT system needs to execute fault recovery near real-time since the fog must provide
    data analysis in real-time. The velocity of fault recovery may impact system availability
    (Equation 1). It is challenging to offer mechanisms that recover the system of
    failures in real-time. Agility in fault recovery is a challenge. D. Automatic
    Registration of Devices Secure IoT platforms require registering devices (including
    sensors) on the mist/fog servers. It allows the IoT system to recognize devices
    as trust devices and enhance the system trustworthiness. In a real scenario, the
    IoT system has to register billions of devices. In an ideal scenario, a developer
    simply needs to connect new sensors to the network, and the system automatically
    recognizes them. However, new devices without a previous system notification may
    bring security risks since they can attack the IoT system. Therefore, it is challenging
    to create secure mechanisms that automatically register new devices to the fog
    node. E. Real-Time Analysis and Mist/Fog Resource Constrains Ensuring data trustworthiness
    in a fog-based IoT system means deploying mist and fog nodes responsible for mechanisms
    that support heterogeneity, resilience, data trust, data filtering, security,
    and data analysis for billions of sensors. However, these features in the mist/fog
    nodes need to deal with constrained memory capacity and CPU power. It is challenging
    to find a balance between these mechanisms’ computational costs and the mist/fog
    resource constraints. Another challenge is maintaining these mechanisms without
    changing the data analysis velocity, especially real-time data analysis. SECTION
    X. Conclusion and Future Work Trustworthiness (dependability) handles requirements
    and characteristics that provide system availability, reliability, scalability,
    maintainability, heterogeneity, data quality, hardware resources, security, response
    time agility, and network resilience to computer systems. This survey presents
    state-of-the-art concepts about trustworthiness in fog-based IoT systems, summarizing
    and discussing literature. We identified data trustworthiness gaps in dealing
    with the fog computing data flow. For that reason, we proposed the TW-IoT framework
    to ensure data trustworthiness for mist-fog-based IoT systems. The TW-IoT framework
    deploys mechanisms for a mist-fog-based IoT system to ensure trusted decisions
    and keep the data flow’s uninterrupted continuity through all IoT system stages.
    Also, we identify data trustworthiness trade-offs and challenges for fog-based
    IoT systems. As future work, we will evaluate the impact of each design view and
    mechanism of the TW-IoT framework for a real mist-fog-based IoT system, using
    pilots of the SWAMP project [6]. We intend to evaluate CPU and RAM usage for each
    IoT stage using our framework mechanisms. We aim to assess the data filtering
    mechanism combined with the data resilience view through the packet loss rate
    and network delay between IoT stages (thing, mist, fog, and cloud) in situations
    of network availability and unavailability. We plan to assess devices’ energy
    consumption and end-to-end network delay, varying distinct data formats for various
    packet technologies types (using synthetic and real data) to evaluate the data
    veracity, value, and homogeneity mechanisms. We will also analyze the data processing
    view changing the communication channel frequency, channel error, number of sensors,
    and the packet transmission rate. Finally, we will evaluate the security view
    measuring energy, processing, and memory usage of different security algorithms,
    combining them with mechanisms of data resilience, data trust, and heterogeneity
    views. Authors Figures References Citations Keywords Metrics More Like This A
    Survey on Security and Privacy Issues in Edge-Computing-Assisted Internet of Things
    IEEE Internet of Things Journal Published: 2021 Security in the Internet of Things
    Supported by Mobile Edge Computing IEEE Communications Magazine Published: 2018
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/9312710/09380363.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on Trustworthiness for the Internet of Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s20010084
  analysis: '>'
  authors:
  - Ivan Zyrianoff
  - Alexandre Heideker
  - Dener Silva
  - João Henrique Kleinschmidt
  - Juha-Pekka Soininen
  - Tullio Salmon Cinotti
  - Carlos Kamienski
  citation_count: 38
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nArchitecting and Deploying IoT Smart Applications:\n\
    A Performance–Oriented Approach\nIvan Zyrianoﬀ 1, Alexandre Heideker 1\n, Dener\
    \ Silva 1, João Kleinschmidt 1,\nJuha-Pekka Soininen 2\n, Tullio Salmon Cinotti\
    \ 3\nand Carlos Kamienski 1,*\n1\nFederal University of the ABC, Center of Mathematics,\
    \ Computing and Cognition, Santo\nAndré 09210-580, Brazil; ivan.dimitry@ufabc.edu.br\
    \ (I.Z.); alexandre.heideker@ufabc.edu.br (A.H.);\ndener.silva@ufabc.edu.br (D.S.);\
    \ joao.kleinschmidt@ufabc.edu.br (J.K.)\n2\nVTT Technical Research Centre of Finland,\
    \ FI-90571 Oulu, Finland; Juha-Pekka.Soininen@vtt.ﬁ\n3\nAdvanced Research Center\
    \ on Electronic Systems “Ercole De Castro” (ARCES), University of Bologna,\n40123\
    \ Bologna, Italy; tullio.salmoncinotti@unibo.it\n*\nCorrespondence: cak@ufabc.edu.br;\
    \ Tel.: +55-11-4996-0179\nReceived: 14 November 2019; Accepted: 18 December 2019;\
    \ Published: 21 December 2019\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\
    \x04\x05\x06\a\nAbstract: Layered internet of things (IoT) architectures have\
    \ been proposed over the last years as they\nfacilitate understanding the roles\
    \ of diﬀerent networking, hardware, and software components of\nsmart applications.\
    \ These are inherently distributed, spanning from devices installed in the ﬁeld\
    \ up\nto a cloud datacenter and further to a user smartphone, passing by intermediary\
    \ stages at diﬀerent\nlevels of fog computing infrastructure. However, IoT architectures\
    \ provide almost no hints on where\ncomponents should be deployed. IoT Software\
    \ Platforms derived from the layered architectures\nare expected to adapt to scenarios\
    \ with diﬀerent characteristics, requirements, and constraints from\nstakeholders\
    \ and applications. In such a complex environment, a one-size-ﬁts-all approach\
    \ does\nnot adapt well to varying demands and may hinder the adoption of IoT Smart\
    \ Applications. In this\npaper, we propose a 5-layer IoT Architecture and a 5-stage\
    \ IoT Computing Continuum, as well as\nprovide insights on the mapping of software\
    \ components of the former into physical locations of the\nlatter. Also, we conduct\
    \ a performance analysis study with six conﬁgurations where components are\ndeployed\
    \ into diﬀerent stages. Our results show that diﬀerent deployment conﬁgurations\
    \ of layered\ncomponents into staged locations generate bottlenecks that aﬀect\
    \ system performance and scalability.\nBased on that, policies for static deployment\
    \ and dynamic migration of layered components into\nstaged locations can be identiﬁed.\n\
    Keywords: internet of things (IoT); IoT architecture; IoT platform; fog computing;\
    \ LoRaWAN; low\npower wide area network (LPWAN); FIWARE; smart agriculture; smart\
    \ cities\n1. Introduction\nThe internet of things (IoT) has been creating a whole\
    \ new demand for system architectures,\ninfrastructure and platform deployment\
    \ approaches, in order to fulﬁll the requirements of a new breed\nof highly distributed\
    \ smart applications. The number of devices connected to the Internet has been\n\
    increasing steadily [1,2], so smart applications will typically have to deal with\
    \ thousands or even\nmillions of devices. Customized conﬁgurations, automated\
    \ reconﬁgurability, and scalability are critical\nchallenges in any successful\
    \ deployment of IoT smart applications [3], in areas such as agriculture [4,5],\n\
    cities [6,7], healthcare [8] and industry [9].\nLayered architectures are critical\
    \ structures in computer networks and distributed systems as\nthey facilitate\
    \ the understanding of roles, locations, and levels of abstraction of diﬀerent\
    \ networking,\nhardware, and software components. Diﬀerent IoT architectures have\
    \ been proposed for facilitating\nSensors 2020, 20, 84; doi:10.3390/s20010084\n\
    www.mdpi.com/journal/sensors\nSensors 2020, 20, 84\n2 of 24\nthe understanding\
    \ and design of smart applications, with three [10], four [11,12], or ﬁve layers\
    \ [12–14].\nThe 3-layer architecture—application, network, and perception layers—was\
    \ soon replaced by a 5-layer\narchitecture by adding two new layers—middleware\
    \ and business—considered thus more adequate\nfor the rapid evolution of IoT systems.\
    \ Also, intermediate 4-layer architectures have been proposed,\nadding, for example,\
    \ a security and management layer. The reason behind the growing interest in IoT\n\
    architecture is that a complete solution for IoT smart applications requires diﬀerent\
    \ software, hardware,\nand communication technologies working together and integrating\
    \ a variety of platforms, components,\nservices, and applications. IoT smart applications\
    \ require careful consideration and new concepts to be\ndeveloped as they are\
    \ inherently distributed, spanning from sensors and actuators in the ﬁeld up to\
    \ a\ncloud datacenter and further to a user smartphone, passing by intermediary\
    \ stages at diﬀerent levels\nof fog computing infrastructure.\nIoT architectures\
    \ provide a functional view of software, hardware, and communication components\n\
    placed into layers for facilitating system design and development. However, they\
    \ do not provide\nindications on where these components should be deployed. As\
    \ the end-to-end data ﬂow occurring in\na smart application includes sensors deployed\
    \ in the ﬁeld whose data usually are processed in the\ncloud, the deployment of\
    \ architectural components is a complex task that may vary according to the\n\
    characteristics, requirements, and constraints of applications and stakeholders.\
    \ In such a complex\nenvironment, a one-size-ﬁts-all approach does not adapt well\
    \ to varying demands and may hinder the\nadoption of IoT smart applications. On\
    \ the other hand, a clean and layered architecture deﬁnition\nmight open the way\
    \ towards engineering processes that enable ﬂexible reallocation of data and services\n\
    to the diﬀerent deployment stages, for increased performance and scalability [15].\n\
    In this paper, we introduce a new IoT architecture for smart applications called\
    \ IoTecture,\ncomprising ﬁve layers, namely L1-Device, L2-Transport, L3-Data,\
    \ L4-Model, and L5-Service.\nOur experience with deploying an IoT platform derived\
    \ from the implementation of this architecture in\nfour pilots with diﬀerent characteristics\
    \ in three countries [4] taught us that there is no one-size-ﬁts-all\napproach\
    \ for this process. The need for our IoTecture is due to the acknowledgment that\
    \ the traditional\n5-layer architecture is not prone to having an active role\
    \ in the deployment of new applications since\nthe business, application, and\
    \ middleware layers are too generic with broader scopes.\nTherefore, together\
    \ with IoTecture, we developed the concept of an IoT computing continuum,\ncalled\
    \ IoTinuum, to provide a clear view of the diﬀerent deployment locations for architectural\n\
    components, divided up into ﬁve stages, namely S1-Thing, S2-Mist, S3-Fog, S4-Cloud,\
    \ and S5-Terminal.\nBy representing architecture layers and deployment stages\
    \ separately and mapping one into the other,\nwe obtain a ﬂexible mechanism for\
    \ reasoning on functionality and placement, thus allowing the\ndeployment of IoT\
    \ smart applications on diﬀerent scenarios. We advocate that IoTecture is not\
    \ just yet\nanother passive IoT architecture since it is actively used for the\
    \ deployment of software components\ninto distributed locations of IoTinuum.\n\
    Diﬀerent deployment conﬁgurations of layered IoTecture components mapped into\
    \ staged\nIoTinuum places generate diﬀerent hardware and software bottlenecks\
    \ represented by the use of\nsystem resources. In order to facilitate the understanding\
    \ of the tradeoﬀs involved in this mapping,\nwe conducted a performance analysis\
    \ study with six conﬁgurations of a FIWARE-based IoT platform,\nvarying the smart\
    \ application (agriculture and city), the low power wide area network (LPWAN)\n\
    technology [16] such as LoRaWAN [17], the workload and the use of fog computing\
    \ infrastructure\n(no fog, lightweight fog or heavyweight fog). Our results show\
    \ that diﬀerent deployment conﬁgurations\nof layered components into staged locations\
    \ generate diﬀerent hardware and software bottlenecks\nrepresented by the use\
    \ of system resources. The physical location where a software component is\nexecuted\
    \ has a signiﬁcant impact on the performance and scalability and brings diﬀerent\
    \ tradeoﬀs,\nas revealed by our performance analysis results. The concepts and\
    \ processes involved in architecting\nand deploying smart applications, together\
    \ with the practical performance analysis results, increase\nthe understanding\
    \ and awareness involved in the development and operation of a new breed of\n\
    IoT-enabled systems.\nSensors 2020, 20, 84\n3 of 24\nThe contributions of this\
    \ paper are threefold. Firstly, the proposal of IoTecture and IoT continuum\n\
    and the mapping of one into the other for facilitating the deployment of IoT smart\
    \ applications.\nSecondly, the qualitative and quantitative evaluation of diﬀerent\
    \ technologies according to the\nIoTinuum approach, analyzing tradeoﬀs, and highlighting\
    \ the suitability of each scenario. Thirdly, we\nincreased the understanding of\
    \ how diﬀerent components of FIWARE and LoRaWAN behave under\nheavy workload,\
    \ as our experiments indicate that some FIWARE components deal poorly with high\n\
    throughput applications. This problem has not been identiﬁed before in the literature\
    \ because most\nstudies with available results do not stress the system enough\
    \ to detect system bottlenecks.\nIn the remainder of this paper, Section 2 introduces\
    \ the background and related work, and\nSection 3 presents IoTecture and IoTinuum.\
    \ Section 4 details the research design and methods of our\nperformance analysis\
    \ study, whose results are presented in Section 5 and discussed in Section 6.\
    \ Finally,\nSection 7 draws some conclusions and presents future work.\n2. Background\
    \ and Related Work\n2.1. IoT Architectures and Platforms\nLayered architectures\
    \ are critical structures in computer networks and distributed systems as\nthey\
    \ facilitate the understanding of roles, locations, and levels of abstraction\
    \ of diﬀerent networking,\nhardware, and software components. In order to separate\
    \ concerns, it is pertinent to emphasize that\nfrom an IoT architecture, diﬀerent\
    \ application software architectures can be derived as they deﬁne the\nhigh-level\
    \ structure of a system comprising software components and relations [18]. However,\
    \ here\nwe do not elaborate on application software architectures.\nThe initial\
    \ proposal of a generic IoT architecture had three layers, namely application,\
    \ network,\nand perception [10]. The application layer processes large amounts\
    \ of data using computational\nintelligence techniques and interfaces with users.\
    \ The network (also called transport) layer deals with\ncommunication and networking\
    \ technologies to transfer data from sensors to the place of processing\nand send\
    \ commands back to actuators. The perception (also called sensing) layer collects\
    \ the data from\nsensors. However, soon, a 5-layer architecture was proposed to\
    \ deal with the rapid development of\nIoT solutions at the time, adding two more\
    \ layers: middleware and business [12–14]. The middleware\n(also called processing\
    \ or service) layer deals with data and databases, as well as service functions,\
    \ such\nas discovery, composition, and management. The business layer is a loosely\
    \ deﬁned one that aggregates\ngeneral functions to deal with an entire IoT system,\
    \ including business models and security/privacy.\nDiﬀerent extensions of the\
    \ 3-layer IoT architecture added only one new layer, a middleware/service\nlayer\
    \ [6,19], and a security and management layer [20]. As for the latter, here we\
    \ consider that\northogonal layers more adequately address these non-functional\
    \ requirements.\nNowadays, most eﬀort in developing and deploying new IoT smart\
    \ applications is aimed at\nimproving distributed data management in order to\
    \ make data promptly available for the processing\nof application-speciﬁc models,\
    \ both physical and data-driven ones. Also, these proposals follow a\ncommon approach\
    \ in the past where layered IoT architectures provided an initial functional view\
    \ of\nthe entire solution, and after some iterations in the development process,\
    \ they gave way to software\narchitectures and artifacts.\nIt is imperative the\
    \ need to implement and deploy highly distributed IoT applications that span\n\
    from the things, going through diﬀerent processing/storage/transmission stages,\
    \ up to the cloud, and\nfurther to the user terminal. In other words, we advocate\
    \ that IoT architectures must have an active\nrole in the deployment of new applications.\
    \ An option is to embed deployment locations within\nthe architecture, explicitly\
    \ recognizing the existence of edge processing [21]. However, we consider\nthat\
    \ a new concept is needed to separate the concerns of layered software components\
    \ from staged\ndeployment locations. In the 5-layer IoT architecture, the business,\
    \ application, and middleware layers\nare too generic with broader scopes, which\
    \ do not facilitate the activity of system deployment.\nSensors 2020, 20, 84\n\
    4 of 24\nAn IoT platform—also known as IoT software platform [22] or IoT middleware\
    \ [19,23]—\nimplements an IoT architecture providing a variety of building blocks\
    \ to facilitate the development of\nan IoT smart application, such as device connectivity,\
    \ device management, data management, data\nanalytics, security, and visualization.\
    \ An IoT platform gathers data from IoT devices and enables\nthe development and\
    \ of smart applications that control, monitor, and manage these devices. It is\n\
    often composed of several middleware components, each of then focusing on a speciﬁc\
    \ feature in a\nparticular layer to provide an end-to-end platform involving data\
    \ generation, transmission, storage,\nand processing.\nPractitioners can rely\
    \ on diﬀerent IoT platforms available, both open-source and commercial\nsolutions\
    \ [11,19,24]. These platforms may use multiple protocols and standards or even\
    \ proprietary\nsolutions.\nThis plethora of platforms leads to interoperability\
    \ problems since developers must\nadapt their applications to each platform, using\
    \ speciﬁc API, information models, and protocols [25].\nThus, standard interfaces\
    \ are needed to fulﬁll this interoperability issue among IoT applications and\n\
    heterogeneous IoT platforms. Also, security requirements must be addressed, such\
    \ as authentication,\nauthorization and access control, and secure communication\
    \ [26,27].\nFIWARE [28] is an open-source IoT platform that has been attracting\
    \ widespread attention in the\nlast years, comprised of a series of generic enablers\
    \ (GEs) that provide diﬀerent services. A combination\nof GEs builds diﬀerent\
    \ applications that exchange data through a REST API based on OMA NGSI [29].\n\
    Entities and their attributes represent the key aspect of the FIWARE NGSI context\
    \ management\ninformation model.\nOrion is the main FIWARE GE, a publish/subscribe\
    \ context broker and an eﬃcient data distributor,\nproviding an interface where\
    \ producers publish entities that are further notiﬁed to consumers. Orion\nonly\
    \ stores the last entity version published so that it must work together with\
    \ other GEs to keep\nhistorical data. The IoT Agent GE translates sensor data\
    \ in diﬀerent formats to NGSI and publishes\nit in Orion. There are diﬀerent implementations\
    \ of the IoT Agent, where each one maps diﬀerent\nIoT communication protocols\
    \ and data models to NGSI. The standard FIWARE IoT Agent receives\nMQTT data from\
    \ the sensors formatted in the Ultralight 2.0 protocol [30]—a lightweight text-based\n\
    protocol aimed to constrained devices and communications where the bandwidth and\
    \ device memory\nmay be limited resources. Currently, the oﬃcial FIWARE IoT Agent\
    \ implementation that supports\nLoRaWAN communication is unstable. Therefore,\
    \ we developed our own version of IoT Agent capable\nof mapping LoRaWAN messages\
    \ in the NGSI format.\n2.2. LPWAN Technologies for IoT\nIn recent years, LPWAN\
    \ technologies have been developed to meet the needs of IoT. LPWAN\nprovides long\
    \ transmission ranges, low energy consumption and low bandwidth [16], which make\
    \ it\nan attractive technology for IoT applications that send a few dozens of\
    \ bytes every couple of minutes\nor hours, such as street lighting, pollution\
    \ monitoring and irrigation for agriculture–i.e., smart cities\nand smart agriculture\
    \ scenarios. LPWANs follow a star topology, where sensors send data directly\n\
    to a data hub called gateway, which has a stable energy source and Internet connection.\
    \ Three\nLPWAN technologies are leading the forefront of this ﬁeld: Narrowband\
    \ IoT (NB-IoT) [31], Sigfox [32]\nand LoRaWAN [33]. NB-IoT, developed by 3GPP,\
    \ uses a subset of the LTE standard that limits the\nbandwidth to 200kH, thus\
    \ using cellular base stations for communication with devices. Sigfox uses\nunlicensed\
    \ ISM bands to connect end-devices to base stations based on patented technologies.\n\
    LoRa operates in the sub-GHz ranges, such as 433 MHz and 868 MHz (Europe) and\
    \ 915 MHz\n(USA and Brazil) [17]. The physical layer is called Long Range (LoRa),\
    \ and the upper layers are\ncalled LoRaWAN. The latter is standardized by the\
    \ LoRa Alliance [33] and can reach distances of\nsome kilometers with a bandwidth\
    \ up to 50 Kbps and a typical payload of fewer than 100 bytes. The\nLoRaWAN architecture\
    \ comprises LoRa end-nodes (i.e., sensors and actuators) and LoRa gateways that\n\
    have an active IP connection and forwards LoRa packets to a centralized server.\
    \ The server is further\ndivided into network server (deals with network issues)\
    \ and application (App) server, dealing with\nSensors 2020, 20, 84\n5 of 24\n\
    diﬀerent applications. LoRaWAN deﬁnes an ALOHA-based media access control protocol\
    \ on top of\nLoRa communication, as well as providing security features such as\
    \ authentication and cryptography.\nThere are diﬀerent ways of implementing the\
    \ LoRaWAN architecture: (a) Open source software\nthat can be installed in a cloud\
    \ datacenter or fog according to the scenario, such as ChirpStack [34],\npreviously\
    \ called LoRa Server; (b) The Things Network (TTN), a crowdfunded online community\n\
    that implements a LoRaWAN server and makes them available as a service (some services\
    \ are not\nfree, though) [35]; (c) Proprietary solutions, such as Loriot [36];\
    \ (d) The development of a new\nimplementation that means in practice reinventing\
    \ the wheel.\n2.3. Fog and Mist Computing for IoT\nFog computing is a new approach\
    \ for dealing with the enormous amount of data generated by\nIoT smart applications\
    \ [37]. It addresses three key challenges: (a) decreasing latency for real-time\n\
    application; (b) reducing data traﬃc between devices and cloud, and; (c) providing\
    \ a load balancing\nalternative to soften the processing burden of the cloud.\
    \ The fog metaphor is similar to the cloud\none, but the former is closer to the\
    \ ground and the people than the latter [38]. The underlying fog\ninfrastructure\
    \ is a virtualized platform that provides computing, storage, and communication\
    \ services\nbetween the users and the cloud datacenter [39]. In other words, fog\
    \ is the distributed computing\ninfrastructure for IoT. Here we consider fog computing\
    \ and edge computing as interchangeable terms,\neven though minor diﬀerences might\
    \ exist [40].\nWhile the fog aims at reducing bandwidth usage, latency, and data\
    \ communication with the\ndatacenter, mist computing extends this concept further\
    \ in IoT-based systems, closer to the sensors\nand actuators [12]. Although there\
    \ is no consensus about the deﬁnition of mist, some common\nunderstanding can\
    \ be found, such as being located closer to the devices [21,41]. Mist can be considered\n\
    the lowest level of a hierarchical fog computing system.\nUsually, mist nodes\
    \ host communication facilities, such as a LoRaWAN gateway or a Wi-Fi\naccess\
    \ point. Additionally, they can also host light processing and temporary storage,\
    \ typically using\nARM processors, such as Raspberry Pi and similar. According\
    \ to the Internet Engineering Task Force\n(IETF), these devices belong to a category\
    \ of general-purpose constrained nodes, making the diﬀerence\nbetween sensing\
    \ devices based on microcontrollers [42]. The mist infrastructure may be composed\
    \ of\ndiﬀerent nodes working together to provide services to devices within the\
    \ same geographical area,\nwhich not necessarily are packed into the same box.\n\
    2.4. IoT Smart Applications\nThe IoT allows people and objects to be connected\
    \ at any time, from anywhere, using standard\nnetworks and protocols to access\
    \ innovative smart services. Sensors of diﬀerent natures in diﬀerent\nspaces coupled\
    \ with ubiquitous GPS-equipped smartphones, in addition to the resources available\
    \ in\ncore or edge datacenters, allow seamless automation of typical manual activities.\
    \ The use of a variety\nof combined technologies—such as IoT, cloud computing,\
    \ big data analytics (e.g., machine learning\ntechniques) and network softwarization-make\
    \ it possible to build a myriad of new smart applications\nto the beneﬁt of our\
    \ society.\nHere we use four IoT verticals as examples of smart applications,\
    \ namely smart cities, smart\nagriculture, smart healthcare, and smart industry.\
    \ Although other smart applications exist, these four\nones represent the majority\
    \ of currents eﬀorts where IoT has been applied in real cases [3]. Cities\nare\
    \ becoming smarter for citizens and municipal governments, as new and existing\
    \ technologies\nare increasingly used to the development of a substantial variety\
    \ of services and applications [6,7].\nIn farms, the use of technology to add\
    \ intelligence to agriculture still has a vast potential to generate\nsigniﬁcant\
    \ advances. Smart agriculture (or more broadly smart farming), depends on innovative\n\
    technologies to increase the productivity of crops and animal products, to make\
    \ eﬃcient use of precious\nresources like water, and to decrease the amount of\
    \ chemical substances used (e.g., medicines and\npesticides) [5]. Notably, we\
    \ have been involved in using IoT and machine learning solutions within the\n\
    Sensors 2020, 20, 84\n6 of 24\nSWAMP project, which develops IoT-based approaches\
    \ for smart water management for a precision\nirrigation application, and pilots\
    \ them in Italy, Spain, and Brazil [4]. Healthcare is an essential area for\n\
    introducing IoT, given its enormous potential to provide quality of life to the\
    \ society in applications\nsuch as elderly monitoring, chronic diseases, ﬁtness\
    \ programs, and remote treatment [8]. Finally,\nindustrial automation has been\
    \ experiencing a signiﬁcant change in the last years, which is due to the\nrecent\
    \ technological advances that allow more profound interconnection and improved\
    \ integration\nand production control [9].\nA critical concern in the development\
    \ of IoT smart applications is security [26,27,43].\nThe applications must deal\
    \ with data privacy, conﬁdentiality, integrity, authentication, and availability\n\
    of services. The four IoT verticals have similar security requirements to protect\
    \ the data. In healthcare,\nprivacy means the health records of the patients must\
    \ be appropriately secured, using adequate\nauthentication methods to avoid access\
    \ by non-authorized users, and secure communication for\nexchanged data [27].\
    \ The data integrity is also important since incorrect sensor measurements or\n\
    prescriptions can cause serious health problems to the patient. Most embedded\
    \ sensors and wearables\nused in healthcare have resource limitations, which makes\
    \ it challenging to use traditional security\nmechanisms, usually computationally\
    \ expensive. Since many IoT devices are limited in power,\nprocessing, and memory,\
    \ this is a challenge also for applications in smart cities, smart agriculture,\
    \ and\nsmart industry.\n2.5. Performance and Scalability of IoT Systems\nDiﬀerent\
    \ forecasts have been reporting the availability of billions of connected devices\
    \ in the\nnext years [1,2]. Since smart applications will typically have to deal\
    \ with thousands of devices-or\nconsiderably more-performance and scalability\
    \ concerns are key to any successful IoT deployment. Yet,\nmost current reported\
    \ experiences show: (a) small-scale pilots [7,44]; (b) simulation-based or analytical\n\
    results [21,45]; (c) measurement-based results with limited scope [19,46]; (d)\
    \ no quantitative results at\nall [2,3,5,8,9,11,12,16,24,37,47]. Also, diﬀerent\
    \ architectural and deployment choices for IoT systems\naﬀect scalability, and\
    \ real-time decision-making is possible in an environment composed of thousands\n\
    of sensors [4,48]. Therefore, understanding the tradeoﬀs involved in planning\
    \ and deploying diﬀerent\nsoftware components of a speciﬁc scenario on diﬀerent\
    \ location infrastructures-such as cloud, fog,\nor mist—requires careful consideration\
    \ of the performance and scalability of the solution.\nCruz et al. [19] proposed\
    \ qualitative and quantitative metrics and evaluated the performance\nof various\
    \ IoT platforms. Out of 11 platforms initially analyzed by the qualitative approach,\
    \ ﬁve\nwere selected for the performance analysis. However, since they adopted\
    \ a generic approach, the\nauthors did not go into the speciﬁcs of individual\
    \ platforms, and they did not evaluate diﬀerent\ndeployment infrastructures.\n\
    Martínez et al. [46] gave a detailed description of a FIWARE testbed architecture\
    \ conﬁgured for\nprecision agriculture, which diﬀers from our approach, mainly\
    \ because our focus is to test diﬀerent\nconﬁgurations considering our IoTecture\
    \ and IoTinuum. Besides, their test application connects directly\nto Orion with\
    \ NGSI JSON, while we used an IoT Agent with an IoT sensor simulator that generates\n\
    synthetic data.\nThis paper diﬀers from previous work showing a performance analysis\
    \ study of six deployment\nconﬁgurations of FIWARE and LoRaWAN/LPWAN for smart\
    \ agriculture and smart city, involving\ndiﬀerent placement strategies of components\
    \ over fog and cloud infrastructures. It extends previous\npreliminary performance\
    \ results presented in [4] and [48], which focused on more speciﬁc scenarios of\n\
    smart irrigation.\n3. Architecting and Deploying IoT Smart Applications\nA complete\
    \ solution for IoT smart applications requires diﬀerent software, hardware, and\n\
    communication technologies working together and integrating a variety of platforms,\
    \ components,\nservices, and applications. These technologies play diﬀerent roles\
    \ and provide functions that operate in\nSensors 2020, 20, 84\n7 of 24\ndiﬀerent\
    \ perspectives of the scenarios addressed by smart applications. Figure 1 depicts\
    \ our proposed\nIoTecture, a generic 5-layer architecture based on our previous\
    \ experience with the development of\nIoT smart applications [4,49]. We recognize\
    \ that a myriad of diﬀerent layered architectures may be\nconceived having in\
    \ mind diﬀerent target applications.\nNevertheless, IoTecture is the outcome of\
    \ both an analysis of the literature (Section 2) and an\niterative reﬁnement process,\
    \ and as such, it is eﬀectively used in the speciﬁcation of pilot deployment\n\
    scenarios, as well as performance analysis studies. Compared to the 5-layer IoT\
    \ architecture [12–14],\nour 5-layer one explicitly adds support for highly distributed\
    \ data management functions and separates\nphysical and data-driven models from\
    \ application services. Also, by clearly identifying and separating\ncomponents\
    \ that are logically bound to the data, model, and service layers, IoTecture actively\
    \ helps\nthe deployment of IoT smart applications over diﬀerent distributed locations\
    \ in the mist, fog, and\ncloud. From a software architecture point of view, components\
    \ of diﬀerent layers are implemented by\nservices—actually encapsulated into Docker\
    \ containers with an exposed API, therefore microservices.\nComponents inside\
    \ each layer serve as representative examples of diﬀerent alternatives that may\
    \ vary\naccording to characteristics, requirements, and constraints of applications\
    \ and users.\n•\nLayer 1 (L1-Device): Sensors, actuators, and communication technologies—both\
    \ wired and\nwireless—make up the lowest layer of the IoT architecture. Devices\
    \ are sensors and actuators that\nrepresent IoT things. Figure 1 depicts some\
    \ examples of Layer 1 components, such as industrial\nrobots, that have many sensors\
    \ to track their actions, and actuators to control engines that make\nthem move\
    \ according to diﬀerent degrees of freedom, both exchanging messages with a smart\n\
    industry application via wired and wireless communication technologies.\n•\nLayer\
    \ 2 (L2-Transport): Collecting data from sensors, making it available to data\
    \ management\nfunctions, receiving commands from application models, and sending\
    \ them to actuators require a\ngood deal of intermediate components to make it\
    \ happen. Figure 1 depicts some examples of\ngeneric data transport functions\
    \ for sensing and actuation purposes, such as: (a) IoT protocol\n(e.g., MQTT [50])\
    \ that sends data from IP speaking devices to place where they are transformed\n\
    or ﬁltered either by other components of this layer or by data management components;\n\
    (b) IoT protocol translator (e.g., FIWARE IoT Agent) converts data from IoT protocol\
    \ format\n(e.g., byte stream for MQTT) into its internal format within data management\
    \ components\n(e.g., NGSI/JSON [29] for FIWARE) and vice-versa; (c) Sensor data\
    \ endpoint (e.g., ChirpStack [34])\ntransports, unpacks and decodes data for speciﬁc\
    \ IoT wireless communication technologies such as\nLPWAN [16]; (d) Device register\
    \ deals with the myriad of connected devices; (e) Data encryption\nand Authentication,\
    \ Authorization, and Accounting (AAA) is pervasively necessary for IoT\ncommunications\
    \ and included in Layer 2. A general function of data security and network/service\n\
    management are transversal functions, as all layers pervasively needed them (not\
    \ represented in\nFigure 1, though).\n•\nLayer 3 (L3-Data): Every stage of any\
    \ end-to-end IoT data ﬂow needs to deal with data in diﬀerent\nways, such as storing,\
    \ retrieving, distributing, transforming, and ﬁltering. Figure 1 depicts some\n\
    examples of generic data management functions, such as: (a) Context broker (e.g.,\
    \ FIWARE\nOrion [51]) for context data distribution and related storage system;\
    \ (b) Big data pipeline (e.g.,\nApache Kafka [52]) for raw data distribution and\
    \ replication; (c) Big data processing (e.g., Apache\nSpark [53]) for processing\
    \ large amounts of data; (d) Time series storage (e.g., CrateDB [54]) for\nhistorical\
    \ data, and; (e) Interfacing with external systems, such as weather forecast services,\
    \ online\ncity traﬃc management services and databases.\n•\nLayer 4 (L4-Model):\
    \ Represent application-speciﬁc models for any type of processing over data\n\
    collected from sensors and external systems, encompassing an assortment of algorithms,\
    \ equations,\nmethods and techniques that change the data into knowledge that\
    \ is used by end-users to change\nthe environment in a way that ﬁts their best\
    \ interests. For example, a smart irrigation application\nmay use soil and weather\
    \ data, as well as weather forecast information (external system), to feed\nSensors\
    \ 2020, 20, 84\n8 of 24\nphysical and machine learning models to precisely compute\
    \ when and how much crops should\nbe irrigated [4].\n•\nLayer 5 (L5-Service):\
    \ Contains services that support the interfaces and the interaction with\nend-users\
    \ of smart applications. This layer encompasses all services, applications, and\
    \ graphical\ninterfaces that provide visualization of sensor data, sensing and\
    \ actuation infrastructures, analyses,\nchoices, and decisions, as well as commands\
    \ to change the state of the system. Figure 1 depicts\nfour IoT verticals as examples\
    \ of smart applications, namely smart agriculture, smart city, smart\nhealthcare,\
    \ and smart industry.\nSensors 2020, 20, x FOR PEER REVIEW \n8 of 24 \ninterfaces\
    \ that provide visualization of sensor data, sensing and actuation infrastructures,\
    \ \nanalyses, choices, and decisions, as well as commands to change the state\
    \ of the system. Figure \n1 depicts four IoT verticals as examples of smart applications,\
    \ namely smart agriculture, smart \ncity, smart healthcare, and smart industry.\
    \ \n \nFigure 1. IoT architecture (IoTecture) for smart applications. \nIoTecture,\
    \ depicted by Figure 1 provides a high-level structural view of software, hardware,\
    \ \nand communication components placed into layers for facilitating system design\
    \ and development. \nHowever, it does not provide indications on where these components\
    \ should be deployed–i.e., mist, \nfog, or cloud-in a naturally distributed IoT\
    \ smart application. As the end-to-end data flow occurring \nin a smart application\
    \ includes sensors deployed in the field whose data usually are processed in the\
    \ \ncloud, the deployment of architectural components is a complex task that may\
    \ vary according to the \ncharacteristics, requirements, and constraints of applications\
    \ and stakeholders. \nIn order to provide a clear view of the different deployment\
    \ locations for architectural \ncomponents, we developed the concept of an IoT\
    \ computing continuum (shortened to IoTinuum), \nshown in Figure 2. IoTinuum is\
    \ divided up into stages or deployment locations, which may vary \naccording to\
    \ characteristics of the existing infrastructure, and extends the concept of IoT-fog-cloud\
    \ \nContinuum [47]. IoTinuum is an approach of formalizing the highly distributed\
    \ infrastructure of IoT \nsystems and facilitating the creation of different deployment\
    \ views for the mapping between layered \narchitectural components into staged\
    \ locations. For the sake of this paper, we identify five stages: \nS1-Thing,\
    \ S2-Mist, S3-Fog, S4-Cloud, and S5-Terminal. \n• \nS1-Thing: represents the stage\
    \ implemented by hardware devices, i.e., sensors and actuators, \nwhich convert\
    \ analog to digital signals and perform simple device-specific transformations,\
    \ \nsuch as calibration. \n• \nS2-Mist: mist nodes are installed in the field\
    \ and play the role of radio gateways [55] in the \ncontext of LPWAN—or similar\
    \ technologies—that support device data communication but also \nFigure 1. IoT\
    \ architecture (IoTecture) for smart applications.\nIoTecture, depicted by Figure\
    \ 1 provides a high-level structural view of software, hardware,\nand communication\
    \ components placed into layers for facilitating system design and development.\n\
    However, it does not provide indications on where these components should be deployed–i.e.,\
    \ mist,\nfog, or cloud-in a naturally distributed IoT smart application. As the\
    \ end-to-end data ﬂow occurring in\na smart application includes sensors deployed\
    \ in the ﬁeld whose data usually are processed in the\ncloud, the deployment of\
    \ architectural components is a complex task that may vary according to the\n\
    characteristics, requirements, and constraints of applications and stakeholders.\n\
    In order to provide a clear view of the diﬀerent deployment locations for architectural\
    \ components,\nwe developed the concept of an IoT computing continuum (shortened\
    \ to IoTinuum), shown in\nFigure 2. IoTinuum is divided up into stages or deployment\
    \ locations, which may vary according to\ncharacteristics of the existing infrastructure,\
    \ and extends the concept of IoT-fog-cloud Continuum [47].\nIoTinuum is an approach\
    \ of formalizing the highly distributed infrastructure of IoT systems and\nfacilitating\
    \ the creation of diﬀerent deployment views for the mapping between layered architectural\n\
    components into staged locations. For the sake of this paper, we identify ﬁve\
    \ stages: S1-Thing, S2-Mist,\nS3-Fog, S4-Cloud, and S5-Terminal.\nSensors 2020,\
    \ 20, 84\n9 of 24\n•\nS1-Thing: represents the stage implemented by hardware devices,\
    \ i.e., sensors and actuators,\nwhich convert analog to digital signals and perform\
    \ simple device-speciﬁc transformations, such\nas calibration.\n•\nS2-Mist: mist\
    \ nodes are installed in the ﬁeld and play the role of radio gateways [55] in\
    \ the\ncontext of LPWAN—or similar technologies—that support device data communication\
    \ but also\nprocessing, such as data aggregation. Mist nodes are close to the\
    \ devices they assist and typically\nhave modest computing resources, similar\
    \ to a Raspberry Pi.\n•\nS3-Fog: fog nodes are installed in sheltered places with\
    \ stable power supply and include equipment\nsuch as laptops, desktops, or small\
    \ servers, which provide system reliability, robustness, resilience,\nand low\
    \ latency for time-sensitive applications.\n•\nS4-Cloud: public or private clouds\
    \ host physical servers and virtual machines in a datacenter\nwith plenty of resources.\
    \ There is a noticeable increase in the processing power from S1-Thing\nto S4-Cloud\n\
    •\nS5-Terminal: the place where the end-user interacts with a smart application,\
    \ connected to\nS4-Cloud, but also S3-Fog in some conﬁgurations.\nSensors 2020,\
    \ 20, x FOR PEER REVIEW \n9 of 24 \n• \nS3-Fog: fog nodes are installed in sheltered\
    \ places with stable power supply and include \nequipment such as laptops, desktops,\
    \ or small servers, which provide system reliability, \nrobustness, resilience,\
    \ and low latency for time-sensitive applications. \n• \nS4-Cloud: public or private\
    \ clouds host physical servers and virtual machines in a datacenter \nwith plenty\
    \ of resources. There is a noticeable increase in the processing power from S1-Thing\
    \ \nto S4-Cloud \n• \nS5-Terminal: the place where the end-user interacts with\
    \ a smart application, connected to \nS4-Cloud, but also S3-Fog in some configurations.\
    \ \n \nFigure 2. The IoT computing continuum (IoTinuum). \nThe five stages of\
    \ IoTinuum define the end-to-end information path, starting with data \ncollected\
    \ by sensors up to commands executed by actuators. These five stages might not\
    \ be \nnecessarily present in all configuration scenarios. Instead, depending\
    \ on application characteristics, \nrequirements and constraints, S2-Mist, S3-Fog,\
    \ or S4-Cloud stages may not be present. \nCommunication technologies between\
    \ S1-Thing and S2-Mist are usually LPWAN (e.g., LoRaWAN), \nand between S2-Mist\
    \ and S3-Fog are usually WLAN (e.g., Wi-Fi). \nFigure 2. The IoT computing continuum\
    \ (IoTinuum).\nThe ﬁve stages of IoTinuum deﬁne the end-to-end information path,\
    \ starting with data collected\nby sensors up to commands executed by actuators.\
    \ These ﬁve stages might not be necessarily present\nin all conﬁguration scenarios.\
    \ Instead, depending on application characteristics, requirements and\nconstraints,\
    \ S2-Mist, S3-Fog, or S4-Cloud stages may not be present. Communication technologies\n\
    between S1-Thing and S2-Mist are usually LPWAN (e.g., LoRaWAN), and between S2-Mist\
    \ and S3-Fog\nare usually WLAN (e.g., Wi-Fi).\nFigure 3 represents diﬀerent mappings\
    \ of the IoT architecture into two deployment views or\nconﬁgurations of IoTinuum-with\
    \ and without S3-Fog—for the smart agriculture and smart city\nscenarios. The\
    \ end-users implicitly represent S5-Terminal. Figure 3a depicts a scenario of\
    \ a smart\nirrigation based on a center pivot that sprays water on a circular\
    \ plot where the S2-Mist is placed.\nL2-Transport components of the architecture\
    \ are located in S3-Fog-placed in the farm oﬃce-and L3-Data,\nL4-Model, and L5-Service\
    \ layers are located in S4-Cloud. Figure 3b depicts a sprinkler irrigation\nscenario\
    \ where S2-Mist is located in an environmentally protected box in the ﬁeld. S3-Fog\
    \ is not\nused by the choice of the farmer, and therefore all remaining components\
    \ are located in S4-Cloud.\nFigure 3c,d depict similar conﬁgurations for smart\
    \ traﬃc control. For both cases, S2-Mist is located in a\nlamppost, whereas for\
    \ Figure 3c, S3-Fog is located in an aggregation point (a point of presence of\
    \ the\nelectricity company).\nSensors 2020, 20, 84\n10 of 24\n \nThe five stages\
    \ of IoTinuum define the end-to-end information path, starting with data \ncollected\
    \ by sensors up to commands executed by actuators. These five stages might not\
    \ be \nnecessarily present in all configuration scenarios. Instead, depending\
    \ on application characteristics, \nrequirements and constraints, S2-Mist, S3-Fog,\
    \ or S4-Cloud stages may not be present. \nCommunication technologies between\
    \ S1-Thing and S2-Mist are usually LPWAN (e.g., LoRaWAN), \nand between S2-Mist\
    \ and S3-Fog are usually WLAN (e.g., Wi-Fi). \n(a) Smart Agriculture: 5-Stage\
    \ IoTinuum \n(b) Smart Agriculture: 4-Stage IoTinuum (no S3-Fog) \n \n \nSensors\
    \ 2020, 20, x FOR PEER REVIEW \n10 of 24 \n \n(c) Smart City: 5-Stage IoTinuum\
    \ \n(d) Smart City: 4-Stage IoTinuum (no S3-Fog) \nFigure 3. Smart applications\
    \ for deploying IoT architecture components on different configurations \nof IoTinuum.\
    \ \nFigure 3 represents different mappings of the IoT architecture into two deployment\
    \ views or \nconfigurations of IoTinuum-with and without S3-Fog—for the smart\
    \ agriculture and smart city \nscenarios. The end-users implicitly represent S5-Terminal.\
    \ Figure 3a depicts a scenario of a smart \nirrigation based on a center pivot\
    \ that sprays water on a circular plot where the S2-Mist is placed. \nL2-Transport\
    \ components of the architecture are located in S3-Fog-placed in the farm office-and\
    \ \nL3-Data, L4-Model, and L5-Service layers are located in S4-Cloud. Figure 3b\
    \ depicts a sprinkler \nirrigation scenario where S2-Mist is located in an environmentally\
    \ protected box in the field. S3-Fog \nis not used by the choice of the farmer,\
    \ and therefore all remaining components are located in \nS4-Cloud. Figure 3c,d\
    \ depict similar configurations for smart traffic control. For both cases, S2-Mist\
    \ \nis located in a lamppost, whereas for Figure 3c, S3-Fog is located in an aggregation\
    \ point (a point of \npresence of the electricity company). \nFigure 4 further\
    \ explains the mapping between architecture and continuum with a Smart \nIrrigation\
    \ scenario from the SWAMP project [4] with a deployment configuration that combines\
    \ \ncomponents of the five layers of IoTecture distributed over the five stages\
    \ of IoTinuum. For this \nsimplified example, L1-Device contains sensors (soil\
    \ moisture sensor and weather station) and \nactuators (pump and sprinkler) in\
    \ S1-Thing and a LoRaWAN Gateway in S2-Mist. Both stages are \ninstalled in the\
    \ farm field. L2-Transport is deployed into S3-Fog with the LoRaWAN server (sensor\
    \ \ndata endpoint), as well as in S4-Cloud with FIWARE IoT Agent (IoT protocol\
    \ translator). L3-Data is \nde loyed o ly i\nS4 Cloud\ne\ne e ted by FIWARE O\
    \ io\nL4 Model i al o de loyed i\nS4 Cloud\nFigure 3. Smart applications for deploying\
    \ IoT architecture components on diﬀerent conﬁgurations\nof IoTinuum.\nFigure\
    \ 4 further explains the mapping between architecture and continuum with a Smart\
    \ Irrigation\nscenario from the SWAMP project [4] with a deployment conﬁguration\
    \ that combines components of\nthe ﬁve layers of IoTecture distributed over the\
    \ ﬁve stages of IoTinuum. For this simpliﬁed example,\nL1-Device contains sensors\
    \ (soil moisture sensor and weather station) and actuators (pump and\nsprinkler)\
    \ in S1-Thing and a LoRaWAN Gateway in S2-Mist. Both stages are installed in the\
    \ farm ﬁeld.\nL2-Transport is deployed into S3-Fog with the LoRaWAN server (sensor\
    \ data endpoint), as well as in\nS4-Cloud with FIWARE IoT Agent (IoT protocol\
    \ translator). L3-Data is deployed only in S4-Cloud,\nrepresented by FIWARE Orion.\
    \ L4-Model is also deployed in S4-Cloud, represented by speciﬁc models\nfor irrigation\
    \ planning and operation. The application frontend of L5-Service runs in S5-Terminal\n\
    (SWAMP application), which is accessed by farmers via their smartphones. The application\
    \ backend\nruns in S4-Cloud, although not represented in Figure 4.\nSensors 2020,\
    \ 20, 84\n11 of 24\nTwo important observations can be made about the scenario\
    \ depicted in Figure 4. Firstly, it is\nonly one example among diﬀerent ways of\
    \ deploying architectural components (IoTecture layers)\nover deployment locations\
    \ (IoTinuum stages). For example, in a scenario where the farmer does\nnot desire\
    \ any on-premises infrastructure, S3-Fog disappears, and the LoRaWAN server could\
    \ be\ndeployed in S4-Cloud. Secondly, a real smart irrigation application demands\
    \ more components that\nare not in Figure 4, which appear in Figure 3 represented\
    \ by generic function names. By representing\narchitecture layers and deployment\
    \ stages separately and mapping one into the other, we obtain a\nﬂexible mechanism\
    \ for reasoning on functionality and placement and being able to provide deployment\n\
    views to IoT smart applications on diﬀerent scenarios. We consider it a more robust\
    \ approach compared\nto mixing both concerns in a single architecture, such as\
    \ the one proposed by Asif-Ur-Rahman et al. for\nsmart healthcare applications\
    \ [21].\nSensors 2020, 20, x FOR PEER REVIEW \n11 of 24 \ndeployment views to\
    \ IoT smart applications on different scenarios. We consider it a more robust\
    \ \napproach compared to mixing both concerns in a single architecture, such as\
    \ the one proposed by \nAsif-Ur-Rahman et al. for smart healthcare applications\
    \ [21]. \n \nFigure 4. Mapping of the 5-layered IoTecture over the 5-staged IoTinuum\
    \ for a smart irrigation \nscenario. \n4. Performance Analysis: Design and Methods\
    \ \nAs shown in Section 3, the mapping between components of the layered IoTecture\
    \ into stages of \nthe IoTinuum may result in different deployment configurations,\
    \ depending on the characteristics, \nrequirements, and constraints of applications\
    \ and users. The performance of smart applications is \ninfluenced by different\
    \ end-to-end sequences of connected software, hardware and communication \ntechnologies\
    \ through which the data flow has to pass in its way from sensors (S1-Thing) up\
    \ to the \ncloud (S4-Cloud)–and user (S5-Terminal)-and back to actuators (S1-Thing).\
    \ Depending on where \ncomponents are deployed and how they are connected, the\
    \ bottlenecks may move from one place to \nthe other, as well as the amount of\
    \ data to be processed, stored, and transmitted may increase or \ndecrease, thus\
    \ impacting performance metrics, such as response time. In this section, we conduct\
    \ a \nperformance analysis study with six configurations to help us understand\
    \ the performance tradeoffs \nof different architectural and deployment choices,\
    \ based on our IoTecture and IoTinuum presented \nin Section 3. \n4.1. Design\
    \ Decisions and Deployment Configurations \nThe scope of this performance analysis\
    \ study follows design choices focused on typical IoT \nplatform components, independent\
    \ of application and communication technologies. Figure 5 depicts \nsix deployment\
    \ configurations of layered IoTecture components into staged IoTinuum places \n\
    devised following four key design choices: \n• \nApplication independence: Layers\
    \ L4-Model and L5-Application of IoTecture represent specific \napplications.\
    \ This study addresses architectural components that comprise a common IoT \n\
    platform, oblivious of smart application particularities. Thus, application-specific\
    \ components \nare not included in our experiments. As applications must consume\
    \ data managed by L3-Data, \na simple Consumer component was added to represent\
    \ L4-Model as a generic data sink. As a \ndirect consequence of this choice, data\
    \ flows only in one way, from sensors to the consumer \nlocated at the cloud.\
    \ In other words, users are not involved, and therefore, L5-Service and \nT5-Terminal\
    \ are outside of the scope of this work. \n• \nCommunication independence: in\
    \ order to understand scalability limits, our study was \nperformed in a lab testbed,\
    \ wherein we can increase the workload by abstracting a large \nnumber of sensors\
    \ using the SenSE sensor simulator [56] that generates data at different rates.\
    \ \nTherefore, real IoT communication technologies-e.g., LPWAN-were not included\
    \ in our \nexperiments. Nevertheless, since LoRaWAN is currently a key LPWAN technology\
    \ that needs a \nFigure 4. Mapping of the 5-layered IoTecture over the 5-staged\
    \ IoTinuum for a smart irrigation scenario.\n4. Performance Analysis: Design and\
    \ Methods\nAs shown in Section 3, the mapping between components of the layered\
    \ IoTecture into stages of\nthe IoTinuum may result in diﬀerent deployment conﬁgurations,\
    \ depending on the characteristics,\nrequirements, and constraints of applications\
    \ and users. The performance of smart applications is\ninﬂuenced by diﬀerent end-to-end\
    \ sequences of connected software, hardware and communication\ntechnologies through\
    \ which the data ﬂow has to pass in its way from sensors (S1-Thing) up to the\n\
    cloud (S4-Cloud)–and user (S5-Terminal)-and back to actuators (S1-Thing). Depending\
    \ on where\ncomponents are deployed and how they are connected, the bottlenecks\
    \ may move from one place to the\nother, as well as the amount of data to be processed,\
    \ stored, and transmitted may increase or decrease,\nthus impacting performance\
    \ metrics, such as response time. In this section, we conduct a performance\n\
    analysis study with six conﬁgurations to help us understand the performance tradeoﬀs\
    \ of diﬀerent\narchitectural and deployment choices, based on our IoTecture and\
    \ IoTinuum presented in Section 3.\n4.1. Design Decisions and Deployment Conﬁgurations\n\
    The scope of this performance analysis study follows design choices focused on\
    \ typical IoT\nplatform components, independent of application and communication\
    \ technologies. Figure 5 depicts\nsix deployment conﬁgurations of layered IoTecture\
    \ components into staged IoTinuum places devised\nfollowing four key design choices:\n\
    •\nApplication independence: Layers L4-Model and L5-Application of IoTecture represent\
    \ speciﬁc\napplications. This study addresses architectural components that comprise\
    \ a common IoT platform,\noblivious of smart application particularities. Thus,\
    \ application-speciﬁc components are not\nincluded in our experiments. As applications\
    \ must consume data managed by L3-Data, a simple\nConsumer component was added\
    \ to represent L4-Model as a generic data sink. As a direct\nconsequence of this\
    \ choice, data ﬂows only in one way, from sensors to the consumer located at\n\
    the cloud. In other words, users are not involved, and therefore, L5-Service and\
    \ T5-Terminal are\noutside of the scope of this work.\nSensors 2020, 20, 84\n\
    12 of 24\n•\nCommunication independence: in order to understand scalability limits,\
    \ our study was performed\nin a lab testbed, wherein we can increase the workload\
    \ by abstracting a large number of sensors\nusing the SenSE sensor simulator [56]\
    \ that generates data at diﬀerent rates. Therefore, real IoT\ncommunication technologies-e.g.,\
    \ LPWAN-were not included in our experiments. Nevertheless,\nsince LoRaWAN is\
    \ currently a key LPWAN technology that needs a middleware component to\nwork\
    \ properly, a LoRaWAN server was included, as it belongs to L2-Transport playing\
    \ the role of\na sensor data endpoint. SenSE generates data emulating a LoRaWAN\
    \ device, in a way that the\nserver is unaware of not receiving data from real\
    \ sensors. The conﬁgurations with ChirpStack\nare compared to conﬁgurations with\
    \ a generic LPWAN technology where the sensor simulator\ngenerates data in a simple\
    \ string-based protocol–e.g., Ultralight 2.0-and does not need to go\nthrough\
    \ to the particularities of a speciﬁc LPWAN technology.\n•\nScenario simplicity:\
    \ to clearly understand the eﬀect of diﬀerent deployment conﬁgurations-i.e., the\n\
    mapping of IoTecture components into IoTinuum stages-a minimum set of components\
    \ was used\nto guarantee a data ﬂow that starts at sensors-actually, at SenSE-and\
    \ ends at the consumer. The set\nof software components included in the evaluated\
    \ IoT platform is composed of (Table 2): SenSE\nsensor simulator, ChirpStack,\
    \ FIWARE IoT Agent, FIWARE Orion, and consumer. They include\nother auxiliary\
    \ components as MQTT broker and databases (MongoDB, Redis), represented in\nFigure\
    \ 6.\n•\nFog Dilemma: S3-Fog may frequently leave behind in speciﬁc conﬁgurations\
    \ for diﬀerent reasons,\nsuch as the choice of the farmer in not hosting IoT infrastructure\
    \ within the farm in locations with\nstable and high-speed 4G connections. S2-Mist\
    \ is required in most cases, especially for LoRaWAN.\nAlso, we assume that S4-Cloud\
    \ is always present. Therefore, we tested diﬀerent conﬁgurations,\nwith and without\
    \ S3-Fog, and with heavyweight fog-local processing components-and lightweight\n\
    fog-only communication components.\nSensors 2020, 20, x FOR PEER REVIEW \n12 of\
    \ 24 \nThe configurations with ChirpStack are compared to configurations with\
    \ a generic LPWAN \ntechnology where the sensor simulator generates data in a\
    \ simple string-based protocol–e.g., \nUltralight 2.0-and does not need to go\
    \ through to the particularities of a specific LPWAN \ntechnology. \n \nFigure\
    \ 5. Deployment configurations of layered IoTecture components into staged IoTinuum\
    \ places. \n• \nScenario simplicity: to clearly understand the effect of different\
    \ deployment configurations-i.e., \nthe mapping of IoTecture components into IoTinuum\
    \ stages-a minimum set of components was \nused to guarantee a data flow that\
    \ starts at sensors-actually, at SenSE-and ends at the consumer. \nThe set of\
    \ software components included in the evaluated IoT platform is composed of (Table\
    \ \n2): SenSE sensor simulator, ChirpStack, FIWARE IoT Agent, FIWARE Orion, and\
    \ consumer. \nThey include other auxiliary components as MQTT broker and databases\
    \ (MongoDB, Redis), \nrepresented in Figure 6. \n• \nFog Dilemma: S3-Fog may frequently\
    \ leave behind in specific configurations for different \nreasons, such as the\
    \ choice of the farmer in not hosting IoT infrastructure within the farm in \n\
    locations with stable and high-speed 4G connections. S2-Mist is required in most\
    \ cases, \nespecially for LoRaWAN. Also, we assume that S4-Cloud is always present.\
    \ Therefore, we \nFigure 5. Deployment conﬁgurations of layered IoTecture components\
    \ into staged IoTinuum places.\nTable 1 further explains the six deployment conﬁgurations\
    \ that resulted from these four choices,\ncalled C1, C2, C3, C4, C5, and C6. They\
    \ were obtained by varying two factors, namely LPWAN\ntechnology (LoRaWAN vs.\
    \ Generic LPWAN) and fog dilemma (no fog vs. heavyweight fog vs.\nlightweight\
    \ fog.\nSensors 2020, 20, 84\n13 of 24\n•\nConﬁgurations C1, C2, C3, and C4 contain\
    \ S3-Fog, whereas conﬁgurations C5 and C6 preclude it.\nIt also implies that the\
    \ former conﬁgurations assume Wi-Fi WLAN connectivity between S2-Mist\nand S3-Fog,\
    \ while the latter assumes a 4G connection. The diﬀerence between Wi-Fi and 4G\
    \ here\nis related to the link characteristics emulated by the WANem WAN emulator\
    \ [57].\n•\nConﬁgurations C1, C4, and C5 use LoRaWAN, while conﬁgurations C2,\
    \ C3, and C6 assume a\ngeneric LPWAN technology–e.g., the physical LoRa modulation.\n\
    •\nConﬁgurations C1 and C2 have a heavyweight fog, which means that data are processed\
    \ and\nconsumed there with low latency. It also means that since we are using\
    \ FIWARE Orion as the\nprimary data distributor, one Orion in S3-Fog must connect\
    \ to another Orion in S4-Cloud. Since\nOrion is a publish/subscribe context broker,\
    \ the S4-Cloud Orion subscribes to the S3-Fog Orion, and\nwhenever a message is\
    \ published, the latter notiﬁes the former. On the other hand, conﬁgurations\n\
    C3 and C4 are based lightweight S3-Fog versions running only L2-Transport components,\
    \ where\nC3 only has ChirpStack, and C4 only has the IoT Agent.\nTable 1. Deployment\
    \ Conﬁgurations.\nConﬁguration\nFog Dilemma\nCommunication Technology\nHeavy-Weight\n\
    Light-Weight\nNo fog\nC1\n\x13\nLoRaWAN\nC2\n\x13\nGeneric LPWAN\nC3\n\x13\nGeneric\
    \ LPWAN\nC4\n\x13\nLoRaWAN\nC5\n\x13\nLoRaWAN\nC6\n\x13\nGeneric LPWAN\nThe main\
    \ components used in the six deployment conﬁgurations are depicted in Table 2.\n\
    Table 2. Software components for the performance analysis study.\nComponent\n\
    Layer\nImplementation\nDescription\nSenSE Sensor\nSimulator\nL1-Device\nSenSE\
    \ Tool [56]\nThe Sensor Simulating Environment (SenSE) is an\nopen-source large-scale\
    \ IoT sensor data generator able to\nabstract real devices and to model diﬀerent\
    \ complex\nscenarios, such as smart cities [58] and smart agriculture [48].\n\
    SenSE is a traﬃc workload generator that emulates\nheterogeneous sensors representing\
    \ tens of thousands of IoT\ndevices, sending data simultaneously via MQTT. Although\n\
    the sensors are synthetic, the traﬃc is real.\nChirpStack\nL2-Transport\nChirpStack\
    \ [34]\nImplementation of LoRaWAN that can be installed in a\nprivate deployment.\
    \ Composed by ChirpStack Network\nServer and ChirpStack Application Server, Redis\
    \ and\nPostgreSQL databases, and Mosquitto MQTT Broker [59].\nIoT Agent\nL2-Transport\n\
    FIWARE\nTranslates speciﬁc data formats carried by IoT Protocols\n(such as Ultralight\
    \ 2.0 over MQTT in this case) into standard\nFIWARE JSON NGSI model. IoT Agent\
    \ stores its data in\nMongoDB. We considered two implementations of the IoT\n\
    Agent: the FIWARE Ultralight 2.0 IoT Agent and a\ncustom-made LoRaWAN IoT Agent.\
    \ We developed the\nlatter one since the existing one in the FIWARE repository\
    \ is\nstill unstable.\nOrion\nL3-Data\nFIWARE\nOrion is a publish/subscribe context\
    \ broker with a central\nrole in data distribution for the FIWARE platform. Orion\n\
    works with entities deﬁned in JSON NGSI and stores them\ndirectly in MongoDB.\n\
    Consumer\nL4-Model\nSpeciﬁc purpose\nA simple consumer of IoT data playing the\
    \ role of a generic\nsmart application model.\nSensors 2020, 20, 84\n14 of 24\n\
    4.2. Experimental Design\nFigure 6 extends Figure 5, providing additional technical\
    \ information for the six deployment\nconﬁgurations introduced in, needed for\
    \ the clear understanding of both experiments and results.\n•\nSmart applications:\
    \ two scenarios of smart agriculture and smart city are considered in our\nexperiments.\
    \ The critical diﬀerence between them is the approach for sensor data generation.\n\
    In the smart agriculture scenario, we consider many soil moisture sensor probes,\
    \ continually\ngenerating and transmitting one data packet every 10 min. In the\
    \ smart city scenario, we consider\nvehicles playing the role of sensors that\
    \ communicate with a traﬃc light according to a Poisson\narrival rate. In both\
    \ scenarios, the SenSE sensor simulator synthetically generates sensor data.\n\
    •\nLPWAN Technology: data is generated by SenSE using the Ultralight 2.0 protocol\
    \ format in\nboth scenarios. Also, for LoRaWAN, sensor data packets are coded\
    \ according to the LoRa PHY\nformat and encrypted according to the AES algorithm\
    \ determined by the LoRaWAN standard.\nFor Generic LPWAN, plain sensor data is\
    \ transmitted directly to the receiving end, which is\nalways an MQTT broker.\
    \ There is a sizeable diﬀerence in the payload generated by SenSE in the\nconﬁgurations\
    \ with LoRaWAN and generic LPWAN. With LoRaWAN, SenSE sends ChirpStack a\nJSON\
    \ over MQTT message with information about the emulated LoRa modulation in addition\
    \ to\nthe actual encrypted payload, composing a message of 314 bytes. In the conﬁgurations\
    \ without\nLoRaWAN, SenSE sends an Ultralight 2.0-structured MQTT 65-byte message\
    \ to the IoT Agent,\nsigniﬁcantly smaller than the LoRa message\n•\nS1-Thing and\
    \ S2-Mist: the SenSE simulator abstracts L1-Device in both S1-Thing and S2-Mist\n\
    for all conﬁgurations. In other words, since our experiments are controlled and\
    \ performed in a\ntestbed, L1-Device is not present, except for the LoRa PHY format\
    \ that is generated by SenSE,\nin order to understand the real eﬀect of ChirpStack.\n\
    •\nChirpStack: an open source LoRa server composed of two main components, the\
    \ ChirpStack\nNetwork Server and the ChirpStack application server. Both communicate\
    \ via MQTT with each\nother and with sensors and actuators, as well as platform\
    \ components, e.g., FIWARE IoT Agent.\nAlso, they use Redis and PostgreSQL as\
    \ databases.\n•\nWAN Emulation: to emulate the network link between the fog and\
    \ the cloud, we used a WAN\nemulator (WANem) with 45 ms of latency and 5 ms of\
    \ jitter. We deﬁned the parameters to input\nin the WANem through a simple experiment\
    \ performed the ping command to a VM located in the\nAmazon cloud in São Paulo,\
    \ sent through 4G.\n•\nInfrastructure:\nexperiments were performed in an OpenStack-powered\
    \ private cloud.\nAs experiments were in a testbed, they are not inﬂuenced by\
    \ other virtual machines running in the\nsame physical servers. VMs for cloud\
    \ and fog are based on standard Amazon AWS conﬁgurations:\ncloud runs on a t2.medium\
    \ instance (2vCPU-4GB of RAM) and fog on a t2.small instance (1vCPU–2\nGB RAM).\
    \ Our testbed was composed of two physical servers with the following conﬁguration:\n\
    Intel(R) Xeon(R) CPU E3-1240 V2 @ 3.40GHz-8 cores and 16 GB of RAM.\nExperiments\
    \ with a large number of sensors-representing soil moisture sensors or cars passing\n\
    through a traﬃc light-simultaneously send messages to the platform, in order to\
    \ verify and understand\nscalability tradeoﬀs. We varied all levels of all factors\
    \ in each scenario, consisting of 36 diﬀerent\npossibilities (Table 3).\nSensors\
    \ 2020, 20, 84\n15 of 24\n \np\ny\ny\ng\nsame physical servers. VMs for cloud\
    \ and fog are based on standard Amazon AWS \nconfigurations: cloud runs on a t2.medium\
    \ instance (2vCPU-4GB of RAM) and fog on a t2.small \ninstance (1vCPU–2 GB RAM).\
    \ Our testbed was composed of two physical servers with the \nfollowing configuration:\
    \ Intel(R) Xeon(R) CPU E3-1240 V2 @ 3.40GHz-8 cores and 16 GB of \nRAM.  \n(a)\
    \ Configuration C1 \n \n(b) Configuration C2 \n \n \nSensors 2020, 20, x FOR PEER\
    \ REVIEW \n15 of 24 \n \n(c) Configuration C3 \n \n(d) Configuration C4 \n \n\
    (e) Configuration C5 \n \n(f) Configuration C6 \nFigure 6. Testbed setup for the\
    \ six deployment configurations. \nExperiments with a large number of sensors-representing\
    \ soil moisture sensors or cars passing \nthrough a traffic light-simultaneously\
    \ send messages to the platform, in order to verify and \nunderstand scalability\
    \ tradeoffs. We varied all levels of all factors in each scenario, consisting\
    \ of 36 \ndifferent possibilities (Table 3). \nTable 3. Factors and levels for\
    \ the performance analysis study. \nFactor \nLevel \nS\ni\nS\nA\ni\nl\nS\nCi\n\
    Figure 6. Testbed setup for the six deployment conﬁgurations.\nSensors 2020, 20,\
    \ 84\n16 of 24\nTable 3. Factors and levels for the performance analysis study.\n\
    Factor\nLevel\nScenario\nSmart Agriculture–Smart City\nWorkload\nSmart Agriculture:\
    \ soil sensor probes sending data every\n10 min (time-driven sensors following\
    \ a Constant distribution)\n5000–10,000–15,000\n(500–1000–1500 messages per minute)\n\
    Smart City: car arrival rate given in cars per second\n(event-driven sensors following\
    \ a Poisson Distribution)\n8–16–24 (480–960–1440 messages per minute)\nDeployment\
    \ conﬁgurations\nC1–C2–C3–C4-C5-C6\nNotice that the workload for smart agriculture\
    \ and smart city scenarios is speciﬁed in diﬀerent\nunits since they are based\
    \ on diﬀerent probability distributions for time-driven and event-driven\nsensors,\
    \ respectively. Both represent somewhat similar workloads: 500–1000–1500 messages\
    \ per\nminute for the smart agriculture scenario, and 480–960–1440 average messages\
    \ per minute for the\nsmart city scenario. Each experiment took 2 min with 30\
    \ replications, totalizing 36 h.\n4.3. Metrics\nThe experiments collected two\
    \ categories of metrics:\n•\nElapsed Time: The average time taken since a sensor\
    \ data point is generated by SenSE until the\nconsumer receives it. This metric\
    \ represents how long it takes for sensor data to be available to\nany subscribed\
    \ application. We present the Thing-to-Cloud Elapsed Time that encompasses the\n\
    end-to-end path taken by data from its inception by SenSE in S1-Thing up to its\
    \ consumption in\nS4-Cloud, and Thing-to-Fog Elapsed Time speciﬁcally for conﬁgurations\
    \ C1 and C2 that contains\nan L4-Model Consumer application in S4-Cloud.\n•\n\
    System metrics: CPU and RAM usage per Docker container, which allows observing\
    \ each\ncomponent, located in S3-Fog or in S4-Cloud, collected every 5 s.\n5.\
    \ Performance Analysis: Results\nFigure 7 summarizes the key results of Thing-to-Cloud\
    \ Elapsed Times for smart agriculture and\nsmart city for the six conﬁgurations\
    \ C1, C2, C3, C4, C5, and C6. The bars ﬁlled with horizontal, diagonal\nand zigzag\
    \ patterns mean that the experiments did not ﬁnish correctly due to higher workloads,\n\
    even after numerous repetitions. Also, conﬁguration C1 did not run at all for\
    \ smart agriculture with\n1500 messages per minute-15,000 sensor probes-as VMs\
    \ always failed shortly after the beginning of\nthe experiments.\nComparing both\
    \ scenarios, we can observe that smart city (Figure 7a) had a slightly better\
    \ result,\nespecially for the highest workload of each scenario. Those results\
    \ show that the components tested\nperformed better with messages arriving in\
    \ bursts-event-driven sensors-instead of messages arriving\nwith a constant ﬂow-time-driven\
    \ sensors. Notably, conﬁgurations, including LoRaWAN (C1, C4, and\nC5), achieved\
    \ higher scalability than the ones with generic LPWAN. Besides performing its\
    \ intrinsic\nfunction, ChirpStack works as a cushion for sensor data and softens\
    \ message spikes. Regarding an\noverall comparison of the experiments using LoRaWAN\
    \ (conﬁguration C1, C4, and C5) and generic\nLPWAN (conﬁguration C2, C3, and C6),\
    \ it can be noted that for lower workloads ChirpStack adds\nabout 200 ms to the\
    \ processing, since more software components are needed for addressing issues\n\
    such as security and authorization.\nSensors 2020, 20, 84\n17 of 24\n \nFigure\
    \ 7 summarizes the key results of Thing-to-Cloud Elapsed Times for smart agriculture\
    \ and \nsmart city for the six configurations C1, C2, C3, C4, C5, and C6. The\
    \ bars filled with horizontal, \ndiagonal and zigzag patterns mean that the experiments\
    \ did not finish correctly due to higher \nworkloads, even after numerous repetitions.\
    \ Also, configuration C1 did not run at all for smart \nagriculture with 1500\
    \ messages per minute-15,000 sensor probes-as VMs always failed shortly after\
    \ \nthe beginning of the experiments. \n \n(a) Smart Agriculture (time-driven\
    \ sensors) \n \n(b) Smart City (event-driven sensors) \nFigure 7. Device-to-Cloud\
    \ elapsed time for IoT smart applications. \nFigure 7. Device-to-Cloud elapsed\
    \ time for IoT smart applications.\nIn the smart agriculture scenario with the\
    \ highest workload (1500 messages per minute), only\ntwo conﬁgurations ran up\
    \ smoothly to the end of the experiments without failing, namely C4 and C5.\n\
    This result was not expected since C6 failed, and it is the lightest conﬁguration\
    \ in terms of the number\nof software components that are placed in the robust\
    \ VM in the cloud. Nevertheless, both scenarios\nhighlight the stability and scalability\
    \ of conﬁgurations C4 and C5, mainly due to the improved data\nﬂow control of\
    \ ChirpStack. On the other hand, when the workload is placed directly on the IoT\
    \ Agent,\nthe experiment fails, e.g., C6.Conﬁgurations C1 and C2 use a heavy fog,\
    \ where the Consumer uses\ndata directly in S3-Fog, allowing applications to process\
    \ part of the data closer to the user and thus to\nrespond to changes in real-time.\n\
    In Figure 8, we see that for C1, most of the time budget is elapsed up to S3-Fog,\
    \ whereas for C2,\nthe time to reach and process data in the cloud dominates the\
    \ path for both scenarios. This behavior\ncomes from the ChirpStack processing\
    \ time, present in C1 and absent in C2. For applications that\nrequire lower response\
    \ times-like a Smart City scenario–the LoRaWAN 200 ms processing time might\n\
    be unacceptable, which can make a case for a more straightforward LPWAN solution.\n\
    Sensors 2020, 20, 84\n18 of 24\n \nuser and thus to respond to changes in real\
    \ time. \nIn Figure 8, we see that for C1, most of the time budget is elapsed\
    \ up to S3-Fog, whereas for C2, \nthe time to reach and process data in the cloud\
    \ dominates the path for both scenarios. This behavior \ncomes from the ChirpStack\
    \ processing time, present in C1 and absent in C2. For applications that \nrequire\
    \ lower response times-like a Smart City scenario–the LoRaWAN 200 ms processing\
    \ time \nmight be unacceptable, which can make a case for a more straightforward\
    \ LPWAN solution. \n \n \n(a) Smart Agriculture (time-driven sensors) \n(b) Smart\
    \ City (event-driven sensors) \nFigure 8. Device-to-Fog elapsed time for IoT smart\
    \ applications. \nWe also measured CPU and RAM usage for all software components,\
    \ located both in S3-Fog \nand S4-Cloud, which helped us to understand the behavior\
    \ of the elapsed time metric. In all \nexperiments that did not finish correctly,\
    \ the cause was a failure in IoT Agent. However, it is \nrelevant to notice that\
    \ we used two different implementations: (a) a specially developed LoRaWAN \n\
    IoT Agent; (b) the FIWARE official Ultralight 2.0 IoT Agent. Although both play\
    \ the same role in \nconverting IoT protocols into NGSI JSON and share the same\
    \ programing language–JavaScript \nusing Node.js–they differ in terms of performance\
    \ and scalability. Some findings are worth \nhighlighting: \n• \nThe LoRaWAN IoT\
    \ Agent located at S3-Fog crashes in configuration C1 with the high workload \n\
    for the smart city scenario due to spikes in CPU usage as depicted in Figure 9.\
    \ A few seconds \nafter a certain threshold of messages per second is reached,\
    \ the CPU usage goes up to 100%, and \nFigure 8. Device-to-Fog elapsed time for\
    \ IoT smart applications.\nWe also measured CPU and RAM usage for all software\
    \ components, located both in S3-Fog and\nS4-Cloud, which helped us to understand\
    \ the behavior of the elapsed time metric. In all experiments\nthat did not ﬁnish\
    \ correctly, the cause was a failure in IoT Agent. However, it is relevant to\
    \ notice\nthat we used two diﬀerent implementations: (a) a specially developed\
    \ LoRaWAN IoT Agent; (b) the\nFIWARE oﬃcial Ultralight 2.0 IoT Agent. Although\
    \ both play the same role in converting IoT protocols\ninto NGSI JSON and share\
    \ the same programing language–JavaScript using Node.js–they diﬀer in\nterms of\
    \ performance and scalability. Some ﬁndings are worth highlighting:\n•\nThe LoRaWAN\
    \ IoT Agent located at S3-Fog crashes in conﬁguration C1 with the high workload\n\
    for the smart city scenario due to spikes in CPU usage as depicted in Figure 9.\
    \ A few seconds after\na certain threshold of messages per second is reached,\
    \ the CPU usage goes up to 100%, and this\ncomponent presents a type of instability\
    \ similar to a phase transition, leading it to crash soon after\n341 s of the\
    \ experiment.\n•\nThe Ultralight 2.0 IoT Agent located at both S3-Fog and S4-Cloud\
    \ crashes in conﬁgurations C2,\nC3, and C5 with the high workload for the smart\
    \ agriculture scenario due to a linear and constant\nincrease in memory usage.\
    \ Figure 10a shows it keeps allocation memory up to 239 s and crashes,\nwhich\
    \ corresponds to the CPU usage of MongoDB, and also Orion, at S4-Cloud. Figure\
    \ 10b shows\nthat after the IoT Agent crashes, the CPU usage of MongoDB drops\
    \ from more than 70% to almost\nzero after 40 s. In other words, the crash of\
    \ the IoT Agent in S3-Fog is instead a consequence of\nanother performance bottleneck\
    \ located at S4-Cloud. The service time of the IoT Agent is shorter\nthan the\
    \ joint service time of Orion and MongoDB so that the former queues messages waiting\
    \ for\nHTTP REST requests to be answered by the latter. In other words, the IoT\
    \ Agent waits for a TCP\nACK packet to free the memory allocated for the messages.\
    \ As the message ﬂow is constant in the\nsmart agriculture scenario, the memory\
    \ allocated by the IoT Agent increases boundlessly up to a\npoint the operating\
    \ system fails to provide more space, and it crashes. The high usage of CPU by\n\
    MongoDB does not aﬀect the performance of the platform since the IoT Agent crashes\
    \ before the\ndatabase starts to present signiﬁcant problems.\n•\nChirpStack is\
    \ a well-developed and stable software component that adequately uses system\n\
    resources. The combined CPU Usage of all individual components that make up ChirpStack\n\
    was around 40% for high workloads and 6% for low workloads, whereas the sum of\
    \ memory\nusage was approximately 30 MB for high workloads and 22 MB for low workloads.\
    \ Except for\nC1, all the conﬁgurations that crashed during the experiments were\
    \ not based on LoRaWAN and\nconsequently did not use ChirpStack. We conclude that,\
    \ in addition to performing his LoRaWAN\nfunctions, the ChirpStack also works\
    \ as a cushion for sensor data that softens message spikes that\nprevent IoT Agent\
    \ to queue too many messages.\nSensors 2020, 20, 84\n19 of 24\n•\nThe smart agriculture\
    \ and smart city scenarios presented a similar performance for low and medium\n\
    workloads. In those cases, the diﬀerence in the probability distribution for message\
    \ generation\ndid not impact the system performance, unlike for high workloads,\
    \ where all experiments with\nGeneric LPWAN (no ChirpStack) crashed for smart\
    \ agriculture. On the other hand, in the smart\ncity scenario, conﬁgurations C2\
    \ and C5 ran to the end of the experiment, and C3 was the only one\nwith LoRaWAN\
    \ that faced problems. This behavior indicates that the system can better handle\n\
    traﬃc in bursts than in a constant ﬂow of messages, because the time between bursts\
    \ is enough for\nOrion to dequeue some messages and send ACKs back to the IoT\
    \ Agent, freeing some memory in\nthe process.\n \nresources. The combined CPU\
    \ Usage of all individual components that make up ChirpStack \nwas around 40%\
    \ for high workloads and 6% for low workloads, whereas the sum of memory \nusage\
    \ was approximately 30 MB for high workloads and 22 MB for low workloads. Except\
    \ for \nC1, all the configurations that crashed during the experiments were not\
    \ based on LoRaWAN \nand consequently did not use ChirpStack. We conclude that,\
    \ in addition to performing his \nLoRaWAN functions, the ChirpStack also works\
    \ as a cushion for sensor data that softens \nmessage spikes that prevent IoT\
    \ Agent to queue too many messages. \n• \nThe smart agriculture and smart city\
    \ scenarios presented a similar performance for low and \nmedium workloads. In\
    \ those cases, the difference in the probability distribution for message \ngeneration\
    \ did not impact the system performance, unlike for high workloads, where all\
    \ \nexperiments with Generic LPWAN (no ChirpStack) crashed for smart agriculture.\
    \ On the other \nhand, in the smart city scenario, configurations C2 and C5 ran\
    \ to the end of the experiment, and \nC3 was the only one with LoRaWAN that faced\
    \ problems. This behavior indicates that the \nsystem can better handle traffic\
    \ in bursts than in a constant flow of messages, because the time \nbetween bursts\
    \ is enough for Orion to dequeue some messages and send ACKs back to the IoT \n\
    Agent, freeing some memory in the process. \n \nFigure 9. CPU usage of S3-Fog\
    \ components-Configuration C1–Smart City. \nFigure 9. CPU usage of S3-Fog components-Conﬁguration\
    \ C1–Smart City.\nSensors 2020, 20, x FOR PEER REVIEW \n19 of 24 \n \n(a) Memory\
    \ usage in S3-Fog \n \n(b) CPU usage in S4-Cloud \nFigure 10. Cloud CPU Usage\
    \ and Fog Memory Usage for Configuration C2 in a smart agriculture \nscenario\
    \ in the experiment with 1500 messages/min. \n6. Discussion \n6.1. Performance\
    \ and Scalability Concerns \nBy analyzing the performance results shown in Section\
    \ 5, we can understand that different \nFigure 10. Cloud CPU Usage and Fog Memory\
    \ Usage for Conﬁguration C2 in a smart agriculture\nscenario in the experiment\
    \ with 1500 messages/min.\nSensors 2020, 20, 84\n20 of 24\n6. Discussion\n6.1.\
    \ Performance and Scalability Concerns\nBy analyzing the performance results shown\
    \ in Section 5, we can understand that diﬀerent\ndeployment conﬁgurations of layered\
    \ IoTecture components into staged IoTinuum places generate\ndiﬀerent hardware\
    \ and software bottlenecks as far as the use of system resources is concerned.\
    \ Also,\nthat directly aﬀects the critical application metric to determine the\
    \ duration of data transfer (elapsed\ntime) from its inception in S1-Thing by\
    \ SenSE to its consumption in S4-Cloud by the consumer. Also,\nour results show\
    \ that individual software components have diﬀerent scalability behaviors that\
    \ may\nchange when they are connected to each other.\nThe complexity in understanding\
    \ diﬀerent tradeoﬀs complicates the choice of particular\ndeployment conﬁgurations\
    \ for speciﬁc IoT smart applications. In those cases, the help of an expert\n\
    on the IoT platform will be required to correctly identify the most suitable set\
    \ of components and\nconﬁguration deployment for each scenario, considering typical\
    \ workloads, as well as characteristics\nand constraints of the infrastructure\
    \ and applications.\nWe believe that our concepts related to\narchitecting and\
    \ deploying IoT smart applications, together with the practical performance analysis\n\
    results, increased the understanding and awareness involved in the development\
    \ and operation of\na new breed of IoT-enabled systems. However, there is still\
    \ the need for automating the process of\napplication deployment, not only the\
    \ static procedures for conﬁguring and installing an application\ninto the stages\
    \ of IoTinuum, but also the dynamic analysis which may generate consequent system\n\
    reconﬁgurations. The issue of static and dynamic conﬁguration is currently an\
    \ open research question.\nOur experiments revealed that FIWARE general enablers—in\
    \ their current version—are not\ndesigned for higher workload applications, which\
    \ is a paradox because IoT Platforms should be\nintrinsically able to deal with\
    \ thousands or millions of sensors simultaneously. When a FIWARE-based\nIoT platform\
    \ is submitted to a workload of 1500 messages per minute, the system crashes due\
    \ to the\nmalfunctioning of the Ultralight IoT Agent. As IoT smart applications\
    \ must handle a large number of\nconnected devices sending messages continuously,\
    \ 25 messages per second should not be considered\na workload high enough to cause\
    \ the system to fail. Therefore, even though Orion is considered a\nstable component,\
    \ its joint use with the IoT Agent produces a bottleneck that puts a ceiling in\
    \ the\nsystem scalability. This problem was not identiﬁed before in the literature\
    \ because most FIWARE-based\nimplementations are not deployed in large-scale scenarios–i.e.,\
    \ thousands of devices connected, as they\nfocus on simple examples with just\
    \ a few sensors, which does not stress the system enough to detect\nsystem bottlenecks.\
    \ The scalability of IoT platforms—–FIWARE, in our case—to support the operation\n\
    of applications using thousands or millions of sensors is another open research\
    \ question.\nWhen it comes to the six conﬁgurations analyzed in our experiments,\
    \ we conclude that all of them\nhave a practical use, depending on requirements,\
    \ characteristics, constraints, and workload of smart\napplications and deployment\
    \ scenarios. For example, in a scenario with stricter constraints on low\nlatency,\
    \ e.g., the smart city scenario for automated traﬃc lights, LoRaWAN powered by\
    \ ChirpStack\nmay not fulﬁll the demand. Also, such a conﬁguration may require\
    \ data to be consumed in the\nfog (S3-Fog), in order to avoid the latency of the\
    \ network link between the edge device (S1-Thing)\nand the cloud (S4-Cloud). On\
    \ the other hand, in smart agriculture, usually, there is no need for low\nlatency.\
    \ However, in some agriculture frontiers such as in the countryside of Brazil,\
    \ highly unstable\ninternet connections between S3-Fog and S4-Cloud are still\
    \ common. Thus, application uptime can\nbe increased, if it can survive to disconnections\
    \ from S4-Cloud by processing simpler models in\nS3-Fog, e.g., conﬁgurations C1\
    \ and C2 where Orion and consumer are placed in S3-Fog. Increasing the\nunderstanding\
    \ and awareness of design choices and best practices for deploying layered IoTecture\n\
    components into staged IoTinuum is an open research question.\nConﬁgurations C3\
    \ and C4 rely on a lightweight S3-Fog only for communication purposes,\nsince\
    \ they have no way of consuming data locally. This choice lies in the fact farm\
    \ infrastructure\nand connectivity with the Internet may be harnessed, but the\
    \ local server installed in S3-Fog may\nSensors 2020, 20, 84\n21 of 24\ncontinuously\
    \ be under a low workload, so that its resources may be used in some creative\
    \ ways, such\nas load balancing. This behavior was observed in the experiments\
    \ with C4, which achieved better\nresults compared to C6, where everything is\
    \ processed in S4-Cloud. However, the opposite happened\nwith C3, due to the poor\
    \ scalability of IoT Agent. Therefore, using up idle capacity in S3-Fog requires\n\
    careful analysis and an improved understanding of the behavior of speciﬁc software\
    \ components. The\ntradeoﬀs in using fog resources are another open research question.\n\
    6.2. IoT Architectural Layers vs. Deployment Stages\nIoTecture architectural layers\
    \ paired together with IoTinuum deployment stages provide a simple\nand unambiguous\
    \ way to bind software, hardware, and communication components to physical\ninfrastructure\
    \ in an IoT context. The physical location where a software component is executed\
    \ has\na high impact on the performance and brings diﬀerent tradeoﬀs, as revealed\
    \ by our performance\nanalysis results. IoT smart applications have their speciﬁc\
    \ characteristics and peculiarities regarding\nthe location of physical infrastructure—stages\
    \ S2-Mist, S3-Fog, and S4-Cloud—compared to traditional\nWeb-based distributed\
    \ applications.\nThere is no direct association between speciﬁc layers and stages,\
    \ even though some choices make\nfor sense than others. For example, components\
    \ from layers L2-Transport, L3-Data, L4-Model, and\neven L5-Service can be deployed\
    \ into an intermediary stage, such as conﬁgurations C1 and C2 that\nplaced L2-Transport\
    \ to L4-Model components into S3-Fog. On the other hand, all of them can be\n\
    executed in S4-Cloud, such as conﬁgurations C5 and C6. Also, if S3-Fog implements\
    \ a lightweight fog\nwith no local L4-Model, there is no way to consume data locally\
    \ from an edge device. Conﬁgurations\nbased on lightweight S3-Fog for communication\
    \ only are not able to consume data locally or decrease\napplication latency,\
    \ avoiding long internet delays. However, they can still be used for load balance\n\
    purposes. Also, we evaluated conﬁgurations where ChirpStack is deployed in S3-Fog\
    \ and S4-Cloud.\nEven though it could be installed in S2-Mist, we do not consider\
    \ it a stable solution, since the mist node\nmay not adequately fulﬁll the performance\
    \ and reliability requirements of IoT smart applications.\nApplications requiring\
    \ strict compliance with low latency—such as smart city applications—should\n\
    be designed having in mind layer L4-Service deployed in stages S2-Mist or 3S-Fog,\
    \ as data can be\nconsumed locally, thus, faster. On the other hand, for applications\
    \ with an unstable connection between\nS1-Thing and S4-Cloud—e.g., smart agriculture\
    \ applications—there is the need to store and process\ndata in an intermediary\
    \ stage, for increased uptime. Thus, such applications should have L3-Data\ncomponents\
    \ running in S2-Mist or S3-Fog. Here we presented some preliminary insights related\
    \ to the\ndeployment of layered components into staged locations, and further\
    \ research is necessary to provide\nmethods, mechanisms, algorithms, and best\
    \ practices to avoid the need of a specialist and allow an\nautomated deployment\
    \ process.\n6.3. Limitations and Future Work\nThis article does not exhaust the\
    \ subject of designing IoT architectures and using them to guide\nand support\
    \ the deployment of software, hardware, and networking components over distributed\n\
    locations. Examples of limitations of this article that are left as future work\
    \ include: (a) evaluating the\nperformance of components located in higher layers,\
    \ i.e., L4-Model and L5-Service; (b) automating\nthe deployment process, and;\
    \ (c) using diﬀerent technology sets. The performance analysis of higher\nlayer\
    \ components has not inherent challenges, though the results would be highly dependent\
    \ on\nspeciﬁc applications. On the other hand, we have already started to develop\
    \ an automated process\nfor application deployment, both for generating static\
    \ conﬁgurations at installation time, but also for\ndynamic on-the-ﬂy adaptation.\n\
    The set of IoT platforms and LPWAN technologies used in the performance analysis\
    \ study was\nﬁxed. Whereas FIWARE is a well-known IoT platform with a large user\
    \ base, other ones might reveal\ndiﬀerent results and trade-oﬀs, such as InterSCity\
    \ [60], Konker [61], and ThingsBoard [62]. As for\nLPWAN technologies, our study\
    \ only focused on LoRaWAN due to the do-it-yourself approach that\nSensors 2020,\
    \ 20, 84\n22 of 24\nfacilitates installing and using it. On the other hand, experimenting\
    \ with NB-IoT and SigFox with\na large number of sensors will require the development\
    \ of realistic emulation platforms based on\nextensive measurements with these\
    \ LPWAN technologies to capture their behaviors. Besides, other\nopen-source LoRaWAN\
    \ servers, such as the one provided by The Things Networks, could be compared\n\
    with ChirpStack.\n7. Conclusions\nAlthough IoT architectures play an essential\
    \ role in the design of distributed smart applications,\nthe development of IoT\
    \ platforms derived from these architectures and their deployment into\nreal scenarios\
    \ yield diﬀerent tradeoﬀs and thus require an improved understanding. We proposed\n\
    a layered IoT architecture (called IoTecture) whose components are mapped to stages\
    \ of an IoT\ncomputing continuum (called IoTinuum) in diﬀerent deployment conﬁgurations.\
    \ A performance\nanalysis study with six conﬁgurations revealed that diﬀerent\
    \ deployment conﬁgurations of layered\ncomponents into staged locations generate\
    \ diﬀerent hardware and software bottlenecks that aﬀect\nsystem performance and\
    \ scalability. Scalability problems that aﬀect FIWARE components under high\n\
    workloads were revealed.\nAuthor Contributions: I.Z., A.H., and D.S. designed\
    \ and conducted the experiments, collected data, and\ngenerated results. J.K.,\
    \ J.-P.S., and T.S.C. actively contributed with ideas, discussion of results,\
    \ and text revisions.\nC.K. developed the initial ideas of IoTecture and IoTinuum.\
    \ All authors contributed to the writing of this paper.\nFunding: This research\
    \ has been jointly funded by the European Commission in Europe and MCTIC/RNP in\n\
    Brazil, under the EUB-02-2017 IoT Pilots call.\nConﬂicts of Interest: The authors\
    \ declare no conﬂict of interest.\nReferences\n1.\nEricsson. Cellular Networks\
    \ for Massive IoT, White Paper, UEN 284 23-3278, January 2016. Available online:\n\
    https://www.ericsson.com/res/docs/whitepapers/wp_iot.pdf (accessed on 20 December\
    \ 2019).\n2.\nSharma, N.; Shamkuwar, M.; Singh, I. The History, Present and Future\
    \ with IoT. In Internet of Things and Big\nData Analytics for Smart Generation;\
    \ Springer: Basel, Switzerland, 2019; pp. 27–51.\n3.\nAhmed, E.; Yaqoob, I.; Gani,\
    \ A.; Imran, M.; Guizani, M. Internet-of-Things-based Smart Environments: State\n\
    of the Art, Taxonomy, and Open Research Challenges. IEEE Wirel. Commun. 2016,\
    \ 23, 10–16. [CrossRef]\n4.\nKamienski, C.; Soininen, J.-P.; Taumberger, M.; Dantas,\
    \ R.; Toscano, A.; Salmon Cinotti, T.; Filev Maia, R.;\nTorre Neto, A. Smart Water\
    \ Management Platform: IoT-Based Precision Irrigation for Agriculture. Sensors\n\
    2019, 19, 276. [CrossRef] [PubMed]\n5.\nTzounis, A.; Katsoulas, N.; Bartzanas,\
    \ T.; Kittas, C. Internet of Things in Agriculture, Recent Advances and\nFuture\
    \ Challenges. Biosyst. Eng. 2017, 164, 31–48. [CrossRef]\n6.\nDel Esposte, A.;\
    \ Kon, F.; Costa, F.; Lago, N. InterSCity: A Scalable Microservice-Based Open\
    \ Source Platform\nfor Smart Cities. In Proceedings of the 6th International Conference\
    \ on Smart Cities and Green ICT Systems,\nPorto, Portugal, 22–24 April 2017.\n\
    7.\nZanella, A.; Bui, N.; Castellani, A.; Vangelista, L.; Zorzi, M. Internet of\
    \ Things for Smart Cities. IEEE Internet\nThings J. 2014, 1, 22–32. [CrossRef]\n\
    8.\nIslam, S.; Kwak, D.; Kabir, M.; Hossain, M.; Kwak, K. The Internet of Things\
    \ for Health Care: A Comprehensive\nSurvey. IEEE Access 2015, 3, 678–708. [CrossRef]\n\
    9.\nWollschlaeger, M.; Sauter, T.; Jasperneite, J. The Future of Industrial Communication:\
    \ Automation Networks\nin the Era of the Internet of Things and Industry 4.0.\
    \ IEEE Ind. Electron. Mag. 2017, 11, 17–27. [CrossRef]\n10.\nYun, M.; Yuxin, B.\
    \ Research on the Architecture and Key Technology of Internet of Things (IoT)\
    \ Applied on\nSmart Grid. In Proceedings of the IEEE 2010 International Conference\
    \ on Advances in Energy Engineering,\nBeijing, China, 19–20 June 2010.\n11.\n\
    Guth, J.; Breitenbücher, U.; Falkenthal, M.; Leymann, F.; Reinfurt, L. Comparison\
    \ of IoT Platform Architectures:\nA Field Study Based on a Reference Architecture.\
    \ In Proceedings of the 2016 IEEE Cloudiﬁcation of the\nInternet of Things (CIoT),\
    \ Paris, France, 23–25 November 2016.\nSensors 2020, 20, 84\n23 of 24\n12.\nOmoniwa,\
    \ B.; Hussain, R.; Javed, M.A.; Bouk, S.H.; Malik, S.A. Fog/Edge Computing-based\
    \ IoT (FECIoT):\nArchitecture, Applications, and Research Issues. IEEE Internet\
    \ Things J. 2019, 6, 4118–4149. [CrossRef]\n13.\nKhan, R.; Khan, S.U.; Zaheer,\
    \ R.; Khan, S. Future Internet: The Internet of Things Architecture, Possible\n\
    Applications and Key Challenges. In Proceedings of the IEEE 10th International\
    \ Conference on Frontiers of\nInformation Technology, Islamabad, Pakistan, 17–19\
    \ December 2012.\n14.\nMashal, I.; Alsaryrah, O.; Chung, T.Y.; Yang, C.Z.; Kuo,\
    \ W.H.; Agrawal, D.P. Choices for interaction with\nthings on Internet and underlying\
    \ issues. Ad Hoc Netw. 2015, 28, 68–90. [CrossRef]\n15.\nBellavista, P.; Corradi,\
    \ A.; Foschini, L.; Scotece, D. Diﬀerentiated Service/Data Migration for Edge\
    \ Services\nLeveraging Container Characteristics. IEEE Access 2019, 7, 139746–139758.\
    \ [CrossRef]\n16.\nMekki, K.; Bajic, E.; Chaxel, F.; Meyer, F. A comparative study\
    \ of LPWAN technologies for large-scale IoT\ndeployment. ICT Express 2019, 5,\
    \ 1–7. [CrossRef]\n17.\nLoRa Alliance Technical Committee, 2017, LoRaWAN 1.1 Speciﬁcation,\
    \ October 2017. Available online:\nhttps://lora-alliance.org/resource-hub/lorawantm-speciﬁcation-v11\
    \ (accessed on 13 September 2019).\n18.\nClements, P. Documenting Software Architectures:\
    \ Views and Beyond, 2nd ed.; Addison-Wesley: Boston, MA,\nUSA, 2010.\n19.\nda\
    \ Cruz, M.A.; Rodrigues, J.J.; Sangaiah, A.K.; Al-Muhtadi, J.; Korotaev, V. Performance\
    \ Evaluation of IoT\nMiddleware. J. Netw. Comput. Appl. 2018, 109, 53–65. [CrossRef]\n\
    20.\nYaqoob, I.; Ahmed, E.; Hashem, I.; Ahmed, A.; Gani, A.; Imran, M.; Guizani,\
    \ M. Internet of Things\nArchitecture: Recent Advances, Taxonomy, Requirements,\
    \ and Open Challenges. IEEE Wirel. Commun. 2017,\n24, 10–16. [CrossRef]\n21.\n\
    Asif-Ur-Rahman, M.; Afsana, F.; Mahmud, M.; Kaiser, M.S.; Ahmed, M.R.; Kaiwartya,\
    \ O.; James-Taylor, A.\nToward a Heterogeneous Mist, Fog, and Cloud based Framework\
    \ for the Internet of Healthcare Things.\nIEEE Internet Things J. 2019, 6, 4049–4062.\
    \ [CrossRef]\n22.\nSingh, K.; Kapoor, D. Create Your Own Internet of Things: A\
    \ Survey of IoT Platforms. IEEE Consum. Electron.\nMag. 2017, 6, 57–68. [CrossRef]\n\
    23.\nRazzaque, M.; Milojevic-Jevric, M.; Palade, A.; Clarke, S. Middleware for\
    \ Internet of Things: A Survey.\nIEEE Internet Things J. 2016, 3, 70–95. [CrossRef]\n\
    24.\nHejazi, H.; Rajab, H.; Cinkler, T.; Lengyel, L. Survey of Platforms for Massive\
    \ IoT. In Proceedings of the 2018\nIEEE International Conference on Future IoT\
    \ Technologies (Future IoT), Eger, Hungary, 18–19 January 2018.\n25.\nBroring,\
    \ A.; Schmid, S.; Schindhelm, C.-K.; Khelil, A.; Kabisch, S.; Kramer, D.; Le Phuoc,\
    \ D.; Mitic, J.;\nAnicic, D.; Teniente, E. Enabling IoT Ecosystems through Platform\
    \ Interoperability. IEEE Softw. 2017, 34,\n54–61. [CrossRef]\n26.\nFrustaci, M.;\
    \ Pace, P.; Aloi, G.; Fortino, G. Evaluating Critical Security Issues of the IoT\
    \ World: Present and\nFuture Challenges. IEEE Internet Things J. 2018, 5, 2483–2495.\
    \ [CrossRef]\n27.\nKouicem, D.E.; Bouabdallah, A.; Lakhlef, H. Internet of things\
    \ security: A top-down survey. Comput. Netw.\n2018, 141, 199–221. [CrossRef]\n\
    28.\nFIWARE. FIWARE Open Source Platform. Available online: www.ﬁware.org (accessed\
    \ on 5 December 2019).\n29.\nOpen Mobile Alliance. NGSI Requirements, OMA-RD-NGSI-V1_0.\
    \ Available online:\nhttp://www.\nopenmobilealliance.org (accessed on 20 December\
    \ 2019).\n30.\nFIWARE Ultralight 2.0 Protocol. Available online: http://ﬁware-iotagent-ul.rtfd.io\
    \ (accessed on 20 December\n2019).\n31.\nGozalvez, J. New 3GPP standard for IoT.\
    \ IEEE Veh. Technol. Mag. 2016, 11, 14–20. [CrossRef]\n32.\nSigfox. Available\
    \ online: http://sigfox.com (accessed on 20 December 2019).\n33.\nLoRa Alliance.\
    \ Available online: http://lora-alliance.org, (accessed on 20 December 2019).\n\
    34.\nChirpStack. Available online: https://www.chirpstack.io (accessed on 16 December\
    \ 2019).\n35.\nThe Things Network. Available online: http://thethingsnetwork.org\
    \ (accessed on 20 December 2019).\n36.\nLoriot. Available online: http://loriot.io\
    \ (accessed on 20 December 2019).\n37.\nBonomi, F.; Milito, R.; Natarajan, P.;\
    \ Zhu, J. Fog computing: A platform for Internet of Things and analytics.\nIn\
    \ Big Data and Internet of Things: A Roadmap for Smart Environments; Springer:\
    \ Cham, Switzerland, 2014.\n38.\nMukherjee, M.; Shu, L.; Wang, D. Survey of Fog\
    \ Computing: Fundamental, Network Applications, and\nResearch Challenges. IEEE\
    \ Commun. Surv. Tutor. 2018, 20, 1826–1857. [CrossRef]\n39.\nAazam, M.; Huh, E.-N.\
    \ Fog Computing: The Cloud-IoT/IoE Middleware Paradigm. IEEE Potentials 2016,\
    \ 35,\n40–44. [CrossRef]\nSensors 2020, 20, 84\n24 of 24\n40.\nShi, W.; Cao, J.;\
    \ Zhang, Q.; Li, Y.; Xu, L. Edge computing: Vision and challenges. IEEE Internet\
    \ Things J. 2016,\n3, 637–646. [CrossRef]\n41.\nYogi, M.K.; Chandrasekhar, K.;\
    \ Kumar, G.V. Mist computing: Principles, trends and future direction. SSRG\n\
    Int. J. Comput. Sci. Eng. 2017, 4. [CrossRef]\n42.\nBormann, C.; Ersue, M.; Keranen,\
    \ A.; Gomez, C. Terminology for Constrained-Node Networks.\nIn Internet-Draft,\
    \ Draft-Bormann-Lwig-7228bis-05; IETF: Fremont, CA, USA, 2019.\n43.\nKleinschmidt,\
    \ J.H.; Kamienski, C.; Prati, R.C.; Kolehmainen, K.; Aguzzi, C. End-to-End Security\
    \ in the\nIoT Computing Continuum: Perspectives in the SWAMP Project. In Proceedings\
    \ of the 1st Workshop on\nValidation and Veriﬁcation in Future Cyber-Physical\
    \ Systems (WAFERS), Natal, Brazil, 19 November 2019.\n44.\nBabovic, Z.; Protic,\
    \ J.; Milutinovic, V. Web Performance Evaluation for Internet of Things Applications.\n\
    IEEE Access 2016, 4, 6974–6992. [CrossRef]\n45.\nMiao, Y.; Li, W.; Tian, D.; Hossain,\
    \ M.; Alhamid, M. Narrowband Internet of Things: Simulation and\nModeling. IEEE\
    \ Internet Things J. 2018, 5, 2304–2314. [CrossRef]\n46.\nMartínez, R.; Pastor,\
    \ J.Á.; Álvarez, B.; Iborra, A. A Testbed to Evaluate the FIWARE-based IoT Platform\
    \ in\nthe Domain of Precision Agriculture. Sensors 2016, 16, 1979. [CrossRef]\
    \ [PubMed]\n47.\nBittencourt, L.; Immich, R.; Sakellariou, R.; Fonseca, N.; Madeira,\
    \ E.; Curado, M.; Villas, L.; DaSilva, L.;\nLee, C.; Rana, O. The Internet of\
    \ Things, Fog and Cloud continuum: Integration and challenges. Internet\nThings\
    \ 2018, 3–4, 134–155. [CrossRef]\n48.\nZyrianoﬀ, I.; Heideker, A.; Silva, D.;\
    \ Kamienski, C. Scalability of an Internet of Things Platform for Smart\nWater\
    \ Management for Agriculture. In Proceedings of the Workshop on Advances in IoT\
    \ Based Methods for\nSmart Water Distribution and Management in Agriculture (IMSA\
    \ 2018), Bologna, Italy, 13–16 November\n2018.\n49.\nKamienski, C.; Jentsch, M.;\
    \ Eisenhauer, M.; Kiljander, J.; Ferrera, E.; Rosengren, P.; Thestrup, J.; Souto,\
    \ E.;\nAndrade, W.; Sadok, D. Application Development for the Internet of Things:\
    \ A Context-Aware Mixed\nCriticality Systems Development Platform. Comput. Commun.\
    \ 2017, 104, 1–16. [CrossRef]\n50.\nOASIS. MQTT Version 5.0. OASIS Committee Speciﬁcation\
    \ 02. May 2018. Available online: http://docs.oasis-\nopen.org/mqtt/mqtt/v5.0/cs02/mqtt-v5.0-cs02.pdf\
    \ (accessed on 17 September 2019).\n51.\nFIWARE, Orion Context Broker. Available\
    \ online: http://ﬁware-orion.rtfd.io (accessed on 20 December 2019).\n52.\nApache\
    \ Kafka. Available online: http://kafka.apache.org (accessed on 20 December 2019).\n\
    53.\nApache Spark. Available online: http://spark.apache.org (accessed on 20 December\
    \ 2019).\n54.\nCrateDB. Available online: http://crate.io (accessed on 20 December\
    \ 2019).\n55.\nFarrell, S. Low-Power Wide Area Network (LPWAN) Overview. In Internet\
    \ RFC 8376; Internet Engineering\nTask Force: Fremont, CA, USA, 2018.\n56.\nZyrianoﬀ,\
    \ I. SenSE—Sensor Simulation Environment. 2017, GitHub Repository. Available online:\
    \ https:\n//github.com/ivanzy/SenSE-Sensor-Simulation-Environment (accessed on\
    \ 16 September 2019).\n57.\nKalitay, H.K.; Nambiarz, M.K. Designing WANem: A Wide\
    \ Area Network Emulator Tool. In Proceedings\nof the 3rd IEEE International Conference\
    \ on Communication Systems and Networks (COMSNETS 2011),\nHonolulu, HI, USA, 18\
    \ January 2011.\n58.\nZyrianoﬀ, I.; Borelli, F.; Biondi, G.; Heideker, A.; Kamienski,\
    \ C. Scalability of Real-Time IoT-Based Applications\nfor Smart Cities. In Proceedings\
    \ of the IEEE Symposium on Computers and Communications (ISCC 2018),\nNatal, Brazil,\
    \ 25–28 June 2018.\n59.\nLight, R.A. Mosquitto: Server and client implementation\
    \ of the MQTT protocol. J. Open Source Softw. 2017, 2.\n[CrossRef]\n60.\nInterSCity.\
    \ Available online: http://interscity.org (accessed on 20 December 2019).\n61.\n\
    Konker. Available online: http://konkerlabs.com (accessed on 20 December 2019).\n\
    62.\nThingsBoard. Available online: http://thingsboard.io (accessed on 20 December\
    \ 2019).\n© 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article\
    \ is an open access\narticle distributed under the terms and conditions of the\
    \ Creative Commons Attribution\n(CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/20/1/84/pdf?version=1577152116
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Architecting and Deploying IoT Smart Applications: A Performance–Oriented
    Approach'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/dsn-w.2018.00024
  analysis: '>'
  authors:
  - Carlos Kamienski
  - João Henrique Kleinschmidt
  - Juha-Pekka Soininen
  - Kari Kolehmainen
  - Luca Roffia
  - M. C. Visoli
  - Rodrigo Filev Maia
  - Stênio Fernandes
  citation_count: 17
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account
    Personal Sign In Browse My Settings Help Institutional Sign In All Books Conferences
    Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences
    >2018 48th Annual IEEE/IFIP In... SWAMP: Smart Water Management Platform Overview
    and Security Challenges Publisher: IEEE Cite This PDF Carlos Kamienski; João Kleinschmidt;
    Juha-Pekka Soininen; Kari Kolehmainen; Luca Roffia; Marcos Visoli; Rodrigo Filev
    Maia; Stenio Fernandes All Authors 17 Cites in Papers 577 Full Text Views Abstract
    Document Sections I. Introduction II. Iot in Precision Irrigation for Agriculture
    III. Security Challenges for Iot in Agriculture IV. Conclusion Authors References
    Citations Keywords Metrics Footnotes Abstract: The intensive use of technology
    in precision irrigation for agriculture is getting momentum in order to optimize
    the use of water, reduce the energy consumption and improve the quality of crops.
    Internet of Things (IoT) and other technologies are the natural choices for smart
    water management applications, and the SWAMP project is expected to prove the
    appropriateness of IoT in real settings with the deployment of on-site pilots.
    At the same time, the more intense the use of technology is, agriculture turns
    new security risks, which may affect both crop development and the commodities
    market. A security breach may irreversibly compromise a crop and data eavesdropping
    may compromise price and contracts exposing sensitive data such crop quality,
    development or management. This paper discusses security challenges and technologies
    for the application of IoT in agriculture and indicates that one of the most relevant
    challenges to be handled in SWAMP project is dealing with the multitude of behaviors
    from IoT application and what would be considered as normal and what would be
    considered as a threat. Published in: 2018 48th Annual IEEE/IFIP International
    Conference on Dependable Systems and Networks Workshops (DSN-W) Date of Conference:
    25-28 June 2018 Date Added to IEEE Xplore: 23 July 2018 ISBN Information: Electronic
    ISSN: 2325-6664 DOI: 10.1109/DSN-W.2018.00024 Publisher: IEEE Conference Location:
    Luxembourg, Luxembourg I. Introduction Food security calls for the intensive use
    of irrigation in agriculture at the same time that water is increasingly becoming
    a precious and scarce asset for mankind. Irrigation for agriculture is the most
    significant consumer of freshwater in the world, amounting to 70% of freshwater
    [5]. In an attempt to avoid loss of productivity by under-irrigation, farmers
    feed more water than is needed and as a result not only productivity is challenged
    but also water and energy is wasted. The Internet of Things (IoT) [2] and other
    related technologies can be used for that purpose, but it faces several challenges
    such as the lack of easy-to-use software tools and platforms, communication constraints
    in rural areas and sensor integration issues. Such technological features in agriculture
    also bring severe security risks, since some machines have autonomous systems
    and data generated by IoT devices could expose critical aspects of the production
    or even they may be manipulated to support wrong conclusions about crop development.
    Sign in to Continue Reading Authors References Citations Keywords Metrics Footnotes
    More Like This Enabling Drones in the Internet of Things With Decentralized Blockchain-Based
    Security IEEE Internet of Things Journal Published: 2021 Security of Internet
    of Things Devices: Ethical Hacking a Drone and its Mitigation Strategies 2022
    IEEE Asia-Pacific Conference on Computer Science and Data Engineering (CSDE) Published:
    2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'SWAMP: Smart Water Management Platform Overview and Security Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2018/6089280
  analysis: '>'
  authors:
  - Alfonso González‐Briones
  - José A. Castellanos-Garzón
  - Yeray Mezquita
  - Javier Prieto
  - Juan M. Corchado
  citation_count: 42
  full_citation: '>'
  full_text: ">\nResearch Article\nA Framework for Knowledge Discovery from Wireless\
    \ Sensor\nNetworks in Rural Environments: A Crop Irrigation Systems\nCase Study\n\
    Alfonso González-Briones\n,1 José A. Castellanos-Garzón\n,1,2 Yeray Mezquita Martín,1\n\
    Javier Prieto,1 and Juan M. Corchado1,3,4\n1University of Salamanca, BISITE Digital\
    \ Innovation Hub, Edificio Multiusos I+D+I, 37007 Salamanca, Spain\n2University\
    \ of Coimbra, CISUC, ECOS Research Group, P´olo II-Pinhal de Marrocos, 3030-290\
    \ Coimbra, Portugal\n3Osaka Institute of Technology, Japan\n4Universiti Malaysia\
    \ Kelantan, Malaysia\nCorrespondence should be addressed to Jos´e A. Castellanos-Garz´on;\
    \ jantonio@usal.es\nReceived 8 March 2018; Revised 17 May 2018; Accepted 19 June\
    \ 2018; Published 17 July 2018\nAcademic Editor: Carlo Giannelli\nCopyright ©\
    \ 2018 Alfonso Gonz´alez-Briones et al. This is an open access article distributed\
    \ under the Creative Commons\nAttribution License, which permits unrestricted\
    \ use, distribution, and reproduction in any medium, provided the original work\
    \ is\nproperly cited.\nThis paper presents the design and development of an innovative\
    \ multiagent system based on virtual organizations. The multiagent\nsystem manages\
    \ information from wireless sensor networks for knowledge discovery and decision\
    \ making in rural environments.\nThe multiagent system has been built over the\
    \ cloud computing paradigm to provide better flexibility and higher scalability\
    \ for\nhandling both small- and large-scale projects. The development of wireless\
    \ sensor network technology has allowed for its extension\nand application to\
    \ the rural environment, where the lives of the people interacting with the environment\
    \ can be improved. The\nuse of “smart” technologies can also improve the efficiency\
    \ and effectiveness of rural systems. The proposed multiagent system\nallows us\
    \ to analyse data collected by sensors for decision making in activities carried\
    \ out in a rural setting, thus, guaranteeing the\nbest performance in the ecosystem.\
    \ Since water is a scarce natural resource that should not be wasted, a case study\
    \ was conducted\nin an agricultural environment to test the proposed system’s\
    \ performance in optimizing the irrigation system in corn crops. The\narchitecture\
    \ collects information about the terrain and the climatic conditions through a\
    \ wireless sensor network deployed in the\ncrops. This way, the architecture can\
    \ learn about the needs of the crop and make efficient irrigation decisions. The\
    \ obtained results\nare very promising when compared to a traditional automatic\
    \ irrigation system.\n1. Introduction\nWireless sensor networks (WSNs) are used\
    \ for collecting the\ninformation needed by intelligent environments in urban\
    \ and\nrural construction, smart cities, home and building automa-\ntion, industrial\
    \ applications, or smart hospitals [1–6]. WSNs\nsupport current requirements related\
    \ to the deployment of\nnetworks; they cover communication needs and are flexible\n\
    in time, space, and autonomy; they do not require a fixed\nstructure [7–9]. Currently,\
    \ several wireless technologies are\navailable on the market such as ZigBee, Wi-Fi,\
    \ or Bluetooth;\nthey enable easier deployments than wired ones, avoiding the\n\
    need to wire buildings and decrease the costs and drawbacks\nof the setup phase.\
    \ The possibilities provided by WSNs allow\ndeveloping a wide range of applications,\
    \ such as energy\ncost control, monitoring of environmental data, security and\n\
    control of access to environments, and industrial and home\nautomation [10–13].\
    \ In this regard, telemonitoring (or sens-\ning) makes it possible to obtain information\
    \ about users and\ntheir environment. This allows offering the users customized\n\
    online services, considering the state of their environment.\nThe building automation\
    \ and control system market provides\nmany standards, protocols, and data distribution\
    \ systems,\nenabling different systems, like building automation systems,\nsecurity\
    \ systems, lighting systems, and others, to interact and\nintegrate with each\
    \ other [14, 15].\nHindawi\nWireless Communications and Mobile Computing\nVolume\
    \ 2018, Article ID 6089280, 14 pages\nhttps://doi.org/10.1155/2018/6089280\n2\n\
    Wireless Communications and Mobile Computing\nThe development of WSN technology\
    \ has allowed extend-\ning its application to the rural setting where it can be\
    \ used to\nfacilitate the daily activities of farmers. People’s interaction\n\
    with the environment can be improved and the use of\n“smart” technologies can\
    \ also improve the efficiency and\neffectiveness of rural systems. Mobile computing,\
    \ grid com-\nputing, pervasive microsensing and actuation [16, 17], and\nrecent\
    \ advancements in wireless technologies may change\nour surrounding environment\
    \ in a way that we have not yet\nimagined. These emerging technologies can be\
    \ used to create\nsmart environments and improve the socioeconomic status\nof\
    \ rural areas. The different applications of WSNs in rural\nenvironments can include\
    \ e-services such as e-learning, e-\nacademics, e-business, e-medicine, and e-healthcare.\
    \ Those\napplications may facilitate an efficient connection between\nthe city\
    \ and remote rural areas.\nOther applications of WSNs to the rural setting aim\n\
    to prevent environmental degradation because of fires in\nfarming and forest areas.\
    \ Fires lead to pollution and to the loss\nof nutrients and soil microorganisms\
    \ [18, 19]. It also causes\nvegetation degradation as well as flora and fauna\
    \ diminution\nsince they disappear from the affected zone and are not\nreintegrated\
    \ in other areas. The application of WSNs not only\nin preventive but also in\
    \ postfire detection systems is of great\nbenefit. The use of sensors to detect\
    \ and monitor fire behavior\nhas allowed applying new technologies in this area.\
    \ Sensors\nused in such systems measure static and dynamic variables,\nlike humidity,\
    \ slope of the land, the type of fuel, the direction,\nthe speed of the wind,\
    \ smoke, etc. Thanks to that, they provide\nknowledge of how the fire spreads\
    \ and how to combat it\nefficiently.\nAnother area to which WSNs are applied within\
    \ the rural\ncontext is agriculture and therefore the food industry. Sensors\n\
    can be applied to measure parameters and gather information\non environmental\
    \ conditions affecting plant growth in areas\nthat are not as easily controllable\
    \ as those of a greenhouse.\nThey are important for weather monitoring and optimal\
    \ use\nof fertilizers in the field. Besides that, they can be used in\nspatial\
    \ data collection, precision irrigation, and fertigation\nas well as disease and\
    \ insect pest management. As for food\nindustry, the applications involve real\
    \ time temperature mea-\nsurement for thermal sterilization, irradiation, etc.\
    \ Bacterial\nconcentration in food products can also be sensed.\nAn important\
    \ feature of WSNs deployed in a rural setting\nis that they can collect heterogeneous\
    \ data from different\nenvironments. In this way, systems can learn about the\n\
    environment, making it possible to take adequate decisions\nand easing knowledge\
    \ discovery. The goal of this approach\nis to provide a smart environment able\
    \ to make decisions\nand efficiently manage resources. The process of collecting\n\
    heterogeneous information is related to the term “Big Data”\n[20], which deals\
    \ with the volume, variety, velocity, and\ncomplexity of data produced daily.\
    \ Big Data not only brings\ntogether large amounts of data; the paradigm also\
    \ makes it\npossible to process various data types. These data streams\ndemand\
    \ ever-greater processing speeds and yet their storage\nmust be economic. The\
    \ main goal of Big Data in research\nand technologies is to manage and transform\
    \ available real\ntime and historical data into knowledge and to make efficient\n\
    decisions based on organizational requirements and needs.\nIn the presented solution\
    \ this will be done with the data\nrecovered by the sensors. It will allow us\
    \ to optimize the use\nof the actuators in the system. Like the pivots in the\
    \ irrigation\nprocess, we will optimize the spent water knowing where to\nspend\
    \ it in the correct moment.\nReal Time Locating Systems (RTLS) are an example\
    \ of\nanother important application of WSNs [21, 22]. Although\nsystems like GPS\
    \ or the future Galileo perform well in\noutdoor localization, indoor localization\
    \ still needs further\ndevelopment, especially with respect to accuracy and the\n\
    use of low-cost and efficient infrastructures. Some of the\napplications of Real\
    \ Time Locating Systems include tracking\npeople, assets, and animals, access\
    \ control, wander pre-\nvention, warning and alert systems, controlling security\n\
    perimeter, and resources optimization. Companies need to\nuse some sort of monitoring\
    \ system to track their human and\ntechnical resources and, especially, to improve\
    \ their security,\nefficiency, and safety and reduce occupational hazards. User\n\
    identification is a key aspect for adequate services customiza-\ntion and environment\
    \ interaction. A good example of this is\nemergency situations where it is necessary\
    \ to locate people,\nfor example, in the case of forest fires or nuclear disasters.\
    \ To\nbe able to develop a platform that would integrate different\nsubsystems\
    \ for remote location and automation, it is first\nnecessary to create complex\
    \ and flexible applications.\nThe goal of this research, therefore, is to design\
    \ and\ndevelop a multiagent architecture aimed at gathering data\nand automating\
    \ rural environments for decision making and\nknowledge discovery on a cloud system.\
    \ This architecture,\nwhich is based on agent virtual organizations (VOs), will\n\
    give intelligence to the platform, real time response, and\nadaptation to the\
    \ needs of the application problem; and\nthe cloud will ensure that the platform\
    \ uses the required\nresources at all times. Recent tendencies have led to the\
    \ use\nof VOs, which can be thought of as a set of individuals and\ninstitutions\
    \ that need to coordinate resources and services\nacross institutional boundaries.\
    \ Thus, a VO is an open system\nformed by the grouping and collaboration of heterogeneous\n\
    entities. The most suitable technology for the development\nof these open systems\
    \ is Agent Technology, which makes\nit possible to form dynamic agent organizations.\
    \ Modelling\nopen multiagent organizations makes it possible to describe\nstructural\
    \ composition (i.e., roles, agent groups, interaction\npatterns, and role relationships)\
    \ and functional behaviors\n(i.e., agent tasks, plans, or services), and it can\
    \ incorpo-\nrate normative regulations for controlling agent behaviors,\ndynamic\
    \ entry/exit of components, and dynamic formation\nof agent groups [23, 24]. As\
    \ the development of open multi-\nagent systems is still a recent field in the\
    \ multiagent system\nparadigm, it is necessary to investigate new methods for\n\
    modelling open agent-based virtual organizations and inno-\nvative techniques\
    \ that will provide advanced organizational\nabilities to virtual organizations.\
    \ In that sense, the intelligence\nprovided by proposed architecture is based\
    \ on union of\nsupervised and unsupervised learning. On the one hand, we\nprovide\
    \ a subsystem able to learn from past experiences or\nalready classified data,\
    \ which guarantees the automation of\nthe system in decision making. On the other\
    \ hand, it is not\nWireless Communications and Mobile Computing\n3\nalways possible\
    \ to collect labeled data as in the previous case.\nFor that reason, we have linked\
    \ the previous subsystem with\nanother of unsupervised learning. The latter will\
    \ allow us to\nfind groupings in data based on their distribution, on which\n\
    we can later classify or label the data based on the knowledge\nobtained from\
    \ the groupings found. The subsystem above has\nbeen used in this research to\
    \ recognise different crop areas\n(of different needs) focused on their features,\
    \ disclosed by\ndifferent sensors measuring environmental condition of the\ncrop.\
    \ All of the above allows us to use resources only when\nand where they are needed\
    \ as a means of optimizing resources\nin crops.\nFinally, this paper has been\
    \ divided into the following\nsections to reach the proposed aims: the Related\
    \ Work which\ndescribes the background and the works related to this\nresearch\
    \ as well as the main contribution of this research.\nThe Multiagent Architecture\
    \ Methodology describes the\nmethod used to develop the architecture, i.e., discretion\
    \ of\nthe different layers of the architecture and the multiagent\nsystem involved.\
    \ The case study section describes the features\nof the corn crop and pivot-based\
    \ irrigation system. The results\nreached in this section are given as the final\
    \ part. Conclusions\nand references are listed at the end of this document.\n\
    2. Related Work\nThe challenge of adapting Information and Communication\nTechnologies\
    \ (ICT) to the needs of the agrifood sector lies\nin the complexity of the problem\
    \ it faces: great diversity\nof products, fast deterioration of fresh products,\
    \ binding of\nagricultural production to weather conditions, existence of\ndiseases\
    \ or pests, limitations in the evaluation of the product\nquality by the final\
    \ consumer, distances between production\nand consumption areas, etc. To deal\
    \ with these aspects, an\nautomatic decision-making-oriented analysis is required\
    \ for\nlarge volumes of heterogeneous data collected from different\nsources [25–28].\n\
    The above cases exemplify the flow of products in the\nagrifood domain, which\
    \ move from the agricultural sector to\nthe food industry (agrifood logistics)\
    \ and finally are delivered\nto the consumer (food awareness). Precision agriculture\
    \ in\nprimary production [29, 30], tracking and tracing of food\nproducts along\
    \ their value chain [31], or identification of\nproduct characteristics through\
    \ labels and logos targeted at\nthe consumer [32] showed important initiatives\
    \ supporting\nthe needs imposed by the sector and the consumer.\nThe use of WSNs\
    \ in the cases listed above has contributed\nto the development of systems that\
    \ continually improve their\nperformance. This has been a reality, especially\
    \ in networks\nof radio frequency identification devices (RFID), which are\nclosely\
    \ linked to the organization of interenterprise agrifood\nprocesses, ranging from\
    \ the farm to the distribution com-\npany [33]. However, the process of selecting\
    \ and specifying\ntechnologies that improve business processes is becoming\nincreasingly\
    \ complex, due to the wide variety of existing\ndevices and the rapid developments\
    \ in this field.\nRFID technology is currently one of the most promising\ntechnologies\
    \ in self-identification and data capture (AIDC).\nThe main objective of RFID\
    \ systems is to collect data through\na transponder (tag) so that they can be\
    \ transmitted and\nreceived by a transceiver, all through a wireless communica-\n\
    tion channel. The possibility of accessing information without\nthe need for visual\
    \ contact with the tags is exploited in the\nidentification or location of assets\
    \ [33, 34]. Such capacity is\nrelevant in food tracking and tracing systems, through\
    \ the\nidentification of batches of individual products. In addition,\nthe continued\
    \ development of RFID is generating new use\ncases that go beyond the identification\
    \ functionality. To this\nend, RFID is integrated with other technologies, such\
    \ as\nsensor technology [35–37].\nThe advantage of RFID technology lies in the\
    \ fact that\nit is cheap enough to be incorporated into any physical\ndevice,\
    \ while providing bidirectional communication capac-\nities, allowing building\
    \ advanced organizational schemes,\nsuch as the Internet of Things (IoT, (ITU,\
    \ 2005)). RFID can\ncreate new business models on global device networks, where\n\
    each object is networked. Current RFID implementations\nshow great potential and\
    \ RFID may become a catalyst of\ntechnical evolution in the industrial sector\
    \ [38–40].\nIn general, agrofood data collection technology is char-\nacterized\
    \ by a wide variety of active devices in different\nparts/environments. The following\
    \ are the most common\nexamples in the majority of use cases [26]:\n(i) Data collection\
    \ on farms through the implementation\nof wireless sensor networks: they provide\
    \ information\non production indicators like precipitation, soil mois-\nture levels,\
    \ pesticide and fertilizer use, and more.\n(ii) Transport data capture: It includes\
    \ the location and\ninformation of the environment and data both inside\nand outside\
    \ the transport system, which allows us to\nknow the state of logistics.\n(iii)\
    \ Data capture of product quality indicators: the levels\nof humidity, oxygen,\
    \ nitrogen, and ethylene in the air\nact as indicators of the state of fruit and\
    \ vegetables,\nbeing relevant in storage and transport tasks.\n(iv) Data capture\
    \ from product packaging (logos and\nother) is to collect additional product information\
    \ on\ncloud.\nFocusing on the agricultural use case, small and medium\nsized farms\
    \ carry most of the weight of world production.\nEven though they are slower to\
    \ adopt IT solutions, due to\nlack of familiarity with technologies, belief that\
    \ the cost-\nbenefit ratio does not suit their needs or due to their lack of\n\
    knowledge they are not able to make use of the large amount\nof information that\
    \ these systems acquire [41]. Solutions\nto such problems may be found in precision\
    \ agriculture.\nFor example, the conferences of the International Society of\n\
    Precision Agriculture (ISPA, 2012) aim to collect information\nfor accounting\
    \ purposes and its subsequent automation. This\nimplies increased agricultural\
    \ automation and improvements\nin environmental technologies.\nIn this area, wireless\
    \ sensor network applications for\nirrigation facilities management based on radio\
    \ frequency\nidentification have been proposed in [42, 43]. Those applica-\ntions\
    \ were determined to be beneficial in the management of\nwater. This kind of systems\
    \ collect, analyse, and monitor data\n4\nWireless Communications and Mobile Computing\n\
    from a net of sensors installed in the field in a feedback loop\nwhich activates\
    \ the control devices based on precalculated\nthreshold value, like in [44]. Some\
    \ other works develop\napplications to allow the user to interact with the system\n\
    and make dynamical thresholds [45, 46]. Other systems,\ninstead of just thresholds,\
    \ do use linear programming models\nto optimize the resources like in [47]. Here\
    \ the authors\ncombine the idea of “knapsack” problem with a linear\nprogramming\
    \ model proving satisfactory results. The novelty\nof our solution is that it\
    \ proposes a combination of supervised\nand unsupervised learning, where, according\
    \ to the nature\nof the data, clustering and/or machine learning methods\nare\
    \ used for task optimization in the use of resources,\nwhile improving the crop\
    \ quality. Nowadays, in WSN based\nsystems, two computational paradigms are arising:\
    \ edge and\nfog computing. Regarding farming and precision agriculture,\nin [48]\
    \ the edge computing paradigm has been used in order\nto make the data they use\
    \ more private. To obtain this, the IoT\nsensors (edges) preprocess and analyse\
    \ the private data and\nsend the results to a server, where the results to estimate\
    \ and\npredict the total harvest yield are gathered. In [49], the above\nparadigms\
    \ have been used to create a smart farm monitoring\nsystem. The works previously\
    \ exposed deployed WSN inside\na building, but our solution deploys it in open\
    \ fields. IoT\ndevices are in the open field, so it is difficult to use a computer\n\
    with enough computing power to process all this data in\na fog computing way.\
    \ Furthermore, if the devices are not\nlightweight and compute the data in an\
    \ edge manner, the\nenergy consumed would be greater and it would mean that it\n\
    is needed to spend resources considering the batteries. That is\nwhy, instead\
    \ of trying fog or edge computing paradigms, we\nmust use the cloud computing\
    \ one.\n3. Multiagent Architecture Methodology\nThe main goal of this research\
    \ consists in the design and\ndevelopment of a new and innovative multiagent architec-\n\
    ture based on virtual organizations, capable of managing\nthe information collected\
    \ by wireless sensor networks (e.g.,\nWi-Fi, Bluetooth, ZigBee, GPS, and GPRS)\
    \ for knowledge\ndiscovery and decision making in rural environments. The\nimplementation\
    \ of a prototype of this architecture has been\ndeveloped with Java (64-bits)\
    \ under the Java Agent Develop-\nment framework (JADE). The tests have been performed\
    \ on\na PC server model: PowerEdge R330, CPU: 4 CPUS x Intel\n\x02 Xeon \x02 CPU\
    \ E3-1220 v6 @ 3.00GHz, RAM: 31.83 GB, OS:\nVMware ESXi 6.5, and HDD: 1T.\nWireless\
    \ Sensor networks (WSNs) fall into the cate-\ngory of complex, distributed, interconnected\
    \ and rapidly\nchanging systems. Multiagent systems (MAS) have been\nidentified\
    \ as one of the most suitable artificial intelligence\nparadigms in the development\
    \ of WSNs, since MASs are\nrobust and autonomous in providing formalisms, algorithms,\n\
    and methodologies in satisfying the challenging needs of\nWSNs. Specifically,\
    \ MAS provide adaptiveness, decentralised\ncontrol, large scale, information uncertainty,\
    \ resource bound-\nedness, and physical distribution [23].\nThe proposed multiagent\
    \ platform will be built over the\ncloud computing paradigm to provide better\
    \ flexibility and\nhigher scalability for handling both, small- and large-scale\n\
    projects (e.g., individual homes, large hospitals, or even smart\ncities). Cloud\
    \ Computing can offer a very powerful, reli-\nable, predictable, and scalable\
    \ computing infrastructure for\nrunning multiagent systems by implementing agent-based\n\
    complex applications. These applications can rely on cloud\ncomputing infrastructures\
    \ to access and use vast amounts\nof processors and data. One key feature of software\
    \ agents\nis intelligence to solve complex problems. Such intelligence\ncan be\
    \ obtained through the collaboration of several agents\nrunning in a distributed\
    \ environment. The choice of cloud\ncomputing meets the requirements of MAS, providing\
    \ a\ndistributed environment and ensuring low runtimes and high\nperformance.\n\
    3.1. Multilayer and Multiagent Architecture. This subsection\ndescribes the multilayer\
    \ organization of the multiagent archi-\ntecture proposed in Figure 1. Each layer\
    \ shows an abstraction\nlevel by involving a different degree of gathering and\
    \ process-\ning information. The abstraction level implemented in each\nlayer\
    \ allows it to isolate itself from the responsibilities of its\nneighbouring layers.\
    \ This also makes it possible to decouple\nand reuse system components, giving\
    \ a greater adaptation to\nthe environment. Then, the responsibilities of each\
    \ layer can\nbe described as follows:\n(i) Layer 0: This layer is the physical\
    \ one, in which the\nnetwork of sensors and actuators of the system is\ndeployed.\
    \ Those devices can be based on different\ntechnologies and communication protocols,\
    \ Wi-Fi,\nBluetooth, ZigBee, GPS, GPRS, etc., depending on\nthe characteristics\
    \ of the terrain where the system is\ndeployed.\n(ii) Layer 1: This is the data\
    \ receiving layer, which contains\nthe agents responsible for capturing the information\n\
    from the sensors and routing them to the upper layers\nto transform them into\
    \ a common format defined in\nthe platform. This layer is also responsible for\
    \ routing\nthe orders obtained from the upper layers to the\nactuators.\n(iii)\
    \ Layer 2: This is the data transformation and storage\nlayer. In this layer,\
    \ the data are transformed to a\ndetermined format, depending on the purpose for\n\
    which they will be used. For example, data collected\nfrom sensors need to be\
    \ merged before they are\nanalysed in the upper layers or are requested by\nactuators\
    \ in the physical layer. This layer is also\nresponsible for storing the captured\
    \ data to create a\nhistory for further analysis.\n(iv) Layer 3 (data analysis\
    \ layer): This is the layer where\nknowledge is discovered through the agents\
    \ responsi-\nble for the analysis of the collected information. This\nlayer defines\
    \ agents in charge of performing com-\nputations and applying supervised and unsupervised\n\
    learning techniques. Therefore, this layer makes it\npossible to take decisions\
    \ based on the collected data,\ngiving the most important part of the intelligence\
    \ of\nthe system.\nWireless Communications and Mobile Computing\n5\nCloud management\
    \ layer\nPERSISTENCE\nDEPLOYMENT\nCOMPUTATION\nLAYER 0: Physical layer implementing\
    \ the deployment of\nsensors based on different technologies, Namely, Wi-Fi,\n\
    Bluetooth, ZigBee, GPS, GPRS,...\nLAYER 1: Data receiving layer, agent virtual\
    \ organization\nresponsible for capturing data from sensors and sending\nthem\
    \ to be processed by other virtual organizations.\nLAYER 2: Data transformation\
    \ layer, agent virtual\norganization responsible for transforming data to\ndetermined\
    \ formats, compatible with the architecture.\nLAYER 3: Data analytics layer, agent\
    \ virtual organization of\nknowledge discovery from data gathered in LAYER 2.\
    \ It\ndevelops methods of Supervised and unsupervised learning.\nGathering and\
    \ processing data\nKnowledge discovery process and decision making\nLAYER 4: User\
    \ interface layer, agent virtual organization of\nuser interaction in charge of\
    \ performing the user requests.\nMultilayer and Cloud Computing Architecture\n\
    for Knowledge Discovery from Rural Environments\nFigure 1: Organizational representation\
    \ of the agent-based multilayer architecture proposed for knowledge discovery\
    \ from rural areas. The\narchitecture has been designed under the cloud computing\
    \ paradigm.\n(v) Layer 4: This is the user interface layer, which interacts\n\
    with and fulfils the requests of system users. The rest\nof the layers back up\
    \ this layer to provide services such\nas process and device monitoring, analysis\
    \ of stored\ndata, and information visualization.\n3.2. Architecture Multiagent\
    \ System. The proposed architec-\nture’s multiagent system (MAS) is developed\
    \ based on virtual\norganizations (VOs), which perform previously defined tasks\n\
    in the architecture layers. As shown in Figure 2, several\nlinked VOs and agents\
    \ govern the proposed multiagent\nsystem, performing different roles to meet their\
    \ individual\ngoals that contribute to reaching the common goal of the\nsystem.\
    \ Each VO consists of a set of agents with specific roles\nwithin the organization.\
    \ Agents perform their tasks/roles and\ncollaborate with other agents from the\
    \ VO to achieve the\nobjectives of the organization. In addition, the introduced\n\
    MAS responds to the needs of each layer given in Figure 1;\nit has also been adapted\
    \ to manage and/or optimize the water\nflow in automatic irrigation systems for\
    \ crops. Thus, the aim\nof applying the MAS illustrated in Figure 2 to crop irrigation\n\
    systems is to incorporate intelligence into the irrigation\nprocess, allowing\
    \ the minimisation of water consumption.\nBelow, the roles of the agents and of\
    \ MAS VOs are described:\n(i) Manager agent (MA): This agent acts as a mediator\n\
    between VOs and agents defined in the MAS, and it is\nresponsible for coordinating\
    \ the operations between\nthem. The MA is primarily responsible for the man-\n\
    agement of agents that are encompassed within it.\nTherefore, it allows for the\
    \ creation and management\nof the life cycle of an organization or agent.\n(ii)\
    \ Heterogeneous data supervisor agent (HDMA): This\nagent handles communication\
    \ between the DRVO\nand DTVO organizations. Thus, HDMA receives all\nheterogeneous\
    \ data (data from different sensors have\ndifferent formats) collected by the\
    \ DRVO organi-\nzation and sends them to a specific agent in the\n6\nWireless\
    \ Communications and Mobile Computing\nTransformation agents of data formats\n\
    Data\nformat #1\nData\nformat #2\nData\nformat #n\nData capture agent #p\n(DCA)\n\
    Heterogeneous data\nsupervisor agent (HDMA)\nData capture agent #1\n(DCA)\nMulti-agent\
    \ System for the Control of Irrigation Systems in Crops\nManager Agent\nMonitoring\
    \ agent\n(MA)\nData analysis agent\n(DAA)\nInterface Agent\n(IA)\nUser interaction\
    \ VO\n(UIVO)\nData translator VO (DTVO)\nData routing VO\n(DRVO)\nDB#m\nDB#1\n\
    DB#2\nDatabases management system\nDATA\nIrrigation control\ndevice\nGateway\n\
    device\nWireless sensor\nnetworks (WSNs)\nKnowledge discovery VO\n(KDVO)\nCBR\
    \ agent\nCalculation agent\n(CA)\nKnowledge manager\nagent (KMA)\nMachine learning\
    \ agent\n(MLA)\nUnsupervised learning\nagent (ULA)\nKnowledge base\nKnowledge\
    \ base\nKnowledge base\nKnowledge base\n#1\n#3\n#m\nStorage of cases and their\
    \ solutions\n#2\nIrrigation manager\nagent (IMA)\nSystem users\nSensor field\n\
    Figure 2: Flowchart of the agent virtual organizations integrating the multiagent\
    \ system for the control of irrigation in rural areas, such as\ncrops.\nDTVO organization,\
    \ which will convert the received\ndata into an internal common format and store\n\
    them in the corresponding database for their later\nretrieval. HDMA is also responsible\
    \ for providing\ndata (through the MA agent), in an indicated format,\nfrom the\
    \ previous VOs to the rest of entities in the\nMAS.\n(iii) Irrigation manager\
    \ agent (IMA): This agent manages\nthe automatic irrigation system in crops. This\
    \ agent\nconverts the results given by the KDVO organi-\nzation into an action\
    \ that is to be performed by\nthe irrigation control device. To do this, each\
    \ data\nanalysis result from KDVO is encoded to a bit\nsequence, which is interpreted\
    \ as an action or set\nof actions that are to be performed by the coupled\nirrigation\
    \ system. Such actions may be to start or stop\nwatering, increase or decrease\
    \ the water flow for a\ndetermined area of the crop, irrigate only a specified\n\
    number of crop areas, etc. In addition, this agent can\ncommunicate the activities\
    \ the irrigation system is\nperforming at any time, i.e., the activity that is\
    \ being\nperformed.\n(iv) UIVO virtual organization: This organization inter-\n\
    acts with the system users through a system interface\n(agent IA) where the user\
    \ can make requests in\nrelation to the activities being performed on the\ncrop,\
    \ obtain or analyse information from historical\ndata stored on the database,\
    \ and monitor sensors of\nthe crop or of a crop area. For such purposes, MA\n\
    and DAA agents communicate with the remaining\nentities (through the manager agent)\
    \ of the MAS to\nperform the tasks requested by users. Meanwhile, the\nMA agent\
    \ (in UIVO) starts the monitoring process\nthrough the DRVO organization and the\
    \ manager\nand HDMA agents. Also, the DAA agent starts the\nprocess of intelligent\
    \ analysis of the historical data by\nrunning the manager and HDMA agents along\
    \ with\nthe KDVO and DTVO organizations.\nWireless Communications and Mobile Computing\n\
    7\n(v) DRVO virtual organization: This VO groups the\nagents responsible for gathering\
    \ sensor data and is\ncomposed of an agent set, called DCAs (data capture\nagents).\
    \ Each DCA agent captures data from a sensor\ntype, so each agent is designated\
    \ for obtaining data\nfrom a particular sensor type, so that each agent\nmanages\
    \ several sensors of the same type and each\nagent is specialised in one type\
    \ of sensor. In addition\nto information gathered on the environmental fac-\n\
    tors measured by sensors, information such as crop\nidentifier, sensor, and area\
    \ where the sensor is located\nare also included. Note that the proposed architecture\n\
    and MAS have been designed to manage more than\none crop at a time.\n(vi) DTVO\
    \ virtual organization: This VO groups the\nagents that transform data from one\
    \ format into\nanother. Since data obtained from sensors in crops\nare heterogeneous,\
    \ it is necessary to convert such data\nto a common format that can be used by\
    \ the MAS.\nBasically, it is about converting the captured data\ninto the internal\
    \ structure of the database where the\nMAS implements and achieves the inverse\
    \ operation\nto such a conversion (i.e., from the database to\nanother format)\
    \ when it is requested. DTVO is also in\ncharge of storing converted data in the\
    \ corresponding\ndatabase and running queries on them. Each data\nformat agent\
    \ in this VO is an expert in one or more\nconversions of data formats. Note that\
    \ each database\nassociated with these agents corresponds to a different\ncrop,\
    \ in case the system manages more than one crop.\nFinally, DTVO is important for\
    \ the MAS because\nof the great number of heterogeneous data gathered\nfrom sensors.\n\
    (vii) KDVO virtual organization: This VO provides the\nMAS with intelligence by\
    \ incorporating agents based\non supervised and unsupervised learning. Thus,\n\
    KDVO oversees the knowledge discovery process\nfrom historical data which are\
    \ obtained from the\nsensors deployed in crops and stored in their corre-\nsponding\
    \ database. This allows us to find patterns in\nthe data and predict their behaviors\
    \ under different\ncircumstances. KDVO consists of five related agents\nas explained\
    \ below:\n(i) KMA agent: This agent provides the infor-\nmation needed by the\
    \ rest of agents of the\norganization to perform their tasks, so that\nKMA is\
    \ the link between external entities and\nthe VO; moreover, it determines the\
    \ agents to\nused and who will collaborate to solve data\nanalysis requests. Thus,\
    \ not all the agents of\nthe organization are used in a data analysis\nprocess\
    \ and the selection of the agents to be\nused depends on the type of presented\
    \ problem.\nFinally, KMA is also responsible for formatting\nthe collected data\
    \ to a dataset that can be\ngiven as input to the remaining agents of the\nVO.\n\
    (ii) CA agent: This agent collaborates with the rest of\nagents of the VO by providing\
    \ complex compu-\ntations from the data. CA applies predetermined\nformulas (statistical\
    \ computation) to collected\ndata such as temperature, relative humidity, and\n\
    CO2, to figure out the needs of the crop. One\nof the aims pursued by the formulas\
    \ above is to\nreach a precision irrigation and fertigation, as\nwell as disease\
    \ and insect pest management. But\nCA is only a part of the whole learning process\n\
    that allows knowledge discovery.\n(iii) ULA agent: This is the unsupervised learning\n\
    agent, which implements algorithms to be run\non unlabeled datasets. ULA is useful\
    \ when data\nhave not been classified into different groups,\nfor which a decision\
    \ must be made. This agent\nincludes different clustering algorithms such as,\n\
    Agnes, Diana, and Eisen [50]. These algorithms\nare applied to group similar areas\
    \ based on\nvalues gathered from the sensors located in\ndifferent areas of the\
    \ crop and make decisions\naccordingly. Note that a given crop area is\nidentified\
    \ by the values reported by its sen-\nsors. Hence, each area defines several sensor\n\
    groups of the same type. This way, each area\nis represented by an n-tuple (a\
    \ vector), where\neach component has a mean environmental\nvalue computed from\
    \ sensors of the same type.\nThus, the clustering algorithms group vectors\nstanding\
    \ for the features of each area of the crop.\n(iv) MLA agent: This agent performs\
    \ machine learn-\ning strategies when data are labeled to find\npatterns. This\
    \ agent builds classifiers whose pre-\ndiction is used in decision making or converted\n\
    to an action carried out in the crop. The above\nmeans that the resources used\
    \ in crops are\noptimized. This agent develops a Support Vec-\ntor Machine (SVM),\
    \ Artificial Neural Network\n(ANN) and naive Bayes classifier [51].\n(v) CBR agent:\
    \ This agent performs case-based\nreasoning and similarly to the agent above it\
    \ is\nconvenient for situations where there is a set\nof cases and experience\
    \ in decision making to\nsolve a particular type of problems. Based on\npast experience,\
    \ CBR retrieves the most similar\ncase to the one to solve and adapt the solution\
    \ to\nsolve the new case. The new case and its solution\nare stored in the corresponding\
    \ knowledge base\nwhich will be used in the future to solve new\nproblems. For\
    \ the case that concerns us, a\ncase is represented as a value n-tuple being\n\
    environmental factor captured from sensors\nlocated in different areas of a crop.\
    \ A case-\nsolution means an action to be performed in\nthe crop like irrigation,\
    \ fertigation, and disease\nand insect pest management, among others. In\ngeneral,\
    \ a solution to a case means a decision\nmaking on the target rural area. Furthermore,\n\
    8\nWireless Communications and Mobile Computing\nthe Euclidean distance is used\
    \ by default to\nrecover similar cases from knowledge base. Note\nthat the CBR\
    \ agent manages a knowledge base\nfor each crop, if needed.\nFinally, consider\
    \ that not all agents in this VO must be used in\na case study. Agents to be used\
    \ as well as their collaboration\nto solve a case study depend on the characteristics\
    \ imposed\nby the case study.\nA cloud system has been employed, as it allows\
    \ us to\napproach in real time, to adapt the response in real time\nand the context\
    \ of the case study, although edge computing\nmay be a more suitable way to optimize\
    \ processes, reducing\nlatencies, and consumption of less bandwidth [52]. However,\n\
    our system sends all data to the cloud at all times, immediately\naccessing the\
    \ results of the analysis and evaluation of the\nstatus of all these sensors and\
    \ devices. Note that although\nthe proposed architecture does not develop a complete\
    \ Big\nData system, some of the Big Data features are present in\nthe different\
    \ VOs. Features such as data capture in DRVO,\ndata storage with different formats\
    \ in DTVO, intelligent\ndata analysis through KDVO, and visualization and querying\n\
    in UIVO are key to define an architecture following the\nprinciples of Big Data\
    \ analytics. Thus, our proposal has\ndeveloped the basis to manage in the future,\
    \ volume, variety,\nand velocity in generated data.\n4. Case Study on Irrigation\
    \ in Corn Crops\nThis section details how the presented architecture adapts\n\
    to efficient management of agricultural environments. The\narchitecture adapts\
    \ to factors that change frequently (weather\nconditions) and have a critical\
    \ impact on the development\nof crops. Because the architecture is agent-based,\
    \ it has\nfeatures such as self-adaptation to dynamic environments,\nwhich allows\
    \ us to manage data from a variety of sources,\nextract knowledge, learn from\
    \ previous actions, and make\ndecisions within the context in which the system\
    \ is deployed.\nThe architecture monitors the factors that impact the crops’\n\
    watering needs; by controlling the irrigation system it covers\nthe hydrological\
    \ part and at the same time optimizes the use\nof water in crop irrigation.\n\
    4.1. Description of the Corn Crop. This subsection details\nthe scenario in which\
    \ the architecture based on virtual\nagent organizations has been implemented.\
    \ The architecture\nhas been deployed on an agricultural land of 40ha used\nfor\
    \ the cultivation of corn in the province of Salamanca,\nSpain (Table 1). This\
    \ allowed us to measure the architecture’s\neffectiveness in terms of adaptation\
    \ to the context, data\nmanagement, analysis, and optimization decisions in the\n\
    process of irrigating the crop. The surface of the crop was\ndivided into two\
    \ parts, one in which the corn will be\ntraditionally cultivated by irrigation\
    \ with pivot (control crop)\nwhile the other part involves irrigation with pivot\
    \ but the\nsystem will be managed through our platform (test crop).\nThe corn\
    \ crop is characterized by being a short-cycle crop\nand with a variable water\
    \ demand during the growth stage.\nThe crop surface was loose and aired at the\
    \ time of cultivation,\nTable 1: Geological characteristics of the corn crop in\
    \ the case study.\nCultivation area\nSize (ha)\n20\nSurface texture (0 - 30cm)\n\
    Sandy loam\nField apparent density (g/cm3)\n1.50\nField capacity (%)\n6\nPoint\
    \ withering (%)\n2\nProduction (kg/ha 14% humidity)\n16044\nProductive index (%)\n\
    116.5\nEdwards & Berry test (\U0001D6FC=0.05)\na\nTable 2: Characteristics of\
    \ the Pioneer P0837 corn variety used for\nsilage production.\nCorn Pioneer P0837\n\
    FAO cycle\n500 (116-120 days)\nInitial stage (days)\n20\nDevelopment stage (days)\n\
    35\nMid-season stage (days)\n40\nLate season stage (days)\n30\nSeparation between\
    \ rows (cm)\n70\nSeparation between plants (cm)\n16-20\nRoot depth (cm)\n0.7\n\
    Soil insecticide\nNo\nHerbicide\nSPADE 1.75 l/ha\nFertilizer\nBackground; 750kg/ha\
    \ 8-10-20\nInsecticide in vegetation\nNo\nwith a high composition of nutrients.\
    \ In the case study, the\nPioneer P0837 model of the Pioneer Hi-Bred-FAO 500 cycle\n\
    marketer was used. In Table 2, we can see the rest of the\ncharacteristics of\
    \ the crop.\nThe ideal temperature for the growth of the corn crop\nis between\
    \ 25 and 30∘C. It needs a lot of sunlight and in\nhumid climates its performance\
    \ is lower. For germination\ntaking place in the seed, the temperature must be\
    \ between 15\nand 20∘C. For the fructification stage, temperatures of 20 to\n\
    32∘C are needed. Temperatures below 8∘C and above 30∘C can\ncause serious problems\
    \ for the crop due to poor absorption of\nmineral nutrients and water.\n4.2. Description\
    \ of the Irrigation. The traditional method\nof watering crops was called flood\
    \ irrigation. Since a few\nyears, this method has been replaced by drip irrigation.\n\
    However, automotive irrigation has many advantages over\ndrip irrigation because\
    \ it is more efficient; it covers long\ndistances and adapts to the plot and above\
    \ all; it allows\nautomating the irrigation process. This case study uses a pivot\n\
    that has a circular displacement, so the distribution of water is\nvery uneven\
    \ along the side: little water is needed at the centre,\nbeing further away from\
    \ the centre leads to the requirement\nof more water as there are more square\
    \ meters to cover. The\ntowers are moved by small electric motors (0.5-1.5 HP)\
    \ at very\nslow and adjustable speed. While the machine is advancing,\nirrigation\
    \ is taking place. Then, the pivot used in the corn\nWireless Communications and\
    \ Mobile Computing\n9\n55m\n14m\nFigure 3: Structure of the pivot used in the\
    \ presented case study.\ncrop (see Figure 3) consists of 3 towers of 55 meters\
    \ and\nan overhang of 14 meters with a high-speed motor of 1.5HP\nat 86rpm at\
    \ 60Hz that moves at 2.3m/min. The end-gun is\nlocated at the tip of the overhang\
    \ with a section of 127, and\nthe sprinklers are rotor type, with a ground clearance\
    \ height\nof 4.40m. The system has a 52,000l sprinkler chart to cover\nthe needs\
    \ of a 20ha land.\nThe pivot irrigation system is automated by the IMA\nagent.\
    \ This agent makes decisions based on the information\ncollected from the WSN\
    \ and sends commands to the irri-\ngation control device. The deployed WSN allows\
    \ the agents\nfrom the DRVO VO to collect the data necessary to determine\nthe\
    \ amount of water the crop needs and to command the\npivot to move and irrigate.\
    \ WSN sensors collect temperature,\nhumidity, wind, height, or light hours temperature.\
    \ These\nparameters influence the water needs of maize and allow\nthe architecture\
    \ to adjust irrigation and in this way optimize\nwater consumption. When temperatures\
    \ are high, plants will\nabsorb more water from the soil, as perspiration increases.\n\
    The corn crop that is at sea level needs more water because the\nsoil in which\
    \ it grows is warmer than that of a crop growing\nat higher altitudes. Ambient\
    \ humidity provides the amount\nof actual water vapour contained in the air and\
    \ the amount\nof water vapour it would need to contain to saturate it at the\n\
    same temperature. Wind causes water to be lost or the land to\ndry faster.\nTo\
    \ control the above issues, the KDVO virtual organi-\nzation is in charge of finding\
    \ out how much water a crop\nloses through evapotranspiration, ETc. This amount\
    \ of water\nis defined as the crop’s water requirement and it must be\nsupplied.\
    \ The CA agent calculates the water lost by ETc evap-\notranspiration using the\
    \ climatic parameters (temperature,\nhumidity, wind, precipitation, and solar\
    \ radiation). To this\nend, the Penman Monteith [53] method was used in the\n\
    architecture to determine the evapotranspiration rate, ETo.\n\U0001D438\U0001D447\
    \U0001D450 = \U0001D438\U0001D447\U0001D45C ∗ \U0001D43E\U0001D450\n(1)\nwhere\
    \ \U0001D438\U0001D447\U0001D450 is the evapotranspiration of the test crop (in\n\
    mm/day), \U0001D438\U0001D447\U0001D45C is the evapotranspiration of the control\
    \ crop\n(in mm/day), and \U0001D43E\U0001D450 is the coefficient of the crop (in\
    \ the case\nof maize it is 0.40 in initial period, 1.15 in mid-season, and\n0.70\
    \ in total [54]).\n\U0001D438\U0001D447\U0001D45C = \U0001D43E\U0001D45D\U0001D438\
    \U0001D45D\U0001D44E\U0001D45B\n(2)\nwhere \U0001D438\U0001D447\U0001D45C is the\
    \ control evapotranspiration (in mm/day),\nKp is the corduroy coefficient, and\
    \ \U0001D438\U0001D45D\U0001D44E\U0001D45B is the evaporation\nof Class A Pan\
    \ (in mm/day) [55]. In addition to the plant's\nwater requirements due to evapotranspiration\
    \ losses, it is\nnecessary to calculate the net water requirements of the\ncrop\
    \ (Nn). To optimize the water used in irrigation, the\nsystem must consider the\
    \ level of precipitation. Rain allows\nreducing the amount of water used by the\
    \ pivot. Where Pe\nis efficient precipitation, architecture has considered 75%\
    \ of\nprecipitation to be effective precipitation:\n\U0001D441\U0001D45B = \U0001D438\
    \U0001D447\U0001D45C ∗ days of the month − \U0001D443\U0001D452\n(3)\nBased on\
    \ the net needs of the crop, the total needs of the\ncrop are calculated; for\
    \ this purpose the system depends on\nthe employed irrigation system. In the present\
    \ case study\nby means of irrigation with pivot sprinklers the value of\nirrigation\
    \ efficiency (Ie) is 80-85% [56, 57].\n\U0001D441\U0001D461 = \U0001D441\U0001D45B\
    \n\U0001D43C\U0001D452\n(4)\nTo calculate the lowest rate of water flow needed\
    \ (Q) to feed\nthe pivot, the net water requirements of the crop (Nt), the\nsurface\
    \ area irrigating the pivot (m2), and the time available\nfor watering (\U0001D461\
    \U0001D453\U0001D464) must be considered. The flow rate can be\nhigher if there\
    \ is a water resource available to obtain a higher\nflow rate (l/s). Although\
    \ this requires greater power from the\npivot, the number of hours required to\
    \ perform the irrigation\nis lower.\n\U0001D444 = \U0001D441\U0001D461 ∗ surface\n\
    \U0001D461\U0001D453\U0001D464\n(5)\nThe architecture calculates the time needed\
    \ for the pivot to\nmake a complete turn using formula (6), where travel speed\n\
    (speed) refers to the displacement of the last pivot tower (the\nfurthest from\
    \ the centre of the pivot), where Lt is the distance\nin meters from the last\
    \ tower to the centre of the pivot.\nTime = 2\U0001D70FL\U0001D461\nV\U0001D452\
    \U0001D459\n(6)\nThe frequency is obtained by dividing the hours per month\navailable\
    \ for irrigation by the time needed to make a turn.\nFrecuency = ℎ\U0001D45D\U0001D45A\
    \U0001D453\U0001D464\nTime\n(7)\nBy means of formula (8), the pluviometry is obtained\
    \ which\nprovides the pivot in each watering. Here Q is the least flow\nrate in\
    \ l/s and Time in \U0001D460. This makes it possible to find flooding\nproblems.\n\
    \U0001D443\U0001D459\U0001D462V\U0001D456\U0001D45C\U0001D45A\U0001D452\U0001D461\
    \U0001D45F\U0001D456\U0001D450 V\U0001D44E\U0001D459\U0001D462\U0001D452\U0001D460\
    \ = \U0001D444 ∗ Time\nSurface\n(8)\n5. Results\nThe corn crop was grown on 25th\
    \ March 2017 and harvested\non 3rd August 2017, with the climatic characteristics\
    \ presented\nin Table 3.\nThe architecture obtained the values of the evapotranspi-\n\
    ration rate shown in Table 4. This allowed us to calculate the\ncrop’s water needs.\n\
    To optimize the use of water in irrigation, the level\nof precipitation must be\
    \ considered. This water reduces\n10\nWireless Communications and Mobile Computing\n\
    Table 3: Data on the climate of the surface area under maize cultivation.\nMarch\n\
    April\nMay\nJune\nJuly\nAugust\nMax. Avg. Temp (∘C)\n14.9\n21\n24\n31\n31\n31\n\
    Min. Avg. Temp (∘C)\n1.7\n3\n9\n13\n11\n11\nRH (%)\n63\n62\n59\n52\n47\n51\nWind\
    \ (km/day)\n288\n264\n240\n192\n192\n168\nAvg. Precipitation (mm)\n21\n38\n47\n\
    29\n11\n12\nSolar radiation (MJ/m2/day)\n14.7\n27.1\n29.4\n31.5\n29.6\n27.8\n\
    Table 4: Evapotranspiration rate (ETo) values according to the\nPenman Monteith\
    \ method for Table 1 values.\nMarch\nApril\nMay\nJune\nJuly\nAugust\nET0\n2.61\n\
    4.39\n5.34\n6.80\n6.69\n6.00\nTable 5: Values of corn crop needs.\nMarch\nApril\n\
    May\nJune\nJuly\nAugust\nET0\n2.61\n4.39\n5.34\n6.80\n6.69\n6.00\nPe\n15.8\n28.5\n\
    35.3\n21.8\n8.3\n9\nKc\n0.30\n0.80\n1.00\n1.20\n0.65\n0.35\nNn\n65.11\n103.2\n\
    131.7\n182.2\n199.09\n171\nNt\n76.6\n121.41\n154.94\n214.35\n234.22\n201.18\n\
    the water used by the pivot. However, not all rainfall is\nuseful; among other\
    \ factors losses are caused by excessive\ndryness, wind, or runoff. For this reason,\
    \ the architecture\nconsidered 75% of precipitation as effective precipitation\
    \ (Pe).\nWith effective precipitation, the system has estimated net\nrequirements\
    \ (Nn) for maize in mm/month. The architecture\ncalculated the amount of water\
    \ that the cultivated area (Nn)\nhas to receive in order to satisfy the needs\
    \ of the plants\nand have the maximum possible production, insofar as it\ndepends\
    \ on the water. In calculating net requirements, it was\nconsidered that the case\
    \ study uses a central pivot irrigation\nsystem, which has an efficiency ratio\
    \ of 85%. In Table 5 we can\nsee the needs of the corn cultivation.\nAs the pivot\
    \ used in the case study has 3 towers with a\nseparation of 55m each and an overhang\
    \ of end-gun (14m),\nthe last tower is located 165m from the central pivot. In\n\
    addition, the pivot moves at a speed of 1.6m/min, so it needs\nas much time as\
    \ follows.\nTime = 2\U0001D70F ∗ 165\n2.3\n= 450.52min = 27031.2\U0001D460\n=\
    \ 7ℎ 30min\n(9)\nIn a full turn, the pivot needs 7 hours and 30 minutes\napproximately\
    \ to water the 20ha. This allows for a sufficient\nnumber of irrigations per month\
    \ to cover for the needs\nof the crop (7). With the time required by the pivot,\
    \ the\nirrigation frequency of the pivot and the minimum flow rate\nare calculated.\
    \ To calculate the least flow rate feeding the\npivot, attention is paid to the\
    \ needs of the maize crop, the area\nunder cultivation, and the time available\
    \ for irrigation (value\nset at 18h), according to formula (5).\nThe pivot has\
    \ used 1002.06mm (1002.06l/m2-10020.6m3/\nha) over the time the corn crop was\
    \ cultivated, as shown in\nTable 6. These results were obtained with the traditional\
    \ pivot\nirrigation system.\nThe following are the changes brought about by the\n\
    architecture designed to achieve savings in the amount of\nwater used to irrigate\
    \ the crop. As shown in Figure 4, the\ngoal of optimizing the irrigation system\
    \ is to identify the\ncrop areas with greater and lesser irrigation needs; these\
    \ are\nidentified by the multiagent system (MAS) and the irrigation\nsystem supplies\
    \ water to these areas. Since each area is\ncharacterized by distinct features,\
    \ a set of different types of\nsensors is deployed in each one, in order to measure\
    \ different\nsoil, plant, and environmental parameters. Then, each area in\nthe\
    \ figure is identified by the MAS through a vector of values\ngiven by the sensors.\
    \ Once the feature values are obtained\nfor each area of the crop, the Agnes clustering\
    \ algorithm\n(Euclidean distance used as a metric in the data) is run by\nthe\
    \ MAS (KDVO virtual organization) to build similar area\nclusters. KDVO runs the\
    \ ULA agent by passing a dataset\nwith the feature of each area of the crop. The\
    \ ULA agent\nruns the Agnes clustering algorithm to identify different crop\n\
    subtypes; in this case, two subtypes of crops (irrigation and\nnonirrigation)\
    \ have been identified for all areas given in the\ninput dataset. Therefore, the\
    \ clustering algorithm will find\ntwo area groupings (clusters) with different\
    \ features: one\ngrouping may show that its areas need to be irrigated with\n\
    less or more water, whereas the other grouping can indicate\nthat they do not\
    \ require any irrigation. Then, once the areas\nhave been classified into two\
    \ groups (or more if needed),\nthis result is sent to the IMA agent through the\
    \ manager\nagent. The IMA agent encodes the result-clustering into a bit\nsequence\
    \ (a binary number), which associates each area of\nthe crop with its need for\
    \ irrigation. The IMA agent sends the\nbit sequence to the irrigation control\
    \ device, which interprets\nsuch a sequence as an order that becomes an irrigation\
    \ action\nfor the crop.\nThus, the goal of detecting similar area clusters is\
    \ to\nmanage and optimize the irrigation system. The MAS clusters\nsimilar areas\
    \ (in this case study, two types of area clusters) of\nthe crop to optimize the\
    \ water flow per area. In this case study,\nwe have selected two clusters, identifying\
    \ the areas that need\nmore or less water. Thus, the MAS builds a binary number\n\
    whose digits are related to each area. “1” means that the\ncorresponding area\
    \ needs irrigation while “0” means that no\nirrigation is necessary for that area.\
    \ Therefore, the irrigation\nsystem will just supply water (less or more water)\
    \ in areas with\nvalue “1” as shown in the irrigation system shown in Figure 4.\n\
    Wireless Communications and Mobile Computing\n11\nTable 6: Irrigation requirements\
    \ for each month.\nMarch\nApril\nMay\nJune\nJuly\nAugust\nQ (l/s)\n7.62\n12.49\n\
    15.43\n22.05\n23.32\n20.69\nFrequency (number of irrigations)\n74.4\n72\n74.4\n\
    72\n74.4\n72\nPluviometric values per irrigation (mm)\n1.029\n1.68\n2.08\n2.98\n\
    3.15\n2.79\nPluviometric values per month (mm)\n76.55\n120.96\n154.75\n214.56\n\
    234.36\n200.88\nArea 1\n1\n1\n0\n1\nBinary number representing\nAutomatic and\
    \ selective\nAreas of similar features\ndetected by a clustering algorithm\nCenter-pivot\
    \ Irrigation\nsystem\nArea 2\nArea 3\nArea n\nDifferent sensor types\nAgent-based\
    \ Selective Irrigation System\nCROP\nIrrigation (digit 1) and no irrigation\n\
    (digit 0) areas\nirrigation system\n· · ·\n· · ·\n· · ·\n· · ·\n· · ·\n· · ·\n\
    · · ·\nFigure 4: Graphic representation of the kind of crop and irrigation system\
    \ used in the proposed case study. The crop consists of circular\ngrooves where\
    \ the determined number of contiguous grooves forms an area for irrigation.\n\
    Table 7 shows the results of the architecture-controlled\nsurface, managing the\
    \ displacement of the pivot to the area\nspecified by the cluster. The zones marked\
    \ by the cluster are\nthose that indicate to the IMA agent an irrigation action.\n\
    It also allows ULA to learn how to take irrigation actions\nautonomously if they\
    \ meet characteristics that in earlier cases\nhave disclosed that an irrigation\
    \ action is necessary in a\ncertain area.\n6. Conclusions\nThis research work\
    \ presented an architecture based on virtual\norganizations that allows localized\
    \ irrigation using a pivot.\nIt is an innovative approach that makes full use\
    \ of the\nadvantages of pivot irrigation (more economical choice)\nand the advantages\
    \ of localized irrigation (lower water con-\nsumption), eliminating the disadvantages\
    \ of pivot irrigation\n(higher water consumption vs. localized irrigation). The\
    \ use\nof a system of agents in this efficient water management\nproblem allowed\
    \ us to monitor the status of the corn crop\nand coordinate the pivot to irrigate\
    \ in localized areas releasing\nthe necessary amount of water. The hypothesis\
    \ proposed in\nthis study (that the consumption of water used for pivot\nirrigation\
    \ is similar to the amount of water required if\nthe localized irrigation method\
    \ is used) combines a series\nof needs (sensor data collection, fusion of information,\n\
    information processing, and decision making, among others)\nthat makes it necessary\
    \ to develop an architecture based\non an organization of virtual agents which\
    \ controls all the\nparameters that influence the irrigation decision (temper-\n\
    ature, humidity, wind, radiation, precipitation, soil salinity,\netc.) in a crop\
    \ by means of a WSN.\nAgent-based virtual organizations use data from the\nsensor\
    \ network deployed in the area of the case study crop.\nThe results showed that\
    \ the use of a VO MAS system was\nessential for optimizing the water used in crop\
    \ irrigation. The\npossibility of programming the pivot to irrigate allows the\n\
    VO MAS to send the architecture’s orders to the irrigation\nsystem, with the aim\
    \ of optimizing the amount of water used\nand the frequency of irrigation according\
    \ to the climatic\n12\nWireless Communications and Mobile Computing\nTable 7:\
    \ Irrigation requirements for each month, managed by the VOs of MAS architecture.\n\
    March\nApril\nMay\nJune\nJuly\nAugust\nQ (l/s)\n7.62\n12.49\n15.43\n22.05\n23.32\n\
    20.69\nFrequency (number of irrigations)\n76.8\n63\n75\n73\n66\n59\nAvg. Pluviometric\
    \ values per irrigation (mm)\n0.90\n1.70\n1.74\n2.50\n3.29\n3.06\nPluviometric\
    \ values per month (mm)\n69.58\n107.65\n130.60\n182.80\n197.79\n180.79\ncharacteristics.\
    \ From the results of the case study, we can\nsee that the performance of the\
    \ system allowed obtaining a\nreduction of 12.68% with respect to the crop area\
    \ that was\nmade by pivot but was not controlled by the VO MAS. Since\nthe percentage\
    \ was higher than 11%, we can deduce that\nthe MAS VOI achieves similar saving\
    \ to localized irrigation.\nHowever, MAS VOI does not entail the disadvantages\
    \ that\nlocalized irrigation does, for example, the difficulties in\nhaving to\
    \ deploy a distribution network in each harvest, the\ndifficulties when using\
    \ machinery on the surface of the crop,\nand the complication of deploying it\
    \ in large areas.\nFinally, automotive irrigation was used thanks to the\npossibility\
    \ of automating irrigation. It was even possible to\nirrigate only certain areas\
    \ of the crop surface if the architec-\nture decided so, according to the collected\
    \ data. Although\nlocalized irrigation consumes 11% less than automotive irri-\n\
    gation according to the literature, the fact that automotive\nirrigation was managed\
    \ by the architecture allowed us to\nobtain a higher optimization percentage.\
    \ Complementing\nthe above, we want to stress that, due to the ability of the\n\
    proposed architecture and its multiagent system to adapt and\nbe extensible, it\
    \ can be applied to other types of crops and\nwith a different geometry.\nData\
    \ Availability\nDue to privacy policies the authors were not allowed to\ndisclose\
    \ the data used in the study since this reveals the char-\nacteristics of the\
    \ cultivation of the collaborating company.\nConflicts of Interest\nThe authors\
    \ declare that they have no conflicts of interest.\nAuthors’ Contributions\nAlfonso\
    \ Gonz´alez-Briones and Jos´e A. Castellanos-Garz´on\ndid the review of the state\
    \ of the art and designed the proposal\nunder the supervision of Javier Prieto\
    \ and Juan M. Corchado.\nYeray Mezquita Mart´ın wrote the first version of the\
    \ paper\nand the architecture. Javier Prieto and Juan M. Corchado\nformalised\
    \ the problem and reviewed the work. All authors\nread and approved the final\
    \ manuscript.\nAcknowledgments\nThis work was developed as part of “MOVIURBAN:\
    \ M´aquina\nSocial para la Gesti´on Sostenible de Ciudades Inteligentes:\nMovilidad\
    \ Urbana, Datos Abiertos, Sensores M´oviles”, ID\nSA070U 16, project cofinanced\
    \ by Junta Castilla y Le´on,\nConsejer´ıa de Educaci´on, and FEDER funds. The\
    \ research of\nAlfonso Gonz´alez-Briones was cofinanced by the European\nSocial\
    \ Fund (Operational Programme 2014–2020 for Castilla\ny Le´on, EDU/128/2015 BOCYL).\n\
    References\n[1] B. Rashid and M. H. Rehmani, “Applications of wireless sensor\n\
    networks for urban areas: A survey,” Journal of Network and\nComputer Applications,\
    \ vol. 60, pp. 192–219, 2016.\n[2] D. Li, J. Cao, and Y. Yao, “Big data in smart\
    \ cities,” in Science\nChina Information Sciences, vol. 58, p. 12, China Information\n\
    Sciences, 2015.\n[3] L. D. Xu, W. He, and S. Li, “Internet of things in industries:\
    \ a\nsurvey,” IEEE Transactions on Industrial Informatics, vol. 10, no.\n4, pp.\
    \ 2233–2243, 2014.\n[4] C. S. Nandyala and H.-K. Kim, “From cloud to fog and IoT-\n\
    based real-time U-healthcare monitoring for smart homes and\nhospitals,” International\
    \ Journal of Smart Home, vol. 10, no. 2,\npp. 187–196, 2016.\n[5] A. Holzinger,\
    \ C. R, M. Ziefle, and C. R¨ocker, “From smart health\nto smart hospitals. In\
    \ health,” in From smart health to smart\nhospitals. In Smart health, p. 20, Springer,\
    \ Cham, 2015.\n[6] A. Gonzßlez-Briones, J. Prieto, De. La Prieta, F. E. Herrera-\n\
    Viedma, J. M. Corchado, and A. Gonz´alez-Briones, “Energy\nOptimization Using\
    \ a Case-Based Reasoning Strategy,” Sensors,\nvol. 18, no. 3, p. 865, 2018.\n\
    [7] D. Jiang, Z. Xu, W. Li, and Z. Chen, “Network coding-\nbased energy-efficient\
    \ multicast routing algorithm for multi-\nhop wireless networks,” The Journal\
    \ of Systems and Software, vol.\n104, pp. 152–165, 2015.\n[8] G. Hackmann, W.\
    \ Guo, G. Yan, Z. Sun, C. Lu, and S. Dyke,\n“Cyber-physical codesign of distributed\
    \ structural health mon-\nitoring with wireless sensor networks,” IEEE Transactions\
    \ on\nParallel and Distributed Systems, vol. 25, no. 1, pp. 63–72, 2014.\n[9]\
    \ D. I. Tapia, R. S. Alonso, ´O. Garcia, J. M. Corchado, and J.\nBajo, “Wireless\
    \ sensor networks, real-time locating systems and\nmulti-agent systems: the perfect\
    \ team,” in Proceedings of the 16th\nInternational Conference of Information Fusion\
    \ (FUSION ’13),\npp. 2177–2184, Istanbul, Turkey, July 2013.\n[10] F. Shrouf and\
    \ G. Miragliotta, “Energy management based on\nInternet of Things: Practices and\
    \ framework for adoption in\nproduction management,” Journal of Cleaner Production,\
    \ vol.\n100, pp. 235–246, 2015.\n[11] S. F. Fang, L. D. Xu, Y. Q. Zhu et al.,\
    \ “An integrated system for\nregional environmental monitoring and management\
    \ based on\ninternet of things,” IEEE Transactions on Industrial Informatics,\n\
    vol. 10, no. 2, pp. 1596–1605, 2014.\n[12] S. Sicari, A. Rizzardi, L. A. Grieco,\
    \ and A. Coen-Porisini,\n“Security, privacy and trust in Internet of Things: the\
    \ road\nahead,” Computer Networks, vol. 76, pp. 146–164, 2015.\nWireless Communications\
    \ and Mobile Computing\n13\n[13] S. Mumtaz, A. Alsohaily, Z. Pang, A. Rayes, K.\
    \ F. Tsang, and\nJ. Rodriguez, “Massive Internet of Things for Industrial Appli-\n\
    cations: Addressing Wireless IIoT Connectivity Challenges and\nEcosystem Fragmentation,”\
    \ IEEE Industrial Electronics Maga-\nzine, vol. 11, no. 1, pp. 28–33, 2017.\n\
    [14] A. R. Sadeghi, C. Wachsmann, and M. Waidner, “Security\nand privacy challenges\
    \ in industrial internet of things,” in\nProceedings of the In of the 52nd annual\
    \ design automation\nconference, p. 54, 2015.\n[15] V. Sivaraman, H. H. Gharakheili,\
    \ A. Vishwanath, R. Boreli,\nand O. Mehani, “Network-level security and privacy\
    \ control\nfor smart-home IoT devices,” in Proceedings of the IEEE 11th\nInternational\
    \ Conference on Wireless and Mobile Computing,\nNetworking and Communications\
    \ (WiMob), pp. 163–167, IEEE,\nOctober 2015.\n[16] M. Haenggi, “Mobile sensor-actuator\
    \ networks: opportunities\nand challenges,” in Proceedings of the 2002 7th IEEE\
    \ Inter-\nnational Workshop on Cellular Neural Networks and Their\nApplications\
    \ (CNNA 2002), pp. 283–290, IEEE, July 2002.\n[17] D. Estrin, L. Girod, G. Pottie,\
    \ and M. Srivastava, “Instrumenting\nthe world with wireless sensor networks,”\
    \ in Proceedings of the\nIEEE Interntional Conference on Acoustics, Speech, and\
    \ Signal\nProcessing (ICASSP’01), vol. 4, pp. 2033–2036, IEEE, Salt Lake\nCity,\
    \ Utah, USA, May 2001.\n[18] S. Samanta, “An architecture of future forest fire\
    \ detection\nsystem,” International Journal on Recent and Innovation Trends\n\
    in Computing and Communication, vol. 4, no. 8, pp. 139-140,\n2016.\n[19] A. Herutomo,\
    \ M. Abdurohman, N. A. Suwastika, S. Prabowo,\nand C. W. Wijiutomo, “Forest fire\
    \ detection system reliability\ntest using wireless sensor network and OpenMTC\
    \ communica-\ntion platform,” in Proceedings of the 3rd International Conference\n\
    on Information and Communication Technology (ICoICT 2015),\npp. 87–91, IEEE, Indonesia,\
    \ May 2015.\n[20] I. A. T. Hashem, I. Yaqoob, N. B. Anuar, S. Mokhtar, A. Gani,\n\
    and S. Ullah Khan, “The rise of ‘big data’ on cloud computing:\nreview and open\
    \ research issues,” Information Systems, vol. 47,\npp. 98–115, 2015.\n[21] D.\
    \ Zhang, L. T. Yang, M. Chen, S. Zhao, M. Guo, and Y. Zhang,\n“Real-time locating\
    \ systems using active rfid for internet of\nthings,” IEEE Systems Journal, vol.\
    \ 10, no. 3, pp. 1226–1235, 2016.\n[22] S. Alletto, R. Cucchiara, G. Del Fiore\
    \ et al., “An indoor location-\naware system for an IoT-based smart museum,” IEEE\
    \ Internet of\nThings Journal, vol. 3, no. 2, pp. 244–253, 2016.\n[23] J. Barbosa,\
    \ P. Leit˜ao, E. Adam, and D. Trentesaux, “Dynamic\nself-organization in holonic\
    \ multi-agent manufacturing sys-\ntems: The ADACOR evolution,” Computers in Industry,\
    \ vol. 66,\npp. 99–111, 2015.\n[24] A. Gonzßlez-Briones, P. Chamoso, H. Yoe, J.\
    \ M. Corchado,\nand A. Gonz´alez-Briones, “GreenVMAS, Virtual Organization\nBased\
    \ Platform for Heating Greenhouses Using Waste Energy\nfrom Power Plants,” Sensors,\
    \ vol. 18, no. 3, p. 861, 2018.\n[25] A. Kaloxylos, R. Eigenmann, F. Teye et al.,\
    \ “Farm management\nsystems and the Future Internet era,” Computers and Electronics\n\
    in Agriculture, vol. 89, pp. 130–144, 2012.\n[26] R. J. Lehmann, R. Reiche, and\
    \ G. Schiefer, “Future internet and\nthe agri-food sector: State-of-the-art in\
    \ literature and research,”\nComputers and Electronics in Agriculture, vol. 89,\
    \ pp. 158–174,\n2012.\n[27] S. Ramaswamy, “Big Data and The Future of Agriculture,”\
    \ in\nUnited of Food and agriculture, Investing in Science, Securing our\nfuture,\
    \ 2015, http://www.nifa.usda.gov.\n[28] C. N. Verdouw, A. J. M. Beulens, and J.\
    \ G. A. J. van der Vorst,\n“Virtualisation of floricultural supply chains: a review\
    \ from an\ninternet of things perspective,” Computers and Electronics in\nAgriculture,\
    \ vol. 99, pp. 160–175, 2013.\n[29] J. Stafford, “Precision agriculture 7,” in\
    \ Proceeding of the 6th\nEuropean Conference on Precision Agriculture, Wageningen\n\
    Academic Publishers, Wageningen, 2007.\n[30] E. J. Van Henten, D. Goense, and\
    \ C. Lokhorst, “Precision\nagriculture 9,” in Proceedings of the 7th European\
    \ Conference\non Precision Agriculture, Wageningen Academic Publishers,\nWageningen,\
    \ 2009.\n[31] J. G. A. J. Van der Vorst, A. J. M. Beulens, and P. van\nBeek, “Innovations\
    \ in logistics and ICT in food supply chain\nnetworks,” in Innovations in Agri-Food\
    \ Systems, W. M. F. Jongen\nand M. T. G. Meulenberg, Eds., pp. 245–292, Wageningen\n\
    Academic Publishers, Wageningen, 2005.\n[32] A. Sahota, B. Haumann, H. Givens,\
    \ and C. Baldwin, “Eco-\nlabeling and consumer interest in sustainable products,”\
    \ in\nSustainability in the Food Industry, C. J. Baldwin, Ed., pp. 159–\n181,\
    \ Wiley-Blackwell, Ames, 2008.\n[33] L. Ruiz-Garcia and L. Lunadei, “The role\
    \ of RFID in agriculture:\nApplications, limitations and challenges,” Computers\
    \ and Elec-\ntronics in Agriculture, vol. 79, no. 1, pp. 42–50, 2011.\n[34] H.\
    \ Sundmaeker, “Components of Networked Devices,” in\nCuteLoop Deliverable: The\
    \ CuteLoop Concept, pp. 40–42, 2008.\n[35] V. Mattoli, B. Mazzolai, A. Mondini,\
    \ S. Zampolli, and P.\nDario, “Flexible tag datalogger for food logistics,” Sensors\
    \ and\nActuators A: Physical, vol. 162, no. 2, pp. 316–323, 2010.\n[36] M. Ruiz-Altisent,\
    \ L. Ruiz-Garcia, G. P. Moreda et al., “Sensors\nfor product characterization\
    \ and quality of specialty crops—a\nreview,” Computers and Electronics in Agriculture,\
    \ vol. 74, no. 2,\npp. 176–194, 2010.\n[37] R. Reiche, Information Logistics in\
    \ Agri-Food Supply Networks -\nAn Integrated Framework for Business Information\
    \ Services, 2011.\n[38] M. K¨arkk¨ainen, “Increasing efficiency in the supply\
    \ chain for\nshort shelf life goods using RFID tagging,” International Journal\n\
    of Retail & Distribution Management, vol. 31, no. 10, pp. 529–536,\n2003.\n[39]\
    \ D. McFarlane and Y. Sheffi, “The Impact of Automatic Identifi-\ncation on Supply\
    \ Chain Operations,” The International Journal\nof Logistics Management, vol.\
    \ 14, no. 1, pp. 1–17, 2003.\n[40] R. Angeles, “RFID technologies: supply-chain\
    \ applications and\nimplementation issues,” Information Systems Management, vol.\n\
    22, no. 1, pp. 51–65, 2005.\n[41] J. M. Bewley and R. A. Russell, “Reasons for\
    \ slow adoption\nrates of precision dairy farming technologies: evidence from\n\
    a producer survey,” in Proceedings of the First North American\nConference on\
    \ Precision Dairy Management, 2010.\n[42] W.-H. Nam, T. Kim, E.-M. Hong, J.-Y.\
    \ Choi, and J.-T. Kim, “A\nWireless Sensor Network (WSN) application for irrigation\
    \ facil-\nities management based on Information and Communication\nTechnologies\
    \ (ICTs),” Computers and Electronics in Agriculture,\nvol. 143, pp. 185–192, 2017.\n\
    [43] R. Salazar, J. C. Rangel, C. Pinz´on, and A. Rodr´ıguez, “Irrigation\nSystem\
    \ through Intelligent Agents Implemented with Arduino\nTechnology,” ADCAIJ: Advances\
    \ in Distributed Computing and\nArtificial Intelligence Journal, vol. 2, no. 3,\
    \ 2013, Salamanca.\n[44] A. N. Harun, M. R. M. Kassim, I. Mat, and S. S. Ramli,\
    \ “Precision\nirrigation using Wireless Sensor Network,” in Proceedings of\nthe\
    \ 1st IEEE International Conference on Smart Sensors and\nApplication, ICSSA 2015,\
    \ pp. 71–75, Malaysia, May 2015.\n14\nWireless Communications and Mobile Computing\n\
    [45] M. W. van Iersel, M. R. Chappell, and P. A. Thomas, “Optimizing\ngrowth,\
    \ quality,” in Proceedings of the In III International Confer-\nence on Quality\
    \ Management in Supply Chains of Ornamentals\n1131, pp. 57–64, 2015.\n[46] J.\
    \ Gutierrez, J. F. Villa-Medina, A. Nieto-Garibay, and M. A.\nPorta-Gandara, “Automated\
    \ irrigation system using a wireless\nsensor network and GPRS module,” IEEE Transactions\
    \ on\nInstrumentation and Measurement, vol. 63, no. 1, pp. 166–176,\n2014.\n[47]\
    \ W. Difallah, K. Benahmed, B. Draoui, and F. Bounaama, “Linear\nOptimization\
    \ Model for Efficient Use of Irrigation Water,”\nInternational Journal of Agronomy,\
    \ vol. 2017, 2017.\n[48] J. Park, J. H. Choi, Y. J. Lee, and O. Min, “A Layered\
    \ Features\nAnalysis in Smart Farm Environments,” in Proceedings of the\nIn Proceedings\
    \ of the International Conference on Big Data and\nInternet of Thing, pp. 169–173,\
    \ 2017.\n[49] M. Caria, J. Schudrowitz, A. Jukan, and N. Kemper, “Smart\nfarm\
    \ computing systems for animal welfare monitoring,” in\nProceedings of the 40th\
    \ International Convention on Information\nand Communication Technology, Electronics\
    \ and Microelectron-\nics, MIPRO 2017, pp. 152–157, Zagreb, Croatia, May 2017.\n\
    [50] L. Kaufman and P. Rousseeuw, “Finding Groups in Data,” in\nAn Introduction\
    \ to Clustering Analysis, John Wiley & Sons, New\nYork, NY, USA, 2005.\n[51] P.\
    \ Flach, Machine Learning: The Art and Science of Algorithms\nThat Make Sense\
    \ of Data, Cambridge University Press, New\nYork, NY, USA, 2012.\n[52] W. Shi\
    \ and S. Dustdar, “The Promise of Edge Computing,” The\nComputer Journal, vol.\
    \ 49, no. 5, pp. 78–81, 2016.\n[53] K. Beven, “A sensitivity analysis of the Penman-Monteith\
    \ actual\nevapotranspiration estimates,” Journal of Hydrology, vol. 44, no.\n\
    3-4, pp. 169–190, 1979.\n[54] G. Piccinni, J. Ko, T. Marek, and T. Howell, “Determination\n\
    of growth-stage-specific crop coefficients (KC) of maize and\nsorghum,” Agricultural\
    \ Water Management, vol. 96, no. 12, pp.\n1698–1704, 2009.\n[55] A. A. Sabziparvar,\
    \ H. Tabari, A. Aeini, and M. Ghafouri,\n“Evaluation of class a pan coefficient\
    \ models for estimation of\nreference crop evapotranspiration in cold semi-arid\
    \ and warm\narid climates,” Water Resources Management, vol. 24, no. 5, pp.\n\
    909–920, 2010.\n[56] T. A. Howell, “Irrigation efficiency,” in Encyclopedia of\
    \ water\nscience, pp. 467–472, Marcel Dekker, New York, NY, USA, 2003.\n[57] O.\
    \ W. Israelsen, Irrigation principles and practices, John Wiley &\nSons, Chapman\
    \ And Hall, London, UK, 1950.\nInternational Journal of\nAerospace\nEngineering\n\
    Hindawi\nwww.hindawi.com\nVolume 2018\nRobotics\nJournal of\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nHindawi\nwww.hindawi.com\nVolume 2018\n Active and Passive  \nElectronic\
    \ Components\nVLSI Design\nHindawi\nwww.hindawi.com\nVolume 2018\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nShock and Vibration\nHindawi\nwww.hindawi.com\nVolume 2018\nCivil\
    \ Engineering\nAdvances in\nAcoustics and Vibration\nAdvances in\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nHindawi\nwww.hindawi.com\nVolume 2018\nElectrical and Computer \n\
    Engineering\nJournal of\nAdvances in\nOptoElectronics\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nHindawi Publishing Corporation \nhttp://www.hindawi.com\nVolume 2013\n\
    Hindawi\nwww.hindawi.com\nThe Scientific \nWorld Journal\nVolume 2018\nControl\
    \ Science\nand Engineering\nJournal of\nHindawi\nwww.hindawi.com\nVolume 2018\n\
    Hindawi\nwww.hindawi.com\n Journal of\nEngineering\nVolume 2018\nSensors\nJournal\
    \ of\nHindawi\nwww.hindawi.com\nVolume 2018\nInternational Journal of\nRotating\n\
    Machinery\nHindawi\nwww.hindawi.com\nVolume 2018\nModelling &\nSimulation\nin\
    \ Engineering\nHindawi\nwww.hindawi.com\nVolume 2018\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nChemical Engineering\nInternational Journal of\n Antennas and\nPropagation\n\
    International Journal of\nHindawi\nwww.hindawi.com\nVolume 2018\nHindawi\nwww.hindawi.com\n\
    Volume 2018\nNavigation and \n Observation\nInternational Journal of\nHindawi\n\
    www.hindawi.com\nVolume 2018\n Advances in \nMultimedia\nSubmit your manuscripts\
    \ at\nwww.hindawi.com\n"
  inline_citation: '>'
  journal: Wireless Communications and Mobile Computing
  limitations: '>'
  pdf_link: http://downloads.hindawi.com/journals/wcmc/2018/6089280.pdf
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Framework for Knowledge Discovery from Wireless Sensor Networks in Rural
    Environments: A Crop Irrigation Systems Case Study'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jproc.2018.2812836
  analysis: '>'
  authors:
  - O. Andrisano
  - Ilaria Bartolini
  - Paolo Bellavista
  - Andrea Boeri
  - Luciano Bononi
  - Alberto Borghetti
  - Armando Brath
  - G.E. Corazza
  - Antonio Corradi
  - Stefano de Miranda
  - Fabio Fava
  - Luca Foschini
  - Giovanni Leoni
  - Danila Longo
  - Michela Milano
  - Fabio Napolitano
  - Carlo Alberto Nucci
  - Gianni Pasolini
  - Marco Patella
  - Tullio Salmon Cinotti
  - Daniele Tarchi
  - Francesco Ubertini
  - Daniele Vigo
  citation_count: 41
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Journals & Magazines >Proceedings
    of the IEEE >Volume: 106 Issue: 4 The Need of Multidisciplinary Approaches and
    Engineering Tools for the Development and Implementation of the Smart City Paradigm
    Publisher: IEEE Cite This PDF Oreste Andrisano; Ilaria Bartolini; Paolo Bellavista;
    Andrea Boeri; Luciano Bononi; Alberto Borghetti; Armando Brath; Giovanni Emanuele
    Corazza All Authors 38 Cites in Papers 1640 Full Text Views Abstract Document
    Sections I. Introduction II. The Role of ICT Systems III. Integrated Infrastructures
    and Processes: Research at the University of Bologna IV. Sustainable Urban Mobility:
    Research at the University of Bologna V. Sustainable Districts and Urban Environments:
    Research at the University of Bologna Show Full Outline Authors Figures References
    Citations Keywords Metrics Footnotes Abstract: This paper is motivated by the
    concept that the successful, effective, and sustainable implementation of the
    smart city paradigm requires a close cooperation among researchers with different,
    complementary interests and, in most cases, a multidisciplinary approach. It first
    briefly discusses how such a multidisciplinary methodology, transversal to various
    disciplines such as architecture, computer science, civil engineering, electrical,
    electronic and telecommunication engineering, social science and behavioral science,
    etc., can be successfully employed for the development of suitable modeling tools
    and real solutions of such sociotechnical systems. Then, the paper presents some
    pilot projects accomplished by the authors within the framework of some major
    European Union (EU) and national research programs, also involving the Bologna
    municipality and some of the key players of the smart city industry. Each project,
    characterized by different and complementary approaches/modeling tools, is illustrated
    along with the relevant contextualization and the advancements with respect to
    the state of the art. Published in: Proceedings of the IEEE ( Volume: 106, Issue:
    4, April 2018) Page(s): 738 - 760 Date of Publication: 27 March 2018 ISSN Information:
    DOI: 10.1109/JPROC.2018.2812836 Publisher: IEEE I. Introduction The smart city
    paradigm has recently emerged as a revolutionary approach to tackle the challenges
    posed by modern urban areas [1]–[3]. Rapid urbanization, buildings aging, vehicular
    traffic, energy provision, personal safety, and data security are, among others,
    some of the issues that place serious strains on citizens’ quality of life and
    health as well as on the economic and environmental sustainability of human activities.
    The topic is certainly of importance as the population living in urban areas is
    expected to double by 2050 [5]. 1 In this paper, we will deliberately disregard
    health issues as this topic is addressed in the companion paper by Bertini et
    al. [4]. Sign in to Continue Reading Authors Figures References Citations Keywords
    Metrics Footnotes More Like This AI Applications in Smart City Employing Technology
    Adoption Model: Hofstede’s Cultural Perspective 2023 2nd International Conference
    for Innovation in Technology (INOCON) Published: 2023 Modelling Smart Cities Through
    Socio-Technical Systems 2020 IEEE International Smart Cities Conference (ISC2)
    Published: 2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: Proceedings of the IEEE
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: The Need of Multidisciplinary Approaches and Engineering Tools for the Development
    and Implementation of the Smart City Paradigm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agriculture11060475
  analysis: '>'
  authors:
  - Mohammad Nishat Akhtar
  - Abdurrahman Javid Shaikh
  - Aijaz Ahmed Khan
  - Habib Awais
  - Elmi Abu Bakar
  - Abdul Rahim Othman
  citation_count: 29
  full_citation: '>'
  full_text: ">\nagriculture\nReview\nSmart Sensing with Edge Computing in Precision\
    \ Agriculture\nfor Soil Assessment and Heavy Metal Monitoring: A Review\nMohammad\
    \ Nishat Akhtar 1, Abdurrahman Javid Shaikh 2, Ambareen Khan 1, Habib Awais 3\n\
    ,\nElmi Abu Bakar 1,* and Abdul Rahim Othman 4,*\n\x01\x02\x03\x01\x04\x05\x06\
    \a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Akhtar, M.N.; Shaikh, A.J.;\n\
    Khan, A.; Awais, H.; Bakar, E.A.;\nOthman, A.R. Smart Sensing with\nEdge Computing\
    \ in Precision\nAgriculture for Soil Assessment and\nHeavy Metal Monitoring: A\
    \ Review.\nAgriculture 2021, 11, 475. https://\ndoi.org/10.3390/agriculture11060475\n\
    Academic Editor: Raul Morais\nReceived: 8 April 2021\nAccepted: 26 April 2021\n\
    Published: 21 May 2021\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright: © 2021\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nSchool of Aerospace Engineering, Universiti Sains Malaysia, Nibong\
    \ Tebal 14300, Malaysia;\nnishat@usm.my (M.N.A.); khanambareen5@gmail.com (A.K.)\n\
    2\nDepartment of Electrical Engineering, NED University of Engineering and Technology,\n\
    Karachi 75270, Pakistan; arjs@neduet.edu.pk\n3\nDepartment of Textile Engineering,\
    \ National Textile University, Faisalabad 37610, Pakistan;\nhabib.awais07@gmail.com\n\
    4\nDepartment of Mechanical Engineering, Universiti Teknologi PETRONAS, Seri Iskandar\
    \ 32610, Malaysia\n*\nCorrespondence: meelmi@usm.my (E.A.B.); rahim.othman@utp.edu.my\
    \ (A.R.O.)\nAbstract: With the implementation of the Internet of Things, the agricultural\
    \ domain has become\ndata-driven, allowing for well-timed and cost-effective farm\
    \ management while remaining envi-\nronmentally sustainable. Thus, the incorporation\
    \ of Internet of Things in the agricultural domain\nis the need of the hour for\
    \ developing countries whose gross domestic product primarily depends\non the\
    \ farming sector. It is worth highlighting that developing nations lack the infrastructure\
    \ for\nprecision agriculture; therefore, it has become necessary to come up with\
    \ a methodological paradigm\nwhich can accommodate a complete model to connect\
    \ ground sensors to the compute nodes in a\ncost-effective way by keeping the\
    \ data processing limitations and constraints in consideration. In\nthis regard,\
    \ this review puts forward an overview of the state-of-the-art technologies deployed\
    \ in\nprecision agriculture for soil assessment and pollutant monitoring with\
    \ respect to heavy metal in\nagricultural soil using various sensors. Secondly,\
    \ this manuscript illustrates the processing of data\ngenerated from the sensors.\
    \ In this regard, an optimized method of data processing derived from\ncloud computing\
    \ has been shown, which is called edge computing. In addition to this, a new model\n\
    of high-performance-based edge computing is also shown for efﬁcient ofﬂoading\
    \ of data with smooth\nworkﬂow optimization. In a nutshell, this manuscript aims\
    \ to open a new corridor for the farming\nsector in developing nations by tackling\
    \ challenges and providing substantial consideration.\nKeywords: food security;\
    \ precision agriculture; Internet of Things; soil moisture; heavy metal;\nwireless\
    \ sensors; edge computing\n1. Introduction\nThe agricultural sector in developing\
    \ countries has multiple challenges, i.e., if we\nlook at the production side,\
    \ the ﬁrst challenge which the farmer faces is the productivity\nchallenge, as\
    \ it becomes evident that developing countries are very low in productivity,\n\
    i.e., for any crop, the particular developing country could be the highest producer\
    \ but\nat the same time its productivity could be very low. Therefore, crop productivity\
    \ is a\nsigniﬁcant factor which has to be looked at. The second challenge which\
    \ the farmer faces is\nwith respect to climate change, industrial pollution, and\
    \ pest attacks, as they can damage\ncrops substantially. It is deemed necessary\
    \ for the farmer to mitigate those challenges by\nadapting to the latest technologies\
    \ and insurance schemes. The third challenge is related to\nmarket connectivity,\
    \ whereby the farmer produces crops and thus needs to be connected\nto distant\
    \ markets as per the crop production analysis and its subsequent data insights.\n\
    It is essential for the farmers to have all the information on a digital platform\
    \ and there\nshould be seamless trade between different markets and different\
    \ places. However, this\nAgriculture 2021, 11, 475. https://doi.org/10.3390/agriculture11060475\n\
    https://www.mdpi.com/journal/agriculture\nAgriculture 2021, 11, 475\n2 of 37\n\
    connection between farmers and the distant market is nowhere to be seen in developing\n\
    countries. On the other hand, the industry is looking up for exports, which in\
    \ turn need to\nbe streamlined substantially. From the economic perspective of\
    \ the developing country, it is\na boon if more facility in nature and regulatory\
    \ support has to be given for people who are\nlooking to export outside their\
    \ country or who are looking to have a value-added product\nacross the globe.\
    \ Now, this mismanagement in the agricultural sector can potentially lead\nto\
    \ food security risk.\nPrecision Agriculture (PA) is intended to help and maximize\
    \ the development of the\nfarming sector and will also help to ensure food security\
    \ [1]. It is to be highlighted that\nPA is a high-tech farming technology that\
    \ observes, measures, and analyzes farming ﬁelds\nand crops. With the advent of\
    \ PA, on-ﬁeld sensors can provide detailed levels of data\nfor problems of soil\
    \ and weather conditions pertaining to heavy metal toxics and climate\nchange.\
    \ Big data obtained from sensor networks and farm inputs tracking have a signiﬁcant\n\
    role to play to increase farm productivity, reduce environmental impacts, and\
    \ improve\nhuman welfare [2]. By combining artiﬁcial intelligence-based big data\
    \ analytics with sensor\nand image data, an integrated system could be developed\
    \ for the agricultural domain.\nImplementing intensive, high-value, personalized\
    \ management of crops would increase\nboth production and economic performance.\
    \ The aim of this paper is to highlight the\nimportance of smart sensors and high-performance\
    \ computing in protecting stakeholders\nin the agrifood value chain and providing\
    \ them with unlimited access to a large dataset of\nvarious categories in order\
    \ to track their farms. The challenges and consideration for the\nfarming sector\
    \ in developing countries are also highlighted. Figure 1 shows the number of\n\
    articles reviewed in various domains in the proposed manuscript.\nFigure 1. Distribution\
    \ of reviewed articles.\nThe structure of the paper is arranged as follows: The\
    \ ﬁrst section of the paper explains\nthe paper’s scope and the reasoning for\
    \ the proposed study. Section 2 gives an overview of\nfood security by taking\
    \ into consideration the pollution caused by persistent toxics and\nheavy metal.\
    \ In addition to this, Section 2 also highlights the importance of smart farming\n\
    based on IoT. Section 3 gives a detailed overview of the wireless communication\
    \ protocols\nand sensors used in the agricultural domain. Furthermore, Section\
    \ 3 also emphasizes\nthe importance of edge computing and also highlights the\
    \ model of High Performance\nComputing (HPC) on Edge. In addition, Section 3 also\
    \ details the various edge computing\nAgriculture 2021, 11, 475\n3 of 37\nmethodologies\
    \ used by previous researchers in precision agriculture. Section 4 highlights\n\
    the current challenges and considerations for the agricultural sector in developing\
    \ countries.\nFinally, Section 5 presents the conclusion of the proposed review.\n\
    2. Food Security: A Global Challenge in View of Soil Pollutants and Heavy\nMetal\
    \ Toxicants\nOver the next 35 years, the world’s growing population will demand\
    \ more food\nthan mankind has ever produced. However, food security faces a variety\
    \ of issues on\nboth the development and consumption sides, which would necessitate\
    \ further study\nin order to formulate a solution. The food system, on its current\
    \ course, would likely\nabsorb much of the remaining carbon budget if the temperature\
    \ rises by 2 ◦C by the year\n2050 [3]. As a result, it would leave no room for\
    \ other industries, making reaching the\nParis Agreement virtually impossible.\
    \ Due to severe weather conditions, climate change of\nthis magnitude would alter\
    \ what can be grown and worn, as well as the dynamics of pest\nand disease spread.\
    \ Food production shocks will occur, eventually leading to higher food\nprices\
    \ and civil unrest. Agriculture is important, but it consumes 70% of all freshwater,\n\
    resulting in one-third of all greenhouse gas emissions and the loss of biodiversity\
    \ and soil\ndepletion [4,5]. Finding new ways to sustainably produce more food\
    \ on available land will\nbe crucial as agricultural land becomes scarce. This\
    \ necessitates substantial assessment of\nagricultural soil monitoring and mitigating\
    \ the heavy metal pollutants and other toxics\nfrom the soil.\nHeavy metal contamination\
    \ is widely spread across the world, disrupting the at-\nmosphere and thereby\
    \ showing signiﬁcant threats to human health. The reason behind\nheavy metal contamination,\
    \ in general, is the rapid speed of urbanization along with\nindustrialization\
    \ and noticeable land use change in fast-moving developing nations such\nas China\
    \ and India. Post-Industrial Revolution and economic globalization, there has\n\
    been an unprecedented rise in the variety of environmental pollutants, with innumerable\n\
    anthropogenic sources. Therefore, this continuously evolving issue pertaining\
    \ to food\nsecurity has become a serious concern for the world, speciﬁcally its\
    \ inextricable relation to\nthe health of human beings [6,7].\nSeveral dangerous\
    \ heavy metals and metalloids comprising arsenic, cadmium, lead,\nand mercury\
    \ are categorized as non-essential for metabolism. These metals are considered\n\
    to be deleterious in different ways [8,9] and have thus been listed in the top\
    \ 20 list of\nhazardous substances by the United States Environmental Protection\
    \ Agency and the\nRadioactive Substances and Disease Registry Agency (ATSDR) [9,10].\
    \ With respect to\nmetabolic process, heavy metals, like Fe, Zn, Cr (III), and\
    \ Cu are considered to be essential\ncomponents along with enzymes and cytochromes,\
    \ which are inextricably connected to\nthe biota metabolic functioning [9,11].\
    \ With regard to urease, nickel is considered to be an\nimportant component; however,\
    \ it may pose an unnecessary risk to human health [12,13].\nTherefore, with respect\
    \ to the above context, soil–food crops and vegetation ecosystem is a\nwell-laid-out\
    \ example of abiotic–biotic interactions.\nHeavy metal pollution generated from\
    \ energy intensive industries poses a serious\nthreat to the sustenance of soil.\
    \ Apart from the ill effects on human health, heavy metal\nalso puts an adverse\
    \ impact on soil biota through soil microbe interaction and microbial\nprocesses\
    \ [9,14,15]. It also hampers the ecosystem when it comes to beneﬁcial soil in-\n\
    sects [16–18]. It is worth noting that medicinal plants can be used for bioaccumulation\
    \ of\nheavy metals. A prominent example of such a case is the “Paeonia Ostii”\
    \ Chinese medicinal\nplant [19]. Numerous medicinal plants are demonstrated to\
    \ bioaccumulate various heavy\nmetals, i.e., As, Cd, Fe, Pb, Cr, and Cu when grown\
    \ near industrial zones [9,20–23]. It is also\nessential to note that, even in\
    \ the greenhouse ecosystem, vegetation is susceptible to heavy\nmetal such as\
    \ Zn, Pb, Mn, Cu, and Cd due to decreased exposure to illumination [24].\nFor\
    \ a successful technological remedy, it is essential to understand the soil–food\
    \ crop\ntransfer mechanisms. In order to achieve this purpose, this analysis ﬁrst\
    \ discusses the\ndifferent causes of heavy metal contamination in the soil ecosystem\
    \ and its relevance to the\nhealth of human beings. In general, this type of analysis\
    \ gives an overall layout pertaining\nAgriculture 2021, 11, 475\n4 of 37\nto heavy\
    \ metal sources within the agricultural domain which in turn is correlated to\n\
    anthropogenic inﬂuences. It also helps us to provide state-of-the-art information\
    \ regarding\nthe global scenario of heavy metal pollution spanning across different\
    \ continents in the\nagricultural domain. In this regard, the next subsection\
    \ elaborates on the heavy metal\nsources in the soil–crop ecosystem.\n2.1. Heavy\
    \ Metal Sources in Soil–Crop Ecosystems\nIt is evident from numerous studies that\
    \ the source of heavy metals in the agricultural\necosystem is due to industrial\
    \ pollution, sewage sludge, phosphate-based fertilizers, metal\npesticides, and\
    \ contaminated water [9,25–29]. In addition to the mentioned sources of heavy\n\
    metal pollution, it is also essential to understand the impact of anthropogenic\
    \ pollutants, as\nthey pose a risk to the health of human beings through dietary\
    \ intake of contaminated food\ncrops which become polluted either through soil\
    \ or direct atmospheric deposition over the\nsurface of plant leaves [17,30].\
    \ Waste efﬂuents discharged from industries and automobiles\naccumulate in soil,\
    \ thereby causing contamination in the food chains [9,31,32]. It is also\nworth\
    \ noting that coal-based power plants pose a signiﬁcant threat with respect to\
    \ Hg soil\npollution. In this regard, Li et al. [24,33] stated the adverse effect\
    \ on human health caused\nby consuming lettuce and water spinach grown in Hg-contaminated\
    \ soil area. Likewise,\nmany strong sources present a grim outlook for global\
    \ food safety. Figure 2 shows the\necosystem of heavy metal contamination. Heavy\
    \ metals emitted from automobile and\nindustrial smelters are transported to distant\
    \ locations, i.e., up to several kilometers away\nfrom their sources by wet or\
    \ dry deposition [34]. These metals accumulate in plant leaves\nthrough foliar\
    \ transmission after the deposition of atmospheric particles above the surface\n\
    of the leaf [34]. Fernandez and Eichert [35] proposed that particles can penetrate\
    \ the\nleaf tissue through the pores present on the leaf cuticle and inside stomata.\
    \ Similar to\nroot uptake, foliar uptake of heavy metals may also arise in a dose-dependent\
    \ manner.\nNonetheless, one of the leading contributors of heavy metal penetration\
    \ in agricultural soil\nalso comes from sewage and sludge pollution.\nFigure 2.\
    \ Ecosystem of heavy metal contamination.\nTo address the concern of rising wastewater\
    \ produced from domestic and industrial\nprocesses as a result of the growing\
    \ human population, a reliable strategy and stable\ntreatment systems are urgently\
    \ needed. With the rapid growth of agriculture in the past\ndecade, overuse of\
    \ water resources, especially for agriculture, has become a problematic\nissue\
    \ which threatens to intensify the effects of climate change. Agriculture constitutes\
    \ by\nfar the largest use of water in all countries [36]. In order to solve this\
    \ problem, it has been\nfound that wastewater reuse is a feasible option to minimize\
    \ anthropogenic impact [37].\nAgriculture 2021, 11, 475\n5 of 37\nFurthermore,\
    \ raw wastewater reuse in agriculture is a valuable tool for developing coun-\n\
    tries to minimize usage of freshwater while also addressing the challenge of rising\
    \ food\nproduction in water-scarce areas. The beneﬁts of reusing water in agriculture\
    \ are numerous\nand unquestionable, i.e., it saves signiﬁcant quantities of freshwater\
    \ which may be assigned\nfor other essential purposes; it provides nutrients that\
    \ may replace chemical fertilizers,\nthus helping to increase soil fertility and\
    \ crop yield and reduce production costs; it allows\nfor the expansion of agricultural\
    \ land in dry areas; it is a relatively cheap disposal method\nfor raw wastewater;\
    \ and it can help to prevent contamination of surface water. In addition,\nit\
    \ has been demonstrated that the health risks associated with raw wastewater usage\
    \ in\nagriculture are satisfactory if its biological content meets speciﬁed standards\
    \ [38,39].\nHaving elaborated on the positive side of raw wastewater, there are\
    \ also possible nega-\ntive effects, such as soil salinization and groundwater\
    \ contamination of metals and organic\ncompounds. It should be noted that these\
    \ are only theoretical at this point. Furthermore,\nthe use of untreated water\
    \ for agricultural production is potentially dangerous due to its\nmicrobial substance,\
    \ especially bacteria, viruses, and parasites, which can cause a number\nof diseases\
    \ because many of them can be sustained for longer periods in the environment.\n\
    This in turn tends to affect the quality of the soil.\nIt is crucial that farmers\
    \ aim to keep the quality of their soil high in order to pre-\nserve the health\
    \ of their soil species. Soil microbes are an important component of the\necosystem\
    \ [40]. Soil fertility depends in part on the breakdown of organic matter and\n\
    the ﬂow of nutrients through the ecosystem. When they are subjected to stresses\
    \ like\nextreme temperature, pH, salinity, and chemical pollution, they are able\
    \ to negatively affect\nproductivity [41–43]. Owing to the variety of anthropogenic\
    \ activities, soil may become\npolluted with a variety of heavy metals from manufacturing\
    \ and mining. Many forms of\ncontaminants, i.e., from mine waste, sewage sludge,\
    \ chemical fertilizer, and pesticides can\nend up in the soil system and adversely\
    \ affect soil microbes [43]. As another alternative,\nvegetables produced in greenhouses\
    \ also become polluted by heavy metals, often from\nanthropogenic sources. Within\
    \ the source, detection of heavy metals can be performed\nusing sophisticated\
    \ statistical and geospatial methods [9,44–47]. Greenhouse vegetables\nin China\
    \ were more susceptible to Cd pollution than crops in open farmland [48,49]. The\n\
    results of the Principal Component Analysis (PCA) demonstrated that As, Ni, and\
    \ Cr are\nprimarily discharged from weathered rocks, while metallic pollutants\
    \ such as Hg and Pb\nare generated by industry, vehicle fumes, and reuse of wastewater\
    \ for irrigation [48,49].\nNonetheless, it is worth noting that PCA has been used\
    \ by several researchers in various\nagricultural domains for the assessment of\
    \ soil heavy metal pollutants [50–53].\nIdentifying soil pollutants and their\
    \ origins is important to research due to their close\nties to human health [54–56].\
    \ In this regard, it has become deemed necessary to come up\nwith tools and techniques\
    \ which can monitor heavy metal composition in the soil which can\nbe incorporated\
    \ into the smart farming ecosystem. Smart farming is considered to be the\nnext\
    \ key segment in the agriculture sector as it has changed the methodological paradigm\n\
    of how farmers operate on ﬁelds. The following subsection highlights the overview\
    \ of\nsmart farming and its beneﬁts.\n2.2. Smart Farming Initiatives Is the Need\
    \ of the Hour\nWith the advent of Internet of Things (IoT), smart devices have\
    \ reached into all facets\nof our day-to-day life, i.e., healthcare and wellness,\
    \ smart homes, automobile and logistics,\nintelligent cities and industries. In\
    \ recent decades, agriculture has seen a series of techno-\nlogical changes, increasingly\
    \ industrialized and technologically driven. Through different\nagriculture-based\
    \ smart devices, farmers today now have greater control over animal\nhusbandry\
    \ and cultivation processes, making them more predictable and productive. This,\n\
    along with the rising market demand for agricultural products, has helped to increase\
    \ the\nworldwide proliferation of intelligent agriculture technologies. It is\
    \ worth noting that for\nthe year 2020, IoT’s agricultural market share reached\
    \ $5.6 billion [57].\nAgriculture 2021, 11, 475\n6 of 37\nModern agriculture can\
    \ be addressed in several respects. For instance, AgriTech\nrefers to the use\
    \ of technology in the domain of agriculture [58]. In addition, intelligent\n\
    agriculture is primarily used to describe the use of IoT-based agricultural solutions.\
    \ With\nIoT sensors, farmers can make informed decisions and develop various parameters\
    \ of their\nwork, i.e., cattle to crop production, in order to collect environmental\
    \ and machine metrics.\nFor example, farmers can decide exactly how much pesticide\
    \ and fertilizer is to be utilized\nto optimize productivity by using smart agriculture\
    \ sensors for monitoring crop status. The\nsame applies to the concept of intelligent\
    \ farming. Figure 3 shows a broader perspective\non a modern-day agricultural\
    \ model, which incorporates various wireless sensor nodes to\nenable IoT-based\
    \ farming with satellite communication, where different ground sensors\nare deployed\
    \ which communicate with the cloud computing node for data processing and\nanalysis,\
    \ so that farmers can make correct decisions.\nFigure 3. Modern day agriculture.\n\
    Although smart IoT and industrial IoT are not as common as consumer-connected\n\
    devices, the market continues to be very competitive. IoT technologies are increasingly\n\
    being implemented for agriculture. COVID-19 has had a positive impact on IoT market\n\
    share in agriculture. Indeed, the smart framing market share is expected to hit\
    \ $6.2 billion\nby the end of 2021, as reported recently [57].\nIt is evident\
    \ that COVID-19 has made a signiﬁcant impact on the farming sector\nacross the\
    \ world. However, the agricultural sector is showing potential to make a strong\n\
    comeback by leveraging positive government policies which indicate adoption of\
    \ advanced\ntechnologies by making substantial investment in the agricultural\
    \ sector. This initiative\nwill make room for IoT-based agricultural solutions\
    \ as a prominent business strategy, thus\ncausing a reasonable increment in crop\
    \ production. However, in the current situation, the\nmarket is expected to show\
    \ a decline up to 0.8% for the ﬁrst two quarters of year 2021\ncompared to 2020\
    \ and this trend will show a positive growth from 2022 onwards [59].\nIn addition\
    \ to this, the smart world agriculture market is projected to triple to 15.3 bil-\n\
    lion dollars by 2025, compared to just over 5 billion dollars back in 2016 [60].\
    \ If the sector\ncontinues to expand, there will still be plenty of opportunities\
    \ for companies. In the coming\nyears, creating IoT products for agriculture will\
    \ distinguish companies as early adopters,\nthus helping to pave the way for success.\n\
    Today, the innovations on our immediate horizon include autonomous machines\n\
    which have the capacity to pluck and pick fruits and vegetables from the respective\
    \ plan-\ntation. A highly sophisticated sensing system includes microscopic sensors\
    \ and cameras\nthat help farmers track the growth of crops and warn them when\
    \ something is wrong\nor inform them of the optimum time to harvest. The Bonirob\
    \ developed by Deepﬁeld\nAgriculture 2021, 11, 475\n7 of 37\nLabs [61] can take\
    \ a soil sample, liquidize it, and then analyze its pH and phosphorus\nlevels\
    \ in real time. Researchers expect to grow and harvest an entire hectare of land\
    \ barley\nwithout humans ever entering the ﬁeld as a proof of concept for autonomous\
    \ farming\ntechnology. Companies like Aerobotics [62] already have commercialized\
    \ software that an-\nalyzes infrared photos taken by drones to detect unhealthy\
    \ vegetation, similar to a real-life\ngame of SIM farming in which the farmer\
    \ receives a warning on their computer when a\ndisturbed area is detected. Machine\
    \ learning is constantly improving the system’s ability to\ndistinguish between\
    \ crop varieties and weeds that pose a threat to the farmer. Furthermore,\nvarious\
    \ pilots are hired by Micro Aerial Vehicle (MAV)-based companies to ﬂy light aircraft\n\
    equipped with multispectral cameras on data-gathering missions over vast farms\
    \ around\nthe country [63]. Planet Labs has a ﬂeet of CubSat satellites that take\
    \ weekly photographs\nof entire farms from space to aid in crop monitoring [64].\
    \ To cope with this new wave of\ndata, other companies are developing analytics\
    \ tools to act as farm management systems,\nenabling farmers to work on a variety\
    \ of land sizes. Farmers’ business networks can now\nintegrate data from several\
    \ farms into one large pool, giving their members access to\nmacro-level insights\
    \ that were previously only accessible to corporate mega farms.\n2.3. Beneﬁts\
    \ of Smart Farming\nIn certain ways, technology and IoT have the ability to change\
    \ agriculture. There are\nﬁve ways in which IoT can boost agriculture:\n•\nData:\n\
    •\nLoads of data gathered by sensors from the ﬁelds, i.e., temperature, soil quality,\
    \ crop\ngrowth progress, and animal health can be used to monitor the condition\
    \ of the farm\nalong with the performance of ﬁeld workers and efﬁciency of equipment.\n\
    •\nImproved internal process management and therefore lower output risks:\n•\n\
    The ability to forecast the production performance enables farmers to become prepared\n\
    for a better delivery of goods. Wise decisions can be made if the estimated production\n\
    of the crop is known.\n•\nCost savings and waste reduction by improved quality\
    \ control:\n•\nIf any irregularities in crop growth and animal health are seen,\
    \ then the risk of losing\nthe yield can be minimized.\n•\nImproved business productivity\
    \ through process automation:\n•\nSmart farming can automate several processes\
    \ during the development cycle, i.e.,\nirrigation, fertilization, or pest control\
    \ with intelligent devices.\n•\nImproved consistency and volume of the commodity:\n\
    •\nGreater control over production processes and retaining higher crop quality\
    \ levels\nand growth potential by automation can be achieved.\n•\nHelps to mitigate\
    \ soil toxicity and monitor signiﬁcant parameters, thereby providing\nsustainable\
    \ agriculture:\nWith the advent of low-cost sensors for monitoring agriculture,\
    \ signiﬁcant parameters\nin the agricultural ecosystem can be analyzed to increase\
    \ the factor of sustainability, i.e.,\nassessing soil quality and monitoring soil\
    \ toxicity, water quality and its controlled usage,\nweather conditions, and optimized\
    \ usage of fertilizers.\nAll the aforementioned variables will contribute to higher\
    \ revenues. However, the\nbeneﬁts of smart farming can only be exploited if the\
    \ quality of internet is able to accommo-\ndate the IoT infrastructure. In this\
    \ regard, the following section discusses internet access\nquality in developing\
    \ countries.\n2.4. Quality of Internet Access in Developing Countries\nIoT provides\
    \ an environment in which objects, animals, or humans have uniquely\nidentiﬁed\
    \ data that can be communicated over the internet without the need for computer\n\
    interactions between humans and computer [65]. In 2015, over 13.4 billion devices\
    \ were\nlinked to the internet (as part of IoT) and it is forecasted that by the\
    \ year 2020 there will\nbe a rise in 18.5% to 38.5 billion devices, according\
    \ to Juniper research (Juniper research\nAgriculture 2021, 11, 475\n8 of 37\n\
    2015) [66]. Today, nearly every ﬁeld of modern society is being overtaken by IoT\
    \ [67]. The\nmain areas include smart health, smart cities, intelligent industries,\
    \ driverless cars, smart\nagriculture, precision farming, smart homes, etc. [68].\
    \ In this regard, it has been deemed\nnecessary for every household and business\
    \ sector to become connected with the internet,\nif we want to realize the maximum\
    \ utilization of IoT. Figure 4a shows the graph of internet\nusers worldwide on\
    \ the basis of geographic division and Figure 4b shows the subsequent\npenetration\
    \ rate till October 2020 [69]. It is worth noting that, although the number of\
    \ users\nin Asia and Africa is high as observed in Figure 4a, if Figure 4b is\
    \ analyzed, then it becomes\nevident that there is a clear-cut digital division,\
    \ as the penetration rate in Asia and Africa is\na mere 59.5% and 47.1%. In most\
    \ of the developing and underdeveloped countries in Asia\nand Africa, the agricultural\
    \ sector plays a prominent role in the contribution of overall Gross\nDomestic\
    \ Product (GDP). Therefore, reforms in communication technology are deemed\nnecessary\
    \ in such regions to incorporate the IoT paradigm into the agricultural domain.\n\
    Figure 4. (a) Internet users worldwide. (b) Internet world penetration rate [69].\n\
    Agriculture 2021, 11, 475\n9 of 37\nIoT has great potential and is one of the\
    \ main areas for future internet services growth.\nIoT problems are exploratory\
    \ in major IT companies and most countries. New uses of\nIoT are being searched\
    \ for and developed, but most work has been done in the ﬁeld of\nstandardization\
    \ of solutions [70]. IoT issues are included in the European Digital Agenda\n\
    (2016) [66]. As part of the European framework for research and innovation HORIZON\n\
    2020, more than EUR 140 billion is estimated to have been invested in IoT technology\n\
    between 2016 and 2017 alone (European Commission, 2015). In March 2015, the EU\n\
    Commission launched the Innovation Internet Alliance. The objective of the alliance\
    \ was to\ndevelop close cooperation on innovation and standardization of IoT (European\
    \ Commission\n2016) between the EU Commission, stakeholders, and parties involved\
    \ in IoT [66].\nThe fragmented existence of platforms and communications protocols\
    \ is one of the\nmajor problems of the present day, and contributes to incompatibility\
    \ problems between\ndifferent IoT devices and features [71,72]. IoT is well known\
    \ in precision agriculture,\nbut only proprietary solutions that lead to compatibility\
    \ and connectivity issues between\nvarious equipment are being used [73]. New\
    \ technologies need to be sought, based on\nopen standards and frameworks that\
    \ are compatible with smartphones. Many products\nthat are based on open hardware\
    \ at least partially are currently on the market and prices\nare considerably\
    \ lower than proprietary solutions. Therefore, by keeping the current\ninfrastructure\
    \ in consideration, the agriculture methodological paradigm can be taken to\n\
    the next level by connecting to the IoT.\n2.5. Embarking Agriculture on IoT\n\
    Farmers today have to face the biggest challenges in crop production as global\
    \ pop-\nulation grows. Therefore, it has been deemed necessary for the farming\
    \ sector to bring\nmajor shifts in adapting the latest technologies. IoT is driving\
    \ change in agriculture, which\nhas brought a shift in the farming paradigm. IoT\
    \ refers to devices or objects embedded\nin the sensor for the purpose of measurement\
    \ and transfer of datasets through network\ndevices, from pumps and tractors to\
    \ weather stations. In essence, IoT means that these\nphysical machines can transmit\
    \ and receive information from farms on devices using the\ninternet in order to\
    \ remotely measure all types of data and provide that information to\nthe farmer.\
    \ Soil moisture, chemical properties, dam levels, livestock health, and weather\n\
    details can be collected in real time by IoT devices. IoT devices information\
    \ helps farmers\nto track farms and accordingly helps to advise farmers to increase\
    \ productivity and yields.\nFarmers can also respond faster to farm conditions\
    \ and save time and money. Nonetheless,\nwith the advent of IoT, there lies a\
    \ major challenge in the processing of high volumes of\ndata generated from the\
    \ on-ﬁeld sensors. Therefore, researchers need to tackle this issue by\ncoming\
    \ up with cloud computing models synchronized with on-ﬁeld agricultural sensors.\n\
    2.6. Data Processing Challenge in IoT\nOne of the biggest hurdles of IoT is to\
    \ process large datasets in tandem. However,\nknowing what the data are, what\
    \ the nature of the data is, and how they go through\nare some of the key components\
    \ that need to be looked upon in this process. Gathering\nthe data forms the initial\
    \ stage, and the other factor comprises ingestion of data to the\nsystem from\
    \ the sensor. It is deemed necessary to understand that the data go through\n\
    all the gateways before entering into the system where the data are actually cleansed\
    \ and\ntransformed, which eventually leads to substantial insights. The big question\
    \ lies with how\nmany speciﬁc points of computation should exist. Let us consider\
    \ an instance, whereby\nthere is a drip irrigation system which ﬁnds that one\
    \ of the plants is not getting enough\nwater. Now, this delay could not be disturbing\
    \ for the system as the concerned person\nhandling the drip irrigation system\
    \ can come back the next morning and actually provide\nsome water or maybe some\
    \ other time it can be dealt with. However, in order to bring\nsustenance in the\
    \ agricultural industry, it is necessary for the farmers to understand the\nfactors\
    \ that govern crop growth by optimizing the usage of fertilizers and water. In\
    \ these\nkinds of situations, decisions are taken close to the actions or where\
    \ the data originate\nAgriculture 2021, 11, 475\n10 of 37\nfrom. Therefore, in\
    \ this regard, one can realistically conduct some processing for something\nto\
    \ be analyzed and thus, one can recognize some patterns and do some planning for\
    \ the\nlong term, accordingly. This gives a vision at a spectrum on a scale of\
    \ time as to where\nthe processing needs to happen. So, by considering all these\
    \ scenarios, it becomes evident\nthat not all the data are important, and this\
    \ is the challenging aspect to comprehend. This\ngives an insight of what data\
    \ need to be stored, what need to be discarded, what need to\nbe retained for\
    \ short-term purposes, and what need to be retained for long-term purposes.\n\
    Thus, all these are challenging issues that need to be addressed and that is where\
    \ storage\ntechnologies are actually highlighted. There are a number of systems\
    \ that are actually\nbeing worked upon; however, due to the lack of quality internet\
    \ access infrastructure in\ndeveloping countries, the feasibility of their implementation\
    \ remains a challenge. One\nof the viable solutions to solve this problem could\
    \ be via edge computing whereby the\nessential data could be ofﬂoaded from the\
    \ cloud over the edge of the cloud, and this is\nwhere the paradigm of smart sensing\
    \ with edge computing comes in.\n2.7. IoT-Based Smart Sensing with Edge Computing\n\
    Numerous embedded programmable devices have been utilized in recent literature.\n\
    Some are personalized while others are industrial programmable boards or full\
    \ sens-\ning/monitoring systems in closed-source applications. Researchers select\
    \ their equipment\naccording to the goals of each study or the main objective.\
    \ Business pertaining to sensing\nservices includes a range of features outside\
    \ the box to allow scientists to concentrate on\nother aspects of IoT de-planting,\
    \ such as meta-processing, smart tracking and monitoring\nalgorithms, cloud interoperability,\
    \ and more [74–76]. On the other hand, the programmable\nopen approach gives designers\
    \ versatility in monitoring the actions of the nodes and\nnetwork and in programming\
    \ new peripheral devices, such as new sensors or drive mod-\nules [77,78]. The\
    \ next subsections discuss various communication paradigms and wireless\nsensors\
    \ and nodes which are suitable to be used in the agricultural domain.\n3. Communication\
    \ in IoT\nDespite signiﬁcant changes, IoT still evolves, as can be seen from many\
    \ reviews, to\nachieve its ﬁnal form [79]. The conﬁguration of IoT is based on\
    \ three layers: a network\nlayer (data transfer), a perception layer, and an application\
    \ layer for data storage and\nmanipulation [80]. The network layer is considered\
    \ to be the physical layer of the archi-\ntecture, where the on-ﬁeld sensors and\
    \ actuators directly interact with the environment\nand gather data as per the\
    \ requirement. Technology such as Wireless Sensor Network\n(WSN), Radio Frequency\
    \ Identiﬁcation (RFID), and recently, Near Field Communications\n(NFC) are used\
    \ on the perception layer [79]. Correlation exists between WSN and RFID\ntechnology\
    \ due to semi-passive and active RFID tags which can also be viewed as lower-\n\
    computing and storage wireless nodes [81]. A wireless sensing node normally consists\n\
    of more than one sensor module (either external or embedded along with digital\
    \ sensor\ndevices), a processing module, typically a low-power microcontroller\
    \ unit, and a Radio Fre-\nquency (RF) communication module compatible with low-power\
    \ wireless communication\ntechnology [82].\nAt the network layer of the IoT, WSN\
    \ communicates with physical objects and their\nsurroundings, neighboring nodes,\
    \ or gateways. The network layer is also responsible for\nbuilding a network paradigm,\
    \ by using which the data are typically forwarded to a remote\nstorage infrastructure\
    \ for further analysis and processing [83]. Wireless standards which\nare used\
    \ to develop communication protocols, i.e., 802.15.4, bridge the difference among\n\
    the internet-enabled gateways and the end-nodes. These types of protocols comprise\
    \ Sigfox,\nZigBee, 6LowPan, WirelessHART, and ISA100.11a. [74,84]. In addition\
    \ to this, Bluetooth\nLow Energy (BLE), Long-Range and Long-Range Wide Area Network\
    \ (LoRa/LoRaWAN),\nand low-power WiFi have also been used in the network layer.\n\
    The application layer is the IoT’s third layer. This layer is responsible for\
    \ getting\ndata downloaded and delivering application-speciﬁc service to the users’\
    \ device via an\nAgriculture 2021, 11, 475\n11 of 37\napplication programming\
    \ interface. It is very important, and it promotes the realization\nof IoT in\
    \ several respects. The application layer faces a variety of unresolved suits,\
    \ such\nas system recognition as a unique device. Identifying and addressing billions\
    \ of devices\naround the world would provide them across the future internet with\
    \ direct internet-like\naccess and power. Identity uniqueness, durability, and\
    \ scalability are essential character-\nistics of the approach scheme [83]. IPv6\
    \ can mitigate some system recognition problems\nwith its aspects of internet\
    \ mobility and is expected to play a key role in this sector [85].\nThe heterogeneity\
    \ of the wireless nodes, diversity in data types, parallel operations, and\nintegration\
    \ of data from devices further exacerbate the problem [86].\nWhile numerous theoretical\
    \ parameters of the WSN have been studied extensively in\nliterature, practical\
    \ IoT/WSN implementations are very demanding for agriculture and\nremain a difﬁcult\
    \ task. Sensor modules must be sufﬁciently reliable, with the required mea-\n\
    suring range available which is protected from environmental factors that either\
    \ produce\nfalse readings or cause malfunctions in the system. As the IoT possesses\
    \ distributed nature,\ntherefore replacing the power source can be a very tough\
    \ challenge for battery-operated\nnodes in open ﬁelds or other agricultural facilities.\
    \ Consequently, very stringent power lim-\nitations inﬂuence the hardware selection\
    \ and the low-power characteristics of the chosen\nperipherals are often taken\
    \ into consideration when designing a new device. The software\ncomponents to\
    \ be implemented must be carefully inspected to incorporate the functionality\n\
    of a system. The ﬁnal function code includes a fully integrated understanding\
    \ of software\nengineering and adequate testing to prevent ﬁeld failures [87].\
    \ Other characteristics that\nallow an integrated, low-power system to be chosen\
    \ for use are its longer-term reliability,\nthe number of digital and analogue\
    \ inputs/outputs that reduce the number of peripheral\ndevices (sensors and actuators)\
    \ to be supported, the capacity of power harvesting modules,\nand the effort needed\
    \ to program the system.\nIoT is a dominant type of IT wireless technology in\
    \ the seven major groups, i.e.,\nthe Global System for Mobile Communication (GSM),\
    \ Wireless Personal Area Network\n(WPAN), the Cognitive Radio/Wireless Regional\
    \ Area Network (WRAN), Wireless Radio,\nmesh, Point-to-Point (P2P), and the Low-Power\
    \ Network (LPN), Low-Power Wide Area\nNetwork (LPWAN). Further GSM standard is\
    \ divided into GSM EDGE Radio Access Net-\nwork (GERAN) and Universal Mobile Telecommunication\
    \ System (UMTS) and Universal\nTerrestrial Radio Access Network (UTRAN) [88].\
    \ Many wireless devices are produced in\ncompliance with different wireless standards.\
    \ One prominent problem is the interference\nbetween devices that run on the same\
    \ band (for example Bluetooth, ZigBee, and WiFi) or\nadjacent bands [89].\nTable\
    \ 1 summarizes the IoT wireless networking which offers a wide range of band-\n\
    width, operating frequency, range, and power consumption. The various technologies\
    \ and\nspeciﬁcations as well as the discrepancies between IoT projects and their\
    \ unique criteria\nimpede network interoperability. Two very common phenomena\
    \ are high temperatures\nand high humidity when it comes to agricultural deployments.\
    \ Based on observations by\nBannister et al. [90], when the temperature increases\
    \ from 25 ◦C to 65 ◦C, it has a major\neffect on the signal intensity obtained.\
    \ Boano et al. [91] presented similar ﬁndings. In\naddition, humidity in agricultural\
    \ deployments can also be very high. For open ﬁelds,\nthe wireless nodes are exposed\
    \ directly to rain or irrigation systems. Relative humidity in\ngreenhouses can\
    \ also reach 80% for long periods. Dampness has been shown to greatly\nimpact\
    \ the distribution of radio waves [74,92]. It is necessary to take the specs of\
    \ the\nnumber of nodes into account, i.e., the distance between them, the antenna\
    \ height, and\nthe operating frequency based on the appropriate size of the messages\
    \ when selecting\na wireless transceiver for the agricultural purpose. The next\
    \ subsection discusses the\nsensors which are used or have the potential to be\
    \ deployed over agricultural ﬁelds for soil\nassessment and monitoring soil pollutants\
    \ such as heavy metal toxics. In addition, the next\nsubsection also highlights\
    \ the various wireless nodes and the associated microcontroller\nand transceiver.\n\
    Agriculture 2021, 11, 475\n12 of 37\nTable 1. Widely used IoT wireless technologies.\n\
    Wireless\nTechnology\nWireless\nStandard\nNetwork Type\nOperating\nFrequency\n\
    Data Rate\nMax. Range\nPower\nWiFi\nIEEE 802.11a, 11b,\n11g, 11n, 11ac,\n11ad\n\
    WLAN\n2.4, 3.6, 5 GHz\n60 GHz\n6–780 Gbps\n100 m\nLow\nZ-wave\nZ-wave\nMesh\n\
    908.42 MHz\n100 kbps\n30 m\nUltra-low\nBluetooth\nBluetooth\n(Formerly IEEE\n\
    802.15.1)\nWPAN\n2400–2483.5 MHz\n1–3 Mbps\n100 m\nUltra-low\n6LowPAN\nIEEE 802.15.4\n\
    WPAN\n908.42 MHz or\n2400–2483.5 MHz\n250 kbps\n100 m\nUltra-low\nSigfox\nSigfox\n\
    WPAN\n908.42 MHz\n10–1000 bps\n30–50 km\nHigh\nLoRaWAN\nLoRaWAN\nWPAN\nVarious\n\
    0.3–50 kbps\n2–15 km\nModerate\nBluetoothSmart\n(BLE)\nIoT Inter-connect\nWPAN\n\
    2400–2483.5 MHz\n1 Mbps\n100 m\nUltra-low\nZigbee\nIEEE 802.15.4\nMesh\n2400–2483.5\
    \ MHz\n250 kbps\n10 m\nUltra-low\nRFID\nMany standards\nPoint to Point\n13.56\
    \ MHz\n423 kbps\n1 m\nUltra-low\nNFC\nISO/IEC 13157\nPoint to Point\n13.56 MHz\n\
    424 kbps\n0.1 m\nUltra-low\nGPRS\n3GPP\nGERAN\nGSM 850, 1900 MHz\n171 kbps\n25\
    \ km/10 km\nModerate\nEDGE\n3GPP\nGERAN\nGSM 850/1900 MHz\n384 kbps\n26 km/10\
    \ km\nModerate\nHSDPA/HSUPA\n3GPP\nUTRAN\n850/1700/1900 MHz\n0.70–56 Mbps\n27\
    \ km/10 km\nHigh\nLTE\n3GPP\nGERAN/UTRAN\n700–2600 MHz\n0.1–1 Gbps\n28 km/10 km\n\
    High\nANT+\nANT + Alliance\nWSN\n2.4 GHz\n1 Mbps\n100 m\nUltra-low\nCognitive\
    \ Radio\nIEEE 802.22 WG\nWRAN\n54–862 MHz\n24 Mbps\n100 km\nUltra-low\n3.1. Commonly\
    \ Used Sensors for Smart Farming and Heavy Metal Identiﬁcation\nSensors for Soil\
    \ Moisture (SM) have been used in crop ﬁelds for decades to measure\nwater content.\
    \ The use of handheld/manual soil moisture technology is increasingly being\n\
    replaced by automated technologies, since there were difﬁculties in manual soil\
    \ moisture\nreadings in remote production areas. In the past decade, technology\
    \ has been developed for\nwireless data collection, providing managers and users\
    \ with real-time access to soil moisture\ndata, resulting in more successful water\
    \ management decisions. Some of the prominent\nsensing devices to measure soil\
    \ moisture comprise gravimetric sampling, resistive sensors,\ncapacitive sensors,\
    \ and Ground Penetrating Radar (GPR) [93]. Gravimetric sampling is a\ndirect and\
    \ normal SM measurement tool [94]. SM is determined by a proportion of dry\nsoil\
    \ mass to wet soil mass including pores. It needs the manual drying of soil samples\n\
    taken from the ﬁeld and oven sampling [94]. The electrical conductivity of water\
    \ and\nthe measuring of resistance changes based on soil water content are primarily\
    \ resistive\nsensors, such as granular matrix sensors. This method includes sensor\
    \ calibration for\nprecise SM reading.\nIntelligent irrigation-based measurement\
    \ to maintain soil moisture levels is signiﬁcant\nto improve plant productivity\
    \ and quality. On the other hand, soil moisture sensors these\ndays are expensive,\
    \ i.e., the ECHO-EC5 soil moisture sensor costs around USD 169 [95].\nIn order\
    \ to overcome the cost constraint factor, Wang et al. [95] proposed an RFID-based\n\
    GreenTag sensor to maintain and improvise plant productivity and quality.\nIn\
    \ addition, RFID sensors can be combined with biosensors comprising aptamer and\n\
    DNA-based properties which can be used to detect heavy metals at nanoscale and\
    \ large\nscale levels pertaining to food safety monitoring. A heavy metal detection-based\
    \ biosensor\nis composed of genetically modiﬁed bacterial cells and a green ﬂuorescent\
    \ signal ampliﬁer\nwhich detects the presence of arsenite in foods [96,97]. Its\
    \ arsenic detection lasts for an\nhour with a detection range of 5–140 µg/L. Other\
    \ methodologies pertaining to biosensors,\ni.e., aptamers and graphene electrodes,\
    \ have also been used to detect arsenic with the\npossibility of being developed\
    \ as simple and easy-to-use low-cost devices [97,98].\nThe EC-5 series sensors\
    \ were also used by Wu et al. [99] for ﬁeld-speciﬁc calibration\nand evaluation\
    \ in sandy soils. Nonetheless, EC-5 sensors have turned out to be helpful to\n\
    reveal soil water content dynamics in different soil depths post rainfall conditions.\
    \ The\nECHO series has other variants of sensors; i.e., ECHO-EA10 can be used\
    \ for medium\nAgriculture 2021, 11, 475\n13 of 37\ntextured soil type with low\
    \ electrical conductance conditions. In addition to this, there is\nECHO-10HS\
    \ soil moisture sensor which is a new addition in the soil moisture sensor family\n\
    and possesses high-frequency oscillation, which enables the sensors to accurately\
    \ measure\nsoil moisture in any of the soil or soilless media with minimum salinity\
    \ and textural effects.\nIn order to measure soil water content and salinity,\
    \ Zemni et al. [100] used 5TE sensors\nat different soil depths to assess dielectric\
    \ permittivity (Ka) and electrical conductivity\n(ECa). It is to be noted that\
    \ 5TE sensors are based on frequency domain reﬂectometry\n(FDR); therefore, they\
    \ use a ﬁxed frequency wave of broadband signal which makes the\ndevice cheaper\
    \ and more compact. Nolz et al. [101] deployed hydro probe2 sensors to\nevaluate\
    \ near surface soil water and determine in situ water retention function. Hydro\n\
    probe sensors are advantageous due to their linear signal response. On the contrary,\
    \ hydro\nprobe sensors are not suitable for sandy soils [102]. Udukumburage et\
    \ al. [103] used an\nMP406 soil moisture sensor to verify the saturated condition\
    \ of the expansive soil layer.\nThey also used this sensor to measure volumetric\
    \ water content values in the soil column\nduring the wetting and drying process\
    \ [104]. In order to maintain the indoor ecosystem\nservices, air quality plays\
    \ an essential role. In this regard, MIKROE gas sensors are used to\nmonitor the\
    \ air quality [105,106]. To evaluate and assess the vegetation change and study\n\
    physiological and metabolic response of corn ﬁelds and paddy ﬁelds, the Pogo II\
    \ VWC has\nbeen widely used [107,108].\nHu et al. [109] used Portable X-ray Fluorescence\
    \ Spectroscopy (PXRF) to assess the\nheavy metal content in soil for which they\
    \ covered 301 farmland soils from Fuyang in\nZhejiang Province, in the southern\
    \ Yangtze River Delta, China. Conventional methods for\nheavy metal detection\
    \ such as Atomic Absorption Spectrometry (AAS), Atomic Fluores-\ncence Spectrometry\
    \ (AFS), and Inductively Coupled Plasma Optical Emission Spectroscopy\n(ICP-OES),\
    \ are expensive and lengthy procedures which are executed in laboratories. There-\n\
    fore, these methods are not taken into consideration for rapid testing and high-density\n\
    evaluation of soil heavy metals contamination. As an alternative method for rapid\
    \ heavy\nmetal detection, Portable X-ray Fluorescence (PXRF) was used to assess\
    \ cumulative con-\ncentrations of soil heavy metals based on linear regression\
    \ models between ﬂuorescence\nintensity and speciﬁc heavy metal concentration.\
    \ Due to its ease of use and rapid testing\nability using non-destructive quantiﬁcation,\
    \ PXRF has been widely used by researchers\nin numerous domains [110–113]. For\
    \ the heavy metal assessment in agricultural soil con-\nducted by Hu et al. [109],\
    \ VNIR sensor was used to anticipate soil properties comprising\npH, soil nitrogen,\
    \ and carbon [114,115]. In addition to PXRF, NixPRO color sensor can also\nbe\
    \ used to identify hotspots and total spatial area in excess of environmental\
    \ thresholds in\nlandﬁll soils [116].\nLately Zhao and Liu [117] have developed\
    \ a Portable Electrochemical System (PES)\nfor on-site heavy metal detection on\
    \ farmland. Their system was composed of a three-\nelectrode conﬁguration which\
    \ comprised a signal acquisition system integrated with a\nmicrocontroller-based\
    \ potentiostat to perform square-wave anodic stripping voltammetry.\nTheir system\
    \ was assessed by testing the detection of pd(II) and cd(II) in acetic acid soil\n\
    extracts and acetate buffer solution [117]. However, their system did not include\
    \ any\nwireless sensor module to transmit heavy metal composition data.\nOther\
    \ than the aforementioned sensors, there are several other wireless sensors ded-\n\
    icated to: photosynthesis, i.e., Beta Therm temperature sensor; leaf wetness sensor,\
    \ i.e.,\nSLWA-M003; precision sensor for leaf temperature, i.e., ∆LA-C; light\
    \ intensity sensor,\ni.e., BH1750FUI sensor [118–122]. With the advent of these\
    \ sensors, CO2 sensors also\nplay an essential role, especially in greenhouse\
    \ systems [123]. CO2 sensors have also\nbeen widely used to measure the subsequent\
    \ level in peat soil, landﬁll, and forest control\nsite [124,125]. In the smart\
    \ farming ecosystem, the growth and quality of the fruit bunch\ncannot be neglected.\
    \ In this regard, there are dedicated fruit growth monitoring sensors\nwhich researchers\
    \ have used in their domain of plantation. Thalheimer [126] designed\nan optoelectronics\
    \ sensor for monitoring fruit and stem radial growth. Their developed\nsensor\
    \ was lightweight and easy to install with low maintenance. Nonetheless, the sensor\n\
    Agriculture 2021, 11, 475\n14 of 37\nwas well tested in open ﬁeld conditions.\
    \ In addition to this, the effect of gas concentration\nduring the fruit growth\
    \ was studied by Ma et al. [127], for which a smart ethylene elec-\ntrochemical\
    \ sensor was established to investigate ethylene emission from fruits. Lately,\n\
    Hanssens et al. [128] came up with a heat ﬁeld deformation sensor to measure sap\
    \ ﬂow\ndynamics through the tomato peduncle. Heat griddling of the peduncle was\
    \ performed to\ndifferentiate ﬂow of xylem and phloem with respect to developing\
    \ fruits.\nCapacitive sensors calculate SM on the basis of changes in soil capacitance\
    \ due to\ndifferences in water content [129]. Commercial UTs use capacitive sensors,\
    \ which are\nusually more accurate than resistive sensors but cost more [130].\
    \ Ground Penetrating\nRadars (GPR) [131] are based upon electromagnetic wave absorption\
    \ and reﬂection. SM\nsensing uses impulses, frequency sweeping, and frequency-modulated\
    \ technologies. This\nmethod is used for measuring soil moisture near the surface\
    \ (up to 10 cm). The most\nreliable soil humidity samples used in ﬁelds are neutron\
    \ scattering samples [132] and\nscattering samples use radiation methods for calculating\
    \ SM by estimating changes to the\nneutron ﬂux density due to water content of\
    \ the soil [133,134]. However, in such cases,\nspeciﬁc licenses are required to\
    \ carry out its implementation.\nNumerous research studies have been performed\
    \ to develop electrochemical devices\nfor various applications, which are known\
    \ as potentiostat [135–141]. Lately, an Arduino-\nbased potentiostat was fabricated\
    \ from cost-efﬁcient components and was able to execute\nsimple electrochemical\
    \ experiments, whereby the results were recorded and analyzed in a\nWindows operating\
    \ system via USB interface [136–138]. As an addition to Arduino-based\npotentiostat,\
    \ Raspberry Pi (RPi) controller was also used to execute the electrochemical\n\
    experiments, whereby the results were displayed on the LCD touch panel connected\
    \ to the\ncontroller [139]. Both Arduino- and Raspberry Pi-based potentiostat\
    \ have the potential to\nincorporate wireless sensors for data transmission; however,\
    \ these controllers do not con-\ntain a built-in Analog to Digital Converter (ADC)\
    \ and Digital to Analog Converter (DAC)\nwhich make the overall design more sophisticated.\
    \ In this regard, Hanisah et al. [142] came\nup with a portable Heavy Metal Potentiostat\
    \ (HMstat) to detect heavy metal composi-\ntion on-site. Their potentiostat comprised\
    \ a digital Control Signal Component (CSC) and\nthe electronic component, which\
    \ is the analog Potentiostat Read-out Circuit Component\n(PRCC), as shown in Figure\
    \ 5 [142]. Nonetheless, it is worth noting that both the Arduino\nand RPi controller\
    \ board do support the incorporation of various sensor modules. There-\nfore,\
    \ researchers have room to incorporate soil moisture and temperature sensors along\n\
    with other sensors depending on the slots available in the controller; thus, an\
    \ integrated\nsystem for soil moisture and heavy metal analysis can be developed.\n\
    Figure 5. (a) The HMstat consists of Control Signal Component (CSC) and Potentiostat\
    \ Read-out\nCircuit Component (PRCC) connected to the electrochemical cell (consisting\
    \ of Screen Printed\nElectrode Gold (SPGE) and (b) overall connection of HMstat\
    \ [142].\nAgriculture 2021, 11, 475\n15 of 37\nOther soil physical properties\
    \ can be calculated to populate the map of the soil with\nother soil properties\
    \ such as soil organic content, pH, sand, silt particles percentage, and\nnutrients\
    \ such as Mg, P, OM, Ca, base saturation Mg, base saturation K, base saturation\n\
    Ca, CEC, and K/Mg [143–145]. In situ, calculating these properties in real time\
    \ also faces\nchallenges due to scale, cost, and technology limitations.\nIn precision\
    \ farming, some of the long-lasting decisions can be taken using yield\nmonitoring.\
    \ This method helps in providing spatial distribution of crop yields at the end\n\
    of the growing season [146,147]. Yield sensors are normally mounted on farm equipment\n\
    and capture yield data automatically in the course of the harvest. In particular,\
    \ mass\nﬂow sensors on grain containers are mounted to record grain inﬂows along\
    \ with the\nposition [148]. The collected data are analyzed with tools such as\
    \ ArchInfo, Mapinfo, and\nEnvironment System Analysis International [149].\nIn\
    \ order to get an insight into the crop yield combined with ﬁeld topography, Electrical\n\
    Conductivity (EC) sensors are used [150]. Soil’s ability to conduct current is\
    \ measured\nby electrical conductivity. EC assessment is used to assess the use\
    \ of phosphorus, cations\nin water, drainage, and rooting depths [150]. EC maps\
    \ are used for zoning the area. The\nzoning is also used to incorporate precision\
    \ agricultural practices such as variable rate irri-\ngation, variable rate seeding,\
    \ and drainage management. Electromagnetic Induction (EMI)\nmethods can be used\
    \ for the mapping of the EC by apparent Electrical Conductance (ECa)\nand Visible\
    \ Near Infrared Reﬂectance (VNIR) [151]. There are a number of commercial\ntools\
    \ available, i.e., Veris 3100, EC400 sensors in conjunction with GPS systems [149,152].\n\
    In the domain of soil sensing, macronutrients such as nitrogen, potassium, and\
    \ phos-\nphorus are essential to the growth of crops. The evaluation of these\
    \ nutrients helps to\nassess the effects of fertilizer and potential applications.\
    \ The optical detection is based\non reﬂectance spectroscopy to measure the macrosimulation’s\
    \ reﬂection and absorp-\ntion [153,154]. A sensing system using planar electromagnetic\
    \ sensors has been developed\nin the detection of nitrate and sulphate concentration\
    \ in natural water resources [155].\nThis approach is used to detect the amounts\
    \ of nitrate and sulphates by correlating\nthe impedance of the sensor array with\
    \ their concentration. The key approaches to soil\nmacronutrients include electrochemical,\
    \ VIS-NIRS, and ATR spectroscopy [149,152,156].\nThese approaches to soil macronutrients\
    \ are limited to sensing a single desired ion because\nthe membrane used in these\
    \ methods only reacts to one ion [157]. To achieve a simultane-\nous multi-ion\
    \ sensing, it is necessary to build a detector array for the sensing of soil macro\n\
    nutrients [158].\nThere are several opportunities to advance the state of precision\
    \ farming through\nthe utilization of the above discussed sensors. The following\
    \ Table 2 summarizes the list\nof sensors along with their functionalities which\
    \ can be widely utilized in the ﬁeld of\nprecision agriculture.\nTable 2. Sensors\
    \ used in the agriculture domain.\nNo. #\nSensor Name\nFunctionalities\n1\nECHO\
    \ 10 HS soil moisture sensor\nSoil temperature, soil moisture, conductivity\n\
    2\nECHO EA10\nmedium-textured soil types with low EC conditions\n3\nECHO EC5\n\
    Soil moisture probe\n4\nGreenTag (RFID)\nSoil moisture, soil temperature, heavy\
    \ metal detection\n5\n5TE Sensor\nWater content, conductivity, temperature\n6\n\
    Hydra probe 2\nSoil moisture, electrical conductivity, dielectric constant\n7\n\
    MP406 Soil moisture sensor\nSoil temperature, soil moisture\n8\nMIKROE-1630\n\
    Gases detection, air quality check\n9\nPogo II VWC sensor\nSoil moisture and temperature\
    \ sensor\n10\nPXRF Sensor with VNIR\nSupports on-site heavy metal detection along\
    \ with soil moisture and\ntemperature measurement\n11\nNixPro Sensor\nSoil color\
    \ analysis which is coupled with dedicated soil scanner App\n12\nPortable Electrochemical\
    \ System (PES)\nSupports on-site heavy metal detection\nAgriculture 2021, 11,\
    \ 475\n16 of 37\nTable 2. Cont.\nNo. #\nSensor Name\nFunctionalities\n13\nArduino\
    \ and RPi-based potentiostat\nSupports on-site heavy metal detection with integration\
    \ of soil moisture\nand temperature sensors\n14\nHMstat\nSupports on-site heavy\
    \ metal detection with built-in ADC and DAC;\ncompatible to incorporate soil moisture\
    \ and temperature sensors\n15\nBetaTherm 100K6A1B thermistor\nTemperature sensor\
    \ (photosynthesis process)\n16\nS-LWA-M003\nLeaf wetness sensor\n17\n∆LA-C (∆T\
    \ Leaf-to-Air-Conifer type)\nPrecise sensor for leaf temperature\n18\nBH1750FVI\
    \ Digital Light Intensity Sensor\nLight intensity sensor\n19\nMG811 Carbon Dioxide\
    \ CO2 Sensor\nCO2 sensor\n20\nLW100, leaf wetness sensor\nPlant moisture, plant\
    \ wetness, plant temperature\n21\nLT-2 M, LT-1P (leaf temperature sensor)\nLeaf\
    \ temperature measurement\n22\nHOBO S-LIA-M003 Photosynthesis\nsmart sensor\n\
    Photosynthesis and soil moisture measurement\n23\nCl-340 photosynthesis system\n\
    Photosynthesis, plant moisture, air temperature, air humidity, plant\nwetness,\
    \ CO2, plant temperature, hydrogen level in plant\n24\nRTH-11, RTH-48\nPhotosynthesis\
    \ and leaf wetness sensor\n25\nFI-LP, FI-MP, FI-SP\nFruit growth sensors\n26\n\
    SA-20P Auxanometer\nPlant growth measurement\n27\nSD-5P, SD-6P\nMeasurement for\
    \ micro stem variation\n28\nVeris 3100\nAccurately map soil variability\n29\n\
    Extech EC400\nTo measure conductivity, total dissolved solids, salinity, and temperature\n\
    WSNs typically consist of a large number of nodes that run in a particular conﬁgura-\n\
    tion. Usually, autonomous and spatially dispersed sensor nodes collaborate to\
    \ track and\ncollect environmental conditions. Data can be processed in central/decentralized\
    \ mode by\nsending data to a sink that transfers them to other networks (e.g.,\
    \ through a gateway). A\nbroad variety of application-speciﬁc limitations is included\
    \ in the project, design, prototype,\nand use of a WSN.\nThe BTnode is a Bluetooth-based\
    \ radio module and microcontroller for autonomous\nwireless communication [159].\
    \ BTnode is equipped with general purpose interfaces which\ncan be conﬁgured on\
    \ the basis of application speciﬁc requirement. BTnode can be utilized\nwith several\
    \ peripherals, i.e., sensors, actuators, RFID, and GPS receivers. A promising\n\
    factor of BTnode is its compact size of 6 × 4 cm with standard wireless interface.\
    \ A pictorial\ndescription of BTnode is shown in Figure 6. The device comprises\
    \ an Atmel ATmega128L\nmicrocontroller with on-chip memory and peripherals [160].\
    \ The microcontroller demon-\nstrates an 8-bit RISC core delivering up to 8 MIPS\
    \ at a maximum of 8 MHz. The on-chip\nmemory comprises a programmable in-built\
    \ 128 KB of ﬂash memory along with 4 KB of\nstatic RAM. Other integrated peripherals\
    \ consist of JTAG for debugging, timers, counters,\npulse-width modulation, and\
    \ 10-bit analog-to-digital converter.\nFigure 6. (a) Pictorial description of\
    \ BTnode. (b) Illustration of BTnode [159].\nAgriculture 2021, 11, 475\n17 of\
    \ 37\nEpic is a new open mote platform for SensorNet modules. Pictorial view of\
    \ Epic\nis shown in Figure 7. SensorNet platforms, like most embedded systems,\
    \ are tightly\ncoupled to their applications and this can also be incorporated\
    \ over parallel programming\nparadigm to enhance processing and reduce execution\
    \ time [161,162]. A key aspect of Epic\nis the support of prototyping and reusability\
    \ using composable hardware architecture.\nThe research and development of Epic\
    \ was carried out at Computer Science Division,\nUniversity of California, Berkeley,\
    \ in 2008 [161].\nFigure 7. Pictorial description of Epic [161].\nIrene Mote was\
    \ an advanced stage development of Epic with numerous functionalities\nwhich makes\
    \ it suitable to implement user-centric studies. The research and development\n\
    of Irene Mote was carried out at Computer Science Division, University of California,\n\
    Berkeley, in 2009 [163–165]. Figure 8 shows the pictorial representation and illustration\
    \ of\nIrene Mote.\nFigure 8. Pictorial description and illustration of Irene Mote\
    \ [164,165].\nAgriculture 2021, 11, 475\n18 of 37\nThe CM5000 TelosB sensor was\
    \ developed to measure temperature, relative humidity,\nand light intensity. The\
    \ sensor is IEEE 802.15.4 compliant wireless sensor node based on\nthe original\
    \ open source TelosB/Tmote Sky platform design which was developed by the\nUniversity\
    \ of California, Berkeley [164,166,167]. Figure 9 shows the pictorial description\
    \ of\nCM5000-TelosB sensor.\nFigure 9. Pictorial description of CM5000-TelosB\
    \ [164,168].\nThe Preon32 module is tailored for short-range wireless networks\
    \ and is equipped\nwith a universally usable sensor and actuator platform [169,170].\
    \ Figure 10 pictorially\nrepresents the Preon32 sensor. Preon32 is incorporated\
    \ with Cortex-M3 controller which is\ncompatible with IEEE 802.15.4 radio frequency\
    \ module. In addition, this module enables\ndevelopers to develop the wireless\
    \ module codes using an object-oriented programming\nlanguage like Java [169].\
    \ It also demonstrates the functionalities of external interfaces, i.e.,\nUSB,\
    \ CAN, and SPI, etc. [164,169].\nFigure 10. Preon32 sensor [170].\nThe Mica2 Mote\
    \ is shown in Figure 11. These motes are CrossBow Technology’s mote\ntechnology\
    \ of the second and third century. In combination with the CC1000/CC2420\nRF Module,\
    \ Mica2 and MicaZ use the Atmega128L controllers [171]. With the interface\nAgriculture\
    \ 2021, 11, 475\n19 of 37\nsupport for the link to the mote, the Mica2/MicaZ are\
    \ ﬁtted with moisture, temperature,\nand light sensors [162]. These motes also\
    \ measure barometric pressure, seismic waves,\netc. [172–174].\nFigure 11. Mica2\
    \ Mote sensor [174].\nUsually, the sensor nodes of a WSN consist of three basic\
    \ building blocks: sensors,\ncomputer units, and communication units. The sensor\
    \ nodes need a working device, a\nrouting protocol, and eventually a simulator\
    \ to allow a WSN to function properly.\nThe most critical issues concerning WSN\
    \ include the lack of standardization of the\nhardware nodes, limited consumption\
    \ of energy, communication latency, out-of-order\nand loss of packets, distributed\
    \ reconﬁguration and scalability factors. In this regard, the\nOperating System\
    \ (OS) acts at the helm to arbitrate the resource access. It is worth noting\n\
    that the primary OS’s for WSNs are TinyOS, MANTIS, Contiki, Nano-RK, and LiteOS\
    \ [175].\nTinyOS (TOS) is open source, modular, component-based, module-speciﬁc\
    \ and built\nfor wireless sensor networks [176]. Nonetheless, this OS complies\
    \ with programs which\nrequire very low memory and also comprises numerous libraries\
    \ that manage network\nprotocols, distributed services, transducer drivers, and\
    \ data collection tools. TinyOS uses a\nmonolithic architecture class to construct\
    \ a static image on the node using the component\nmodel. TOS offers multithreading\
    \ support from version, named TOS Threads, using a\ncooperative threading approach.\
    \ In order to come up with a lightweight open source\nOS, Contiki was developed\
    \ by the Swedish Institute of Computer Science [177]. The\npromising factor of\
    \ Contiki is its portability factor which is based on an event-driven kernel.\n\
    Contiki includes so-called protothreads, which can be used at the individual process\
    \ level.\nNonetheless, Contiki includes many applications supporting features\
    \ like the multitasking\nkernel, preventive multithreading, prototype threads,\
    \ TCP/IP protocol, IPv6 protocol,\nlight telnet client, and quick web server etc.\
    \ [178]. It is worth noting that Contiki supports\ndynamic memory management;\
    \ it does not support applications in real time [179].\nWith the advent of cross\
    \ platform requirements, the multi-threaded WSN models were\ndeveloped. The MultimodAl\
    \ system for in situ wireless sensor (MANTIS) NeTworks [164]\nis a multi-threaded\
    \ WSN operating system. MANTIS is an easy-to-use OS that includes\nkernel, scheduler,\
    \ and network stack, and is compatible to be used across various platforms,\n\
    i.e., PDA or a PC.\nIn addition, Nano-RK was built for WSNs based on multitasking\
    \ [175]. The design\nobjectives for Nano-RK include multihop networking, effective\
    \ power management to ex-\ntend WSN lifetime, limited resources lighting applications,\
    \ and priority scheduling. LiteOS\nbased in Unix was developed by the University\
    \ of Illinois at Urbana-Champaign [164] in\norder to support the programming paradigm\
    \ for WSNs. LiteOS offers a familiar Unix,\nthread, and C programming environment\
    \ and is built using a hybrid programming model\nAgriculture 2021, 11, 475\n20\
    \ of 37\nwhich allows programming, both event-driven and thread-driven. Some of\
    \ the common\nwireless nodes which can be used in precision agriculture are summarized\
    \ in Table 3 along\nwith the details of the transceiver and microcontroller.\n\
    Table 3. Common wireless nodes used in the agriculture domain.\nSr #\nWireless\
    \ Nodes\nMicro-Controller\nTransceiver\nRemarks\n1\nBTnode\nATmega128L\n(8 MHz)\n\
    ETRX2 TELEGESIS, and ZigBit\n868/915\nHardware reconﬁgurability is supported\n\
    2\nEPIC mote\nTI MSP430\nBluetooth @ 2.5 GHz and\nCC1000 Chipcon (433–915 MHz)\n\
    Compatible with TinyOS and BTnut\n3\nIMote\nARM core 12 MHz\nBluetooth supported\
    \ with\n30 m range\nCompatible with TinyOS\n4\nIMote 2.0\nARM 11-400 MHz\nZigBee\
    \ compliant radio/TI\nCC2420 802.15.4\nCompatible with .NET, linux,\nand TinyOS\n\
    5\nTelosB\nTIMSP430\n250 kbit/s 2.4 GHz IEEE802.15.4\nChipcon Wireless Transceiver\n\
    Compatible with TinyOS, MantisOS,\nand Contiki\n6\nPreon32\nARM Cortex M3\nAtmel\
    \ AT86RF231 @2.4 GHz\nSupports virtual machine, Contiki, and\n6Lo WPan\n7\nMICA2\n\
    ATmega128L\nChipcon 868/916 MHz\nCompatible with TinyOS, MantisOS,\nand Nano-RK\
    \ support\nNow, the question is how the previously discussed sensors could be\
    \ deployed over an\nIoT-based High-Performance Computing (HPC) framework with\
    \ optimized scheduling. In\nthis regard, the next subsection discusses the signiﬁcance\
    \ of Edge Computing.\n3.2. Role of Edge Computing\nIt is essential to look at\
    \ data that can be processed immediately close to where the\ndata originate with\
    \ the help of edge. So, at the edge there is a requirement of some kind\nof storage,\
    \ computing ability to be able to take care of real-time processing needs. For\n\
    long-term retention for data analysis realistically, some planning activity is\
    \ to be done\nin the cloud. Therefore, if that is the case, then what kind of\
    \ storage solutions are we\nlooking at? In this regard, an edge needs to be designed\
    \ in such a way that it could possess\nlocal processing power needed in decision-making\
    \ ability and largely it is going to be\nright intensive. Thus, some storage is\
    \ required at the edge level which is going to be fast,\ni.e., largely of course\
    \ solid-state drive to overcome the issues of low latency. However, in\nthe current\
    \ scenario, data analysis and long-term planning are essential; therefore, users\n\
    may compromise with lower degrees of latencies, but the factor of storage remains\
    \ a\npriority. The prominent challenge in edge computing is with respect to the\
    \ volume of\nthe data. Having so many sensors deployed for computing, the heterogeneity\
    \ of data\nthemselves is another challenging issue. The coherency of data always\
    \ exists at the edge\nlevel and it is essential for the user to correlate the\
    \ data to discrete points, and without this\ncorrelation, one cannot get insights\
    \ for the generated data. Now, to maintain correlation\nof high-speed data becomes\
    \ another bottleneck in edge computing. To overcome this\nissue, the workﬂow optimization\
    \ along with energy aware scheduling criteria becomes\na necessity for edge computing.\
    \ In this regard, ﬂexibility and agility could be achieved\nwith lower cost, whereby\
    \ rapid provisioning of data could be enabled with continuous\ninnovation, free\
    \ ﬂow of data transmission could be observed to and from sensors without\nbeing\
    \ clogged, on demand analytics with hybrid cloud and multicloud deployments could\n\
    be met, and distributed storage could be created in order to manage high-volume\
    \ generated\ndata. Having mentioned the aforementioned parameters, it could be\
    \ asserted in a nutshell\nthat agility and ﬂexibility need to be maintained at\
    \ the seconds or subseconds level of\ncomputing to manage the real-time complex\
    \ problems. Nonetheless, this has become\npossible with the help of IoT device\
    \ sensors. Since at the edge level, a ﬁnite amount of\nstorage is being maintained,\
    \ therefore the workﬂow optimization is to be designed in such\na way that it\
    \ can meet the real-time computing demands in seconds or subseconds level, i.e.,\n\
    Agriculture 2021, 11, 475\n21 of 37\nthe deﬁned system needs to be able to address\
    \ this problem of getting the data that come in\nquickly and starting to process\
    \ them to gain some insights into certain correlation and then\nkeep that storage\
    \ free for the next set of data that is coming in. Therefore, with respect to\n\
    workﬂow optimization, we need to look at the set of devices which needs to be\
    \ employed\nto be able to address all the data that are coming in. In this context,\
    \ if a High-Performance\nComputing (HPC) framework could be set over the edge\
    \ level, then the aforementioned\nissues are feasible to be resolved. It is essential\
    \ for the working of HPC framework attached\nto the edge to smoothen the workﬂow\
    \ optimization and scheduling criteria.\nVarious edge nodes require various types\
    \ of resources. To this end, it is necessary\nto select an appropriate scheduling\
    \ approach to ensure the consistency of resources and\nthe availability of services.\
    \ Researchers have suggested resource continuity management\napproaches, such\
    \ as the layered model Fog to Cloud (F2C) and OpenFog Reference Archi-\ntecture\
    \ (OpenFog RA) [180,181].\nThe F2C layered model is a novel architecture focused\
    \ on data sharing and data inte-\ngration that can achieve service parallelization\
    \ and less service execution time. OpenFog\nRA has been designed to meet the same\
    \ F2C objective [181]. Therefore, researchers are\nproposing a distributed management\
    \ system incorporating edge and cloud tools to efﬁ-\nciently achieve resource\
    \ consistency within a traditional hierarchical architecture [181,182].\nLi et\
    \ al. [183] came up with EveryLite, a lightweight scripting language for resource-\n\
    constrained, heterogeneous edge devices. Such tasks which are both time-limited\
    \ and\nspace-complex are referred to as microtasks by interfaces in the migration\
    \ process. In edge\ncomputing, EveryLite can perform microtasks. Kang et al. [184]\
    \ designed a lightweight\nscheduler that can automatically schedule tasks of different\
    \ layers of Deep Neural Networks\n(DNN) between mobile devices and the cloud data\
    \ center without proﬁling each program.\nBy becoming adapted to the lightweight\
    \ scheduler, working professionals can be adapted to\na range of low-latency and\
    \ energy-efﬁcient DNN architectures, hardware systems, wireless\nnetworks, and\
    \ server workloads.\nBy embracing cooperative competition and game theory, Zhang\
    \ et al. [122] established\nCoGTA, a system for allocation of tasks. For edge\
    \ computing systems, CoGTA aims at\ndelay-sensitive and social-sensing applications.\
    \ CoGTA may tackle a few crucial problems,\nsuch as Bottom-up Game-theoretic Task\
    \ Allocation (BGTA). Similarly, the Markovian\nstochastic channel was used by\
    \ Zhang et al. [185] to provide an optimal solution and\nofﬂoad strategy for collaborative\
    \ operation between cloud and edge devices. This problem\nof minimal energy scheduling\
    \ tasks can be formulated on directed acyclic graphs as a\nrestricted, shortest\
    \ path problem. This problem is then solved using the regular Lagrange\nRelaxation-dependent\
    \ Aggregated Cost (LARAC) algorithm.\nKwak et al. [186] suggested a dynamic allocation\
    \ algorithm for CPU/network resource\nor task in the mobile networking context.\
    \ To scale the CPU/network speed, they used\nthe Lyapunov optimization technique.\
    \ Meanwhile, Liang et al. [187] proposed a new\napproach to resource management\
    \ by taking into account both bandwidth availability and\nsource selection.\n\
    Data are distributed in edge computing which requires distributed data processing,\n\
    storage, and networking resources [0]. In addition, edge devices tend to be heterogeneous,\n\
    leading to a heterogeneous runtime environment and heterogeneous data on-edge\
    \ device.\nFurthermore, resources are limited on edge apps. As such, proposing\
    \ an optimum, complex,\nand energy-aware scheduling strategy in edge computing\
    \ is complicated. If resource\nabstraction and edge OS management would allow\
    \ developers to focus on their applications\nwithout trying to think about hardware,\
    \ connectivity, and code written for speciﬁc devices,\nthis would be a huge leap\
    \ forward for complex projects to be realized. This will reduce\ncomplexity, simplify\
    \ growth, and reduce edge computing costs for the ecosystem.\n3.3. HPC on Edge\
    \ (HPCE)\nThis new High-Performance Computing (HPC) solution seeks to move beyond\
    \ the\nagricultural services offered on edge and provide a comprehensive platform\
    \ for precision\nAgriculture 2021, 11, 475\n22 of 37\nfarming and animal husbandry\
    \ and furnish with utility not only for farmers but also for\nstakeholders. The\
    \ HPCE architecture is adapted from CYBELE conceptual framework [2].\nThe HPCE\
    \ model uses open and proprietary vast amounts of datasets, including sensor\n\
    readings, as well as satellite data and historic climatic and environmental information\
    \ for\nready reference. While this would be the most effective way to use HPC\
    \ technology, it\nonly uses the latest software platforms and projects that are\
    \ being developed by HPCE’s e-\ncontrolled services, as well as increased HPC\
    \ e-infrastructure to enable huge heterogeneous\ndata processing to be done and\
    \ ﬁnd modern solutions to complex problems using dedicated\nalgorithms. Due to\
    \ the interconnection of large-oriented approaches, varying datasets,\nand available\
    \ big data techniques, it is possible to scale distributed big data research to\n\
    enormous scales when holding many types of datasets together in one place [2].\
    \ In doing\nso, it enables the aggregated data and metadata to be aligned semantically\
    \ to a standard\nscheme and data model and enables advanced data analytics to\
    \ take secret information\ninto account. In addition to this, the HPCE architecture\
    \ will also help in gaining insights\nfrom adaptive data visualization services.\n\
    With reference to CYBELE [2], the architectural approach of the HPC on edge is\n\
    illustrated in Figure 12. By organizing a product component based on interdependencies,\n\
    this is intended to highlight the importance of pipelines being constructed to\
    \ promote\ncompatibility and show how to maintain the integrity of interdependent\
    \ services. It is worth\nnoting that CYBELE resonates well with the EdgeX platform\
    \ architecture. EdgeX platform\ncomprises four core services, i.e., device services,\
    \ core services, supporting services, and\napplication services to enable smooth\
    \ workﬂow optimization [188]. In addition, it will be\ninteresting to see a synchronization\
    \ of EdgeX with a dedicated HPC framework for faster\nbatch processing of data\
    \ over edge.\nFigure 12. High Performance Computing on Edge.\nBig, heterogeneous\
    \ data are made available through repositories powered by HPC\nwhich is responsible\
    \ for the processing at the edge layer. In this regard, as can be seen in\nFigure\
    \ 11, HPC frameworks such as Spark, Hadoop, YARN, Big Deep Learning (BigDL),\n\
    Directed Acyclic Graph (DAG), and Kubernetes are deployed for the batch processing\
    \ of\ndata using distributed framework attached to the edge layer [189]. It is\
    \ worth noting that\nSpark and BigDL are the widely used frameworks in many organizations\
    \ for their open\nsource and high degree of interoperability features. Spark and\
    \ BigDL are based on MapRe-\nduce framework which has high room for tuning for\
    \ smooth workﬂow optimization [190].\nThe transmission of the application process\
    \ interface along with data from the cloud layer\nto the edge layer is conducted\
    \ using 4G/5G or ﬁber/DOCSIS/DSL communication system.\nThis is seen on the middle\
    \ section of the architecture as shown in Figure 12. At ﬁrst,\nAgriculture 2021,\
    \ 11, 475\n23 of 37\nthe data are processed in the background prior to being passed\
    \ on to the check-in stage\nfor data validator or timestamp validator for resolution\
    \ of data veriﬁcation and timing\nproblems. Once data are obtained in edge layer,\
    \ quality checks are conducted to identify\nanomalies and any other data irregularities,\
    \ maintaining their accuracy and validity, which\nare accompanied by a series\
    \ of measures aligned with processes of data cleansing.\nFinally, the HPE data\
    \ provenance service provides the mechanisms required for\nrecording all relevant\
    \ information concerning incoming data of interest. With HPE, the\ndata provenance\
    \ platform is inherently connected to the data policy and asset brokerage\nengine\
    \ that enables the platform to bind data providers and data users with data share\n\
    and business features. In addition to facilitating interoperability and reuse\
    \ of data, the\ninspected data are annotated and harmonized semantically. Since\
    \ the data come from a\nvariety of physically distributed data sources, a standard\
    \ data model will be created for\nthe semantic deﬁnition and annotation of the\
    \ data. To facilitate the pipeline and allow the\nvarious heterogeneous components\
    \ to communicate seamlessly, the model will be used as\na common language to annotate\
    \ data and exchange messages between the components.\nClean and semantically uplifted\
    \ data are then available, i.e., open and proprietary data to\nbe queried, analyzed,\
    \ and viewed. An exempliﬁcation of how ground sensors have their\ndata stored\
    \ and analyzed at cloud data base is shown in Figure 13. The on-ﬁeld data are\n\
    continuously assessed by a real-time monitoring system to ensure triggering effects\
    \ if any\nthreshold point is crossed. Simultaneously, the on-ﬁeld data are also\
    \ stored in the cloud\ndatabase from where the user can download the required\
    \ data and at the same time, data\nanalysis could be applied using the machine\
    \ learning tools stored over the cloud database.\nFigure 13. Illustration for\
    \ storage and analysis of data from ground sensors to cloud database.\nTo facilitate\
    \ simulation execution, a deﬁned experimental composition setting is de-\nsigned,\
    \ as shown in the top right part of the architecture (cloud layer) in Figure 12.\
    \ The\ncomposition framework of experiments aims to support the separate design,\
    \ development,\nand execution of big data research procedures, the support of\
    \ embedded scientiﬁc compu-\ntation and reproductive tests. In the analysis method,\
    \ its subsequent template is selected\nto provide each analytical template with\
    \ its own software and execution endpoint and\nallow the user to modify the appropriate\
    \ conﬁguration variables (i.e., input algorithm,\nexecution parameters, netting\
    \ parameters, and output parameters). The results of each\nanalytical template\
    \ are presented. The composition system for experiments will promote\nthe design\
    \ and implementation of data analysis workﬂows consisting of a number of data\n\
    analysis procedures, interconnected in terms of data sources and input and output\
    \ artifacts.\nThe outcome will constitute the input to another research template\
    \ when a template is\nAgriculture 2021, 11, 475\n24 of 37\nexecuted. The output\
    \ of the research model is an object for session that contains all the\nmemory\
    \ output values.\nIn addition to big data, advanced analysis must be implemented\
    \ when selecting input\ndatasets and developing workﬂows. For HPCE, advanced analytical\
    \ algorithms are avail-\nable to stakeholders that allow them to explore various\
    \ forms of data visually and to ﬁnd\nand solve new trends. In order to achieve\
    \ improved delivery and monitoring, machining\nand predictive modelling methods\
    \ should be modiﬁed so as to handle the predictive life\ncycle of data planning,\
    \ detection, and analysis. However, the implementation of advanced\nanalytics\
    \ along with huge, complex data increases the need for strong computing power\n\
    and a higher processing memory, so that information can be collected within a\
    \ realistic\ntimeframe. When the test cases are executed, multiple HPC attributes\
    \ are needed, including\nstorage power, speed of the device, memory capacity,\
    \ and quick turnaround time.\nThe next section discusses the IoT-based communication\
    \ methodologies in edge\ncomputing used for precision farming developed by several\
    \ researchers.\n3.4. Edge Computing in Precision Farming\nIoT incorporation in\
    \ precision farming has brought about changes in the communica-\ntions of actuators\
    \ and sensors with remote servers. With respect to networking technologies,\n\
    modern IoT-capable nodes provide new energy-saving transceivers and network topologies\n\
    that are tailored to ﬁeld conditions where mobile and WiFi base stations are rare\
    \ [191].\nMultiple topologies that use wireless sensor networks can route data\
    \ messages via commu-\nnication nodes to reach a gateway with the internet connectivity,\
    \ as shown in the proposal\nfrom Akka and Sokullu [192].\nMore recent developments\
    \ with IoT involve network protocols to communicate\nthrough the internet with\
    \ remote devices via applications designed for data reduction. For\nmonitoring\
    \ purposes, for example [191,193,194], researchers used the MQTT protocol for\n\
    data collection from sensor nodes at greenhouses. These protocols allowed the\
    \ gathering\nand analysis by Shukla et al. of data at intermediate cloud middleware\
    \ [195]. A further\nexpanded analysis of this topic can be found in the work of\
    \ Kalox et al. [196]. A gateway\nusing ZigBee collects data from a real deployment\
    \ of sensors, which are then sent to a\ndata cloud driven by FIWARE through web-based\
    \ protocols. The work takes advantage\nof open interfaces to build a number of\
    \ client applications that can access the cloud mod-\nule. However, no IoT protocols\
    \ are used, and only an early version of FIWARE is used.\nMartinez et al. [197]\
    \ presented research on how to handle crops in PA environments using\nthe cloud\
    \ plane. The FIWARE core is used here, along with a collection of additional en-\n\
    ablers, to communicate with IoT gateways through a variety of protocols, such\
    \ as Message\nQueuing Telemetry Transport (MQTT) or Constrained Application Protocol\
    \ (CoAP), where\ncurrent and historical data are stored in the cloud for analytics.\
    \ The output of FIWARE\nis assessed for PA using a collection of synthetic tests,\
    \ but no real implementation of the\nproposal is provided. As per Zyrianoff et\
    \ al. [198], a reﬁned optimization has to be made in\nFIWARE to get it implemented\
    \ over fog computing domain.\nThe incorporation of intermediate processing stages\
    \ in the data path is an evolution\nof mainly cloud-based platforms. Before sending\
    \ monitored data to the cloud, Liu [199]\nperformed local preprocessing at data\
    \ collection gateways. Ferrandez-Pastor et al. [200]\nexpanded on this concept\
    \ by evaluating a range of IoT protocols and technologies in a\nreal hydroponic\
    \ implementation to achieve effective computation-ofﬂoading. Moreover, a\nsimilar\
    \ method for computation ofﬂoading was also implemented by Chang et al. [201]\n\
    in the domain of aeroponics. However, in these works, a lack of ﬂexibility is\
    \ noticeable\nin the way edge computing is implemented, and this layer is exclusively\
    \ oriented to data\nfusion. Guillen et al. [202] proposed a hybridization of Artiﬁcial\
    \ Intelligence (AI) with IoT\nin precision agriculture. However, it was found\
    \ that there is still a big gap between AI and\nIoT due to computational resources.\
    \ In this regard, they proposed an inclusion of Graphical\nProcessing Unit (GPU)\
    \ in the edge device to enhance the computational services [202]. For\nan efﬁcient\
    \ computation ofﬂoading, Chen et al. [203] proposed ThriftyEdge which has the\n\
    Agriculture 2021, 11, 475\n25 of 37\nsubstantial potential to support computational\
    \ intensive tasks by proper ofﬂoading across\nlocal device and edge cloud in proximity.\
    \ ThriftyEdge is well suited to be deployed in ad\nhoc networks for precision\
    \ agriculture [203].\nThe IoT-based generic monitoring system was deﬁned by Oliver\
    \ et al. [204]. It was\ndeployed and validated on ﬂoriculture domain, with a setup\
    \ of monitoring weather and\nsoil conditions. Strategically, the goal was to foresee\
    \ such diseases which could impede\nplantations proactively. For example, bacterial\
    \ leaf spots, damp-off root rots, soft rots, and\nbacterial spots are among such\
    \ diseases. HPE’s overall architecture is cloud-centric and\nuses an edge computer\
    \ node to gather information from the distributed sensor network.\nMySense is\
    \ a generic framework for the rapid development and use of precision wine sce-\n\
    narios monitoring application [205]. It consists of four layers, including sensors/actuators,\n\
    WSN/gateway, web, and cloud applications. For local tasks and real-time alarm\
    \ generation,\nfog computing is used on the WSN/gateway layer. The platform was\
    \ used in a winery to\nstudy the dynamics of diseases in the current microclimatic\
    \ setting.\nThe necessary ingredient that makes farming operations work is consistent,\
    \ productive\nsoil. Lavanya et al. [206] came up with an Internet-of-Things-based\
    \ sensing framework\nfor assessing nitrogen, phosphorous, potassium (NPK) concentrations\
    \ in soil. In order to\nallow a colorimetric approach in the sensor, Light Dependent\
    \ Resistors (LDR) and Light\nEmitting Diodes (LEDs) were used. A fuzzy rule-based\
    \ method implemented on an edge\ncomputer using Raspberry Pi was used to assess\
    \ the sensed values pertaining to nutrient\ndeﬁciency. To assess other nutrient\
    \ shortages, additional rules were added to this rationale.\nThis method was low-cost\
    \ and provided a quick alternative compared to laboratory testing\nmethods, which\
    \ take a longer time and are also costly. Soil fertility is optimized by assisting\n\
    farmers in effectively managing their soil nutrition, resulting in cost savings,\
    \ improved\nﬁeld management, and increased environmental conservation by eliminating\
    \ runoff and\nleaching pollution. Park et al. [207] presented an exemplary case\
    \ study in the domain\nof tomato production that demonstrated how edge computing\
    \ generated scalable data\nanalytics. In this case, a Raspberry Pi served as a\
    \ sensor setup base station and a network\nedge node. On the edge node, a prediction\
    \ analysis was implemented for the growth state\nof cherry tomato, and the data\
    \ generated were sent to a cloud-based central server for\nmodel integration and\
    \ analytical interpretation to gain insights to predict results. This\nstrategy\
    \ not only reduces data ﬂow, but it also allows farmers to preserve their data.\n\
    Atmospheric temperature is a critical factor for the productivity of plants, and\
    \ in\nthis regard, it plays a prominent role in irrigation planning and greenhouse\
    \ management.\nKrintz et al. [208] used Single Spectrum Analysis (SSA) along with\
    \ linear regression to\nintroduce a temperature forecast system using low-cost\
    \ microcontrollers and single board\ncomputer. The introduction of edge computing\
    \ in their methodological paradigm drasti-\ncally reduced the factor of latency.\
    \ The advantageous part of their developed system is\nthat the farmers can opt\
    \ for a microclimate monitoring network rather than installing a\nsophisticated\
    \ weather station.\nFan and Gao [209] also looked at task parallelism in mobile\
    \ edge computing. An\nofﬂoading delay may arise because of the transmission characteristics.\
    \ In addition, com-\nputation delay normally happens over cloud transactions while\
    \ determining when to\ncontinue with the operation. Merelli et al. [210] looked\
    \ at edge computing as a foundation\nfor metagenomics research in agriculture,\
    \ and found feasibility for remote microbial studies\nof water, air, and soil.\
    \ Traditional methods for metagenomics research necessitate a large\namount of\
    \ data transfer to the cloud. However, with the advent of advanced edge tech-\n\
    nologies, remote analyses can be performed, and the results can be sent to the\
    \ cloud using\na combination of System-on-a-Chip (SoC) and edge computing. A mix\
    \ of edge and cloud\nprovides a highly appealing approach to provide complete\
    \ analysis workﬂows. The results\nof the experiments revealed a 95 percent reduction\
    \ in data streaming, thereby demonstrat-\ning the feasibility of metagenomic research\
    \ at a remote level. For singular analyses, an edge\nsolution is feasible. On\
    \ the other hand, a subsequent work by the authors in the domain of\nmetagenomics\
    \ revealed that shifting computation to the cloud improves cost and efﬁciency\n\
    Agriculture 2021, 11, 475\n26 of 37\nas the frequency of analyses increases [211].\
    \ Nonetheless, if AI and blockchain can be\nincorporated over IoT services, then\
    \ the farmers and the stakeholders will obtain a better\nunderstanding of the\
    \ crops along with a fast and easy way to characterize genetically\nmodiﬁed crops\
    \ [212]. In addition, with the help of AI, water usage can be optimized and it\n\
    will also be possible to determine whether the treated wastewater is suitable\
    \ for irrigation at\na given point in time and what are the relevant crops on\
    \ which the treated wastewater can\nbe used, depending upon its composition [212].\
    \ Table 4 summarizes previous researchers’\nedge computing techniques in their\
    \ respective agricultural domains.\nTable 4. Usage of edge computing techniques\
    \ in the domain of agriculture.\nDomain\nEdge Computing Features\nReference\n\
    Greenhouse monitoring\nMultihop topologies using wireless technology\n[192]\n\
    Greenhouse monitoring\nMQTT Protocol\n[194]\nPrecision agriculture\nAnalysis at\
    \ intermediate cloud middleware\n[193]\nPrecision agriculture\nZigBee powered\
    \ by FIWARE\n[196]\nPrecision agriculture\nFIWARE using MQTT and CoAP protocol\n\
    [197]\nPrecision irrigation\nFIWARE for IoT-enabled smart farms\n[198]\nPrecision\
    \ agriculture\nPreprocessing at gateways\n[199]\nHydroponics\nPreprocessing at\
    \ gateways (computational ofﬂoading)\n[200]\nPrecision agriculture\nGPU-based\
    \ edge device\n[202]\nAeroponics\nComputation ofﬂoading\n[203]\nPrecision agriculture\n\
    ThriftyEdge for computation ofﬂoading\n[203]\nDisease modelling (viticulture)\n\
    Generic monitoring at edge using IoT paradigm\n[204]\nViticulture\nmySense for\
    \ distributed sensor network\n[205]\nSoil fertility\nComputation ofﬂoading (data\
    \ analysis)\n[206]\nTomato production\nComputation ofﬂoading (privacy protection)\n\
    [206]\nMicroclimate (temperature)\nComputation ofﬂoading (data analysis)\n[206]\n\
    Metagenomics\nComputation ofﬂoading (data analysis)\n[206,210]\nWater quality\n\
    Latency reduction\n[209]\n4. Challenges and Considerations for Farmers\nAdvanced\
    \ technologies which can provide economically competitive domain to farm-\ning\
    \ sector along with ﬁnancial viability whilst enhancing environmental efﬁciency\
    \ and\nbeing socially acceptable are the need of the hour in terms of sustainability.\
    \ However, given\nthe availability of capital, meeting these sustainability targets\
    \ would often entail trade-offs.\nFurthermore, the objectives are “moving goals”\
    \ that must adapt to new problems and pri-\norities. Technological advancements\
    \ are rapid; however, their deployment in the farming\nsector remains incomplete.\
    \ It is quite common practice with the farmers in developing\nnations that they\
    \ tend to opt for trial-and-error methods in technology adoption rather than\n\
    following a systematic way. This could have signiﬁcant consequences for farm structure\n\
    and the number of farmers who will be able to make a living in the future.\n4.1.\
    \ Awareness Regarding the Latest Ongoing Technology\nAn initiative toward better\
    \ farmer education and training along with the help of\nﬁnancial resources, non-government\
    \ organizations, the media, and the general public\ncan contribute to making sustainable\
    \ farm technology adoption easier. Dedicated laws\ncan be put forward by the government\
    \ which may comprise incentives and disincentives\nfor the adoption of the latest\
    \ technology. Environmental laws along with zoning codes,\nanimal welfare guidelines,\
    \ and public health policies, are increasingly constraining farmers’\nactions.\
    \ In this regard, there is a deemed requirement for tailored digital technology\
    \ which\nthe farmers should get acquainted with. However, because of the numerous\
    \ parameters\ncomprising policy factors and economic situation at the helm in\
    \ different contexts, there is\nno adequate explanation for why farmers implement\
    \ speciﬁc technologies. Therefore, it\nbecomes necessary for the respective governments\
    \ to furnish substantial knowledge and\ninfrastructure to farmers to uplift their\
    \ respective agriculture segments.\nAgriculture 2021, 11, 475\n27 of 37\n4.2.\
    \ Government Support to Provide Adequate Infrastructure\nIt is important to determine\
    \ which innovations are most effective in particular situa-\ntions in respective\
    \ agricultural segments and it is also important to ensure an appropriate\nmechanism\
    \ to provide incentives to promote the achievement of sustainability goals for\
    \ the\nbeneﬁt of global welfare. Rationale for priorities of food production in\
    \ an environmentally\nfriendly way is often accomplished by the use of suitable\
    \ technologies. To achieve these\nobjectives, some goals need to be tweaked in\
    \ agricultural activities by aligning interests\nwith those goals. Additional\
    \ perks can be allocated to the farmers who understand the\nbeneﬁts from technology\
    \ and practice them.\nMore follow-up is needed in monitoring the implementation\
    \ of innovations in order\nto ensure transparency in policy factor and research\
    \ activities pertaining to the adoption\nof new technology in the agrisector.\
    \ Post implementation evaluations of results will\nhelp to correct mistakes before\
    \ too much money is pumped into the wrong segment.\nThis is critical because agricultural\
    \ innovations come from a variety of places. Rating\ntechnologies and predicting\
    \ potential future patterns will aid policymakers in moving\ntoward sustainable\
    \ agriculture.\nA broader participatory approach involving a variety of stakeholders\
    \ would promote\nthe implementation of innovations for sustainable farming systems.\
    \ Farmers along with\nconsumer groups and the associated agricultural food industry\
    \ who are inclined towards\nsustainable farming should be included as stakeholders.\
    \ Since sustainable technologies\nare applied at the farm level, therefore the\
    \ farmers must be involved in the technology\nadoption discussion. In an ideal\
    \ world, there will be a stronger sense of ownership in\nthe selection of technology\
    \ in the entire agricultural food chain. Farmers’ adoption of\ntechnology is inﬂuenced\
    \ by the associated industries. However, the industrial segment\nshould learn\
    \ from the farmers’ requirements, which will help them to standardize the latest\n\
    technology, which in turn will make a substantial impact on the farming sector.\n\
    4.3. Soil Analysis to Promote Variety of Crop Growth\nIn countries where farming\
    \ is still done in the conventional way, farmers grow crops\nby planting without\
    \ understanding the properties of soil and its quality. As a result of this,\n\
    in the long run, farmers will not beneﬁt from the amount of money they will earn\
    \ from\ntheir farming. The current soil testing process uses a manual method which\
    \ ﬁrst involves\nthe sampling of soil and then the submission of samples to laboratories\
    \ for analysis. Due\nto the lengthy and laborious process, this manual process\
    \ is inefﬁcient. Because of human\ninterference, there is a risk of human error.\
    \ As a result, farmers could obtain inaccurate\ninformation. In that case, there\
    \ is a need for an automated method for soil testing and crop\nprediction. Soil\
    \ testing is crucial because soil testing assists in understanding the fertility\n\
    of soil and this allows predictions to be made about the potential crop yield.\
    \ Therefore,\na system could be proposed that consists of a handheld device which\
    \ will provide a pH\nreading and will help estimate the quantity of nitrogen (N),\
    \ phosphorus (P), and potassium\n(K) in the soil. In addition, a classiﬁcation\
    \ algorithm can be developed to determine\ncrops suitable for speciﬁc applications\
    \ based on the data obtained from the system, and\naccordingly the appropriate\
    \ fertilizers for the ﬁeld can be provided.\n4.4. Providing Meteorological Services\
    \ to the Farmers\nBringing weather and climate knowledge into agricultural decision\
    \ making has con-\ntributed to an increase in agricultural production in many\
    \ countries. However, in develop-\ning countries where several small farms are\
    \ rain-fed, it is difﬁcult to get access to weather\nand climate information to\
    \ help direct decision making. Government ofﬁcials should\nconsider this critical\
    \ knowledge which is useful to farmers and others dealing with poverty\nand hunger.\
    \ This situation continues because national meteorological and hydrological\n\
    services in developing countries do not receive adequate funding to cover the\
    \ expense of\ndelivering these services to the farmers. The government lacks substantial\
    \ information\nabout the signiﬁcant role of meteorological services which contribute\
    \ to the socioeconomic\nAgriculture 2021, 11, 475\n28 of 37\ndevelopment of the\
    \ nation. This state of obliviousness prevails even though governments\nconfront\
    \ multiple challenging issues in the realm of agriculture, water resources manage-\n\
    ment, health, and disaster risk mitigation, all of which are heavily affected\
    \ by weather\nand environment.\nDespite repeated periods of drought and crop failure,\
    \ as well as occasional famines,\nﬂooding often leads to losses of human life\
    \ and major property destruction. In addition,\nit also causes wide-ranging impacts\
    \ on socioeconomic growth. Therefore, it is only with\nthe advent of recent development\
    \ that there has been substantial study into quantifying\nthe beneﬁts of weather\
    \ and climate knowledge-related services. It is deemed necessary to\ntake small\
    \ steps by undertaking pilot projects to research the socioeconomic gains of using\n\
    weather and climate information-related services in agriculture.\n4.5. Yield Production\n\
    The feasibility of smart farming relies on internet connectivity and a panel to\
    \ accom-\nmodate the sensor hub. Using these features, it has become easier for\
    \ the farmers to monitor\nthe process of cultivation using their smart devices.\
    \ With the aid of sensors and intercon-\nnectivity, the smart farming initiative\
    \ helps farmers to optimize the consumption of water,\npesticide, and fertilizers\
    \ to maintain the yield quality by maintaining several parameters\nsuch as soil\
    \ condition, level of pesticide, temperature, and humidity. The system can be\n\
    made more successful by combining the fertilization and pesticide spraying systems,\
    \ all of\nwhich can be managed with an IoT application. Farmers may decide which\
    \ variety of crop\nis compatible for cultivation with their respective farm. Accordingly,\
    \ the farmers can opt\nfor innovative technologies such as drone-based farming\
    \ and various weather prediction\ntools, etc.\nYoung agropreneurs involved in\
    \ cultivation business can beneﬁt from smart farming\nin terms of farm maintenance,\
    \ irrigation, fertilization, and pesticide application. The\nsensors in the smart\
    \ farming paradigm are tailored to report various readings, including\nmeasurements\
    \ pertaining to the number of pesticides and fertilizers, irrigation pump\nstatus,\
    \ humidity, and temperature. The readings also provide details pertaining to the\n\
    growth timeline of the crop, as well as the crop type, i.e., when it was grown,\
    \ the date it\nwas cultivated, and how much was harvested. In agriculture, IoT\
    \ is seen as a prominent\nand promising factor in the agricultural domain which\
    \ can boost the yield in a quick\nmanner. In addition, the smart farming paradigm\
    \ can also serve as an avenue for the\nstartup companies to invest in.\n4.6. Sustainable\
    \ Land Use\nThere have been empirical studies that have attempted to quantify\
    \ the effect of agri-\ncultural policies associated with land use sustainability;\
    \ however, these studies turned out\nto be inconclusive. Although different opinions\
    \ on the relationship between prices and soil\ndeterioration derive from differences\
    \ in discount rates and risk aversion preferences, it is\nimportant to deﬁne these\
    \ differences as this allows for better clariﬁcation when participat-\ning in\
    \ discussions with others. To understand the impacts of changes in relative prices\
    \ on\nagricultural resource distribution, four different responses can be distinguished:\
    \ (i) expan-\nsion of the total agricultural area (extensiﬁcation); (ii) rise\
    \ in the number of agricultural\ninputs used, also known as intensiﬁcation; (iii)\
    \ change in technology; and (iv) change in\ncrop choices. A differentiation is\
    \ to be made among recurring costs that are capable of\nraising productivity and\
    \ ﬁxed asset investments that work to enhance soil quality in the\nlong term.\n\
    If greater agricultural production occurs as a result of increased area, impact\
    \ on the\nenvironment in terms of deforestation, overgrazing, ﬂooding, and sedimentation\
    \ is a likely\nresult. If there are changes in cropping activities at the same\
    \ time as the expansion of\nthe land area, then the new cropping activities will\
    \ have an effect due to the soil quality\nthat depends on the negative impacts\
    \ of previous cropping activities on the resource.\nTherefore, it is unclear whether\
    \ the interplay among agricultural policies, along with\nAgriculture 2021, 11,\
    \ 475\n29 of 37\nthe supply response of farmers and the implications for sustainable\
    \ land use has been\nadequately explored.\n5. Conclusions\nThe scope of the current\
    \ paper is to introduce and pave the way for smart sensing\nwith edge computing\
    \ technology in the developing nations, whose gross domestic product\nrelies substantially\
    \ on agriculture. In this regard, the applicability of various sensing\ntechnologies\
    \ with an ease of edge computing has been put forward in this paper. Smart\nsensors\
    \ offer intriguing possibilities for precision agriculture. As of now, ongoing\
    \ research\nin edge computing and smart sensing for agricultural domain is only\
    \ in its initial stage.\nNonetheless, prototypes of edge computing systems have\
    \ already been developed by\nmany researchers for speciﬁc agricultural domains;\
    \ however, the interpretability of edge\ncomputing techniques with various sensing\
    \ units still remains a challenge. There is a\nneed to set up and deploy cost-effective\
    \ high-performance computing-based edge nodes\nto enable smooth data ﬂow operations\
    \ for precision agriculture. Implementing these\nsophisticated and efﬁcient edge\
    \ technologies will solve these issues and in a broader\nperspective, this will\
    \ open up a new segment for farmers in developing nations. In\naddition to this,\
    \ a major problem to be dealt with in this context is inadequate internet\nconnectivity,\
    \ which is seen as a global issue and which affects the growth of developing\n\
    and underdeveloped nations because not every region of the world has access to\
    \ the\ninternet. In a nutshell, to uplift the agricultural domain in developing\
    \ nations, a dedicated\ncost-effective infrastructure is required which can completely\
    \ digitize the farming sector in\nthe best possible way.\nAuthor Contributions:\
    \ Conceptualization, M.N.A. and A.J.S.; Formal analysis, M.N.A., A.K. and\nH.A.;\
    \ Funding acquisition, E.A.B. and A.R.O.; Methodology, M.N.A., A.K., E.A.B.; Project\
    \ admin-\nistration, E.A.B., A.R.O.; Supervision, M.N.A. and H.A.; Writing—original\
    \ draft, M.N.A. and A.K.;\nWriting—review & editing, A.R.O., M.N.A., A.J.S. All\
    \ authors have read and agreed to the published\nversion of the manuscript.\n\
    Funding: The authors would like to acknowledge the RU Top-Down research grant\
    \ (1001/PAERO/870052)\nprovided by the Research Creativity and Management Ofﬁce,\
    \ Universiti Sains Malaysia to support\nthis research. Partial assistance has\
    \ also been taken from USM grant RUI (1001.PAERO.8014035) to\nsupport this research.\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: Dataset can be formally requested\
    \ from the corresponding authors.\nAcknowledgments: The authors would like to\
    \ extend special thanks to S. A. Khan from IIUM,\nMalaysia for providing his support\
    \ in accomplishing this research.\nConﬂicts of Interest: The authors declare that\
    \ they have no known competing ﬁnancial interests or\npersonal relationships that\
    \ could have appeared to inﬂuence the work reported in this paper.\nReferences\n\
    1.\nRoutray, S.K.; Javali, A.; Sharma, L.; Ghosh, A.D.; Sahoo, A. Internet of\
    \ Things Based Precision Agriculture for Developing\nCountries. In Proceedings\
    \ of the 2019 International Conference on Smart Systems and Inventive Technology\
    \ (ICSSIT), Tirunelveli,\nIndia, 27–29 November 2019; pp. 1064–1068.\n2.\nPerakis,\
    \ K.; Lampathaki, F.; Nikas, K.; Georgiou, Y.; Marko, O.; Maselyne, J. CYBELE–Fostering\
    \ Precision Agriculture & Livestock\nFarming Through Secure Access to Large-Scale\
    \ HPC Enabled Virtual Industrial Experimentation Environments Fostering Scalable\n\
    Big Data Analytics. Comput. Netw. 2020, 168, 107035.\n3.\nNicholson, C.F.; Stephens,\
    \ E.C.; Kopainsky, B.; Thornton, P.K.; Jones, A.D.; Parsons, D.; Garrett, J. Food\
    \ Security Outcomes in\nAgricultural Systems Models: Case Examples and Priority\
    \ Information Needs. Agric. Syst. 2021, 188, 103030. [CrossRef]\n4.\nPanchasara,\
    \ H.; Samrat, N.H.; Islam, N. Greenhouse Gas Emissions Trends and Mitigation Measures\
    \ in Australian Agriculture\nSector—A Review. Agriculture 2021, 11, 85. [CrossRef]\n\
    5.\nPoveda, J. Insect Frass in the Development of Sustainable Agriculture. A Review.\
    \ Agron. Sustain. Dev. 2021, 41, 1–10. [CrossRef]\nAgriculture 2021, 11, 475\n\
    30 of 37\n6.\nLopes, C.; Herva, M.; Franco-Uría, A.; Roca, E. Inventory of Heavy\
    \ Metal Content in Organic Waste Applied as Fertilizer in\nAgriculture: Evaluating\
    \ the Risk of Transfer into the Food Chain. Environ. Sci. Pollut. Res. 2011, 18,\
    \ 918–939. [CrossRef]\n7.\nArora, M.; Kiran, B.; Rani, S.; Rani, A.; Kaur, B.;\
    \ Mittal, N. Heavy Metal Accumulation in Vegetables Irrigated with Water from\n\
    Different Sources. Food Chem. 2008, 111, 811–815. [CrossRef]\n8.\nNagajyoti, P.C.;\
    \ Lee, K.D.; Sreekanth, T.V.M. Heavy Metals, Occurrence and Toxicity for Plants:\
    \ A Review. Environ. Chem. Lett.\n2010, 8, 199–216. [CrossRef]\n9.\nRai, P.K.;\
    \ Lee, S.S.; Zhang, M.; Tsang, Y.F.; Kim, K.-H. Heavy Metals in Food Crops: Health\
    \ Risks, Fate, Mechanisms, and\nManagement. Environ. Int. 2019, 125, 365–385.\
    \ [CrossRef]\n10.\nKeith, L.S.; Wohlers, D.W.; Moffett, D.B.; Rosemond, Z.A. ATSDR\
    \ Evaluation of Potential for Human Exposure to Tungsten.\nToxicol. Ind. Health\
    \ 2007, 23, 309–345. [CrossRef]\n11.\nRai, P.K.; Kim, K.-H.; Lee, S.S.; Lee, J.-H.\
    \ Molecular Mechanisms in Phytoremediation of Environmental Contaminants and\n\
    Prospects of Engineered Transgenic Plants/Microbes. Sci. Total Environ. 2020,\
    \ 705, 135858. [CrossRef]\n12.\nSandeep, G.; Vijayalatha, K.R.; Anitha, T. Heavy\
    \ Metals and Its Impact in Vegetable Crops. Int. J. Chem. Stud. 2019, 7, 1612–1621.\n\
    13.\nChukwuemeka, P.-I.K.; Hephzibah, N.U. Potential Health Risk from Heavy Metals\
    \ via Consumption of Leafy Vegetables in the\nVicinity of Warri Reﬁning and Petrochemical\
    \ Company, Delta State, Nigeria. Ann. Biol. Sci. 2018, 6, 30–37.\n14.\nGao, Y.;\
    \ Zhou, P.; Mao, L.; Zhi, Y.; Shi, W. Assessment of Effects of Heavy Metals Combined\
    \ Pollution on Soil Enzyme Activities\nand Microbial Community Structure: Modiﬁed\
    \ Ecological Dose–Response Model and PCR-RAPD. Environ. Earth Sci. 2010, 60,\n\
    603–612. [CrossRef]\n15.\nTiwari, S.; Lata, C. Heavy Metal Stress, Signaling,\
    \ and Tolerance Due to Plant-Associated Microbes: An Overview. Front. Plant.\n\
    Sci. 2018, 9, 452. [CrossRef]\n16.\nMeena, A.K.; Mishra, G.K.; Rai, P.K.; Rajagopal,\
    \ C.; Nagar, P.N. Removal of Heavy Metal Ions from Aqueous Solutions Using\nCarbon\
    \ Aerogel as an Adsorbent. J. Hazard. Mater. 2005, 122, 161–170. [CrossRef]\n\
    17.\nRai, P.K. Heavy Metal Phytoremediation from Aquatic Ecosystems with Special\
    \ Reference to Macrophytes. Crit. Rev. Environ. Sci.\nTechnol. 2009, 39, 697–753.\
    \ [CrossRef]\n18.\nGall, J.E.; Boyd, R.S.; Rajakaruna, N. Transfer of Heavy Metals\
    \ Through Terrestrial Food Webs: A Review. Environ. Monit. Assess.\n2015, 187,\
    \ 1–21. [CrossRef]\n19.\nShen, Z.J.; Chen, Y.S.; Zhang, Z. Heavy Metals Translocation\
    \ and Accumulation from the Rhizosphere Soils to the Edible Parts of\nthe Medicinal\
    \ Plant Fengdan (Paeonia ostii) Grown on a Metal Mining Area, China. Ecotoxicol.\
    \ Environ. Saf. 2017, 143, 19–27.\n[CrossRef]\n20.\nEl Hamiani, O.; El Khalil,\
    \ H.; Sirguey, C.; Ouhammou, A.; Bitton, G.; Schwartz, C.; Boularbah, A. Metal\
    \ Concentrations in Plants\nfrom Mining Areas in South Morocco: Health Risks Assessment\
    \ of Consumption of Edible and Aromatic Plants. CLEAN Soil Air\nWater 2015, 43,\
    \ 399–407. [CrossRef]\n21.\nBolan, S.; Kunhikrishnan, A.; Seshadri, B.; Choppala,\
    \ G.; Naidu, R.; Bolan, N.S.; Ok, Y.S.; Zhang, M.; Li, C.G.; Li, F. Sources,\n\
    Distribution, Bioavailability, Toxicity, and Risk Assessment of Heavy Metal (Loid)\
    \ s in Complementary Medicines. Environ. Int.\n2017, 108, 103–118. [CrossRef]\n\
    22.\nKim, S.W.; Chae, Y.E.; Moon, J.M.; Kim, D.K.; Cui, R.X.; An, G.; Jeong, S.W.;\
    \ An, Y.J. In situ Evaluation of Crop Productivity and\nBioaccumulation of Heavy\
    \ Metals in Paddy Soils after Remediation of Metal-Contaminated Soils. J. Agric.\
    \ Food Chem. 2017, 65,\n1239–1246. [CrossRef]\n23.\nKohzadi, S.; Shahmoradi, B.;\
    \ Ghaderi, E.; Loqmani, H.; Maleki, A. Concentration, Source, and Potential Human\
    \ Health Risk of\nHeavy Metals in the Commonly Consumed Medicinal Plants. Biol.\
    \ Trace Elem. Res. 2019, 187, 41–50. [CrossRef]\n24.\nLi, F.; Shi, W.; Jin, Z.;\
    \ Wu, H.; Sheng, G.D. Excessive Uptake of Heavy Metals by Greenhouse Vegetables.\
    \ J. Geochem. Explor. 2017,\n173, 76–84. [CrossRef]\n25.\nYu, L.; Xin, G.; Gang,\
    \ W.; Zhang, Q.; Qiong, S.; Guoju, X. Heavy Metal Contamination and Source in\
    \ Arid Agricultural Soil in\nCentral Gansu Province, China. J. Environ. Sci. 2008,\
    \ 20, 607–612.\n26.\nChopra, A.K.; Pathak, C.; Prasad, G. Scenario of Heavy Metal\
    \ Contamination in Agricultural Soil and Its Management. J. Appl.\nNat. Sci. 2009,\
    \ 1, 99–108. [CrossRef]\n27.\nHuang, M.; Zhu, Y.; Li, Z.; Huang, B.; Luo, N.;\
    \ Liu, C.; Zeng, G. Compost as a Soil Amendment to Remediate Heavy Metal-\nContaminated\
    \ Agricultural Soil: Mechanisms, Efﬁcacy, Problems, and Strategies. Water Air\
    \ Soil Pollut. 2016, 227, 1–18. [CrossRef]\n28.\nFeng, W.; Guo, Z.; Xiao, X.;\
    \ Peng, C.; Shi, L.; Ran, H.; Xu, W. A Dynamic Model to Evaluate the Critical\
    \ Loads of Heavy Metals in\nAgricultural Soil. Ecotoxicol. Environ. Saf. 2020,\
    \ 197, 110607. [CrossRef] [PubMed]\n29.\nWu, J.; Li, J.; Teng, Y.; Chen, H.; Wang,\
    \ Y. A Partition Computing-Based Positive Matrix Factorization (PC-PMF) Approach\
    \ for\nthe Source Apportionment of Agricultural Soil Heavy Metal Contents and\
    \ Associated Health Risks. J. Hazard. Mater. 2020, 388,\n121766. [CrossRef]\n\
    30.\nWild, S.R.; Jones, K.C. Organic Chemicals Entering Agricultural Soils in\
    \ Sewage Sludges: Screening for Their Potential to Transfer\nto Crop Plants and\
    \ Livestock. Sci. Total Environ. 1992, 119, 85–119. [CrossRef]\n31.\nRai, P.K.\
    \ Impacts of Particulate Matter Pollution on Plants: Implications for Environmental\
    \ Biomonitoring. Ecotoxicol. Environ.\nSaf. 2016, 129, 120–136. [CrossRef]\n32.\n\
    Rai, P.K. Biomagnetic Monitoring Through Roadside Plants of an Indo-Burma Hot\
    \ Spot Region; Elsevier: London, UK, 2016.\nAgriculture 2021, 11, 475\n31 of 37\n\
    33.\nLi, R.; Wu, H.; Ding, J.; Fu, W.; Gan, L.; Li, Y. Mercury Pollution in Vegetables,\
    \ Grains and Soils from Areas Surrounding\nCoal-Fired Power Plants. Sci. Rep.\
    \ 2017, 7, 1–9. [CrossRef] [PubMed]\n34.\nShahid, M.; Dumat, C.; Khalid, S.; Schreck,\
    \ E.; Xiong, T.; Niazi, N.K. Foliar Heavy Metal Uptake, Toxicity and Detoxiﬁcation\
    \ in\nPlants: A Comparison of Foliar and Root Metal Uptake. J. Hazard. Mater.\
    \ 2017, 325, 36–58. [CrossRef] [PubMed]\n35.\nFernández, V.; Eichert, T. Uptake\
    \ of Hydrophilic Solutes Through Plant Leaves: Current State of Knowledge and\
    \ Perspectives of\nFoliar Fertilization. CRC Crit. Rev. Plant. Sci. 2009, 28,\
    \ 36–68. [CrossRef]\n36.\nFrenken, K.; Kiersch, B. Monitoring Agricultural Water\
    \ Use at Country Level: Experiences of a Pilot Project in Benin and Ethiopia;\
    \ FAO:\nRome, Italy, 2011.\n37.\nHamilton, A.J.; Mebalds, M.; Aldaoud, R.; Heath,\
    \ M. A Survey of Physical, Agrochemical and Microbial Characteristics of\nWaste-Water\
    \ from the Carrot Washing Process: Implications for Re-Use and Environmental Discharge.\
    \ J. Veg. Sci. 2005, 11, 57–72.\n38.\nPeasey, A.; Blumenthal, U.; Mara, D.; Ruiz,\
    \ G.-P. A Review of Policy and Standards for Wastewater Reuse in Agriculture:\
    \ A Latin\nAmerican Perspective. WELL Study Task 2000, 68, 1–96.\n39.\nWorld Health\
    \ Organization. WHO Guidelines for the Safe Use of Wasterwater Excreta and Greywater;\
    \ World Health Organization:\nGeneva, Switzerland, 2006; Volume 1.\n40.\nHarris,\
    \ J. Soil Microbial Communities and Restoration Ecology: Facilitators or Followers?\
    \ Science 2009, 325, 573–574. [CrossRef]\n41.\nSchimel, J.; Balser, T.C.; Wallenstein,\
    \ M. Microbial Stress-Response Physiology and Its Implications for Ecosystem Function.\n\
    Ecology 2007, 88, 1386–1394. [CrossRef]\n42.\nPaz-Ferreiro, J.; Fu, S. Biological\
    \ Indices for Soil Quality Evaluation: Perspectives and Limitations. Land Degrad.\
    \ Dev. 2016, 27,\n14–25. [CrossRef]\n43.\nSrivastava, V.; Sarkar, A.; Singh, S.;\
    \ Singh, P.; de Araujo, A.S.F.; Singh, R.P. Agroecological Responses of Heavy\
    \ Metal Pollution\nwith Special Emphasis on Soil Health and Plant Performances.\
    \ Front. Environ. Sci. 2017, 5, 64. [CrossRef]\n44.\nFacchinelli, A.; Sacchi,\
    \ E.; Mallen, L. Multivariate Statistical and GIS-Based Approach to Identify Heavy\
    \ Metal Sources in Soils.\nEnviron. Pollut. 2001, 114, 313–324. [CrossRef]\n45.\n\
    Acosta, J.A.; Faz, A.; Martínez-Martínez, S.; Zornoza, R.; Carmona, D.M.; Kabas,\
    \ S. Multivariate Statistical and GIS-Based\nApproach to Evaluate Heavy Metals\
    \ Behavior in Mine Sites for Future Reclamation. J. Geochem. Explor. 2011, 109,\
    \ 8–17. [CrossRef]\n46.\nXu, L.; Lu, A.; Wang, J.; Ma, Z.; Pan, L.; Feng, X.;\
    \ Luan, Y. Accumulation Status, Sources and Phytoavailability of Metals in\nGreenhouse\
    \ Vegetable Production Systems in Beijing, China. Ecotoxicol. Environ. Saf. 2015,\
    \ 122, 214–220. [CrossRef]\n47.\nFan, W.; Guo, Q.; Liu, C.Y.; Liu, X.; Zhang,\
    \ M.; Long, D.; Xiang, Z.; Zhao, A. Two Mulberry Phytochelatin Synthase Genes\
    \ Confer\nZinc/Cadmium Tolerance and Accumulation in Transgenic Arabidopsis and\
    \ Tobacco. Gene 2018, 645, 95–104. [CrossRef]\n48.\nLiu, J.; Zhang, X.-H.; Tran,\
    \ H.; Wang, D.-Q.; Zhu, Y.-N. Heavy Metal Contamination and Risk Assessment in\
    \ Water, Paddy Soil,\nand Rice Around an Electroplating Plant. Environ. Sci. Pollut.\
    \ Res. 2011, 18, 1623–1632. [CrossRef]\n49.\nPing, L.I.U.; Zhao, H.J.; Wang, L.L.;\
    \ Liu, Z.H.; Wei, J.L.; Wang, Y.Q.; Jiang, L.H.; Liang, D.; Zhang, Y.F. Analysis\
    \ of Heavy Metal\nSources for Vegetable Soils from Shandong Province, China. Agric.\
    \ Sci. China 2011, 10, 109–119.\n50.\nSofﬁanian, A.; Madani, E.S.; Arabi, M. Risk\
    \ Assessment of Heavy Metal Soil Pollution Through Principal Components Analysis\n\
    and False Color Composition in Hamadan Province, Iran. Environ. Syst. Res. 2014,\
    \ 3, 1–14. [CrossRef]\n51.\nGergen, I.; Harmanescu, M. Application of Principal\
    \ Component Analysis in the Pollution Assessment with Heavy Metals of\nVegetable\
    \ Food Chain in the Old Mining Areas. Chem. Cent. J. 2012, 6, 1–13. [CrossRef]\n\
    52.\nZhiyuan, W.; Dengfeng, W.; Huiping, Z.; Zhiping, Q.I. Assessment of Soil\
    \ Heavy Metal Pollution with Principal Component\nAnalysis and Geoaccumulation\
    \ Index. Procedia Environ. Sci. 2011, 10, 1946–1952. [CrossRef]\n53.\nWeissmannová,\
    \ H.D.; Pavlovský, J.; Chovanec, P. Heavy Metal Contaminations of Urban Soils\
    \ in Ostrava, Czech Republic:\nAssessment of Metal Pollution and Using Principal\
    \ Component Analysis. Int. J. Environ. Res. 2015, 9, 683–696.\n54.\nVelea, T.;\
    \ Gherghe, L.; Predica, V.; Krebs, R. Heavy Metal Contamination in the Vicinity\
    \ of an Industrial Area Near Bucharest.\nEnviron. Sci. Pollut. Res. 2009, 16,\
    \ 27–32. [CrossRef]\n55.\nKhan, S.; Rehman, S.; Khan, A.Z.; Khan, M.A.; Shah,\
    \ M.T. Soil and Vegetables Enrichment with Heavy Metals from Geological\nSources\
    \ in Gilgit, Northern Pakistan. Ecotoxicol. Environ. Saf. 2010, 73, 1820–1827.\
    \ [CrossRef] [PubMed]\n56.\nRai, P.K. An Eco-Sustainable Green Approach for Heavy\
    \ Metals Management: Two Case Studies of Developing Industrial Region.\nEnviron.\
    \ Monit. Assess. 2012, 184, 421–448. [CrossRef] [PubMed]\n57.\nWood, L. Global\
    \ Digital Agriculture Market Expected to Grow from $5.6 Billion in 2020 to $6.2\
    \ Billion by 2021, Recording a\nCAGR of 9.9%-Revised to Reﬂect the Implications\
    \ of the COVID-19 Pandemic. Research and Markets, Dublin. Available online:\n\
    https://www.globenewswire.com/news-release/2020/07/03/2057417/0/en/Global-Digital-Agriculture-Market-Expected-\n\
    to-Grow-from-5-6-Billion-in-2020-to-6-2-Billion-by-2021-Recording-a-CAGR-of-9-9-Revised-to-Reﬂect-the-Implications-of-\n\
    the-COVID-19-Pande.html (accessed on 25 March 2021).\n58.\nIlie, M. Internet of\
    \ Things in Agriculture. Proc. Int. Conf. Compet. Agro-Food Environ. Econ. Proc.\
    \ 2018, 7, 157–166.\n59.\nBombe, K. Agriculture IoT Market Worth $32.75 Billion\
    \ by 2027- Market Size, Share, Forecasts, & Trends Analysis Report\nwith COVID-19\
    \ Impact by Meticulous Research®. Meticulous Research®. Available online: https://www.globenewswire.\n\
    com/news-release/2021/03/22/2196690/0/en/Agriculture-IoT-Market-Worth-32-75-Billion-by-2027-Market-Size-Share-\n\
    Forecasts-Trends-Analysis-Report-with-COVID-19-Impact-by-Meticulous-Research.html\
    \ (accessed on 19 April 2021).\n60.\nAleksandrova, M. IoT in Agriculture: Five\
    \ Technology Uses for Smart Farming and Challenges to Considerle. Available online:\n\
    https://dzone.com/articles/iot-in-agriculture-ﬁve-technology-uses-for-smart (accessed\
    \ on 20 March 2021).\nAgriculture 2021, 11, 475\n32 of 37\n61.\nKushwaha, H.L.;\
    \ Sinha, J.; Khura, T.; Kushwaha, D.K.; Ekka, U.; Purushottam, M.; Singh, N. Status\
    \ and Scope of Robotics in\nAgriculture. In Proceedings of the International Conference\
    \ on Emerging Technologies in Agricultural and Food Engineering,\nIndian Institute\
    \ of Technology Kharagpur, Kharagpur, India, 27–30 December 2016; Volume 12, p.\
    \ 163.\n62.\nHuman, U. Aerobotics Launches New Tech for Fruit Farmers: Current\
    \ Affairs. FarmBiz 2018, 4, 11.\n63.\nGago, J.; Estrany, J.; Estes, L.; Fernie,\
    \ A.R.; Alorda, B.; Brotman, Y.; Flexas, J.; Escalona, J.M.; Medrano, H. Nano\
    \ and Micro\nUnmanned Aerial Vehicles (UAVs): A New Grand Challenge for Precision\
    \ Agriculture? Curr. Protoc. Plant Biol. 2020, 5, e20103.\n[CrossRef]\n64.\nKimm,\
    \ H.; Guan, K.; Jiang, C.; Peng, B.; Gentry, L.F.; Wilkin, S.C.; Wang, S.; Cai,\
    \ Y.; Bernacchi, C.J.; Peng, J.; et al. Deriving\nHigh-Spatiotemporal-Resolution\
    \ Leaf Area Index for Agroecosystems in the US Corn Belt Using Planet Labs CubeSat\
    \ and STAIR\nFusion Data. Remote Sens. Environ. 2020, 239, 111615. [CrossRef]\n\
    65.\nGluhak, A.; Krco, S.; Nati, M.; Pﬁsterer, D.; Mitton, N.; Razaﬁndralambo,\
    \ T. A Survey on Facilities for Experimental Internet of\nThings Research. IEEE\
    \ Commun. Mag. 2011, 49, 58–67. [CrossRef]\n66.\nStoˇces, M.; Vanˇek, J.; Masner,\
    \ J.; Pavlík, J. Internet of Things (IoT) in Agriculture-Selected Aspects. Agris\
    \ Online Pap. Econ. Inform.\n2016, 8, 83–88. [CrossRef]\n67.\nVermesan, O.; Friess,\
    \ P. Internet of Things: Converging Technologies for Smart Environments and Integrated\
    \ Ecosystems; River Publishers:\nGistrup, Denmark, 2013.\n68.\nSuresh, P.; Daniel,\
    \ J.V.; Parthasarathy, V.; Aswathy, R.H. A State of the Art Review on the Internet\
    \ of Things (IoT) History,\nTechnology and Fields of Deployment. In Proceedings\
    \ of the 2014 International Conference on Science Engineering and\nManagement\
    \ Research (ICSEMR), Chennai, India, 27–29 November 2014; pp. 1–8.\n69.\nInternet\
    \ World Stats. Miniwatts Marketing Group. Available online: https://www.internetworldstats.com/stats.htm\
    \ (accessed\non 5 April 2021).\n70.\nJazayeri, M.A.; Liang, S.H.L.; Huang, C.-Y.\
    \ Implementation and Evaluation of Four Interoperable Open Standards for the Internet\n\
    of Things. Sensors 2015, 15, 24343–24373. [CrossRef]\n71.\nGyory, N.; Chuah, M.\
    \ IoTOne: Integrated Platform for Heterogeneous IoT Devices. In Proceedings of\
    \ the 2017 International\nConference on Computing, Networking and Communications\
    \ (ICNC), Silicon Valley, CL, USA, 26–29 January 2017; pp. 783–787.\n72.\nBurhan,\
    \ M.; Rehman, R.A.; Khan, B.; Kim, B.-S. IoT Elements, Layered Architectures and\
    \ Security Issues: A Comprehensive\nSurvey. Sensors 2018, 18, 2796. [CrossRef]\n\
    73.\nAhmad, M. Reliability Models for the Internet of Things: A Paradigm Shift.\
    \ In Proceedings of the 2014 IEEE International\nSymposium on Software Reliability\
    \ Engineering Workshops, Naples, Italy, 3–6 November 2014; pp. 52–59.\n74.\nTzounis,\
    \ A.; Katsoulas, N.; Bartzanas, T.; Kittas, C. Internet of Things in Agriculture,\
    \ Recent Advances and Future Challenges.\nBiosyst. Eng. 2017, 164, 31–48. [CrossRef]\n\
    75.\nFarooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role\
    \ of IoT in Agriculture for the Implementation of\nSmart Farming. IEEE Access\
    \ 2019, 7, 156237–156271. [CrossRef]\n76.\nDimoulas, C.; Veglis, A.; Kalliris,\
    \ G. Application of Mobile Cloud-Based Technologies in News Reporting: Current\
    \ Trends and\nFuture Perspectives. Mob. Networks Cloud Comput. Converg. Progress.\
    \ Serv. Appl. 2014, 320–343. [CrossRef]\n77.\nChi, Q.; Yan, H.; Zhang, C.; Pang,\
    \ Z.; da Xu, L. A Reconﬁgurable Smart Sensor Interface for Industrial WSN in IoT\
    \ Environment.\nIEEE Trans. Ind. Inform. 2014, 10, 1417–1425.\n78.\nBressan, N.;\
    \ Bazzaco, L.; Bui, N.; Casari, P.; Vangelista, L.; Zorzi, M. The Deployment of\
    \ a Smart Monitoring System Using Wireless\nSensor and Actuator Networks. In Proceedings\
    \ of the 2010 First IEEE International Conference on Smart Grid Communications,\n\
    Gaithersburg, MD, USA, 4–6 October 2010; pp. 49–54.\n79.\nMahmoud, R.; Yousuf,\
    \ T.; Aloul, F.; Zualkernan, I. Internet of Things (IoT) Security: Current Status,\
    \ Challenges and Prospective\nMeasures. In Proceedings of the 2015 10th International\
    \ Conference for Internet Technology and Secured Transactions (ICITST),\nLondon,\
    \ UK, 14–16 December 2015; pp. 336–341.\n80.\nDuan, R.; Chen, X.; Xing, T. A QoS\
    \ Architecture for IOT. In Proceedings of the 2011 International Conference on\
    \ Internet of\nThings and 4th International Conference on Cyber, Physical and\
    \ Social Computing, Washington, DC, USA, 19–22 October 2011;\npp. 717–720.\n81.\n\
    Li, H.; Wang, H.; Shang, Z.; Li, Q.; Xiao, W. Application of RFID in Agricultural\
    \ Seed Quality Tracking System. In Proceedings of\nthe 2010 8th World Congress\
    \ on Intelligent Control and Automation, Jinan, China, 7–9 July 2010; pp. 3073–3077.\n\
    82.\nBegum, K.; Dixit, S. Industrial WSN Using IoT: A Survey. In Proceedings of\
    \ the 2016 International Conference on Electrical,\nElectronics, and Optimization\
    \ Techniques (ICEEOT), Chennai, India, 3–5 March 2016; pp. 499–504.\n83.\nGubbi,\
    \ J.; Buyya, R.; Marusic, S.; Palaniswami, M. Internet of Things (IoT): A Vision,\
    \ Architectural Elements, and Future Directions.\nFutur. Gener. Comput. Syst.\
    \ 2013, 29, 1645–1660. [CrossRef]\n84.\nSuhonen, J.; Kohvakka, M.; Kaseva, V.;\
    \ Hämäläinen, T.D.; Hännikäinen, M. Low-Power Wireless Sensor Networks: Protocols,\
    \ Services\nand Applications; Springer Science & Business Media: Berlin, Germany,\
    \ 2012.\n85.\nBotta, A.; de Donato, W.; Persico, V.; Pescapé, A. Integration of\
    \ Cloud Computing and Internet of Things: A Survey. Futur. Gener.\nComput. Syst.\
    \ 2016, 56, 684–700. [CrossRef]\n86.\nZorzi, M.; Gluhak, A.; Lange, S.; Bassi,\
    \ A. From Today’s Intranet of Things to a Future Internet of Things: A Wireless-and\n\
    Mobility-Related View. IEEE Wirel. Commun. 2010, 17, 44–51. [CrossRef]\nAgriculture\
    \ 2021, 11, 475\n33 of 37\n87.\nBarrenetxea, G.; Ingelrest, F.; Schaefer, G.;\
    \ Vetterli, M. The Hitchhiker’s Guide to Successful Wireless Sensor Network Deployments.\n\
    In Proceedings of the 6th ACM Conference on Embedded Network Sensor Systems, Atlanta,\
    \ GA, USA, 23–24 October 2008;\npp. 43–56.\n88.\nRao, K.R.; Bojkovic, Z.S.; Bakmaz,\
    \ B.M. Wireless Multimedia Communication Systems: Design, Analysis, and Implementation;\
    \ CRC Press:\nBoca Raton, FL, USA, 2017.\n89.\nGarroppo, R.G.; Gazzarrini, L.;\
    \ Giordano, S.; Tavanti, L. Experimental Assessment of the Coexistence of Wi-Fi,\
    \ ZigBee, and\nBluetooth Devices. In Proceedings of the 2011 IEEE International\
    \ Symposium on a World of Wireless, Mobile and Multimedia\nNetworks, Lucca, Italy,\
    \ 20–24 June 2011; pp. 1–9.\n90.\nBannister, K.; Giorgetti, G.; Gupta, S.K. Wireless\
    \ Sensor Networking for Hot Applications: Effects of Temperature on Signal\nStrength,\
    \ Data Collection and Localization. In Proceedings of the 5th Workshop on Embedded\
    \ Networked Sensors (HotEmNets’\n08), San Francisco, CL, USA, 16–18 April 2008;\
    \ pp. 1–5.\n91.\nBoano, C.A.; Tsiftes, N.; Voigt, T.; Brown, J.; Roedig, U. The\
    \ Impact of Temperature on Outdoor Industrial Sensornet Applications.\nIEEE Trans.\
    \ Ind. Inform. 2009, 6, 451–459. [CrossRef]\n92.\nHebel, M.A.; Tate, R.F.; Watson,\
    \ D.G. Results of Wireless Sensor Network Transceiver Testing for Agricultural\
    \ Applications. In\nProceedings of the 2007 ASAE Annual Meeting, Minneapolis,\
    \ MN, USA, 17–20 June 2007; pp. 1–10.\n93.\nLiu, X.; Dong, X.; Xue, Q.; Leskovar,\
    \ D.I.; Jifon, J.; Butnor, J.R.; Marek, T. Ground Penetrating Radar (GPR) Detects\
    \ Fine Roots of\nAgricultural Crops in the Field. Plant. Soil 2018, 423, 517–531.\
    \ [CrossRef]\n94.\nKim, H.; Cosh, M.H.; Bindlish, R.; Lakshmi, V. Field Evaluation\
    \ of Portable Soil Water Content Sensors in a Sandy Loam. Vadose\nZo. J. 2020,\
    \ 19, e20033. [CrossRef]\n95.\nWang, J.; Chang, L.; Aggarwal, S.; Abari, O.; Keshav,\
    \ S. Soil Moisture Sensing with Commodity RFID Systems. In Proceedings\nof the\
    \ 18th International Conference on Mobile Systems, Applications, and Services,\
    \ Toronto, ON, Canada, 16–19 June 2020;\npp. 273–285.\n96.\nPola-López, L.A.;\
    \ Camas-Anzueto, J.L.; Martínez-Antoniob, A.; Luján-Hidalgoc, M.C.; Anzueto-Sánchezd,\
    \ G.; Ruíz-Valdiviezoc,\nV.M.; Grajales-Coutiñoa, R.; CastañónGonzálezc, J.H.\
    \ Novel Arsenic Biosensor ‘POLA’ Obtained by a Genetically Modiﬁed E.\nColi Bioreporter\
    \ Cell. Sens. Actuators B Chem. 2018, 254, 1061–1068. [CrossRef]\n97.\nNeethirajan,\
    \ S.; Ragavan, V.; Weng, X.; Chand, R. Biosensors for Sustainable Food Engineering:\
    \ Challenges and Perspectives.\nBiosensors 2018, 8, 23. [CrossRef] [PubMed]\n\
    98.\nSingh, M.; del Valle, M. Arsenic Biosensors: Challenges and Opportunities\
    \ for High-Throughput Detection. In Handbook of Arsenic\nToxicology; Elsevier:\
    \ London, UK, 2015; pp. 575–588.\n99.\nWu, B.; Han, H.; He, J.; Zhang, J.; Cui,\
    \ L.; Jia, Z.; Yang, W. Field-Speciﬁc Calibration and Evaluation of ECH2O EC-5\
    \ Sensor for\nSandy Soils. Soil Sci. Soc. Am. J. 2014, 78, 70–78. [CrossRef]\n\
    100. Zemni, N.; Bouksila, F.; Persson, M.; Slama, F.; Berndtsson, R.; Bouhlila,\
    \ R. Laboratory Calibration and Field Validation of Soil\nWater Content and Salinity\
    \ Measurements Using the 5TE Sensor. Sensors 2019, 19, 5272. [CrossRef] [PubMed]\n\
    101. Nolz, R.; Kammerer, G. Evaluating a Sensor Setup with Respect to Near-Surface\
    \ Soil Water Monitoring and Determination of\nIn-Situ Water Retention Functions.\
    \ J. Hydrol. 2017, 549, 301–312. [CrossRef]\n102. Ferrarezi, R.S.; Nogueira, T.A.R.;\
    \ Zepeda, S.G.C. Performance of Soil Moisture Sensors in Florida Sandy Soils.\
    \ Water 2020, 12, 358.\n[CrossRef]\n103. Udukumburage, R.S.; Gallage, C.; Dawes,\
    \ L. An Instrumented Large Soil Column to Investigate Climatic Ground Interaction.\
    \ Int.\nJ. Phys. Model. Geotech. 2020, 21, 1–17. [CrossRef]\n104. Udukumburage,\
    \ R.S.; Gallage, C.; Dawes, L. Loaded Swell Tests to Estimate the Heave of the\
    \ Expansive Soil in Instrumented\nSoil Column. In Proceedings of the 8th International\
    \ Conference on Geotechnique, Construction Materials and Environment,\nGEOMATE,\
    \ Kuala Lumpur, Malaysia, 20–22 November 2018; pp. 390–395.\n105. Zori´c, M.;\
    \ Simi´c, M.; Orlovi´c, S.; Mladenovi´c, E.; Babi´c, Z. Indoor Ecosystem Services:\
    \ Impacts of Plants on Air Quality. Contemp.\nAgric. 2019, 68, 12–16. [CrossRef]\n\
    106. Wack, G.J. Characterization of Metal-Oxide Semiconductor Sensors for R-32\
    \ and R-454B Leaks. Ph.D. Thesis, Graduate School of\nthe University of Maryland,\
    \ College Park, MD, USA, 2020.\n107. MacDougall, J. Evaluating the Affect of Seasonal\
    \ Soil Moisture and Vegetation Change on C-Band SAR Backscatter over Corn\nﬁelds\
    \ in SW Ontario. Ph.D. Thesis, University of Guelph, Ontario, BC, Canada, 2017.\n\
    108. Barnaby, J.Y.; Rohila, J.S.; Henry, C.G.; Sicher, R.C.; Reddy, V.R.; McClung,\
    \ A.M. Physiological and Metabolic Responses of Rice to\nReduced Soil Moisture:\
    \ Relationship of Water Stress Tolerance and Grain Production. Int. J. Mol. Sci.\
    \ 2019, 20, 1846. [CrossRef]\n109. Hu, B.; Chen, S.; Hu, J.; Xia, F.; Xu, J.;\
    \ Li, Y.; Shi, Z. Application of Portable XRF and VNIR Sensors for Rapid Assessment\
    \ of Soil\nHeavy Metal Pollution. PLoS ONE 2017, 12, e0172438. [CrossRef]\n110.\
    \ Horta, A.; Malone, B.; Stockmann, U.; Minasny, B.; Bishop, T.F.A.; McBratney,\
    \ A.B.; Pallasser, R.; Pozza, L. Potential of Integrated\nField Spectroscopy and\
    \ Spatial Analysis for Enhanced Assessment of Soil Contamination: A Prospective\
    \ Review. Geoderma 2015,\n241, 180–209. [CrossRef]\n111. Carr, R.; Zhang, C.;\
    \ Moles, N.; Harder, M. Identiﬁcation and Mapping of Heavy Metal Pollution in\
    \ Soils of a Sports Ground in\nGalway City, Ireland, Using a Portable XRF Analyser\
    \ and GIS. Environ. Geochem. Health 2008, 30, 45–52. [CrossRef]\n112. Wang, D.;\
    \ Chakraborty, S.; Weindorf, D.C.; Li, B.; Sharma, A.; Paul, S.; Ali, M.N. Synthesized\
    \ use of VisNIR DRS and PXRF for\nSoil Characterization: Total Carbon and Total\
    \ Nitrogen. Geoderma 2015, 243, 157–167. [CrossRef]\nAgriculture 2021, 11, 475\n\
    34 of 37\n113. Hou, X.; He, Y.; Jones, B.T. Recent Advances in Portable X-ray\
    \ Fluorescence Spectrometry. Appl. Spectrosc. Rev. 2004, 39, 1–25.\n[CrossRef]\n\
    114. Li, S.; Shi, Z.; Chen, S.; Ji, W.; Zhou, L.; Yu, W.; Webster, R. In Situ\
    \ Measurements of Organic Carbon in Soil Proﬁles Using vis-NIR\nSpectroscopy on\
    \ the Qinghai–Tibet Plateau. Environ. Sci. Technol. 2015, 49, 4980–4987. [CrossRef]\n\
    115. Shi, Z.; Wang, Q.; Peng, J.; Ji, W.; Liu, H.; Li, X.; Rossel, R.A.V. Development\
    \ of a National VNIR Soil-Spectral Library for Soil\nClassiﬁcation and Prediction\
    \ of Organic Matter Concentrations. Sci. China Earth Sci. 2014, 57, 1671–1680.\
    \ [CrossRef]\n116. Mukhopadhyay, S.; Chakraborty, S.; Bhadoria, P.B.S.; Li, B.;\
    \ Weindorf, D.C. Assessment of Heavy Metal and Soil Organic Carbon\nby Portable\
    \ X-ray Fluorescence Spectrometry and NixProTM Sensor in Landﬁll Soils of India.\
    \ Geoderma Reg. 2020, 20, e00249.\n[CrossRef]\n117. Zhao, G.; Liu, G. A Portable\
    \ Electrochemical System for the On-site Detection of Heavy Metals in Farmland\
    \ Soil Based on\nElectrochemical Sensors. IEEE Sens. J. 2018, 18, 5645–5655. [CrossRef]\n\
    118. Kumar, S.A.; Ilango, P. The Impact of Wireless Sensor Network in the Field\
    \ of Precision Agriculture: A Review. Wirel. Pers.\nCommun. 2018, 98, 685–698.\
    \ [CrossRef]\n119. Shaﬁ, U.; Mumtaz, R.; García-Nieto, J.; Hassan, S.A.; Zaidi,\
    \ S.A.R.; Iqbal, N. Precision Agriculture Techniques and Practices: From\nConsiderations\
    \ to Applications. Sensors 2019, 19, 3796. [CrossRef]\n120. Jawad, H.M.; Nordin,\
    \ R.; Gharghan, S.K.; Jawad, A.M.; Ismail, M. Energy-Efﬁcient Wireless Sensor\
    \ Networks for Precision\nAgriculture: A Review. Sensors 2017, 17, 1781. [CrossRef]\n\
    121. Munoth, P.; Goyal, R.; Tiwari, K. Sensor Based Irrigation System: A Review.\
    \ NCACE USA 2016, 4, 86–90.\n122. Abbasi, A.Z.; Islam, N.; Shaikh, Z.A. A Review\
    \ of Wireless Sensors and Networks’ Applications in Agriculture. Comput. Stand.\n\
    Interfaces 2014, 36, 263–270.\n123. Zheng, W.; Zhang, X.; Qiao, X.; Yan, H.; Wu,\
    \ W. The Design of Smart Wireless Carbon Dioxide Measuring Instrument Used\nin\
    \ Greenhouse. In Proceedings of the International Conference on Computer and Computing\
    \ Technologies in Agriculture,\nNanchang, China, 22–25 October 2010; pp. 75–83.\n\
    124. Aziz, M.H.; Saptiani, P.; Iryanti, M.; Aminudin, A. Design of Carbon Dioxide\
    \ Level Measures on Peat Soil with MG 811 Sensor. J.\nPhys. Conf. Ser. 2019, 1280,\
    \ 22061. [CrossRef]\n125. Banick, J.L.; Zolkowski, J.J.; Lenz, K.E.; Sanders,\
    \ J. Monitoring Carbon Dioxide and Methane Levels Above Retired Landﬁll and\n\
    Forest Control Site with a Tethered Aerostat to Determine Remediation Effectiveness.\
    \ In Proceedings of the Wisconsin Space\nConference, Oshkosh, WI, USA, 14 August\
    \ 2015.\n126. Thalheimer, M. A New Optoelectronic Sensor for Monitoring Fruit\
    \ or Stem Radial Growth. Comput. Electron. Agric. 2016, 123,\n149–153. [CrossRef]\n\
    127. Ma, L.; Wang, L.; Chen, R.; Chang, K.; Wang, S.; Hu, X.; Sun, X.; Lu, Z.;\
    \ Sun, H.; Guo, Q.; et al. A Low Cost Compact Measurement\nSystem Constructed\
    \ Using a Smart Electrochemical Sensor for the Real-Time Discrimination of Fruit\
    \ Ripening. Sensors 2016,\n16, 501. [CrossRef]\n128. Hanssens, J.; de Swaef, T.;\
    \ Nadezhdina, N.; Steppe, K. Measurement of Sap Flow Dynamics Through the Tomato\
    \ Peduncle Using\na Non-Invasive Sensor Based on the Heat Field Deformation Method.\
    \ In Proceedings of the IX International Workshop on Sap\nFlow 991, Gent, Belgium,\
    \ 4–7 June 2013; pp. 409–416.\n129. Adla, S.; Rai, N.K.; Karumanchi, S.H.; Tripathi,\
    \ S.; Disse, M.; Pande, S. Laboratory Calibration and Performance Evaluation of\n\
    Low-Cost Capacitive and very Low-Cost Resistive Soil Moisture Sensors. Sensors\
    \ 2020, 20, 363. [CrossRef] [PubMed]\n130. González-Teruel, J.D.; Torres-Sánchez,\
    \ R.; Blaya-Ros, P.J.; Toledo-Moreo, A.B.; Jiménez-Buendía, M.; Soto-Valles, F.\
    \ Design and\nCalibration of a Low-Cost SDI-12 Soil Moisture Sensor. Sensors 2019,\
    \ 19, 491. [CrossRef] [PubMed]\n131. Liu, X.; Dong, X.; Leskovar, D.I. Ground\
    \ Penetrating Radar for Underground Sensing in Agriculture: A Review. Int. Agrophysics\n\
    2016, 30, 533–543. [CrossRef]\n132. Balaghi, S.; Ghal–Eh, N.; Mohammadi, A.; Vega–Carrillo,\
    \ H.R. A Neutron Scattering Soil Moisture Measurement System with a\nLinear Response.\
    \ Appl. Radiat. Isot. 2018, 142, 167–172. [CrossRef]\n133. Andreasen, M.; Jensen,\
    \ K.H.; Bogena, H.; Desilets, D.; Zreda, M.; Looms, M.C. Cosmic Ray Neutron Soil\
    \ Moisture Estimation\nUsing Physically Based Site-Speciﬁc Conversion Functions.\
    \ Water Resour. Res. 2020, 56, e2019WR026588. [CrossRef]\n134. Astner, A.F.; Hayes,\
    \ D.G.; Pingali, S.V.; O’Neill, H.M.; Littrell, K.C.; Evans, B.R.; Urban, V.S.\
    \ Effects of Soil Particles and Convective\nTransport on Dispersion and Aggregation\
    \ of Nanoplastics via Small-Angle Neutron Scattering (SANS) and Ultra SANS (USANS).\n\
    PLoS ONE 2020, 15, e0235893. [CrossRef]\n135. Nemiroski, A.; Christodouleas, D.C.;\
    \ Hennek, J.W.; Kumar, A.A.; Maxwell, E.J.; Fernández-Abedul, M.T.; Whitesides,\
    \ G.M.\nUniversal Mobile Electrochemical Detector Designed for Use in Resource-Limited\
    \ Applications. Proc. Natl. Acad. Sci. USA 2014,\n111, 11984–11989. [CrossRef]\n\
    136. Meloni, G.N. Building a Microcontroller Based Potentiostat: A Inexpensive\
    \ and Versatile Platform for Teaching ElectroChemistry and\nInstrumentation; ACS\
    \ Publications: Washington, DC, USA, 2016.\n137. Li, Y.C.; Melenbrink, E.L.; Cordonier,\
    \ G.J.; Boggs, C.; Khan, A.; Isaac, M.K.; Nkhonjera, L.K.; Bahati, D.; Billinge,\
    \ S.J.; Haile, S.M.;\net al. An Easily Fabricated Low-cost Potentiostat Coupled\
    \ with User-Friendly Software for Introducing Students to Electrochemical Reactions\n\
    and Electroanalytical Techniques; ACS Publications: Washington, DC, USA, 2018.\n\
    138. Umar, S.N.H.; Bakar, E.A.; Kamaruddin, N.M.; Uchiyama, N. A Low Cost Potentiostat\
    \ Device for Monitoring Aqueous Solution.\nIn Proceedings of the MATEC Web of\
    \ Conferences, Solo Baru, Indonesia, 11–12 July 2018; Volume 217, p. 4001.\nAgriculture\
    \ 2021, 11, 475\n35 of 37\n139. Nagata, T.; Suzuki, K. Building a Low-cost Standalone\
    \ Electrochemical Instrument Based on a Credit Card-sized Computer. Anal.\nSci.\
    \ 2018, 34, 1213–1216. [CrossRef]\n140. Lopin, P.; Lopin, K.V. PSoC-Stat: A Single\
    \ Chip Open Source Potentiostat Based on a Programmable System on a Chip. PLoS\
    \ ONE\n2018, 13, e0201353. [CrossRef]\n141. Adams, S.D.; Doeven, E.H.; Quayle,\
    \ K.; Kouzani, A.Z. MiniStat: Development and Evaluation of a Mini-Potentiostat\
    \ for\nElectrochemical Measurements. IEEE Access 2019, 7, 31903–31912. [CrossRef]\n\
    142. Umar, S.N.H.; Akhtar, M.N.; Bakar, E.A.; Kamaruddin, N.M.; Othman, A.R. Development\
    \ of Heavy Metal Potentiostat for Batik\nIndustry. Appl. Sci. 2020, 10, 7804.\
    \ [CrossRef]\n143. Lamichhane, S.; Kumar, L.; Wilson, B. Digital Soil Mapping\
    \ Algorithms and Covariates for Soil Organic Carbon Mapping and\nTheir Implications:\
    \ A Review. Geoderma 2019, 352, 395–413. [CrossRef]\n144. Lagacherie, P.; Arrouays,\
    \ D.; Bourennane, H.; Gomez, C.; Martin, M.; Saby, N.P.A. How Far Can the Uncertainty\
    \ on a Digital\nSoil Map be Known?: A Numerical Experiment Using Pseudo Values\
    \ of Clay Content Obtained from Vis-SWIR Hyperspectral\nImagery. Geoderma 2019,\
    \ 337, 1320–1328. [CrossRef]\n145. Hou, D.; Bolan, N.S.; Tsang, D.C.W.; Kirkham,\
    \ M.B.; O’Connor, D. Sustainable Doil Use and Management: An Interdisciplinary\n\
    and Systematic Approach. Sci. Total Environ. 2020, 729, 138961. [CrossRef]\n146.\
    \ Leng, G.; Huang, M. Crop Yield Response to Climate Change Varies with Crop Spatial\
    \ Distribution Pattern. Sci. Rep. 2017, 7,\n1463. [CrossRef]\n147. Liu, X.; Li,\
    \ S. Temporal and Spatial Distribution Characteristics of Crop Straw Nutrient\
    \ Resources and Returning to Farmland in\nChina. Trans. Chinese Soc. Agric. Eng.\
    \ 2017, 33, 1–19.\n148. Kumhálová, J.; Matˇejková, Š. Yield Variability Prediction\
    \ by Remote Sensing Sensors with Different Spatial Resolution. Int.\nAgrophysics\
    \ 2017, 31, 195. [CrossRef]\n149. Vuran, M.C.; Salam, A.; Wong, R.; Irmak, S.\
    \ A Survey on Internet of Underground Things in Precision Agriculture: Architecture\n\
    and Technology Aspects. Ad Hoc Networks 2018, 81, 160–173. [CrossRef]\n150. Navulur,\
    \ S.; Prasad, M.N.G. Agricultural Management through Wireless Sensors and Internet\
    \ of Things. Int. J. Electr. Comput.\nEng. 2017, 7, 3492. [CrossRef]\n151. De\
    \ Benedetto, D.; Montemurro, F.; Diacono, M. Mapping an Agricultural Field Experiment\
    \ by Electromagnetic Induction and\nGround Penetrating Radar to Improve Soil Water\
    \ Content Estimation. Agronomy 2019, 9, 638. [CrossRef]\n152. Salam, A.; Raza,\
    \ U. Current Advances in Internet of Underground Things. In Signals in the Soil;\
    \ Springer: New York, MA, USA,\n2020; pp. 321–356.\n153. Hong, Y.; Shen, R.; Cheng,\
    \ H.; Chen, Y.; Zhang, Y.; Liu, Y.; Zhou, M.; Yu, L.; Liu, Y.; Liu, Y. Estimating\
    \ Lead and Zinc Concentrations\nin Peri-Urban Agricultural Soils through Reﬂectance\
    \ Spectroscopy: Effects of Fractional-order Derivative and Random Forest. Sci.\n\
    Total Environ. 2019, 651, 1969–1982. [CrossRef] [PubMed]\n154. Luce, M.S.; Ziadi,\
    \ N.; Gagnon, B.; Karam, A. Visible Near Infrared Reﬂectance Spectroscopy Prediction\
    \ of Soil Heavy Metal\nConcentrations in Paper Mill Biosolid-and Liming by-Product-Amended\
    \ Agricultural Soils. Geoderma 2017, 288, 23–36. [CrossRef]\n155. Frau, I.; Korostynska,\
    \ O.; Mason, A.; Byrne, P. Comparison of Electromagnetic Wave Sensors with Optical\
    \ and Low-Frequency\nSpectroscopy Methods for Real-Time Monitoring of Lead Concentrations\
    \ in Mine Water. Mine Water Environ. 2018, 37, 617–624.\n[CrossRef]\n156. Barra,\
    \ I.; Haefele, S.M.; Sakrabani, R.; Kebede, F. Soil Spectroscopy with the Use\
    \ of Chemometrics, Machine Learning and\nPre-processing Techniques in Soil Diagnosis:\
    \ Recent Advances—A Review. TrAC Trends Anal. Chem. 2020, 135, 116166. [CrossRef]\n\
    157. Burton, L.; Jayachandran, K.; Bhansali, S. The ‘Real-Time’ Revolution for\
    \ In situ Soil Nutrient Sensing. J. Electrochem. Soc. 2020,\n167, 37569. [CrossRef]\n\
    158. Ji, W.; Adamchuk, V.I.; Chen, S.; Su, A.S.M.; Ismail, A.; Gan, Q.; Shi, Z.;\
    \ Biswas, A. Simultaneous Measurement of Multiple Soil\nProperties Through Proximal\
    \ Sensor Data Fusion: A Case Study. Geoderma 2019, 341, 111–128. [CrossRef]\n\
    159. Beutel, J.; Kasten, O.; Mattern, F.; Römer, K.; Siegemund, F.; Thiele, L.\
    \ Prototyping Wireless Sensor Network Applications with\nBTnodes. In European\
    \ Workshop on Wireless Sensor Networks; Springer: Berlin/Heidelberg, Germany,\
    \ 2004; pp. 323–338.\n160. Beutel, J.; Kasten, O.; Ringwald, M. BTnodes—A distributed\
    \ platform for sensor nodes. In Proceedings of the 1st International\nConference\
    \ on Embedded Networked Sensor Systems, Los Angeles, CA, USA, 5–7 November 2003;\
    \ pp. 292–293.\n161. Dutta, P.; Culler, D. Epic: An Open Mote Platform for Application-Driven\
    \ Design; Berkeley Eagle CAD Library: Raleigh, NC,\nUSA, 2008.\n162. Akhtar, M.N.;\
    \ Ahmed, W.; Kakar, M.R.; Bakar, E.A.; Othman, A.R.; Bueno, M. Implementation\
    \ of Parallel K-Means Algorithm to\nEstimate Adhesion Failure in Warm Mix Asphalt.\
    \ Adv. Civil Eng. 2020, 2020, 1–26.\n163. Intel Research Group. Intel Mote Generation\
    \ 1 and 2 Nodes. 2014. Available online: http://tinyos.stanford.edu/tinyos-wiki/\n\
    index.php/Imote2 (accessed on 20 March 2021).\n164. Ciabattoni, L.; Freddi, A.;\
    \ Longhi, S.; Monteriù, A.; Pepa, L.; Prist, M. An open and modular hardware node\
    \ for wireless sensor\nand body area networks. J. Sens. 2016, 2016. [CrossRef]\n\
    165. Imote2.\nCrossbow.\nAvailable online:\nhttp://wsn.cse.wustl.edu/images/e/e3/Imote2_Datasheet.pdf\
    \ (accessed on\n15 March 2021).\n166. Pham, C. Communication performances of IEEE\
    \ 802.15. 4 wireless sensor motes for data-intensive applications: A comparison\
    \ of\nWaspMote, Arduino MEGA, TelosB, MicaZ and iMote2 for image surveillance.\
    \ J. Netw. Comput. Appl. 2014, 46, 48–59. [CrossRef]\nAgriculture 2021, 11, 475\n\
    36 of 37\n167. Polastre, J.; Szewczyk, R.; Culler, D. Telos: Enabling ultra-low\
    \ power wireless research. In Proceedings of the IPSN 2005 Fourth\nInternational\
    \ Symposium on Information Processing in Sensor Networks, Boise, ID, USA, 15 April\
    \ 2005; pp. 364–369.\n168. Chang, M. Network Embedded Systems; Jhons Hopkins University:\
    \ Baltimore, MD, USA, 2013.\n169. Narayanan, R.P.; Sarath, T.V.; Vineeth, V.V.\
    \ Survey on motes used in wireless sensor networks: Performance & parametric analysis.\n\
    Wirel. Sens. Netw. 2016, 8, 51. [CrossRef]\n170. VIRTENIO GMBH. Preon32—Innovative\
    \ 2.4 GHz Radio Module. Available online: https://www.virtenio.com/en/portfolio-\n\
    items/preon32/ (accessed on 10 March 2021).\n171. Ruiz-Sandoval, M.; Nagayama,\
    \ T.; Spencer, B.F., Jr. Sensor development using Berkeley Mote platform. J. Earthq.\
    \ Eng. 2006, 10,\n289–309. [CrossRef]\n172. Nachman, L.; Kling, R.; Adler, R.;\
    \ Huang, J.; Hummel, V. The Intel/sup/spl reg//mote platform: A Bluetooth-based\
    \ sensor\nnetwork for industrial monitoring. In Proceedings of the IPSN 2005 Fourth\
    \ International Symposium on Information Processing\nin Sensor Networks, 2005,\
    \ Boise, ID, USA, 15 April 2005; pp. 437–442.\n173. Johnson, M.; Healy, M.; Van\
    \ de Ven, P.; Hayes, M.J.; Nelson, J.; Newe, T.; Lewis, E. A comparative review\
    \ of wireless sensor\nnetwork mote technologies. In Proceedings of the SENSORS,\
    \ 2009 IEEE, Christchurch, New Zealand, 25–28 October 2009;\npp. 1439–1442.\n\
    174. MICAz. Crossbow. Available online: http://courses.ece.ubc.ca/494/ﬁles/MICAz_Datasheet.pdf\
    \ (accessed on 25 February 2021).\n175. Dong, W.; Chen, C.; Liu, X.; Bu, J. Providing\
    \ OS support for wireless sensor networks: Challenges and approaches. IEEE Commun.\n\
    Surv. Tutor. 2010, 12, 519–530. [CrossRef]\n176. Levis, P.; Madden, S.; Polastre,\
    \ J.; Szewczyk, R.; Whitehouse, K.; Woo, A.; Gay, D.; Hill, J.; Welsh, M.; Brewer,\
    \ E.; et al. TinyOS: An\noperating system for sensor networks. In Ambient Intelligence;\
    \ Springer: Berlin/Heidelberg, Germany, 2005; pp. 115–148.\n177. Dunkels, A.;\
    \ Gronvall, B.; Voigt, T. Contiki-a lightweight and ﬂexible operating system for\
    \ tiny networked sensors. In Proceedings\nof the 29th Annual IEEE International\
    \ Conference on Local Computer Networks, Tampa, FL, USA, 16–18 November 2004;\n\
    pp. 455–462.\n178. Oikonomou, G.; Phillips, I. Experiences from porting the Contiki\
    \ operating system to a popular hardware platform. In Proceedings\nof the 2011\
    \ International Conference on Distributed Computing in Sensor Systems and Workshops\
    \ (DCOSS), Barcelona, Spain,\n27–29 June 2011; pp. 1–6.\n179. Zikria, Y.B.; Afzal,\
    \ M.K.; Ishmanov, F.; Kim, S.W.; Yu, H. A survey on routing protocols supported\
    \ by the Contiki Internet of\nthings operating system. Futur. Gener. Comput. Syst.\
    \ 2018, 82, 200–219. [CrossRef]\n180. Group, O.C.A.W. OpenFog reference architecture\
    \ for fog computing. OPFRA001 2017, 20817, 162.\n181. Jiang, C.; Fan, T.; Gao,\
    \ H.; Shi, W.; Liu, L.; Cerin, C.; Wan, J. Energy aware edge computing: A survey.\
    \ Comput. Commun. 2020, 151,\n556–580. [CrossRef]\n182. Gerrikagoitia, J.K.; Unamuno,\
    \ G.; Urkia, E.; Serna, A. Digital manufacturing platforms in the industry 4.0\
    \ from private and public\nperspectives. Appl. Sci. 2019, 9, 2934. [CrossRef]\n\
    183. Li, Z.; Peng, X.; Chao, L.; Xu, Z. EveryLite: A lightweight scripting language\
    \ for micro tasks in IoT systems. In Proceedings of the\n2018 IEEE/ACM Symposium\
    \ on Edge Computing (SEC), Seattle, WA, USA, 25–27 October 2018; pp. 381–386.\n\
    184. Kang, Y.; Hauswald, J.; Gao, C.; Rovinski, A.; Mudge, T.; Mars, J.; Tang,\
    \ L. Neurosurgeon: Collaborative intelligence between the\ncloud and mobile edge.\
    \ ACM SIGARCH Comput. Archit. News 2017, 45, 615–629. [CrossRef]\n185. Zhang,\
    \ D.; Ma, Y.; Zheng, C.; Zhang, Y.; Hu, X.S.; Wang, D. Cooperative-competitive\
    \ task allocation in edge computing for\ndelay-sensitive social sensing. In Proceedings\
    \ of the 2018 IEEE/ACM Symposium on Edge Computing (SEC), Seattle, WA, USA,\n\
    25–27 October 2018; pp. 243–259.\n186. Kwak, J.; Kim, Y.; Lee, J.; Chong, S. DREAM:\
    \ Dynamic resource and task allocation for energy minimization in mobile cloud\n\
    systems. IEEE J. Sel. Areas Commun. 2015, 33, 2510–2523. [CrossRef]\n187. Liang,\
    \ C.; He, Y.; Yu, F.R.; Zhao, N. Energy-efﬁcient resource allocation in software-deﬁned\
    \ mobile networks with mobile edge\ncomputing and caching. In Proceedings of the\
    \ 2017 IEEE Conference on Computer Communications Workshops (INFOCOM\nWKSHPS),\
    \ Atlanta, GA, USA, 1–4 May 2017; pp. 121–126.\n188. Kim, J.; Kim, C.; Son, B.;\
    \ Ryu, J.; Kim, S. A study on Time-series DBMS Application for EdgeX-based lightweight\
    \ edge gateway. In\nProceedings of the 2020 International Conference on Information\
    \ and Communication Technology Convergence (ICTC), Jeju,\nKorea, 21–23 October\
    \ 2020; pp. 1795–1798.\n189. Salloum, S.; Dautov, R.; Chen, X.; Peng, P.X.; Huang,\
    \ J.Z. Big data analytics on Apache Spark. Int. J. Data Sci. Anal. 2016, 1,\n\
    145–164. [CrossRef]\n190. Akhtar, M.N.; Saleh, J.M.; Awais, H.; Bakar, E.A. Map-Reduce\
    \ based tipping point scheduler for parallel image processing. Expert\nSyst. Appl.\
    \ 2020, 139, 112848. [CrossRef]\n191. Zamora-Izquierdo, M.A.; Santa, J.; Martínez,\
    \ J.A.; Martínez, V.; Skarmeta, A.F. Smart farming IoT platform based on edge\
    \ and\ncloud computing. Biosyst. Eng. 2019, 177, 4–17. [CrossRef]\n192. Akka¸s,\
    \ M.A.; Sokullu, R. An IoT-based greenhouse monitoring system with Micaz motes.\
    \ Procedia Comput. Sci. 2017, 113, 603–608.\n[CrossRef]\n193. Taha, F.M.A.; Osman,\
    \ A.A.; Awadalkareem, S.D.; Omer, M.S.A.; Saadaldeen, R.S.M. A design of a remote\
    \ greenhouse monitoring\nand controlling system based on internet of things. In\
    \ Proceedings of the 2018 International Conference on Computer, Control,\nElectrical,\
    \ and Electronics Engineering (ICCCEEE), Khartoum, Sudan, 12–14 August 2018; pp.\
    \ 1–6.\nAgriculture 2021, 11, 475\n37 of 37\n194. Syafarinda, Y.; Akhadin, F.;\
    \ Fitri, Z.E.; Widiawan, B.; Rosdiana, E. The precision agriculture based on wireless\
    \ sensor network\nwith MQTT protocol. IOP Conf. Ser. Earth Environ. Sci. 2018,\
    \ 207, 12059. [CrossRef]\n195. Shukla, A.J.; Panchal, M.V.; Patel, M.S. Intelligent\
    \ greenhouse design based on internet of things (iot). Int. J. Emerg. Trends Electr.\n\
    Electron. 2015, 11, 78–86.\n196. Kaloxylos, A.; Groumas, A.; Sarris, V.; Katsikas,\
    \ L.; Magdalinos, P.; Antoniou, E.; Politopoulou, Z.; Wolfert, S.; Brewster, C.;\n\
    Eigenmann, R.; et al. Cloud-based Farm Management System: Architecture and implementation.\
    \ Comput. Electron. Agric. 2014,\n100, 168–179. [CrossRef]\n197. Martínez, R.;\
    \ Pastor, J.Á.; Álvarez, B.; Iborra, A. A testbed to evaluate the ﬁware-based\
    \ IoT platform in the domain of precision\nagriculture. Sensors 2016, 16, 1979.\
    \ [CrossRef]\n198. Zyrianoff, I.; Heideker, A.; Silva, D.; Kamienski, C. Scalability\
    \ of an Internet of Things platform for smart water manage-\nment for agriculture.\
    \ In Proceedings of the 2018 23rd Conference of Open Innovations Association (FRUCT),\
    \ Bologna, Italy,\n13–16 November 2018; pp. 432–439.\n199. Liu, J. Design and\
    \ implementation of an intelligent environmental-control system: Perception, network,\
    \ and application with\nfused data collected from multiple sensors in a Greenhouse\
    \ at Jiangsu, China. Int. J. Distrib. Sens. Netw. 2016, 12, 5056460.\n[CrossRef]\n\
    200. Ferrández-Pastor, F.J.; García-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Pascual,\
    \ J.; Mora-Martínez, J. Developing ubiquitous\nsensor network platform using internet\
    \ of things: Application in precision agriculture. Sensors 2016, 16, 1141. [CrossRef]\n\
    201. Chang, H.-Y.; Wang, J.-J.; Lin, C.-Y.; Chen, C.-H. An agricultural data gathering\
    \ platform based on internet of things and big\ndata. In Proceedings of the 2018\
    \ International Symposium on Computer, Consumer and Control (IS3C), Taichung,\
    \ Taiwan,\n6–8 December 2018; pp. 302–305.\n202. Guillén, M.A.; Llanes, A.; Imbernón,\
    \ B.; Martínez-España, R.; Bueno-Crespo, A.; Cano, J.C.; Cecilia, J.M. Performance\
    \ evaluation\nof edge-computing platforms for the prediction of low temperatures\
    \ in agriculture using deep learning. J. Supercomput. 2021, 77,\n818–840. [CrossRef]\n\
    203. Chen, X.; Shi, Q.; Yang, L.; Xu, J. ThriftyEdge: Resource-efﬁcient edge computing\
    \ for intelligent IoT applications. IEEE Netw. 2018,\n32, 61–65. [CrossRef]\n\
    204. Oliver, S.T.; González-Pérez, A.; Guijarro, J.H. An IoT proposal for monitoring\
    \ vineyards called SEnviro for agriculture. In\nProceedings of the 8th International\
    \ Conference on the Internet of Things, Santa Barbara, CA, USA, 15–18 October\
    \ 2018; pp. 1–4.\n205. Morais, R.; Silva, N.; Mendes, J.; Adão, T.; Pádua, L.;\
    \ López-Riquelme, J.A.; Pavón-Pulido, N.; Sousa, J.J.; Peres, E. Mysense: A\n\
    comprehensive data management environment to improve precision agriculture practices.\
    \ Comput. Electron. Agric. 2019, 162,\n882–894. [CrossRef]\n206. Lavanya, G.;\
    \ Rani, C.; Ganeshkumar, P. An automated low cost IoT based Fertilizer Intimation\
    \ System for smart agriculture.\nSustain. Comput. Inform. Syst. 2020, 28, 100300.\n\
    207. Park, J.; Choi, J.-H.; Lee, Y.-J.; Min, O. A layered features analysis in\
    \ smart farm environments. In Proceedings of the International\nConference on\
    \ Big Data and Internet of Thing, London, UK, 20–22 December 2017; pp. 169–173.\n\
    208. Krintz, C.; Wolski, R.; Golubovic, N.; Bakir, F. Estimating outdoor temperature\
    \ from cpu temperature for iot applications in agricul-\nture. In Proceedings\
    \ of the 8th International Conference on the Internet of Things, Santa Barbara,\
    \ CA, USA, 15–18 October 2018;\npp. 1–8.\n209. Fan, D.H.; Gao, S. The application\
    \ of mobile edge computing in agricultural water monitoring system. IOP Conf.\
    \ Ser. Earth\nEnviron. Sci. 2018, 191, 12015. [CrossRef]\n210. Merelli, I.; Morganti,\
    \ L.; Corni, E.; Pellegrino, C.; Cesini, D.; Roverelli, L.; Zereik, G.; D’Agostino,\
    \ D. Low-power portable devices\nfor metagenomics analysis: Fog computing makes\
    \ bioinformatics ready for the Internet of Things. Futur. Gener. Comput. Syst.\n\
    2018, 88, 467–478. [CrossRef]\n211. D’Agostino, D.; Morganti, L.; Corni, E.; Cesini,\
    \ D.; Merelli, I. Combining edge and cloud computing for low-power, cost-effective\n\
    metagenomics analysis. Futur. Gener. Comput. Syst. 2019, 90, 79–85. [CrossRef]\n\
    212. García, L.; Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz, P. IoT-based smart\
    \ irrigation systems: An overview on the recent trends on\nsensors and IoT systems\
    \ for irrigation in precision agriculture. Sensors 2020, 20, 1042. [CrossRef]\n"
  inline_citation: '>'
  journal: Agriculture (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2077-0472/11/6/475/pdf?version=1621608717
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Sensing with Edge Computing in Precision Agriculture for Soil Assessment
    and Heavy Metal Monitoring: A Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2022/5617903
  analysis: '>'
  authors:
  - Muhammad Zulkifl Hasan
  - Zurina Mohd Hanapi
  - Muhammad Zunnurain Hussain
  - Masnida Hussin
  - Nadeem Sarwar
  - Mohammad Yahya Akhlaqi
  citation_count: 17
  full_citation: '>'
  full_text: ">\nReview Article\nDeep Insight into IoT-Enabled Agriculture and\nNetwork\
    \ Protocols\nMuhammad Zulkifl Hasan,1 Zurina Mohd Hanapi,1 Muhammad Zunnurain\
    \ Hussain\n,2\nMasnida Hussin,1 Nadeem Sarwar\n,2 and Mohammad Yahya Akhlaqi1\n\
    1Faculty of Computer Science and Information Technology, Universiti Putra Malaysia,\
    \ Sedang, 43400 Selangor, Malaysia\n2Department of Computer Science, Bahria University\
    \ Lahore Campus, Pakistan\nCorrespondence should be addressed to Muhammad Zunnurain\
    \ Hussain; gs58270@student.upm.edu.my\nReceived 31 May 2022; Revised 29 August\
    \ 2022; Accepted 12 September 2022; Published \x17 October 2022\nAcademic Editor:\
    \ Shaohua Wan\nCopyright © 2022 Muhammad Zulkiﬂ Hasan et al. This is an open access\
    \ article distributed under the Creative Commons\nAttribution License, which permits\
    \ unrestricted use, distribution, and reproduction in any medium, provided the\
    \ original work\nis properly cited.\nIn recent years, research has combined the\
    \ connection of agricultural equipment to increase crop growth rates and lower\
    \ planting\ncosts by reﬁning the entire planting process. IT-enabled agriculture\
    \ has beneﬁcial eﬀects on this industry and is yet a source of\ndebate in academic\
    \ circles. Trending network technologies like WSN and IoT have never been easy\
    \ to develop and use in\nagriculture. The growth rate was not increased using\
    \ outdated, conventional methods and technologies. Additionally, the rapid\npopulation\
    \ expansion cannot meet human demands and expectations. Survey Methodology. The\
    \ existence of IoT in agriculture\nwas investigated and reported in this review.\
    \ The paper describes the diﬀerent IoT-agriculture network protocols. This study\n\
    clariﬁes how the Internet aﬀects agriculture and its underlying mechanisms. It\
    \ also discusses how the growth rate is boosted\nwhen both sectors work together.\
    \ This study intends to explore a platform that oﬀers an infrastructure to link\
    \ devices using\nthe network protocol used in agriculture. In this study, several\
    \ contemporary network diﬃculties relating to agriculture are also\ncovered. Conclusion.\
    \ The results of this study can be used as a guide for creating particular network\
    \ protocols for the\nagriculture industry.\n1. Introduction\nIn the economic development\
    \ of a region, agriculture plays a\ncrucial role. Agriculture is an essential\
    \ profession [1]. In\nIndia, almost 70% of families survive on the income gener-\n\
    ated by agriculture [2]. The protection and improvement\nof agriculture are therefore\
    \ necessary. Keeping in view the\nimportance of agriculture, smart farming was\
    \ introduced.\nAgriculture and information technologies check the produc-\ntion\
    \ of diﬀerent crops [3]. Several problems are yet to be\nsolved in agriculture\
    \ as the most critical portion of farmers’\nstrategies is obsolete and does not\
    \ reach an acceptable yield\n[4]. Humidity, air temperature, and farmland signiﬁcantly\n\
    aﬀect plant development and the agriculture industry, which\nare crucial for sustainability\
    \ [5]. Sustainable agriculture and\nintelligent farming have drawn widespread\
    \ interest in acade-\nmia and industry, which is seen as a modern way of achiev-\n\
    ing food development, including crop monitoring in a real\nenvironment, smart\
    \ greenhouse, disease detection in crops\n[6], and smart city management [7],\
    \ among others. Other\nchallenges, including data collection and recording, are\
    \ the\nprimary steps toward fundamental analysis and intelligent\nfarming applications\
    \ [8]. Data has become more ubiquitous\nwith the exponential growth of mobile\
    \ and wireless network-\ning technology. An IoT (Internet of Things) system consists\n\
    of low power, small in size, and sensor nodes operated using\nbatteries [9], which\
    \ also leads to wireless sensor networks\n(WSNs) [10]. To sense the environment\
    \ continuously in\nremote geographical areas, a network of inexpensive nodes\n\
    is deployed, a typical IoT application. The IoT draws much\nHindawi\nWireless\
    \ Communications and Mobile Computing\nVolume 2022, Article ID 5617903, 16 pages\n\
    https://doi.org/10.1155/2022/5617903\ninterest due to high demands for creative\
    \ operation, perfor-\nmance, and productivity enhancement [11]. Cloud comput-\n\
    ing\nand\nthe\nInternet\nof\nThings\nperform\nelementary\nmanagement jobs, manage\
    \ visual data related to crops, and\nobserve the growth environment [12]. The\
    \ projected market\nsize of smart farming worldwide in 2017 and 2022 as smart\n\
    agriculture global market size is projected to rise from\naround US$ 9.58 billion\
    \ in 2017 to US$ 23.14 billion by\n2022 [11]. Smart farming increases agricultural\
    \ productivity,\nsolves agrarian challenges like food demand, and makes\nfarmers\
    \ more connected and intelligent. By 2023, the market\nsize of smart agriculture\
    \ worldwide is expected to hit around\nUnited States (US) $ 26.76 billion. Precision\
    \ farming is\npoised to become the most inﬂuential agricultural trend in\ndeveloping\
    \ countries. It is also projected that the market size\nof precision farming will\
    \ rise from US$ 730 million in 2015\nto US$ 2.42 billion by 2020. Figure 1 shows\
    \ IoT projects’\nglobal share and trends [13].\nWith the growing development in\
    \ mobile and wireless\nnetworking technologies and the ever-increasing amount\
    \ of\ndata and related resources distributed via heterogeneous net-\nworks, the\
    \ Internet of Things (IoT) has transformed the con-\ncept of a more interconnected\
    \ society into reality [14]. The\nIoT, also known as the Internet of Things or\
    \ the Modern\nInternet, is a modern technology model designed as a global\nnetwork\
    \ of computers and machines capable of connecting,\ndelivering innovative activities,\
    \ and improving production\nand productivity [15]. The IoT is now generally known\
    \ as\na product that already has a signiﬁcant impact on industrial\nmarkets. Current\
    \ innovations rely mainly on managing and\ntracking diverse operations, increasingly\
    \ growing to satisfy\nhuman requirements. Most of these innovations are based\n\
    on eﬃcient management and control of various processes.\nSeveral remote health\
    \ tracking system sensors can screen\nvariables and transfer data to a personal\
    \ computer or an\nonline storage website [16]. This device can resolve patients’\n\
    concerns by continuously recording data on their mobile\nphones, PC, or various\
    \ remote gadgets, which may inﬂuence\ntheir procedures. Sensors allow patients\
    \ to self-screen, mon-\nitor, and survey human physiological information while\
    \ sup-\nplying healthcare providers with interfaces and a dashboard.\nThese sensors\
    \ are eﬃciently tracked for patient consider-\nation and eventually become accurate\
    \ and robust. Incorpo-\nrating the wearable integrated sensor [17] is used to\n\
    assemble physiological and development information to\nenable the status checking\
    \ of patients. The medicinal use of\nintrigue represents sensors. Using wearable\
    \ frameworks,\nhealth tracking systems often use multiple sensors periodi-\ncally\
    \ organized into a sensor that is either conﬁned to\nbody-wearing sensors or incorporates\
    \ a network of sensors.\nThe use of wearable sensors and systems that are important\n\
    to the restoration ﬁeld includes well-being and health obser-\nvation, safety\
    \ control, home recovery, adequacy of treatment\nassessment, and early identiﬁcation\
    \ of disorders [18].\nThe relationship between the Internet of Things (IoT)\n\
    and agriculture is highlighted in this research. For doing this,\ndiﬀerent communication\
    \ protocols have been discussed in\nthis paper. Similarly, the network protocols\
    \ are further\ndivided into subprotocols, and each protocol’s speciﬁc pur-\npose\
    \ is elaborated. After that, the relationship between agri-\nculture and IoT is\
    \ discussed, including the function of\nnetwork protocols in agriculture and their\
    \ problems.\nThe remaining parts are arranged as follows: Section 2.1\nexamines\n\
    existing\nliterary\napproaches\nand\nprotocols,\nfollowed by Section 2.2 on communication\
    \ protocols. Sec-\ntion 2.3 then discusses the purpose of distinct protocols in\n\
    a network; Section 2.4 then discusses agriculture and the sig-\nniﬁcance of computer\
    \ networks in agriculture; Section 2.5\nthen discusses the analysis of computer\
    \ network protocols\nin agriculture; Sections 2.6 and 2.7 then illustrates potential\n\
    research and technologies used in agriculture, and Section\n2.8 discusses network\
    \ issues in agriculture. Section 2.9 pro-\nvides the discussion based on research\
    \ questions, and Sec-\ntion 3 concludes the paper.\n2. Survey Methodology\nBased\
    \ on the discussion mentioned in the introduction sec-\ntion, the proposed work\
    \ focused on three research questions\nand targeted them as:\nQ1. What network\
    \ protocols have been utilized in the lit-\nerature for agricultural digitization?\n\
    Q2. Which protocol is the best in IoT?\nQ3. What challenges existed in agricultural\
    \ networks?\nWe investigated the role of IoT in agriculture and net-\nwork protocols\
    \ in depth. A review approach was used for\nthe deep investigation. This aided\
    \ us in integrating previous\nwork and deﬁning our strategy in a broad sense.\
    \ The\nresources are connected to IoT methods in agriculture and\nnetwork protocols.\
    \ Other sources include books, research\npapers, and review articles. The primary\
    \ goal of our research\nis to give all users information so they can pick which\
    \ proto-\ncols will best fulﬁll their needs. Table 1 provides the detail of\n\
    the gathered research.\n2.1. Literature Review. Discuss the constraints that are\
    \ used\nto reduce the risk level in farming. The author highlighted\nthat many\
    \ farm areas with the ownership of that land could\nincrease the expectations\
    \ of a high growth rate due to free-\nhand decision capability and can determine\
    \ adoption pace.\nMoreover, it is mentioned that developing countries use\ntwo\
    \ successful technologies in agriculture. First, technology\nis for aﬀordability\
    \ and availability of resources, and second,\ntechnology is used to proﬁt by minimizing\
    \ risk levels in\nfarming decision-making. The proﬁt maximization depends\non\
    \ the number of laborers, the farm size, and the agricultural\nresources [19].\
    \ In [20], the authors introduced a blockchain\nmethod as the central spine where\
    \ IoT devices worked to\ncollect data from the ﬁeld along with smart contracts,\n\
    responsible for communication among all the contributing\nparties. In [21], the\
    \ authors predicted whether the area is\nsuitable for harvesting or growing a\
    \ speciﬁc fruit tree using\nhigh-level protocols. The research discusses the network’s\n\
    strategy used in the business’s functionality. The authors\nexamined the protocols\
    \ and services from a high level and\nhighlighted data transport mechanisms in\
    \ a continuous\ncommunication stream. That data stream was assigned from\none\
    \ company to another and performed transit of message.\n2\nWireless Communications\
    \ and Mobile Computing\nThe main focus is on Hypertext Transfer Protocol (HTTP)\n\
    applications, and the method used is Hypertext Markup\nLanguage. The research\
    \ claims that the Internet Protocol\n(IP) or Transmission Control Protocol (TCP)\
    \ is easier to\nhandle. Furthermore, the paper discusses appropriate HTTP\nsecurity\
    \ methods [22].\nThe research uses Address Resolution Protocol (ARP) to\nanswer\
    \ the queries of mapping from a logical address to a\nphysical address. ARP protocols\
    \ are preferred to save\ndenial-of-service (DoS) and man-in-the-middle (MITM)\n\
    attacks. So, through this, sensitive data can be exchanged\nwithout any ﬂaws.\
    \ After analyzing that no solution is feasi-\nble, the author discussed many solutions\
    \ and generated a\nstatement. Also, a secure and eﬃcient ARP version is pro-\n\
    vided through this research. The proposed version is viable\nfor all attack types\
    \ and provides a more reliable solution.\nThe authors claim that the designed\
    \ ARP is more eﬃcient\nand can solve entries related to storing in the ARP cache\n\
    [23] using particle swarm optimization (PSO). The selection\nparameters have an\
    \ objective function in node degree,\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nIOT ANALYTICS\
    \ \nIoT Segment\nSmart city\n23%\n17%\n12%\n11%\n10%\n8%\n6%\n5%\n4%\n4%\nConnected\
    \ industry\nConnected building\nSmart energy\nOther\nConnected car\nConnected\
    \ health\nSmart supply chain\nSmart agriculture\nSmart retail\nDetails\nAmericas\
    \ Europe\nAPAC Trend2\nGlobal share of IoT projects1\n2018\nInsights that empower\
    \ you to understand IoT markets\n34%\n53%\n54%\n31%\n33%\n30%\n42%\n35%\n50%\n\
    34%\n55%\n29%\n49%\n36%\n53%\n35%\n39%\n26%\n45%\n20%\n13%\n12%\n19%\n11%\n15%\n\
    12%\n9%\n31%\n18%\n45%\n1. Based on 1,600 publicly known enterprise IoT projects\
    \ (Not including consumer to IoT project e.g., Wearables, Smart home). 2. Trend\
    \ based on comparison\nwith % of projects in the 2016 IoT analytics enterprise\
    \ IoT projects list. A downward arrow means the relative share of all projects\
    \ has declined, not the overall\nnumber of projects. 3. Not including consumer\
    \ smart home solutions. Source: IoT Source: IoT analytics 2018 global overview\
    \ of 1,600 enterprise IoT use cases (Jan 2018)\nSource: IoT analytics, Jan 2018\n\
    Americas\nEurope\nAPAC\nMEA\nN/A\nN = 1,600 global, publicly\nannounced IoT projects\n\
    Figure 1: Globally IoT projects trends [13].\nTable 1: Methodology and content\
    \ adoption mechanism in the literature.\nReview questions\nQ1. What network protocols\
    \ have been utilized in the literature for agricultural digitization?\nQ2. Which\
    \ protocol is the best in IoT?\nQ3. What challenges existed in agricultural networks?\n\
    Research selection criteria\n(i) Book, journal articles, conference papers, reports\n\
    (ii) Research published during the period between 2011 and 2021\n(iii) Research\
    \ must provide the answers to the research questions\n(iv)Research also contains\
    \ the title, year, and source\n(v) Literature targeted the IoT-agriculture along\
    \ with network protocols\nResearch exclusion criteria\n(i) Summaries of events\
    \ and seminars\n(ii) Research published before 2011\n(iii) The publication is\
    \ not in English\n(i) Source: IEEE, Springer, Hindawi, peerj, and Scopus\n(ii)\
    \ Search equations: IoT, agriculture, IoT in agriculture, network protocol, network\
    \ protocols in IoT,\nnetwork protocols in IoT-agriculture, communication protocols\n\
    Targeted area (no of studies)\n[reference]\n(i) Background and statistics (18)\
    \ [1–18]\n(ii) IoT in agriculture (34) [19–52]\n(iii) Communication protocols\
    \ (13) [22, 23, 41, 53–62]\n(iv) Computer networks in agriculture (2) [63, 64]\n\
    3\nWireless Communications and Mobile Computing\nintracluster distance, residual\
    \ energy, and several optimal\nCHs. Compared to routing protocols, the model works\
    \ best\nin terms of complex network metrics [24]. The research\nhighlighted performance\
    \ and security issues. Secure Sockets\nLayer (SSL) is used to discuss security\
    \ issues. The claim is\nthat SSL is a speciﬁc protocol to facilitate user communica-\n\
    tion. Through SSL secure authentication, data encryption,\nand data decryption\
    \ can be done. This protocol provides\nexcellent security service but is less\
    \ eﬃcient in performance\nthan other protocols and services. Now we combine both\n\
    the terms “data” and “communication” as “data communi-\ncation (DC).” DC deals\
    \ with an encoded movement of infor-\nmation by using an electronic transmission\
    \ system. Data is\nsent from one point (known as a source) to another point\n\
    (known as a destination) [25]. Ahmed et al. [26] introduced\nfog computing and\
    \ WiFi-based Long Distance (WILD) net-\nworks in present WSN-based solutions to\
    \ cover long range\nwith minor delays. Also, a cross-layer-based media access\n\
    control (MAC) is adopted to observe traﬃc nature and lead\nto an assigned duty\
    \ cycle that improves delay and through-\nput. In [27], the researchers demonstrated\
    \ the consequences\nof increasing the overall processing time and decreasing the\n\
    number of bytes available in memory. The researchers\nclaimed that SSL has a higher\
    \ impact on real processing time\nwhen taking the percentage of the bytes available\
    \ in mem-\nory. The primary function of any sensor network is to route\nthe sensor-assembled\
    \ information and forward it to the BS.\nThe simplest way to transmit data is\
    \ direct transfer, where\nthe nodes have to direct their data to the base station\
    \ or sink\nnode. However, suppose the distance between the sink and\nthe network\
    \ is high. In that case, the node will die out\nquickly due to unnecessary energy\
    \ consumption. The clus-\ntering algorithm eliminates wasteful energy consumption\n\
    when delivering data to BS by grouping the network into\nclusters. Each cluster\
    \ is assigned a cluster head (CH), which\nsends data to base station (BS). Choosing\
    \ CH, which should\nensure a uniform energy distribution between the sensors,\
    \ is\ncrucial in the clustering algorithm [28]. The selective iden-\ntity attack\
    \ model is often considered in identity-based\nencryption, which means the identity\
    \ to attack should be\nannounced before the attacker requests the necessary infor-\n\
    mation. The attacker could ﬁrst pick multiple identities to\nexpose, known as\
    \ the selective multi-ID attack, for various\nreceivers Strategic Management and\
    \ Innovations Division\n(SMID) [29]. Using optoelectronic components and a poly-\n\
    dimethylsiloxane\n(PDMS)\nmicroﬂuidic\ndevice,\na\ncolorimetry-based miniaturized\
    \ device for accurately asses-\nsing two soil, nitrogen, phosphorus, and macronutrients\n\
    was constructed. A microcontroller and Bluetooth-based\nmodule are adopted to\
    \ ﬁnd the remote location and monitor\nthe data. Moreover, an android application\
    \ is also developed\nto monitor data transmission [30]. A blockchain-based opti-\n\
    mization technique is used for the system of greenhouse.\nHowever, the proposed\
    \ method performs three primary\ntasks (prediction, optimization, and controlling),\
    \ whereas\nthe Kalman ﬁlter is utilized to predict the greenhouse sen-\nsory information.\
    \ Similarly, for indoor greenhouse climate,\nthe\noptimal\nparameters\nare\ncalculated.\n\
    Finally,\nthese\nimproved parameters are used to activate and control the\nactuator\
    \ with the help of the control module. The proposed\noptimization strategy reduced\
    \ energy consumption by 19%\ncompared with prediction-based techniques and 41%\
    \ com-\npared to the baseline scheme [31]. An IoT multiagent preci-\nsion irrigation\
    \ approach enhances water usage in irrigation\nsystems. Irrigation is supervised\
    \ and regulated in each ﬁeld\nwith the help of an intelligent irrigation agent\
    \ that prescribes\nand applies the amount of water based on agronomical\nparameters\
    \ in the proposed system. The results showed that\nirrigation levels were administered\
    \ accurately on the ﬁelds,\nresulting in increased water eﬃciency [32]. Data exchange\n\
    can be done through a wireless or wired transmission\nmedium from one device to\
    \ another. In simple words, digital\ninformation transferring from one place (source)\
    \ to another\n(destination) is known as data communication (DC) [25,\n33]. Smart\
    \ agriculture consists of several parameters such\nas soil nutrients, business,\
    \ security, proﬁt, storage, and com-\nmunications. However, the soil is an essential\
    \ parameter to\nenhance business in agriculture. Measuring soil capability\nﬁrst\
    \ and then investing in it is necessary [30]. Similarly,\nthe greenhouse method\
    \ can improve or accelerate agricul-\ntural progress. As a result, a blockchain-based\
    \ technique\n[31] exists in the literature that eﬃciently monitors green-\nhouse\
    \ performance using sensory information. However,\nthis method can be implementable\
    \ after measuring the soil’s\ncapability.\nSimilarly, other methods [32] are also\
    \ used to manage or\nmonitor other agriculture components like water and honey.\n\
    Furthermore, because a large number of sensors are operat-\ning at the same time,\
    \ security is an essential aspect of intel-\nligent agriculture. Security may\
    \ be improved by addressing\nvulnerabilities and employing attack-prevention tactics.\n\
    Many methods [21–23, 25, 26] may be used to enhance net-\nwork security and performance.\
    \ The summary of literature\nis summarized in Table 2.\nThe IoT integrates the\
    \ Internet with intelligent devices\nand objects, becoming an omnipresent network.\
    \ Messages\nfrom the satellite must also be stored until they can transmit\nto\
    \ the device. The satellite IoT gateway should eventually be\nﬁtted with store-and-forward\
    \ functionality [34]. Besides, the\ngateway could also store the data received\
    \ from the smart-\nphones when traveling beyond the satellite contact range to\n\
    avoid data loss and vice versa. Moreover, because of BLIP’s\nsmaller footprint,\
    \ Berkeley IP (BLIP) makes it simple and\nstraightforward to build network apps.\
    \ We performed test-\nbeds on actual WSN consisting of TELOSB and MICAZ\nhardware\
    \ systems to discover the characteristics of LowPAN\nin (BLIP). It is important\
    \ to note that BLIP can only use the\nIPv6 unicast address that is part of the\
    \ network shared from\nthe edge router and its interface identiﬁer derived from\
    \ the\ninterface’s MAC address [35]. WSN provides a platform\nfor data processing\
    \ and networking to map and navigate\nthe natural environment and strengthen society\
    \ [36]. Wire-\nless\ntechnology\ntransfer\ndrains\nmore\nelectricity\nthan\nmachines\
    \ designed to receive or stay idle. In [37], the\nauthors developed a routing\
    \ mechanism using a memetic\nalgorithm that elevated the performance of IoT-based\
    \ WSAs\nin regards to throughput, stability period, the actual number\nof nodes,\
    \ end-to-end delay, and network lifetime. The rising\n4\nWireless Communications\
    \ and Mobile Computing\nnumber of smart devices connecting to the Internet has\n\
    made energy eﬃciency an excess parameter in the IoT archi-\ntecture. Setting up\
    \ energy-eﬃcient methods for integrating\nsensor networks has always been diﬃcult\
    \ for researchers.\nOnce combined with the IoT, control becomes a more criti-\n\
    cal concern due to the number of computers [38].\nTechnologies such as Automatic\
    \ Identiﬁcation and Data\nCapture (AIDC), barcode, QR code, and near-ﬁeld commu-\n\
    nication (NFC) are used to identify warehouse organiza-\ntions. Using NFC technology\
    \ is the opportunity to use it as\nan NFC tag reader on a cell phone. Barcodes\
    \ can provide fast\nand accurate data transmission that ensures monitoring of\n\
    products/pallets/packages and enhances service quality for\nend-users [39]. In\
    \ multilinear maps setting MPHF parame-\nters, a new ID-MRPKE scheme based on\
    \ MPHF is built. In\nthe basic model, we illustrate the security of the suggested\n\
    method. Our plan is only formulated concerning a standard\nmultilinear level map.\
    \ Using the improved noisy crypto-\ngraphic multilinear maps of Gu’s work is necessary\
    \ to con-\nstruct our scheme, which proved contrary to the attack\n[40]. The main\
    \ research focused on HTTP, highlighting that\nprotocol is the critical and essential\
    \ data communication\nprotocol. He discusses the TCP/IP model in detail and OSI\n\
    layers. He highlights the message traveling from sender to\nreceiver or client\
    \ to server. He discusses the packet tracer’s\nmonitoring and simulating mechanism\
    \ [41]. A wide variety\nof applications, including smart cities, traﬃc congestion,\n\
    waste management, systemic health, defense, emergency ser-\nvices, logistics,\
    \ retail, industrial control, and healthcare, are\nenabled by the Internet of\
    \ Things (IoT) [42]. IoT is mega\ntechnology that can build links on a website\
    \ and any net-\nwork with something, anybody, at any time, location, or\noperation.\
    \ It has a massive eﬀect on the entire blockchain\nof heterogeneous network connectivity-enabled\
    \ organiza-\ntions, intelligent objects and applications, networks, and ser-\n\
    vices built as an intellectual, ubiquitous framework of smart\ndevices. IoT devices\
    \ operating in several areas attach to\ndynamic devices and communicate with hostile\
    \ environ-\nments [43].\nThe Burrows-Abadi-Needham (BAN) logic approach\nwas used\
    \ to test the system. Cryptanalysis ﬁnds that our\nscheme can solve the security\
    \ vulnerabilities of previously\npublished techniques. The result reveals that\
    \ our scheme’s\nsecurity features are quantitative and can increase authenti-\n\
    cation performance in IoT environments. Notably, it has\nexcellent performance\
    \ reliability, low cost of computing, fru-\ngal electricity consumption, and low\
    \ communication cost\n[44]. The traﬃc route between the heads of the zone and\n\
    the base station is distance-centered and designed to elimi-\nnate data packet\
    \ loss at one hop and dual-hop speeds at\nthe site’s leaders. Each site is planned\
    \ by uniform random\ndeployment to own approximately 1/4 percent of the\ndeployed\
    \ sensor node count like network energy usage, sen-\nsor node average energy consumed,\
    \ packet distribution ratio,\npercentage of packet loss, and network throughput\
    \ [45].\nWith SWIPT, we have a modeling system for sustainable cel-\nlular mass\
    \ IoT. Under functional conditions, the advantages\nof spatial beamforming provided\
    \ by the multiple-antenna BS\nTable 2: Brief descriptions of literature review.\n\
    Authors\nApproaches\nMethodology\nRemarks\nPranto\net al. [20]\nBlockchain (BC)\n\
    method\nCollection of data using the intelligent contract\nRobust and secure characteristics\
    \ of BC in\nagriculture\nPrediction of suitable area for harvesting or tree\n\
    growth\nKumar\nand\nVenkata\n[22]\nHTTP\nDiscussion of security methods of HTTP\
    \ and working\nmechanism\nThe researchers claim that IP or TCP are easier to\n\
    handle\nAtaullah\nand\nChauhan\n[23]\nARP\nDiscussion of network attacks and prevention\
    \ swarm\nparticle optimization is used to\nIt keeps all of the ARP’s advantages\
    \ while\nremoving its security ﬂaws\nGupta [25]\nSSL\nSecure authentication, data\
    \ encryption, and data\ndecryption\nLess eﬃcient in performance\nAhmed\net al.\
    \ [26]\nFog computing\nand WILD\nnetworks\nWSN-based solutions to cover long-range\
    \ with minor\ndelays\nImproves delay and throughput\nPal et al.\n[30]\nMicrocontroller\n\
    and Bluetooth-\nbased module\nMonitoring the location and data\n—\nJamil et al.\n\
    [31]\nBlockchain-based\noptimization\nPerform three signiﬁcant operations such\
    \ as\nprediction, optimization, and control. First, this model\npredicts the sensory\
    \ information, then calculates the\noptimal parameters, and ﬁnally improves the\n\
    parameters used to initiate and control the actuators\nReduced energy consumption\
    \ by 19% compared\nwith prediction-based techniques and 41%\ncompared to the baseline\
    \ scheme\n5\nWireless Communications and Mobile Computing\nimprove information\
    \ transformation and energy harvesting\n(EH). To mitigate the eﬀects of adverse\
    \ variables, we propose\ntwo\nrobust\nbeamforming\nalgorithms\nto\noptimize\n\
    the\nweighted sum rate, minimize the overall power consumption\nfor the cellular\
    \ IoT, and prove that the proposed algorithms\napply to functional SWIPT systems\
    \ with low complexity and\nhigh analytical and simulation robustness [46]. Nowadays,\n\
    we see many apps that make our lives easy, such as smart\ncars, smart houses,\
    \ intelligent traﬃc control, intelligent\nworkplaces, innovative medical consultation,\
    \ smart cities,\netc. All such services are beyond an average citizen’s control\n\
    to improve information and communications technologies.\nThe vision of the word\
    \ Internet has continuously spread its\nwings in all facets of life over the past\
    \ few years. Identifying\nthe optimum capacity of the Internet use has been a\
    \ diﬃcult\nchallenge for researchers. Over time, items have been corre-\nlated\
    \ with the word Internet and are not known as IoT [47].\nAs the name suggests,\
    \ Radio Frequency Identiﬁcation\n(RFID), wireless sensor networks (WSN), Bluetooth,\
    \ near-\nﬁeld communication (NFC), Long-Term Evolution (LTE),\nand numerous other\
    \ intelligent communication technologies\nare related through the Internet [48].\n\
    Communication is not only between humans in sci-\nence, but it can also be between\
    \ devices or computers.\nThe exchanging of information between two (or more)\n\
    bodies is known as correspondence, while knowledge is\nused in a well-formed or\
    \ ordered manner as information\nabout someone. Data can occur in several ways,\
    \ such as\ntext (SMS) or device data in a text ﬁle or image, or a sig-\nnal, such\
    \ as cell phone data. The “digital-analog signal” or\n“digital bit” is known as\
    \ data in electronic science. Specif-\nically, data is a plural form that describes\
    \ a single piece of\nknowledge [49]. WSNs have been an integral part of appli-\n\
    cations, such as environmental surveillance, military, and\nmedical surveillance,\
    \ through feasible connectivity, practi-\ncal inspection, and application eﬃciency.\
    \ Many sensor\nnodes are composed of WSNs that are thinly deployed\nand wirelessly\
    \ communicated to transmit and receive envi-\nronmental data. At least one or\
    \ more sensors, a radio\ntransceiver, a processor, and a power supply portion\
    \ are\nﬁtted for each sensor node. Due to the sophistication of\nsuch structures,\
    \ developing WSNs is a very demanding\ntask [50]. In accumulation, some essential\
    \ speciﬁcations,\nsuch as the power consumption criterion, which is the pri-\n\
    mary key, need to be fulﬁlled during the construction of\nthe WSN. Several programming\
    \ methods, which concen-\ntrate on low-level machine problems, have been proposed\n\
    in existing real-world WSN implementations [51]. High-\nlevel processes have been\
    \ recognized, and many solutions\nhave been suggested to simplify the architecture\
    \ of the\nWSN and abstract from low-level technical data. The\nmodel-driven engineering\
    \ (MDE) methodology, in particu-\nlar, is becoming a promising alternative [52].\
    \ Figure 2\nshows the recently utilized communication technologies\nin IoT.\n\
    2.2. Communication Protocols. A set of data communica-\ntion rules is known as\
    \ a protocol. Two devices must be\nused as a protocol to perform communication\
    \ to send or\nreceive bit-streams to each system. And all the entities\nshould\
    \ be agreed on a “Protocol” to do contact. We han-\ndle the following queries\
    \ [53, 54].\n(i) What is communicated?\n(ii) How is it communicated?\n(iii) When\
    \ is it communicated?\nProtocols act like an agreement among communicating\ndevices.\
    \ Following are the elements used in the protocol.\n(1) Syntax: data structure\
    \ or format means the order in\nwhich data is presented. Like the simple protocol,\n\
    the design uses the ﬁrst 8 bits as the sender address,\nthe second (after the\
    \ ﬁrst 8 bits) 8 bits used as the\nreceiver address, and the rest\n(2) Semantics:\
    \ each section’s bit meaning is known as\nsemantic\n(3) Timing: is a combination\
    \ of two things\n(i) When sent the data\n(ii) How fast we sent it\nIf both sides\
    \ do not use the compatible mechanism,\nsome data may be lost on the receiver\
    \ side. Two systems\nmay be interconnected but can neither send the data nor\n\
    communicate without a protocol. Communication protocols\nact as the rule descriptions\
    \ through which devices are\nallowed for communication. They deal as one component\n\
    of the DC system.\n2.2.1. Transmission Control Protocol (TCP). TCP is the sig-\n\
    niﬁcant communication protocol in two or more electronic\nsystems on a network\
    \ setup. TCP allows the devices to trans-\nmit data among them. TCP breaks the\
    \ data before sending\nthem into IP packets and reassembles them at the receiver.\n\
    A system sends a request to another device through TCP\nfor communication, sending\
    \ the request to the receiver’s\naccurate address. After getting an agreement\
    \ between two\nparties/systems, TCP allows communication after setting\nup a “Full-Duplex.”\
    \ Full-Duplex maintains a communica-\ntion line between designs and work until\
    \ one of the systems\ndisconnects or closes the path. TCP/IP have several further\n\
    protocols inside them, like TCP between applications, User\nDatagram Protocol\
    \ (UDP) for the most straightforward\ncommunication among applications, Internet\
    \ Protocol (IP)\ncommunication between computers, Internet Control Mes-\nsage\
    \ Protocol (ICMP) to handle errors and check statistics,\nand Dynamic Host Conﬁguration\
    \ Protocol (DHCP) used\nfor “Dynamic Addressing.”\n2.2.2. Internet Protocol (IP).\
    \ Communication-less means no\nphysical line (cable) for communication is required\
    \ between\ntwo systems. The communication-less protocol is known as\nthe Internet\
    \ Protocol. This protocol uses a subnet mask\n6\nWireless Communications and Mobile\
    \ Computing\nand IP address to determine whether the data is remote or\non a local\
    \ network. A default gateway is used to forward data\nknown as a “router” if a\
    \ remote network links to another\nnetwork. IP used a hop to keep track of the\
    \ transverse num-\nber towards the destination.\nInternet Protocols support all\
    \ the local area network\n(LAN) types and have a point-to-point link with nodes.\
    \ IP\ncan solve the Ethernet problem of scaling. Through IP, we\ncan achieve universal\
    \ “connectivity.” IP supports global\nrouting and addressing mechanisms to send\
    \ packets of\ninformation from one host to another. The most common\nversion is\
    \ IPv4, also known as version 4; it has 4 bytes, which\nmeans 32 bits. The speciﬁc\
    \ point of IPv4 from IP is that it\nhas two parts of address: the “network part”\
    \ and the second\n“host part.” The router is vital in sending packets toward the\n\
    accurate destination system. Same as TCP, IP splits the data\ninto small-sized\
    \ boxes (independent) and is sent via the\nInternet to the system. The beneﬁt\
    \ is that each communica-\ntion line can be used simultaneously among diﬀerent\n\
    methods.\n2.2.3. Wireless Routing Protocol (WRP). This protocol com-\nprises a\
    \ routing protocol, also known as vector routing.\nRouting tables are used to\
    \ store each node’s information.\nThe store’s data is node distance value, link\
    \ cost, routing\ninformation, and information about the “Message Retrans-\nmission\
    \ List (MRL).” Each node in this interconnectivity\nhas its own path known as\
    \ the “Shortest-path Spanning Tree\n(SST)” within their adjacent nodes. These\
    \ adjacent nodes get\nupdated information. If no change occurs in the direction,\n\
    then information is directly transmitted among nodes; oth-\nerwise, a new path\
    \ is built after the new shortest path for\nrouting information. All the data\
    \ is updated in the table.\nWRP has faster transmission of information because\
    \ this\nprotocol does not use the loop phenomenon in algorithms.\n2.2.4. Address\
    \ Resolution Protocol (ARP). In the TCP/IP pro-\ntocol, another protocol is named\
    \ “Address Resolution Proto-\ncol (ARP) in the network layer protocol bottom.”\
    \ The HOST\npart is identiﬁed by 32 bits (Portion in IP address). TCP/IP\nhas\
    \ a diﬀerent addressing scheme name, “Medium Access\nControl” or MAC, and uses\
    \ 48 bits for address. The network\nlayer receives a packet and checks the destination\
    \ IP address.\nThe packet is directly sent from the sender machine to the\ndestination\
    \ machine if the destination is at some network\n(local network). If the destination\
    \ is diﬀerent, then a router\npath would be found. The sender machine needs the\
    \ MAC\nto address the destination machine for sending direct\npackets. ARP can\
    \ accomplish this. It also has an ARP cache\nto make the temporary memory map\
    \ 32 bits address to 48\nbits address scheme. ARP sends the request message (ARP\n\
    request) and receives a reply (ARP reply). ARP request is a\nform of the message,\
    \ and in this message, it depends on\nthe MAC address. Then all the hosts broadcast\
    \ this request.\nARP reply is a form of the message containing the MAC\naddress\
    \ requested.\n2.3. Protocol for Speciﬁc Purpose. Speciﬁc protocols are\ndesigned\
    \ to perform a speciﬁc task (single task) for commu-\nnication through network\
    \ systems. Some of these protocols\nare listed below, and their functionalities\
    \ are for analysis\npurposes.\n(1) Hyper-Text Transfer Protocol (HTTP) maintains\n\
    the communication between the browser and server\n[41]. For this communication,\
    \ it uses a request\nwhich sends from the browser (client) to the server\n(web),\
    \ and in return for this request, web contents\nare sent from server to browser\
    \ (client), as shown\nin Figure 3\n(2) Hyper-Text Transfer Protocol Secure (HTTPS):\n\
    when the “S” letter is attached to the HTTP, it indi-\ncates the communication\
    \ (above mention) is secure\n[22, 55]. It means S has a speciﬁc meaning. Usually,\n\
    bank transactions have sensitive data, so they use\nthis protocol\n(3) Secure\
    \ Socket Layer (SSL): this protocol is worn for\ndata encryption to perform secure\
    \ transmission of\ndata [56, 57].\n(4) Multipurpose Internet Mail Extensions (MIME):\n\
    this protocol transmits binary data and voice and\naudio (multimedia ﬁles) across\
    \ the TCP/IP network\n(5) Internet Message Access Protocol (IMAP): this pro-\n\
    tocol’s speciﬁc use is retrieving and arranging (sort-\ning) email data\n(6) File\
    \ Transfer Protocol (FTP) handles the ﬁle trans-\nmission between the systems\
    \ [58] (Mazin, 2013)\n(7) Network Time Protocol (NTP): its particular pur-\npose\
    \ is to perform time synchronization between\nsystems [56, 59]\nGreen\ncomputing\n\
    approach 2017\nRFID, LTE 2020\nMemetic\nalgorithm 2020\nID-MRPKE\n2021\nHTTP 2019\n\
    Berkeley IP\n(BLIP) 2017\nSWIPT 2019\nBAN 2020\nAIDC, barcode,\nQR code, NFC\n\
    2021\nFigure 2: IoT communication techniques.\n7\nWireless Communications and\
    \ Mobile Computing\n(8) Dynamic Host Conﬁguration Protocol (DHCP):\nthis protocol\
    \ is used for IP address dynamic alloca-\ntion of systems into a network [60].\n\
    (9) Simple Network Management Protocol (SNMP) is\nused explicitly for computer\
    \ network administra-\ntion [61]\n(10) Lightweight Directory Access Protocol (LDAP)\n\
    gathers the Internet user’s email address and\ninformation\n(11) Internet Control\
    \ Message Protocol (ICMP): if any\nerror handling occurs in the network, this\
    \ protocol\ntakes care of it\n(12) Address Resolution Protocol (ARP): it must\
    \ ﬁnd\nthe computer network address based on a card-\nbased IP address [23, 62].\
    \ Figure 4 shows the pur-\npose of each protocol in visual form\n2.4. Agriculture.\
    \ Agriculture is the most recent trend that has\ngained popularity due to its\
    \ collaboration with systems and\nthe Internet. Using network capabilities and\
    \ computing\npower can enhance the agriculture growth rate. Instead of\ntraditional\
    \ tools, computers and the Internet can also facili-\ntate agriculture without\
    \ physical objects. For example,\napplying diﬀerent sensors to get ﬁeld updated\
    \ status could\nnot be done with old traditional tools. In 2025, according\nto\
    \ the report of the United Nations organization named\nthe “Food and Agriculture\
    \ Organization (FAO),” the total\npopulation will increase by up to 8 billion\
    \ people. This\nmeans we must build a mechanism to increase the food\ngrowth rate\
    \ (practical food production will be increased by\nup to 70%). To achieve the\
    \ target of FAD mention number\nand provide food to each person globally, we need\
    \ to intro-\nduce the modernization of agriculture technology and gener-\nate\
    \ high-quality products. Resources and a high-water\nsupply are mandatory to get\
    \ all the beneﬁcial agriculture\npoints.\nCollecting valuable measurements from\
    \ raw information\nis the goal of any research. Get the crop data that needs to\
    \ be\nprocessed in a well-deﬁned manner. A year ago, the term\n“precision agriculture”\
    \ came into the research ﬁeld to per-\nform crop management, generating digital\
    \ data (digital\ninformation). To get the appropriate or correct decision\nrelated\
    \ to the crop conditions and crop diseases, an entire\ndevelopment process is\
    \ needed to get the crop diagnoses.\nDiagnoses of any crop or ﬁeld can only be\
    \ made with ﬁeld\nexperience, and data can be perceived over a farmer’s eye.\n\
    Our primary purpose of this research is to manage the crops\nand farms with the\
    \ help of information related to the ﬁeld\nand make intelligent decisions after\
    \ diagnosing. A proper\nsystem must connect smart devices or sensors to achieve\n\
    the abovementioned objectives. The interconnectivity of\nthese devices can generate\
    \ desired information about crops.\nThis information acts as the data that is\
    \ retrieved directly\nfrom the soil and crops. There are two ways to retrieve\
    \ the\ndata from the soil. First is using the sensors and getting\ninformation\
    \ through these sensors in the form of ﬁelds. Sec-\nond, use an application or\
    \ software. This application is usu-\nally synchronized with the Internet. In\
    \ our research, we use\nthese two steps in the same order. We interconnect devices\n\
    through the computer network protocol and will build an\napplication. After receiving\
    \ data from the sensors, our con-\ntrol unit will perform a decision that means\
    \ physical action\nexecution. This action can be in any form, which means\nwe\
    \ can achieve any speciﬁc action from our machinery after\nany command.\n2.4.1.\
    \ Computer Network in Agriculture. A lot of work has\nbeen done in the last decade\
    \ to enhance the growth rate of\nagriculture. People have used Internet functionalities\
    \ and\nphysical things such as sensors in the previous decade to\nget the highest\
    \ growth rate target. When the Internet func-\ntionalities and material objects\
    \ known as “things” are com-\nbined, it made a new concept of research named the\n\
    “Internet of Things” (IoT). The structure of IoT is built upon\nthe three layers.\
    \ The three layers are (1) perception layer, (2)\nnetwork layer, and (3) application\
    \ layer. The perception\nlayer has sensing ability; the network layer is used\
    \ to send\ndata or as a data transfer, and the application layer stores\nthe data\
    \ and performs data manipulation.\nOur primary research topic is a computer network\
    \ in\nagriculture and IoT. The ﬁrst word, “Internet,” is used to\nget all the\
    \ Internet features and functionalities.\n2.4.2. Computer Network Functionalities\
    \ in Agriculture:\n(1) Perception Layer. As we mentioned earlier, this layer has\n\
    sensing ability, which means a wireless sensor node is used,\nand its processing\
    \ module is known as microcontroller unit\n(MCU). One or maybe more external or\
    \ embedded digital or\nApplication\nlayer\nData processing\nlayer\nNetwork layer\n\
    Application\nProcessing unit\nCPU\nGateways\nSensors\nSensing layer\nFigure 3:\
    \ IoT architecture.\n8\nWireless Communications and Mobile Computing\nanalog device\
    \ for sensing is used along with this node. The\nnext step is to get control of\
    \ identifying monitoring and agri-\nculture tracking during production. To get\
    \ the control\nmechanism during the show, WSN is used for logistics and\nstorage\
    \ control facilities and performed monitoring.\n(2) Network Layer. As the name\
    \ shows, the network layer\ncan connect neighboring nodes for communication, interact\n\
    with the environment or physical objects through WSN, and\nbuild a network for\
    \ data forwarding to get valuable informa-\ntion for further analysis. Communication\
    \ protocols facilitate\nnetwork functionalities and act as the bridge between\
    \ end\nnodes and Internet gateways. Standard protocols used in this\nstep are\
    \ ISA100.11a, Zigbee, Sigfox, one-NET, and wireless\nHART [63].\n(3) Application\
    \ Layer. As we know globally, billions of sys-\ntems are available and provide\
    \ Internet access and function-\nality control; identiﬁcation is necessary. To\
    \ access Internet\nmobility, we use IPv6 to handle identiﬁcation problems. This\n\
    layer has a challenging responsibility because devices’\nuniqueness is identiﬁed\
    \ at this layer. Another challenge is\nheterogeneity, which means it should achieve\
    \ diversity in\ndiﬀerent machines, either they are compatible with another\ndevice\
    \ or control power related to computing and adjust to\nthe environment. To handle\
    \ the identiﬁcation challenges,\nIPv6 supplementary uses context-aware addresses\
    \ and\nmeta-data. One software layer is used between the applica-\ntion layer\
    \ and the primary device. This software layer is mid-\ndleware and has a particular\
    \ scope in the new service\ndevelopment. Using this middleware mechanism, we get\n\
    the combined functionalities of the sensor network and\nservice-oriented architecture\
    \ (SOA) infrastructure.\n2.5. Computer Network Protocol Analysis in Agriculture.\n\
    Interconnected services in wireless technology are mainly\nsplit into six categories.\
    \ These categories are Global System\nfor Mobile Communication (GSM), Wireless\
    \ Personal Area\nNetwork\n(WPAN),\nWireless\nRegional\nArea\nNetwork\n(WRAN),\
    \ Mesh, Point-2-Point (P2P), and Low Power Wide\nArea Network (LPWAN). The purpose\
    \ of highlighting the\nwireless technology categories in the analysis section\
    \ is to\ncompare them and measure their functionality levels.\nReaders can select\
    \ the appropriate protocol for agriculture\nresearch and projects by comparing\
    \ and analyzing this\nreview paper. They can increase the growth rate, as we men-\n\
    tioned earlier. This wireless interconnectivity provides a\nwide bandwidth range\
    \ for an extensive communication\nrange. It can perform security measures and\
    \ less power con-\nsumption. Our research focus is network protocols in agri-\n\
    culture, so we provide a summarized protocol comparison\nin Table 3 as our research\
    \ ﬁnding. These protocols are used\nin the agriculture ﬁeld with speciﬁc requirements.\
    \ Through\nour research ﬁndings, readers can easily select proper com-\nputer\
    \ network protocols with high eﬃciency and compatibil-\nity with the device. However,\
    \ the comparison of IoT\nprotocols is also shown in Table 4.\nIn agriculture,\
    \ two phenomena work as vital entity in\nany project or research named (1) humidity\
    \ and (2) temper-\nature. Like temperature, humidity can irrigate the system\n\
    and wireless nodes (radio wave propagation). At tempera-\ntures like 270C to 600C,\
    \ received signals have some\nunwanted data. This is a severe issue in the development\
    \ of\nagriculture while using the wireless transceiver, their num-\nber of nodes,\
    \ and the distance among the used nodes.\n2.6. Research Approach. Climate changes\
    \ are usually consid-\nered an initial parameter to measure the changes and check\n\
    the soil condition. We apply diﬀerent sensors (more than\none) to get these measurements\
    \ in the soil. These sensors\ngenerate the data that guides us in many directions,\
    \ which\nleads us towards the higher growth of crops. For example,\nHTTP\nClient-server\
    \ communication\nSecure connection\nData encryption to perform secure transmission\n\
    Transmits binary data and voice and audio\nSorting email data\nFile transmission\n\
    Time synchronization\nDynamic Ip’s allocation\nNetwork administration\nGathering\
    \ data (email and other information)\nError-handing\nFind addresses\nHTTPS\nSSL\n\
    MIME\nIMAP\nFTP\nNTP\nDHCP\nSNMP\nLDAP\nICMP\nARP\nFigure 4: Discussion of IoT\
    \ protocols.\n9\nWireless Communications and Mobile Computing\nhow much water\
    \ is needed for a speciﬁc plant? How do we\npreserve crops from water (a high\
    \ water level is dangerous\nfor some crops; it varies from crop to crop)? What\
    \ is the\nimpact of extra irrigation on the earth’s level? What is the\natmosphere\
    \ condition? Some researchers use additional\noptical sensors to map the ground’s\
    \ situation and sense the\nremote temperature. Our integration of interconnectivity\
    \ of\nnetwork protocol can cover the larger area of the ﬁeld, and\nthrough sensing\
    \ devices, we can get more accurate condi-\ntions related to soil and weather.\
    \ With the help of this pre-\ncise information usage, we can increase the growth\
    \ rate of\ncrops. Another reason to use wireless network protocol sen-\nsors is\
    \ that they are available at reasonable prices, which\nmeans we have less impact\
    \ on cost. It allows researchers to\nTable 3: Comparison of computer network protocols\
    \ and features.\nRouting\nprotocol\nname\nRPL\nP2P-RPL\nCORPL\nCARP\nLOADng\n\
    Citations\nStrategy\nProactive\nReactive\nProactive\nReactive\nReactive\n[63]\n\
    Traﬃc type\nMP2P, P2P, & P2MP P2P\nMP2P, P2P, &\nP2MP\nMP2P, P2P, & P2MP\nP2P\n\
    [63]\nMechanism\nEnergy-aware\nmetrics & multipath\nrouting\nEnergy-aware\nmetrics\n\
    Energy-aware\nmetrics &\nmultipath\nrouting\nEnergy-aware\nmetrics & multipath\n\
    routing\nEnergy-aware metrics\n[63]\nAlgorithm\n(i) Distance vector\n(ii) Source\
    \ routing\n(i) Distance vector\n(ii) Source routing\nDistance vector\nLink state\n\
    Distance vector\n[63]\nIPv6 support\nYes\nYes\nYes\nYes\nYes\n[63]\nloT routing\n\
    challenges\nmet\nLocal and worldwide\nrepairs\nReduced energy use\nImproved mobility\n\
    The power to grow to\nany size\nThe use of RAM is\nnot taxing\nFixes for local\
    \ and\nglobal issues,\nenergy\nconservation,\nmobility, and\nscalability\nThe\
    \ data\nmanagement\nand server\ntechnology are\ntwo challenges\nThe administration\n\
    of data and storage is\nanother concern\nThis is a winning\ncombination in energy\n\
    use, mobility, high\nscalability, and low\nmemory utilization\n[63]\nMain\ncharacteristics\n\
    Identiﬁcation and\navoidance of loops.\nIn addition to self-\nconﬁguration, timer\n\
    management is also\navailable in this\nsystem\nDiscovers the most\neﬃcient path\
    \ for\nevery given source-\nto-target pair\nRPL-based\nopportunistic\nforwarding\n\
    strategy\nLinks of high quality\nfor packet\nforwarding and a\nhigh delivery rate\n\
    increase traﬃc\nAODV in a more\ncompact and eﬃcient\nform\nMore broad traﬃc\n\
    patterns may be\naccommodated\n[63]\nRestraints\nNo security\n(1) Insuﬃcient\n\
    security (2)\nexcessive use of\nsystem memory\nSecurity and\nstorage\nmanagement\
    \ is\nabsent.\nNo security no\nsecurity\nNo server\ntechnologies\nNo re-use of\n\
    previously obtained\ndata\nThere is no security.\nThere is no local repair\nLong\
    \ route-ﬁnding lag\ntime\n[63]\nTable 4: Comparison of CN protocols [64].\nFeatures\n\
    MQTT\nAMQP\nHTTP\nHTTP+Nabto\nCoAP\nCoAP+Nabto\nCitations\nTransport\nTCP\nTCP\n\
    TCP\nTCP + UDP\nUDP\nUDP\n[64, 65]\nLow latency\n✓\n✗\n✓\n✓\n✓\n✓\n[64–66]\nMessaging\
    \ type\nAsync\nSync\nSync\nSync\nSync\nSync\n[65]\nLightweight\n✓\n✗\n✗\n—\n✗\n\
    —\n[64, 65]\nBuild-in security\n✗\n✗\n✗\n✓\n—\n✓\nEasy to build on\n✗\n✗\n✓\n\
    ✓\n✓\n✓\n[65]\nEncrypted\n✗\n—\n✗\n✓\n✗\n✓\n[65]\n10\nWireless Communications\
    \ and Mobile Computing\nconnect end devices more sophisticatedly and have higher\n\
    computational capabilities with sensor incorporation. The\nconnectivity of nodes\
    \ will increase the processing. Some\nresearchers use camera devices to get images\
    \ of the crop.\nUsing these images, they implement diﬀerent image process-\ning\
    \ algorithms and predict the attack of insects.\n2.7. Technologies Used in Agriculture\n\
    2.7.1. Sensors. Sensors are intelligent devices designed to get\nspeciﬁc information\
    \ from humans or the environment.\nThese sensors are attached or deployed on the\
    \ ground or\nin the inner soil in agriculture. After deploying the sensor,\nthe\
    \ next challenge is to get a wide range of sensors to cover\nthe maximum area\
    \ of sensors. A wide range can reduce the\noverall deployment cost because we\
    \ can cover a larger area\nof any ﬁeld. But the issue is that most organizations\
    \ focus\non the data only and ignore the range parameters. IoT sen-\nsor nodes\
    \ capture data from the farming environment, such\nas soil moisture, air humidity,\
    \ temperature, soil nutrient\ncomponents, pest images, and water quality, and\
    \ then send\nit to IoT backhaul devices. IoT sensor nodes can be deployed\nas\
    \ RFDs (reduced-function devices), which only connect\nwith FFDs (full-function\
    \ devices), depending on the opera-\ntional purpose and installation location.\
    \ Farmers can use\nsmart mobile devices, such as smartphones and tablets, to\n\
    access real-time agricultural data (soil and plant condition,\nirrigation, fertilization\
    \ [65].\n2.7.2. Satellites. Satellites are another artiﬁcial medium\nthrough which\
    \ we can get remote data to achieve smart\nfarming. Foreign countries are making\
    \ a lot of investments\nin getting satellite data, for example, “GeoEye-1 system”,\n\
    “European Sentinel 2 Satellites”, “American Landsat Satel-\nlite,” and “WorldView3.”\
    \ Asian countries do not have any\nsuccess stories about satellites to get information\
    \ about ﬁeld\nor weather data. The only solution is to use ground-level\nsensors\
    \ and their interconnectivity. It is reasonable to claim\nthat precision agriculture,\
    \ which involves gathering and uti-\nlizing data about crops, soil, and weather\
    \ conditions via\nremote sensing, signiﬁcantly reduces human eﬀort in farm\nand\
    \ ﬁeld management in North America. With a market\nvalue of $6,215.9 million in\
    \ 2021 (compared to $2,792.3 mil-\nlion in Europe), the area had the most signiﬁcant\
    \ tech mar-\nket value globally.\n2.7.3. Aircraft Systems. The distance is too\
    \ long to get accu-\nrate information and point at the target through satellite.\n\
    The minimum length is 700 kilometers, measured between\nthe satellite and the\
    \ soil. To overcome the distance issue, air-\ncraft systems are used. The minimum\
    \ distance between the\naircraft and the soil is 100 meters. In Spain, 120 meters\
    \ is\nconsidered the legal distance of an aircraft system. Com-\nmonly two aircraft\
    \ systems are used. The ﬁrst is the\n“unmanned aerial vehicles (UAVs),” and the\
    \ second is the\n“remotely piloted aircraft (RPA).” Aircraft systems have\nimportance\
    \ because they can work where conventional\nground vehicles cannot perform their\
    \ duties. UAV has more\nbeneﬁts in precision agriculture.\n2.7.4. Proximal Sensing.\
    \ Sensors are known as proximal\nsensing when information is gathered from the\
    \ platform\nbased on the ground. In other words, ground-based plate\nforms are\
    \ proximal sensing. “Ground vehicles” also work\nas proximal sensing because these\
    \ vehicles are the nearest\nto the crop. They can get more accurate crop data\
    \ and more\nfeasible per meter crop samples. They can also solve the lim-\nitation\
    \ problems of sensor implementation. But they can\ndetect the weather conditions,\
    \ for example, high tempera-\nture and appropriate sunlight needed for the speciﬁc\
    \ crop.\nAircraft systems cannot perform soil scouting and crop anal-\nysis. Most\
    \ of the research progress in achieving the robots’\ntilling, seeding, pest control,\
    \ ﬁeld scout, transplanting, soil\nanalysis, and crop harvesting.\n2.7.5. Data\
    \ Gathering. The traditional farming mechanisms\ndiﬀer from the latest farming\
    \ techniques because they can-\nnot gather crop data. All crop decisions are taken\
    \ by the\nvisual assessment done by the farmer’s eye. Modern technol-\nogy assesses\
    \ and generates production decisions by using\nquantitative data. If we can compromise\
    \ on the cost, we\ncan hybridize two or more technologies and techniques for\n\
    more accurate data and gain a broader range of data. For\nexample, sensors can\
    \ perform crop data acquisition, and air-\ncraft systems can be used for other\
    \ crop-related functions.\n2.7.6. Data Representation. Crop data is usually represented\n\
    in a coherent, understandable composition for the end-\nusers. The simplest way\
    \ to show the “homogeneous zone”\nand mapping is maps format in agriculture. In\
    \ agriculture,\nmaps represent larger areas and are used in the design, mak-\n\
    ing questions to answer them. We can add or be interested\nin several parameters\
    \ to the plan. Many software is used to\ngenerate a map of a speciﬁc area. We\
    \ can also add coordi-\nnates to the map. The “Local Tangent Plane” system can\n\
    do this and provide Euclidean geometry features. Another\nfeature, the name grid,\
    \ is used in the map representation to\nshow the systematic. By using it, more\
    \ accurate information\ncan be produced.\n2.7.7. Software. “Geographic Information\
    \ Systems (GIS)” is\nused to get the practical answers and display this informa-\n\
    tion into map representation (as we mention in the data rep-\nresentation section).\
    \ This information manages all the ﬁelds.\nGIS acts as a “computer-based” tool.\
    \ Using this tool, we can\nget, manipulate, analyze, and store ﬁeld information.\
    \ As we\nmentioned earlier, “precision agriculture” has a broader\nscope; a unique\
    \ software is designed to get the information\nabout precision agriculture known\
    \ as “Filed Level Geo-\ngraphic Information System (FIS).” The drawback of this\n\
    software is that it can operate only on previous operating\nsystems like Windows\
    \ NT, 98, and 95. Some updating is\ndone in FIS to provide the information for\
    \ management\npurposes. The updated version is the “Farm Management\nInformation\
    \ System (FMIS).” A tool to help farmers manage\ntheir farms more successfully\
    \ and eﬃciently is the FMIS. To\ncultivate the farm, a system called FMIS deals\
    \ with the accu-\nracy of data, optimization of the use of resources, and proce-\n\
    dures. FMIS aims to minimize the production cost, maintain\n11\nWireless Communications\
    \ and Mobile Computing\nagriculture standards, maximize production quality, and\n\
    provide accurate decisions. Another advantage of this soft-\nware is that we automate\
    \ the whole data acquisition process.\nWe can monitor the entire process, plan\
    \ better, and make\naccurate decisions according to the situation. Some software\n\
    is so intelligently designed that they produce proper map\nrepresentation and\
    \ a decision-based model, which means\nbeginners can also make the appropriate\
    \ decision. Further-\nmore, this software also provides information about the\n\
    weather through which risk levels will be minimized.\n2.7.8. Actuation. Actuation\
    \ is the situation in which an exe-\ncutable decision is made after obtaining\
    \ the crop’s appropri-\nate information. The executable decisions mean farmers\
    \ can\nuse the advanced tools and equipment; more spray medicine\ncan be used\
    \ to prevent insects’ crops from being attacked\nafter gathering computerized\
    \ information from the control\nunit. Actuation can increase the production proﬁt\
    \ and\nreduce the impact on the environment. The actuation can\nincrease the production\
    \ rate by 35% in one ﬁeld or farm.\nSo now, we can roughly measure or assume that\
    \ the whole\nprocess positively impacts crop growth rate when we gather\nit from\
    \ area to ﬁeld.\n2.7.9. The Technology of Swath Control. Swath control can\nhandle\
    \ the overlapping issues in the area mapping. With\nthe swath control, all the\
    \ guidelines will lead to how to invest\nin farming. A farmer can increase his\
    \ farming capabilities\nwith swath size controlling through this approach. The\n\
    ﬁeld’s size and shape can change the need for fertilization\nand seeding process\
    \ and may cause irregulating applications.\nRadio frequency energy harvesting\
    \ technique is also used in\nthe agriculture domain [66].\n2.7.10. Controlling\
    \ and Monitoring via Smart Devices or\nSmartphones. Smartphones have become a\
    \ necessary part\nof our lives and played an essential role in controlling and\n\
    monitoring our daily life tasks. Researchers try to use smart\ndevices in agriculture,\
    \ especially smartphones, to manage\nand monitor purposes. An application is installed\
    \ on the\nsmartphone to control his irrigation system. Smartphones\nalready have\
    \ weather condition checking applications to\nreduce the cost of weather detection\
    \ sensors. But still, some\nsensors are required because they are not embedded\
    \ in\nsmartphones. For example, a moisture checking sensor is\nstill needed to\
    \ get the soil moisture level data. We can con-\ntrol the amount of water with\
    \ moisture information and\ndecide accordingly.\n2.8. Network Challenges in Agriculture.\
    \ In agriculture,\nmainly farming, various challenges arise. We discuss these\n\
    challenges step by step and according to their categories.\n2.8.1. Hardware. Hardware\
    \ can be directly exposed to the\nperception layer due to a challenging environment.\
    \ A chal-\nlenging environment can cover many factors like high tem-\nperature,\
    \ extreme humidity, high radiations of solar,\nincreased rain, earth vibration\
    \ in an earthquake, and strong\nair (winds) that can destroy the capability, functionality,\
    \ and\nhardware structure.\nAnother hardware factor is batteries used as power\n\
    resources; their functionalities will not be the same for long\nperiods. As a\
    \ result, substantial and long-term batteries\nand appropriate tools for programming\
    \ act as mandatory.\nAny resulting program or structure and replacement of bat-\n\
    teries will also increase the cost and the time factor. As well,\nthe disconnectivity\
    \ of interconnected devices will lead to\ndata loss. Devices sometimes lack tamper-resistant\
    \ enclo-\nsures since doing so would increase their cost. The absence\nof tamper-resistant\
    \ boxes leaves the system vulnerable to\ninteractions with outside forces, including\
    \ humans, animals,\nand farm machinery. The system integrity may be compro-\n\
    mised if a farm worker or wild animal accidentally bumps\nagainst a sensor, displacing\
    \ or removing the object from its\noriginal position. A tractor or other farm\
    \ equipment might\nstrike the device, resulting in either temporary or permanent\n\
    physical damage, data corruption, data loss, or device\ndamage.\n2.8.2. Interoperability.\
    \ In agriculture or food industries,\ninfrastructure aims to exchange goods, supply\
    \ globally, and\noptimize production. The interconnectivity of devices will\n\
    gradually transform business and make product or food ﬂow\ncontinuous with real-time\
    \ visibility. With the interconnec-\ntivity of computer protocols, we can get\
    \ high-quality product\ndata, handle computational process and storage issues,\
    \ and\nget high quality. It is a deliberate alteration of the resources\nof an\
    \ autonomous system. Robotics, autonomous tractors,\nand unmanned aerial vehicles\
    \ (UAVs) are precision agricul-\ntural technologies that are becoming more common,\
    \ espe-\ncially on big farms. Sensors, cameras, GPS, maps, and\nremote-control\
    \ systems are just a few of the aspects that\nmake this equipment function. The\
    \ autonomous system\nmay operate incorrectly or experience/cause mishaps if an\n\
    adversary alters one or more components. Failures might\ncause signiﬁcant losses\
    \ due to poor soil or crop manage-\nment, destruction of crops, structures, machinery,\
    \ and\nequipment, or even the autonomous tractor itself.\n2.8.3. Networking. The\
    \ network layer has an impact on the\nenvironmental characteristics. In agriculture,\
    \ wireless com-\nmunication is preferable because it can reduce the wire cost.\n\
    Using multipath propagation’s eﬀect, we can increase the\nlink quality level.\
    \ Like hardware, the network is also aﬀected\nby humidity, high temperature, and\
    \ diﬀerent obstacles exist-\ning in the space. So, it is a big challenge to transfer\
    \ the data\ninto its original shape in this environment’s rural behavior.\n2.8.4.\
    \ Security. Your data sent through the computer net-\nwork protocol should be\
    \ secure from external threats or\nattacks. When paired with Internet connectivity,\
    \ storage,\nadministration, and data processing create a slew of diﬃcul-\nties\
    \ and security risks. When data transfer occurs through\nthe interconnectivity\
    \ of devices, conﬁdentiality, security,\nstakeholder privacy, and authentication\
    \ are the primary con-\ncerns. The perception layer sends the protected data to\
    \ the\nnetwork layer (secure data aggregation), and then this data\naccessible\
    \ can be modiﬁed in the application layer. Hard-\nware physical security and acquisition\
    \ of information are\n12\nWireless Communications and Mobile Computing\ninvolved\
    \ in the perception layer. We can summarize the\nsecurity into three further requirements:\
    \ (1) access control,\n(2) conﬁdentiality, and (3) authentication. As we know,\n\
    devices are deployed in open areas of agriculture, which\nmeans machines are doing\
    \ their functionalities for a long\ntime without any surveillance. Other concerns\
    \ are attached\nto the security, such as modiﬁcation of tag frequency, tag\nblocker\
    \ usage, encryption, tag destruction policies, and jam-\nming. When we talk about\
    \ intelligent device restrictions,\nmany things are involved with hardware restrictions,\
    \ such\nas key distribution and routing, security, intrusion detection\nmechanisms,\
    \ and encryption algorithms. Other security\nthreats are tempering, replay attacks,\
    \ cheating, and wiretap-\nping. For example, routing attacks change network paths\
    \ to\ngain traﬃc control. Malicious nodes on IoT networks may\nattempt to change\
    \ routing pathways while data is being sent.\nAttacks like wormholes and sinkholes\
    \ might compromise\nthe communication network and gain unwanted access.\n2.8.5.\
    \ Stack. Middleware is used between the two layers (net-\nwork and application).\
    \ The responsibility of middleware is\nto act as an interface and is responsible\
    \ for communication\nand data processing. Threats can be handled at the network\n\
    layer by detecting intrusion, authentication, negotiation\nmechanisms, authentication,\
    \ negotiation mechanisms, and\nkey management. The application layer exists when\
    \ data\nstream ﬂow ends. In other words, the nearest to the cloud\nis the application\
    \ layer. Here, control structures are also\nrequired to access the management\
    \ rights and data adminis-\ntration ownership.\n2.8.6. Agriculture Potential Points.\
    \ Many services and appli-\ncations emerge with computer network protocols and\
    \ agri-\nculture,\ngaining\npopularity\nin\nrecent\nresearch.\nMany\nresearchers\
    \ are studying a system or device heterogeneity\nand implementing device integrations.\
    \ In a diﬀerent busi-\nness process, optimization analytics deals with big data.\n\
    Our government is trying to increase food production with\nfood quality and enhance\
    \ meat production (which can be\ndone only with the care of animals with each\
    \ animal’s up-\nto-date and accurate data). The meat and food production\nincrement\
    \ can increase the consumer’s request/demand.\nThe interconnectivity of devices\
    \ in the agriculture ﬁeld can\nimprove and have the ability to increase the production\n\
    cycle. It means that the agriculture ﬁeld has a secure future\nin the income sector,\
    \ and this ﬁeld has a higher impact on\nany country’s economic rate. Figure 5\
    \ shows the network\nchallenges in agriculture.\n2.9. Discussion and Future Direction.\
    \ We focused on three\nquestions in this study, addressed at the outset. As a\
    \ result,\nvarious protocols, such as SSL, HTTP, and ARP, have been\ndiscussed\
    \ in the literature. On the other hand, SSL estab-\nlishes a secure connection\
    \ and transmits data. This may be\naccomplished by using an encryption mechanism\
    \ that\nensures the security of user authentication, data, and infor-\nmation\
    \ security. The server/client connection is established\nthrough HTTP as well.\
    \ The ARP protocol is used to keep\nthe routing table updated so that linked devices\
    \ can be\nreconﬁgured. In addition, choosing the right IoT protocol\nfor your\
    \ next IoT project is crucial. As a result, this article\nanalyzes IoT protocols\
    \ and provides a concise overview of\nthe advantages and disadvantages of each\
    \ primary standard.\nDevelopers may use Nabto Edge to build Constrained Appli-\n\
    cation Protocol (CoAP) request/response clients. It does,\nhowever, circumvent\
    \ either peer’s ﬁrewall setups. This dra-\nmatically boosts the message’s credibility.\
    \ Anonymity is also\nassured out of the box since Nabto Edge bundles CoAP with\n\
    authentication, encryption, and other features. Nabto+CoAP\nis superior in terms\
    \ of latency, messaging type, built-in secu-\nrity, ease of development, and encryption.\
    \ At the same time,\nit is limited in terms of lightweight. MQTT, on the other\n\
    hand, is lightweight and ideal for low-power and compact\ndevices. Finally, the\
    \ obstacles in agricultural networks were\nhighlighted, which helped the reader\
    \ and developer grasp\nthe issues of farm networks when designing IoT applications\n\
    for agriculture. In the future, we will discuss how to make\nNabto+CoAP lightweight\
    \ and ideal for low-power device\ncompared to MQTT. What kind of parameter may\
    \ be\nimproved upon or changed to make Nabto+CoAP optimal\nand lightweight?\n\
    3. Conclusion\nIn this research, all the essential concepts of computer network\n\
    (CN) protocols are discussed in precise form. Although many\nresearch works are\
    \ done in agriculture, no one provides the\nbest protocol mechanism for speciﬁc\
    \ scenarios and require-\nments. Initially, the paper details the utilization\
    \ of CN proto-\ncols in agricultures in literature. After describing other CN\n\
    protocols (TCP, UDP, ICMP, etc.), the suggested article\npointed out that TCP\
    \ is superior since it is more eﬀective in\nterms of a three-way handshake, which\
    \ is a crucial require-\nment for networks. We have also performed CN protocol\n\
    Challenges\nHardware\nNetworking\nInteroperability\nSecurity\nStack\nAgriculture\n\
    Figure 5: Network challenges in agriculture.\n13\nWireless Communications and\
    \ Mobile Computing\nanalysis related to agriculture. Based on characteristics\
    \ such as\nlatency, messaging type, built-in security, ease to build on, and\n\
    encryption, we determined that Nabto+CoAP is far superior,\nalthough it is not\
    \ lightweight. MQTT, on the other hand, is\nlightweight and suitable for small\
    \ and low-powered devices.\nSimilarly, several network diﬃculties are also covered\
    \ in this\nstudy to provide readers a thorough understanding of them\nwhile considering\
    \ network agriculture. Agriculture is an open\nﬁeld environment, and temperature\
    \ and humidity can change\nour signal values so that sensors can generate false\
    \ output due\nto high temperature and humidity levels. As we know, many\nfoods\
    \ are destroyed due to excess rain. Our research ﬁndings\nexplain the Internet’s\
    \ existence in the agriculture ﬁeld and\nthe whole mechanism and enhancement of\
    \ growth rate with\ncollaboration.\nData Availability\nNo data were used.\nConflicts\
    \ of Interest\nAll authors have no conﬂict of interest.\nAcknowledgments\nThis\
    \ work is supported in part by the Malaysian Ministry of\nEducation under Research\
    \ Management Centre, Universiti\nPutra Malaysia, Putra Grant scheme with High\
    \ Impact Fac-\ntor under Grant number UPM/700-2/1/GPB/2018/9659400.\nReferences\n\
    [1] A. Khan, S. Aziz, M. Bashir, and M. U. Khan, “IoT and wireless\nsensor network-based\
    \ autonomous farming robot,” in 2020\nInternational Conference on Emerging Trends\
    \ in Smart Tech-\nnologies (ICETST), pp. 1–5, Karachi, Pakistan, 2020.\n[2] H.\
    \ B. Mahajan, A. Badarla, and A. A. Junnarkar, “CL-IoT:\ncross-layer\nInternet\n\
    of\nThings\nprotocol\nfor\nintelligent\nmanufacturing of smart farming,” Journal\
    \ of Ambient Intelli-\ngence and Humanized Computing, vol. 12, no. 7, pp. 7777–\n\
    7791, 2021.\n[3] A. Raghuvanshi, U. K. Singh, G. S. Sajja et al., “Intrusion detec-\n\
    tion using machine learning for risk mitigation in IoT-enabled\nsmart irrigation\
    \ in smart farming,” Journal of Food Quality,\nvol. 2022, Article ID 3955514,\
    \ 8 pages, 2022.\n[4] X. Li, L. Zhu, X. Chu, and H. Fu, “Edge computing-enabled\n\
    wireless sensor networks for multiple data collection tasks in\nsmart agriculture,”\
    \ Journal of Sensors, vol. 2020, Article ID\n4398061, 9 pages, 2020.\n[5] J. I.-Z.\
    \ Chen and L.-T. Yeh, “Greenhouse protection against\nfrost conditions in smart\
    \ farming using IoT enabled artiﬁcial\nneural networks,” Journal of Electronics,\
    \ vol. 2, no. 4,\npp. 228–232, 2020.\n[6] P. Nayak, K. Kavitha, and M. Rao, “IoT-Enabled\
    \ agricultural\nsystem applications, challenges and security issues,” in IoT\n\
    and Analytics for Agriculture, pp. 139–163, Springer, 2020.\n[7] S. Vishnu, S.\
    \ Ramson, S. Senith et al., “IoT-enabled solid waste\nmanagement in smart cities,”\
    \ Smart Cities, vol. 4, no. 3,\npp. 1004–1017, 2021.\n[8] T. M. Behera, S. K.\
    \ Mohapatra, U. C. Samal, M. S. Khan,\nM. Daneshmand, and A. H. Gandomi, “Residual\
    \ energy-\nbased cluster-head selection in WSNs for IoT application,”\nIEEE Internet\
    \ of Things Journal, vol. 6, no. 3, pp. 5132–5139,\n2019.\n[9] H. Agrawal, R.\
    \ Dhall, K. Iyer, and V. Chetlapalli, “An\nimproved energy-eﬃcient system for\
    \ IoT enabled precision\nagriculture,” Journal of Ambient Intelligence and Humanized\n\
    Computing, vol. 11, no. 6, pp. 2337–2348, 2020.\n[10] M. Srbinovska, C. Gavrovski,\
    \ V. Dimcev, A. Krkoleva, and\nV. Borozan, “Environmental parameters monitoring\
    \ in preci-\nsion agriculture using wireless sensor networks,” Journal of\nCleaner\
    \ Production, vol. 88, pp. 297–307, 2015.\n[11] M. Shahbandeh, Forecast Market\
    \ Value of Smart Agriculture\nWorldwide in 2017 to 2026, 2020.\n[12] F. Zhang,\
    \ W. Zhang, X. Luo, Z. Zhang, Y. Lu, and B. Wang,\n“Developing an IoT-enabled\
    \ cloud management platform for\nagricultural machinery equipped with automatic\
    \ navigation\nsystems,” Agriculture, vol. 12, no. 2, p. 310, 2022.\n[13] C. Louis,\
    \ 10 Charts That Will Challenge Your Perspective Of\nIoT's Growth, 2018.\n[14]\
    \ Y. Tan, W. Yang, K. Yoshida, and S. Takakuwa, “Application\nof IoT-aided simulation\
    \ to manufacturing systems in cyber-\nphysical system,” Machines, vol. 7, no.\
    \ 1, p. 2, 2019.\n[15] I. Lee and K. Lee, “The Internet of Things (IoT): applications,\n\
    investments, and challenges for enterprises,” Business Hori-\nzons, vol. 58, no.\
    \ 4, pp. 431–440, 2015.\n[16] G. Kecskemeti, G. Casale, D. N. Jha, J. Lyon, and\
    \ R. Ranjan,\n“Modelling and simulation challenges in the Internet of\nThings,”\
    \ IEEE cloud computing, vol. 4, no. 1, pp. 62–69, 2017.\n[17] N. Ome and G. S.\
    \ Rao, “Internet of Things (IoT) based sensors\nto cloud system using ESP8266\
    \ and Arduino Due,” Interna-\ntional Journal of Advanced Research in Computer\
    \ and Commu-\nnication Engineering, vol. 5, pp. 337–343, 2016.\n[18] S. M. Thaung,\
    \ H. M. Tun, K. K. K. Win, M. M. Than, and A. S.\nS. Phyo, “Exploratory data analysis\
    \ based on remote health\ncare monitoring system by using IoT,” Communications,\n\
    vol. 8, no. 1, pp. 1–8, 2020.\n[19] A. Janvry, A. Dunstan, and E. Sadoulet, Recent\
    \ Advances in\nImpact Analysis Methods for Ex-Post Impact Assessments of\nAgricultural\
    \ Technology: Options for the CGIAR, Unpublished\nworking paper, University of\
    \ California-Berkeley, 2011.\n[20] T. H. Pranto, A. A. Noman, A. Mahmud, and A.\
    \ B. Haque,\n“Blockchain and smart contract for IoT enabled smart agricul-\nture,”\
    \ PeerJ Computer Science, vol. 7, article e407, 2021.\n[21] J. A. López-Morales,\
    \ J. A. Martínez, M. Caro, M. Erena, and\nA. F. Skarmeta, “Climate-aware and IoT-enabled\
    \ selection of\nthe most suitable stone fruit tree variety,” Sensors, vol. 21,\n\
    no. 11, p. 3867, 2021.\n[22] B. V. D. Kumar and B. Venkata, “An overview of hypertext\n\
    transfer protocol service security on business domain [A],” in\nProceedings of\
    \ 2012 International Conference on Management\nand Education Innovation, Kuala\
    \ Lumpur, Malaysia, 2012.\n[23] M. Ataullah and N. Chauhan, “ES-ARP: an eﬃcient\
    \ and secure\naddress resolution protocol,” in 2012 IEEE Students' Confer-\nence\
    \ on Electrical, Electronics and Computer Science, pp. 1–5,\nBhopal, India, 2012.\n\
    [24] B. Singh and D. K. Lobiyal, “A novel energy-aware cluster head\nselection\
    \ based on particle swarm optimization for wireless\nsensor networks,” Human-centric\
    \ Computing and Information\nSciences, vol. 2, no. 1, pp. 1–18, 2012.\n14\nWireless\
    \ Communications and Mobile Computing\n[25] B. Gupta, “Data communication,” Advance\
    \ in Electronic and\nElectric Engineering, vol. 3, pp. 121–126, 2013.\n[26] N.\
    \ Ahmed, D. De, and I. Hussain, “Internet of Things (IoT) for\nsmart precision\
    \ agriculture and farming in rural areas,” IEEE\nInternet of Things Journal, vol.\
    \ 5, no. 6, pp. 4890–4899, 2018.\n[27] J. A. Stankovic, “Research directions for\
    \ the Internet of\nThings,” IEEE Internet of Things Journal, vol. 1, no. 1, pp.\
    \ 3–\n9, 2014.\n[28] J. Duan, D. Gao, D. Yang, C. H. Foh, and H.-H. Chen, “An\n\
    energy-aware trust derivation scheme with game theoretic\napproach in wireless\
    \ sensor networks for IoT applications,”\nIEEE Internet of Things Journal, vol.\
    \ 1, no. 1, pp. 58–69, 2014.\n[29] J. Jin, J. Gubbi, S. Marusic, and M. Palaniswami,\
    \ “An informa-\ntion framework for creating a smart city through Internet of\n\
    Things,” IEEE Internet of Things Journal, vol. 1, no. 2,\npp. 112–121, 2014.\n\
    [30] A. Pal, S. K. Dubey, and S. Goel, “IoT enabled microﬂuidic col-\norimetric\
    \ detection platform for continuous monitoring of\nnitrite and phosphate in soil,”\
    \ Computers and Electronics in\nAgriculture, vol. 195, article 106856, 2022.\n\
    [31] F. Jamil, M. Ibrahim, I. Ullah, S. Kim, H. K. Kahng, and D.-\nH. Kim, “Optimal\
    \ smart contract for autonomous greenhouse\nenvironment based on IoT blockchain\
    \ network in agriculture,”\nComputers and Electronics in Agriculture, vol. 192,\
    \ article\n106573, 2022.\n[32] A.-F. Jiménez, P.-F. Cárdenas, and F. Jiménez,\
    \ “Intelligent\nIoT-multiagent precision irrigation approach for improving\nwater\
    \ use eﬃciency in irrigation systems at farm and district\nscales,” Computers\
    \ and Electronics in Agriculture, vol. 192,\narticle 106635, 2022.\n[33] Y. Nureni,\
    \ Data Communication & Networking, 2015.\n[34] S. Kallam, R. B. Madda, C.-Y. Chen,\
    \ R. Patan, and D. Cheelu,\n“Low energy aware communication process in IoT using\
    \ the\ngreen computing approach,” IET Networks, vol. 7, no. 4,\npp. 258–264, 2018.\n\
    [35] A. A. Ahmed and M. AL-Shaboti, “Implementation of Internet\nof Things (IoT)\
    \ based on IPv6 over wireless sensor networks,”\nInternational Journal of Sensors\
    \ Wireless Communications and\nControl, vol. 7, no. 2, pp. 129–137, 2018.\n[36]\
    \ A. Shankar, N. Jaisankar, M. S. Khan, R. Patan, and\nB. Balamurugan, “Hybrid\
    \ model for security-aware cluster\nhead selection in wireless sensor networks,”\
    \ IET Wireless Sen-\nsor Systems, vol. 9, no. 2, pp. 68–76, 2019.\n[37] G. Kaur,\
    \ P. Chanak, and M. Bhattacharya, “Memetic\nalgorithm-based data gathering scheme\
    \ for IoT-enabled wire-\nless sensor networks,” IEEE Sensors Journal, vol. 20,\
    \ no. 19,\npp. 11725–11734, 2020.\n[38] H. Farman, B. Jan, H. Javed et al., “Multi-criteria\
    \ based zone\nhead selection in Internet of Things based wireless sensor net-\n\
    works,” Future Generation Computer Systems, vol. 87, pp. 364–\n371, 2018.\n[39]\
    \ M. Periša, T. M. Kuljanić, I. Cvitić, and P. Kolarovszki, “Con-\nceptual model\
    \ for informing user with innovative smart wear-\nable device in industry 4.0,”\
    \ Wireless Networks, vol. 27, no. 3,\npp. 1615–1626, 2021.\n[40] J. Li, X. Tang,\
    \ Z. Wei, Y. Wang, W. Chen, and Y. A. Tan,\n“Identity-based multi-recipient public-key\
    \ encryption scheme\nand its application in IoT,” Mobile Networks and Applications,\n\
    vol. 26, no. 4, pp. 1543–1550, 2021.\n[41] N. N. Kyaw, “Analysis and simulation\
    \ of hyper text transfer\nprotocol at the application layer of the internet,”\
    \ International\nJournal of Scientiﬁc and Research Publications (IJSRP), vol.\
    \ 9,\nno. 1, 2019.\n[42] K. Tabassum, A. Ibrahim, and S. A. El Rahman, “Security\n\
    issues and challenges in IoT,” in 2019 International Conference\non Computer and\
    \ Information Sciences (ICCIS), pp. 1–5,\nSakaka, Saudi Arabia, 2019.\n[43] P.\
    \ N. Borza, M. Machedon-Pisu, and F. Hamza-Lup, “Design\nof wireless sensors for\
    \ IoT with energy storage and communi-\ncation channel heterogeneity,” Sensors,\
    \ vol. 19, no. 15, p. 3364,\n2019.\n[44] C.-T. Chen, C.-C. Lee, and I.-C. Lin,\
    \ “Eﬃcient and secure\nthree-party mutual authentication key agreement protocol\n\
    for WSNs in IoT environments,” PLoS One, vol. 15, no. 4, arti-\ncle e0232277,\
    \ 2020.\n[45] K. Raj and J. B. Gnanadhas, “Cluster centroid-based energy\neﬃcient\
    \ routing protocol for WSN-assisted IoT,” Advances in\nScience, Technology and\
    \ Engineering Systems, vol. 5, no. 4,\npp. 296–313, 2020.\n[46] Q. Qi, X. Chen,\
    \ and D. W. K. Ng, “Robust beamforming for\nNOMA-based cellular massive IoT with\
    \ SWIPT,” IEEE Trans-\nactions on Signal Processing, vol. 68, pp. 211–224, 2020.\n\
    [47] S. Pundir, M. Wazid, D. P. Singh, A. K. Das, J. J. Rodrigues, and\nY. Park,\
    \ “Intrusion detection protocols in wireless sensor net-\nworks integrated to\
    \ the Internet of Things deployment: survey\nand future challenges,” IEEE Access,\
    \ vol. 8, pp. 3343–3363,\n2019.\n[48] A. Khanna and S. Kaur, “Internet of Things\
    \ (IoT), applications\nand challenges: a comprehensive review,” Wireless Personal\n\
    Communications, vol. 114, no. 2, pp. 1687–1762, 2020.\n[49] A. S. H. Abdul-Qawy,\
    \ N. M. S. Almurisi, and S. Tadisetty,\n“Classiﬁcation of energy saving techniques\
    \ for IoT-based het-\nerogeneous wireless nodes,” Procedia Computer Science,\n\
    vol. 171, pp. 2590–2599, 2020.\n[50] M. S. BenSaleh, R. Saida, Y. H. Kacem, and\
    \ M. Abid, “Wireless\nsensor network design methodologies: a survey,” Journal\
    \ of\nSensors, vol. 2020, Article ID 9592836, 13 pages, 2020.\n[51] K. Haseeb,\
    \ I. Ud Din, A. Almogren, and N. Islam, “An\nenergy-eﬃcient and secure IoT-based\
    \ WSN framework: an\napplication to smart agriculture,” Sensors, vol. 20, no.\
    \ 7,\np. 2081, 2020.\n[52] M. Haque, M. Asikuzzaman, I. U. Khan, I.-H. Ra, M.\
    \ Hossain,\nand S. B. H. Shah, “Comparative study of IoT-based topology\nmaintenance\
    \ protocol in a wireless sensor network for struc-\ntural health monitoring,”\
    \ Remote Sensing, vol. 12, no. 15,\np. 2358, 2020.\n[53] B. H. Çorak, F. Y. Okay,\
    \ M. Güzel, Ş. Murt, and S. Ozdemir,\n“Comparative analysis of IoT communication\
    \ protocols,” in\n2018 International symposium on networks, computers and\ncommunications\
    \ (ISNCC), pp. 1–6, Rome, Italy, 2018.\n[54] R. Rákay, A. Galajdová, J. Šeminský,\
    \ and I. Cvitić, “Seleceted\nwireless communication protocols and their properties\
    \ for\nuse in IoT systems,” Research Papers Faculty of Materials Sci-\nence and\
    \ Technology Slovak University of Technology, vol. 27,\nno. 45, pp. 26–32, 2019.\n\
    [55] C. E. Suharyanto, “Potential threat analysis hypertext transfer\nprotocol\
    \ and secure hypertext transfer protocol of public WiFi\nusers (Batam case),”\
    \ International Journal of Scientiﬁc & Engi-\nneering Research, vol. 8, pp. 320–326,\
    \ 2017.\n[56] M. A. Alnatheer, “Secure socket layer (SSL) impact on web\nserver\
    \ performance,” Journal of Advances in Computer Net-\nworks, vol. 2, no. 3, pp.\
    \ 211–217, 2014.\n15\nWireless Communications and Mobile Computing\n[57] R. Dastres\
    \ and M. Soori, “Secure socket layer (SSL) in the net-\nwork and web security,”\
    \ International Journal of Computer\nand Information Engineering, vol. 14, pp.\
    \ 330–333, 2020.\n[58] M. S. Al-Hakeem, S. M. Zeki, and S. Y. Yousif, “Development\n\
    of a speed reliable secure ﬁle transfer protocol (SRS-FTP),” A\nRefereed Scientiﬁc\
    \ Journal of M.U.C Baghdad-Iraq, vol. 13,\nno. 19, 2013.\n[59] X. Jie, X. Liang,\
    \ D. Lian, and Z. Delin, “Research on network\ntiming system based on NTP,” in\
    \ 2017 13th IEEE International\nConference\non\nElectronic\nMeasurement\n&\nInstruments\n\
    (ICEMI), pp. 356–360, Yangzhou, China, 2017.\n[60] A. Amin, H. Ahmed, A. Raﬁque,\
    \ M. J. Nawaz, M. Salahudin,\nand Z. Ahmed, “Designing a hierarchical DHCP server’s\n\
    model to automatically provide dedicated IP address anywhere\nin the world with\
    \ mobility,” in 2011 International Conference\nfor Internet Technology and Secured\
    \ Transactions, pp. 250–\n253, Abu Dhabi, United Arab Emirates, 2011.\n[61] M.\
    \ S. Meena, “Implementation of SNMP (simple network\nmanagement protocol) on sensor\
    \ network,” Compusoft,\nvol. 5, p. 2125, 2016.\n[62] G. Al Sukkar, R. Saifan,\
    \ S. Khwaldeh, M. Maqableh, and\nI. Jafar, “Address resolution protocol (ARP):\
    \ spooﬁng attack\nand\nproposed defense,” Communications and\nNetwork,\nvol. 8,\
    \ no. 3, pp. 118–130, 2016.\n[63] J. Suhonen, M. Kohvakka, V. Kaseva, T. D. Hämäläinen,\
    \ and\nM. Hännikäinen, Low-Power Wireless Sensor Networks: Proto-\ncols, Services\
    \ and Applications, Springer Science & Business\nMedia, 2012.\n[64] Nabto, A Comparison\
    \ of IoT Protocols for Developers, 2021.\n[65] A. D. Boursianis, M. S. Papadopoulou,\
    \ P. Diamantoulakis\net al., “Internet of Things (IoT) and agricultural unmanned\n\
    aerial vehicles (UAVs) in smart farming: a comprehensive\nreview,” Internet of\
    \ Things, vol. 18, article 100187, 2022.\n[66] A. D. Boursianis, M. S. Papadopoulou,\
    \ A. Gotsis et al., “Smart\nirrigation system for precision agriculture—the AREThOU5A\n\
    IoT platform,” IEEE Sensors Journal, vol. 21, no. 16,\npp. 17539–17547, 2021.\n\
    16\nWireless Communications and Mobile Computing\n"
  inline_citation: '>'
  journal: Wireless communications and mobile computing (Print)
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/wcmc/2022/5617903.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Insight into IoT-Enabled Agriculture and Network Protocols
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/smartcities3040072
  analysis: '>'
  authors:
  - Usman Raza
  - Abdul Salam
  citation_count: 15
  full_citation: '>'
  full_text: ">\nsmart cities\nReview\nA Survey on Subsurface Signal Propagation †\n\
    Usman Raza *,‡\nand Abdul Salam ‡\nDepartment of Computer and Information Technology,\
    \ Purdue University, West Lafayette, IN 47906, USA;\nsalama@purdue.edu\n* Correspondence:\
    \ uraza@purdue.edu\n† This paper is an extended version of our paper published\
    \ in our book Signals in the Soil.\n‡ Both authors contributed equally to this\
    \ work.\nReceived: 15 October 2020; Accepted: 19 November 2020; Published: 10\
    \ December 2020\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\
    \a\nAbstract: Wireless Underground Communication (WUC) is an emerging field that\
    \ is being developed\ncontinuously. It provides secure mechanism of deploying\
    \ nodes underground which shields them from\nany outside temperament or harsh\
    \ weather conditions. This paper works towards introducing WUC and\ngive a detail\
    \ overview of WUC. It discusses system architecture of WUC along with the anatomy\
    \ of the\nunderground sensor motes deployed in WUC systems. It also compares Over-the-Air\
    \ and Underground\nand highlights the major differences between the both type\
    \ of channels. Since, UG communication is\nan evolving field, this paper also\
    \ presents the evolution of the field along with the components and\nexample UG\
    \ wireless communication systems. Finally, the current research challenges of\
    \ the system are\npresented for further improvement of the WUCs.\nKeywords: soil\
    \ sensing; decision agriculture; Wireless Underground Communications\n1. Introduction\n\
    Wireless Underground Communication (WUC) is becoming popular because of the security\n\
    provided by its deployment methodology, i.e., far below the ground. Underground\
    \ communication\nwas ﬁrst observed in World War, however, its use was limited\
    \ to radio propagation techniques only.\nV. Fritsch and R. Wundt conducted the\
    \ experiments, in 1938–1940, to study the propagation of radio\nwaves in underground\
    \ coal mines using small transceivers in the ground. The communication range\n\
    varied depending upon the nature of the coal, however, an overall range of upto\
    \ 1000 feet was\nsuccessfully achieved. In 1942, they conducted another experiment\
    \ but this time in 100 feet thick salt\nmine at the depth of 2000 feet. For this\
    \ experiment, they used horizontal dipole antennas battery\noperated transmitter\
    \ and receiver. They were able to successfully communicate over a range of\n15\
    \ km, i.e., 9–1/2 miles. They performed voice communication using the amplitude\
    \ modulation.\nThe experiment was performed with extreme care and intelligence\
    \ avoiding any noise or extra radio\nsignals at transmitter and carefully selecting\
    \ the location of transmitter and receiver nodes at different\nlocations from\
    \ each other. It was made sure that no measurable wave existed on the earth surface\
    \ so\nthat true underground propagation can be studied. Since then, underground\
    \ communication has come\nlong way with improvement in methodologies and equipment.\
    \ This paper discusses the potential and\nchallenges of underground communication.\n\
    WUC is being used in many applications: border patrol, precision agriculture,\
    \ and environment\nmonitoring. WUC mainly consist of two components:\nsensors\
    \ and communication devices.\nThese components are either completely or partially\
    \ buried in the soil. WUC aims to provide real-time\nsoil monitoring and sensing.\
    \ In precision agriculture, WUC is mainly used for sensing and monitoring\nof\
    \ soil and other related physical properties [1–14]. The WUC are also being used\
    \ to implement border\nmonitoring for stop border inﬁltration [15,16]. Other monitoring\
    \ applications of WUS includes pipeline\nSmart Cities 2020, 3, 1513–1561; doi:10.3390/smartcities3040072\n\
    www.mdpi.com/journal/smartcities\nSmart Cities 2020, 3\n1514\nmonitoring and landslide\
    \ monitoring [4,14,17,18]. Other important component of WUC is the wireless\n\
    communication which is proved to be an emerging ﬁeld of study as well. There exist\
    \ few models in\nthe literature which represents underground communication. Underwater\
    \ communication [19,20]\nhas same challenging medium as in underground communication.\n\
    However, for underwater\ncommunication, acoustic waves [19] are used instead of\
    \ EM waves due to very high attenuation\nof EM waves in the water. Acoustic propagation\
    \ has its own disadvantages such as: low quality of\nphysical link and higher\
    \ delays because of low speed of sound, extremely low bandwidth, challenging\n\
    deployment and size and cost of equipment. These disadvantages restrict the use\
    \ of acoustic methods\nfor WUC.\nSmart Farming [1–7,21–25] is an agricultural\
    \ management process which exploits the spatio-temporal\nchanges in crop, soil,\
    \ management and production with new technologies to improve the farming\nexperience.\
    \ Smart farming employs large number of wireless devices to sense crop-related\
    \ data and send\nthis data to a central control room or server center [26,27].\
    \ In recent years, sensing technologies have\nevolved a lot. These advanced sensing\
    \ methods are then combined with adaptive input applications\n(e.g., adaptive\
    \ application of fertilizers) and soil mapping methods for efficient operation.\n\
    The advanced sensing technology have risen the demand for increased data rate\
    \ and extended\ncommunication distance. As per the reports of Cisco’s visual networking\
    \ index [28], by 2020, 11.6 billion\ndevices are predicted to be connected via\
    \ Internet. The vastness of this number can be realized by\nthe fact that population\
    \ of the world, by 2050, is predicted to be 10 billion, i.e., even less than number\n\
    of devices connected by 2020. To fulﬁll food requirement of the such huge population\
    \ of the world,\nit is imperative to utilize smart farming to its full extent\
    \ for better and cost-efﬁcient crop production\nmethod through timely decision\
    \ making and conserving natural resources. To that end, it is important\nto achieve\
    \ an ubiquitous connectivity on farms by using underground wireless communications\n\
    channel [21,26,29].\nWireless Underground Communications (WUC) applications can\
    \ be classified into various\ncategories [30–32]. Some of them, for example, includes:\
    \ environment monitoring such as precision\nagriculture and landslide monitoring,\
    \ infrastructure monitoring for better maintenance and operation of\nunderground\
    \ infrastructure, e.g., preventing leakage, application for determining location\
    \ can be helpful\nin locating people stuck in disaster, and security monitoring\
    \ applications, e.g., to detect infiltration at\nborder through concealed underground\
    \ devices. Figure 1 shows some of these applications [6,33].\nWUC and conventional\
    \ wireless networks differs majorly with respect to their communication\nmedium.\
    \ WUC sensor nodes communicate through soil where as over-the-air terrestrial\
    \ wireless\nnetwork uses air as a medium to communicate. The signal propagation\
    \ in soil is never investigated\nproperly before, in fact, electromagnetic (EM)\
    \ wave propagation was not even considered a viable\noption for underground communication.\
    \ Therefore, feasible options and solutions are explored to\ndevelop a power-efﬁcient\
    \ underground communications\nThere exists no detailed wireless channel model\
    \ because of the challenges experienced in\ndeveloping power-efﬁcient underground\
    \ communication which also hinders the protocol development\nin WUC. To overcome\
    \ this, existing literature was studied in detail along with a very detailed and\n\
    time-intensive experiments [34–38]. The results from these experiments were analyzed\
    \ over the period\nof 18 months to generalize performance of underground communication\
    \ channel. A summary of those\nresults can be found in [39]. It was found that\
    \ many soil parameters (e.g., soil texture and moisture\nand irregular soil surface),\
    \ and antenna parameters (burial depth, antenna design, and operating\nfrequency)\
    \ has effect on UG communication. It proved the underground channel dependence\
    \ on\nspatio-temporal environmental factors leading to a unique correlation of\
    \ communication system\n(information dn communication medium) with environment.\
    \ Hence, in addition to operational and\ndeployment factors, an underground channel\
    \ must not ignore these parameters.\nSmart Cities 2020, 3\n1515\nFigure 1. Use\
    \ of Wireless Underground Communications (WUC) in different areas.\nA wireless\
    \ underground communications (WUC) model has been developed and presented in [39].\n\
    The model focuses on propagation model rather than antenna problem. The WUC model\
    \ determines\nthe total signal attenuation and the BER (bit error rate) using\
    \ three-wave components (direct wave\n(DW), reﬂected wave (RW), and lateral wave\
    \ (LW) factors), dielectric soil properties prediction model,\nand the signal\
    \ superposition model. In contrast to existing literature, WUC model captures\
    \ the gain\nfrom the directivity of special antennas instead of simple insulated\
    \ dipole [6,22]. However, to avoid\nover-complication of the model, antennas problem\
    \ are not considered in this model because of large\nnumber of antennas schemes.\n\
    The in-situ experiments were done without considering lateral wave component.\
    \ If lateral waves\nare also considered using special antennas, an extended communication\
    \ range can be achieved using\nthe same transmitting power. The results obtained\
    \ from the study helped in designing WUC systems.\nA strong multi-hop networking\
    \ solution among the buried nodes can be achieved with long range\n(distance >\
    \ 10 m) eliminating the topology dependency on above-ground devices.\nIn [39],\
    \ authors have shown that depth has high effect on communication performance.\n\
    Through empirical evaluations, they observed that even a small change in depth\
    \ can degrade the\ncommunication performance. The difference in communication\
    \ performance between topsoil and\nsubsoil is because of:\n•\nSoil parameters.\
    \ Both, topsoil, and subsoil, differs in soil texture and soil moisture [40] which\n\
    causes the difference in communication for both mediums [1,8,15,34]. For example,\
    \ topsoil will\nhave more soil moisture level as compared to subsoil during rain\
    \ or irrigation because it takes\nlonger for water to reach subsoil area [41].\n\
    Smart Cities 2020, 3\n1516\n•\nSoil surface effects. LW and RW component plays\
    \ an important role in signal strength of topsoil.\nTherefore, topsoil signal\
    \ experiences much less attenuation than subsoil.\nIt is preferred to have a shallow\
    \ deployment of UG nodes in WUC because it decreases the\npropagating path in\
    \ the soil causing signal to suffer less attenuation. However, the depth is highly\n\
    application-dependent, e.g., for intruder detection, recommended deployment depth\
    \ is 10 cm and\nsport ﬁeld irrigation, however, for precision agriculture depth\
    \ of 40–100 cm is mostly recommended.\nWUC does not contains only UG nodes. Hybrid\
    \ WUC is a combination of underground (UG) and\nabove-ground (AG) [1,8,25]. As\
    \ Hybrid WUC contains multiple types of devices, it also utilize multiple\ntype\
    \ of links for the communication, i.e., above-ground to underground (AG2UG), underground-to-\n\
    underground (UG2UG), and underground-to-above-ground (UG2AG). Here, this paper\
    \ focuses on the\ncharacterization fo WUC UG2UG channel. Moreover, other channels,\
    \ i.e., AG2UG & UG2AG channels,\ncan be characterized using WUC channel model.\n\
    Another method of underground communication, not given in Figure 2, is Through-The-Earth\n\
    (TTE). TTE is applied in areas like military UG communication, geophysical exploration,\
    \ and mining.\nIt is mainly used to communicate in emergency situations for communicating\
    \ with people stuck in\ndisasters, e.g., miners stuck in mines [42]. WUC & TTE,\
    \ with all their similarities, faces completely\ndifferent set of challenges (see\
    \ Table 1). For example, a typical depth considered for TTE deployment is\nvery\
    \ deep (hundreds of meters) as compared to WUC (few centimeters). Therefore, they\
    \ are considered\ntwo different technologies in the literature [25,43,44].\nFigure\
    \ 2. The different types of networking in (WUC).\nIt can be seen in the Table\
    \ 1 that most of the challenges faced by TTE and WUSN\nchallenges are related\
    \ to the physical layer. TTE struggles in traversing rocks with long-range\ncommunication,\
    \ and WUSN struggles with long-range communication through soil. Soil moisture\n\
    highly effect the subsoil communication [15,34,35], therefore, it requires cross-layer\
    \ approach [15,22].\nMoreover, WUC need power-efﬁcient nodes buried for long lasting\
    \ operations.\nRelative permittivity of a soil depends upon the signal frequency\
    \ and Volumetric Water Content\n(VWC), therefore, signal frequency indirectly\
    \ effect the strength of the signal [45,46]. In addition to the\nfrequency, soil\
    \ conductivity also has an effect on signal attenuation. This is in contrary to\
    \ the popular\nbelief that signal is less attenuated under smaller frequencies.\
    \ Hence, signal attenuation cannot be\nestimated from only soil permittivity as\
    \ other soil parameters are also involved [45,47].\nSoil permittivity estimation\
    \ has been investigated for speciﬁc range of frequencies. All such\nstudies conclude\
    \ that frequencies around 1 GHz produce reasonable soil permittivity values and\n\
    are suitable for practical wireless under 300 MHz frequencies. However, as the\
    \ frequency decreases,\nwavelength of the signal is increased, consequently, increasing\
    \ the antenna size. Hence, very low\nfrequencies, e.g., <300 MHz, are not feasible\
    \ for WUC. In military WUC, the major requirement is to\nget longer communication\
    \ range, e.g., <10 km. To that end, military WUC use HF to LF frequency band\n\
    ﬁlter with huge antennas consuming more power. It is shown that the signal suffers\
    \ with much less\nattenuation under UHF band (300 MHz–3 GHz), and frequencies\
    \ ranging from 300 MHz–1 GHz [34]\nwhich makes them optimal to be used in practical\
    \ WUC [27,48]. However, communication through\nSmart Cities 2020, 3\n1517\nthe\
    \ soil is different where the transmission signal suffers from various underground\
    \ impairments.\nHence, in this paper, we collect the literature on communication,\
    \ networking, and localization for\nburied smart objects.\nTable 1. Typical aspects\
    \ for Through-The-Earth (TTE) and WUC scenarios.\nAspect\nTTE-Based Communication\n\
    WUSN\nFrequency range\nVLF/LF\nVHF/UHF\nMaximum range (soil path)\nUp to hundred\
    \ meters\n5 cm to dozen meters\nBandwidth\nVery small: bps\nSmall: Kbps\nNetwork\
    \ topology\nOne-hop\nOne-hop and multi-hop\nNetwork density\nSender-receiver or\
    \ few nodes\nHundred to thousand nodes\nUnderground channel noise\nVery critical\
    \ aspect\nSmall impact\nRock penetration\nFeasible\nUsually not feasible\nSoil\
    \ moisture\nSmall impact\nVery critical aspect\nEnergy criticality\nRelatively\
    \ small impact\nVery critical aspect\nNode cost\nRelatively high\nSmall\nCommunication\
    \ protocol design\nEmphasis on the physical layer\nCross-layer approach\nAnother\
    \ important WUC protocol is LoRa (stands for long range) [49]. It is developed\
    \ from chirp\nspread spectrum (CSS) technologies and is a physical layer spread\
    \ spectrum modulation technique.\nCSS transforms a single bit information into\
    \ a stream of bits spreading it over the complete spectrum.\nIt can operate over\
    \ a three carrier frequencies: 433 MHz, 868 MHz, and 915 MHz. The most prominent\n\
    feature and one of the major reason to use LoRa over Wi-FI and Bluetooth is its\
    \ ability to communicate\nover a large distance. LoRa also has an advantage of\
    \ being less prone to noise interference. The adaptive\ndata rate algorithm also\
    \ helps in extending the battery life of sensor nodes [50]. Overall, LoRa is\n\
    a suitable choice and beneﬁcial for IoT systems that requires to communicate over\
    \ long range.\nThis paper does not discuss LoRa because it reviews UG communication\
    \ in context of propagation\nmethods. However, LoRa is a complete communication\
    \ system with its own protocol (LoRaWAN) and\nspecialized equipment focusing mainly\
    \ on extending the range and lifetime of the sensor network.\nTherefore, LoRa\
    \ does not ﬁt in the current scope of the manuscript.\nThis study review the work\
    \ done in the ﬁeld of underground communication. There are few\nsurveys in the\
    \ literature which reviews different issues posed in WUC implementation. For example,\n\
    ref. [26] discusses the EM-waves based WUC for agriculture.\nIn [51,52], MI-based\
    \ WUC are\npresented along with the challenges and applications. Ref. [26] also\
    \ discussed various commercial\nand academic testbeds deployed for WUC. Ref. [53]\
    \ presents the challenges faced in implementing\nthe WUC in oil and gas environment.\
    \ This survey stands out from others in that it extensively\nexplores the communication\
    \ and networking solutions for the smart object buried and communicating\nthrough\
    \ the soil. Moreover, apart from the major communication technologies (EM and\
    \ MI), it also\ndiscusses the acoustic, mud-pulse telemetry and wired solutions\
    \ for the underground communication.\nFurthermore, this survey attempts to educate\
    \ and pique the interest of new and experienced researchers\nin the field. For\
    \ new researchers, it presents the tutorial content on UG communication in first\
    \ part\nof the paper in Section 2. For the experienced readers, the surveys stands\
    \ out in that it attempts to\nsummarize the current literature on popular as well\
    \ as lesser-known implementation technologies.\nThe paper is divided into two\
    \ major parts. First part of the paper is presented in complete Section 2.\nMoreover,\
    \ Sections 2–2.4 discusses the different aspects of WUC such as types of WUC channels,\n\
    difference between a traditional OTA wireless communication and UG communication,\
    \ limitations of\nOTA in UG environment, components and anatomy of WUC module,\
    \ in an extensive manner. Part II\nof the paper, i.e., Sections 3–8, presents\
    \ a detailed literature review on propagation techniques that\nSmart Cities 2020,\
    \ 3\n1518\ncan be used for underground communication. The paper discusses electromagnetic\
    \ (EM), mud pulse\ntelemetry (MPT), acoustic, magnetic induction(MI)-based and\
    \ wired ways of communicating through\nunderground environment. Finally, Sections\
    \ 9 and 10 concludes the paper by presenting the ﬁndings\nof the survey in the\
    \ form of future research directions and challenges. Figure 3 shows the complete\n\
    structure of the paper.\nPaper\nStructure\nWUC 2\nSignal Propagation\nTechniques\
    \ 3\nFindings\nOTA Limitations\n2.1\nComponents of UG\ncommunication 2.2\nTypes\
    \ of Wireless\nUG Channel 2.3\nAnatomy of WUC\nModules 2.4\nElectromagenetic 4\n\
    Mud Pulse Telemetry 5\nAcoustic Waves 6\nMagnetic Induction 7\nWired Communication\
    \ 8\nFuture Directions &\nResearch Challenges 9\nConclusion 10\nFigure 3. Paper\
    \ Structure.\nIn Part II, paper focuses on channel modeling, localization and\
    \ networking of the WUC\ntechnologies of EM and MI based communication. Since,\
    \ acoustic and mud-pulse telemetry are\nrelatively newer technologies and are\
    \ still in development stages, therefore, only channel models are\npresented for\
    \ these two technologies. EM-based methods are presented in Section 4, MI-based\
    \ in\nSection 7, Acoustic-based in Section 6, MPT-based in Section 5 and, wired\
    \ solutions in Section 8.\n2. Wireless Underground Communication\nMost commercially\
    \ available solutions uses over-the-air (OTA) communications. One of the major\n\
    challenge in implementing OTA solutions is their unknown environmental impact.\
    \ WUC employs soil\nmedium wireless underground communications. There are many\
    \ license-free solutions (e.g., ZigBee,\nBluetooth and DASH7) available for short-range\
    \ communication. These are used in Industrial, Scientiﬁc\nand Medical (ISM) bands.\
    \ Recently, FCC has loosened the restriction on using the TV white space\nfrequencies\
    \ for farms [54] (Order No. DA 16- 307 Dated: 24 March 2016). Interference with\
    \ other\nlicensed band is not expected in this space.\n2.1. Limitations of Over-the-Air\
    \ Wireless in Soil\nThere exist a many research challenges in development and\
    \ widespread of WUC. These challenges\nmust properly be investigated. A centralized\
    \ networking solution for WUC can be classiﬁed in to two\narchitectures: (1) One\
    \ with only buried UG nodes communicating with the AG node using UG links,\nand\
    \ (2) Hybrid WUC employing both UG and AG nodes (static and mobile) to communicate\
    \ through\nUG and OTA links [1,36,55]. Apart from OTA links, UG2AG and AG2UG links\
    \ are also being used\nextensively. Therefore, multi-hop networking involving\
    \ UG2UG links must be investigated in detail.\nA detailed analysis of UG2UG communication\
    \ must be performed to address the WUC challenges.\nObviously, all challenges\
    \ cannot be solved owing to the challenging environment of WUC, however,\nidentifying\
    \ and proposing solutions for the major challenges is also an important contribution\
    \ in it’s\ndevelopment. To this end, the WUC research challenges are discussed\
    \ below:\nAntenna problem: A radio communication can be analyzed theoretically\
    \ in two phases: (1) the\nantenna problem and (2) the propagation problem. WUC\
    \ model is an underground propagation\nmodel. A dipole antenna with an ideal isotropic\
    \ radiation pattern can guarantee high accuracy\nSmart Cities 2020, 3\n1519\n\
    with combination of generic antenna gains and initial decays. However, with unavailability\
    \ of ideal\nantennas, more practical approach would be to introduce specialized\
    \ antenna factor for DW, RW,\nand LW for more accuracy. Furthermore, performing\
    \ empirical investigations using large number\nof different values for burial\
    \ depths, transmit power levels, and VWC, can precisely address the\nantenna problem.\n\
    Adding antenna problem to underground channel model is a very complex task. The\
    \ complexity\nlevel increases a lot even if one component of antenna problem is\
    \ added to the problem To understand\nthe complexity, consider an example of the\
    \ radiation pattern of the antenna and its implied directivity\ngain. Figures\
    \ 4 and 5 shows how VWC impacts the radiation pattern of an antenna. First, change\
    \ in\nVWC changes the signal wavelength in soil which will also change the ration\
    \ between the wavelength\nof signal and antenna’s ﬁxed length (17.3 cm). The given\
    \ values are from Mica2 mote (a 1/4 monopole\nantenna) antenna operating at 433\
    \ MHz. The length/wavelength ratio considers two times of Mica2\nantenna length,\
    \ e.g., 34.6 cm, and half the wavelength of signal in soil or air. the two-fold\
    \ increase\nin length is mandatory because a 1/4 monopole antenna is same as 1/2\
    \ dipole antenna with ground\nstructure representing half of the antenna. Therefore,\
    \ 1/2 ratio for a half-wave dipole is shown for the\ncomparison. VWC causes decrease\
    \ in wavelength which in turn increase the length/wavelength ratio of\nantenna.\
    \ ratio.\n0\n30\n60 \n90 \n120 150 180 210 240 270 300 330 360\n0\n0.1\n0.2\n\
    0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\nRelative Angle of the receiver’s antenna\n\
    Packet Error Rate\nFigure 4. Effects of the VWC on the ratio between antenna’s\
    \ length and wavelength of the signal [37].\nFigure 5 plots the elevation pattern\
    \ of a linear dipole antenna (oriented vertically) with length\nmeasured in wavelengths\
    \ units [56]. the change in antenna′s length/wavelength ratio (Figure 4) is\n\
    represented as different radiation pattern (Figure 5). VWC causes increase in\
    \ ratio making the behavior\nradiation pattern monotonous.\nThe antenna problem\
    \ differs with type of antenna and orientation of antenna and should be\naddressed\
    \ accordingly for each antenna scheme. However, all antenna schemes are not suitable\
    \ for\nunderground communications. Therefore, it is recommended to identify antenna\
    \ schemes which can\nimprove the performance of UG2UG, UG2AG, and AG2UG links\
    \ to support WUC channel model with\nadding more antenna models. A possible solution\
    \ is suggested along with th results in [35,36,57–61].\nIt uses an ultra-wide\
    \ band antenna for UG2AG and AG2UG links and traveling-wave antenna to study\n\
    Smart Cities 2020, 3\n1520\nlateral wave propagation in UG2UG links. An empirical\
    \ investigation must be done to evaluate the\nsolutions for different depth and\
    \ transmit power level.\nFigure 5. Volumetric Water Content effecting radiation\
    \ pattern monopole antenna [37].\nBurial depth: The existing results show a strong\
    \ relation between depth and communication\nperformance. Adjusting depth can signiﬁcantly\
    \ extend the communication range with using high\npower transceiver. This has\
    \ been discussed in [34,62] and it has been said that there are some design\n\
    constraints in WUC which cannot be violated. For example, in crop irrigation,\
    \ nodes must be below\nthe topsoil region where plowing happens.\nIn WUC model,\
    \ burial depth can be deﬁned as the distance between antenna center and soil\n\
    surface. Hence, burial depth of sensors and radio modules has no effect on the\
    \ model but antenna’s\ndepth does. Therefore main challenge is the antenna deployment\
    \ in topsoil such that they are resilient\nto the mechanical activities being\
    \ performed in their vicinity. One solution is installing and removing\nnodes\
    \ while these activities, however, it increases the cost of deployment. Besides\
    \ cost, installation\nand calibration of soil sensors is also a time taking process.\
    \ In some scenarios, where sensor(s)\nand processors are permanently ﬁxed in subsoil,\
    \ easy installation/removal is only possible for\ncommunication module near to\
    \ soil surface (see Figure 6). In such cases, sensors are ﬁxed and\nlong-range\
    \ communication module is the only removable module. This module require a short-range\n\
    transceiver (with deeply buried sensor nodes) and a transceiver which enables\
    \ communication between\nabove-ground devices and other long-range modules. There\
    \ is a need to investigate best value for\nburial depth (including dbg = 0) for\
    \ such long-range module.\nHousing for the sensor nodes: In some WUC, concealment\
    \ of sensor nodes is more important\nthan high depths. One solution is to use\
    \ plastic boxes which can conceal processor, communication\nmodule and antennas.\
    \ However, it has never been investigated in detail for UG2UG communication\n\
    and preliminary experiments shows completely different effects on communication\
    \ performance.\nA scenario using stratiﬁed media (air/soil) must also be analyzed\
    \ for UG2UG links in WUC.\nDirect and reﬂected waves: So far, communication through\
    \ lateral waves has been presented\nas a power-efﬁcient solution to achieve a\
    \ long range UG2UG communication. WUC model can be\nmodiﬁed into a simple LW model.\
    \ However, it is not recommended to do so, because the short range\nSmart Cities\
    \ 2020, 3\n1521\ncommunication is mainly based on DW (Figure 6). Some components\
    \ of WUC model can also be\nused in development of UG2AG/AG2UG channel models.\
    \ Inter-node distance can be increased using\ndirectional antennas and high-power\
    \ transceiver.\nFigure 6. The WUC deployment.\nLateral waves: There is a need\
    \ of detailed empirical and theoretical evaluation of lateral wave\npropagation\
    \ for UG2UG links in WUC. The results discussed are highly limited by the power-efﬁcient\n\
    transceiver and antennas. Special antennas and high-power transceivers must be\
    \ used to achieve\nlong-range communication. It will contribute towards complete\
    \ validation of WUC model.\nEffect of using terminated traveling-wave antennas\
    \ needs to be studied. These antennas were\nused for underground communication\
    \ previously [30,48,57–59]. Therefore, these studies can be\nre-investigated for\
    \ a typical WUC scenario with modiﬁed deployment parameters. The power\nrequirements\
    \ of multi-hop LW/UG2UG technique and centralized one-hop UG2AG/AG2UG must be\n\
    studied in detail to give extremely important power related guideline for developing\
    \ WUC.\nIt is also important to study the impact of snow, water and obstacles\
    \ in surface on UG2UG links\ncommunicating using lateral waves. The results from\
    \ such studies can further complement WUC\nmodel. These studies can be used for\
    \ security purposes, e.g., detecting intruder in border patrol\napplication. The\
    \ detection process uses the disturbance of wireless channel (Figure 7).\nFigure\
    \ 7. Lateral waves can potentially be applied in security applications for WUC.\n\
    UG2AG and AG2UG channel models: A detailed channel model for UG2AG and AG2UG links\n\
    must be developed. There exists no generic model which can be applied to all WUC.\
    \ There are some\npreliminary empirical investigation done by [35,36,63], however,\
    \ an in-depth theoretical analysis is\nstill needed. Overall power requirement\
    \ for such solution also needs to be investigated. Lateral wave\npropagation already\
    \ has its application in UG2UG links. However, a comparative study for the power\n\
    budgets of multi-hop LW/UG2UG approaches and centralized one-hop UG2AG/AG2UG is\
    \ required.\nSmart Cities 2020, 3\n1522\n2.2. Components of UG Communications\n\
    In UG communications, UTs are completely concealed. It reduces the operational\
    \ cost and external\nimpact from the environmental and weather changes [3,25].\
    \ Buried radios (UTs) can communicate\nin any one of the two scenarios: (1) communication\
    \ with devices above the ground termed as\nAbove-ground (AG) communication, (2)\
    \ communication between the UTs is termed as Underground\n(UG) communication.\
    \ Furthermore, soil-air interface effect the AG communication links. Due to\n\
    interface, these links are not symmetric and must be analyzed bidirectionally,\
    \ i.e., UG-to-AG and\nAG-to-UG communication. It shows that in order to achieve\
    \ multi-hop connectivity, a practical distance\nfor UG communication is limited\
    \ to 12 m. For AG communication, a communication range up to 200 m\nis possible.\
    \ If the UG communication medium is soil, it can have effect on success of the\
    \ communication\nis following six ways:\n•\nChanges in Soil Bulk Density and Soil\
    \ Texture: Electromagnetic (EM) waves suffers\nfrom attenuation in the soil. Soil\
    \ is composed of various components such as pore spaces,\nclay, soil and silt\
    \ particles. There can be 12 soil textures depending upon relative concentration\
    \ of\nthese particles [21,64]. Bound water is the major component responsible\
    \ for EM waves attenuation\nin the soil. The amount of bound water varies from\
    \ one soil type to other. For example, sandy soil\nhas less bound water from silt\
    \ loam and silty loam, hence, it suffers from lower attenuation.\nSimilarly, medium\
    \ textured soils holds more water than coarse soils because of lower pore size.\n\
    •\nVolumetric Water Content (VWC) of Soil (Soil Moisture): The effective permittivity\
    \ of a soil is\na complex number. Therefore, in addition to diffusion attenuation,\
    \ EM waves suffers attenuation\ndue to absorption of water content by the soil\
    \ [3,34,65]. Dielectric spectra conductivity of the soil\nis dependent on SM.\
    \ For a dry soil, dielectric constant is in the range of 2 and 6 and conductivity\n\
    is in the range of 10−4 to 10−5 Si/m. For a near-saturation level soil, range\
    \ of dielectric constant\nis 5 to 15 and that of conductivity is 10−4 to 10−5\
    \ Si/m [66]. Coherence bandwidth of UG channel\nis a few hundred KHz [8,24,25].\
    \ Coherence bandwidth changes with the change in SM which\nmakes the designing\
    \ process more challenging.\n•\nDistance and Depth Variations: EM waves attenuation\
    \ also depends upon travel distance and\npath and WUC sensors are normally buried\
    \ in the top sub-meter layer. Therefore, received\nstrength of the signal distance\
    \ and depth of antennas. In WUC, sensors are buried in subsoil\nlayers and topsoil\
    \ [26,35,36]. Burial at higher depth causes higher attenuation [8].\n•\nAntenna\
    \ in Soil: Return loss of buried antenna varies due to high permittivity of soil\
    \ [43,67].\nSM variations changes soil permittivity which in turn causes variations\
    \ in return loss. Resonant\nfrequency is shifted to lower frequency spectrum due\
    \ to change in return loss. Moreover,\nachieving high overall system bandwidth\
    \ also becomes challenge for UG communications.\n•\nChange in Frequency: The path\
    \ loss resulted by attenuation is dependent on frequency [68].\nHigh frequencies\
    \ suffers high attenuation because water absorption is major factor in higher\n\
    frequencies. The soil EM waves have shorter wavelength as compared to EM waves\
    \ in the air\nbecause of higher permittivity of the soil. Channel capacity in\
    \ soil is also determined by operation\nfrequency [67].\n•\nLateral Waves: Underground\
    \ nodes communicate with each other using anyone of the three\nmajor paths: direct,\
    \ lateral and reﬂected (LDR) waves [3,6,24,25]. Direct and reﬂected waves\nare\
    \ most effected by above-mentioned challenges because their complete travel path\
    \ is through\nthe soil. On contrary, lateral waves can travel on soil-air interface\
    \ in air, hence, they experience\nlowest attenuation among all. Therefore, lateral\
    \ waves are the most important component to\nconsider while extending the UG communication\
    \ range.\n•\nDevelopments in WUC: UG communications have evolved a lot since its\
    \ inception. A lot of\nwork is done for the characterization of UG channel and\
    \ cross-layer communication solutions to\nget long communication range and high\
    \ data rate. In [6,44], authors capture and analyze impulse\nresponse of UG channel\
    \ through detailed experimentation.\nSmart Cities 2020, 3\n1523\nA total of 1500\
    \ UG green-house testbeds has been developed to analyze the effect of soil moisture\n\
    and soil texture on wireless UG communication channel. These experiments helped\
    \ in developing\nmain characteristic of wireless UG channel impulse response such\
    \ as: root mean square delay spread,\ncoherence bandwidth, and power of multi-path\
    \ components. It also validates main components of\nUG channel, i.e., direct,\
    \ lateral and reﬂected waves. The coherence bandwidth is decreases with the\n\
    distance in soil, e.g., it is shown in [6] that coherence bandwidth lower than\
    \ 1.15 MHz can decrease\nupto 418 kHz when distance increase more than 12 m in\
    \ soil [6]. Root mean square delay spread is\naffected by the soil moisture needs\
    \ tp be adapted to changing moisture value. In [22], an important\nstatistical\
    \ model for UG multi-carrier communication and soil moisture adaptive beamforming\
    \ is given\nfor WUC solutions.\n2.3. Types of Wireless Underground Channel\nLateral\
    \ waves have been extensively used in UG communication [33,57,69,70] and empirically\n\
    evaluated by [57–59]. Special antennas (eccentrically insulated traveling-wave\
    \ (EITW) antenna) are\nused for empirical evaluation. Underground lateral wave\
    \ communication is empirically evaluated\nthrough following UG2AG experiment setup:\
    \ burial depth is 40 cm, above-ground antenna and soil\nsurface were separated\
    \ by the distance of 55 cm, transmit power level is maintained at +30 dBm,\nand\
    \ 144 MHz frequency is used. The study [57] was successful to achieve long communication\
    \ range\nof 50 m [71].\nIn [72–74], authors performed experiment to empirically\
    \ evaluate UG2AG communication.\nThe experiment setup for this study is given\
    \ as follow: Terrestrial commodity sensors MicaZ [75] motes\nwere used as UG node,\
    \ operational frequency of 2.4 GHz, burial depths of 0, 6, and 13 cm, and transmit\n\
    power level of 0dBm was used. The experiments was performed in two sets of sender-receiver\
    \ scenario.\nBoth sets differed with respect to distance between soil and receiver.\
    \ For ﬁrst set, the receiver was\nkept on the soil (distance = 0 m) and the second\
    \ one had a distance of 1 m between soil and the\nreceiver. The UG2AG communication\
    \ was evaluated for two metrics: packet error rate (PER) and\nreceived signal\
    \ strength (RSS). First experiment was used as baseline experiment to compare\
    \ it with\nthe second experiment. It was observed that node buried at 13 m depth\
    \ was able to communicate at\nmaximum horizontal distance of 2.5 m and node at\
    \ 6 cm depth achieved a maximum of 7 m horizontal\ncommunication range. Hence,\
    \ it shows that attenuation is inversely proportional to the path covered\nby\
    \ the signal in the soil. The study achieved the PER of 10% [76–78].\nIn [55,79,80],\
    \ a uni-directional UG2AG communication model was studied with the effect of\n\
    reﬂection dielectric effect of soil surface on the signal attenuation. They validated\
    \ the model by\nperforming the laboratory experiments. The experiment setup was\
    \ as follow: SoilNet was used as\nsensors node, operational frequency was 2.44\
    \ GHz, transmit power of +19 dBm was used, and sensor\nwere buried at different\
    \ depth ranging from 5–9 cm. The strength of the received signal was measured\n\
    by a soil probe. It was observed that for soil width of 1 to 7 cm, signal attenuation\
    \ was increased up\nto 25 dB. However, 10 dB of attenuation was attributed to\
    \ increased VWC (0 to 35%) in soil [29,52].\nMoreover, bulk density and bulk electrical\
    \ conductivity had a negligible effect on signal attenuation.\nThe results conﬁrms\
    \ the empirical results given in [39].\nUG2AG communication model has also been\
    \ developed using customized sensor nodes [30,60].\nmodel using a customized sensor\
    \ node: Soil Scout. The experiment setup had an operation frequency\nof 869 MHz,\
    \ transmit power of +10 dBm. It used ultra wideband elliptical antenna [52,81,82]\
    \ for\nunderground communication [9] and model validation. The model predicts\
    \ signal attenuation on the\nbasis of (a) reﬂection effects of the soil surface,\
    \ (b) dielectric loss of the soil, and (c) refraction effect of\nEM waves at soil\
    \ surface (angular defocusing). It was shown that wideband antenna radiation pattern\n\
    is independent of soil texture and soil moisture and showed efﬁcient radiation\
    \ in different soil type\nwith varying soil moisture levels. The study [60,83,84]\
    \ was successful to achieve long communication\nrange of 30 and 150 m at the burial\
    \ depths of 40 cm and 25 cm, respectively.\nSmart Cities 2020, 3\n1524\nIn [85–87],\
    \ experiments are performed using customized sensor nodes. The experimental setup\n\
    uses burial depth of 10 cm, operational frequency of 868 MHz, and transmit signal\
    \ power of +10 dBm.\nAG2UG and UG2AG communication links are evaluated by performing\
    \ empirical experiments [35].\nIt uses Mica2 motes as sensor nodes, operational\
    \ frequency and transmitting power are 433 MHz\nand +10 dBm, respectively. Moreover,\
    \ they use an ultra-wide band antenna [25,82] which ends up\nimproving communication\
    \ range signiﬁcantly by effectively communicating at 22 m and 37 m at the\ndepths\
    \ of 35 cm and 15 cm, respectively. Similarly, [36] performs AG2UG and UG2AG experiments\n\
    with Mica2 motes for precision irrigation application [88,89].\nAlthough UG2UG\
    \ communication has been investigated a lot in the existing literature, however,\n\
    there is still a gap in literature for detailed UG2UG communication channel characterization\
    \ in\nsubsurface soil region. Only few studies [15,31,34,62] have performed theoretical\
    \ and empirical analyses\nof UG2UG communication link. Therefore, a detailed characterization\
    \ of UG2UG communication\nchannel is presented in the coming sections.\n2.4. Anatomy\
    \ of a WUC Module\nThe underground nodes currently used in WUC testbeds suffer\
    \ from several shortcomings.\nThese shortcomings lead to reduced communications\
    \ performance in WUC, reduced experimental\neffectiveness, and higher costs. To\
    \ address these faults, there is need of nodes tailored to WUC.\nThe following\
    \ capabilities are desirable in these nodes [39,90]:\n•\nEnvironmental Factors:\
    \ The current generation of WUC nodes is designed to support academic\nresearch,\
    \ primarily in a laboratory setting.\nAs a result, the nodes lack several important\n\
    features that aid in deployments in uncontrolled environments. First, the WUC\
    \ nodes cannot\nbe reprogrammed without interfacing to a special hardware board.\
    \ If the devices are to be\nreprogrammed in the ﬁeld, they must either be dug\
    \ up, or each mote must be deployed with the\nadditional hardware programming\
    \ board. Digging up the WUC nodes is a time-consuming and\ndifﬁcult process. Deploying\
    \ the additional hardware to reprogram the WUC nodes underground\nis expensive,\
    \ and complicates deployments [39,70,90].\nSecond, the these nodes cannot be recharged\
    \ remotely. If the batteries are exhausted during an\nexperiment, a buried mote\
    \ must be dug up, and the batteries replaced. Again, this is an extremely\ntime\
    \ consuming operation, and the performance of an experiment may be suboptimal\
    \ until the\nnode is replaced [31,84,88].\n•\nPropagation: While the current experiments\
    \ demonstrate the viability of WUC, the performance\ncould be further enhanced\
    \ by tailoring the radio of the mote to the needs of the underground\nnetworks.\
    \ The radios of the current WUC nodes are designed to transmit over the air.\n\
    The parameters are of the radios are not well matched to the the environment of\
    \ WUC in\nterms of transmit powers and frequencies. The existing WUC nodes can\
    \ be modiﬁed to better\nmatch the desired parameters, but this is not as effective\
    \ as choosing a radio speciﬁcally matched\nto the needs of a WUC node [33,52].\n\
    •\nSensing: The sensor packages that can be deployed with the current generation\
    \ of WUC nodes\ndo not collect all the information desired on the underground\
    \ environment, or contain many\nextraneous sensors that are not useful for WUC.\
    \ The extraneous sensors increase the cost of\ndeploying experimental testbeds.\n\
    These areas can all be improved upon with a node designed speciﬁcally for WUC.\
    \ In the next\nsection, the design of a mote speciﬁcally created for WUC will\
    \ be presented. This new mote will\naddress the sensing, communications, and power\
    \ needs of nodes in a WUC.\nSmart Cities 2020, 3\n1525\nTo address the challenges\
    \ raised in the previous section, a WUC node should be designed to\noperate on\
    \ limited power reserves, monitor the underground environment, and communicate\
    \ the\nresults to aboveground nodes. The design of the different desirable aspects\
    \ of a WUC node is described\nin the following sections [39,90,91].\n1.\nTransmitter/Receiver:\
    \ The radio should feature a high transmit power, and should be able to operate\n\
    on a variety of sub-1GHz frequencies that are suitable for WUC [89]. The radio\
    \ implementation\ncan be adopted to the speciﬁc needs of the antennas and RF environment\
    \ of WUC, to increase the\ntransmission range and capabilities of the device.\n\
    2.\nMicrocontroller: The microcontroller should have the ability to provide processing\
    \ power [6].\nOne such example is the MSP430 that is extremely energy efﬁcient,\
    \ also extends the lifetimes\nof the deployed sensors. The MSP430 can interface\
    \ to a variety of sensors, communication,\nand storage devices.\n3.\nSensors:\
    \ The WUC node should contains a built in accelerometer and temperature probe,\n\
    and should be able interface to an external soil moisture sensor. This combination\
    \ of sensors\nenables the node to accurately measure the characteristics of the\
    \ underground environment.\nThese measurements can adapt the behavior of the radio\
    \ to its environment in real-time.\nAccordingly, the sensor readings can be used\
    \ to assess the viability of energy harvesting through\nkinetic vibrations [8].\n\
    4.\nData Repository: The WUC nodes should have a on-board micro-SD card for storage.\
    \ This large\nstorage space can be used to store extensive sensor readings for\
    \ long term monitoring of the\nunderground environment. By including this large\
    \ storage capability, the system can sense at a\nmuch higher rate than it can\
    \ transmit information. After an extended deployment, the information\nfrom nodes\
    \ can be recovered, and a highly detailed model of the underground environment\
    \ can\nbe developed from the saved sensor readings [22].\n5.\nEnergy: The WUC\
    \ node should support a variety of energy sources with energy harvesting and\n\
    external power transfer support that enables the system to sense at higher rates\
    \ and operate for\nlonger periods of time than the current generation of WUC nodes\
    \ [39,90,92]. Moreover, the nodes\nshould also support recharging through a USB\
    \ cable that should be accessed from above-ground\nafter the node has been deployed.\
    \ Accordingly, the device can be recharged quickly in the ﬁeld,\nwithout the need\
    \ to remove a node and redeploy the in the testbed. Accordingly, the mote can\
    \ be\nenhanced with kinetic energy harvesting capabilities that will further increase\
    \ the lifetime of the\nWUC nodes.\n3. Signals in the Soil: Propagation Techniques\n\
    In this section, the recent advances in propagation techniques for signals in\
    \ the soil are discussed.\nA detailed overview of different signal propagation\
    \ techniques is given. A comprehensive review\nof research challenges EM-based\
    \ propagation techniques and networking is done. The evolution of\nunderground\
    \ wireless is also discussed. Moreover, different component of the of UG communications\n\
    are Wireless. The WUC system architecture is explained with a detailed discussion\
    \ of the anatomy\nof an underground mote.\nThe examples of ug wireless communication\
    \ systems are explored.\nFurthermore, the differences of UG Wireless and Over-the-Air\
    \ Wireless are debated. Different types of\nwireless underground Channel (e.g.,\
    \ In-Soil, Soil-to-Air, and Air-to-Soil) are reported as well.\nWUC implementation\
    \ is challenging because of its unfavorable condition and environment.\nThe challenging\
    \ environment of WUC puts some operational constraint on all of its components.\n\
    These constraints are low-power sensing, long-range communication, efﬁcient networking\
    \ and accurate\nlocalization. Signiﬁcant difference between WUC and in-air IoT\
    \ lies in deployment of sensor nodes,\ni.e., underground, and communication medium,\
    \ i.e., soil instead of air. Sensing has been discussed\nwith great detail in\
    \ Chapter 10. This section explores some communication systems which can be used\n\
    in the implementation of WUC [6,93].\nSmart Cities 2020, 3\n1526\nSoil, as opposed\
    \ to air, is a heterogeneous medium consisting of sand, rock, watersheds which\
    \ can\nhave severe degradation effect on signal propagation. There are different\
    \ technologies that can be used\nfor WUC. The wired solutions uses coaxial cables\
    \ and ﬁber optics. Wired solutions provide high data\nrates and are being used\
    \ in different applications [78,94,95]. Although, these wired solutions provides\n\
    reliable and accurate communication, however, they increase the complexity and\
    \ poses scalability\nissues. Given the disadvantages of wired systems, wireless\
    \ solutions are termed as feasible solutions\nto provide relatively low complexity\
    \ and scalable solutions.\nWireless underground communications with magnetic induction\
    \ (MI) has also been studied\nin [5,96–100]. However, there are limitations to\
    \ MI based solutions. Their signal strength attenuates\nwith inverse cube factor\
    \ and have very low data rates. MI communication is also dependent on\nposition\
    \ of receiver and sender as it cannot communicate if both receiver and sender\
    \ are perpendicular\nto each other. Furthermore, long wavelength of the magnetic\
    \ channel does not allow network to scale.\nThese disadvantages of MI and its\
    \ inability of communicating with the above-ground devices MI is\nnot suitable\
    \ for WUC.\nSome literature [65], and [83,101] has performed channel models for\
    \ underground communication\nwithout empirical validation. Integration of WUC\
    \ and precision agriculture cyber-physical systems\nand center-pivot systems is\
    \ given in [3]. Underground channel is empirically evaluated in [34,35],\nhowever,\
    \ they did not consider the antenna bandwidth for evaluation. A 2-wave path loss\
    \ model is\ndeveloped by the authors in [101], without considering the lateral\
    \ waves. Path loss prediction model\nhas been proposed in [79] but underground\
    \ communication is no considered. In [14], authors develop\nan underground communication\
    \ model for mines and road tunnels. However, it cannot be used\nin WUC die to\
    \ difference in wave propagation in tunnel and soil. A model is proposed by [65,102]\n\
    for closed-form path loss with lateral waves but this simple model cannot capture\
    \ statistics and\nimpulse response of the channel. Researchers have also characterized\
    \ coherence bandwidth of the\nunderground channel [6].\nUnderground wireless communication\
    \ is a developing ﬁeld and there is no detailed discussion\nabout the channel\
    \ capacity in the literature. Capacity of single-carrier underground communication\n\
    channel has been discussed in [67]. This discussion, however, does not consider\
    \ practical modulation\nscheme and does not perform the empirical validation.\
    \ In [8], the authors perform the capacity\nanalysis of multi-carrier modulation\
    \ in underground channel on the basis of empirical measurements\nof coherence\
    \ bandwidth, channel transfer function, and return loss of antenna under three\
    \ different\ntypes of soil and different soil moisture conditions.\nWUC antennas\
    \ are different form traditional communications antenna in that they are buried\n\
    in soil. In 1909, study of EM waves propagation started from the Somerfeld’s seminal\
    \ work [103].\nFor the complete 20th century, EM wave propagation in subsurface\
    \ stratiﬁed media and effect of\nmedium on EM waves has been investigated thoroughly\
    \ in many works [104–114]. This work analyzes\nthe electromagnetic ﬁelds of inﬁnitesimal\
    \ dipole of unit electric moment, however, it is desirable\nto use ﬁnite size\
    \ antenna with already known ﬁeld pattern, current distribution and impedance\
    \ for\npractical purposes. Field calculations and dipole numerical evaluations\
    \ for lossy half space was ﬁrst\nstudied in [115]. In [113], authors extensively\
    \ analyze the propagation of EM wave along the interface.\nHowever, this work\
    \ does not apply to underground buried antenna. Buried dipole were analyzed\n\
    in lossy half space in [109]. The authors presented the ground wave attenuation\
    \ factor of far-ﬁeld\nradiation from UG dipole and depth attenuation factor using\
    \ two vector potentials. However, it does\nnot consider the current reﬂected from\
    \ the soil-air interface. In [105], authors calculate the ﬁeld\ncomponent per\
    \ unit dipole using Hertz potential. The difference between the study in [105,109]\
    \ is that\nthe former ignores the displacement current in lossy half space. Authors\
    \ in [112] gives the Hertzman\ndipole in an inﬁnite isotropic lossy medium. EM\
    \ ﬁelds are improved by considering lateral waves and\nhalf-space interface in\
    \ [116,117].\nStudies in [118–120] analyze antennas in matter where antennas EM\
    \ ﬁelds have been theoretically\nderived in half space and inﬁnite dissipative\
    \ medium. These analyses assume perfectly matched dipole\nSmart Cities 2020, 3\n\
    1527\nantennas, hence, not considering the return loss. Relative gain expressions\
    \ and radiation efﬁcient of\nunderground antennas are developed in [108,114].\
    \ However, it did not present the empirical results.\nThe impedance of dipole\
    \ antenna inside the solutions is evaluated in [121]. It discusses the effect\
    \ of\nantenna depth, dipole length, and solution’s permittivity. However, this\
    \ work cannot be used in WUC\nbecause of difference in permittivity characteristic\
    \ of soil and solutions. Moreover, it does not consider\npermittivity change due\
    \ to soil moisture. The communications between the buried underground\nantenna\
    \ without considering the impact of orientation and impedance of antenna is studied\
    \ in [122].\nAnother work [71,123] conduct the performance analysis of four antenna\
    \ buried in refractory concrete.\nIn this work, the transmitter is buried at 1m\
    \ depth and author does not consider the concrete-air\ninterface. Circularly polarized\
    \ patch antenna are analyzed in [124]. It does not consider the interface\neffect\
    \ and antenna is buried at 3 cm depth in concrete.\nCurrent WUC applications and\
    \ experiments calculate the soil permittivity by using soil dielectric\nmodel\
    \ [15,47] which evaluates to actual wavelength used for the antenna design [31,60].\
    \ In [60],\nan WUC-based elliptical planar antenna is designed. It, using the\
    \ same frequency, compares the\nantenna wavelength in soil and air to determine\
    \ the size of the antenna. However, this methodology\nlacks in providing impedance\
    \ match. Results from the experiments on Impulse Radio Ultra-Wide\nBand (IR-UWB)\
    \ WUC without considering the effect of soil-air interface are presented in [125].\n\
    The surface-based lateral wave antenna are designed in [126], however, they do\
    \ not considers the\nunderground scenarios.\nImpedance change in soil cause disturbance.\
    \ This is similar to the disturbance caused by\nimpedance change of hand-held\
    \ device in close proximity with human body [127,128] or that\nby devices which\
    \ are implanted in the human bodies [129,130]. Experiments results obtained\n\
    from these applications shows that the human body contributes to performance degradation\
    \ of\nantenna. Even these studies are similar, they still cannot be used in WUC\
    \ because of the difference\nbetween the permittivity of soil and human bodies.\
    \ Permittivity of human body is greater than the\nsoil. Moreover, permittivity\
    \ of human body is static whereas soil has varying permittivity mainly\ndependent\
    \ upon the moisture. For example, at frequency of 900 MHz, human body has permittivity\
    \ of\n50 [128] and that of soil with 5% moisture is 5 [47].\nBeamforming has been\
    \ investigated for over-the-air wireless channel [131–137] and MI power\ntransfer\
    \ [138]. However, there exist no work in the literature on UG beamforming. Using\
    \ beamforming,\nlateral components [120] in UG communications can go to the longer\
    \ distance which is normally\nlimited to 8–12 m owing to high level of attenuation\
    \ suffered because of soil [6].\nThere has been discussion on soil permittivity\
    \ and soil moisture in the literature. Here some of\nthose techniques are discussed\
    \ for comparison purpose. This comparison will highlight the difference\nand similarities\
    \ between different techniques. Some of the method used for quantifying water\
    \ content\nin the soil includes: gravimetric method, GPR, TDR, capacitance probes,\
    \ hygrometric techniques,\ntensionmetry, nuclear magnetic resonance, resistive\
    \ sensors, gamma ray attenuation, electromagnetic\ninduction, remote sensing,\
    \ neutron thermalization, and optical methods.\nFirstly, techniques which are\
    \ used in laboratory for the soil properties estimations are discussed.\nlaboratory\
    \ based. Authors in [139] soil density, soil moisture and frequency to derive\
    \ EM parameters\nof the soil. The model restricted soil moisture weight to 20%\
    \ and it need rigorous methods of sample\npreparation. Authors in [140] develops\
    \ a probe-based lab equipment which uses vector network\nanalyzer (VNA) in the\
    \ frequency range of 45 MHz to 2.6.5 MHz. In [141], a model for estimating a\n\
    dielectric permittivity of soil is developed on the basis of empirical evaluation.\
    \ Authors in [68] develops\ntyje model for dielectric permittivity for frequencies\
    \ greater than 1.4 MHz. Peplinski in [47] modify\nthis model to work in the frequency\
    \ range of 300 MHz–1.3 GHz. A detailed survey for soil permittivity\nestimations\
    \ is given in [140]. All of these methods are performs in laboratories and requires\
    \ soil sample\nfrom the site. Collecting soil sample from the soil is very labor\
    \ intensive and do not represent he\nin-situ soil conditions. Therefore, it is\
    \ required to developed automated techniques for monitoring the\nsoil moisture.\n\
    Smart Cities 2020, 3\n1528\nAnother approach of measuring soil properties is given\
    \ in [142]. It is based on TDR and require\nrefractive index and impedance of\
    \ soil. A technique to estimate of EM properties of soils for detecting\nDense\
    \ Non-Aqueous Phase Liquids (DNAPLs) hazardous materials using Cross-Well Radar\
    \ (CWR)\nis given in [143]. This technique transmits wideband pulse waveform in\
    \ the range of 0.5 GHz to\n1.5 GHz. It also calculates soil permittivity with\
    \ transmission and reﬂection simulations in dry\nsand. The well-explained survey\
    \ on measurement of time domain permittivity in soils is presented\nin [144].\
    \ For TDR-based approaches, it is required to install sensors at each experiment\
    \ location.\nHowever, in order to make effective decisions in agriculture, real-time\
    \ soil moisture sensing is the\nprimary requirement.\nMany studies have been proposed\
    \ to investigate antenna related soil properties. An attempt\nto measure electrical\
    \ properties of earth using buried antenna has been proposed in [145,146].\nHowever,\
    \ this method requires measuring the input reactance for obtaining electrical\
    \ parameters\nof the material, and length of antenna is also required to be adjusted\
    \ to get zero input reactance.\nFresnel reﬂection coefﬁcients is used to estimate\
    \ GPR-based soil permittivity with soil antenna [147].\nHowever, they do not provide\
    \ empirical validation and also require a complex time-domain analysis.\nIn [148],\
    \ dielectric properties of soil are presented using wideband frequency domain\
    \ and frequency\nrange of 0.1–1 GHz. It uses impedance measurement equipment (LCR\
    \ meter) and VNA. In [149,150],\ncomplex dielectric properties of soil are measured\
    \ using frequency domain method which requires\nplacing soil in the probe.\nSoil\
    \ moisture and permittivity can also be measured by using GPR method. Ground permittivity\n\
    is estimated by correlating ground dielectric properties with cross talk of early-time\
    \ GPR\nsignal [151]. However, GPR method requires calibration and work only for\
    \ shallow depths (0–20 cm).\nFurthermore, soil moisture measuring technique cannot\
    \ be limited to a certain burial depth. Another\nimportant method of measuring\
    \ soil moisture is through remote sensing. Remote sensing has high\nrange of measurement\
    \ [152] and is sensitive to soil water content [153]. There are two major type\
    \ of\nremote sensing: active and passive. Passive remote sensing [154] has low\
    \ spatial resolutions which can\nbe improved by active remote sensing technologies,\
    \ however, active methods limits the soil moisture\nreadings to few centimeters\
    \ of the topsoil which highly effect the readings taken [155,156].\nWireless solutions\
    \ are classiﬁed on the basis of technology they are using to transmit information.\n\
    These solutions includes: Electromagnetic waves (EM), magnetic-induction (MI),\
    \ acoustic waves\nand VLC. Acoustic wave are used for detection purposes, e.g.,\
    \ detecting objects in underground\nenvironment [157] and detecting water content\
    \ in the soil. the disadvantage of using acoustic-based\nsystem is the low data\
    \ rate and high noise and attenuation [30,158]. Em waves has transmission range\n\
    of few meters to centimeters. However, its range is highly dependent upon the\
    \ frequency being used.\nIt is mostly used in agricultural applications [26].\
    \ EM waves suffer high signal degradation due to\ndifferent heterogeneous nature\
    \ of soil. MI-based systems needs transmitter and receiver coils to be\nperfectly\
    \ aligned which is one of the major hurdle of underground environment. MI-based\
    \ systems are\nstill in research phase and needs improvement. Finally, VLC solutions\
    \ are being investigated to be used\nfor underground communication ni gas reservoir.\
    \ However, VLC light propagation is highly effected\nby the gas and requires LED\
    \ and photo-detector to be perfectly aligned. In short, these technologies are\n\
    in research phase only and are only tested in labs yet. In coming sections, all\
    \ of these communication\nsystems are discussed in detail.\n4. Electromagnetic\
    \ Waves\nEM waves are used for communication in WUC-based agriculture [3,159],\
    \ oil and gas [160–162],\nand seismic exploration [163]. This section focuses\
    \ on presenting work being done in channel modeling\nand networking for EM waves\
    \ in WUC systems.\nSmart Cities 2020, 3\n1529\n4.1. EM Channel Modeling\nEM channel\
    \ modeling started from early 70’s of 20th century. Authors of [164] studied\n\
    underground EM propagation for the frequency range of 1–10 MHz. They performed\
    \ experiments\nin different type of soil and concluded that low frequencies fo\
    \ EM spectrum simpliﬁes the analysis,\nhowever, have the disadvantage of limited\
    \ bandwidth and time of arrival pulses had low resolution.\nTherefore, high frequencies\
    \ were used. Although, Higher frequencies causes higher attenuation but\nsuffers\
    \ from low dispersion. In [165], EM wave propagation is studied in multiple layers\
    \ of soil using\nFourier transform. In [166], impact of earth electrical properties\
    \ of the earth, i.e., conductivity and\ndielectric constant, on EM propagation\
    \ is studied. They found that these electrical properties of earth\nplays an important\
    \ role in selecting antenna size, antenna efﬁciency, transmission loss, dispersion\
    \ and\nphase shift. In [167], William et al. measured EM propagation in borehole\
    \ for high frequencies without\nconsidering the effect of reﬂections dn refraction.\
    \ The path loss model of [48,167] is given as:\nPr\nPt\n= f (θ)GtAre−2αd\n4πr2\n\
    (1)\nwhere\nPt = Transmitted Power\nPr = Received Power\nf(θ) = Effective elevation\
    \ radiation pattern\nGt = Transmitting antenna gain\nAr = Area of the receiving\
    \ antenna\nα = Attenuation constant\nd = Separation distance between transmitting\
    \ and receiving antenna\nr = Distance between the antennas\nIn [168], data rate\
    \ of 1bps (without repeaters)—100 bps (with repeaters) was achieved for\nborehole\
    \ communication. Authors in [169], studies the impact of different component of\
    \ underground\nenvironment, e.g., soil characteristics, soil moisture, network\
    \ topology, antenna characteristics on EM\nwaves communication. They performed\
    \ experiments for eh frequency range of 1–3 MHz. Similarly,\nref. [76,169] shows\
    \ the increase in attenuation with increasing humidity and frequency, ref. [170]\n\
    conducts sub-soil experiments for 300–500 MHz frequencies, and ref. [171] investigates\
    \ the EM\nattenuation for drilling telemetry system.\nIn [101,172], authors used\
    \ the Friis equation to formulate the pass loss calculation formula in\nsoil as:\n\
    Pr(dB) = Pt(dB) + Gt(dB) + Gr(dB) − Ls(dB),\n(2)\nwhere Pt is a transmitted power,\
    \ Pr is a received power, Gt is gain of transmitted antenna, Gr is the\nreceiver\
    \ gain. Here, Ls is the path loss in the soil which is calculated as Ls = L f\
    \ + Lu. L f is the path\nloss in the free space and Lu is the path loss in soil\
    \ medium. Lu is calculated as Lu = Lα + Lβ where Lα\nis the path loss due to transmission\
    \ loss and Lβ is the difference in wavelength of EM wave in soil as\ncompared\
    \ to air. Ls is calculated as:\nLs = 6.4 + 20log(d) + 8.69αd + 20log(β);\n(3)\n\
    where d represents the Euclidean distance, α denotes the attenuation constant,\
    \ and β represents\nthe phase shift constant and both of the quantities rely on\
    \ dielectric properties of soil. Peplinski\nprinciple [47] gives dielectric constant\
    \ as a complex number:\nϵs = ϵr − jϵi\n(4)\nSmart Cities 2020, 3\n1530\nwhere\
    \ ϵr is the real part and ϵi is the imaginary part. The real part is calculated\
    \ as:\nϵr = 1.15\n\x12\n1 + ρb (ϵ¯α\nx)\nρs\n+ m\n¯β\nvϵ¯α\nf − mv\n\x13 1\n¯α\n\
    − 0.68,\n(5)\nIn above equation ρb is the bulk density, ρs is the density of solid\
    \ soil and its value is 2.66,\n¯β = 1.2748 − 0.519S − 0.152C, mv represents the\
    \ water volume fraction, and , ϵf represents the effective\nconductivity and is\
    \ given as:\nϵf =\nϵ0 − ϵ∞\n1 + (2π f τ)2 + ϵ∞,\n(6)\nwhere ϵ0 is the static dielectric\
    \ constant with value of 80.1, ϵ∞ is the high frequency limit and its value\n\
    is 4.9, τ is the time taken by the water to relax, and f is the operating frequency\
    \ [173]. ϵi, imaginary\npart, is given as\n\x10\nm\n˜β\nvϵ¯α\nf\n\x11 1\n¯α .\
    \ In the imaginary part, ¯β = 1.33797 − 0.603S − 0.166C. The attenuation\nconstant\
    \ α is calculated as:\nα = 2π f\n\nµϵr\n2\n\n\ns\n1 +\n\x12 ϵi\nϵr\n\x132\n\
    − 1\n\n\n\n ,\n(7)\nwhere µ gives the magnetic permeability. β, phase shift\
    \ constant, is calculated as:\nβ = 2π f\n\nµϵr\n2\n\n\ns\n1 +\n\x12 ϵi\nϵr\n\
    \x132\n+ 1\n\n\n\n .\n(8)\nFrom Equation (7) and (8), it can be seen that\
    \ EM propagation loss depends upon number of\nfactors including composition of\
    \ the soil, soil moisture, soil bulk density and frequency of operation.\nMoreover,\
    \ it is possible to have multiple paths between transmitter and receiver [88].\
    \ This scenario is\ninvestigated by [101] which gives the path loss in presence\
    \ of multiple paths as follow:\nLt = Ls − Lv,\n(9)\nLv, in Equation (9), is the\
    \ path loss for the second path and is given as:\nL2\nv =1 +\n\x10\nγ exp(−α∆(r))2\x11\
    \n− 2γ exp(−α∆(r))\ncos\n\x12\nπ −\n\x12\nφ − 2π∆(r)\nλ\n\x13\x13\n,\n(10)\nIn\
    \ above equation, γ is amplitude, φ is the phase reﬂection coefﬁcient, λ is the\
    \ wavelength,\nand δ(r) = r − d is the path difference. The channel model in Equation\
    \ (10) is used by the [37] to\ncreate a testbed for UGWSNs and [174] compares\
    \ the theoretical and actual measured values in testbed.\nIn [32,175], authors\
    \ give the path loss formula in Terahertz band (0.1–120 THz) as follow:\nLtot\
    \ = Lsp + Lw + Lo\n(11)\nThe above equation uses three different types of loss\
    \ namely: loss due to water absorption\n(Lw = kw( f )d), spreading loss (Lsp),\
    \ and loss due to oil absorption (L0 = k0( f )d). Lsp is given as\n\x10 4π f d\n\
    c\n\x112\nwhere, f, d, and c are frequency, distance and speed of light, respectively.\
    \ This THz model\nachieves higher capacity, however, suffers in communication\
    \ range. Hence, lower frequencies are used\nby [174,176] for acheiveing long communication\
    \ range. They use frequency range of less than 500 kHz.\nThe received power in\
    \ [174,176] is given as:\nSmart Cities 2020, 3\n1531\nPr = κ exp−2αd\nd2\n,\n\
    (12)\nwhere κ =\nAr cos θ\n2η\n\x10 Iµ0ω\n4π\n\x112\n, θ, η, µ0, I, and ω denotes\
    \ phase angle, intrinsic wave impedance,\nair permeability, current and angular\
    \ frequency, respectively.\nFurthermore, [177–179] studies the effect of carrier\
    \ frequency, transmission distance, type of\nmodulation, and depth for Underground\
    \ Wireless Sensor Networks (UGWSNs). In [21,180],\nauthor proposed the code division\
    \ multiplexing scheme for improving the battery life and signal-to-noise\nratio.\
    \ Upto 124 Mbps of data rate is achieved for a transmission distance of 12m using\
    \ a multi-carrier\nmodulation [76,180]. A system named as Di-Sense was proposed\
    \ in [8,55,80] to calculate the permittivity\nof soil in real-time using the Software-defined\
    \ radios (SDR). In [181], authors estimate an empirical path\nloss for up-link\
    \ WUC (underground to above-ground) by incorporating the antenna properties as\
    \ follow:\nLag = −147.6 + 20 log dag + 20 log f\n(13)\nwhere dag denotes the path\
    \ length. A summary of EM-based WUC is presented in Table 2.\nTable 2. Summary\
    \ of channel modeling for EM-based IoUT [182].\nRef.\nData Rate\nFrequency\nIssue\
    \ Addressed\nApplications\nYear\n[164]\n-\n1–10 MHz\nPropagation characteristics\n\
    Seismic/Agriculture\n1971\n[165]\n-\n-\nStructure of soil effect on\nEM waves\
    \ propagation\nSeismic/Agriculture\n1973\n[166,183]\n-\n3–50 MHz\nElectrical characteristics\
    \ of soil\nSeismic/Agriculture\n1974 & 1976\n[168]\n1–100 bps\n-\nEM waves for\
    \ borehole communications\nOil & Gas\n1990\n[169]\n-\n1–3 MHz\nImpact of soil\
    \ and\nnetwork parameters\nAgriculture\n1990\n[171]\n-\n2–6 Hz\nInvestigation\
    \ of depth\non the signal strength\nOil & Gas\n2009\n[170]\n-\n300–500 MHz\nImpact\
    \ of soil type\nAgriculture\n2009\n[101]\n-\n-\nDevelopment of the path loss model\n\
    Agriculture\n2010\n[37]\n-\n-\nTest-bed\nAgriculture\n2010\n[174]\n-\n0.3–1.3\
    \ GHz\nComparison of theoretical and\nexperimental results\nAgriculture\n2011\n\
    [175]\n-\n0.1–120 THz\nChannel model\nOil & Gas\n2012\n[174,176]\n-\nbelow 500\
    \ kHz\nPropagation characteristics\nAgriculture\n2012\n[184]\n-\n10–100 MHz\n\
    Energy harvesting\nSeismic/Agriculture\n2012\n[177–179]\n-\n433 MHz\nPropagation\
    \ characteristics\nAgriculture\n2014–2016\n[180]\n-\n-\nNew transmitter and receiver\n\
    conﬁgurations to improve\nthe sensor node lifetime\nSeismic\n2016\n[181]\n-\n\
    3.1–10.6 GHz\nImpact of soil on ultrawideband underground\nto above-ground communication\
    \ link\nAgriculture\n2017\n[8]\n124 Mbps\n433 MHz\nMulti-carrier modulation\n\
    for EM-based IoUT\nAgriculture\n2017\n[25]\n-\n100–300 MHz\nUsing of the direct,\
    \ reﬂected, and\nlateral components of the underground\nchannel to improve the\
    \ BER\nAgriculture\n2017\n[185]\n-\n433 MHz/2.4 GHz\nInﬂuence of depth on the\n\
    propagation of EM signal\nAgriculture\n2017\n[186]\n-\n97–130 MHz\nSoil moisture\
    \ sensing\nAgriculture\n2018\n[63]\n-\n433 MHz\nEstimation of relative permittivity\n\
    and soil moisture\nAgriculture\n2019\n[77]\n-\n-\nUnderground channel modeling\n\
    by using Maxwell-Poynting theory\nAgriculture\n2019\nSmart Cities 2020, 3\n1532\n\
    4.2. EM Networking\nThere exists a lot of work on channel model of WUC systems.\
    \ However, the literature on routing\nprotocols in WUC is very rare. This section\
    \ presents the few of the work done for networking protocol\nof EM-based WUC.\
    \ An example of multi-hop EM-based WUC for oil & gas and agriculture is shown\
    \ in\nFigure 8a,b, respectively. Multi-hop is the most feasible option for communication\
    \ in WUC because of\nits harsh environment and limited range. A highly populated\
    \ sensor network for oil and gas application\nis presented in [80,163] which uses\
    \ multi-hop communication. A TCP/IP simulator is developed\nby [72,187] for WUC\
    \ system. Different multiple access schemes are evaluated in [188] It is shown\n\
    in [188] that low soil moisture and operating frequency increases the probability\
    \ of path-connectivity\nin WUC. A study increases the throughput of EM-based WUC\
    \ in an effort to improve quality of service\n(QoS) [188,189]. Effect of different\
    \ soil properties is also studied under the effect of increasing number\nof hops\
    \ between source and sink nodes. In [33,190], authors investigated a relay-based\
    \ approach with\nload balancing for increasing the lifetime of WUC systems.\n\
    (a)\n(b)\nFigure 8. EM-based Network Communication Technologies in: (a) Oil and\
    \ Gas reservoirs, (b) Agriculture [182].\nSmart Cities 2020, 3\n1533\n5. Mud Pulse\
    \ Telemetry\nMud pulse telemetry (MPT) is one of the oldest method for down-hole\
    \ communication which\nwas used for getting information on azimuth and inclination\
    \ for wells navigation. It communicates\ndata using the circulation of the mud\
    \ [29,191]. The mud is transferred from the above ground to\nunderground through\
    \ pressure pulses via drill string during drilling [192,193]. A valve is used\
    \ to\ngenerate the pressure waves. The mud goes through this valve and pressure\
    \ waves are controlled\nto modulate the amplitude, phase and frequency of the\
    \ mud pulse signal [194]. Three types of mud\npulse signals (positive, negative\
    \ and continuous) are transmitted and controlled at surface to recognize\nthe\
    \ pressure pulses [192] (see Figure 9). Various signal processing modules are\
    \ used at surface for\nthis purpose. These pressure signals are encoded to carry\
    \ the information which is important for\nthe application. It can carry temperature,\
    \ conductivity and pressure etc. information of the well.\nAlthough MPT technology\
    \ is quite mature, however, some of the impairments impairments in MPT\nsystems\
    \ are discussed brieﬂy [71,89].\nFigure 9. Types of Mud Pulse Telemetry (MPT)\
    \ systems. (a) Positive pulses through ﬂuid, (b) Negative\npulses through drill\
    \ string (c) Continuous pulses through rotor [182].\n•\nMud Pump Noise. The down-link\
    \ and uplink mud pulse signals are generated simultaneously by\nthe opposite movement\
    \ of piston in the valves. This causes an interference between both type of\n\
    communication [32,195]. The pressure signal also has amplitude and frequency in\
    \ the range of\n1–20 Hz which can be noticed easily. Two well-spaced and different\
    \ transducers are used at the\nsurface to minimize this effect [196]. Furthermore,\
    \ mean square ﬁltering algorithm is also used to\nﬁlter out the noise due to mud\
    \ pumps [81,197,198].\n•\nAttenuation and Dispersion. Unbalance drilling mud causes\
    \ the propagating mud pulse signal,\nin the borehole, to disperse and attenuate\
    \ [199]. Another major source of attenuation includes:\nmud type, frequency of\
    \ the signal, depth of borehole, diameter and joints in the drill string.\nLow\
    \ frequencies can be use to minimize the attenuation effect of the signals.\n\
    •\nRock Fragments and Gas Leakage. During drilling process, rock particles and\
    \ gas in the mud can\nchange the density and compressibility of the mud. This\
    \ change in mud properties causes a\nSmart Cities 2020, 3\n1534\nsigniﬁcant decrease\
    \ in the speed of the signal. The gas leakage into the mud leads to unstable\n\
    drilling which in-turn can cause environmental pollution [85,86,200].\nTable 3\
    \ summarize the work done on MPT systems in the literature.\nTable 3. Existing\
    \ Literature for MPT-based IOUT systems [182].\nRef.\nFrequency\nDepth\nIssue\
    \ Addressed\nApplications\nYear\n[192]\n10–12 Hz\n1.7 km\nGeneration, transmission,\
    \ and\nreception of mud pulse signals\nDeep water drilling\n2001\n[193]\n30 Hz\n\
    0.5 km\nNovel mud pulser which handle\nthe varying nature of the channel\nOil\
    \ & Gas reservoirs\n2008\n[194]\n40 Hz\n-\nNovel method by using a linear\nactuator\
    \ to generate pressure pulses\nDown-hole telemetry\n2008\n[201]\n12–24 Hz\n150\
    \ m\nAdaptive noise cancellation\ntechnique for the mud pump\nUnderground Drilling\n\
    2018\n[195]\n1–20 Hz\n-\nNovel decoding technique to\novercome the pump noise,\n\
    reﬂection noise, and random\nnoise for MPT systems\nUnderground Drilling\n2007\n\
    [197]\n-\n-\nDown-hole noise cancellation\nUnderground Drilling\n2008\n[199]\n\
    -\n-\nNovel MPT system for\nunder-balanced drilling\nUnderground Drilling\n2000\n\
    [199]\n10–100 Hz\n-\nInvestigation of the pressure\nwave propagation characteristics\n\
    Oil & Gas exploration\n2013\n[202]\n-\n-\nMethod to detect increase or\ndecrease\
    \ in the pressure for the\nMPT systems\nOil & Gas exploration\n2016\n[203]\n10–100\
    \ Hz\n-\nNovel hard rock drilling technique\nby using abrasive water\nUnderground\
    \ Drilling\n2016\n6. Acoustic Waves\nThe application of acoustic waves underground\
    \ environment includes: exploring oil and gas\nresources by geologist, communicating\
    \ with underground equipment during drilling, earthquake\nmonitoring, seismic\
    \ exploration and pipeline monitoring. The basic mechanism is measure the\nreﬂection\
    \ from propagation of transmitted acoustic wave. The acoustic based methods can\
    \ be classiﬁed\ninto two basic types: active and passive. Passive methods uses\
    \ the sensors to detect the infrasonic\nsignals due to some natural event such\
    \ as volcanic explosion, earthquake, rock crack formation,\npipeline leakage and\
    \ structural transformation. Active methods generate signals artiﬁcially by some\n\
    man-made explosions or vibration into the underground. The purpose is mainly to\
    \ determine the\nproperties of earth sub-surface environment, e.g., reﬂection-based\
    \ seismology (see Figure 10).\nAcoustic waves have low propagation speed which\
    \ makes them suitable for detection-based\napplications. Authors in [93,157] studies\
    \ speed of sound in soil by transmitting sound in multiple\nsoil samples and received\
    \ sound waves through hydrophones. The provided an empirical solution for\nthe\
    \ detection of the objects buried at 40 cm. Ref. [204,205] measures water content\
    \ in the soil using\nacoustic waves. A universal soil loss equation is derived\
    \ in [206] using 16 kHz frequency. The soil loss\nfactor is givens Les = ρesτcmϱ\
    \ where ρ is the loss due to rain, ϵs adds soil erosion, τ adds topography of\n\
    soil, ϱ gives support factor practices factor, and cm gives cover management.\
    \ Ref. [25,207,208] presents\nSoilComm, a soil communication system, which can\
    \ transmit data through the soil over the range of 30 m.\nSmart Cities 2020, 3\n\
    1535\nFigure 10. Acoustic-based WUC in seismic monitoring [182].\nIn acoustic-based\
    \ telemetry, a piezo-electric transmitter is used as an underground transmitter\n\
    along with the tranciever at the surface of the ground. The walls (steel) of the\
    \ drill-string are used\nas communication channel. Underground transmitter convert\
    \ the data received from the sensor into\nacoustic signal. This signal is then\
    \ propagated to the surface through drill string. The capacity of\nacoustic is\
    \ calculated by following expression in [158]:\nCa =\nZ\nlog2\n\x12\n1 +\nPs(\
    \ f )\nPNd( f ) + |H( f )|−2PNs( f )\n\x13\n(14)\nwhere the terms PNd( f ) is\
    \ the drilling noise, H(F) is the transfer function of the channel, PNs( f ) is\
    \ the\nsurface noise, and Ps is the power spectrum of the signal. The data rate\
    \ is the major issue. The signals\nare highly attenuated because of drilling noise,\
    \ hence, several repeaters (500–2000 m apart) are used\nto strengthen the signals.\
    \ To that end, many work has investigated the achievable data rate of the\nacoustic-based\
    \ systems. Fro example, data rate of 20 bps is achieved in [158] at depth of 3695\
    \ feet,\ndata rates of 20, 40, and 60 bps are achieved in [25,209] at depth of\
    \ 1000 m. Similarly, data rates\nof 20, and 6 bps are achieved in [27,210] at\
    \ depth of 4.5 m and 55 m, respectively, for down-hole\ncommunications. The authors\
    \ in [210] uses magnetostrictive actuators for generation of acoustic waves.\n\
    the waves are then transmitted to underground through drill string and received\
    \ back at ground\nthrough geophones.\nCorrect arrangement of drill pipe is also\
    \ important in acoustic communications. For example,\nascend-to-descend arrangement\
    \ of drill pipes is best for the telemetry performance in down-hole\ncommunication\
    \ [211]. In [26,43,212], authors investigate the acoustic signal loss and noise\
    \ because\nof pipe joints. The effect of multiphase ﬂow is studied in [213]. They\
    \ proposed to use trellis coded\nmodulation scheme considering a depth of 1000\
    \ m to achieve a data rate of up to 400 bps.\nApart from the channel modeling\
    \ of acoustic communications, there has been lot of work being\ndone in designing\
    \ tranciever for acoustic communication. Fro example, a receiver is proposed in\
    \ [214]\nfor communicating with drill string, [215] compares the single and multi-channel\
    \ communication in\noil wells, [216] studies the feasibility of communication\
    \ through drill string using acoustic waves in\ndifferent application. Apart from\
    \ the work on the above stated aspect of acoustic communication,\nthe work is\
    \ also being done in acoustic communication for rock failure [217], pipeline cracks\
    \ [218],\nand landmines detection [219]. A summary of Acoustic-based WUC is presented\
    \ in Table 4.\nSmart Cities 2020, 3\n1536\nTable 4. Comparison of acoustic waves-based\
    \ IOUT [182].\nRef.\nData Rate\nDepth\nIssue Addressed\nApplications\nYear\n[157]\n\
    500\n53.76\nSoil sampling\nAgriculture\n2002\n[204]\n-\n-\nSoil moisture detection\n\
    Agriculture\n2003\n2004\n[158]\n-\n-\nDown-hole communication\nUnderground Drilling\n\
    2006\n[209]\n20 bps\n1120 m\nField tests for\ndown-hole communication\nUnderground\
    \ Drilling\n2007\n[205]\n20–60 bps\n1000 m\nSoil moisture detection\nAgriculture\n\
    2010\n[219]\n-\n-\nDetection of mines\nusing acoustic waves\nUnderground\nmines\
    \ detection\n2010\n[217]\n-\n-\nDetection of rock deformation\nby using acoustic\
    \ emission\nSeismic\n2011\n[210]\n-\n-\nImpact of pipe joints\non signal transmission\n\
    Underground Drilling\n2013\n[212]\n6 & 20 bps\n55 & 45 m\nOFDM for down-hole\n\
    communication\nUnderground Drilling\n2013\n[220]\n-\n-\nImpact of multi-phase\
    \ ﬂow\nwith ASK and FSK\nUnderground Drilling\n2014\n[213]\n-\n-\nTrellis coded\
    \ modulation for\ndown-hole communication\nUnderground Drilling\n2014\n[221]\n\
    400\n1000\nUniversal soil loss equation\nAgriculture\n2015\n[218,222,223]\n-\n\
    -\nDetecting cracks in pipelines\nUnderground\npipelines\nmonitoring\n2011\n2015\n\
    [215,215,224]\n-\n-\nInvestigation of single channel\nand multi-channel accelerometers\n\
    Down-hole telemetry\n2017\n[224]\n-\n-\nNC-OFDM for down-hole\ncommunication\n\
    Underground Drilling\n2018\n[207,208]\n-\n-\nWireless data transmission in soil\n\
    Agriculture\n2018\n7. Magnetic Induction\nEM waves are high attenuated in the\
    \ challenging WUC environment [83,170], hence, Magnetic\nInduction based WUC system\
    \ are being realized to overcome the disadvantage of EM-based\nWUC [78,225]. This\
    \ section discusses the three basic aspects of MI-based WUC: Channel Modeling,\n\
    Networking and Localization.\n7.1. MI Channel Modeling\nMI radios are equipped\
    \ with induction coil which generates magnetic ﬁeld that can be sensed by\nthe\
    \ nearby coils. The size of the coil should not be large but moderate to cover\
    \ long range in WUC,\ni.e., 10–100 m. These coils operates at resonance frequency.\
    \ Transmitter coil generates a time-varying\nmagnetic ﬁeld which causes current\
    \ to ﬂow through receiver. The current through receiving coil in the\nnearby coil.\
    \ Figure 11a show the coil structure of basic MI tranciever. It is important for\
    \ a successful\ncommunication that both coil should be coupled properly, otherwise,\
    \ there will be no communication.\nHence, a three directional coil structure,\
    \ as shown in Figure 11b, is proposed in [100]. The link-budget\nof MI-communication\
    \ is given in [44,100] as:\nSmart Cities 2020, 3\n1537\nat\nar\nr\n \n(a)\na\n\
    r\nTransmitter\nReceiver\n...\nRelay\nPoints\nd\n(b)\nFigure 11. MI communication\
    \ Technologies in WUC: (a) MI transceiver (b) MI waveguide [15].\nPrj =\nωµPti\
    \ Nrjr3\ntir3\nrj sin2 αij\n16R0d6\nij\n,\n(15)\nwhere µ is soil permeability,\
    \ Pti is the transmitted power, Nrj gives the turns in receiver coil, αij is\n\
    the angel between oil axes, resistance of the unit length loop is given by R0,\
    \ rti and rrj are the radii\nof transmitting and receiver coils, and dij is the\
    \ distance between the transmitting and receiving\ncoil.\nEquation (15) , for\
    \ link-budget, is experimentally validated by [100].\nUsing this channel\nmodel,\
    \ authors in [226] proposed many modulation schemes (QAM, QPSK, BPSK) for MI-based\n\
    communications, and [227] gave square wave with pulse width modulation. In [227],\
    \ magnetic ﬁeld\nfor transmitting coil (Equation (16)) and EM ﬁeld for receiving\
    \ coil (Equation (17)) is given as:\nB =\nµ0Ir2nNt\n2 (d2 + r2)\n3\n2\n(16)\n\
    E = NrAωB cos ωt\n(17)\nwhere t is instantaneous time, A is the coil’s area, µ0\
    \ is the free space permeability, radius of the\ncoil is given by r, current is\
    \ I, and Nt and Nr represents the turns in receiving and transmitting coil,\n\
    respectively. Similarly, voltage due to generated EM ﬁeld is given as:\nV =\n\
    ERl2\nRl2 + jωL + Zr\n(18)\nwhere L and Rl2 represents the inductance and resistance\
    \ of the receiving coil. Zr is load resistance\nwhich is given as:\nZr =\nRl\n\
    1 + jωC2Rl\n(19)\nSmart Cities 2020, 3\n1538\nSolving Equation (18) after replacing\
    \ E from Equation (17):\nV =\nNrAωBRl2\nRl2 + jωL + Zr\n(20)\nThe above formulation\
    \ is used by [228] to give the received power as:\nPr = V2\n0 k2F2\n1 F2\n2Rl1F1t\n\
    (21)\nwhere voltage source is V0, F1 =\nωL1\nRl1+Rs , k =\nM\n√L1L2 , F2 = ωL2\n\
    Rl2 , and M =\nµ0πNtNrr4\n2(\n√\nd2+r2)3 . F1 is the quality\nfactor for transmitting\
    \ antenna and F2 is for receiving antenna, F1t gives the instantaneous quality\
    \ factor,\nM is the mutual inductance and source resistance is given as Rs. In\
    \ [228], authors also proposed a low\npower and low frequency MI communication\
    \ by estimating antenna size and coil turns. Moreover,\nthey modiﬁed the channel\
    \ by adding the soil conductivity σ to M:\nMσ = µ0πNtNrr4\n2πd3\nexp−αd,\n(22)\n\
    where α =\n1\n√\nπ f µ0σ is the attenuation constant.\nAuthors in [229] showed\
    \ better capacity and\ncommunication range by using meta-material coil. The performance\
    \ of MI-bases communication\nsystem for sandy and stone type soil media was tested\
    \ in [230,231] which concluded the receiver\nsensitivity should be at −70 dBm.\
    \ A summary of MI-based WUC addressing the physical layer issues\nis presented\
    \ in Table 5.\nTable 5. Existing Literature addressing physical layer challenges\
    \ in MI-based IOUT [182].\nRef.\nFrequency\nIssue Addressed\nDesign Aspect\n[225]\n\
    300 & 900 MHz\nUnderground channel modeling for MI\nChannel modeling\n[100]\n\
    0.02 & 30 MHz\nUse of tri-directional MI coils for\nomni-directional coverage\
    \ and waveguides to\nimprove the transmission range\nChannel modeling and\ntest-bed\
    \ development design\n[1]\n-\nDiscuss various issues for underground MI-based\n\
    communication\nCross-layer solutions\n[98]\n10 & 300 MHz\nPath loss and bandwidth\
    \ analysis for underground\nMI communications\nChannel modeling\n[232]\n100 kHz\n\
    Path loss and capacity measurement for underground\nMI link\nChannel modeling\n\
    [226]\n-\nBPSK, QPSK, and QAM for the underground\nMI links\nModulation schemes\n\
    [227]\n246 kHz\nUse of pulse width modulation for underground\nMI-based communication\n\
    Testbed development\n[228]\n246 kHz\nLink budget calculation for underground MI\
    \ link\nPath loss modeling\n[233]\n5 kHz\nImpact of soil conductivity on the underground\
    \ MI link\nChannel modeling\n[234]\n75 kHz–30 MHz\nSoil path attenuation model\
    \ and best frequency selection\nChannel modeling and\ntestbed development\n[235]\n\
    300–900 MHz\nImproving transmission range by\nusing relays and achieving higher\
    \ voltage gain\nwith multiple parallel receiver circuits\nMI-based multi-hop\n\
    underground\ncommunication\n[229]\n20–50 MHz\nMeta-material for coil design to\n\
    improve transmission range and capacity\nCoil Design\n[230,231]\n10 Mhz\nTo study\
    \ the impact of different medium on the MI link\nTestbed Development\nSmart Cities\
    \ 2020, 3\n1539\n7.2. MI Networking\nMI-based system has practically very low\
    \ communication range. This problem of low\ncommunication range is solved by [236]\
    \ using relay coils with optimum deployment strategies and\noptimum number of\
    \ relay coils. Minimum-spanning tree (MST) algorithm is used for calculating\n\
    optimal number of relay coils. However, MST is slow in failure scenarios scenarios\
    \ such as coil\ndisplacement and node failures. Therefore, Voronoi-Fermat (VF)\
    \ algorithm replace MST to provide\nrobustness without increasing the deployment\
    \ cost. [27,70,237] reduced the path loss by using the\nrelaying technique for\
    \ MI-based communications. Authors in [31,62,238] recommended using meta\nmaterials\
    \ and superconductors in MI coil design for improved transmission range.\nThe\
    \ bottleneck link’s throughput of an MI system is also investigated to improve\
    \ the network\ncapacity [239]. It gives the channel capacity of link i as:\nCi\
    \ =\nZ +∞\n−∞ log2\n\x12\n1 +\nPti\nLi · E{Pn}\n\x13\nd f\n(23)\nwhere Pti, Li,\
    \ and, E{Pn} is transmitted power, path loss, and noise power density, respectively.\
    \ In [239],\nauthors used the Equation (23) to calculate the throughput as:\n\
    Ti =\nCi\nNdi\n\01 + Ninti\n\x01\n(24)\nwhere Ndi and Nint are the total number\
    \ of data streams and total number of interfering nodes,\nrespectively. In addition\
    \ to throughput [239] also studies the optimal system parameters and network\n\
    topology. To summarize,it is concluded in [239] that throughput of a multihop\
    \ MI communication\nsystem can be increased by relaying and optimal orientation\
    \ of coils.\nFor Quality of Service (QoS), [97] proposes distributed environment\
    \ aware cross-layer protocol\n(DEAP). DEAP, for a MI link i → j, aims to achieve\
    \ high throughput while consuming minimal energy.\nThe energy consumption is given\
    \ as:\nEij = U\n \nPij\nRijRcij\n+ 2Eb\n!\n,\n(25)\nwhere\nPij\nRijRcij gives\
    \ the energy required to transmit 1 bit, and Eb electrical energy required to\
    \ send\n1 bit. Rij and Rcij gives the transmission rate and channel coding rate,\
    \ respectively, and U is the total\nlength of the packet. Another two stage cross\
    \ layer approach, namely XLayer, is given in [240] to\nachieve high throughput\
    \ for MI based communications.\nAnalysis in [241] shows that probability of a\
    \ connected network is directly proportional (increases)\nto the number of UTs\
    \ and low soil moisture. The showed that for a particular node density and low\n\
    soil moisture (1%), connectivity of EM and MI WUC remains same However, if the\
    \ soil moisture is\nincreased to 5% EM is disconnected and MI still does the communication.\
    \ A summary of MI-based\nWUC addressing the networking issues is presented in\
    \ Table 6.\nSmart Cities 2020, 3\n1540\nTable 6. Existing Literature addressing\
    \ challenges of network layer in MI-based IoUT [182].\nRef.\nFrequency\nIssue\
    \ Addressed\nDesign Aspect\n[236]\n10 MHz\nImprovement of the transmission range\
    \ and\nrobustness, and selecting optimal number of relays\nDeployment strategies\n\
    [238]\n-\nImprovement of the transmission range\nby using relays and meta-materials\n\
    Multi-hop\nNetworking/Hardware design\n[237]\n300–900 MHz\nImprovement of the\
    \ transmission range\nby using relays\nDeployment strategies\n[238]\n10 kHz\n\
    Use of meta-material shell for the transceiver design\nto improve the received\
    \ power\nTransceiver design\n[242]\n-\nInvestigating the effect of coil orientation\
    \ and\npolarization on the channel capacity\nInterference minimization\n[239]\n\
    2 & 2.5 MHz\nThroughput optimization\nMulti-hop networking\nand interference minimization\n\
    [96]\n-\nOptimization of system parameters for multi-hop\nunderground MI links\n\
    Maximizing the data rate\n[97]\n7 MHz\nImproving throughput, reducing energy consumption\n\
    and time delay\nCross layer protocol\n[240]\n-\nThroughput, delay, and\nenergy\
    \ consumption analysis\nCross layer protocol\n[243]\n10 MHz\nTransmission range\
    \ enhancement by using\nmeta-material based relay coils\nTransceiver design\n\
    [241]\n300–1300 MHz\nConnectivity analysis of multi-hop MI-based IOUT\nTransceiver\
    \ design\n,\n7.3. Localization\nLocalization is considered one of the most important\
    \ task for provision of location-based services in\nwireless networks. Therefore,\
    \ there has been lot of work on in the field of localization, e.g., terrestrial\
    \ and\nmarine networks localization techniques are reviewed in [244,245], respectively.\
    \ Localization techniques\nare basically classiﬁed into three main categories:\
    \ range-based, computation types, i.e., centralized\nor distributed, and space-based,\
    \ i.e., 2D/3D. However, localization techniques are not explored\nextensively\
    \ in underground environment because of harsh environment, congested operational\
    \ area,\nand lack of availability of global positioning system (GPS) signals.\
    \ There has been efforts in providing\nlocalization for harsh environments other\
    \ than underground, e.g., indoor and underwater, but these\ntechniques are not\
    \ feasible for underground applications [51].\nIn [246], Andrea et al presents\
    \ a MI-based 2D localization technique for tracking underground\nanimals which\
    \ was extended further to 3D dimension in [247]. Due to high attenuation effect\
    \ of soil on\nMI-propagation, the effect of mineral and rock on MI-based localization\
    \ technique is studied in [248].\nAnother study [248] investigated that accuracy\
    \ of localization is dependent upon the properties fo\nunderground materials.\
    \ In [249], a programming-based relaxation technique is presented for the\nlocalization\
    \ of underground sensors.\nIn [250], a method to estimate a distance in MI-based\
    \ WUC is presented. The accuracy of\nlocalization technique is given by using\
    \ an estimation bound, e.g., Cramer Rao lower bound (CRLB).\nCRLB has been used\
    \ for many wireless networks, e.g., IoT [251], source localization, cognitive\
    \ radio\nnetworks [252–254], radar tracking [255], and vehicular ad-hoc networks\
    \ [256]. Authors in [257] derives\nCRLB for MI-based WUC localization for Oil\
    \ & Gas scenario, and considering network and channel\nparameters. A summary of\
    \ EM-based WUC is presented in Table 7.\nSmart Cities 2020, 3\n1541\nTable 7.\
    \ Existing studies addressing localization in MI-based IoUT [182].\nRef.\nFrequency\n\
    Issue Addressed\nDimensions\nApplications\n[246]\n130 kHz\nDevelopment of MI-based\
    \ 2D underground\ntracking system\n2D\nTracking of\nunderground animals\n[247]\n\
    125 kHz\nTestbed for MI-based 3D underground tracking\n3D\nUnderground mining\n\
    [258]\n125 kHz\nTestbed for MI-based 3D underground tracking\n3D\nUnderground\
    \ rescue\noperations\n[248]\n1 kHz, 100 kHz,\n& 10 MHz\nInvestigating the impact\
    \ of minerals and rocks\non the localization accuracy\n3D\nUnderground monitoring\n\
    [259,260]\n-\nClosed form solution for the distance\nestimation based on MI channel\n\
    3D\nUnderground monitoring\n[249]\n7 MHz\nUsing of semi-deﬁnite programming\n\
    for MI-based underground localization\n3D\nOil and Gas\nreservoirs monitoring\n\
    [261]\n10 MHz\nMI-based underground localization by\nusing a single anchor node\n\
    3D\nUnderground monitoring\n[262]\n1 MHz\nMachine learning approach for MI-based\n\
    underground target localization\n2D\nUnderground rescue\noperations\n[257]\n7\
    \ & 13 MHz\nAnalytical expression for the achievable\naccuracy of MI-based underground\
    \ communications\n3D\nOil and Gas\nreservoirs monitoring\n7.4. Charging of MI\
    \ Coils\nIt is important that WUC systems last longer for extended operations,\
    \ hence, lifetime of such\nsystem is an important parameter to consider. There\
    \ has been much effort made in literature to\nimprove the life of such systems\
    \ [8,22,263]. To that end, a charging method has been investigated\nin [74,263]\
    \ which uses the combination of a magnetic relay and optimized routing protocol\
    \ to improve\nthe energy consumption of the system. However, an issue with the\
    \ method proposed in [263] is that of\nlow charging efﬁciency even if the coil\
    \ of moderate size is used. This problem is solved in [264] by\nproposing an energy\
    \ model framework. However, this problem of underground charging is still an\n\
    open area of research and energy harvesting can be used to solve this problem.\n\
    8. Wired Communications\nWireless systems reduces the complexity of the system,\
    \ however, they are not able to achieve\nthe reliability and timely accuracy.\
    \ Therefore, wired systems employing coaxial cables and optical\nﬁbers are used\
    \ for down-hole monitoring [94,95,265–267]. Intelliserv gave a high-speed telemetry\n\
    system using coaxial cable instead of EM-based system. This system signiﬁcantly\
    \ improved the\nunderground communication by accomplishing real-time bi-directional\
    \ communication at 57,000 bps.\nFor a coaxial solutions [52,84,95], a strong cable\
    \ is used along with the repeaters and inductive coils.\nIn [265] authors uses\
    \ ﬁber optic cable to sense the temperature in oil & gas reservoir. In [266],\
    \ authors\nuses SNR characterization of channel to achieve down hole communication.\
    \ Optical ﬁbers have\nreplaced coaxial cable because of high data rate, therefore,\
    \ this section majorly discusses the optical\nﬁber-based solutions.\nOptical ﬁbers\
    \ have been used commercially and industrially for last two decades because of\
    \ their\nability of withstanding harsh environment such as oil and gas reservoirs\
    \ [268]. Authors in [268]\ndiscusses the use of ﬁber optics in installation and\
    \ deployment of sensors’ assembly, and data\nmeasurement. They also discusses\
    \ the temperature and pressure sensing system in the land well.\nFinally, they\
    \ concluded that Fiber Bragg Grating (FBG) sensors are suitable for such applications\n\
    because of their added advantage of high ﬂexibility and scalability, and multi-point\
    \ sensing. Another\nsystem consisting of FBG sensors connected with the optical\
    \ ﬁber using ultraviolet photo inscription\nmethod [269] is shown in Figure 12.\n\
    Smart Cities 2020, 3\n1542\nFigure 12. Fiber optic monitoring system for WUC [182].\n\
    An FBG-based monitoring system is proposed in [270]. This system monitors temperature\
    \ and\nﬂuid in oil-bore holes. The system performs the conversion of the ﬂuid\
    \ pressure using mechanical\ntransducer with ﬁber optic strain,. They calculated\
    \ the strain of the transducer as:\ns = sl − λ(sr + st)\nE\n,\n(26)\nwhere sl\
    \ represents the longitudinal stress, sr represents the radial stress, st represents\
    \ teh tangential\nstress, λ is Poisson number and E gives the Young’s modulus.\
    \ Equation (26) can be re-written,\nafter considering radii, ai (inner) and a0\
    \ (outer) of the tube.\ns = pa2\ni (1 − 2λ)\nE(a2\n0 − a2\ni ) ,\n(27)\nwhere\
    \ p denotes the pressure. In [271], information from two ﬁbers is combined onto\
    \ one by using\nwavelength division multiplexing. They uses it for the temperate\
    \ and pressure sensing in well-bore.\nThis is a cost effective solution as it\
    \ senses both temperature and pressure simultaneously. The results\nin [271] proves\
    \ that the techniques is stable and accurate. An down-hole monitoring system was\n\
    deployed in shoreline of Marmara sea, Turkey, using optical ﬁber. to summarize,\
    \ optical ﬁber\nbased underground systems are not effected by EM interference\
    \ and provide high data rate for\nthe communication [272]. A summary of wired\
    \ system is presented in Table 8.\nSmart Cities 2020, 3\n1543\nTable 8. Existing\
    \ studies addressing wired communication solutions for IOUT [182].\nRef.\nType\n\
    Issue Addressed\nApplication\nYear\n[94]\nOptical ﬁber\nStudy on the use of optical\
    \ ﬁber for\nOilﬁeld industry\nOilﬁeld monitoring\n2002\n[95]\nCoaxial cable\n\
    Development of high speed down-hole\ncommunication system\nDown-hole telemetry\n\
    2008\n[265]\nOptical ﬁber\nDown-hole communication\ntemperature sensing\nManagement\
    \ of\noil reservoirs\n2010\n[266]\nCoaxial cable\nDown-hole communication in the\n\
    presence of high pressure and high temperature\nManagement of\noil reservoirs\n\
    2013\n[267]\nOptical ﬁber\nDiscussion on various applications of\nﬁber optic sensing\n\
    Underground monitoring\n2018\n[268]\nOptical ﬁber\nDevelopment of ﬁber optic based\
    \ down-hole\ntelemetry system\nDown-hole monitoring\n2001\n[269]\nOptical ﬁber\n\
    Review of ﬁber Bragg grating sensors for\ndown-hole monitoring\nDown-hole monitoring\n\
    2000\n[273]\nOptical ﬁber\nField tests by using FBG-based\nseismic geophones\n\
    Oil & Gas\nreservoirs monitoring\n2007\n[271]\nOptical ﬁber\nMultiplexing of temperature\
    \ and pressure\nFBG sensors\nOil & Gas\nreservoirs monitoring\n2012\n[274]\nOptical\
    \ ﬁber\nFBG sensors-based testbed development\nGeophysical observations\n2015\n\
    9. Research Challenges & Future Directions\nThe development in WUC has extended\
    \ the research possibilities in the area which give rise to\nsome research challenges\
    \ as well. Therefore, this section presents the research challenges that are\n\
    being faced in this area. Moreover, Table 9 shows the importance of these research\
    \ challenges in the\ndifferent applications.\nTable 9. Research challenges for\
    \ IOUT applications.\nResearch Challenge\nAgriculture\nSeismic Exploration\nOil\
    \ & Gas\nDeployment\nMedium\nHigh\nHigh\nChannel modeling\nMedium\nMedium\nHigh\n\
    Transmission range\nLow\nHigh\nMedium\nLatency\nLow\nLow\nMedium\nReliability\n\
    Low\nMedium\nHigh\nSecurity\nMedium\nHigh\nHigh\nScalability\nLow\nMedium\nMedium\n\
    Robustness\nLow\nMedium\nHigh\nNetworking\nHigh\nMedium\nMedium\nCloud computing\n\
    High\nMedium\nLow\nFog computing\nLow\nMedium\nHigh\nLocalization\nMedium\nHigh\n\
    Medium\nSmart Cities 2020, 3\n1544\n9.1. Deployment\nDeployment is a major issue\
    \ in WUC application because of the harsh environment [51]. The smart\nobjects\
    \ in WUC can easily be damaged by the above-ground activities, i.e., digging,\
    \ plowing, harvesting.\nTherefore, it is very difﬁcult to manage and deploy in\
    \ WUC as compared to the terrestrial networks.\nThe objects with high energy requirement\
    \ should be deployed near to the surface so that frequent\nbattery replacement\
    \ can be done easily. High capacity batteries and power saving protocols can also\
    \ be\nused to meet the requirement of high energy nodes.The deployment challenge\
    \ become relatively severe\nin WUC applications seismic and Oil & gas exploration\
    \ because fo higher depth. Therefore, in [236],\na MI-based WUC is used with managed\
    \ and organized orientation of coils to minimize the power\nreﬂection. Authors\
    \ have used different deployment strategies (horizontal and vertical) in [242]\
    \ to\nreduce the complexity. One important issue to consider is the path loss\
    \ occurring due to heterogeneous\nnature of soil. Unfortunately, there is very\
    \ limited work on efﬁcient WUC deployment which aims to\nsolve this challenge\
    \ while considering various operational parameters [29,63,77].\n9.2. Channel Modeling\n\
    The EM signal attenuation is much greater in soil as compared to the terrestrial\
    \ networks [88,170].\nThe major factors contributing to this loss is the soil\
    \ permittivity and conductivity which was the\nreason why MI-based WUC were introduced.\
    \ Each layer of the heterogeneous soil effects the magnetic\nﬁeld differently.\
    \ Given this behavior, technique of assigning a scaling factor to different depths\
    \ is\nused in [164]. In [85,275], the authors studies the propagation though the\
    \ soil by calculating the skin\ndepth of each layer. In [98], authors have characterized\
    \ the path loss for MI-based communication.\nIn [229], authors investigates the\
    \ asymmetric transceiver to cope with the case of coils misalignment in\nMI-based\
    \ WUC. Path loss has been extensively studied for each type of the wireless channel,\
    \ however,\nfew efforts have been made for WUC systems. Therefore, this area of\
    \ WUC needs special consideration.\n9.3. Transmission Range\nMI-based WUC with\
    \ all its advantages (not effected by boundary effects & multipath\nfading [100])\
    \ has a disadvantage of limited transmission range. This is because of high path\n\
    loss in the soil. In [236,238,276], authors proposed usage of relay coils to extend\
    \ the transmission\nrange. Similarly, [238,277] proposed usage of super conductors\
    \ and meta-materials for this purpose.\nLarge coils were used in [249,278] with\
    \ an aim of acheiveing high transmission range, however, it might\nnot be a practical\
    \ solution. Therefore, achieving the long communication range for buried nodes\
    \ is an\nimportant research issue.\n9.4. Latency and Reliable Communication\n\
    Latency and reliable communication is the primary requirement of the critical\
    \ applications\nsuch as Oil & Gas exploration. Late or incorrect sensors reading\
    \ can be the cause of a major\ndisaster. WUC environment is the major hindrance\
    \ in acheiveing the reliable communication.\nAlthough, the reduced latency and\
    \ reliability is one of the major requirement of the conventional IoT as\nwell\
    \ [6,8]. However, in WUC, this issue needs more consideration due to tough operating\
    \ parameters\nand regulations of sub-surface environment. It is not possible to\
    \ meet the WUC communication\nrequirement with any single system. For example,\
    \ wired communication provides reliability and low\nlatency whereas wireless solutions\
    \ are scalable with low complex. Therefore, it is important to develop\nan WUC\
    \ system with low latency, lower transmission delays and minimized sensor failures.\n\
    9.5. Security\nSecurity is the least studied aspect of WUC systems. WUC security\
    \ includes: security of equipment,\nand security of communication protocols. Node\
    \ replication, jamming the signal, and worm hole are\nfew potential security attacks\
    \ that can occur in WUC systems. A security breaches can be used to raise\nSmart\
    \ Cities 2020, 3\n1545\nfalse alarms. Responding to the frequent false alarms\
    \ can exhaust the network resources. In [279,280],\nauthors discusses the security\
    \ issues (e.g., forward and backward security) and malicious attacks\n(e.g., node\
    \ compromise attack) on cloud-based IoT. Authors in [281] uses the data tagging\
    \ technique\nfor improved data security. They uses information ﬂow control (IFC)\
    \ for this purpose. A secure\nIoT architecture using host identity protocol (HIP)\
    \ and datagram transport layer security (DTLS) is\npresented in [282]. Few studies\
    \ [283,284] provides an extensive security survey in IoT. These studies\nare targeted\
    \ towards improving security in terrestrial networks, however, these can be modiﬁed\
    \ to\nWUC environment by introducing underground operational constraints. For\
    \ example, old Oil & Gas\nsystems are being transformed to digital WUC systems.\
    \ Therefore, it is required to update security\nof such globally connected systems\
    \ which, otherwise, in an event of cyber attack, can lead to some\ndisastrous\
    \ situation. Blockchain technology can be also be used in WUC systems to deal\
    \ with the cyber\ncrimes [25,48,285].\n9.6. Scalability\nScalability issues can\
    \ rise due to the factors such as: higher network density, high energy-consumption\n\
    of underground things, node failures, routing overhead, low memory of underground\
    \ nodes,\nand vendor-specific nodes can cause interoperability issues. Ref. [286]\
    \ uses spatio-temporal stochastic\nmodeling for dealing with scalability in WUC.\
    \ For tunnels, ref. [72,287] proposed an adaptive structure-aware\nWUC system.\
    \ Interoperability issue is discussed in [287] using middleware protocol. Heterogeneity\
    \ of\nsensor nodes is studied in [288]. The mentioned work deals with the scalability\
    \ of terrestrial IoT, however,\nthese can be modified as per requirements of WUC\
    \ systems. For example, high path loss in soil limits the\ndeployment of large\
    \ wireless network. This problem is studied by [80,289] which uses the sink nodes\
    \ to\nconnect with the sparsely buried sensor nodes. It uses the energy harvesting\
    \ to increase the lifetime of the\nnodes. Besides these solutions, it is important\
    \ to efficiently develop a self-healing and self-organizing WUC\nsystems which\
    \ can overcome the scalability issues.\n9.7. Robustness\nAn underground channel\
    \ is very unpredictable facing the issues like: energy constraints, dynamic\n\
    topology, sparsity of nodes. Hence, achieving robustness is very critical in WUC\
    \ systems. A small world\nmodel is proposed in [290] for the improvement of latency\
    \ and robustness by considering the local\nimportance of smart objects. Extensive\
    \ literature exist for the improvement of robustness in terrestrial\nnetwork [81,86,291],\
    \ however, work in robustness in WUC is limited to the mining application.\nFor\
    \ example, Ref [292] improve the robustness of an underground mining by using\
    \ a wireless mesh\nnetwork. One of the major challenge in the WUC systems is to\
    \ develop robust communication and\ndata gathering techniques. Communication range\
    \ of EM waves in soil is highly limited because of\nattenuation. However, magnetic\
    \ induction is considered relative robust for communicating in the soil\nbut requires\
    \ perfect orientation of the coils. The research of MI-based WUC for robustness\
    \ is still not\nmature and needs to be studied further.\n9.8. Hybrid Sensing\n\
    Hybrid sensing systems includes the usage of multiple sensor systems and integration\
    \ of their\nsignals, e.g., long-term underground ﬁber sensors can be combined\
    \ with short-term ground penetrating\nradars fro the purpose of detection and\
    \ localization. SoilNet Systems [79,293] is an hybrid sensor\nsystem which combines\
    \ Zigbee network with wired communication. Zigbee network is used for\nabove-ground\
    \ nodes and wired communication is used fro the underground nodes. A combination\n\
    of EM- and MI-based can be used for providing long-range downlink (EM-based) and\
    \ short-range\nuplink (MI-based) communication [249]. Therefore, hybrid sensing\
    \ systems can improve the efﬁciency\nof WUC systems.\nSmart Cities 2020, 3\n1546\n\
    9.9. Software Deﬁned Networking (SDN)\nSoftware Deﬁned Networking (SDN) provides\
    \ robustness, scalability, reliability and secure\nnetworking solution for WUC\
    \ systems. It is different form conventional networking solution in that it\n\
    separates the control logic from the networking hardware. These advantages make\
    \ its suitable for the\nusage in underwater environment. A surface station can\
    \ be any SDN controller which communicates\nwith the underwater sensors through\
    \ in/out-band control channels [294]. The SDN-controller\nwill separate the data\
    \ plane and controller plane. Such technique can also be used for WUC\nsystems\
    \ [295,296]. SDN-based WUC will have lower network complexity, improved congestion\n\
    control mechanism, increased network life, efﬁcient utilization of network resources,\
    \ and reduced\nlatency. For example, SDN-based WUC for Oil & Gas can allow users\
    \ to efﬁciently manage the\nsystem by providing the global view of buried sensors\
    \ nodes. SDN-based WUC can also be used in\nagricultural applications for achieving\
    \ a scalable network solutions. Furthermore, data visualization\ncan be used with\
    \ SDN-controller for correlation of sensor data. These advantages of SDN paradigm\n\
    forces researcher to look into the possibilities of SDN-based WUC systems [76].\n\
    9.10. Big Data\nMassive amount of data is generated by WUC applications (agriculture,\
    \ seismic surveying,\nand oil/gas ﬁelds). This data should properly organized,\
    \ correlated and analyzed for making accurate\ndecisions [297]. Integration of\
    \ big data and traditional IoT is already being studied extensively,\ne.g., [89,298]\
    \ presents the application of big data in IoT. In [299], authors studies the application\n\
    fo context-aware computing in IoT. These works motivate and presents an opportunity\
    \ fo integrating\nbig data analytic with WUC system. For example, Oil & Gas WUC\
    \ generates glut of data and managing\nthat data is the major concern of respective\
    \ industries [81,83]. Similarly, geo-scientists spends major\nportion of their\
    \ time (nearly 50%) on managing data. Big data provides an opportunity to handle\
    \ such\nbig amount of data and perform analysis. Therefore, proper data analytic\
    \ tools must be developed for\nthe WUC systems.\n9.11. Fog and Cloud Computing\n\
    Cloud/fog computing provides different feature (scalability, mobility, low delays,\
    \ and location\nawareness) of an efﬁcient WUC systems. Cloud computing has been\
    \ used for the management\npurposes in Oil & Gas industries whereas fog computing\
    \ has been used for reducing data trafﬁc\nand analysis of data at edge [74,300].\
    \ In Oil & Gas industries, huge data generated by the upstream\noperations (e.g.,\
    \ drilling and seismic exploration) is a major challenge. Fog computing can be\
    \ used\nfor provision of localized analytic of data being generated in real-time.\
    \ It helps in minimizing\ncommunication delays and faster event response. Moreover,\
    \ time-critical applications require efﬁcient\ndecision making procedure because\
    \ it is possible that decision making opportunity is gone by the time\ndata reaches\
    \ the cloud. Hence, fog computing should be integrated with WUC systems [71].\n\
    9.12. Efﬁcient Localization Methods\nLocalization can result any many applications\
    \ such as WUC monitoring, geo-tagged sensing,\nand optimized fracturing. there\
    \ are limited studies which tries to ﬁnd location of buried nodes\nof MI-based\
    \ WUC. In [258], authors developed a testbed for tracking objects in MI-based\
    \ WUC.\nIn [77,261], authors studies how mineral and rocks in underground environment\
    \ effect the accuracy\nof localization. The accuracy is also investigated in [85,86,257]\
    \ for MI-based WUC. It is important to\nnote that localization work exist only\
    \ for the MI-based and there is no work done in EM-, acoustic-,\nand VLC-based\
    \ WUC. Therefore, robust and accurate localization methods are required for these\n\
    WUC systems.\nSmart Cities 2020, 3\n1547\n10. Conclusions\nThe paper presents\
    \ a detailed review on signal propagation in wireless underground communication\n\
    network. Section 1 discusses the importance and motivation to improve the underground\
    \ communication\ntechniques differently than the traditionally available methods.\
    \ In subsequent sections, an overview\nof underground communication and types\
    \ of channel involved in the underground communication\nis presented. Various\
    \ frequencies are discussed for the different channels that are involved in UG\n\
    communication. A detailed discussion on UG component and their difference from\
    \ traditional over-the-air\n(OTA) communication is given along-with the references\
    \ from current literature. It is established\nthat underground communication module\
    \ differs from that of OTA because of involvement of soil.\nVarious signal propagation\
    \ methods and their feasibility in UG application is discussed in detail.\nThe\
    \ propagation method includes: EM, MI, MPT, Acoustic and, wired solutions. Finally,\
    \ the manuscript\nis concluded with the discussion on research challenges in UG\
    \ communication.\nAuthor Contributions: Conceptualization, U.R. and A.S.; methodology,\
    \ U.R.; software, A.S.; validation, A.S. and\nU.R.; formal analysis, A.S.; investigation,\
    \ U.R. and A.S.; resources, A.S.; data curation, A.S.; writing—original draft\n\
    preparation, A.S.; writing—review and editing, U.R.; visualization, A.S.; supervision,\
    \ A.S.; project administration,\nA.S.; funding acquisition, A.S. All authors have\
    \ read and agreed to the published version of the manuscript.\nFunding: This research\
    \ received no external funding.\nConﬂicts of Interest: The authors declare no\
    \ conﬂict of interest.\nReferences\n1.\nAkyildiz, I.F.; Stuntebeck, E.P. Wireless\
    \ Underground Sensor Networks: Research Challenges. Ad Hoc Netw.\n2006, 4, 669–686.\
    \ [CrossRef]\n2.\nBogena, H.R.; Herbst, M.; Huisman, J.A.; Rosenbaum, U.; Weuthen,\
    \ A.; Vereecken, H. Potential of wireless\nsensor networks for measuring soil\
    \ water content variability. Vadose Zone J. 2010, 9, 1002–1013. [CrossRef]\n3.\n\
    Dong, X.; Vuran, M.C.; Irmak, S. Autonomous Precision Agricultrue Through Integration\
    \ of Wireless\nUnderground Sensor Networks with Center Pivot Irrigation Systems.\
    \ Ad Hoc Netw. 2013, 11, 1975–1987.\n[CrossRef]\n4.\nGuo, H.; Sun, Z. Channel\
    \ and Energy Modeling for Self-Contained Wireless Sensor Networks in Oil\nReservoirs.\
    \ IEEE Trans. Wirel. Commun. 2014, 13, 2258–2269. [CrossRef]\n5.\nMarkham, A.;\
    \ Trigoni, N. Magneto-inductive Networked Rescue System (MINERS): Taking Sensor\
    \ Networks\nUnderground. In Proceedings of the 11th 11th International Conference\
    \ on Information Processing in Sensor\nNetworks, IPSN’12, Beijing, China, 16–19\
    \ April 2012; ACM: New York, NY, USA, 2012; pp. 317–328.\n[CrossRef]\n6.\nSalam,\
    \ A.; Vuran, M.C.; Irmak, S. Pulses in the Sand: Impulse Response Analysis of\
    \ Wireless Underground\nChannel. In Proceedings of the IEEE INFOCOM, San Francisco,\
    \ CA, USA, 10 April, 2016.\n7.\nTiusanen, M.J. Soil Scouts: Description and performance\
    \ of single hop wireless underground sensor nodes.\nAd Hoc Netw. 2013, 11, 1610–1618.\
    \ [CrossRef]\n8.\nSalam, A.; Vuran, M.C. Impacts of Soil Type and Moisture on\
    \ the Capacity of Multi-Carrier Modulation in\nInternet of Underground Things.\
    \ In Proceedings of the 25th ICCCN, Waikoloa Beach Marriott Resort Hotel,\nWaikoloa,\
    \ HI, USA, 1–4 August 2016.\n9.\nTiusanen, M.J.\nWideband Antenna for Underground\
    \ Soil Scout Transmission. IEEE Antennas Wirel.\nPropag. Lett. 2006, 5, 517–519.\
    \ [CrossRef]\n10.\nGutiarrez, J.; Villa-Medina, J.F.; Nieto-Garibay, A.; Porta-Gandara,\
    \ M.A. Automated Irrigation System Using\na Wireless Sensor Network and GPRS Module.\
    \ IEEE Trans. Instrum. Meas. 2014, 63, 166–176. [CrossRef]\n11.\nHopkins, J. USDA\
    \ ERS—ARMS Farm Financial and Crop Production Practices: Tailored Reports: Crop\
    \ Production\nPractices; USDA: Washington, DC, USA, 2016. Available online: http://www.ers.usda.gov/data-products/\n\
    arms-farm-ﬁnancial-and-crop-production-practices/tailored-reports-crop-production-practices.aspx\n\
    (accessed on 28 October 2020).\n12.\nKim, Y.; Evans, R.G.; Iversen, W.M. Remote\
    \ Sensing and Control of an Irrigation System Using a Distributed\nWireless Sensor\
    \ Network. IEEE Trans. Instrum. Meas. 2008, 57, 1379–1387. [CrossRef]\nSmart Cities\
    \ 2020, 3\n1548\n13.\nSalam, A.; Vuran, M.C. EM-based Wireless Underground Sensor\
    \ Networks. In Underground Sensing:\nMonitoring and Hazard Detection for Environment\
    \ and Infrastructure, 1st ed.; Pamukcu, S., Cheng, L., Eds.;\nElsevier: Amsterdam,\
    \ The Netherlands, 2017; Chapter 5.\n14.\nSun, Z.; Akyildiz, I. Channel modeling\
    \ and analysis for wireless networks in underground mines and road\ntunnels. IEEE\
    \ Trans. Commun. 2010, 58, 1758–1768. [CrossRef]\n15.\nAkyildiz, I.F.; Sun, Z.;\
    \ Vuran, M.C. Signal Propagation Techniques for Wireless Underground Communication\n\
    Networks. Phys. Commun. J. 2009, 2, 167–183. [CrossRef]\n16.\nSun, Z.; Wang, P.;\
    \ Vuran, M.C.; Al-Rodhaan, M.A.; Al-Dhelaan, A.M.; Akyildiz, I.F. Border patrol\
    \ through\nadvanced wireless sensor networks. Ad Hoc Netw. 2011, 9, 468–477. [CrossRef]\n\
    17.\nSun, Z.; Wang, Pu.; Vuran, Mehmet C; Al-Rodhaan; Mznah, A.; Al-Dhelaan; Abdullah,\
    \ M.; Akyildiz, Ian F.\nMISE-PIPE: MI based wireless sensor networks for underground\
    \ pipeline monitoring. Ad Hoc Netw. 2011,\n9, 218–227\n18.\nRaza, U.; Salam, A.\
    \ On-Site and External Power Transfer and Energy Harvesting in Underground Wireless.\n\
    Electronics 2020, 9, 681. [CrossRef]\n19.\nBicen, A.; Sahin, A.; Akan, O. Spectrum-Aware\
    \ Underwater Networks: Cognitive Acoustic Communications.\nVeh. Technol. Mag.\
    \ IEEE 2012, 7, 34–40. [CrossRef]\n20.\nPompili, D.; Akyildiz, I. Overview of\
    \ networking protocols for underwater wireless communications.\nIEEE Commun. Mag.\
    \ 2009, 47, 97–102. [CrossRef]\n21.\nVuran, M.C.; Salam, A.; Wong, R.; Irmak,\
    \ S. Internet of Underground Things: Sensing and Communications\non the Field\
    \ for Precision Agriculture. In Proceedings of the IEEE 4th World Forum on Internet\
    \ of Things\n(WF-IoT), Atlanta, GA, USA, 1–4 May 2017.\n22.\nSalam, A.; Vuran,\
    \ M.C.; Irmak, S. Towards Internet of Underground Things in Smart Lighting: A\
    \ Statistical\nModel of Wireless Underground Channel. In Proceedings of the 14th\
    \ IEEE International Conference on\nNetworking, Sensing and Control (IEEE ICNSC),\
    \ Calabria, Italy, 16–18 May 2017.\n23.\nSaeed, N.; Al-Naffouri, T.Y.; Alouini,\
    \ M.S. Towards the Internet of Underground Things: A Systematic\nSurvey. arXiv\
    \ 2019, arXiv:1902.03844.\n24.\nSalam, A.; Vuran, M.C. Smart Underground Antenna\
    \ Arrays: A Soil Moisture Adaptive Beamforming\nApproach. In Proceedings of the\
    \ IEEE INFOCOM 2017—IEEE Conference on Computer Communications,\nAtlanta, GA,\
    \ USA, 1–4 May 2017; pp. 1–9.\n25.\nSalam, A.; Vuran, M.C. Wireless Underground\
    \ Channel Diversity Reception with Multiple Antennas for\nInternet of Underground\
    \ Things. In Proceedings of the IEEE ICC, 21-25 May 2017, Paris, France.\n26.\n\
    Vuran, M.C.; Salam, A.; Wong, R.; Irmak, S. Internet of Underground Things in\
    \ Precision Agriculture:\nArchitecture and Technology Aspects. Ad Hoc Netw. 2018,\
    \ 81, 160–173. [CrossRef]\n27.\nSalam, A. Underground Soil Sensing Using Subsurface\
    \ Radio Wave Propagation. In Proceedings of the 5th\nGlobal Workshop on Proximal\
    \ Soil Sensing, Columbia, MO, USA, 28–31 May 2019.\n28.\nCisco Visual Networking\
    \ Index. Available online: https://www.cisco.com/c/en/us/solutions/service-\n\
    provider/visual-networking-index-vni/index.html (accessed on 28 October 2020).\n\
    29.\nSalam, A.; Hoang, A.D.; Meghna, A.; Martin, D.R.; Guzman, G.; Yoon, Y.H.;\
    \ Carlson, J.; Kramer, J.; Yansi, K.;\nKelly, M.; et al. The Future of Emerging\
    \ IoT Paradigms: Architectures and Technologies. Preprints 2019,\n2019120276.\
    \ [CrossRef]\n30.\nSalam, A. Sensor-Free Underground Soil Sensing. In Proceedings\
    \ of the ASA, CSSA and SSSA International\nAnnual Meetings, San Antonio, TX, USA,\
    \ 10–13 November 2019.\n31.\nSalam, A. Internet of Things for Sustainable Human\
    \ Health. In Internet of Things for Sustainable Community\nDevelopment: Wireless\
    \ Communications, Sensing, and Systems; Springer International Publishing: Cham,\n\
    Switzerland, 2020; pp. 217–242.\n32.\nSalam, A.; Shah, S. Internet of things in\
    \ smart agriculture: Enabling technologies. In Proceedings of the IEEE\n5th World\
    \ Forum on Internet of Things (WF-IoT), Limerick, Ireland, 15–18 April 2019; IEEE:\
    \ Piscataway, NJ,\nUSA, 2019; pp. 692–695.\n33.\nSalam, A. A Path Loss Model for\
    \ Through the Soil Wireless Communications in Digital Agriculture.\nIn Proceedings\
    \ of the IEEE International Symposium on Antennas and Propagation, Atlanta, GA,\
    \ USA,\n7–12 July 2019; IEEE: Piscataway, NJ, USA, 2019; pp. 1–2.\nSmart Cities\
    \ 2020, 3\n1549\n34.\nSilva, A.R.; Vuran, M.C. Empirical Evaluation of Wireless\
    \ Underground-to-Underground Communication in\nWireless Underground Sensor Networks.\
    \ In Proceedings of the IEEE DCOSS’09, Marina del Rey, CA, USA,\n8–10 June 2009.\n\
    35.\nSilva, A.R.; Vuran, M.C. Communication with Aboveground Devices in Wireless\
    \ Underground Sensor\nNetworks: An Empirical Study. In Proceedings of the IEEE\
    \ ICC’10, Cape Town, South Africa, 23–27 May 2010.\n36.\nSilva, A.R.; Vuran, M.C.\
    \ (CPS)2: Integration of center pivot systems with wireless underground sensor\n\
    networks for autonomous precision agriculture. In Proceedings of the of ACM/IEEE\
    \ International Conference\non Cyber-Physical Systems, Stockholm, Sweden, 12–15\
    \ April 2010; pp. 79–88. [CrossRef]\n37.\nSilva, A.R.; Vuran, M.C. Development\
    \ of a Testbed for Wireless Underground Sensor Networks. EURASIP J.\nWirel. Commun.\
    \ Netw. 2010, 2010, 1–14. [CrossRef]\n38.\nSilva, A.R.; Vuran, M.C. Channel Contention\
    \ in Wireless Underground Sensor Networks. In Proceedings\nof the III International\
    \ Conference on Wireless Communications in Underground and Conﬁned Areas\n(ICWCUCA’10),\
    \ Val-d’Or, AB, Canada, 23–25 August 2010.\n39.\nSilva, A.R.\nChannel Characterization\
    \ for Wireless Underground Sensor Networks.\nMaster’s Thesis,\nUniversity of Nebraska-Lincoln,\
    \ Lincoln, NE, USA, 2010.\n40.\nFoth, H.D. Fundamentals of Soil Science, 8th ed.;\
    \ John Wiley & Sons: Hoboken, NJ, USA, 1990.\n41.\nTiusanen, M.J. Attenuation\
    \ of a Soil Scout Radio Signal. Biosyst. Eng. 2005, 90, 127–133. [CrossRef]\n\
    42.\nBandyopadhyay, L.; Chaulya, S.K.; Mishra, P.K. Wireless Communication in\
    \ Underground Mines: RFID-Based\nSensor Networking; Springer: Berlin/Heidelberg,\
    \ Germany, 2010.\n43.\nKonda, A.; Rau, A.; Stoller, M.A.; Taylor, J.M.; Salam,\
    \ A.; Pribil, G.A.; Argyropoulos, C.; Morin, S.A.\nSoft Microreactors for the\
    \ Deposition of Conductive Metallic Traces on Planar, Embossed, and Curved\nSurfaces.\
    \ Adv. Funct. Mater. 2018, 28, 1803020. [CrossRef]\n44.\nSalam, A.; Vuran, M.C.\n\
    EM-Based Wireless Underground Sensor Networks; Elsevier:\nAmsterdam,\nThe Netherlands,\
    \ 2017; pp. 247–285. [CrossRef]\n45.\nBehari, J. Microwave Dielectric Behavior\
    \ of Wet Soils; Springer: Berlin/Heidelberg, Germany, 2005.\n46.\nChukhlantsev,\
    \ A. Microwave Radiometry of Vegetation Canopies; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n47.\nPeplinski, N.; Ulaby, F.; Dobson, M. Dielectric Properties\
    \ of Soils in the 0.3–1.3-GHz Range. IEEE Trans.\nGeosci. Remote Sens. 1995, 33,\
    \ 803–807. [CrossRef]\n48.\nSalam, A.; Vuran, M.C.; Dong, X.; Argyropoulos, C.;\
    \ Irmak, S. A Theoretical Model of Underground Dipole\nAntennas for Communications\
    \ in Internet of Underground Things. IEEE Trans. Antennas Propag. 2019, 67,\n\
    3996–4009. [CrossRef]\n49.\nZourmand, A.; Hing, A.L.K.; Hung, C.W.; AbdulRehman,\
    \ M. Internet of Things (IoT) using LoRa technology.\nIn Proceedings of the IEEE\
    \ International Conference on Automatic Control and Intelligent Systems (I2CACIS),\n\
    Selangor, Malaysia, 29 June 2019; pp. 324–330.\n50.\nHwang, L.C.; Chen, C.S.;\
    \ Ku, T.T.; Shyu, W.C. A bridge between the smart grid and the Internet of Things:\n\
    Theoretical and practical roles of LoRa. Int. J. Electr. Power Energy Syst. 2019,\
    \ 113, 971–981. [CrossRef]\n51.\nKisseleff, S.; Akyildiz, I.F.; Gerstacker, W.H.\
    \ Survey on advances in magnetic induction-based wireless\nunderground sensor\
    \ networks. IEEE Internet Things J. 2018, 5, 4843–4856. [CrossRef]\n52.\nSalam,\
    \ A. Internet of Things for Sustainable Community Development: Introduction and\
    \ Overview.\nIn Internet of Things for Sustainable Community Development: Wireless\
    \ Communications, Sensing, and Systems;\nSpringer International Publishing: Cham,\
    \ Switzerland, 2020; pp. 1–31.\n53.\nAalsalem, M.Y.; Khan, W.Z.; Gharibi, W.;\
    \ Khan, M.K.; Arshad, Q. Wireless Sensor Networks in oil and\ngas industry: Recent\
    \ advances, taxonomy, requirements, and open challenges.\nJ. Netw. Comput. Appl.\n\
    2018, 113, 87–97. [CrossRef]\n54.\nFCC Order No. DA 16-307 Dated: 24 March 2016.\
    \ Available online: https://apps.fcc.gov/edocs_public/\nattachmatch/DA-16-307A1.pdf\
    \ (accessed on 28 October 2020).\n55.\nSalam, A. Internet of Things for Sustainable\
    \ Community Development, 1st ed.; Springer Nature: London, UK,\n2020; doi:10.1007/978-3-030-35291-2.\
    \ [CrossRef]\n56.\nUlaby, F.T. Fundamentals of Applied Electromagnetics, 5th ed.;\
    \ Pearson Prentice Hall: Upper Saddle River, NJ,\nUSA, 2007.\n57.\nKing, R.; Smith,\
    \ G.S.; Owens, M.; Wu, T.T. Antennas in Matter—Fundamentals, Theory, and Applications;\n\
    MIT Press: Cambridge, MA, USA, 1981.\nSmart Cities 2020, 3\n1550\n58.\nHuang,\
    \ S. An Antenna for Underground Radio Communication. Master’s Thesis, Univeristy\
    \ of Houston,\nHouston, TX, USA, 1979.\n59.\nVaziri, F.; Huang, S.C.F.; Long,\
    \ S.A.; Shen, L.C. Measurement of the radiated ﬁelds of a buried antenna at\n\
    VHF. Radio Sci. 1980, 15, 743–747. [CrossRef]\n60.\nTiusanen, M.J. Wireless Soil\
    \ Scout Prototype Radio Signal Reception Compared to the Attenuation Model.\n\
    Precis. Agric. 2008, 10, 372–381. [CrossRef]\n61.\nSalam, A.; Raza, U. Variable\
    \ Rate Applications in Decision Agriculture, 1st ed.; Springer Nature: London,\
    \ UK,\n2020. [CrossRef]\n62.\nSalam, A. Internet of Things for Sustainable Mining.\n\
    In Internet of Things for Sustainable Community\nDevelopment: Wireless Communications,\
    \ Sensing, and Systems; Springer International Publishing: Cham,\nSwitzerland,\
    \ 2020; pp. 243–271._8. [CrossRef]\n63.\nSalam, A.; Vuran, M.C.; Irmak, S. Di-Sense:\
    \ In situ real-time permittivity estimation and soil moisture\nsensing using wireless\
    \ underground communications. Comput. Netw. 2019, 151, 31–41. [CrossRef]\n64.\n\
    Franz, T.E.; Wahbi, A.; Vreugdenhil, M.; Weltin, G.; Heng, L.; Oismueller, M.;\
    \ Strauss, P.; Dercon, G.;\nDesilets, D. Using cosmic-ray neutron probes to monitor\
    \ landscape scale soil water content in mixed land\nuse agricultural systems.\
    \ Appl. Environ. Soil Sci. 2016, 2016, 4323742. [CrossRef]\n65.\nDong, X.; Vuran,\
    \ M.C. A Channel Model for Wireless Underground Sensor Networks Using Lateral\
    \ Waves.\nIn Proceedings of the IEEE Globecom’11, Houston, TX, USA, 5–9 December\
    \ 2011.\n66.\nUlaby, F.T.; Long, D.G. Microwave Radar and Radiometric Remote Sensing;\
    \ University of Michigan Press:\nAnn Arbor, MI, USA, 2014.\n67.\nDong, X.; Vuran,\
    \ M.C. Impacts of soil moisture on cognitive radio underground networks. In Proceedings\
    \ of\nthe IEEE BlackSeaCom, Batumi, GA, USA, 3–5 July 2013.\n68.\nDobson, M. Microwave\
    \ Dielectric Behavior of Wet Soil—Part II: Dielectric Mixing Models. IEEE Trans.\n\
    Geosci. Remote Sens. 1985, GE-23, 35–46. [CrossRef]\n69.\nBrekhovskikh, L.M. Waves\
    \ in Layered Media, 2nd ed.; Academic Press: New York, NY, USA, 1980.\n70.\nSalam,\
    \ A. A Comparison of Path Loss Variations in Soil using Planar and Dipole Antennas.\
    \ In Proceedings\nof the IEEE International Symposium on Antennas and Propagation,\
    \ Atlanta, GA, USA, 7–12 July 2019.\n71.\nRaza, U.; Salam, A. Wireless Underground\
    \ Communications in Sewer and Stormwater Overﬂow Monitoring:\nRadio Waves through\
    \ Soil and Asphalt Medium. Information 2020, 11, 98. [CrossRef]\n72.\nSalam, A.;\
    \ Karabiyik, U. A Cooperative Overlay Approach at the Physical Layer of Cognitive\
    \ Radio for\nDigital Agriculture. In Proceedings of the Third International Balkan\
    \ Conference on Communications and\nNetworking (BalkanCom’19), Kopje, North Macedonia,\
    \ 10–12 June 2019.\n73.\nStuntebeck, E.; Pompili, D.; Melodia, T. Underground\
    \ Wireless Sensor Networks Using Commodity Terrestrial\nMotes. In Proceedings\
    \ of the IEEE SECON, Hyatt Regency, Reston, VA, USA, 25–28 September 2006.\n74.\n\
    Salam, A. Underground Environment Aware MIMO Design Using Transmit and Receive\
    \ Beamforming in\nInternet of Underground Things. In Proceedings of the Internet\
    \ of Things—ICIOT 2019, San Diego, CA,\nUSA, 25–30 June 2019; Issarny, V., Palanisamy,\
    \ B., Zhang, L.J., Eds.; Springer International Publishing: Cham,\nSwitzerland;\
    \ pp. 1–15.\n75.\nCrossbow Mica2, Micaz, and IRIS Motes.\nAvailable online: http://www.xbow.com\
    \ (accessed on 28\nOctober 2020).\n76.\nSalam, A. Subsurface MIMO: A Beamforming\
    \ Design in Internet of Underground Things for Digital\nAgriculture Applications.\
    \ J. Sens. Actuator Netw. 2019, 8, 41. [CrossRef]\n77.\nSalam, A. An Underground\
    \ Radio Wave Propagation Prediction Model for Digital Agriculture. Information\n\
    2019, 10, 147. [CrossRef]\n78.\nTemel, S.; Vuran, M.C.; Lunar, M.M.; Zhao, Z.;\
    \ Salam, A.; Faller, R.K.; Stolle, C.\nVehicle-to-barrier\ncommunication during\
    \ real-world vehicle crash tests. Comput. Commun. 2018, 127, 172–186. [CrossRef]\n\
    79.\nBogena, H.R.; Huismana, J.A.; Meierb, H.; Rosenbauma, U.; Weuthena, A. Hybrid\
    \ Wireless Underground\nSensor Networks: Quantiﬁcation of Signal Attenuation in\
    \ Soil. Vadose Zone J. 2009, 8, 755–761. [CrossRef]\n80.\nSalam, A. Design of\
    \ Subsurface Phased Array Antennas for Digital Agriculture Applications. In Proceedings\n\
    of the 2019 IEEE International Symposium on Phased Array Systems and Technology\
    \ (IEEE Array 2019),\nWaltham, MA, USA, 15–18 October 2019.\nSmart Cities 2020,\
    \ 3\n1551\n81.\nSalam, A. Internet of Things in Agricultural Innovation and Security.\
    \ In Internet of Things for Sustainable\nCommunity Development: Wireless Communications,\
    \ Sensing, and Systems; Springer International Publishing:\nCham, Switzerland,\
    \ 2020; pp. 71–112.\n82.\nPowell, J.; Chandrakasan, A. Differential and Single\
    \ Ended Elliptical Antennas for 3.1–10.6 GHz Ultra\nWideband Communication. In\
    \ Proceedings of the Antennas and Propagation Society International\nSymposium,\
    \ Monterey, CA, USA, 20–25 June 2004; Volume 2.\n83.\nSalam, A. Internet of Things\
    \ for Water Sustainability. In Internet of Things for Sustainable Community\n\
    Development: Wireless Communications, Sensing, and Systems; Springer International\
    \ Publishing: Cham,\nSwitzerland, 2020; pp. 113–145.\n84.\nSalam, A. Internet\
    \ of Things for Environmental Sustainability and Climate Change. In Internet of\
    \ Things for\nSustainable Community Development: Wireless Communications, Sensing,\
    \ and Systems; Springer International\nPublishing: Cham, Switzerland, 2020; pp.\
    \ 33–69.\n85.\nSalam, A. Internet of Things for Sustainable Forestry. In Internet\
    \ of Things for Sustainable Community\nDevelopment: Wireless Communications, Sensing,\
    \ and Systems; Springer International Publishing: Cham,\nSwitzerland, 2020; pp.\
    \ 147–181.\n86.\nSalam, A. Internet of Things in Sustainable Energy Systems. In\
    \ Internet of Things for Sustainable Community\nDevelopment: Wireless Communications,\
    \ Sensing, and Systems; Springer International Publishing: Cham,\nSwitzerland,\
    \ 2020; pp. 183–216.\n87.\nRitsema, C.J.; Kuipers, H.; Kleiboer, L.; Elsen, E.;\
    \ Oostindie, K.; Wesseling, J.G.; Wolthuis, J.; Havinga, P.\nA New Wireless Underground\
    \ Network System for Continuous Monitoring of Soil Water Contents.\nWater Resour.\
    \ Res. J. 2009, 45, 1–9. [CrossRef]\n88.\nSalam, A. Internet of Things in Water\
    \ Management and Treatment. In Internet of Things for Sustainable\nCommunity Development:\
    \ Wireless Communications, Sensing, and Systems; Springer International Publishing:\n\
    Cham, Switzerland, 2020; pp. 273–298.\n89.\nSalam, A. Internet of Things for Sustainability:\
    \ Perspectives in Privacy, Cybersecurity, and Future Trends.\nIn Internet of Things\
    \ for Sustainable Community Development: Wireless Communications, Sensing, and\
    \ Systems;\nSpringer International Publishing: Cham, Switzerland, 2020; pp. 299–327.\n\
    90.\nWong, R. Towards Cloud-Based Center Pivot Irrigation Automation Based on\
    \ In-Situ Soil Information from\nWireless Underground Sensor Networks. Master’s\
    \ Thesis, University of Nebraska-Lincoln, Lincoln, NE,\nUSA, 2017.\n91.\nSalam,\
    \ A.; Raza, U. Electromagnetic Characteristics of the Soil, 1st ed.; Springer\
    \ Nature: London, UK, 2020.\n[CrossRef]\n92.\nSalam, A.; Raza, U. Wireless Underground\
    \ Channel Modeling, 1st ed.; Springer Nature: London, UK, 2020.\n[CrossRef]\n\
    93.\nSalam, A. Pulses in the Sand: Long Range and High Data Rate Communication\
    \ Techniques for Next\nGeneration Wireless Underground Networks. Ph.D. Thesis,\
    \ The University of Nebraska-Lincoln, Lincoln,\nNE, USA, 2018.\n94.\nSchroeder,\
    \ R.J. The present and future of ﬁber optic sensors for the oilﬁeld service industry:\
    \ Where is there\na role? In Proceedings of the 15th Optical Fiber Sensors Conference\
    \ Technical Digest, OFS 2002 (Cat. No.\n02EX533), Portland, OR, USA, 10 May 2002;\
    \ pp. 39–42.\n95.\nHernandez, M.; MacNeill, D.W.; Reeves, M.; Kirkwood, A.D.;\
    \ Ruszka, J.P.; Zaeper, R.; Lemke, S.R. High-speed\nwired drillstring telemetry\
    \ network delivers increased safety, efﬁciency, reliability, and productivity\
    \ to the\ndrilling industry.\nIn Proceedings of the SPE Indian Oil and Gas Technical\
    \ Conference and Exhibition,\nMumbai, India, 4–6 March 2008.\n96.\nKisseleff,\
    \ S.; Akyildiz, I.; Gerstacker, W. Digital Signal Transmission in Magnetic Induction\
    \ Based Wireless\nUnderground Sensor Networks. IEEE Trans. Commun. 2015, 63, 2300–2311.\
    \ [CrossRef]\n97.\nLin, S.; Akyildiz, I.; Wang, P.; Sun, Z. Distributed Cross-Layer\
    \ Protocol Design for Magnetic Induction\nCommunication in Wireless Underground\
    \ Sensor Networks. Wirel. Commun. IEEE Trans. 2015, 14, 4006–4019.\n[CrossRef]\n\
    98.\nSun, Z.; Akyildiz, I. Magnetic Induction Communications for Wireless Underground\
    \ Sensor Networks.\nAntennas Propag. IEEE Trans. 2010, 58, 2426–2435. [CrossRef]\n\
    99.\nSun, Z.; Akyildiz, I.; Kisseleff, S.; Gerstacker, W.\nIncreasing the Capacity\
    \ of Magnetic Induction\nCommunications in RF-Challenged Environments. IEEE Trans.\
    \ Commun. 2013, 61, 3943–3952. [CrossRef]\nSmart Cities 2020, 3\n1552\n100. Tan,\
    \ X.; Sun, Z.; Akyildiz, I.F. Wireless Underground Sensor Networks: MI-based communication\
    \ systems\nfor underground applications. IEEE Antennas Propag. Mag. 2015, 57,\
    \ 74–87. [CrossRef]\n101. Vuran, M.C.; Akyildiz, I.F. Channel model and analysis\
    \ for wireless underground sensor networks in soil\nmedium. Phys. Commun. 2010,\
    \ 3, 245–254. [CrossRef]\n102. Salam, A.; Raza, U. Underground Phased Arrays and\
    \ Beamforming Applications, 1st ed.; Springer Nature:\nLondon, UK, 2020. [CrossRef]\n\
    103. Sommerfeld, A. Uber die ausbreitung der Wellen in der drahtlosen Telegraphie.\
    \ Ann. Phys 1909, 28, 665–737.\n[CrossRef]\n104. Arnautovski-Toseva, V.; Grcev,\
    \ L. On the Image Model of a Buried Horizontal Wire. IEEE Trans.\nElectromagn.\
    \ Compat. 2016, 58, 278–286. [CrossRef]\n105. Banos, A. Dipole Radiation in the\
    \ Presence of a Conducting Halfspace; Pergamon Press: Oxford, UK, 1966.\n106.\
    \ Biggs, A. Dipole Antenna Radiation Fields in Stratiﬁed Antarctic Media. Antennas\
    \ Propag. IEEE Trans.\n1968, 16, 445–448. [CrossRef]\n107. Dong, S.; Yao, A.;\
    \ Meng, F. Analysis of an Underground Horizontal Electrically Small Wire Antenna.\
    \ J. Electr.\nComput. Eng. 2015, 2851, 9.\n108. Hansen, R. Radiation and reception\
    \ with buried and submerged antennas. IEEE Trans. Antennas Propag.\n1963, 11,\
    \ 207–216. [CrossRef]\n109. Moore, R.K.; Blair, W.E. Dipole radiation in conducting\
    \ half space. J. Res Natl. Bur. Stand. 1961, 65, 547–563.\n[CrossRef]\n110. Salam,\
    \ A.; Raza, U. On Burial Depth of Underground Antenna in Soil Horizons for Decision\
    \ Agriculture.\nIn Proceedings of the International Conference on Internet of\
    \ Things (ICIOT-2020), Honolulu, HI, USA,\n18–20 September 2020.\n111. Sivaprasad,\
    \ K.; King, R. A study of arrays of dipoles in a semi-inﬁnite dissipative medium.\
    \ Antennas Propag.\nIEEE Trans. 1963, 11, 240–256. [CrossRef]\n112. Tai, C.T.;\
    \ Collin, R.E. Radiation of a Hertzian dipole immersed in a dissipative medium.\
    \ IEEE Trans.\nAntennas Propag. 2000, 48, 1501–1506. [CrossRef]\n113. Wait, J.R.\
    \ The electromagnetic ﬁelds of a horizontal dipole in the presence of a conducting\
    \ half-space.\nCan. J. Phys. 1961, 39, 1017–1028. [CrossRef]\n114. Wheeler, H.A.\
    \ Useful radiation from an Underground Antenna. J. Res. 1961, 65, 89–91. [CrossRef]\n\
    115. Norton, K.A. The Physical Reality of Space and Surface Waves in the Radiation\
    \ Field of Radio Antennas.\nProc. Inst. Radio Eng. 1937, 25, 1192–1202. [CrossRef]\n\
    116. King, R.W.P.; Owens, M.; Wu, T.T. Lateral Electromagn. Waves; Springer: Berlin/Heidelberg,\
    \ Germany, 1992.\n117. Wu, T.T. Theory of the Dipole Antenna and the Two-Wire\
    \ Transmission Line. J. Math. Phys. 1961, 550–574.\n118. Galejs, J. Antennas in\
    \ Inhomogeneous Media; Pergamon Press: Oxford, UK, 1969.\n119. Raza, U.; Salam,\
    \ A. Zenneck Waves in Decision Agriculture: An Empirical Veriﬁcation and Application\
    \ in\nEM-Based Underground Wireless Power Transfer. Smart Cities 2020, 3, 17.\
    \ [CrossRef]\n120. King, R.W.P.; Smith, G. Antennas in Matter; MIT Press: Cambridge,\
    \ MA, USA, 1981.\n121. Iizuka, K. An experimental investigation on the behavior\
    \ of the dipole antenna near the interface between\nthe conducting medium and\
    \ free space. IEEE Trans. Antennas Propag. 1964, 12, 27–35. [CrossRef]\n122. Kesar,\
    \ A.S.; Weiss, E. Wave Propagation Between Buried Antennas. IEEE Trans. Antennas\
    \ Propag. 2013,\n61, 6152–6156. [CrossRef]\n123. Fitzgerrell, R.G.; Haidle, L.L.\n\
    Design and performance of four buried UHF antennas. IEEE Trans.\nAntennas Propag.\
    \ 1972, 20, 56–62. [CrossRef]\n124. Castorina, G.; Donato, L.D.; Morabito, A.F.;\
    \ Isernia, T.; Sorbello, G. Analysis and Design of a Concrete\nEmbedded Antenna\
    \ for Wireless Monitoring Applications. IEEE Antennas Propag. Mag. 2016, 58, 76–93.\n\
    [CrossRef]\n125. Zemmour, H.; Baudoin, G.; Hamouda, C.; Diet, A.; Biancheri-Astier,\
    \ M. Impact of soil on UWB buried\nantenna and communication link in IR-UWB WUSN\
    \ applications. In Proceedings of the Radar Conference\n(EuRAD), 2015 European,\
    \ Paris, France, 9–11 September 2015; pp. 353–356. [CrossRef]\n126. Tokan, F.;\
    \ Tokan, N.T.; Neto, A.; Cavallo, D. The Lateral Wave Antenna. IEEE Trans. Antennas\
    \ Propag.\n2014, 62, 2909–2916. [CrossRef]\n127. Boyle, K.; Yuan, Y.; Ligthart,\
    \ L. Analysis of mobile phone antenna impedance variations with user proximity.\n\
    IEEE Trans. Antennas Propag. 2007, 55, 364–372. [CrossRef]\nSmart Cities 2020,\
    \ 3\n1553\n128. Toftgard, J.; Hornsleth, S.; Andersen, J. Effects on portable\
    \ antennas of the presence of a person. IEEE Trans.\nAntennas Propag. 1993, 41,\
    \ 739–746. [CrossRef]\n129. Dissanayake, T.; Esselle, K.; Yuce, M. Dielectric\
    \ loaded impedance matching for wideband implanted\nantennas. IEEE Trans. Microw.\
    \ Theory Tech. 2009, 57, 2480–2487. [CrossRef]\n130. Gosalia, K.; Humayun, M.;\
    \ Lazzi, G. Impedance matching and implementation of planar space-ﬁlling dipoles\n\
    as intraocular implanted antennas in a retinal prosthesis. IEEE Trans. Antennas\
    \ Propag. 2005, 53, 2365–2373.\n[CrossRef]\n131. Anand, N.; Lee, S.J.; Knightly,\
    \ E.W. STROBE: Actively securing wireless communications using Zero-Forcing\n\
    Beamforming. In Proceedings of the INFOCOM, 2012 Proceedings IEEE, Orlando, FL,\
    \ USA, 25–30 March\n2012; pp. 720–728. [CrossRef]\n132. Aryafar, E.; Khojastepour,\
    \ M.A.; Sundaresan, K.; Rangarajan, S.; Knightly, E.\nADAM: An Adaptive\nBeamforming\
    \ System for Multicasting in Wireless LANs. IEEE/ACM Trans. Netw. 2013. [CrossRef]\n\
    133. Du, Y.; Aryafar, E.; Camp, J.; Chiang, M. iBeam: Intelligent client-side\
    \ multi-user beamforming in wireless\nnetworks. In Proceedings of the IEEE INFOCOM,\
    \ Toronto, ON, Canada, 27 April–2 May 2014. [CrossRef]\n134. Lakshmanan, S.; Sundaresan,\
    \ K.; Kokku, R.; Khojestepour, A.; Rangarajan, S. Towards Adaptive\nBeamforming\
    \ in Indoor Wireless Networks: An Experimental Approach. In Proceedings of the\
    \ INFOCOM,\nRio de Janeiro, Brazil, 19–25 April 2009. [CrossRef]\n135. Nitsche,\
    \ T.; Flores, A.B.; Knightly, E.W.; Widmer, J. Steering with eyes closed:\nMm-Wave\
    \ beam\nsteering without in-band measurement. In Proceedings of the IEEE INFOCOM,\
    \ Kowloon, Hong Kong,\n26 April–1 May 2015. [CrossRef]\n136. Quitin, F.; Rahman,\
    \ M.M.U.; Mudumbai, R.; Madhow, U. A Scalable Architecture for Distributed Transmit\n\
    Beamforming with Commodity Radios: Design and Proof of Concept. IEEE Trans. Wirel.\
    \ Commun. 2013, 12,\n1418–1428. [CrossRef]\n137. Widrow, B.; Mantey, P.E.; Grifﬁths,\
    \ L.J.; Goode, B.B. Adaptive antenna systems. Proc. IEEE 1967. [CrossRef]\n138.\
    \ Kisseleff, S.; Akyildiz, I.F.; Gerstacker, W. Beamforming for Magnetic Induction\
    \ Based Wireless Power\nTransfer Systems with Multiple Receivers. In Proceedings\
    \ of the IEEE GLOBECOM, San Diego, CA, USA,\n6–10 December 2015. [CrossRef]\n\
    139. Hipp, J.E.\nSoil electromagnetic parameters as functions of frequency, soil\
    \ density, and soil moisture.\nProc. IEEE 1974, 62, 98–103. [CrossRef]\n140. Curtis,\
    \ J.O. A durable laboratory apparatus for the measurement of soil dielectric properties.\
    \ IEEE Trans.\nInstrum. Meas. 2001, 50, 1364–1369. [CrossRef]\n141. Wang, J.R.;\
    \ Schmugge, T.J. An Empirical Model for the Complex Dielectric Permittivity of\
    \ Soils as a Function\nof Water Content. IEEE Trans. Geosci. Remote. Sens. 1980,\
    \ GE-18, 288–295. [CrossRef]\n142. Nicolson, A.M.; Ross, G.F. Measurement of the\
    \ Intrinsic Properties of Materials by Time-Domain Techniques.\nIEEE Trans. Instrum.\
    \ Meas. 1970, 19, 377–382. [CrossRef]\n143. Toro-Vazquez, J.; Rodriguez-Solis,\
    \ R.A.; Padilla, I. Estimation of Electromagnetic Properties in Soil Testbeds\n\
    Using Frequency and Time Domain Modeling. IEEE J. Sel. Top. Appl. Earth Obs. Remote\
    \ Sens. 2012, 5, 984–989.\n[CrossRef]\n144. Vereecken, H.; Schnepf, A.; Hopmans,\
    \ J.W.; Javaux, M.; Or, D.; Roose, T.; Vanderborght, J.; Young, M.;\nAmelung,\
    \ W.; Aitkenhead, M.; et al. Modeling Soil Processes: Review, Key Challenges,\
    \ and New Perspectives.\nVadose Zone J. 2016, 15. [CrossRef]\n145. Smith, G.;\
    \ Nordgard, J. Measurement of the electrical constitutive parameters of materials\
    \ using antennas.\nIEEE Trans. Antennas Propag. 1985, 33, 783–792. [CrossRef]\n\
    146. Smith, G.S.; King, R.W.P. The resonant linear antenna as a probe for measuring\
    \ the in situ electrical properties\nof geological media. J. Geophys. Res. 1974,\
    \ 79, 2623–2628. [CrossRef]\n147. Solimene, R.; D’Alterio, A.; Gennarelli, G.;\
    \ Soldovieri, F. Estimation of Soil Permittivity in Presence of\nAntenna-Soil\
    \ Interactions. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens. 2014, 7, 805–812.\
    \ [CrossRef]\n148. Bobrov, P.; Repin, A.; Rodionova, O. Wideband Frequency Domain\
    \ Method of Soil Dielectric Property\nMeasurements. Geosci. Remote Sens. IEEE\
    \ Trans. 2015, 53, 2366–2372. [CrossRef]\n149. Nassar, E.M.; Lee, R.; Young, J.D.\
    \ A probe antenna for in situ measurement of the complex dielectric constant\n\
    of materials. IEEE Trans. Antennas Propag. 1999, 47, 1085–1093. [CrossRef]\n150.\
    \ Weir, W.B. Automatic measurement of complex dielectric constant and permeability\
    \ at microwave\nfrequencies. Proc. IEEE 1974, 62, 33–36. [CrossRef]\nSmart Cities\
    \ 2020, 3\n1554\n151. Hislop, G. Permittivity Estimation Using Coupling of Commercial\
    \ Ground Penetrating Radars. IEEE Trans.\nGeosci. Remote Sens. 2015, 53, 4157–4164.\
    \ [CrossRef]\n152. van der Velde, R.; Salama, M.S.; Eweys, O.A.; Wen, J.; Wang,\
    \ Q. Soil Moisture Mapping Using Combined\nActive/Passive Microwave Observations\
    \ Over the East of the Netherlands. IEEE J. Sel. Top. Appl. Earth Obs.\nRemote\
    \ Sens. 2015, 8, 4355–4372. [CrossRef]\n153. Jonard, F.; Weihermüller, L.; Schwank,\
    \ M.; Jadoon, K.Z.; Vereecken, H.; Lambot, S. Estimation of Hydraulic\nProperties\
    \ of a Sandy Soil Using Ground-Based Active and Passive Microwave Remote Sensing.\
    \ IEEE Trans.\nGeosci. Remote Sens. 2015, 53, 3095–3109. [CrossRef]\n154. b. Kim,\
    \ S.; Ouellette, J.D.; van Zyl, J.J.; Johnson, J.T. Detection of Inland Open Water\
    \ Surfaces Using Dual\nPolarization L-Band Radar for the Soil Moisture Active\
    \ Passive Mission. IEEE Trans. Geosci. Remote Sens.\n2016, 54, 3388–3399. [CrossRef]\n\
    155. Small, E.E.; Larson, K.M.; Chew, C.C.; Dong, J.; Ochsner, T.E. Validation\
    \ of GPS-IR Soil Moisture Retrievals:\nComparison of Different Algorithms to Remove\
    \ Vegetation Effects.\nIEEE J. Sel. Top. Appl. Earth Obs.\nRemote Sens. 2016,\
    \ 9, 4759–4770. [CrossRef]\n156. Salam, A.; Raza, U. Modulation Schemes and Connectivity\
    \ in Wireless Underground Channel, 1st ed.; Springer Nature:\nLondon, UK, 2020.\
    \ [CrossRef]\n157. Oelze, M.L.; O’Brien, W.D.; Darmody, R.G. Measurement of attenuation\
    \ and speed of sound in soils. Soil Sci.\nSoc. Am. J. 2002, 66, 788–796. [CrossRef]\n\
    158. Gardner, W.R.; Hyden, R.E.; Linyaev, E.J.; Gao, L.; Robbins, C.; Moore, J.\
    \ Acoustic telemetry delivers more\nreal-time downhole data in underbalanced drilling\
    \ operations. In Proceedings of the IADC/SPE Drilling\nConference, Miami, FL,\
    \ USA, 21–23 February 2006.\n159. Yu, X.; Han, W.; Zhang, Z. Path loss estimation\
    \ for wireless underground sensor network in agricultural\napplication. Agric.\
    \ Res. 2017, 6, 97–102. [CrossRef]\n160. Franconi, N.G.; Bunger, A.P.; Sejdi´c,\
    \ E.; Mickle, M.H.\nWireless communication in oil and gas wells.\nEnergy Technol.\
    \ 2014, 2, 996–1005. [CrossRef]\n161. Akka¸s, M.A.; Sokullu, R.; Balcı, A. Wireless\
    \ sensor networks in oil pipeline systems using electromagnetic\nwaves.\nIn Proceedings\
    \ of the 9th International Conference on Electrical and Electronics Engineering\n\
    (ELECO), Bursa, Turkey, 26–28 November 2015; pp. 143–147.\n162. Salam, A.; Raza,\
    \ U. Signals in the Soil: Subsurface Sensing, 1st ed.; Springer Nature: London,\
    \ UK, 2020.\n[CrossRef]\n163. Savazzi, S.; Spagnolini, U.; Goratti, L.; Molteni,\
    \ D.; Latva-aho, M.; Nicoli, M. Ultra-wide band sensor\nnetworks in oil and gas\
    \ explorations. IEEE Commun. Mag. 2013, 51, 150–160. [CrossRef]\n164. Wait, J.;\
    \ Fuller, J. On radio propagation through earth. IEEE Trans. Antennas Propag.\
    \ 1971, 19, 796–798.\n[CrossRef]\n165. Sivaprasad, K.; Stotz, K.C. Reﬂection of\
    \ electromagnetic pulses from a multilayered medium. IEEE Trans.\nGeosci. Electron.\
    \ 1973, 11, 161–164. [CrossRef]\n166. Lytle, R.J. Measurement of earth medium\
    \ electrical characteristics: Techniques, results, and applications.\nIEEE Trans.\
    \ Geosci. Electron. 1974, 12, 81–101. [CrossRef]\n167. Daily, W.\nA new method\
    \ for characterization of downhole antennas used in geophysical probing.\nGeophys.\
    \ Res. Lett. 1982, 9, 507–509. [CrossRef]\n168. Harrison, W.; Mazza, R.; Rubin,\
    \ L.; Yost, A. Air-drilling, electromagnetic, MWD system development.\nIn Proceedings\
    \ of the SPE/IADC Drilling Conference, Houston, TX, USA, 27 February–2 March 1990.\n\
    169. Zheng, Z.; Hu, S. Research challenges involving cross-layered communication\
    \ protocol design for underground\nWSNS. In Proceedings of the 2nd International\
    \ Conference on Anti-Counterfeiting, Security and Identification,\nGuiyang, China,\
    \ 20–23 August 2008; pp. 120–123.\n170. Silva, A.R.; Vuran, M.C. Empirical evaluation\
    \ of wireless underground-to-underground communication in\nwireless underground\
    \ sensor networks. In Proceedings of the International Conference on Distributed\
    \ Computing\nin Sensor Systems; Springer: Berlin/Heidelberg, Germany, 2009; pp.\
    \ 231–244.\n171. Schnitger, J.; Macpherson, J.D. Signal attenuation for electromagnetic\
    \ telemetry systems. In Proceedings of\nthe SPE/IADC Drilling Conference and Exhibition,\
    \ 17–19 March, Amsterdam, The Netherlands .\n172. Salam, A.; Raza, U. Signals\
    \ in the Soil: An Introduction to Wireless Underground Communications, 1st ed.;\n\
    Springer Nature: London, UK, 2020. [CrossRef]\nSmart Cities 2020, 3\n1555\n173.\
    \ Hallikainen, M.T.; Ulaby, F.T.; Dobson, M.C.; El-Rayes, M.A.; Wu, L.K. Microwave\
    \ dielectric behavior of\nwet soil-part 1: Empirical models and experimental observations.\
    \ IEEE Trans. Geosci. Remote. Sens. 1985,\nGE-23, 25–34.\n174. Yoon, S.U.; Cheng,\
    \ L.; Ghazanfari, E.; Wang, Z.; Zhang, X.; Pamukcu, S.; Suleiman, M.T. Subsurface\n\
    monitoring using low frequency wireless signal networks. In Proceedings of the\
    \ IEEE International\nConference on Pervasive Computing and Communications Workshops,\
    \ Lugano, Switzerland, 19–23 March\n2012; pp. 443–446.\n175. Akka¸s, M.A.; Akyildiz,\
    \ I.F.; Sokullu, R. Terahertz channel modeling of underground sensor networks\
    \ in oil\nreservoirs. In Proceedings of the IEEE Global Communications Conference\
    \ (GLOBECOM), Anaheim, CA,\nUSA, 3–7 December 2012; pp. 543–548.\n176. Ghazanfari,\
    \ E.; Pamukcu, S.; Yoon, S.U.; Suleiman, M.T.; Cheng, L. Geotechnical sensing\
    \ using\nelectromagnetic attenuation between radio transceivers. Smart Mater.\
    \ Struct. 2012, 21, 125017. [CrossRef]\n177. Goyal, R.; Kennedy, R.; Kelsey, B.;\
    \ Whelan, M.; Janoyan, K. Underground wireless sensor networks using 2nd\ngeneration\
    \ RF transceivers. In Proceedings of the Geo-Congress 2014: Geo-characterization\
    \ and Modeling\nfor Sustainability, Atlanta, GA, USA, 23–26 February 2014; pp.\
    \ 2619–2629.\n178. Yu, X.; Han, W.; Wu, P.; Zhang, Z. Experiment of propagation\
    \ characteristics based on different frequency\nchannels of wireless underground\
    \ sensor network in soil. Trans. Chin. Soc. Agricult. Mach. 2015, 46, 252–260.\n\
    179. Horvat, G.; Vinko, D.; Vlaovi´c, J. Impact of propagation medium on link\
    \ quality for underwater and\nunderground sensors. In Proceedings of the 39th\
    \ International Convention on Information and Communication\nTechnology, Electronics\
    \ and Microelectronics (MIPRO), Opatija, Croatia, 30 May–3 June 2016; pp. 129–134.\n\
    180. Koike, H.; Kamiya, Y. A new approach for subsurface wireless sensor networks.\
    \ In Intelligent Interactive\nMultimedia Systems and Services 2016; Springer:\
    \ Berlin/Heidelberg, Germany, 2016; pp. 201–211.\n181. Zemmour, H.; Baudoin, G.;\
    \ Diet, A. Soil effects on the underground-to-aboveground communication link in\n\
    ultrawideband wireless underground sensor networks. IEEE Antennas Wirel. Propag.\
    \ Lett. 2016, 16, 218–221.\n[CrossRef]\n182. Saeed, N.; Alouini, M.S.; Al-Naffouri,\
    \ T.Y. Toward the internet of underground things: A systematic survey.\nIEEE Commun.\
    \ Surv. Tutor. 2019, 21, 3443–3466. [CrossRef]\n183. Lytle, R.J.; Lager, D.L.\
    \ The Yosemite experiments: HF propagation through rock. Radio Sci. 1976, 11,\
    \ 245–252.\n[CrossRef]\n184. Jiang, S.; Georgakopoulos, S.V.; Jonah, O. RF power\
    \ harvesting for underground sensors. In Proceedings of\nthe IEEE International\
    \ Symposium on Antennas and Propagation, Chicago, IL, USA, 8–14 July 2012; pp.\
    \ 1–2.\n185. Du, D.; Zhang, H.; Yang, J.; Yang, P. Propagation characteristics\
    \ of the underground-to-aboveground\ncommunication link about 2.4 GHz and 433MHz\
    \ radio wave: An empirical study in the pine forest of Guizhou\nProvince. In Proceedings\
    \ of the 3rd IEEE International Conference on Computer and Communications\n(ICCC),\
    \ Chengdu, China, 13–16 December 2017; pp. 1041–1045.\n186. Suherman, S.; Rambe,\
    \ A.; Tanjung, A. Underground radio propagation on frequency band 97 MHz–130 MHz.\n\
    Int. J. Eng. Technol. 2018, 7, 722–726. [CrossRef]\n187. Conceição, S.; Ribeiro,\
    \ F.; Campos, R.; Ricardo, M. A NS-3 based simulator of TCP/IP wireless underground\n\
    networks. In Proceedings of the IFIP Wireless Days (WD), Rio de Janeiro, Brazil,\
    \ 12–14 November 2014;\npp. 1–6.\n188. Liu, G.; Wang, Z.; Jiang, T. QoS-aware\
    \ throughput maximization in wireless powered underground sensor\nnetworks. IEEE\
    \ Trans. Commun. 2016, 64, 4776–4789. [CrossRef]\n189. Salam, A.; Raza, U. Autonomous\
    \ Irrigation Management in Decision Agriculture, 1st ed.; Springer Nature:\nLondon,\
    \ UK, 2020. [CrossRef]\n190. Yuan, B.; Chen, H.; Yao, X. Optimal relay placement\
    \ for lifetime maximization in wireless underground\nsensor networks. Inf. Sci.\
    \ 2017, 418, 463–479. [CrossRef]\n191. Thakur, P.D.; Agnihotri, P.; Deng, L.;\
    \ Soliman, A.M.; Kieduppatum, P.; Fernandes, W. The most common\nimpacts of drilling\
    \ dynamics and environments on log-while-drilling data: A study from Abu dhabi.\n\
    In Proceedings of the Abu Dhabi International Petroleum Exhibition & Conference,\
    \ Abu Dhabi, UAE,\n12–15 November 2018.\n192. Hutin, R.; Tennent, R.; Kashikar,\
    \ S. New mud pulse telemetry techniques for deepwater applications and\nimproved\
    \ real-time data capabilities. In Proceedings of the SPE/IADC Drilling Conference,\
    \ Amsterdam,\nThe Netherlands, 27 February–1 March 2001.\nSmart Cities 2020, 3\n\
    1556\n193. Klotz, C.; Bond, P.R.; Wassermann, I.; Priegnitz, S. A new mud pulse\
    \ telemetry system for enhanced\nMWD/LWD applications.\nIn Proceedings of the\
    \ IADC/SPE Drilling Conference, Orlando, FL, USA,\n4–6 March 2008.\n194. Hahn,\
    \ D.; Peters, V.; Rouatbi, C.; Scholz, E. Reciprocating Pulser for Mud Pulse Telemetry.\
    \ U.S. Patent\n7,417,920, 26 August 2008.\n195. Jianhui, Z.; Liyan, W.; Fan, L.;\
    \ Yanlei, L. An effective approach for the noise removal of mud pulse telemetry\n\
    system. In Proceedings of the 8th International Conference on Electronic Measurement\
    \ and Instruments,\nXi’an, China, 16–18 August 2007; pp. 1–971.\n196. Farraj,\
    \ A. Acoustical Communications for Wireless Downhole Telemetry Systems. Ph.D.\
    \ Thesis, Texas A &\nM University, College Station, TX, USA, 2012.\n197. Reckmann,\
    \ H. Downhole Noise Cancellation in Mud-Pulse Telemetry. U.S. Patent 8,811,118,\
    \ 19 August 2014.\n198. Jarrot, A.; Gelman, A.; Kusuma, J. Wireless digital communication\
    \ technologies for drilling: communication\nin the bits/s regime. IEEE Signal\
    \ Process. Mag. 2018, 35, 112–120. [CrossRef]\n199. Harrell, J.; Brooks, A.G.;\
    \ Morsy, H.S. Method and Apparatus for Mud Pulse Telemetry in Underbalanced\n\
    Drilling Systems. U.S. Patent 6,097,310, 1 August 2000.\n200. Mwachaka, S.M.;\
    \ Wu, A.; Fu, Q. A review of mud pulse telemetry signal impairments modeling and\n\
    suppression methods. J. Pet. Explor. Prod. Technol. 2019, 9, 779–792. [CrossRef]\n\
    201. Qu, F.; Zhang, Z.; Hu, J.; Xu, J.; Wang, S.; Wu, Y. Adaptive dual-sensor\
    \ noise cancellation method for\ncontinuous wave mud pulse telemetry. J. Pet.\
    \ Sci. Eng. 2018, 162, 386–393. [CrossRef]\n202. Lin, Y.; Kong, X.; Qiu, Y.; Yuan,\
    \ Q. Calculation analysis of pressure wave velocity in gas and drilling mud\n\
    two-phase ﬂuid in annulus during drilling operations. Math. Probl. Eng. 2013,\
    \ 2013, 318912. [CrossRef]\n203. Hutin, R. Zero Sum Pressure Drop Mud Telemetry\
    \ Modulator. U.S. Patent 9,228,432, 5 January 2016.\n204. Adamo, F.; Andria, G.;\
    \ Attivissimo, F.; Giaquinto, N. An acoustic method for soil moisture measurement.\n\
    IEEE Trans. Instrum. Meas. 2004, 53, 891–898. [CrossRef]\n205. Sharma, R.; Gupta,\
    \ A.\nContinuous wave acoustic method for determination of moisture content in\n\
    agricultural soil. Comput. Electron. Agric. 2010, 73, 105–111. [CrossRef]\n206.\
    \ Garai, M. Measurement of the sound-absorption coefﬁcient in situ: the reﬂection\
    \ method using periodic\npseudo-random sequences of maximum length. Appl. Acoust.\
    \ 1993, 39, 119–139. [CrossRef]\n207. Singer, A.; Yang, S.; Oelze, M. Acoustic\
    \ communications: Through soils, sands, water, and tissue. J. Acoust.\nSoc. Am.\
    \ 2017, 141, 3986–3987. [CrossRef]\n208. Yang, S.; Baltaji, O.; Hashash, Y.M.;\
    \ Singer, A. SoilComm: A miniaturized through-soil wireless data\ntransmission\
    \ system. J. Acoust. Soc. Am. 2018, 144, 1872. [CrossRef]\n209. Neff, J.M.; Camwell,\
    \ P.L. Field test results of an acoustic telemetry MWD system. In Proceedings\
    \ of the\nSPEIADC Drilling Conference, Amsterdam, The Netherlands, 20–22 February\
    \ 2007.\n210. Gutierrez-Estevez, M.A.; Krüger, U.; Krueger, K.A.; Manolakis, K.;\
    \ Jungnickel, V.; Jaksch, K.; Krueger, K.;\nMikulla, S.; Giese, R.; Sohmer, M.;\
    \ et al. Acoustic broadband communications over deep drill strings using\nadaptive\
    \ OFDM. In Proceedings of the IEEE Wireless Communications and Networking Conference\
    \ (WCNC),\nShanghai, China, 7–10 April 2013; pp. 4089–4094.\n211. Kumar, L.; Han,\
    \ W.; Guan, Y.; Lee, Y.; Sun, S. Optimization of acoustic communication for industrial\n\
    drilling. In Proceedings of the IEEE Conference on Information & Communication\
    \ Technologies, Thuckalay,\nTamil Nadu, India, 11–12 April 2013; pp. 1060–1063.\n\
    212. Wei, Z.; Yibing, S.; Yanjun, L. Design of acoustic wireless remote transmission\
    \ system for logging-while-drilling\ndata. In Proceedings of the IEEE 11th International\
    \ Conference on Electronic Measurement & Instruments,\nHarbin, China, 16–19 August\
    \ 2013; Volume 1, pp. 53–57.\n213. Pelekanakis, K.; Chitre, M.; Kumar, L.S.; Guan,\
    \ Y.L. Performance of channel coding and equalization for\nacoustic telemetry\
    \ along drill strings. In Proceedings of the IEEE International Conference on\
    \ Communication\nSystems, Macau, China, 19–21 November 2014; pp. 610–614.\n214.\
    \ Li, Z.; Ge, S.; Fu, Z. Design of the acoustic signal receiving unit of acoustic\
    \ telemetry while drilling.\nIn Proceedings of the MATEC Web of Conferences, 2016;\
    \ EDP Sciences: Ulis, France, 2016; Volume 61, p. 07012.\n215. Alenezi, A.; Abdi,\
    \ A. A comparative study of multichannel and single channel accelerometer sensors\
    \ for\ncommunication in oil wells. In Proceedings of the International Conference\
    \ on Communication and Signal\nProcessing (ICCSP), Chennai, India, 6–8 April 2017;\
    \ p. 153.\nSmart Cities 2020, 3\n1557\n216. Gao, J.; Chen, L.; Li, Q. Study on\
    \ acoustic wave transmission technology of measurement-while-drilling\n(MWD) data.\
    \ In Proceedings of the 3rd International Conference on Advances in Materials,\
    \ Mechatronics and Civil\nEngineering (ICAMMCE); Atlantis Press: Paris, France,\
    \ 2018.\n217. Kang, Z.; Yu, Y.; Hou, C. Study on stress and strain and characteristics\
    \ of acoustic emission in the process of\nrock failure. In Proceedings of the\
    \ Second International Conference on Mechanic Automation and Control\nEngineering,\
    \ Hohhot, China, 15–17 July 2011; pp. 7737–7740.\n218. Sun, L.; Li, Y. Acoustic\
    \ emission sound source localization for crack in the pipeline. In Proceedings\
    \ of the\nChinese Control and Decision Conference, Xuzhou, China, 26–28 May 2010;\
    \ pp. 4298–4301.\n219. Khan, U.S.; Al-Nuaimy, W.; El-Samie, F.E.A. Detection of\
    \ landmines and underground utilities from acoustic\nand GPR images with a cepstral\
    \ approach. J. Vis. Commun. Image Represent. 2010, 21, 731–740. [CrossRef]\n220.\
    \ Ahmad, T.J.; Noui-Mehidi, M.; Arsalan, M. Performance analysis of downhole acoustic\
    \ communication\nin multiphase ﬂow. In Proceedings of the IECON 2014—40th Annual\
    \ Conference of the IEEE Industrial\nElectronics Society, Dallas, TX, USA, 29\
    \ October–1 November 2014; pp. 3909–3913.\n221. Freire, R.; de Abreu, M.H.M.;\
    \ Okada, R.Y.; Soares, P.F.; GranhenTavares, C.R. Sound absorption coefﬁcient\n\
    in situ: An alternative for estimating soil loss factors. Ultrason. Sonochem.\
    \ 2015, 22, 100–107. [CrossRef]\n[PubMed]\n222. Van Hieu, B.; Choi, S.; Kim, Y.U.;\
    \ Park, Y.; Jeong, T. Wireless transmission of acoustic emission signals for\n\
    real-time monitoring of leakage in underground pipes. KSCE J. Civ. Eng. 2011,\
    \ 15, 805. [CrossRef]\n223. Su, D.; Miro, J.V.; Vidal-Calleja, T. Modelling in-pipe\
    \ acoustic signal propagation for condition assessment\nof multi-layer water pipelines.\
    \ In Proceedings of the IEEE 10th Conference on Industrial Electronics and\nApplications\
    \ (ICIEA), Auckland, New Zealand, 15–17 June 2015; pp. 545–550.\n224. Ma, D.;\
    \ Shi, Y.; Zhang, W.; Liu, G. Design of acoustic transmission along drill strings\
    \ for logging while\ndrilling data based on adaptive NC-OFDM. AEU-Int. J. Electron.\
    \ Commun. 2018, 83, 329–338. [CrossRef]\n225. Sun, Z.; Akyildiz, I.F. Underground\
    \ wireless communication using magnetic induction. In Proceedings of\nthe IEEE\
    \ International Conference on Communications Dresden, Germany, 14–18 June 2009;\
    \ pp. 1–5.\n226. Kisseleff, S.; Akyildiz, I.F.; Gerstacker, W. On modulation for\
    \ magnetic induction based transmission\nin wireless underground sensor networks.\
    \ In Proceedings of the IEEE International Conference on\nCommunications (ICC),\
    \ Sydney, NSW, Australia, 10–14 June 2014; pp. 71–76.\n227. Gungi, A.; Vippalapalli,\
    \ V.; Menon, K.U.; Hariharan, B. Inductively powered underground wireless communication\n\
    system. In Microelectronics, Electromagnetics and Telecommunications; Springer:\
    \ Berlin/Heidelberg, Germany, 2016;\npp. 205–215.\n228. Ma, J.; Zhang, X.; Huang,\
    \ Q. Near-ﬁeld magnetic induction communication device for underground wireless\n\
    communication networks. Sci. China Inf. Sci. 2014, 57, 1–11. [CrossRef]\n229.\
    \ Guo, H.; Sun, Z.; Zhou, C. Practical design and implementation of metamaterial-enhanced\
    \ magnetic\ninduction communication. IEEE Access 2017, 5, 17213–17229. [CrossRef]\n\
    230. Martins, C.H.; Alshehri, A.A.; Akyildiz, I.F. Novel MI-based (FracBot) sensor\
    \ hardware design for monitoring\nhydraulic fractures and oil reservoirs. In Proceedings\
    \ of the IEEE 8th Annual Ubiquitous Computing,\nElectronics and Mobile Communication\
    \ Conference (UEMCON), New York, NY, USA, 19–21 October 2017;\npp. 434–441.\n\
    231. Alshehri, A.A.; Martins, C.H.; Akyildiz, I.F. Wireless FracBot (sensor) nodes:\
    \ Performance evaluation of\ninductively coupled near ﬁeld communication (NFC).\
    \ In Proceedings of the IEEE Sensors Applications\nSymposium (SAS), Seoul, South\
    \ Korea, 12–14 March 2018; pp. 1–6.\n232. Yan, L.; Wei, D.; Pan, M.; Chen, J.\
    \ Downhole wireless communication using magnetic induction technique.\nIn Proceedings\
    \ of the United States National Committee of URSI National Radio Science Meeting\n\
    (USNC-URSI NRSM), Boulder, CO, USA, 4–7 January 2018; pp. 1–2.\n233. Ma, J.; Zhang,\
    \ X.; Huang, Q.; Cheng, L.; Lu, M. Experimental study on the impact of soil conductivity\
    \ on\nunderground magneto-inductive channel. IEEE Antennas Wirel. Propag. Lett.\
    \ 2015, 14, 1782–1785. [CrossRef]\n234. Silva, A.R.; Moghaddam, M. Design and\
    \ implementation of low-power and mid-range magnetic-induction-based\nwireless\
    \ underground sensor networks. IEEE Trans. Instrum. Meas. 2015, 65, 821–835. [CrossRef]\n\
    235. Zungeru, A.M.; Ezea, H.; Katende, J. Pulsed power system for wireless underground\
    \ sensor networks.\nIn Proceedings of the Third International Conference on Electrical,\
    \ Electronics, Computer Engineering and\ntheir Applications (EECEA), Beirut, Lebanon,\
    \ 21–23 April 2016; pp. 126–132.\nSmart Cities 2020, 3\n1558\n236. Sun, Z.; Akyildiz,\
    \ I.F. Optimal deployment for magnetic induction-based wireless networks in challenged\n\
    environments. IEEE Trans. Wirel. Commun. 2013, 12, 996–1005. [CrossRef]\n237.\
    \ Swathi, S.; Santhanam, S.M. An efﬁcient MI waveguide based underground wireless\
    \ communication\nfor smart irrigation. In Proceedings of the 14th IEEE India Council\
    \ International Conference (INDICON),\nRoorkee, India, 15–17 December 2017; pp.\
    \ 1–6.\n238. Kulkarni, A.; Kumar, V.; Dhok, S.B. Enabling technologies for range\
    \ enhancement of MI based wireless\nnon-conventional media communication. In Proceedings\
    \ of the 9th International Conference on Computing,\nCommunication and Networking\
    \ Technologies (ICCCNT), Bangalore, India, 10–12 July 2018; pp. 1–7.\n239. Kisseleff,\
    \ S.; Gerstacker, W.; Sun, Z.; Akyildiz, I.F. On the throughput of wireless underground\
    \ sensor\nnetworks using magneto-inductive waveguides.\nIn Proceedings of the\
    \ IEEE Global Communications\nConference (GLOBECOM), Atlanta, GA, USA, 9–13 December\
    \ 2013; pp. 322–328.\n240. Lin, S.C.; Akyildiz, I.F.; Wang, P.; Sun, Z. Optimal\
    \ energy-throughput efﬁciency for magneto-inductive\nunderground sensor networks.\
    \ In Proceedings of the IEEE International Black Sea Conference on\nCommunications\
    \ and Networking (BlackSeaCom), Odessa, Ukraine, 27–30 May 2014; pp. 22–27.\n\
    241. Trang, H.T.H.; Hwang, S.O. Connectivity analysis of underground sensors in\
    \ wireless underground sensor\nnetworks. Ad Hoc Netw. 2018, 71, 104–116. [CrossRef]\n\
    242. Kisseleff, S.; Akyildiz, I.F.; Gerstacker, W. Interference polarization in\
    \ magnetic induction based wireless\nunderground sensor networks. In Proceedings\
    \ of the IEEE 24th International Symposium on Personal,\nIndoor and Mobile Radio\
    \ Communications (PIMRC Workshops), London, UK, 8–9 September 2013;\npp. 71–75.\n\
    243. Guo, H.; Sun, Z. Full-duplex metamaterial-enabled magnetic induction networks\
    \ in extreme environments.\nIn Proceedings of the IEEE INFOCOM 2018-IEEE Conference\
    \ on Computer Communications, Honolulu, HI,\nUSA, 16–19 April 2018; pp. 558–566.\n\
    244. Paul, A.K.; Sato, T. Localization in wireless sensor networks: A survey on\
    \ algorithms, measurement\ntechniques, applications and challenges. J. Sens. Actuator\
    \ Netw. 2017, 6, 24. [CrossRef]\n245. Saeed, N.; Celik, A.; Al-Naffouri, T.Y.;\
    \ Alouini, M.S. Underwater optical sensor networks localization with\nlimited\
    \ connectivity. In Proceedings of the IEEE International Conference on Acoustics,\
    \ Speech and Signal\nProcessing (ICASSP), Calgary, AB, Canada, 15–20 April 2018;\
    \ pp. 3804–3808.\n246. Markham, A.; Trigoni, N.; Ellwood, S.A.; Macdonald, D.W.\
    \ Revealing the hidden lives of underground\nanimals using magneto-inductive tracking.\n\
    In Proceedings of the 8th ACM Conference on Embedded\nNetworked Sensor Systems,\
    \ Zurich, Switzerland, 3–5 November 2010; pp. 281–294.\n247. Markham, A.; Trigoni,\
    \ N.; Macdonald, D.W.; Ellwood, S.A. Underground localization in 3-D using\nmagneto-inductive\
    \ tracking. IEEE Sens. J. 2011, 12, 1809–1816. [CrossRef]\n248. Abrudan, T.E.;\
    \ Kypris, O.; Trigoni, N.; Markham, A. Impact of rocks and minerals on underground\n\
    magneto-inductive communication and localization. IEEE Access 2016, 4, 3999–4010.\
    \ [CrossRef]\n249. Lin, S.C.; Alshehri, A.A.; Wang, P.; Akyildiz, I.F. Magnetic\
    \ induction-based localization in randomly\ndeployed wireless underground sensor\
    \ networks. IEEE Internet Things J. 2017, 4, 1454–1465. [CrossRef]\n250. Tian,\
    \ W.; Yang, W. Analytical model of transmission distance for magnetic induction\
    \ through-the-earth\ncommunication under the beacon mode. J. China Univ. Min.\
    \ Technol. 2018, 47, 1368–1377.\n251. ul Haq, M.I.; Kim, D. Improved localization\
    \ by time of arrival for Internet of Things in 3D. In Proceedings\nof the 22nd\
    \ International Conference on Applied Electromagnetics and Communications (ICECOM),\n\
    Dubrovnik, Croatia, 19–21 September 2016; pp. 1–5.\n252. Saeed, N.; Nam, H. Robust\
    \ multidimensional scaling for cognitive radio network localization. IEEE Trans.\n\
    Veh. Technol. 2014, 64, 4056–4062. [CrossRef]\n253. Saeed, N.; Nam, H.\nCluster\
    \ based multidimensional scaling for irregular cognitive radio networks\nlocalization.\
    \ IEEE Trans. Signal Process. 2016, 64, 2649–2659. [CrossRef]\n254. Saeed, N.;\
    \ Nam, H. Energy efﬁcient localization algorithm with improved accuracy in cognitive\
    \ radio\nnetworks. IEEE Commun. Lett. 2017, 21, 2017–2020. [CrossRef]\n255. Dersan,\
    \ A.; Tanik, Y. Passive radar localization by time difference of arrival. In Proceedings\
    \ of the MILCOM\n2002. Proceedings, Anaheim, CA, USA, 7–10 October 2002; Volume\
    \ 2, pp. 1251–1257.\n256. Ansari, A.R.; Saeed, N.; Haq, M.I.U.; Cho, S. Accurate\
    \ 3D localization method for public safety applications\nin vehicular ad-hoc networks.\
    \ IEEE Access 2018, 6, 20756–20763. [CrossRef]\nSmart Cities 2020, 3\n1559\n257.\
    \ Saeed, N.; Alouini, M.S.; Al-Naffouri, T.Y. On achievable accuracy of localization\
    \ in magnetic induction-based\ninternet of underground things for oil and gas\
    \ reservoirs. arXiv 2019, arXiv:1901.09556.\n258. Markham, A.; Trigoni, N. Magneto-inductive\
    \ networked rescue system (miners) taking sensor networks\nunderground. In Proceedings\
    \ of the 11th International Conference on Information Processing in Sensor\nNetworks,\
    \ New York, NY, USA, 16–19 April 2012; pp. 317–328.\n259. Huang, Q.; Zhang, X.;\
    \ Ma, J. Underground magnetic localization method and optimization based on\n\
    simulated annealing algorithm. In Proceedings of the IEEE 12th Intl Conf on Ubiquitous\
    \ Intelligence and\nComputing and IEEE 12th Intl Conf on Autonomic and Trusted\
    \ Computing and IEEE 15th Intl Conf on\nScalable Computing and Communications\
    \ and Its Associated Workshops (UIC-ATC-ScalCom), Beijing,\nChina, 10–14 August\
    \ 2015; pp. 168–173.\n260. Huang, H.; Zheng, Y.R. 3-D localization of wireless\
    \ sensor nodes using near-ﬁeld magnetic-induction\ncommunications. Phys. Commun.\
    \ 2018, 30, 97–106. [CrossRef]\n261. Abrudan, T.E.; Xiao, Z.; Markham, A.; Trigoni,\
    \ N. Underground incrementally deployed magneto-inductive\n3-D positioning network.\
    \ IEEE Trans. Geosci. Remote Sens. 2016, 54, 4376–4391. [CrossRef]\n262. Kisseleff,\
    \ S.; Chen, X.; Akyildiz, I.F.; Gerstacker, W. Localization of a silent target\
    \ node in magnetic induction\nbased wireless underground sensor networks. In Proceedings\
    \ of the IEEE International Conference on\nCommunications (ICC), Paris, France,\
    \ 21–25 May 2017; pp. 1–7.\n263. Kisseleff, S.; Chen, X.; Akyildiz, I.F.; Gerstacker,\
    \ W.H. Efﬁcient charging of access limited wireless\nunderground sensor networks.\
    \ IEEE Trans. Commun. 2016, 64, 2130–2142. [CrossRef]\n264. Alshehri, A.A.; Lin,\
    \ S.C.; Akyildiz, I.F. Optimal energy planning for wireless self-contained sensor\
    \ networks\nin oil reservoirs. In Proceedings of the IEEE International Conference\
    \ on Communications (ICC), Paris,\nFrance, 21–25 May 2017; pp. 1–7.\n265. Algeroy,\
    \ J.; Lovell, J.; Tirado, G.; Meyyappan, R.; Brown, G.; Greenaway, R.; Carney,\
    \ M.; Meyer, J.H.;\nDavies, J.E.; Pinzon, I.D. Permanent monitoring: Taking it\
    \ to the reservoir. Oilﬁeld Rev. 2010, 22, 34–41.\n266. Mijarez, R.; Pascacio,\
    \ D.; Guevara, R.; Pacheco, O.; Tello, C.; Rodríguez, J.\nCommunication system\n\
    for down-hole measurement tools based on real-time SNR characterization in coaxial\
    \ cable used as\ncommunication channel. Addit. Pap. Present. 2013, 2013, 000174–000183.\
    \ [CrossRef]\n267. Baldwin, C. Fiber optic sensors in the oil and gas industry:\n\
    Current and future applications.\nIn Opto-Mechanical Fiber Optic Sensors; Elsevier:\
    \ Amsterdam, The Netherlands, 2018; pp. 211–236.\n268. Kragas, T.K.; Williams,\
    \ B.A.; Myers, G.A. The optic oil ﬁeld: Deployment and application of permanent\n\
    in-well ﬁber optic sensing systems for production and reservoir monitoring. In\
    \ Proceedings of the SPE\nAnnual Technical Conference and Exhibition, New Orleans,\
    \ Louisiana, 30 September–3 October 2001.\n269. Kersey, A.D. Optical ﬁber sensors\
    \ for permanent downwell monitoring applications in the oil and gas\nindustry.\
    \ IEICE Trans. Electron. 2000, 83, 400–404.\n270. Nellen, P.M.; Mauron, P.; Frank,\
    \ A.; Sennhauser, U.; Bohnert, K.; Pequignot, P.; Bodor, P.; Brändle, H.\nReliability\
    \ of ﬁber Bragg grating based sensors for downhole applications. Sens. Actuators\
    \ A Phys. 2003,\n103, 364–376. [CrossRef]\n271. Zhou, X.; Yu, Q.; Peng, W. Simultaneous\
    \ measurement of down-hole pressure and distributed temperature\nwith a single\
    \ ﬁber. Meas. Sci. Technol. 2012, 23, 085102. [CrossRef]\n272. Wu, H.; Guo, Y.;\
    \ Xiong, L.; Liu, W.; Li, G.; Zhou, X.\nOptical Fiber-Based Sensing, Measuring,\n\
    and Implementation Methods for Slope Deformation Monitoring: A Review. IEEE Sens.\
    \ J. 2019, 19, 2786–2800.\n[CrossRef]\n273. Zhang, Y.; Ning, J.; Yang, S.; Cui,\
    \ H.L. Field test investigation of ﬁber optic seismic geophone in oilﬁeld\nexploration.\
    \ In Proceedings of the Fiber Optic Sensors and Applications V, Boston, MA, USA,\
    \ 12 October\n2007; International Society for Optics and Photonics: Boston, MA,\
    \ USA; Volume 6770, p. 677005.\n274. Prevedel, B.; Bulut, F.; Bohnhoff, M.; Raub,\
    \ C.; Kartal, R.F.; Alver, F.; Malin, P.E. Downhole geophysical\nobservatories:\
    \ Best installation practices and a case history from Turkey. Int. J. Earth Sci.\
    \ 2015, 104, 1537–1547.\n[CrossRef]\n275. Kisseleff, S.; Sackenreuter, B.; Akyildiz,\
    \ I.F.; Gerstacker, W. On capacity of active relaying in magnetic\ninduction based\
    \ wireless underground sensor networks. In Proceedings of the IEEE International\
    \ Conference\non Communications (ICC), London, UK, 8–12 June 2015; pp. 6541–6546.\n\
    276. Salam, A.; Raza, U. Underground Wireless Channel Bandwidth and Capacity,\
    \ 1st ed.; Springer Nature: London,\nUK, 2020. [CrossRef]\nSmart Cities 2020,\
    \ 3\n1560\n277. Pathak, V.; Kumar, V.; Barik, R.K. Magnetic induction communication\
    \ based transceiver coil and waveguide\nstructure modeling for non-conventional\
    \ WSNs. In Proceedings of the 9th International Conference on\nComputing, Communication\
    \ and Networking Technologies (ICCCNT), Bangalore, India, 10–12 July 2018;\npp.\
    \ 1–7.\n278. Salam, A.; Raza, U. Soil Moisture and Permittivity Estimation, 1st\
    \ ed.; Springer Nature: London, UK, 2020.\n[CrossRef]\n279. Roman, R.; Najera,\
    \ P.; Lopez, J. Securing the internet of things. Computer 2011, 44, 51–58. [CrossRef]\n\
    280. Salam, A.; Raza, U. Decision Agriculture, 1st ed.; Springer Nature: London,\
    \ UK, 2020.\n281. Evans, D.; Eyers, D.M. Efﬁcient data tagging for managing privacy\
    \ in the internet of things. In Proceedings\nof the IEEE International Conference\
    \ on Green Computing and Communications, Besancon, France,\n20–23 November 2012;\
    \ pp. 244–248.\n282. Garcia-Morchon, O.; Keoh, S.L.; Kumar, S.; Moreno-Sanchez,\
    \ P.; Vidal-Meca, F.; Ziegeldorf, J.H. Securing the\nIP-based internet of things\
    \ with HIP and DTLS. In Proceedings of the Sixth ACM Conference on Security\n\
    and Privacy in Wireless and Mobile Networks, New York, NY, USA, 17–19 April 2013;\
    \ pp. 119–124.\n283. Sicari, S.; Rizzardi, A.; Grieco, L.A.; Coen-Porisini, A.\
    \ Security, privacy and trust in Internet of Things:\nThe road ahead. Comput.\
    \ Netw. 2015, 76, 146–164. [CrossRef]\n284. Salam, A.; Raza, U. Signals in the\
    \ Soil: Underground Antennas, 1st ed.; Springer Nature: London, UK, 2020.\n285.\
    \ Salam, A.; Raza, U. Current Advances in Internet of Underground Things, 1st\
    \ ed.; Springer Nature: London, UK,\n2020. [CrossRef]\n286. Gharbieh, M.; ElSawy,\
    \ H.; Bader, A.; Alouini, M.S. Spatiotemporal stochastic modeling of IoT enabled\n\
    cellular networks: Scalability and stability analysis. IEEE Trans. Commun. 2017,\
    \ 65, 3585–3600. [CrossRef]\n287. Li, M.; Liu, Y. Underground structure monitoring\
    \ with wireless sensor networks. In Proceedings of the 6th\nInternational Symposium\
    \ on Information Processing in Sensor Networks, Cambridge, MA, USA, 25–27 April\n\
    2007; pp. 69–78.\n288. Vresk, T.; ˇCavrak, I. Architecture of an interoperable\
    \ IoT platform based on microservices. In Proceedings\nof the 39th International\
    \ Convention on Information and Communication Technology, Electronics and\nMicroelectronics\
    \ (MIPRO), Opatija, Croatia, 30 May–3 June 2016; pp. 1196–1201.\n289. Tooker,\
    \ J.; Vuran, M.C. Mobile data harvesting in wireless underground sensor networks.\
    \ In Proceedings of\nthe 9th Annual IEEE Communications Society Conference on\
    \ Sensor, Mesh and Ad Hoc Communications\nand Networks (SECON), Seoul, South Korea,\
    \ 18–21 June 2012; pp. 560–568.\n290. Luo, D.; Qiu, T.; Deonauth, N.; Zhao, A.\
    \ A small world model for improving robustness of heterogeneous\nnetworks. In\
    \ Proceedings of the IEEE Global Conference on Signal and Information Processing\
    \ (GlobalSIP),\nOrlando, FL, USA, 14–16 December 2015; pp. 849–852.\n291. Chen,\
    \ L.; Thombre, S.; Järvinen, K.; Lohan, E.S.; Alén-Savikko, A.; Leppäkoski, H.;\
    \ Bhuiyan, M.Z.H.;\nBu-Pasha, S.; Ferrara, G.N.; Honkala, S.; et al. Robustness,\
    \ security and privacy in location-based services\nfor future IoT: A survey. IEEE\
    \ Access 2017, 5, 8956–8977. [CrossRef]\n292. Kennedy, G.A.; Foster, P.J. High\
    \ resilience networks and microwave propagation in underground mines.\nIn Proceedings\
    \ of the European Conference on Wireless Technology, Manchester, UK, 10–12 September\
    \ 2006;\npp. 193–196.\n293. Salam, A.; Raza, U. Signals in the Soil, 1st ed.;\
    \ Springer Nature: London, UK, 2020.\n294. Akyildiz, I.F.; Wang, P.; Lin, S.C.\
    \ SoftWater: Software-deﬁned networking for next-generation underwater\ncommunication\
    \ systems. Ad Hoc Netw. 2016, 46, 1–11. [CrossRef]\n295. Puente Fernández, J.A.;\
    \ García Villalba, L.J.; Kim, T.H. Software deﬁned networks in wireless sensor\n\
    architectures. Entropy 2018, 20, 225. [CrossRef]\n296. Salam, A.; Vuran, M.C.;\
    \ Irmak, S. A Statistical Impulse Response Model Based on Empirical Characterization\n\
    of Wireless Underground Channel. IEEE Trans. Wirel. Commun. 2020, 19. [CrossRef]\n\
    297. Hajirahimova, M.S. Opportunities and challenges big data in oil and gas industry.\
    \ In Proceedings of the\nNational Supercomputer Forum (NSKF 2015), Russia, Pereslavl-Zalesskiy,\
    \ 2015; pp. 24–27.\n298. Atzori, L.; Iera, A.; Morabito, G. The internet of things:\
    \ A survey. Comput. Netw. 2010, 54, 2787–2805.\n[CrossRef]\n299. Perera, C.; Zaslavsky,\
    \ A.; Christen, P.; Georgakopoulos, D. Context aware computing for the internet\
    \ of\nthings: A survey. IEEE Commun. Surv. Tutor. 2013, 16, 414–454. [CrossRef]\n\
    Smart Cities 2020, 3\n1561\n300. Perrons, R.K.; Hems, A. Cloud computing in the\
    \ upstream oil & gas industry: A proposed way forward.\nEnergy Policy 2013, 56,\
    \ 732–737.\nPublisher’s Note: MDPI stays neutral with regard to jurisdictional\
    \ claims in published maps and institutional\nafﬁliations.\n© 2020 by the authors.\
    \ Licensee MDPI, Basel, Switzerland. This article is an open access\narticle distributed\
    \ under the terms and conditions of the Creative Commons Attribution\n(CC BY)\
    \ license (http://creativecommons.org/licenses/by/4.0/).\n"
  inline_citation: '>'
  journal: Smart cities (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2624-6511/3/4/72/pdf?version=1608092206
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on Subsurface Signal Propagation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icoei.2018.8553681
  analysis: '>'
  authors:
  - Deepti Sehrawat
  - Nasib Singh Gill
  citation_count: 7
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2018 2nd International Confer... Security
    Requirements of IoT Applications in Smart Environment Publisher: IEEE Cite This
    PDF Deepti Sehrawat; Nasib Singh Gill All Authors 5 Cites in Papers 262 Full Text
    Views Abstract Document Sections I. Introduction II IoT Applications III. Security
    Analysis of IoT Applications Conclusion Authors References Citations Keywords
    Metrics Abstract: The “Internet of Things” is providing a virtual view of real
    life things including living things and non-living things. IoT is guiding in varied
    areas of smart environment and applications to deal with the challenges faced
    by individuals and organizations in daily life. Whether it may be at home or at
    offices, our life is changing tremendously. This paper presents some application
    areas of IoT that are changing our life. Participation of numerous things in IoT,
    in near future, will be much higher than the participating person. Data is shared
    in this heterogeneous environment via. low distance communicating devices. This
    huge data over the network includes sensitive and private data also which requires
    proper attention and security enhancement mechanisms. This paper also presents
    the need of security mechanisms in IoT applications. Latest research work in the
    IoT scenario to identify security requirements of ongoing IoT applications is
    presented in this paper. Published in: 2018 2nd International Conference on Trends
    in Electronics and Informatics (ICOEI) Date of Conference: 11-12 May 2018 Date
    Added to IEEE Xplore: 02 December 2018 ISBN Information: DOI: 10.1109/ICOEI.2018.8553681
    Publisher: IEEE Conference Location: Tirunelveli, India SECTION I. Introduction
    IoT is playing a key role in everyone''s life by automating things to communicate
    in a network. IoT is not a single technology, it is a convergence of several new
    technologies that take part in the success of IoT. I0T is improving our life by
    providing enormous facilities everywhere. Participating things in IoT are not
    only the living things that communicate but it also involves the active participation
    of all non-living things which shares information over the network. This is made
    possible with the involvement of wireless technologies like RFID, sensor nodes,
    WiFi, GPS-enables devices, Bluetooth. IoT is marking its presence in almost every
    aspect of life including its broad applications in agriculture, business, transportation,
    medical services, government services, and etc. Agriculture equipment guided by
    GPS, tracking can be used for fertilization and crop harvesting. Fitness trackers
    communicate with their health care from anywhere, anytime. Inclusion of people,
    things, places, and processes will make IoT a multitrillion dollar industry in
    the near future. Authors in [1] presented a new innovative technique to share
    information efficiently by considering a social network in smart IoT environment.
    RFID “Radio Frequency Identification System (RFID)” assist in identifying objects
    and recording metadata using radio waves. RFID reader, when connected to the Internet
    terminal, can automatically and globally identify, track and monitor the objects
    in real time. So, RFID is considered a prerequisite for the IoT [2]. The need
    of a new and promising IoT architecture has been identified by a number of researchers
    which fulfills the need of interoperability among IoT entities for smart control
    and actuation [3]. One such framework is presented by the authors in [4] for understanding
    smart cities concept through IoT deployment. The proposed framework consists entire
    urban information system from the sensory level and networking support structure
    through to data management and Cloud-based integration of respective systems and
    services. Growing IoT paradigm demands to share IoT data and its services by complying
    with the social interactions. This brings a new paradigm Social IoT (SIoT). Authors
    in [5] presented a SIoT paradigm to allow integrated working of different smart
    devices within a social framework which is represented by an ecosystem. Key aspects
    of SIoT consists the social role, intelligence, socialized devices, and everything
    as a service. IoT security covers numerous responsibilities like an establishment
    of access control policies, protecting keys through hardware and software security
    mechanisms, installing keying material during device manufacturing and provisioning
    new addition at a later stage [6]. A platform is provided by Microsoft''s Eye-On-Earth
    aims to detect climate change by observing water and air quality of various European
    countries [7]. Smart security and surveillance of people, spaces, assets, infrastructure
    and other IoT enabled devices is getting popularity. It is useful for academia,
    government, and industries. Several international organizations are taking part
    in the success of IoT [8]. Authors in [9] proposed a wearable monitoring system
    to monitor the physiological parameters of a patient and also monitors activities
    in the hospital. In an emergency case, an alert system gives notification and
    data is sent to the doctors/ relative via a twitter account. A similar study in
    [10] proposed a wearable smart shoe insole to monitor pressure, temperature and
    humidity and the data are stored in a secure cloud. A hand-held device connects
    the shoe insole to provide the user a complete personalized health monitoring
    solution. A smart university campus is proposed by the authors in [11] to make
    smart rooms, smart parking and smart education a reality. The rest of the paper
    is structured as follows: Section II presents important and evolving application
    areas in IoT. This paper examines the need of security in various IoT application
    areas and provides various security issues related to these applications in section
    3 followed by a conclusion. SECTION II IoT Applications A. Personal and Home For
    better and enhanced management of the home, IoT is facilitating different home
    equipment like refrigerators, lights, air-conditioners, washing machines, televisions,
    etc. Only individuals who are owners of the network are allowed to use the information
    collected by sensors. WiFi is normally used as the backbone to enable data transfer
    (audio/ video/ sound) of high bandwidth and higher sampling rates. For communication,
    smartphones along with some interfaces such as Bluetooth can be used for interfacing
    sensors capturing physiological parameters. An intelligent door system named ADXL
    345 accelerometer is presented by the authors in [12]. This system notifies the
    intrusion to the owner by sending notification through emails. This task is accomplished
    by accumulating intrusion data logs into google spreadsheet of owner''s google
    drive account. ADXL345 accelerometer senses any change in the door''s motion and
    sensor intrusion data is communicated to (AWS IoT) “Amazon Web Services Internet
    of Things” console after reading by “raspberry pi”. AWS SNS “Simple Notification
    Service” then communicate email notification to the concerned owner based on the
    AWS IoT console message. In a smart microgrid system, battery monitoring system
    can be used for performance monitoring of batteries. IoT enabled system comprises
    communication channel, cloud system, and HMI “Human Machine Interface” [13]. B.
    Smart Health Monitoring From last two decades, global healthcare is marking its
    presence through smart health. IoT is providing a platform for smart health vision
    by using body area sensors. Healthcare domain in benefited by various IoT applications
    including patients monitoring and tracking, staff tracking, identifying medical
    equipment and collecting data [14]. RFIDLocator, a web-based application uses
    RFID technology to provide services to smart health enabled hospitals. RFID tags
    are embedded in medical equipment for monitoring of the patients; wore by staff
    members to store their employee ID number; wore by patients to stores their ID
    and monitor their activities and conditions. All other objects have self-adhesive
    RFID label having unique identifier [15]. In the near future, heart rate monitoring
    in smart health has definite prospective to develop in the near future [16]. In
    m-Health, the human error rate is reduced with the introduction of sensors and
    it uses alarms for providing facility to prescribe medicines in time [17]. A Marie
    Curie project, WSN4QoL proposes new WSN-based technologies in smart healthcare
    applications. A network coding (NC mechanism) along with distributed localization
    solution is included on WSN testbeds for tracking and communication purpose. The
    architecture of WSN4QoL is three-tier where lowest layer deals with Bluetooth
    enabled wireless body area network (WBAN) sensor nodes which are connected to
    a local collector, which sequentially aims to report the measurements to a gateway
    over an IEEE 802.15.4 based Zig-Bee network. Finally, it is the gateway which
    computes the data and forwards it to the public IP network for real time analysis
    towards the trained caretakers [18]. NIGHTCare is a platform for remote monitoring.
    It can control overnight living environment by monitoring the activities. The
    proposed model uses RFID passive technology and generates automatic alarms when
    found any anomalous or pathological events and thereby supports diagnostics. It
    deploys wearable tags integrated into patient''s clothes and ambient tags mounted
    on walls and beds for remote monitoring of children, elderly people, disabled
    people and nocturnal behaviors [19]. IoT based u-healthcare monitoring architecture
    with the motivation and advantages of Cloud to Fog (C2F) computing interacts more
    by serving closer to the edge (endpoints) at smart Homes and Hospitals [20]. A
    similar study in [21] introduced a smart heathcare system operating through BSN
    architecture. It is a secure model which realize efficiency and robustness by
    utilizing robust crypto algorithms for confidentiality and entity authentication
    of objects. Raspberry PI platform is used for the implementation of the proposed
    system [22]. A new concept of 4G health for advanced future applications by combining
    the functionalities of IoT and m-health (m-IoT) is presented by the authors in
    [23]. m-IoT has its benefits in non-invasive glucose level sensing and diabetes
    management in a diverse connectivity environment from the mobile healthcare perception.
    Additionally, this allows new communication connectivity routes between mobile
    patients and care services through advanced IP based networking architectures
    [23]. An effective health monitoring system is proposed to monitor the avant-garde
    position of client independent nearness of the specialist. The system monitors
    patient''s heat, circulatory strain, and pulse rate and refreshes the similarity
    to the specialist [24]. A low-cost smart health model for rural health monitoring
    is presented in [25]. It uses the concepts like live video streaming, chat boxes,
    automatic prescription generations. In 2016, Prognostics and systems Health Management
    (PHM) was proposed in which sensors are used for the diagnosis of health parameters/
    anomalous behaviors [26]. Authors in [27] presented a robust wireless network
    for tracking and monitoring patient''s location and physical status. For this
    static nodes are placed at specified locations in hospital premises. Small sized
    Fleck Nano wireless sensor was implemented in the localization network for mobile
    inertial movement sensing [27]. Three types of nodes are used, these are: •: Static
    NodesMounted at specified positions in hospital premises •: Mobile NodesTo localize
    the current position of the patient and their motion activity (Running, Walking
    and etc.). •: Base NodesUsed to display the current position of the mobile nodes.
    C. Smart City Concept and Services Urban IoT with the help of sensors in buildings
    can provide distributed database of building structural integrity measurements.
    Sensors can measure building stress, vibrations, atmospheric pollution, temperature
    and humidity in a particular location. This provides a way for positive maintenance
    and renovation plans and actions for smart city. This reduces the effort, time,
    money of the human operations and provides best possible solutions [28]. For smart
    city development, IoT is introduced from three different domains: first “network-centric
    IoT” corresponding to communications; second “Cloud-centric IoT” analogous to
    management and third which is related to computation requirements is “Data-Centric
    IoT” [4]. Structural Health of Buildings Better study and understanding of particular
    area can be provided by the means of recording vibrations and seismic readings
    for detecting impact of earthquakes of different intensity on a particular building.
    This information can be stored in databases provides a means of preventing historical
    heritage and valuable life of people. It can be implemented by attaching sensors
    to the buildings for which data is required [28]. Waste Management Use of intelligent
    and smart waste containers provides optimized waste collection by providing load
    detection and route information to the waste collectors, it also helps in the
    reduction of the overall cost of waste collection and provides better waste recycling.
    Air Quality and Noise Monitoring It is very beneficial to provide air quality
    and noise pollution. Urban city utilizing IoT services can provide information
    about crowded places in the city. A pollution and noise monitoring system is provided
    by the authors in [29] which monitors the pollution and noise level of a vehicle
    and if the observed value crosses its threshold then the report is communicated
    to the traffic department. Traffic Congestion The problems related to traffic
    congestion is solved by monitoring traffic along a given road. Sensors embedded
    vehicles and GPS serves main role in this area. By adopting acoustic sensors along
    with air quality is also useful for such applications. The information collected
    from sensors is of great importance especially to the citizens and authorities
    [28]. City Energy Consumption Energy consumption of a city can be measured by
    utilizing smart IoT services which as a result provides a blueprint of the information
    about energy requirements of different services and accordingly plans can be made
    for their optimal use [28]. Smart Parking This smart city facility provides benefits
    in the form of faster time for locating parking slots for vehicle parking in crowded
    places. By providing sensors on roads along with intelligent displays, the driver
    can be directed along best path. This faster parking facility reduces the emission
    of harmful CO and as a result proving low polluted areas. Water Scarcity Monitoring
    IoT is very useful to detect water scarcity with the help of sensor networks.
    Using significant simulation activities it is possible to monitor longterm water
    interventions and to alert about accidental streams like sewage discharge backward.
    It can also forecast the occurrence of natural disasters like landslides and accordingly
    preventive measures can be taken [8]. Smart Shopping Anywhere, anytime concept
    of IoT will it possible to create a virtual shopping scenario. One can connect
    at home network through mobile device sitting at another place and by connecting
    to the home camera, can take pictures of the rooms. Then online shopping can be
    done according to your requirements of home by matching different items. This
    will make IoT an established part of life [30]. D. Smart Mobile Smart mobile is
    a term related to smart transportation and smart logistics. This IoT application
    requires data sharing and backbone implementation and this is the reason for placing
    this in a separate domain. Traffic congestion, air pollution and noise pollution
    are of major concern under this IoT domain which may otherwise also degrade the
    quality of air and are responsible for greenhouse gas emission. Mobile IoT application
    allows to monitor the vehicles and items being transported for optimized and low
    cost transportation by providing traffic information. Traffic congestion mainly
    impact efficiency, productivity and just-in-time operations of supply chain, as
    a result causing freight delays and failure in the delivery schedules. If traffic
    information can be provided dynamically, it can allow better and improved planning.
    The IoT is expected to substitute the traffic information which is provided by
    the sensor networks of inductive loop vehicle detectors employed at the intersections
    of existing traffic control systems [28]. E. Smart Agriculture Communication infrastructures
    utilizing some information sharing like messaging can inform farmers about pest
    control mechanisms, good quality, and best price fertilizers, smart seeds packaging
    and information about land portion requiring specific considerations. These are
    all specific to local conditions and requirements and specify actions. Sensors
    in the network can gather information by sensing different conditions followed
    by data processing. This information can be provided to farmers for further actions
    to be performed that help the farmers in their agriculture task. Intelligent farming
    system assists in better understanding different plant growth models and increases
    the productivity of agriculture [8]. Some progressive WSN technologies have been
    established in this area of farming especially for environmental monitoring, farm
    machinery, pest control, animal tracking, viticulture, precision irrigation, greenhouse,
    food traceability, precision livestock, supply chain management, cold chain monitoring,
    etc. [31]. Authors in [32] used the raspberry pi microcontroller with sensors
    and proposed a smart IoT based agriculture solution which monitors temperature,
    humidity, soil moisture, rainfall, soil pH, seed recognition and etc. A drone
    aided with IoT concepts can also be used to provide smart agriculture solutions
    [33]. Automatic watering plants by using IoT is introduced by the authors in [34]
    for vertical farming. Soil moisture sensors are used to detect the moisture in
    the soil and accordingly watering the plants from anywhere is made possible. F.
    Smart Earth Worldwide, earth monitoring and environmental monitoring are gaining
    interest and is challenging too. This is because of harsh operating conditions
    and high cost and difficulty in the deployment and maintenance [35]. Rigorous
    requirements of IoT applications in the form of a huge number of participating
    nodes, low cost, long unattended service time, ease of deployment, low maintenance,
    make these generic Wireless Sensor Network platforms less suitable. SECTION III.
    Security Analysis of IoT Applications Continuously evolving IoT applications can
    change the shape of the Internet by providing huge economic benefits but simultaneously
    is facing various challenges in terms of security, privacy, sufficient spectrum,
    scale and complexity as it connects numerous tagged objects [8]. After analyzing
    various IoT applications in different areas, some key challenges that are observed
    are discussed here: A. Standardization For better interoperability of objects
    in IoT based applications, it is required to provide standardization of IoT devices.
    Because devices based on particular technology or services may not be interoperable.
    B. Privacy The IoT is utilizing various wireless technologies for communications
    and uses different object identification technologies. Subsequently, daily use
    objects have identification tags and communicate object specific information,
    so it becomes important to consider suitable privacy measures and prevent unauthorized
    access. C. Objects Safety and Security The IoT consists of a numerous perception
    objects so it becomes necessary to provide sufficient safety mechanisms and security
    to the objects to prevent them from intruder''s access which otherwise can cause
    physical damage or may alter their action. D. Network Security Network security
    in terms of preventing data loss resulting from network congestion and external
    interference is required as a huge number of sensor devices are communicating
    over wired or wireless transmission network. E. Secure Data Storage Independent
    sensing is performed by different participating sensor devices. The captured information
    is transferred to the information processing unit. Sensor devices should provide
    sufficient encryption mechanism for data confidentiality, and integrity at information
    processing unit. F. Tamper Resistance It is required to maintain security requirements
    even if a device fails to protect data and it goes into the hands of malicious
    intruders and can be physically or logically probed. G. Dynamic Cognitive Spectrum
    Participation of wireless communication requires dedicated spectrum for different
    participating sensor devices to transmit data over the wireless medium. Because
    of limited spectrum handiness, there is a need for an effective dynamic cognitive
    spectrum allocation mechanism which enables communication among billions of sensors
    over the wireless medium. H. Iot Greening In near future, IoT enabled applications
    will involve the huge participation of IoT devices resulting in an increase in
    network energy consumption at a high rate. As a result, there is a need for adoption
    of green technologies so to make network devices energy efficient. With the rapid
    development of IoT technology, there are some challenges that the IoT is facing
    in order to create a smart environment. Using strong security features in constraint
    IoT environment requires sufficient resource consumption which is not available
    in IoT embedded devices. This is because IoT enabled devices have low computation
    power, limited processing, limited battery capacity, limited storage, a high number
    of sensors, low maintenance, fast deployment, long lifeline, high service quality
    and etc. Using traditional cryptography is extremely expensive and requires lightweight
    cryptographic algorithms for such devices. Conclusion IoT is marking its presence
    in almost all the areas including smart home, smart health, smart city, smart
    business, smart agriculture, smart earth and etc. Security in IoT applications
    is application specific and varies from one application to another. Main underlying
    problem is the absence of a correct solution. There is a need for standardizing
    some security mechanism for IoT applications. Also, IoT environment mainly relies
    on wireless network and constraint devices so an attacker can gain access to information
    more easily. Furthermore, complexity and size of various algorithms and protocols
    result in expensive security solutions. This heterogeneous IoT environment needs
    standardized interoperable security protocols for successful deployment of IoT
    applications that run across all platforms. For a flexible infrastructure, in-built
    security is required in the devices itself so as to provide dynamic prevention,
    detection, diagnosis, isolation, and countermeasures against successful breaches.
    Authors References Citations Keywords Metrics More Like This Body temperature
    measurement for remote health monitoring system 2013 IEEE International Conference
    on Smart Instrumentation, Measurement and Applications (ICSIMA) Published: 2013
    Wearable Capacitive Patches for Data Fusion in Biomedical Monitoring & Physical
    Activity 2019 IEEE 62nd International Midwest Symposium on Circuits and Systems
    (MWSCAS) Published: 2019 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: 2018 2nd International Conference on Trends in Electronics and Informatics
    (ICOEI)
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Security Requirements of IoT Applications in Smart Environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s20092701
  analysis: '>'
  authors:
  - Sami Yangui
  citation_count: 10
  full_citation: '>'
  full_text: '>

    sensors

    Article

    A Panorama of Cloud Platforms for IoT Applications

    Across Industries

    Sami Yangui

    LAAS-CNRS, Université de Toulouse, INSA, 31400 Toulouse, France; yangui@laas.fr

    Received: 2 March 2020; Accepted: 7 May 2020; Published: 9 May 2020

    Abstract: Internet of Things (IoT) applications can play a critical role in business
    and industry.

    Industrial IoT (IIoT) refers to the use of IoT technologies in manufacturing.
    Enabling IIoT applications

    in cloud environments requires the design of appropriate IIoT Platform as-a-Service
    (IIoT PaaS) to

    support and ease their provisioning (i.e., development, deployment and management).
    This paper

    critically reviews the IIoT PaaS architectures proposed so far in the relevant
    literature. It only surveys

    the architectures that are suitable for IIoT applications provisioning and it
    excludes regular IoT

    solutions from its scope. The evaluation is based on a set of well-deﬁned architectural
    requirements.

    It also introduces and discusses the future challenges and the research directions.
    The critical review

    discusses the PaaS solutions that focus on the whole spectrum of IoT verticals
    and also the ones

    dealing with speciﬁc IoT verticals. Existing limitations are identiﬁed and hints
    are provided on how

    to tackle them. As critical research directions, the mechanisms that enable the
    secure provisioning,

    and IIoT PaaS interaction with virtualized IoT Infrastructure as-a-Service (IaaS)
    and fog computing

    layer are discussed.

    Keywords: cloud computing; fog computing; Internet of Things (IoT); Industrial
    IoT (IIoT);

    Platform as-a-Service (PaaS)

    1. Introduction

    Internet of Things (IoT) refers to the ever-growing pervasive network of various
    objects—such as

    Radio-Frequency IDentiﬁcation (RFID) tags, sensors, actuators, mobile phones,
    etc.—connected over

    the Internet [1]. These objects are able to interact with each other and cooperate
    with their neighbors

    through unique addressing schemes seeking to reach a common goal. The Industrial
    Internet of Things

    (IIoT), also known as the Industrial Internet, is the use of Internet of Things
    (IoT) technologies in

    manufacturing [2]. The main motivation behind the IIoT is that autonomous and
    smart machines

    are more efﬁcient than humans when it comes to the accurate capture, analysis
    and operation of

    data. From the companies side, IIoT enables the saving of time and money, supporting
    business

    intelligence efforts and understanding and reacting to the novel potential markets.
    From the end-user

    side, this emerging infrastructure of objects enable a plethora of novel applications.
    Autonomous

    transportation, robotics, supply chain traceability and healthcare are among the
    several examples.

    Obviously, efﬁciency in resources usage, scalability, elasticity and easy development
    are among the key

    requirements for such applications. Notably, cloud computing might aid in meeting
    these requirements.

    Cloud computing is an emerging model for enabling ubiquitous, convenient and on-demand
    network

    access to a shared pool of conﬁgurable computing resources. These resources should
    be swiftly

    provisioned and released with minimal management effort [3]. Cloud computing handles
    and

    delivers resources according to three predeﬁned service models: (a) Infrastructure
    as-a-Service (IaaS),

    (b) Platform as-a-Service (PaaS) and (c) Software as-a-Service (SaaS).

    Generally speaking, end-user applications, including IIoT applications, are provisioned
    in

    cloud settings using PaaS and offered as SaaS. The provisioning process consists
    of three phases:

    Sensors 2020, 20, 2701; doi:10.3390/s20092701

    www.mdpi.com/journal/sensors

    Sensors 2020, 20, 2701

    2 of 19

    (a) Developing the end-user application sources; (b) deploying them on PaaS resources;
    and (c)

    managing (including executing) the applications to optimize its performance and
    the resources

    usage [4]. Speciﬁcally, the PaaS provides the services that offer the resources
    needed to provision

    consumer-created or acquired applications implemented using programming languages,
    libraries and

    tools supported by its provider [3]. These resources are deployed in the underlying
    IaaS. The interaction

    between the PaaS and IaaS is enabled through well-deﬁned interfaces. Speciﬁcally,
    a PaaS abstracts

    the IaaS resources and offer a re-usable framework, which provides application
    platform components

    as-a-Service. Examples of components are containers and DataBase Management Systems
    (DBMS).

    Containers are the service engines necessary for applications hosting and execution.
    DBMS handle and

    manage persistent data. An example of PaaS is Cloud Foundry(www.cloudfoundry.org).
    With Cloud

    Foundry, the applications could be implemented, for instance, with Java programming
    language,

    Java Spring library and services integration tools. The interactions between Cloud
    Foundry and IaaS

    could be done via Amazon Web Services (AWS).

    This manuscript is devoted to the PaaS for IIoT applications provisioning. It
    identiﬁes evaluation

    criteria and rely on them to review and evaluate the proposed IIoT PaaS architectures
    in the relevant

    literature. It also discusses the research directions. The reader should note
    that this manuscript

    exclusively surveys IIoT PaaS architectures and excludes the regular IoT PaaS
    from its scope. Basically,

    IoT and IIoT have separate areas of interest. On one side, IIoT connects critical
    machines and

    implements systems in which failure often results in life-threatening or other
    emergency situations.

    On the other side, IoT connects consumer-level devices with low risk impact in
    case of failure and where

    breakdowns do not immediately create risky situations. In addition to that, IIoT
    is developed with the

    concept of using sophisticated and precise devices to extend existing manufacturing
    while IoT relies

    on cheap and simple smart devices to mainly improve consumer convenience. IIoT
    applications are

    intended to handle critical machines, precise devices with advanced controls and
    analytics capabilities.

    These fundamental differences make the IoT PaaS architectures and solutions not
    suitable for

    IIoT applications provisioning. This explains why emerging IoT PaaS solutions
    (e.g., Microsoft Azure

    IoT Suite, Google IoT Platform, IBM Watson IoT Platform, AWS IoT Platform and
    Cisco IoT Cloud

    Connect) are seldom used to host and execute IIoT applications. The suitable architectures
    for IIoT

    PaaS are still in their early development stages. In the literature, there are
    several papers that surveys

    the IoT cloud platforms (e.g., see [5–9]). This manuscript exclusively surveys
    the literature on PaaS

    architectures for industrial Internet. It relies on a set of IIoT use cases and
    PaaS reference architecture

    to derive the evaluation criteria. The existing IIoT PaaS are reviewed and evaluated
    in the light of

    these criteria.

    The next section introduces IIoT use cases and derives architectural requirements
    for IIoT PaaS

    with respect to the PaaS reference architecture. Section 3 reviews the works that
    propose PaaS

    supporting the whole spectrum of IoT verticals. Section 4 reviews the works that
    propose PaaS for

    speciﬁc IoT verticals (e.g., PaaS for robots and PaaS for Wireless Sensors Network).
    Section 5 is devoted

    to the synthesis and the research directions. Section 6 concludes the paper and
    presents the planned

    future work.

    2. Use Cases, Design Considerations and Evaluation Requirements

    This section ﬁrst introduces a set of illustrative IIoT use cases while emphasizing
    the perspective

    of their provisioning in cloud setting. This is followed by the discussion of
    the associated design

    speciﬁcations that need to be taken into consideration. Finally, it identiﬁes
    and derives the architectural

    requirements to meet to provision IIoT applications over cloud platforms. These
    requirements were

    used to evaluate the reviewed papers.

    Sensors 2020, 20, 2701

    3 of 19

    2.1. Use Cases

    IIoT use cases range from connected vehicles to healthcare, ﬂeet management and
    smart

    metering [10].

    For illustration purposes, three speciﬁc use cases are described in detail in

    this subsection.

    The ﬁrst use case describes an autonomous car that is riding in a smart city [11].
    The car

    is equipped with a set of IoT devices (e.g., cameras, light detection and ranging
    sensors) and

    actuators (e.g., throttle and brakes). According to the speciﬁcation of the ﬁfth
    generation of wireless

    communications technologies, mobile entities such as autonomous cars exchange
    services and data

    with edge and cloud providers during operation. In addition, autonomous cars may
    interact with

    other entities in the city (e.g., other cars, smart trafﬁc lights and parking
    sensors) for efﬁciency,

    cost-effectiveness and/or security purposes. For instance, emergency vehicles
    could send an alert

    signal to a smart trafﬁc light to get the priority when arriving to a road intersection.

    The second use case describes a robotic prescription dispensing and medication
    delivery

    system [12]. It relies on patients information and data collected from Body Area
    Network (BAN) to

    automatically select the appropriate medication and dosage to be prescribed to
    patients. Data storage

    and parsing, as well as computation occur in the cloud.

    Once the medications are selected,

    delivery robots are dispatched to get the medication and deliver them to the patients.
    The robots

    control actions are calculated and sent from the cloud.

    The third use case describes a predictive maintenance system for planes. This
    system aims to

    provide automated, secure and rapid maintenance for planes. It enables leveraging
    streaming data

    from sensors and devices in the planes to assess current conditions, recognize
    warning signs and

    deliver alerts. Speciﬁcally, the collected data are sent to analytics services
    in the cloud that parses the

    data and relies on machine learning and trained algorithms to detect the upcoming
    failures for the

    planes components. These services interact with other modules that are responsible
    of automatically

    creating maintenance timelines before problems occur.

    2.2. Design Considerations

    IIoT applications are considered as part of Cyber Physical Systems (CPSs) [13].
    CPSs involve the

    combination of several systems that aim to control physical processes. These systems
    are auto-adaptive

    in real-time and are capable to adjust and reconﬁgure itself based on the operation
    feedback. Basically,

    this is what it makes the provisioning of IIoT applications in the cloud very
    challenging. Indeed,

    CPSs are not necessarily connected to the Internet and thus, not necessarily connected
    to the cloud

    platforms that are deployed on or to the IoT devices that they interact with.
    Provisioning IIoT

    applications in cloud platforms while meeting the CPSs speciﬁcations need the
    satisfaction of several

    architectural requirements. Basically, existing PaaS architectures need to be
    extended and/or adapted

    to support IoT applications and address these speciﬁc characteristics. The starting
    point naturally

    would be a PaaS reference architecture. In this work, the IBM PaaS reference architecture
    [14], that was

    inspired from the Cloud Computing Reference Architecture (CCRA) [15], is considered
    as starting

    point. An overview of this architecture is depicted in Figure 1. It consists of
    four strata: Front-end, Core,

    Management and Governance and Abstraction Interface.

    The Front-end stratum exposes northbound APIs for developers and end-users.

    The Core

    stratum involves the several runtime environments (e.g., containers) supported
    by PaaS and is

    necessary for applications hosting and execution. The Management and Governance
    stratum implements

    the PaaS business support system and involves the entities that handle PaaS and
    applications

    management (e.g., monitoring and scalability). Finally, the Abstraction stratum
    exposes southbound

    APIs, enabling the PaaS to interact with the underlying IaaS to provision the
    required compute,

    storage and networking services. IaaS is the actual dynamic pool of the virtualized
    resources used by

    the applications.

    Sensors 2020, 20, 2701

    4 of 19

    Figure 1. IBM Platform as-a-Service (PaaS) reference architecture.

    2.3. Requirements

    For the speciﬁc case of IIoT applications, the PaaS should support additional
    features and

    capabilities so that it supports the speciﬁcities of IoT applications, as well
    as the characteristics

    of CPSs. The IIoT PaaS should make the bridge and establish the missing connection
    between the IoT

    applications running over it and the CPSs. The target extensions need to be added
    at all levels of the

    PaaS reference architecture. To that end, the needed requirements are identiﬁed
    and discussed for each

    stratum of the PaaS reference architecture.

    At the Front-end stratum, appropriate APIs and development kits are required to
    support the

    provisioning of the wide range of IIoT applications (R1) such as the various use
    cases presented

    in Section 2.1. This could be done based on the concept of IoT verticals. In classical
    environments,

    IoT applications are provisioned as physically isolated systems while these applications
    are provisioned

    as logical verticals in the cloud [16,17]. The motivation behind that is to enable
    efﬁcient resources

    usage and scalability when managing the applications. An IoT vertical is a logical
    entity that involves

    an IoT application with its underlying devices and, eventually, the required gateways
    in some cases.

    At the Core stratum, the IoT PaaS requires additional mechanisms and tools to
    enable interactions

    with a fog layer (R2). Fog computing is a novel concept that addresses the excessive
    delays when

    operating latency-sensitive applications in the cloud such as IoT applications
    [18].

    It provides

    additional computation and storage resources closer to the end-users and/or IoT
    devices to reduce

    the delays. IoT PaaS should be able to provision IoT application components either
    in the cloud or

    the fog. For instance, considering the autonomous car use case, part of the collected
    data from the car

    neighborhood could be sent to the closest fog devices (e.g., road-side units)
    for fast processing such as

    obstacles detection while the rest of the data could be sent to the remote cloud
    that is responsible of

    processing the compute-intensive tasks such as the itinerary calculation.

    At the Management and Governance stratum, the IoT PaaS should involve additional
    features and

    business support that would enable it to: (i) federate and cooperate with other
    IoT cloud providers

    (R3) and (ii) ensure control and security during operation (R4). As for (R3),
    a proper IIoT PaaS should

    provide and support inter-cloud communication so that it can use/offer services
    and data to other

    providers. The idea have already been shown to be effective in cases like the
    global Internet and

    wireless telco networks. Speciﬁcally, federated IIoT PaaS solutions will enable
    an industrial “cloud of

    clouds” perspective where any single common functionality would combine many different
    individual

    clouds into one seamless mass in terms of on-demand operations. Based on [19],
    this could be enabled

    through open interfaces that would govern the resources portability, metering
    and billing from one

    cloud provider to another (e.g., see RESERVOIR [20] for IaaS resources portability,
    see COAPS [21]

    for PaaS resources portability). In addition, this federative approach is key
    to achieve one of the most

    important industry 4.0 vision, i.e., a universal decentralized computing environment
    [22]. Inter IIoT

    Sensors 2020, 20, 2701

    5 of 19

    cloud communications make up a ubiquitous, multi-provider infrastructure (mesh
    of service providers)

    that are interconnected to deliver decentralized computing and storage capabilities
    where everything

    is driven by constraints and agreements. This is mandatory to match the complex
    and sophisticated

    business needs of IIoT and optimize enterprise IT service delivery. For instance,
    considering the

    autonomous car use case, the running car services should be able to interact with
    any relevant IoT

    applications provisioned over the city resources, independently of their hosting
    provider, to get useful

    data during a given trip (e.g., accidents and recommended parking facility). When
    it comes to (R4),

    ensuring control and security during operations is critical to achieve proper
    procedures for industrial

    environments where agility, cooperation between several entities, efﬁcient control
    and security are

    needed [23]. Provisioning IIoT applications in such dynamic and distributed system
    requires tackling

    challenges and threats raised by the management of the digital identity across
    diverse organizations,

    security domains and application platforms [24]. For instance, considering the
    healthcare use case,

    the IoT PaaS should support appropriate mechanisms that ensure the security and
    the privacy of the

    vital data of patients.

    At the Abstraction stratum, the IoT PaaS should be able to: (i) support the heterogeneity
    of the IoT

    devices and to cover their whole spectrum (R5) and (ii) it should be able to interact
    with novel IoT

    infrastructures when provisioning the IoT applications (R6). IoT IaaS is fundamentally
    different from

    the traditional IaaS due the signiﬁcant differences between classical virtual
    machines, the classical

    IaaS rely on, and the virtual IoT. For instance, in the speciﬁc case of Wireless
    Sensors Network

    (WSN) and Virtual Sensor (VS), VMs aim at sharing the physical machine resources
    (e.g., computing,

    storage), whereas VSs use the host sensor resources with the aim of sharing its
    sensing capabilities

    (e.g., temperature, light and humidity) [25]. As an example, IoT PaaS should be
    able to provision

    several maintenance applications that might use the capabilities of different
    VSs running on top of the

    same physical sensors in the plane. For instance, two different applications (i.e.,
    engine temperature

    control and combustion chamber pressure control could use the same physical sensor
    but rely on two

    different VSs, with each VS conﬁgured based on the speciﬁc needs of the application
    (e.g., temperature

    unit and periodicity) to monitor the temperature and ﬂow rate of exhaust fan discharge.

    The reader should note that, according to CCRA and, in addition to meeting these
    requirements,

    the PaaS architecture for IIoT applications should also ensure proper vertical
    interactions between all

    the strata. For instance, the control and security capabilities models of the
    Management and Governance

    stratum should be implemented at the Core stratum and exposed to prospective end
    users through

    appropriate APIs at the Front-end stratum. This way of design is quite intuitive
    and is inline with the

    early introduced IoT verticals concept. In the rest of this paper, an evaluation
    of the relevant literature

    is done in the light of the deﬁned requirements. The critical review discusses
    the architectures that

    focus on both (i) the whole spectrum of IoT verticals and (ii) the ones dealing
    with speciﬁc IoT verticals.

    3. PaaS for Whole Spectrum of IoT Verticals

    The PaaS for the whole spectrum of IoT verticals are able to host and run end-user
    applications

    that interact and use any virtualized IoT resources as shown in Figure 2. The
    heterogeneity of the

    objects is supported by the IoT PaaS itself. The related work could be classiﬁed
    into three groups of

    approaches: (i) The virtual vertical-based approach; (ii) the services compositions
    approach; and (iii) a

    set of work in which contributors focus only on a sub-set of functionality. In
    what follows, the works

    related to each of these groups are discussed and evaluated.

    Sensors 2020, 20, 2701

    6 of 19

    Figure 2. Generic PaaS for whole spectrum of the Internet of Things (IoT) verticals.

    3.1. Virtual Vertical-Based Approach

    In [17], the authors propose a PaaS architecture and implementation based on the
    concepts of

    virtual verticals. A virtual vertical consists of a set of resources and services,
    provided by a given IoT

    IaaS in the form of an isolated virtual solution to the PaaS. The vertical solution
    can be assimilated

    to the hosting environment of IoT end-user applications and can be customized
    in relation to the

    physical objects these applications use. The technical PaaS services (e.g., monitoring)
    can be shared

    horizontally between the vertical solutions. Speciﬁcally, the proposed PaaS offers
    vertical solutions for

    IoT end-user applications hosting and resources management. Each vertical solution
    is domain-speciﬁc.

    It is therefore possible to take into account the differences and the speciﬁcities
    of the objects when

    controlling the applications. According to the authors, the control of the application
    is the process

    of activating and managing the PaaS resources it uses, such as security and scalability
    management,

    and the data it generates in the context of the virtual solution that it belongs
    to. End-user applications

    control is ensured by the “application context management” module. This module
    interacts with

    the objects through “gateways” and “mediators”. The “gateways” allow for providing
    the drivers

    and protocol stacks for the communications with the objects. The “mediators” domain
    mediates the

    interfaces between different gateways in the same application domain to cover
    the diversity of all

    domain-speciﬁc data models.

    For the end-user application deployment (including driver installation and gateway

    conﬁguration), the same authors propose in [16] to extend Topology and Orchestration
    Speciﬁcation for

    Cloud Applications (TOSCA) speciﬁcations in order to support IoT end-user applications
    deployment

    and management in the same PaaS. TOSCA provides speciﬁcations to describe applications
    and their

    hosting environment topologies as typed graphs. These speciﬁcations simplify the
    management of

    applications and their related components reusability. In [16], the authors use
    TOSCA to formally

    describe the IoT end-user applications topology and its dependencies in terms
    of required resources

    and conﬁguration actions. This allows them to select the most appropriate vertical
    solution to deploy

    an end-user application. In addition, it allows the automation of the applications
    deployment and

    management instead of the current manual handling in classical environments. It
    allows to avoid

    Sensors 2020, 20, 2701

    7 of 19

    the current tedious conﬁguration and management tasks performed in a case-by-case
    manner, due to

    the underlying heterogeneity of IoT infrastructures. Furthermore, the use of TOSCA
    model could

    automate the interoperability with other platforms assuming they support TOSCA.

    This work meets the ﬁrst requirement (R1) concerning the support of wide range
    of IoT end-user

    applications. The proposed TOSCA extension enables describing any end-user IoT
    application topology

    in terms of interacting processes. It also allows the description of their management
    processes using

    the TOSCA plans. This work does not meet the requirement concerning the fog layer
    support (R2),

    although the “event processing” module enables real-time events analysis. In fact,
    this module

    considers only the availability and reliability of the used objects. Moreover,
    the collected data are

    intended for the PaaS solution rather than for the end-user applications (e.g.,
    to restore the connection

    with a disconnected sensor). This work partially meets the third requirement concerning
    the federation

    with other IoT clouds (R3). Indeed, the use of TOSCA enables the design of interoperable
    IoT

    applications and resources between heterogeneous cloud providers. However, this
    assumes that

    the involved providers support TOSCA, which is not really common with the existing
    cloud providers

    in the market. This work meets the requirement concerning the control and security
    support (R4).

    Security model and strategy can be integrated with this solution as part of the
    technical PaaS services

    if it is needed in a speciﬁc IoT vertical. This work meets the requirement concerning
    the support of

    the whole spectrum of IoT devices (R5) thanks to the use of “mediators” and “context
    management”

    modules. Finally, this work does not meet the requirement concerning the support
    of virtualized IoT

    services (R6). Although, the virtual vertical solutions notion is favorable to
    the use of virtualized IoT

    resources, the authors do not highlight this perspective in this work. Even the
    introduced use cases

    (i.e., temperature control and presence-based light control) are based on physical
    devices.

    In [26], the authors propose a system architecture that models a vertical IoT
    silo for environmental

    and health monitoring. It relies on wearable sensor network system to monitor
    the safety and health

    risks for workers in construction environments. The proposed architecture consists
    of three layers.

    The layer in the southbound involves the IoT wearable sensor nodes. The layer
    in the northbound

    represents the remote cloud system at the back-end. It includes data storage servers
    and further

    functionalities, such as Web monitoring and mobile applications. The layer in
    between implements

    the required gateway for the communication and the data routing from the IoT devices
    to the cloud

    applications. It also acts like a local fog server, responsible of pre-processing
    sensor signals and raising

    early alerts in case of emergency.

    This work does not meet the ﬁrst requirement (R1) concerning the support of wide
    range of IoT

    end-user applications. It is designed to only provision the safety and health
    monitoring applications.

    This work partially meets the requirement concerning the fog layer support (R2).
    The gateway in

    the middle architectural layer hosts and executes the application components responsible
    of the data

    pre-processing and the alerts management. However, it is not possible to include
    additional fog nodes

    in this layer. This work does not meet the third requirement concerning the federation
    with other IoT

    clouds (R3). It is designed as a closed IoT silo and cannot interact with other
    IoT clouds. This work

    meets the requirement concerning the control and security support (R4). It includes
    privacy and

    security mechanisms for the data transmitted from the IoT devices to the application
    components

    in the fog and the cloud. This work does not meet the requirement concerning the
    support of the

    whole spectrum of IoT devices (R5). It only supports the four environmental sensors,
    such as the CO2

    sensor and the UV sensor, that are integrated to this architecture. Finally, this
    work does not meet

    the requirement concerning the support of virtualized IoT services (R6). All the
    used IoT and sensors

    devices are physical.

    3.2. Services Compositions Approach

    In [27], the authors propose an open source PaaS for smart city end-user applications.
    The PaaS

    is designed as part of the COMPOSE EU FP7 project(https://compose-project.eu/)
    and provides

    features to discover and compose tools and services in order to build and deploy
    end-user applications

    Sensors 2020, 20, 2701

    8 of 19

    upstream smart objects. The architecture of the COMPOSE PaaS consists of a marketplace,
    a runtime

    engine and an ingestion layer. The marketplace provides graphical user interfaces
    for developers to

    operate the reusable services. It allows to develop applications through IoT workﬂows
    and libraries by

    specifying the appropriate services discoverable from the PaaS. The services that
    are not supported

    by the PaaS can be provided and published by the developers. The runtime engine
    is the component

    that is responsible for deploying the end-user applications. This engine is based
    on an extension of

    Cloud Foundry PaaS. It instantiates the required services described in the workﬂow
    and deploys them

    over the PaaS resources before performing necessary compositions in order to conﬁgure
    and set the

    interactions between the selected services. The compositions and the conﬁguration
    operations are

    based on information in the service object description module and the management
    component in order

    to consider the speciﬁcities of the objects referenced by the instantiated services.
    The ingestion layer

    provides the APIs and the interfaces to connect and make the services interact
    with the smart objects.

    It implements several communication models and protocols in order to cover the
    many various objects

    in the COMPOSE infrastructure (e.g., actuators and sensors).

    COMPOSE PaaS meets the requirement concerning the support of heterogeneous IoT

    applications(R1). Any IoT application could be modeled with elementary services
    that are composed

    together to implement the end-to-end target application. This work does not meet
    the requirement

    concerning the interaction with fog layer (R2). Similarly, it does not meet the
    requirement concerning

    the federation with other IoT clouds (R3). Indeed, COMPOSE PaaS is strongly coupled
    and designed

    to only communicate with COMPOSE infrastructure. This work meets the requirement
    concerning the

    control and security support (R4). Security modules, when required, can be provided
    by developers and

    published by COMPOSE through its marketplace to be used with IoT applications.
    This work meets the

    requirement concerning the support of the whole spectrum of IoT devices (R5).
    The heterogeneity of

    the IoT devices is hidden thanks to the use of the service object description
    module. Finally, this work

    does not meet the requirement concerning the support of virtualized IoT services
    (R6). The marketplace

    services are only related to physical smart objects.

    In [28], the authors propose an architecture that virtualizes IoT devices and
    bind them with IIoT

    applications as a service. The considered applications are from the industrial
    Internet, i.e., anti-ﬁre

    and Heating, Ventilation and Air Conditioning (HVAC) applications. The proposed
    architecture is

    layer-based. The physical layer involves the heterogeneous physical IoT devices.
    The virtual IoT

    layer hosts the virtualized IoT services. These services are published in repository
    acces engine in the

    IoT management layer. The running IoT applications discover and select the required
    IoT services

    from that repository. Depends on the applications needs, the selected services
    might be elementary or

    composed of several elementary services. The composition is handled by the orchestrator
    with respect

    to the orchestration plans published with the virtualized IoT services.

    This work meets the requirement concerning the support of heterogeneous IoT applications

    (R1). This work does not meet the requirement concerning the interaction with
    fog layer (R2).

    Only IaaS/PaaS interfaces are designed in this architecture. Moreover, it does
    not meet the requirement

    concerning the federation with other IoT clouds (R3). The architecture is designed
    as a set of closed

    IoT vertical that cannot be extended and/or merged with external entities that
    belong to other clouds.

    This work does not meet the requirement concerning the control and security support
    (R4). This work

    meets the requirement concerning the support of the whole spectrum of IoT devices
    (R5). The authors

    prove this capability in the developed prototype by integrated two different types
    of IoT devices

    (i.e., sensors and drones) and bind them with different IoT applications. Finally,
    this work meets the

    requirement concerning the support of virtualized IoT services (R6). All the the
    considered IoT services

    in this work are virtualized from physical devices and bound to the applications
    as a service.

    In [29], the authors present Smart Water Management Platform (SWAMP) for precision
    irrigation

    in smart agriculture.

    The designed architectural mainly focus on replicability and scalability.

    The SWAMP platform uses FIWARE(https://www.ﬁware.org/) components and relies on
    semantics

    to compose and conﬁgure customizable services that specialize generic analytic
    services into particular

    Sensors 2020, 20, 2701

    9 of 19

    techniques for different types of irrigation and water distribution management.
    The goal of services

    compositions is to bring ﬂexibility and adapt the operated applications to speciﬁc
    countries, soils,

    climate and so on. The SWAMP architecture is layer-based. It consists of ﬁve layers.
    The ﬁrst

    layer contains the IoT devices. The second layer implements the security and the
    communication

    protocols/channels. The third layer takes care of the storage services, data analytics
    and machine

    learning. The fourth layer contains the generic and customizable services, as
    well as the water irrigation

    distribution models. Finally, the ﬁfth layer delivers the concrete and well-conﬁgured
    applications.

    This work meets the requirement concerning the support of heterogeneous IoT applications
    (R1).

    The concept of generic and customizable services models enables the provisioning
    of various IoT

    applications depending on the end users needs. The paper details the irrigation
    and water distribution

    management use case.

    However, the same principle can be applied to any kind of other IIoT

    applications. This work partially meets the requirement concerning the interaction
    with fog layer (R2).

    It supports the provisioning of some services over fog nodes at the third layer
    of the architecture.

    However, it only supports the integrated IoT devices (SWAMP fog hub) as fog nodes.
    This work

    does not meet the requirement concerning the federation with other IoT clouds
    (R3). It only supports

    provisioning services over the SWAMP cloud. This latter is able to communicate
    with different

    external data sources for knowledge enrichment such as meteorological data and
    agriculture yield

    historical data. This work meets the requirement concerning the control and security
    support (R4).

    It uses FIWARE security components at the second layer to ensure data security.
    This work meets the

    requirement concerning the support of the whole spectrum of IoT devices (R5).
    However, it does not

    meet the requirement concerning the support of virtualized IoT services (R6).
    All the used IoT devices

    are physical.

    3.3. Focus on Sub-Set of Functionality

    Some papers focused on a single aspect of provisioning IoT end-user applications
    in PaaS.

    They only treat single aspects of IoT applications provisioning in PaaS (e.g.,
    data management in [30],

    power management in [31] and cost-efﬁcient storage [32]).

    In [30], the authors introduce an IoT-oriented data storage framework at the PaaS
    level.

    The proposed framework allows (i) processing the high throughput of the data sent
    by the objects to

    the running end-user applications and (ii) horizontally scaling the data management
    resources in order

    to support the huge volume of the data. The proposed data storage framework handles
    heterogeneous

    data collected from various objects (e.g., RFID readers and ubiquitous sensors).
    These data are different

    in terms of structures, schemes, accessing modes, etc. The main components of
    this framework are

    the ﬁle repository, database module, resource conﬁguration module and service
    module. The ﬁle

    repository is based on distributed Hadoop server to handle unstructured data.
    The authors extend

    Hadoop by adding the isolation of tenant’s data support and enhance its performance
    by improving

    the ﬁle repository’s ability to handle small ﬁles. The database module manages
    the structured data and

    aggregates several SQL and NoSQL database sources. The aggregation is performed
    through uniﬁed

    API and object-entity mapping for multiple databases. This considerably simpliﬁes
    the development

    of data access modules and data exchanges for the end-user applications. The resources
    conﬁguration

    module ensures the data management in terms of a predeﬁned meta-model. The data
    resources can

    then be conﬁgured based on the tenant’s requirements. In addition, this module
    provides a set of

    features to manage resources usage such as data disposing and load balancing.
    The service module

    builds corresponding RESTful services from the data stored according to meta-data
    models and

    conﬁguration patterns provided by the resources conﬁguration module. These services
    are therefore

    used by the IoT end-user applications for their respective data management.

    This work does not meet the requirement concerning the support of IoT applications
    heterogeneity

    (R1). This work does not meet the requirement concerning the support of interaction
    with fog layer (R2).

    There are no details provided about fog actuators support. This work meets the
    requirement concerning

    the federation with other IoT clouds (R3). This is done thanks to the introduced
    meta-models for

    Sensors 2020, 20, 2701

    10 of 19

    the handled data. This work does not meet the requirement concerning the control
    and security

    support (R4). There are no details about data protection and security modules.
    This works does not

    meet the requirement concerning the support of the whole spectrum of IoT devices
    (R5). Only the

    integrated IoT devices are supported by this work since it only focus on a sub-set
    of functionality.

    Finally, this work does not meet the requirement concerning the support of virtualized
    IoT services

    (R6). It only supports the interactions with physical RFID readers and sensors.

    Sii-Mobility(http://www.sii-mobility.org/) is a regional Italian city project
    (Tuscany region) that

    focus on smart mobility and transportation. In [33], the authors publish part
    of the project’s outcomes.

    The paper presents an IoT cloud architecture to enhance smart city mobility and
    transportation services.

    It enables the implementation of several scenarios that rely on IoT as big data
    and data analytics to

    operate IoT applications within a smart city setting. The designed architecture
    rely on four entities.

    The ﬁrst one represents the data lake where static and real-time data are gathered.
    These data are

    acheminated to the second entity, i.e., the IoT cloud infrastructure. This entity
    hosts the IoT applications

    that are implemented as micro services. It also includes the data analytics tools
    that can be used through

    a REST API. The results can be visualized on graphical dashboards. When relevant,
    some (or part of)

    IoT applications can be deployed in the third entity of the architecture, i.e.,
    the IoT local solution. This

    entity implements an edge domain, where part of the IoT applications can be placed
    close to the fourth

    entity that represents the real world with its physical IoT devices. This architecture
    was prototyped

    and several real life and complex scenario were developed and deployed over Firenze,
    Pisa and Prato

    cities to validate and evaluate this solution.

    This work meets the requirement concerning the support of IoT applications heterogeneity
    (R1).

    It supports the provisioning of several smart city applications including transportation
    and roads

    signage. This work partially meets the requirement concerning the support of interaction
    with fog

    layer (R2). Although the architecture supports the provisioning of IoT applications
    over fog nodes,

    this remains limited to a subset of the connected IoT devices that are related
    to the architecture.

    The architecture does not support the discovery of other fog devices. This work
    meets the requirement

    concerning the federation with other IoT clouds (R3).

    On one hand, the IoT applications are

    interoperable since they are designed as micro services. On the other hand, the
    IoT devices are

    interoperable thanks to the IoT broker, part of the IoT cloud infrastructure entity.
    This work meets

    the requirement concerning the control and security support (R4). The architecture
    stands behind a

    ﬁrewall and authentication mechanism. Certiﬁcates and authorized credential’s
    keys are needed for

    all data sources that feed the architecture. This work meets the requirement concerning
    the support

    of the whole spectrum of IoT devices (R5) thanks to the proposed IoT description
    model and the IoT

    broker. Finally, this work does not meet the requirement concerning the support
    of virtualized IoT

    services (R6). It only supports the interactions with physical IoT devices.

    4. PaaS for Speciﬁc IoT Verticals

    Most of the existing IoT platforms are designed for a speciﬁc IoT verticals. As
    shown in Figure 3,

    existing solutions only provide support for domain-speciﬁc applications and/or
    using speciﬁc types

    of virtualized IoT resources. It is, therefore, obvious that these platforms do
    not meet the requirement

    concerning the support of the whole spectrum of IoT resources and technologies
    (R5).

    The solutions in this category are organized into platforms focusing on sensing
    resources

    provisioning and those devoted to robot resources provisioning. Platforms for
    WSN are evaluated ﬁrst.

    This is followed by the review of the platforms for robots.

    Sensors 2020, 20, 2701

    11 of 19

    Figure 3. Speciﬁc IoT PaaS for speciﬁc IoT verticals.

    4.1. PaaS for WSN

    In [34], the authors propose Dinam Cloud, the PaaS for on-demand WSN end-user
    applications

    development, deployment, conﬁguration and monitoring. The Dinam Cloud architecture
    consists of

    three layers, following the three service delivery layers of the cloud architecture:
    IaaS, PaaS and SaaS.

    The Dinam IaaS layer offers WSN computing resources (e.g., processing and storage)
    and is formed

    by heterogeneous wireless sensor nodes. The Dinam SaaS includes the concrete applications
    that are

    developed based on the Dinam PaaS to integrate WSN capabilities. In the reference
    implementation of

    the Dinam architecture, these applications are accessible via REST. The Dinam
    PaaS facilitates WSN

    end-user applications provisioning and offers uniﬁed services (e.g., storage,
    database and networking)

    to end-user applications. The Dinam PaaS reference implementation provides a programming
    and

    run-time environment for end-user applications. The programming environment is
    accessible via

    a Web-based IDE that can be used to develop new applications. The PaaS is hosted
    by a cloud

    of Dinam-mite nodes—a set of stand-alone sensor nodes that integrate the embedded
    Web-based

    development and run-time environment. Instances of the Dinam-cloud can be provisioned
    and

    released with minimal management efforts.

    This work partially meets the requirement concerning the support of IoT applications

    heterogeneity (R1). Although the Dinam-mite concept adopted by the Dinam-cloud
    is very interesting,

    the solution discusses neither the communication interfaces among the three layers
    nor the interfaces

    for applications development and management. This work does not meet the requirement
    concerning

    the support of interaction with fog layer (R2). The Dinam-cloud architecture stack
    is directly running

    on the sensor nodes, which excludes any communications with the Dinam PaaS and
    the fog. This work

    partially meets the requirement concerning the federation with other IoT clouds
    (R3). It only enables

    federation between instances of Dinam-clouds. This work does not meet the requirement
    concerning

    the control and security support (R4). Finally, this work partially meets the
    requirement concerning

    the support of virtualized IoT services (R6). The introduced architecture shows
    an interaction between

    the PaaS and the IaaS layers that only support sensors virtualization.

    Another example of PaaS for WSN is Cloud4Sens, a cloud-based platform for collecting,

    integrating and managing sensing capabilities from various sources [35]. These
    capabilities are

    offered to the users via two provisioning models: Data-centric and service-centric.
    In the data-centric

    model, the users are provided with access to environmental data as-a-Service.
    The Cloud4Sens gathers

    physical data and then organizes them according to an abstract and uniform format
    following the

    Sensor Web Enablement (SWE) speciﬁcations, a publicly available standard from
    Open Geospatial

    Sensors 2020, 20, 2701

    12 of 19

    Consortium. The abstracted data is then stored and offered as-a-Service to the
    end-users. With the

    device-centric model, Cloud4Sens uses virtualization techniques to provide its
    users with a virtual

    sensing and actuation infrastructure. The users can customize the provisioned
    virtual devices to meet

    their environment monitoring needs. The bidirectional communications between the
    Cloud4Sens and

    the physical sensing infrastructure are supported via speciﬁc adapters.

    This work meets the requirement concerning the support of IoT applications heterogeneity
    (R1).

    It does not meet the requirement concerning the support of interaction with fog
    layer (R2). Indeed,

    Cloud4Sens only deals with IaaS. This work meets the requirement concerning the
    federation with

    other IoT clouds (R3). Appropriate adaptors need to be added for each additional
    provider that

    will take part of the federation. This work does not meet the requirement concerning
    the control

    and security support (R4). There are no details provided neither on the IoT platform
    nor on the

    data security. Finally, it does not meet the requirement concerning the support
    of virtualized IoT

    services (R6). The Cloud4Sens architecture includes two layers, IaaS and PaaS,
    but these layers are

    used in a different perspective than in the cloud architecture. The Cloud4Sens
    IaaS and PaaS are

    independent layers used for device-centric and data-centric services, respectively.
    The services offered

    via the IaaS layer and only supports sensors virtualization.

    4.2. PaaS for Robots

    The ﬁrst considered work in this category is DAvinCi [36]. It is a software framework
    that allows

    robots in large environments to collaborate in order to achieve environment exploration
    and map

    building. The sensing capabilities, such as localization and image acquisition,
    are distributed among

    the robots, which upload their sensed data to a central controller (i.e., the
    DAvinCi Server) to build a

    global map of the environment. Parts of the global map are then provided to the
    robots as a service

    on demand according to the robots needs. The computationally intense tasks of
    the process (here,

    map building) are ofﬂoaded to computing nodes in the cloud. The framework also
    offers a standard

    set of algorithms (e.g., global path planning and sensor fusion) as cloud services.
    These services are

    accessed via the DAvinCi Server, which uses the distributed Robotic Operating
    system (ROS) as the

    messaging framework to talk to the robots. ROS proxies are used to communicate
    with robots that

    cannot run ROS software.

    This work does not meet the requirement concerning the support of IoT applications
    heterogeneity

    (R1). The DAvinCi framework is exclusive to map management. It also does not meet
    neither the

    requirement concerning the support of interaction with fog layer (R2) nor the
    requirement concerning

    the federation with other IoT clouds (R3) and the requirement concerning the control
    and security

    support (R4). Furthermore, the DAvinCi Server directly communicates with non-virtualized
    robots

    delivered from a speciﬁc infrastructure. Thus, it does not meet the requirement
    concerning the support

    of virtualized IoT services (R6).

    In addition to DAvinCi, Rapyuta is yet another open-source robotics PaaS [37].
    It enables

    robots to ofﬂoad heavy computations to customizable and elastic computing environments
    in

    the cloud. These computing environments are tightly interconnected to allow information
    and service

    sharing among the different robots. Rapyuta’s computing environments are implemented
    using

    Linux containers that enable environments scaling up and down via the easy conﬁguration
    of the

    computing resources assigned to each of them (e.g., memory limits). The physical
    robots communicate

    with Rapyuta using the WebSockets protocol via a full duplex and a bidirectional
    communications

    channel, which enables the platform to push information to the Robots. The exchanged
    messages are

    JSON-based. Rapytua’s internal processes intercommunicate over sockets, using
    the ROS inter-process

    communication and exchanging serialized ROS messages. Rapyuta’s processes, communicating
    with

    physical robots, convert data messages between the internal and the external communication
    formats

    (i.e., JSON and serialized ROS formats).

    This work does not meet the requirement concerning the support of IoT applications
    heterogeneity

    (R1). Rapyuta focuses on ofﬂoading each robot’s computation to the cloud and then
    providing access

    Sensors 2020, 20, 2701

    13 of 19

    to the RoboEarth database, a worldwide database in which robots can share their
    knowledge about

    objects, environments and tasks execution. It also does not meet neither the requirement
    concerning

    the support of interaction with fog layer (R2) nor the requirement concerning
    the federation with

    other IoT clouds (R3) and the requirement concerning the control and security
    support (R4). Finally,

    Rapyuta only support interactions with physical robots. Thus, it does not meet
    the requirement

    concerning the support of virtualized IoT services (R6).

    Another work that could ﬁt with this category is the framework introduced in [38]
    for robots

    virtualization. It proposes an IaaS that virtualizes physical robots and exposes
    them to IoT/IIoT PaaS

    solutions that are responsible to bind them with applications. This work presents
    a comprehensive

    business model that depicts the prospective interactions between the IaaS for
    robots, the PaaS solutions

    and their hosted applications. The considered case study corresponds to a search
    and rescue IoT

    application but the proposed architecture could support IIoT applications as well.
    This architecture

    consists of several planes. The resource plane involves the physical robots and
    enables the node-level

    virtualization. Then, it communicates with the control plane to make up the network-level
    robots

    virtualization. Basically, this level implements the services robots repository,
    the requests handler,

    the virtualization engine and all the necessary components for handling the robots-as-Service.
    Finally,

    the signaling plane contains the abstract robot gateways that could be instantiated
    and conﬁgured to

    make the bridge between robots services and the running IoT applications in the
    PaaS.

    This work meets the requirement concerning the support of IoT applications heterogeneity

    (R1). The authors implemented a search and rescue application in disaster management
    context for

    validation purpose. However, the designed architecture supports any IoT application,
    regardless of

    its nature and characteristics. This work does not meet the requirement concerning
    the support of

    interaction with fog layer (R2). It only provides interfaces for IaaS/PaaS interactions.
    This work

    meets the requirement concerning the federation with other IoT clouds (R3). Other
    robots providers

    can cooperate and federate with the proposed architecture through the publication
    interface that

    enables sharing robots services and publishing them in the local robots repository.
    This work does

    not meet the requirement concerning the control and security support (R4). Finally,
    this work meets

    the requirement concerning the support of virtualized IoT services (R6) thanks
    to the virtual robots

    management interface and virtual robots operating interface it proposes.

    5. Review Synthesis and Research Directions

    This section synthesizes the evaluation results and discusses prospective research
    directions for

    the IIoT PaaS research ﬁeld.

    5.1. Evaluation Results and Main Findings

    Table 1 summarizes the obtained review results in the light of the considered
    requirements.

    None of the reviewed work meets all the requirements. More speciﬁcally, not a
    single one of them

    meets neither the third requirement (i.e., interactions with IoT PaaS) nor the
    fourth requirement (i.e.,

    interactions with fog layers). The research directions related to these two requirements
    are further

    discussed in this section.

    5.2. Research Directions

    This survey shows that efficient and mature IIoT PaaS solutions are still far
    away. Several perspectives

    and research directions still need to be investigated before IoT PaaS get widely
    accepted and used in

    industrial Internet. The most important research directions are discussed in the
    rest of this section.

    The selection of their related topics was motivated by the obtained evaluation
    results.

    Sensors 2020, 20, 2701

    14 of 19

    Table 1. Evaluated work synthesis.

    References

    R1

    R2

    R3

    R4

    R5

    R6

    [16,17]

    YES

    NO

    Partially

    YES

    YES

    NO

    [26]

    NO

    Partially

    NO

    YES

    NO

    NO

    [27]

    YES

    NO

    NO

    YES

    YES

    NO

    [28]

    YES

    NO

    NO

    NO

    YES

    YES

    [29]

    YES

    Partially

    NO

    YES

    YES

    NO

    [30]

    NO

    NO

    YES

    NO

    NO

    NO

    [31]

    NO

    NO

    NO

    NO

    NO

    NO

    [32]

    NO

    YES

    YES

    NO

    NO

    NO

    [33]

    YES

    Partially

    YES

    YES

    YES

    NO

    [34]

    Partially

    NO

    Partially

    NO

    NO

    Partially

    [35]

    YES

    NO

    YES

    NO

    NO

    Partially

    [36]

    NO

    NO

    NO

    NO

    NO

    NO

    [37]

    NO

    NO

    NO

    NO

    NO

    NO

    [38]

    YES

    NO

    YES

    NO

    YES

    YES

    5.2.1. Control and Security Management

    Existing IIoT systems are vulnerable to a variety of cyber-attacks [39,40]. This
    led to make

    protection against cyber-attacks a major design goal for IIoT systems [41]. This
    concern is even more

    important when migrating such solutions to the cloud and provisioning them over
    dedicated IIoT

    PaaS. Indeed, achieving efﬁcient and reliable security in IIoT PaaS is critical
    and mandatory to reassure

    and promote companies and factories to adopt and migrate their solutions to such
    environments.

    The review of the IIoT platforms highlighted that they either do not provide any
    security support

    or, when it is the case, this support is modeled as “pluggable” entity that could
    be transversally

    added to the platform like any other technical service. In addition, these “pluggable”
    entities often

    implement and adapt a classical security approach such as restoration measures
    of states and data

    (e.g., checkpointing, rollbacking and replication). However, based on [23], these
    approaches are too

    costly and complex to be implemented in IIoT systems where some devices are too
    restrictive in terms

    of computing and autonomy. This is even truer when the IIoT PaaS interacts with
    fog layer where

    devices may have the same restrictions as well. Generally speaking, there are
    several issues that lead

    to quite challenging security concerns when migrating IIoT systems to the cloud.
    For instance, one can

    cite the lack of risk mitigation, the poor management of the security updates,
    the use of insecure

    protocols and the absence of strategies following critical security incidents.
    The future IIoT PaaS are

    expected to tackle all these challenges. To that end, IIoT PaaS should adopt risk
    and threat management

    processes. These processes should be abstract and powerful enough so that they
    can be adapted to any

    industry environment. The threat model proposed in [23] can be used as starting
    point. In addition

    to that, IIoT PaaS should include asset management tools that enables identifying
    and discovering

    relevant industrial assets with regard to the deployed applications and their
    related SLAs/KPIs.

    Finally, as discussed earlier, IoT PaaS should support secure-by-design approaches
    that take into

    considerations the limitations and the speciﬁcities of the IoT devices used by
    the applications. Basically,

    a secure-by-design approach should involve the following elements: appropriate
    authentication

    method to manage identities, secure boot with the right kernel conﬁguration and
    images management,

    secure communication using the right protocols, access control mechanism, cryptographic
    protection

    and ﬁrewall for network whitelisting.

    5.2.2. Interactions with Fog Layer

    The integration of a fog layer would enable meeting the latency sensitivity requirement
    for

    IIoT applications when deployed in the cloud. For instance, given a distributed
    IIoT application,

    the latency-sensitive components could be provisioned over fog nodes that are
    close to data sources

    Sensors 2020, 20, 2701

    15 of 19

    and/or actuators, and the compute-intensive components could be provisioned in
    the distant and more

    powerful IIoT PaaS [42]. This stipulates that the IIoT PaaS is able to interact
    with a fog layer and both

    make up a common and aggregated ecosystem. The literature review shows that there
    is still lack today

    of such mature system. Obviously, there are several works today that propose solutions
    to deploy IoT

    applications in hybrid cloud/fog environment (e.g., [43–45]). However, there are
    still some efforts that

    need to be made so that the proposed solutions ﬁt with the CPSs at large and the
    IIoT in particular.

    A key barrier is security. Fog nodes are often owned by third parties and used
    by PaaS solutions in an

    opportunistic way. This presents a signiﬁcant threat for industrial applications.
    The general challenges

    and the research directions discussed in Section 5.2.1 applies to this context
    as well. In addition to

    that and considering the hybrid cloud/fog setting, there is need to secure the
    control and signaling

    plane between these two layers. Actually, this plane is often implemented using
    Software-Deﬁned

    Networking (SDN) entities. The security of the OpenFlow channel between the controller
    and its

    switches need to be addressed. Since all the controller commands are sent through
    this channel,

    once compromised, the network will be completely controlled by an attacker. Reference
    [46] describes

    prospective attack models in an IoT-Fog architecture. Appropriate countermeasures
    using Bloom

    ﬁlters can be considered as possible solution to this issue. When it comes to
    the data plane, security

    needs to be addressed as this level as well (e.g., encryption). furthermore, appropriate
    mechanisms are

    needed for gateways deployment and conﬁguration. The gateways are useful to parse,
    convert and/or

    annotate the data, when needed, in between the IoT devices and the applications
    in hybrid cloud/fog.

    Besides the security issue, another challenge is the interaction framework between
    the IoT PaaS in

    the cloud and the fog. Two research venues are worth being explored: orchestration
    and choreography.

    In the orchestration approach, the IoT PaaS could act as the orchestrator since
    it has an overall view.

    However, it is clear that this approach will not be suitable when all the IIoT
    application tasks are

    executed in the fog layer. A choreography approach would thus be better suited.
    It should be noted

    that only a few papers (e.g., [47]) acknowledge the need of orchestration between
    the fog and the cloud

    in general. However, none of them provides a solution. Finally, the reader should
    note that introducing

    the fog layer is a key enabler to achieve the tactile Internet vision [48].

    5.2.3. Support of Concurrent/Parallel Processes

    IIoT PaaS should support various kind of processing to cover the strong heterogeneity
    of IIoT

    applications in terms of architectural design and runtime requirements. In particular,
    since most

    of the IoT applications are often made up of a set of parallel and/or concurrent
    processes [49],

    IIoT PaaS are expected to offer the appropriate tools and frameworks to support
    their provisioning.

    The reader should note that the existing IoT PaaS solutions, such as Thingworx
    and IBM Watson,

    do support concurrent/parallel processes. However, their hosting frameworks are
    designed and

    intended to end-users according to products-to-customers model where services
    like docker containers

    are offered for applications hosting and Apache Kafka for the messaging. Consequently,
    they are not

    really appropriate to IIoT setting that relies more on facilities instead of services
    and aim to achieve

    internal optimization rather than commercial products. Indeed, novel and appropriate
    containers

    need to be designed and integrated to IIoT PaaS. These containers should not only
    support the

    execution of such processes and manage the inter-communications between them (e.g.,
    common but

    distributed execution context for parallel process, simultaneous access to the
    same shared resources

    for concurrent processes), but they should also implement the data and control
    internal workﬂows

    of the industry/factory [50]. This requires major transformation to the service
    containers, as well

    as to the communication bindings between them. The exeCution engIne for distributEd
    data-fLow

    computing (CIEL(http://www.cl.cam.ac.uk/netos/ciel/)) framework could be used
    as a starting point.

    CIEL introduces an execution engine for distributed concurrent and parallel processes
    [51]. However,

    the supported services are speciﬁc to data ﬂow management. This framework could
    be extended in

    order to support IIoT processes. Another alternative is to extend the service
    micro-containers presented

    in reference [52]. These micro-containers were originally designed for service-based
    applications

    Sensors 2020, 20, 2701

    16 of 19

    provisioning in the cloud. Appropriate modiﬁcations and extensions could be performed
    to add

    support of inter-processes context management.

    5.2.4. Interactions with IoT IaaS

    Virtualization enables efﬁciency in resource usage. It is the key technology used
    today by

    IaaS. It is embodied in the VM concept. PaaS–IaaS interactions rely today on that
    concept and are

    enabled by classical frameworks such as OpenStack. This raises several issues.
    A current issue

    is the need to investigate the key differences between VMs and virtual IoT resources/networks.

    As today’s PaaS interactions with IaaS rely on the concept of VM as keystone,
    the more important

    these differences are, the more impact they will have on the IoT PaaS/IaaS interaction
    framework.

    The work introduced in [25] could be used as a starting point for the WSN vertical.
    It does indeed

    show that the differences are fundamental. These differences include the logical
    representation of

    VM vs. virtual sensors, the addressing mechanisms (IP vs. no standard mechanism)
    and power

    supply (unrestricted vs. battery operator). Similar research efforts are required
    for the other IoT

    verticals such as robots. Novel interaction frameworks are required to cater to
    the speciﬁcs of IoT

    IaaS including the differences between VMs and virtualized IoT resources/networks.
    They need

    to be investigated. Notably, such frameworks should make it possible for the IoT
    PaaS to interact

    with the IaaS at different levels of abstraction. The work in [53] might be used
    as a starting point

    to identify these different levels of abstractions. It proposes a general layering
    of IaaSs, made up of

    the following layers: cloud management, virtual infrastructure management and
    a VM manager [53].

    Virtual IoT resources manager will of course replace the VMs manager in this case
    in order to support

    the differences that have been identiﬁed between the virtual IoT resources and
    VMs.

    6. Conclusion and Perspectives

    This manuscript surveys the literature on PaaS architectures for industrial Internet.
    It relies on

    a set of IIoT use cases and PaaS reference architecture to derive the evaluation
    criteria. The relevant

    papers in the literature are reviewed in the light of these criteria. Although
    some of these papers

    focus on the whole spectrum of IoT verticals, others focus on speciﬁc IoT verticals
    or speciﬁc IoT

    technologies. The architectures that target the whole spectrum of IoT verticals
    follow a virtual

    vertical-based approach, a services compositions approach, or they sometimes focus
    on a sub-set of

    functionalities. WSN and robots are the speciﬁc verticals that have been targeted
    so far by the proposed

    IIoT PaaS. None of the reviewed architectures meets all the requirements at stake.
    In addition to the

    review effort, this manuscript discusses a set of fundamental research challenges
    and provides hints

    about how they may be tackled.

    In the near future, the author, with his research team, are planning to start
    two research projects

    related to this ﬁeld. The ﬁrst project aims at designing and prototyping an IoT
    hypervisor that is able

    to virtualize physical IoT devices and provide them as a service to IoT and IIoT
    cloud platforms. In a

    previous work [38], a speciﬁc hypervisor for robots was introduced and integrated
    with PaaS that

    provisions robots as a service. The next step is to generalize this solution and
    propose an IoT hypervisor

    that is able to virtualize the whole spectrum of IoT devices, independently of
    their speciﬁcities and

    characteristics. The second project aims at integrating Site Reliability Engineering
    (SRE) in IIoT

    cloud ecosystem. SRE relies on the software engineering concepts and applies them
    to infrastructure

    and operations problems. The ultimate goal is to design and achieve scalable and
    reliable systems.

    Integrating SRE capabilities to IIoT cloud ecosystem would considerably reduce
    the downtime and

    improve the the operational efﬁciency.

    Funding: This research received no external funding.

    Conﬂicts of Interest: The author declares no conﬂict of interest.

    Sensors 2020, 20, 2701

    17 of 19

    References

    1.

    Atzori, L.; Iera, A.; Morabito, G. From "smart objects" to "social objects": The
    next evolutionary step of the

    internet of things. IEEE Commun. Mag. 2014, 52, 97–105. doi:10.1109/MCOM.2014.6710070.
    [CrossRef]

    2.

    Xu, L.; He, W.; Li, S. Internet of Things in Industries: A Survey. IEEE Trans.
    Ind. Inf. 2014, 10, 2233–2243.

    [CrossRef]

    3.

    Mell, P.M.; Grance, T. SP 800-145. The NIST Deﬁnition of Cloud Computing; Technical
    Report; NIST:

    Gaithersburg, MD, USA, 2011.

    4.

    Yangui, S.; Glitho, R.H.; Wette, C. Approaches to end-user applications portability
    in the cloud: A survey.

    IEEE Commun. Mag. 2016, 54, 138–145. doi:10.1109/MCOM.2016.7509392. [CrossRef]

    5.

    Ray, P.P. A survey on Internet of Things architectures. J. King Saud Univ. Comput.
    Inf. Sci. 2018, 30, 291–319.

    6.

    Ray, P.P. A survey of IoT cloud platforms. Future Comput. Inf. J. 2016, 1, 35–46.
    [CrossRef]

    7.

    Botta, A.; De Donato, W.; Persico, V.; Pescapé, A. Integration of cloud computing
    and internet of things:

    A survey. Future Gener. Comput. Syst. 2016, 56, 684–700. [CrossRef]

    8.

    Ganguly, P. Selecting the right IoT cloud platform. In Proceedings of the International
    Conference on

    Internet of Things and Applications (IOTA), Pune, India, 22–24 January 2016; pp.
    316–320.

    9.

    Zikria, Y.B.; Kim, S.W.; Hahm, O.; Afzal, M.K.; Aalsalem, M.Y. Internet of Things
    (IoT) Operating Systems

    Management: Opportunities, Challenges, and Solution. Sensors 2019, 19, 1793. doi:10.3390/s19081793.

    [CrossRef]

    10.

    Gilchrist, A. Industry 4.0: The Industrial Internet of Things; Springer: Berlin/Heidelberg,
    Germany, 2016.

    11.

    Raissi, F.; Yangui, S.; Camps, F. Autonomous Cars, 5G Mobile Networks and Smart
    Cities: Beyond the Hype.

    In Proceedings of the 28th IEEE International Conference on Enabling Technologies:
    Infrastructure for

    Collaborative Enterprises, Naples, Italy, 12–14 June 2019; pp. 180–185. doi:10.1109/WETICE.2019.00046.

    [CrossRef]

    12.

    Bibani, O.; Mouradian, C.; Yangui, S.; Glitho, R.H.; Gaaloul, W.; Hadj-Alouane,
    N.B.; Morrow, M.; Polakos, P.A.

    A Demo of IoT Healthcare Application Provisioning in Hybrid Cloud/Fog Environment.
    In Proceedings of the

    2016 IEEE International Conference on Cloud Computing Technology and Science,
    CloudCom, Luxembourg,

    12–15 December 2016; pp. 472–475. doi:10.1109/CloudCom.2016.0081. [CrossRef]

    13.

    Carias, J.F.; Labaka, L.; Sarriegi, J.M.; Hernantes, J. Deﬁning a Cyber Resilience
    Investment Strategy in an

    Industrial Internet of Things Context. Sensors 2019, 19, 138. doi:10.3390/s19010138.
    [CrossRef]

    14.

    Cloud Computing Reference Architecture (CCRA) 4.0 Overview; Technical Report;
    IBM: New York, NY, USA, 2014.

    15.

    Liu, J.; Zhang, L.; Hu, B.; He, K. CCRA: Cloud Computing Reference Architecture.
    In Proceedings of the

    2012 IEEE Ninth International Conference on Services Computing, Honolulu, HI,
    USA, 24–29 June 2012;

    pp. 657–665.

    16.

    Li, F.; Vogler, M.; Claessens, M.; Dustdar, S. Towards Automated IoT Application
    Deployment by a

    Cloud-Based Approach. In Proceedings of the 6th International Conference on Service-Oriented
    Computing

    and Applications, Koloa, HI, USA, 16–18 December 2013; pp. 61–68. doi: 10.1109/soca.2013.12.
    [CrossRef]

    17.

    Li, F.; Vögler, M.; Claessens, M.; Dustdar, S.

    Efﬁcient and Scalable IoT Service Delivery on Cloud.

    In Proceedings of the Sixth International Conference on Cloud Computing, Santa
    Clara, CA, USA,

    28 June–3 July 2013; pp. 740–747.

    18.

    Mouradian, C.; Naboulsi, D.; Yangui, S.; Glitho, R.H.; Morrow, M.J.; Polakos,
    P.A. A Comprehensive

    Survey on Fog Computing: State-of-the-Art and Research Challenges. IEEE Commun.
    Surv. Tutor. 2018,

    20, 416–464. doi:10.1109/COMST.2017.2771153. [CrossRef]

    19.

    Lloret, J.; Garcia, M.; Tomas, J.; Rodrigues, J.J. Architecture and protocol for
    intercloud communication.

    Inf. Sci. 2014, 258, 434–451. doi:10.1016/j.ins.2013.05.003. [CrossRef]

    20.

    Rochwerger, B.; Breitgand, D.; Levy, E.; Galis, A.; Nagin, K.; Llorente, I.M.;
    Montero, R.; Wolfsthal, Y.;

    Elmroth, E.; Caceres, J.; et al. The Reservoir model and architecture for open
    federated cloud computing.

    IBM J. Res. Dev. 2009, 53, 4:1–4:11. [CrossRef]

    21.

    Sellami, M.; Yangui, S.; Mohamed, M.; Tata, S. PaaS-Independent Provisioning and
    Management of

    Applications in the Cloud. In Proceedings of the Sixth International Conference
    on Cloud Computing,

    Santa Clara, CA, USA, 28 June–3 July 2013; pp. 693–700. doi:10.1109/CLOUD.2013.105.
    [CrossRef]

    Sensors 2020, 20, 2701

    18 of 19

    22.

    Pisching, M.A.; Junqueira, F.; Santos Filho, D.J.; Miyagi, P.E. Service composition
    in the cloud-based

    manufacturing focused on the industry 4.0. In Proceedings of the Doctoral Conference
    on Computing,

    Electrical and Industrial Systems, Lisbon, Portugal, 13–15 April 2015; pp. 65–72.

    23.

    Esposito, C.; Castiglione, A.; Martini, B.; Choo, K.R. Cloud Manufacturing: Security,
    Privacy, and Forensic

    Concerns. IEEE Cloud Comput. 2016, 3, 16–22. [CrossRef]

    24.

    Alcaraz, C. Cloud-Assisted Dynamic Resilience for Cyber-Physical Control Systems.
    IEEE Wirel. Commun.

    2018, 25, 76–82. [CrossRef]

    25.

    Khan, I.; Belqasmi, F.; Glitho, R.; Crespi, N.; Morrow, M.; Polakos, P. Wireless
    sensor network virtualization:

    A survey. IEEE Commun. Surv. Tutor. 2016, 18, 553–576. doi:10.1109/COMST.2015.2412971.
    [CrossRef]

    26.

    Wu, F.; Wu, T.; Yuce, M.R. An Internet-of-Things (IoT) Network System for Connected
    Safety and Health

    Monitoring Applications. Sensors 2019, 19, 21. doi:10.3390/s19010021. [CrossRef]
    [PubMed]

    27.

    Doukas, C.; Antonelli, F. A full end-to-end platform as a service for smart city
    applications. In Proceedings

    of the 10th International Conference on Wireless and Mobile Computing, Networking
    and Communications

    (WiMob), Larnaca, Cyprus, 8–10 October 2014; pp. 181–186. doi:10.1109/WiMOB.2014.6962168.
    [CrossRef]

    28.

    Alam, M.N.; Glitho, R.H. An Infrastructure as a Service for the Internet of Things.
    In Proceedings of the

    7th IEEE International Conference on Cloud Networking, CloudNet, Tokyo, Japan,
    22–24 October 2018;

    pp. 1–7. doi:10.1109/CloudNet.2018.8549493. [CrossRef]

    29.

    Kamienski, C.; Soininen, J.; Taumberger, M.; Dantas, R.; Toscano, A.; Cinotti,
    T.S.; Maia, R.F.; Neto, A.T.

    Smart Water Management Platform: IoT-Based Precision Irrigation for Agriculture.
    Sensors 2019, 19, 276.

    doi:10.3390/s19020276. [CrossRef] [PubMed]

    30.

    Jiang, L.; Xu, L.D.; Cai, H.; Jiang, Z.; Bu, F.; Xu, B. An IoT-Oriented Data Storage
    Framework in Cloud

    Computing Platform. IEEE Trans. Ind. Inf. 2014, 10, 1443–1451. doi:10.1109/TII.2014.2306384.
    [CrossRef]

    31.

    Ma, X.; Lin, C.; Zhang, H.; Liu, J. Energy-Aware Computation Ofﬂoading of IoT
    Sensors in Cloudlet-Based

    Mobile Edge Computing. Sensors 2018, 18, 1945. doi:10.3390/s18061945. [CrossRef]

    32.

    Peralta, G.; Garrido, P.; Bilbao, J.; Agüero, R.; Crespo, P.M.

    On the Combination of Multi-Cloud

    and Network Coding for Cost-Efﬁcient Storage in Industrial Applications.

    Sensors 2019, 19, 1673.

    doi:10.3390/s19071673. [CrossRef]

    33.

    Badii, C.; Bellini, P.; Diﬁno, A.; Nesi, P. Sii-Mobility: An IoT/IoE Architecture
    to Enhance Smart City

    Mobility and Transportation Services. Sensors 2019, 19, 1. doi:10.3390/s19010001.
    [CrossRef]

    34.

    Ding, Y.; Neumann, M.A.; Gordon, D.; Riedel, T.; Miyaki, T.; Beigl, M.; Zhang,
    W.; Zhang, L.

    A Platform-as-a-Service for in-situ development of wireless sensor network applications.
    In Proceedings

    of the Ninth International Conference on Networked Sensing (INSS), Antwerp, Belgium,
    11–14 June 2012;

    pp. 1–8. doi:10.1109/INSS.2012.6240527. [CrossRef]

    35.

    Fazio, M.; Puliaﬁto, A. Cloud4sens: A cloud-based architecture for sensor controlling
    and monitoring.

    IEEE Commun. Mag. 2015, 53, 41–47. [CrossRef]

    36.

    Arumugam, R.; Enti, V.R.; Bingbing, L.; Xiaojun, W.; Baskaran, K.; Kong, F.F.;
    Kumar, A.S.; Meng, K.D.;

    Kit, G.W. DAvinCi: A cloud computing framework for service robots. In Proceedings
    of the 2010 IEEE

    International Conference on Robotics and Automation, Anchorage, AK, USA, 3–7 May
    2010; pp. 3084–3089.

    doi:10.1109/ROBOT.2010.5509469. [CrossRef]

    37.

    Hunziker, D.; Gajamohan, M.; Waibel, M.; D’Andrea, R.

    Rapyuta: The RoboEarth Cloud Engine.

    In Proceedings of the IEEE International Conference on Robotics and Automation,
    Karlsruhe, Germany,

    6–10 May 2013; pp. 438–444. doi:10.1109/ICRA.2013.6630612. [CrossRef]

    38.

    Mouradian, C.; Yangui, S.; Glitho, R.H.

    Robots as-a-service in cloud computing:

    Search and

    rescue in large-scale disasters case study.

    In Proceedings of the 15th IEEE Annual Consumer

    Communications & Networking Conference, CCNC 2018, Las Vegas, NV, USA, 12–15 January
    2018;

    pp. 1–7. doi:10.1109/CCNC.2018.8319200. [CrossRef]

    39.

    Byres, E.; Lowe, J. The Myths and Facts Behind Cyber Security Risks for Industrial
    Control Systems;

    Technical report; PA Consulting Group: London, UK, 2004.

    40.

    Dzung, D.; Naedele, M.; Von Hoff, T.P.; Crevatin, M. Security for Industrial Communication
    Systems.

    Proc. IEEE 2005, 93, 1152–1177. [CrossRef]

    41.

    Zonouz, S.; Rrushi, J.; McLaughlin, S. Detecting Industrial Control Malware Using
    Automated PLC

    Code Analytics. IEEE Secur. Privacy 2014, 12, 40–47. [CrossRef]

    Sensors 2020, 20, 2701

    19 of 19

    42.

    Satyanarayanan, M.; Bahl, P.; Caceres, R.; Davies, N. The Case for VM-Based Cloudlets
    in Mobile Computing.

    IEEE Pervasive Comput. 2009, 8, 14–23. doi:10.1109/MPRV.2009.82. [CrossRef]

    43.

    Yangui, S.; Ravindran, P.; Bibani, O.; Glitho, R.H.; Ben Hadj-Alouane, N.; Morrow,
    M.J.; Polakos, P.A.

    A platform as-a-service for hybrid cloud/fog environments. In Proceedings of the
    IEEE International

    Symposium on Local and Metropolitan Area Networks (LANMAN), Rome, Italy, 13–15
    June 2016; pp. 1–7.

    doi:10.1109/LANMAN.2016.7548853. [CrossRef]

    44.

    Zhang, H.; Xiao, Y.; Bu, S.; Niyato, D.; Yu, F.R.; Han, Z. Computing resource
    allocation in three-tier IoT

    fog networks: A joint optimization approach combining Stackelberg game and matching.
    IEEE Internet

    Things J. 2017, 4, 1204–1215. [CrossRef]

    45.

    Giang, N.K.; Blackstock, M.; Lea, R.; Leung, V.C. Developing iot applications
    in the fog: A distributed

    dataﬂow approach. In Proceedings of the 5th International Conference on the Internet
    of Things (IOT),

    Seoul, South Korea, 26–28 October 2015; pp. 155–162.

    46.

    Li, C.; Qin, Z.; Novak, E.; Li, Q. Securing SDN Infrastructure of IoT–Fog Networks
    From MitM Attacks.

    IEEE Internet Things J. 2017, 4, 1156–1164. [CrossRef]

    47.

    Yannuzzi, M.; Milito, R.; Serral-Gracià, R.; Montero, D.; Nemirovsky, M. Key ingredients
    in an IoT recipe:

    Fog Computing, Cloud computing, and more Fog Computing. In Proceedings of the
    19th International

    Workshop on Computer Aided Modeling and Design of Communication Links and Networks
    (CAMAD),

    Athens, Greece, 1–3 December 2014; pp. 325–329. doi:10.1109/CAMAD.2014.7033259.
    [CrossRef]

    48.

    Sánchez-Durán, J.; Hidalgo-López, J.; Castellanos-Ramos, J.; Oballe-Peinado, Ó.;
    Vidal-Verdú, F. Influence of

    Errors in Tactile Sensors on Some High Level Parameters Used for Manipulation
    with Robotic Hands.

    Sensors 2015, 15, 20409–20435. doi:10.3390/s150820409. [CrossRef]

    49.

    Chi, Z.; Li, Y.; Sun, H.; Yao, Y.; Lu, Z.; Zhu, T. B2w2: N-way concurrent communication
    for iot devices.

    In Proceedings of 14th ACM Conference on Embedded Network Sensor Systems CD-ROM,
    Stanford, CA,

    USA, 14–16 November 2016; pp. 245–258.

    50.

    Mourtzis, D.; Vlachou, E.; Milas, N. Industrial Big Data as a result of IoT adoption
    in manufacturing.

    Procedia Cirp 2016, 55, 290–295. [CrossRef]

    51.

    Murray, D.G.; Schwarzkopf, M.; Smowton, C.; Smith, S.; Madhavapeddy, A.; Hand,
    S. CIEL: A Universal

    Execution Engine for Distributed Data-Flow Computing. In Proceedings of the 8th
    USENIX Conference on

    Networked Systems Design and Implementation, Boston, MA, USA, 30 March–1 April
    2011; pp. 113–126.

    52.

    Yangui, S.; Mohamed, M.; Tata, S.; Moalla, S. Scalable Service Containers. In
    Proceedings of the IEEE Third

    International Conference on Cloud Computing Technology and Science, Athens, Greece,
    29 November–1

    December 2011; pp. 348–356. doi:10.1109/CloudCom.2011.54. [CrossRef]

    53.

    Moreno-Vozmediano, R.; Montero, R.S.; Llorente, I.M. Key Challenges in Cloud Computing:
    Enabling the

    Future Internet of Services. IEEE Internet Comput. 2013, 17, 18–25. doi:10.1109/MIC.2012.69.
    [CrossRef]

    c⃝ 2020 by the author. Licensee MDPI, Basel, Switzerland. This article is an open
    access

    article distributed under the terms and conditions of the Creative Commons Attribution

    (CC BY) license (http://creativecommons.org/licenses/by/4.0/).

    '
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/20/9/2701/pdf?version=1589269562
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: A Panorama of Cloud Platforms for IoT Applications Across Industries
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.12785/ijcds/130109
  analysis: '>'
  authors:
  - Sadia Showkat
  - Shaima Qureshi
  citation_count: 1
  full_citation: '>'
  full_text: '>

    International Journal of Computing and Digital Systems

    ISSN (2210-142X)

    Int. J. Com. Dig. Sys. 13, No.1 (Jan-2023)

    http://dx.doi.org/10.12785/ijcds/130109

    Securing the Internet of Things Through Blockchain Approach:

    Security Architectures, Consensus Algorithms, Enabling Technologies, Open Issues,

    and Research Directions

    Sadia Showkat1 and Shaima Qureshi2

    1Department of Computer science and Engineering, National Institute of Technology
    Srinagar, J&K

    2Department of Computer science and Engineering, National Institute of Technology
    Srinagar, J&K

    Received 25 Oct. 2021, Revised 5 Jan. 2023, Accepted 12 Jan. 2023, Published 31
    Jan. 2023

    Abstract: The rapid expansion of the Internet of Things (IoT), particularly in
    critical infrastructures, necessitates strict security and

    privacy standards. Owing to data proliferation, Cyber-physical systems (CPS) rely
    on computing platforms for the provision of services

    and resources. The futuristic “Beyond 5G” (B5G) enabled critical IoT infrastructures
    cannot run on centralized systems due to their

    security vulnerabilities that compromise the basic Confidentiality-Integrity-Availability
    (CIA) triad. Blockchain technology (BCT) is

    emerging as a key enabler in addressing IoT’s security challenges, and it is compliant
    with the Fog-IoT architecture. The Ethereum

    platform has ushered an unprecedented development in BCT by facilitating application
    development. Blockchain (BC) connects the

    users’ chain identity to the transactions associated with their tokenized digital
    assets and confers the ability to audit the system. The

    history of canonical transactions is recorded in an immutable fashion facilitating
    data tracking and deterrence of data repudiation. A

    Consensus mechanism (CM) governs the state transitions and the node behavior in
    building trust relationships between various entities

    in the absence of a central authority. Through Smart Contracts(SCs), distributed
    and trustworthy access control can be achieved for

    IoT systems besides enhancing automation. We argue that BCT adoption is inevitable
    in securing futuristic B5G enabled IoT critical

    infrastructures for ensuring flexible and fine-grained access control, authentication,
    communication, and data security. Various challenges

    are associated with their adoption, such as the rising cost of Ethereum and constraints
    in the IoT environment. To facilitate BC solutions

    for IoT security, the functionality of BCT must be complemented with other technologies
    such as Machine Learning (ML), Edge

    Computing (EC), and InterPlanetary Filesystem(IPFS).

    Keywords: Blockchain, IoT, Edge Computing, Consensus, Security, Privacy, Smart
    contracts, IPFS B5G, Access control.

    1. INTRODUCTION

    The industry is rapidly evolving into a holistic network

    of intelligent systems capable of making data-driven deci-

    sions. Many technologies have aided this transition, with

    IoT being at the core. IoT connects devices and couples

    them to the internet forming a CPS. IoT is at the center

    of intelligent applications in and outside the industry. IoT

    offers the remote control and monitoring of equipment

    and catalyzes data-driven automated decision and action-

    taking capabilities, resulting in increased system efficiency

    and throughput while lowering costs. IoT is causing a

    major upward shift in the revenue pool, and its growth

    can be assessed by the increase in the number of practical

    applications across regions.

    IoT enables a pervasive interconnection of virtual and

    physical objects for accelerated data sharing and collection.

    Sensing capabilities are embedded in intelligent devices

    such as smartphones, laptops, and fitness monitors, while

    intelligence is built into traditional sensors for extensive

    data monitoring. As per the Ericson report, by 2050, there

    will be 24 billion interconnected IoT devices [1]. The data

    streams are generated continuously with volumes reaching

    exabytes; thus, the data is referred to as IoT Big data. At

    present, Cloud Computing and Fog Computing are the most

    popular provisions to handle the high-end computing and

    storage demands of IoT big data [2].

    IoT aims to create intelligent, unified, fully distributed,

    secure, and cost-efficient systems. Reliable storage, data

    awareness, ease of access, scalability, and channel security

    are important parameters while adopting a wireless system.

    IoT systems come with inbuilt security measures that can

    be bypassed due to their intrinsic traits.Various factors are

    responsible for hindering the pace of IoT security. These

    include:

    1)

    Any end- end encryption technique employed to

    provide data security in networks is challenging to

    be embedded in IoT networks due to the constrained

    E-mail address: sadia 01phd18@nitsri.net, shaima@nitsri.net.

    98

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    nature of the devices.

    2)

    IoT devices are lodged in uncontrollable, heteroge-

    neous, complex, open, untrustworthy environments,

    which magnify the attack space.

    3)

    Lack of standard architecture, a common address-

    ing scheme limits the integration and replication of

    security measures from other IoT systems.

    4)

    IoT is an ever-growing field, and the security features

    of constrained devices are not evolving at the same

    pace as the system itself.

    5)

    The adoption of computing platforms forces frequent

    transfer of data. Implementing robust cryptographic

    algorithms is expensive and increases the overall cost

    of the system.

    6)

    IoT systems communicate across different domains

    and require fine-grained Access control(AC) mecha-

    nisms for collaboration.

    Cloud and Fog platforms are vulnerable to cyber-attacks and

    fail to meet the demand for flexible cross-domain interop-

    erability across multiple systems with distributed resources.

    The Data Management (DM) systems are centralized and

    prone to hackers who can manipulate the database, thereby

    compromising data integrity. The overreliance on a central-

    ized database causes the “Single point failure” problem. The

    monetary transactions require the intermediation of a third

    party, which incurs verification costs and increases privacy

    concerns. These centralized architectures are prone to secu-

    rity threats that disorder the regular operation of systems.

    These include Denial of Services(DoS), Distributed Denial

    of Services(DDoS), Ransomware attacks, Eavesdropping,

    Side-channel attacks, Spoofing, Routing attacks, Man in the

    middle attack, SQL injection, and Phishing [3].

    With the advancement in B5G technology, IoT is set to

    transform the existing digital landscape, but its inadequate

    security features have limited its adoption. B5G mobile

    communication technologies aim to provide high-speed

    transmission network support and enormous access points

    to maximize IoT capabilities [4]. The security measures of

    such applications need enhanced security and efficient DM.

    BCT is emerging as a promising paradigm for bringing

    disruptions in IoT security and is highly compliant with

    the Fog-like system of architecture [5].

    BCT has created a paradigm shift by enabling trusted and

    anonymous transactions. BCT establishes trust between the

    communicating nodes, and the decision-making is based

    on CMs suitable in distributed environments. Owing to its

    unique propensities– Immutability, Transparency, Traceabil-

    ity, Resilience, and Encryption, the adoption of BCT is

    suitable for the realization of futuristic peer-peer, trustless

    applications. BCT supports tokenized assets, and the nodes

    in the network interact automatically without the interven-

    tion of any central authority. This increases the privacy of

    the network and eliminates the management cost.

    BCT is creating major reforms in IoT management and se-

    curity. The IoT transactions are encrypted and secured using

    digital signatures and cryptographic keys. BCT eliminates

    the security threats with a distributed CM and provides a

    Figure 1. Centralized Vs. BC-based IoT

    true system state upon which every legitimate user agrees.

    With the integration of BCT, IoT applications are becoming

    decentralized, transactions are trusted and anonymous, and

    cross-domain interaction is enhanced. The system security

    is increased through ownership records, encrypted trans-

    actions, distributed storage, consensus, and authentication

    mechanisms. Figure 1 illustrates the difference between a

    centralized and BC-based IoT system.

    There are multiple challenges concerning the BC integrated

    IoT systems, such as network complexity, limited band-

    width, computation capabilities, data diversity, scalability,

    and throughput. Conventional CMs consume huge amounts

    of resources to slow down the access rate of new blocks and

    protect the BC network from attacks, which is too expensive

    for resource-limited IoT devices. Further, the capacity of a

    new block is limited, and transactions per second (TPS)

    are usually limited to 20 to 30 TPS in Ethereum, rendering

    the system unable to respond to the influx of transactions

    [6]. With tradeoffs between adversity tolerance, latency,

    and energy consumption, research on IoT suitable CMs is

    growing.

    BC itself suffers from security and privacy issues. Imple-

    menting longer chains is challenging, and the SCs can prove

    to be a double-edged sword. The cost of Ethereum is rising

    continuously, making the storage and transactions expen-

    sive for large-scale adoption. The underlying technologies

    powering BCT consume high power and are not suitable for

    IoT. BCT can revolutionize IoT, but enabling technologies

    such as IPFS, ML and EC must be integrated with BC to

    outweigh its current limitations.

    IPFS is a distributed file system that can resolve BC

    –IoT big data problems. Instead of storing the data on

    the chain, IPFS hashes identifying the files are kept in

    the BC. The hash on the BC assures that the file has not

    been tampered with. File hashes can be used to link files

    to their owners and access rights.Solving complex puzzles

    such as Proof of work consumes a significant amount of

    CPU time and energy, making it unsuitable for resource-

    constrained IoT nodes. EC enables edge devices to carry out

    data resource incentive transactions and can be leveraged for

    performing consensus. Information hidden in IoT big data

    can be harnessed by feeding them to ML models, producing

    more generalized results on big data.The integrity of the

    data can be maintained by feeding trustworthy data to ML

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    99

    through BC. Conversely, more security can be imparted into

    BC through ML.

    BCT is regarded as a promising technology for IoT because

    it provides significant solutions for decentralized networks

    that address trust and security concerns. Although BC

    outperforms centralized solutions in network security, BC-

    IoT integration is still in its early stages of adoption. Many

    challenges such as cost, compatibility, and privacy issues

    hinder the widespread adoption of BC security solutions

    in IoT. To realize the full potential of BC-based IoT,

    exhaustive research is necessary for exploring the enabling

    technologies for BC in lightweight( LW) environments.

    A. Objective and Contribution

    This paper aims to provide a comprehensive overview

    of the potential and challenges of BC-based IoT security

    solutions and enabling technologies, open issues, possible

    solutions, and future research directions. There are four

    focal research points of our study, and are listed below-

    1)

    Firstly, to highlight the problems in centralized-based

    IoT solutions and understand why shifting to BC-

    based solutions is necessary.

    2)

    Since the robustness of a BC-based system is highly

    dependent on its underlying consensus mechanism,

    the aim is to conduct an in-depth comparative anal-

    ysis of CMs that are IoT suitable.

    3)

    Thirdly, to critically review the existing BC-based

    IoT security solutions in view of five IoT security

    tasks-

    a)

    Key Management and Access control.

    b)

    Device Authentication.

    c)

    Routing Security.

    d)

    Malware Prevention. and

    e)

    Data Protection and Secure Database Manage-

    ment.

    4)

    Fourthly, to highlight the open challenges in the

    BC-IoT integration and list out key future research

    directions.

    The main contributions of the paper are as follows:

    1)

    We have conducted a thorough survey of recent

    surveys(2019-early 2022) on BCT applicability in

    IoT. Other researchers may find this pool useful as

    a starting point for their research.

    2)

    We have discussed BC as a key enabling technology

    for IoT and three technologies that power BC-IoT.

    3)

    We have reviewed CMs in light of IoT.

    4)

    A primary literature review of the recent BC inte-

    grated IoT solutions in perspective of five specific

    IoT security tasks.

    5)

    We have discussed the cost analysis of IoT storage

    through SCs, network traffic modeling, SC vulner-

    abilities, BC transactional privacy, and other chal-

    lenges.

    6)

    We have thoroughly discussed the open issues and

    presented strong research directions.

    B. Paper Organization

    The remainder of the paper is organized as follows. In

    Section 2, the scope of the survey is presented. Section

    3 presents the security vulnerabilities of six critical IoT

    applications and lays the rationale for moving toward de-

    centralized architectures. In Section 4, we briefly provide

    an overview of BCT, its architecture, and CMs. Section 5

    presents the highlights of the recent surveys (2019-early

    2022). Based on the study in section 5, we discuss BC as

    a key facilitator for IoT and technologies that accelerate

    BC adoption in IoT in Section 6. In Section 7, a detailed

    study of BC integrated IoT security architectures and a

    comparison of various CMs, their adoption, and tradeoffs

    is discussed. In section 8, a literature review of BC-based

    security solutions is presented. In section 9, we present a

    thorough overview of the challenges associated with BC

    adoption in IoT, point out the open issues and possible

    solutions, and suggest promising research directions

    2. Scope of the survey

    We begin our review with a study of the prevalent

    centralized IoT architectures and discuss their security vul-

    nerabilities. We identify five primary security tasks, evaluate

    them against centralized solutions, and determine their

    limitations and the need to shift to decentralized solutions

    such as Blockchain. We then discuss the fundamentals of

    Blockchain. The working of the SCs have been excluded,

    and instead, their security vulnerabilities and applicability

    has been discussed. Considering the vastness of BC appli-

    cability, especially in IoT security, we shortlist a pool of re-

    cent survey papers (2019-early 2022) and comprehensively

    highlight their key focal points. The research papers have

    been shortlisted based on keywords, the number of times

    cited, and relevance to one of the five domains- General

    IoT security, IoT suitable CMs, BC-based IoT applications,

    BC for B5G applications, and integration with Machine

    Learning and BC- Edge computing. Other researchers may

    find this pool useful as a starting point for their research.

    Based on our secondary survey, we broadly discuss the

    reason for merging BC with IoT, how BC is a key enabling

    technology for IoT and what technologies drive BC and

    mitigate the challenges associated with BC adoption in

    IoT. We have discussed three enabling technologies for

    powering BC adoption in IoT- EC, IPFS, and ML. We

    then discuss the BC-IoT integration in great detail and

    present the technicalities of BC adoption in IoT. Since a

    BC network is only as good as its consensus, we conduct

    a detailed comparative analysis of CMs in light of IoT

    goals and related tradeoffs. Based on the study, we shortlist

    IoT suitable CMs and BC platforms. We then review the

    recent BC-based IoT architectures and evaluate them against

    the previously identified security tasks. We have filtered a

    subset of research papers(2018-early 2022) where the focal

    points are specifically the five IoT security tasks mentioned

    in subsection 1(A). Each paper’s experimental work and re-

    sults have been carefully studied, and the aim, architecture,

    pros, and cons of each solution have been comprehensively

    summarized. Finally, based on the literature review of BC-

    100

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    IoT architectures, we thoroughly discuss the challenges in

    BC-IoT integration and present research issues and future

    research directions.

    3. Security vulnerabilities of Centralized IoT applica-

    tions:

    IoT’s centralized architecture has three major network

    components-a) End devices: These are devices with sensing

    and actuating abilities coupled to the CPS. They amass

    data in the environment that they are lodged in and take

    action. b) Gateways and Data acquisition systems (DAS):

    DASs acquire data from sensors, and the gateways enable

    the Device-Cloud interactions working on different network

    protocols. c) Computing platforms: The data is relayed

    to platforms that provide storage, processing, hardware,

    software, and analytical support to the system.

    A. IoT Goals

    IoT architecture must satisfy the following primary

    goals:

    1)

    Low Power consumption: IoT devices are con-

    strained and require low-powered communication

    protocols to increase the network’s lifetime.

    2)

    Adaptability: The addition of new devices, frequent

    changes in the network conditions, and mobility of

    devices are essential factors in an IoT network. IoT

    architecture must be flexible to changes that the

    network encounters.

    3)

    Interoperability: Heterogeneity is a prime character-

    istic of IoT data. Well-defined standards and middle-

    ware are necessary to ensure ubiquitous computing.

    4)

    Latency prevention: The data processing must be

    done in a timely manner, especially in critical ap-

    plication domains.

    5)

    Accuracy: The data must be consistent and accurate

    throughout the process. The veracity of the data must

    be ensured, and the communication should be non-

    lossy.

    6)

    Fault tolerance: The architecture must contain a

    distributed and decentralized system to ensure ro-

    bustness and resilience.

    7)

    Security protection: Data must be protected against

    malicious cyberattacks. The transmitted data must

    not be altered at any level.

    8)

    Privacy Preservation: The transmitted data must only

    be available to the users participating in exchanging

    information.

    9)

    Low cost: The overall cost of deployment, network

    communication, storage, and maintenance should be

    low. Affordability is an essential factor in making

    IoT a viable business paradigm.

    10)

    Scalability: IoT is an ever-growing field. New de-

    vices are added to expand the existing networks. The

    architecture must be flexible to the growth of the

    network

    1) IoT Security Goals

    An IoT network must satisfy the following security

    goals:

    1)

    Confidentiality: Data transmitted must be accessible

    only to authentic users. Encryption mechanisms must

    be employed to protect the data.

    2)

    Integrity: The data transmitted must be trustworthy.

    The data received must not be modified in an unau-

    thorized manner.

    3)

    Availability: The data must not be lost in transit. DoS

    must be avoided.

    4)

    Authenticity: The data must originate only from

    trusted sources only. The Authentication issue in-

    cludes the capability to identify the devices in the

    IoT-based system.

    5)

    Non-Repudiation: The data transfer must be bound

    by proof of data ownership. The sender and receiver

    must acknowledge the transfer of data and not deny

    it at a later stage.

    6)

    Authorization: This refers to granting permissions to

    access data or perform an operation on authenticated

    objects and persons.

    B. Security of Centralized IoT applications:

    The number of IoT applications has increased signifi-

    cantly as a result ofthe development of open-source cloud

    platforms, such as Azure IoT Suite, Amazon Web Services,

    and Oracle IoT. IoT is at the root of various critical applica-

    tion infrastructures such as Smart Home, Smart City, Smart

    Health, Smart Agriculture, Smart Retails, Supply Chain

    Management, Finance, Industrial Control Systems, Commu-

    nication Networks, Smart Grids, and Smart Transportation

    [7]. These applications generate personal and sensitive

    information, raising the need for secure DM. Centralized

    schemes are susceptible to attacks, and a hacker can modify

    the AC policies to gain control of the system. Decentralized

    schemes are necessary for securing IoT Applications. The

    centralized nature of the application is vulnerable to various

    security threats at all levels, as depicted in Figure 2. In this

    subsection, we discuss six critical application domains:

    Figure 2. Security attacks in IoT

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    101

    1)

    Smart city (SCT): SCT has Information and Com-

    munication Technology (ICT) at the core of its

    infrastructure. SCT provides several innovative and

    advanced services to its citizens to improve their

    quality of life. Intelligent information is provided

    to its citizens in real-time by fully enabling the

    control of the physical objects. Various SCT appli-

    cations include Healthcare, Smart buildings, Public

    safety, Smart Governance, and Smart agriculture.

    SCT faces large-scale security and privacy risks. The

    resource-constrained devices used, such as sensors

    and cameras which collect and share sensitive infor-

    mation, are very vulnerable to attacks by hackers.

    Most of the resource-constrained devices have no

    adequate security or privacy mechanism. The com-

    munication technologies used by IoT devices like

    RFID, NFC, WiFi, LPWAN (Low Power Wide-area-

    network), 6LoWPAN 3G,and 4G mobile technolo-

    gies are highly susceptible to attacks. The presence

    of multiple links between many system components

    exposes them to many security risks [8], [9], [10].

    2)

    Smart HealthCare (SHC): One of the major do-

    mains in the IoT-based infrastructure is SHC. Wear-

    able and mobile devices in IoT-based SHC have

    added tremendous value to the healthcare domain.

    SHC is responsible for making healthcare person-

    alized, more convenient, and efficient. The various

    applications of SHC include assisting diagnosis and

    treatment, health management, disease prevention,

    risk monitoring, virtual assistants, smart hospitals,

    and assisting drug research. SHC is highly vulnera-

    ble to security breaches and faces many malignant

    attacks, including privacy leakage, data tampering,

    and forgery. SHC deals with sensitive and personal

    data. The data collected through sensors are both

    static or have dynamic behavior. The breach of such

    data is considered a severe breach in data protection.

    The connected devices capture, aggregate, process,

    and then transfer the data to the cloud. These devices

    are vulnerable to tag cloning, spoofing, RF Jamming,

    and cloud polling. SHC has a centralized dataset that

    contains personal information such as family history,

    electronic medical records, and genomic data that

    must be secured from malicious software. Wireless

    networking technology deployed in the healthcare

    environment like Wi-Fi, BLE, and ZigBee results

    in an increased threat of eavesdropping, sybil, and

    sinkhole attacks [11], [12], [13].

    3)

    Smart Grid (SG): SG constitutes one of the most

    critical applications of the IoT. SG entails integrating

    the data communications network and the power

    grid to analyze the data collected from transmission

    lines, distribution substations, and consumers. The

    transmission and distribution of the power networks

    in SG are intelligently monitored at a fine granularity

    for high accuracy. Several IoT architectures have

    been proposed to be integrated with SG. Layer 1

    architecture consists of the Smart meters, Network

    Devices, and Communication protocol in the general

    three-layered architecture. Layer 2 contains devices

    responsible for receiving data at the central system.

    Layer 3 includes artificial intelligent systems to

    provide information to decision and billing systems.

    IoT-based SG as a cyber system faces security

    challenges at all three levels. The attacks can be

    categorized into four main types: Device attack, Data

    attack, Privacy attack, and Network availability at-

    tack. Authentication, user privacy, and data integrity

    are essential in SG. Only the intended recipients

    must access the data stored or transmitted. Secure

    authorization and control access is an important issue

    for IoT-based SG. Only a certified and authorized

    person should be granted the necessary access to

    perform any configuration of the smart meter [14],

    [15], [16].

    4)

    Smart Home (SH): An IoT-based SH refers to the

    environment of living that consists of highly intelli-

    gent and advanced automatic systems. Smart services

    are provided by various heterogeneous electronic

    devices networked together to provide smart ser-

    vices. An IoT-based SH performs various function-

    alities such as controlling and monitoring lighting,

    home temperature, appliances, intrusion detection,

    and energy management. Convenience and secu-

    rity are considered two key factors influencing the

    decision of the users in adopting IoT-based SHs.

    An SH must satisfy five security goals- Authenti-

    cation, Authorization, Integrity, Confidentiality, and

    Availability. SH faces many security-related issues

    owing to its basic architecture, such as eavesdrop-

    ping. An attacker can capture the traffic in infras-

    tructure among the different components of SH,

    thus violating confidentiality. The data captured can

    lead to an impersonation attack where an adversary

    masquerades as an authentic user and accesses IoT

    resources. DoS attacks can be performed by crafting

    malformed messages, resulting in provided service

    not processing the data properly, thereby compro-

    mising the availability [17], [18], [19].

    5)

    Smart Farming/Agriculture (SF/SA): IoT-based

    SF solutions refer to the system in which the crop

    field is monitored with the help of sensors, and

    the irrigation system is automated. The monitoring

    of the farm can be done from anywhere by the

    farmer. In IoT Smart Agriculture (SA), far advanced

    sensors are utilized, connected to the cloud via

    cellular and satellite networks. Thus the real-time

    data received assists in making effective decisions.

    However, there remain many security and privacy

    issues which are critical to the performance of

    SA/SF. Wireless sensors are used abundantly in SA

    to give up-to-date information to the farmer in real-

    time. Centralized systems store the information and

    have control over it, compromising the privacy of

    the system. Furthermore, communication plays a key

    role in SA/SF. The vulnerable nature of wireless

    102

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    technology results in the interception of data packets.

    The data is susceptible to modification while relaying

    them to their destinations, compromising the CIA

    triad and leading to incorrect decision-making [20],

    [21], [22].

    6)

    Smart Transportation: With the rapid develop-

    ment in smart sensors, smart vehicles, and vehicular

    communication technology, the Internet of Vehicles

    (IoV) is proposed to be the future of the trans-

    portation critical infrastructure system. The evolu-

    tion of the IoV can be considered from its parent

    branch of IoT, with the focus on Vehicular Adhoc

    Networks. With sensors embedded in the vehicles,

    mobile phones, and the devices installed in the

    city, there is a possibility to offer an optimized

    suggestion of routes, easy parking reservations, eco-

    nomic street lightning, prevention of accidents, and

    autonomous car driving. Due to the dynamic nature

    of the vehicle to infrastructure (V2I) and vehicle to

    vehicle (V2V) communication, the real-time traffic

    state information measured and shared is essential

    in providing efficient and secure service in IoV.

    Since this communication is deployed in an open

    environment and topologies change over time, many

    vehicles enter the IoV system in a given time slot,

    making it challenging to identify and authenticate

    the legitimacy of each vehicle. This nature of the

    IoV network makes it difficult to ensure security and

    non-repudiation. As a result, the malicious attack can

    be easily launched to disrupt the services provided,

    leading to low traffic efficiency and compromising

    the safety of passengers. The high availability of

    IoV is important due to its safety-critical nature,

    which requires fail-safe, resilient, and fault-tolerant

    operations to be performed [23], [24], [25].

    C. IoT Security Tasks:

    The Security tasks can be broadly classified into five cat-

    egories spanning different IoT infrastructure levels. These

    include:

    1)

    Key and AC management: Only authorized person-

    nel must be given access to perform an operation or

    to access data. Fine-grained AC mechanisms must

    be devised in a heterogeneous environment, where

    cross-domain interoperability is a must.

    2)

    Authentication of Devices: It is a must that the

    legitimacy of every node participating in the network

    is proven to the root. The devices must also verify

    their data integrity and provide non-repudiation of

    the messages while interacting with other nodes.

    3)

    Data sharing and Routing security: IoT system pro-

    vides untethered access to information by transmit-

    ting data through uncertain and insecure channels.

    Securing the data and routing operation from cyber-

    attacks during transit is essential.

    4)

    Prevention against software failures: IoT systems

    are susceptible to Malware threats that can disrupt

    the entire functionality of the system. Adware, Ran-

    somware, Spyware protection is necessary to protect

    the IoT ecosystem.

    5)

    Secure and privacy-preserving data storage and man-

    agement: A central authority controls a centralized

    system that has complete control over the users’

    data. IoT systems require secure, tamper-resistant,

    and privacy-preserving database storage and man-

    agement.

    4. Blockchain Technology

    Blockchain is a distributed digital ledger consisting of a

    series of time-stamped blocks linked together through a CM

    forming a decentralized and distributed network [26]. A set

    of rules guides the transactions, and the system is free of

    any central authority. Instead, a peer-peer (p2p ) network is

    responsible for maintaining and updating the ledger. Con-

    ceived originally to prevent the “double-spending” problem

    in commercial transactions, the first widespread application

    of BC was the cryptocurrency Bitcoin’. However, since its

    inception in 2008, BCT has found applications in various

    other sectors such as Banking, Asset Management, Health-

    care, IoT security, Identity management, and Insurance [27].

    The World Economic Forum estimates that the BC would

    store 10 % of global GDP in the coming decade.

    Blockchain is a decentralized ledger that contains trans-

    actional records.The information that is contained in the

    ledger is in digital format. A large number of transactions

    are contained in the block of the BC.For every transaction

    that occurs in the BC, the author’s digital signature is re-

    quired, and every participant’s ledger is updated.By the very

    inherent design of the BC,the chain’s data is highly secure,

    which guarantees the fidelity and security of a record of the

    data.This generates trust without the need for some other

    third party. The validation and tamper-resistant transactions

    are managed by a large number of nodes[28].BC can also

    be described as distributed ledger technology that provides

    certificates to prove that information has not been tampered

    with[29].

    Four crucial technologies are guiding BCT. These include

    Hashing, Cryptography, Digital signatures, and Consensus.

    Hash function takes data of indefinite sizes as input and

    gives a value of definite size in the output. Even a minor

    change in the input leads to a completely different hash

    value. BCT is based on the SHA-256 hash function.The cor-

    responding hash is computed in the encryption block when

    a transaction is made, and the blocks are connected through

    the hashes [30]. For secure interaction, BCT employs

    public-key asymmetric cryptography [31]. Cryptography

    ensures confidentiality, accessibility, and integrity,assuming

    that the attack is computationally bound (the probability of

    which is high). Membership services governed by protocols

    maintain and manage the unique chain identity of the user.

    BCT uses a public key –private key mechanism for the

    identification of devices and signing transactions. A wallet

    contains information about public and private keys and

    tokenized digital assets associated with the client. Every

    transaction on the chain is digitally signed, thus associated

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    103

    TABLE I. Comparison of Blockchain types.

    Characteristics

    Permissionless

    Permissioned

    Consortium

    Decentralization

    High

    Low

    Moderate

    Scalability

    Low

    High

    Moderate

    Immutability

    High

    Low

    Moderate

    Computational overheads

    High

    Low

    Moderate

    Communication overheads

    High

    Low

    Moderate

    Storage requirement

    High

    Low

    Moderate

    Power consumption

    High

    Low

    Moderate

    Latency

    High

    Low

    Moderate

    Openness

    High

    Low

    Moderate

    with the on-record identity of the client.The CM governs

    network synchronization in the open network and ensures

    that the system verifies any transaction initiated. These

    four technologies enable the following in BCT-based open-

    access systems: [32]

    1)

    Decentralization:

    The

    transactions

    are

    validated

    without the interference of a central authority. The

    system is decentralized, and the information is dis-

    tributed and replicated across multiple nodes. The

    nodes agree upon the actual state of the ledger

    through a CM.

    2)

    Auditability: The records and transaction history on

    the chain serves as proof of ownership of the client’s

    digital assets and the transactions associated with

    them. The historical timestamp associated with the

    data is permanently stored in the BC.

    3)

    Integrity: The blocks are linked in chronological

    order with hashes. Thus, any malicious attempt to

    tamper with a block is readily detected.

    4)

    Transparency: BCs impart trust in a trustless environ-

    ment. A copy of the transaction information is visible

    to all the nodes. Any node can join an open BC

    system and access the network. The data is visible

    to everyone in the chain involved in the verification

    of transactions.

    5)

    Immutability:A record, once written, takes up a

    permanent place in the ledger. The ledger holds

    these records perpetually, imparting verifiability in

    the system.

    BCs are of 3 types- Public BCs, Private, and Consortium

    BCs. Public/ Permissionless BCs allow any user to join the

    network based on the consensus protocol, e.g., Bitcoin. Pub-

    lic BC has the capability of turning into a global network.

    A Private/Permissioned BC allows a specific set of nodes to

    be added to the chain providing a closed and more secure

    network [33]. Private BC is centrally controlled, and such a

    network is ideal for transmitting and sharing data within an

    organization. E.g., GemOS is a private BC. Finally, a hybrid

    approach that is partially centralized with lesser validators

    is called a consortium/Federated BC, where the control is

    distributed across a set of computers. Ethereum is a platform

    for building consortium BCs [34]. A comparison of the

    characteristics of the three types of BCs is depicted in Table

    I.

    A. Blockchain Framework:

    A Blockchain system has three layers- Data layer, Con-

    sensus Layer, and Application layer.

    1)

    Data Layer: Data layer governs the block creation.

    Secure identities are provided to each node, and

    dependence is created through network protocols.

    The network protocols govern the formation of p2p

    networks and secure transmission over links. The

    blocks contain two prime components- Chain of

    blocks and Transaction array.

    a)

    Chain of Blocks: BC is a distributed database

    containing a sequence of blocks that stores

    records of value and interest. Each block has a

    Block header(BH) and a Block body(BB). The

    BH stores the block version, which specifies

    the block validation rule set, a nonce which

    acts as a counter to verify the hash, a times-

    tamp to denote time, a Merkle root which

    stores the hash of all the underlying hashes

    of all the transactions in a cryptographic data

    structure called Merkle tree, the current block

    hash and the hash of the previous block. The

    BB contains the transaction data, an object

    recorded on blocks, organized by the Merkle

    tree [35].

    b)

    Transaction array: Every transaction is stored

    in the transaction array before adding it to the

    block. The transactions refer to exchanging

    value assets such as sending money, data,

    values, and messages. The basic skeleton of

    a Blockchain is shown in Figure 3.

    2)

    Consensus layer:This layer performs the core func-

    tionality of a BC system, i.e., bringing agreement on

    the system state in a trustless environment through

    consensus. The consensus is generally achieved by

    choosing a miner who packs the transactions into

    a new block and broadcasts it to the network.

    Figure 4 shows the steps involved in BC-based

    transactions. The four most popular BC CMs are

    Proof of Work(PoW), Proof of stake(PoS), Delegated

    104

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    Figure 3. A basic skeleton of Blockchain.

    Proof of stake(DPoS), and Practical Byzantine Fault

    Tolerance(PBFT). In PoW, the stakeholder(s)/miners

    compete to mine the block by calculating hashes

    until one node has the relevant value. In two

    nodes attaining the value simultaneously(rare) and

    the chain branches, the longest chain after the next

    block is taken as the real chain making the chains

    metastable. PoW requires complex computation and

    power resources. In PoS, a stakeholder/validator is

    chosen through a quasi-random process depending

    on his wallet credit, making the system run on low

    energy and computing resources but encouraging

    the nodes with nothing at stake to misbehave. In

    PBFT, the majority must agree on the network’s

    state, i.e., for a client transaction to commit, 2/3rd

    of the network must validate it. In DPoS, the nodes

    /delegates are chosen through voting to add a block

    to the root chain. In case of abnormal behavior

    by the delegate node, the other nodes can vote it

    out. However, the delegates are significantly less

    than the network and govern consensus, encourag-

    ing centralization. Some more CMs are Proof of

    Delegated Byzantine Fault Tolerance(DBFT), Proof

    of Burn(PoB), Proof of Capacity(PoC), Proof of

    Elapsed time(PoET), Dirted Acyclic graphs(DAG),

    Proof of Activity(PoA), Proof of Importance(PoI),

    and Leased Proof of Stake(LPoS) [36].

    3)

    Application layer: The Application layer provides

    interfaces for Distributed applications(DApps) that

    run on top of the BC system. At this level, SCs

    are integrated to guide the clauses’ execution with-

    out human intervention. SCs are digitized versions

    of paper-based contracts that allow terms reliant

    on decentralized consensus by self-execution [37].

    SCs are deterministic, autonomous, rule-based, and

    have unique addresses on the chain. The terms in

    the contract are converted into code that gets in-

    voked automatically in case of contract violation.

    SCs identify frauds and malicious attempts in the

    Figure 4. BC-based transactions.

    system, thereby increasing security. The results are

    deterministic and have high accuracy. SCs are in-

    voked independently and autonomously, mitigating

    the transaction costs by reducing human interference.

    Many BC communities are integrating interfaces for

    SCs, e.g., Ethereum provides a platform for writing

    SCs, written in a Turing complete language called

    Solidity [38].

    5. Related Surveys:

    IoT security is a vast domain, and many research and

    survey papers are available in the literature spanning various

    security aspects such as data encryption, intrusion detection,

    active attacks, passive attacks, device authentication, AC

    mechanisms, and channel security. AI and ML have comple-

    mented IoT security in recent times by providing improved

    real-time detection rates and attack detection accuracy. BC

    is a very recent addition to IoT security. BC addition to

    IoT is an up-and-coming solution to augment the pace

    of futuristic secure IoT networks. Due to the vastness of

    the domain and applicability beyond security, exhaustive

    survey papers are not available. Table II presents the recent

    (2019-2022) surveys available in the literature for BC-IoT

    integration. The surveys have been broadly classified into

    BC-based IoT Security, BC-based CMs for IoT, BC-IoT

    applications, BC-ML for IoT, and BC-EC integration. The

    focal points of each survey have been highlighted.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    105

    6. Blockchain as a key enabling technology in IoT

    IoT is the focal point of enabling the pervasive inter-

    connection of virtual and physical objects that have sped

    up data sharing and collection. This capability makes IoT

    one of the essential architectures for providing services in

    various fields. This section discusses BC as a key enabling

    technology for IoT and the technologies that drive BC and

    mitigate the challenges associated with BC adoption in IoT.

    1)

    Addition of BC features: BCT offers unique char-

    acteristics such as auditing capability, traceability,

    immutability, interoperability, accessibility, and ac-

    countability, which are imparted in IoT systems

    with its adoption. The IoT data streams from di-

    verse, heterogeneous environments are transformed

    into uniform coding. BC enables IoT and physical

    systems to collaborate through uniform access, fa-

    cilitating cross-domain interactions [77]. BCs enable

    fine-grained access mechanisms and SCs to prevent

    unauthorized access making the systems open to

    interactions from other physical systems. Further, BC

    has a 160-bit address space higher than IPV6, aiding

    it to be more scalable. The IoT data is stored as

    transactions permanently in an immutable fashion on

    the network. Every transaction initiated by a node is

    associated with the corresponding information. Any

    misbehavior or fraud can be traced back to the user

    imparting the audit capacity in the system, which can

    highly complement IoT verticals [65].

    2)

    5G and 6G enabled Industrial IoT: The advance-

    ments in faster communication networks are revolu-

    tionizing network services and making IoT systems

    faster. B5G technologies are key facilitators in inno-

    vating futuristic open access with low cross-domain

    barriers. The B5G systems need efficient communi-

    cation mechanisms with enhanced security, robust-

    ness, privacy preservation, and improved mobility.

    5Gs employ network slice brokers to enable media-

    tion between vertical service and resource providers.

    BC can operate independently in slices enabling

    secure and anonymous transactions [4], [78]. 5G ap-

    plications such as 5G-powered drones need security

    and enhanced privacy [79]. Various BC-based solu-

    tions have been presented for securing B5G and 6G

    systems. In [80], the authors present a BC sidechain-

    based decentralized hierarchical scheme for 5G to

    provide secure communication and authentication.

    The authentication is done at the edge of the network

    to reduce latency. In [81], the authors propose a BC-

    enabled clustered architecture for validating blocks

    in IoTs for B5G applications.

    3)

    Enhanced automation with SC applicability: With

    the help of SCs, BC is imparted with decision-

    making capabilities that drastically reduce human

    effort, and the applicability of IoT systems is in-

    creased [82]. The transactional clauses of SCs are

    digitized and tamper-resistant and cannot be mod-

    ified. SCs eliminate the need for an intermediator,

    minimizing management costs. SCs detect breaches

    and misbehavior in the system and automatically

    take decisions depending on the clauses pre-agreed

    upon by the system’s stakeholders. The decisions

    have higher accuracy and reliability and improve

    the overall security and efficiency of the system.

    SCs make distributed access decisions to enable

    legitimate users to query the BC and work better with

    data-driven interactions. SCs are deterministic and

    autonomous, thereby accelerating the inception of

    Decentralized Autonomous Organizations(DAOs). In

    IoT systems, SCs facilitate flexible AC, secure DM,

    prevent DDoS attacks, and provide secure identity

    management, strengthening security further.

    The three primary driving forces for BC-IoT adoption

    are:

    1)

    Edge computing: EC is a major driver for IIoT, and

    the integration of BCT into edge provides enhanced

    reliability, privacy, data integrity, reliable AC, and

    automated resource allocation. Conversely, the edge

    networks provide computational, storage, and side

    chain-based consensus facilities to IoT devices [70].

    Due to the constrained nature of IoT end-devices,

    they communicate data to the edge where the mod-

    erately intensive CMs and functions are done. The

    nodes store partial data such as time-stamp informa-

    tion to validate the authenticity of the other nodes.

    At the same time, the complex functions, strong

    CMs, and high storage requirements are offloaded

    to the edge. Various architectures have been present

    for BC-based edge computing. In [83], the authors

    propose a mobile BC-assisted IoT application con-

    sisting of Small cell base stations with mobile edge

    computing (MEC) deployed at them. In [84], the

    authors present a prototype for BC-based EC for

    mining and edge resource management for mobile

    BC. In [85], the authors present a DPoS based double

    auction cross-server edge resource allocation frame-

    work for mobile EC. BC functionality can be further

    extended for network management by designing BC-

    based Software-defined networks [32].

    2)

    Integration with ML: BCs provide secure data

    storage, and the outputs can detect anomalies in

    IoT systems [86]. The integration of ML and BCT

    in IoT can enable various tasks such as - secure

    storage of correct data, monetization of ML skill set

    through SCs, feeding correct data into algorithms,

    creation of better learning models through incentive-

    based competitive modeling, Making BCs secure

    from attacks, enabling automated signing of BC

    systems [71], [87], [88], [89]. In [90], the authors

    proposed a BC-assisted collective learning method

    to guide the secure exchange of learning results

    at the IoT edge. The model employs BC on the

    top of the edge devices where the nodes securely

    share learning results using BC-assisted collective

    106

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    TABLE II. Related Surveys

    Focal Point

    Refer-

    ence

    Year

    Key Highlight(s) of the Survey

    General Surveys with Key focus

    on Security.

    [39]

    2022

    •

    Distributed Denial of Services(DDoS) attacks

    •

    BC- based solutions to mitigate DDoS attacks

    [40]

    2022

    •

    BC taxonomy for IoT applications.

    •

    Blockchain platforms for IoT.

    [41]

    2022

    •

    BC for big data- Services

    •

    BC –based big data projects

    [42]

    2021

    •

    Architecture of SCs.

    •

    Levels of BC-IoT Integration

    •

    BC-based IoT applications

    [43]

    2021

    •

    Layer-wise security threats in IoT

    •

    BC security solutions for IoT

    [44]

    2021

    •

    Potential of SC integration in IoT

    •

    Decentralized architecture for BC-based IoT systems

    [45]

    2021

    •

    BC-based AC methods for IoT

    •

    BC-based IoT use cases

    [46]

    2020

    •

    Need for continuous authentication schemes in IoT

    •

    BC-based security solutions

    [47]

    2020

    •

    IoT trust management system

    •

    BC-based trust management system.

    [48]

    2020

    •

    Layer-wise security attacks in Industrial IoT (IIoT).

    •

    BC addition to IIoT.

    [49]

    2019

    •

    Security concerns underlying IoT communication protocols.

    •

    BC-based cybersecurity in IoT

    [50]

    2020

    •

    Primary study of BC-based cybersecurity of papers until early

    2018

    [51]

    2019

    •

    Attacks against CMs

    •

    BC extensions

    [52]

    2019

    •

    Schemes for BC-IoT integration

    •

    BC-based IoT Privacy

    Consensus Algorithms

    [53]

    2020

    •

    Comparison of BC-based CMs and their suitability for IoT.

    [54]

    2020

    •

    Evaluation of CMs on four criteria -Throughput, profitability,

    decentralization degree, and security.

    [55]

    2020

    •

    Discussion on various BC architectures and protocols.

    •

    Consensus characteristic in BC-based IoT applications.

    [56]

    2020

    •

    Discussion on CMs and their division into four groups based

    on scalability, security, energy consumption, and throughput.

    [57]

    2020

    •

    Review of BCT implementation in IoT concerning CMs.

    •

    Frameworks for IoT-BC implementation.

    [6]

    2020

    •

    Limitations of PoW and PoS for IoT.

    •

    Distributed consensus.

    •

    Directed Acyclic graphs based consensus methods and

    challenges.

    [58]

    2020

    •

    A comprehensive review of the suitability of CMs in IoT.

    •

    Frameworks for BC implementation.

    Blockchain-based IoT Applica-

    tions

    [59]

    2020

    •

    BC-based Applications for CPS

    •

    Evaluation of BC-based improvement in IoT applications.

    [60]

    2020

    •

    BC IoT Projects

    •

    BC-IoT Use cases

    [61]

    2019

    •

    Applicability of BCT for Smart communities- Finance, ITS,

    SG, SHC, and Voting systems.

    •

    BCs in Process models

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    107

    [21]

    2020

    •

    The architecture of Green-IoT-based agriculture and threat

    Models.

    •

    BC-based Security solutions and challenges.

    [62]

    2020

    •

    BC integration in 5G enabled UAV networks.

    •

    Network security challenges in UAV.

    [63]

    2020

    •

    Attack models in Precision Irrigation (PI) systems.

    •

    BC integration in PI to mitigate Attacks.

    [64]

    2020

    •

    BC as a Solution for smart applications in precision

    agriculture.

    •

    BC platforms in precision agriculture

    [65]

    2020

    •

    Review of BC-based Supply Chain.

    [66]

    2021

    •

    BC-based IoT use cases for SHC.

    •

    A comparison of CMs for healthcare applications.

    [67]

    2021

    •

    BC applications in smart environments in smart cities and

    challenges.

    •

    Data-centric requirements for BC-based smart cities.

    [68]

    2021

    •

    BC application in IoV for ITS.

    •

    BC-based IoV architectures.

    •

    Benefits and limitations in BC-based IoV

    Blockchain for B5G applica-

    tions and integration with ML

    [32]

    2019

    •

    BC deployment in IoT and applications.

    •

    BC for B5G-IoT

    [69]

    2020

    •

    BC and 5G enabled IoT applications.

    [70]

    2019

    •

    Secure Edge Intelligent BC-powered B5G networks.

    •

    Optimal resource scheduling using a deep reinforcement

    learning approach.

    [71]

    2020

    •

    Convergence of ML in BC-based IoT Applications- Benefits

    and challenges.

    [72]

    2020

    •

    ML and BC Integration for IoT.

    •

    BC security mechanisms for IoT.

    Blockchain-Cloud-Edge

    Computing

    [73]

    2020

    •

    Comparative analysis of Cloud-based IoT Vs BC-Based IoT.

    [74]

    2019

    •

    BC –Software-defined network integration and frameworks.

    [75]

    2019

    •

    Security Challenges In Fog computing

    •

    BC as a security solution for Fog Enabled IoT Systems

    [76]

    2020

    •

    Motivation for integrating BC with Cloud of Things (CoT).

    •

    Architecture and applications of BC integrated CoT

    learning. The authors propose a modified Proof of

    Learning consensus algorithm where work is done

    in the training process instead of solving a random

    puzzle. The learning results from the winner are

    adopted in the rest of the deep neural networks.

    3)

    IPFS powered BC for IoT: In critical IoT sys-

    tems, distributing data in a tamper-proof and trace-

    able manner is necessary. BCs provide the service,

    but they work inefficiently while handling big data

    considering the transactional processing limitations.

    IPFS can complement BC and provide a secure

    storage mechanism for IoT data. IPFS is a content-

    addressable, p2p version-controlled file system that

    can assist the formation of a decentralized IoT

    system [91]. IPFS, based on cryptographic hashes,

    is a potential alternative to address BC big data

    issues. BC is duplicated on multiple nodes; thus,

    most storage spaces are required without immediate

    use, particularly if the node operator does not need

    to examine every file saved on BC. With IPFS, BC

    only saves the cryptographic hashes slowing down

    the chain development drastically because hashes

    are typically less than the data they represent. For

    example, if SHA256 is employed, the on-chain stor-

    age required for a file of any size is lowered to 32

    bytes [92]. For any modifications in the content, the

    hash value changes each time. The authors of [93]

    offer a decentralized IIoT data management system

    108

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    based on BC and IPFS. The authors of [94] propose

    a network architecture that uses BCand IPFS to

    provide IoT data privacy. SCs perform AC in the

    proposed “modular consortium” architecture while

    also providing accountability for data owners and

    third parties to whom users grant access.

    7. Blockchain Integrated IoT systems.

    IoT aims to design a distributed system offering scalabil-

    ity, security, privacy, reliability, real-time data delivery, and

    high adaptability. With the rapid advancements in B5G, IoT

    systems are becoming faster, expanding over longer ranges,

    and requiring enhanced security solutions. BC has distin-

    guished intrinsic features of non-intermediation, immutabil-

    ity, data transparency, and tamper-resilience, which mitigate

    security concerns in an untrusted cross-domain open envi-

    ronment. BCs are envisioned as the future of open-access

    systems requiring distributed storage, efficient data and

    resource management, secure KM, and AC mechanisms. By

    design, a BC-based architecture can ensure confidentiality,

    integrity, availability, user control, and authorization in any

    system [95]. The integration of BC into IoT offers increased

    data trust, imparts verifiability, eliminates intermediation,

    provides transparency, and increases user control of the

    user data in the systems. IoT and BC’s collaboration can

    resolve the issues of data organization, data maintenance,

    communication security, intra-domain collaboration, and

    privacy in IoT. We shall refer to such systems as BC

    integrated IoT (BIIT) systems throughout the rest of the

    paper.

    A. Technicalities of Blockchain IoT integration:

    The world is moving towards becoming “smart” with

    IoT technology, necessitating more attention to data security

    and privacy concerns. IoT security solutions are typically

    complicated due to a lack of safe hardware and software

    design, development, limited resources, and established

    standards. Furthermore, the diversity of resources available

    in the IoT has hampered efforts to develop a comprehensive

    global strategy for protecting IoT systems at all levels. The

    main challenge is data management and securely providing

    services without compromising the privacy of the underly-

    ing personal information. One of the IoT security solutions

    is to develop a fine-tuned AC mechanism for data protection

    and privacy by ensuring that only authorized and authen-

    ticated users may access data. However, this is hindered

    by the vastness of the connected devices. Furthermore, the

    traffic created by the massive amount of data generated by

    these devices makes satisfying quality-of-service standards

    difficult. loT devices have low storage, computation power,

    and bandwidth restrictions.

    With all of the interactions between people, data, and

    devices, IoT promises direct connectivity between devices

    and data interchange. In the IoT economy, sensors and

    devices should be able to conduct monetary transactions

    in exchange for services without the involvement of a third

    party. With the introduction of the 5G network, transactions

    and exchanges will predominantly occur over the internet

    Figure 5. Interaction between IoT and Blockchain

    network, which billing and payment systems must account

    for. However, financial institutions can still not receive

    real-time information on pledged assets due to ineffective

    management for accessing, sharing, and analyzing asset

    information across stakeholders. There are no chattel asset

    tracking and monitoring systems capable of validating and

    quantifying chattel assets pledged for loans.

    BCT has the capability of bringing reforms in these sectors

    as it enables safe, immutable, and anonymous transactions

    using a decentralized distributed ledger system. BC-enabled

    loT systems can monitor and track chattel assets in transit

    or warehouses in real-time. The combined approach aids

    in the resolution and avoidance of unnecessary risks in

    the financial industry. Some attacks on loT systems can be

    addressed using BCT. BC research as a security mechanism

    has resulted in various transformative benefits that were

    previously unattainable or unavailable. Figure 5 depicts the

    interaction between IoT devices and BC platforms.

    Figure 6 illustrates a simple BC-based security level

    evaluation mechanism for IoT. The authors of [96] illustrate

    the steps involved in an IoT network based on BC. First,

    IoT device manufacturers pre-verify software that is loaded

    on IoT devices and create the whitelist. A SC is produced

    by combining a manufacturer’s whitelist and the agent’s

    initial agent hash value(IAHV) installed in an IoT device.

    IoT device manufacturers can access SCs via decentralized

    applications or internally through an Application Program-

    ming Interface(API). IoT device manufacturers use SCs to

    update the White List. Manufacturers use the whitelist SC

    to record the whitelist and IAHV of the agent installed in an

    IoT device in the BC. By inquiring about the information

    recorded in the BC via the whitelist SC, the IoT device

    can verify that the agent’s IAHV matches the device agent

    hash value of the installed agent. It validates that the agent

    has not been forged or fabricated by comparing it to the

    agent hash value stored in the BC; as a result, the security

    evaluation process of IoT devices via the agent may be

    trusted. The IoT device’s agent checks to see whether any

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    109

    Figure 6. A simple BC-based security level evaluation mechanism

    for IoT.

    untrusted programs have been installed. The agent evaluates

    the security status of the IoT device and transmits it to

    the scoring SC. Manufacturers receive rewards in return for

    updating the whitelist SC.

    1) Recent proposed architectures:

    Two main features of the BCT include Trust and De-

    centralization [97], [98], [99]. By design, the data on a BC

    is secure and tamper-resistant, making it a key disruptor for

    IoT. BCs can be utilized to improve IoT in the following

    ways:

    1)

    Impart data integrity: The nodes in the BC have iden-

    tical copies of the ledger. When transactions occur,

    all network members are responsible for validating

    them, and once verified and stored in the ledger, the

    transaction cannot be manipulated or removed.

    2)

    More Addressing space than IPV6: BC addresses are

    160 bits long, while IPV6 addresses are 128 bits.

    When compared to IPV6, BC has higher addressing

    space (4.3 billion addresses).

    3)

    Trusted accountability: Every operation is docu-

    mented in the ledger; thus, it is possible to identify

    and trace all operations.

    4)

    Fault tolerance: Decentralized systems rely on mul-

    tiple separate components; they are more fault-

    tolerant. Because of the point-to-point decentralized

    structure, BC has no single node failure concern.

    5)

    Eliminating third-party liabilities: BC runs without

    third-party intermediaries and is free of any risks or

    dangers posed by third parties.

    The decentralized. peer-to-peer architecture is the most no-

    table characteristic of BCT. The distributed ledger contains

    Figure 7. Overview of Blockchain –based IoT architecture

    all transactions, and all network members must agree to

    approve the transaction. This feature enables the imple-

    mentation of end-to-end traceability. Data provenance was

    previously difficult to obtain, but it is now a possibility

    with the BCT’s distributed ledger option. Owing to these

    benefits, many BC-based architectures have been proposed

    for IoT; an overview of the same is provided in Figure 7.

    The authors of [100] propose the solutions to overcome

    the centralized solutions and security measures in IoT.

    The data-driven decentralized mechanism is used, which

    provides energy-efficient solutions for detecting attacks on

    the IoT-based Sensor Networks. In [101], the authors aim

    to facilitate the data searching and extraction of public and

    private BCs deployed at the MEC server of the 5G MEC

    smart grid. IoT device identifier is built as a BC explorer.

    In [102], the vulnerability of the massive data produced in

    IoT networks for smart transportation is solved by the BC

    and IoT, which provide a decentralized data management

    system. In [103], the authors propose using the Identity

    Based Encryption (IBE) algorithm to enhance health care

    data security.The BC-based IoT architecture uses IBE to

    provide enhanced security. In [104], the authors address

    the privacy, security, and scalability issues in a centralized

    system for IoT and resolve them with a lightweight archi-

    tecture for BC-based identity management. In [105], Mobile

    edge-cloud computation offloading is used in delay-sensitive

    IoT applications. An effective, trustworthy access control

    mechanism is introduced, which involves an advanced deep

    reinforcement learning algorithm using a double dueling

    Q-network. The work in [106] proposed using BC, SCs,

    and IoT devices to integrate different kinds of IoT devices

    in pre and post-harvesting agriculture segments. This work

    in [107] proposes the integration of the Software-Defined

    Network with the BC system. A BC-based architecture is

    used for proposing the new routing protocol witty cluster

    structure for the IoT networks.

    110

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    B. Tradeoffs in Consensus mechanisms for IoT suitability

    BIIT systems:

    Consensus is the principal mechanism that makes the

    BCs secure by design. A CM governs the rules that pivot

    on the network’s nodes to agree on the ledger’s true state.

    Consensus achieves trust in a heterogeneous, uncontrolled

    environment by providing a mechanism to validate the data

    communicated by the nodes in the network. CMs eliminate

    the central authority, validate the data communicated by

    the nodes in the network, establish trust among nodes and

    ensure a system state agreed upon by the network members.

    With the increase in BC-based applications, various CMs

    have been proposed and adopted by systems, but their adop-

    tion is met with challenges. The choice of the consensus

    algorithm significantly affects the network’s performance,

    and there exists a tradeoff between scalability, energy

    consumption, bandwidth requirement, network overheads,

    computation overheads, security, privacy, and latency.

    The robustness of a BC-based system is highly dependent

    on its underlying CM. The security provided by a CM

    is directly proportional to computational and bandwidth

    requirements, as is the case with PoW. IoT’s computational

    and communication abilities are bound by constrained re-

    sources; thus, applying a generic CM in IoT is difficult.

    Inter-domain cross consensus poses additional challenges

    [108]. Over the past few years, CMs have been customized

    particularly for LW environments. Since IoT networks are

    constrained, the CMs have been modified over the last

    few years to increase their suitability in LW networks.

    This, however, comes at the cost of compromising security

    and other factors. CMs with strong fault tolerance and

    immunity to attacks require the computation of intensive

    hash operations that consume energy, bandwidth, and other

    resources. CMs that work on low power do so at the cost of

    decreasing the network’s size or moderately compromising

    data integrity. An ideal CM for IoT would ensure increased

    decentralization, adversity tolerance, scalability, throughput,

    and decreased latency, energy consumption, storage, com-

    putation, and network overheads.

    A comparative study of the existing CMs in light of IoT

    goals is presented in Table III [109], [58], [55], [53] and

    [60]. The values High, Moderate, and Low under different

    columns(to different methods) are assigned based on dif-

    ferent criteria. For the energy consumption, computational

    resource requirements, storage overheads, and Throughput,

    the values are assigned bydirect comparison with PoW

    and IoT suitability. The numerical criteria for assigning

    latency values is Block creation time. For example, the

    block creation time in PoW is approximately 10 minutes,

    while it is only 4 minutes in PoC. Although the time is

    considerably lower than PoW, it is still not suitable for

    real-time IoT environments, and compared to other CMs

    that take only seconds, the time taken by PoC is high.

    Thus, the value “Moderate” has been assigned based on

    the combined criteria. DPoS can process 100,000 TPS, and

    the block is added in under 3 seconds to the chain, which

    is still not suitable for real-time IoT systems that require a

    block creation time of the order of milliseconds.

    While designing a new consensus algorithm for an LW

    system, the following tradeoffs need to be considered:

    1)

    Security and Computational requirements: Strong

    cryptographic methods provide high security and

    decentralization to the system, and improve data

    integrity and confidentiality but are computationally

    intensive and require high power systems for imple-

    mentation.

    2)

    Privacy and Latency: To achieve privacy, the adopted

    system should be free of a central authority, and

    the consensus should be achieved in a p2p fashion.

    However, private chains are adopted by systems that

    encourage centralization to decrease the system’s

    latency, thereby increasing privacy concerns.

    3)

    Convergence rate and Adversity tolerance: The con-

    vergence of the algorithm affects the adversity tol-

    erance of the network. For IoT real-time systems,

    for the consensus to converge faster, the number of

    nodes involved in consensus is decreased, making it

    easy to compromise the network and decreasing the

    system’s fault tolerance.

    4)

    Latency and Scalability: For cross-domain access,

    the number of validations to perform transactions in-

    creases, increasing the network overhead. To reduce

    latency in real-time applications, the number of the

    communicating nodes needs to be capped.

    5)

    Throughput and Scalability: As the network size

    increases, simultaneous communication attempts to

    access resources and Block addition increase con-

    siderably. This affects the system’s throughput sig-

    nificantly as more nodes access the limited resources

    of the system

    1) BIIT suitable Consensus mechanisms and Blockchain

    platforms:

    1)

    Hyperlegder Fabric with PBFT: Hyperledger fab-

    ric has a modular architecture and can create private

    chains. The system’s latency is less but is associated

    with significant network overhead, suitable for small

    private networks, limiting the network’s scalability.

    Hyperledger fabric is suited for private networks,

    works on PBFT, and has a pluggable CM. To achieve

    consensus, the majority of the nodes must agree

    on the block addition. For writing SCs, the frame-

    work supports the “Go” language and “Chaincode”

    [135]. The framework provides data confidentiality,

    efficient processing, and identity management and is

    suitable for low-scale IoT implementation.

    2)

    Hyperledger Sawtooth with PoET: Designed by

    Intel, this framework is suitable for low-powered

    systems. The nodes solve a hash problem, and

    the winning node is chosen randomly on a ran-

    dom waiting time using Intel’s softguard extension.

    The contracts on Sawtooth can be written in any

    language, and various CMs can be plugged into

    the same chain [136]. It usually employs PoET,

    which offers low computational requirements, High

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    111

    TABLE III. Comparison of Consensus mechanisms for IoT suitability.

    Algo

    NA

    IoT

    goals

    ECP

    CRR

    SO

    CVG

    STY

    LTY

    TPT

    DEC/SEC

    PoW

    [110]

    PL

    High

    High

    High

    Very

    Slow

    High

    Very

    High

    Low

    Fully decentralized.

    Secure.

    PoS

    [111]

    PL

    MDR

    MDR

    High

    MDR

    Fair

    MDR

    Low

    Lower decentralization than PoW.

    Relatively lower tamper resistance to

    attacks.

    PBFT

    [112]

    PD

    Low

    Low

    High

    Fast

    Low

    Low

    High

    Low Decentralization.

    Prone to Sybil attacks.

    DPoS

    [113]

    PD

    MDR

    MDR

    High

    Fast

    MDR

    Low

    High

    Encourages centralization.

    Prone to attacks.

    DBFT

    [114]

    PD

    Low

    Low

    High

    MDR

    MDR

    MDR

    High

    MDR decentralization.

    Prone to security attacks.

    PoC

    [115]

    PL

    Low

    Low

    Very

    High

    MDR

    High

    MDR

    High

    Relatively high decentralization.

    Selfish mining.

    PoET

    [116]

    PD

    MDR

    Low

    High

    Fast

    High

    Low

    High

    Intel-Central authority

    Not truly decentralized.

    LPoS

    [117]

    PL

    MDR

    MDR

    High

    MDR

    High

    MDR

    Low

    Decentralized.

    Secure

    PoA

    [118]

    PL

    High

    High

    High

    MDR

    High

    MDR

    Low

    Decentralized

    Trust requirement.

    PoI

    [119]

    PL

    MDR

    MDR

    High

    MDR

    High

    MDR

    High

    High Decentralization.

    Takes into account nodes’ reputa-

    tion.

    DAG

    [120]

    PD

    MDR

    MDR

    High

    MDR

    High

    MDR

    High

    Susceptible to Sybil attacks.

    Casper

    [121]

    PL

    MDR

    MDR

    High

    MDR

    High

    MDR

    MDR

    Decentralized and secure.

    Stellar

    [122]

    PL

    MDR

    MDR

    High

    MDR

    High

    MDR

    High

    Decentralized.

    Robustness is achieved through quo-

    rum slices.

    Ripple

    [123]

    PL

    Low

    MDR

    High

    MDR

    High

    MDR

    High

    Decentralized. Can tolerate up to

    20% faulty nodes.

    Tende-

    rmint

    [124]

    PD

    MDR

    MDR

    High

    Fast

    High

    Low

    High

    Not fully decentralized.

    Based on monetary concepts, which

    is not suitable for IoT

    Rapid

    Chain

    [125]

    PL

    MDR

    MDR

    Low

    MDR

    High

    MDR

    High

    Decentralized. Provides full shard-

    ing.

    Omni

    Ledger

    [126]

    PL

    MDR

    MDR

    Low

    MDR

    Fair

    MDR

    High

    Decentralized.

    Low Security. Can tolerate up to ¼

    faulty nodes.

    Elastico

    [127]

    PL

    High

    High

    High

    MDR

    High

    High

    Low

    Decentralized. Suffers from Security

    risks.

    RScoin

    [128]

    PD

    MDR

    MDR

    High

    Fast

    High

    Low

    High

    Low Decentralization and based on

    monetary benefits.

    Algo-

    rand

    [129]

    PL

    MDR

    MDR

    High

    MDR

    High

    MDR

    MDR

    Decentralized and high security.

    Byz-

    Coin

    [130]

    PL

    High

    High

    High

    MDR

    Fair

    MDR

    High

    Decentralized.

    Susceptible to DoS attacks.

    112

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    PaXoS

    [131]

    PD

    Low

    MDR

    High

    Slow

    Fair

    High

    MDR

    Decentralized.

    Fault-tolerant consensus among a

    group of nodes.

    Tangle

    [132]

    PL

    Low

    Low

    Low

    Fast

    High

    Low

    High

    Not fully decentralized.

    Security compromised if node gains

    > 1/3rd of hashes.

    RAFT

    [133]

    PD

    MDR

    MDR

    High

    Fast

    MDR

    Low

    High

    Not fully decentralized.

    Susceptible to ledger node failure.

    Treechain

    [134]

    PL/

    PD

    MDR

    MDR

    MDR

    Fast

    Fair

    Low

    High

    Secure at the cost of overheads.

    * NA, ECP, CRR, SO, CVG, SCY, LTY, TPT, DEC/SEC, MDR, PL, PD respectively stand
    for Network Access, Energy Consumption,

    Computational resource Requirement. Storage Overheads, Convergence, Scalability,
    Latency,Throughput, Decentralization/Security,

    Moderate, Permissionless, Permissioned.

    throughput, and Low latency but encourages central-

    ization. Hyper ledger Sawtooth platform is suitable

    for permissioned and permissionless BCs and pro-

    vides features such as live data streams suited for

    IoT environments. The framework, however, suffers

    from Security and Privacy issues.

    3)

    IoTa with Tangle: Tangle is a distributed communi-

    cation protocol that does not work on transaction fees

    suitable for IoT. Tangle enables a parallel transaction

    verification mechanism which decreases the conver-

    gence time and reduces latency in the system. How-

    ever, the framework suffers from storage and security

    problems and is prone to centralization. IoTa uses

    DAG, which minimizes the system’s network and

    transaction overhead [132]. The latency is low and

    has been specifically designed for IoT applications.

    Iota enables high throughput but does not support

    SCs and suffers from privacy issues.

    C. Security architecture of BIIT systems

    BCT is evolving as a key paradigm in addressing these

    issues of IoT. In BIIT systems, BC is added at the security

    level and works on a distributed consensus scheme where

    each IoT transaction is verified, and every message can be

    traced to the origin. BIIT systems work in a p2p distributed

    manner, and each entry is time-stamped. The data blocks

    are integrated using cryptographic hashes, and the Merkle

    tree stores all atomic transactions. The tree’s root hash is

    verified to secure all the transactions underlying it.

    To understand the BIIT system’s security mechanism, the

    Hyperledger fabric for IoT BC security architecture has

    been considered, consisting of five levels: [137]

    1)

    Perception layer: The IoT node layer collects the

    data from heterogeneous environments and is pre-

    processed, transformed, and stored on BCs.

    2)

    Network Layer: All nodes are given equal priority

    and transmit the data. Each node contains the data

    authentication protocol information and block net-

    work mode.

    3)

    Consensus layer: The layer works on the PBFT

    algorithm, suitable for constrained IoT environments

    because of less energy consumption and lower com-

    putational overhead.

    4)

    Smart Contract Layer: The SC layer stores contracts,

    incentive mechanisms, and other scripts. SCs are set

    up in the certification authority.

    5)

    Application Layer: The layer is responsible for col-

    lecting, storing, verifying, and processing the data

    blocks. The IoT application interface enforces the

    node transaction process and provides AC services.

    Mechanism: The devices are registered and granted AC

    rights which are defined in the SC. Various sensing devices

    collect data of various types and in varying formats. This

    data is pre-processed, and preliminary information is ex-

    tracted through a hash function and asymmetric encryption.

    The heterogeneity is removed by transforming the data into

    a fixed-length base to keep a uniform format. The data is

    time-stamped, stored in a block, and broadcasted to the

    whole network. The gateway nodes hash the data, storing

    the table in the block. The time-stamp archives the key

    block information such as the source, and digital signature,

    which imparts traceability. Any node can act as a miner to

    carry out authentication. A block node validates the received

    data according to the data structure, source, time-stamp,

    and other information. The data from a legitimate source is

    added in chronological order, and the transmission from

    a malicious node is restricted. The data is stored in an

    immutable fashion on the chain.The IoT transactions are

    verified using a PBFT consensus algorithm, ensuring that

    no false data is stored on the system. The SCs are triggered

    in case of an event, and the contract clauses are invoked to

    handle the misbehavior by one or more nodes. SCs enable

    cross-domain interoperability by implementing scripts for

    various states. The SCs also eliminate human/third-party

    intervention for invoking the rules in case of a malicious

    attempt. At the top, application services are provided, and

    access rules for cross-domain interactions are maintained.

    The architecture has five prime advantages-Improved secu-

    rity, increased cross-domain interoperability, data integrity,

    data traceability, and automated decision making.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    113

    8. BIIT systems and IoT Security tasks

    More and more devices are being connected in the

    IoT application domains with advancements in sensing and

    actuating technologies. Verifying the legitimacy of the com-

    ponents for secure communication, authentication schemes,

    and secure routing protocols (RP) are essential criteria in

    IoT sensor networking. In Table IV, the literature study of

    the recently proposed security architectures of BIIT systems

    has been summarized vis-`a-vis security tasks identified in

    Section 3.3.

    A. Primary Study of the BC Solutions:

    In [138], the authors propose a BC-based distributed KM

    scalable architecture with fine-grained auditing capability

    for hierarchical AC. The architecture consists of 3 main

    components- A device layer containing the CPS devices,

    a BCT-based security access manager (SAM) network at

    the fog layer, and multiple BC networks on the cloud

    for KM. The user keys are secured and not under the

    control of a key generation center, and the information

    is instead stored on the SAMs, which act as the miners

    on the chain employing a PoW consensus algorithm. The

    information is offloaded to a BC-based cloud for access

    across multiple domains and reduces the blocks’ burden.

    The cross-domain operations are allowed after the cloud

    manager verifies it and sends it to the SAM. In the case of

    frequent accesses, the information is stored in the BC with

    the same deployment domain. The target difficulty in the

    model is 17 bits for a SAM device, and the average time

    consumption decreases with transaction collection time (Tc)

    with the assumption that there are enough power resources

    to carry out the verifications. The performance evaluation of

    the model for cross-domain operations shows that the time

    consumption in carrying them out is the same during each ½

    Tc period. The architecture provides fine-grained auditing,

    but its performance evaluation runs on various assumptions,

    such as that all the management domains have the same

    number of user equipment. The mining is done after the

    propagation procedure ends, and the SAMs have the same

    transmissibility to propagate transactions and mining time.

    In [139], the authors propose a theoretical architecture for

    BC-based AC mechanisms with enhanced trust mechanisms

    and increased portability. The architecture consists of 3

    prime layers- Resource layer (RL), BC layer (BL), and

    Application layer (AL). The model aims to formulate an

    AC mechanism for defending against attacks in an untrusted

    environment. The model adopts the PBFT algorithm for

    consensus, an endorser makes endorsements for the trans-

    action, and a transaction handler executes the chain codes.

    Users communicate with ALs through a client application

    for registration and requesting AC. BL is at the core and

    is deployed on every component in the private network.

    It consists of 3 components – web controller, transaction

    handler, and ledger. All the actions such as identity creation,

    executing access protocol creation, and resource creation

    happen in the BC. All the requests are saved in the BC in an

    immutable and non-resistant manner. The model’s security

    analysis shows resistance to AC message tampering until at

    least 1/3 nodes of the network is not compromised. The

    model is suitable only for the low-scale implementation

    and is compromised if the network complexity increases,

    creating latency and storage problems.

    In [140], the authors propose a BC-based AC mechanism

    for verifying IoT end-points and providing access tokens

    for querying resources. The architecture is gateway-based,

    where IoT devices communicate with the gateway instead

    of the internet, and conversely, any communication to

    IoT devices goes via gateways. The gateway serves four

    purposes- protocol bridge, AC, secure communication, and

    proxy BC. Internet Service Providers (ISPs) act as the

    gateway approver, vendor device authentication is done by

    the vendors, and the gateway acts as an authorization server.

    The AC state is distributed across all nodes and stored on

    the SCs. A trusted administrator does the SC deployment,

    and signing of ISPs and vendors. The AC is carried out in a

    few stages- gateway authentication done by an ISP, vendor

    authentication of devices by the owner under each domain,

    and the gateway handles outside requests by verifying and

    granting access requests. The outside requestors need to

    build secure channels with gateways before communicating

    to IoT for access. The ISPs are discredited in case of

    untrusted behavior, and the domain owner has complete

    control over the requests coming through the gateway. The

    model is evaluated over trust, security, and performance.

    The security analysis shows that the attacks can happen

    if the attacker leverages massive computational resources,

    which are costly or compromise the approvers, mitigated by

    using a certification authority for vendors. The architecture

    is centralized and needs a trusted intermediary. The authors

    argue that IoT systems cannot be entirely decentralized and

    employ trusted approvers for authenticating end-points. The

    architecture relies on ISPs to route traffic carrying security

    verifications, while BC provides validation.

    In [141], the authors propose an SC-based data sharing and

    AC mechanism for end-point communication in IoT devices

    to resolve trust issues. The proposed system consists of

    SCs for DM in an untrusted environment. Three SCs are

    used – Access control contract (ACC), Register Contract

    (RC), and Judge Contract (JC). ACC maintains the AC for

    any requester and oversees the overall communication AC

    and data sharing between IoT devices. RC is responsible

    for the authentication of requests and registers them. The

    behavioral analysis is done by JC, which checks the node

    for misconduct and generates alert messages. An ACC

    is invoked when an AC request is sent, and the request

    is forwarded based on the access permission level. After

    objects accomplish the request, the corresponding transac-

    tion is stored on the chain. The security analysis shows

    that the proposed system is open access and secure, and

    the trustworthiness is maintained throughout using SCs.

    The model is evaluated against cost and shows that ACC

    consumes more execution and transaction energy than other

    SCs.

    In [142], the authors propose a BC-based AC mecha-

    nism with secure delegation services, an integrated BCT

    network for eliminating a central delegation service, and

    114

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    TABLE IV. IoT Security Tasks - Existing centralized and BCT Solutions.

    IoT Security tasks

    Aim

    Existing

    solutions/Cloud-

    based solutions.

    Existing BIIT solution archi-

    tectures.

    Key

    Management

    and Access Control.

    Provision of fine-grained AC mech-

    anisms in untrustworthy environ-

    ments.

    Applying KM strategies.

    Trust and authentication

    Centralized KM services.

    Public key Infrastructures.

    Pre-shared key mechanisms.

    Key pool frameworks.

    BDKMA [138].

    Bloccess [139]

    BorderChain [140]

    SC-based

    AC

    mechanism

    [141]

    BACI [142]

    BPRPDS [143]

    Node

    Authentica-

    tion

    Prevention from false data.

    Secure device-device communica-

    tion.

    Prevention from DoS, Imperson-

    ation

    RFID- unique fingerprints.

    Third-party

    authentication

    centers.

    Authentication protocols.

    Digital signatures.

    Identity-based

    cryptography

    (IBC)

    Two-factor authentication.

    BASA [144]

    Out of Band Authentication

    scheme [145]

    P2P IoT node authentication.

    [146]

    Decentralized authentication

    scheme. [147]

    BC-based Node Authentica-

    tion [148]

    Data

    sharing

    and,

    Routing security.

    Secure exchange of data

    Prevention of data tampering during

    an exchange over the network.

    Intrusion Detection and pre-

    vention methods

    SDN controllers

    Cryptographic algorithms for

    symmetric encryption

    Hashed-based Security.

    Network routing protocols.

    Authorization protocols.

    BC based user Authentica-

    tion [149]

    MicrothingsChain [150]

    BC-based

    security-driven

    Routing framework [151]

    Shared

    memory,

    BC-based

    secure and efficient RP [152]

    LW- BC assisted secure rout-

    ing of UAS [153]

    Prevention of soft-

    ware failures.

    Protection

    from

    Malware,

    Spy-

    wares, and Adware.

    Protection from Ransomware.

    Protection from malicious scripts.

    Service contract management

    Static

    software-centric

    approaches

    for

    Malware

    detection.

    Signature-based detection

    Anomaly-based detection

    IoTMalware [154]

    B2MDF [155]

    BC-based

    distributed

    anti-

    malware system [156]

    Data

    storage

    and

    management.

    Offering reliable data storage.

    Trust management.

    Data Loss resilience and Data re-

    covery.

    Supervision, Enhance man-

    agement

    Platform monitoring

    Database

    backup

    management, Service support

    platforms.

    Disaster control and recovery

    management.

    Pdash [157]

    BC-based

    Secure

    storage

    [158]

    Design principles for DM

    [159]

    BlockTDM [160]

    BC and DRL based DM

    [161]

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    115

    event and query-based services. The device is assigned

    to a private group, and subsequent permissions are given

    through a delegation mechanism performed by a BC. The

    architecture consists of low-powered IoT devices, powered

    user devices with computation and storage capacity, an

    application manager for user interface and registration, an

    IoT manager for data filtering and query management, a BC

    Manager (BCM) for SCs and AC management. The BCM

    registers the IoT devices and deploys an SC for each device.

    BCM allows delegates to activate or deny the permission

    stored in the SC. The SC stores devices’ platform hashes

    and delegation policies. The BC miners verify before any

    permission activation. The proposed model is for private

    networks for increased throughput and reduced latency, but

    the model cannot be replicated on large-scale IoT systems

    without affecting the network performance.

    In [143], the authors propose a BC-based privacy-preserving

    and rewarding private data sharing scheme, a BC-based

    incentive mechanism for private data exchange.The data

    owner publishes private data and receives a payment anony-

    mously in the BC, while data consumers obtain licenses

    anonymously through SCs, where licensing technology en-

    sures access control for multi-sharing. The authors leverage

    Monero technology to ensure the untraceability and un-

    linkability of DUs while getting private data, ensuring that

    no one can develop a dat user behavior profile database.

    The authors incorporate the non-frameability characteristic

    into the anonymous incentive data sharing scheme. Honest

    data consumers can refute the frame up using a deniable

    ring signature without revealing their genuine identity. The

    authors present the security model, provide the formal secu-

    rity proof using the random oracle model, and demonstrate

    the model’s feasibility in real-time IoT architectures. The

    authors have proved the effectiveness of their technique and

    compared it to various undeniable ring signature schemes.

    The results reveal that the computational cost increases

    linearly as the number of ring members increases.

    In [144], the authors propose an efficient BC-assisted secure

    cross-domain device authentication mechanism, inducing

    inter-domain trust and privacy in IIoT applications. Identity-

    based signatures induce authentication in this mechanism,

    and privacy is induced by designing the identity manage-

    ment mechanism. The cross-domain authentication privacy

    perseverance also introduces a key negotiation mechanism

    to prevent eavesdropping on the insecure channel by negoti-

    ating session keys. The architecture consists of four layers.-

    Entity layer(EL), Agent layer(AL), BC Layer (BCL), and

    Storage Layer(SL). EL consists of a key generation center

    (KGC) and IIoT devices. KGC is responsible for the gener-

    ation of private keys for IIoT devices. AL consists of the BC

    Agent Server (BAS)and Authentication Agent Server(AAS).

    The model employs three types of authentication- Unilateral

    authentication, where users authenticate a device, Mutual

    authentication, where two devices authenticate each other;

    and cross-domain authentication, carried by KGC, BAS, and

    AAS. The domain-specific information is encapsulated into

    the consortium BC node in transactions and is acquired

    by other domains for authentication. The authentication

    agent server executes signature generation and verification

    operations on behalf of requesting devices. With an increase

    in the number of endorsing and validating nodes, the BC

    consensus time increases, introducing latency in the system.

    In [145], the authors proposed an out-of-band two-factor

    authentication scheme to prevent impersonation attacks on

    large-scale IoT devices using “device relationship” and

    BCT. The out of band performs the secondary authentication

    to distinguish home IoT devices from the malicious IoT de-

    vices. There are four components of the said authentication

    scheme- Authentication Subject(AS), which is any device

    that wants access to resources, Related Device(RD) that

    performs secondary authentication, BC that stores the ‘Re-

    lationship information’ for every authentication subject with

    the related device and Authentication Executor (AE) which

    coordinates the two factors out of band authentication. A

    relationship contract stores the mapping of AS address

    to ‘Relationship data’. When an AS requests access, AE

    retrieves the corresponding information from the BC, selects

    the RD in the AS neighborhood, and sends the correspond-

    ing action sequence. The corresponding RD invokes SC to

    send the verification result to BC, and finally, AE checks

    BC for verification results utilizing SC. The model has not

    been implemented on commercial IoT devices due to close-

    sourced hardware and software, and there are considerable

    CPU and memory overheads in the authentication stage.

    In [146], the authors propose a BC-based authentication

    mechanism for the low-power sensor nodes that are part

    of p2p networking using the sequence number of sensor

    nodes. This paper proposes verification through SHA 64-

    bit hash function to confirm confidentiality and integrity

    without compromising performance. The sink node(SN)

    assigns the sequence numbers by a broadcast-response-

    based mechanism for registering legitimate devices. The SN

    keeps a record of the other node’s identity in the form of the

    Ids, sequence number, and hash value; therefore, the sink

    detects a malicious node by verifying the sequence number

    and the hash value. A mutual level node authentication

    model is used where a node and its sequence number store

    all other nodes’ sequence numbers. The node identifies the

    particular node for communication, compares the corre-

    sponding sequence number, and verifies the message by

    comparing the transmitted hash value. Thus neighbors’ hash

    function detects a malicious node and secures the model

    from impersonation. However, as the network complex-

    ity increases, the sink node has to store many sequence

    numbers. Further, the sink node acts as a point of failure,

    and a legitimate node can become corrupt and allow other

    malicious nodes to transmit the messages.

    In [147], the authors propose an authorization and au-

    thentication mechanism for LW IoT devices that improve

    the IoT network’s performance. The proposed mechanism

    is based on the public BC mechanism and uses a fog

    computing network to achieve the desired task. The system

    architecture is divided into two layers: the device layer

    and the fog layer. The device layer consists of the many

    low-powered and low computational devices responsible for

    generating the data in the network. The IoT devices can

    116

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    be grouped depending upon the customized functionality

    they perform. The fog nodes in a particular group perform

    the same functionality. On the other hand, the fog layer

    is a BC-enabled fog device connected to the internet for

    working together. The fog nodes perform the CM execution

    to validate the transactions and create the blocks. The

    mechanism proposes three phases -The initialization phase

    consists of registering the system and devices with the

    closest BC-enabled fog nodes. The device authentication

    phase involves authenticating the devices with the BC-

    enabled fog node by mapping the system ID, device ID, and

    public address. Device-to-device communication involves

    the secure transmission of the message between the same

    system’s fog nodes or different systems. Before the device-

    to-device communication, both the devices are authenticated

    by the BC-enabled fog node. After that, a block is created

    in the BC, and subsequently, a secure channel is established

    between the devices. However, this mechanism assumes that

    fog nodes and admin are trusted and that communication

    between fog devices and nodes is secure.

    In [148], the authors propose a node authentication model

    for the IoST(Internet of Sensor Things) based on the BC

    mechanism. The base station validates any node’s creden-

    tials whenever it performs any action in the network.The

    authors have employed identity authentication with PoA

    as the consensus approach to reduce computational costs.

    The miners are pre-selected, and following the authenti-

    cation request, the registered nodes are authenticated.The

    request contains IDNode(Node ID), MACAddrNode(MAC

    address), and ReputationNode(the reputation value assigned

    to a certain node based on its previous history in the

    network ), which are already stored on the BC. The au-

    thentication is carried out by comparing the credentials of

    nodes previously stored in the BC. The BC determines

    whether or not the credentials provided by nodes match

    the credentials currently stored in the BC. If the credentials

    match the information provided, the nodes are authenticated

    and broadcast as legitimate nodes. A SC is deployed on the

    base stations that track all the network transactions. The

    system model is predicated on two assumptions: Firstly,

    base stations are accepted as legitimate and provide secure

    services to consumers, and secondly, symmetric keys are

    securely transferred in the network.

    In

    [149],

    the

    authors

    propose

    a

    user

    authentication

    strategy

    based

    on

    BC-enabled

    fog

    nodes

    that

    inter-

    face with Ethereum SCs to authenticate users to access

    IoT devices.The major stakeholders include Administra-

    tors(responsible for controlling access permissions for IoT

    devices), End users(interested in requesting an IoT de-

    vice service), Fog nodes(for localized storage), and cloud

    servers(storing IoT data), all having direct access to SCs via

    an Ethereum client in the case of fog and cloud nodes, or via

    a front-end application/wallet in the case of administrators

    and end-users. IoT devices have unique Ethereum addresses

    (with public and private keys), but they lack connectivity

    and do not interact with SCs. The system interactions

    are divided into off-chain and on-chain. In the on-chain

    interactions, the admin constructs the SCs, registers the

    IoT devices, maps them to a fog node, and may grant

    end-users access to certain IoT devices. The SCs check

    the list of authorized users, and the user receives a SC

    acceptance token which it uses to authenticate itself off-

    chain. The authors have provided the security analysis of

    the architecture,but the cost analysis of utilizing Ethereum-

    based SCs is unaccounted for.

    In [150], propose a decentralized BC-based architecture

    with SCs to allow edge computing nodes to store IoT

    data and securely interact with one another.The archi-

    tecture is composed of 4 layers- Information aggrega-

    tion layer(consisting of IoT-like devices), Edge computing

    layer(consisting of edge devices with fair computation capa-

    bilities), Service supporting layer(responsible for provision

    of services), and Application layer.The collaboration with

    other edge computing nodes must first be certified by the

    edge computing nodes, which will result in the exchange of

    MicroCoins(introduced cryptocurrency) between members.

    The model uses a publish-subscribe mode, allowing users

    to access data across domains. The users or application

    developers first subscribe to the data publisher from the

    edge computing node pool for data exchange. The data

    publisher then supplies the subscription data and submits

    a transaction to the BC-enabled SC to manage the pre-set

    business model while providing the required data. The au-

    thors introduce a new CM called Proof-of-Edge computing

    to reach consensus among all edge computing nodes and

    avoid centralization. All corresponding operations must be

    documented in BC to obtain self and other domain audits.

    In [151], the authors propose integrating Network Function

    Virtualization(NFV), software-defined network(SDN), and

    BC to create a flexible and reliable routing architecture

    for IIoT. SDN and NFV are responsible for creating pro-

    grammable forwarding devices that create the network’s

    optimal routing policies. The controllers are secured using

    BCT and take decisions and collect the data from the

    nodes to detect mistrust. A secure path is acquired by

    adequately removing the malicious node from the IIoT

    network by periodic monitoring and collecting network

    data. Each controller has a distributed ledger, and malicious

    nodes are identified by calculating the network’s trust value

    during behavior authentication stored in the BCs. The

    synchronization reaches a consensus among various ledgers

    transmitted through a control channel. Different controllers

    handle routing requests through an access point. The exper-

    imental evaluation shows that the model outperforms the

    state-of-the-art systems in average delay over attacks and

    packet loss rate. However, the frequent calculations of trust

    values lead to substantial computational power, bringing

    overheads in the system, which must be addressed without

    compromising the model’s security.

    In [152], the authors propose a routing protocol for the

    wireless sensor network that uses BCT to make routing

    more efficient and secure. The nodes present in the network

    are treated as the coins, and the routing path for the message

    is treated as the transaction, which is subsequently added to

    the BC. Initially, all the nodes are owned by the sink and

    considered inactive, and the rest are active. When an event

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    117

    occurs, the nodes access the BC to find the optimal path to

    the sink. Dijkstra’s algorithm obtains the message’s optimal

    path by a cost function determined by signal and interfer-

    ence. This optimal path is the transaction to be added to the

    BC and transmit the message after eliminating malicious

    nodes detected by the BC security mechanism. The routing

    process is made secure by trusted cryptographic algorithms

    such as ECDSA224 and SHA512. While transmitting the

    message to the sink, the node seeks the ‘ownership’ of

    the path’s nodes transferred back after successfully sending

    the message. However, the model assumes that all nodes

    are homogenous and that the sink has enough resources to

    handle the messages. Complex calculations are involved in

    finding routes that increase the computational overhead and

    network cost.

    In [153], the authors propose a BC-assisted secure routing

    algorithm for a network based on 5G new radio for the

    swarm Unmanned Aircraft System(UAS) to prevent the

    disruptive attacks committed on UAS networking. The BC

    performs two main functions -Selecting the secure next

    hop for transmission of a packet from one to another

    and the authentication and verification of UASs. The BC

    distributed updated block digests to the whole swarm after

    a UAS is authenticated. The BC used is LW, which is

    different from the conventional BC distribution. Instead of

    using conventional mechanisms, the traffic status of UASs

    is leveraged to achieve a consensus known as Proof of

    Traffic(PoT). The neighborhood of UAS is decided based

    on the destination and record of the digest in BC, and each

    UAS in the swarm delivers packets to its neighbors with

    beamforming. The block digest records are checked so that

    the unauthenticated UAS are not chosen as hops. The attack-

    ers need the specific BC digest to launch an attack, which is

    computationally very expensive. PoT employs the passive

    broadcast for block synchronization, unlike conventional

    algorithms, which reduces the system’s overheads suitable

    for LW environments. However, the model assumes that the

    hackers cannot compromise a UAS in joining the swarm

    UAS networking. The untrusted UAS cannot recuperate

    the signal with side lopes leakage of beamforming without

    directional transmission.

    In [154], the authors propose a malware detection technique

    in IoT devices using Deep Learning (DL)and BCT, where

    SCs detect malicious applications. SC guides users’ and

    end-developers’ interactions, stores information about new

    apks, and enables tracking of malicious apps on the net-

    work. The malware features are shared and trained on DL

    models in android IoT devices. After the user uploads an

    app to the network, it is stored in an IPFS where the DL

    models extract features. The hash values obtained from the

    training models are stored in an immutable fashion on a BC

    network to prevent decompilation and repacking attacks by

    reverse engineering methods. When a user downloads a new

    app, the user sends the hash to the network for verification,

    where an SC decides whether the app is malicious or not.

    The model has been evaluated on 18,850 android appli-

    cations and 10,000 malware android packages and shows

    considerable efficiency. However, the analysis of bandwidth

    consumption by the IPFS based storage is not given, which

    is important, especially in the case of metered connections

    In [155], the authors propose a BC-based framework for

    detecting malware in mobile applications before down-

    loading. The model relies on dynamic and static analysis

    for detecting malware. The model uses two external and

    internal BCs. The internal private BC(IPB) contains feature

    extractors(FEs) to extend the dedicated internal private

    BC(DIPB). FE extracts information during the lifetime of an

    app. These features can be static, extracted from the file, or

    dynamic and extracted by monitoring the run time behavior.

    Each FE component is connected to a DIBP that tracks

    each app using the behavioral information. A dedicated

    external private BC(DECB) for each application contains

    scanning information of application versions. A determinant

    agent(DE) is part of the BC and based on the data in the

    BC, it classifies the app as malicious or not. DEs attach their

    decisions to DEPBs with relevant information. Although

    the dedicated BC for each app reduces the computational

    burden of one BC, it also increases the system’s overall

    complexity.

    In [156], the authors propose a distributed anti-malware

    protection mechanism to support a hybrid signature and

    anomaly-based detection model. When a new file is added,

    the users make a signed hash of the file corresponding

    hash is sent to the BC ledger. The verification is done on

    signature-based detection, and the system process and ports

    are checked for malicious activity. However, the signature-

    based verification suffers from detection evasion if the hash

    of the malicious file is changed. To avoid this, if the hash

    comparison does not match, a notification is sent to the

    users, and the system process and network ports are con-

    tinued to be examined. If any suspicious activity is found,

    the file is blocked from self-executing. The BC is updated

    with the hash of the malware file detected. This can prevent

    DDoS attacks where the malicious app may attempt to gain

    access to IoT devices. However, the proposed mechanism

    is suited for servers at the application layer for personal

    computers and servers but not for resource-constrained IoT

    devices.

    In [157], the authors propose a three layer parallel dis-

    tributed architecture for storing and sharing IoT data-

    BC layer, Node layer, Distributed storage layer aimed to

    improve the scalabilty of BC-based systems. The data

    generated by IoT devices is encrypted, and the hash value

    of the data is generated and stored in the BC as its unique

    identity. BC is the system’s control layer and is responsible

    for validating transactionsand data access control and also

    provides a platform for SCs to support various applications.

    The raw data is encrypted locally and stored in multiple

    storage nodes across the distributed network using the

    Kademlia method so that the data host has no access to

    the original data. The encryption technique used is AES

    (Advanced encryption standard). The data owner adds a

    digital signature to the data block’s digest, allowing the

    data’s ownership to be authenticated. The efficiency analysis

    reveals that in a network of 2n nodes, retrieving any data

    requires a maximum of n steps.

    118

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    In [158], the authors propose a BC-based solution for the

    decentralized storage mechanism and secure data transmis-

    sion, in this case, a sensing image, in IoT networks. This

    paper proposes using an encryption algorithm for secure

    data transfer and an intelligent verification algorithm for

    data storage and signature verification. A blocking algo-

    rithm is employed for sensing an image, and an intelligent

    sensor divides the image using image sensing and block

    data partitioning. A public key generation algorithm is

    leveraged, and the smart image sensor securely transmits

    the key information to BC. The sensor signs the data

    blocks with different keys at different intervals and transmits

    the message to the server, where a signature verification

    algorithm is employed. If the signature is verified, the data

    block is stored. The theoretical analysis shows that the

    model is resistant to counterfeit, theft, replay, and DoS

    attacks. The BC uses only one public key to authenticate

    different blocks, reducing the cost, but the intelligent sensor

    calculates n+1 keys for n blocks and stores n keys.

    In [159], the authors propose a theoretical prototype of

    BC-based IoT architecture using a design science research

    approach. The approach aims to design a prototype for data

    center decision-making, simplicity, complete digitization,

    tamper resistance, heterogeneity, and authentication of BC

    data. The Raspberry Pi is configured as a client node

    for the Ethereum BC, containing the storage and compu-

    tational configuration layer. The model has three prime

    components- IoT data logger(senses the data), SCs (stores

    data, chain address of the devices, and records events),

    and the monitoring dashboard component(displays data to

    end-users, communicates with the SCs, and behaves as a

    mining node). The system considers Ethereum BC, where

    SCs are executed on a virtual machine to reduce costs. The

    accounts on Ethereum are classified as contract (contain

    balance and contract storage executed via a transaction sent

    to its unique address)and externally owned(refer to external

    agents and contain only balance). The prototype is designed

    for high data availability, parsimony, and modularity in

    IoT ecosystems essential for efficient DM, but the design

    encounters high operational costs and scalability issues.

    In [160], the authors propose a trusted DM scheme for

    sensitive data distribution and storage in EC. The ar-

    chitecture is divided into three layers- Edge device(Fog

    nodes), BC Network(to which data is committed), Edge

    nodes(provides services), and Cloud center layer(complex

    problem solving). BlockTDM is reliant on a multi-step mu-

    tual authentication scheme based on certificates. A modified

    PBFT - broadcast multi-signature-based CM is employed

    where a client commits the message to the endorsing

    pairs (EPs) and the management pair(PM). PM verifies the

    signature, the endorsing pairs simulate, and the result is

    broadcasted to an ordering service peer and delivered to

    the bookkeeper. A multichannel matrix-based architecture

    is considered for data protection for blocks on different

    channels and user-defined data encryption for interchannel

    security. The scheme employs Hyperledger Chaincode as

    an SC connected to the EPs and is invoked to process

    transactions and query over the protected BC data. SCs are

    designed for data of various kinds, such as multimedia and

    documents, to support specific block DM. The model is

    highly secure but has O(n2) communication complexity.

    In [161], the authors propose a BC and Deep reinforcement

    learning(DRL) based scheme for efficient DM to achieve

    high-quality data collection with limited mobile terminal

    (MT) energy resources and sensing range and secure data

    sharing in Industrial IoT. The model proposes collecting the

    data through a DRL approach fed to the BC network. The

    connection of each MT is validated, and data is encrypted

    using keys and digital signatures. BC integration ensures

    data security and reliability when MTs share data and

    prevents the systems from attacks. Multiple Ethereum nodes

    are distributed across a private chain that interacts with the

    SC deployed on the chain. A certification authority is set up

    to maintain the data’s reliability and authenticity to avoid

    fraudulent transactions by MTs. The model is tested on the

    severity of DoS and DDoS attacks, and it is that DDoS

    attacks have a 0.1 % worse impact than DoS attacks. The

    increase in MTs does not impact the network, but both

    the attacks affect the database as the transaction frequency

    increases affecting the data storage.

    1) Critical Analysis of the proposed architectures:

    The evaluation of these studied techniques reveals that

    a tradeoff exists between IoT security and other perfor-

    mance criteria. Most of the proposed frameworks have been

    carefully verified against several security metrics, but the

    cost issues for customers or businesses are not addressed.

    The model in [145] cannot be implemented on commercial

    IoT devices due to close-sourced hardware and software,

    and there are considerable CPU and memory overheads in

    the authentication stage. In the architecture presented in

    [146], the sink node has to store many sequence numbers

    as the network complexity increases. In [151], the frequent

    calculations of trust values lead to substantial computational

    power, bringing overheads to the system. In [152], complex

    calculations are involved in finding routes that increase

    the computational overhead and network cost. In [154],

    the analysis of bandwidth consumption by the IPFS-based

    storage is not given, which is important, especially in the

    case of metered connections. In [155], the dedicated BC

    for each app increases the system’s overall complexity. In

    [160], the model has a communication complexity of O(n2).

    Many architectures have ignored or not completely ad-

    dressed the issues of latency, scalability, energy consump-

    tion, computational power, or the security aspect of privacy

    leakage. Most methods restrict to a certain aspect of IoT

    security while ignoring the computational overheads of

    implementation on a large scale. The architecture of [139] is

    suitable for the low-scale implementation, but the network

    performance is compromised if the network complexity

    increases, creating latency and storage problems. The model

    is resistant to AC message tampering until one-third of

    the network is not compromised. The proposed model in

    [142] is for private networks and cannot be replicated

    on large-scale IoT systems without affecting the network

    performance. The architecture proposed in [144] suffers

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    119

    from latency issues when the number of endorsing and

    validating nodes increases. The design in [159] encounters

    high operational costs and scalability issues.

    The authentication, trustworthiness, and authorization in

    many BC-based architectures are achieved through SCs,

    introducing transactional costs. In [141], ACC consumes

    high execution and transaction energy. In [149], the security

    analysis is provided in-depth, but the cost analysis of

    utilizing Ethereum-based SCs is unaccounted for. Many

    architectures provide security but are not suitable in con-

    strained environments. In [156], the proposed mechanism

    is suited for servers at the application layer for personal

    computers and servers but cannot be replicated for IoT

    devices.The architectures are not truly decentralized and

    run on some form of central scheme and are prone to

    security issues. In [146], the sink node acts as a point of

    failure, and a legitimate node can become corrupt and allow

    other malicious nodes to transmit the messages. BC-based

    systems incur high storage costs too. In [161], the increase

    in MTs does not impact the network, but both the attacks

    affect the database as the transaction frequency increases

    affecting the data storage.

    Many architectures rely on assumptions that may not be

    practically true. The architecture presented in [138] runs

    on various assumptions, such as that all the management

    domains have the same number of user equipment, the min-

    ing is done after the propagation procedure ends, the SAMs

    have the same transmissibility to propagate transactions and

    mining time and that there are enough power resources to

    carry out the verifications. The architecture of [148] runs on

    the assumption that base stations are always legitimate and

    that symmetric keys are securely transmitted in the network.

    In [147], the mechanism assumes that fog nodes and admin

    are trusted and that communication between fog devices and

    nodes is secure. In [152], the model assumes that all nodes

    are homogenous and that the sink has enough resources to

    handle the messages.

    B. Security benefits of BIIT systems :

    Despite the limitations, there are significant benefits of

    BIIT systems. The information created by IoT frameworks

    is broadly significant and confidential, and BCT substan-

    tially increases the security in distributed networks. BIIT

    systems offer the following security merits:

    1)

    Data integrity and confidentiality: The transactions in

    BIIT systems are verified through a CM, and all the

    nodes have an identical copy of the ledger. The data

    and transactions are highly encrypted by leveraging

    cryptographic mechanisms intrinsic to the BC.

    2)

    Data provenance: BIIT systems offer traceability by

    keeping a historical record of the timestamp in the

    BC.

    3)

    Fault tolerance: In BIIT systems, the data is dis-

    tributed across multiple devices, and a single node

    failure does not disrupt the system’s functionality.

    This eliminates a single point of failure and makes

    the BIIT systems more robust than centralized IoT

    systems.

    4)

    Secure communication and resistance to attacks: CM

    prevents the malicious nodes from corrupting the

    system. Launching an attack requires leveraging high

    computational resources.

    5)

    Trust management: BCs bring trust in the commu-

    nicating nodes and, through SCs, provide rules that

    guide a user’s authorization. SCs invoke clauses in

    the event of mistrust and penalizes the user for the

    breach.

    6)

    Access control: BIIT systems provide uniform access

    across multiple IoT systems. In BIIT systems, the

    IoT device is coupled with a unique identifier, and

    efficient KM and AC mechanisms for interoperability

    are available.

    7)

    Removing third-party risks: BCs decentralize the

    structure authority and provide secure DM with a

    decentralized architecture. Thus, the data is not under

    the control of a private organization but distributed

    across a plurality of nodes.

    BIIT systems offer higher security than centralized IoT

    architectures. A comparison is given in Table V.

    9. Challenges, Open Issues, and Research Directions:

    BCT is emerging as a key paradigm for establishing

    trust, imparting security, auditing capability, and verifia-

    bility in systems. BIIT systems are secure but require a

    scalable architecture with sufficient throughput and low

    latency. IoT systems are constrained, and designing less

    intensive security measures for low-powered devices with

    low storage, computational, and network overheads are in

    progress. The constrained nature of IoT and other factors

    hinders the deployment of BIIT systems, briefly discussed

    below:

    1)

    Cost of IoT storage through SCs: In Ethereum SCs,

    the amount of computational work required to com-

    plete an operation in a transaction is measured in

    Gas units. The currency to pay for Gas units is Ether/

    gwei (1 gwei= 10-9 ethers). There is no fixed price

    set for the gas, and the sender enforces a gas limit

    in the transaction and specifies the gas cost. Miners

    mine the blocks which specify high gas prices. The

    price of Ethereum has risen from a single-digit USD

    value in 2015 to touching 2500 USD in 2021 [162].

    Suppose a transaction requires 100 million gas units

    with 1 gas unit set at 25 gwei; the corresponding

    price in dollars to complete the transaction would

    be 108x25x 10-9x2500=6250 USD. With more de-

    vices in the network, data storage complexity also

    increases. BCs store an immutable, permanent record

    of data, and with the increase in the nodes, the

    size of the chain also increases, which causes stor-

    age/memory concerns. Although BC eliminates the

    management costs in a system, it is considerably

    expensive to store data in a BC. Ethereum costs

    76000 USD per GB, which is very expensive for

    120

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    TABLE V. Evaluation of network security - Existing centralized architectures Vs.
    BIIT architecture

    IoT

    Network

    level

    Security issues

    Evaluation of IoT Network Security

    Existing network/ Cloud architecture of IoT

    BIIT architecture

    Applica-

    tion Layer

    .

    Software failures

    Weak operating systems and Vulnerable application soft-

    ware.

    StrongOperating systems

    Tested applications

    Malware attacks

    Evasion of anti-malware schemes.

    Late/ False detection.

    Secure storage of Malware in-

    formation.

    AC and Identity

    Authentication.

    Weak AC mechanisms.

    Fine-grained hierarchical AC

    mechanisms.

    Data protection

    No encryption for data at rest.

    Strong encryption for Data at

    Rest and data communication.

    Data Loss

    Vulnerable third-party software modules. Hackable cen-

    tralized servers.

    Susceptible to data leakage.

    Decentralized and distributed

    modules.

    Robust architecture.

    Network

    Layer

    Phishing

    Vulnerable to

    Centralized attacks.

    Secure exchange of data be-

    tween platforms.

    Interoperability

    Not suitable for cross-domain authentication.

    Inter-domain authentication.

    Multiple domain access.

    Cross-domain operations

    Confidentiality

    Unauthorized access.

    Data confidentiality is main-

    tained.

    Routing security

    Non –Robust routing information.

    Traceable

    and

    tamper-

    proof routing information

    Data security

    Susceptible to Channel attacks such as Replay attacks,

    Man in the middle attack, Impersonation, Ephemeral se-

    cret leakage.

    Secure exchange of data be-

    tween platforms.

    Trusted routing environment.

    Perception

    Layer

    Key

    Management

    Strong dependence on the third party for KM.

    Vulnerable to Privacy breaches.

    Secure distribution of keys

    Privacy preservation.

    Data protection

    Susceptible to security attacks.

    Data repudiation.

    DoS.

    High Data Security.

    Mass node au-

    thentication

    Reliance on third-party authentication centers.

    Distributed and decentralized

    authentication mechanisms.

    Consensus-based Authentica-

    tion.

    Dynamic nature

    of IoT topology

    Heterogeneity hinders Security.

    Transformation of heteroge-

    neous data into a uniform for-

    mat.

    Protection

    from

    false data

    Susceptible to data tampering and leakage.

    Traceable data.

    Data tampering is costly.

    Auditability.

    Encryption

    Scalability issues while employing digital signatures.

    Highly encrypted data.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    121

    IoT applications. The research is moving towards

    cost analysis and solutions for IoT storage through

    BC SCs. In [163], the authors investigate the storage

    costs of numeric data on BC through SCs. The data

    storage is conducted using two strategies. In scenario

    1, the data is stored in an array, and in Scenario

    2, the data is encoded into one variable using two

    methods- Encoding within SC and encoding outside

    SC. The experimental results show that encoding the

    data outside SC into one variable is cost-efficient

    compared to storing data in an array or encoding it

    into a variable within SC.

    2)

    Power consumption: IoT devices applyenergy-saving

    strategies such as “Sleep and Wake up” scheduling

    to increase the network lifetime. However, due to

    BC’s unique way of storing and continuous data

    processing, the energy consumed by such a system is

    considerably higher than conventional systems. The

    authors in [164] estimate the energy consumption of

    various cryptocurrencies. The processing power is

    measured in hash rates. Bitcoin uses SHA-256 and

    has a rated power network of 4291,366 KWwhich an

    IoT node cannot support. Mining is computationally

    expensive, which necessitates specialized machinery

    and massive quantities of electricity.It is challenging

    to run BC as a full node on IoT devices. Recent solu-

    tions suggest using edge computing to enable mobile

    devices to offload the mining work to the cloud.

    Edge computing can be incorporated to help mobile

    devices offload mining work to cloud resources.

    The authors in [165] propose a 4-layer BC-based

    framework for IoT where the devices and servers

    participate in BC via p2p communication. The end

    devices handle simple operations while more pow-

    erful servers support the complex operations in the

    top tiers at the edge/cloud.

    3)

    Network model in BC systems: The expansion of

    the BIIT system creates new requesting blocks. The

    requesting block and the state data must lead to

    a consistent system state, and the newer clients

    synchronize with the existing state. The majority

    of the BC-based traffic models are p2p. The au-

    thors of [55] categorize it into three types- Gos-

    sip Protocol, Kademlia Algorithm, and DAG. The

    gossip-based BCs offer relatively less latency and

    energy consumption but achieve data integrity at

    the cost of large message overheads [166]. The

    Kademlia algorithm works with lesser communica-

    tion overhead, and the resource location in DAG is

    guaranteed. Ethereum also employs p2p networking

    with no trusted intermediary. The nodes themselves

    act as the service and the service providers to en-

    sure data synchronization [167]. Ethereum follows

    a discovery protocol that allows the nodes to find

    each other. BlIT systems must satisfy consistency

    in an asynchronous network with reduced latency

    and increased security. The security of consensus

    depends on the underlying network. Studying the

    network extensively to determine what affects the

    performance of a p2p network is an important issue.

    In [168], the authors study the network structure

    of Ethereum by running a customized version of

    Ethereum’s Go client, GETH, for seven months.

    4)

    BC Security and Privacy vulnerabilities: BC-based

    systems provide high security to systems by making

    data tamper-proof. However, BC itself exhibits secu-

    rity vulnerabilities. The adversity tolerance is further

    reduced with modifications in CMs for LW environ-

    ments. Common security threats to BC include Pro-

    tocol attacks, Ellipse attacks, the chance of double-

    spending, Consensus protocol attacks, SC Vulner-

    abilities, Programming frauds, Private Key Leak-

    age, DDoS attacks, and other security issues[169],

    [170]. Employment of communication security pro-

    tocols such as Datagram transport layer security

    is resource-intensive and not suitable. Further, all

    transactions in the BC are transparent. By analyz-

    ing the patterns of transactions from a user, the

    anonymity of a user can be compromised and lead to

    potential front-running. For private communications,

    protocols such as Telehash or Whisper can be inte-

    grated. Privacy leakage can be countered through pri-

    vacy protection mechanisms such as Zero-knowledge

    proof, Attribute-based Encryption [171]. However,

    these cryptographic algorithms are highly resource-

    intensive and unaffordable in LW environments.

    5)

    SC Vulnerabilities: A fault in the SC could be caused

    by a simple typing error, a misinterpretation of the

    specification, or a more severe programming error.

    BC is irreversible, and a minor glitch has many

    ramifications for SC security and functionality. For

    example, the quantity of gas that the transactions

    contained in the block can utilize is limited to

    prevent the chains from growing beyond a point. If

    data is stored in variable-sized arrays and accessed

    through loops, the gas can get exhausted before

    committing a transaction. Miners are compensated,

    but the transaction is reversed. As a result, testing

    mechanisms for SCs is a critical problem. The test

    mechanism must inspect the SC on enough data

    for all malicious and non-malicious inputs before

    deployment to detect anomalies. Furthermore, be-

    cause IoT systems are distributed across multiple

    locations, retrieving data from various sources can

    cause the SCs to become overburdened. It’s difficult

    to fine-tune SCs for IoT LW applications. SCs are

    associated with a variety of other challenges. The

    legal enforcement of SCs, for example, is currently

    restricted. Dual integration of SCs with real-world le-

    gal contracts is one solution that has been proposed.

    6)

    IoT specific Consensus: The abilities of the existing

    CMs are limited when applied to IoT and have not

    been tested thoroughly. Conventional CMs, such as

    PoW, is resource-intensive and cannot run on IoT

    devices. Even a powerful IoT node such as Rasp-

    berry pi3 can only achieve 104 hashes per second,

    122

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    while a Bitcoin network can conduct around 1019

    hashes per second. Integration of full BC nodes in

    IoT is in the nascent stage. Malicious attacks on

    lightweight CMs with low adversity tolerance can

    prevent valid transactions. A potential solution is

    to limit the consensus to the edge / decentralized

    cloud, while IoT nodes save only the hash values,

    but this increases the storage overheads on the edge.

    Furthermore, the interoperability and authentication

    standards for edge devices are limited.

    7)

    Throughput, Latency, Scalability, and Network com-

    plexity:BC systems do not scale well if the network

    size increases massively. The network efficiency re-

    duces as the network scales up and more authen-

    tication requests are handled, leading to network

    congestion. The growth of the chain further leads

    to bandwidth problems. The mobility of IoT devices

    also affects BC performance. BCs are inherently

    latency tolerant, and the mining time is induced to

    secure the networks further, which is unacceptable

    in real-time IoT systems such as IoV. A poten-

    tial solution is to integrate IPFS, AI, and ML to

    complement the BC. Off-Chain solutions can be

    integrated to increase the transaction throughput.

    IoT big data is posing challenges in real-time data

    delivery. Integration of ML in BIIT systems for IoT

    Big data analytics is hindered by storage, latency,

    scalability, and other challenges. Further investiga-

    tion is required to analyze the overheads introduced

    in BC-IPFS integration. Normalization and compres-

    sion techniques explicitly designed for BIIT systems

    where BC power is leveraged are required.

    8)

    Compatibility and Adoption: BC is an emerging

    technology and lacks standardization laws. Access

    control legislation is an issue in public BCs. IoT data

    is heterogeneous, and the diversity of IoT devices

    implies the need for different network protocols. Pro-

    tocol conversions to enable smooth communication

    are especially costly in BIIT systems. The large-

    scale adoption of BIIT applications needs significant

    infrastructural changes. A generic BC-IoT architec-

    ture is needed to bridge the gap between IoT service

    providers and BC. IoT service providers must modify

    the underlying naming and discovery schemes to

    comply with the BC mechanism. Laws and regula-

    tions concerning information security govern the IoT

    domain, and many countries have strict legislative

    rules regarding cryptocurrencies.

    A. Research Directions

    We present the following research directions based on

    our thorough study of the domain.

    1)

    1. Cost reduction strategies: The rising cost of

    Ethereum is impeding the use of BC in IoT. More

    research into strategies to lower the cost of BC

    adoption in IoT is needed. Given IoT Big data’s con-

    cerns, more efficient data representations that allow

    low-cost SC operations require further investigation

    to make large-scale IoT-BC systems commercially

    viable.

    2)

    IoT-BC Traffic Models: Performing large-scale data

    collection and traffic analysis of growing-BC chains

    is an understudied topic due to large-scale simulation

    and time requirements. The security of the consensus

    protocols is based on the assumption of efficient

    p2p overlay network operations. More research is

    needed to understand the parameters that influence

    the properties of p2p networks.

    3)

    Testing Mechanisms for SCs: The voids in the

    SCs can expose BC security. SCs are vulnerable to

    mining pool attacks because they are open source

    to all parties involved. Once deployed, the SC is

    irreversible and cannot be repaired in the event of

    a virus or a hacking attack. Thus, validating and

    devising unerring testing mechanisms for SCs and

    running them on sufficient data is an important

    research direction.

    4)

    At the Edge Consensus: IoT devices have limited

    computational and networking capabilities; thus, run-

    ning BC as a full node is difficult. It is critical

    to protect IoT suitable CMs from attackers from

    gaining control of the majority of hash power. De-

    signing IoT suitable mechanisms with good adversity

    tolerance and low latency is an open issue and a

    strong research direction.

    5)

    Integration with computing platforms:Due to the

    constrained nature of IoT devices, Fog /Cloud

    servers are added at top tiers, storing the entire BC

    information for transaction validation. It is necessary

    to enable IoT devices to push transactions to the

    BC without centralized block endorsement groups.

    Designing architectures for such integration without

    compromising the security and privacy concerns is a

    strong research direction.

    6)

    Network Configuration: There is no standard archi-

    tecture for BIIT systems. Integration of the cloud

    and the edge at a higher level is critical. Config-

    uring BCs at the node, edge, and cloud levels and

    load balancing and network congestion control for

    addressing increased validation requests are open

    research issues.

    7)

    Convergence of BC and ML: BC-based systems

    can benefit from the addition of MLalgorithms. SCs

    can be used to create a reward-based mechanism

    for training ML models. The potential of ML-BC

    integration has yet to be fully realized, but it is a

    promising future direction.

    8)

    Convergence of BC and IPFS: With IPFS, BC only

    saves the cryptographic hashes slowing down the

    chain development drastically. Through SCs, BC can

    allow access-controlled file sharing and secure stor-

    age of cryptographic hashes of IPFS. It is crucial to

    analyze the latency introduced in the IPFS primarily

    due to the contact with BC and the consequences on

    LW operations.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    123

    9)

    Securing BC and Transactional privacy: Pattern anal-

    ysis of transparent transactions exposes users’ pri-

    vacy. More research is needed to protect BC-based

    AC systems from security threats. Thus, a potential

    research direction is developing LW cryptographic

    algorithms for BCs to protect transactional and user

    privacy in BC-based IoT systems.

    10. Conclusion

    The disruptive attacks on IoT networks are predicted to

    be more severe in the future due to the advanced capability

    of B5G and 6G networks. The unique properties of BCT

    for enabling a p2p network with no centralized stakeholder

    controlling the system enable it to be a perfect security

    solution. BCs, through SCs, provide fine-grained AC by

    providing global functions of authentication, authorization,

    and KM, besides providing a distributed architecture for

    secure storage of hashes, verification rules, sensor data, and

    other information. However, IoT devices are constrained

    and require an LW implementation of CMs to bear the

    computational, storage, power, and network overheads. This

    paper presents a comprehensive comparison of BC solutions

    for IoT systems and concludes that BC can provide efficient

    KM and AC, node authentication, routing security, and se-

    curely store the domain-specific information. A detailed sur-

    vey of recent research on security enhancement, consensus,

    applications, integration with ML, and computing platforms

    is presented. We discuss IPFS, ML, and EC can facilitate

    BC as a crucial enabling technology for IoT. Through IPFS-

    enabled BCs, the growth of the chain is restricted by only

    storing hashes on the BC, and the AC list is maintained

    by SCs, enforced by the updated IPFS software. MEC is

    being considered to be a potential approach for achieving

    consensus for mobile users, facilitating BC applications in

    future mobile IoT systems.

    The convergence of BC and ML for IoT can enable ac-

    curate data analytics. 6G systems are expected to create

    a massive convergence of IoT, AI, EC, Quantum ML,

    and BCT for fast and secure systems that can support

    a plethora of devices. IoT systems are rapidly evolving,

    and as the number of network nodes grows, the tradeoffs

    between energy consumption, security, latency, throughput,

    and scalability become more complex. We conclude that

    BC and IoT technology have evolved separately and for

    futuristic IoT systems to reach their full potential, exten-

    sive research is needed in two domains- a) Blockchain as

    enabling technology in IoT and b)Enabling technologies

    for BC-based IoT. Challenges such as the rising cost of

    Ethereum, power consumption of IoT nodes, SC security,

    and legislation issues are hindering the large-scale adoption

    of BC-based IoT. Extensive research is needed on the

    parameters affecting the network properties, cost reduction

    strategies, encoding, traffic modeling, off-chain solutions,

    network configuration, transactional privacy, SC testing, and

    BC security, especially in LW environments.

    References

    [1]

    “The internet of things (iot) technology - ericsson.” [Online].

    Available: -https://www.ericsson.com/en/internet-of-things

    [2]

    D. S. Linthicum, “Connecting fog and cloud computing,” IEEE

    Cloud Computing, vol. 4, no. 2, pp. 18–20, March 2017.

    [3]

    S. Showkat and S. Qureshi, “Securing the internet of things using

    blockchain,” in 2020 10th International Conference on Cloud

    Computing, D. S. E. (Confluence), Ed., January 2020, pp. 540–

    545.

    [4]

    F. Gao, D.-L. Chen, M.-H. Weng, and R.-Y. Yang, “Revealing

    development trends in blockchain-based 5g network technologies

    through patent analysis,” Sustainability, vol. 13, p. 5, January 2021.

    [5]

    P. K. Sharma, M. Chen, and J. H. Park, “A software defined fog

    node based distributed blockchain cloud architecture for iot,” IEEE

    Access, vol. 6, pp. 115–124, 2018.

    [6]

    B. C. al., “When internet of things meets blockchain: Challenges in

    distributed consensus,” IEEE Network, vol. 33, no. 6, pp. 133–139,

    November 2019.

    [7]

    V. Hassija, V. Chamola, V. Saxena, D. Jain, P. Goyal, and B. Sikdar,

    “A survey on iot security: Application areas, security threats, and

    solution architectures,” IEEE Access, vol. 7, pp. 82 721–82 743,

    2019.

    [8]

    T. A. Butt and M. Afzaal, “Security and privacy in smart cities: Is-

    sues and current solutions,” in Smart Technologies and Innovation

    for a Sustainable Future, Cham pp, pp. 317–323, 2019.

    [9]

    A. Verma, A. Khanna, A. Agrawal, A. Darwish, and A. E.

    Hassanien, “Security and privacy in smart city applications and

    services: Opportunities and challenges,” in Cybersecurity and

    Secure Information Systems: Challenges and Solutions in Smart

    Environments, A. E. Hassanien and M. Elhoseny, Eds.

    Cham:

    Springer International Publishing, 2019, pp. 1–15.

    [10]

    F. Al-Turjman, H. Zahmatkesh, and R. Shahroze, “An overview

    of security and privacy in smart cities’ iot communications,”

    Transactions on Emerging Telecommunications Technologies.

    [11]

    N. Tariq, A. Qamar, M. Asim, and F. A. Khan, “Blockchain and

    smart healthcare security: A survey,” Procedia Computer Science,

    vol. 175, pp. 615–620, January 2020.

    [12]

    S. Tian, W. Yang, J. M. L. Grange, P. Wang, W. Huang, and Z. Ye,

    “Smart healthcare: making medical care more intelligent,” Global

    Health Journal, vol. 3, no. 3, pp. 62–65, September 2019.

    [13]

    S. Zeadally, F. Siddiqui, Z. Baig, and A. Ibrahim, “Smart health-

    care: Challenges and potential solutions using internet of things

    (iot) and big data analytics,” PSU Research Review, vol. 4, no. 2,

    pp. 149–168, January 2019.

    [14]

    C. Bekara, “Security issues and challenges for the iot-based smart

    grid,” Procedia Computer Science, vol. 34, pp. 532–537, January

    2014.

    [15]

    K. Kimani, V. Oduol, and K. Langat, “Cyber security challenges

    for iot-based smart grid networks,” International Journal of Criti-

    cal Infrastructure Protection, vol. 25, pp. 36–49, June 2019.

    [16]

    A. Ghasempour, “Internet of things in smart grid: Architecture, ap-

    plications, services, key technologies, and challenges,” Inventions,

    vol. 4, p. 1, March 2019.

    [17]

    W. Ali, G. Dustgeer, M. Awais, and M. A. Shah, “Iot based smart

    home: Security challenges, security requirements and solutions,” in

    124

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    2017 23rd International Conference on Automation and Computing

    (ICAC, September 2017, pp. 1–6.

    [18]

    D. Geneiatakis, I. Kounelis, R. Neisse, I. Nai-Fovino, G. Steri, and

    G. Baldini, “Security and privacy issues for an iot based smart

    home,” in, vol. 2017, no. 40, pp. 1292–1297, May 2017.

    [19]

    Z. Shouran, A. Ashari, and T. Priyambodo, “Internet of things

    (iot) of smart home: Privacy and security,” International Journal

    of Computer Applications, vol. 182, pp. 3–8, February 2019.

    [20]

    M. Ayaz, M. Ammad-Uddin, Z. Sharif, A. Mansour, and E.-H. M.

    Aggoune, “Internet-of-things (iot)-based smart agriculture: Toward

    making the fields talk,” IEEE Access, vol. 7, pp. 29 551–12 958,

    2019.

    [21]

    M. A. Ferrag, L. Shu, X. Yang, A. Derhab, and L. Maglaras,

    “Security and privacy for green iot-based agriculture: Review,

    blockchain solutions, and challenges,” IEEE Access, vol. 8, pp.

    32 031–32 053, 2020.

    [22]

    X. Y. al., “A survey on smart agriculture: Development modes,

    technologies, and security and privacy challenges,” IEEE/CAA

    Journal of Automatica Sinica, vol. 8, no. 2, pp. 273–302, February

    2021.

    [23]

    Y. S. al., “Attacks and countermeasures in the internet of vehicles,”

    Ann. Telecommun., vol. 72, no. 5-6, pp. 283–295, June 2017.

    [24]

    H. Xu, J. Lin, and W. Yu, “Smart transportation systems: Archi-

    tecture, enabling technologies, and open issues,” in Secure and

    Trustworthy Transportation Cyber-Physical Systems, Y. Sun and

    H. Song, Eds.

    Singapore: Springer, 2017, pp. 23–49.

    [25]

    L. Alouache, N. Nguyen, M. Aliouat, and R. Chelouah, “Survey

    on iov routing protocols: Security and network architecture,”

    International Journal of Communication Systems, vol. 32, p. 2,

    2019.

    [26]

    Y. Wu, H.-N. Dai, and H. Wang, “Convergence of blockchain and

    edge computing for secure and scalable iiot critical infrastructures

    in industry 4.0,” IEEE Internet of Things Journal, vol. 8, no. 4,

    pp. 2300–2317, February 2021.

    [27]

    M. H. Miraz and M. Ali, Applications of Blockchain Technology

    beyond Cryptocurrency.

    [cs], 2018.

    [28]

    F. Glaser, “Pervasive decentralisation of digital infrastructures: a

    framework for blockchain enabled system and use case analysis,”

    2017.

    [29]

    R. Beck, C. M¨uller-Bloch, and J. L. King, “Governance in the

    blockchain economy: A framework and research agenda,” Journal

    of the Association for Information Systems, vol. 19, no. 10, p. 1,

    2018.

    [30]

    J. Fu, S. Qiao, Y. Huang, X. Si, B. Li, and C. Yuan, “A study on

    the optimization of blockchain hashing algorithm based on prca,”

    Security and Communication Networks, vol. 2020, September

    2020.

    [31]

    T. M. Fernandez-Caramas and P. Fraga-Lamas, “Towards post-

    quantum blockchain: A review on blockchain cryptography re-

    sistant to quantum computing attacks,” IEEE Access, vol. 8, pp.

    21 091–21 116, 2020.

    [32]

    H.-N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for internet of

    things: A survey,” IEEE Internet Things J., vol. 6, no. 5, pp. 8076–

    8094, October 2019.

    [33]

    Y. Liu, J. Zhang, and J. Zhan, Privacy protection for fog computing

    and the internet of things data based on blockchain.

    Cluster

    Comput.

    [34]

    S. Ferretti and G. D’Angelo, “On the ethereum blockchain struc-

    ture: A complex networks theory perspective,” Concurrency and

    Computation: Practice and Experience, vol. 32, p. 12, 2020.

    [35]

    F. Chen, Z. Xiao, L. Cui, Q. Lin, J. Li, and S. Yu, “Blockchain for

    internet of things applications: A review and open issues,” Journal

    of Network and Computer Applications, vol. 172, December 2020.

    [36]

    M. S. Ferdous, M. J. M. Chowdhury, M. A. Hoque, and A. Colman,

    “Blockchain consensus algorithms: A survey,” [cs], Feb, vol. 2020,

    Apr. 2021. [Online]. Available: http://arxiv.org/abs/2001.07091

    [37]

    L. W. Cong and Z. He, “Blockchain disruption and smart con-

    tracts,” The Review of Financial Studies, vol. 32, no. 5, pp. 1754–

    1797, May 2019.

    [38]

    T. H. al., “Transaction-based classification and detection approach

    for ethereum smart contract,” Information Processing

    Manage-

    ment, vol. 58, p. 2, March 2021.

    [39]

    Z. Shah, I. Ullah, H. Li, A. Levula, and K. Khurshid, “Blockchain

    based solutions to mitigate distributed denial of service (ddos)

    attacks in the internet of things (iot): A survey,” Sensors, vol. 22,

    no. 3, p. 1094, 2022.

    [40]

    ““electronics | free full-text | blockchain for iot applications: Tax-

    onomy, platforms, recent advances, challenges and future research

    directions.”.”

    [41]

    N.

    Deepa,

    Q.-V.

    Pham,

    D.

    C.

    Nguyen,

    S.

    Bhattacharya,

    B. Prabadevi, T. R. Gadekallu, P. K. R. Maddikunta, F. Fang, and

    P. N. Pathirana, “A survey on blockchain for big data: approaches,

    opportunities, and future directions,” Future Generation Computer

    Systems, 2022.

    [42]

    S. Saxena, B. Bhushan, and M. A. Ahad, “Blockchain based

    solutions to secure iot: Background, integration trends and a way

    forward,” J. Netw. Comput. Appl., vol. 181, May 2021.

    [43]

    A. K. Paul, X. Qu, and Z. Wen, Blockchain-a promising solution

    to internet of things: A comprehensive analysis, opportunities,

    challenges and future research issues.

    Peer Peer Netw. Appl.

    [44]

    A. A. Sadawi, M. S. Hassan, and M. Ndiaye, “A survey on the

    integration of blockchain with iot to enhance performance and

    eliminate challenges,” IEEE Access, vol. 9, pp. 54 478–54 497,

    2021.

    [45]

    P. Patil, M. Sangeetha, and V. Bhaskar, “Blockchain for iot access

    control, security and privacy: A review,” Wirel. Pers. Commun.,

    vol. 117, no. 3, pp. 1815–1834, April 2021.

    [46]

    F. H. Al-Naji and R. Zagrouba, “A survey on continuous au-

    thentication methods in internet of things environment,” Comput.

    Commun., vol. 163, pp. 109–133, November 2020.

    [47]

    A. Sharma, E. S. Pilli, A. P. Mazumdar, and P. Gera, “Towards

    trustworthy internet of things: A survey on trust management

    applications and schemes,” Comput. Commun., vol. 160, pp. 475–

    493, July 2020.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    125

    [48]

    J. Sengupta, S. Ruj, and S. D. Bit, “A comprehensive survey on

    attacks, security issues and blockchain solutions for iot and iiot,”

    J. Netw. Comput. Appl., vol. 149, January 2020.

    [49]

    B. Alotaibi, “Utilizing blockchain to overcome cyber security

    concerns in the internet of things: A review,” IEEE Sens, vol. 19,

    no. 23, pp. 10 953–10 971, December 2019.

    [50]

    P. J. Taylor, T. Dargahi, A. Dehghantanha, R. M. Parizi, and K.-

    K. R. Choo, “A systematic literature review of blockchain cyber

    security,” Digital Communications and Networks, vol. 6, no. 2, pp.

    147–156, May 2020.

    [51]

    M. Wu, K. Wang, X. Cai, S. Guo, M. Guo, and C. Rong, “A com-

    prehensive survey of blockchain: From theory to iot applications

    and beyond,” IEEE Internet Things J., vol. 6, no. 5, pp. 8114–8154,

    October 2019.

    [52]

    M. S. Ali, M. Vecchio, M. Pincheira, K. Dolui, F. Antonelli,

    and M. H. Rehmani, “Applications of blockchains in the internet

    of things: A comprehensive survey,” IEEE Commun. Surv. Tutor,

    vol. 21, no. 2, pp. 1676–1717, 2019.

    [53]

    A. K. Yadav and K. Singh, “Comparative analysis of consensus

    algorithms of blockchain technology,” in Ambient Communications

    and Computer Systems, Singapore pp, pp. 205–218, 2020.

    [54]

    S. M. H. Bamakan, A. Motavali, and A. B. Bondarti, “A survey of

    blockchain consensus algorithms performance evaluation criteria,”

    Expert Syst. Appl., vol. 154, September 2020.

    [55]

    L. Lao, Z. Li, S. Hou, B. Xiao, S. Guo, and Y. Yang, “A survey

    of iot applications in blockchain systems: Architecture, consensus,

    and traffic modeling,” ACM Comput. Surv., vol. 53, no. 1, pp. 1–18,

    February 2020.

    [56]

    Y. Wen, F. Lu, Y. Liu, P. Cong, and X. Huang, “Blockchain

    consensus mechanisms and their applications in iot: A literature

    survey,” in Algorithms and Architectures for Parallel Processing,

    Cham pp, pp. 564–579, 2020.

    [57]

    M. Salimitari, M. Chatterjee, and Y. P. Fallah, “A survey on consen-

    sus methods in blockchain for resource-constrained iot networks,”

    Internet of Things, vol. 11, September 2020.

    [58]

    M. Salimitari and M. Chatterjee, “A survey on consensus protocols

    in blockchain for iot networks,” [cs], Jun, vol. 2019, Apr. 2021.

    [Online]. Available: http://arxiv.org/abs/1809.05613

    [59]

    H. Rathore, A. Mohamed, and M. Guizani, “A survey of blockchain

    enabled cyber-physical systems,” Sensors, vol. 20, p. 1, January

    2020.

    [60]

    A. Pieroni, N. Scarpato, and L. Felli, “Blockchain and iot

    convergence-a systematic survey on technologies, protocols and

    security,” Applied Sciences, vol. 10, p. 19, January 2020.

    [61]

    S. Aggarwal, R. Chaudhary, G. S. Aujla, N. Kumar, K.-K. R.

    Choo, and A. Y. Zomaya, “Blockchain for smart communities:

    Applications, challenges and opportunities,” J. Netw. Comput.

    Appl., vol. 144, pp. 13–48, October 2019.

    [62]

    P. Mehta, R. Gupta, and S. Tanwar, “Blockchain envisioned uav

    networks: Challenges, solutions, and comparisons,” Comput. Com-

    mun., vol. 151, pp. 518–538, February 2020.

    [63]

    U.

    Bodkhe,

    S.

    Tanwar,

    P.

    Bhattacharya,

    and

    N.

    Kumar,

    “Blockchain for precision irrigation: Opportunities and chal-

    lenges,” Trans. Emerg. Telecommun. Technol., p. e, vol. 4059.

    [64]

    M. Torky and A. E. Hassanein, “Integrating blockchain and the

    internet of things in precision agriculture: Analysis, opportunities,

    and challenges,” Comput. Electron, vol. 178, November 2020.

    [65]

    S. E. Chang and Y. Chen, “When blockchain meets supply chain: A

    systematic literature review on current development and potential

    applications,” IEEE Access, vol. 8, pp. 62 478–62 494, 2020.

    [66]

    P. P. Ray, D. Dash, K. Salah, and N. Kumar, “Blockchain for

    iot-based healthcare: Background, consensus, platforms, and use

    cases,” IEEE Syst. J., vol. 15, no. 1, pp. 85–94, March 2021.

    [67]

    U. Majeed, L. U. Khan, I. Yaqoob, S. M. A. Kazmi, K. Salah,

    and C. S. Hong, “Blockchain for iot-based smart cities: Recent

    advances, requirements, and future challenges,” J. Netw. Comput.

    Appl., vol. 181, May 2021.

    [68]

    M. B. M. al., “Blockchain for the internet of vehicles towards

    intelligent transportation systems: A survey,” IEEE Internet Things

    J., vol. 8, no. 6, pp. 4157–4185, March 2021.

    [69]

    I. Mistry, S. Tanwar, S. Tyagi, and N. Kumar, “Blockchain for 5g-

    enabled iot for industrial automation: A systematic review, solu-

    tions, and challenges,” Mechanical Systems and Signal Processing,

    vol. 135, January 2020.

    [70]

    K. Zhang, Y. Zhu, S. Maharjan, and Y. Zhang, “Edge intelligence

    and blockchain empowered 5g beyond for the industrial internet

    of things,” IEEE Network, vol. 33, no. 5, pp. 12–19, September

    2019.

    [71]

    S. Tanwar, Q. Bhatia, P. Patel, A. Kumari, P. K. Singh, and

    W. Hong, “Machine learning adoption in blockchain-based smart

    applications: The challenges, and a way forward,” IEEE Access,

    vol. 8, pp. 474–488, 2020.

    [72]

    O. Alfandi, S. Khanji, L. Ahmad, and A. Khattak, “A survey on

    boosting iot security and privacy through blockchain exploration,

    requirements, and open issues,” Cluster Comput., vol. 24, no. 1,

    pp. 37–55, March 2021.

    [73]

    R. A. Memon, J. P. Li, J. Ahmed, M. I. Nazeer, M. Ismail,

    and K. Ali, “Cloud-based vs. blockchain-based iot: a comparative

    survey and way forward,” Front. Inform, vol. 21, no. 4, pp. 563–

    586, April 2020.

    [74]

    F. H. Pohrmen, R. K. Das, and G. Saha, “Blockchain-based security

    aspects in heterogeneous internet-of-things networks: A survey,”

    Trans. Emerg. Telecommun. Technol., vol. 30, p. 10, October 2019.

    [75]

    N. T. al., “The security of big data in fog-enabled iot applications

    including blockchain: A survey,” Sensors, vol. 19, p. 8, April 2019.

    [76]

    D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,

    “Integration of blockchain and cloud of things: Architecture,

    applications and challenges,” IEEE Commun. Surv. Tutor, vol. 22,

    no. 4, pp. 2521–2549, 2020.

    [77]

    S. Hakak, W. Z. Khan, G. A. Gilkar, M. Imran, and N. Guizani,

    “Securing smart cities through blockchain technology: Architec-

    ture, requirements, and challenges,” IEEE Network, vol. 34, no. 1,

    pp. 8–14, January 2020.

    [78]

    B. Nour, A. Ksentini, N. Herbaut, P. A. Frangoudis, and

    126

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    H. Moungla, “A blockchain-based network slice broker for 5g

    services,” IEEE Networking Letters, vol. 1, no. 3, pp. 99–102,

    September 2019.

    [79]

    S. Gupta, P. Thakur, K. Biswas, S. Kumar, and A. P. Singh,

    “Developing a blockchain-based and distributed database-oriented

    multi-malware detection engine,” in Machine Intelligence and Big

    Data Analytics for Cybersecurity Applications.

    Springer, 2021,

    pp. 249–275.

    [80]

    X. Jia, N. Hu, S. Yin, Y. Zhao, C. Zhang, and X. Cheng, “A2

    chain: A blockchain-based decentralized authentication scheme for

    5g-enabled iot,” Mobile Information Systems, vol. 2020, December

    2020.

    [81]

    S. P. Sankar, T. D. Subash, N. Vishwanath, and D. E. Geroge,

    “Security improvement in block chain technique enabled peer to

    peer network for beyond 5g and internet of things,” Peer-to-Peer

    Netw. Appl., vol. 14, no. 1, pp. 392–402, January 2021.

    [82]

    G. Papadodimas, G. Palaiokrasas, A. Litke, and T. Varvarigou,

    “Implementation of smart contracts for blockchain based iot ap-

    plications,” in 2018 9th International Conference on the Network

    of the Future (NOF, November 2018, pp. 60–67.

    [83]

    Y. Gao, W. Wu, H. Nan, Y. Sun, and P. Si, “Deep reinforcement

    learning based task scheduling in mobile blockchain for iot appli-

    cations,” in International Conference on Communications (ICC)

    pp, I. Ieee, Ed.

    1-7, June 2020, pp. 2020–2020.

    [84]

    Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When

    mobile blockchain meets edge computing,” IEEE Communications

    Magazine, vol. 56, no. 8, pp. 33–39, August 2018.

    [85]

    W. Sun, J. Liu, Y. Yue, and P. Wang, “Joint resource allocation and

    incentive design for blockchain-based mobile edge computing,”

    IEEE Transactions on Wireless Communications, vol. 19, no. 9,

    pp. 6050–6064, September 2020.

    [86]

    N. Waheed, X. He, M. Ikram, M. Usman, S. S. Hashmi, and

    M. Usman, “Security and privacy in iot using machine learning and

    blockchain: Threats and countermeasures,” ACM Comput. Surv.,

    vol. 53, no. 6, pp. 1–122, December 2020.

    [87]

    B. Podgorelec, M. Turkanovic, and S. Karakatic, “A machine

    learning-based method for automated blockchain transaction sign-

    ing including personalized anomaly detection,” Sensors, vol. 20,

    p. 1, January 2020.

    [88]

    T. Wang, “Trustable and automated machine learning running with

    blockchain and its applications,” vol. 10, 2019.

    [89]

    B. K. Mohanta, D. Jena, U. Satapathy, and S. Patnaik, “Survey on

    iot security: Challenges and solution using machine learning, arti-

    ficial intelligence and blockchain technology,” Internet of Things,

    vol. 11, September 2020.

    [90]

    C. Qiu, X. Wang, H. Yao, J. Du, F. R. Yu, and S. Guo, “Networking

    integrated cloud-edge-end in iot: A blockchain-assisted collective

    q-learning approach,” IEEE Internet of Things Journal, pp, pp. 1–1,

    2020.

    [91]

    S. Muralidharan and H. Ko, “An interplanetary file system (ipfs)

    based iot framework,” in 2019 IEEE International Conference on

    Consumer Electronics (ICCE, January 2019, pp. 1–2.

    [92]

    M. Steichen, B. Fiz, R. Norvill, W. Shbair, and R. State,

    “Blockchain-based, decentralized access control for ipfs,” in 2018

    IEEE International Conference on Internet of Things (iThings) and

    IEEE Green Computing and Communications (GreenCom) and

    IEEE Cyber.

    Physical and Social Computing (CPSCom) and

    IEEE Smart Data (SmartData, July 2018, pp. 1499–1506.

    [93]

    X. Zheng, J. Lu, S. Sun, and D. Kiritsis, “Decentralized industrial

    iot data management based on blockchain and ipfs,” in Advances

    in Production Management Systems, pp. 222–229, 2020.

    [94]

    M. S. Ali, K. Dolui, and F. Antonelli, “Iot data privacy via

    blockchains and ipfs,” in Proceedings of the Seventh International

    Conference on the Internet of Things.

    NY, USA: New York,

    October 2017, pp. 1–7.

    [95]

    A. Panarello, N. Tapas, G. Merlino, F. Longo, and A. Puliafito,

    “Blockchain and iot integration: A systematic survey,” Sensors,

    vol. 18, p. 8, August 2018.

    [96]

    Y.-J. Choi, H.-J. Kang, and I.-G. Lee, “Scalable and secure internet

    of things connectivity,” Electronics, vol. 8, no. 7, p. 752, 2019.

    [97]

    B. A. Tama, B. J. Kweka, Y. Park, and K.-H. Rhee, “A critical

    review of blockchain and its current applications,” in 2017 In-

    ternational Conference on Electrical Engineering and Computer

    Science (ICECOS).

    IEEE, 2017, pp. 109–113.

    [98]

    S. Seebacher and R. Sch¨uritz, “Blockchain technology as an

    enabler of service systems: A structured literature review,” in

    International conference on exploring services science.

    Springer,

    2017, pp. 12–23.

    [99]

    O. Ali, A. Jaradat, A. Kulakli, and A. Abuhalimeh, “A comparative

    study: Blockchain technology utilization benefits, challenges and

    functionalities,” IEEE Access, vol. 9, pp. 12 730–12 749, 2021.

    [100]

    D. Sivaganesan, “A data driven trust mechanism based on

    blockchain in iot sensor networks for detection and mitigation

    of attacks,” Journal of trends in Computer Science and Smart

    technology (TCSST), vol. 3, no. 01, pp. 59–69, 2021.

    [101]

    D. Wang, H. Wang, and Y. Fu, “Blockchain-based iot device iden-

    tification and management in 5g smart grid,” EURASIP Journal

    on Wireless Communications and Networking, vol. 2021, no. 1,

    pp. 1–19, 2021.

    [102]

    K. Abbas, L. A. Tawalbeh, A. Rafiq, A. Muthanna, I. A. Elgendy,

    A. El-Latif, and A. Ahmed, “Convergence of blockchain and iot

    for secure transportation systems in smart cities,” Security and

    Communication Networks, vol. 2021, 2021.

    [103]

    P. Sharma, N. R. Moparthi, S. Namasudra, V. Shanmuganathan,

    and C.-H. Hsu, “Blockchain-based iot architecture to secure health-

    care system using identity-based encryption,” Expert Systems, p.

    e12915, 2021.

    [104]

    M. A. Bouras, Q. Lu, S. Dhelim, and H. Ning, “A lightweight

    blockchain-based iot identity management approach,” Future In-

    ternet, vol. 13, no. 2, p. 24, 2021.

    [105]

    D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,

    “Secure computation offloading in blockchain based iot networks

    with deep reinforcement learning,” IEEE Transactions on Network

    Science and Engineering, vol. 8, no. 4, pp. 3192–3208, 2021.

    [106]

    T. H. Pranto, A. A. Noman, A. Mahmud, and A. B. Haque,

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    127

    “Blockchain and smart contract for iot enabled smart agriculture,”

    PeerJ Computer Science, vol. 7, p. e407, 2021.

    [107]

    S. A. Latif, F. B. X. Wen, C. Iwendi, F. W. Li-li, S. M. Mohsin,

    Z. Han, and S. S. Band, “Ai-empowered, blockchain and sdn

    integrated security architecture for iot network of cyber physical

    systems,” Computer Communications, vol. 181, pp. 274–283, 2022.

    [108]

    J. Wu, M. Dong, K. Ota, J. Li, and W. Yang, “Application-aware

    consensus management for software-defined intelligent blockchain

    in iot,” IEEE Network, vol. 34, no. 1, pp. 69–75, January 2020.

    [109]

    I. Makhdoom, M. Abolhasan, H. Abbas, and W. Ni, “Blockchain’s

    adoption in iot: The challenges, and a way forward,” Journal

    of Network and Computer Applications, vol. 125, pp. 251–279,

    January 2019.

    [110]

    S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”

    vol. 9.

    [111]

    S. King and S. Nadal, “Ppcoin: Peer-to-peer crypto-currency with

    proof-of-stake,” vol. 6.

    [112]

    O. Onireti, L. Zhang, and M. A. Imran, “On the viable area

    of wireless practical byzantine fault tolerance (pbft) blockchain

    networks,” in, vol. 2019, pp. 1–6, December 2019.

    [113]

    S. M. S. Saad and R. Z. R. M. Radzi, “Comparative review of the

    blockchain consensus algorithm between proof of stake (pos) and

    delegated proof of stake (dpos),” Int J Innov Comp, vol. 10, p. 2,

    November 2020.

    [114]

    G. Christofi, “Study of consensus protocols and improvement of

    the delegated byzantine fault tolerance (dbft) algorithm,” STUDY

    OF

    CONSENSUS

    PROTOCOLS

    AND

    IMPROVEMENT

    OF

    THE DELEGATED BYZANTINE FAULT TOLERANCE (DBFT)

    ALGORITHM, Oct, vol. 2019, Apr. 2021. [Online]. Available:

    https://upcommons.upc.edu/handle/2117/171243

    [115]

    “Burstflash, “burstcoin poc (proof of capacity) an ecofriendly

    consensus mechanism,” burstcoin.”

    [116]

    M. A. Kumar, V. Radhesyam, and B. SrinivasaRao, “Front-end iot

    application for the bitcoin based on proof of elapsed time (poet),”

    in 2019 Third International Conference on Inventive Systems and

    Control (ICISC, January 2019, pp. 646–649.

    [117]

    ““leased proof of stake — waves documentation.” [Online].

    Available: https://docs.waves.tech/en/blockchain/leasing

    [118]

    I. Bentov, C. Lee, A. Mizrahi, and M. Rosenfeld, “Proof of activity:

    Extending bitcoin’s proof of work via proof of stake [extended

    abstract]y,” SIGMETRICS Perform, vol. 42, no. 3, pp. 34–37,

    December 2014.

    [119]

    N. Bozic, G. Pujolle, and S. Secci, “A tutorial on blockchain and

    applications to secure network control-planes,” in, vol. 2016, no. 3,

    pp. 1–8, December 2016.

    [120]

    J.

    He,

    G.

    Wang,

    G.

    Zhang,

    and

    J.

    Zhang,

    “Consensus

    mechanism design based on structured directed acyclic graphs,”

    [cs, math], Jan, vol. 2019, Apr. 2021. [Online]. Available:

    http://arxiv.org/abs/1901.02755

    [121]

    V.

    Buterin

    and

    V.

    Griffith,

    “Casper

    the

    friendly

    finality

    gadget,” [cs], Jan, vol. 2019, Apr. 2021. [Online]. Available:

    http://arxiv.org/abs/1710.09437

    [122]

    D. Mazieres, “The stellar consensus protocol - a federated model

    for internet-level consensus,” vol. 97.

    [123]

    I. Amores-Sesar, C. Cachin, and J. Micic, “Security analysis of

    ripple consensus,” [cs], Nov, vol. 2020, Apr. 2021. [Online].

    Available: http://arxiv.org/abs/2011.14816

    [124]

    J. Kwon, “Tendermint: Consensus without mining,” vol. 11.

    [125]

    M. Zamani, M. Movahedi, and M. Raykova, “Rapidchain: Scaling

    blockchain via full sharding,” in Proceedings of the 2018 ACM

    SIGSAC Conference on Computer and Communications Security.

    NY, USA: New York, October 2018, pp. 931–948.

    [126]

    E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, E. Syta, and

    B. Ford, “Omniledger: A secure, scale-out, decentralized ledger via

    sharding,” in 2018 IEEE Symposium on Security and Privacy (SP,

    May 2018, pp. 583–598.

    [127]

    L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and

    P. Saxena, “A secure sharding protocol for open blockchains,” in

    Proceedings of the 2016 ACM SIGSAC Conference on Computer

    and Communications Security.

    NY, USA: New York, October

    2016, pp. 17–30.

    [128]

    G.

    Danezis

    and

    S.

    Meiklejohn,

    “Centrally

    banked

    cryptocurrencies,” [cs], Dec, vol. 2015, Apr. 2021. [Online].

    Available: http://arxiv.org/abs/1505.06895

    [129]

    Y. Gilad, R. Hemo, S. Micali, G. Vlachos, and N. Zeldovich,

    “Algorand: Scaling byzantine agreements for cryptocurrencies,”

    in Proceedings of the 26th Symposium on Operating Systems

    Principles.

    NY, USA: New York, October 2017, pp. 51–68.

    [130]

    E. K. Kogias, P. Jovanovic, N. Gailly, I. Khoffi, L. Gasser,

    and B. Ford, “Enhancing bitcoin security and performance with

    strong consistency via collective signing,” vol. 2016, pp. 279–296,

    Apr. 2021. [Online]. Available: https://www.usenix.org/conference/

    usenixsecurity16/technical-sessions/presentation/kogias&

    [131]

    A. Charapko, A. Ailijiang, and M. Demirbas, “Bridging paxos

    and blockchain consensus,” in 2018 IEEE International Conference

    on Internet of Things (iThings) and IEEE Green Computing and

    Communications (GreenCom) and IEEE Cyber.

    Physical and

    Social Computing (CPSCom) and IEEE Smart Data (SmartData,

    July 2018, pp. 1545–1552.

    [132]

    W. F. Silvano and R. Marcelino, “Iota tangle: A cryptocurrency

    to communicate internet-of-things data,” Future Generation Com-

    puter Systems, vol. 112, pp. 307–319, November 2020.

    [133]

    D. Huang, X. Ma, and S. Zhang, “Performance analysis of the raft

    consensus algorithm for private blockchains,” IEEE Transactions

    on Systems, Man, and Cybernetics: Systems, vol. 50, no. 1, pp.

    172–181, January 2020.

    [134]

    A. Dorri and R. Jurdak, “Tree-chain: A fast lightweight consensus

    algorithm for iot applications,” [cs], May, vol. 2020, Apr. 2021.

    [Online]. Available: http://arxiv.org/abs/2005.09443

    [135]

    B. Farahani, F. Firouzi, and M. Luecking, “The convergence of iot

    and distributed ledger technologies (dlt): Opportunities, challenges,

    and solutions,” Journal of Network and Computer Applications,

    vol. 177, March 2021.

    [136]

    C. Saraf and S. Sabadra, “Blockchain platforms: A compendium,”

    128

    Sadia Showkat, et al.:Securing the Internet of things through Blockchain approach.

    in 2018 IEEE International Conference on Innovative Research

    and Development (ICIRD, May 2018, pp. 1–6.

    [137]

    H. Tian, X. Ge, J. Wang, C. Li, and H. Pan, “Research on

    distributed blockchain-based privacy-preserving and data security

    framework in iot,” IET Communications, vol. 14, no. 13, pp. 2038–

    2047, April 2020.

    [138]

    M. Ma, G. Shi, and F. Li, “Privacy-oriented blockchain-based

    distributed key management architecture for hierarchical access

    control in the iot scenario,” IEEE Access, vol. 7, pp. 34 045–34 059,

    2019.

    [139]

    Y. Ding and H. Sato, “Bloccess: Towards fine-grained access con-

    trol using blockchain in a distributed untrustworthy environment,”

    in 2020 8th IEEE International Conference on Mobile Cloud

    Computing.

    and Engineering (MobileCloud: Services, August

    2020, pp. 17–22.

    [140]

    Y. E. Oktian and S.-G. Lee, “Borderchain: Blockchain-based access

    control framework for the internet of things endpoint,” IEEE

    Access, vol. 9, pp. 3592–3615, 2021.

    [141]

    T. Sultana, A. Almogren, M. Akbar, M. Zuair, I. Ullah, and

    N. Javaid, “Data sharing system integrating access control mecha-

    nism using blockchain-based smart contracts for iot devices,” Appl.

    Sci, vol. 10, p. 2, January 2020.

    [142]

    G. Ali, N. Ahmad, Y. Cao, M. Asif, H. Cruickshank, and Q. E.

    Ali, “Blockchain based permission delegation and access control

    in internet of things (baci),” Comput. Secur., vol. 86, pp. 318–334,

    September 2019.

    [143]

    T. Li, H. Wang, D. He, and J. Yu, “Blockchain-based privacy-

    preserving and rewarding private data sharing for iot,” IEEE

    Internet of Things Journal, 2022.

    [144]

    M. S. al., “Blockchain-assisted secure device authentication for

    cross-domain industrial iot,” IEEE Journal on Selected Areas in

    Communications, vol. 38, no. 5, pp. 942–954, May 2020.

    [145]

    L. Wu, X. Du, W. Wang, and B. Lin, “An out-of-band authentica-

    tion scheme for internet of things using blockchain technology,” in

    2018 International Conference on Computing.

    Networking and

    Communications (ICNC, March 2018, pp. 769–773.

    [146]

    S. Hong, “P2p networking based internet of things (iot) sensor node

    authentication by blockchain,” Peer-to-Peer Netw. Appl., vol. 13,

    no. 2, pp. 579–589, March 2020.

    [147]

    U. Khalid, M. Asim, T. Baker, P. C. K. Hung, M. A. Tariq, and

    L. Rafferty, “A decentralized lightweight blockchain-based authen-

    tication mechanism for iot systems,” Cluster Comput, vol. 23, no. 3,

    pp. 2067–2087, September 2020.

    [148]

    S. Amjad, S. Abbas, Z. Abubaker, M. H. Alsharif, A. Jahid,

    and N. Javaid, “Blockchain based authentication and cluster head

    selection using ddr-leach in internet of sensor things,” Sensors,

    vol. 22, no. 5, p. 1972, 2022.

    [149]

    R. Almadhoun, M. Kadadha, M. Alhemeiri, M. Alshehhi, and

    K. Salah, “A user authentication scheme of iot devices using

    blockchain-enabled fog nodes,” in 2018 IEEE/ACS 15th interna-

    tional conference on computer systems and applications (AICCSA).

    IEEE, 2018, pp. 1–8.

    [150]

    J. Zheng, X. Dong, T. Zhang, J. Chen, W. Tong, and X. Yang,

    “Microthingschain: Edge computing and decentralized iot architec-

    ture based on blockchain for cross-domain data shareing,” in 2018

    International Conference on Networking and Network Applications

    (NaNA).

    IEEE, 2018, pp. 350–355.

    [151]

    J. Cao, X. Wang, M. Huang, B. Yi, and Q. He, “A security-driven

    network architecture for routing in industrial internet of things,”

    Trans. Emerg. Telecommun. Technol., p. e, vol. 4216.

    [152]

    H. Lazrag, A. Chehri, R. Saadane, and M. D. Rahmani, “Efficient

    and secure routing protocol based on blockchain approach for

    wireless sensor networks,” Concurr. Comput.-Pract. Exp, vol.

    6144.

    [153]

    J. Wang, Y. Liu, S. Niu, and H. Song, “Lightweight blockchain

    assisted secure routing of swarm uas networking,” Comput. Com-

    mun., vol. 165, pp. 131–140, January 2021.

    [154]

    R. K. al., “Iotmalware: Android iot malware detection based on

    deep neural network and blockchain technology,” [cs], Feb, vol.

    2021, Mar. 2021. [Online]. Available: http://arxiv.org/abs/2102.

    13376

    [155]

    S. Homayoun, A. Dehghantanha, R. M. Parizi, and K.-K. R. Choo,

    “A blockchain-based framework for detecting malicious mobile

    applications in app stores,” in, vol. 2019, pp. 1–4, May 2019.

    [156]

    S. Talukder, S. Roy, and T. A. Mahmud, “An approach for an

    distributed anti-malware system based on blockchain technology,”

    in 2019 11th International Conference on Communication Systems

    Networks (COMSNETS, January 2019, pp. 1–6.

    [157]

    S. Liu, J. Wu, and C. Long, “Iot meets blockchain: parallel

    distributed architecture for data storage and sharing,” in 2018 IEEE

    International Conference on Internet of Things (iThings) and IEEE

    Green Computing and Communications (GreenCom) and IEEE

    Cyber, Physical and Social Computing (CPSCom) and IEEE Smart

    Data (SmartData).

    IEEE, 2018, pp. 1355–1360.

    [158]

    Y. Li, Y. Tu, J. Lu, and Y. Wang, “A security transmission and

    storage solution about sensing image for blockchain in the internet

    of things,” Sensors, vol. 20, p. 3, January 2020.

    [159]

    J. Lockl, V. Schlatt, A. Schweizer, N. Urbach, and N. Harth,

    “Toward trust in internet of things ecosystems: Design principles

    for blockchain-based iot applications,” IEEE Transactions on En-

    gineering Management, vol. 67, no. 4, pp. 1256–1270, November

    2020.

    [160]

    M. Zhaofeng, W. Xiaochang, D. Jain, H. Khan, G. Hongmin, and

    W. Zhen, “A blockchain-based trusted data management scheme

    in edge computing,” IEEE Transactions on Industrial Informatics,

    pp. 1–1, August 2019.

    [161]

    C. H. Liu, Q. Lin, and S. Wen, “Blockchain-enabled data collection

    and sharing for industrial iot with deep reinforcement learning,”

    IEEE Transactions on Industrial Informatics, vol. 15, no. 6, pp.

    3516–3526, June 2019.

    [162]

    “Ethereum price history 2015-2021, statista.” [Online]. Available:

    https://www.statista.com/statistics/806453/price-of-ethereum/

    [163]

    Y. K. Peker, X. Rodriguez, J. Ericsson, S. J. Lee, and A. J.

    Perez, “A cost analysis of internet of things sensor data storage on

    blockchain via smart contracts,” Electronics, vol. 9, p. 2, February

    2020.

    Int. J. Com. Dig. Sys. 13, No.1, 97-129 (Jan-2023)

    129

    [164]

    U. Gallersdorfer, L. KlaaBen, and C. Stoll, “Energy consumption

    of cryptocurrencies beyond bitcoin,” Joule, vol. 4, no. 9, pp. 1843–

    1846, September 2020.

    [165]

    B. W. Nyamtiga, J. C. S. Sicato, S. Rathore, Y. Sung, and J. H.

    Park, “Blockchain-based secure storage management with edge

    computing for iot,” Electronics, vol. 8, p. 8, August 2019.

    [166]

    R. van Renesse, “A blockchain based on gossip? - a position paper,”

    vol. 4.

    [167]

    “Automatic discovery mechanism of blockchain nodes based on

    the kademlia algorithm — springerlink.” [Online]. Available:

    https://link.springer.com/chapter/10.1007/978-3-030-24274-9 55

    [168]

    L. Kiffer, A. Salman, D. Levin, A. Mislove, and C. Nita-Rotaru,

    “Under the hood of the ethereum gossip protocol,” vol. 26.

    [169]

    S. Sun, R. Du, S. Chen, and W. Li, “Blockchain-based iot access

    control system: Towards security, lightweight, and cross-domain,”

    IEEE Access, vol. 9, pp. 36 868–36 878, 2021.

    [170]

    J. Moubarak, E. Filiol, and M. Chamoun, “On blockchain security

    and relevant attacks,” in, vol. 2018, pp. 1–6, April 2018.

    [171]

    D. Gabay, K. Akkaya, and M. Cebe, “Privacy-preserving authen-

    tication scheme for connected electric vehicles using blockchain

    and zero knowledge proofs,” IEEE Transactions on Vehicular

    Technology, vol. 69, no. 6, pp. 5760–5772, June 2020.

    Sadia Showkat

    Sadia Showkat is affil-

    iated to Computer Science and Engineer-

    ing, National Institute of Technology. Sa-

    dia Showkat is currently enrolled as a PhD

    scholar under the supervision of Dr. Shaima

    Qureshi, and has published her work in in-

    ternational peer-reviewed journals and con-

    ferences. Sadia Showkat has completed her

    B.Tech through University of Kashmir in

    Computer Science and Engineering and her

    M.Tech through National Institute of Technology in Communica-

    tion and Information Technology. Sadia Showkat has qualified the

    GATE exam three times and as well as cleared the UGC-NET in

    Computer science. Sadia Showkat’s clinical and scientific research

    interests include Machine Learning, Deep Learning, Federated

    Learning, Blockchain and Internet of Things.

    Shaima Qureshi Dr. Shaima Qureshi is

    affiliated to Computer Science and Engi-

    neering, National Institute of Technology.

    Dr. Shaima Qureshi is currently providing

    services as Associate Professor. Dr. Shaima

    Qureshi has published numerous publica-

    tions in various national and international

    peer-reviewed journals and presented scien-

    tific papers across the world. Because of

    her active association with different societies

    and academies as well as the contributions, Dr. Shaima Qureshi has

    been recognized by subject experts around the world. Dr. Shaima

    Qureshi contributions are appreciated by various reputed awards.

    Dr. Shaima Qureshi’s clinical and scientific research interests

    include Computer Networks, Mobile Communication, Algorithms.

    '
  inline_citation: '>'
  journal: International Journal of Computing and Digital Systems
  limitations: '>'
  pdf_link: https://journal.uob.edu.bh:443/bitstream/123456789/4728/1/IJCDS_130109_1570772664.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Securing the Internet of Things Through Blockchain Approach:Security Architectures,
    Consensus Algorithms, Enabling Technologies, Open Issues, and Research Directions
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icoei53556.2022.9776703
  analysis: '>'
  authors: []
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Browse My Settings
    Help Institutional Sign In All Books Conferences Courses Journals & Magazines
    Standards Authors Citations ADVANCED SEARCH Conferences >2022 6th International
    Confer... Table of Contents Publisher: IEEE Cite This PDF 158 Full Text Views
    Abstract Metrics Abstract: Presents the table of contents/splash page of the proceedings
    record. Published in: 2022 6th International Conference on Trends in Electronics
    and Informatics (ICOEI) Date of Conference: 28-30 April 2022 Date Added to IEEE
    Xplore: 24 May 2022 ISBN Information: DOI: 10.1109/ICOEI53556.2022.9776703 Publisher:
    IEEE Conference Location: Tirunelveli, India Metrics More Like This Inversion
    of a Radiative Transfer Model for Estimation of Rice Canopy Chlorophyll Content
    Using a Lookup-Table Approach IEEE Journal of Selected Topics in Applied Earth
    Observations and Remote Sensing Published: 2012 Advanced Screen Content Coding
    Using Color Table and Index Map IEEE Transactions on Image Processing Published:
    2014 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: 2022 6th International Conference on Trends in Electronics and Informatics
    (ICOEI)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/9776594/9776641/09776703.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Table of Contents
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/miot.2022.9945836
  analysis: '>'
  authors:
  - Dave Cavalcanti
  - Carlos Kamienski
  - Kaushik R. Chowdhury
  - V. Jain
  - Stefano Vitturi
  - Malcolm A. Smith
  - Andreas Willig
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access
    provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses
    Journals & Magazines Standards Authors Citations ADVANCED SEARCH Journals & Magazines
    >IEEE Internet of Things Magaz... >Volume: 5 Issue: 3 Guest Editorial: The Internet
    of Time-Critical Things: Advances and Challenges in Computing and Communications
    Publisher: IEEE Cite This PDF Dave Cavalcanti; Carlos Kamienski; Kaushik Chowdhury;
    Vivek Jain; Stefano Vitturi; Malcolm Smith; Andreas Willig All Authors 1 Cites
    in Paper 375 Full Text Views Abstract Authors Citations Keywords Metrics Abstract:
    Time is a precious and critical resource to computers, sensors, actuators, and
    most Internet of Things (IoT) systems and applications. Precise time and timeliness
    in task execution and data communication are fundamental requirements for emerging
    IoT applications and new experiences enabled by advances in distributed computing,
    from cloud to edge. Industry 4.0, mobile and collaborative robots, autonomous
    systems, immersive and interactive human-cyber experiences are only a few examples
    of the Internet of Time-Critical Things where precise time, computing, and communication
    with bounded latencies and high reliability are strictly required. Furthermore,
    these applications might not only be time-critical but also safety-critical as
    they often involve interactions between humans and machines. Such stringent time
    and safety requirements bring new practical challenges, as well as new opportunities
    to revolutionize the traditional design, deployment and management of computing
    and communication infrastructures. New concepts in software-defined systems and
    networks, cloud/edge computing, AI-driven resource orchestration, Time-Sensitive
    Networking (TSN) and advances in wireless communications (Wi-Fi 6/7, 5G and beyond)
    are emerging as potential building blocks to enable the transformation of computing
    and communications infrastructure to enable time-critical applications. Published
    in: IEEE Internet of Things Magazine ( Volume: 5, Issue: 3, September 2022) Page(s):
    10 - 11 Date of Publication: September 2022 ISSN Information: DOI: 10.1109/MIOT.2022.9945836
    Publisher: IEEE Time is a precious and critical resource to computers, sensors,
    actuators, and most Internet of Things (IoT) systems and applications. Precise
    time and timeliness in task execution and data communication are fundamental requirements
    for emerging IoT applications and new experiences enabled by advances in distributed
    computing, from cloud to edge. Industry 4.0, mobile and collaborative robots,
    autonomous systems, immersive and interactive human-cyber experiences are only
    a few examples of the Internet of Time-Critical Things where precise time, computing,
    and communication with bounded latencies and high reliability are strictly required.
    Furthermore, these applications might not only be time-critical but also safety-critical
    as they often involve interactions between humans and machines. Such stringent
    time and safety requirements bring new practical challenges, as well as new opportunities
    to revolutionize the traditional design, deployment and management of computing
    and communication infrastructures. New concepts in software-defined systems and
    networks, cloud/edge computing, AI-driven resource orchestration, Time-Sensitive
    Networking (TSN) and advances in wireless communications (Wi-Fi 6/7, 5G and beyond)
    are emerging as potential building blocks to enable the transformation of computing
    and communications infrastructure to enable time-critical applications. This Special
    Issue (SI) brings a comprehensive view of the time-critical lOT applications,
    their requirements and challenges in designing, deploying, and measuring performance
    of computing and communication infrastructures. The articles cover practical challenges
    in cloud and edge computing and connectivity for realistic applications, especially
    related to meeting strict performance targets in computing and wireless systems.
    The SI also covers measurement methodologies and case studies evaluating the performance
    of real lOT systems. In “IoT Edge Caching: Taxonomy, Use Cases and Perspectives,”
    edge computing and caching concepts are explored jointly to reduce latency and
    increase efficiency. An extensive review of the state-of-the-art in Edge Caching
    approaches is provided along with use cases in various domains, from Industry
    4.0 to smart grids, agriculture, and vehicular applications. An evaluation of
    a real Structural Health Monitoring system provides insights into the benefits
    of edge caching and associated tradeoffs. In “Joint Scheduling and Coding for
    Reliable, Latency-Bounded Transmission over Parallel Wireless Links,” the authors
    dive into the wireless communication challenges for enabling immersive experiences,
    such as remote robot control, using Virtual Reality (VR). The article advocates
    for a joint design of packet-level coding and resource scheduling leveraging parallel
    wireless links and evaluates the concept considering a combination of sub-6GHz
    and mmWave links. “Towards Factory-Scale Edge Robotic Systems: Challenges and
    Research Directions” presents a system level vision of a robotic system where
    computing is offloaded to the edge enabled by high performance wireless communication
    systems. The article also proposes a new approach to co-design computing, communications,
    and control components in the system to meet time-sensitive robotic task requirements
    with higher efficiency and lower power consumption. In “Low-Latency Anomaly Detection
    on the Edge-Cloud Continuum for Industry 4.0 Applications: the SEAWALL Case Study,”
    the authors describe the design, implementation, and evaluation of an edge-cloud
    computing platform for lOT system monitoring and fault detection algorithms. The
    article evaluates the latency tradeoffs of cloud vs edge computing in a real test-bed
    considering various workload orchestration policies. “Unobtrusive, Accurate, and
    Live Measurements of Network Latency and Reliability for Time-Critical Internet
    of Things” addresses the challenges related to measuring stringent communication
    performance with high accuracy, which is critical for many lOT systems. The article
    proposes a new methodology to measure latency and reliability in wireless networks
    and evaluates the approach in a testbed with Wi-Fi 6 and 5G devices. Last, but
    not least, “Time-Critical IoT Applications Enabled by Wi-Fi 6 and Beyond” covers
    the emerging time-critical use cases and their requirements and discusses the
    latest Wi-Fi 6 and TSN capabilities. The article provides a practical perspective
    on how Wi-Fi capabilities can be leveraged to enable industrial control, remote
    rendering for extended reality and cooperative simultaneous localization and mapping
    for mobile robots. The article also discusses next generation Wi-Fi enhancements,
    such as Multi-Link Operation in Wi-Fi 7 and how they contribute to achieve low
    latency and high reliability. Although time-critical performance has long been
    a focus within the industrial control and automation space, more and more applications,
    across different markets, will depend on computing and communication with strict
    performance guarantees. This SI not only provides a broad coverage of the current
    state of the art, but also addresses open research challenges from different perspectives
    across industry and academia. The six articles have been selected through a thorough
    peer-review process and we would like to thank the authors, reviewers, and editorial
    team for their contribution to make this special issue possible. Authors Citations
    Keywords Metrics More Like This A Model of Computing and Communication for Public
    Safety Integrating FirstNet, Edge Computing, and Internet of Things 2019 IEEE
    10th Annual Information Technology, Electronics and Mobile Communication Conference
    (IEMCON) Published: 2019 Internet of Things (IoT) in 5G Wireless Communications
    IEEE Access Published: 2016 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE internet of things magazine (Print)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/8548628/9945624/09945836.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Guest Editorial: The Internet of Time-Critical Things: Advances and Challenges
    in Computing and Communications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/jiot.2019.2894196
  analysis: '>'
  authors: []
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences Loading
    [MathJax]/extensions/MathMenu.js IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More
    Sites Subscribe Donate Cart Create Account Personal Sign In Personal Sign In *
    Required *Email Address *Password Forgot Password? Sign In Don''t have a Personal
    Account? Create an IEEE Account now. Create Account Learn more about personalization
    features. IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE internet of things journal (Online)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6488907/8614370/08620612.pdf
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 2018 IndexIEEE Internet of Things JournalVol. 5
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.20944/preprints202306.1467.v1
  analysis: '>'
  authors:
  - Emmanuel Effah
  - Ousmane Thiaré
  - Alexander M. Wyglinski
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details             Deny Allow selection
    Allow all Instructions for Authors Awards About FAQ Submit Log in/Register preprints.org
    > computer science and mathematics > other > doi: 10.20944/preprints202306.1467.v1
    Preprint Review Version 1 Preserved in Portico This version is not peer-reviewed
    A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing,
    and Optimization Emmanuel Effah *,‡ , Ousmane Thiare ‡ , Alexander M. Wyglinski
    ‡ These authors contributed equally to the work. Version 1 : Received: 20 June
    2023 / Approved: 21 June 2023 / Online: 21 June 2023 (03:23:58 CEST) A peer-reviewed
    article of this Preprint also exists. Effah, E.; Thiare, O.; Wyglinski, A.M. A
    Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing, and
    Optimization. IoT 2023, 4, 265-318. Copy Abstract This paper presents an in-depth
    contextualized tutorial on Agricultural IoT (Agri-IoT), covering the fundamental
    concepts, assessment of routing architectures and protocols, and performance optimization
    techniques via systematic survey and synthesis of related literature. The negative
    impacts of climate change and the increasing global population on food security
    and unemployment threats have motivated the adoption of the wireless sensor network
    (WSN)-based Agri-IoT as an indispensable underlying technology in precision agriculture
    and greenhouses to improve food production capacities and quality. However, most
    related Agri-IoT testbed solutions have failed to achieve their performance expectations
    due to the lack of an in-depth and contextualized reference tutorial that provides
    a holistic overview of communication technologies, routing architectures, and
    performance optimization modalities based on users’ expectations. Thus, although
    IoT applications are founded on a common idea, each use case (e.g., Agri-IoT)
    varies based on specific performance and users expectations as well as its technological,
    architectural, and deployment requirements. Likewise, the agricultural setting
    is a unique and hostile area where conventional IoT technologies do not apply,
    hence the need for this tutorial. Consequently, this tutorial addresses these
    via the following contributions: (1) a systematic overview of the fundamental
    concepts, technologies, and architectural standards of WSN-based Agri-IoT, (2)
    an evaluation of the technical design requirements of a robust, location-independent,
    and affordable Agri-IoT, (3) a comprehensive survey of the benchmarking fault
    tolerance techniques, communication standards, routing and medium access control
    (MAC) protocols, and WSN-based Agri-IoT testbed solutions, and (4) an in-depth
    case study on how to design a self-healing, energy-efficient, affordable, adaptive,
    stable, autonomous, and cluster-based WSN-specific Agri-IoT from a proposed taxonomy
    of multi-objective optimization (MOO) metrics that can guarantee an optimized
    network performance. Furthermore, this tutorial established new taxonomies of
    faults, architectural layers, and MOO metrics for cluster-based Agri-IoT (CA-IoT)
    networks and a 3-tier objective framework with remedial measures for designing
    an efficient associated supervisory protocol for cluster-based Agri-IoT networks.
    Keywords Bluetooth Low Energy (BLE); Cluster-based Agricultural IoT (CA-IoT);
    Fault Management (FM); Multi-Objective Optimization (MOO); Wireless Sensor Network-based
    Agricultural IoT (WSN-based Agri-IoT) Subject Computer Science and Mathematics,
    Other Copyright: This is an open access article distributed under the Creative
    Commons Attribution License which permits unrestricted use, distribution, and
    reproduction in any medium, provided the original work is properly cited. Download
    PDF Comments (0) We encourage comments and feedback from a broad range of readers.
    See criteria for comments and our Diversity statement. Leave a public comment
    Send a private comment to the author(s) * All users must log in before leaving
    a comment Views 82 Downloads 176 Comments 0 Get PDF Cite Share 0 Bookmark BibSonomy
    Mendeley Reddit Delicious Alerts Notify me about updates to this article or when
    a peer-reviewed version is published. Preprints.org is a free preprint server
    subsidized by MDPI in Basel, Switzerland. Contact us RSS MDPI Initiatives SciProfiles
    Sciforum Encyclopedia MDPI Books Scilit Proceedings JAMS Important links How it
    Works Advisory Board FAQ Friendly Journals Instructions for Authors About Statistics
    Subscribe Choose the area that interest you and we will send you notifications
    of new preprints at your preferred frequency. Subscribe © 2024 MDPI (Basel, Switzerland)
    unless otherwise stated Disclaimer Privacy Policy Terms of Use  Feedback'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing,
    and Optimization'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/iot4030014
  analysis: '>'
  authors:
  - Emmanuel Effah
  - Ousmane Thiaré
  - Alexander M. Wyglinski
  citation_count: 0
  full_citation: '>'
  full_text: ">\nCitation: Effah, E.; Thiare, O.;\nWyglinski, A.M. A Tutorial on\n\
    Agricultural IoT: Fundamental\nConcepts, Architectures, Routing,\nand Optimization.\
    \ IoT 2023, 4,\n265–318. https://doi.org/10.3390/\niot4030014\nAcademic Editors:\
    \ Antonio\nCano-Ortega and Francisco\nSánchez-Sutil\nReceived: 15 June 2023\n\
    Revised: 12 July 2023\nAccepted: 17 July 2023\nPublished: 27 July 2023\nCopyright:\n\
    © 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an\
    \ open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the\
    \ Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nIoT\nReview\nA Tutorial on Agricultural IoT: Fundamental Concepts,\nArchitectures,\
    \ Routing, and Optimization\nEmmanuel Effah 1,*,†\n, Ousmane Thiare 2,†\nand Alexander\
    \ M. Wyglinski 3,†\n1\nComputer Science and Engineering Department, University\
    \ of Mines and Technology,\nTarkwa P.O. Box 237, Ghana\n2\nDepartment of Informatics,\
    \ Gaston Berger University, Saint-Louis PB 234, Senegal;\nousmane.thiare@ugb.edu.sn\n\
    3\nRobotics Engineering Department, Worcester Polytechnic Institute, Worcester,\
    \ MA 01609, USA;\nalexw@wpi.edu\n*\nCorrespondence: eeffah@umat.edu.gh\n†\nThese\
    \ authors contributed equally to this work.\nAbstract: This paper presents an\
    \ in-depth contextualized tutorial on Agricultural IoT (Agri-IoT), cov-\nering\
    \ the fundamental concepts, assessment of routing architectures and protocols,\
    \ and performance\noptimization techniques via a systematic survey and synthesis\
    \ of the related literature. The negative\nimpacts of climate change and the increasing\
    \ global population on food security and unemployment\nthreats have motivated\
    \ the adoption of the wireless sensor network (WSN)-based Agri-IoT as an\nindispensable\
    \ underlying technology in precision agriculture and greenhouses to improve food\n\
    production capacities and quality. However, most related Agri-IoT testbed solutions\
    \ have failed to\nachieve their performance expectations due to the lack of an\
    \ in-depth and contextualized reference\ntutorial that provides a holistic overview\
    \ of communication technologies, routing architectures, and\nperformance optimization\
    \ modalities based on users’ expectations. Thus, although IoT applications\nare\
    \ founded on a common idea, each use case (e.g., Agri-IoT) varies based on the\
    \ speciﬁc performance\nand user expectations as well as technological, architectural,\
    \ and deployment requirements. Likewise,\nthe agricultural setting is a unique\
    \ and hostile area where conventional IoT technologies do not\napply, hence the\
    \ need for this tutorial. Consequently, this tutorial addresses these via the\
    \ following\ncontributions: (1) a systematic overview of the fundamental concepts,\
    \ technologies, and architectural\nstandards of WSN-based Agri-IoT, (2) an evaluation\
    \ of the technical design requirements of a robust,\nlocation-independent, and\
    \ affordable Agri-IoT, (3) a comprehensive survey of the benchmarking\nfault-tolerance\
    \ techniques, communication standards, routing and medium access control (MAC)\n\
    protocols, and WSN-based Agri-IoT testbed solutions, and (4) an in-depth case\
    \ study on how to\ndesign a self-healing, energy-efﬁcient, affordable, adaptive,\
    \ stable, autonomous, and cluster-based\nWSN-speciﬁc Agri-IoT from a proposed\
    \ taxonomy of multi-objective optimization (MOO) metrics\nthat can guarantee an\
    \ optimized network performance. Furthermore, this tutorial established new\n\
    taxonomies of faults, architectural layers, and MOO metrics for cluster-based\
    \ Agri-IoT (CA-IoT)\nnetworks and a three-tier objective framework with remedial\
    \ measures for designing an efﬁcient\nassociated supervisory protocol for cluster-based\
    \ Agri-IoT networks.\nKeywords: Bluetooth Low-Energy (BLE); cluster-based Agricultural\
    \ IoT (CA-IoT); fault management\n(FM); multi-objective optimization (MOO); wireless\
    \ sensor network-based Agricultural IoT (WSN-\nbased Agri-IoT)\n1. Introduction\
    \ and Tutorial Contributions\nCurrently, agriculture is the world’s largest business,\
    \ employing over one-third of the\neconomically active global population and over\
    \ 70% of the economically active population\nin Africa [1,2]. The impacts of high\
    \ population growth rates and climate change-induced\ndrought (according to Figure\
    \ 1) on food security, unemployment threats and reduced crop\nIoT 2023, 4, 265–318.\
    \ https://doi.org/10.3390/iot4030014\nhttps://www.mdpi.com/journal/iot\nIoT 2023,\
    \ 4\n266\nquantity/quality make smart Agricultural Internet-of-Things technology\
    \ (Agri-IoT) via\nprecision farming and greenhouses the most promising remedy.\
    \ However, the existing\nbenchmarking Agri-IoT solutions can only be acquired,\
    \ deployed, and managed by farmers\nwith sufﬁcient ﬁnancial resources, an electricity\
    \ grid, Wi-Fi/cellular coverage, and technical\nexpertise in IoT, which is generally\
    \ not the case in Ghana and Sub-Saharan Africa. These\ncall for a paradigm shift\
    \ in farming techniques, and the most promising game-changers are\nprecision farming\
    \ and greenhouses whose underlying technology is a robust, affordable,\nautonomous,\
    \ and optimized, innovative WSN-based Agri-IoT [3] that satisﬁes the critical\n\
    design expectations presented in Figure 2.\nFigure 1. Seasonal failure probability-2014\
    \ [4] depicting the extent of climate change impact on\nAfrica’s farmlands.\n\
    1/19/22, 2:05 PM\n7g.svg\nGeneralized Design  \nExpectations of  \nWSN-based Agri-IoT\
    \  \nTechnology\nSNs Deployment Density\nSNs Deployment Uniformity\nRouting Architectural\
    \ Quality\nSelf-healing Capacity\nSelf-adaptability to dynamic conditions\nPower\
    \ Optimization\nEvent Monitoring Accuracy\nAffordability\nSimple to Deploy and\
    \ Operate\nLocation-unrestricted\nInfrastructure-less\nBased on Freely Available\
    \ Technologies\nUsers' (Farmers)  \nExpectations\nNB: All red-colored expectations\
    \ are moderated by the associated Routing Protocol (RP)\nPerformance-based \n\
    Expectations\nUse Case-Specific \nExpectations\nFigure 2. Generalized design expectations\
    \ of WSN-based Agri-IoT technology.\nIoT 2023, 4\n267\nAlthough few surveys and\
    \ tutorials have been authored on this subject, they present\nmere classifications\
    \ of communications trends on classical IoT [2,5–8] without any context-\nspecific\
    \ technical considerations of the critical design expectations in Figure 2. For\
    \ instance,\nthe authors in [2,6,7] examined IoT’s communication infrastructure,\
    \ platforms, standards,\ndevelopment trends, and possible network solutions in\
    \ agriculture. Similarly, the roles of\nindustrial IoT (thus, identification-based\
    \ IoT (example, RFID [6], WSN [9], QR codes [5],\nbarcodes) and communication-based\
    \ IoT (example, ZigBee [5], Z-wave [6], MQTT [5,6],\nLoRa [10], SigFox [11], BLE\
    \ [12], Li-Fi [5], Wi-Fi [13], Near-Field Communication (NFC) [5],\nand power\
    \ line area network) were reviewed in terms of current research trends, applications,\n\
    and main challenges in [5]. Although RFID tags and WSNs have similar data acquisition\n\
    capacities, the authors concluded that WSN technology is more energy-efficient\
    \ and suitable\nfor Agri-IoT than the costly RFID technologies [5]. Overall, Agri-IoT\
    \ technology has not\nyielded its intended paradigm transformation in the agricultural\
    \ sector due to several technical\nchallenges that have not received adequate\
    \ contextual research considerations [14]:\n1.\nThe agricultural setting is a\
    \ unique area where conventional IoT technologies do\nnot apply. Existing Agri-IoT\
    \ solutions are location-restricted because they are mostly\nbased on Wi-Fi or\
    \ cellular communication technologies and electricity grids with\nconstrained\
    \ coverages in Africa. A typical African agricultural setting lacks access\nto\
    \ reliable electricity and the Internet for cellular/Wi-Fi-based technologies,\
    \ and the\nintended users (farmers) of Agri-IoT technology are low-income earners\
    \ with limited\ntechnological expertise. Common Agri-IoT applications mainly utilize\
    \ architecture-\nrestricted, high-resource-demanding routing techniques (e.g.,\
    \ routing over low-power\nand lossy networks protocol (RPL)) and communication\
    \ standards (e.g., 4G, 5G, Zig-\nBee, LoRa, Wi-FI, and long-term evolution (LTE))\
    \ [15], which are difﬁcult to access\nin typical African farms. Consequently,\
    \ Agri-IoT users in Africa expect a context-\nrelevant solution that is affordable,\
    \ simple to deploy and operate by non-experts,\nlocation-unrestricted, supportive\
    \ of large-scale farm management, and based on freely\navailable technologies\
    \ that do not require licensing. Thus, they are unlike popular IoT\nuse cases\
    \ such as medical, vehicular, and industrial IoT, whose designs are mainly\naffected\
    \ by critical factors including security, stable connectivity, and interference,\n\
    respectively, Agri-IoT is compelled to drive on affordable battery-powered SNs,\
    \ which\nmake architecture, low-power communication technology, power optimization,\
    \ cost,\nfault tolerance, multihop routing, scalability, and environmental impact\
    \ critical design\nfactors in order to address its resource or deployment-induced\
    \ challenges [12,16,17].\n2.\nHigh susceptibility to faults and failures: Agri-IoT\
    \ networks are vulnerable to faults\nand failures since the resource-constrained\
    \ SNs are densely deployed in hostile envi-\nronments to autonomously operate\
    \ via a network supervisory protocol with limited\npost-deployment maintenance\
    \ services. This supervisory protocol must incorporate\nsufﬁcient power optimization,\
    \ auto-fault management (FM), and self-adaptability\ntechniques in order to achieve\
    \ the desired performance expectation. Due to the lack of\nan in-depth and context-relevant\
    \ tutorial that bridges the gap between theoretical tax-\nonomies and real-world\
    \ designs, most canon Agri-IoT testbed solutions, such as those\nauthored in [1,10,11,17–20],\
    \ suffered abrupt failures during outdoor deployments.\n3.\nAgri-IoT technology\
    \ lacks comprehensive context-based synthesis from SN de-\nsign to ﬁeld deployment.\n\
    The power- and resource-constrained SNs that form\nthe WSN-based Agri-IoT network\
    \ in the aforementioned context require limited\ndata transmission rates, computational\
    \ capabilities, memory capacities, commu-\nnication distance, and operational\
    \ stability. Consequently, the associated routing\nprotocol [9,12,17,21], communication\
    \ technology, and routing architecture [22–24]\nmust support mechanisms that ensure\
    \ packet size and communication distance mod-\neration [16], efﬁcient channel\
    \ access management (CAM), and SN’s tasks manage-\nment. It is not a mere application\
    \ of conventional IoT to a farm, as many authors\nattempted [1,10–12,17–20,23,25,26],\
    \ which lacked application-speciﬁc requirements\nsuch as dense network inter-connectivity,\
    \ higher information perceptibility, compre-\nIoT 2023, 4\n268\nhensive intelligence\
    \ services, remote monitoring, smart decision making, and the\nexecution of precise\
    \ control/actuation actions on the farm.\n4.\nSuperﬁcial consideration of desired\
    \ communication technologies of Agri-IoT with-\nout considering the cluster-based\
    \ architecture: To date, Agri-IoT-related surveys and\ntutorials focused on high-power-demanding\
    \ communication technologies (Wi-Fi and\ncellular-based technologies), the centralized\
    \ architecture-constrained ZigBee standard,\nand the operation principles of conventional\
    \ IoT as authored in [1,10,11,14,18,19]\nwithout an in-depth consideration of\
    \ the unique case of Agri-IoT. It is well estab-\nlished that the cluster-based\
    \ architecture is the best candidate for Agri-IoT applica-\ntion [12,16,17,24];\
    \ however, there are no systematic evaluations to cement this fact.\nFor instance,\
    \ most benchmarking WSN-based IoT testbed solutions are founded on the\nZigBee\
    \ IEEE 802.15.4 communication standard and high-resource-demanding Wi-Fi,\ncellular-based,\
    \ and 6LoWPAN/IPv6 routing standards. These standards also thrive on\nwired or\
    \ ﬁxed IP-based infrastructural backbones, total Internet/electricity coverage,\n\
    and highly complex graph-based and centralized routing protocols [1,10,11,14,18,19],\n\
    leading to a lack of global signiﬁcance because Africa, which is the focus of\
    \ this study,\nhas less than 50% electricity/Internet coverage [27]. Also, ZigBee,\
    \ Wi-Fi and cellular-\nbased communication technologies with centralized or ﬂooding-based\
    \ routing archi-\ntecture [1,10,11,14,18,19] are capital-intensive, complex to\
    \ manage, location-restricted,\nenergy-inefﬁcient, and over-reliant on ﬁxed supporting\
    \ infrastructure. Therefore,\nan in-depth contextual assessment of how low-power\
    \ communication standards such\nas LoRa, SigFox, and Bluetooth Low-Energy (BLE)\
    \ evolve in cluster-based Agri-IoT\n(CA-IoT) networks can be of immeasurable beneﬁts\
    \ to the IoT community and farmers.\n5.\nThe role of Agri-IoT in eliminating food\
    \ insecurity, improving crop quality, alle-\nviating global poverty, and increasing\
    \ agricultural production volumes has been\nunderestimated [2,7,8,10,16,28,29].\
    \ The agricultural sector, which has been hindered\nby climate change, is the\
    \ largest global employer [3]. To revitalize this sector, CA-IoT\nhas emerged\
    \ with the most promising opportunities to address food and employ-\nment insecurity\
    \ issues and improve crop quality and economic conditions for the\nfarmers. However,\
    \ these beneﬁts have not been fully realized due to insufﬁcient\nresearch publicity.\n\
    To the best of our knowledge, no survey or tutorial articles have sufﬁciently\
    \ consid-\nered these technical issues and provided sufﬁcient technical guidelines\
    \ for the designers of\nAgri-IoT systems to make well-informed decisions in order\
    \ to achieve satisfactory network\nperformance. Additional realistic research\
    \ is needed regarding the contextual evaluation\nof SN design and deployment factors,\
    \ fundamental network design concepts and require-\nments, multi-objective optimization\
    \ (MOO) analysis of the parameters for designing the\nassociated routing protocol,\
    \ and efﬁcient operational metrics of the WSN sublayer of the\nAgri-IoT using\
    \ the cluster-based architecture. In addition, the assessment of the possibil-\n\
    ity of using low-power and accessible wireless communication technologies such\
    \ as BLE\nvia cluster-based architecture to achieve a complete infrastructure-less,\
    \ cheaper, energy-\nefﬁcient, self-healing, adaptive, and robust Agri-IoT network\
    \ is imperative. Furthermore,\na broader contextual overview covering all vital\
    \ aspects such as the fundamental concepts\nof Agri-IoT, technical design requirements\
    \ of SNs and WSN-based Agri-IoT, surveys of the\nbenchmarking communication standards,\
    \ routing protocols, and testbed solutions, and an\nin-depth case study on how\
    \ to design a self-healing, energy-efﬁcient, adaptive, and CA-IoT\nbased on the\
    \ performance and users expectations are illustrated in Figure 2. Such a refer-\n\
    ence document can help support researchers when they attempt to accurately model\
    \ and\noptimize the performance of Agri-IoT [14] so that the performance gap between\
    \ the simu-\nlated networks and the realized Agri-IoT testbed solutions [1] can\
    \ be addressed. By way of\naddressing these technical challenges, this tutorial\
    \ presents the following contributions:\n•\nPerform an in-depth synthesis and\
    \ review (1) the basic concepts of Agri-IoT, (2) the\ncomprehensive design considerations\
    \ of these networks, (3) the technical design re-\nIoT 2023, 4\n269\nquirements\
    \ of Agri-IoT, and (4) the up-to-date research progress on routing techniques,\n\
    communication standards, and testbed solutions of WSN-based Agri-IoT.\n•\nSystematically\
    \ survey the benchmarking of WSN-based IoT networks’ communication\nstandards,\
    \ FM techniques, routing and MAC protocols, and realization testbeds to\nrespectively\
    \ uncover the appropriate communication requirements for Agri-IoT, unveil\nthe\
    \ root faults and possible remedies in the WSN sublayer, derive a generalized\n\
    taxonomy of routing architectures, and deﬁne appropriate routing paradigms for\n\
    WSN-based Agri-IoT using the core PHY layer design metrics: affordability, self-\n\
    healing capacity, energy-efﬁciency, location independence, and network adaptability.\n\
    •\nSystematic synthesis of canon cluster-based routing protocols to uncover the\
    \ plethora\nof possible research gaps, derive a realistic taxonomy of MOO metrics\
    \ and propose\npossible MOO remedies that can be implemented using CA-IoT routing\
    \ architecture\nfreely available low-power communication standards.\n•\nProposition\
    \ of MOO-induced guidelines in the form of open issues that can help Agri-\nIoT\
    \ designers to build adaptive, robust, fault-tolerant, energy-efﬁcient, affordable,\n\
    and optimized CA-IoT networks in both simulation and real-world implementations.\n\
    Overall, this tutorial is motivated to provide a contextualized, in-depth understanding\n\
    of this technology and assist the reader in designing robust, affordable, and\
    \ optimized Agri-\nIoT networks that can act as reliable game-changers to avert\
    \ the stipulated challenges. Also,\nthe critical design, deployment, and QoS requirements\
    \ of WSN-based Agri-IoT networks\nfrom theoretical modeling to real-world deployment\
    \ are unveiled in order to bridge the\nexisting gap between the theory and practice\
    \ of this technology [1,14].\nThe remainder of this paper is organized into the\
    \ following sections: Section 2\nprovides a brief background comparative overview\
    \ of WSN, IoT, and Agri-IoT technologies,\nwhile Section 3 focuses on their components,\
    \ protocols, architectural layers, and proposed\narchitectural layers for WSN-based\
    \ Agri-IoT technology. Section 4 presents the detailed\ncontextual design and\
    \ implementation requirements of Agri-IoT networks, while Section V\ndeduces the\
    \ unique characteristics, challenges, and proposed performance expectations of\n\
    the associated routing protocols for the WSN sublayer of Agri-IoT. Sections 6–8\
    \ present\nsystematic surveys on routing protocols, FM techniques, and the canon\
    \ real-world testbed\nimplementations of WSN-based Agri-IoT solutions. Section\
    \ 9 examines how the above\ndiscussions have evolved using a case study of cluster-based\
    \ Agri-IoT (CA-IoT) for precision\nirrigation.Section 10 unveils open issues and\
    \ future works, while Section 11 concludes\nthe paper.\n1.1. Comparative Overview\
    \ of WSN, IoT, and Agri-IoT Technologies\nA comparative overview of the underlying\
    \ technologies (i.e., WSN, IoT, and Agri-\nIoT) forming the WSN-based Agri-IoT\
    \ are compared from the perspective of architectural\nvariations, users’ expectations,\
    \ and design and implementational differences in Table 1.\nAs depicted in Figure\
    \ 3, WSNs are formed by spatially distributed, autonomous,\nresource-constrained\
    \ SNs that wirelessly interconnect to communicate their sampled data\nto a BS\
    \ for further monitoring or event tracking purposes without necessarily requiring\n\
    the Internet. The main components of the WSN are the SNs, the BS/gateway, and\
    \ the\nevent sampling/routing software that supervises the entire network process.\
    \ A node\nmay route data directly or via relay SNs to the BS based on its location\
    \ and assigned\ntasks. The BS locally takes actionable decisions and execution\
    \ of the actuation actions.\nAlthough the WSNs are resource-constrained and fault-vulnerable,\
    \ they constitute the\ninevitable part of this technology [2] and the underlying\
    \ innovation of the WSN-based\nAgri-IoT framework. In contrast, classic IoT consists\
    \ of IoT devices that sense and transmit\ntheir sampled information directly or\
    \ via telemetry to the Internet for monitoring or event-\ntracking purposes, mostly\
    \ via the centralized routing architecture. Like BS in WSNs, IoT\ndevices can\
    \ connect to the Internet/IoT cloud via ﬁxed-line (thus, for a factory), 5G/4G/LTE\n\
    cellular/mobile networks, or Wi-Fi for further processing, storage, and decisions/actions.\n\
    IoT 2023, 4\n270\nTable 1. Comparison of WSN, IoT, and Agri-IoT technologies.\n\
    Characteristics\nWSN Technology\nIoT Technology\nAgri-IoT Technology\nInternet\
    \ Connectivity\nSNs have no direct connection to\nthe Internet, always via a\n\
    BS/router/gateway if necessary\nNodes directly send sampled\ndata to the Internet\n\
    SNs’ Internet connectivity can be either\ndirect or via a BS\nCritical Design\
    \ Factors/\nExpectations\nApplication-speciﬁc\nSecurity, interference, linking\n\
    ﬂeet\nPower optimization, routing\narchitectural support, fault tolerance,\non-site\
    \ auto-actuation demand,\nand self-adaptability to network\ndynamisms\nDeployment\
    \ Density\nApplication-speciﬁc\nModerate\nHigh\nPower Supply Constraints\nApplication-dependent\n\
    Application-speciﬁc\nCompelled to drive on battery power\nOn-Site Electricity\
    \ and Internet\nCoverage\nMay be possible\nRequired\nMostly inaccessible\nImplementational\
    \ Routing\nArchitecture\nCentralized or ﬂooded\nMostly centralized\nContextualized\
    \ cluster-based but\ninadequately researched\nCommunication Technology\nApplication-speciﬁc\n\
    May use high-power standards\nsuch as Wi-Fi, cellular-based,\nsatelite, ﬁxed-line,\
    \ etc.\nRequires low-cost low-power\nstandards such as BLE, LoRa, SigFox,\nZigBee,\
    \ etc. that support cluster-based\narchitecture\nUsers’ Expectations\nPerformance\
    \ stability\nPerformance stability\nAffordability, autonomous\nperformance stability,\n\
    location-independence, simple to\ndeploy and operate by non-experts,\nsupportive\
    \ of large-scale farm\nmanagement, and based on freely\navailable communication\
    \ technologies\nthat do not require licensing.\nNetwork Type\nData-centric\nUse\
    \ information network directly\nMostly data-centric\nBasic Components\nResource-constrained\
    \ SNs, BS or\nSink Node\nMay include smartphones, PCs,\nWSN, BS, Internet, IoT\
    \ cloud\nwith data analytic tools, and the\nuser interface app.\nWSN, BS, IoT-cloud\
    \ with\napplication-deﬁned user apps and data\nanalytical engines\nSecurity and\
    \ Privacy\nMedium\nHigh\nLow\nOn-Site Actuation Required?\nNot always\nNo\nYes\n\
    Network Participant Mobility\nduring Operation\nUsually static\nMobile\nApplication-speciﬁc\n\
    As presented in Figure 4, WSN-based Agri-IoT is an information- and knowledge-\n\
    intensive intelligent feedback control system for farm monitoring, data sampling/computing,\n\
    resource optimization, automation of farm operation (e.g., precision irrigation,\
    \ chemical ap-\nplication, livestock monitoring, and disease management [16]),\
    \ and actionable decision mak-\ning via a variety of battery-powered and wirelessly\
    \ connected SNs with sensing, processing,\nand communication capacities [2,29,30].\
    \ Unlike the WSN, Agri-IoT and IoT sample data to\nan Internet-based cloud. The\
    \ SNs that form the WSN sublayer are spatially distributed and\nself-conﬁgured\
    \ to achieve a myriad of remote sensing, surveillance/monitoring, and control\n\
    applications via automated sensing, wireless communication, and computing, making\
    \ in-\nformed decisions and performing actuation control [31] using precise, accurate,\
    \ and timely\nsampled information about a real-world phenomenon [32].\nIoT 2023,\
    \ 4\n271\n1/21/22, 10:46 AM\n700t.svg\nfile:///C:/Users/emman/Downloads/700t.svg\n\
    BS or Gateway  \nNode\nCell Phone  \nUser\nWeb App. User\nIoT Cloud + \nData Analytic\
    \  \nEngines\nDatabase \nServer\nWireless SN\nSmart IoT Device\n (a) The Agri-IoT\
    \ Framework\nE.g. Battery\nBLE\nE.g., a. DHT22     \nb. Soil Moisture  \nSensor\n\
    Cellular Tech. \ne.g. NB-IoT, LTE,  \nGSM\nZ-Wave Wi-Fi ZigBee\nE.g. a. RPi b.\
    \ Arduino\nPower Supply Unit\nSensing Unit\nCommunication Unit\nController Unit\n\
    (c)   Key Components of a SN for Agri-IoT Application \nAgricultural Field with\
    \ Agri-IoT\nDeployment\ni.e., expensive, fixed,\nenergy-inefficient,\nand non-ubiquitous\n\
    \ (b) Current Method of Agri-IoT Deployment\nSolar-Powered SNs in an\nExpensive,\
    \ Fixed\nInfrastructural Agri-IoT Field\nDeployment\nFigure 3. Generalized Agri-IoT\
    \ framework consisting of: ﬁeld layout overview of Agri-IoT framework\n(a), sample\
    \ of classic Agri-IoT in the state of the art (b), and key components of an SN\
    \ or a BS (c).\nIoT 2023, 4\n272\n8/19/2021\n2t.svg\nfile:///C:/Users/emman/Downloads/2t.svg\n\
    Functionality-Based\nTaxonomy of MMAC \nProtocols\nDuty-Cycle \nOptimization\n\
    Channel  \nAssignment \nManagement\n1. Synchronous\n2. Asynchronous\n3. Hybrid\n\
    1. Contention-based\n2. Scheduled-based\n3. Hybride\n1. Fixed Channel Assignment\n\
    2. Semi-Dynamic Channel Assignment\n3. Dynamic Channel Assignment\nHydrid (Required\
    \ for \nWSN-based Agri-IoT)\nAgri-IoT Tech. for Smart  \nSensing & Farm Monitoring\n\
    Smart Control\nSmart Analysis & \nResource Planning\nAgri-IoT-Based Farm Monitoring\
    \ and control cycle.\nBLE\nZ-Wave\nWi-Fi\nZigBee\nFarm Management Tools/Technologies\n\
    Figure 4. Conceptual framework: Agri-IoT-based farm monitoring and control cycle.\n\
    The main hardware components of an Agri-IoT framework, as presented in Figure\
    \ 3\nand Table 2, include the WSN (i.e., comprising the ﬁeld-deployed SNs or IoT\
    \ devices),\na base station (BS) or gateway or actuator controller, cloud servers,\
    \ and the user’s monitor-\ning/control devices. The on-farm participants (e.g.,\
    \ SNs and BS) in Agri-IoT are mostly\nbattery-powered and must be equipped with\
    \ sensing, computing, and communication\nabilities to form infrastructure-less,\
    \ robust, self-healing, and self-conﬁgured WSNs for data\ncollection and event\
    \ management [33]. The core units of the SNs in Figure 3c and the BS\nare compared\
    \ and contrasted in Table 2. As the framework in Figure 3a depicts, the IoT\n\
    devices can sense, process, and transmit their sampled data directly to the Internet\
    \ or IoT\ncloud without a gateway, whereas the SNs in WSN-based Agri-IoT perform\
    \ likewise via\na BS. This resource-sufﬁcient BS interfaces between the IoT cloud/user\
    \ and the WSN or\nactuator control system. It can also process the received data\
    \ and locally execute actionable\ndecisions via the actuator of the farm event\
    \ being monitored. The received data can also be\nrelayed to the analytical data\
    \ engines in the IoT cloud via a wired and wireless medium for\nfurther processing\
    \ and actions [13]. The resource-constrained WSN sublayer mainly uses\ndata-centric\
    \ protocols due to the SNs’ high deployment densities, high network dynamics,\n\
    and limited power supply of SNs. Although data-centric protocols are fragile and\
    \ not\nstandardized, they are more suitable than the high resource-demanding ID-based\
    \ IPv4 or\nIPv6 protocols in the addressing space of the WSN-based Agri-IoT.\n\
    Table 2. Comparison of SN and BS.\nNetwork\nParticipant\nPower Source\nCommunication\
    \ Technologies\nController Type\nProcessor/Memory\nRequirements\nRequires\nSensors\n\
    SN\nMostly battery-powered\nMostly relies on low-power,\nshort-ranged standards\
    \ such as\nBLE, LoRa, SigFox, and ZigBee for\non-ﬁeld communication\nCan be Arduino-based,\n\
    Raspberry Pi\n(RPi)-based, etc.\nLow processing and\nstorage powers but\nbased\
    \ on SN roles\nYes\nBS\nCan be battery-powered\nbut mostly use a more\nreliable\
    \ power supply\nMostly communicate with IoT\ncloud via ﬁxed line, Wi-Fi, cellular\n\
    technologies, and the WSN via\nthe low-power standards,\ne.g., BLE, LoRa, SigFox,\
    \ ZigBee,\nLoRa-based Satellite, etc.\nCan be RPi or\nArduino-based or a PC.\n\
    Requires high memory\nand processing powers\nNo\nIoT 2023, 4\n273\nAgri-IoT combines\
    \ WSN and IoT technologies into contextualized intelligent farm\nmanagement systems\
    \ to achieve higher event data quality and offer remote monitoring\nand control.\
    \ WSN-based Agri-IoT consists of the WSN sublayer, the gateways, the cloud\nservers,\
    \ and the remote interface application, as illustrated in Figures 3a and 5. Uniquely,\n\
    the current trends of Agri-IoT mandate that both intra-SN and BS–cloud communication\n\
    are based on low-power, ubiquitous, and freely available wireless standards [2].\
    \ Also,\nmost Agri-IoT solutions support bidirectional communications between\
    \ the BS/gateway\nand the cloud/users, whereby the BS updates the cloud/user database\
    \ and receives ac-\ntionable/control remote messages from the user or cloud analytical\
    \ decision results for\nactuation purposes. The WSN-based Agri-IoT is the most\
    \ dominant technology in the global\nsmart farming use cases in the agricultural\
    \ sector. The core tasks of SNs in a WSN-based\nAgri-IoT application, which are\
    \ frequently supervised by the associated routing protocol,\ninclude network construction/management,\
    \ data sensing, data processing/aggregation,\nfault tolerance, and communication\
    \ [9,12]. Also, the routing architecture must be supported\nby the associated\
    \ communication platform and the application-speciﬁc requirements of\nthe network.\n\
    1/21/22, 10:14 AM\n713.svg\nThings \nGateway/BS \n(Actuator controller) \nIoT\
    \ Cloud Servers \n(Data storage and process) \nSNs, Actuators, IoT-Enabled\nDevices,\
    \ WSNs\nZigbee, LoRa, SIGFOX,\nBLE, Z-Wave, etc\nCellular, WiFi, NFC,\nMobile,\
    \ LoRa DSL, Fibre\nEdge\nComputing\nUser Innterface\nMobile App,\nWeb App\nPhysical/Perception\
    \  \nLayer\nNetwork Management & \n Actuator Control Layer \nInformation Management\
    \ Layer  \n(Storage, Data Analytic Engines)\nIntegrated Application Layer, \n\
    Business Layer\nApplication  \nLayer\nAgri-IoT Layers\nAgri-IoT Architectural\
    \ Components\n-Purpose of use  \n-Type of internet \n connection \n-Type of device\
    \ \n (sensor, server etc.) \n-Device dimensions \n-Energy consumption\nThings\
    \ Taxonomy \ne.g., \nDDS\nCoAP \nAMQP \nMQTT \nXMPP \nHTTP\nDDS: Data Distribution\
    \ Service, CoAP: Constrained Application Protocol\nMQTT: Message Queue Telemetry\
    \ Transport, XMPP: Extensible Messaging and Presence Protocol \nAMQP: Advanced\
    \ Message Queuing Protocol, HTTP: Hypertext transfer protocol\nClassification\
    \ of Design Challenges  \nof Agri-IoT Technology\nAgri-IoT Participant Design\
    \  \n(e.g., SNs, Relay SNs, and BS)\nComponents selection \n(e.g., Controller,\
    \ Sensors,  \nPower supply, Comm. Tech.).\nTask-scalability\nBattery sizing\n\
    Design of Supervisory  \nRouting Protocol\nFault management (FM\nPower optimizattion\n\
    Network construction & event routing \n(Route architecture selection)\nAdaptability/scalability\n\
    Network maintenance\nOperation and \nSelf-maintenance\nSN deployment density \n\
    SN uniformity \nPhysical Architecture\nField Deployment/ \nParticipants' Placement\n\
    Adaptability \nSelf-healing capacity \nNetwork management \nFigure 5. Proposed\
    \ Agri-IoT architectural layers with core components of Agri-IoT ecosystem and\
    \ the\n“things” taxonomy.\nUnlike IoT and WSN whose design expectations are application-speciﬁc,\
    \ WSN-based\nAgri-IoT requires holistic integrations of the expectations in Figure\
    \ 2.\n1.2. Classiﬁcations of IoT Applications and Speciﬁc Roles of Agri-IoT\n\
    Generally, IoT technology is application-speciﬁc. However, it has limitless applications\n\
    and roles in the smart world agenda. Based on their intended purpose, WSN-based\
    \ IoT sys-\ntems can be broadly classiﬁed into condition monitoring and event-tracking\
    \ categories [34],\nas illustrated in Figure 6.\nThe monitoring-based applications\
    \ involve real-time event data collection and analysis,\nsupervision, and operational\
    \ control of systems. In contrast, tracking-based applications\ntrack changes\
    \ in the phenomenon of interest, such as the locations of objects, persons,\n\
    transported goods, animals, and vehicles. Both application domains can be subdivided\n\
    into industrial, environmental, and societal IoT applications in Figure 6, where\
    \ speciﬁc\nexamples are provided for each application domain. For instance, monitoring-based\
    \ ap-\nplications may include indoor/outdoor environmental monitoring [6], industrial\
    \ process\nmonitoring [5,29], process control [2], greenhouse automation [7],\
    \ precision agriculture\n(e.g., irrigation management, crop disease prediction,\
    \ prediction of production quality,\nIoT 2023, 4\n274\nand pest and disease control)\
    \ [2,8], biomedical or health monitoring [8], electrical grid net-\nwork monitoring/control\
    \ [12,29], military location monitoring [9], and so forth. Conversely,\nspecific\
    \ examples of tracking-based applications may include habitat tracking, traffic\
    \ tracking,\nplant/animal condition tracking, and military target tracking, as\
    \ outlined in Figure 6.\n1/21/22, 10:55 AM\n701.svg\nEcology: Wildlife Tracking\n\
    Water Level/Quality Tracking\nCondition  \nMonitoring \nEvent  \nTracking\nIndustrial\
    \ IoT\nEnvironmental IoT\nSocietal IoT\nIndustrial IoT\nEnvironmental IoT\nSocietal\
    \ IoT\nPublic Health: WSN Body Area\nNetwork-WBAN\nMilitary: Enemy tracking\n\
    Farm Animal Tracking\nVehicular Tracking\nEquipment & Goods Tracking\nSmart Tracking\
    \ Control\nAerospace & Aviation\nSmart Transportation &\nLogistics\nSmart Electrical\
    \ Grid &\nMetering Systems\nWarehouses & Storage\nIndustrial Process & Plant\n\
    Automation\nSmart Agriculture: Precision\nFarming & Greenhouses \nDisaster Management\n\
    Pollution Control\nInfrastructural Monitoring\nSmart Power Plants\nSecurity &\
    \ Surveillance\nMilitary: Intrution\nDetection\nMedical IoT\nEntertainment & Media\n\
    Smart Environment: e.g.\nHomes, Schools, Cities,\nHospitals\nIoT  \nApplications\
    \ \nFigure 6. Generalized taxonomy of IoT applications.\n1.3. Agri-IoT Roles and\
    \ Use-Cases\nThe concept of intelligent farming involves data acquisition, data\
    \ processing/planning,\nand smart control using the WSN and IoT technologies,\
    \ big data, and cloud computing\ntechniques to provide proﬁtable solutions, as\
    \ presented in Figure 7. These principal roles\nin Figure 7 deﬁne their use cases.\
    \ For instance, monitoring the state of crops or the\nclimate of the ﬁeld using\
    \ Agri-IoT technology can allow farmers to know precisely the\namount of pesticides,\
    \ water, and fertilizers required to attain optimal crop quality and\nproduction\
    \ volume. However, the QoS requirements, the routing techniques, architectural\n\
    requirements, and the operational dynamics differ from one use case to another.\
    \ This\ntutorial focused on the critical and unique design requirements of WSN-based\
    \ Agri-IoT,\nwhich is the backbone of the smart agricultural initiative [35].\
    \ The resulting use-cases in\nFigure 7 can be explained as follows:\n1.\nAgri-IoT\
    \ for Climate Condition or Agronomical Monitoring: This Agri-IoT system mostly\n\
    comprises BS (i.e., weather stations) and a deployed WSN. The analytical data\
    \ engines\nmine the sampled climate or crop condition data in the cloud to predict\
    \ future climate\nconditions and farm automation plans. The most suitable crop\
    \ and precise farming\npractices can then be predeﬁned to improve agriculture\
    \ production capacity and\nquality.\n2.\nAgri-IoT for Precision Farming: This\
    \ is the most famous application of Agri-IoT, whereby\nfarming practices (e.g.,\
    \ irrigation, fertilizer application, etc.) are precisely and accu-\nrately controlled\
    \ to optimize these resources. Here, the SNs are mostly ﬁtted with soil\nsensors\
    \ to collect a vast array of microclimatic data (e.g., soil moisture, temperature,\n\
    and salinity) that can enable farmers to estimate optimal amounts of water, fertiliz-\n\
    IoT 2023, 4\n275\ners, and pesticides needed by the crops to minimize resources’\
    \ costs and produce\nhealthier crops. Additionally, the BS controls the event\
    \ actuation system via accurate\ndata-driven real-time decisions on the crops\
    \ using climate data, crop growth data,\nand disease infection data.\n3.\nAgri-IoT\
    \ for Greenhouse Automation: The Agri-IoT-based approach provides more accu-\n\
    rate real-time information on greenhouse conditions, such as lighting, temperature,\n\
    soil condition, and humidity, unlike manual greenhouse management. This allows\n\
    precise remote monitoring and control or automation of all farming practices.\n\
    4.\nAgri-IoT for Livestock Monitoring and Management: In this system, SNs are\
    \ attached\nto livestock to monitor their real-time health, track their physical\
    \ location, and log\ntheir performance. This helps the farmer identify and isolate\
    \ sick animals to avoid\ncontamination and reduce stafﬁng expenses.\n5.\nAgri-IoT\
    \ for Predictive Analytics: This Agri-IoT system provides highly relevant real-\n\
    time data that can be analyzed to make essential predictions, such as crop harvesting\n\
    time, risk of disease infection, yield volume, yield quality, and yield vulnerability,\n\
    for proper planning.\n6.\nAgricultural Drones (Agri-Drones): Agri-Drones, such\
    \ as DroneSeed, are ﬁtted with\nmobile SNs and farming tools to collect agricultural\
    \ data or perform activities such\nas ﬁeld surveillance, crop planting, pest control,\
    \ farm spraying, crop monitoring, etc.\nFor example, for Agri-Drones, all the\
    \ above use cases utilize the WSN-based Agri-IoT\nframework.\n1/21/22, 11:01 AM\n\
    712.svg\nResource Optimization  \ne.g. water, fertilizer,  \npesticides, insecticides\n\
    Soil Management \nCrop monitoring/ Animal\nCondition monitoring or\ntracking (Disease\
    \ Control)\nFarm Automation\nRoles of  \nAgri-IoT\nRoles of  Agri-IoT  \nin Smart\
    \ Farming\nE.g. Crop Monitoring via: \nAgric. Drones\nClimatic Conditions\nSmart\
    \ Greenhouses\nPrecision Farming\nTaxonomy of  \n Agri-IoT Use-cases\nWSN-based\
    \ Agri-IoT Use-Cases \nClimate Condition Monitoring\nPrecision Farming\nGreenhouse\
    \ Automation\nLivestock Monitoring \nPredictive Analysis\nDrone-based Agri-IoT\
    \  \nUse-Cases \nDroneSeed\nAgri-Drones\nFigure 7. The roles of Agri-IoT in smart\
    \ farming with speciﬁc use cases.\n2. The Agri-IoT Ecosystem\nThe authors in [1,14]\
    \ established that the existing real-world attempts of Agri-IoT could\nnot meet\
    \ both performance and user users’ expectations because they are founded on the\n\
    fundamental concepts and the operational principles of classic IoT and WSN technologies.\n\
    To effectively achieve the expectations in Figure 2, it is imperative to conduct\
    \ a systematic\nassessment of the related architectural layers in classic IoT\
    \ and propose a suitable option for\nthe WSN-based Agri-IoT ecosystem. Generally,\
    \ the conventional IoT ecosystem consists\nof the network architectural layers\
    \ and the data management platforms [2,7,8], which\nare further grouped into devices\
    \ (sensors, actuators, and gateways/BS), network (BS to\ncloud), platforms/applications’\
    \ cloud, and agents/users. Due to the domain-speciﬁc\nrequirements of IoT applications\
    \ and the incorporation of numerous heterogeneous devices\nIoT 2023, 4\n276\n\
    with application-speciﬁc requirements, there are generally no uniﬁed or standardized\n\
    IoT architectural layers. Therefore, most application-defined layers are frequently\
    \ adapted\nfrom the canon architectural layers, which include the three-layer\
    \ [5], the cloud-based [7],\nthe service-oriented architecture (SOA) [2,7], and\
    \ the fog-based [2,7,29], as illustrated in\nFigure 8.\n1/20/22, 8:49 PM\n714.svg\n\
    file:///C:/Users/emman/Downloads/714.svg\nPhysical/Perception  \nLayer\nProcess\
    \ Layer\nCloud-based \nArchitecture of IoT\nCloud Services\nGateway\nPhysical\
    \  \nLayer\nNetwork Layer\nApplication \n Layer\nThe 3-Layer \nArchitecture of\
    \ IoT\nClient Services\nStorage Layer\nData from IoT \nDevices\nProcessing Layer\n\
    Fog-based \nArchitecture of IoT\nData Acquisition Layer\nNetwork Layer\nInterface\
    \ Layer\nManagement Layer\nService Oriented \nArchitecture of IoT\nPhysical &\
    \ MAC Layer \ne.g.  Z-wave, ZigBee\nAdaptation Layer \nIPv6, 6LoWPAN\nApplication\
    \ Layer\nNetwork Layer e.g. \n IPv4, IPv6, RPL,RCEEFT\n6LoWPAN Layer  \nStructure\
    \ (e.g. RPL)\nTransport Layer,TCP, UDP\nFigure 8. Different architectural layers\
    \ in the state of the art of IoT ecosystem.\nThe fog-based architecture was adapted\
    \ from the three-layer parent architecture to in-\nclude cloud computing by offering\
    \ computing, storage, and network information between\nthe clients and the cloud\
    \ services [29] in a decentralized manner. Here, cloud computing\nand fog/edge\
    \ computing architectures only differ in where data computing occurs. These\n\
    layers are not uniﬁed because the respective network layers do not cover all underlying\n\
    technologies that transfer data to all IoT platforms [5]. Additionally, they are\
    \ based on com-\nplicated centralized and ﬂooding-based routing architectures,\
    \ high-resource-demanding\nand capital-intensive Wi-Fi/cellular-based communication\
    \ technologies. As well, they\nrequire wired infrastructural support in the farm,\
    \ which is too complex, location-restricted,\nand capital-intensive for most low-income\
    \ and non-expert farmers to implement and\nmanage. Consequently, they are unsuitable\
    \ candidates for the resource-constrained SNs\nin WSN-based Agri-IoT. By implication,\
    \ there are no reference guidelines for designing\nAgri-IoT participants and supervisory\
    \ protocols, controlling the speed of packet delivery,\nsmoothing out SN’s integration,\
    \ unifying technology, and creating standardized Agri-\nIoT reference models,\
    \ among other considerations. In contrast, an Agri-IoT ecosystem,\ndepicted in\
    \ Figure 3, consists of:\n1.\nAgri-IoT network architectural layers: This shows\
    \ how the physical network elements,\nnetwork operation principles, and operational\
    \ techniques interact throughout the\nentire ecosystem.\n2.\nNetwork supervisory\
    \ software/routing protocol and routing architectures: This con-\ntains the virtual\
    \ arrangement of multiple network elements [8] and the event sam-\npling/routing\
    \ protocol that constructs the routing architecture, supervises sampling\nand\
    \ moderates all communications in the PHY layer.\n3.\nData management platform:\
    \ It hosts all high-resource-demanding data analytic en-\ngines, event databases,\
    \ and remote control algorithms in a cloud model.\n2.1. Proposed Architectural\
    \ Layers for WSN-Based Agri-IoT\nIn designing an efﬁcient Agri-IoT system of global\
    \ signiﬁcance, it is imperative to\npropose suitable architectural layers and\
    \ evaluate how the various components interact in\nthese layers. With the emerging\
    \ advances in low-power, freely available, and boundless\ncommunication standards\
    \ (e.g., BLE) and unfulﬁlled potentials of CA-IoT network [12,16],\nIoT 2023,\
    \ 4\n277\na new framework of cluster-based architectural layers for the WSN-based\
    \ Agri-IoT ecosys-\ntem is proposed in the left side of Figure 5. The center portion\
    \ of Figure 5 presents the key\ncomponents/technologies required in each layer,\
    \ while the Things taxonomies of hardware\ncomponents from the related literature\
    \ [4,8,29] are depicted on the right portion of Figure 5.\nThe underlying layers\
    \ in our four-tier layers in Figure 5 can be elaborated on as follows:\n1.\nIntegrated\
    \ Application and Management Layer: This operates all agriculture-related\napplications\
    \ that interface between the user (for example, farmer) and the Agri-IoT\nsystem\
    \ to make decisions and execute remote actions to keep their crops or animals\n\
    healthy. This layer manages the entire Agri-IoT system and its application-speciﬁc\n\
    functionality, high-resource-demanding applications, and core business model in\
    \ the\ncloud. This layer’s security requirements are crucial to the next sublayer;\
    \ however,\nthese are beyond the scope of this research. The business or management\
    \ sublayer\nmaintains end-to-end data integrity and security by ensuring that\
    \ data are transferred\nto the correct user. It also ensures that the correct\
    \ user executes the actuation.\n2.\nInformation Management Layer: This handles\
    \ data processing, storage, and other special-\nized cloud services and functionality\
    \ that make precise, actionable decisions. In Agri-\nIoT, the sensory data are\
    \ preprocessed locally to optimize communication power\nbut can be further processed\
    \ using analytic engines in the cloud for better decision\nmaking and remote monitoring\
    \ and control. This layer can be embedded in the above\napplication layers and\
    \ hosted in the cloud in a typical Agri-IoT ecosystem.\n3.\nNetwork Management\
    \ Layer: This layer discovers, connects, and translates devices over\na network,\
    \ and it coordinates with the above application layers. It also contains the\n\
    BS, which interfaces the resource-constrained WSN and cloud information network.\n\
    By convention, the WSN sublayer must utilize low-power communication standards\n\
    such as Zigbee, SigFox, LoRa, BLE, Z-Wave, SigFox, and IEEE P802.11ah (low-power\n\
    Wi-Fi), while the BS-to-Cloud connectivity can be achieved via the traditional\
    \ cellular\nnetworks, satellite networks, Wi-Fi, LAN, WAN, and LoRa, among others.\
    \ Unlike clas-\nsic IoT, Agri-IoT requires that the BS-to-Cloud connectivity utilize\
    \ low-power commu-\nnication standards. Also, since every communication standard\
    \ for the resource-limited\nWSN sublayer comes with unique resource speciﬁcations\
    \ and design tradeoffs be-\ntween power consumption, routing architectural constraints,\
    \ and bandwidth [4,14,17],\nthe best connectivity option must be selected to achieve\
    \ the desired application goals.\nConsequently, the stated WSN-based connectivity\
    \ technologies can be classiﬁed using\nseveral distinct parameters, such as energy\
    \ consumption rates, uplink/downlink data\nrates, packet size, SN-count per BS\
    \ (gateway), network routing topology, the SNs’\nsensing range, the SNs’ transmitter/receiver\
    \ power, frequency bandwidth, channel\nwidth, etc. (refer to the right portion\
    \ of Figure 5).\n4.\nPhysical/Perception/Things Layer: This layer refers to the\
    \ ﬁeld and all devices such as\nSNs, actuators, RFID tags, sensors, and edge devices\
    \ that interact with the environment.\nThis layer senses and collects the necessary\
    \ information from the connected devices in\nthe WSN sublayer to the BS. In Agri-IoT\
    \ networks, the sampled microclimatic data\ncan be processed and stored on the\
    \ local BS, the cloud, or both. The activities in the\ncloud or application layers\
    \ are beyond the scope of this tutorial.\n2.2. Associated Hardware Components\
    \ and Technologies Required in the Proposed Architectural Layers\nTo precisely\
    \ model and design an Agri-IoT network of desired expectations (refer to\nFigure\
    \ 2) using the proposed architectural layers shown in Figure 5, the knowledge\
    \ of the\nprincipal components and technologies used in each of these layers and\
    \ how they interact\nand adapt for their intended functions is imperative. As\
    \ depicted in the middle of Figure 5,\nthe Agri-IoT ecosystem is composed of the\
    \ following core components/technologies:\n1.\nThings: The Things unit is the\
    \ physical interface between the tracked/monitored asset\nand the BS or actuator\
    \ controller, which aligns with the physical or perception layer. It\ncomprises\
    \ the monitored/tracked asset (for example, ﬁeld, crop, or animal), the SNs,\n\
    or the entire IoT devices making up the WSN (for example, SNs, actuators, IoT-enabled\n\
    IoT 2023, 4\n278\ndevices, WSNs, and other smart devices), the event sampling,\
    \ and routing technology\nin the WSN. Since the SNs constituting this unit are\
    \ resource-constrained, freely\navailable communication standards such as Zigbee,\
    \ BLE, Z-Wave, and IEEE P802.11ah\n(low-power Wi-Fi) are the most suitable for\
    \ both SN–SN and SN–BS communications.\nThe Things unit accesses the cloud/Internet\
    \ via gateways (BS).\n2.\nGateway (BS): The BS interfaces the WSN out in the ﬁeld\
    \ and the applications situated\nin the cloud servers. This unit aligns with the\
    \ network management and actuator\ncontrol layer shown in the middle of Figure\
    \ 5. The WSN sublayer may have more\nthan one BS(s), each with the capacity to\
    \ handle most resource-demanding com-\nputational tasks besides actuation execution,\
    \ network construction, scheduling of\nevent sampling, and network supervision\
    \ services. They may also allow bidirectional\ncommunication with the cloud/user\
    \ and WSN. Similar to standalone IoT devices,\nthe BS can be equipped with 4G/5G/LTE/NB-IoT,\
    \ cellular-based, Wi-Fi, LoRaWAN,\nor wired ethernet communication technologies\
    \ to interact with the cloud, and low-\npower communication standards such as\
    \ LoRa, low-power Wi-Fi, SIGFOX, UMTS,\nBLE, and Zigbee (Figure 5) to communicate\
    \ with the sensor ﬁeld. However, Agri-IoT\nnetworks require that both upper-layer\
    \ and lower-layer communication technolo-\ngies of the BS should be low-power,\
    \ freely available, easy to deploy and manage,\nand platform-independent. The\
    \ BS may preprocess or relay the raw data to the cloud\nfor remote data processing.\
    \ The BS(s) locations are strategically chosen to optimize\nnetwork communication\
    \ costs.\n3.\nIoT Cloud: The Cloud unit aligns with the applications layer. It\
    \ consists of an on-\npremises or remote server farm that hosts the applications\
    \ layer, event data analytic\nengines, security protocols, robust IoT applications,\
    \ user interface, and event database.\nThe high resource-demanding data-processing\
    \ tasks are mostly executed by well-\nequipped cloud-hosted applications to manage\
    \ and store huge amounts of data,\nprovide monitoring and data analytical services,\
    \ enable communication with devices,\nand manage information access. The merits\
    \ of edge computing can be exploited to\nensure that large amounts of data are\
    \ post-processed off-device to reduce the response\ntimes of the cloud.\n4.\n\
    User Interface: With the aid of a web or mobile app, the user or farmer can live-\n\
    monitor the farm’s conditions and execute control actions. Additionally, a presentation\n\
    or business intelligence layer may be added to coordinate the activities of non-technical\n\
    business users through dashboards and reports rather than with the application\n\
    layer itself.\n2.3. Quality Expectations of Agri-IoT’s Architectural Layers\n\
    Although there is no uniﬁed, certiﬁed, and ﬂexible Agri-IoT architecture layer,\
    \ any\nsuitable options deduced from the benchmarking architectures in Figure\
    \ 8 must satisfy\ncertain quality requirements, including:\n1.\nSimultaneous data\
    \ acquisition, analysis, and control from many sensors or actuators.\n2.\nMinimization\
    \ of huge raw data transmissions via data aggregation techniques to\nmaximize\
    \ actionable information quality.\n3.\nProvision of reliable network architecture\
    \ that supports energy-efﬁcient routing, sta-\nble connectivity, self-adaptability,\
    \ fault tolerance, operational simplicity/ﬂexibility,\nplatform independence,\
    \ affordability, and location independence of Agri-IoT designs.\n4.\nSupport for\
    \ automated/remote device management and updates.\n5.\nEasy integration of each\
    \ layer with existing applications and other IoT solutions via\nspeciﬁed APIs.\n\
    6.\nUtilization of freely available, location-unrestricted, cheap, energy-efﬁcient,\
    \ and simple\nto deploy and manage by non-experts [4,29] underlying communication\
    \ technologies\nin the PHY and network layers as well as based on open standards\
    \ to guarantee\ninteroperability.\nIoT 2023, 4\n279\n3. Design and Implementation\
    \ of Agri-IoT Networks\nDespite the technical challenges associated with the WSN-based\
    \ Agri-IoT, its potential\ncontributions in the agricultural sector largely surpass\
    \ the least complex, capital-intensive,\npure IoT-based solutions, as illustrated\
    \ in Figures 3b and 7. Due to the broader applicability\nand higher signiﬁcance\
    \ of the WSN-based Agri-IoT networks relative to the classic IoT\nnetworks, this\
    \ study focuses on the former technology whose design and implementation\ninvolve\
    \ four crucial phases, namely:\n1.\nCustom-building of robust, affordable, energy-efﬁcient,\
    \ location-independent, and\nadaptive SNs and a BS that can form an infrastructure-less\
    \ and easily manageable WSN.\nThe SNs and the BS must consist of cost-effective,\
    \ architecture-deﬁned, and context-\ndeﬁned components so that the system operates\
    \ stably and efﬁciently, becomes afford-\nable to farmers, and easily integrates\
    \ to any real-world scenario without any expensive,\nﬁxed/wired backbone connections.\
    \ The low-power capabilities of the SNs help to\neasily integrate them into any\
    \ precision farms and greenhouses to operate over the\nentire crop season without\
    \ many technical hindrances.\n2.\nPhysical deployment of the SNs in the ﬁeld,\
    \ selection of the WSN’s communication\ntechnology, and design of a suitable supervisory\
    \ protocol to coordinate the construc-\ntion of appropriate event routing architecture,\
    \ the duty-cycle schedule of event sam-\npling to the BS, fault management, data\
    \ management, and network maintenance.\nAdditionally, a range of techniques such\
    \ as network participant mobility, cross-layer\ndesign, MAC techniques, data aggregation,\
    \ self-healing techniques, nodes’ duty-cycle\nschedule, security measures, localization,\
    \ and communication speciﬁcations of the\nSNs can also be exploited in the associated\
    \ routing protocols.\n3.\nSelection of appropriate BS/gateway communication technology\
    \ and design of a\nsuitable higher protocol to update the cloud database and execute\
    \ the actuation\nactions based on users’ requests or decisions on processed event\
    \ data.\n4.\nDesign of data analytical engines and applications in the cloud and\
    \ users’ remote\nmonitoring and control interface app, which is beyond the scope\
    \ of this tutorial.\nThese call for a systematic application-speciﬁc assessment\
    \ of the hardware components\nselected for every use case.\n3.1. Sensor Nodes\
    \ Design Considerations\nAs illustrated at the bottom of Figure 3, a node for\
    \ the WSN-based Agri-IoT network\nconsists of four main units, which include the\
    \ following:\n1.\nSensing Unit: This unit interfaces with the physical environment\
    \ and records the\nphysical phenomenon of interest. The type of sensor is application-speciﬁc\
    \ and can\nbe contact-based or non-contact-based. For instance, the STEMMA soil\
    \ moisture\nsensor and the DHT22 sensor can be used to sample environmental temperature\
    \ and\nhumidity (refer to Figure 3c).\n2.\nController Unit: This unit hosts the\
    \ processor, storage, and connection pins for the\nother units and all auxiliary\
    \ peripherals. The suitable controllers for building Agri-IoT\nSNs are Arduino-based\
    \ and Raspberry-Pi-based (refer to the bottom of Figure 3) due\nto their ability\
    \ to withstand extreme weather conditions. However, other off-the-shelf,\napplication-speciﬁc\
    \ controllers such as the ProPlant Seed Rate Controller, John Deere\nGreenStar\
    \ Rate Controller, Viper Pro multi-function ﬁeld computer, Radion 8140,\nTrimble\
    \ Field-IQ, etc. are also available.\n3.\nCommunication Unit: This unit is the\
    \ principal determinant of the node’s power\nconsumption, operational stability,\
    \ and affordability, as well as the routing architecture\nin the associated supervisory\
    \ protocol. The bottom of Figure 3 shows the available\ncommunication technologies,\
    \ but an Agri-IoT-based SN demands an energy-efﬁcient,\naffordable, freely available,\
    \ simple, and reliable communication standard. Conse-\nquently, LoRa, BLE, ZigBee,\
    \ LoRaWan, and SigFox are the best candidates based on\nIoT 2023, 4\n280\nthe\
    \ support of the routing architecture of the resulting WSN, but the selection\
    \ must be\njustiﬁed from the technology requirement metrics via a decision matrix.\n\
    4.\nPower Unit: Since the SNs are mostly battery-powered, the appropriate battery\
    \ size\nand probable energy-harvesting techniques must be determined during the\
    \ SNs’\ndesign according to the intended network lifespan and stability requirements.\
    \ Modern\ntrends in battery power banks with integrated solar-based energy-harvesting\
    \ systems\nand power ratings above 30,000 Ah are available.\nWhen selecting hardware\
    \ components, adequate caution should be taken to avoid unit\nincompatibility,\
    \ high operational complexities, unsuitable operational thresholds, and high\n\
    energy consumption, among others. This implies that high component survivability\
    \ and op-\nerational stability under different environmental conditions and the\
    \ application speciﬁcities\nare vital to monitor.\n3.2. Wireless Spectrum and\
    \ Core Communication Platforms of WSN-Based Agri-IoT\nThe wireless electromagnetic\
    \ (EM) spectrum, which has invisible, ﬁnite radio fre-\nquencies for wireless\
    \ communication, can be licensed and sold exclusively by speciﬁc\nproviders or\
    \ unlicensed for free usage. For instance, the Industrial, Scientiﬁc, and Medical\n\
    (ISM) frequency band (e.g., Bluetooth classic, BLE, Wi-Fi, ZigBee, and LoRaWAN)\
    \ is an\nunlicensed microwave frequency band clustered around 2.4 GHz and globally\
    \ reserved for\napplications such as Agri-IoT. Table 3 presents the various bands\
    \ and their applications.\nA suitable candidate for a given Agri-IoT application\
    \ is based on several factors, such\nas communication and the route architectural\
    \ requirements, power consumption, cost,\nand environmental adaptability impacts.\n\
    Table 3. Wireless spectrum with the core communication platforms/applications.\n\
    Frequency Band\nApplications\nLicensed Band\n0–20 MHz\nAM radio\n86–108 MHz\n\
    FM radio\n470–800 MHz\nTV band\n850–1900 MHz\nCellular-based: GSM/3G/4G/5G/LTE\n\
    Around 3.5 GHz\nSatelite comm.\nUnlicensed Band\n863–928 MHz\nLoRa, LoRaWAN, SigFox\n\
    Legality location-dependent: e.g.,\n915 MHz (Australia & North America),\n865\
    \ MHz to 867 MHz (India), 923 MHz (Asia)\nAround 2.4 GHz\nWi-Fi, BLE, ZigBee,\
    \ Classic Bluetooth\nAround 5 GHz\nWi-Fi\n3.3. Factors to Consider When Deploying\
    \ SNs and Designing the Supervisory\nSampling/Routing Protocol\nAfter custom-building\
    \ or selecting off-the-shelf SNs, the next activity is to deploy\nthe SNs on the\
    \ ﬁeld and design a contextualized supervisory protocol to coordinate the\naforementioned\
    \ network’s activities. The SNs’ deployment in the ﬁeld can be either random\n\
    or deterministic. Both options require different methods to optimize the resulting\
    \ network’s\nperformance. For instance, under the deterministic approach, the\
    \ optimal parameters such\nas node uniformity and density must be predeﬁned based\
    \ on the distance thresholds of the\nassociated communication technology (i.e.,\
    \ connectivity/distance range), the SNs’ resource\noptimization mechanisms, the\
    \ type of routing architecture, and the sensing range of the\nphysical parameter\
    \ to be measured. Since communication is the principal power consumer,\nthe best\
    \ ways to conserve power are to minimize communication distance and data sizes\
    \ as\nwell as operate the SNs in the appropriate sleep–active duty cycles using\
    \ a cluster-based\nrouting architecture [9,24,26].\nBeyond the physical installation\
    \ of the SNs at their most suitable in-range locations,\nthe remaining activities,\
    \ such as network construction, event sensing, data management, FM,\nIoT 2023,\
    \ 4\n281\nnetwork maintenance, sleep–active duty-cycle scheduling of SNs for sampling,\
    \ network adapt-\nability to turbulent and scalable conditions, power-optimization\
    \ mechanisms, and network\nreconfiguration, among others, are controlled by the\
    \ associated routing protocol [12,16,17,26,36].\nThis places crucial merits on\
    \ the physical locations of the SNs in the ﬁeld, thorough synthe-\nsis of network\
    \ design factors, and assessment of available routing architectures/techniques,\n\
    since this protocol manages all post-deployment tasks. This can be summarized\
    \ into\nthe core objectives of the routing protocol and its architecture, which\
    \ include power op-\ntimization, self-healing of any faults without the obstruction\
    \ of its normal operation,\nand self-adaptability to all turbulent and scalable\
    \ conditions. From the analysis above,\nwe can derive the critical primary factors\
    \ to consider when designing a routing protocol\nfor Agri-IoT networks, which\
    \ are presented in Figure 9 and grouped into the following\ncategories: SNs speciﬁcations,\
    \ security issues, application-speciﬁc factors, communication\nstandard compatibility\
    \ and capacities, and other auxiliary factors. At the PHY layer level,\nwhich\
    \ is the focus of this tutorial, these critical factors can translate into the\
    \ stipulated core\ndesign objectives, which can be addressed via phase-based multi-objective\
    \ optimization\n(MOO) formulation frameworks [12,23,24,37].\n1/21/22, 10:18 AM\n\
    707.svg\n1. Resource Limitations\n    -e.g. Power, memory,    \n     computation,\
    \ bandwidth,  \n     transmission Range, etc.\nHardware Specification  \nof Agri-IoT\
    \ Device\n1. Routing protocol, network tech. & \n    architecture, and MAC technique\
    \ \n2. Interoperability of standard \n3. Deployment density & uniformity\n4. Routing\
    \ table capacity of SNs\n5. Connectivity issues \nCommunication Standard\n1. Resource\
    \ capacity \n2. Security necessity\n3. Information access type \nSecurity Issues\n\
    \ \n1. Data reporting frequency & trigger\n2. Environmental/field conditions\n\
    \    - Dust concentration, physical  \n      obstructions and landscape\n3. Routing\
    \ architecture & SN density\n4. Post-deployment maintainability\n5. Mobility of\
    \ network participants\n6. Data analysis   \nApplication-defined factors\n \n\
    1. Network Architecture (e.g. flat, hierarchical, location-based)\n2. MOO technique\
    \ of A-IoT functionality (e.g. of MOO metrics:   \n    energy efficiency, connectivity,\
    \ latency, coverage, packet  \n    delivery rate, SNs density & uniformity)\n\
    3. Fault Management (e.g fault detection, fault-tolerance, fault     avoidance)\n\
    4. Adaptability, scalability & control message complexity\n5 Suitability of MAC\
    \ techniques\nRouting Protocol\n1. User interface \n2. Software tools \n3. Sampling\
    \ schedules \n4. SN deployment density\nAuxiliary Factors\nAgri-IoT Network\n\
    Design Considerations\nAffordability\nFigure 9. Principal design factors for Agri-IoT\
    \ networks.\nHardware Speciﬁcations of SNs and BS Agri-IoT Device: The functional\
    \ and re-\nsource capacities of participants’ hardware units must be considered\
    \ before their respective\ntasks in the protocol are assigned. For instance, the\
    \ selected sensors’ quality must suit\nthe type of event information and its accuracy,\
    \ the available communication platforms,\nand the general purpose of the Agri-IoT\
    \ solution. Also, the communication standard must\nsupport the routing architecture\
    \ and SNs’ resource- and deployment-induced limitations.\nThe crucial communication-based\
    \ parameters of the SNs are illustrated in Table 4.\nIoT 2023, 4\n282\nTable 4.\
    \ Comparison of common communication platforms of the WSN sublayer of Agri-IoT.\n\
    Standard/\nNetwork\nPTx/mW\nPRx−elec/mW\nRange\nFreq.\nData Rate/\nNetwork\nEnergy\n\
    Topology\nSize\nBand\nLatency\nType\nBLE/ IEEE\n802.15.1 [6]\nApplication-\ndeﬁnned\n\
    3–10\n2 × 10−14\n10–50 m\n2.4 GHz\n1 Mbps/6 ms\nPAN, WSN\nVery Low\nStar, mesh\n\
    Bluetooth Classic/\nIEEE 802.15.1 [5]\n7\n215\n200 × 10−14\n10–100 m\n2.4 GHz\n\
    1–3 Mbps/100 ms\nPAN\nHigh\nScatternet\nWiFi/ IEEE 802.11\na/c/b/d/g/n [7]\n255\n\
    800–835\n162\n100 m\n5–60 GHz\n1 Mb/s–7\nGbps/50 ms\nLAN\nHigh\nPoint-to-hub\n\
    LoRaWAN/\nLoRaWAN\nR1.0 [6,8]\n104\n25–100\n2 × 10−14\n5–10 km\n868/900 MHz\n\
    0.4–100 Kbps/NA\nWAN\nVery Low\nStar\nSigFox [2,6]\nUndeﬁned\n122\n106\n15 miles\n\
    200 kHz\n100–600 bps\nPAN\nLow\nStar\nZigBee/IEEE\n802.15.4 [2,23]\n64,000+\n\
    36.9–100\n77\n10–20 m\n2.4 GHz\n20–250\nKbps/(20–30) ms\nPAN, WSN\nLow\nP2P, tree,\
    \ star,\nmesh\nNB-IoT,LTE/2G-\nGSM,\n4G-LTE [2,4]\n1000\n200–560\n80\n10–15 km\n\
    2.4 GHz\n200 Kb/s–1\nGbps/1 s\nWAN\nMedium\nCellular system\ncc2420//IEEE\n802.15.4\
    \ [23]\n64,000+\n8.9–36.9\n35.28\n580 m\n2.4 GHz\n20–\n250 Kbps/40 ms\nPAN\nLow\n\
    P2P, tree, star,\nmesh\nXBee PRO [24]\n64,000+\n36.9–63\n6.31 × 10−11\n90 m–1.6\
    \ km\n900 MHz\n20–250\nKbps/40 ms\nPAN, WSN\nLow\nP2P, tree, star,\nmesh\nJennic\n\
    JN5121/IEEE\n802.15.4\n64,000+\n100\n45 × 10−9\n0.4 km\n2.4 GHz\n20–250\nKbps/30\
    \ ms\nPAN, WSN\nLow\nP2P, tree, star,\nmesh\nRFID/ISO\n18000-6C [4,29]\nUndeﬁned\n\
    3000\nunspeciﬁed\n1–5 m\n860–960 MHz\n40–160 Kbps/\n45 ms\nPAN\nLow\nStar\nIoT\
    \ 2023, 4\n283\nCost or Affordability of the Resulting Agri-IoT System: In addition\
    \ to being\ninfrastructure-less, ﬂexible, self-healing, adaptive, and energy-efﬁcient,\
    \ a WSN-based\nAgri-IoT must consist of cost-effective hardware and software components\
    \ so that the\nsystem is affordable for farmers, since existing real-world solutions\
    \ are too expensive and\ncomplicated [1,14]. Additionally, the installation, operational,\
    \ and maintenance costs of\nthe resulting WSN-based Agri-IoT network must be kept\
    \ to a minimum so that it can be\neasily acquired.\nSecurity Issues in Agri-IoT:\
    \ Security is still a challenge in classic IoT systems that\nhandle sensitive\
    \ information, especially during cloud communications. Although Agri-\nIoT networks\
    \ lack the requisite resource capacities in most large-scale, broadcast-based,\n\
    distributed, and infrastructure-less WSN systems to achieve adequate data conﬁdentiality,\n\
    authenticity, integrity, and other security requirements, the security of the\
    \ agricultural\ndata is rarely a priority [2,4]. Nevertheless, the associated\
    \ routing architecture, such as\nthe clustering architecture, has an embedded\
    \ capacity to resolve on-site security issues.\nIn addition, both on-site and\
    \ remote information access types (e.g., via a smartphone or\ndesktop computer)\
    \ must be selected based on solid internal infrastructure and security\nprecautions\
    \ to secure unwanted access to sensitive information.\nThe Application-Speciﬁc\
    \ Factors: As indicated in Figure 9, the application-deﬁned\nfactors vary based\
    \ on the Agri-IoT application, the ﬁeld settings, network maintenance prac-\n\
    tices, intended event routing architecture, and network participants’ mobility,\
    \ among other\nfactors. However, the routing protocol must incorporate all relevant\
    \ operational efﬁciency\nfactors of the routing software design objectives. Since\
    \ the collected ﬁeld data itself cannot\nmake sense without using analytic data\
    \ engines and predictive algorithms in machine learn-\ning, the BS or the application\
    \ layer in the cloud should deﬁne appropriate data-processing\nframeworks to obtain\
    \ accurate, actionable decisions from the collected data.\nCommunication Standards\
    \ of Agri-IoT Devices: The power-constrained WSN sub-\nlayer of Agri-IoT network\
    \ places hard restrictions on operational states of SNs’ radio\ntransceivers,\
    \ code space, and processing cycles as well as memory capacities of SNs to\nenhance\
    \ power savings [9,12,23]. The type of communication technology selected for a\n\
    typical Agri-IoT is the principal predictor of its routing architecture, affordability,\
    \ simplicity,\nadaptability, power-saving capacity, location independence, self-healing\
    \ capacity, and event\ndata quality [12,16]. Consequently, power and routing architectural\
    \ limitations constrain\nthe network design requirements. Despite the aforementioned\
    \ technical challenges on\nthe network’s operational efﬁciency, interconnected\
    \ SNs that form the WSN are expected\nto withstand extra operational disruptions\
    \ caused by unfavorable weather conditions in\nthe ﬁeld [2,4]. Consequently, the\
    \ de facto PHY-layer communication standards for this\nlow-power, low bandwidth,\
    \ and distance-limited communication Agri-IoT devices/SNs\nhave been the energy-efﬁcient\
    \ platforms such as BLE, LoRa, Sigfox, and NB-IoT. Also, a suit-\nable MAC technique\
    \ is imperative in the routing architecture to curb all channel access\nchallenges.\
    \ For instance, the ZigBee/IEEE 802.15.4 standard focuses on the physical and\n\
    the MAC layer speciﬁcations for WSNs, and it also supports the sleep–active or\
    \ duty-cycle\nscheduled operation modes of SNs to enhance energy savings in centralized\
    \ or mesh-based\narchitectures. BLE does likewise in the highly endowed cluster-based\
    \ routing architecture.\nConsequently, Agri-IoT network designers must make the\
    \ most appropriate and critical de-\ncisions regarding the network’s communication\
    \ requirements when designing the routing\nprotocol. Using Table 4, WSN-based\
    \ Agri-IoT designers can make realistic design decisions\nregarding energy-efﬁcient\
    \ multihop routing, architectural requirements of routing proto-\ncol, bandwidth,\
    \ routing table capacities, total communication cost, and the desired MAC\ntechnique.\
    \ Additionally, the physical conditions within the agricultural environment such\n\
    as atmospheric dust concentration, physical obstruction to wireless signal transmissions,\n\
    and the terrain need to be considered.\nAuxiliary Factors and Available Software\
    \ Tool: Finally, the auxiliary factors can be\nnon-exhaustive depending on the\
    \ designer’s ﬁnancial capacity, user interface, information\nrequisition model,\
    \ cloud activities, operational expectations, and the available software\nIoT\
    \ 2023, 4\n284\ntools. Additionally, an assortment of PHY-Layer design software\
    \ tools for Agri-IoT exper-\niments (thus, in both simulations and real-world\
    \ testbed deployments) that can be used\ninclude NS-3 [9,38], OMNeT++, MATLAB/Simulink\
    \ [9,12,39], Python [16], PAWiS [39],\nGloMoSim/QualNet [39,40], OPNET [12,39],\
    \ SENSE [37,39], J-Sim [39], Ptolemy II [39],\nShawn [9,39], and PiccSIM [12,39,41],\
    \ among others. The key features that are frequently\nconsidered when selecting\
    \ any of these software platforms include Python or MAT-\nLAB/Simulink compatibility\
    \ for software model and hardware prototype integration\nduring real-world operation,\
    \ compatibility with low-power communication standards\n(e.g., BLE, LoRa, ZigBee,\
    \ and SIGFOX), operating system support, programming lan-\nguage implementation,\
    \ the density of simultaneously simulated or ﬁeld-deployed SNs,\nco-simulation\
    \ with other hardware, documentation, easy access to upgraded versions,\nand installation\
    \ challenges [39]. MATLAB/Simulink and Python are the most commonly\nused experimental\
    \ tools, since these software tools are well-equipped with the stipu-\nlated features.\n\
    4. Unique Characteristics and Challenges of WSN Sublayer of Agri-IoT\nUnlike the\
    \ traditional IoT, which generally relies on ﬁxed hardware to route network\n\
    trafﬁc, a WSN sublayer of Agri-IoT combines automated sensing, computation, actua-\n\
    tion, and wireless communication tasks into the SNs that are spatially distributed\
    \ across\nthe farm to autonomously form an infrastructure-less WSN [31]. A node\
    \ may perform\nadditional tasks such as local data processing (data aggregation),\
    \ network construction,\ndata redundancy, error control, data routing (e.g., in\
    \ multihop networks), and network\nmaintenance practices based on the network\
    \ size, application speciﬁcity, and associated\nrouting techniques. Also, the\
    \ WSN can be equipped to observe heterogeneous conditions\nsuch as temperature,\
    \ humidity, sound, color, location, light, vibration, and motion, using a\nwide\
    \ variety of sensors contained within a task-scalable SN. Therefore, assuming\
    \ that the\naccuracy and precision of event data in upper layers are preserved,\
    \ the Agri-IoT’s lifespan\nand its operational efﬁciency are rooted in the WSN’s\
    \ robustness. Thus, a deeper contextual\nexegesis into the design and maintenance\
    \ of this sublayer is imperative. As opposed to con-\nventional IoT and wireless\
    \ ad hoc communication networks, the operational efﬁciency of\nthe WSN sublayer,\
    \ as well as Agri-IoT, hinge upon some application-speciﬁc characteristics\nand\
    \ resource-constrained factors such as:\n•\nHigher SN Deployment Densities: Generally,\
    \ SNs are densely deployed in either a deter-\nministic or random manner to provide\
    \ the desired redundancies, spatial variability of\nsoil, topography, distributed\
    \ monitoring and processing, accurate and precise event\nreporting, and fault\
    \ tolerance. However, this mostly leads to undesirable transmission\noverlaps,\
    \ data redundancies from the simultaneous reporting of the same data, routing\n\
    interferences, and packet collisions due to connectivity issues and the coexistence\
    \ of\ncommon standards in the ISM band [42].\n•\nLimited Power Supply: The SNs\
    \ are frequently battery-powered, which does not only\nconstrain their data transmission\
    \ rate, computational capabilities, and communication\ndistance but also subjects\
    \ Agri-IoT to possible SN-out-of-service and data outlier\nfaults due to rapid\
    \ power depletion beyond certain thresholds [26,43]. Consequently,\nnetwork power\
    \ management through data-management-related, architectural-related,\nand communication-related\
    \ parameters has been one of the principal research focuses\nin WSN-based IoT\
    \ applications to improve network lifetime.\n•\nFault Management (FM) (i.e., fault\
    \ detection, fault tolerance, or fault avoidance): The\nresource-constrained WSN\
    \ is highly vulnerable to faults and failures due to high\ndeployment densities\
    \ and a lack of post-deployment maintenance services [25]. Al-\nthough faults\
    \ are inevitable in Agri-IoT for the stipulated reasons, their occurrence\nrates\
    \ and effects on the network’s functionality can be minimized, avoided, or tolerated\n\
    without hindering the normal functionality of the network if the associated WSN’s\
    \ rout-\ning protocol is well-equipped with efﬁcient self-healing and fault-avoidance\
    \ (power-\nsaving) mechanisms [12].\nIoT 2023, 4\n285\n•\nSelf-Adaptability and\
    \ Scalability: Although WSNs are application-speciﬁc, the topologi-\ncal dynamism\
    \ is inevitable due to node failures, node mobility, and scalable conditions.\n\
    Therefore, the associated routing protocol and network architecture must adapt\
    \ to\nthese dynamic conditions using apt auto-reconﬁguration and reactive multihop\
    \ event\nrouting techniques [44,45].\n•\nNetwork Architecture: The underlying\
    \ routing protocol of the WSN sublayer constructs\na network architecture that\
    \ can be ﬂat, hierarchical (e.g., clustering, chain-based,\nand tree architectures)\
    \ or location-based. This routing architecture prescribes the\npossible measures\
    \ to achieve efﬁcient local data processing, network maintenance,\nscalability,\
    \ minimized communication overhead, prolonged network lifespan, and re-\nduced\
    \ network management complexities [25,36]. Therefore, a suitable network\ntopology\
    \ indirectly determines the resulting network’s ﬂexibility, scalability, reliability,\n\
    communication strategy/costs, and the quality of the reported event data [12].\n\
    •\nMostly Requires On-site Actuation: Regardless of where data are managed in\
    \ a typical\nWSN-based Agri-IoT, the actionable decision signal must be sent to\
    \ execute on-farm\nactuation.\nProposed Design Objectives of WSN-Based Routing\
    \ Protocols for Agri-IoT and\nRealization Mechanisms\nFrom the systematic evaluation\
    \ of the unique characteristics and challenges of the\nWSN sublayer, a three-tier\
    \ cluster-based framework that constitutes the condensed ex-\npected core design\
    \ objectives and their corresponding remedial strategies of WSN-based\nrouting\
    \ protocols for Agri-IoT applications is demonstrated in Figure 10. Suppose the\
    \ corre-\nsponding remedies in Figure 10 are implemented in the associated routing\
    \ protocol. In that\ncase, the desired power optimization, self-healing, and auto-adaptability\
    \ expectations can\ntransitively yield the desired event data quality and operational\
    \ stability requirements or\nthe global performance expectations of the resulting\
    \ network.\nEvent Sensing\nCommunication & Nodes'  \nActivity Schedule issues\n\
    Data Computation Strategy\nFault  \nManagement \nPower \nOptimization\nSelf-Healing\n\
    Self-Reconfigurability\nMultihop Routing\nFault Detection\nFault Tolerance/Self-Healing\n\
    Fault-Avoidance\nDesign Objectives of\nAgri-IoT Routing\nProtocols\nControl Message\
    \ Complexity\n*Local Processing\n*Local Network Administration\ne.g., - Network\
    \ construction phase\n (CH selection, cluster formation)\n     -  Network maintenance\n\
    *Local or Self-fault Detection\n*Local Processing \n  e.g. Data aggregation by\
    \ CHs \n*Event Data Redundancy Control \n*Event Data Management Techniques \n\
    \  e.g., Representative event reporting \n*Duty-Cycling Strategies \n  -Role rotation,\
    \ sleep-active\n*Communication Mode\n  -Single-hop, multihop\n*Connectivity Strategies\
    \ \n -Optimal density and uniformity of\nSNs \n*MAC Techniques\n -single channel/multichannel\
    \ MAC\n*Data Outlier Fault\n*SN-Out-of-Service Fault\nRouting\nArchitecture- \
    \ \nbased\nScalability & \nAdaptability\nFigure 10. Proposed design objectives\
    \ and strategies of WSN-based Agri-IoT routing protocols.\nThe importance of this\
    \ three-tier framework can be expanded on as follows:\n•\nAn adaptive and scalable\
    \ WSN-based routing protocol, as proposed in Figure 10, normally\nconstructs a\
    \ routing architecture that supports multihop routing, self-reconfiguration,\n\
    self-healing, and local network administration at a minimal routing table size,\
    \ commu-\nnication cost, and and control message complexity requirement. Since\
    \ communication\nIoT 2023, 4\n286\nis the principal power consumer, the operation\
    \ of the routing protocol must invlove\nfewer control messages. Also, it must\
    \ adapt to network turbulence due to SN failures.\nThe cluster-based architecture\
    \ exhibits the highest potential compared to related ar-\nchitectures [9,16,17,26].\
    \ The cluster heads (CHs) efﬁciently coordinate these activities\nby registering\
    \ and tolerating all dynamism resulting from SN-out-of-service faults,\nincreasing\
    \ the network size and SN density.\n•\nDue to the high vulnerability of SNs to\
    \ faults and failures, it is imperative to deploy\nsuitable FM techniques that\
    \ can detect, tolerate, or avoid possible root faults such\nas SN-out-of-service\
    \ and data outliers [25]. The adaptive clustering approach can\neffectively resolve\
    \ SN-out-of-service faults, while the threshold-based decision theory\nat the\
    \ local nodes and global levels can be suitable candidates for event data outlier\n\
    detection and correction in the PHY layer. Since power mismanagement is the root\n\
    cause of most faults and failures, the best fault-avoidance techniques optimize\
    \ the\nnodes’ power consumption rates.\n•\nFigure 10 also outlines the suitable\
    \ measures for power optimization in the WSN\nsublayer of Agri-IoT. In clustering\
    \ approaches, power consumption in the constrained\nWSN can be managed via message\
    \ complexity control, connectivity-related metrics,\nand communication-related\
    \ parameters by exploiting the clustering architecture [46].\nIn addition to local\
    \ data processing (data aggregation, data redundancy, and error\nchecks) and local\
    \ network administration (FM, adaptability to network dynamics),\nsuitable MOO\
    \ and multihop routing frameworks can be derived using the clustering\narchitecture,\
    \ total communication cost, and optimal cluster quality metrics to serve as\n\
    a design optimization guide for the simulation and real-world implementations\
    \ of the\nWSN phase of Agri-IoT.\nTo achieve the expectations in Figure 10, there\
    \ is a need for an architecture-speciﬁc\nmulti-objective assessment of the WSN’s\
    \ design cycle; from this, the associated parameters\nand theoretical models can\
    \ be derived and then theoretically optimized and validated\nexperimentally. A\
    \ novel holistic MOO framework can help realize these expected goals in\nboth\
    \ simulation and real-world Agri-IoT implementations. Consequently, there exists\
    \ the\nneed to carry out a systematic survey and assessment on existing routing\
    \ architectures, FM\nschemes, and routing protocols, and how these evolved in\
    \ existing real-world realization\ntestbeds of Agri-IoT. Such an in-depth literature\
    \ synthesis can help assess these qualitative\nperformance indicators constituting\
    \ the root QoS metrics in Figure 10 as well as deduce\napplication-speciﬁc guidelines\
    \ for improving CA-IoT networks using a precision irrigation\nsystem as a case\
    \ study.\n5. State of the Art on Routing Protocols for WSN-Based Agri-IoT Applications\n\
    In Agri-IoT, it is not simply a matter of applying IoT to a farm; contextual due\
    \ diligence\non architecture, communication standard, cost, actuator, performance\
    \ stability, control,\nand environmental impacts augment the routing protocol\
    \ requirements. This section\npresents a systematic synthesis of WSN-applicable\
    \ routing protocols under network ar-\nchitecture, the route discovery process,\
    \ and protocol operation as illustrated in Figure 11.\nTo help Agri-IoT designers\
    \ make well-informed decisions concerning architectural selection,\nwe classiﬁed\
    \ the canon protocols based on routing architecture, route-discovery process,\n\
    and operations in order to uncover their strengths, weaknesses, and contextual\
    \ reasons why\nthey can be adopted for Agri-IoT applications. Generally, event\
    \ routing in every protocol\ncan either be source-initiated or destination-initiated,\
    \ and the optimal path selection from\nthe constructed routing architecture can\
    \ also be broadcast-based, probabilistic, cluster-\nbased, or parameter-determined\
    \ using location-related, weight-based, and content-based\nmetrics [13]. Also,\
    \ routing protocols must commonly resist link failures using mechanisms\nthat\
    \ ensure balanced network-wide power depletion rates, energy-efﬁcient multihop\
    \ rout-\ning, and effective implementation of the indispensable QoS metrics presented\
    \ in Figure 10.\nThe related routing protocols can be classiﬁed as illustrated\
    \ in Figure 11.\nIoT 2023, 4\n287\nfile:///C:/Users/emman/Downloads/704.svg\n\
    IoT/WSN\nRouting\nProtocols\nNetwork  \nArchitecture\nProtocol  \nOperation\n\
    Route Discovery  \nProcess\n1. Flat-based\n2. Architectural-based\n3. Location-based\n\
    1. Reactive\n2. Proactive\n3. Hybrid\n1. Negotiation-based\n2. Multipath-based\n\
    3. Query-based\n4. QoS-based\n5. Coherent-based\nFigure 11. Taxonomy of WSN-based\
    \ routing protocols of Agri-IoT.\n5.1. Architectural-Based Routing Protocols\n\
    This class of protocols presented in Figures 11 and 12 can be sub-grouped into\
    \ ﬂat-\nbased centralized or direct communication and decentralized [47] (e.g.,\
    \ ﬂooding/peer-\nto-peer/graphical/mesh-like architectures), hierarchical/cluster-based/tree\
    \ architectures,\nand the location-based protocols [37].\n1/21/22, 11:11 AM\n\
    200.svg\nBS\nInter-cluster Communication  (e.g., BLE, SigFox, LoRa)\nIntra-cluster\
    \ Communication (e.g., BLE, SigFox)\nCH\nMN\nSensing Range\nSNs\nBS\nBS\nInternet\
    \ +IoT Storage  \n      Cloud + Data Analytic Engines\nSN\n Decentralized (Flooding)Routing\
    \ Architecture\nCentralized Routing Architecture\nCluster-based Routing Architecture\n\
    User with Web or Mobile  \nApp. for Remote  \nMonitoring & Control\nFigure 12.\
    \ Sample network architectures: centralized-data-centric, cluster-based, and graph/ﬂooding-\n\
    based architectural frameworks of WSN sublayer.\nIoT 2023, 4\n288\nThe centralized\
    \ protocols route data to the BS via single-hop routing, while the ﬂooding\nand\
    \ graph-based protocols ﬂood data through multihop routing. The graph-based routing\n\
    protocols construct a reactive or proactive graphical routing architecture with\
    \ G(V, E)\nwhere a node and path represent the vertex and edges, respectively.\
    \ This method relies\non resource-intensive routing techniques from graph theory\
    \ used in classic IoT and ad\nhoc networks to transmit event data to the BS. In\
    \ contrast, the clustering/tree topology\ndepicted in Figure 12 groups the SNs\
    \ into either static or dynamic clusters, each with an\noptimally selected CH\
    \ to minimize the communication distances of the cluster’s member\nnodes (MN).\
    \ The CH is then tasked with aggregating the received readings from its MNs,\n\
    executing error and measurement redundancy checks, and communicating directly\
    \ (single-\nhop routing) or via a relay CH (RCH) using a multihop routing technique\
    \ to the sink\nnode or BS. However, the RCHs must be assigned fewer MNs to balance\
    \ the network’s\npower depletion rates, since aggregated packet forwarding inﬂicts\
    \ extra energy burden\non the RCHs [37]. Additionally, the CH can be equipped\
    \ to perform extra roles such as\nFM, coordination of the reclustering process,\
    \ network maintenance, relaying of aggregated\npackets in large-scale networks,\
    \ and management of network dynamism [12]. In general,\ncluster-based routing\
    \ protocols differ in terms of CH selection methods and coincide in\nterms of\
    \ intra-cluster and inter-cluster multihop routing, local data processing by the\
    \ CHs,\nand CH role rotation [47], which ensure balanced network-wide power depletion,\
    \ prevent\nabrupt power exhaustion, and lead to exponential energy savings [37].\n\
    Although the ﬂat-based architectures, such as centralized and ﬂooding (see Figure\
    \ 12),\ncan be easily implemented in real-world small-scale Agri-IoT networks,\
    \ they suffer severe\npacket collisions, communication bottlenecking at the BS,\
    \ and high inaptness for scalable\nor turbulent large-scale WSNs where energy\
    \ efﬁciency is a priority. Again, an optimized\nclustering approach can provide\
    \ an ideal topology for addressing the proposed expectations\nin Figure 10, and\
    \ it can also offer extra beneﬁts such as minimized communication cost,\nstabilized\
    \ network topology, efﬁcient load management, improved network maintenance,\n\
    and improved network trafﬁc and channel access management [37,48]. The main challenge\n\
    of the clustering method is how to achieve the desired cluster quality (e.g.,\
    \ optimal cluster\ncount and cluster size) so that the computational, bandwidth,\
    \ memory, and routing table\ncapacities of the resource-constrained CHs are not\
    \ exceeded. Typical examples of clustering\nprotocols are the LEACH family of\
    \ protocols, which include RCEEFT, ESAA, DEEC, SEP,\nand PEGASIS in [12].\nIn\
    \ location-based routing architectures, routing decisions are made either reactively\n\
    (e.g., Ad hoc On-demand Distance Vector—AODV) or proactively (e.g., RPL—Routing\n\
    over Low-Power and Lossy Networks protocol), using the SNs’ location information.\
    \ This\nnormally results in a decentralized, graphical architecture. Since the\
    \ SNs that form the\nWSN are spatially deployed in the ﬁeld without any IP-addressing\
    \ schemes, location\ninformation is needed in order to establish communication\
    \ between the nodes in a location-\nbased architecture. The location information\
    \ helps eliminate unwanted transmissions by\ncollecting data from a speciﬁc region\
    \ of interest. This architecture suffers from routing\ndelays, high infrastructural\
    \ cost, extreme difﬁculties in deployment and management,\nand high energy waste\
    \ due to SNs’ long idling durations. However, they are the most\ncommonly used\
    \ protocol in existing ZigBee-based Agri-IoT testbed solutions [1,10,14,17].\n\
    Since this approach yields non-energy-aware architectures, it is not suitable\
    \ for Agri-IoT\napplications [12].\nIt is evident from the above discussions that\
    \ Agri-IoT-based network architectures\nmust be deﬁned by the associated routing\
    \ protocol using the design requirements in Figure 9\nas well as the application-deﬁned\
    \ requirements [49] in order to enhance the performance\nexpectations in Figure\
    \ 10. In addition, the routing architecture must not compromise on\nthe quality,\
    \ precision, and accuracy of the event information. It must be in unison with\
    \ the\napplication-speciﬁc requirements to address possible deployments- and network-induced\n\
    challenges, such as network turbulence and SN mobility.\nIoT 2023, 4\n289\n5.2.\
    \ Route Discovery-Based Protocols\nAs shown in Figure 11, route discovery-based\
    \ protocols focus on when the route for\ndata transmission is built and can be\
    \ grouped into proactive, reactive, and hybrid protocols.\nIn proactive routing\
    \ protocols, the routes are pre-created before they are needed.\nThese protocols\
    \ are table-driven, since every node stores a large routing table containing a\n\
    list of all possible destinations, next-hop neighbors to those destinations, and\
    \ the associated\ncosts of all next-hop options. Proactive protocols such as the\
    \ RPL and the APTEEN family of\nprotocols [15] make local routing decisions using\
    \ the routing table’s content. For instance,\nthe RPL operates as a distant-vector\
    \ protocol for IPv6 low-power devices, utilizes the\nZigBee/IEEE 802.15.4 standard\
    \ on established IP infrastructure, and also supports the\n6LoWPAN adaptation\
    \ layer. RPL creates a multihop tree routing hierarchy of SNs, such\nthat nodes\
    \ can send data through their respective parent nodes to the BS/sink node in a\n\
    ﬂooded manner (Figure 12). Similarly, the BS or sink node can send a unicast message\
    \ to a\nspeciﬁc SN in order to complete a bidirectional operational framework\
    \ of RPL. The optimal\ncommunication costs and routes are estimated by ranking\
    \ the associated objective function\n(OF) metrics, which can be single-objective\
    \ optimization, SOO metrics, or MOO metrics.\nThis routing over LLNs (RoLL) restricts\
    \ densely deployed and resource-limited SNs to\ncommunicate using peer-to-peer\
    \ or extended star network topologies [13]. Technically,\nRPL builds a directed\
    \ acyclic graph (DAG) with no outgoing edges from the root element\n(e.g., BS)\
    \ to eliminate loops. RPL is the primary underlying routing protocol in most failed\n\
    Agri-IoT testbed attempts. Although the proactive or RPL-based family of protocols\
    \ are\nrobust, reliable, scalable, and can relatively operate at minimized control\
    \ messages with the\nhelp of timers, they are not suitable for Agri-IoT networks\
    \ due to these technical challenges:\n•\nThe core of RPL/proactive protocols still\
    \ suffers from key challenges such as en-\nergy wastage, a lack of adaptability/scalability,\
    \ reliability, congestion, and security\nissues. Speciﬁcally, the energy expended\
    \ by RPL-inherited protocols to create routes\n(e.g., establish and maintain routing\
    \ tables) and transmit data can be too high for\nresource-constrained SNs in recent\
    \ Agri-IoT applications.\n•\nThe underlying technology of RPL (e.g., ZigBee, 6LoWPAN,\
    \ or IPv6) was designed\nfor energy-sufﬁcient devices with high processing and\
    \ memory capacities. Therefore,\nRPL is inapt for typical resourced-constrained\
    \ Agri-IoT networks (refer to Table 5).\n•\nThey require costly ﬁxed IP infrastructural\
    \ supports and utilize the centralized routing\narchitecture, which becomes practically\
    \ impossible to manage as the network scales.\nConversely, the source-initiated\
    \ reactive or on-demand routing protocols only create\nthe routes on-demand by\
    \ a source to send data to a receiver. Reactive protocols (e.g., Ad hoc\nOn-demand\
    \ Distance Vector, AODV Protocol [13]) have no speciﬁc procedures for creating\n\
    and updating routing tables with route information at regular intervals. For instance,\n\
    the AODV is a loop-free, self-starting, and reactive routing protocol meant for\
    \ LLNs\n(e.g., WSN-based IoT) that are characterized by node mobility, link failures,\
    \ and packet\nlosses. AODV mainly consists of the route discovery process (RREQ\
    \ and RREP messages)\nand route maintenance (RERR and HELLO messages). Although\
    \ reactive or AODV-based\nprotocols can adapt to network dynamics and eliminate\
    \ periodic updates, the associated\nﬂooding-based route–search process incurs\
    \ severe overheads resulting in high control\nmessage complexity, high route acquisition\
    \ latency, and high energy wastages due to longer\nSN idling periods. Consequently,\
    \ these protocols are unsuitable for power-constrained\nWSN-based Agri-IoT applications.\n\
    The hybrid-based routing protocols merge the features of both reactive and proactive\n\
    routing processes. However, hybrid protocols such as APTEEN [13] also require\
    \ expensive\nﬁxed infrastructural support, which renders them unsuitable for Agri-IoT,\
    \ even if the\ncombined merits of reactive and proactive protocols are exploited.\n\
    A comparative assessment of the strengths and weaknesses of the parent WSN-based\n\
    routing protocols for Agri-IoT applications is illustrated in Table 5.\nIoT 2023,\
    \ 4\n290\nTable 5. Comparison of some cardinal hierarchical WSN-based routing\
    \ protocols for Agri-IoT in state\nof the art.\nProtocol\nTopology\nStrength\n\
    Weakness\nSuitability: Low-Power\nWSN Sublayer of Agri-IoT\nLEACH and\nLEACH-\n\
    inherited [9,12,21]\nTree or\nCluster-based\n•\nHigh power savings,\n•\nFM and\
    \ adaptability,\n•\nLoad balancing,\n•\nLess resource\ndemanding than RPL,\nAODV\n\
    •\nDifﬁcult to attain desired\ncluster quality\nSuitable (optimal cluster\nquality\
    \ yet required)\nRPL and\nRPL-Inherited [15]\nGraphical\n•\nHigh adaptability,\n\
    •\nHigh robustness,\n•\nMinimized control\nmessages,\n•\nSuitable for small-scaled,\n\
    power-sufﬁcient\nnetworks\n•\nHigh energy wastages,\n•\nHigh storage\nrequirements,\n\
    •\nLow reliability,\n•\nHigh congestion rates,\n•\nUnsuitable for large-scale\n\
    turbulent networks,\n•\nMore resource-demanding\nthan AODV and\nLEACH-based\n\
    methods [50,51]\nUnsuitable (high resource\ndemanding underlying\ntechnology,\
    \ 6LoWPAN,\nand routing tables)\nAODV and AODV-\ninherited [13]\nMostly graphical\n\
    •\nHigh adaptability,\n•\nSuitable for small-scaled,\npower-sufﬁcient\nnetworks\n\
    •\nHigh control messages,\n•\nHigh energy wastages [28],\n•\nHigh-resource-demanding\n\
    Unsuitable (extremely high\ncontrol message complexities\nduring route construction\
    \ and\nmaintenance)\n5.3. Operation-Based Routing Protocols\nFinally, routing\
    \ protocols can be classiﬁed based on the operation or communication\nmodel employed,\
    \ which may include:\n•\nNegotiation-Based Protocols: These protocols exchange\
    \ negotiation messages or use\nmeta-data negotiations between neighboring SNs\
    \ before the actual data transfers to\nreduce redundant transmissions in the network.\
    \ A typical example is the SPIN family\nof protocols [13].\n•\nMultipath-Based\
    \ Protocols: These use multiple routes simultaneously to accomplish\nhigher resilience\
    \ to route failure (i.e., fault tolerance) and load balancing.\n•\nQuery-Based\
    \ Routing Protocols: These are receiver-initiated protocols whereby a desti-\n\
    nation node broadcasts a query to initiate a data-sensing task from a node through\
    \ the\nnetwork. A node having the data being queried sends it in response to the\
    \ query.\n•\nCoherent and Non-Coherent Protocols: The coherent routing method\
    \ forwards data for\naggregation after a minimum local pre-processing. However,\
    \ in non-coherent routing,\nthe nodes locally process the raw data before routing\
    \ to the BS for further processing.\n•\nQoS-Based Routing Protocols: These protocols’\
    \ purpose is to satisfy a speciﬁc QoS metric\nor multiple QoS metrics such as\
    \ low latency, energy efﬁciency, or low packet loss.\nThese protocols ensure a\
    \ balance between energy consumption and data quality in\nevery event-reporting\
    \ task.\nIn addition to route architectural construction and data transmission,\
    \ efﬁcient MAC\nmust be embedded in the routing protocol to manage the wireless\
    \ medium access and the\nduty-cycle/sampling schedules of the deployed SNs in\
    \ Agri-IoT networks. As opposed\nto classic IoT, the MAC techniques in Agri-IoT\
    \ are architecture-deﬁned by the associated\nrouting protocol to meet the energy\
    \ efﬁciency requirements of the network via channel\naccess management (CAM) and\
    \ the moderation of the active–sleep duty cycles of the\ndeployed SNs to save\
    \ extra energy. The next subsection presents a concise overview of\nMAC techniques\
    \ and their roles in WSN-based Agri-IoT networks.\n5.4. MAC Techniques and Requirements\
    \ for Agri-IoT\nNext to node deployment, the routing protocol deﬁnes the network\
    \ architecture and\nselects a suitable MAC technique and a communication pattern\
    \ for the routing architec-\nture. Unlike classic IoT, requirements for Agri-IoT\
    \ applications include a low control\nIoT 2023, 4\n291\nmessage complexity and\
    \ low latency MAC technique that moderates sampling schedules,\naccess to a shared\
    \ medium, transceiver operation modes, (e.g., packet transmission and\nreception,\
    \ retransmission, collision, over-hearing, overhead handling, and idle listening)\n\
    active–sleep duty cycles of the deployed SNs, and transceiver channels. Thus,\
    \ an MAC\nprotocol for WSN-based Agri-IoT applications must be architecture-speciﬁc\
    \ and adaptive\nto network dynamics such as data transmission errors, interferences/packet\
    \ collisions,\nand regular interfacing of the active–sleep duty-cycled schedules\
    \ of the SNs’ transceiver\nstates (e.g., transmitting state, receiving state,\
    \ idle state, and sleep state [52]) during packet\ntransmission and reception\
    \ in order to improve network throughput, energy efﬁciency,\nlatency, and other\
    \ QoS metrics.\nUnlike MAC protocols for classic IoT, an efﬁcient MAC technique\
    \ for Agri-IoT must\nensure exponential energy savings via channel assignment\
    \ management (CAM) and active–\nsleep duty-cycle coordination in both time and\
    \ channel perspectives. Based on these\ncommon dual tasks of Agri-IoT-based MAC\
    \ (thus, duty-cycle optimization—DCO and\nchannel access management—CAM), existing\
    \ IoT-based MAC techniques can be classiﬁed\nas illustrated in Figure 13 and the\
    \ state of the art in Table 6.\nfile:///C:/Users/emman/Downloads/14.svg\nFunctionality-based\n\
    Taxonomy of MMAC \nProtocols\nDuty-Cycle \nOptimization\nChannel  \nAssignment\
    \ \nManagement\n1. Synchronous\n2. Asynchronous\n3. Hybrid\n1. Contention-based\n\
    2. Scheduled-based\n3. Hybride\n1. Fixed Channel Assignment\n2. Semi-Dynamic Channel\
    \ Assignment\n3. Dynamic Channel Assignment\nHydrid (Required for \nWSN-based\
    \ Agri-IoT)\nSensing & Farm Monitoring\nSmart Control\nSmart Analysis & \nResource\
    \ Planning\nAgri-IoT-Based Farm Monitoring and control cycle.\nBLE\nZ-Wave\nWi-Fi\n\
    ZigBee\nFarm Management Tools/Technologies\nFigure 13. Proposed functionality-based\
    \ MAC classiﬁcation framework.\nThe CAM role eliminates packet collisions, overhearing,\
    \ and over-emitting to ensure\nthe desired functional balance, while the DCO task\
    \ minimizes idle listening. A comparative\nassessment of related MAC methods used\
    \ in recent WSN-based Agri-IoT applications in\nTable 6 afﬁrms the need for further\
    \ research on the functionality balance between DCO and\nCAM as well as a context-based\
    \ MMAC approach for the LEACH family of protocols used\nin Agri-IoT applications.\n\
    IoT 2023, 4\n292\nTable 6. Summary of state of the art on duty-cycle and CAM MMAC\
    \ protocols.\nName\nMain Task\nApplication\nWeakness\nApproach\nOverhead\nSync/Async\n\
    S-MAC, T-MAC,\nDS-MAC [53,54]\nDCO\nEvent-driven with long idle\nlistening times,\
    \ collision-prone\nHigh PC, complexity, latency\nContention-based, distributed\n\
    MAC\nRTS, CTS, ACK, SYNC\nSync\nX-MAC [55]\nDCO\nHigh energy savings, throughput,\n\
    collisions, delays\nHigh complexity, higher PC, high\ncollisions\nContention-based,\
    \ distributed\nMAC\nPreamble\nAsync\nLA-MAC [56] Inherits\nX-MAC [55]\nDCO\nMore\
    \ energy savings than X-MAC,\nthroughput, scalability collisions,\nlow delays\n\
    High complexity, weak collision\ncontrol measures\nContention-based, distributed\n\
    MAC\nPreamble\nAsync\nB-MAC [57]\nDCO\nDelay-tolerant, high energy savings,\n\
    throughput, DDR more than\nS-MAC,\nHigh complexity, weak collision\ncontrol measures,\
    \ low throughput\nContention-based, distributed\nMAC (CSMA)\nPreamble length\n\
    Async\n(PEDAMACS) [58]\nDCO with collision\navoidance\nEvent-driven, energy-saving\n\
    High computational complexity,\nimpracticable\nSchedule-based, centralized MAC\n\
    RTS, CTS, ACK, SYNC,\nlearning\nTight Sync\nPW-MAC [59]\nDCO\nLow delay, long\
    \ idle time\nHigh complexity\nContention-based, distributed\nMAC\nBeacon\nAsync\n\
    Cluster-based time\nsynchronization [60]\nDCO\nHigh energy savings\nHigh computational\
    \ complexity\nSchedule-based, cluster-based,\ndistributed MAC\nSchedule, CHs’\
    \ formation\nTight Sync\nLEACH [61]\nDCO and CAM\nPeriodic sampling surveillance,\n\
    energy balance, savings\nHigh complexity, weak collision\ncontrol measures\nSchedule-based,\
    \ cluster-based,\ndistributed MAC\nSchedule, CHs’ selection\nTight Sync\nPRIMA\
    \ [62]\nDCO and CAM\nPeriodic sampling/surveillance,\nbalanced energy savings\n\
    High complexity, weak collision\ncontrol measures\nSchedule-based, cluster-based,\n\
    distributed MAC\nSchedule, CHs’ selection\nTight Sync\nWiseMAC [63]\nDCO\nHigh\
    \ energy savings, collision,\nhidden terminal problem, poor duty\nschedule\nHigh\
    \ complexity, weak collision\ncontrol measures, high PC\nHybrid, distributed MAC\n\
    Long wake-up preamble\nSync\nAdvanced WiseMAC [64]\nDCO\nHigher energy savings\
    \ than\nWiseMAC, collision, hidden\nterminal problem\nHigh complexity, weak collision\n\
    control measures, poor duty\nschedule\nHybrid, distributed MAC\nShorter wake-up\
    \ preamble\nthan WiseMAC\nSync\nWideMAC [65]\nDCO\nWider duty-cycle ranges, aperiodic\n\
    or periodic Tx, higher energy\nsavings, low memory requirements\nWeak collision\
    \ control measures\nHybrid, distributed MAC\nPreamble but short\nSync\nIoT 2023,\
    \ 4\n293\nTable 6. Cont.\nName\nMain Task\nApplication\nWeakness\nApproach\nOverhead\n\
    Sync/Async\nEM-MAC [66]\nCAM\nHeavy trafﬁc, delay-tolerant, hidden\nterminal problem\n\
    Prediction accuracy depends on the\naccuracy pseudorandom function\nSchedule-based,\
    \ predictive-based,\ndynamic CAM, distributive MAC\nInitial preamble\nAsync\n\
    MCAS-MAC [67]\nCAM\nHigh energy savings, latency, low\nidle listening\nEnergy\
    \ efﬁciency decreases with\nhigh trafﬁc densities (high DDR)\nSchedule-based,\
    \ distributed MAC\nPreamble\nAsync\nAMMAC [68]\nCAM and DCO\nHigh energy savings,\
    \ DDR\nTime drift will affect accuracy\nContention-based, distributed\nMAC\nRequires\
    \ asynchronous\nmodiﬁcations of duty cycles\nAsync.\nLL-MCLMAC [69]\nCAM\nImproved\
    \ end-to-end delay and\nthroughput, low trafﬁc with two\ntime-slots\nData Tx on\
    \ same control channel,\nsusceptible to co-channel or adjacent\nchannel interference\n\
    Semi-dynamic schedule-based,\ndistributed MAC\nCommon control channel\nnotiﬁcation\n\
    Async\nMC-LMAC [70]\nCAM\nScalable WSNs, collision avoidance\nHigh delays due\
    \ to dynamic channel\nswitching\nDedicated channel control,\ndynamic channels\
    \ switching,\nschedule-based, distribute d MAC\nCommon control channel\nnotiﬁcation\n\
    Async\nIoT 2023, 4\n294\n5.5. Overall Perspective\nThis section systematically\
    \ surveyed core Agri-IoT-based routing protocols and evalu-\nated the parent protocols\
    \ (i.e., RPL, AODV, and LEACH/cluster-based families of protocols)\nfor classic\
    \ WSN-based IoT networks, of which LEACH-based methods are the best candi-\ndates\
    \ for the resource-limited WSN-based Agri-IoT. However, the RPL and AODV have\n\
    received more research considerations in terms of realizations in both simulations\
    \ and prac-\ntice [9,12,21]. Although the cluster-based architecture has unique\
    \ endowments for realizing\nthe proposed expectations in Figures 2 and 10, it\
    \ lacks an in-depth design synthesis in the\ncurrent state of the art that can\
    \ uncover its contextualized performance optimization modal-\nities for real-world\
    \ Agri-IoT applications. In addition, the deployment requirements with\ntrending\
    \ technologies such as BLE, LoRaWAN, SigFox, 5G, LoRa via Satellite, and NB-IoT\n\
    under both simulation and real-world operational conditions is imperative. Consequently,\n\
    the following sections present in-depth overviews on FM, the benchmarking of WSN-based\n\
    Agri-IoT testbed solutions, clustering methods in the existing state of the art,\
    \ and how\nthe possible deductions from these syntheses can evolve in a typical\
    \ case-study such as a\nWSN-speciﬁc Agri-IoT routing protocol for precision irrigation.\n\
    6. State of the Art on FM Techniques for Classic WSN Sublayer of IoT\nSince faults\
    \ and failures are inevitable in the WSN sublayer of Agri-IoT networks (refer\n\
    to Figure 10), it is imperative to reevaluate the faults, causes, types, strengths/weaknesses\n\
    of existing FM (i.e., fault detection—FD, fault tolerance—FT, and fault-avoidance—FA)\n\
    schemes, revisit their founding assumptions [71], and make appropriate recommendations\n\
    for Agri-IoT network designers. In this section, we establish the root source/cause(s)\
    \ of\nfaults in the WSN sublayer by assessing the behaviors of the different fault\
    \ types, examining\nthe extent to which the existing FM schemes address these\
    \ root faults, and exploring\nhow these schemes will evolve in realistic WSN-based\
    \ Agri-IoT networks based on their\ncore assumptions, control message overheads/complexities,\
    \ and energy-saving capacities.\nFrom this thorough assessment, this section proposes\
    \ practical fault-avoidance-based FM\ntechniques for the next generation of WSN-based\
    \ Agri-IoT.\n6.1. Systematic Overview of Faults, Sources, and Taxonomy of Faults\
    \ in Agri-IoT\nAccording to the fault–error–failure cycle depicted in Figure 14,\
    \ a fault can be defined as\nany impairment that causes a system to produce erroneous\
    \ results or leads to the failure of the\nentire system or specific components\
    \ [72]. The prevalence of faults in WSN-based Agri-IoT\nis primarily due to the\
    \ SN component malfunction, lack of post-deployment maintenance,\nor resource\
    \ exhaustion [73], which can lead to either impaired event data quality (thus,\
    \ sensory\ndata error/outlier) or SN-out-of-service (thus, the shortened lifespan\
    \ of SNs) [25].\nDue to the high susceptibility of WSNs to faults, the supervisory\
    \ routing protocol is\nexpected to incorporate efﬁcient FM mechanisms that can\
    \ guarantee optimum event data\nquality and network availability. By implication,\
    \ FM algorithms for WSNs must not be\nstand-alone as currently seen in the state\
    \ of the art [73]; instead, they must be an integral\naspect of the routing protocol\
    \ that agrees with the core participants of the PHY layer, such as\nthe SN, wireless\
    \ communication medium, and the BS. As illustrated on the left of Figure 15,\n\
    the WSN sublayer is the most prevalent source of faults in the Agri-IoT ecosystem,\
    \ in which\nthe SNs are the central origin of faults that can propagate to the\
    \ upper layers [25,43,73].\nThis is because the BS is resource-sufﬁcient mainly,\
    \ and the link’s reliability also hinges\nupon the SNs’ availability, as indicated\
    \ in Figure 15. At the local SN’s level, each unit\ndepicted at the bottom of\
    \ Figure 3 is a potential source of fault/failure, but the degree of\nprevalence\
    \ is frequently accelerated whenever power consumption is mismanaged through\n\
    the disregard of any of the network design requirements and deployment conditions\n\
    presented in later sections.\nThe different taxonomies of faults in the state\
    \ of the art of the WSN sublayer [44,71,73–77],\nas illustrated on the left side\
    \ of Figure 16, can be compared as follows:\nIoT 2023, 4\n295\n•\nHard or permanent\
    \ fault refers to the inability of a node to stay active and communicate\ndue\
    \ to resource exhaustion or component malfunction, while in soft or static faults,\n\
    nodes continue to work and communicate with other nodes, but they sense, process,\n\
    or transmit erroneous data [44,74].\n•\nThe authors in [75,78] categorized faults\
    \ as permanent (refers to SN-out-of-service\nfaults), transient (caused by temporary\
    \ conditions), intermittent (shows sporadic\nmanifestations due to unstable behavior\
    \ of hardware and software), and potential\n(due to depletion of hardware resources\
    \ [78]).\n•\nData inconsistency faults can also result from faulty sensing, processing,\
    \ and communi-\ncation, which is frequently caused by power depletion below a\
    \ certain threshold, while\npower failure occurs when a node exhausts its battery\
    \ power completely [43,77,79].\n•\nThe authors in [73] classiﬁed faults into software\
    \ and hardware faults based on soft-\nware and hardware impairments, respectively.\n\
    •\nAccording to [71], faults can be either time-based, due to the depreciation\
    \ of hardware\ncomponents with time, or behavioral-based, due to SNs’ inability\
    \ to cope with harsh\nenvironmental and operating conditions.\n1/20/22, 8:48 PM\n\
    1.svg\nAspects\nImpairment\nStructure \nState \nBehavior\nFault\nError\nFailure\n\
    Logic\nInformation\nAbstraction\nImpairment\nComponent\nSystem\nService\nResult\n\
    Fault\nError\nDefect\nMalfunction\nDegradation\nFailure\n1st  \nCycle\n2nd  \n\
    Cycle\nLow- \nLevel\nMid- \nLevel\nHigh- \nLevel\n(a)  SNs' Lifespan Statistics\
    \ \n(b)  CH-count Stability Statistics\nFigure 14. Fault–error–failure cycle [72].\n\
    1/20/22, 8:49 PM\n708.svg\nSources of\nFaults\nNetwork Level\nFaults\nFaults Caused\
    \ by\nAdversaries\nNode Level\nFaults\nSink Level\nFaults\nSoftware\nHardware\n\
    Environment\nOperating\nSystem \n  \nBattery \nMemory,\nTransceiver,\nSensor,\n\
    Processor\nWeather \nCoexisting\nSignals\n  Intermittent Faults  \nPermanent Faults\n\
    Coverage \nConnectivity \nCoexisting  \n   Signals\nNode\nNetwork  \n(Path & Link)\n\
    Sink/BS\nAgri-IoT  \nCloud\n(b)   Agri-IoT Fault PropagationModel\n(a)  Sources\
    \ of Faults in Agri-IoT\nFigure 15. Faults in the WSN sublayer of Agri-IoT: sources\
    \ and fault propagation model.\nIoT 2023, 4\n296\nFaults  \nClassifications\n\
    Static Faults \nPermanent Faults \nHard Faults\nSoft Faults\nSN Failure\nNetwork\
    \ Failure\nPower Failure\nData Inconsistency\nSN Reading Error\nHardware\nSoftware\n\
    \ \nBehavior-based\n e.g. soft & hard\nTime-based\n e.g.transient,   \n      \
    \ intermittent,    \n       permanent,\n       potential\n \na.  Different Taxonomies\
    \ of Faults in State-of-the-Art of Classic IoT\nAgri-IoT Device (SN, BS):  \n\
    Origin of  Impairments\nComponent Malfunction & \nResources Exhaustion\nData Outlier\
    \ or \nErrored Data\nSN-out-of-service\nSoft/data inconsistency faults \nInaccurate\
    \ or unprecise in-network\n& global decision \nHard/static faults\nNetwork/link\
    \ failures\nEntire network failure\nRoot Causes Faults\n 1st Effects\n Main Quantifiable\
    \  \nMetrics of Faults \nb.  Proposed Classification of Faults for Agri-IoT\n\
    Transient & Permanent Faults\n 2nd Effects\nFigure 16. Classiﬁcation of faults\
    \ in the state of the art and proposed fault taxonomies for WSN-\nbased Agri-IoT.\n\
    From the above deﬁnitions and the fault taxonomies on the left side of Figure\
    \ 16, it can\nbe deduced that hard, permanent, and static faults are practically\
    \ manifested as SN-out-of-\nservice, while soft, dynamic, and data-inconsistency\
    \ faults can be observed as data outliers.\nBoth SN-out-of-service and data outliers\
    \ are consequences of unit malfunction or resource\nexhaustion and can be permanent\
    \ or intermittent in behavior. Both conditions can impair\nthe quality of event\
    \ data and the global actionable decisions of the network. Therefore,\nthe quality\
    \ of FM schemes can be evaluated based on their capacities to effectively detect,\n\
    tolerate, or avoid SN-out-of-service and data outlier faults. In summary, most\
    \ FM schemes\nin the state of the art focus on their effects, instead of the root\
    \ faults, which are the ﬂaws in\nexisting FM schemes [25]. Additionally, since\
    \ the SN is the sole network device responsible\nIoT 2023, 4\n297\nfor event sensing,\
    \ data computation, packet forwarding, and communication in the WSN\nsublayer\
    \ of Agri-IoT, it is the principal source of faults in Agri-IoT networks. A new\
    \ fault\nclassiﬁcation framework shown in Figure 16 can be deduced from the above\
    \ analysis.\nSecondly, it is discernible that SNs’ power mismanagement is the\
    \ most prevalent\norigin of faults [43,80,81], which then propagate to the backend\
    \ or application level (refer\nto the right side of Figure 15). For instance,\
    \ communication, sensing, and computational\naccuracies of a node can be impaired\
    \ when the battery energy falls below certain thresh-\nolds [43]. Also, network\
    \ faults can be traced to power exhaustion and node failures, which\ncreate holes\
    \ in the topology that divide the network into multiple disjointed segments [43].\n\
    On that account, faults can be avoided in WSN-based Agri-IoT if the energy-saving\
    \ strate-\ngies presented in Figures 9 and 10 are effectively implemented.\nAdditionally,\
    \ any FM scheme or fault-monitoring mechanism, be it proactive, reactive,\npassive,\
    \ or active, must incorporate the following underlying qualities: thresholds that\n\
    represent the probable fault conditions without false alarms, fault discovery,\
    \ minimized\nmessage/time complexities, and self-healing and self-reconﬁguration\
    \ to neutralize the\neffects of the faults [43].\nFM Framework and Architectures\
    \ in WSN Sublayer of Agri-IoT\nAs illustrated in Figure 17, every FM scheme consists\
    \ of three main steps, which\ninclude fault detection (FD), fault diagnosis, and\
    \ fault recovery/tolerance (FT) [82,83],\nwhich always require input information.\
    \ These steps are implemented in a decision-making\nframework that involves four\
    \ major processes: data/information collection, FD model\nformulation, FD decision\
    \ and fault classiﬁcation, and tolerance of its effects using any of\nthe FT mechanisms\
    \ shown in Figure 17. Thus, the FD model detects the fault, the fault\ndiscovery\
    \ technique distinguishes that fault from false alarms, while the FT mechanism\n\
    helps to auto-heal and recover from the faults or failures [84]. Mainly, SN-out-of-service\n\
    faults are detected and tolerated using self-reconﬁguration techniques, whereas\
    \ data outlier\nfaults must strictly follow Figure 17.\n1/20/22, 8:49 PM\n4.svg\n\
    file:///C:/Users/emman/Downloads/4.svg\n1/1\nMN (RPi 3B+)\nMN (RPi 3B+)\nCH (RPi\
    \ 3B+)\nBS (RPi 3B+)\nGoogle API \n& GitHub\nAggregated  \nData\nAggregated  \n\
    Data\nInformation  \nSampling\nLearning & \nModeling\nFD Decisioning\nSystem attributes,\
    \ \nSensory data, \nProbabilities\nCorrelation model,  \nThreshold model\nCoparision\
    \ or  \ninference =>  \nFault discovery\nCentralized FD Scheme\nDistributed FD\
    \ Scheme\nIf Host = BS\nIf Host = Local SNs\nFault Detection & Fault Discovery\
    \ (FD) Scheme\nFD Architecture\nSelf detection\nNeighbor coordination\nClustering\
    \ approach\nBS-coordinated\nFalse alarm \nMissed FD\n \n \nFD Output\nCorrect\
    \ FD\nFT Mechanisms\n+ Cluster-based mechanism\n(e.g. 1-hop, m-hop, hierarchical)\n\
    + Redundancy-based mechanism\n(e.g. node, path, data, time redun.)\n+ Deployment-based\
    \  mechanism\n(e.g. Topology design & control)\nAggregatedData from \n CHs to\
    \ the Cloud via BS\nSample Field Data From MNs Received by CHs\nSample Aggregated\
    \ Data from CHs Received at BS\nCH and or  \nRCH Code\nClient/MN Code\nClient/MN\
    \ Code\nServer \nCode\nActuation Signal  \nto Irrigation System\nWi-Fi\nOr\nOR\n\
    Figure 17. FM framework in WSN sublayer of Agri-IoT.\nIn addition, FM schemes\
    \ can be implemented using either a centralized or distributed\narchitecture [44,85,86].\
    \ In a centralized scheme, the FD/FT protocol is hosted and managed\non the BS,\
    \ whereas the distributed scheme hosts and manages this algorithm on the local\n\
    SNs [87,88] (see Figure 17). The centralized approach is simpler for small-scaled\
    \ networks\nbut suffers many technical challenges, such as common point failure\
    \ due to heavy message\ntrafﬁc at the BS and high SN energy waste. In contrast,\
    \ the distributed approach saves\npower and controls message trafﬁc on the BS\
    \ because it allows local decision and self-\nIoT 2023, 4\n298\nFD/FT with or\
    \ without neighboring. According to Figure 17, the distributed architecture\n\
    can be implemented in three major ways [43,89–91], which include self-detection,\
    \ neighbor\ncoordination, and the clustering approach. Since the basic design\
    \ requirement of a WSN-\nbased Agri-IoT is to maintain the healthy functionality\
    \ and longevity of the SNs and the\nBS, any post-deployment impairments that cannot\
    \ be self-ﬁxed must be tolerated to not\ninterfere with the core function of the\
    \ network. Therefore, any automated FT mechanism\nthat can be achieved through\
    \ the self-reconﬁguration and self-management for enhanced\nnetwork availability,\
    \ reliability, and dependability is encouraged in the WSN sublayer [92].\nAccording\
    \ to Figure 17, an efﬁcient WSN-based Agri-IoT, therefore, requires a calculated\n\
    mix of FT mechanisms based on the intended application.\n6.2. Systematic Survey\
    \ of Fault Management Schemes in WSN-Based IoT\nFM in Agri-IoT networks has not\
    \ received adequate conceptualized research con-\nsiderations. As a result, existing\
    \ Agri-IoT solutions inherit the FM propositions from\nthe traditional WSN-based\
    \ IoT networks, which have proven to be unsuitable [14]. This\nsubsection presents\
    \ a concise overview of these FM schemes, including their strengths,\nweaknesses,\
    \ and underlying theories/concepts. It then proposes a more suitable remedy for\n\
    WSN-based Agri-IoT technology. In canon centralized FM schemes (see references\
    \ in [93–97]),\nthe underlying FM algorithm is hosted and managed on the BS, while\
    \ the local SNs host\nand manage the FM algorithm in distributed architectures\
    \ [87,88]. Although the centralized\napproach is simpler for small-scale networks,\
    \ it suffers many technical challenges, such\nas common point failure due to heavy\
    \ message trafﬁc at the BS, management difﬁculties,\nand high energy wastages\
    \ on distant routing. This clearly explains why most outdoor\nAgri-IoT testbed\
    \ experiments in [1,10,11,14,18,19] experienced severe FM complications to\nthe\
    \ extent that the networks became infeasible to operate or manage at higher scalability\n\
    levels. However, the distributed approach (see references in [74,76,77,91,98–103])\
    \ saves\npower and controls message trafﬁc and workload on the BS because it allows\
    \ local decisions\nas well as local-FD/FT with or without neighboring nodes. The\
    \ distributed FD/FT scheme\ncan also be self-executed, neighbor-coordinated, or\
    \ clustering-aided [89–91]. Although the\nclustering-based FM architecture has\
    \ promising potential to improve energy conservation,\nnetwork adaptability, and\
    \ ease of implementation, it has not been extensively researched\nand exploited.\n\
    Again, distributed FD schemes are mainly established on the assumption that the\n\
    failure of SNs is spatially uncorrelated, while event information is spatially\
    \ correlated.\nTherefore, the FD’s decision framework is frequently modeled using\
    \ sensory data or statis-\ntical properties of the spatial or temporally correlated\
    \ SNs [79,104–106] from the immediate\nneighborhood of a node [74,103] or data\
    \ from farther SNs [107]. To date, the applicabil-\nity of these solutions to\
    \ the Agri-IoT context has attracted several technical challenges.\nConsequently,\
    \ the strengths and weaknesses of the main results of the benchmarking FM\nschemes,\
    \ their underlying assumptions, and how they addressed the critical fault-afﬁnity\n\
    factors such as energy conservation, FT/FA, control message complexity, and processor\n\
    burden of the SNs, are presented in the comparative evaluation summary of Table\
    \ 7.\nIoT 2023, 4\n299\nTable 7. Comparative summary of FM schemes for WSN-based\
    \ IoT networks.\nAuthor/Year\nRoot Faults? (i.e., Data\nOutliers and\nSN-Out-of-Service)\n\
    FM Architecture\nUnrealistic Assumptions\nEnergy Saving (FA)?\nFT?\nHigh Control\
    \ Message\nComplexity\nStand-Alone?\n[77] (2013)\nYes, both\nCluster-based\nAll\
    \ SNs have the same lifetime; SNs record the\nsame sensory data regardless of\
    \ location\n\x15\n✓\nHigh\n\x15\n[93] (2016)\nPartial: data outliers\nCentralized\n\
    SNs have binary sensing outputs\n✓\n\x15\nLow\n✓\n[79] (2015)\nPartial: data outliers\n\
    Distributed\nAll fault-free sensors measure the same physical\nvalue at any instant\
    \ of time, while the faulty\nsensors measure different physical values\n✓\n\x15\
    \nModerate\n✓\n[103] (2006)\nPartial: SN-out-of-service\nDistributed\nAll SNs\
    \ must have enough neighbors\n\x15\n✓\nHigh\n✓\n[74] (2009)\nPartial: SN-out-of-service\n\
    Distributed\nSNs must have unvarying detected initial status\n\x15\n✓\nHigh\n\
    ✓\n[76] (2016)\nPartial: SN-out-of-service\nDistributed\nSNs must have the same\
    \ initial status and a\npredeﬁned number of neighbors\n\x15\n✓\nHigh\n✓\n[91,98,99]\
    \ (2004, 2005, 2005)\nPartial: SN-out-of-service\nDistributed\nAll SNs have the\
    \ same error detection\nprobability, all neighboring nodes of an SN have\nidentical\
    \ levels of accuracy regardless of\ndistance\n\x15\n\x15\nHigh\n✓\n[100] (2009)\n\
    Partial: data outliers\nDistributed\nSNs have binary sensing outputs\n\x15\n✓\n\
    High\n✓\n[104] (2014)\nPartial: data outliers &\nSN-out-of-service\nCentralized\n\
    Silent on assumptions\n\x15\nNo\nLow\n✓\n[101] (2008)\nYes: transient faults\n\
    Distributed\nAll neighboring nodes have the same\ntransmission range and reading\
    \ values\n\x15\n\x15\nHigh\n✓\n[105] (2016)\nPartial: SN-out-of-service\nDistributed\n\
    Silent on assumptions\n\x15\n\x15\nModerate\n✓\n[108] (2015)\nPartial: data outliers\n\
    Distributed\nSilent on assumptions\n✓\n✓\nLow\n✓\n[109] (2009)\nPartial: SN-out-of-service\n\
    Distributed\nAll nodes must have identical measurements,\na quadrant must have\
    \ the same number of SNs\n\x15\n✓\nHigh\n✓\n[94] (2014)\nPartial: SN-out-of-service\n\
    Centralized\nBased on historical network data: assumes all\nSNs are healthy initially\
    \ to obtain training data\n\x15\n\x15\nModerate\n✓\n[95] (2016)\nPartial: SN-out-of-service\n\
    Centralized\nBased on historical network data: assumes all\nSNs are healthy initially\
    \ to obtain training data\n\x15\n\x15\nModerate\n✓\nIoT 2023, 4\n300\nTable 7.\
    \ Cont.\nAuthor/Year\nRoot Faults? (i.e., Data\nOutliers and\nSN-Out-of-Service)\n\
    FM Architecture\nUnrealistic Assumptions\nEnergy Saving (FA)?\nFT?\nHigh Control\
    \ Message\nComplexity\nStand-Alone?\n[96] (2015)\nPartial: SN-out-of-service\n\
    Centralized\nSilent on assumptions\n\x15\n\x15\nModerate\n✓\n[110] (2018)\nFT\
    \ protocol\nDistributed\nAssumed centralized BS\n✓\n✓\nHigh\n✓\n[111] (2017)\n\
    Effects: network failure\nDistributed\nAll SNs are homogeneous in terms of energy,\n\
    communication, and processing capabilities\n\x15\n\x15\nHigh\n✓\n[97] (2018)\n\
    Partial: SN-out-of-service\nCentralized\nAll faulty SNs must have at least a sleeping\n\
    node in its proximity\n\x15\n✓\nModerate\n✓\n[112] (2018)\nPartial: SN-out-of-service\n\
    Distributed\nSilent on assumptions\n✓\n✓\nHigh\n✓\n[113] (2016)\nPartial: SN-out-of-service\n\
    Distributed\nAll faulty SNs must have at least a sleeping\nnode in its proximity\n\
    \x15\n✓\nModerate\n✓\n[114] (2013)\nPartial: SN-out-of-service\nDistributed\n\
    Silent on assumptions\n\x15\n\x15\nModerate\n✓\n[115] (2016)\nPartial: data outliers\n\
    Distributed\nSilent on assumptions\n✓\n✓\nModerate\n✓\n✓: Present or YES, \x15\
    : Absent or NO.\nIoT 2023, 4\n301\n6.3. Theories/Concepts of Benchmarking FM Schemes\
    \ and Their Shortcomings\nThe conceptual models/theories of the canon FD decision\
    \ frameworks and the associ-\nated shortcomings can be expressed as follows:\n\
    •\nStatistical approaches such as Neyman–Pearson formulation [116], Bayesian statis-\n\
    tics [77,103], and normal distribution test types (e.g., Thompson Tau statistical\
    \ test [105])\nare high-resource-demanding techniques that may apply to classic\
    \ IoT. Still, they are\nunsuitable for power-constrained Agri-IoT devices or SNs.\
    \ In addition to being stand-\nalone and without application speciﬁcity, these\
    \ methods operate at high computational\nand control message complexities. Their\
    \ operational efﬁciencies increase with increas-\ning data dimensionality and\
    \ also require a priori knowledge of data distribution,\nwhich is not possible\
    \ in many real-life applications of Agri-IoT networks. Additionally,\nthey rely\
    \ on predeﬁned thresholds to make local and global FD decisions. Therefore,\n\
    regardless of the extensive research considerations of these methods, they are\
    \ generally\nnot suitable for low-power IoT applications, of which Agri-IoT is\
    \ no exception.\n•\nGraph-based FM techniques lack precise criteria for outlier\
    \ detections [83,109], suffer\nhigher computational complexities, and also make\
    \ unrealistic assumptions about the\ndata distribution. In addition, these approaches\
    \ (e.g., De Bruijn graph theory [109]\nand depth-based techniques) are unsuitable\
    \ for multidimensional and huge datasets.\n•\nMachine learning decision concepts\
    \ such as the k-out-of-n and majority decision\nrule concepts [93], naive Bayes,\
    \ iterative algorithms [107], and neural network-based\ntechniques, among others,\
    \ are susceptible to high dimensional datasets, suffer high\ncomputational cost,\
    \ and rely on sensitive model parameters.\nIn addition to the stipulated shortcomings,\
    \ these benchmarking FM methods usually\nignore the sensory data correlation (i.e.,\
    \ attribute correlation, spatial correlation, and tem-\nporal correlation) properties\
    \ of SNs, require high communication overhead with high FD\ndelays [83], and normally\
    \ operate in an ofﬂine manner, which is inconsistent with the\nmodus operandi\
    \ of typical Agri-IoT. Hence, they are unsuitable for the recent low-power\nAgri-IoT\
    \ applications.\n6.4. Open Issues on Existing FM Solutions for Classic WSN-Based\
    \ IoT Networks and\nRecommended Design Guidelines for Achieving Efﬁcient FM in\
    \ WSN-Based Agri-IoT\nA fault in the WSN sublayer of Agri-IoT networks can be\
    \ manifested as a data outlier\nand SN-out-of-service or node failure, both of\
    \ which must be detected and resolved locally\nor globally using the spatially\
    \ correlated event information and efﬁcient threshold-based\ndecision frameworks.\
    \ Although there has been extensive research concerning FM schemes\nfor the WSN\
    \ sublayer, several technical challenges that require urgent contextual research\n\
    considerations exist. They include the following:\n1.\nMost faults in the PHY\
    \ layer of Agri-IoT originate from the SNs’ power exhaustion,\nwhich implies that\
    \ the best fault-avoidance techniques are those that optimize power\nconsumption.\
    \ However, most FM schemes waste more energy and make the net-\nwork prone to\
    \ more faults/failures via high control messages and computational\ncomplexities.\n\
    2.\nMost FM schemes exist as stand-alone frameworks without architectural consider-\n\
    ations and are founded on unrealistic assumptions, which make them difﬁcult to\n\
    incorporate into existing routing protocols.\n3.\nThe cluster-based routing architecture\
    \ is endowed with many untapped local/global FM\npotentials and fault-avoidance\
    \ capacities for the next-generation Agri-IoT. However, these\npromising potentials\
    \ have received the least contextualized research considerations.\nExisting FM\
    \ solutions are meant for resource-sufﬁcient and expensive classic WSN-\nbased\
    \ IoT, not resource-constrained, context-speciﬁc use cases like Agri-IoT networks.\n\
    Regarding these technical challenges, this tutorial presents the following design\
    \ guidelines\nfor building efﬁcient and realistic FM schemes for WSN-based Agri-IoT:\n\
    IoT 2023, 4\n302\n1.\nFM schemes must rely on realistic and contextual assumptions\
    \ in order to detect and\nauto-tolerate sensory data outliers and SN-out-of-service\
    \ faults in real-time routing\nprotocols with minimal message, computational,\
    \ and memory complexities. Such FM\nschemes will be suitable for all power-constrained\
    \ WSN-based Agri-IoT applications.\n2.\nFuture works on FM schemes must be embedded\
    \ into speciﬁc routing protocols so\nthat their adaptability to topological dynamism\
    \ and scalability in terms of network\nsizes and node densities can be assessed\
    \ in an unsupervised manner. Therefore, fault\ndetection and fault-tolerance schemes\
    \ based on simple threshold-based theories are\nthe best candidates for this context,\
    \ since the threshold boundaries of agronomical\nmetrics can be accurately computed\
    \ from the historical data of the location.\n3.\nFM schemes must incorporate redundancy\
    \ check mechanisms by exploiting spatial\nand temporal correlations among sensory\
    \ data.\n4.\nFM schemes should maintain a good balance between local and global\
    \ FDs as well as\na reasonable detection rate and false alarm rate.\n7. State\
    \ of the Art on Real-World, Canon WSN-Based Agri-IoT Testbed Solutions\nIt is\
    \ well documented that WSN-based Agri-IoT is the most reliable remedy for mitigat-\n\
    ing the negative impacts climate change has had on agricultural production, for\
    \ which many\narchitectural designs and testbed prototypes have been proposed\
    \ [12,36]. In addition, since\nthe autonomous, resource-constrained SNs in Agri-IoT\
    \ are expected to operate without\npost-deployment maintenance checks, the issues\
    \ of FM, power optimization, and self-\norganization during SN design and network\
    \ deployment cannot be ignored in existing\ntestbed solutions [12,117]. Essentially,\
    \ the results from most research projects on Agri-IoT\nrelied on simulation experiments\
    \ [1,10,14], which have retained the gap between the phi-\nlosophy of this technology\
    \ and the comprehension of its real-world behavior for a more ac-\ncurate performance\
    \ assessment. This section presents a systematic performance assessment\nof the\
    \ few real-world WSN-based Agri-IoT testbed solutions currently based on the classic\n\
    WSN-based IoT principles. To understand how the benchmarking realization testbeds\
    \ of\nAgri-IoT in [1,10,11,14,18,19] fared in real-world operational conditions,\
    \ the results from\ntheir respective performances are systematically evaluated\
    \ and summarized in Table 8. It\nwas discovered that the current benchmarking\
    \ testbed solutions in [1,10,11,14,18,19] are\ncapital-intensive because they\
    \ are reliant on ﬁxed/location-restricted backbone infrastruc-\ntures (see the\
    \ middle of Figure 3), too complicated to deploy and manage by even expert\nusers,\
    \ based on unrealistic indoor conditions which do not commensurate real-world\
    \ envi-\nronmental conditions, and based on the high- power-demanding centralized\
    \ or ﬂooding\narchitectures which further complicate network manageability when\
    \ up-scaled. A concise\nand systematic survey of these benchmarking real-world\
    \ Agri-IoT networks and their ﬂaws\nin the state of the art is summarized in Table\
    \ 8.\nAdditionally, it can be established from the comparative assessment of the\
    \ benchmark-\ning Agri-IoT testbeds in Table 8 [10,11,18,19] that the embedded\
    \ communication technology,\nevent routing architecture, and the SNs’ power management\
    \ are the core factors that made\nthem capital-intensive and complicated to both\
    \ experts and low-income farmers. Addi-\ntionally, self-healing, reconﬁgurability,\
    \ and adaptability mechanisms to faults were not\ndeployed [1,14,17]; hence, faulty\
    \ and turbulent conditions could not be tolerated. Further-\nmore, since the battery-powered\
    \ SNs rely on expensive Wi-Fi and cellular communication\ntechnologies that are\
    \ not freely accessible at all locations, the SNs exhausted their battery\nsupply\
    \ a few days after deployment. Similarly, those that relied on ZigBee/IEEE 802.15.\
    \ 4\ncommunication technologies with power-intensive 6LoWPAN or IPv6 protocols\
    \ restricted\nthe resulting network to drive on the problematic centralized or\
    \ ﬂooding architectures\nwithout any efﬁcient FM techniques. As a result, these\
    \ solutions used costly ﬁxed IP\ninfrastructural supports and the centralized\
    \ routing architecture, making them practically\nimpossible to manage as the networks\
    \ scaled. This is why the SNs unstably exhausted their\nbattery power and abruptly\
    \ abridged network lifespans [1,10,11,14,18,19].\nIoT 2023, 4\n303\nTable 8. Comparative\
    \ analysis of WSN-based Agri-IoT testbed solutions.\nAuthor/Deployment Type\n\
    Testbed Objective\nComm. Tech & Architecture\nWeaknesses\n[10] (Outdoor)\nDisease\
    \ control\nIEEE 802.15.4/centralized,\nﬂooding\nRelied on a ﬁxed support system,\n\
    expensive, power-inefﬁcient,\nlocation-restricted\n[11] (Outdoor)\nPrecision farming,\
    \ to gather\nreal-world experiences\nZigBee, Mica2 clones hardware\nand TinyOS\
    \ software/centralized,\nﬂooding\nRelied on a ﬁxed support system,\nexpensive,\
    \ power-inefﬁcient,\nlocation-restricted, no single\nmeasurement was achieved\
    \ due to high\nnetwork complexity\n[18] (Indoor)\nData outlier detection and\n\
    decision support system for\nprecision irrigation testbeds\nZigBee/ﬂooding-based\n\
    Results based on 3 SNs under unrealistic\nindoor conditions\n[19] (Indoor)\nLatency\
    \ improvement\nFog computing, 6LoWPAN, 6LBR,\nand WiFi-based/centralized,\nﬂooding\n\
    Capital-intensive, energy-inefﬁcient,\nhigh complexity, location-restricted\n\
    [1] (Indoor and Outdoor)\nGather real-world deployment\nexperiences\nZigBee/centralized,\
    \ ﬂooding\nResult focused on mere observation, not\nreal-world deployment scenarios.\n\
    Therefore, the freely available low-power wireless technologies (e.g., LoRa, BLE,\
    \ 5G,\nZ-wave, NB-IoT, and SigFox) that are founded on a suitable routing topology\
    \ are the best\ncandidates for making this ubiquitous application [1,16] cheap\
    \ [1,20] and simple for all\nusers. Thus, the cluster-based topology is more pivotal\
    \ to addressing the above challenges\nof Agri-IoT [10,17] than the traditional\
    \ cellular and WiFi technologies that are inaccessible\nin many farms, depending\
    \ on their locations [10,20]. However, besides distance-power\nconstraints, architectural\
    \ support, and network manageability challenges, these freely\naccessible wireless\
    \ communication technologies have speciﬁc limitations, which include:\n1.\nZigBee\
    \ technology achieves the desired power savings only when deployed in star or\n\
    centralized topology [14], and it operates at its low-power distance range (10–100\
    \ m)\nin line-of-sight mode depending on the environmental characteristics.\n\
    2.\nLoRa is limited to low-density and ﬁxed network sizes (non-scalable), a low\
    \ data rate,\nand a low message capacity [14]. It may require registration and\
    \ expensive antennae,\ndepending on its operation location.\n3.\nSigFox supports\
    \ a very low data rate and requires registration. LoRa and SigFox\npossess complex\
    \ implementations because they both require speciﬁc modules to\nfunction and gateways.\n\
    4.\nWiFi, GPRS, cellular technologies, and NB-IoT are high power consumption standards\n\
    and location-/architecture-restricted.\n5.\nBLE has a short communication range\
    \ but supports clustering architecture, which is the\nmost optimal architecture\
    \ for ensuring the best operational efﬁciency of WSN-based\nAgri-IoT deployments,\
    \ since this architecture allows cluster isolation and management.\nTherefore,\
    \ a research opportunity exists for a ﬂexible, ubiquitous, realistic, energy-\n\
    efﬁcient, self-healing, simple, low-cost, cluster-based, and wireless outdoor-based\
    \ testbed\nthat consists of infrastructure-less, task-scalable, and wirelessly\
    \ conﬁgurable experimental\nSNs and a BS. It should also be deployed, re-deployed,\
    \ monitored, controlled, and managed\nby non-experts to operate stably throughout\
    \ the entire crop-growing season.\n8. Case Study: Cluster-Based Agri-IoT (CA-IoT)\
    \ for Precision Irrigation\nAs earlier established in Figure 2, the design and\
    \ implementation of Agri-IoT networks\nare driven by unique critical factors,\
    \ which are mainly determined by the associated\nrouting architecture, communication\
    \ technology, actuation management mechanisms,\nand environmental impacts. In\
    \ the operation phase, these factors constitute the speciﬁc\nobjectives in Figure\
    \ 10, which the supervisory routing protocol must address in order\nto optimize\
    \ performance efﬁciency and stability. As systematically established above,\n\
    the LEACH-inherited cluster-based architecture has the most promising potential\
    \ to address\nIoT 2023, 4\n304\nthese technical challenges. It helps to attain\
    \ high power optimization via communication\ndistance and packet minimization,\
    \ efficient network administration/adaptability, high event\ndata quality through\
    \ auto-FM, and local data quality management, as indicated in Figure 10.\nSo,\
    \ this section presents a systematic analysis of how the merits of this architecture\
    \ evolve\nin CA-IoT for precision irrigation use cases. Using the framework in\
    \ Figure 12, the cluster-\nbased architecture was pre-examined to uncover how\
    \ the fundamental Agri-IoT design\nrequirements and goals presented in the reference\
    \ frameworks in Figures 2, 9 and 10 can\nunfold into realistic multi-parametric\
    \ optimization metrics.\nThe conceptual architectural framework of the proposed\
    \ network, as illustrated in\nFigure 18, can be implemented using Arduino-based\
    \ or Raspberry Pi(RPi)-based micro-\ncontrollers, BLE and LoRa for intra-cluster,\
    \ inter-cluster, and BS–cloud communications,\nrespectively, and DHT22/STEMMA\
    \ soil moisture sensors for measuring the respective\nambient and soil microclimatic\
    \ parameters. Also, a unit cluster from Figure 18 detailing\nthe key network components\
    \ of MNs, CH, BS, and the ﬁeld-deployed precision irrigation\nsystem is shown\
    \ in Figure 19. It is assumed that the core units constituting the MNs, CH,\n\
    and BS, as illustrated in Figure 19, are optimally selected and designed after\
    \ Figure 2. Using\nFigures 18 and 19 as the reference architectural frameworks\
    \ for achieving our contextualized\nobjectives, this section presents an in-depth\
    \ systematic assessment and characterization\nof the scores of canon cluster-based\
    \ routing protocols of conventional WSN-based IoT\napplications so that the desired\
    \ MOO metrics can be appropriately deduced and adapted\nfor the design of the\
    \ associated routing for our case study.\n1/21/22, 10:27 AM\n300tt.svg\nBS\nInter-cluster\
    \ Communication  (e.g. BLE, SigFox, LoRa)\nIntra-cluster Communication (e.g. BLE,\
    \ SigFox)\nCH: RPi 3B+\nMN: RPi 3B+\nInternet +IoT Storage  \n      Cloud + Data\
    \ Analytic\nEngines\nProposed Cluster-based Routing Architecture Using RPi 3 and\
    \ DHT22  \nfor microclimatic data (temperature and humidity) Acquisition\nUser\
    \ with Web  \nor Mobile Application\nControl Signal to  \nIrrigation System\n\
    CH/RCH: RPi 3B+\nWeb Server/Python/Bluez\nOther Modules\ne.g. Linux Scripts, ATOM\
    \ \n, ADAFRUITs, DHT22, Soil\nSensor\nRadio Module\ne.g. BLE 4.2/LoRa \nMN: RPi\
    \ 3B+\nMN: RPi 3B+\nPC/Smartphone: Remote\nMonitoring and Control\nBS\nPower-Sufficient\n\
    e.g., RPi 3B+\nFigure 18. Conceptual architectural framework of the proposed CA-IoT\
    \ for precision irrigation\nmanagement.\nIoT 2023, 4\n305\n1/21/22, 10:35 AM\n\
    300t.svg\nfile:///C:/Users/emman/Downloads/300t.svg\n1/1\nE.g. Battery\nOnboard\
    \  \nBLE  Module\nCH\nBS\nMN\nMN\nMN\nLEDs & \nDHT22 Sensor\nUser with Web or\
    \ Mobile Application \nfor Remote Monitoring and Control\nInlet From Water Reservoir\n\
    Water Pump\nIrrigation System on SNs-Deployed Field \nControl Signal to  \nIrrigation\
    \ System\nPump Relay \nControl Board\nIoT Cloud\nLocal Data Storage\nCluster-based\
    \ WSN\nSolar Cell  \nPanels\nSolar Cell  \nPanels\nSolar Cell  \nPanels\nSolar\
    \ Cell  \nPanels\nBattery  \nBank\nBattery  \nBank\nBLE\nE.g. a. DHT22     b.\
    \ Soil Moisture  \nSensor\nCellular Tech. \ne.g. NB-IoT, LTE,  \nGSM\nZ-Wave\n\
    Wi-Fi ZigBee\nE.g. a. RPi\nb. Arduino\nPower Supply Unit\nSensing Unit\nCommunication\
    \ Unit\nController Unit\nFigure 19. CA-IoT use case cluster illustrating the key\
    \ network components: MNs, CH, and BS.\n8.1. Characterization of Canon Clustering-Based\
    \ Routing Protocols and Deduction of\nMOO Metrics\nA systematic survey (refer\
    \ to Table 9) and characterization of LEACH-based routing\nprotocols were conducted\
    \ using the clustering process, CH features, and cluster features,\nas indicated\
    \ in Figure 20, in order to conceive the core MOO metrics for the proposed CA-\n\
    IoT network framework. The clustering process, CH features, and cluster features\
    \ deﬁne the\nperformance optimalities and the quality of the sampled data of the\
    \ resulting architecture.\n1/21/22, 1:23 PM\n012.svg\nTaxonomy of MOO \nMetrics\n\
    Energy-related\nApplication-related\nCommunication- \nrelated \nConnectivity \n\
    Issues\nSNs' Operational  \nPattern\nCluster  \nfeatures\nClustering \n process\n\
    Cluster Size: equal, variable \nCluster Count: constant,  \nrandom, determined\
    \ \nIntra/Inter-cluster Comm. Type:  \nsingle-hop, multihop\nComm. type,\nComm.\
    \ distance\nPacket size\nLatency, scalability, DR-\nmodel, adaptability, FM,\n\
    data management, etc\nCH  \nfeatures\nCH Role Rotation: yes, no \nCH Mobility:\
    \ yes, no \nSN Type: homogeneous,  \n                heterogeneous  \nCH Role:\
    \ data fusion, router, FM, \nnetwork maintenance, all\nClustering Method: centralized,\
    \  \ndecentralized, hybrid \nCH Election Method: Preset,  \nrandom, attribute-determined\
    \ \nDynamism: static, adaptive \nAlgorithmic Complexity: constant,   \nvariable\n\
    a. Characterization of Cluster-based Networks\nb. Deduced Taxonomy of MOO Metrics\n\
    Cluster size,\nCluster count,\nSNs' density,\n& uniformity\nSNs' Role, \nSNs'\
    \ activity time schedules\nFigure 20. Characterization of cluster-based networks\
    \ and deduced taxonomy of MOO metrics for\noptimizing Agri-IoT networks.\nIoT\
    \ 2023, 4\n306\nTable 9. Comparative summary of Agri-IoT-applicable clustering-based\
    \ routing protocols using characterization parameters.\nProtocol/Year\nHierarchy\n\
    DR-Model\nClustering\nComm. Type\nObjective\nCH Selection\nCluster\nSN Mobility\n\
    SN Type\nCH Role\nConstant Time\nMethod\nMethod\nSize\nRotation\nComplexity\n\
    LEACH,\n2002 [21,47]\n2-level\nTime-driven\nDecentralized\nIntra: Single-hop\n\
    Max. WSN lifespan\nRandom\nuncontrolled\nStatic\nHomogeneous\n✓\n\x15\nInter:\
    \ Single-hop\nSEP, 2004 [118]\n2-level\nTime-driven\nDecentralized\nIntra: Single-hop\n\
    WSN stability pan\nRandom\nuncontrolled\nStatic\nHeterogeneous\n✓\n\x15\nInter:\
    \ Single-hop\nTL-LEACH,\n2007 [119]\n3-level\nTime-driven\nDecentralized\nIntra:\
    \ Single-hop\nData aggregation\nAttribute-based\nuncontrolled\nStatic\nHomogeneous\n\
    ✓\n\x15\nInter: Multihop\nPECRP,\n2009 [120]\nmultilevel\nTime-driven\nHybrid\n\
    Intra: Single-hop\nMax. WSN lifespan\nRandom\ncontrolled\nStatic\nHomogeneous\n\
    ✓\n\x15\nInter: Multihop\nAttribute-based\nLEACH-DT,\n2012 [121]\n3-level\nTime-driven\n\
    Decentralized\nIntra: Single-hop\nMax. WSN lifespan\nRandom\nuncontrolled\nStatic\n\
    Homogeneous\n✓\n\x15\nInter: Single-hop\nAttribute-based\nEESAA, 2012 [9]\n2-level\n\
    Time-driven\nDecentralized\nIntra: Single-hop\nMax. WSN lifespan\nRandom\nuncontrolled\n\
    Static\nHomogeneous\n✓\n✓\nInter: Single-hop\nAttribute-based\nDEEC,\n2014 [122]\n\
    2-level\nTime-driven\nDecentralized\nIntra: Single-hop\nWSN stability pan\nRandom\n\
    uncontrolled\nStatic\nHeterogeneous\n✓\n\x15\nInter: Single-hop\nDHCR,\n2015 [123]\n\
    multilevel\nTime-driven\nDecentralized\nIntra: Single-hop\nMin. control messages\n\
    Random\ncontrolled\nStatic\nHomogeneous\n✓\n✓\nInter: Multihop\nMax. WSN lifespan\n\
    Attribute-based\nHEER,\n2016 [124]\nmultilevel\nTime-driven\nDecentralized\nIntra:\
    \ Multihop\nMax. WSN lifespan\nRandom\ncontrolled\nStatic\nHomogeneous\n\x15\n\
    \x15\nInter: Single-hop\nAttribute-based\nS-BEEM,\n2017 [33]\n2-level\nTime-driven\n\
    Decentralized\nIntra: Single-hop\nLoad balancing\nRandom\ncontrolled\nMobile BS\n\
    Homogeneous\n✓\n✓\nInter: Multihop\nEAMR,\n2018 [125]\nmultilevel\nTime-driven\n\
    Decentralized\nIntra: Single-hop\nMin. control messages\nRandom\ncontrolled\n\
    Static\nHomogeneous\n✓\n✓\nInter: Multihop\nMax. WSN Lifespan\nAttribute-based\n\
    ✓: YES or Present, \x15: NO or Absent.\nIoT 2023, 4\n307\nAs depicted in Figure\
    \ 20a, the cluster features deﬁne the underlying connectivity\nissues, such as\
    \ cluster quality indices (thus, cluster count, cluster size) and intra-cluster\n\
    and inter-cluster communication types (thus, single-hop or multihop or both) [23,24].\n\
    From the network design viewpoint, the cluster quality depends on the optimality\
    \ of the\nCH count and cluster sizes, which in turn rely on the core design parameters,\
    \ such as the\nspatial density and uniformity of the deployed nodes, the speciﬁcation\
    \ of the wireless\ncommunication standard, the routing architecture, and the size\
    \ of the network [47]. Since\nthe deployment of SNs in a typical Agri-IoT can\
    \ be controlled, the stipulated cluster quality\nproperties can be optimized to\
    \ resolve connectivity issues in Figure 20b. In a randomly\ndeployed ﬁeld, these\
    \ cluster quality parameters can be optimized using a pairing-based SN\nduty-scheduling\
    \ mechanisms [9,12].\nSecondly, the CH features can be static, mobile, or role-rotated\
    \ in both homogeneous\nor heterogeneous networks [9,12] based on the SNs’ resource\
    \ hierarchy. Additionally,\nthe CHs can be assigned different tasks, such as data\
    \ aggregation, FM, coordinating\nnetwork reconﬁguration or duty cycling, and network\
    \ maintenance, depending on their\nresource capacities and network requirements.\
    \ This case study is based on static SNs and\nthe distributed network construction\
    \ approach (see references in [9,12,33,126–132]), where\nthe SNs locally manage\
    \ the entire clustering process, and a CH is elected without the entire\nnetwork’s\
    \ information.\nAs shown in Figure 20a, the clustering process can be characterized\
    \ by the clustering\nmethod/network type (thus, centralized or distributed), the\
    \ CH selection method, recluster-\ning or network adaptability to topological\
    \ or scalable conditions, and the complexities (thus,\ncontrol message and computational\
    \ complexities) of the entire network operation cycle.\nUnlike the static approach\
    \ with ﬁxed CH, the adaptive clustering approach selects CH\nbased on the current\
    \ network conditions and rotates this role. However, both approaches\ncan incorporate\
    \ self-reclustering techniques to self-heal SN-out-of-service faults. Data\noutlier\
    \ faults can be best detected and corrected using threshold-based decision theory\
    \ or\nspatial correlation methods with the least complexities. Due to the large-scale\
    \ and high\ndeployment densities of WSN-based Agri-IoT, the distributed clustering\
    \ process is more\nsuitable for enhancing local FM, scalability, network management,\
    \ and power optimization\nthan the centralized approaches [37,47].\nGenerally,\
    \ the CA-IoT network can be optimized by formulating the deduced optimal\ndecision\
    \ metrics in Figure 20a into a MOO framework and multihop routing model in\norder\
    \ to provide the guidelines for the design of the WSN sublayer of Agri-IoT. From\
    \ the\ncomparative evaluations of Figures 10 and 20a, a taxonomy of MOO metrics\
    \ for designing\nan efﬁcient WSN-based CA-IoT network is proposed in Figure 20b.\
    \ To enhance the clarity\nof the state of the art on cluster-based protocols and\
    \ justify the need for the proposed MOO\nmetrics, a comparative summary based\
    \ on the characterization parameters is presented in\nTable 9.\n8.2. CH Election\
    \ Techniques\nA CH selection process is very critical to the resulting network’s\
    \ performance efﬁciency.\nIn addition to centralized networks and the computationally\
    \ expensive fuzzy-based clus-\ntering approaches [133,134], the efﬁciencies of\
    \ all LEACH-inherited protocols are mainly\ndependent on their CH selection techniques\
    \ [47,49]. Therefore, the correct estimation of\nthe cluster quality metrics (i.e.,\
    \ CHs count and cluster size) is pivotal in attaining the\nobjectives in Figure\
    \ 10. With the aid of nodes’ residual energy and location metrics, the op-\ntimal\
    \ CH count and cluster size can be preset before network deployment. Currently,\n\
    these metrics are randomly selected using a probabilistic approach in LEACH-inherited\n\
    protocol [9,21] or derived using a deterministic or an attribute-based method\
    \ [47,135].\nHowever, the probabilistic clustering, such as the LEACH-inherited\
    \ protocols, is expected\nto perform better in terms of network lifespan, minimal\
    \ clustering overhead, improved\nconnectivity, network/coverage stability, low\
    \ latency, collision-free routing, load balanc-\ning, high network stability span,\
    \ and algorithmic simplicity if the optimal CH count was\nIoT 2023, 4\n308\npredeﬁned\
    \ correctly [136]. However, the CH count is randomly predeﬁned in these proto-\n\
    cols [9,21], which undermines the CH’s stability and the resulting architecture’s\
    \ optimality.\nThis challenge can be addressed via common CH selection metrics\
    \ including Euclidean\ndistance, intra-cluster/inter-cluster communication costs,\
    \ energy-harvesting capacities,\nand probabilistic factors. To date, the related\
    \ attempts in [49,126,137–139] only relied on\nthe SNs’ residual energy and location\
    \ information to re-elect CHs after the initial CH count\nis deﬁned, which cannot\
    \ be ideal for WSN-based Agri-IoT.\nFor instance, an active SN in a particular\
    \ round decides whether or not to become\na CH by choosing a random number (rn)\
    \ ranging between 0 and 1 and comparing the\nnumber with a speciﬁed threshold\
    \ Th. A node, therefore, becomes a CH for that round if\nrn < Th, where Th is\
    \ expressed as:\nTh =\n(\npd\n1−pd×(( f irst−round)mod 1\npd\n,\nif n ∈ G\n0,\n\
    otherwise\n(1)\nwhere pd is the desired percentage of CHs or CH count per round,\
    \ and G is the number of\nSNs that have not been a CH in the previous 1/p rounds.\n\
    The authors in [119] proposed a three-layered LEACH (TL-LEACH) that operates in\n\
    three functional phases—CH election, MN recruitment, and data transfer—to enhance\
    \ the\nenergy efﬁciency of LEACH. Their ﬁrst-level CH election approach modiﬁed\
    \ Equation (1)\ninto an enhanced threshold T(i), which is expressed as:\nT(i)\
    \ =\n(\n(r + 1) × mod( 1\np × p),\nif i ∈ G\n0,\notherwise\n(2)\nwhere p is the\
    \ CH count, r is the current round number, and G is the number of SNs that\nhave\
    \ not been a CH in the previous 1/p rounds. The second-level CHs are selected\
    \ from\nthe ﬁrst-level CHs based on the shortest distance to the BS to function\
    \ as aggregated packet\nforwarders or relay CHs (RCHs).\nThe authors in [120]\
    \ introduced energy (E(i)) and distance (D(i)) attributes into Equa-\ntion (1)\
    \ to improve the load-balancing merit of LEACH. The resulting Th is expressed\
    \ as:\nTh =\n(\npd\n1−pd[r×mod 1\npd ] × [E(i) + (1 − D(i))],\nif n ∈ G\n0,\n\
    otherwise\n(3)\nMultihop routing via relay CHs (RCHs) was recommended for distant\
    \ CHs in the\nfuture scope of [120].\nIn the LEACH presented with a distance-based\
    \ threshold (LEACH-DT) algorithm\nin [121], the probability of becoming a CH depends\
    \ on the relative distance between a\nnode and the BS. This algorithm differs\
    \ from the LEACH algorithm because the desired\npercentage of CHs (pi) is predeﬁned\
    \ using Equation (5), while the threshold T(I, r) is\nexpressed as:\nT(i, r) =\n\
    (\npi\n1−pi×[r×mod 1\npi ],\nif Gi(r) = 0\n0,\nif Gi(r) = 1\n(4)\nNote that the\
    \ terms retain their usual deﬁnitions, namely:\np(i) = k\nξi\n∑N\nj=1 ξj\n, 0\
    \ ≤ pi ≤ 1,\n(5)\nwhere\nξi = 1/ECH × di − Enon−CH,\n(6)\nThe variable di depicts\
    \ the distance between node i and the BS, and ECH and Enon−CH\nare the average\
    \ residual energies in CHs and non-CHs, respectively. The authors further\nIoT\
    \ 2023, 4\n309\nestablished the need for a multihop routing approach in simulations\
    \ and real-world WSNs\nto validate the countless theoretical propositions and\
    \ beneﬁts.\nIn the decentralized energy-efﬁcient hierarchical cluster-based routing\
    \ algorithm\n(DHCR) [123], SNs compete to become CHs. First, the BS broadcasts\
    \ a trigger message at a\nspeciﬁc range. The receiving nodes then compete to become\
    \ a CH by disseminating a new\nmessage containing their residual energies and\
    \ distances from the BS. Using this informa-\ntion, a neighboring node i within\
    \ the target range receives the message and calculates its\nCHSn f uni as:\nCHSn\
    \ f uni = a × Erei\nEmax\n+ b ×\n1\nDis − To − BSi\n,\n(7)\nwhere Erei and Emax\
    \ are the residual and initial energy levels of node i, respectively;\nDis − To\
    \ − BSi is the distance between node i and the BS, and a and b are real random\n\
    values between 0 and 1 such that a + b = 1. The values of Dis − To − BSi of node\
    \ i\nand its neighbors are compared, and the node with the highest Dis − To −\
    \ BSi value is\nselected as the CH. A ﬁrst-level CH broadcasts its residual energy,\
    \ neighboring node count,\nand distance from the BS via a speciﬁc route. The next-level\
    \ CHs receive the information\nand similarly repeat the procedure to ensure that\
    \ every node determines a redistributor\nCH to the BS at the same time. A redistributor\
    \ CH has more energy and fewer neighbors\n(neighboring degrees).\nHowever, the\
    \ Hamilton energy-efﬁcient routing protocol (HEER) [124] creates an\nentire cluster\
    \ of nodes, aggregates data, and transmits them to the BS via a Hamiltonian\n\
    path that has been created by the entire cluster of nodes and controls the cluster\
    \ size by\nselecting one node as the CH using the probability function p, which\
    \ can be expressed as:\np = Lmessage\nFmax\n(8)\nwhere Lmessage is the size of\
    \ every node, and Fmax is the maximum size of a frame. The\nHEER protocol creates\
    \ the clusters only once in the ﬁrst round based on LEACH, and it\nrole-rotates\
    \ the CHs per the energy on the Hamiltonian path after a determined period.\n\
    Similarly, the two-phased EAMR protocol [125] randomly preselects the CH. A CH\n\
    also selects its closest CH as its redistributor CH. The clusters are static over\
    \ the entire\nnetwork lifetime, and the CH role rotates randomly within the clusters\
    \ according to a cluster\nreplacement threshold. The new CH inherits the redistributor\
    \ role if the old CH had one.\nOverall, since the node location, residual energy,\
    \ and sleep schedule are indispensable in the\nCH selection process, the CH selection\
    \ methods proposed by the authors in [9,12,36,120,140]\nare recommended WSN-based\
    \ Agri-IoT applications.\n8.3. Challenges of Existing MOO Frameworks and Recommended\
    \ Future Works\nAs Figures 9 and 10 illustrate, the performance efﬁciency of an\
    \ infrastructure-less\nWSN-based Agri-IoT mainly depends on the embedded MOO remedies\
    \ in the associated\nsupervisory routing protocol [12]. Several MOO frameworks\
    \ have been researched since\nAgri-IoT networks are subjected to multiple design\
    \ and operational constraints. A MOO\nframework is expected to formulate multiple\
    \ objective functions from a set of MOO metrics\nto simultaneously optimize these\
    \ multiple objectives, such as the maximal energy savings,\nhighest connectivity,\
    \ best latency, highest reliability, and balanced SN power depletion\nrates across\
    \ the network. Although the MOO methods are the best candidates for Agri-IoT,\n\
    the existing MOO solutions used in Agri-IoT are adopted from traditional WSN-based\
    \ IoT\nwithout any contextual evaluation [12,16,26]. Consequently, they have not\
    \ fulﬁlled their\nintended purposes due to several technical challenges, including\
    \ the following:\n1.\nThey are limited to non-cluster-based network architectures,\
    \ which implies that the promis-\ning potentials of the clustering architecture\
    \ are not adequately exploited [9,12,50,51].\n2.\nThey are frequently implemented\
    \ in the operational phase of the network, which\nmakes it challenging to ﬁnd\
    \ global optimal solutions with a balanced tradeoff among\nIoT 2023, 4\n310\n\
    conﬂicting objective functions. The performance optimality of the Agri-IoT network\n\
    starts from the SN design.\n3.\nThey rely on high-resource-demanding algorithms,\
    \ such as mathematical programming-\nbased scalarization methods, multi-objective\
    \ genetic algorithms (MOGAs), heuristics/\nmetaheuristics-based optimization algorithms,\
    \ and other advanced optimization\ntechniques [23,26,48], making them unsuitable\
    \ for the battery-powered SNs in Agri-IoT.\n4.\nThere are no contextual MOO guidelines\
    \ based on Figure 20 to govern the PHY-layer\ndesign of Agri-IoT to achieve global\
    \ optimal solutions with a balanced tradeoff among\nconﬂicting objectives. Consequently,\
    \ there are conﬂicting scenarios in existing MOO\nsolutions [50].\nTherefore,\
    \ there is an urgent demand for a realistic low-power MOO framework for\nCA-IoT\
    \ networks that is founded on the core WSN design metrics and MOO taxonomy\nmetrics\
    \ in Figure 10 and the top of Figure 20, respectively. The following section assesses\n\
    how evaluations and deductions evolve in a typical event sampling and routing\
    \ protocol\nin a CA-IoT network for precision irrigation system management.\n\
    9. Design of WSN-Speciﬁc CA-IoT Routing Protocol\nThis section proposes a CA-IoT-based\
    \ supervisory routing protocol that supports\nstatic SNs, rotatable/ﬁxed CH roles,\
    \ and enhanced SN resource management under the\ndeterministic deployment approach.\
    \ This can improve energy savings, connectivity, dis-\ntance moderation, and multihop\
    \ inter-cluster communication in the resulting network.\nThe operational cycle\
    \ and the embedded activities of our WSN-based CA-IoT protocol for\nprecision\
    \ irrigation application, as illustrated in Figure 21, include the following:\n\
    1.\nNetwork Construction or Setup Phase: This phase involves network modeling,\
    \ CH election,\nand cluster formation, which is explained in Figure 21. The active–sleep\
    \ duty-cycle\nscheduling ensures the SNs only switch to active mode during their\
    \ scheduled sampling\ndurations. In randomly deployed WSNs, redundant event reporting\
    \ can be avoided\nusing a correlated pairing-based active–sleep duty-cycle scheduling\
    \ approach in [12].\nThe optimal CH count and cluster size must be predeﬁned from\
    \ the resource capacities\nof the SNs. After the initial CH election, the MNs\
    \ are recruited and assigned their\nrespective sampling and intra-cluster communication\
    \ timeslots.\n2.\nSampling, Data Management, and Transmission Phase: The tasks\
    \ executed in this phase\ninclude event sampling, intra-cluster and inter-cluster\
    \ data transmissions, data outlier\nFM, and event data redundancy management.\
    \ Since microclimatic soil parameters do\nnot change swiftly [1,14], sampling\
    \ can only be scheduled during the day at 3-hourly\ntime intervals. In addition\
    \ to power optimization, the clustering approach provides\nsuperb potential for\
    \ both local and global FM using threshold-based FM theory and\nspatial correlation\
    \ techniques. Based on the architecture in Figure 19 and the resource\nlimitations\
    \ of the SNs, it is recommended that the communication beyond the BS or\ngateway\
    \ can utilize LoRa or Wi-Fi AirBox, whereas the intra-cluster and inter-cluster\n\
    communications must be the freely available low-power BLE technology, since it\
    \ is\nthe most suitable for the clustering architecture.\n3.\nNetwork Maintenance\
    \ and Reclustering Phase: This phase resolves all unforeseen topolog-\nical dynamics\
    \ caused by the SNs’ failures, network scalability, node mobility, and un-\nexpected\
    \ operational ﬂaws, without interfering with the normal network functionality\n\
    via adaptive reclustering, self-healing, and multihop routing techniques [12,23,24].\n\
    Here, a parent CH coordinates the election of child CHs (CCHs). While all non-CCHs\n\
    switch to sleep mode, the CCHs recruit new MNs using location and residual energy\n\
    parameters, assign them their respective sampling timeslots, and repeat Phase\
    \ 2 after-\nward, as shown in Figure 21. SN-out-of-service faults are auto-detected\
    \ and tolerated\nin this phase.\nIoT 2023, 4\n311\nCA-IoT  \nOperational\nCycle\n\
    SNs pairing\nActive-sleep duty-cycle scheduling\nCH-counts predefined\nCH selection\n\
    MN recruitment  \nMNs assigned sampling timeslots \nEvent sensing & local FM\n\
    1-hop intra-cluster comm.\nData aggregation by CHs\nData redundancy checks & FM\n\
    Inter-cluster 1-hop/m-hop comm.\nOld CHs select new CHs\nActive-Sleep duty-cycle\
    \ activated \nNew MNs recruited\nMNs assigned sampling timeslots \n1. Network\
    \ Construction\n2. Sampling, Data Management, \n and Data Transmission\n3. Network\
    \ Maintenance and \nReclustering\nFigure 21. Proposed operation cycle for designing\
    \ our CA-IoT network’s routing protocol.\nAdditionally, Figure 21 uniquely incorporates\
    \ correlated pairing-based duty cycling,\nconstant control message complexity\
    \ FM/data redundancy scheme, network construc-\ntion/maintenance, and cluster\
    \ quality measures that can ensure unprecedented energy\nsavings and event data\
    \ quality. This clustering approach can further minimize energy\nwastage via a\
    \ suitable MAC method, a low-power wireless communication standard, data\naggregation\
    \ with data redundancy checks, and CH role rotation, among other factors.\nAlthough\
    \ the various sections of the deduced MOO metrics have been implemented in our\n\
    CA-IoT operational cycle, the most desired performance can be optimally attained\
    \ when\nthe MOO metrics are modeled into their respective objective functions,\
    \ and their optimal\nvalues are determined and implemented in both simulation\
    \ and testbed experiments in\nfuture works. Also, a realistic multihop routing\
    \ framework can also be inculcated into this\nprotocol for large-scale applications.\n\
    10. Open Issues and Future Works: Cluster-Based WSN-Speciﬁc Agri-IoT Networks\n\
    This tutorial has ﬁrmly established that the WSN-based Agri-IoT is an indispens-\n\
    able component of smart or precision farming and greenhouses, despite its resource-\
    \ and\ndeployment-induced challenges [12,26,141]. Unlike the conventional IoT,\
    \ Agri-IoT is com-\npelled to drive on batteries and affordable task-scalable\
    \ SNs. However, it must meet the\nexpectations in Figure 2 to guarantee a stable\
    \ performance. The cluster-based routing\ntechnique has emerged with promising\
    \ potential to mitigate these challenges. However,\nresults from existing testbed\
    \ solutions in this study show otherwise due to the absence of a\ncontextualized\
    \ in-depth overview of Agri-IoT as well as the following open issues which\nhave\
    \ not received extensive contextual research considerations in Agri-IoT applications:\n\
    1.\nThe cluster-based routing architecture for WSN-based Agri-IoT has not received\
    \ holistic\nand practical research considerations as far as FM, power optimization,\
    \ and network\nadaptability are concerned. Therefore, there is a demand for multi-parametric\
    \ optimiza-\ntion frameworks and guidelines for designing and implementing the\
    \ WSN sublayer.\n2.\nConcerning FM, most proposed schemes in the canon state of\
    \ the art are stand-\nalone, have high control message and computational complexities\
    \ (energy-inefﬁcient),\nand are mostly incompatible with the clustering architecture\
    \ [25,52]. The desired\nFM schemes for CA-IoT applications should be equipped\
    \ with fault-avoidance mech-\nIoT 2023, 4\n312\nanisms and the capacity to detect\
    \ and self-heal root faults (SN-out-of-service and\nsensory data outliers [25]),\
    \ not their effects.\n3.\nMultihop routing, which is a requirement to attain the\
    \ desired energy savings and\nnetwork adaptability in large-scale CA-IoT networks,\
    \ is asserted to be more energy-\nefﬁcient only in simulation experiments [33,120,121,123–125,128–130]\
    \ but not in real-\nworld implementation [22–24]. This imbalance is due to a lack\
    \ of a comprehensive\nand reliable theoretical multihop routing framework that\
    \ is based on the total commu-\nnication costs of multihop routing.\n4.\nThere\
    \ is a demand for a more realistic and holistic MOO framework that can op-\ntimize\
    \ the operational efﬁciency metrics such as cluster size, cluster counts, den-\n\
    sity/uniformity of nodes, communication distance, and activity schedule/duration,\n\
    right from the network design phase to the operational phase of Agri-IoT networks.\n\
    5.\nAlthough the current literature supports adaptive clustering with CH role\
    \ rotation\nideology, there exists the need for an optimal initial CH-count estimator\
    \ in order to\nimprove the stability of CH elections and the architecture. Thus,\
    \ the cluster quality\nindices (e.g., optimal cluster count and size) must be\
    \ predetermined before deﬁning\nthem in the associated CH election method, since\
    \ CH stability is compromised in most\nclustering methods [9,21,119–121,123,124].\n\
    6.\nMost protocols in the state of the art rely on perfect homogeneous networks,\
    \ which is\nunrealistic due to variations in modular specifications and resource\
    \ utilization and the\nfact that different SNs may have different communication\
    \ and data computational roles.\nTherefore, a more realistic, contextualized,\
    \ and adaptive clustering approach that leverages\nthe gap between the philosophy\
    \ and practice of Agri-IoT applications is needed.\n7.\nIn addition to the parent\
    \ LEACH protocol [21,61] which is a complete suite application\ncomprising routing,\
    \ MAC, and physical characteristics for wireless communication in\nWSNs, most\
    \ benchmarking MAC protocols purposed for traditional IoT applications\nare shelved,\
    \ since they are developed in solitude without application speciﬁcity and\nnetwork\
    \ architectural considerations. A custom-built and holistic protocol suite for\n\
    Agri-IoT remains a research opportunity.\n11. Conclusion and Future Works\nThis\
    \ tutorial presented: (1) a systematic overview of the fundamental concepts, tech-\n\
    nologies, and architectural standards of WSN-based Agri-IoT; (2) an evaluation\
    \ of the tech-\nnical design requirements of a robust, ubiquitous, self-healing,\
    \ energy-efﬁcient, adaptive,\nand affordable Agri-IoT; (3) a comprehensive survey\
    \ of the benchmarking FM techniques,\ncommunication standards, routing protocols,\
    \ MMAC protocols, and WSN-based testbed\nsolutions; and (4) an in-depth case study\
    \ on how to design a self-healing, energy-efﬁcient,\naffordable, adaptive, stable,\
    \ and cluster-based WSN-speciﬁc Agri-IoT from a proposed\ntaxonomy of MOO metrics\
    \ that can guarantee optimized network performance. Further-\nmore, this tutorial\
    \ established new taxonomies of faults, architectural layers, and MOO\nmetrics\
    \ for CA-IoT networks. Using the open technical issues, it recommended application-\n\
    speciﬁc requirements of Agri-IoT, general design expectations, and remedial measures,\n\
    and it evaluated them in CA-IoT for precision irrigation in order to optimally\
    \ exploit the\nproposed MOO metrics in a typical CA-IoT design in both simulation\
    \ and real-world\ndeployment scenarios. Overall, this tutorial can serve as a\
    \ new reference document for the\nIoT community and Agri-IoT designers, since\
    \ it adequately examined all critical aspects of\nWSN-based Agri-IoT networks\
    \ from theoretical modeling to real-world implementation.\nAuthor Contributions:\
    \ The First Author contributed 60% while the second the third Authors con-\ntributed\
    \ 20% each. Conceptualization, E.E.; methodology, A.M.W.; writing, review and\
    \ editing, E.E.,\nO.T. and A.M.W.; supervision, O.T. and A.M.W.; project administration,\
    \ E.E.; and funding acquisition,\nE.E., and O.T. All authors have read and agreed\
    \ to the published version of the manuscript.\nFunding: The work was carried out\
    \ with the ﬁnancial support of icipe- World Bank Financing\nAgreement No D347-3A\
    \ and the World Bank Korea Trust Fund Agreement No TF0A8639 for the\nIoT 2023,\
    \ 4\n313\nPASET Regional Scholarship and Innovation Fund. The views expressed\
    \ herein do not necessarily\nreﬂect the ofﬁcial opinions of the donors.\nData\
    \ Availability Statement: This research has no such data.\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest.\nAbbreviations\nSN\nSensor Node\n\
    WSN\nWireless Sensor Network\nIoT\nInternet of Things\nAgri-IoT\nAgricultural\
    \ Internet-of-Things\nCA-IoT\nCluster-based Agricultural Internet of Things\n\
    FD/FT\nFault Detection and Fault Tolerance\nFA\nFault Avoidance\nFM\nFault Management\n\
    MOO\nMulti-Objective Optimization\nBS\nBase Station\nMMAC\nMultichannel Medium\
    \ Access Control\nMAC\nMedium Access Control\nBLE\nBluetooth Low-Energy\nCH\n\
    Cluster Head\nRCH\nRelay Cluster Head\nMN\nMember Node\nAODV\nAd hoc On-demand\
    \ Distance Vector\nRPL\nRouting over Low-Power and Lossy Networks protocol\nCAM\n\
    Channel Access Management\nDCO\nDuty-Cycle Optimization\nReferences\n1.\nKumar,\
    \ P.; Reddy, S.R.N. Lessons Learned From the Deployment of Test-Bed for Precision\
    \ Agriculture. In Proceedings of the\nInternational Conference on Sustainable\
    \ Computing in Science, Technology & Management (SUSCOM-2019), Jaipur, India,\
    \ 26–28\nFebruary 2019; pp. 25686–25697. [CrossRef]\n2.\nAbbasi, M.; Yaghmaee,\
    \ M.H.; Rahnama, F. Internet of Things in agriculture: A survey. In Proceedings\
    \ of the 2019 3rd International\nConference on Internet of Things and Applications\
    \ (IoT), Isfahan, Iran, 17–18 April 2019; pp. 1–12.\n3.\nGennari, P.; Moncayo,\
    \ J.R. World Food and Agriculture Statistical Pocketbook; Food and Agriculture\
    \ Organization of the United\nNations: Rome, Italy, 2018; Volume 1, pp. 1–248.\n\
    4.\nShiferaw, B.; Tesfaye, K.; Kassie, M.; Abate, T.; Prasanna, B.M.; Menkir,\
    \ A. Managing vulnerability to drought and enhancing\nlivelihood resilience in\
    \ Sub-Saharan Africa: Technological, institutional and policy options. Weather.\
    \ Clim. Extrem. 2014, 3, 67–79.\n[CrossRef]\n5.\nDevi, K.H.; Gupta, M.V. IoT Application,\
    \ A Survey. Int. J. Eng. Technol. 2018, 7, 891–896. [CrossRef]\n6.\nStoces, M.;\
    \ Vanˇek, J.; Masner, J.; Pavlík, J. Internet of Things (IoT) in Agriculture—Selected\
    \ Aspects. AGRIS On-Line Pap. Econ.\nInform. 2016, 8, 83–88. [CrossRef]\n7.\n\
    Lova, R.; Vijayaraghavan, V. IoT Technologies in Agricultural Environment: A Survey.\n\
    Wireless Pers. Commun. 2020, 113,\n2415–2446. [CrossRef]\n8.\nFarooq, M.S.; Riaz,\
    \ S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of IoT in Agriculture\
    \ for the Implementation of\nSmart Farming. IEEE Access 2019, 7, 56237–156271.\
    \ [CrossRef]\n9.\nTauseef, S.; Nadeem, J.; Talha, Q. Energy Efﬁcient Sleep Awake\
    \ Aware (EESAA) intelligent Sensor Network routing protocol.\nIn Proceedings of\
    \ the 15th International Multitopic Conference (INMIC), Islamabad, Pakistan, 13–15\
    \ December 2012; pp. 317–322.\n[CrossRef]\n10.\nHartung, R.; Kulau, U.; Gernert,\
    \ B.; Rottmann, S.; Wolf, L. On the Experiences with Testbeds and Applications\
    \ in Precision Farm-\ning. In Proceedings of the 15th ACM Conference on Embedded\
    \ Network Sensor Systems, Delft, The Netherlands, 5 November\n2017; pp. 54–61.\n\
    11.\nLangendoen, K.; Baggio, A.; Visser, O. Murphy loves potatoes: Experiences\
    \ from a pilot sensor network deployment in precision\nagriculture. In Proceedings\
    \ of the 20th IEEE International Parallel & Distributed Processing Symposium,\
    \ Rhodes, Greece, 25–29\nApril 2006; Volume 51, pp. 8–13. [CrossRef]\n12.\nEffah,\
    \ E.; Thiare, O. Realistic Cluster-Based Energy-Efﬁcient and Fault-Tolerant (RCEEFT)\
    \ Routing Protocol for Wireless Sensor\nNetworks (WSNs). In Advances in Information\
    \ and Communication; Springer: Cham, Switzerland, 2020; pp. 320–337.\nIoT 2023,\
    \ 4\n314\n13.\nNasser, N.; Karim, L.; Ali, A.; Anan, M.; Kheliﬁ, N. Routing in\
    \ the Internet of Things. In Proceedings of the GLOBECOM\n2017—2017 IEEE Global\
    \ Communications Conference, Singapore, 4–8 December 2017; pp. 1–6.\n14.\nJawad,\
    \ H.M.; Nordin, R.; Gharghan, S.K.; Jawad, A.M.; Ismail, M. Energy-Efﬁcient Wireless\
    \ Sensor Networks for Precision\nAgriculture: A Review. Sensors 2017, 8, 1781.\
    \ [CrossRef]\n15.\nClausen, T.; Herberg, U.; Philipp, M. A critical evaluation\
    \ of the IPv6 Routing Protocol for Low Power and Lossy Networks\n(RPL). In Proceedings\
    \ of the 2011 IEEE 7th International Conference on Wireless and Mobile Computing,\
    \ Networking and\nCommunications (WiMob), Shanghai, China, 10–12 October 2011;\
    \ pp. 365–372.\n16.\nEffah, E.; Thiare, O.; Wyglinski, A.M. Multi-Objective Modeling\
    \ of Clustering-Based Agricultural Internet of Things. In Pro-\nceedings of the\
    \ 2020 IEEE 92nd Vehicular Technology Conference (VTC2020-Fall), Victoria, BC,\
    \ Canada, 18 November–16\nDecember 2020. [CrossRef]\n17.\nEffah, E.; Thiare, O.;\
    \ Wyglinski, A.M. Energy-Efﬁcient Multihop Routing Framework for Cluster-Based\
    \ Agricultural Internet of\nThings (CA-IoT). In Proceedings of the 2020 IEEE 92nd\
    \ Vehicular Technology Conference (VTC2020-Fall), Victoria, BC, Canada,\n18 November–16\
    \ December 2020. [CrossRef]\n18.\nKhan, R.; Ali, I.; Zakarya, M.; Ahmad, M.; Imran,\
    \ M.; Shoaib, M. Technology-Assisted Decision Support System for Efﬁcient Water\n\
    Utilization: A Real-Time Testbed for Irrigation Using Wireless Sensor Networks.\
    \ IEEE Access 2018, 6, 25686–25697. [CrossRef]\n19.\nAhmed, N.; De, D.; Hussain,\
    \ I. Internet of Things (IoT) for Smart Precision Agriculture and Farming in Rural\
    \ Areas. IEEE Internet\nThings J. 2018, 5, 4890–4899. [CrossRef]\n20.\nEffah,\
    \ E.; Dorgloh, W. GSM-Controlled Irrigation System (GSMCIS) for Vegetable Farmers\
    \ in Ghana. Ghana J. Technol. 2016,\n1, 21–24.\n21.\nMehmood, A.; Mauri, J.L.;\
    \ Noman, M.; Song, H. Improvement of the Wireless Sensor Network Lifetime Using\
    \ LEACH with\nVice-Cluster Head. Ad Hoc Sens. Wirel. Netw. 2015, 28, 1–17.\n22.\n\
    Haenggi, M.; Puccinelli, D. Routing in Ad Hoc Networks: A Case for Long Hops.\
    \ IEEE Commun. Mag. 2005, 43, 93–101.\n23.\nPešovi´c, U.M.; Mohorko, J.J.; Benkiˇc,\
    \ K.; ˇCuˇcej, Ž.F. Single-hop vs. multi-hop—Energy efﬁciency analysis in wireless\
    \ sen-\nsor networks. In Proceedings of the 18th Telekomunikacioni forum TELFOR\
    \ 2010, Belgrade, Serbia, 23–25 November 2010;\npp. 471–474.\n24.\nHaenggi, M.\
    \ Twelve Reasons not to Route over Many Short Hops. In Proceedings of the IEEE\
    \ 60th Vehicular Technology\nConference, Los Angeles, CA, USA, 26–29 September\
    \ 2004; pp. 1–4.\n25.\nEffah, E.; Tiare, O. Survey: Faults, Fault Detection and\
    \ Fault Tolerance Techniques in Wireless Sensor Networks. Int. J. Comput.\nSci.\
    \ Inf. Secur. 2018, 16, 1–14.\n26.\nFerentinos, K.; Tsiligiridis, T. Adaptive\
    \ design optimization of wireless sensor networks using genetic algorithms. Comput.\
    \ Netw.\n2007, 51, 1031–1051.\n27.\nWorld Bank. Access to electricity (% of population)—Sub-Saharan\
    \ Africa. In The World Bank and UN Data on SSA; The World\nBank: Washington, DC,\
    \ USA, 2021; pp. 1–3.\n28.\nElleuchi, M.; Boujelben, M.; Saleh, M.S.B.; Obeid,\
    \ A.M.; Abid, M. Tree based routing protocol in WSNs: A comparative\nperformance\
    \ study of the routing protocols DEEC and RPL. Future Technol. Publ. 2016, 5,\
    \ 7–16.\n29.\nAl-Fuqaha, A.; Guizani, M.; Mohammadi, M.; Aledhari, M.; Ayyash,\
    \ M. Internet of Things: A Survey on Enabling Technologies,\nProtocols and Applications.\
    \ IEEE Commun. Surv. Tutor. 2015, 17, 2347–2376. [CrossRef]\n30.\nLoukatos, D.;\
    \ Manolopoulos, I.; Arvaniti, E.-S.; Arvanitis, K.G.; Sigrimis, N.A. Experimental\
    \ Testbed for Monitoring the Energy\nRequirements of LPWAN Equipped Sensor Nodes.\
    \ IFAC-PapersOnLine 2018, 51, 309–313. [CrossRef]\n31.\nAkyildiz, I.F.; Su, W.;\
    \ Sankarasubramaniam, Y.; Cayirci, E. A survey on sensor networks. IEEE Commun.\
    \ Mag. 2002, 40, 102–114.\n[CrossRef]\n32.\nJovanovic, M.D.; Djordjevic, G.L.;\
    \ Nikolic, G.S.; Petrovic, B.D. Multichannel Media Access Control for Wireless\
    \ Sensor Networks:\nA survey. In Proceedings of the 2011 10th International Conference\
    \ on Telecommunication in Modern Satellite Cable and\nBroadcasting Services (TELSIKS),\
    \ Nis, Serbia, 5–8 October 2011; pp. 741–744. [CrossRef]\n33.\nXu, L.; O’Hare,\
    \ G.; Collier, R. A Smart and Balanced Energy-Efﬁcient Multihop Clustering Algorithm\
    \ (Smart-BEEM) for MIMO\nIoT Systems in Future Networks. Sensors 2017, 17, 1574.\n\
    34.\nFei, Z.; Li, B.; Yang, S.; Xing, C.; Chen, H.; Hanzo, L. A Survey of Multi-Objective\
    \ Optimization in Wireless Sensor Networks:\nMetrics, Algorithms, and Open Problems.\
    \ IEEE Commun. Surv. Tutor. 2017, 19, 550–586.\n35.\nMcBratney, A.O. Future Directions\
    \ of Precision Agriculture. Precis. Agric. 2005, 6, 7–23. [CrossRef]\n36.\nEffah,\
    \ E.; Thiare, O. Estimation of Optimal Number of Clusters: A New Approach to Minimizing\
    \ Intra-Cluster Communication\nCost in WSNs. Int. J. Innov. Technol. Explor. Eng.\
    \ 2018, 8, 521–524.\n37.\nAsim Zeb, A.K.M.; Islam, M.; Zareei, M.; Mamoon, I.A.;\
    \ Mansoor, N.; Baharun, S.; Katayama, Y.; Komaki, S. Clustering Analysis\nin Wireless\
    \ Sensor Networks: The Ambit of Performance Metrics and Schemes Taxonomy. Int.\
    \ J. Distrib. Sens. Netw. 2016,\n12, 4979142.\n38.\nYounis, O.; Fahmy, S. HEED:\
    \ A hybrid, energy-efﬁcient, distributed clustering approach for ad hoc sensor\
    \ networks. IEEE Trans.\nMob. Comput. 2004, 3, 660–669.\n39.\nRajaram, M.L.; Kougianos,\
    \ E.; Mohanty, S.P.; Choppali, U. Wireless Sensor Network Simulation Frameworks:\
    \ A Tutorial Review:\nMATLAB/Simulink bests the rest. IEEE Consum. Electron. Mag.\
    \ 2016, 5, 63–69. [CrossRef]\nIoT 2023, 4\n315\n40.\nGurpreet, K.; Sukhpreet,\
    \ K. Enhanced M-Gear Protocol for Lifetime Enhancement in Wireless Clustering\
    \ System. Int. J. Comput.\nAppl. 2016, 147, 30–34.\n41.\nYen, H. Optimization-based\
    \ channel constrained data aggregation routing algorithms in multi-radio wireless\
    \ sensor networks.\nSensors 2009, 9, 4766–4788. [PubMed]\n42.\nLe, T.T.T.; Moh,\
    \ S. Link Scheduling Algorithm with Interference Prediction for Multiple Mobile\
    \ WBANs. Sensors 2017, 17, 2231.\n[CrossRef]\n43.\nDarwish, I.M.; Elqafas, S.M.\
    \ Enhanced Algorithms for Fault Nodes Recovery in Wireless Sensors Network. Int.\
    \ J. Sens. Netw.\nData Commun. 2016, 6, 150.\n44.\nManisha, M.; Deepak, N. Fault\
    \ Detection in Wireless Sensor Networks. IPASJ Int. J. Comput. Sci. 2015, 3, 6–10.\n\
    45.\nBanerjee, I.; Chanak, P.; Rahaman, H.; Samanta, T. Effective fault detection\
    \ and routing scheme for wireless sensor networks.\nComput. Electr. Eng. 2014,\
    \ 40, 291–306. [CrossRef]\n46.\nSharma, P.; Kaur, I. A Comparative Study on Energy\
    \ Efﬁcient Routing Protocols in Wireless Sensor Networks. Int. J. Comput. Sci.\n\
    Issues 2015, 8, 98–106.\n47.\nFaniana, F.; Rafsanjanibc, M. Cluster-based routing\
    \ protocols in wireless sensor networks: A survey based on methodology. J.\nNetw.\
    \ Comput. Appl. 2019, 142, 111–142.\n48.\nIqbal, M.; Naeem, M.; Anpalagan, A.;\
    \ Ahmed, A.; Azam, M. Wireless Sensor Network Optimization: Multi-Objective Paradigm.\n\
    Sensors 2015, 15, 17572–17620. [PubMed]\n49.\nMamalis, B.; Gavalas, D.; Konstantopoulos,\
    \ C.; Pantziou, G. Clustering in Wireless Sensor Networks. In RFID and Sensor\
    \ Networks;\nCRC Press: Boca Raton, FL, USA, 2009; pp. 324–364.\n50.\nKalkha,\
    \ H.; Satori, H.; Satori, K. Performance Evaluation of AODV and LEACH Routing\
    \ Protocol. Adv. Inf. Technol. Theory Appl.\n2016, 1, 113–118.\n51.\nDwivedi,\
    \ A.K.; Kushwaha, S.; Vyas, O.P. Performance of Routing Protocols for Mobile Adhoc\
    \ and Wireless Sensor Networks: A\nComparative Study. Int. J. Recent Trends Eng.\
    \ 2009, 2, 101–105.\n52.\nFjellin, J.E. Medium Access Control (MAC) in WSN. Unpublished\
    \ Lecture Notes, 12 October 2018; pp. 1–27. Available\nonline: https://www.uio.no/studier/emner/matnat/iﬁ/nedlagte-emner/INF5910CPS/h11/undervisningsmateriale/201111\n\
    01_mac_in_wsn.pdf (accessed on 16 July 2023).\n53.\nYe, W.; Heidemann, J.; Estrin,\
    \ D. Medium access control with coordinated adaptive sleeping for wireless sensor\
    \ networks.\nIEEE/ACM Trans. Netw. 2004, 12, 493–506. [CrossRef]\n54.\nKabara,\
    \ J.; Calle, M. MAC Protocols Used by Wireless Sensor Networks and a General Method\
    \ of Performance Evaluation. Int. J.\nDistrib. Sens. Netw. 2012, 8, 834784. [CrossRef]\n\
    55.\nBuettner, M.; Yee, G.V.; Anderson, E.; Han, R. X-MAC: A Short Preamble MAC\
    \ Protocol for Duty-Cycled Wireless Sensor\nNetworks. 2006. pp. 307–320. Available\
    \ online: http://portal.acm.org/citation.cfm?id=1182807.1182838 (accessed on 16\n\
    July 2023).\n56.\nKuntz, R.; Gallais, A.; Noel, T. Auto-adaptive MAC for energy\
    \ efﬁcient burst transmissions in wireless sensor networks.\nIn Proceedings of\
    \ the 2011 IEEE Wireless Communications and Networking Conference, Cancun, Mexico,\
    \ 28–31 March 2011;\npp. 233–238.\n57.\nPolastre, J.; Hill, J.; Culler, D. Versatile\
    \ low power media access for wireless sensor networks. In Proceedings of the Second\n\
    International Conference on Embedded Networked Sensor Systems(SenSys’04), Baltimore,\
    \ MD, USA, 3–5 November 2004;\npp. 95–107.\n58.\nErgen, S.C.; Varaiya, P. PEDAMACS:\
    \ Power efﬁcient and delay aware medium access protocol for sensor networks. IEEE\
    \ Trans.\nMob. Comput. 2006, 5, 920–930. [CrossRef]\n59.\nTang, L.; Sun, Y.; Gurewitz,\
    \ O.; Johnson, D.B. PWMAC: An energy-efﬁcient predictive-wakeup MAC protocol for\
    \ wireless sensor\nnetworks. In Proceedings of the 2011 IEEE INFOCOM, Shanghai,\
    \ China, 10–15 April 2011; pp. 1305–1313.\n60.\nGautam, G.C.; Chand, N. A Novel\
    \ Cluster Based Time Synchronization Technique for Wireless Sensor Networks. Wirel.\
    \ Sens.\nNetw. 2017, 9, 145–165. [CrossRef]\n61.\nHeinzelman, W.B.; Chandrakasan,\
    \ A.P.; Balakrishnan, H. An application-speciﬁc protocol architecture for wireless\
    \ microsensor\nnetworks. IEEE Trans. Wirel. Commun. 2002, 1, 660–670. [CrossRef]\n\
    62.\nBen-Othman, J.; Mokdad, L.; Yahya, B. An energy efﬁcient priority-based QoS\
    \ MAC protocol for wireless sensor networks.\nIn Proceedings of the 2011 IEEE\
    \ International Conference on Communications (ICC), Kyoto, Japan, 5–9 June 2011;\
    \ pp. 1–6.\n63.\nKumar, A. WiseMAC Protocol for Wireless Sensor Network-An Energy-Efﬁcient\
    \ Protocol. Master’s Thesis, National Institute of\nTechnology, Rourkela, India,\
    \ 2014; pp. 1–63.\n64.\nKarki, V.S.; Udupi, G.R.; Gadgil, A. Advanced WiseMAC\
    \ Protocol for Wireless Sensor Network. Int. Res. J. Eng. Technol. 2015, 2,\n\
    771–778.\n65.\nPak, W. Ultra-low-power media access control protocol based on\
    \ clock drift characteristics in wireless sensor networks. Int. J.\nDistrib. Sens.\
    \ Netw. 2017, 13, 1550147717722155. [CrossRef]\n66.\nTang, L.; Sun, Y.; Gurewitz,\
    \ O.; Johnson, D.B. EM-MAC: A dynamic multichannel energy-efﬁcient MAC protocol\
    \ for wireless\nsensor networks. In Proceedings of the Twelfth ACM International\
    \ Symposium on Mobile Ad Hoc Networking and Computing,\nParis, France, 17–19 May\
    \ 2011; p. 23.\nIoT 2023, 4\n316\n67.\nLim, J.B.; Jang, B.; Sichitiu, M.L. MCAS-MAC:\
    \ A Multichannel asynchronous scheduled MAC protocol for Wireless Sensor\nNetworks.\
    \ Comput. Commun. 2014, 56, 98–107.\n68.\nIrandegani, M.; Bagherizadeh, M. Designing\
    \ an asynchronous multi-channel media access control protocol based on service\n\
    quality for wireless sensor networks. Int. J. Adv. Comput. Res. 2017, 7, 190–199.\
    \ [CrossRef]\n69.\nvan Hoesel, L.F.W.; Havinga, P.J.M. A Lightweight Medium Access\
    \ Protocol (LMAC) for Wireless Sensor Networks: Reducing\nPreamble Transmissions\
    \ and Transceiver State Switches. In Proceedings of the 1st International Workshop\
    \ on Networked Sensing\nSystems, Tokyo, Japan, 1–6 January 2004.\n70.\nIncel,\
    \ O.D. Multi-Channel Wireless Sensor Networks: Protocols, Design And Evaluation.\
    \ Ph.D. Dissertation, University of\nTwente, Enschede, The Netherlands, 2009;\
    \ pp. 1–162.\n71.\nZhang, Z.; Mehmood, A.; Shu, L.; Huo, Z.; Zhang, Y.; Mukherjee,\
    \ M. A Survey on Fault Diagnosis in Wireless Sensor Networks.\nIEEE Access 2018,\
    \ 6, 11349–11364. [CrossRef]\n72.\nParhami, B. Fault-Tolerant Computing; Lecture\
    \ Notes; Electrical and Computer Engineering Department, University of California:\n\
    Santa Barbara, CA, USA, 2018; pp. 1–2.\n73.\nRaghunath, K.M.K.; Rengarajan, N.\
    \ Investigation of Faults, Errors and Failures in Wireless Sensor Network: A Systematical\n\
    Survey. Int. J. Adv. Comput. Res. 2013, 3, 2249–7277.\n74.\nJiang, P. A New Method\
    \ for Node Fault Detection in Wireless Sensor Networks. Sensors 2009, 9, 1282–1294.\
    \ [CrossRef]\n75.\nKoushanfar, K.; Potkonjak, M.; Sangiovanni-Vincentell, A. Fault\
    \ tolerance techniques for wireless ad hoc sensor networks. Proc.\nIEEE Sens.\
    \ 2002, 2, 1491–1496.\n76.\nOyiza, O.S. Implementation of New Fault Tolerance\
    \ Solution in Wireless Sensor Networks in A Multi-Channel Context. Master’s\n\
    Thesis, Department of Computer Science, African University of Science and Technology,\
    \ Galadima, Nigeria, 2016; pp. 1–36.\n77.\nBhattacharya, R.; Chhanda, R. Wireless\
    \ sensor networks—A study of fault detection and recovery based on OSI layers.\
    \ Int. J.\nConceptions Comput. Inf. Technol. 2013, 1, 7–14.\n78.\nYu, M.; Mokhtar,\
    \ H.; Merabti, M. Self-Managed Fault Management in Wireless Sensor Networks. In\
    \ Proceedings of the Second\nInternational Conference on Mobile Ubiquitous Computing,\
    \ Systems, Services and Technologies (UBICOMM’08), Valencia, Spain,\n29 September–4\
    \ October 2008; pp. 13–18.\n79.\nPanda, M.; Khilar, P.M. Distributed Byzantine\
    \ Fault detection technique in wireless sensor networks based on hypothesis testing.\n\
    Comput. Electr. Eng. 2015, 48, 270–285. [CrossRef]\n80.\nParadis, L.; Han, Q.\
    \ A Survey of Fault Management in Wireless Sensor Networks. J. Netw. Syst. Manag.\
    \ 2007, 15, 171–190.\n[CrossRef]\n81.\nDing, M.; Chen, D.; Xing, K.; Cheng, X.\
    \ Localized fault-tolerant event boundary detection in sensor networks. In Proceedings\
    \ of\nthe 24th Annual Joint Conference of the IEEE Computer and Communications\
    \ Societies, Miami, FL, USA, 13–17 March 2005;\nVolume 2, pp. 902–913.\n82.\n\
    Lee, W.L.; Datta, A.; Cardell-Oliver, R. Network Management in Wireless Sensor\
    \ Networks. In Handbook of Mobile Ad Hoc and\nPervasive Communication; American\
    \ Scientiﬁc Publishers: Valencia, CA, USA, 2006; pp. 1–201.\n83.\nZhang, Y.; Dragoni,\
    \ N.; Wang, J. A framework and classiﬁcation for fault detection approaches in\
    \ Wireless Sensor Networks with\nan energy efﬁciency perspective. Int. J. Distrib.\
    \ Sens. Netw. 2015, 2, 678029.\n84.\nAsim, M.; Mokhtar, H.; Merabti, M. self-managing\
    \ fault management mechanism for wireless sensor network. Int. J. Wirel. Mob.\n\
    Netw. 2010, 2, 184–197. [CrossRef]\n85.\nHeena, H.; Kapoor, S. Survey of Fault\
    \ Detection Algorithm in WSN. SSRG Int. J. Comput. Sci. Eng. 2015, 5, 78–81.\n\
    86.\nKaur, E.J.; Kaur, E.P. A Survey on Fault Detection and Recovery Techniques\
    \ in Wireless Sensor Networks. Int. J. Eng. Res. Gen.\nSci. 2015, 3, 638–642.\n\
    87.\nZhang, Z.; Chong, E.K.P.; Pezeshki, A.; Moran, W.; Howard, S.D. Detection\
    \ performance in balanced binary relay trees with node\nand link failures. IEEE\
    \ Trans. Signal Process. May 2013, 61, 2165–2177. [CrossRef]\n88.\nHo, J.; Tay,\
    \ W.P.; Quek, T.Q.S.; Chong, E.K.P. Robust decentralized detection and social\
    \ learning in tandem networks. IEEE Trans.\nSignal Process. 2015, 63, 5019–5032.\
    \ [CrossRef]\n89.\nNardelli, P.H.J.; de Lima, C.H.M.; Alves, H.; Cardieri, P.;\
    \ Latva-aho, M. Throughput analysis of cognitive wireless networks with\nPoisson\
    \ distributed nodes based on location information. Ad Hoc Netw. 2015, 33, 1–18.\
    \ [CrossRef]\n90.\nUmebayashi, K.; Lehtomaki, J.J.; Yazawa, T.; Suzuki, Y. Efﬁcient\
    \ Decision fusion for cooperative spectrum sensing based on\nOR-rule. IEEE Trans.\
    \ Wireless Commun. 2012, 11, 2585–2595. [CrossRef]\n91.\nLuo, X.; Dong, M.; Huang,\
    \ Y. On distributed fault-tolerant detection in wireless sensor networks. IEEE\
    \ Trans. Comput. 2006, 55,\n58–70. [CrossRef]\n92.\nKakamanshadi, G.; Gupta, S.;\
    \ Singh, S. A survey on fault tolerance techniques in Wireless Sensor Networks.\
    \ In Proceedings of\nthe 2015 International Conference on Green Computing and\
    \ Internet of Things (ICGCIoT), Greater Noida, India, 8–10 October\n2015; pp.\
    \ 168–173. [CrossRef]\n93.\nPedro, H.; Nardelli, J.; Ramezanipour, I.; Alves,\
    \ H.; de Lima, H.M.C.; Latva-aho, M. Average Error Probability in Wireless Sensor\n\
    Networks With Imperfect Sensing and Communication for Different Decision Rules.\
    \ arXiv 2016, arXiv:1508.02253v2.\n94.\nLau, B.C.; Ma, E.W.; Chow, T.W. Probabilistic\
    \ fault detector for wireless sensor network. Expert Syst. Appl. 2014, 41, 3703–3711.\n\
    [CrossRef]\nIoT 2023, 4\n317\n95.\nTang, P.; Chow, T.W. Wireless sensor-networks\
    \ conditions monitoring and fault diagnosis using neighborhood hidden conditional\n\
    random ﬁeld. IEEE Trans. Ind. Inform. 2016, 12, 933–940. [CrossRef]\n96.\nDhal,\
    \ R.; Torres, J.A.; Roy, S. Detecting link failures in complex network processes\
    \ using remote monitoring. Phys. Stat. Mech.\nAppl. 2015, 437, 36–54. [CrossRef]\n\
    97.\nTitouna, C.; Ari, A.A.A.; Moumen, H. FDRA: Fault Detection and Recovery Algorithm\
    \ for Wireless Sensor Networks. In Proceed-\nings of the Mobile Web and Intelligent\
    \ Information Systems, 15th International Conference, MobiWIS 2018, Barcelona,\
    \ Spain, 6–8\nAugust 2018; Springer: Cham, Switzerland, 2018; pp. 72–85.\n98.\n\
    Krishnamachari, B.; Iyengar, S. Distributed Bayesian algorithms for fault-tolerant\
    \ event region detection in wireless sensor\nnetworks. IEEE Trans. Comput. 2004,\
    \ 53, 1. [CrossRef]\n99.\nChen, Q.; Lam, K.-Y.; Fan, P. Comments on ”Distributed\
    \ Bayesian algorithms for fault-tolerant event region detection in wireless\n\
    sensor networks”. IEEE Trans. Comput. 2005, 54, 1182–1183. [CrossRef]\n100. Ould-Ahmed-Vall,\
    \ E.; Ferri, B.H.; Riley, G.F. Distributed Fault-Tolerance for Event Detection\
    \ Using Heterogeneous Wireless\nSensor Networks. IEEE Trans. Mob. Comput. 2012,\
    \ 11, 1994–2007. [CrossRef]\n101. Lee, M.; Choi, Y. Fault detection of wireless\
    \ sensor networks. Comput. Commun. 2008, 31, 3469–3475.\n102. Akbari, A.; Arash,\
    \ A.D.; Khademzadeh, A.; Beikmahdavi, N. Fault Detection and Recovery in wireless\
    \ Sensor Network Using\nClustering. Proc. Int. J. Wirel. Mob. Netw. 2011, 3, 130–137.\n\
    103. Chen, J.; Kher, S.; Somani, A. Distributed Fault Detection of Wireless Sensor\
    \ Networks. In Proceedings of the 2006 Workshop on\nDependability Issues in Wireless\
    \ ad Hoc Networks and Sensor Networks, Los Angeles, CA, USA, 26 September 2006;\
    \ pp. 1–11.\n104. Nandi, M.; Dewanji, A.; Roy, B.; Sarkar, S. Model Selection\
    \ Approach for Distributed Fault Detection in Wireless Sensor Networks.\nIEEE\
    \ Trans. Comput. 2014, 55, 1–12.\n105. Guclua, S.O.; Ozcelebia, T.; Lukkiena,\
    \ J. Distributed Fault Detection in Smart Spaces Based on Trust Management. Procedia\n\
    Comput. Sci. 2016, 83, 66–73.\n106. Ji, S.; Shen-fang, Y.; Ma, T.; Tan, C. Distributed\
    \ Fault Detection for Wireless Sensor Based on Weighted Average. In Proceedings\
    \ of\nthe 2010 Second International Conference on Networks Security, Wireless\
    \ Communications and Trusted Computing, Wuhan,\nChina, 24–25 April 2010; pp. 57–60.\n\
    107. DePaola, A.; Gaglio, S.; Re, G.; Milazzo, F.; Ortolani, M. Adaptive distributed\
    \ outlier detection for wsns. IEEE Trans. Cybern. 2015,\n45, 888–899.\n108. Li,\
    \ W.; Bassi, F.; Dardari, D.; Kieffer, M.; Pasolini, G. Low-complexity distributed\
    \ fault detection for wireless sensor networks. In\nProceedings of the 2015 IEEE\
    \ International Conference on Communications (ICC), London, UK, 8–12 June 2015;\
    \ pp. 3469–3475.\n109. Taleb, A.A.; Mathew, J.; Kocak, T.; Pradhan, D.K. A Novel\
    \ Fault Diagnosis Technique in Wireless Sensor Networks. Int. J. Adv.\nNetw. Serv.\
    \ 2009, 2, 230–240.\n110. Myoupo, J.F.; Nana, B.P.; Tchendji, V.K. Fault-tolerant\
    \ and energy-efﬁcient routing protocols for a virtual three-dimensional\nwireless\
    \ sensor network. Comput. Electr. Eng. 2018, 72, 949–964.\n111. Titouna, C.; Gueroui,\
    \ M.; Aliouat, M.; Ari, A.A.A.; Adouane, A. Distributed fault-tolerant algorithm\
    \ for wireless sensor networks.\nInt. J. Commun. Netw. Inf. Secur. 2017, 9, 241–246.\n\
    112. Furquim, G.; Jalali, R.; Pessin, G.; Pazzi, R.W.; Ueyama, J. How to improve\
    \ fault tolerance in disaster predictions: A case study\nabout ﬂash ﬂoods using\
    \ IoT, ML and real data. Sensors 2018, 18, 907.\n113. Titouna, C.; Aliouat, M.;\
    \ Gueroui, M. FDS: Fault Detection Scheme for Wireless Sensor Networks. Wirel.\
    \ Pers. Commun. 2016, 86,\n549–562. [CrossRef]\n114. Tosic, T.; Thomos, N.; Frossard,\
    \ P. Distributed sensor failure detection in sensor networks. Signal Process.\
    \ 2017, 93, 399–410.\n[CrossRef]\n115. Li, W.; Bassi, F.; Dardari, D.; Kieffer,\
    \ M.; Pasolini, G. Defective Sensor Identiﬁcation for WSNs Involving Generic Local\
    \ Outlier\nDetection Tests. IEEE Trans. Signal Inf. Process. Over Netw. 2016,\
    \ 2, 29–48. [CrossRef]\n116. Viswanathan, R.; Varshney, P.K. Distributed detection\
    \ with multiple sensors—Part I: Fundamentals. Proc. IEEE 1997, 85, 54–63.\n[CrossRef]\n\
    117. Bredin, J.; Demaine, E.; Hajiaghayi, M.; Rus, D. Deploying sensor networks\
    \ with guaranteed capacity and fault tolerance.\nIn Proceedings of the MobiHoc’05,\
    \ Urbana-Champaign, IL, USA, 25–27 May 2005; pp. 309–319.\n118. Smaragdakis, G.;\
    \ Matta, I.; Bestavros, A. SEP: A Stable Election Protocol for Clustered Heterogeneous\
    \ Wireless Sensor Networks.\nOpenBU, 2004. Available online: https://open.bu.edu/handle/2144/1548\
    \ (accessed on 16 July 2023).\n119. Zhixiang, D.; Bensheng, Q. Three-layered routing\
    \ protocol for WSN based on LEACH algorithm. In Proceedings of the 2007\nIET Conference\
    \ on Wireless, Mobile and Sensor Networks (CCWMSN07), Shanghai, China, 12–14 December\
    \ 2007; pp. 72–75.\n[CrossRef]\n120. Liu, T.; Li, F. Power-efﬁcient clustering\
    \ routing protocol based on applications in wireless sensor network. In Proceedings\
    \ of\nthe 2009 5th International Conference on Wireless Communications, Networking\
    \ and Mobile Computing, Beijing, China, 24–26\nSeptember 2009.\n121. Kang, S.;\
    \ Nguyen, T. Distance based thresholds for cluster head selection in wireless\
    \ sensor networks. IEEE Commun. Lett. 2012,\n16, 1396–1399. [CrossRef]\n122. Rajeev,\
    \ K.; Rajdeep, K. Evaluating the Performance of DEEC variants. Int. J. Comput.\
    \ Appl. 2014, 97, 9–16.\nIoT 2023, 4\n318\n123. Sabet, M.; Naji, H. A decentralized\
    \ energy-efﬁcient hierarchical cluster-based routing algorithm for WSNs. AEU Int.\
    \ J. Electron.\nCommun. 2015, 69, 790–799. [CrossRef]\n124. Yi, D.; Yang, H. HEER—A\
    \ delay-aware and energy-efﬁcient routing protocol for WSNs. Comput. Netw. 2016,\
    \ 104, 155–173.\n[CrossRef]\n125. Cengiz, K.; Dag, T. Energy aware multi-hop routing\
    \ protocol for WSNs. IEEE Access 2018, 6, 2622–2633. [CrossRef]\n126. Sasikumar,\
    \ P.; Khara, S. K-Means Clustering In Wireless Sensor Networks. In Proceedings\
    \ of the 2012 Fourth International\nConference on Computational Intelligence and\
    \ Communication Networks, Mathura, India, 3–5 November 2012; pp. 140–144.\n[CrossRef]\n\
    127. Hassana, M.E.; Ziedanb, N.I. A Mobile BS and Multi-Hop LEACH-C Extension\
    \ for WSNs. Am. Sci. Res. J. Eng. Technol. Sci. 2017,\n36, 198–210.\n128. Farooq,\
    \ M.O.; Dogar, A.B.; Shah, G.A. MR-LEACH: Multi-hop routing with low energy adaptive\
    \ clustering hierarchy. In Pro-\nceedings of the 2010 Fourth International Conference\
    \ on Sensor Technologies and Applications, Venice, Italy, 18–25 July 2010;\npp.\
    \ 262–268.\n129. Al-Sodairi, S.; Ounia, K. Reliable and energy-efﬁcient multi-hop\
    \ LEACH-based clustering protocol for WSNs. Sustain. Comput.\nInform. Syst. 2018,\
    \ 20, 1–13.\n130. Amiri, A. Extending Network Lifetime of Wireless Sensor Networks.\
    \ Int. J. Comput. Netw. Commun. 2015, 7, 1–17. [CrossRef]\n131. Shanthi, G.; Sundarambal,\
    \ M. Investigation of Multi Hop Sensor Node Data Aggregation in Building Management\
    \ System. Res. J.\nBiotech 2017, 324–330.\n132. Akbar, M.; Javaid, N.; Imran,\
    \ M.; Rao, A.; Younis, M.S.; Niaz, I.A. A multi-hop angular routing protocol for\
    \ wireless sensor\nnetworks. Int. J. Distrib. Sens. Netw. 2016, 12, 1–7. [CrossRef]\n\
    133. Sert, S.A.; Alchihabi, A.; Yazici, A. A Two-Tier Distributed Fuzzy Logic\
    \ Based Protocol for Efﬁcient Data Aggregation in Multihop\nWSNs. IEEE Trans.\
    \ Fuzzy Syst. 2018, 26, 3615–3629. [CrossRef]\n134. Sert, S.A.; Yazici, A. Optimizing\
    \ the performance of rule-based fuzzy routing algorithms in WSNs. In Proceedings\
    \ of the 2019\nIEEE International Conference on Fuzzy Systems (FUZZ-IEEE), New\
    \ Orleans, LA, USA, 23–26 June 2019; pp. 1–6.\n135. Mohrehkesh, S.; Weigle, M.\
    \ Optimizing Communication Energy Consumption in Perpetual Wireless Nanosensor\
    \ Networks.\nIn Proceedings of the IEEE Globecom, Atlanta, GA, USA, 9–13 December\
    \ 2013; pp. 545–550.\n136. Basagni, S. Distributed Clustering for Ad Hoc Networks.\
    \ 1999, pp. 310–315. Available online: https://ieeexplore.ieee.org/\ndocument/778957\
    \ (accessed on 16 July 2023).\n137. Devi, G.Y.D. Clustering Algorithms In Wireless\
    \ Sensor Networks—A Survey. Int. J. Electr. Electron. Comput. Syst. 2013, 1, 1–9.\n\
    138. Tandon, R.; Dey, B.; Nandi, S. Weight Based Clustering in Wireless Sensor\
    \ Networks. In Proceedings of the 2013 National\nConference on Communications\
    \ (NCC), New Delhi, India, 1–3 February 2013; pp. 1–5.\n139. Ducrocq, T.; Mitton,\
    \ N.; Hauspie, M. Energy-based Clustering for Wireless Sensor Network Lifetime\
    \ Optimization. In Proceedings\nof the WCNC—Wireless Communications and Networking\
    \ Conference, Shanghai, China, 7–10 April 2013.\n140. Wan, R.; Xiong, N.; Loc,\
    \ N.T. An energy-efﬁcient sleep scheduling mechanism with similarity measure for\
    \ WSNs. Hum. Cent.\nComput. Inf. Sci. 2018, 8, 1–6. [CrossRef]\n141. Nanda, S.;\
    \ Panda, G. Automatic clustering algorithm based on multi-objective Immunized\
    \ PSO to classify actions of 3D human\nmodels. Eng. Appl. Artif. Intell. 2013,\
    \ 26, 1429–1441. [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions\
    \ and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Iot
  limitations: '>'
  pdf_link: https://www.mdpi.com/2624-831X/4/3/14/pdf?version=1690458486
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing,
    and Optimization'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agriengineering5020054
  analysis: '>'
  authors:
  - Dedalos Kypris
  - Γεώργιος Νικολάου
  - Efstathios Evangelides
  - Damianos Neocleous
  citation_count: 0
  full_citation: '>'
  full_text: ">\nCitation: Kypris, D.; Nikolaou, G.;\nEvangelides, E.; Neocleous,\
    \ D.\nInstallation and Adjustment of a\nHydraulic Evapotranspiration\nMultisensor\
    \ Prototype.\nAgriEngineering 2023, 5, 876–885.\nhttps://doi.org/10.3390/\nagriengineering5020054\n\
    Academic Editor: Giovanni Rallo\nReceived: 24 March 2023\nRevised: 28 April 2023\n\
    Accepted: 5 May 2023\nPublished: 11 May 2023\nCopyright:\n© 2023 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nAgriEngineering\n\
    Technical Note\nInstallation and Adjustment of a Hydraulic Evapotranspiration\n\
    Multisensor Prototype\nDedalos Kypris 1, Georgios Nikolaou 2,*\n, Efstathios Evangelides\
    \ 3 and Damianos Neocleous 4\n1\nFormer Head of Water Resources Division, Water\
    \ Development Department, Ministry of Agriculture,\n1646 Nicosia, Cyprus; dedalosk@primehome.com\n\
    2\nDepartment of Agriculture Crop Production and Rural Environment, School of\
    \ Agricultural Sciences,\nUniversity of Thessaly, Fytokou Str., 38446 Volos, Greece\n\
    3\nIndependent Researcher, 1420 Nicosia, Cyprus; sevangelides@da.moa.gov.cy\n\
    4\nAgricultural Research Institute, Ministry of Agriculture, 1516 Nicosia, Cyprus;\
    \ dneocleous@ari.moa.gov.cy\n*\nCorrespondence: gnicolaounic@gmail.com; Tel.:\
    \ +30-24210-93249\nAbstract: The aim of this note is to provide a quick overview\
    \ of the installation and adjustment of an\nexclusively mechanical standalone\
    \ automatic device that self-adjusts to weather changes to control\nthe frequency\
    \ and duration of the irrigation. The “hydraulic evapotranspiration multisensor”\
    \ (HEM)\nis composed of a reduced evaporation pan with water, a magnet with a\
    \ ﬂoater ﬂoating in the pan, a\nhydraulic device operated by a magnetic hydraulic\
    \ valve that has the ability to adjust the frequency of\nirrigation, and a hydraulic\
    \ system that returns water to the pan during each irrigation event through\n\
    an adjustable dripper to replace the water lost due to the fact of evaporation.\
    \ This note is particularly\nrelevant for arid–semi-arid regions where agricultural\
    \ production is fully dependent on irrigation.\nKeywords: evapotranspiration;\
    \ smart irrigation; patented\n1. Introduction\nIn the process of evaluating the\
    \ effects of atmospheric conditions on water consump-\ntion in irrigation scheduling,\
    \ experiments are needed to investigate the hydrological cycle\nof evapotranspiration\
    \ (ET) across varying ﬁeld conditions. One model that adequately\ndescribes these\
    \ processes is surely the Penman–Monteith equation, which concerns the\ninﬂuence\
    \ of different climatic variables (e.g., air temperature and humidity, solar radiation,\n\
    and wind velocity) [1,2]. Different models have been used for irrigation control\
    \ in open-\nﬁeld and protected types of cultivation based on the original evapotranspiration\
    \ equation\nby Penman–Monteith. However, when using such models, it is difﬁcult\
    \ to measure vari-\nables, including the canopy and aerodynamic resistance of\
    \ crop surfaces [3]. Additionally,\nthe model equation’s coefﬁcients must ﬁrst\
    \ be calibrated for the speciﬁc crop under the\nprevailing climatic conditions.\
    \ Alternatively, the optimal approaches to irrigation con-\ntrol may include plant\
    \ stress sensing as opposed to climate or substrate irrigation-based\napproaches.\
    \ Nowadays, companies that manufacture irrigation systems have released\nweather-sensitive\
    \ irrigation regulators on the market that sense the weather constituents\naffecting\
    \ ET. Readings from said sensors are fed into computer models to assess ET using\n\
    intelligent decision algorithms that modify the irrigation schedule, which is\
    \ set for normal\nweather conditions. For deviations from a normal to lower ET\
    \ rate, these models increase\nthe time interval between consecutive irrigation\
    \ cycles to avoid excessive irrigation. Thus,\ncompanies claim up to 30% water\
    \ savings [4].\nAn enabler of precision irrigation system is the adaptation of\
    \ Internet of Things\napplications [5]. IoT bridges the gap between the physical\
    \ and cyber worlds through the\nintegration of sensor-based information, data\
    \ communication, data cloud or fog-computing\nacquisition, and intelligent processing\
    \ in real time [6]. Artiﬁcial neural network-based\nmodels for estimating evaporation\
    \ were proposed in [2], which took into account climatic\nAgriEngineering 2023,\
    \ 5, 876–885. https://doi.org/10.3390/agriengineering5020054\nhttps://www.mdpi.com/journal/agriengineering\n\
    AgriEngineering 2023, 5\n877\nparameters. Along this line, other authors have\
    \ indicated that the water requirements\nfor several crops can be sufﬁciently\
    \ modeled for the considered climate based on virtual\nsensors and fuzzy logic\
    \ control systems [7,8]. Li et al. [9] proposed a composite irrigation\ncontroller\
    \ that considers predictive algorithms, crop coefﬁcients, fuzzy algorithms, and\n\
    sliding mode control methods for maize irrigation scheduling.\nEstimating ET from\
    \ climate variables, however, can be a difﬁcult task for farmers, who\nmay not\
    \ be familiar with the use of complex hydrological and energy models. Because\
    \ most\nof the Earth’s irrigated lands are located in developing countries, where\
    \ climatological data\nare often incomplete and inaccurate, it is thus important\
    \ to use the cheapest, simplest, and\nmost practical monitoring method to improve\
    \ efﬁciency in irrigation [10].\nCommonly used timer-based controllers (i.e.,\
    \ no feedback irrigation decision support\nsystem) apply excess water in weather\
    \ conditions when irrigation is not necessary. For\nexample, along the central\
    \ coast of California, open-loop control irrigation systems apply\nmore than 200%\
    \ of the actual evapotranspiration requirements of vegetables through\nsprinklers’\
    \ irrigation systems [11].\nIn arid and semi-arid regions, the need for water\
    \ management at the farm level is\nof high importance due to the fact of a rainfall\
    \ deﬁcit, which calls for crop irrigation\nduring most of the growing season.\
    \ Under these conditions, dry farming productivity is\nvery low and restricted\
    \ to a few drought-resistant species, as the rainfall varies from year\nto year\
    \ and its occurrence is unpredictable. However, the adoption of micro-irrigation\n\
    techniques, such as drip irrigation and sprinkler irrigation, the adaptation of\
    \ planting\ndates, the selection of drought-resistant varieties, and the use of\
    \ mulch-based cultivation\ntechniques would be beneﬁcial for improving water-use\
    \ efﬁciency and conserving water\nresources [12,13]. The number of irrigation\
    \ events required for optimal yields of the main\nirrigated crops are estimated\
    \ to be between eight and ﬁfty-eight (e.g., in Cyprus), with\na total amount of\
    \ irrigation water applied being between 355 mm (e.g., vegetable crops)\nand 2400\
    \ mm (e.g., Colocasia crops) from April to October [13]. Since there are so many\n\
    applications of water, the strategic timing of irrigation events is critical.\
    \ Cyprus’ water\nresources depend entirely on rainfall, and Cyprus is expected\
    \ to experience the most\nadverse climate change effects of any Eastern Mediterranean\
    \ country, including changes\nin precipitation and increases in temperature [14].\
    \ Important waterworks that store river\nwater were constructed approximately\
    \ 60 years ago, and this was a multiannual operation.\nThe optimum capacity was\
    \ provided using mathematical models based on the rainfall\nrecords that were\
    \ available at the time. Around the 1990s, it was realized that the amount\nof\
    \ water stored in the dam was less than expected. An analysis of the rainfall\
    \ records up to\n1993 revealed that the rainfall values used to calibrate the\
    \ model, which were prior to the\ndam’s construction, were too high. A graphical\
    \ presentation of the yearly rainfall record for\nCyprus in the hydrological year\
    \ 1900–1901 revealed a steady rainfall decrease in the 30-year\nmoving average.\
    \ This decrease persists up to today at a rate of approximately 1.1 mm y−1.\n\
    This decrease in rainfall since the construction of Cyprus’ most important dam\
    \ until today\nis approximately 13%, which means a run-off reduction of approximately\
    \ 40% [15].\nIn Cyprus, approximately 70% of the amount used for irrigated agriculture\
    \ is fresh-\nwater, and every effort must be made to reduce the waste of irrigation\
    \ water through\npromoting low-cost means and practices that simple farmers can\
    \ afford, understand, and\naccept. So, a novel, environmentally friendly system\
    \ that does not require software, elec-\ntricity and batteries, or weathermatic\
    \ and that both saves irrigation water and protects\nplantations from water deﬁcit\
    \ stress is the proposed hydraulic evapotranspiration multi-\nsensor system. Its\
    \ installation and adjustments are explained in this paper [15].\nClass A evaporation\
    \ pans (i.e., large open, circular containers that are 120.7 cm in\ndiameter and\
    \ 25.4 cm deep, ﬁlled with water) have been used around the world as a ready\n\
    source of evaporation data. Several individuals have used this method because\
    \ of their\nsimplicity and low cost to estimate ET and irrigation scheduling,\
    \ as it may still be the\nmost practical and accurate meteorological method [10,16,17].\
    \ Their simplicity and high\ndegree of adaptation at the farm level, which are\
    \ characteristics of the evaporation pan,\nAgriEngineering 2023, 5\n878\nseem\
    \ to be the primary reason for the pan’s expansion among producers. The work of\n\
    Thomson and Fisher (2006) [9], who designed an evaporimeter based on a washtub\
    \ for\neasy cotton irrigation scheduling, is relevant. Similarly, other researchers\
    \ have proposed\nactivating a drip irrigation system based on a water level sensing\
    \ system in a mini-pan [18].\nAdditionally, ﬁeld devices that integrate environmental\
    \ effects and measure evaporation\nsuch as atmometers can also be used to schedule\
    \ irrigation [19,20].\nThe “hydraulic evapotranspiration multisensor” (HEM) product’s\
    \ design and opera-\ntion, as an exclusively mechanical standalone automatic device\
    \ for irrigation scheduling,\nis described in detail in [21]. The novelty of an\
    \ HEM lies in its integrated approach to\nirrigation scheduling, which considers\
    \ only the energy obtained from piped water by\nmonitoring water evaporation in\
    \ the pan. It is composed of a reduced evaporation pan,\na magnet with a ﬂoater\
    \ ﬂoating in the pan, a hydraulic device operating with a magnetic\nhydraulic\
    \ valve with the ability to adjust the frequency of irrigation, and a hydraulic\
    \ system\nthat returns water to the pan through a dripper to replace the water\
    \ lost due to the fact\nof evaporation. The information in this note is aimed\
    \ at providing a quick overview of\nthe HEM’s installation and adjustment. During\
    \ the installation of the HEM, the frequency\nand duration of the irrigation were\
    \ considered the crop water requirements, which were\ncalculated using the classical\
    \ pan A method, with a statistically correct water volume (Cv),\nunder average\
    \ weather conditions for each month at different topographical elevations.\n2.\
    \ Installation\nThe HEM prototype (Figure 1) was installed at an inland, semi-arid\
    \ location in south-\nern Cyprus, near the (1) water supply pipe of a pressurized\
    \ irrigation system in which a\npressure controller was set to reduce the pressure\
    \ to 2 Bar from 4.5 Bar (i.e., drip irrigation\nsystem pressure requirements).\
    \ On an outlet from this pipe, a common solenoid irrigation\nvalve transformed\
    \ into a (2) hydraulic irrigation valve was installed after a (3) faucet,\nwhich,\
    \ for the moment, was closed. The location of the installation was selected to\
    \ ensure\nuninterrupted sunshine with no barriers that would block the ﬂow of\
    \ wind in order to sense\nthe changes in the all-weather constituents in holistic\
    \ way. A vertical angle (4) iron pole\nwas driven into the ground at the upper\
    \ end of which a ﬁxture supported a (5) magnetic\nhydraulic valve with the (6)\
    \ stem in the vertical position. This was inserted in the base (7)\npipe of the\
    \ (8) evaporation pan, which was placed in a horizontal position without water.\n\
    Then, the (10) ﬂoater was left to slide down gently on the base pipe until it\
    \ was stopped by\nthe (9) ring screw. Slightly before, a click noise was heard,\
    \ which meant that the magnet\nreached the correct level to raise the (11) magnetic\
    \ rod, opening the magnetic hydraulic\nvalve. No adjustment with the ring screw\
    \ was necessary. The next step was to connect\na small pipe to the (12) inlet\
    \ of the said valve and to the chamber of the (13) hydraulic\nirrigation valve\
    \ in order to be controlled by the HEM. When the magnetic hydraulic valve\nis\
    \ closed, the water in the said chamber is kept under pressure, and the hydraulic\
    \ irrigation\nvalve is closed. The (14) outlet of the magnetic hydraulic valve\
    \ was connected with a\nsmall pipe to run the escaping water to the irrigation\
    \ line through the (15) adaptor, which\nreplaced the solenoid of the transformed\
    \ solenoid irrigation valve. To the said outlet, one\nend of the (16) water return\
    \ pipe was connected to the transfer part of the water escaping\ntowards the evaporation\
    \ pan. At the other end, an (17) adjustable dripper was connected,\nﬁxed at the\
    \ edge of the pan, returning the water lost by evaporation, and resetting the\n\
    system. At this stage, by removing the ﬂoater, the (11) magnetic rod dropped keeping\n\
    the magnetic hydraulic valve closed. The faucet was opened, ﬁlling the (13) chamber\n\
    of the hydraulic irrigation valve and the (6) stem of the magnetic hydraulic valve\
    \ with\nwater under pressure that kept the hydraulic irrigation valve closed.\
    \ At this stage, the\n(18) frequency screw was set at an intermediate indication,\
    \ and the ﬂoater was replaced,\nopening both the magnetic and irrigation valves.\
    \ The water was released for irrigation, and\nfrom the fully opened adjustable\
    \ dripper water started ﬂowing in the evaporation pan with\nits level quickly\
    \ raised. To complete the installation, the irrigation frequency was adjusted\n\
    AgriEngineering 2023, 5\n879\nwith the frequency screw and the watering duration\
    \ also through the adjustable dripper, as\nexplained below.\nAgriEngineering 2023,\
    \ 5, FOR PEER REVIEW  \n4 \n \n \nfrequency screw was set at an intermediate indication,\
    \ and the floater was replaced, open-\ning both the magnetic and irrigation valves.\
    \ The water was released for irrigation, and \nfrom the fully opened adjustable\
    \ dripper water started flowing in the evaporation pan \nwith its level quickly\
    \ raised. To complete the installation, the irrigation frequency was \nadjusted\
    \ with the frequency screw and the watering duration also through the adjustable\
    \ \ndripper, as explained below. \n \nFigure 1. Details of the HEM prototype:\
    \ (1) pressurized irrigation system; (2) hydraulic irrigation \nvalve; (3) faucet;\
    \ (4) iron pole; (5) fixture supporting the magnetic hydraulic valve; (6) stem\
    \ of the \nmagnetic hydraulic valve; (7) base pipe fixed perpendicularly at the\
    \ base of the evaporation pan; (8) \nevaporation pan; (9) ring screw to stop the\
    \ floater at the right level; (10) ring screw; (11) magnetic \nrod; (12) small\
    \ pipe; (13) chamber of the valve; (14) outlet of the magnetic hydraulic valve;\
    \ (15) adap-\ntor replacing the solenoid; (16) water return pipe; (17) adjustable\
    \ dripper; (18) frequency screw; (19) \npermanent magnet; (20) magnetic component\
    \ of the rod [22]. \n3. Setting the Time Interval \nThe hydraulic evapotranspiration\
    \ multisensor (HEM) has one sensor to assess, in a \nholistic way, the changes\
    \ in the all-weather components affecting evapotranspiration. This \nis accomplished\
    \ by monitoring the water evaporation rate in the evaporation pan, as \nshown\
    \ in Figure 1, with a floater that floats in the water of the pan, moving in a\
    \ vertical \ndirection following a drop in the water level because of evaporation.\
    \ The rate of this drop \ndefines the time interval between the consecutive irrigation\
    \ cycles. In evapotranspiration \nformulas, the readings from a Class A evaporation\
    \ pan are important components. An \nelectronic-based, weighable reduced pan A\
    \ evaporimeter (i.e., RS-EVA-N01-2; Shandong \nRenke Control Technology Co., Ltd.;\
    \ Jinan City; China) for the automatic monitoring of \nFigure 1. Details of the\
    \ HEM prototype: (1) pressurized irrigation system; (2) hydraulic irrigation\n\
    valve; (3) faucet; (4) iron pole; (5) ﬁxture supporting the magnetic hydraulic\
    \ valve; (6) stem of the\nmagnetic hydraulic valve; (7) base pipe ﬁxed perpendicularly\
    \ at the base of the evaporation pan;\n(8) evaporation pan; (9) ring screw to\
    \ stop the ﬂoater at the right level; (10) ring screw; (11) mag-\nnetic rod; (12)\
    \ small pipe; (13) chamber of the valve; (14) outlet of the magnetic hydraulic\
    \ valve;\n(15) adaptor replacing the solenoid; (16) water return pipe; (17) adjustable\
    \ dripper; (18) frequency\nscrew; (19) permanent magnet; (20) magnetic component\
    \ of the rod [22].\n3. Setting the Time Interval\nThe hydraulic evapotranspiration\
    \ multisensor (HEM) has one sensor to assess, in a\nholistic way, the changes\
    \ in the all-weather components affecting evapotranspiration. This\nis accomplished\
    \ by monitoring the water evaporation rate in the evaporation pan, as shown\n\
    in Figure 1, with a ﬂoater that ﬂoats in the water of the pan, moving in a vertical\
    \ direction\nfollowing a drop in the water level because of evaporation. The rate\
    \ of this drop deﬁnes the\ntime interval between the consecutive irrigation cycles.\
    \ In evapotranspiration formulas, the\nreadings from a Class A evaporation pan\
    \ are important components. An electronic-based,\nweighable reduced pan A evaporimeter\
    \ (i.e., RS-EVA-N01-2; Shandong Renke Control\nTechnology Co., Ltd.; Jinan City;\
    \ China) for the automatic monitoring of the evaporation\nprocess was installed,\
    \ based on the manufacturer’s instructions, for correlation purposes of\nthe pan\
    \ readings with those of the HEM pan readings. To make the HEM readings easy\n\
    and accurate, an external tube that graduated in mm, which was a ﬂoating object\
    \ with\na ﬂat upper surface, as the reference line was installed. This tube was\
    \ connected to the\nAgriEngineering 2023, 5\n880\nHEM’s evaporation pan (Figure\
    \ 2). The per day water level drop rate of the pan, because of\nevaporation, was\
    \ expected to be analogous with that of the Class A evaporation pan but\nless\
    \ because the open water area in the multisensor pan was partly covered by the\
    \ ﬂoater.\nThe drop in mm of the water level in the multisensor pan per day, Dday,\
    \ was (Equation (1)):\nDday = Eca ∗\n\x12Ap − Af\nAp\n\x13\n(1)\nwhere Eca is\
    \ the per day evaporation in the Class A evaporation pan in mm, Ap is the\ncross-sectional\
    \ area of the evaporation pan, and Af is that of the ﬂoater at the water level\n\
    in cm2.\nAgriEngineering 2023, 5, FOR PEER REVIEW  \n5 \n \n \nthe evaporation\
    \ process was installed, based on the manufacturer’s instructions, for cor-\n\
    relation purposes of the pan readings with those of the HEM pan readings. To make\
    \ the \nHEM readings easy and accurate, an external tube that graduated in mm,\
    \ which was a \nfloating object with a flat upper surface, as the reference line\
    \ was installed. This tube was \nconnected to the HEM’s evaporation pan (Figure\
    \ 2). The per day water level drop rate of \nthe pan, because of evaporation,\
    \ was expected to be analogous with that of the Class A \nevaporation pan but\
    \ less because the open water area in the multisensor pan was partly \ncovered\
    \ by the floater. The drop in mm of the water level in the multisensor pan per\
    \ day, \nDday, was (Equation (1)): \nDday = Eca ∗ (Ap − Af\nAp\n) \n(1)1) \nwhere\
    \ Eca is the per day evaporation in the Class A evaporation pan in mm, Ap is the\
    \ cross-\nsectional area of the evaporation pan, and Af is that of the floater\
    \ at the water level in cm2. \n \nFigure 2. External tube connected to the HEM\
    \ prototype for use as a water evaporated (mm) meter-\ning device. \nEquation\
    \ (1) can be regarded as an empirical equation. The correct volume of evapo-\n\
    rated water in the HEM (mm) can be obtained by regressing the measured evaporation\
    \ in \nthe Class A evaporation pan against that measured in the HEM. The potential\
    \ evapotran-\nspiration (i.e., ETO, the capacity of the atmosphere to remove water\
    \ from a surface over a \nspecified region with an unlimited water supply through\
    \ plant transpiration and evapo-\nration) and water evaporation from pans are\
    \ governed by the same climatic factors. Con-\nsequently, a strong correlation\
    \ between them exists. \nHowever, as plant surfaces react differently to the prevailing\
    \ climatic conditions, it is \nnecessary to establish experimentally the relationship\
    \ between the potential evapotran-\nspiration and pan evaporation. The relationship\
    \ also depends on the size, shape, and ex-\nposure of the pan (i.e., pan coefficient\
    \ KP; ETO = KP × Eca) with a high degree of accuracy \nconcerning the wind speed\
    \ and relative humidity. If the pan calibration is to be extrapo-\nlated to other\
    \ sites, it is necessary to standardize the type of the pan and its exposure.\
    \ \nErtek [23] suggested that the proper use of the pan coefficient and its calibration\
    \ are rele-\nvant. \nFigure 2. External tube connected to the HEM prototype for\
    \ use as a water evaporated (mm)\nmetering device.\nEquation (1) can be regarded\
    \ as an empirical equation. The correct volume of evap-\norated water in the HEM\
    \ (mm) can be obtained by regressing the measured evaporation\nin the Class A\
    \ evaporation pan against that measured in the HEM. The potential evapo-\ntranspiration\
    \ (i.e., ETO, the capacity of the atmosphere to remove water from a surface\n\
    over a speciﬁed region with an unlimited water supply through plant transpiration\
    \ and\nevaporation) and water evaporation from pans are governed by the same climatic\
    \ factors.\nConsequently, a strong correlation between them exists.\nHowever,\
    \ as plant surfaces react differently to the prevailing climatic conditions, it\n\
    is necessary to establish experimentally the relationship between the potential\
    \ evapotran-\nspiration and pan evaporation. The relationship also depends on\
    \ the size, shape, and\nexposure of the pan (i.e., pan coefﬁcient KP; ETO = KP\
    \ × Eca) with a high degree of accuracy\nconcerning the wind speed and relative\
    \ humidity. If the pan calibration is to be extrapolated\nto other sites, it is\
    \ necessary to standardize the type of the pan and its exposure. Ertek [23]\n\
    suggested that the proper use of the pan coefﬁcient and its calibration are relevant.\n\
    The linear regression analysis that was developed considers the water evaporation\n\
    rate from the HEM (E HEM, mm) as a predictor and the water evaporation rate from\
    \ the\nreduced A pan evaporimeter (E reduce pan, mm) as the dependent variable\
    \ (Figure 3). For\na speciﬁc time period, the mean values of the E HEM (mm) was\
    \ shown to be a signiﬁcant\npredictor for the E reduce pan (mm), with a coefﬁcient\
    \ of determination of r2 = 0.98.\nAgriEngineering 2023, 5\n881\n \nThe linear\
    \ regression analysis that was developed considers the water evaporation \nrate\
    \ from the HEM (E HEM, mm) as a predictor and the water evaporation rate from\
    \ the \nreduced A pan evaporimeter (E reduce pan, mm) as the dependent variable\
    \ (Figure 3). For \na specific time period, the mean values of the E HEM (mm)\
    \ was shown to be a significant \npredictor for the E reduce pan (mm), with a\
    \ coefficient of determination of r2 = 0.98. \n \nFigure 3. Linear regression\
    \ modeling between evaporation (mm) measured with the HEM and the \nreduced pan.\
    \ \nAs with other automatic irrigation regulators, an original irrigation schedule\
    \ was set \nfor delivery over a month or season and for the correct water volume\
    \ for the statistically \nexpected average weather conditions by setting the irrigation\
    \ time interval (Ti) in days \nand in combination with the watering time (Wt)\
    \ and the installation’s watering capacity. \nA one-day time interval was required\
    \ for the water level in the evaporation pan to drop \n(Dday) in mm over a normal\
    \ day. The frequency screw with graduations in mm was turned \nto set the preferred\
    \ time interval in days at the indication on the screw (Is) in mm: \nIs = (Dday\
    \ ∗ Ti) − Sm \n(2)2) \nwhere Dday is the per normal day drop in the water level\
    \ in mm; Ti is the wished time \ninterval in days; Sm is the sensitivity of the\
    \ regulator in mm, which is the necessary rise in \nthe water level in mm to push\
    \ the floater up to overcome the force of the magnet holding \nthe magnetic rod\
    \ to let it drop and terminate the irrigation. Sm is usually 2 to 4 mm, de-\n\
    pending on the magnetic force and the floater’s diameter.  \nThe common timer\
    \ regulators kept the time interval between all irrigation cycles and \nwatering\
    \ duration as set in the schedule. For the hydraulic evapotranspiration multisen-\n\
    sor, the time interval was the time required for the water surface and, thus,\
    \ the floater to \nbe lowered from the high level, at which the irrigation was\
    \ terminated, to the low level, at \nwhich the magnet raised the rod to start\
    \ the irrigation, changing with the evaporation rate. \nThis time period was increased\
    \ for low evaporation and evapotranspiration rates to save \nwater, and it was\
    \ diminished at high rates to protect plantations. \n \n \nFigure 3. Linear regression\
    \ modeling between evaporation (mm) measured with the HEM and the\nreduced pan.\n\
    As with other automatic irrigation regulators, an original irrigation schedule\
    \ was set\nfor delivery over a month or season and for the correct water volume\
    \ for the statistically\nexpected average weather conditions by setting the irrigation\
    \ time interval (Ti) in days\nand in combination with the watering time (Wt) and\
    \ the installation’s watering capacity.\nA one-day time interval was required\
    \ for the water level in the evaporation pan to drop\n(Dday) in mm over a normal\
    \ day. The frequency screw with graduations in mm was turned\nto set the preferred\
    \ time interval in days at the indication on the screw (Is) in mm:\nIs = (Dday\
    \ ∗ Ti) − Sm\n(2)\nwhere Dday is the per normal day drop in the water level in\
    \ mm; Ti is the wished time\ninterval in days; Sm is the sensitivity of the regulator\
    \ in mm, which is the necessary rise in\nthe water level in mm to push the ﬂoater\
    \ up to overcome the force of the magnet holding the\nmagnetic rod to let it drop\
    \ and terminate the irrigation. Sm is usually 2 to 4 mm, depending\non the magnetic\
    \ force and the ﬂoater’s diameter.\nThe common timer regulators kept the time\
    \ interval between all irrigation cycles and\nwatering duration as set in the\
    \ schedule. For the hydraulic evapotranspiration multisensor,\nthe time interval\
    \ was the time required for the water surface and, thus, the ﬂoater to be\nlowered\
    \ from the high level, at which the irrigation was terminated, to the low level,\
    \ at\nwhich the magnet raised the rod to start the irrigation, changing with the\
    \ evaporation rate.\nThis time period was increased for low evaporation and evapotranspiration\
    \ rates to save\nwater, and it was diminished at high rates to protect plantations.\n\
    4. Setting Watering Time\nThe watering time (Wt) for the hydraulic evapotranspiration\
    \ multisensor is the length\nof time to return the amount of water required to\
    \ replace that lost from the evaporation pan\ndue to the fact of evaporation in\
    \ order to increase the level from when the irrigation started\nto that when the\
    \ irrigation is terminated. During this time, part of the water that escapes\n\
    from the outlet of the magnetic hydraulic valve with the return water is replaced,\
    \ obtained\nfrom the irrigation line or another suitable place. It is directed\
    \ through the adjustable\ndripper towards the evaporation pan. The ﬂow of the\
    \ return water is set to a low ﬂow\nAgriEngineering 2023, 5\n882\nrate (Rr) in\
    \ order for the watering time (Wt) to last as long as necessary and to provide\
    \ the\ncorrect water volume to plantations, in consideration with the irrigation\
    \ frequency (Ti) and\nwatering capacity of the network. The same parameters, in\
    \ days, for the frequency and\nwatering duration, in minutes or hours, are set\
    \ by the farmers on the automatic irrigation\ntimers, either from their own experience\
    \ or after scientiﬁc advice. The difference with\ntimers is that at every irrigation\
    \ cycle, the correct water volume for the season remains\nconstant, while in HEM\
    \ an original irrigation schedule is prepared to meet the watering\nneeds for\
    \ the statistically averaged weather, but in reality, this deviates from the normal\n\
    schedule, according to weather deviations. The effect of water evaporation rate\
    \ on the\ntime interval between consecutive irrigation cycles, or frequency was\
    \ previously indicated,\nin connection to some construction details of every particular\
    \ apparatus. The watering\nduration (Wt), in minutes, at a steady water supply\
    \ pressure remains the same for irrigation\ncycles, as set in the original irrigation\
    \ schedule. This depends on the ﬂow rate of the return\nwater (Rr), in ml min−1;\
    \ the area open to evaporation of the water level of the evaporation\npan (Ap)m,\
    \ in cm2; normal day water level drop (Dday), in cm; and frequency (Fd) in days.\n\
    These are connected in the following formula:\nRr ∗ Wt = Ap ∗ Dday ∗ Fd\n(3)\n\
    In case the return rate is set through an adjustable dripper, adjustments are\
    \ repeated\nuntil measurements, using a timer and a volumetric tube, result in\
    \ the correct value, as\ngiven by the follow formula:\nRr = (Ap ∗ Dday ∗ Fd)/Wt\n\
    (4)\n5. Adjustments in a Pilot Plot\nThe plantation on which the hydraulic evapotranspiration\
    \ multisensor prototype was\ninstalled for irrigation is an existing one with\
    \ a variety of trees scheduled to be irrigated\nover the hot season at 2-day intervals\
    \ with a watering duration of a half an hour. To\ncontinue using the same irrigation\
    \ practice as the original, an irrigation schedule was\nprepared. The decisive\
    \ factor controlling the irrigation frequency of the HEM was the\nevaporation\
    \ rate, from which the time depended on the water level in the evaporation\npan,\
    \ which decreased or increased, resulting in the termination or start of the irrigation.\n\
    This drop depends also on the number of days set between the irrigation cycles,\
    \ certain\ndimensions of the multisensor components affecting the water volume,\
    \ and the sensi-\ntivity of the equipment. The dimensions of the particular equipment:\
    \ evaporation pan,\nΦP = 232 mm; ﬂoater, ΦF = 120 mm. The sensitivity was approximately\
    \ 3 mm. Sensitivity\nwas the increase in the water level of the pan required for\
    \ the ﬂoater to push the magnet\nup, overcoming the magnetic force holding the\
    \ magnetic rod, releasing and dropping to\nclose the magnetic hydraulic valve.\
    \ This depended on the size of the magnetic component\nof the rod, strength of\
    \ the magnet, and size of the ﬂoater.\nAs the original irrigation schedule was\
    \ prepared for average weather conditions,\nthe highest average daily value of\
    \ evaporation recorded in a Class A evaporation pan in\nCyprus was 9 mm, which\
    \ was for the hottest month, and this value was used as a guide.\nHowever, it\
    \ was expected that the corresponding drop in the water level in the evaporation\n\
    pan would be less, because part of the area of the pan was covered by the ﬂoater,\
    \ and\nthe pan was not ﬁlled up to the edge. The daily drop in the water level\
    \ accepted in this\ncase was 7 mm, considering Equation (1) and several comparisons\
    \ between the water\nevaporation measured with the HEM and the potential evapotranspiration\
    \ calculated with\nthe Penman–Monteith equation based onsite climatic data, as\
    \ mentioned in [12].\nSo, for this hydraulic evapotranspiration multisensor prototype,\
    \ the frequency screw\nwas set at a graduation (upper end of the Screw) for a\
    \ two-day frequency reading 11 mm,\n14 mm, as expected for two average days in\
    \ the hot season, and less than 3 mm for\nthe sensitivity.\nAgriEngineering 2023,\
    \ 5\n883\nThe watering duration is deﬁned by the ﬂow rate at which water returns\
    \ from the\nirrigation line to the evaporation pan to replace that lost by evaporation\
    \ and to reset the\nHEM. This volume, in mL, is the product of the water surface\
    \ area, in cm2; the expected\ndaily water level drop, in cm; and the frequency,\
    \ in number of days, which in this case\nwas 423 × 0.7 × 2 = 592 mL (this volume\
    \ in mL is the product of the water surface area,\nin cm2; expected daily water\
    \ level drop, in cm; and frequency, in number of days). This\ncalculated volume\
    \ had to be replaced in 30 min, which was covered at a rate of 19.74 mL min−1.\n\
    The adjustable dripper ﬂow for the return water was set at 20 mL min−1. The ﬂow\
    \ rate\nmeasurements were carried out using a volumetric tube and a timer.\n6.\
    \ Further Application to Vegetables Crops\nTwo tables with estimated return rate\
    \ values for spring and autumn potato plantations\nin a coastal semi-arid location\
    \ of southern Cyprus (lat. 35◦1’50 N, long. 33◦46’17 E, and\naltitude 20 m, m.s.l)\
    \ are presented as examples, with the hydraulic evapotranspiration\nmultisensor\
    \ prototype having Ap = 422.5 cm2 and Af = 113 cm2, considering average Eca\n\
    values from the two nearest Class A evaporation pans in the area (Tables 1 and\
    \ 2).\nThe spring potato season is March–May, and the watering requirements is\
    \ a total of\n300 m3 1000 m−2 [6], the irrigation installations delivers 10 m3\
    \ h−1, and the average Eca for\nthe season is 4.5 mm day−1. For this case, Dday\
    \ 0.35 cm day−1 was considered (Table 1).\nTable 1. Water return rate (Rr, mL\
    \ min−1) for various watering times and frequencies.\nIrrigation Frequency\n(Days)\n\
    Irrigation Duration (Min)\n15\n30\n60\n90\n120\n1\n9.8\n4.9\n2.5\n1.6\n1.23\n\
    2\n19.7\n9.9\n4.9\n3.3\n2.46\n3\n29.5\n14.8\n7.4\n4.9\n3.7\n4\n39.4\n19.7\n9.8\n\
    6.6\n4.9\nTo achieve 300 m3 for the season at 10 m3 h−1, a 3-day frequency screw,\
    \ and a 1 h\nwatering duration, the return rate (Rr) must be adjusted to 7.4 mL\
    \ min−1. With the\nfrequency screw set at 4 day intervals and 1 h irrigation durations,\
    \ the adjustable screw\nwas set for a return rate at 9.8 mL min−1. The reduced\
    \ irrigation events at 22.5 imposed\nan increase of the installations’ capacity\
    \ to 13.3 m3 h−1. Alternatively, with 10 m3 h−1, the\ninstallations capacity of\
    \ the adjustable screw was set at a 7.5 mL min−1 return rate.\nThe autumn potato\
    \ season is from July to November, and the watering requirements\nare a total\
    \ of 502 m3 1000 m−2 [6]. The irrigation installations delivered 10 m3 h−1 and\
    \ the\naverage Eca for the season was 5.8 mm day−1. The Dday for this apparatus\
    \ was taken as\n0.43 cm day−1 (Table 2).\nTable 2. Water return rate (Rr, mL min−1)\
    \ for various watering times and frequencies.\nIrrigation Frequency\n(Days)\n\
    Irrigation Duration (Min)\n15\n30\n60\n90\n120\n1\n12\n6\n3\n2\n1.5\n2\n24\n12\n\
    6\n4\n3\n3\n36\n18\n9\n6\n4.5\n4\n48\n24\n12\n8\n6\nTo achieve 500 m3 for the\
    \ season at 10 m3 h−1, a 3-day frequency screw, and a 1 h\nwatering duration,\
    \ the return rate (Rr) had to be adjusted to 9 mL min−1. With the frequency\n\
    screw set at 4-day intervals and 1 h irrigation durations, the irrigation events\
    \ were reduced\nto 37.5, the installation’s capacity increased to 13.3 m3 h−1,\
    \ and the adjustable screw was set\nfor a return rate of 12 mL min−1. Alternatively,\
    \ with 10 m3 h−1, the installation’s capacity\nof the adjustable screw was set\
    \ at a 16 mL min−1 return rate.\nAgriEngineering 2023, 5\n884\n7. Conclusions\n\
    Irrigation agriculture consumes the largest proportion of water diverted for various\n\
    uses in semi-arid areas of the world. In response, farmers must manage their water\
    \ more\neffectively, and this requires the incorporation of irrigation scheduling\
    \ techniques into\ntheir standard management practices. Irrigation scheduling\
    \ may require farm managers to\nmake decisions as frequently as daily for the\
    \ crop production system. One of the essential\nelements of an irrigation scheduling\
    \ program is the availability of climatic data. However,\nin many locations, the\
    \ complete datasets of meteorological variables required are not\navailable. A\
    \ hydraulic evapotranspiration multisensor (HEM) prototype for the on-farm\nmonitoring\
    \ of evaporated water was developed and used in a pilot plot. Continual access\
    \ to\nthe effects of climatic parameters on water evaporated will allow a farmer\
    \ to better manage\nhis irrigation scheduling system. The HEM senses changes in\
    \ the weather constituents\n(e.g., rainfall, temperature, humidity, wind velocity,\
    \ and sunshine) in a holistic way, thus\nmore efﬁciently, and it is applicable\
    \ where drip or sprinkler irrigation is practiced, no\nmatter whether electric\
    \ power is available. This product meets the criteria for farmers’\nacceptance,\
    \ as it easy to install and maintain, and it requires minimal record keeping and\n\
    evaluation. The conﬁguration, operation, and use of this device will undoubtedly\
    \ be reﬁned\nand improved as more farmers use and depend on it.\nAuthor Contributions:\
    \ Conceptualization, D.K.; methodology, D.K.; writing—original draft prepa-\n\
    ration, G.N., D.N., D.K. and E.E.; writing—review and editing, G.N., D.N. and\
    \ E.E.; visualization,\nD.K., D.N. and G.N.; supervision, E.E. and G.N.; All authors\
    \ have read and agreed to the published\nversion of the manuscript.\nFunding:\
    \ This research received no external funding.\nData Availability Statement: Not\
    \ applicable.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nLovelli, S.; Perniola, M.; Arcieri, M.; Rivelli, R.; Di Tommaso,\
    \ T. Water use assessment in muskmelon by the Penman-Monteith\n‘one-step’ approach.\
    \ Agric. Water Manag. 2008, 95, 1153–1160. [CrossRef]\n2.\nKumar, N.; Upadhyay,\
    \ G.; Kumar, P. Comparative Performance of Multiple Linear Regression and Artiﬁcial\
    \ Neural Network\nBased Models in Estimation of Evaporation. Adv. Res. 2017, 11,\
    \ 1–11. [CrossRef]\n3.\nFernández, M.D.; Bonachela, S.; Orgaz, F.; Thompson, R.;\
    \ López, J.C.; Granados, M.R.; Gallardo, M.; Fereres, E. Measurement and\nestimation\
    \ of plastic greenhouse reference evapotranspiration in a Mediterranean climate.\
    \ Irrig. Sci. 2010, 28, 497–509. [CrossRef]\n4.\nAl-Ghobari, H.M.; Mohammad, F.S.;\
    \ El Marazky, M.S.A. Evaluating two irrigation controllers under subsurface drip\
    \ irrigated\ntomato crop. Span. J. Agric. Res. 2016, 14, 4. [CrossRef]\n5.\nJha,\
    \ K.; Doshi, A.; Patel, P.; Shah, M. A comprehensive review on automation in agriculture\
    \ using artiﬁcial intelligence. Artif.\nIntell. Agric. 2019, 2, 1–12. [CrossRef]\n\
    6.\nZamora-Izquierdo, M.A.; Santa, J.; Martínez, J.A.; Martínez, V.; Skarmeta,\
    \ A.F. Smart Farming IoT Platform Based on Edge and\nCloud Computing. Biosyst.\
    \ Eng. 2019, 177, 4–17. [CrossRef]\n7.\nBen Ali, R.; Bouadila, S.; Mami, A. Development\
    \ of a Fuzzy Logic Controller applied to an agricultural greenhouse experimentally\n\
    validated. Appl. Therm. Eng. 2018, 141, 798–810. [CrossRef]\n8.\nPérez-Castro,\
    \ A.; Sánchez-Molina, J.A.; Castilla, M.; Sánchez-Moreno, J.; Moreno-Úbedac, J.C.;\
    \ Magán, J.J. FertigUAL: A fertigation\nmanagement app for greenhouse vegetable\
    \ crops. Agric. Water Manag. 2017, 183, 186–193. [CrossRef]\n9.\nLi, X.; Li, Z.;\
    \ Xie, D.; Wang, M.; Zhou, G.; Chen, L. Design of Farm Irrigation Control System\
    \ Based on the Composite Controller.\nActuators 2023, 12, 81. [CrossRef]\n10.\n\
    Stanhill, G. Is the class A evaporation pan still the most practical and accurate\
    \ meteorological method for determining irrigation\nwater requirements? Agric.\
    \ For. Meteorol. 2002, 112, 233–236. [CrossRef]\n11.\nSmith, R.; Cahn, M.; Hartz,\
    \ T.; Love, P.; Farrara, B. Nitrogen Dynamics of Cole Crop Production: Implications\
    \ for Fertility\nManagement and Environmental Protection. HortScience 2016, 51,\
    \ 1586–1591. [CrossRef]\n12.\nKumar, N.; Upadhyay, G.; Choudhary, S.; Patel, B.;\
    \ Chhokar, R.S.; Gill, S.C. Resource conserving mechanization technologies\nfor\
    \ dryland agriculture. In Enhancing Resilience of Dryland Agriculture Under Changing\
    \ Climate: Interdisciplinary and Convergence\nApproaches; Springer Nature Singapore:\
    \ Singapore, 2023; pp. 657–688.\n13.\nNikolaou, G.; Neocleous, D.; Christou, A.;\
    \ Kitta, E.; Katsoulas, N. Implementing Sustainable Irrigation in Water-Scarce\
    \ Regions\nunder the Impact of Climate Change. Agronomy 2020, 10, 1120. [CrossRef]\n\
    AgriEngineering 2023, 5\n885\n14.\nZachariadis, T. Springer Briefs in Environmental\
    \ Science. In Climate Change in Cyprus, Review ofthe Impacts and Outline ofan\n\
    Adaptation Strategy; Springer International Publishing: Cham, Switzerland, 2016.\n\
    15.\nKypris, D. Cyclic Climatic Changes in Cyprus as Evidenced from Historic Documents\
    \ and One Century’s Rainfall Records. In\nDiachronic Climatic Impacts on Water\
    \ Resources, with Emphasis on Mediterranean Region; Angelakis, A.N., Issar, A.S.,\
    \ Eds.; NATO ASI\nSeries 1; Global Environmental Change; Volume 36, pp. 111–128.\
    \ Available online: https://link.springer.com/chapter/10.1007/\n978-3-642-61084-4_6\
    \ (accessed on 20 March 2023).\n16.\nRameshwaran, P.; Tepe, A.; Yazar, A.; Ragab,\
    \ R. Effects of drip-irrigation regimes with saline water on pepper productivity\
    \ and\nsoil salinity under greenhouse conditions. Sci. Hortic. 2015, 199, 114–123.\
    \ [CrossRef]\n17.\nNikolaou, G.; Neocleous, D.; Katsoulas, N.; Kittas, C. Irrigation\
    \ of greenhouse crops. Horticulturae 2019, 5, 7. [CrossRef]\n18.\nYıldırım, M.\
    \ Drip irrigation automation with a water level sensing system in a greenhouse.\
    \ J. Anim. Plant Sci. 2016, 26, 131–138.\n19.\nThomson, S.J.; Fisher, D.K. Calibration\
    \ and use of the UGA EASY evaporation pan for low frequency sprinkler irrigation\
    \ of cotton\nin a clay soil. J. Cotton Sci. 2006, 10, 210–223.\n20.\nSchiattone,\
    \ M.I.; Viggiani, R.; Di Venereb, D.; Sergiob, L.; Cantore, V.; Todorovic, M.;\
    \ Perniola, M.; Candido, V. Impact of irrigation\nregime and nitrogen rate on\
    \ yield, quality and water use efﬁciency of wild rocket under greenhouse conditions.\
    \ Sci. Hortic. 2018,\n229, 182–192. [CrossRef]\n21.\nKypris, D.; Nikolaou, G.;\
    \ Evangellides, E.; Neocleous, D. A Hydraulic Evapotranspiration Multisensor.\
    \ Agriengineering 2022,\n4, 1164–1170. [CrossRef]\n22.\nKypris, D.C. Automatic\
    \ Irrigation Regulator Controlled by Water Evaporation. Patent No 4,967,789, 6\
    \ November 1990.\n23.\nErtek, A. Importance of pan evaporation for irrigation\
    \ scheduling and proper use of crop-pan coefﬁcient (Kcp), crop coefﬁcient\n(Kc)\
    \ and pan coefﬁcient (Kp). Afr. J. Agric. Res. 2011, 6, 6706–6718. [CrossRef]\n\
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all\
    \ publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: '>'
  journal: AgriEngineering
  limitations: '>'
  pdf_link: https://www.mdpi.com/2624-7402/5/2/54/pdf?version=1683789820
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Installation and Adjustment of a Hydraulic Evapotranspiration Multisensor
    Prototype
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
